{
    "title": "Return to Krell",
    "pages": [
        "CHAPTER 1: AN ALIEN TONGUE \n\nLena leaned back in her office chair, the back support creaking as she rubbed her eyes with the heels of her hands. It was getting late, she had planned to go back to her apartment hours ago but this last translation almost seemed to be purposefully evading her. Perhaps it would be a better idea to call it a day and take another crack at it tomorrow, a fresh perspective might help her solve the problem. \n\nShe rested her elbows on her desk and cradled her face in her hands as she pored over the data readout, reaching forward occasionally to swipe at the touch screen as her tired eyes scanned the display. She hit the test icon, and the computer's speakers loosed a low rumbling sound, half way between the growl of a lion and the roar of an elephant. It was loud, she could feel the vibrations in her bones, but it wasn't...right. \n\nSomething massive stirred across her cramped office in the yellow light of her table lamp, a monstrous shadow raising its long snout to peer at her with its amber, reptilian eyes. It opened its jaws wide, its lipless mouth lined with rows of protruding teeth. \n\nSleethe yawned conspicuously, the alien blinking at her with his nictating membranes. \n\n\"I know you're tired,\" Lena complained, \"but just hang on a little longer. I swear I've almost got this.\" \n\nThe alien loosed a series of huffing sounds, settling back into his curled up position on the floor of her office like a giant dog. He was fourteen feet long from nose to tail, weighing in at close to a ton. He was so large that he occupied almost the entirety of Lena's modest workspace with his bulk. He was a Krell, hailing from the planet of the same name, an amphibious reptile of enormous scale. Standing upright he was eight or nine feet tall, even with his hunched posture, and he had enough strength to flip a car like it was a toy. For all intents and purposes he looked like a giant alligator, the spinach-colored, armored scales that lined his back tapering into beige on his fatty underbelly. \n\nDespite their fearsome appearance, Krell were inhumanly friendly and easygoing. The slow, plodding aliens wouldn't hurt so much as a fly. At least until their friends were put in harm's way, and then they would go into an anabolic frenzy until the threat was eliminated, expending an enormous amount of energy. That, coupled with a leathery hide that made them almost impervious to damage, made them ideal auxiliaries for the UNN. \n\nSleethe was a former linebreaker, Krell units tasked with acting as living tanks to defend their comrades from danger, but now he was her research partner. In more ways that one... \n\nLena was not accustomed to male attention. While her peers were off chasing boys, she had concerned herself with academics, rapidly becoming the foremost xenolinguist in her field. Once she had found the time to court however, she had quickly discovered that she lacked the social skills of her prettier, more experienced friends. \n\nShe didn't think of herself as unattractive, but she was meek and unassuming, a wallflower by every definition. She could hold a conversation in both Elysian and Polar, but she had no idea how to do her hair, and she had no sense of fashion. She had published dozens of papers on the subject of linguistics, but when it came to approaching boys, she found that she couldn't utter so much as a 'hello'. It was a cruel irony, and so she had dedicated herself to her work, foregoing male company in favor of her studies. There had been a boyfriend or two, but nothing lasted very long. Her work always took priority over her relationships. \n\nThat was until she had met Sleethe. A few months prior she had been tasked with solving a Krell-related problem on the Pinwheel, the giant military space station upon which she now lived and worked. The all-male population of aliens had begun to inexplicably reproduce, their exploding numbers threatening the safety of the station and its inhabitants. Along with several colleagues from various fields, she had discovered that the Krell could spontaneously change their sex when there was a severe gender imbalance, leading some of them to transition into females and begin breeding. \n\nThe aliens lacked the necessary vocal apparatus to reproduce human speech, and their own language was an enigma. Much of it was only intelligible underwater, and some of the deep, rumbling tones that they used to communicate were completely below the range of human hearing. Despite that handicap, they always seemed to end up where they were needed, following orders and completing their assigned tasks despite being unable to speak. It was just another one of the many mysteries associated with the enigmatic species. \n\nDuring her attempts to parse their odd language, Lena had met Sleethe, and the two had hit it off. For all her linguistic skills, the two hadn't needed to utter a single word during that first intense, passionate encounter. She still got goosebumps when she thought about it. She remembered how his low, rumbling mating call had reverberated through her body like the massage of an invisible hand, how he had lifted her off her feet as if she was no more than a doll and had thrust her against the wall. He had been so frighteningly powerful, yet so gentle and considerate, pushing his inhumanly long and dexterous tongue beneath her skirt and- \n\nLena shook her head, dispelling the thought as she realized that her heart was racing, returning her attention to the data readout on the monitor in front of her. Now was not the time to be getting riled up, she had work to do. \n\nFor the last few months of her life she had been completely engrossed with trying to create translation software that could accurately interpret what a Krell was saying, in order to reproduce it in English and vice versa. She had encountered innumerable hurdles however. Not only did Krell communicate in completely different frequencies to humans, but their very thought processes were alien and strange. They often came off as slow and simple, leading some people to write them off as being unintelligent, but that wasn't the case at all. The Krell almost seemed to experience time in a completely unique way, their lifespans potentially indefinite as far as xenobiologists could gather. \n\nThe aliens simply kept living and growing until some external factor killed them, and being that they were Krell, there wasn't much that could do that. They thought in time scales that humans could scarcely comprehend, and so there was no point of reference from which to begin deconstructing their language. It was unlike anything that she had studied before, truly alien. \n\nLena had made some progress however, assembling a small dictionary of basic verbs and phrases, but the issue now was getting the computer to reproduce the sounds in the correct frequencies. Because much of their communication happened below the range of human hearing, she couldn't ascertain if the resulting synthesized speech sounded right, which was where Sleethe came in. \n\n\"Tell me if this one sounds right,\" she said, leaning around her monitor to watch the giant alien as he lazily wound his oar-like tail across the floor. It was almost half the length of his body, packed with fat and enough muscle to propel him through the water like a torpedo. She tapped the test button, and the speakers emitted a sound. She couldn't hear this one, but she could feel it in a way, the low tone making the desk vibrate beneath her hands. \n\nSleethe raised his head again, listening intently, Lena watching hopefully as his reptilian pupils dilated with interest. He grumbled affirmatively, nodding his massive head, the loose skin beneath his jaw flapping. \n\n\"Yes!\" Lena exclaimed, making a note of the frequency. \"I knew that it had to be somewhere between twenty eight and thirty two hertz. Not that you guys only communicate at one frequency, that would make things too easy for me...but it's a start.\" \n\nSleethe returned his head to the floor, closing his eyes and exhaling loudly. He was a cold blooded creature, his metabolism about as slow as one could get without being dead. His favorite activities included lounging on any available surface, lounging in any available body of water, and lounging beneath any heat source that he could fit under. Pretty much lounging in general. In the months that she had known him, she had never once seen him eat. It had alarmed her at first, but if he was anything like the large reptiles back on Earth, he might only need to eat a meal once a year. \n\nLena heard a click as her office door opened, Sleethe turning his head to get a look as one of her colleagues entered the room. \n\n\"Oh, Miss Webber!\" The woman exclaimed, seeming surprised to see her. She was clad in a similar white lab coat to the one that Lena was wearing, holding a tablet computer in her hands. \"I didn't realize that you were still working. It's gone midnight, I was going to close up.\" \n\n\"I've made a breakthrough on the Krell translation software,\" Lena replied, \"I guess the time got away from me. You go on home Helen, I'll lock up when I'm done.\" \n\nHer colleague nodded, glancing at Sleethe before closing the door behind her. \n\n\"Looks like everyone has punched out,\" Lena mused, her reptilian companion peering at her with his yellow eyes. She was never quite sure if he understood her in the way that another human would, but he always seemed to pay attention to what she was saying. They were able to convey so much through body language that anything more was hardly necessary. \n\nShe was pretty tired, and she was about ready to finish her work and head back to her apartment, but the prospect of being alone with the alien filled her with a kind of mischievous excitement. Although Sleethe frequently visited her apartment, it was built with humans in mind, and so it was not the most comfortable or the most convenient place for him to live. He usually returned to the heat lamps and the shallow pools of the Krell barracks when their work was over, to sleep in a pile with his own kind. \n\nThe Pinwheel was the largest space station and Naval dock in UNN territory, but it was still crowded with personnel and tourists, which meant that getting some alone time with the sixteen foot long alien was often prohibitively difficult. She saw her chance, and she was going to take it. \n\n\"Sleethe,\" she whispered suggestively, the alien opening one eye to gaze at her. \"Want to have some...fun?\" \n\nThe Krell huffed, blowing air out of his snout as he rolled over onto his back, exposing his pale belly and stretching sleepily. \n\n\"Come on, don't play coy.\" \n\nHe deliberated for a moment, the gears in his head turning slowly, and then he pushed himself back over onto his segmented stomach and slithered closer to her. He was too lazy to stand up, and the room was small enough that he could easily reach her by shuffling along the floor. \n\nThe cumbersome Krell pushed his snout under her desk, his head alone almost as large as her five foot, four inch frame. She brushed her dirty-blonde hair out of her face and adjusted her glasses, leaning back and looking down at him as his nostrils blew warm air up her black pencil skirt. \n\nShe reached down a hand and ran her slim fingers along his leathery snout, his dull green scales tough and thick, yet oddly yielding. She slid her hand under his chin and felt the softer scales of his underbelly, far smoother and more pleasing to the touch, the layer of fat beneath his skin giving him a chubby feel. He was like a walking slab of hard muscle and armored hide, with broad shoulders and massive arms, but his vulnerable underside was sensitive and he enjoyed being stroked. Lena liked to curl up in his arms and push her face into his chest on the rare occasion that they were able to sleep together, probing with her fingers in search of the rock hard muscle that lay beneath. \n\nAs large and as heavy as he was, he was a gentle lover, always conscious of Lena's human limitations. He opened his jaws as if he was going to swallow her up, like an alligator basking on a shore, his sharp teeth jutting out at odd angles. He lacked lips, and so kissing was a clumsy affair, but he made up for it with a tongue of monumental proportions. \n\nLena watched as the long, azure organ snaked out of his mouth, a clear foot of slimy muscle. The mucous membranes in humans were pink, but in Krell they were varying shades of blue due to the hemocyanin that their species used to transport oxygen to their tissues. Cut a Krell, and it would bleed blue instead of red. \n\nHer cheeks reddened as his agile organ brushed her thigh through her pantyhose, leaving a smear of viscous saliva. Sleethe knew exactly what she wanted, he was an intuitive creature. \n\nShe waited for a moment, listening for any lingering employees, but it seemed like the coast was clear. Her heart was thudding in her chest, butterflies fluttering in her belly as she anticipated the touch of his warm tongue, Sleethe's nose disappearing from view as he pushed his snout beneath her long skirt. \n\nThe hanging flesh beneath his throat inflated, and he loosed a low, reverberating roar that shook her to the core. The deep baritone sounded like the rumble of some ancient dinosaur, and while it was undeniably intimidating, she knew it to be a mating call. The sound seemed to penetrate down to her bones, making her very flesh vibrate as she sat in her chair. It was like sitting atop a subwoofer, the oscillations tickling her senses, teasing her in ways that transcended touch. It felt as if a thousand tiny fingers were caressing her from within, or like someone had thrust an invisible vibrator inside her without her knowledge and had cranked it up to the highest setting. \n\nIt was this resonating mating call that had been the catalyst of their relationship. While clandestinely observing a Krell breeding frenzy for research purposes, she had been hit with wave after wave of their vibrating solicitations, leaving her wanting and confused. When Sleethe had stumbled upon her, frustrated after having lost his recent bid to mate, the two had found a solution to their shared problem. It was as if he could smell the arousal on her, sense her tension, and despite knowing the Krell words for 'no' and 'stop' she had let him take her. What followed had been the most intense experience of her life, and what's more, she had discovered that the burly alien was a model lover. \n\nHe hit her with another call, and she sank into her seat, her eyelids fluttering as his intense resonance made her legs tremble. She suddenly felt warm, feverish, her panties moistening as his nose brushed her mound. The Krell licked her inner thighs diligently, as if preparing her for what was to come, ropes of his drool hanging from the mesh of her undergarments with the consistency of jelly. \n\n\"D-Don't make too much of a mess,\" she stammered, beside herself with seething arousal as he rumbled and lapped at her belly with his warm tongue. \"I don't want to have to go find the mop again, I think the janitor noticed that someone had used it the last time we did this at work...\" \n\nHe didn't respond, either ignoring her or not understanding, but she was too far gone to care. She slipped her pantyhose down around her knees, eager to feel his slick flesh on her naked skin, and she pulled her underwear aside to grant him access to her dripping loins. The fabric was glued to her swollen lips, sodden with a combination of her juices and his thick saliva. The mere act of exposing herself sent a pleasant tremor rolling through her petite body, and she spread her lips with her fingers in invitation to him. \n\nSleethe wasted no time, his purple tongue gliding between her labia and parting them wide, lapping slowly at her vulva. He used the tapered tip to explore every fold and crease of her sex, intimately familiar with his mammalian lover. Lena shivered, her trembling hands gripping the edge of the desk as his warm organ scoured her sensitive anatomy, his gooey saliva making his contact wonderfully slippery. She couldn't see what he was doing under her skirt, she could only feel it, heightening her senses as he teased her. \n\nThe reptile had scarcely touched her, and yet she was already in a state of euphoria, lust clouding her brain like a fog. She considered throwing caution to the wind and leaning over the desk, letting the alien mount her with his brutish organ and flood her with his copious, milky emission. It was too much of a risk however, he came far too much, she'd never get it all out of the carpet. \n\nSleethe bumped the desk with his head as he lapped beneath her skirt, raising it off the ground for a moment, and Lena had to scramble to prevent her computer monitor from toppling to the floor. She straightened it, then convulsed as his roving tongue found her clitoris, her spine arching as she covered her mouth with her hand to suppress a pained gasp. They were alone, but it wouldn't do to draw too much attention. The last thing she needed was some passer by on the torus thinking that someone was being murdered and calling the MPs to investigate. \n\n'I'm sorry for the disturbance officer, everything is fine, I just have a foot of Krell tongue inside me.' \n\nShe laughed at the thought, the waves of pleasure making her giddy and foolish. \n\nThe slick surface of his long tongue grazed her sensitive clitoris, the intense sensation making white stars dance before her eyes. She felt like she was floating on a cloud, Sleethe's services unreserved and wanton. He seemed to enjoy her taste, lapping ardently, unconcerned with the mess that he was making. Her heart skipped a beat as the pointed tip located her opening, so long and flexible that he could press his wet flesh against the length of her vulva even as he prepared to penetrate her. His organ was as long and as thick as her forearm, but as soft and as flexible as that of a human, a rope of slimy muscle that could coil and wind in order to touch her in places that nobody else could ever hope to reach. \n\nThe anticipation was killing her, Sleethe pausing to lap wetly at her inner thighs, intentionally keeping her on edge as she waited impatiently. God, it felt like someone was dragging wet silk across her skin, it was so hot and slimy. She wanted his length inside her, she ached for it, she felt a tangible emptiness that only he could fill. \n\nAs if sensing her thoughts, he pressed his tongue against her twitching entrance, and there was a brief moment of resistance before he pushed inside her. Lena took in a sharp breath, biting her lip as his tongue wormed its way deeper into her passage, so thick and long that it seemed to press against everywhere at once. She realized that her thighs were shaking, her excitement wetting the chair beneath her. She was so overwhelmed by the intensity of the sensations that she had to press her glasses into the bridge of her nose with one finger to save them from falling off as she writhed. \n\nA human tongue could reach perhaps an inch inside a woman, but Sleethe could reach all the way to her cervix. Not only that, but he could pile his length inside her, folding his organ in on itself like a slice of ham in a sub sandwich and filling her to capacity. \n\nHe was so slippery and hot, lewd thoughts dancing through Lena's head as she considered that his thick, bubbling saliva was mingling with her juices. She was full of her lover's drool, and strings of it were hanging from her mound and thighs. His organ almost seemed to have a life of its own, wriggling and worming as it pushed deeper, its fleshy surface sliding against her silken walls and searing her nerves with bursts of nigh unbearable pleasure. \n\nShe felt as if her body below the waist was melting like slagged metal, her legs going numb as Sleethe's tongue roiled in her depths. He found a slow, heavy pace, the bottom half of his tongue buried in her loins and the top half gliding between her labia and dragging against her glistening vulva. He was stimulating her everywhere at once, and she leaned forward to rest atop her desk, burying her red face in her crossed arms as she basked in her euphoria. ",
        "\"You're so...good...at this...\" Lena gasped, her breath coming in ragged bursts. He had always been God's gift to women when it came to giving head simply due to his wonderful tongue, but as they had learned more about one another and they had spent more time together, his knowledge of her alien anatomy had increased. Now he seemed to know exactly where to lick, precisely how much pressure to apply, and just how deep he should probe. He understood the purpose of her clitoris, knew how to find her G-spot. He could turn her into a delirious wreck without needing any guidance at all, all she had to do was lie back and let him have his sordid way with her. \n\nLena was already getting close, lurid thoughts swirling in her head as she felt Sleethe's rough snout bump against her belly. She liked not being able to see what he was doing to her down there, her imagination running wild as she envisioned his long, blue appendage pressing against her pink flesh. \n\nHe never stopped moving his tongue, he was insatiable, goaded on by the reflexive rolling of her hips. Her body was trying to fuck him, electrical pleasure coursing up her spine in tingling waves as his organ twisted and flexed. She could feel every subtle shift of his slimy tongue, her walls contracting around it desperately, the muscles in her pelvis aching as she worked them over. \n\nMaybe she had been spending too much time at the office, she needed to do some exercise, maybe some kegels. She realized that she was drooling on the sleeve of her lab coat, wiping it away before reeling from another punishing lick. \n\n\"Oh God, you're doing the thing,\" she stammered. Excitement washed over her as she felt his tongue change position, pushing hard against her upper wall. He was probing for her sweet spot, apparently bored with painting her insides with his saliva, now intending to finish her off hard and fast. That, or he had understood that they didn't have all night. It was sometimes hard to tell with Sleethe. \n\nShe loosed an embarrassing whine as he found what he was looking for, digging into her most sensitive spot with his tongue, a wracking throb of pleasure reducing her to a shivering mess. She felt him grip her ankles with his many-fingered hands, his rough digits closing around her limbs to keep her from bucking free or falling from her chair in the throes of her ecstasy. \n\nEven as he began to fuck her with his tongue, he kept up his ardent licking. The tip of his slippery appendage teased her in places that no man should have been able to reach, its length grazing her vulva from the outside and brushing against her engorged clitoris, his teeth pressing against her belly and thighs as he practically swallowed her lower body in order to get deeper. \n\nLena cradled her head in her hands, her vision blurring with every pulse of pleasure, her hair now messy and damp with sweat. She could hear her heart hammering in her ears, her swollen nipples brushing uncomfortably against the lining of her bra as she rocked back and forth. \n\nShe could feel her impending orgasm welling deep inside her, promising to be so intense that she was almost afraid of it. \n\n\"If you stop, I'm going to have you made into a pair of boots,\" she mumbled. He blew warm air up her blouse as he huffed, a shiver rolling down her spine as he gave her an especially cruel lick. \n\n\"Nearly there,\" Lena gasped, \"nearly-\" \n\nShe opened her mouth in a silent wail, her eyes screwing shut as his relentless teasing pushed her over the edge. She wheezed like she had just been punched in the gut, doubling over as her climax tore through her, her muscles seizing and her thighs clamping around his head like a vice. Rather than slowing, the alien redoubled his efforts, Lena clawing at her desk as her conscious mind took a back seat to her primal lust. \n\nAs soon as the first wave of her orgasm began to fade, a second made her its plaything, the beleaguered woman little more than a puppet with its strings cut as she lay on the desk and trembled. Sleethe could withstand a bullet to the chest, and so there was no danger of hurting him as she pressed him between her legs, his tough scales cool and rough against her quivering thighs. \n\nEven as she was dazed by another climax, he kept up his lapping, the violent clenching of her insides and her flowing juices doing little to dissuade him. She was hypersensitive, every glance of his smooth tongue against her inner walls filling her with a kind of desperate need. She could hear him licking beneath the table, it sounded like a wet towel being dragged across the floor. His saliva, or maybe it was her come, rained from between her legs and dripped from her office chair to wet the carpet beneath. She was too lost in her pleasure to pay any mind to the mess that they were making. \n\nAll she was able to do was grip the desk and hold on for dear life as wave after wave of pleasure tore at her. She felt as if her brain fluid had been replaced with champagne, fizzing and popping as sparks danced in her mind. Gradually the rolling of her hips began to abate, Sleethe's pace taking on a slower and more placating quality. He eased out one last punishing tremor, Lena's nails digging into her palms as she balled her fists, her tension ebbing as she began to come down from her high. \n\nShe settled into her afterglow like a warm blanket, Sleethe sensing that she was done and withdrawing his long organ. He provoked another aftershock as his slimy flesh slid against her tender insides, Lena shivering contentedly as she watched him emerge from beneath her skirt. His toothy snout was linked to her loins by a sagging web of clear fluid, which he cleaned away with his tongue, licking his chops as he retreated beneath the table. \n\n\"We made a mess,\" she grumbled, swaying drunkenly as she propped herself up on her elbows. \"You're a messy eater, Sleethe.\" \n\nHe seemed to have lost interest, pushing himself along the floor on his belly and returning to his usual place by the far wall. Lena found that her legs were too unsteady to support her, so she removed her glasses and slid down out of her seat, crawling towards him on her hands and knees. She struggled out of her pantyhose as she went, kicking off her pumps and discarding the sodden garment. The giant reptile opened an eye to peer at her, rumbling an invitation and lifting one of his muscular arms. She rolled under it and pressed up against his soft underbelly, hearing him grumble appreciatively as she scratched his stomach with her nails. \n\nHis arm closed around her, trapping her in a bear hug, his bicep alone probably weighing nearly as much as she did as it protruded from beneath his scaly hide. She felt another pang of arousal as she tested its firmness with her fingers, craning her neck to peer up at her scaly lover. Sometimes Lena couldn't believe that this was real. She feared that she might wake up one day and realize that it had all been a lurid dream, the content of which she wouldn't dare reveal to her friends. \n\nIt was entirely real however, Lena had bagged herself an alien warrior as a boyfriend. She still didn't really understand why he had taken such a liking to her, and she didn't have the vocabulary to ask, but she wasn't about to question her stroke of good fortune. \n\nShe pushed her face into his chest, feeling the firm slabs of his pectoral muscles beneath the layer of pudgy fat, and closed her eyes. She loved his scent, he smelled like wet leather. Maybe she'd take a quick post-coital nap, but she'd have to clean up the mess that they had made before her colleagues arrived for work tomorrow. Perhaps she would stay overnight and pretend that she had just been working overtime. She could wash up in the bathroom, and she usually carried a change of underwear for just such an occasion. Nobody would notice that her flesh-colored pantyhose were missing. \n\nBesides, maybe they'd go a second round somewhere that she could more easily clean up after herself. One of the labs had a tile floor and Sleethe could do her on top of one of the tables... \n\nShe felt like a horny teenager sometimes, or at least what she thought a horny teenager must act like, as her formative years had been consumed by study and schoolwork. She nuzzled Sleethe's chest, the smooth scales on his underside so imperceptibly small that it felt as smooth as skin against her cheek, and he rumbled happily. \n\nSleep now, worry later. \n\nCHAPTER 2: ACADEMIC PURSUITS \n\nLena taped the wireless pickup to her throat, then brought up her wrist-mounted computer, a military model that she had recently gotten her hands on. Having the station's security chief owe her a favor had really paid off. She calibrated it, punching in commands on the touch screen, and the computer registered the microphone. \n\n\"Testing, testing, one two three...\" \n\nThe graph charted her voice in peaks and valleys, it was working correctly. \n\n\"Ok Sleethe, are you ready?\" \n\nThe Krell lifted his head lazily, blinking at her as he waited. Lena cleared her throat and spoke clearly, her eyes glued to the wrist display as the software that she had written struggled to translate. \n\n\"Hello, I am a human, my name is Lena.\" \n\nThe speaker on the computer loosed a series of low rumbling sounds and high pitches hisses, and her heart sank. If she could hear all of the tones, then there must be some kind of problem with the calibration. She looked to Sleethe, and he shook his massive head, the hanging skin beneath his jaw flapping back and forth. \n\n\"Damn it. Maybe the speaker isn't powerful enough to transmit at the right frequency. Am I going to have to carry a subwoofer around in a backpack to make this setup work? Maybe I can boost the power output to the embedded speaker, but that's going to drain the battery like nobody's business...\" \n\nShe gave Sleethe a sideways glance. \n\n\"Think the Navy will get mad if I write some custom firmware for this thing?\" \n\nHer reptilian companion returned his head to the floor of her office, closing his yellow eyes and exhaling loudly. \n\n\"Your input is appreciated,\" she said sarcastically. She returned to her seat at her desk and removed the computer from her forearm, hooking it up to her terminal with a cable and resuming work on her program. \n\nJust as she was starting to become engrossed, her office door opened, and she was distracted as Helen walked into the room. \n\n\"I'm sorry to disturb you Miss Webber, but there's a vidphone call coming through and your terminal is set to silent mode.\" \n\n\"Oh, sorry Helen. I'm working with audio equipment and I didn't want anything to throw off my measurements. I'll be right there.\" \n\nThe secretary nodded and retreated back the way she had come, closing the door behind her. \n\n\"Must be something important if Helen came to fetch me,\" she mused, rising to her feet and straightening her lab coat. \"Wait here Sleethe, I'll be back soon.\" \n\nHe opened one eye to watch her as she left the office, more concerned with getting his beauty sleep than with the affairs of the scurrying humans. \n\nLena made her way down the corridor towards the front desk, passing by many doors that resembled her own. Some of these offices were occupied, others were not. The research center was fairly small by most standards, but so were all of the accommodations on the Pinwheel. It was built into the station's hull, the facade that faced out towards the station's donut-shaped torus sculpted to resemble a real brick and mortar building, all to sell the illusion that the station's occupants were living on a terrestrial planet and not a giant wheel that was spinning through space. \n\nLena found that it helped to think of things in terms of spaceships, rather than traditional buildings. The research center would make for a tiny building, but it was expansive and lavish by Navy standards. She had traveled on jump carriers before, and the personnel were crammed together like sardines, sleeping in bunks that were three men tall. She might complain about the size of her office, but at least on the Pinwheel she could stretch her legs and feel a breeze in her hair, even if it was artificial. \n\nShe arrived at the front desk where Helen was waiting for her, and the secretary pointed to a video phone that was mounted on a nearby wall. Lena walked over to it, seeing that a man was waiting for her on the monitor. She immediately recognized his bushy, salt and pepper beard, along with his signature tweed jacket. It was Professor Barnes of the United Academy of Sciences, an alliance of research institutes and colleges that spanned several human colonies. She had studied under him during her years at Cambridge University, and she had worked on xenolinguistics for his research division during her internship on Franklin. He was her mentor and benefactor, and she suddenly felt rather embarrassed for having made the old man wait. \n\n\"Professor Barnes!\" She exclaimed, \"what a pleasant surprise! To what do I owe the pleasure?\" \n\n\"Oh, there you are Miss Webber,\" he grumbled. He had a thick London accent, and his appreciation of scotch had reddened his cheeks over the years. At times he looked like an especially portly and unkempt Santa Claus, perpetually out of breath. Barnes straightened his round spectacles as he leaned closer to the camera to get a better look at her. \n\n\"Damn this infernal...there we are. You're looking as ravishing as ever, my dear girl. Might I inquire as to how work on your Krell translator is proceeding?\" \n\n\"Very well Professor,\" she replied, \"I've made some progress recently. I'm encountering some hardware problems, but I hope to find a solution soon.\" \n\n\"Very good, very good,\" he mumbled. \"There have been some very exciting developments as of late, Miss Webber. Your UNN sponsored visit to the Krell homeworld last year made waves in the scientific community. The Brokers had never allowed anyone to visit the planet before, as secretive as they tend to be. They seem to care deeply about the Krell, guarding them against even entirely benign research ventures, which I'm sure that you can imagine has frustrated our efforts to study the 61 Cygni system and the Krell species to no end.\" \n\nThe Brokers were the enigmatic founders of the Coalition, the multi-species alliance to which the UNN belonged. Due to the crisis on the Pinwheel, they had allowed a small research team to land on the surface of the Krell homeworld in an attempt to find a solution to the population problem. The miserly aliens seemed to have a deep and mysterious relationship with the Krell, she remembered how the primitive planet had been ringed with Broker orbital defenses and ships. \n\nHumans were the third species to join the Coalition, the Brokers and Krell both preceding them, and the aliens seemed almost symbiotic at times. It was Broker vessels that dropped off Krell auxiliaries on the station, and Brokers who defended their planet, the Krell themselves lacking the necessary technology and seeming to live in a tribal state. \n\nShe remembered her time on Krell well, the foggy swamps and the green skies, the mud flats and the stench of rotting vegetation. The planet had been rather awful, Webber was not accustomed to fieldwork, but the fleeting glimpses into the Krell culture and their strange way of life had stuck with her. It was fascinating, and not even being able to ask Sleethe to explain the details to her was a source of endless academic frustration. \n\n\"Why do you bring it up, Professor?\" \n\n\"Well, the UAS had been going back and forth with the Brokers for months, trying to secure limited access to the planet so that we might continue the research that you and your colleagues started. It looks as if we might finally have made a deal that suits them, however their terms are very strict. In exchange for some rather...exorbitant fees, they will allow a single human to visit a location of their choosing. This person may bring whatever scientific equipment that they require, on the condition that do not carry a weapon, and that they do their utmost to avoid disturbing the local Krell in their natural habitat. The scientist in question may stay for as long as they need, but they may only make one visit. Once they leave the planet they will not be allowed to return again, at least until a new deal is brokered.\" \n\nLena was smart enough to know where Barnes was going with this, and a mixture of excitement and apprehension overcame her. \n\n\"You want...me to go? Why? Surely there are explorers and field agents who are far more qualified than I am?\" \n\n\"There are indeed, but I believe that you're the woman for the job, my dear. My colleagues did not agree unfortunately, but their efforts to find someone else have all been rather fruitless, and so they finally acquiesced and let me place this call. They first contacted one Luc Dubois, a Frenchman who fancies himself an adventurer. I believe you're already acquainted with the man.\" \n\nLena rolled her eyes, remembering the self-styled explorer. He had accompanied the research team to the surface of the planet during their last visit. Describing him as 'kind of an asshole' would be the understatement of the century. \n\n\"Needless to say, he was not interested in the venture,\" Barnes continued. \"In fact he seemed immediately hostile to the idea. Perhaps the last expedition didn't agree with him.\" \n\nLena suppressed a smirk, remembering the man's encounter with an especially aggressive female Krell. He was probably still nursing his wounded pride. \n\n\"Next we tried to contact Davi Sousa, but it appears that he's wrapped up in some classified work on Jarilo. He wouldn't say much about it besides that it was very important and that he was entirely occupied for the foreseeable future. You are the third choice, and my first. It is my opinion that you are uniquely qualified for this position Miss Webber, due to your unparalleled knowledge of Krell language and your recent progress in coding translation software. You also have a Krell companion, and the Brokers only specified the number of humans who could travel to 61 Cygni. He can serve as your guide, and hopefully keep you safe from any unforeseen dangers that you might face in the uncharted swamps.\" \n\nLena hesitated for a moment, it was all happening so fast. Did she want to return to the Krell homeworld? Absolutely, there were so many mysteries that she had yet to unravel, so many curiosities both personal and professional that she longed to satisfy. But what of her work on the Krell translator? It could help her immensely, but it was not yet complete. \n\n\"I can see that you'll require some time to think about it,\" Barnes said, \"there's no rush. This expedition has taken months to organize, and it can certainly stand to wait a few more days. You know where to reach me when you come to a decision. I hope that you'll accept the offer Miss Webber, I can't think of anyone better suited to the task than you.\" \n\n\"I'll give it some thought and get back to you very soon,\" she replied. \"Thank you Professor Barnes, I won't let you down.\" \n\nThey said their goodbyes and she disconnected, standing in front of the terminal as she chewed nervously on a fingernail. The timescale on the Krell translator had just been slashed, she had to get it ready and working before Barnes and his colleagues ran out of patience and decided to hire someone else for the job. She could visit the planet without it, but the ability to communicate at least partially with the locals would doubtless reveal invaluable information. Rather than merely observing their culture and their alien practices from afar, she could have the Krell explain what was happening, provide crucial context that would make all the difference. The stars had aligned, and this was something that only she could accomplish. \n\nShe spun around and marched back towards her office, her pumps echoing on the tile floor. ",
        "\"Hold my calls Helen, I don't want to be disturbed,\" she barked as the secretary watched her pass by the front desk. \"I have work to do...\" \n\n*** \n\nOver the next few days Lena worked tirelessly on the Krell translator, consuming more coffee than was healthy and toiling until she collapsed at her desk. She tweaked the software and added more simple phrases to its growing library. She managed to bypass the security features on the wrist computer and access the kernel, loading her own custom firmware that allowed her more direct control over the device's internal components. She disabled the GPS and wireless connectivity features in order to free up battery life for the boosted speaker, as they would be of no use to her on the primitive Krell homeworld, finally reaching a low enough frequency that it got a reaction from Sleethe. \n\nIt was all coming together, Lena always worked well under pressure. Barnes hadn't given her a deadline to meet, but she felt that three or four days was probably about as long as his colleagues would wait around for her. They were no doubt as impatient as she was, and she suspected that being out of the loop on the first expedition to the remote planet had hurt their egos. They would be eager to make up for it, and she suspected that the UAS logo would be plastered all over whatever publicity this venture generated. \n\nSleethe helped where he could, feeding her new words and phrases, doing his best to convey their meaning in his own limited way. He was invaluable for actually testing the device, as when it was working correctly Lena's human ears couldn't pick it up. He simply nodded, or shook his leathery head depending on the tone and frequency of her synthetic communications, helping her to fine tune it. \n\nOn the night of the third day, she felt confident enough to perform a real test in order to find out if she could hold even a simple conversation with her Krell companion. They wouldn't be discussing philosophy or current events, but with the words that the device could accurately reproduce she expected to at least be able to ask some basic questions. The conjugation of the verbs and her general grammar would be atrocious of course, as she had no real way to uncover the underlying rules that governed the language. Did they use masculine and feminine nouns? Did they have massive tables of conjugated verbs for past, present and future, or did they use a simplified system? What was their concept of time, and how was it referenced in their day to day conversations? \n\nAll of that was out of her reach, at least for now, but simple greetings and questions should be attainable in theory. She would just sound like a tourist reading from a phrasebook. \n\nLena stood up from her desk, rubbing her red eyes. She hadn't worked this hard since she was an undergraduate. She disconnected the wrist computer from her terminal and slotted it over her forearm. It looked like a medieval gauntlet with the glove removed, the padded lining ensuring that it didn't chafe or catch on her clothing. It had a holographic display and a touch panel that she could interact with, and she had slapped together a graphical user interface that was designed to work in tandem with her translation software. The onboard CPU paled in comparison to that of her work terminal, but it was good enough to process and synthesize Krell speech, and she had expanded the flash memory in order to fit her entire dictionary on the device. It was as portable and as optimized as it was ever going to get. \n\nShe taped the pickup to her throat, then synced it with the computer, popping an earbud into one of her ears and plugging it into a jack on the gauntlet so that she could hear Sleethe's replies without the conversation becoming more confused than it needed to be. \n\n\"Alright you big lug, let's do this.\" \n\nSleethe seemed to realize that the serious business was about to start, perhaps due to the tone of her voice, and so he rose from his usual heap on the floor of her office and sat up straight and alert. He watched her with his amber eyes, waiting for her to begin. \n\n\"Ok, let's try something simple for starters,\" she muttered, tapping at the touch panel with her fingers as she played with the settings. It was a learning algorithm, which meant that it would theoretically get better over time and that she would have to make fewer manual adjustments, but at this early stage she had to modulate the frequency herself. Once the algorithm had assisted with enough conversations, it would be able to judge when an exchange was happening and what settings to use all by itself. At least that was the intention. There were already existing programs that could assist with translating Borealan languages, Lena knew because she had helped develop many of them, but their languages were already very similar to those of humans. Krell was a whole different ball game. \n\nShe cleared her throat and hit the activation icon, the holographic display indicating that the program was waiting for her input. \n\n\"Hello Sleethe, can you hear me?\" \n\nThe resulting synthesized sentence sounded like hissing and warbling to Lena's human ears. The speaker on her arm vibrated, the rumbling tones that it emitted were so low that they were barely audible. She watched with bated breath as her reptilian friend cocked his massive head, listening intently. After a moment he replied, his powerful growl shaking her bones. \n\nThe software took a few moments to process the new input, and then she heard a halting, text-to-speech voice speak into her ear. \n\n\"Yes. The noise of you reaches my jaw.\" \n\nLena resisted the urge to throw her arms into the air in triumph, not wanting to tear her earbud out, and she settled for a more moderated fist pump instead. Sleethe's reply had been borderline nonsense, but he had understood her words, and she had understood his. The meaning had been conveyed, even if the dictionary was limited and the translator needed more work. \n\nHer scaly partner slapped his heavy tail on the floor as he picked up on her excitement, the clapping sound echoing through her office. She hopped on the spot for a moment, elated that her hard work had finally produced tangible results, a grin brightening her tired features. \n\n\"We did it Sleethe! This is gonna work!\" \n\nShe remembered that she could now speak to him in a facsimile of his own language, tapping on her touch screen and then repeating the phrase. The device released another burst of hisses and grunts, Lena waiting for his reply with bated breath. \n\n\"Success, the structure does not sway.\" \n\nMore borderline nonsense, but it sounded positive enough. Her heart began to beat faster as she considered that for the first time since she had met him, she might really be able to hold a conversation with her boyfriend. They understood one another well enough even without the ability to communicate verbally, getting by on gestures and body language, along with the limited vocabulary of human words that Sleethe had learned as part of his military training. She had never felt that there was anything lacking in their relationship, but things could only get better from this point onward. \n\nLena wanted to make a fresh pot of coffee, she wanted to stay up all night and talk with Sleethe until the station's sun lamps turned on, tweaking the software as they shared their secrets like schoolgirls at a slumber party. She needed sleep however, she was close to collapse, and now that she had finally cracked the enigma code that was Krell language she felt as if she had earned her rest. \n\n\"I need to sleep,\" she said, theorizing that simple phrases would be more accurately translated. \"Will you come to bed with me?\" \n\nSleethe rolled over onto his side, raising an arm in invitation. Interesting, even with the translation software he didn't seem to speak unless it was necessary. She wondered if that was for her benefit, or if all of the Krell behaved in the same manner. She had to admit that she had rarely seen what might be interpreted as an in-depth conversation between two of the giant lizards during her studies. \n\nShe walked over to him and dropped to the floor, letting him hook her with his strong arm and hug her small frame up against his soft underbelly. She was too tired to head back to her apartment, too exhausted to remove her clothing. She immediately felt a wave of calm and relaxation overcome her as she pressed her face into his chest and took in his familiar scent, his slow, heavy breathing somehow therapeutic. \n\nLena wanted to tell him that she loved him. Not that he didn't know it already, but putting it into words held special meaning for her. Would he understand the importance of the phrase? Did the Krell have a concept of love that approximated that of humans, did they have any cultural or social parallels? Perhaps it was too risky, too easy to misconstrue, too likely to be lost in translation. \n\nInstead she wrapped her arms around his massive chest as best she could manage, it was like trying to hug an oil barrel. She felt him blow warm air in her hair, his many fingers pressing gently into the small of her back. She hadn't told him that they were going back to his homeworld yet, she would break the news tomorrow using her newly minted translator. Lena hoped that he would be as excited as she was. \n\nCHAPTER 3: FIELD WORK \n\nThe Courser emerged from superlight like a whale breaching the surface of the ocean, a spray of colorful gases expanding in its wake like a miniature nebula as it tore a hole back into reality. The long, slim ship drifted for a moment, inertia carrying it along as it tumbled slowly. After a brief delay its engines flared to life, thrusters spaced along its sleek hull righting it with bursts of blue flame as the flight computer took control. \n\nLena opened her eyes and blinked away stinging tears, struggling back to awareness and straining against her safety harness. She felt like she had been worked over with baseball bats, every muscle in her body ached. She spat the plastic bit out of her mouth, intended to prevent her from biting off her tongue during the jump, and unclasped the catch that bound her to her crash couch. \n\nThe pilots told her that superlight got easier every time you did it, some of the more experienced captains could even stand unaided during the dimensional transition, so she had heard. It hadn't gotten any easier for Lena however, and she doubled over, a wave of nausea overwhelming her. \n\nShe was a linguist, and so she didn't claim to understand the intricacies of the process, she would leave that to the theoretical physicists. What she did know was that faster than light travel was impossible, at least in our three dimensions of reality. The laws of physics did not allow it. The jump drive drew energy from an onboard power plant, charging up and creating a quantum mechanical black hole, better known as a microhole by the pilots and engineers. It manifested in front of the ship, tearing a breach in the fabric of spacetime, which sucked in the ship and everything in its immediate vicinity. \n\nIn doing so the vessel was granted access to a higher dimension of space, or perhaps an entirely distinct universe, where the laws of time and physics operated very differently. You couldn't exceed ninety nine percent light speed in conventional space, but in this strange void it was possible to be massless, for time to run in peculiar and illogical streams. A ship could travel at impossible speeds and follow the swells and currents of time in order to reach a destination far sooner than would otherwise be feasible. \n\nThe big downside was that the wracking energies played havoc with nervous systems, the symptoms ranging from seizures and uncontrollable muscle spasms, to hallucinations and temporary insanity. Something about the jump dimension didn't agree with organic life, almost as if some higher power didn't want them to be there. \n\nAt the end of the process the vessel was spewed out dozens of light years closer to its destination, the range of the jump dependent on the power capacity of the ship in question. Coursers were small vessels compared to the massive jump carriers and freighters, but they were designed to be as fast as possible. The vessel was shaped like a knitting needle, the engines and nuclear reactors housed far away at the rear of the hull. It was the most optimal ratio between mass, carrying capacity and power consumption that the Navy could build. One of the vessels had been docked at the station, and the security chief had requisitioned it for her, a short hop from the Pinwheel to the 61 Cygni system wouldn't even take a day. \n\nLena walked across the cramped cabin on shaky legs, making her way over to where Sleethe was strapped down. There were no chairs on the Courser that could accommodate him, and so he had to be tightly strapped to a cargo pallet for his own safety. The giant reptile risked killing both himself and everyone in the immediate vicinity with his inhuman strength and weight if he was not properly secured. \n\nShe knelt and began to untie him, loosening the belt that was holding his jaws shut first, then moving down to his limbs. Once free, he stood and shook himself like a wet dog, having to stoop lower than usual in the confining space. Krell did not commonly travel this way, Coursers were not built with their kind in mind. \n\n\"Beginning approach,\" the pilot said, his voice coming through on the intercom along with a burst of static. The Courser was too small to carry a landing craft, and so the plan was to rendezvous with a Broker vessel that would ferry them down to the surface of the planet. \n\nLena wasn't sure how she felt about how closely the mysterious aliens were becoming involved with the expedition. They obviously wanted to keep a close eye on her, but why? What damage could one unarmed academic possibly do? \n\nShe walked over to the one of the small portholes, scarcely larger than her own face, and she peered out at the blackness of space beyond. She could make out the twin suns of 61 Cygni, two red dwarf stars that looked like a pair of evil eyes hanging in the sky. They were smaller and darker than the sun, but Krell orbited closer to its parents than the Earth did to Sol. She couldn't make out their destination, it was directly in front of the ship, but she could feel the acceleration as they burned towards it. \n\nBefore long they began to decelerate, Lena feeling the inertial change in her inner ear. \n\n\"You excited to be back home, big guy?\" \n\nSleethe huffed affirmatively, but he didn't seem very enthusiastic. She wondered if he even cared where they were going as long there would be a heat source to bask under. As they drew closer, she started to notice Broker drone ships coming and going, buzzing around the orbital defense platforms that encircled the planet like clouds of flies. It was hard to judge distance in space, but there were small ones that were vaguely spherical, and larger ones that were bulky and no doubt built to carry cargo. They had entered orbit, she could just make out the green haze of the planet below. \n\n\"We're about to dock with the Broker lander,\" the pilot said, \"stand by. You'll hear a loud clunk, don't panic, it's just the docking clamps.\" \n\nThere was a rumble that reverberated through the metal deck, and the porthole was filled with a silver hull as the two vessels mated. Lena felt a sudden wave of apprehension. In a few moments she would be passed from the care of the UNN into the hands of the Brokers. She didn't even know what they looked like, and despite working extensively on Borealan and Krell languages, she had never heard so much as an audio clip or seen a single character from the Broker language. While all of the other races of the Coalition mingled and shared their culture and technology, the enigmatic Brokers seemed to go out of their way to keep themselves separate. \n\nAt least she had Sleethe with her, but she would soon be dozens of light years from any other humans. She might be the loneliest and most isolated mammal in the entire galactic arm. \n\nThere was a pneumatic hiss as a door in the Courser's hull slid open, its small cabin now linked to the Broker vessel via a short umbilical walkway. Lena hefted a large rucksack that contained a wide variety of scientific gear and instruments, her reptilian companion lifting a duffel bag that was larger and heavier than she was with ease. She had packed enough gear and supplies to last her for weeks. The pilot's voice came in over the intercom again, hissing and popping with interference. \n\n\"Good luck Doctor Webber, watch your step now. Have a safe journey, and don't let the Brokers try to sell you anything.\" \n\nShe swallowed hard, steeling herself, and began to walk towards the open door. The Broker ship was better lit than the dingy UNN vessel, the industrial interior of the Courser giving way to bright, clean metal. Lena peeked nervously inside the umbilical, bathed in pale light from the alien ship, and she urged Sleethe to follow behind her. While he seemed unconcerned by the strange design of the Broker vessel, he was sniffing the air intently, perhaps picking up on something that Lena's human nose could not detect. \n\nAs Sleethe stepped into the metal tunnel, there was a worrying creaking sound, as if it was about to give way. Instead, Lena's eyes widened as she watched the umbilical grow to accommodate his exaggerated stature. The metal was flexing like a sheet of silver flesh, expanding and shifting, until it looked as if it had been built to spec. \n\nLena was amazed, awestruck, but Sleethe simply plodded along the tunnel as if it was all routine for him. Of course, he had no doubt been on Broker vessels at some point in the past. He must have been brought from his home planet to the Pinwheel on one such ship. \n\nShe hurried along behind him as he began to outpace her, his long tail dragging across the smooth floor. There were no windows to space, and no visible light fixtures, the glow somehow seeming to emanate from the very walls themselves. \n\nIt was a short walk to the alien vessel, and after a moment she found herself standing in an empty room. It was made from featureless, silver metal, much the same as the umbilical. There wasn't so much as a chair in sight, no readouts or consoles to be seen anywhere. The passage behind them closed up rapidly, like footage of a wound healing that was being played back in a time lapse. She reached out a tentative hand and prodded the metal, feeling it give a little under the pressure. It was flexible, more like hard rubber than the gleaming steel that it so resembled. \n\nThe room gave her the willies, it was too empty, so unnaturally featureless that it was making her snowblind. She found herself clinging to Sleethe's powerful arm, the Krell warbling sympathetically as he coiled his long tail around her, like a knee-high wall of scales to keep her safe. She realized that there was no noise, that was part of what was making the chamber so unnerving. All that she could hear was her own blood rushing in her ears, and Sleethe's heavy breathing, the usual creaks and hums of a spaceship were completely absent. Somehow she got the impression that this was a holding cell, rather than accommodation for guests. \n\nShe stood up straight and brushed herself off, feeling a little embarrassed. She was a professional woman damn it, and there were no doubt cameras scrutinizing her. She wasn't about to give the Brokers a bad impression of humanity. \n\n\"H-Hello?\" She asked, her voice echoing in the room. \n\n\"Doctor Lena Webber, please remain calm during transit, you will be reaching the surface of the planet shortly.\" \n\nThe reply came from everywhere at once, in perfect clarity and unbroken English, as if a native speaker was talking not an inch from her ear. It was a little disarming. ",
        "\"Are you...a Broker?\" Lena asked. \n\n\"Yes I am a Broker,\" it stated, as if that should have been obvious. \n\n\"Where are you? Are you piloting the ship?\" \n\n\"The ship is a drone vessel,\" the disembodied voice replied. \"It is being flow by an auto-pilot system. I am presently in high orbit on the master control station.\" \n\nThat must be what controlled all of the drones and the orbital defenses that she had seen on the way in. How much of it was automated? Somehow she got the impression that she might be talking to the only Broker in the system. \n\nThis was a big deal for her. She had never so much as seen a Broker, not even on the Pinwheel, and to be able to talk with one directly was a rare opportunity. She opened her mouth to ask it a question, but was interrupted as the alien continued.  \n\n\"During your visit, please refrain from disrupting the day to day activities of the native Krell. You may observe, and participate if you should wish it, but we ask that you do not disturb them unduly.\" \n\n\"Of course,\" Lena said, a little confused by the request. \"I'm here in an academic capacity, to observe the Krell culture and learn more about their language and customs. To do otherwise would completely invalidate all of my findings.\" \n\nIt was a little patronizing in fact, as if the alien didn't expect her to know any better. \n\n\"You may stay for as long as your supplies last, and you may venture as far as you can travel on foot. Please be aware that we do not consider you to be under our protection, and we accept no liability if something should happen to you once you have left the confines of the ship. You must acknowledge that you are visiting the planet at your own risk, and of your own volition, and we would ask you to state for the record that you understand and accept our terms.\" \n\nWhat was with all the legalese? She was visiting a planet, not taking out a home insurance policy. The Broker acted more like a lawyer than anything that she had expected. So much for mysterious and all-knowing aliens imparting secret knowledge, this one sounded like he was trying to sell her a used car. \n\n\"Yeah, I get it,\" she replied tersely. \"I'm not here for you, I'm here for the Krell.\" \n\nThe Broker did not reply. Perhaps her comment had offended the creature, implying that for all their mystery and posturing, the simple Krell were of far more interest to her than the advanced aliens. At least that was how she had intended it to come across. \n\nEmboldened by the alien's lack of a rebuttal, she spoke up again. \n\n\"When will we be arriving on the planet?\" \n\nAlmost before she could finish her sentence, the door behind her opened, the stench of rotting vegetation wafting into the ship. \n\n\"You have already arrived.\" \n\nImpossible, she couldn't have been in the vessel for more than a few minutes, and she hadn't felt any turbulence during reentry. She turned and walked slowly towards the hole that had opened up in the hull, feeling warm wind on her face and smelling the familiar scents of the planet. Sleethe slung the duffel bag over his broad shoulder and followed behind her, stepping out into the mud as she hovered by the door. Despite his bulk, his many splayed toes distributed the weight evenly across the surface like a camel walking on sand, and so he didn't sink. She poked her head out of the Broker ship, alarmed by how quickly and quietly they had set down. \n\nOn a UNN ship, she would have been asked to strap into a crash couch for her own safety, then the vessel would have been shaken and buffeted by the stresses of entering the atmosphere and decelerating. There would have been a slew of noises and vibrations as the landing gear had hit the dirt and the engines had powered down. \n\nThere had been nothing in the Broker ship, not so much as a whisper, not a hint of turbulence. They had traveled thousands of miles at alarming speed and she hadn't even noticed. \n\nLena readjusted the heavy rucksack on her back, then stepped out onto the surface of Krell. She had come prepared for the hostile environment this time, and she was wearing most of a UNN hazmat suit to protect her from the pervasive mud, the hood removed and a wide brimmed hat perched upon her head. It was cumbersome, but the last time that she had visited she had been completely drenched in grime, and she still wasn't sure what kind of insects and poisonous plants might inhabit the unexplored swamps. There was little difference in gravity, it was close enough to Earth norm that she didn't feel any real change. \n\nHer yellow boots sank into the mud up to the heel as she struggled forward, the wet dirt sucking at her as she went, the white plastic of the suit already splashed with dark blotches of stagnant water. The planet was made up mostly of swamps and marshes, with twisted trees that resembled mangroves visible beyond the clearing that they had set down in. 'Set down' wasn't entirely accurate, as when she turned to get a look at the Broker ship, she noticed that it was hovering an inch off the mud. There was no landing gear at all, it was like the cylindrical ship was resting on a cushion of air. The outside was just as featureless as the inside, with no cockpit and no engines visible. It looked to her like a cigar wrapped in cooking foil. \n\nWithout so much as a fare ye well, the shining vessel rose into the sky, as if the hand of God had reached down and plucked it from the ground. There was no buffeting wind, no roar from its thrusters, it disappeared into the green haze as silently as it had come. \n\nLena found herself standing alone in the mud, Sleethe already making his way towards the mangrove forest at the edge of the clearing. \n\n\"Hey, wait up Sleethe!\" \n\nShe struggled with her pack, wading through the deep mud as he turned his head to watch her. The bog made the going harder, she was sinking up to her knees in some places, the holes that she made rapidly filling with dark water. The sky above her was tinted green, the twin suns barely visible through the mist, and there was an unhealthy fog that seemed to cling to the ground which made seeing beyond maybe a hundred feet impossible. \n\nKrell was no tourist destination. The smell alone would put off most explorers, it reminded her of fresh compost, and Lena had always thought that the planet looked sickly. \n\nSleethe waited for her to catch up, and then began to lead her towards the trees. Did he know where he was going? Lena had no idea where the Brokers had set down, and they had been quite explicit that the exact location of her visit was to be decided by them. They wouldn't have dropped her into the middle of nowhere, there must be a Krell village nearby. \n\nThe pair crossed the mud flat, reaching the trees, their gnarled trunks perched on spindly roots that stuck out of the wet soil like pale fingers. Each one was suspended in the air, as if the tide had recently gone out, no doubt evolved to survive frequent flooding. There were great masses of vines and creepers winding around their trunks and dangling from their skeletal branches, the forest canopy above them blocking what little light from the suns made it through the clouds to give everything a very gloomy and dingy feel. There were islands of ferns and small bushes that seemed to cluster around the roots, taking hold wherever they could. Perhaps the trees provided some measure of security against the ever shifting and uneven ground. \n\nUnfortunately the twisted roots made the going even harder, and Lena had to struggle to climb over the obstacles, the humidity making strands of her blonde hair stick to her face. She had forgotten just how uncomfortable this damned planet could be. Her boots were already filling with sweat, and she could taste the muggy air in the back of her throat. If she pursed her lips and sucked, she could probably take a drink of water from the very atmosphere. \n\nSleethe was patient, hanging back to help her over some of the larger roots, but the going was slow. The hazmat suit might protect her from the dirt, but it wasn't designed for hiking, and she had completely misjudged how much she could carry under these conditions. The straps of her pack were digging into her shoulders, and she was already hopelessly out of breath. She was used to office work after all, she wasn't built to trek through difficult terrain where her sweat couldn't even evaporate properly in order to cool her. \n\nHer Krell companion noticed her discomfort, reaching down to pluck her rucksack from her back as if it didn't weigh any more than a lunch box. It was a relief, but she was a little embarrassed all the same. It wasn't as if Barnes had given her any time to exercise in preparation for the expedition. \n\nSleethe seemed right at home. The humidity was keeping him wet and giving his spinach-colored scales an attractive shine that made him look glossy. His wide feet were designed to walk on mud, and despite weighing several times what Lena did, he was able to travel much easier. He cleared a path for her, breaking through some of the smaller and more brittle roots with his exaggerated strength and weight, an unstoppable force as he lumbered long. \n\n\"Come on Lena, you can do this,\" she muttered under her breath. She wrapped her fingers around a raised root that was blocking her path, her hands gloved in yellow rubber like she was wearing a pair of marigolds, and she heaved herself up and over it. She swung one leg over, then the other, and dropped down into the mud on the other side. She sank up to her knees, waving her arms for balance, marching onward once she had gotten her bearings again. Her thighs were already burning due to her odd gait, walking in the damp soil was demanding far more of her body that she had anticipated. \n\nShe leaned against a nearby root as she took a short break to rest, planting a hand on top of her wide brimmed hat to keep it from falling from her head as she craned her neck to look around. The forest looked dead to her, the trees pale and ghostly, choked with creepers as the layer of white mist rolled across the ground. They had thick, fleshy leaves however, and there were all kinds of strange plants and vines living on and around them. \n\nThere was even a creeper winding its way along this exposed root where it protruded from the mud, tiny flowers blooming here and there in vibrant shades of pink and blue. They had star-shaped petals, with bright purple stamens, designed to attract the attention of pollinating insects no doubt. Around her feet were what almost looked like water lilies, but sitting atop the mud rather than floating on water. The forest was very much alive. \n\nShe remembered her encounter with a snake-like creature that lurked below the surface of the mud the last time that she had traversed a mangrove forest like this. The animal had been harmless, but it had frightened her out of her wits, and imagining the loathsome worms milling about in the sludge below her feet sent a shiver down her spine. She longed to get out of this mud, the Krell villages were built on raised platforms for that very reason, and the sooner they found one the better. \n\nLena steeled herself and pressed onward. \n\n*** \n\nIt took them a while, but eventually they emerged on the far side of the mangrove forest. It had been a leisurely stroll for Sleethe, but Lena felt as if she had just run a triathlon. She was more sweat than woman, her muscles burning, and with every breath she tasted the swamp on her tongue. She pulled her sodden hair out of her face with her gloved fingers, overheating inside the hazmat suit, but the alternative was bathing in the mud like a pig on a farm. Everything up to her waist was coated in a layer of sludge such that she could scarcely see the white and yellow material beneath it. \n\nThrough the mist Lena noticed what looked like artificial structures, and Sleethe began to make his way towards them. The pair skirted along the muddy shore of a stagnant lake, it was wide and deep, the far shore obscured by the rolling fog that seemed to hang over everything like a blanket. She could make out shapes moving along the surface, perhaps dead logs or floating natives, it was impossible to tell with such low visibility. \n\nAs they got closer to the structures in the distance, Lena was able to make them out in greater detail. They were wooden shacks, their circular walls made up of wet, uneven planks and salvaged tree branches. The roofs were layered with what looked like palm fronds and leaves, slanted, obviously to ward off what must be frequent and heavy rainfall. She remembered that the Krell dwellings had no windows, and that they used curtains made from vines and decorated with beads and shells in place of doors. Privacy was not of great concern to the aliens. \n\nThe whole affair was suspended a few feet off the ground on stilts that very much resembled the roots of the trees, at least at the lowest tier. The structure looked to be dozens of feet high in places. Many of the supports 'were' trees, she realized, their branches cut away and the buildings constructed around the naked trunks like tiered treehouses. \n\nIt made sense to repurpose the existing trees, they were strong and sturdy, their roots extending deep beneath the earth to anchor them securely to the soft ground. The raised village was a little haphazard, buildings had clearly been added as they were needed, and there had obviously been little forward planning. The wooden platforms that encircled them were connected by twisted rope bridges made from vines, and rickety walkways that looked very precarious and unsafe. There were no guards or handrails, but at least if she lost her footing and fell, she would land safely in the mud below. \n\nIt was almost identical to the village that Lena had stayed in during her first visit to the planet. The Krell could not mine here, they didn't have access to stone or any building materials besides what they could salvage from the forests. Industry was basically impossible, and that went some way to explaining why they were so primitive, despite their obvious intelligence. They could not mine ores or smelt metal, they couldn't pour concrete or make a foundation for anything that was too heavy to be supported by wooden stilts or a nearby tree. Who could guess how deep they would have to dig before they reached bedrock. \n\nShe found it odd that despite their close relationship, the Brokers had not elevated the Krell in any way. They had not provided them with the technology necessary to improve their lot, they had not helped them to build factories and they hadn't supplied them with any advanced materials to make their lives any easier. The Krell likely had nothing to trade that the Brokers valued, but still, their lack of charity irked her. It was always possible that the Krell were just happier this way she supposed, they certainly didn't seem to take advantage of any of the advanced technology on the station besides the heat lamps. When they weren't deployed they just lazed around in their pools, basking and sleeping, occasionally playing cards or pool with the Marines. \n\nThey seemed to like games, perhaps she could befriend some of the natives that way. \n\nAs they neared the forest of stilts and dead trees, cloaked in a layer of mist, Sleethe raised his snout towards the overcast sky and loosed a rumbling call. It echoed across the lake, the sound carrying an impressive distance, and then the village began to stir. \n\nLena could make out figures emerging from their huts, she could hear the creaking of the damp wood as they took to the walkways and bridges, crocodilian faces peering down at her from above. From the lake too the Krell were rising, the dark water sliding off their scaly backs in sheets as they made their way up the muddy bank, their heavy tails carving furrows behind them as they went. \n\nThey came in all shapes and sizes, some larger than Sleethe, some smaller, and the larger ones seemed to have slightly darker scales. They were no doubt older than their spinach-colored counterparts. \n\nNone wore clothing, the Krell had internal genitalia that remained out of view until needed, and so they had no modesty to preserve. As they drew closer, Lena noticed that many of the aliens were wearing decorative jewelry, strings of beads and shells that hung about their long necks. She could distinguish the females from the males, they were imperceptibly smaller and their features were softer, with wider hips and thicker thighs. They did not have breasts, they laid eggs and did not nurse their young as mammals did, but there were small fatty deposits on their chests that might give that impression from the right angle. \n\nThey were painted too, the aliens were decorated with all manner of patterns and symbols, dyes and pigments staining their scaly hides. She blushed, remembering how a Krell elder had marked her and Sleethe with alien runes during her last visit, likely in some kind of bonding ceremony. The giant alien had drawn a pattern on her forehead in some kind of red ochre, like two joined snakes, and the dye had stained her skin for weeks. For all she knew, she was married to her reptilian companion. \n\nThe natives crowded around them, drawn by Sleethe's call, and Lena began to feel a little boxed in by the gigantic reptiles. She knew that they wouldn't hurt her, but they were so...large, and they had little concept of personal space. \n\nOne of the largest Krell leaned closer to her, nudging her with his long snout as he sniffed her. He must have been ten feet tall and twice as long, his scales tinted dark green, the remnants of some water weeds clinging to the spines on his back as he had just emerged from the lake. On his pale belly were more Krell runes, almost like hand prints in shades of blue and brown. They hadn't been washed off by his time in the lake. What were the dyes made from, and how long did they linger after being applied? \n\nWhile Lena could make out a little of what was being said as Sleethe began to talk, it was a perfect opportunity to make use of her translator. It was protected beneath her sleeve, and so she removed the yellow glove and stowed it in her pocket, rolling up the hazmat suit to expose the wrist mounted computer. It was mil-spec, supposedly water proof, but she wasn't taking any chances with her baby. She tapped at the touch panel, then realized that the other glove was too thick to register her inputs, so she removed that too. \n\nThe holographic display flared to life, the aliens cocking their heads as they examined it, mesmerized by its orange glow and the floating icons. She entered a command, the earbud already in place, and began to listen... \n\n\"-where you are from?\" \n\n\"Me and mine descend on benefactor metal, (unintelligible) of humans. Mine seeks knowledge.\" \n\nSleethe was explaining the purpose of their visit, and the word that he was using to describe Lena seemed to translate as 'mine', or at least that was the closest that the software could interpret. She felt a flutter in her belly, it was like he was announcing to the other aliens that they were a couple. \n\nNone of the Krell seemed phased by the idea. Despite being a primitive culture they didn't show any reaction to the concept of one of their own taking a scrawny, warm-blooded alien as his mate. Rather than being open-minded and accepting of interspecies relationships, she suspected that it was more due to their signature aloofness. If it didn't get in the way of basking and swimming, then who cared? \n\n'Benefactors' must be their word for Brokers. She would try to uncover the secrets of their strange relationship during her stay, mostly because they clearly didn't want her to. \n\nSleethe took a step back and let the crowd of aliens close in, the Krell jostling and rubbing shoulders as they leaned down close to her. They thrust their scaly snouts into her hair, pawing at her suit with their many fingered hands. They were very tactile creatures. Lena kept reminding herself that they were gentle and friendly, despite the fact that any one of them could have crushed her underfoot as if she was little more than a bug. ",
        "She was somewhat hesitant to make an attempt to communicate, the translator still needed a lot of work, but if she never used it then the learning algorithm wouldn't be able to refine its parameters. Better to just jump into the deep end and hope for the best. \n\nShe activated the speaker and cleared her throat. \n\n\"Hello, my name is Lena, thank you for your hospitality.\" \n\nThe device emitted a series of warbles and rumbles, the group of Krell going silent and staring curiously at her. She was no doubt communicating in a butchered pidgin of their language, but hopefully she had made herself understood. \n\n\"I...uh...I hope to learn a lot about your culture during my stay. I'm...using a machine to translate your language.\" \n\nSleethe at least seemed to get the gist of what she was trying to convey, further explaining her situation to their hosts as she listened in on the exchange. The light on her arm spoke for her, at least that was the way that he put it, and the other aliens nodded to one another as if that was all the explanation that was needed. They were not curious about the technology, they were not interested in the talking machine. It helped her to speak and that was all they needed to know about it apparently. \n\n\"Sleethe, can you ask them if they have somewhere that we can stay while we're here?\" \n\nIt seemed a little presumptuous to just walk into a village of strangers and expect to be put up for the duration of their visit, but that was the Krell way. The aliens were unnaturally friendly, and the last time they had visited the planet the locals had done just that. \n\nLena felt a tremor through the ground, the mud beneath her boots rippling as something impossibly large approached the gathering. The Krell parted, letting an even more monstrous example of their species pass them to stand before Lena and Sleethe. \n\nIt was as large to Sleethe as he was to Lena, it must have been twelve feet tall at least, absolutely massive and with a hide so dark that it was bordering on black. Its legs were as thick as tree trunks, the spread of its many toes as large as a manhole cover to prevent it from sinking into the mud. Its tail was at least half of its body length, trailing off a ways behind it, packed with so much fat and muscle that a grown man would not have been able to straddle it. \n\nIt brought its snout down to sniff her, bending double to get down to her level as it rested its gigantic hands on its knees. It was the size of a damned dinosaur, she could have put her fist inside one of its nostrils with room to spare. This was no doubt a very old Krell, perhaps the village elder, and it looked as if the whole tribe had been using his segmented underbelly as a canvas. There were all kinds of markings and runes, with geometric patterns and strange shapes that almost looked like crude depictions of trees and animals. It reminded her of cave paintings, but drawn onto a living being rather than a stone wall. They were intricate and elaborate, there was no way that the usually lazy lizards would apply them every time they faded or were washed off, and so it was safe to assume that the colored pigments must stain their leathery hides for a very long time. \n\nShe had been unable to wash off the marking that had been drawn on her head the last time that she had visited, and it had only come off after the upper layers of her epidermis had been shed, and the dye along with it. Who knew how long those same pigments might linger when applied to a Krell's rough skin. \n\nIt was wearing decorative jewelry that matched its exaggerated stature, the necklace that hung from its thick neck was large enough that Lena could have worn it as a skirt. There were tiny white shells that had been threaded through string made from woven grasses, colorful beads adding shades of red and blue to the display. There were also animal bones and small skulls, carved like ivory with intricate geometric patterns, not trophies from hunts but rather items of interest that they had found and decided to use. At least that was the impression that Lena got, the temperament of the Krell led her to believe that they were unlikely to hunt for sport. \n\nHow did such a heavy creature even fit in the village without the whole structure collapsing under its weight? Perhaps the Krell were better architects than the outward appearance of their rickety shacks would suggest. \n\nLena wasn't sure if she should be doing anything in response, if there was some local custom that she was unaware of when greeting an elder. As similar as everything seemed to her last visit, the Brokers could have set down clear across the planet from the previous location. Sleethe spoke with the giant in their native tongue, Lena's translator doing its best to follow what was being said, but it was still very rusty and unreliable. \n\nSleethe explained again why they were here, and asked for permission to stay in their village, the elder considering for a moment before giving an affirmative reply. Lena thanked him, and the meaning seemed to have been conveyed accurately enough. \n\nNow that a decision had been reached and the aliens had sated what little curiosity they had, the crowd dispersed and the gaggle of Krell lumbered away to return to their usual business. It was almost as if having an alien visit their village was routine, but that couldn't possibly be the case. They might have seen Brokers before, but they had never seen a human. Lena herself had been one of only a handful of humans who had ever set foot on the planet. \n\nThe pair followed the elder over to the village, the giant creature mounting a gangplank that led to the next level, the wood creaking ominously under his weight. Lena waited until he was clear before following behind him. It looked like it was scarcely able to hold him, and she didn't want to be the straw that broke the camel's back. While it wouldn't be fatal, a fall from this height would probably bury her up to her waist in mud. \n\nThe surface was slippery with moisture, her already muddy boots skidding on the damp wood, and with no hand rail to hold onto she had to extend her arms for balance. Sleethe gripped the surface with his seven, clawed toes, reaching out a hand to steady her as she climbed. They emerged onto the lowest tier of the village, a wooden platform that ringed the first of many small huts that was suspended perhaps six feet from the mud below. Each hut had a platform, and each platform was joined to the larger village by a haphazard network of walkways and bridges. The layout seemed completely random, as were the elevations of the different shacks. Rather than have each building at the same elevation, the connecting walkways slanted up and down as necessary.  \n\nEverything creaked, and every surface was coated in a layer of moisture that gave it a reflective sheen, making Lena feel as if one wrong step might send her tumbling to the ground below. She had to keep in mind that if the heavy Krell could cross these bridges without them falling apart, then she should have no problem. Even so, she stayed close to Sleethe, confident in the knowledge that he would reach out and catch her if she should slip and fall. \n\nShe was glad of her hat. Water rained down from the upper levels, the moisture in the atmosphere condensing on every available surface and dripping from the higher tiers of the village. There were creepers and vines growing even here, almost as if they had been intentionally guided by the Krell in order to further reinforce the structure. It gave everything an Elvish feel, like something from a children's storybook or a fantasy movie. If Elves lived in swamps, then this is what they would build. \n\nShe noticed that some of the trees that she had assumed at first glance to be dead had fleshy leaves growing from their twisted branches. They were alive, cultivated for the purpose of holding up the village, snaking between the structures as they climbed higher in search of light. Their branches braced against the shacks, reinforcing them and acting as support beams. Remarkable. As much as the design of the village appeared random and clumsy, this level of planning must span generations. Some of these trees must have been growing for hundreds of years. \n\nAs well as being wet, the glistening wood from which the village was constructed was coated in mosses and fungi, the pervasive damp making it a haven for mushrooms and other clinging plant life. The Krell settlement was practically an organism in its own right. \n\nThe closer she looked, the more intricacies she began to notice in the woodwork. Much like the village that she had visited during her previous expedition, there was an undeniable artistry hidden beneath the moss and vines. There were Krell runes carved into every available surface, wherever there was a wooden wall or an exposed tree trunk someone had gone to great lengths to decorate it with rolling script and intricate reliefs. \n\nLena ran her ungloved fingers across the wall of a nearby shack, feeling the indentations that had been cut into the wood. This could be purely decorative, or it could be some kind of historical record. She couldn't read Krell, but during her stay she intended to take rubbings of every damned inch of this village. She would catalog everything, and no matter what it took she would decipher this alien text. Decoding their language and their script could be her life's greatest work, and there was no competition. Only one human had been allowed to set foot on the planet and every new discovery would be hers alone. \n\nThe towering elder led them deeper into the village, the thick trunks that coiled around the structure and the hanging creepers giving the impression that they were deep inside some jungle. It was so dense that very little light made it through the platforms and foliage above them, Lena's eyes taking a moment to adjust to the gloom as they pressed on. It was like being inside some giant, maze-like treehouse. There were structures both above and below her, and all around her were either the foliage-covered roofs of Krell houses, or the thick supports and tree trunks that were holding aloft the huts over her head. It was almost like walking beneath a pier at low tide, the forest of long stilts exposed, their glossy surfaces covered in barnacles and clinging seaweeds. \n\nThe rope bridges felt especially precarious, but these at least had handholds that she could cling to as the crude constructions waved back and forth, their design not dissimilar from those of human origin that one might find on a nature trail. She was starting to understand why there was such a glaring lack of safety features. Humans were small and light, they fell over easily, but Krell were sure footed and it was hard to imagine one toppling over by accident. Their wide feet provided them with a lot of balance, and their massive tails seemed to anchor them to the ground with their weight. They lumbered along slowly and confidently, too bottom-heavy to risk a fall. \n\nAs she crossed a bridge made from knotted vines, she chanced a look over the edge, her stomach lurching as she peered down at the sheer drop below. They were getting higher and higher the further they went, and they were now at least twenty feet off the ground. \n\nWhen they passed by houses, occasionally a Krell would poke its long snout out from behind a bead curtain, watching as the strange procession passed them by. Sometimes the elder would stop and bump heads with them affectionately, like two cats brushing up against each other, obviously some kind of greeting reserved for friends or maybe relatives. \n\nAs they neared what Lena surmised must be the center of this tiered village, she saw a much larger structure, far older than the other huts. The wood had been worn from decades of exposure to the elements, and there were three enormous trees holding it up like pillars as they cradled it in their branches. It was old growth, gnarled and twisted, the rough bark covered in mushrooms with bright red caps and creepers that sprouted with purple flowers. This was the heart of the settlement, no doubt some kind of town hall or chieftain's hut. \n\nRather than being built from planks, this one was made from thick logs that had obviously been felled somewhere else and carted here. Even for a Krell dwelling this was large, it reminded her more of a church or a cathedral such was its scale. How much did it weigh? It was no surprise that it needed several massive trees to support it, their branches wound around it like the pale bones of some skeletal hand. \n\nIt was elaborately decorated, each of the wooden logs had been stripped of its bark and was carved with spiraling runes and patterns, winding their way all around the building. Some were far older than others, the combination of time and the elements dulling them. Others were obscured by thick sheets of green moss that clung to the wood in moist blankets, droplets of dew making the carpet of greenery glisten under what little sunlight penetrated the platforms above. \n\nHere and there Lena could make out more elaborate decorations, what looked like representations of trees and animals, along with crude figures of Krell engaging in various indeterminable activities. It reminded her of what she had seen when she had visited the Lascaux caves in the Dordogne region of France to view the paleolithic paintings, left there tens of thousands of years ago by the primitive ancestors of modern humans. Each figure likely told a story, or perhaps they had some religious significance. Much like Borealan tapestries, these carvings might be a record of their ancient history, or a kind of library of knowledge. Neither paper nor unshielded electronics would last very long in this atmosphere, rust and damp would destroy all of their information. Carving their history into wood might be the only method that they had to preserve it. \n\nShe tore herself away as elder stopped at a large door on the structure's face, lifting the curtain of decorative beads and shells with his long arm, creating a sound like rain hitting a tin roof. He was inviting them inside, and Lena didn't even need to duck as she walked beneath the giant alien and into the building proper. \n\nIt was dark inside, and expansive, the ceiling extending high above her head and the walls so far away that she could scarcely make them out in the gloom. The circular space must have been about fifty feet wide, large enough to accommodate a whole lot of Krell at once, and the roof was high enough that even the larger elders wouldn't risk bashing their heads on low hanging beams. It smelled musty and old, and there was a sense of reverence, as if this was some kind of holy place. She was almost scared to speak, as if she might somehow disturb the peace. \n\nIt was cooler inside, and the walls went some way towards keeping out the humidity, not that it could have been described as dry. She could make out the pale trunks of the ancient trees as they pushed through the walls and rose towards the ceiling. Either they had breached the walls over the years or the structure had been built around them. Some of the higher branches had curled around the rafters, almost like vines in their own right, pushing through the roof and disappearing from view in their never ending climb towards the sky. They were an integral part of the structure now. It was quite beautiful to see the ways in which the Krell lived in harmony with nature. \n\nThe elder passed them, moving off into the cavernous room as Lena stood beside Sleethe and watched. His tail sounded like a burlap sack being dragged across cement as it trailed behind him, it was like a damned train car made of flesh. If the alien were to lie on his belly, he would have been as long as a city bus. His footsteps shook the floorboards beneath her, every vibration traveling through the damp wood and up her legs. \n\nIt was too dark to see what the elder was doing, but she heard something that sounded like two stones being struck against one another. Suddenly there was a flare of orange flame, its flickering light dancing across the uneven walls and casting deep shadows. The elder lifted a long staff made from a twisted branch, one end wrapped in some kind of cloth, which was now burning brightly. He lumbered around the circumference of the room, lighting torches as he went, until Lena found herself encircled by two dozen of the burning balls of fire. It did a decent job of illuminating the room, they didn't have electricity and so this was the next best thing. \n\nShe wondered briefly if the open flames posed a danger in this wooden city, but everything was so damp that she doubted the fire would ever catch. The torches must have been soaked in something flammable, as they burned brightly. \n\nNow she could get a better look at the interior. As was customary for Krell, there were sleeping pits dotted about the floor. The aliens liked to sleep in recesses in the ground, and so they carved out Krell-sized bowls and lined them with soft cushions. They usually slept half a dozen individuals to one pit, huddling for warmth when they were forced to leave their beloved heat lamps. \n\nThe interior was just as intricately decorated as the exterior, with more carvings and symbols etched into every available surface. There were clay cauldrons lining the far wall too, large enough that a person could have climbed inside one, and she wondered if they were used for cooking. The elder set down his staff and dipped his long arm into one of the pots. When he withdrew it, she saw that he was cupping a handful of what looked like red-brown ochre or clay. Those pots contained the pigments that they used to apply their tribal markings. \n\nLena turned on her translator again, eager to pick up on the conversation as the elder plodded back over to where her and Sleethe were waiting. She adjusted her earbud and listened intently as the Krell stood before them. First the elder bumped heads with Sleethe, the two rumbling in low tones that the translator could not decipher, as they corresponded to no words or phrases that were logged in its database. It was like an Eskimo kiss between two giant crocodiles, and then the elder withdrew. \n\n\"You are as kin,\" he said, her translator finally pulling its weight. \n\nNext he smeared some of the red ochre on his fingers, and reached out towards Sleethe's scaly forehead. He drew a symbol there, like two crossing snakes, one that Lena recognized immediately. This was the same ceremony that the elder of the previous village had performed, the one that she had assumed to be some kind of marriage or bonding ritual. \n\nSleethe seemed oddly reverent as the elder pulled back to examine his handiwork, the rune bright and prominent against his spinach-colored scales. Next the giant moved towards Lena. He dropped to one knee to get down to her height, the floorboards bouncing beneath her as he shifted his weight. He brought his snout down towards her face as if he was going to swallow her whole, but instead he sniffed her curiously. \n\nHe seemed especially interested in her blonde hair, he might never have seen any before, and he carefully removed her hat like he was plucking it from the head of a doll. He ran his many fingers through the blonde strands, Lena tensing up as she felt his dull claws on her scalp. He lowered himself even further, pressing his monstrous forehead against hers, the same greeting that he had given Sleethe and some of the other Krell villagers. His head was about two feet wide, his hide as rough and leathery as tree bark, but he was gentle enough that he didn't knock her off balance. \n\n\"You are as kin,\" the translator interpreted, his rumbling tones shaking her bones at such close range. \n\nShe watched as he smeared more of the red clay on his fingers, and then she closed her eyes reflexively as he brought his hand towards her face. She felt his rough digits on her skin, tough and scaly, and when she opened her eyes again he was finished. ",
        "He rose to full height and took a step back, his massive, heavy head seeming to fly away from her as he examined the mark with his yellow eyes. Lena looked towards Sleethe, and her Krell companion seemed pleased, his gaze lingering on her forehead. She couldn't see it herself, but she knew that the elder had drawn an identical mark on her face. It must be important, moreso than she had realized. It wasn't just ceremonial or it would not have needed to be reapplied a second time. She could always use her translator to ask about it, but she felt that she might ruin the moment. She would save that question for later. Maybe it served to signal something to the other villagers, perhaps that they were a couple and that she was off-limits to prospective males. \n\nThe Krell had a rather odd method of courting. At a time during their life cycle that UNN scientists had been so far unable to determine, the Krell would collectively go into heat. They would mate with anything and everything that they could get their hands on, engaging in massive breeding frenzies in which dozens of individuals competed for the best partners. \n\nBut if at some time during this orgy of reptilian reproduction, an individual found someone that they really clicked with, they would enter a monogamous relationship and proceed to breed with that Krell exclusively. Assuming that the feelings were reciprocated of course. It wasn't yet clear how they chose their forever-mate, but if one was not found, then the Krell in question would simply try again next season. Time was certainly something that the Krell weren't short on. They had hundreds of years in which to search for their ideal partner, and if they didn't find one then it didn't hamper their ability to reproduce with the general population. To a human, free love and commitment were on opposite ends of the spectrum, but the aliens somehow made it work. \n\nLena and Sleethe were in just such a relationship. She had met him by chance shortly following a breeding frenzy in the Krell barracks, and he had taken a liking to her after being spurned by one of his own kind. There was no accounting for taste, in Lena's opinion that anonymous female had made a very poor romantic decision. \n\n\"Make this temple as your home,\" the elder said, spreading his arms as his booming voice reverberated through the floor. \"You may rest within the pits.\" \n\n\"Thank you,\" Lena said, hoping that her translator would do a good enough job of conveying her gratitude without butchering the simple phrase. After a brief delay her speaker loosed a short rumble that approximated Krell speech, and the elder bowed his massive head deferentially. So far so good, the software was working about as well as she could have hoped. \n\nThe elder was now satisfied apparently, passing by them without another word and making his way slowly towards the curtain of beads that served as the door. She found herself wondering if the translation had been accurate, and if this building really was some kind of temple, or if it had a religious significance in the Krell culture. Just another mystery to unravel. \n\nLena watched as the elder's impossibly long tail slowly trailed out of view, then turned to Sleethe who was waiting patiently beside her. \n\n\"Looks like we're in business, big guy. Let's settle in.\" \n\nSleethe seemed to understand her well enough without the translator, but the learning algorithm needed all the experience that it could get, and so she let it run as her companion walked over to a nearby wall and set their bags against it. He seemed to have chosen a sleeping pit for them that was at the foot of the wall, knowing that she would want to brace some of her equipment against the tightly joined logs. \n\nThere was a familiar fire rising inside her now, a burning need to discover, the same lust for knowledge and recognition that fueled her on those sleepless nights when she worked herself to exhaustion. Far from simple linguistic work, she had also been given a slew of scientific equipment by Barnes and his associates. The Professors were expecting her to do some field work in their place, explore the planet, collect samples of local flora and fauna to bring back with her so that they might study them. She felt like Darwin setting foot on the Galapagos islands, specimen containers in hand as he went on the hunt for strange bugs and lizards. She was not especially qualified for such tasks, but as the only human allowed to visit the planet, they had to make do. \n\nShe patted Sleethe on his scaly thigh, grateful to have him serving as her pack mule. Carrying the gear was trivial for him, meanwhile Lena would never have made it off the ship if she had been tasked with hauling it all herself. The lack of vehicles would have been a further complication if it wasn't for her green friend. He could carry her across terrain that she couldn't traverse, and he would keep her safe from any unknown dangers that she might encounter out in the bush. \n\nShe knelt and unzipped the duffel bag, her expression brightening as she pulled out a pair of binoculars. It was more mil-spec gear, security chief Moralez had owed her big time for her help in saving the Pinwheel from the outbreak of baby Krell, and so he had let her raid their stores of surplus equipment before the expedition. 'As long as you bring it back in one piece,' he had told her. \n\nShe had also packed as many MREs as she could reasonably carry alongside all of her scientific equipment, as the deal that the UAS had made with the Brokers stipulated that she could stay as long as she wanted. She had a suspicion that the aliens might be counting on her supplies being the limiting factor, and so she was loaded up to the eyeballs with freeze dried pasta and cereal bars. \n\nHaving grown up in Munich, she wasn't much of an outdoorsman, but perhaps with Sleethe's help she could find some edible fauna to supplement her diet and stretch out her visit a little longer. She had one of the scanners that they gave to scouts in the field that would let them know if food was dangerous to eat, and so it shouldn't be too difficult. \n\nThe duffel bag contained plenty of other goodies and gadgets. She had brought petri dishes for taking samples of local bacteria and studying their growth, stasis containers that would let her freeze samples and specimens for the journey home, and a light trap for catching insects. There was a crack hammer for breaking off pieces of rock, an elemental tracer for scanning minerals, even a deep scanner that could fire a pulse below the ground. She had sub-soil probes for taking core samples, a laser range finder, and the meteorology guys had given her an automated weather balloon drone. Lena didn't want to imagine the arguments that must have gone down at the UAS over what she would bring and which fields of study would be prioritized. \n\nThe crown jewel of her hoard however was a matte white, twenty five pound plastic block. She struggled to pull it from the bag, setting the device on the wood floor beside the sleeping pit. To the uninitiated it looked a bit like a portable vacuum cleaner, but it was actually a work station with a litany of features. She hit a button on the side of the blocky device, and the chassis split open like a clam, revealing the sensitive equipment that it had been protecting. \n\nThis was about as large as they could make this kind of workstation while keeping it reasonably portable, and even then it was heavy and cumbersome. She hit another switch and it spread itself open even further, unpacking itself with a whir of electric motors as Sleethe peered over her shoulder curiously. It had a built in microscope, an internal computer with the ability to perform all of the expected functions like cataloging data and running complex calculations, and lots of other bells and whistles that would help it act as her home base where her scientific studies were concerned. It had three monitors that were folded in on one another, and she flipped them open and turned on the computer, the device booting to a UAS splash screen. \n\nIt was solar powered, which might be an issue on Krell, but its battery was charged and she had brought along a few spares. Even if it eventually ran out of juice, she could still do things the old fashioned way. Cuvier hadn't needed a portable work station after all. \n\n\"Looks like the computer survived the trip,\" she said, shutting it down again to save battery. \"We'll use this building as our home base.\" \n\nShe stood and struggled out of her hazmat suit, relieved to be free of the stifling, confining garment. Beneath it she wore a pair of shorts and a tank top, remembering how humid and hot the planet had been the first time around. She felt a little exposed, the shorts rode high on her thighs and the grey tank top left little to the imagination. She was accustomed to wearing lab coats and long skirts, but the Krell didn't care about modesty and there were no other humans for light years. Might as well let it all hang out for the sake of comfort. If she had to live and work in this soup of heat and moisture, then she was at least going to minimize her suffering. \n\nWhat she wouldn't give for a cold shower. Her skin already glistened with sweat and her clothing was damp and clingy, the humidity was inescapable. \n\nShe felt Sleethe's eyes on her, and she wondered how the alien saw her. Was he attracted to her in the same way that he was to females of his own species? They had secondary sexual characteristics after all, wide hips and soft chests, but Lena was so...different. Her skin was soft and smooth rather than tough and scaly, her face was flat with no snout, and she had lips to cover her teeth. While female Krell did store fat on their chests, they were nothing like Lena's breasts, now hanging free beneath the sliver of thin fabric that concealed them. \n\nDid he like that she was soft? Was she exotic to him, or did he look past her alien appearance because his attraction to her ran deeper than simple sex appeal? One day soon she might be able to ask him those questions, and actually understand his answers. \n\nThere was a warmth rising inside her now as his yellow eyes played over her body, distinct from the pervasive heat of the temple. His gigantic form was well suited to this environment, and she was starting to understand why they enjoyed lounging in water so much when they were on the station. The atmosphere on Krell was like being in a sauna, and the moisture clung to his scaly skin to give him a glossy sheen, like someone had rubbed him down in oil. The flickering torches that lit the room reflected on his body, light and shadow accentuating his already impressive musculature. \n\nHis arms were massive and near the same length as his legs, with biceps that would have put a human weight lifter to shame. His pectoral muscles were similarly hard and prominent, the beginnings of his abdominal muscles visible despite the paunch of fat that made his underbelly so pleasant to sleep against. His physiology was different to that of humans. He had more muscles and in different configurations, but it was familiar enough that it evoked a deep and primal attraction in her. Sometimes she would awaken from a daydream to find herself chewing on the end of a pen as she watched him sleep from across her office. Overall he had the physique of a strongman, functional strength that was a result of his lifestyle, rather than the product of a carefully crafted diet and exercise routine. Something about that fact made him more attractive to her. He wasn't grandstanding, he wasn't trying to impress her, that was just the way he was. \n\nShe was a professional woman however, she couldn't let herself melt every time he glanced in her direction like some kind of giddy schoolgirl. Knowing that once he made his move her willpower would evaporate, she tapped at the wrist-mounted computer that was secured to her arm and distracted herself with the floating icons. \n\n\"There's no time to waste, we might as well get started. How long do we have until nightfall, Sleethe? How long are the days here? I need to get a gauge on how much usable light we'll get.\" \n\n\"Suns are high,\" he replied, the translator chittering in her ear. \"Light for maybe six more human hours.\" \n\nThe days were long here then, that was good, more light meant more work. Sleethe had to live on human time, and so he had a pretty good grasp of Earth-standard hours and days, even if he couldn't do the math required to determine the exact length of the Krell equivalent. If you were expected to show up to a battle on time, then you needed to know how your employers measured it. That was a problem with some of the personnel on the station who came from colony planets, if you said 'be here in an hour' they might have a very different concept of what that meant. There was usually a period of adjustment where the intern or the recruit in question was constantly late. Lena had even met a woman who had been born on a tidally locked colony and who had been convinced that the Pinwheel's lamps shut off at night to save power. \n\nTruth be told, it had been a long day and she was about ready for a nap, she didn't fancy wading out into the mud again so soon. What she did feel like doing however, was examining this room in laborious detail. Now that the torches were lit she could make out all manner of Krell runes and carvings. It was time to start cataloging it. \n\nSleethe watched as she began to walk along the wall, holding her wrist-mounted computer up to the uneven logs as she used a flashlight attachment to illuminate the reliefs and the rolling script. She took photographs as she went, perhaps the computer would be able to recognize any patterns or recurring characters that she missed. \n\nShe was pretty sure that the Krell text was read from top to bottom, like many Asian languages back on Earth. Perhaps so that it could more easily fit on the tree trunks and planks that served as their parchment. Borealan script closely resembled its ancient origins, the letters reminiscent of the cuts and claw marks that their primitive ancestors had carved into rocks with their bare hands. Krell script on the other hand was more complex, made up of swirling lines that flowed into each other like water cascading down the wood. It was almost calligraphic, what tools did they use to produce this? \n\nInterwoven between the text were pictures, comparatively crude when compared to the obvious skill that was required to produce the writing. They depicted what were clearly Krell engaged in all manner of activities, again reminding her of the paleolithic cave paintings that she had studied on Earth. There didn't seem to be any distinct chronology to the carvings, but for all she knew she could be walking around the circumference of the room in the wrong direction. \n\nMuch of it was higher than she could reach, carved into the wood by Krell who were two or even three times her height. Even Sleethe would not have been able to reach many of the reliefs that she could see. \n\n\"Sleethe, what's this figure here?\" \n\nThe Krell lumbered over to her side, crouching down to her level as he examined the picture that she was pointing at. It wasn't a Krell, it almost looked like some kind of machine. It had a bulbous body, with two legs and four arms that more resembled hoses than limbs. There were dozens of Krell crowded around it, as if they were listening to it, or it was teaching them. \n\n\"Benefactor,\" Sleethe replied, her translator picking up on the word. \n\n\"They're Brokers? So that's what they look like...\" \n\nShe returned to her duffel bag and retrieved a handheld scanner that was shaped like a pistol, but with a dish where the barrel would have been. She returned to Sleethe's side and tapped at the buttons on the handle, waving it near the engraving. There was a series of beeps, and then the device displayed a value on her wrist computer's screen. Most of these devices could be synced to her onboard computer, and while she had disabled GPS and wireless network functionality to save battery, it could still communicate with her field equipment at short range. \n\n\"Radiocarbon levels put this log at about five hundred years old. That makes sense, I'm not sure how fast the trees here grow but they're younger than this structure, because they're growing through and around it. Can't say how old the carving itself is, but it's reasonable to assume that it's old. It certainly looks aged and worn. Sleethe, do you know how long the Brokers have been in contact with your species?\" \n\nHe shook his massive head, the loose skin beneath his jaw flapping, and she scratched her chin pensively. \n\n\"You're not old enough then. They must predate your birth...uh, your hatching. Just how old are you anyway?\" \n\nFor all Lena knew he could be three hundred, but based on the larger Krell that she had seen she knew that he couldn't be ancient. He was about average size for a Krell, maybe middle aged, if a term like that could even apply to such a long-lived species. \n\nSleethe shrugged his massive shoulders, Lena chuckling at his adoption of human gestures. \n\n\"I guess Krell don't have birthdays then? I don't blame you, who would want to buy gifts for a relative who lives to be seven hundred years old?\" \n\nNow that she knew what they were, Lena was starting to see more Brokers pop out at her, they were everywhere along the wall. There were depictions of them perhaps teaching or organizing the Krell, leading them, along with carvings of their cigar-shaped spaceships and other vehicles and machines that Lena didn't recognize. \n\nIt was common knowledge that the Brokers and the Krell had a special relationship that predated humanity's first contact, but she hadn't imagined that the two races had been in cahoots for such a long time. The UNN was the third organization to join the Coalition, an alliance of species who were fighting a war on all fronts against the hostile Bugs, with the Borealans being the fourth member. For a long period of time before making contact with humans, the Brokers and Krell had fought the war alone. How they had met and the finer points of their interactions were left a mystery. Broker vessels carted Krell troops to the Pinwheel, and Broker defense platforms ringed the Krell homeworld. It certainly appeared to be a one-sided relationship, very few people had ever seen a Broker in the flesh and they did not participate in combat, but they did finance much of what went on behind the scenes. \n\nThe Krell had not spoken ill of them, as much as Krell could make themselves understood, and they never seemed to be doing anything against their will. They were always happy and friendly, performing their duties without complaint. If they needed to go back home, then it was a Broker ship that turned up to take them away. The personnel on the station joked about Krell showing up in the right place at the right time, it was a running gag that the reptiles appeared when needed and were gone just as quickly, but Lena didn't like being in the dark. \n\nIt was clear by how pervasive the depictions of the Brokers were that learning about the Krell would also entail learning about their mysterious benefactors. \n\nCHAPTER 4: SWEAT AND SCALES \n\nLena removed her wrist-mounted computer, setting it down beside the computer terminal and hooking up a cable to link the two. She had meticulously cataloged the entire interior of the Krell temple, at least everything that she could reach. There was surely a whole Krell alphabet hidden in the photos that she had taken, and now she would offload the task of sorting through them and identifying duplicate characters to the computer. It had taken her a few hours, the heat and humidity taking their tole on her. She was drenched from head to toe in sweat, her hair sticking to her face and her sparse clothing clinging to her body. She had foregone shoes and socks, they just weren't worth the discomfort, electing to go barefoot on the damp wood as she worked. "
    ],
    "authorname": "Snekguy",
    "tags": [
        "dominant male",
        "size difference",
        "long tongue",
        "double penetration",
        "oral",
        "kissing",
        "anal",
        "vaginal",
        "muscle",
        "messy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/return-to-krell"
}