{
    "title": "Mason Ch. 09",
    "pages": [
        "Toni watched the disc several more times before she finally turned it off. She now understood why the disc had frightened her so badly; she knew that James would have told her the same thing if he would have had the chance. She was almost surprised that he didn't have someone picked out for her already but was grateful that he didn't. she had no intention of running out and finding someone just because James wanted her to, for now she would go to work and take care of Jamie, if she met someone, she would deal with it when and if it happened. \n\nShe would have to have a talk with her mother in the morning, she really hadn't meant to yell at her like that but it was up to her to decide when she was done grieving for James. She understood that what her mother did was done out of love as her father said but her mother needed to stop pushing her about socializing and about the house.\n\nToni slept fitfully and groaned when the alarm went off. She opened her eyes to see Jamie peering at her curiously.\n\n\"What's up sweetie?\" Toni asked.\n\n\"Pancakes.\" \n\n\"I see. Did gramma send you in here?\" Toni asked.\n\n\"Yup.\" Jamie replied.\n\n\"Alright, go tell gramma that I'm coming.\" Toni said as she swung her legs over the side of the bed.\n\nShe washed her face and hands before throwing on a house robe and heading toward the kitchen. She knew what was coming, Barbara's apology breakfast which consisted of homemade pancakes, bacon, eggs, and fresh biscuits and fresh squeezed orange juice.\n\nBoth of her parents were waiting for her when she came out from the bedroom. Her mother spoke first.\n\n\"Toni, I'm sorry. I had no right to watch that disc from James; I have no real excuse except that I was trying to help. Your father gave me a good talking to last night and I promise to try not to interfere unless you ask me to.\n\n\"Wow\" Toni thought and wondered what it was her father had said to her mother that she got both a verbal as well as the breakfast apology. She had never received both at the same time.\n\n\"I'm sorry that I yelled at you and both of your apologies are accepted.\" Toni said hugging her mother.\n\nBreakfast was delicious as always and Toni ate heartily sharing her pancakes with Jamie who insisted that hers tasted different. Toni and Barbara were meeting Gina later in the morning so that she could go apartment/house shopping with them while the men watched Jamie. They would look at several places which Glenda researched when Barbara told her that she and Ben were moving to San Diego.\n\nBy the time the day was over, Barbara had brochures to no less than six places to show to Ben. Gina suggested that they grab take out Italian and head back to feed the men. All in all it had been a good day Toni thought as they waited for their order.\n\nJamie greeted her at the door with a cheerful \"Mommy!\" and tried to take the bag of food from her with the intent of carrying it to the kitchen. Toni let him have one handle while she held on to the other; he was getting to be such a big boy Toni thought as she looked at him. He was definitely going to be a heart breaker with his dark eyes and long eyelashes. Already at four he was getting complements about his looks, in a few weeks he would be five and starting school the following year. \"Slow down kiddo.\" Toni murmured as Jamie ran off to help set the table.\n\n*****\n\nMason wondered what happened with Toni during the night, he thought to call her to see if he could hear anything in her voice but realized that he didn't have a valid reason to call her. He would just have to be curious until he saw her again in two nights. \n\nThe board meeting was happening tonight and he wondered how Joyce was doing. She wanted him to go with her but he declined telling her to call him when it was over. Realistically he didn't expect anything to change and he also didn't expect Joyce to stay if there weren't any assurances that something would be done to address the issues. But if she left, it would be her choice and not because she was being railroaded because of her complaints. \n\nJoyce called him at ten just as he was making himself a drink.\n\n\"How'd it go?\" he asked.\n\n\"Well, they listened, they sympathized and thanked me meaning, I got my say and that's all I'm getting.\" she replied\n\n\"So now what?\" Mason asked.\n\n\"I'll stick around to see what happens I guess, but I am thinking about opening my own practice.\" Joyce replied.\n\n\"It does have its benefits.\" Mason agreed.\n\n\"So why come back to a hospital setting and don't hand me that crap about going back to your roots.\" Joyce said.\n\n\"Why not? It's the truth.\" Mason countered.\n\n\"Maybe, but I don't think so or it's not all of the truth anyway.\" Joyce replied, \"But whatever. Did you give up your practice?\"\n\n\"No, I still see a limited number of private clients.\" \n\n\"How many is a limited number?\" Joyce asked.\n\n\"Ten.\"\n\n\"Ten? Damn! Are they related to the Rockefeller's or what?\" Joyce asked.\n\n\"Something like that, look I have to go, I'll see you in a couple of days.\" Mason said and hung up. He had no desire to answer anymore questions about his practice and he had no desire to have a business partner with the exception being Eustace and he sensed that's where the conversation was headed.\n\nHe finished making his drink, sat out on the patio and looked out over the ocean. He liked it here much better than he did Boston and while it wasn't LA, it was definitely doable. He found himself wondering what Toni and Jamie liked to do when she was off but it was too soon to ask her about that. \"Damn!\" he swore as he wondered how Ethan had found the patience to woo Katrina in the human way. He had just barely started and he was tired of it already. Unlike Ethan, he wasn't getting \"a rush\" out of it and he didn't agree that they all should have to go through this in order to mate. \n\nMason made a mental note to make extra coffee to share with Toni when he went back to work, he would start to woo her there he decided, it was neutral ground and a place where she was beginning to feel comfortable again. Mason finished his drink and mentally prepared himself for the long haul.\n\n*******\n\nAll too soon it was time to go back to work. Toni had to admit that she had missed it; it felt good to have another purpose in life other than Jamie as much as she loved him. She watched the disc several more times looking for what she didn't know. Maybe she was looking for that look that James sometimes got when he really didn't want her to do something but it wasn't there. He meant every word that he said to her, he wanted her to find someone to spend her time and life with and he wanted Jamie to have a father figure. \n\nShe ate dinner with Jamie, read him a story and headed to work. This time she parked without hesitation and didn't almost panic when she walked through the doors. She made a conscious decision not to avoid people as she went to the sleeping room. She had begun to realize that she had to make the effort if she wanted to begin living in the real world again. She was on her way to the rounding room when she heard her name called.\n\n\"Toni!\" she turned around to see the cardiologist that had been performing the heart cath when James died. She swallowed hard and then greeted him with a hug and a smile. It wasn't his fault any more than it was hers and she hoped that he knew that.\n\n\"I heard you were back!\" he said hugging her again. \"I wanted to call after... but I didn't. Toni, I am so sorry.\" \n\nToni hugged him again and took his hand in hers.\n\n\"It wasn't your fault any more than it was mine. James wouldn't want you to blame yourself and neither do I.\"\n\nThe cardiologist's shoulders sagged with relief.\n\n\"James wasn't just a patient; he was my friend as well. I miss him as I'm sure that you do too.\" he replied.\n\n\"I do still miss him but you know what? He would want us to move on. Hey, I have to go to report but I'll see you again sometime.\" Toni said and rushed off.\n\n*****\n\nMason was coming around the corner when he saw Toni and the doctor hugging each other. His first reaction was jealousy that was followed by anger. He recognized it for what it was, James had somehow released Toni, whether she accepted the release or not he didn't know but that was what he felt the other night. It had to have been the last disc that he made for her. \"Thank you James.\" Mason murmured as he continued on to his office.\n\nJoyce was already there waiting for him when he got there and it was obvious that she wanted to talk. \n\n\"Hello.\" Mason greeted.\n\n\"Hello yourself, how were your days off?\" she asked.\n\n\"Fine and yours?\" Mason asked.\n\n\"Good, hey I was wondering if you'd be interested in a partner?\" Joyce asked. \"You don't have to answer now, I'm just throwing it out there.\" she added.\n\n\"I have to be honest with you and say that I'm not interested in a partnership primarily because I tend to move my practice from time to time.\" Mason said hoping that she would drop the subject.\n\n\"Yes but with only ten patients we could double your load and....\"\n\n\"Joyce, thank you for offering but I'm going to have to pass. If I decide to have a partner, it will be Eustace Matthews, we've worked together in the past and it works out well.\" Mason interrupted.\n\n\"You've worked with Eustace Matthews? Mr. Tall, dark and handsome? No wonder you only have to see ten clients! Tell me, is he still single?\" Joyce asked.\n\n\"Uh no, he married not long ago to an OB/GYN.\" Mason replied.\n\n\"Damn!\" Joyce said as she headed toward the door. \"Time for report and then rounds.\" \n\nThe night was actually pleasant with Mason being paged only two or three times for restraint orders or something for anxiety. The hospital as a whole seemed calm but Mason knew that that calm could turn into a storm at any time. He decided to take advantage of the lull to see if Toni was in the doctor's lounge. Fortunately, Joyce was in the ER seeing a patient saving Mason from having to tell her where he was going. He grabbed his thermos that he filled with coffee just before leaving home and headed for the lounge.\n\nToni was there eating her lunch and reading what looked like a medical Journal.\n\n\"Hello, mind if I join you?\" Mason asked.\n\n\"Oh, hi.\" Toni replied. \"Have a seat.\"\n\n\"No coffee tonight?\" Mason asked.\n\n\"I walked out without it but I'll be alright.\" she said going back to her article.\n\nMason looked around the lounge and located the coffee cups.\n\n\"What do you take in your coffee?\" he asked when he located the cups and supplies.\n\n\"Five creams and five sugars.\" she replied.\n\nMason grimaced, \"really?\" \n\nToni laughed, \"James used to say that I liked a little coffee with my cream. But that's how I drink it.\" she replied. \n\n\"As you wish.\" Mason said as he poured the coffee and added the requested creams and sugars.\n\n\"Thank you for sharing.\" Toni said accepting the offered cup.\n\n\"You're welcome, last week you saved me from drinking the so-called coffee here by sharing so I'm more than happy to share mine.\" Mason replied.\n\nToni took a sip and then blinked, \"Wow, this ummm packs a wallop but its good.\" she said.\n\n\"I tend to make my coffee on the strong side, the next time; it will be more to your liking.\" Mason replied.\n\n\"Oh no, don't make your coffee to suit me,\" Toni replied, \"I'm just used to my mothers coffee is all, this is fine.\" she added thinking that she had offended him.\n\nThey spent the next few minutes chatting.\n\n\"My parents are relocating to San Diego.\" Toni said. \"We're in the process of looking for a place for them and the place in Florida is going to be rented out until it sells.\"\n\n\"They won't be living with you?\" Mason asked.\n\n\"No, it's past the time when they should have been living their own lives and not taking care of me and Jamie.\" Toni replied.\n\n\"Are you and Jamie going to be alright in that big house all alone?\"\n\n\"I'll be fine although mom thinks that I should sell it but I won't. James bought that house for me as a surprise when we moved here.\" Toni replied.\n\n\"You could just move to a smaller place and not sell the house.\" Mason suggested.\n\nToni had actually thought about that but decided not to but that was before she had watched the last disc. James clearly wanted her to move on and she was ready to move on too and if she stayed in the house, she wouldn't be able to do that, is simply held too many memories and she could swear that there were times that she felt James in the house. Maybe it was time to think about moving, she could always move back into the house later if she wanted to, it was food for thought.\n\n*******\n\nMoving day. Toni looked around the house one more time for anything that her parents may have missed but then they weren't moving far and would be here on the nights that she worked. Her father carried out the last suitcase and put it in the car while her mother strapped Jamie in his booster seat.\n\n\"I'll meet you over there!\" Toni called out.\n\nThe house had a different feel to it, it felt exactly as it had before she and James moved into it making it a home. That was the difference Toni realized, it didn't feel like home anymore and hadn't since James died, it was a place to go to when she wasn't working and no more than that. It was time to move.\n\nToni locked the door behind her and headed over to her parent's new place. As she drove she took note of all of the 'for sale' signs and wished that she had a photographic memory. It really didn't matter; she would just call her realtor once she finally decided if she and Jamie were really going to move.\n\nJamie was already running around the three bedroom condo trying to decide which of the two spare bedrooms would be his while her parents started to unload the car. Later they would go shopping for food and anything else that they would need. Barbara had arranged with the realtor in Florida to let the movers in to pack up the house and in the meantime they would stay with Toni and Jamie until their furniture came.\n\nToni wondered if there was another unit available but changed her mind, one of the reasons for their move was so that she and Jamie could get used to life alone. But it was a big place, Toni mused so they wouldn't have to live in the same building and Jamie would like being close to \"gramma and grampa\". As she thought about it, the list of pros began to grow.\n\nShe wouldn't say anything to her parents until she decided to move here. They already knew that she was thinking about moving from the house and although they didn't say anything, she could see their relief. \n\n\"Hey mom, I'm going to go walk around for a bit unless you need me for something.\" \n\n\"No, we're fine.\" Barbara said as she came out of the bedroom. \n\nToni found the main office and went in; a terse mousy looking man greeted her.\n\n\"How may I help you today?\" he asked without smiling.\n\nToni explained what she wanted and the man who introduced himself as Dudley, brightened considerably.\n\n\"We have some lovely brand new units that I would be more than happy to show you.\" he gushed.\n\nThey made an appointment for the next morning; her parent's could watch Jamie so that she could look at the units without worrying about him running off.\n\nThe next morning, Toni kissed Jamie goodbye and told her parents that she had some errands to run of which none would interest Jamie. Dudley greeted her at the door with a fresh cup of coffee in his hand.\n\n\"I didn't add anything to it as I don't know your preferences.\" he said smiling\n\nHe waited patiently as Toni prepared her coffee chatting with her about things in general. He was impressed when Toni told him that she was a doctor.\n\n\"My goodness!\" he said. \"We have all kinds of professional people here. The building that I'm going to take you to has a dentist and I believe a plastic surgeon living there. If I need anything, I'll know where to go.\" he said.\n\nFifteen minutes later, Toni was walking around a three bedroom condo that was located on the first floor. She liked it but wondered if there was one with a water view.\n\n\"There are four and all of them are empty at the moment.\" Dudley said. \"And they cost considerably more than these do.\" he added. It was obvious that he was mentally calculating his commission if he managed to sell one of them.\"\n\nHe took Toni to the condos and let them sell themselves. He took her to the one that he was almost certain that she would like the least saving the best one for last. Toni bought it on the spot.\n\n\"You don't need financing?\" Dudley asked.\n\n\"No, I'll pay in full and there are some things that I want done immediately.\" Toni replied to a shocked Dudley. \"Give me the total price including any fees and I'll call the bank while I'm here.\" she added.\n\n\"Yes ma'am!\" Dudley exclaimed hardly believing his luck. He wasn't supposed to be working today that was why he had been so grouchy. His commission from this one sale had just moved him up in the race for salesman of the year and the two week all expense paid trip to Hawaii.\n\nToni drove home with a sense that she had done the right thing. When she got home, she piled everyone in her car and took them back to the complex.\n\n\"Why are we coming back here?\" Barbara asked.\n\n\"I want to show you something.\" Toni replied. She couldn't wait to see the look on their faces when they found out that she was moving to the same complex.\n\nBarbara was speechless while Ben just smiled at Toni happily.\n\n\"Do you like it?\" Toni asked.\n\nMoving day for her would be in three weeks; one of the things that she wanted changed was the railing on the patio. As far as she was concerned, it wasn't high enough. She requested that the patio railing be redone so that it would be almost impossible for a five year old who loved to climb to get over it. The second thing that she wanted done was to have the walls painted, as they were they were a boring white, she would drop off the colors that she wanted in the morning.\n\n\"What color would you like for your room?\" Toni asked Jamie who had finally decided which room he wanted for his.\n\n\"Blue.\" he said without hesitation.\n\n\"Then blue it is.\" Toni said.\n\n********\n\nMason continued to make a point of searching Toni out whenever they were at work. They always had lunch or coffee together unless one or both of them was busy. Mason was relieved when Toni told him that she and Jamie were moving to the same complex as her parents. He knew where the place was because he had thought about buying a condo there himself but had decided against it.\n\n\"Who did you talk to over there?\" he asked nonchalantly.\n\n\"Dudley.\" Toni replied. \"He wasn't a happy camper when I walked in but he was about to do a dance when I left.\" Toni replied. \n\n\"When's moving day?\" Mason asked.\n\n\"Three weeks from now, there were some things that I wanted changed before we moved in.\" Toni replied.\n\n\"I would be less than honest if I didn't tell you that I'm glad that you're moving.\" Mason said taking a sip of his coffee.\n\n\"Why is that?\" Toni asked wondering why he was so concerned about where she lived.\n\n\"I just didn't think that it was safe for you and Jamie to be in that big house by yourselves, what if something happened and you needed help? At least in the complex there are other people nearby that you could call for help or send Jamie if you had to.\" Mason said.\n\n\"I hadn't thought about that but you're right.\" Toni conceded.\n\n\"So why are you moving?\" Mason asked.\n\n\"As much as I love that house, it doesn't feel like home anymore.\" Toni replied. \"And if I were to ever meet anyone, I couldn't take them there, there are too many memories and it wouldn't be fair to either me or the other person.\"\n\nMason's heart leapt, while she wasn't actively looking and wasn't ready to look, she was open to the possibility of being with someone else. That only served to reconfirm what he already knew, James had indeed released her. He said a silent word of thanks to James for releasing her and for loving her in a way that he hadn't been capable of at the time. He had been given another chance and he was determined not to fuck it up.",
        "\"Toni, I have tickets to the ball game in LA this weekend and I was wondering if you and Jamie would like to come as my guests.\" Mason said.\n\n\"Shit.\" he thought as his heart pounded waiting for her response. \n\nToni thought about it for several minutes. Jamie loved baseball while she herself could have cared less about it but he would have a good time and that's what mattered.\n\n\"Ok.\" she replied, \"what time do we need to meet you?\" she asked.\n\nEthan was right, Mason conceded as he tried to hide his surprise and pleasure that Toni said yes. He felt the \"rush\" that Ethan had talked about and found it gratifying.\n\n\"It would be easier if I picked you up and drove, I know a shortcut or two.\" Mason replied. \"I'll pick you up at six and don't worry about packing anything other than a blanket in case Jamie gets sleepy.\" he added.\n\nAfter they parted ways to go back to work, Mason went to his office.\n\n\"So what's the scoop?\" Joyce asked.\n\n\"What are you talking about?\" Mason asked as he got ready to go to the dictation room.\n\n\"You and Dr. Jacobson.\"\n\n\"Again, I'll ask, what are you talking about?\"\n\n\"The word is that you two are becoming an item.\" Joyce said.\n\n\"Because we have coffee and lunch together?\" Mason asked. He had forgotten about the rumor mills that ran through most institutions.\n\n\"Yep, so is it true?\" Joyce pressed.\n\n\"No it's not true.\" Mason said, \"And if it were it would be no one's business but hers and mine.\" \n\n\"Do you like her?\" Joyce asked.\n\n\"Don't you have something that you need to be doing? A patient that needs to be assessed?\" Mason asked.\n\n\"I'll take that as a yes but let me give you a heads up; James Jacobson's shoes are going to be very hard to fill if that's where you're thinking of taking this.\" Joyce said.\n\nMason paused; Joyce might be a source of information for him.\n\n\"What do you know about him?\" Mason asked sitting down on his desk.\n\n\"Only that he was drop dead gorgeous, kind of like you and that he loved his wife to a distraction. He was also like you in the way that the nurses always found a reason to call him. One nurse in particular thought that she could swipe him away from Toni but she didn't stand a chance. By the way, how is Toni doing?\" Joyce asked as what seemed to be an after thought.\n\n\"You're good.\" Mason replied chuckling. \"But if you really want to know how she's doing, I would suggest that you ask her.\"\n\n\"Busted.\" Joyce said laughing. \n\n******\n\nThe closer the night of the game got the more nervous Toni became. She hadn't been out socially in over two years; her mother when she found out was thrilled.\n\n\"I knew that he liked you!\" she exclaimed.\n\n\"Mom calm down, it's a ballgame that he had extra tickets for.\" Toni said.\n\n\"If you say so.\" Barbara said and then said no more. She had learned her lesson about pushing too hard.\n\nMason was nervous as well, \"it isn't a date.\" he said to himself as he paced. He picked up the phone for the third time and called the ballpark.\n\n\"Yes Dr. Donahue, everything is just the way you want it.\" the voice on the other end said with just a hint of impatience.\n\nMason paced some more and resisted the urge to call the ball park back again. Instead he went for a walk and ended up at the complex where Toni and her parents would be moving to. Looking at the time, he wondered if anyone was available to show him the building where Toni would be living.\n\nHe walked in to see Dudley packing up for the night. Mason only knew it was Dudley from Toni's very brief description of him. When Dudley turned around, he had a fake smile plastered on his face, this had been another extra shift for him and it was interfering with his favorite television show 'The good wife'.\n\n\"What can I do for you this evening?\" he asked with exaggerated cheerfulness.\n\n\"I was informed that you have some waterfront condos and I would like to see them if there's someone available to show them to me.\" Mason said.\n\nDudley's fake smile turned into a real one at the possibility of a sale.\n\n\"I would be happy to show you those units! There are three left, a doctor just bought a unit last week. May I ask what it is that you do?\"\n\n\"I am a doctor as well, a psychiatrist.\" Mason replied pleasantly. Dudley had some issues Mason realized but he was harmless.\n\n\"Another doctor! Wonderful! Just bear with me for one moment while I get the keys and have the office calls roll over into my cell.\"\n\nMason looked around the office while he waited for Dudley. \n\n\"Ready?\" Dudley asked from behind him.\n\nAs he did with Toni, Dudley showed Mason the one that he considered the least desirable first and then showed him the one next to Toni's last. It was nice enough and had a decent view of the water and according to Dudley; it was only slightly smaller than Toni's.\n\nLike Toni, Mason didn't care for the bland colors but that really was the only thing that he didn't like about it. He also knew that he would have bought the place even if he hated it. Two hours later, a very happy Dudley was escorting Mason to the front door of the office.\n\n\"I'll send some people over tomorrow to make the modifications that I require.\" Mason said as he walked out.\n\n\"Thank you very much for your business!\" Dudley said as he closed the door behind Mason. He would never complain about working an extra shift again.\n\nMason walked home feeling a sense of excitement that he hadn't felt in a long time, probably not since he held Katrina when she had her babies. He stopped walking, looked in the direction in which Ethan and Katrina lived and spoke softly.\n\n\"Good bye Katrina.\"\n\nIt was really over, he had truly let go of her. That she would always have a tiny part of him was a fact that he couldn't change but he was alright with that as he knew that Toni would be.\n\n******\n\nJamie was watching out of the front window for Mason. Toni had already made him go to the bathroom, wash his hands and pack his backpack which contained his blanket, books, coloring books and crayons. \n\n\"Remember to behave and to say thank you\" Toni reminded him when she heard a car pull into the driveway.\n\n\"Okay mommy.\" Jamie said quickly and then he dashed for the door to let Mason in.\n\n\"Hi Dr. Mason!\" Jamie said when he opened the door.\n\n\"Hi Jamie, are you and your mom ready to go?\"\n\n\"Yep!\" Jamie replied enthusiastically.\n\nToni stomach flipped, why she was so nervous she didn't know. It wasn't like this was a date. It was a ball game and nothing more.\n\n\"Come on mom!\" Jamie called to her.\n\nToni forced herself to move toward the front door. If Mason noticed her nervousness he gave her no indication of it as she walked by him. The booster seat sat on the front porch and Mason grabbed it as he walked by. Toni waited by the car while Jamie climbed into the seat and strapped himself in. she murmured a thank you when Mason opened the car door for her just like James used to do for her, chivalry really wasn't dead she thought with a smile.\n\nJamie had a blast at the game talking excitedly with Mason whenever his favorite player did something that he either approved or disapproved of. By the end of the game, Jamie was exhausted, it was way past his bedtime and Toni had no doubt that he would be asleep before they made it out of the parking lot.\n\nSince their team was losing, they left before the last inning was over. Mason wanted to try and beat the rush from the parking lot. Toni gathered Jamie's things while Mason took him to the bathroom; she was finished before they got back. It occurred to her that she had just done one of the many things that James had wanted to do with Jamie and it gave her a bittersweet feeling. Toni felt tears threatening and forced them back when she heard Jamie calling her.\n\nPartway back to the car, Mason picked Jamie up and carried him. By the time they made it to the car, Jamie was sound asleep wearing the baseball cap that Mason bought for him as a souvenir. Jamie roused just enough to strap himself in and went back to sleep.\n\n\"Thank you for tonight.\" Toni said looking over at Mason. \"He had a good time.\"\n\n\"You're welcome.\" Mason replied. \"What about you? Did you have a good time?\"\n\n\"I'm not a big sports fan but yes, I had a good time too.\" Toni replied.\n\n\"I'm glad; maybe we can do it again sometime.\" Mason said.\n\nToni didn't reply but looked out of the window.\n\nMason didn't push; he turned the radio on to a soft classical music channel and drove the rest of the way to Toni's house in silence. Mason carried Jamie in, followed Toni to his bedroom and laid the sleeping boy gently down on the bed. He had a feeling of d\u00e9j\u00e0 vu as he remembered carrying a very drunk James Jacobson to bed for Toni a few years back although he dropped him in as opposed to laying him down on the bed.\n\nMason bid Toni goodnight and instead of driving home, drove to the condo to check on progress. He was paying people to work around the clock; he wanted to be 'moved' in before Toni was. Things he found were progressing nicely, the condo would be ready in another day or so. Tomorrow evening he would stock the kitchen and call his supplier for the cookware that he liked to use after that he would call his furniture supplier. All he would have to tell them was the color scheme and they would know what to do from there. Mason left the condo and drove home thinking about Toni, he was beginning to understand the guilt that she felt about the three years that she and James didn't have together. In his refusal to let Katrina go, he had stolen time from the two of them. Jamie could have been his birth son; Toni wouldn't have had to suffer the loss of someone that she loved. \n\n\"Fuck\" Mason swore and stopped his line of thinking. It wasn't going to change anything; it was water under the bridge so to speak. All he could do now was move forward and remember that he wasn't ready for her then and that he couldn't have loved her the way James obviously had and did. Mason asked himself if he thought that he could love her like that now because if the answer was no, then he had to leave her the hell alone mate or not.\n\n\"So what about it Mason?\" he asked himself in his best Eustace Matthews impersonation.\n\n\"I think I can.\" he said in his own voice.\n\n\"Fuck that Mason!\" He said in Eustace's voice. \"You'd damn well better know!\"\n\nMason took out his cell phone and called Eustace. After the first few minutes, Mason was laughing.\n\n\"What's so funny?\" Eustace asked.\n\n\"I just had this conversation with you.\" Mason said still laughing.\n\n\"What?\" Eustace asked.\n\n\"Never mind, but to answer your question about whether I can love Toni the way that she deserves to be loved, the answer is yes. I can love her like that and I want to love her like that. Mason said.\n\n\"What changed?\" Eustace asked.\n\n\"I think that James finally released her.\" Mason said. \"Remember I told you about that last disc that she hadn't watched? I think that was how he did it.\"\n\n\" I think that you're right but Mason I want to caution you that if you aren't sure that you can love her as she needs and deserves to be loved then you need to walk away. If she is a substitute for Katrina, then you need to walk away from her now.\"\n\n\"Eustace, I've made my peace about Katrina. That it went on for as long as it did was my fault, I knew the moment that I lost her but I stayed hoping for what I knew wasn't going to happen. Tonight, I said my final symbolic good bye to her. Do I still love her? Maybe a little but I suspect that I always will just as Toni will always love James. Does she still have a piece of my heart? I would be lying if I said that she didn't but that doesn't mean that I can't or won't love Toni as deeply as any man loves his mate.\" Mason said.\n\n\"It sounds as though you've given this a lot of thought.\" Eustace said.\n\n\"I have and believe me, if I thought that I couldn't do right by her and that child I would leave.\" Mason said meaning it.\n\n\"Good luck and you know where I am if you need me.\"\n\nMason hung up feeling better after talking to Eustace; he was going to pursue his mate.\n\nToni peeked in at Jamie and watched him sleep for a few minutes before going to her own room. She turned on the disc and watched it three times before going to sleep. As she closed her eyes, she realized what a gift James had given her if she chose to accept it.\n\n******\n\n\"How was the ball game?\" Joyce asked when Mason came into the office two nights later.\n\nMason frowned; he hadn't said anything to anyone about going to the ballgame. \n\n\"How do you know about that?\" he asked.\n\n\"You're not the only one with a private box.\" Joyce said with a grin. \"So how was it?\" she asked.\n\nMason ignored her and left the office in hopes of catching Toni to warn her that they had been seen together but he was too late.\n\n\"What I want to know,\" Kim said, \"is how she does it. I mean she nabbed Dr. Jacobson, he dies and now she's managed to get that yummy looking psychiatrist and she's not been back that long.\"\n\nKim was so intent on her conversation that she missed the warning glances of the nurses around her, by the time she did it was too late. \n\nToni stood silently listening to Kim talk about her. At first she wasn't going to respond but she had had enough of Kim and it was time to put her in her place.\n\n\"Kim, a word please.\" Toni said and walked away.\n\nKim had the grace to blush with embarrassment. For a few days at least she was going to be the topic of the rumor mill, thankfully she would be off for several nights after this. She followed Toni into a consult room and waited to be blasted.\n\n\"Kim, let me start by saying that you're a good nurse and that what I'm about to say is not reflection on that part of you. You took excellent care of James when he was here as a patient and I appreciate that more than you know but you are a sneaky conniving bitch whose only goal is to find yourself a rich doctor to take care of you. While you may be good at your job, this is a stepping stone for you and I don't mean in a good way. From this point on, your only reference to me or anyone else on staff will be in a strictly professional manner. If I hear of you gossiping like that again, we go to your charge nurse and that goes for anyone else that I hear too. Any questions?\"\n\nKim was speechless; she knew that Toni could be a hard ass but wow.\n\n\"I understand and I apologize.\" Kim said contritely.\n\n\"Good.\" Toni said and walked out of the consult room and went to the lounge.\n\n\"There you are!\" Mason said when she walked in. \"We need to talk.\"\n\n\"If it's about us, I already know about it.\" Toni said as she sat down.\n\n\"It didn't come from me.\" Mason said as he sat down across from her.\n\n\"Then who?\" Toni asked.\n\n\"Joyce...\"\n\n\"Joyce Evans? She's the biggest contributor to the rumor mill but what did she say?\" Toni asked.\n\n\"We were seen at the game by someone from the hospital that also has a private box.\" Mason said. 'I'm sorry if you're uncomfortable with us being seen together.\" he added.\n\n\"No, it's alright; I had just forgotten how prolific the mill could be.\" Toni replied.\n\n\"So we're good?\" Mason asked.\n\n\"We're good although we're contributing to the mill as we speak.\" she said laughing.\n\n\"I guess we are but seriously, I really did have a good time with you and Jamie and I would love to do it again.\" Mason said.\n\n\"Under one condition.\" Toni said.\n\n\"Ok, what's the condition?\" Mason asked.\n\n\"You tell me why you haven't cashed my check yet.\" Toni said.\n\n\"I thought I did.\" Mason said lying.\n\n\"You're lying just like you did when you told me that you forgot to mail the bill and I really hate being lied to.\" Toni said evenly.\n\nMason was caught, the fact that she knew that he had lied to her was another indication that she was his mate and that it would be pointless to try to lie to her again.\n\n\"Alright, you got me. I didn't send the bill because I just wanted to help and I didn't cash the check because I didn't want to and I know that you have the money but I just wanted to do that for you.\"\n\n\"Why didn't you just tell me that when I asked you about the bill?\" Toni asked. \"I still would have insisted that you send me one but you wouldn't have had to lie.\"\n\n\"I'm sorry that I lied, so did I meet the condition?\" Mason asked teasing her.\n\n\"Not quite.\" Toni said. \"I'm going to write you another check and I want you to cash it, what you do with it is up to you, give it to toys for tots or finding a cure for diabetes if you want but I want the check cashed.\" Toni said.\n\n\"Deal.\" Mason said already knowing where he was going to donate the money. \"Is Saturday good?\" he asked.\n\n\"If the check is cashed then it's fine.\" Toni replied as she stood up. \"See you later, I have rounds to do.\"\n\nKim happened to be in the hallway on her way back from the blood bank when she saw Mason come out of the doctor's lounge, she thought about approaching him and thought better of it, she really needed this job and she wasn't in the mood for another 'talk' with Toni, once was one time too many as far as she was concerned.\n\n*******\n\nThankfully the office was empty when Mason got back, he really needed his own office, sharing with Joyce was getting to be a pain in the ass especially since she wanted to be so involved in his personal life. The next time he was out of the office, he would see if there were any empty offices available. If Joyce asked him why he wanted to move, he would be honest with her, he needed to get away from her and her constant probing into his personal life.\n\nToni made her rounds, tweaking orders as she went. She could tell that she had been the topic of conversation because everyone stopped talking when she went to the floors. \"Good.\" she mumbled under her breath but she knew that it wouldn't last and she knew that had it been anyone but Kim she probably wouldn't have said anything but just made her presence known.\n\nThe shift passed quickly with Toni admitting only three patients with one going to the ICU. Toni reported off and headed home. Her plan was to sleep until Jamie got home from pre-school and then go help her parents unpack their belongings that had finally arrived from Florida. Her condo would be ready next week and she was planning to pack up some of her own personal belongings. On a whim, she went to the cemetery to see James.\n\nThere was no one else in the cemetery giving her complete privacy, she put the flowers that she stopped to buy on the way in front of the headstone and sat down. For several minutes, she didn't say anything but enjoyed the quiet of the morning and noise of whatever birds were nearby.\n\n\"Hi sweetheart, I was thinking about you this morning and decided to visit. I guess you know that I watched the last disc, it took me awhile but I watched it and I'm trying to do as you asked. We took Jamie to a baseball game the other night and he loved it, by we I mean me and Mason Donahue. It wasn't a date or anything like that; he just had extra tickets that he didn't want to go to waste. The thing is, I keep looking at that disc trying to see of you're doing that thing you do with your eyes when you don't want me to do something. You know, the crossing your eyes thing and I don't see it. I know that I'm rambling and that's because I'm not sure of what I'm trying to say.... It was nice to get out and do something fun and .... James, I like him, I'm not saying I'm going to run off and marry him or anything like that but he was so good with Jamie and... , and I'm, I mean we're going to see him again. I just wanted you to know that I really am trying. Jamie and me, we both still miss you so much but we're better and on our way to being happy again. I have to get going, mom and dad moved and Jamie and I are going to help them unpack, and I'll give Jamie your love.\"\n\nToni drove home, showered and got into bed without eating breakfast. She was just about asleep when her cell phone rang; she looked at the caller ID but didn't recognize the number. On the chance that it might be important, she answered it.",
        "\"Were you asleep?\" Mason asked.\n\n\"Not yet, why?\" Toni asked surprised that she was glad to hear from him.\n\n\"I know that we made plans for Saturday but I was wondering if you wanted to grab a bite to eat for dinner tonight.\" Mason said.\n\n\"I can't, I'm helping mom and dad unload their truck tonight.\" Toni said.\n\n\"I'm available to help.\" Mason offered.\n\n\"No, but thanks.\" Toni said.\n\n\"Who's going to do all the heavy lifting? Surely not you and your parents.\" Mason said.\n\n\"No but...\"\n\n\"What time will you be there?\"\n\n\"Four but...\"\n\n\"Perfect! And I'll bring dinner. See you then.\"\n\nToni looked the phone and then realized that Mason didn't know the exact address of her parent's apartment, she called him back, gave him the information and then hung up. She would call her parents later to let them know that Mason was coming to help. She didn't want to hear her mother say \"I told you so.\"\n\nMason jumped up and ran to the kitchen trying to decide what to make for dinner. In the end he decided to go with something simple, Pizza bread and a tossed salad, the bread could be assembled and baked there and the salad could be made just before he went. He checked his supplies and then called the grocery store to have what he was missing delivered. While he waited for the delivery, he called over to the condo to check on progress there, he hadn't even begun to figure out how to tell Toni that he bought the condo next door to her. After thinking about it he decided that there was no reason to tell her at this point, it would serve no real purpose.\n\n*****\n\nAs soon as Jamie heard Mason's voice, he flew out of what would be his room.\n\n\"Dr. Mason!\" he squealed happily.\n\n\"Hi Jamie.\" Mason greeted with a smile. \"Where's your mom?\" he asked.\n\n\"In the kitchen with gramma.\" Jamie replied as he took a bag from Mason.\n\n\"Careful, that's pretty heavy.\" Mason said as he relinquished the bag.\n\n\"I don't know mom.\" Toni was saying when Mason walked into the kitchen. \"Yellow is so... old.\"\n\n\"The term is retro and ... let's ask Mason.\" Barbara said.\n\n\"What are we talking about?\" Mason asked.\n\n\"I want to paint the kitchen yellow but Toni thinks it too old fashioned. What do you think?\" Barbara asked.\n\n\"Don't do it man.\" Ben whispered when he came into the kitchen.\n\nTaking Ben's advice, Mason said to Jamie.\n\n\"How about we get those pizzas ready?\" and he hurried off.\n\n\"Coward!\" mother and daughter called after him laughing.\n\n\"You're good for her and Jamie.\" Ben said quietly, \"She just doesn't know it yet but give her time and she will.\" he added. \n\nMason looked at the two women playfully arguing over the proposed color of choice for the kitchen and then at Ben who clapped him on the back and walked away leaving Mason and Jamie alone top make the pizza bread.\n\n\"Ready?\" Jamie asked happy to be helping.\n\n\"I'm ready.\" Mason replied looking at a still laughing Toni. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "drama",
        "romance",
        "vampire"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mason-ch-09"
}