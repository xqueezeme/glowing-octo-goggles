{
    "title": "Cat Fight Ch. 29: Mother",
    "pages": [
        "TERMS \n\ntinton - 2 1/2 seconds\n\nspecton - 2 1/2 minutes\n\nToton - 2 1/2 hours\n\nminton - 2 1/2 days\n\ndaycon - 2 1/2 weeks\n\nMalant - 2 1/2 months\n\nquant - 2 1/2 years\n\ngalant - 2 1/2 centuries\n\nMetson - 2 1/2 inches\n\nmaclon - 2 1/2 feet\n\nheckson - 2 1/2 miles\n\ntetson - 2 1/2 acres unit - 2 1/2 ccs\n\nTac - 2 1/2 pounds\n\nMayan Terms \n\np'uchik - spank\n\nnohchil - Chief\n\nAhau - King\n\nk'aat - Claim\n\nk'iimil - Death\n\ntaak'in - gold\n\nCharacters\n\nBill Axor (AKA Ambrose) - Lion clan, Cit-Chac-Coh\n\nKing Tomco Traxor - Bill's dead father, Lion clan\n\nKing Tobias Traxor - Bill's dead brother, Lion clan\n\nQueen Trianna Axor - Bill's dead mother, Lion clan of Mandria\n\nQueen Niaco Traxor - Tiger clan, Tobias mate, now Bill's\n\nTwitty Glax - Grey Tabby clan, bill's body guard and mate\n\nGlenna Nox - Bengal clan, Bill's body guard and mate\n\nMikos Glac - Chartreux clan\n\nSkylos - Captain of Xendran star fleet - Wire hair clan\n\nHenna Glac - Chartreux clan, Mikos mate, Xendran Doctor\n\nTheta Panadon - Cheetah clan\n\nCornelius Glax - one of Bill's Uncles, Grey Tabby clan\n\nConrad Nox - Bill's other Uncle Bengal clan\n\nAssassin group - Jaguar clan\n\nsecond assassin group - Ocicat clan\n\nTypree Maxor - Sub King of Mandria, Lion clan\n\nAdina Maxor - Paladin Princess of Xendra, Sub-princess of Mandria, Lion clan\n\nTimora - The great mother of the feline people, mate of first tribal leader\n\nHippacamp - Timora's father, father of modern Xendran doctors\n\nKindra - The Female half of the start of Ambrose's line\n\nKnights \n\nGeneral Roth - Leopard clan\n\nGregor - Cougar clan\n\nGwayne - Panther clan\n\nThomas - Lynx clan\n\nPaladins - Female Knights \n\nWrena - Leopard clan, Roth's mate\n\nCetana - Cougar clan, Gregor's mate\n\nDawney - Panther clan, Gwayne's mate\n\nMileen - Lynx clan, Thomas's mate\n\n----------------------- \n\nAmbrose looked at the readouts of the amount of heavily armored ships still on the surface. Grabbing his com. he continued with the plan that he'd thought of.\n\n\"I want the all best navigators that you have on this, cousin Typree. The slightest mistake and almost all of you will be dead in moments.\" Ambrose walked to Skylos watching a moment as the male made several complex calculations. \"I want them to then coordinate with Captain Skylos. We need to get this done as fast as possible with those ships they have we need to strike first.\"\n\nEveryone agreed then they clicked off. Twitty was beside Skylos writing everything that he was saying. Her face screwed up in frustration at the complexity of what he was doing.\n\n\"Shouldn't you let the computer do that?\" She asked when he stopped to take a breath.\n\n\"No, I do the calculations then run them through the computer. There are so many unknown variables that I can't completely trust what the computer spits out. It's a good tool though I feel it is only that, a tool. I feel it can't take the place of a living beings complete actions or reactions... If they could then I'm afraid that those ships would no longer require living operators.\" Skylos explained to Twitty.\n\n\"I can agree with that, though can't living beings also make mistakes?\" Twitty asked.\n\n\"Yes, we can, that's why I run it all through the computer to check my calculations.\" Skylos replied.\n\nTwitty could only shake her head it was bad enough that all this was beyond her. It also seemed that Skylos was speaking in another strange language. Shaking her head again she bent over the note page as she wrote to the best of her ability what Skylos was saying.\n\n-----------------------------------------------------------\n\nConrad Nox was pacing the room after seeing the bastard king's ship, plus that of the sub-king of Mandria. Then there was the fact that the Mandrian king's fleet was also almost completely intact. Another alarm was going off as he saw several more wings of the bastard king's ships approaching.\n\nSnatching a com Conrad started shouting orders. Again there was light sound of laughter behind Conner causing him to whirl snarling at the female.\n\n\"You're far too late you fool!\" The female said between great gasps of air. \"He's already here, accept you're fate to die like one of royal blood should.\"\n\n\"One of royal blood should not have to face a bastard pretender to the throne!\" Conrad snarled as he reached back bringing his fist hard against the females face. Conrad's face held shock as the female just smiled widely at him.\n\n\"Again you fool you don't realize who he truly is. You should be afraid, very afraid as I said I have seen you dead at my paws. With him here much of my power has returned, soon I doubt even your silly protective head gear will save you!\" Laughing even harder the female stopped suddenly staring at Conrad.\n\nWalking to the man at the console Conrad whispered to the man then walked out the door. The man started to order the fleet to start departing awaiting their confirmation that they were finished cycling their engine up. Two spectons later one ship was lifting as the rest were finishing their cycles.\n\nThe Mandrian and Xendra fleets were suddenly appearing above the Talandian fleet. The two fleets started laying waste to all on the ground even as a single craft ascended then flashed out.\n\n\"Damn it!\" Skylos was shouting. \"One of the bastards got away!\" Skylos was snarling angrily.\n\n\"Not to worry,\" Ambrose shouted as the two fleets started to land. \"Alert all worlds of the ship so we know where it goes.\"\n\nSkylos snarled then nodded as he set out a system alert. \"Done sire; no matter where they go we'll know.\"\n\nA moment later all the ships were down with a multitude of soldiers emerging. Within a quarter specton a huge sword battle ensued Ambrose and the others surprised that the Talandrians fought as well. With broad smiles Ambrose, his knights and paladins started to cut a wide path through the defenders. They had almost reached the main building when Ambrose felt a huge build up of power much like his own. The largest he'd ever felt.\n\nRoth blocked a sword heading for Ambrose's neck as he suddenly stopped staring at the door of the building. \"Sire?\" Roth asked, \"Are you alright?\"\n\nShaking his head to clear it Ambrose said nothing as he started to pull his people to the side away from the door. If this was a force against them they might have trouble. \"I am feeling a huge amount of power on the other side of that door I...\"\n\nIt was at that moment that there were the sounds of several males screaming. Then suddenly the door exploded outward carrying at least ten males with it. At this point most of the battle stopped as almost all stared at the female lion clan with yellow hair that floated out of the doorway. Floating right to Ambrose she growled as she stared hard at him. \"So you are the bastard that all this is about! I should kill you.\"\n\nAmbrose touched his head as she tried to invade his mind. The female was pushing as hard as she could surprised she could only enter the first level. Then she was shocked when she was pushed out! So it was true Trianna's son was back plus he was the king. Pushing harder she saw that he had all the powers of Trianna's family. Then there was the fact that he had hers also at an even stronger level.\n\n\"I know not who you are female, though if you continue you will be dead, severely hurt, or unconscious. This will be for quite a while it's your choice.\" The female suddenly smiled as she dropped her attack then back away.\n\nAmbrose stared at the female then suddenly smiled as he nodded. This of course started the battle anew for the next toton. Finally with a great many laying dead or dying it was over. Ambrose looked around at Roth and Gwayne on his right, and Gregor and Thomas on his left. Behind him was Wrena, and Dawney on the right behind their mates. Cetana and Mileen were on the left behind their mates.\n\nAmbrose smiled at the look of satisfaction on all their faces. They were all covered in blood including him. As he looked down he could see that the new armor had served him well. Nodding to Roth and his Paladin mate, Ambrose moved toward the building that the female had retreated into.\n\n\"Mate!\" Ambrose heard from two female voices behind him as he was advancing forward. \"Don't you dare think that you are going in there without us!\" Shaking his head slightly as Twitty and Glenna moved up even with him.\n\n\"I am in no...\" Ambrose started.\n\n\"Mate the last time you gave assurances like that you almost died. I for one do not wish a repeat of that action!\" Twitty said her arms and paws crossed as she stared at Ambrose with a heated look.\n\n\"I agree mate,\" Glenna said then leaned close. \"I am also sure that you don't want to incite the wrath of Queen Niaco. We both know just how forgiving she can be. I believe she is the fiercest of all your mates, plus her sword play is at present beyond ours.\" Here Gleena and Twitty smiled, they relished the challenge.\n\nShaking his head in disbelief a third time Ambrose turned with his two bodyguards, mates back toward the building. Upon entering slowly with all their swords drawn, Ambrose's eyes were wide at the total carnage contained within. There were bodies everywhere many with crushed heads and limbs. Sitting in the midst of all this sat the small female that had approached Ambrose.\n\n\"So,\" she stated without looking up. \"The battle is over, good a great many deserved the fate that you dealt them today. I feel that you have a great many questions as I do. First, do I have the pleasure of addressing Ambrose Billous Axor? Formally known as Bill Axor of Earth?\" Ambrose stared at her a moment then nodded.\n\n\"I take it you are well informed, not many outside the family know that I am one and the same.\" Ambrose replied hardly surprised at her question.\n\nThe female nodded glad that that Ambrose was taking all of this as if it was an everyday conversation. \"Second were you not involved in an accident in which the both of you and your mother were injured?\" Again Ambrose nodded looking closer at the female seeing that she was appearing to look more and more familiar.\n\nAmbrose's tail was starting to twitch back and forth a little more vigorously. \"I feel that I know you or at least of you. Though for the love of the great feline I can't seem to pull a name from my memory.\"\n\nThe female sighed; it was as she feared the memory block that had been administered was still partly in place. \"It is obvious that part of the memory block is still in place. If you will allow me to clear you then I think that you will finally have the answers you seek.\"\n\nBoth Twitty and Glenna drew their swords placing them at the female's neck. Hissing Twitty stated, \"This is the king of the realm. One false move, your head will be beside you faster than you can blink!\"\n\nThe female gasped as she'd not seen either of the king's mates move. \"I have no intention of ever harming the king. I only wish to clear his mind to see the rest that has been hidden from him. If he so wishes it I will submit to execution afterward.\"\n\nBoth Twitty and Glenna nodded without taking their eyes off the female. Turning the small female bowed to Ambrose bowing as she awaited his answer.\n\nAmbrose had his paw on his chin true he wanted the rest of the memories there were so many things he still couldn't remember. Finally a full two spectons later he approached the female. \"There are a great many things that I can no longer recall. IF you can help restore them, then I will owe you debt, that I will do all I can to repay.\"\n\nThe smallish female shook her head, \"I do not do this for a reward sire. I do it because it is what needs to be done, what has to be done. When you are ready sire I will start.\"\n\nAmbrose knelt beside the female whispering in her ears causing her to gasp then nod. Placing both her paws on either side of Ambrose's head she closed her eyes.\n\nAmbrose waited a moment then felt his mind start to flood with untold memories. But the one that soon had him in tears, were those of his mother. \"Mother,\" he whispered, \"you should have let me do more. I am sorry I haven't been the son you wished.\"\n\nTwitty and Glenna both became alarmed when the tears started to fall from Ambrose's eyes. \"I am sorry sire these last are the hardest for the both of us to see. Ah! I see you are finally starting to see who I am.\"\n\nAmbrose's eyes snapped open as he stared at the small female he'd placed his trust in. In an almost inaudible whisper Ambrose stated, \"Yes. I also see why you have been gone so long.\"\n\nThe small female's eyes went wide as she stared at Ambrose seeing the look in his eyes. \"So all has been revealed son of Trianna Axor this is good.\"\n\nAmbrose nodded then turned to the female. \"It is good also that you are now free never again to be subjected to the pain and humiliation. I believe that there are a few people out there that would be more than glad to see you.\"\n\nThe female's head dropped as she shook it no, \"With all that I have done, I am afraid that even you can allow me to remain alive. Many of the things I know, I can never forgive myself for.\"\n\nAmbrose drew himself up to his full height, \"If you think, for one moment, I am going to let you simply fade into the sun, YOU are far mistaken!\" Ambrose's roar had the female's head snapping up.\n\n\"You are strong, though I have been at this for a very long time. Even you with the vast power you possess you couldn't hold me long. I...\" the female was saying when Ambrose stared her in the eyes.\n\n\"You may have been, no longer. Don't make me have to hurt you to keep you here.\" Ambrose warned shocking the female with the force of his warning.\n\nBlinking rapidly the female lowered her head in defeat. \"Sire, I do not wish to battle with you. I can feel the sheer amount of power that you have. Those out there that you say would be more than glad to see me, have no idea I am alive. It is perhaps better that we leave it that way.\"\n\nBoth Twitty and Glenna were looking at both of them their head going left and right. They were trying their best to follow whatever was going on between the two of them. There was a great commotion outside the building, Ambrose went to Twitty, and Glenna telling them to keep all out 'til he got this sorted.\n\nBoth females gave Ambrose an incredulous look then nodded as they moved out the door way. \"You do realize that they won't last that long with several out there?\" The small female stated with a slight chuckle.\n\n\"They are far fiercer than you think. They will give us enough time to finish this. I know that you agree, though I have just started to develop the sight, I know you see more. So I'll ask again, are you going to try to fade away causing me to hurt you to keep you here? Will you come out with me to meet those out there after this victory?\" Ambrose advised the small female.\n\nSighing, the female stood walking to Ambrose, \"As if you are really giving me a chance to escape.\" Thinking a moment more she nodded toward the door. \"For once I think I will take the chance that has been given. I have always followed the safest path; perhaps, just perhaps it's time I move in a new direction.\"\n\n\"So before we go, where did that treacherous uncle of mine go?\" Ambrose asked, and then a strange look came over his face. \"NO!\" He roared as he grabbed the female throwing her over his shoulder running for his ship. \"Roth! Finish up here! That bastard uncle of mine is heading for Xendra! Skylos! Get the ship airborne!\"\n\nThe doors slid shut with both of Ambrose's mates just barely getting on board. Even as the ship accelerated rapidly out of the atmosphere, Ambrose was putting the small female down. \"I hope the Captain is as good as I feel he is.\" She stated.\n\n\"I am Ma'am,\" a voice stated behind her. \"This ship has been stripped down; it is by far faster than it was. We'll make it. Xendra sire?\"\n\nAmbrose nodded as he turned to the small female again. He was about to speak when the female gasp. Behind Ambrose Adina had just stepped out of the supply room.\n\nWhirling back Ambrose's mouth dropped open. \"Adina what are you doing here?\"\n\n\"I came aboard to gather as much as I could to help the injured I... Cousin why are you here?\" Adina asked confused a moment. Looking around she asked, \"Are we in space? What has happened?\"\n\nTaking a deep breath Ambrose started to speak when he felt the grip of the small female increase on his arm. Turning he saw that she was shaking her head no. Ambrose gave her a stern look then nodded yes. Sighing she held still a moment then also nodded yes.\n\n\"My traitorous Uncle is on his way to Xendra, I believe he intends to murder Queen Niaco. I cannot allow this to happen. As soon as I realized it we took off for the ship. I'm sorry that you won't be able to attend the injured.\" Ambrose tried to explain.\n\nAdina was nodding her understanding when she noticed the small female that was sitting next to Ambrose. Then she was staring, for the life of her Adina could swear that she knew the woman. \"I'm sorry ma'am,\" she said. \"You appear to be familiar to me. Just who are you?\"\n\nFrom behind Ambrose near the outer hatch they heard, \"That is a very good question Princess Adina, one that the both of us would also like to know.\"\n\nAmbrose turned to the small female looking deep into her eyes then nodding. \"Adina, you and Typree were told that your mother was killed when you both were very young am I right?\"\n\nAdina's eyes narrowed before she stared at Ambrose then answered, \"Yes, we were told it was a horrible accident that took her life. I can't remember her, though Typree has told me that she was as beautiful as Aunt Trianna.\" Tears were now starting to fall from her eyes. \"I have so missed having a mother.\"\n\nLooking down at the small female Ambrose saw that she had an almost pleading look in her eyes. Again Ambrose nodded his head yes, causing the female to sigh.\n\n\"I know not what reason your father king Milgon had for telling the both of you this. I recently found that your mother is in fact alive.\" Ambrose told a shocked Adina.\n\nBoth Twitty and Glenna were staring at Ambrose then the small female. \"M...m...mother is alive? How? I've seen the wreckage nothing could have survived that!\"\n\n\"She wasn't even in the carriage.\" Ambrose moved from in front of the female bowing to her. \"Adina? I'd like to introduce you to Trilltana Axor, your mother.\"\n\nAll three of the other females in the room were in shock their mouths wide open. Adina dropped to her knees as tears started to flow. \"Mother,\" Adina said in a tiny whispering voice.\n\nTrilltana barely lifted her head as she nodded slowly."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "body modification",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/cat-fight-ch-29-mother"
}