{
    "title": "Glow Ch. 02",
    "pages": [
        "Complications \n\nI slept late Sunday. By the time I woke up, Mom was off with her golfing buddies, Karen was still asleep and Dad was in the garage, loading ammo for his next match. I slurped microwave noodles and munched a dinner roll for lunch. At 1:20, the doorbell rang. It was a guy in coveralls, holding my car keys. \"Here you go, sir. Your car's in the driveway.\" He trotted to a pickup idling at the curb and took off. \n\nI walked out, looking for my car. There was a Fiat in the driveway, but it sure didn't look like mine. It was the same year, model and color, but it was freshly washed and waxed, looking as if it had just come off the showroom floor. The tires were new, top-of-the-line Michelins, gleaming with Armor All. I looked closer. They were V rated, good for 149 miles per hour, easily twice what the car would do, considering the state of the engine. I opened the driver's door. The interior was spotless. It had been carefully detailed. A Ziploc bag on the passenger seat contained a bunch of loose change and a thumb drive that I'd lost the previous summer. I climbed in and turned the key. The little car started instantly and ran so smoothly and quietly that I wasn't sure it was running at all until I checked the tach. I shut it off and popped the hood. The engine had been steam cleaned. All the wires were new as was the distributor, the oil filter and the cracked air cleaner housing that I'd repaired with duct tape. I closed the hood and checked underneath the car. The entire exhaust system was new, including the catalytic converter. I had no doubt the oil had been changed along with the fuel and air filters and the spark plugs. Holy shit!! \n\nI sent Cheryl a text. - Call me - \n\nTwo minutes later, my phone rang. \n\n\"Hi, Ethan, what's up?\" \n\n\"You mean aside from getting a new car? Jesus, Cheryl, I didn't expect this! Shit, they not only gave me four new super-duper tires, they rebuilt the whole fucking car! It must have cost a fortune. What the fuck?\" \n\n\"Take it easy, Ethan. It's no big deal. You're part of the Group and, if I may say so, you made a great big motherfucking impression on everybody last night. We take care of each other. That's part of the package.\" \n\n\"Cheryl, I appreciate it, I really do, but you have to look at it from my side. Every dime I have comes from a shitty part-time job. Fifty bucks is big money to me. It might be irrelevant to you and your friends, but not to me. You guys are fantastic, but I'm seriously worried that I'm not going to be able to fit into your world.\" \n\n\"Ethan, we know all that. We discussed it before I invited you over. It's going to take some getting used to on all our parts. I'm sorry if I hit you with too much too soon, but you need to understand that the Group isn't made up of my friends, they're your friends, too. You can't know what a hit you were last night! Every girl who was there is walking around two feet off the ground today, dreaming about your mouth and your pecker.\" She paused for a moment. \"We don't care that you're not rich or that your parents don't belong to the country club or that you don't drive a Ferrari. We like you. Rita and Alex want to marry you and have your babies.\" She laughed. \"After last night, I wouldn't be surprised if Ruth and JoAnn let you fuck them someday. You're a goddamn star!\" \n\n\"Uhh, wow. Shit, I don't know what to say. I'll try my damnedest, that's for sure.\" \n\n\"Just be yourself. You don't have to try to impress anyone. You're in solid with us. We'll tone it down, don't worry. And don't worry about your car. We take care of each other and there's no quid-pro-quo.\" \n\nI was sitting in the living room, trying to get my head around recent developments when Karen came down the stairs. She was wearing very short gym shorts and a crop top that was just long enough to cover the bottom of her boobs. \n\n\"Wow, I slept like a rock! My bed is so much better than that lumpy piece of shit in the dorm.\" She closed her eyes and stretched arms over her head, facing me. Her top slid up, baring her nipples. Her glow plainly told me that she was showing off. She kept her eyes closed and her arms up, working her shoulders side-to-side, giving me plenty of time to stare. Her tits really were nice. I started to get hard. Her eyes opened and she caught me staring. I didn't try to look away and she didn't lower her arms. \n\n\"What do you think?' she asked. \"Not so bad, huh?\" She pulled the top up to her chin. \"What do you think?\" \n\nI played along. \"Very nice. Any guy would be happy as hell to get his lips on those.\" I dropped my gaze to her crotch. \"He'd probably be happy as hell to get his dick in what you've got in there, too.\" \n\n\"Think so?\" She let her top fall. \"Come with me for a minute.\" \n\nKaren led me up the stairs to her room. She closed the door, turned to face me and pulled off her top. Her tits were excellent; firm and round with no sag at all. \n\n\"Tell me the truth. How do you rate these babies?\" \n\n\"They're terrific. I'm sure lots of guys have told you so.\" Karen's nipples were hard as hell. What the fuck was she up to? \n\n\"Sit in that chair,\" she said, pointing to a well-padded reading chair in the corner. I took a seat. \n\nKaren hesitated for a moment, then dropped her shorts and stepped out of them. She wasn't wearing panties. \n\n\"I need your honest opinion,\" she said. Her glow showed nervousness and some fear, but also determination. It was one-third gold. She was horny and trying to hide it. She stepped close and rested her right foot on the arm of the chair. Her crotch was a foot and a half from my face. \"I need to know if I have an ugly pussy.\" \n\nNow, how does a brother answer a question like that? I guessed the best solution was to be honest. \n\n\"First, I haven't seen all that many except online. Some of them are so smooth and tight that they're hardly visible. Some look like the 'after' photo of a halibut explosion. Yours looks just fine. I can't imagine any guy not wanting to get his face right in there, followed by his dick. Do you think there's a problem?\" \n\n\"I just think it looks gross! I've never seen one that looked attractive and mine looks like crap.\" \n\n\"Karen, you're not supposed to like the looks of vaginas. You're straight, right? I sure don't think dicks are attractive, but girls seem to be drawn to them, just the way guys are attracted to what you've got. Take my word for it; any guy I know would think that's a great looking pussy. What the hell brought this on, anyway?\" \n\n\"I'm dating a guy right now who won't go down on me. I've been with three other guys and only one of them would eat me. They all expected me to fuck them on the first date and they all wanted blowjobs, but it was a one-way deal. Two of them told me that if a girl wouldn't suck them off and swallow their shit, that would be a deal-breaker, but when it came to returning the favor, they shut me down. They'd fuck me and accept blowjobs, but wouldn't give me head. Is it because I'm repulsive down there?\" I didn't have to check her glow to see that she was ready to cry. \n\nWell, shit! How could I explain to her that men are selfish animals? \n\n\"Karen, men are selfish animals. Not all of them, but a lot are only interested in getting what they want from a girl and moving on. These days, casual sex is the norm. That's the way guys want it. I don't really have to tell you this, do I? Where the fuck have you been living?\" \n\nKaren backed up a step and stood with her head down. \"I know, but I keep thinking some guy will like me for something other than my oral skills.\" \n\n\"Well, I shouldn't have to tell you this; you're the older sister, after all, but you need to start dating guys who are willing to get to know you before having sex. If they won't do that, they're not going to be what you want in a guy. And when you do have sex, it's just wrong for a guy to insist you blow him if he's going to refuse to blow you.\" \n\n\"I know you're right, but I get so lonely and horny. I end up going on dates with guys who aren't interested in me as anything except a mouth and a cunt.\" She spit that last word out with contempt. \n\n\"Karen, you're my sister and what you've been saying is the opposite of sexy, but the way you look is sexy as hell. You want proof of what your body does to guys?\" I stood up, unsnapped my shorts and let them fall. There had been no need to manipulate my glow. Seeing Karen's nude body had me standing tall. \n\n\"Oh, wow.\" Her glow shaded into light green with gold highlights. The sight of my dick had improved her mood dramatically and was making her horny. Tentatively, she reached for me. When I didn't move, she wrapped her hand around me and squeezed. With her eyes locked on my erection, she said, so softly that I could barely hear her, \"Remember what you said about cocks not being attractive\"? Her hand stroked me. \"This one is very, very attractive.\" Karen used her thumb to spread drops of pre-cum around the head of my dick. \"Really, very attractive.\" She suddenly seemed to wake up. She snatched her hand away. \n\n\"Shit!! Ethan, I'm sorry! I don't know what I was thinking. We shouldn't be doing this. Jesus, you're my brother!\" Her eyes filled with tears. She covered her face with her hands. \n\n\"Karen, it's okay. I understand, you're having a rough time. I'll help you any way I can.\" I hugged her, turning to the side so as to avoid poking her in the belly with my erection. She stood still, accepting my hug, sobbing quietly. I dialed back the blood flow to my dick and it wilted. Karen put her arms around me and hugged me. I felt her tears on my chest and her breasts against me. I left the faucet turned off all the way. \n\nWe stayed that way for several minutes, then she looked up at me. She smiled. \n\n\"This is beyond inappropriate, you know.\" She sighed. \"It feels so nice, though.\" She snuggled against me. \"Too bad we're brother and sister.\" Karen released me. She began getting dressed and I followed her lead. Without another word, she opened the door and made her way downstairs. \n\nOther than complementing me on the good job I'd done cleaning my car, no one in my family had a clue about the work that had been done on it. \n\nI was behind on my homework. Usually, I do it on Saturday and take Sunday off. I spent three hours after dinner getting it right, watched an episode of \"The Big Bang Theory\" and went to bed. \n\nIn my dream, I was trying to stop my car before I crashed, but I couldn't reach the brake pedal. Then the car started to shake. The car morphed into my bed. \n\n\"Ethan, wake up!\" My eyelids weighed a ton. I struggled to open them. Karen was standing next to my bed, illuminated by the streetlight. She was wearing a cotton pajama top that fit her like a sack. She shook my bed again. \n\n\"Are you awake?\" \n\n\"Yeah, what's going on? What time is it?\" \n\n\"It's a quarter to three. I can't sleep. I keep thinking about what you said this afternoon.\" She hesitated. Her glow was filled with guilt and sadness and hornyness. \n\n\"You said you'd help me any way you could. Will you help me?\" \n\n\"Sure. What can I do?\" \n\nKaren sat on my bed. \"I need to know I'm not repulsive.\" She looked down. \"My pussy, you know? It bothers me so much! I loved it when Rob went down on me. It felt so good! Much better than being fucked. I like fucking. I can get off by being fucked, but it's not the same. I came much harder when he ate me. I need to know that he wasn't doing it just to make me feel good. He told me he loved doing it, but I can't help thinking he didn't really want to, that he just closed his eyes and pretended it was a pretty pussy.\" The sadness in her glow almost broke my heart. \n\n\"Karen, I told you the truth when I said you have a great looking pussy. It looks clean and smooth and delicious. I can't imagine why some guys don't want to go down on a girl, but it's a fact. Personally, to me, there's nothing sexier than eating a girl. It's so intimate! I mean, you're right there, right where she lives, right where all the great feeling comes from! What could be better than that?\" \n\nKaren sat stock still with her eyes closed. She opened her eyes, took a deep breath and blew it out, puffing her cheeks. \"I believe you.\" She tapped her temple. \"I believe you here. But I can't believe it here.\" She laid her hand on the middle of her chest. \"I don't feel it in my heart. I need to feel it here, where it counts.\" She sat up straighter, determination strong in her glow. \n\n\"I'm going to ask you to do something for me. I don't expect you to agree. I won't blame you if you tell me to get out.\" Guilt and sorrow and despair fought hope and love for space in her glow. \n\n\"Karen, you don't have to ask. I said I'd help you any way I can and I meant it. Why don't you lose that top and come here?\" I flipped the sheet down and kicked it off the foot of the bed. I was nude, the way I always sleep. Without hesitation, Karen unbuttoned her top and tossed it to the floor. She lay beside me and held my face in her hands. \n\n\"This can't be anything other than sex. I'm not looking for a romantic relationship with you. Doing this is wrong already. I wouldn't be here ...\" \n\n\"I know why you're here. It's okay. Just relax and let me do this for you.\" I grinned and shook my head. \"Well, it's not just for you. I love eating pussy and I know I'm going to love eating yours.\" \n\nKaren was so ready, her glow so filled with anticipation and desire that I decided to skip the preliminaries and get right to it. I kissed the insides of her thighs, going back and forth with licks and light kisses on her lips, tasting her growing wetness. I slipped two fingers into her and licked around her clit. She gasped, a long \"ahhh\" and tilted her hips toward my mouth. \n\nWhat followed was tremendous fun. I ate Karen to heights she'd never known, working her glow, with my face buried in her, tasting her and using every trick I'd learned. I led her up to sharp peaks and down through beautiful valleys. She came hard and she came softly. I don't know how long it went on. Eventually, I brought Karen down to earth, ending her orgasms and leaving her calm and happy and confident. \n\nKaren's glow was an array of peaceful and satisfied pastels. She was relaxed, lying on her back, looking very sexy in the dim light. The feelings of inadequacy and doubt were gone, replaced by a positive body image and enhanced feelings of self-worth. Next to her, also on my back, I was feeling monumentally horny, but very good about what I'd done for her. My dick pointed at a sharp angle toward my chest. \n\nKaren turned toward me. She patted my chest and kissed my shoulder. \"That was wonderful, Ethan, just wonderful. You're the best brother ever.\" Her hand moved down, stopping just short of my erection. \"We do seem to have one slight problem, though.\" She gripped me, moving her hand, jerking me off. \n\nI put my hand on her wrist. \"No, Karen. That's not why you came in here. I'll be alright. You don't need to do that.\" \n\n\"I want to. Actually, I want to climb on top of you and fuck you, or at least suck you off. I can't leave you like this after what you did for me. Let me do this, please.\" I took my hand off her wrist. Frankly, I was horny as hell and hard as a rock. I was planning to jerk off as soon as Karen left, anyway. It seemed perfectly reasonable to let her do the job. \n\nKaren's voice was soft and sexy. \"Do you want it fast or slow?\" \n\n\"Slow, nice and slow.\" Karen got to her knees and moved between my legs. She fondled my balls and lowered her head, letting me feel her breath on my cock, stroking me slowly. Her tits swayed gently to the rhythm of her hand. I was ready to pop, but I kept a lid on my trigger, staying just a hair away from orgasm. I put my hands behind my head, enjoying the sight and feel of Karen, holding my orgasm in check, trying not to think too much about who this lovely girl was, hovering over my cock, giving me such pleasure. \n\nTwice, Karen's tongue flicked out, licking a drop of fluid off the tip of my cock. It was so quick, so sexy! Karen was smiling, licking her lips, tasting me. I wanted to cum badly, but didn't want this incredible thing to end. \n\n\"Karen, I'm almost there. You'd better move if you don't want a facial.\" She nodded and licked another drop of pre-cum off me, spreading it across her lips. Her glow showed pure happiness and anticipation. I couldn't wait any longer. I released my trigger and came. At the first throb of my cock, Karen lunged forward and enveloped my cock head, clamping her lips around me and sucking like mad. My hips jerked involuntarily and I went all the way into her mouth. She bobbed her head rapidly, sucking hard, rubbing her tongue on me, milking me. She didn't stop and I spurted into her throat time after time. Finally, my orgasm ended. Karen stayed on me, sucking me and pleasuring me with her mouth. There was no question that I could stay hard and I was sure Karen would blow me again. It was tempting as hell, but we'd already done much more than we should. I cranked down my blood flow and my dick softened. Karen lifted her head and let my dick plop onto my stomach. \n\n\"Don't say anything, Ethan. Go back to sleep. I'm going to sleep late in the morning. I'll be gone when you get home from school.\" Karen picked up her pajama top and walked out. I was asleep in seconds. \n\nMonday morning at school, the number one topic of conversation was jailbird Charlie. His mom raised such a stink at the jail Saturday night that they'd thrown her out. She was back Sunday with a lawyer, demanding that her precious son be released, threatening to sue everyone in sight. They threw her out again and told her she'd be arrested for trespass if she came back. \n\nCharlie went before a judge Monday afternoon. He was charged with assault for threatening to kick my ass, destruction of property, leaving the scene of a crime and resisting arrest without violence. He'd been stupid enough to tell the cops that he was someone else, even though he was in his folk's living room and the cops he was talking to knew him by sight. \n\nThe judge turned him loose on a $10,000 cash bond and told him not to leave the county. He was also told not to contact me in any way or conspire with anyone to contact me. \n\nI sat with Harry and some of the other football players at lunch. They were all pretty pissed at Charlie for being such a constant pain in the ass to the team. \n\n\"I work out at the same gym Charlie does,\" Harry told us. \"I've seen him talking to a known steroid supplier and buying stuff from him. A bunch of us suspected that he's been sneaking in \"clean\" urine so he can pass the team drug tests. I got hold of Coach this morning and told him what happened the other night and that we're pretty sure Charlie's doing steroids. The next time Charlie comes to practice, Coach is going to hit him with a no-notice test. He'll do the same with half the team. If Charlie tests positive, he'll be history.\" \n\nWell, shit!! No wonder I couldn't get anywhere with Charlie's glow! He was in a fucking 'roid rage! Now it all made sense. \n\nI worked Monday night, putting up stock and doing general cleaning at the grocery. Decent part-time jobs were hard to find and mine wasn't one of them. \n\nOn Tuesday, I had a fourth period study hall. My school allows students to do their studying outside in the quad, as long as they actually study and don't waste time bullshitting. I found a place to sit against the central fountain and settled in with my chemistry homework. I couldn't keep my mind on it, though. Thoughts of Cheryl's party and what followed kept intruding. My life had taken such a radical turn in such a short time! My control of the glow was increasing and I was going to have to watch myself carefully. My thoughtless alteration of Alex's glow was a distinct warning. I had the potential to seriously harm innocent people. I needed to be more cautious and less impulsive. ",
        "As I left for my next class, Beth caught up to me. \n\n\"Ethan, my father wants to talk to you. I told him you're in all the advanced physics and chem classes. I think he might want to offer you a job.\" \n\nHere we go again, I thought. Rich kids sticking their noses in the regular kid's business. \n\n\"Beth, I appreciate you guys trying to help me, but seriously; I like to accomplish things on my own. I don't need you bugging your dad, getting me a charity job. Frankly, it's pretty insulting. I'm not exactly living on the street.\" \n\n\"Oh, get over yourself,\" she snarled. \"That's not what's going on at all. I told my dad I had a new friend and he was curious about you. When he found out you were a serious science geek, he practically started jumping up and down. He wants to talk to you ASAP. I'll text you the address. Get your ass over there right after school.\" She spun around and stalked off. \n\nAs soon as the last bell rang, I sped home, grabbed a quick shower and put on a clean shirt and my best slacks. Mr. Wallace's office was on the top floor of the Wittier Chemical building. The lettering on the door said, \"Randall Wallace, Vice President, Production\". I told the secretary who I was and she sent me in right away. \n\n\"Ethan, glad to meet you,\" said Mr. Wallace. His glow showed genuine interest. This wasn't a setup. \n\n\"Glad to meet you, sir. Beth said you wanted to talk to me.\" \n\n\"Yes, I sure do, but before I say anything, tell me about your studies. Beth says you're on the advanced-placement science track.\" \n\nI went over my classes and grades, which were all As and my hobby of studying environmental engineering, which I wanted to major in next year. He nodded, his glow a happy green. \n\n\"Let me lay this out for you, Ethan. This company is swamped with business and we can't find anywhere near enough qualified people to work in our labs. I know you're still in high school, but you have a solid foundation in math and physics and chemistry. You understand lab procedures. You know how to use the equipment. Hell, half the people I interview don't know the names of the equipment! Beth says you're dependable and can be trusted. If you're interested, I'd like to offer you a job. Your hours would be flexible; we don't want to interfere with your schooling. You'll be expected to work a minimum of three hours at a stretch, but as long as you inform the lab manager of your schedule in advance, you can come in anytime. We're running two shifts a day here, so the lab's manned from 7AM to 11PM, seven days a week.\" \n\nMr. Wallace leaned back in his chair. \"As to pay, I can start you at $17.50 an hour.\" I jumped. That was twice what I made at the grocery. \"If you can work at least 20 hours a week,\" he continued, \"it'll be 20% higher; that's $21 an hour.\" His glow was filled with anticipation and hope. \n\n\"Well, sir, I'm very interested. I'm putting up stock in a grocery now. It's totally boring, I'm not learning anything useful and the pay is terrible. I'd love to get some hands-on experience in a working lab. When can I start?\" \n\nMr. Wallace handed me a card. \"Call Bill Coyne at 8 o'clock Saturday morning and make arrangements to come in for a quick orientation. If you'll go to the HR office on the fifth floor, they'll get you started on the paperwork.\" He stood up and offered his hand. We shook. \"Very happy to have you on board!\" \n\nI filled out forms for an hour. When I turned them in to the clerk, she handed me an envelope. \n\n\"What's this?\" \n\n\"It's your signing bonus,\" she said. \n\nI opened the envelope and found a check for $500. A signing bonus for a part time job? They must be desperate, all right! \n\nI notified the assistant manager at the grocery that Thursday would be my last day. He offered me a 50 cent raise and I was polite enough not to laugh at him. I liked the people there well enough; not their fault it was such a crappy job. \n\nWednesday before school, I got a text from Alex - After skol rm 2113 Coleman Suites hotel. \n\nNow what? \n\nI got to the hotel about 3:10 and knocked on the door of room 2113. Alex opened it immediately. \n\n\"Hi, Ethan! Come on in, I need to talk to you!\" She sat on the loveseat (was that a good omen?) and patted the cushion next to her. I sat down. \n\n\"Did you rent this room?' I asked. \n\n\"No, my father owns the chain. I did some snooping in the computer and found out this room almost never gets rented. I have a master key, so I bring guys from the Group here when we can't find anywhere else to go.\" Alex's glow showed concern and tension and curiosity, but almost no gold. We weren't here to have sex, so what was this about? \n\n\"I need you to tell me something,\" she said. \"I brought Reggie and Jim here yesterday for a three-way. We fucked and sucked for two and a half hours.\" She held my hand and looked me in the eye. \"It was amazing! I came and came and came, so hard! I could barely control myself; I just wanted to fuck them and have them eat me! They loved it! I wore them out. They came three or four times each!\" Her glow turned gold from the memory. She shook her head. \"I'm sore as hell today, but I don't care.\" Alex kissed me. We leaned back on the loveseat and swapped spit for a while, touching each other and feeling sexy. Alex's glow turned a brighter gold. She was getting turned on and so was I. My hopes of getting laid grew. \n\nAlex broke the kiss. She rubbed my dick and I caressed her breasts. \n\n\"That feels really nice and I want you,\" she said in a soft voice, \"but I need to talk to you first.\" She kissed me again and pressed her tits into my hands. \"I don't understand what's going on with me. Ever since you made me cum at Cheryl's party, I've been so much more sensitive! I cum quicker and my orgasms are ten times as good as they used to be. I love it, but there's got to be a reason why it's happening.\" She pushed my hands away and the gold in her glow faded. \"You did something to me, didn't you? It can't be a coincidence that this started when you were going down on me. I love that you did it. It's like the most wonderful thing ever! I'm not pissed off, I'm grateful, but I need to know what you did and if it'll last. I'd hate to go back to the way I was. You have to tell me!\" \n\nAnd she was right. I'd messed around with something I didn't fully understand and had significantly changed another person. There was no question that she had a right to know, but no one knew! I'd kept this secret all my life. If my talent became known, my life would never the same. I couldn't guess what would happen, but I knew it wouldn't be good. I could deny it all and make Alex believe me, but that would be a violation of her right to understand how I'd thoughtlessly used her as an experiment without her permission. I was screwed. My choice was between putting the rest of my life in the hands of a girl I hardly knew and violating the principles that made me who I had worked so hard to become. \n\n\"Say something, Ethan! I can see you're thinking about what to tell me and that means you did do something! I can see it in your face.\" Alex punched me in the chest. \"Goddamnit! I have to know!\" \n\n\"You're right, Alex. You do have a right to know. But the first thing you have to understand is, no one in the whole world knows about this. It's been my secret.\" I took a deep breath. \n\n\"Okay, here goes. As far back as I can remember, when I look at a person, I can see a glowing area in the middle of their head. By looking at the colors, I can tell their emotional state and their health. What I can see has gotten more detailed as I got older and it's still getting more detailed. I can tell when someone is happy or sad or depressed or horny. Lately, it's gotten to where I can see their recent memories in a fuzzy way. Our brains don't stop developing until we're in our mid-twenties, at least, so this ability might keep getting stronger for years. I don't know. I never heard of anyone else with this talent and I can understand why. Not so long ago, they'd have been burned at the stake. Now, they might end up in a secret government lab, being tested and probed for the rest of their lives.\" \n\n\"But how did you change me?\" she asked. \"And why did you do it?\" \n\n\"I saw what a specific part of other girls' glows looked like when they came. Yours was much different, much smaller and less flexible. I saw a way to change that and I did. I did it on the spur of the moment, without thinking it through and without asking your permission. That was wrong. I didn't have the right to do that and I don't have the right to lie to you about it now. I owe you the truth.\" \n\nAlex sat, looking down, thinking. Then she looked at me. \"Well, that's pure bullshit and you know it! It's just fucking impossible. I don't believe in magic and I sure as hell don't believe in psychics! If you're going to sit there and try to blow smoke up my ass, you can just get out!!\" \n\nI smiled. \"I'm glad to hear you say that. I don't believe in that shit either and I wouldn't believe it without some hard proof. I'm going to give you that proof now. You said you were sore from yesterday? Well, you just sit there and I'll see what I can do.\" \n\nI quickly located the appropriate area in Alex's glow and set to work. In less than two minutes, I was finished. \n\n\"Okay, that should do it. How do you feel now?\" \n\nAlex hesitated for half a minute, then she stood up and opened her jeans. She reached into her panties and felt her vagina. Her eyes opened wide. \n\n\"I'm not sore anymore, but that might be natural healing or the power of suggestion. It's going to take more than that!\" She zipped her jeans and sat down. Her glow showed skepticism and zero hornyness. \n\n\"Fine, no problem. I can tell that you're not turned on at all right now. That's good.\" \n\nI took a firm grip on her glow and fed in the gold. Alex sat up straight and inhaled sharply. I piled in more gold and started on the silver. She exhaled and braced her hands on the loveseat. Her mouth opened, her legs clamped together and she bent forward. Her breathing became rapid and her nipples popped out. Silver sparks shot through her glow. Her eyes snapped shut and she came, gasping. I stayed on her glow, extending and intensifying her orgasm. She flopped on her side next to me and I eased off on the silver and gold, slowly terminating her orgasm. I stood up and went to sit on the bed. \n\nIt took Alex three or four minutes to recover. Her breathing returned to somewhere near normal and she sat up. \n\n\"How's that for proof?\" I asked. \n\n\"Fucking convincing,\" she whispered. \"That was convincing as shit!\" She looked at me with an amused grin. \"You can convince me that way all you want, any time you want.\" Alex coughed and pushed her hair back from her face. \"So, I believe you. You did something to me with your freakish mind and I'll be forever grateful. But will it last?' \n\n\"Damned if I know. I'm learning more about this every day. I love using it to make girls cum, but there might be downsides that I don't know about yet. I have to be more careful and not poke around, changing random things in people who have no idea what's happening to them.\" She started to speak and I waved her down. \"I did that little demonstration to convince you, but you don't need my help to have great orgasms. Frankly, I went too far with you. When you fainted the other night, I was terrified that I'd damaged you in a way that I couldn't correct. It doesn't look like that happened, but what I did seems to let you have stronger and more frequent orgasms than most other girls. I don't dare do anything more to affect you. Shit, I made you pass out once already! You don't need any more of that!\" \n\n\"No, I guess not. I'm happy as all shit to be able to cum the way I did yesterday. Anything more would be gilding the lily.\" She jumped up and began unbuttoning her shirt. Gold washed into her glow. \"Anyway, I owe you and I always pay my debts. I'll give you anything you want. You can fuck me any way that's physically possible and I'll blow you however you want.\" She unsnapped her bra and kicked off her shoes. \"I never swallow cum, but I'll swallow buckets of yours.\" She pushed her jeans down along with her panties. \"Anytime you're ready, buddy!\" \n\nI stood up. \"Let's start with you undressing me.\" \n\n\"Love to,\" she said with a sexy smile. She pulled my polo shirt off over my head and unbuckled my belt. She pulled my pants down and I sat on the bed while she dropped to her knees, untied my running shoes and slipped them off along with my socks. My pants and boxers went last. I got up and walked to the loveseat. \n\n\"Now, I'd like you to do something I've seen online but never had done to me. I want you to get on your knees right here and blow me.\" I slumped down with my ass on the edge of the loveseat and my legs apart. \"Blow me nice and slow.\" \n\nAlex crawled across the carpet and knelt in front of me with her hands on my thighs. She kissed the insides of my thighs and worked her way slowly toward my crotch. I was holding my blood flow in check, allowing myself to have good firmness, but not a full-blown erection. Alex licked the sides of my balls and every square centimeter of my cock. Then she slurped my dick into her mouth. Her glow was solid gold. She slid down me until her lips were touching my belly and, very slowly, she ran her tongue around my shaft. I let myself get harder, gradually growing inside her mouth until I was nice and stiff. She sucked my head and deep-throated me again, reaching out with her tongue to caress my sac. I sat up and fondled her tits. They were unbelievably firm. I sat back and whispered, \"Fuck me with your tits\". That was, apparently, another thing that Alex had done before. She spit on my dick and let a glob of spit dribble between her breasts. Then she wrapped her tits around my cock and went to work. Unlike my experience in the van with Sarah, this worked perfectly. Alex knew exactly how to please a man with her boobs. Alex locked her eyes on mine and smiled happily. It was one of the most stimulating sights of my life. My orgasm crept up my legs and I locked it down when the feeling got strong. \n\n\"You like fucking my tits?\" she whispered. \"They're nice, aren't they? Firm and smooth.\" She drooled some more spit on me. \"I like doing this. I like the way it feels and I love the way you're looking at me.\" Alex applied more pressure. \"Are you going to cum on my tits? Are you going to let me feel your warm sperm?\" \n\n\"No, Alex. I want you to suck me some more. I want to fuck you in new ways. When I cum, it'll be inside you or in your mouth. Before I cum, I want to see and feel you cum. I want to eat you and fuck you and make you cum. I love making you cum and I'm going to make you cum today until you're too tired to twitch. Someday I'll cum for you this way, but not today.\" I relaxed, enjoying the sensations of Alex's marvelous tits on my dick. \n\n\"Suck me again, Alex. Deepthroat me and lick my balls. I want to feel myself in your throat.\" The next ten minutes were heaven. Alex used every technique she knew and they were all wonderful. Finally, I lifted her face off me and kissed her. \"That was terrific, Alex. And now I want to sixty-nine with you. I'm going to make you cum and cum and cum.\" \n\nI led her to the bed. \"Lie on your back.\" I got on top and slid my cock into her open mouth. \"There's one other thing you can do for me,\" I said. Her mouth was filled with my cock and her answer was a hum. \"You can shave this hair off.\" Alex spit me out. \n\n\"I did shave it once, but I let it grow back. My pussy is so dark, I didn't like it. It doesn't look nice and pink. The hair hides it.\" \n\n\"Alex, that's ridiculous. You're an amazingly beautiful girl. No man would care in the slightest whether your pussy was pink or blue or florescent orange. Can you imagine a man not wanting you for something like that?\" \n\n\"Ethan, in case you haven't noticed, I'm black. There are men who'd refuse to be seen with me in public just for that reason! There are men who'd see me as just a body to fuck and a mouth to cum in!\" \n\n\"Well, those men are idiots and I'm not one of them! Shit, my great-to-the-sixth grandfather on my mom's side was an escaped slave who used the Underground Railroad to get to Canada in 1856. He married a white woman there. The history is a little fuzzy, but there were several other black men and women in my mom's line over the next 150 years. My dad has some Seminole Indian in his DNA, too. I know people look at me and think I'm Italian or Greek or Turkish or something. They're wrong, although there could be any of those in me, too. Who the hell knows? Anyone who thinks he knows who his great-grandmother was screwing is living in a fantasy world!\" I took a deep breath. \"Anyway, I recommend you shave, if for no other reason than to filter out the racists.\" \n\n\"Do you want me to shave now? I have a shaver in my bag for doing my legs and armpits.\" \n\n\"Only if you really want to. I've messed with your body enough already. I'd like it, but that doesn't mean you have to do it.\" \n\n\"Okay, but I don't want you to watch.\" She pushed me off and snatched up her bag on the way to the bathroom. \n\nI waited on the bed, idly jerking my dick. I heard water running and checked Alex's glow. By closing my eyes and concentrating, I could tap into her consciousness and see what she was seeing. It was blurry at first, but with some practice the images sharpened up nicely. Alex sat on the side of the tub and soaped her pubes. She shaved herself carefully, rinsing off the hair under the faucet. The sight of her emerging pussy as seen from her point of view looked sexy as all hell, especially with her boobs jutting out. I jerked myself faster. Alex finished shaving and rinsed off. I kept my eyes closed and watched through Alex's eyes as she put her shaver and soap in her bag, checked herself in the full-length mirror and came out into the room. She stopped for a long moment and examined my body. I have to admit I was in terrific shape and my dick stood up, bobbing slightly to the beat of my heart. I could feel Alex wanting me. She was very horny. \n\n\"Are you nice and smooth, Alex?\" \n\n\"Judge for yourself.\" Alex dropped her bag and climbed onto the bed. She lay on her back with her legs apart. I swung into position over her and took a long, slow lick. She was very smooth and eating her was going to be pure pleasure. \n\n\"Oh, yeah, that's much better.\" I lowered my cock to her mouth and we got to work. I concentrated on eating Alex, leaving her glow alone. She came repeatedly and I had to keep a tight rein on my trigger to prevent myself from cumming. After about ten minutes, I swapped ends and slid into her. We fucked missionary style until Alex had cum a few times, then I spooned her, changed to reverse cowboy, then to straight cowboy and finally to doggie. I was right on the edge the whole time, wanting to cum, but wanting more to maintain that wonderful almost-there sensation. Finally, after Alex had cum for the umpteenth time, I pulled out. \n\n\"Let's go back to the sofa, Alex. You can finish blowing me.\" I helped her to her feet and we kissed. Her body felt amazing. Her hand slipped between us and gripped me while our tongues dueled. I released her and settled on the sofa. \"Listen Alex, I don't want you to swallow just for me. Don't feel that you're obligated in any way. If you want to, that's great. If you don't, it's not a big deal. I don't have any emotional investment one way or the other. I love cumming in your mouth, but what you do with it is up to you. Now, let me feel your breasts on me again.\" \n\nAlex titty-fucked me for several minutes before I pushed her head down to my cock. \"Suck me slow and deep. I'll let you know when I'm ready to nut.\" I was so very ready for this orgasm, but I hated for the feeling to end. Alex took a deep breath and took me all the way down her throat. She held me there for what must have been two minutes, licking my balls and sucking rhythmically. Then she raised her head, sucking hard, milking me. ",
        "\"Just a few more seconds, Alex. Here it comes!\" Alex bobbed her head rapidly and used her tongue like a warm wet tornado while jerking me. The feeling was intense and my orgasm lasted for days. When I was finished, Alex opened her mouth and I saw the pool of saliva and cum. She gave me a \"Here goes!\" look and swallowed. \n\n\"Ewww! That's not so great. It feels slimy in my mouth, but it's much slimier going down. I don't know how Beth does it! She says she loves the feel.\" Alex swallowed a couple more times. She made a face. \"I like the warmth, but that's about it.\" \n\n\"Well,\" I chuckled, \"it was your idea. I said you didn't have to.\" \n\n\"That's all right. I would have done it eventually; I'm glad it was with you.\" She looked as if she was trying to get peanut butter off the roof of her mouth. \"I won't be doing that again!\" \n\nI waggled my mostly soft dick at her. \"Want to try it your way? I don't mind if you want to continue your experiments!\" \n\n\"Can you get it up again so soon? You came so hard I figured you'd be done for today.\" \n\n\"Hey, it's not just other people's glows that I can control. I can get hard and stay that way as long as I want to. Of course, if you don't want to blow me anymore, I'll understand.\" I tilted my head and gave her a sad, pouting look. \n\nAlex grinned. \"I don't have anything better to do, that's for sure.\" \n\nAlex sucked my cock and I cranked up the blood flow until I was erect. Then she titty-fucked me until I pulled her up to sit on my rod, fucking me while we made out and I groped those fantastic, gravity-defying breasts. \n\n\"Okay, Alex, I'm ready. Stay right where you are and let me cum inside you. You feel so damn good! You feel so ...ahhh, fuck, I'm cumming! Don't stop!\" I squeezed her boobs and spurted into her. Now, I was done for the day! \n\nPulling into the grocery's parking lot on Thursday, I spotted three very hostile glows near the delivery entrance. I wasn't about to trust Charlie to obey the judge's order to leave me alone and I made it a habit to sweep my surroundings. Charlie was there, all right, hiding behind a dumpster with two other guys. Employees were required to park behind the store. If you wanted to jump someone who worked there, the best place to be was exactly where those three cocksuckers were. \n\nI swung around, parked in front of the strip mall next to the store and snuck through the alley between the mall and the store. When I stuck my head around the corner, I saw Charlie peeking over the dumpster, an aluminum baseball bat in his hand. The cretin next to him was holding an expandable baton. The last guy was unarmed, but huge, like a heavyweight power lifter. \n\nCalling the police would have been the smart move, but this just pissed me off. I moved around the corner, smothering Charlie's glow, rendering him nearly deaf and dulling his vision. He must have felt dizzy and on the verge of passing out. I grabbed his collar with my left hand, yanking him backwards and kicking hard into the back of his right knee. I heard something pop in his leg as I snatched the bat out of his hand. He hit the asphalt with a whump! The moron with the baton spun to face me; too late. I punched his glow with a mental fist. He was staggered, clenching his eyes shut in shock and surprise and pain. I whipped the bat around in a whistling arc, impacting the outside of his left knee. His leg bent in a way it wasn't designed for and he fell screaming to the pavement. The giant whipped around, took one look at his fallen buddies and ran. \n\nThe first cop who responded to my 911 call gave Charlie a quick once-over and called for an ambulance. Charlie was completely unresponsive and had a bloody gash on the back of his head where he'd struck the asphalt. The cop cuffed me and stuck me in the back of his patrol car. \n\nDeputy Chief Watson rolled up just as the EMTs were loading Charlie into the ambulance. He talked to the cop who had arrived first, checked out the scene and then came over to talk to me. He helped me out of the car and removed the cuffs. \n\n\"Okay, Ethan, tell me what happened.\" \n\n\"When I got here, there were three guys waiting for me. Charlie had a bat and one of the others had that baton. I managed to take Charlie down and used his bat to defend myself against the guy with the baton. The third guy took off.\" I didn't bother to mention that I hadn't given the fuckers a chance. Let the cops think they attacked me first. \n\n\"Well, I'm not too shocked, that's for sure. This is just the sort of stupid stunt Charlie's known for.\" He waved at a plainclothes cop, who trotted over to us. \"Ethan, this is Detective Washington. Chuck, this is Ethan Fowler. He's the victim here. That shithead they just hauled off had strict instructions from Judge Marshall to stay away from Ethan. Instead, he and two of his buddies ambushed him. They were using deadly weapons. Ethan defended himself, as he had every right to do. You're the lead detective on this. Get with the DA's office and see what kind of charges you can bring. I'd say ADW and conspiracy, at least.\" \n\n\"Gotcha, Chief. I'll get right on it.\" \n\nDeputy Chief Watson put both hands on my shoulders. \"Ethan, I've been doing this a long time and I've been to a lot of fucking crime scenes. I know what to look for. I know how to read a scene. Those fuckheads were all set to jump you, but you outflanked them and nailed their asses from behind. Good for you! I don't think anyone else has twigged to it and the official report will document a straight case of self-defense.\" He winked. \"Don't forget, I know what your car looks like and,\" he looked right and left, \"that car ain't here. I'll bet I know where it is, though.\" He winked again. \"You've got good instincts, kid. Very few boys your age could pull this off and come out of it without a scratch. I'm glad you're friends with Harry. He could use a friend with some real-world experience. He's been spoiled all his life and needs to learn what the world is really like.\" We shook hands. \"You'll need to come to the precinct and give a written statement. Keep it simple; not too much detail. You'll be fine.\" \n\n\"Thank you, sir. This is my first time with something like this. I can use all the help I can get.\" \n\n\"Call me Carl. I'm glad to help and I'm glad to know you.\" \n\nCarl accompanied me inside to let the manager know I wouldn't be working my last shift and why. Instead, I spent the next 90 minutes at the station, filling out a complaint and writing my statement. I didn't tell any lies, but I didn't tell the whole truth, either. Carl proof-read my statement and gave his approval. \n\nDad and I got home at the same time. \n\n\"Why are you home, Ethan? I thought you were working today.\" \n\nI wanted to wait until Mom got home to explain. \"Give me a minute, Dad. I need a shower bad.\" I ran upstairs before he could respond. \n\nUnfortunately, my plan had a big hole in it. One of Mom's friends heard about the fight and called her. As you might expect, the story was garbled and wildly inaccurate. I was getting dressed when Mom burst through the front door in a panic. It took me an hour to get them calmed down. \n\nNo, I hadn't killed anyone. \n\nNo, I hadn't been arrested. \n\nNo, I wasn't a fugitive. \n\nNo, I wasn't in any damn trouble at all. \n\nAnd no, I wasn't hurt. \n\nThe house phone and all three of our cell phones rang, sang, buzzed and chirped constantly, interrupting us and causing more confusion. Shit, my life had been so peaceful a couple of weeks ago! \n\nI got to bed after midnight, exhausted. I slept badly. \n\nFriday morning, the shit started in homeroom and flowed like a river all day. I learned that Charlie was out of danger. He had a severe concussion, two ruptured tendons in his calf and badly damaged ligaments around his knee. Tough shit, I thought. The dumb fucker could have killed me. His partner in crime with the baton had a shattered knee. The other huge asshole had been tracked down and all of them were under arrest for attempted felony murder and a bunch of lesser crimes. \n\nAnd what brought all this on? When Charlie reported to football practice, Coach announced a no-notice drug test. Without the chance to substitute clean urine for his own, Charlie knew he was busted. He refused the test, drove to Sports Authority and bought a nice new bat, paying for it with his credit card. Then he called his moron buddies and set up the ambush. Genius Charlie had the credit card receipt for the bat in his pocket when they searched him at the hospital. That established premeditation and it all went downhill from there. \n\nBy lunch time, my reputation was not only that of a super stud, but also of a fearsome cage fighter. The shit just kept getting deeper all the time. \n\nDuring 5<sup>th</sup> period English, JoAnn sent me a text. It said, \"My house after school\". Her address was written below. \n\nI dodged all the kids who were after me for details (and autographs!), jumped into my car and tore out of the parking lot. I was at JoAnn's house six minutes later. I knocked and she let me in. \n\n\"That was fast,\" she said. \"We'll have company soon.\" She headed upstairs, pulling me by the hand. \"Come on, I need a shower.\" Her glow was a gold ring, filled with green. \n\nHer bedroom was a suite, bigger than all three bedrooms in my house put together. She stripped off her clothes, throwing them in the general direction of a hamper. I hesitated when she got to the bathroom. \"Oh, come on,\" she said. \"It's not like you haven't already seen me\". Her shower was all clear glass and must have been four feet by eight feet. She tied her hair back and got in. \"I won't ask you what really happened,\" she called over the roar of the water. \"You'll just have to repeat it for the others. Just stand there and ogle my body.\" Her body was, in fact, exceptional. I'd seen it from very close range before, but that didn't stop me from staring. JoAnn soaped up and used a bright pink loofah, lathering her body thoroughly. She smiled wickedly, sat on the built-in seat, spread her legs and carefully shaved her pubes, watching me watch her. The girl was an exhibitionist, that was certain. Well, two can play that game! I unzipped my pants, pulled out my cock and stroked it, smiling back at her. JoAnn finished shaving and used the detachable shower head, set to \"pulse\", to rinse her pussy, opening herself with her fingers and directing the spray inside. She rubbed her clit rapidly, making her boobs jiggle. I stepped up to the glass and jerked myself faster. \n\nI sensed two familiar glows coming up the stairs and turned to see Ruth and Robin walking through the doorway. \n\n\"Whoa, cool!\" Robin stopped cold, taking in the view. \"Keep going, you two! Don't let us interrupt!\" \n\nJoAnn raised her lugs in a wide V, frigging herself hard. She closed her eyes and screwed up her face. I worked my magic on her glow, which fired off silver sparkles. JoAnn came, moaning loudly enough to be heard over the sound of the water. I glanced at the girls in time to see Robin's bra hit the carpet on top of her shirt. \"Get those pants off, buddy,\" she said eagerly. Ten seconds later, I was naked. Robin pushed me onto JoAnn's bed. She climbed on top and began rubbing my dick against her pussy. \"No time to waste,\" she growled. \"I need a good fuck!\" She settled down on me. \n\nRobin's body was pure dancer. She was strong and flexible with very little body fat. Her tits were firm, her nipples small and erect. I grabbed them with both hands. Robin leaned into me, eyes closed, balancing on the soles of her feet and fucking me with long, quick strokes. Her glow was filled with gold, rapidly turning silver. I squeezed her tits and tongue-fucked her glow. \"Ahhh, fuck!\" she mumbled. \"Fuck yeah, fuck yeah, fuck yeah, mmmmm, fuck!\" She came, her glow sparkling with silver. Robin's movements didn't slow at all. She pistoned up and down on my cock, talking softly to herself and I stayed on her glow, producing orgasm after orgasm. Her endurance was impressive. Those leg muscles wouldn't quit. \n\nI eased back on her glow and she finally stopped, resting with my hardness inside her. She opened her eyes. \n\n\"Oh, fuck! That was outstanding!\" She shifted her weight onto her knees and relaxed, stretching her legs and lying full length on me. We kissed. I held her ass and fucked her slowly. \"Fucking outstanding,\" she whispered into my mouth. Her pussy gripped me at the bottom of my stroke and released at the top. The effect was remarkable and I had to tighten the clamp on my orgasm trigger. I was super close to cumming. I distracted myself by working Robin's glow. She was already building to another orgasm. She buried her face in my neck and shook with the intensity of it. I kept up the pressure and she came twice more. I brought her down, calming her and reducing the silver until she was two-thirds green and one-third gold. We kissed and held each other. I was still very hard, but the urge to cum had tapered off. \n\n\"You can cum in me if you want. My periods are erratic and I've been on the pill for years.\" \n\n\"In a while, maybe. I don't want to finish right now.\" \n\nRobin rolled off me. We were both slick with sweat, even though the room was cool and the ceiling fan was on. JoAnn was standing on my side of the bed, fucking herself with a vein covered, shiny black dildo. Ruth was next to her, fondling JoAnn's breasts and kissing her. The five foot five blond bodybuilder was almost comically shorter than the six-foot redheaded basketball player. \n\nJoAnn looked at my dick and then at Ruth. \"Sorry, baby,\" she whispered, \"I have to try this. I have to see if it's really that fucking good.\" She pulled the dildo out and handed it to Ruth. Then she kissed her lover and climbed onto the bed. I outweighed JoAnn, but she was a big girl, easily two inches taller than me. She knelt beside me and stroked my erection. \n\n\"I've never had one of these inside me. Lots of fingers, lots of tongues, lots of vibrators. No penises. I want to try it if it's okay with you.\" \n\n\"Shit, yeah,\" I croaked. \"I'd love to be the first man inside you. How do you want to do it?\" \n\n\"Just lay there. Let me try this.\" She positioned herself over my hard-on. \"One thing,\" she said. \"You can't cum in me. I'm not on any birth control.\" \n\n\"Not a problem. I have real good control.\" \n\nJoAnn lowered herself. She was slippery from the dildo and in a few seconds I was inside her. For such a big girl, her pussy was surprisingly snug. She sat still, her glow a mixture of desire and uncertainty. I didn't move and I didn't touch her. This was her party and I was reluctant to manipulate her glow. Better to let her work this out on her own. She felt damn good, though! \n\nRuth reached out and touched JoAnn's shoulder. \"Well? What's it like?\" \n\n\"It's good. Warm and smooth. Not moving, though.\" I gently flexed my cock. \"Oh!\" JoAnn smiled. \"It does move.\" I flexed several more times, harder each time. \"That's nice. That feels good.\" \n\nJoAnn smiled down at me. \"Hold still, okay? I'm going to ride you. Let me do this. I'm still not too sure if this is such a great idea.\" She scooted back and forth on me a couple of times. \"Don't cum, please. If you feel like you have to, warn me and I'll get off.\" She resumed rocking. \n\nRobin watched us, fascinated. Ruth, on the other hand, was concerned. She didn't like what JoAnn was doing, but she didn't want to interfere. \n\nJoAnn's body was beautiful. Her heavy tits swung erotically in time to her movements. Her pretty face was a study in concentration; eyes closed, mouth slightly open, her breathing getting faster. Her glow was almost completely gold with some silver sparkles popping up. I gave her glow a gentle nudge and she responded with a low, \"ummm\". Her rocking sped up. She was headed for an orgasm. I helped her along, licking her glow here, kissing it there, pressing all the right buttons. She bent forward with her eyes closed and her face showing that familiar grimace that precedes a female orgasm. Her tits were inches from my face and it was all I could do to keep my hands and mouth off them. \n\nJoAnn's glow flashed silver. Her orgasm wasn't the best, but it was an orgasm. I stroked and sucked her glow and was rewarded with a flood of sparkling silver. She came harder than before, panting and moaning. Her rocking became fucking, sliding up and down on my shaft. She came again, harder, speeding up, fucking my entire erection. As the tingle crept up my legs, I put a lid on my orgasm trigger. Cumming now would be a very bad idea. \n\nI gave JoAnn's glow just enough input to keep her peaking. I had no intention of making her think that fucking men was better than fucking women. If I pounded her glow the way I had with other women I'd fucked, she might get the wrong idea. \n\nJoAnn came a fourth, fifth, sixth and seventh time. I nudged the silver away, letting the gold and green peek through. She stopped moving, her eyes closed, breathing hard, pulse slowing. She opened her eyes. \n\nShe looked into my eyes. \"Oh,\" she said. \"Fuck, that was really good.\" She swallowed and took a couple of deep breaths. \"Shit, I sorta forgot you were there.\" She laughed softly. \"Sorry about that. It can't have been much good for you. I told you not to cum and then I used your prick to get myself off.\" She breathed deeply. \"You can't cum inside me, but I'll blow you if you want. Problem is, you can't cum in my mouth, either.\" She smiled guiltily. \"I guess I'm not much good to you.\" She kissed me. \"You're a good fucker, though. At least I guess you are. You're my first.\" \n\n\"JoAnn, don't think what you just did was any kind of chore for me. You're a beautiful girl. Having a beautiful girl riding me and watching her cum is a treat.\" I moved my hands to her waist. \"There is one thing you can do for me.\" \n\n\"What's that?\" \n\n\"You can sit right there and let me touch you. Your body is amazing. It was hard as hell to lay here and watch you get yourself off on my dick and not touch you.\" \n\nJoAnn put her hands on my stomach. \"You could have touched me, but it would have felt like groping. Thanks for not doing that. But now,\" she smiled, \"now it's alright. Go ahead. Touch anything you want.\" \n\nI caressed her thighs and reached around to squeeze her ass. She leaned toward me, pushing out her chest and my hands went to her tits. They were big and soft with large areolas and short, thick nipples. I thumbed her erect nipples and pulled them gently. JoAnn grinned. I sat up halfway and sucked her nipples. She held my head and let me suck them, left and right. I didn't want to push my luck. I lay down, playing with her tits and enjoying the look and feel of her. I was still hard. I flexed inside her. \n\n\"No,\" she said. \"You can't cum in there.\" She rose to her knees and slid off me. \"Do you want that blowjob now?\" \n\nRobin hopped up on the bed. \"Fuck that! I want some more of this while it's still hard!\" She wrapped her hand around me. \"Let's fuck, Ethan. That shit was hot and I'm ready for round two! You must be going crazy! It's your turn to get off. How do you want me?\" \n\nI pushed her onto her back. \"Just like that! I'm ready to go, too.\" Robin raised her hips and I slid right in. I fucked her hard and fast, holding my orgasm at bay, blasting her glow with everything I'd learned from fucking her before. She lit off immediately and kept cumming, harder every time. Her glow grew blindingly silver and I threw off my control. My orgasm was the stuff of legend. \n\nWhen I came to my senses, Robin's eyes were inches from my own. Her glow was mostly silver, her mouth was open and she was gasping for air. \n\n\"Stay hard,\" she begged. \"Please stay hard and fuck me some more. Please, please fuck me some more.\" Now, tell me the truth; could you turn down a request like that from a beauty like Robin? I sure as hell couldn't! \n\nI fucked Robin to three more intense orgasms and then pulled out. \"Get on your side,\" I told her. \"I want to fuck you from behind.\" She turned onto her right side and I spooned her. She grasped my cock and slid it into her. I diddled her clit and pounded her hard. The mixture of cum and her natural lube made her very slippery. I left my control off. Robin came four more times before I was ready. ",
        "\"I'm gonna cum, Robin. Real soon now!\" Robin was almost at her peak. I delayed another half minute so we could cum together and we did, making quite a lot of noise. \n\nAs Robin and I settled down, I let myself wilt. I pulled out of her and a stream of wetness ran down her thigh and onto the bedspread. I heard JoAnn laugh. \n\n\"I'm going to have to have that cleaned before my parents get home. They're in Barbados until the middle of next week, so I have time.\" \n\nRuth crawled between my legs and licked my soft rod, tasting Robin and me together. Well, I knew Ruth had given blowjobs, but I had the strong impression that she didn't let anyone cum in her mouth. Maybe that was just JoAnn's rule or maybe there wasn't enough cum on my dick to bother her. She licked all around my cock and balls. She was relaxed, cleaning me very casually. The sight was extremely stimulating. I increased blood flow slowly, gradually getting hard. Ruth opened wide, taking my stiffening erection all the way into her mouth. The head of my cock reached her throat and pushed inside. Ruth's throat muscles worked, as if she was trying to swallow my dick and she kept her nose against my belly for an amazingly long time. It felt terrific but how could she hold me there? I was blocking her airway, wasn't I? \n\nRuth slowly lifted her head and my cock slid out of her mouth. She licked around the head, as if her deep-throat performance was routine. I was fully hard, but felt no urgency to cum. Ruth stroked me and licked around my head. She looked into my eyes. \n\n\"Goddamnit!\" she swore. \"I'm going to have to try this thing, aren't I?\" She turned and looked at JoAnn. \"Should I do it? Fuck, I just don't know! I never wanted to, but now you've got me wondering if I should. Son of a bitch!\" \n\nJoAnn smiled at her lover. \"Maybe you should ask Ethan if he wants you. He's the one you're thinking about experimenting with, isn't he? Shouldn't he have some say in it?\" \n\nRuth looked startled. \"Yeah, you're right. I guess I didn't think about that. Guys seem so willing to stick their dicks into anything that moves.\" She got to her feet and stood on the bed, looking at me. \"Do you want me, Ethan? Do you want to fuck two lesbians in one day?\" She turned her upper body and struck a single-bicep pose from her bodybuilding routine. \"Do you want to fuck a lesbian bodybuilder?\" \n\n\"Well, shit,\" I said. \"Let-me-think-about-it-YES!\" I grinned and JoAnn laughed out loud. \"Yes, I want you. You look sexy as hell standing there.\" Ruth's body was very muscular and defined, but still feminine in its own way. Her breasts were small and flat and her nipples were tiny. Her pussy matched, with no protruding lips. It was just a wide line between her legs. It looked tight and tasty. There was no stubble, and no dark roots visible. She must have had her coochy waxed or lasered. \"I want you, but whether we do it and how we do it is entirely up to you.\" \n\nRuth still looked undecided. \"Okay, let's try this; I'll sit on your face and you can get me ready. Once I'm wet, we'll see where it goes. If I still want to try it, I'll be on top, the way JoAnn was. If I want to stop at any time, I'll say so and you have to stop, right then. I don't want to hear, 'just a little more, I'm almost there' or any other shit. When I say stop, you stop, clear?\" \n\n\"Clear,\" I said. \"It's your ball game. I'm just along for the ride, so to speak.\" \n\nRuth rolled her eyes. \"Alright then.\" \n\nRuth got into position and I started. I'd eaten her before and was familiar with the way her glow reacted. I rested my hands on her hips and she moved over my mouth. Her glow reflected uncertainty and a good bit of sexual excitement. It was simple for me to see what pleased her. Gold became brighter with hints of silver. I licked and sucked her, duplicating my actions on her glow. Soon, the uncertainty disappeared and silver dominated her glow. I led her smoothly to her first orgasm and she let down a flood of wetness. I lapped happily and tongue-fucked her to another, stronger orgasm. She sat up, raising herself off my face. \n\n\"Ummm, that was nice. I'm ready now, aren't I? If I'm going to do this, I might as well do it now.\" \n\nRuth scooted down and lined herself up with my very stiff dick. She lowered her hips. She was really wet and my head slid inside her lips. Watching intently, she worked her pussy over me until I was firmly inside her. Ruth was very tight. She closed her eyes. Her glow was a mass of conflicting emotions. The silver and gold that had been there when I was eating her were gone. She'd been determined to do this, but she wasn't having any fun at all. Her determination was rapidly fading. \n\nIn a very soft voice, Ruth said, \"Ethan, do that thing you did with JoAnn. Move your cock.\" \n\nI flexed just a little, not moving anything else. Ruth turned her chin toward her shoulder and grimaced. I flexed again, harder. \n\nRuth reacted instantly. \"Oh, fuck no!\" she shouted, scrambling off the bed. \"I can't do that, I can't! It's too spooky! It's just fucking wrong!\" She collided with JoAnn and almost knocked her over, hugging her and sobbing. \n\nRuth and JoAnn clung to each other, Ruth crying and JoAnn doing her best to sooth the smaller girl. Robin lay down by my side. \"Congratulations,\" she whispered, \"that went well!\" \n\nThe two lesbians adjourned to the bathroom and Robin turned on her side, facing me. She began jerking me. \n\n\"Poor Ethan, all hard and nowhere to cum. It's a tough problem, but I might have a solution.\" \n\nI pushed her hand away. \"Thanks, but I want to be sure Ruth's all right. She's awfully upset.\" I swung my legs off the side of the bed and sat, watching the bathroom door. \n\nAfter a while, Ruth and JoAnn came out. JoAnn's glow contained relief that her lover was feeling better and Ruth's glow showed regret and guilt. Ruth sat next to me on the bed. \n\n\"Ethan, I'm sorry I did that to you. I must have made you feel terrible, jumping off you and running away. I'm so sorry!\" \n\n\"Don't be sorry. I don't blame you a bit! I'm sure I'd feel exactly the same was if some hairy guy had his cock in my ass. There's no way I could want that and no reason you should want a dick inside you. You have a right to your feelings and I'm the last one to say otherwise.\" \n\nRuth hung her head, not saying a word. I considered manipulating her glow to make her feel better, but rejected the idea. As I'd told her, she had a right to her feelings and I didn't have the right to screw with them. \n\n\"Thank you for saying that,\" said Ruth, laying a hand on my thigh. \"I feel bad, though. I let you inside me and then ran screaming.\" She hesitated and then asked, \"What did it feel like to you, when you were inside me? How do I compare to other girls?\" \n\n\"Ruth, you're unique. All girls feel different and you all feel good.\" \n\n\"So, we're all different? How was I different?\" \n\n\"Well, you were really tight. Even when you weren't moving, I could feel pressure.\" I smiled and held her hand. \"You felt terrific! I think I could have cum just from feeling you around me.\" \n\n\"I'm glad one of us got some pleasure out of that cluster-fuck!\" She held my face and kissed me lightly. \"Rita told us that you asked her to let you touch her. She said you seemed to enjoy touching her and looking at her. You did the same thing with JoAnn. Would you like to touch me? I know my body isn't the same as theirs. I have these little tits and I'm hard everywhere, not soft like they are.\" \n\n\"Goddamn right I want to touch you! You're sexy as hell! I don't want to freak you out, though. You've had enough of a bad time as it is.\" \n\n\"No, I want you to do it. I need to feel attractive. I need to feel that you want me, even if I can't let you have me. Touch me and I'll touch you, if you want me to. Should I stand or lay on the bed?\" \n\n\"Lie down on your stomach to start. Your back and your legs and ass are amazing.\" \n\nI began with Ruth's lower legs. Her calf muscles were sharply defined as were her thighs. I moved slowly, tracing the outlines of her musculature, feeling the firmness of her body. When I reached her upper thighs, she opened her legs for me. I touched her lips and she spread herself wider. \n\n\"Put your fingers in me if you want to. I'd like that.\" \n\nI gently slipped two fingers into her. She was still wet from earlier. I finger-fucked her while kneading her ass. Ruth remained relaxed, her glow calm. She was enjoying the attention, feeling slightly sexy, trusting me not to do anything that would hurt her. \n\nI pulled my fingers out and sucked them, remembering her flavor. I worked my way up her back, massaging the fantastic lats and traps; so hard but so sexy. \n\n\"Turn over, Ruth,\" I said softly. She rolled over and lay with her arms at her sides. She spread her legs. Her glow was dominated by gold. She was feeling very sexy. My hand went straight to her pussy and I caressed her clit. She sighed and raised her knees, opening herself all the way. I bent and licked her. Silver flashed in her glow. She opened her eyes and reached for me, wrapping her hand around my dick. \n\n\"Come here, Ethan. Eat my pussy and let me suck you. I want to suck you.\" \n\n\"In a minute. I'm not finished yet.\" I kept one hand on her pussy, fingering her and playing with her clit while I explored her abs with the other. Her tits were just round swellings on her chest with hard, erect nipples. I sucked her nipples and fingered her. Her glow was a smooth, solid gold. She smiled and closed her eyes, holding my erection and jerking me in time to my fingers moving inside her. \n\n\"I love the way your abs seem to lead right here, to your pussy,\" I said softly. I stroked the front wall of her vagina where I understood her G spot was. \"Can you cum this way? I'd love to watch you cum.\" \n\nRuth nodded, her eyes closed. I sucked her glow gently, pressing upward with my fingers. She let go of my cock, did a half sit-up and pushed my hand against her. She came twice in rapid succession. The sight was very erotic. \n\n\"Okay, I'm ready now,\" I said. \"Scoot over.\" Ruth moved to the middle of the bed and turned on her side. I climbed up beside her in the classic \"69\" position. I applied my mouth to her pussy and she sucked and licked my balls and cock. I was plenty hard, but I felt no urgency, having cum in Robin not long before. I was prepared to get the most out of my first 69. Obviously, Ruth had done this many times before. She had her technique down pat and it worked wonderfully. I knew what to do with her, too. Between my mouth, my fingers and the touch of my mind on her glow, she came hard and often. I concentrated on my job and was only partially aware of her efforts. Every time she came, she spit me out and \"ahhh\"d softly, adding the occasional \"yessss\", \"fuck\" or some unintelligible mumble. I let her cum at least a ten times before I really laid into her, bombarding her glow and raising her peaks, producing bright, almost constant silver fireworks. Ruth arched her back and totally ignored my dick, losing herself in orgasmic bliss. Brown crept into her glow and I eased off, reducing the intensity of her orgasms. In a few minutes, she was back in the world, cumming less frequently as I brought her down. She took me into her mouth and sucked me fervently. Ruth pushed me onto my back and bobbed her head, sucking hard. It wasn't long before I was really feeling it. When I started thrusting into her mouth, Ruth rolled off me and squeezed my cock. \n\n\"Ethan, that was fantastic! I can't take any more, though. You just lay there and let me suck you off.\" She paused for a breath. \"Sorry, you can't cum in my mouth, but I think you'll like what I'm going to do. When you're about to cum, tell me and I'll finish you with my lips.\" \n\nRuth knelt beside me on the bed and blew me, using her mouth on my cock and her fingertips on my sac. Robin pushed a couple of pillows under my head and shoulders so I could watch Ruth in comfort. She gave me a long kiss and stepped back. My orgasm grew to the almost-there level before I clamped it off. Ruth kept me in ecstasy for what seemed hours, but was probably only ten minutes. When I couldn't take any more, I touched her shoulder. \n\n\"Real soon now, Ruth. Real soon.\" \n\nRuth slid her mouth off me, pressed my dick against my belly and began gliding her lips and tongue up and down the underside of my erection, pausing at the top of her stroke to tickle that spot right under my head. I took it for all of 20 seconds before releasing my control. Cum shot out, splashing across my belly and chest. The intensity was astonishing. When I spurted for the last time, Ruth sucked me again, pleasuring me long after my orgasm ended. \n\nThe four of us lay on JoAnn's bed, relaxing, feeling peaceful. \n\nJoAnn sighed. \"Well, it seems that I'm at least partially bisexual.\" She laughed nervously. \"I didn't think I'd like a dick inside me, but I guess I was wrong.\" She laughed again. \"The upside is, that doubles my chance of having a date on Saturday night!\" We all cracked up at that. \n\nAll four of us spent a half hour in JoAnn's shower, washing each other and having a great time. I spent most of the time on my back on the shower floor with one of the girls sitting on my face. JoAnn climbed onboard for a short fuck and got off as soon as she came. Then she turned around and I ate her while Robin took her place. Robin came a couple of times, her cries echoing in the tile and glass shower. I enjoyed the attention, but didn't need to cum again. I was through for the day. Or so I thought."
    ],
    "authorname": "JapleinViera",
    "tags": [
        "group sex",
        "oral sex",
        "incest",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/glow-ch-02"
}