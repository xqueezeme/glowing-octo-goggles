{
    "title": "Busy Fingers Ch. 05",
    "pages": [
        "Author's note. - Sorry there's been such a big gap between chapters -- life got a bit complicated recently. This is the final Busy Fingers, but I'm starting a related series which I'll probably write completely before beginning to submit it. That way there won't be such gaps.\n\n*\n\nHayley and I usually met for a masturbation session at her place each Monday, the day we believed we were least likely to be disturbed. Now I know that sounds a bit weird to you, but it had started one day when we both felt particularly horny and for some reason we'd ended up masturbating, neither of us caring that the other was there. It became one hot session, and from then on we'd met each Monday for more of the same. \n\nExcept, of course, that it didn't stay quite the same, because we found ourselves taking things that bit further each time until, the last time, we'd played with each other as well as ourselves and finished by kissing each other on the mouth. They were full-on passionate kisses too, not the nonsexual kisses shared by friends. We had put a toe over the rather vague line into lesbian sex, and we both knew it. I wondered how far things would go this time, and perhaps I was hoping for even more.\n\nHayley answered the door looking stunning as always, the honey blonde page-boy hair style looking so feminine above her white summer dress. I was dressed in a similar pale green dress that should have set off my own blonde locks, but somehow she outshone me on all counts. I wanted her badly and I hoped she wanted me just as much.\n\n\"How do we stand with each other?\" I asked her the minute her door had closed behind me.\n\n\"How do you want us to stand?\" She countered defensively, leading the way through into her lounge.\n\nThere was gentle classical music playing softly, romantic violins making a strangely suitable background for the question I needed to ask. Hayley had a very eclectic taste in music, but she always, without fail, seemed to choose the right piece for the moment. I will never know how she does it.\n\n\"Are we going to be lovers?\" I asked her, thinking of how we had touched and kissed each other when last we met. \n\n\"No.\" She answered me very directly. \"And I don't want us to be.\"\n\nShe must have seen my face drop, for she continued. \"I don't want to risk your friendship that way. I just want us to stay as friends who enjoy a little fun together. Although I don't think we need to set limits anymore.\"\n\n\"Good.\" I smiled broadly. \"I think so too.\"\n\nWith our status settled there was a pleasant silence as we settled ourselves side by side on her sofa and listened quietly to Mahler's Fifth symphony, conscious perhaps that this was the same sofa where everything had started a few short weeks ago. That led me to silently thinking about last week when Hayley had touched me, remembering the fantastic sensation of having her fingers thrusting up inside me and the equally wonderful feeling of myself exploring her vagina. God, how good it is to play with a woman.\n\n\"Do you think all this counts as cheating on Mike and Paul?\" I asked abruptly, raising something that had been nagging at my conscience for since this all began.\n\nHayley was slow to answer, thoughts clearly criss-crossing her mind as she formulated her reply. She too must have been wrestling with this same problem.\n\n\"I suppose that we started cheating on them the minute we started to touch each other instead of just ourselves, Sue, and it's no use trying to say otherwise. But it doesn't feel wrong, and I'm not going to stop -- unless you are?\"\n\n\"It's a shame we can't tell them.\" I was thinking out loud. \"I don't like being deceitful.\"\n\n\"And I don't like the idea of divorce.\" Hayley cocked her head to one side as she looked across at me, as if to say it was a choice between two evils and secrecy was the better option. It was certainly the easier option.\n\nI think we both realised that we had reached the 'in for a penny, in for a pound' moment. A line that once crossed could not be uncrossed. Up until now we could convince ourselves, and maybe anyone else who happened to find out, that we had simply been carried away with a randy masturbation, but we were now entering a whole different ball game. Cheating was cheating, and I was well aware how easily it could get out of hand. I sighed and pushed the guilty thoughts from my head.\n\n\"Then we'd better not tell them, had we?\"\n\n\"I wouldn't even know how.\" Hayley remarked with a crooked smile.\n\nWe lapsed into silence again as we thought over what we had done together, and perhaps what we were likely to do. Suddenly Hayley shook her head and got to her feet, reaching back for the zip on her dress.\n\n\"Come on; let's not spoil things by getting too serious. I've been looking forward to today far too much for that.\"\n\nHer zip buzzed as she spoke and she shimmied herself out of her dress. She looked, as always, absolutely gorgeous standing in front of me in just a white thong and a matching quarter cup bra.\n\n\"What about your friends at the tennis club?\" I asked, suddenly remembering how she had told a group of her buddies what we were up to. And remembering too how they had expressed curiosity and interest.\n\n\"They won't say anything.\" She assured me. \"They don't know our husbands anyway.\"\n\n\"That's good - but it wasn't what I meant.\" I looked at her. \"I meant, do they still want to join in sometime, and would you like it?\"\n\nShe nodded understanding and her pretty elfin face took on a rare serious look. \"I don't want anything to come between you and me, so I don't think I'd want to go too far with them.\" She grinned unexpectedly. \"But a group wank might be interesting.\"\n\n\"Hayley!\" I felt my face colour at her blunt reply.\n\n\"Well, you said yourself last week upstairs that it would be a turn on for us to watch other women wanking, and I know they'd be up for it.\"\n\nI'd be up for it too. When we were in the bedroom I'd watched our reflections in the wardrobe mirror and imagined the two women I could see were strangers. I'd played with my clit, staring into the mirror and pretending to myself that it was another girl facing me, copying my movements as I masturbated, and the idea had really got to me. I was forced to admit to myself then that when I felt that horny I'd love to be watched playing with myself. A group wank, as she put it, would give me a hell of a kick.\n\n\"Come on,\" She repeated. \"Don't just sit there.\"\n\nAs she unclipped her bra I stood and reached for my own zip, remembering as I did so the lovely reflections in that mirror.\n\n\"Do you know what I'd like us to do?\" I asked her, sliding my dress down my arms.\n\n\"Quite a few things I should think.\" Hayley smiled. \"What particular disgracefully perverted thing have you got in mind?\"\n\nI ignored the tease, she could be like that sometimes. My bra joined my dress on the floor.\n\n\"You remember how we pretended that our reflections were other people sitting opposite and watching us?\"\n\nShe nodded and hooked her thong over her heel while I continued.\n\n\"Well, we've never sat straight opposite each other like that, have we?\"\n\n\"No, we haven't.\" She agreed. \"Then we shall.\"\n\nShe kicked our clothing out of the way and took hold of the corner of a second sofa and began hauling it into position. Her lounge is quite large and instead of one large settee and a number of chairs, she has several smaller sofas scattered around.\n\n\"Wait and I'll give you a hand.\" I kicked my own panties off and tossed them onto the pile of assorted women's wear that Hayley had kicked to the side.\n\nThe sight of two naked women trundling a sofa into position would have seemed strange to anyone looking in, but we weren't worried about that. Her house is reasonably private anyway, and we were giggling together at the thought of what we were planning. Soon we had the two sofas facing each other square on and about four or five feet apart. Hayley stood and looked at them thoughtfully.\n\n\"No, let's have them closer.\" She said eventually. \"Then we can put our feet up.\"\n\nIt was a phrase that usually has a different meaning, but I caught on to what she intended. We pushed the two together until the gap between them was only around a couple of feet.\n\n\"God, I've been looking forward to today.\" She giggled as she dropped onto one of the seats and opened her legs. \"And I like this idea.\" She meant sitting facing each other.\n\n\"Me too.\"\n\nI sat down exactly opposite her and, with a bit of girly giggling and foot fencing, we shuffled ourselves into place, with my longer legs outside of Hayley's more shapely ones. Now we faced each other, our bottoms on the edge of the cushions, our feet up on each others seats and our legs wide open so that our pussies were openly displayed. If anyone, only a few short weeks ago, had told me that I would willingly put myself in that position, I'd have laughed them out of town. But now? Well, now I couldn't wait to get started, watching Hayley play and knowing her eyes were on me.\n\n\"I think I'm going to shave like you do.\" I told her, settling myself comfortably and gazing at her smoothly shaven labia.\n\n\"Don't you dare, I like to see you as you are. Your curls make a lovely frame for a beautiful picture.\"\n\nI couldn't help but feel pleased with a compliment like that. I don't shave, though I do keep my blonde fuzz trimmed, but even so I couldn't help but feel scruffy in comparison to Hayley. In a strange way I was envious of the smooth pink skin that surrounded her deep pink slit, a slit that now glistened with her juices.\n\n\"And you look good enough to eat.\" I told her, intentionally choosing the double entendre.\n\n\"Just don't use a knife and fork.\" She giggled, deliberately answering my unasked question.\n\nWe sat for a moment gazing silently at each other, adrenalin pumping. The album on the player had finished and the stillness was palpable.\n\n\"I'm feeling so bloody randy.\" Hayley whispered, looking meaningfully into my eyes. \n\n\"Me too, I'm wet through already.\" I glanced down, leading her eyes to my shiny pussy. \"I'm randy enough for anything.\"\n\n\"So am I. Anything at all.\" \n\nWe'd already agreed no boundaries, and this verbal exchange was simply our way of making sure we meant it. It was also us telling each other that today was going to be the day. We smiled at each other in understanding and leaned back, settling ourselves comfortably to watch each other play.\n\n\"God, I'm so glad we've started doing this.\" She told me, reaching between her legs with her right hand, opening her labia between her forked first and third fingers so that her longest finger could find her clitoris. \"I cum so bloody hard when you're there.\"\n\n\"Me too.\" I told her again, feeling a little warm flash of pleasure at her remark. I liked to watch Hayley cum almost as much as I wanted her to watch me. It was such a thrill to see her in the midst of her orgasm, her mouth hanging open, her eyes screwed tight and all her muscles tensing from the power of it, and I just hoped that she got as much of a thrill from my climaxes as I did from hers. \n\nI felt so damn randy that at first I rubbed gently at my clitoris using my first two fingers to go around and around the tip, not wanting to cum too quickly. It was nice, sitting there, legs wide, playing with myself and watching Hayley do the same right before me, and I didn't want it to be over too soon. Having said that, the way I felt I knew darn well I'd be able to cum more than once, it's just that it was, well... nice. \n\nI switched my gaze from her face to her pussy at intervals, watching her knuckles bobbing up and down as she masturbated, and then looking to see if her expression revealed the pleasure I knew she was feeling. Sometimes our eyes would meet and we'd smile quietly to each other, sharing our enjoyment. I could see her clitoris, hard and proud, moving under her fingertips and the little trickle of juices that ran from her wide open entrance. I could even see a little way up inside her, the deep red shiny walls of her vagina pulsing slightly from arousal. I felt hotter knowing that I was giving much the same display for Hayley. We watched each other almost every week, but this was by far the most explicit, and the most exciting. It wasn't long before our breathing became more rapid and excited as the first signs of approaching orgasm began to show on both of us.\n\nHayley's fingers were soon moving more rapidly and she started to move her head from side to side. I could see what was happening and I watched, transfixed, as her hips started to twitch a little and her thighs trembled, driven by the force of a very imminent climax. \n\n\"I'm going to cum.\" She gasped out, confirming the obvious.\n\nI must admit that I stopped playing to watch, relaxing slightly so that I could concentrate on what she was doing. She had stopped holding herself open, mainly because all her fingers were now flying over her clit, strumming back and forth, sometimes pressing and sometimes just touching herself lightly, but always bringing herself closer and closer to cumming. Her free hand, which had been resting on her leg, was now running up and down the inside of her thigh, the fingers flexing and straightening, grabbing at her flesh, sinking the fingertips into her soft flesh.\n\nSuddenly she began to let out a series of gasping moans and her pelvis began to jerk, thrusting upwards with each thrust a little harder and higher than the previous one, until finally she let out a wail of pleasure at the moment when her orgasm hit and her bottom raised itself off of the seat, her weight taken on her shoulders and the feet that rested either side of my legs. She held that position for several seconds while the peak of her orgasm passed and then slowly subsided, juddering occasionally from aftershocks, until finally it was over and she sprawled, spent but elated, before me.\n\n\"My god!\" She exclaimed breathlessly. \"I didn't expect to make it that quickly -- or that good!\"\n\nI smiled in shared pleasure and began once more to stroke my own clit with my forefinger. Although I felt as horny as hell, but I still wanted to hold back just a little longer, if only to show myself off to Hayley now that she had already cum. I thought it would be a thrill to let her just sit and watch me climax, but it seems she had other ideas.\n\n\"Are you going to cum?\" She asked me.\n\nI shook my head and smiled, still running my fingertip over my clit. \"Not yet. We're not all that bloody randy you know.\"\n\n\"Would you like me to help you?\"\n\nMy heart leapt at her words, my mouth suddenly going dry with excitement and my hand freezing over my pussy. I would love to have her help me, for it could only mean that she would be touching me again.\n\n\"If you'd like to.\" I told her, pretending not to be too eager but taking my hand away and spreading my legs even wider in hopeful anticipation.\n\n\"Can I do something that I want to try?\"\n\n\"Anything you like.\" I told her.\n\n\"If you don't like it, just tell me and I'll stop.\"\n\nI had a good idea what she had in mind, or I hoped I did, and if I was right then there was not a chance in hell that I would want to stop her. My heart started beating like a trip hammer in expectation.\n\nShe slid forward from her seat, kneeling between my legs and then pushing the two sofas apart to give herself more room. I hadn't thought of her doing that, and my heels landed on the carpet with something of a jolt, the surprise showing on my face and making Hayley chuckle.\n\n\"Wake up little Suzie.\" She paraphrased the old song with tinkling laughter in her voice. \"I can't do anything if I can't get in, now can I?\"\n\nI shook my head ruefully and waited for her to start. She edged forward holding two fingers up as if in blessing, and then without hesitation placed them squarely on my pussy, sliding them up and down all along my slit. Resting her other arm on my opened thigh, she stared at her fingers playing with me from close range, smiling in sexy satisfaction at what she was doing. I laid back and, watching the expression of lust on Hayley's face, I cupped my breasts in my hands, mauling and pulling at them, my dormant orgasm growing once more. All of a sudden I knew just what I wanted.\n\n\"Finger me, please Hayley.\" I pleaded with her.\n\nShe looked up at me as if surprised, but then she moved position so the thumb of her spare hand could take over rubbing my clit and, with a little twist and push, she buried her two fingers deep inside me.\n\n\"Oh, yes. Do it hard and I'll cum.\"\n\nWith her thumb rubbing over my clit and her fingers pistoning in and out of me, there was no doubt about my cumming. Right from the first thrust of her fingers ramming into me I could feel my orgasm growing stronger inside me. She took heed of my demand for it to be done hard, and the feel of her thumb grinding hard on my little button and her fingers thrusting so deep and so forcefully into my passage that her hand slammed against my pussy were sending me rapidly over the edge. Soon I was writhing and moaning, with little tremors running through my thighs and pelvis, my mouth clamped shut, and my knuckles turning white where I dug my fingers into the soft flesh of my breasts. I could sense that it was going to be a good one; the pressure build up was so enormous.\n\nWhen I finally came it was as if an express train had hit me. The room disappeared and my entire being became concentrated in that tiny area within my pelvis, only to expand again to fill my body with such intense pleasure that I just had to cry out, shuddering and jerking from the waves of sensations flooding my nervous system. Every plunge of her fingers into my pussy sent another shock wave of sensation along my nerves. It was so good I wanted it to last forever, but at the same time it was a relief when the power of the orgasm began to subside and I could eventually open my eyes again on the world around me.\n\n\"Good, was it?\"\n\nI nodded silently, licking dry lips and shivering, not from cold, and not because of the sheen of sweat that I was suddenly coated with, but from a crazy sense of loss now that my climax had passed. I was still juddering with orgasmic aftershocks that every tiny move of the fingers that still remained inside me. She made to remove them, but I clamped my hand around her wrist and shook my head.\n\n\"No, sweetheart.\" I gasped. \"I'm not done yet.\" \n\nShe cocked her head to one side in mute query, looking into my face with surprise in her eyes. I hadn't even realised it myself, but I was far from finished. It was as if my climax wasn't over, but had just subsided into the background for the moment. \n\n\"I can cum again, if you can keep going.\"\n\nHayley studied my face silently for a few seconds.\n\n\"Can I kiss you?\" She asked eventually.\n\n\"Of course you can, you don't need to ask.\" I wondered what had made her ask that. \"You can kiss me anytime you like.\"\n\nA hint of a smile showed fleetingly across her face before she wriggled lower, inserting her shoulders between my open legs. For a moment I wondered what she was doing, but then I suddenly understood.\n\n\"Oh god, Hayley. Yes please. Do it.\" I told her, opening my legs as wide as they would go. \n\nNow she smiled properly as she removed her fingers and knelt between my knees, gazing down at my wet and waiting pussy. \n\n\"Ready?\" She asked, knowing now that I realised what she intended and using the question to be sure of my agreement.\n\n\"Very.\" I nodded and closed my eyes to await her kiss.\n\nShe leaned forward, and then her hands gently but firmly pushed my legs back out of the way, folding them right back to give herself better access. I reached down with my eyes still shut and hooked my hands behind my knees, holding them out of the way and freeing Hayley's for whatever she wanted to do.\n\nShe moved forward a little further, and I felt her forearms rest on the back of my thighs, her hands stroking my skin. Then for a few seconds nothing happened, except that I thought I could detect a cool waft of her breath on my skin and adrenalin coursed through me as I realised her mouth was only inches from my pussy. With my legs bent back like that I was totally exposed and I was thrilled to know that she was again looking at all of me from so close up, as she primed herself to go down on me.",
        "Her hands moved, her fingers pulling my pussy open, and then I felt the first touch of her tongue tentatively tasting me, the tip running lightly along my slit. It was an amazing sensation, as light as a butterfly's wing and just as beautiful. \n\n\"Oh Hayley, that's bloody well incredible.\" I told her truthfully, wanting her to know how good it felt.\n\nAt first she contented herself with licking the inside of my labia, her tongue running from bottom to top, then lifting and doing the same thing to the other side. With my eyes still tightly shut I moaned and squirmed beneath her, the wonderful sensation amplified by the knowledge of who it was doing it.\n\nFor a moment she stopped and lifted her mouth away, but then, before I had time to realise or complain, the tip of her tongue flicked at the very tip of my clit, releasing a jolt of pure pleasure. My eyes shot open and I gasped out loud, feeling as well as hearing Hayley's little giggle.\n\nShe repeated her action, flicking my clit with her tongue, making me grip hard at my own legs from the intensity of the sensations. I looked down my abdomen at the mass of blonde hair between my legs, catching the sight of Hayley's blue eyes smiling up at me from under her fringe. Unable to speak, she gave me an unmistakeably sexy wink and turned her attention back to my clit. \n\nWhen my husband goes down on me he can make me cum in minutes, he's that good. But Hayley was even better. Perhaps it was the thrill of being licked by a woman, perhaps it was her better knowledge of our anatomy, or perhaps it was the thrill of having someone different doing it, but whichever it was, it was so fucking good.\n\nShe explored me, pulling me wide open, inserting her tongue under my hood to get the best from my clit. She flicked at it, nibbled at it and then sucked at it, before leaving it alone entirely to insert her tongue as far as she could up inside me. Almost as soon as she started I was groaning and shuddering from the fantastic feelings. It wasn't that I was cumming any faster than usual; it was just that the journey there was so much more intense. I even found myself grabbing at the cushions, clenching lumps of them in my fists with the power of the sensations. \n\nSoon, of course, I was getting close to cumming again and Hayley must have realised it from my reactions, for she placed the flat of her tongue over my pussy and licked me from the bottom of my slit to the top, pressing her tongue against me as it slid past. That was it. I couldn't take much of that and I was pushing back against her tongue as my orgasm boiled up inside me.\n\n\"I'm going to cum.\" I warned her, only to find the prophecy already fulfilled as a second monstrous orgasm exploded in my pelvis, making me jerk and thrust, nearly dislodging her wonderful tongue from my slit. She clutched at my thighs and bottom, trying to hold me still, but I just couldn't help it and by the time my climax had reached its peak my bottom had lifted several inches clear of the seat it was resting on.\n\nSlowly I came down, panting and gasping, ecstatic to have been brought to an orgasm by a woman's tongue and blissfully happy that Hayley and I had finally made that step. I looked down my body at her face gazing back at me from between my legs, wanting to laugh at the wetness around her lips and even on the end of her nose. That wetness was mine and it framed a huge delighted smile that lit up her face. I lowered my legs carefully either side of her shoulders and relaxed with a big smiley sigh.\n\n\"I take it you liked that?\" She asked with a grin.\n\n\"Go, did I ever!\" I exclaimed. \"That was fabulous.\"\n\n\"Good, because I enjoyed doing it.\" She paused. \"You taste lovely, and I want to do it again and again.\"\n\n\"Oh, yes please.\" I rolled my eyes and smiled.\n\nShe giggled again and came forward, sliding between my legs and up my body until she could kiss me on the mouth. It was perhaps the most glorious and erotic kiss of my life. I could taste my own juices on her lips and, just a delightfully subtle trace, on her tongue as well as it found its way between my lips. She explored my mouth with an urgency and passion that hadn't happened before, making little mewling noises and her body squirming on top of mine as she pressed herself against me.\n\n\"God, I want you!\" She gasped into my ear when our mouths finally parted.\n\nMy arms went around her and held her tight, pressing her hard little nipples against mine and running my hands along her spine. I still had my legs parted and without thinking I wrapped them around her as if she were a man, pushing up at her and trying to rub my pussy on her body. I felt her pubic bone press against mine, the contact made easier by the support of the sofa, and I tightened my legs to pull her hard on top of me.\n\n\"And I want you.\" I told her, meaning every word.\n\nWe rocked and rubbed against each other, gasping and moaning into each others mouths as we kissed again and again. With my legs so wide open it was just as if she was fucking me, but without any penetration. It was still utterly fantastic though, totally erotic, sexy and so bloody exciting to rub our bodies together. We were hot, red hot, but we were feeling not just outright horniness, but need and passionate affection. It was as if we wanted to possess each other completely.\n\n\"You know what?\" I whispered when we finally came up for air. \"I really wish you could fuck me properly sometimes.\"\n\n\"Sorry sweetheart.\" She whispered back. \"I know what you mean, but I'm a girl and I haven't got the right equipment.\"\n\n\"There's nothing wrong with your equipment.\" I assured her. \"And that reminds me. It's my turn to play now, don't you think.\"\n\nShe smiled happily and pulled herself from between my legs, looking about her before depositing herself on the second, previously abandoned sofa. She looked at me coyly.\n\n\"Well, here I am, if you want me.\"\n\nRight then I didn't care that she was a woman, I just needed to touch her, to play, kiss, and lick her. She closed her eyes and parted her legs, pulling them right back with her hands just as mine had been, signalling her surrender and giving me total access to her wet and swollen pussy. I slid my fingers along her crack, investigating her soft flesh, the intricate folds of her pussy and the little hard button that was her clit. She was wet and puffy, slippery all along her slit and so swollen that her labia felt like little warm moist cushions beneath my fingers. \n\nI found her gaping entrance and slid my two middle fingers just a little way into her vagina. She moaned softly and pushed upwards, trying to tempt my fingers deeper, but I smiled a 'no' at her unseeing eyes and pulled them out, wanting to explore her better.\n\n\"Not yet.\" I whispered, trailing my fingers back along her slit. \"We don't want to make you cum too soon, do we?\".\"\n\n\"I don't care, I can always cum again.\" Without opening her eyes she smiled a mischievous pout and let me continue. \n\nMy fingers skated over tender flesh, trailing through her wetness until I found her little button peeking out hard and proud from under its hood. I played with it for a few minutes, making her moan and writhe from the sensations it generated, her arms going around my shoulder with her fingernails digging into my skin, but the I slid my two finger back along her slit, forking them so that they wouldn't slide straight into her. She raised herself a little in invitation, but I ignored her and roamed past, tracing the outline of her pussy onto her perineum and then back to her clit.\n\n\"Suck it, Sue.\" She was pleading for the very thing I wanted to do next.\n\nI 'mmm'ed with pleasure at the thought, parted her pussy lips and gazed directly into her gaping vagina, just enjoying the wonderful view and taking in her perfume, that beautiful scent of a randy woman.\n\n\"Please, Sue!\"\n\nI knew what she wanted, what we were both pretty desperate for me to try, and I lowered my mouth to her pussy, my tongue extended to get the first fabulous taste of her dew. \n\nI have called it 'dew' but really it was nectar, what a gorgeous taste it was. I have tasted my own before, and once, when we got a bit adventurous with our play, I'd tasted Hayley's from her fingers. But to go down on her, to burrow my tongue into her sopping wet passage and to taste her at first hand, as it were, was just awesome. I wanted my tongue as far inside her as it would possibly go and I pushed my face right into her pussy, my mouth wide open to engulf her inner lips and my nose tip to tip with her clitoris, the end of my tongue lapping at the inside of her passage. I felt her fingers entwine themselves in my hair as she clutch at my head and pulled me onto her, her hips trying, as much as her rolled up position would let them, to push upwards as if her pussy wanted to swallow me.\n\n\"Oh Sue.\" \n\nThe tone of her voice and those two little words were all I needed to hear to know how much she was enjoying it, and I burrowed even deeper, stretching my tongue and pushing it right inside her, licking around the walls just inside of her vagina. My face was getting wet, covered with her juices as she moved against me, but I didn't care. The scent of her perfume, the taste of her, and her dew trickling from her in a little rivulet, were all wonderful, as well as being proof of her enjoyment.\n\nFor all that I was in heaven with my tongue inside Hayley, it rapidly tired and began to ache and no matter how much I wanted to carry on, I was forced to let it relax back into my mouth, contenting myself with kissing her slit, letting my lips work their way up until I was nibbling at her clitoris while it rested. \n\nSoon the aching eased and the tip of my tongue was back in action, probing and exploring her clit, flicking across it as she had done to me, making her hips jolt involuntarily each time. Then I began to lick her slit, running my tongue along its length just as my fingers had done earlier. I used the flat of my tongue, pressed against her with my lips and mouth, to lap from the top of her cleft, where I could glance up and see her screwed up face, over the entrance to her vagina to lap at her perineum, where all I could see was her beautiful and smoothly shaved pubes.\n\n\"God, Sue.\"\n\nI smiled to myself at her sudden lack of vocabulary, two words again more than sufficient to convey her meaning. I ran my tongue up and down her several times more, feeling her hips gyrate slightly under me as she started to get more aroused. I carried on licking the length of her slit, letting my tongue run right from above her clit to below her vagina, tasting and lapping as I went, and getting just as much pleasure as she was. \n\nI'd never thought I'd got a bisexual bone in my body, but going down on Hayley was one of the most exciting things I'd ever done in my life. I wondered what it would be like to do it to each other in a sixty-nine, and vowed to myself that we would find out. Guiltily, I also wondered briefly if every woman tasted this good.\n\n\"Oh, Sue.\" She repeated again, her voice strained through clenched jaws. \"I'm going to cum soon.\"\n\nI smiled into her pussy and concentrated on her clit, sucking the little button into my mouth, gripping it between lip guarded teeth so that I could lick and flick it with the tip of my tongue. I felt her squirm beneath me and her hand reached out to entangle her fingers in my hair and hold me in place, her own tiny movements now pulling at her clit and stimulating her even more.\n\n\"I'm nearly there.\" She gasped urgently, her other hand joining the first on the back of my head.\n\nI could tell how close she was by the involuntary twitching of her hips, making it difficult to keep nibbling at her clit, especially with her hands holding my head firmly against her and limiting my own movements. In the end I had to release her and simply hold my tongue out to allow her own movements let it massage her pussy. \n\nBut it didn't seem to matter because by now she was on that very brink of orgasm where virtually any stimulation would have tipped her over the edge and my tongue being rubbed against her clit was more than enough. She could no longer speak coherently, she was just making unintelligible gasps and groans among which I could pick out the word yes repeated over and over as her orgasm rolled over her. She was pulling at my hair, trying to clamp my mouth against her pussy but only succeeding in rubbing herself over my face, spreading her lovely juices all over my chin and cheeks, and all the time her body shuddered and trembled with an almighty orgasm -- and I loved every second of it.\n\nWhen she finally released me and let her legs fall back around my shoulders my face was shining wet all over and I was gasping for breath almost as much as she was, but it was so worth it. I had just made my best female friend orgasm with my tongue, something I never ever expected to do, but which I thought it was the most wonderful thing I'd ever done. After she had done it to me Hayley had exclaimed that she wanted to do it again and again, and I now knew exactly why. I would go down on her every day if she wanted me to. Even though I had not long ago climaxed, and Hayley had not touched me at all, doing that had turned me on like you wouldn't believe, and I wanted more, much more.\n\n\"My god, Sue.\" She said eventually, getting the words out between breaths. \"Feel my heart, because I think it's likely to jump out of my chest.\"\n\nShe reached down for my hand and, pulling her perky little breast up out of the way, she laid it on her chest where I could feel her heart pounding away like the proverbial trip hammer.\n\n\"You enjoyed it too, then?\" I asked her, resting my arms over her thighs when she let go of my hand.\n\n\"The best!\"\n\nI didn't need to be told anything else, her smile as she said that was enough. \n\n\"I bet you don't want to kiss me now though, do you?\" I asked. \"Until I wipe my face, that is.\"\n\nShe looked at me for a moment and then tilted her head to the side, realised how coated I was with her wetness and burst out laughing, her laughter interrupted with gasps as she tried still to get her breath back fully. \n\n\"A new kind of makeup is it?\" She giggled at last. \"And it suits you so well.\"\n\nThere was about a half second silence as I tried to come up with a clever remark, but then she beat me to it with a request I hadn't expected.\n\n\"Let's go up to bed, Sue. Then I can kiss you properly.\"\n\n\"Just kiss?\" I asked, wanting more than that in my still horny state.\n\n\"Just kiss.\" She confirmed. \"It's been great and I could keep on cumming forever today, but... I don't know, I just want to hold you and be with you for a while.\"\n\nI couldn't argue with that, it sounded wonderful.\n\nWe lay side by side on the bed and rolled into each other's arms, gazing at each other's smiling faces before we came together for a proper lover's kiss. Yes, I know we'd already agreed that we weren't going to become lovers, but that was the only kind of kiss that fitted the circumstances. Her hands roamed over my back, stroking me from shoulders to bottom, while I just wrapped both arms around her and held her tight.\n\nIt was strange. I thought I could still detect my own scent on Hayley's tongue and lips when she kissed me, even with her own perfume still strong in my nose and mouth, but then perhaps it was just my mind convincing me of its presence because of what we had enjoyed with each other. We were more than friends now, and nothing would change that, regardless of what we wanted things to be like. And as it happens, I don't think either of us minded.\n\nHayley's tongue investigated my mouth as if it was the first time, just as her hands explored my back, tracing and caressing me so gently and yet so fiercely. I felt the same, and my hands now parted, one staying around her shoulders to hold her close while the other traced her spine as far as I could reach and then cupped her buttock, pulling her body against my own, making her hardened nipples dig into the softer flesh of my breasts. \n\nWe lay like that for a long time, just quietly kissing and caressing each other, lazily and affectionately recovering from our session, but then Hayley broke the silence.\n\n\"We won't let Sheryl and the others see us do what we were doing earlier, will we?\"\n\nFor a moment that threw me, but then I realised that she was talking about her tennis club friends. I drew back and looked at her in surprise, not having heard the name before, but she misinterpreted my confusion.\n\n\"I mean, I'd prefer to keep doing things to each other between ourselves.\" She hesitated. \"I just think it's kind of special.\"\n\nI was still trying to get my head around what she was saying when she continued.\n\n\"But I do want to get together with them for a bit of fun, don't you?\"\n\n\"Well, yes, I think I do.\" I told her. \"But I don't know them, I don't know if we could get on or anything. I mean, I've never even met them.\"\n\n\"You will.\" She smiled at me and planted a little peck on my lips. \"I've arranged for us all to meet on Wednesday for a coffee and for you and them just to get to know each other.\"\n\n\"Hmm! Thanks for telling me.\" I pretended irritation, but Hayley could see through it and so I went on. \"You really do want us to meet as a group then, don't you?\"\n\n\"Yes, I do.\" She looked directly at me, a serious look in her eyes. \"But I'm not sure I could do anything with you with other girls watching.\"\n\nActually, my thoughts about that had changed. I was now becoming proud of my blossoming relationship with Hayley, and I was getting that I didn't care if everyone in the world, except our husbands of course, wanted to see us make love. I was also becoming much more at ease with the idea of girl on girl sex, or whatever you want to call it -- though my mind still baulked a little at the word lesbian.\n\n\"I know what you mean.\" I tried to give Hayley the answer she wanted. \"What we have together we'll keep separate. That is, if anything ever comes of meeting your friends.\"\n\n\"Thank you.\" She told me. \"Now kiss me again.\"\n\n\"With pleasure.\"\n\nWe kissed again, and again, until soon once more we were softly touching and fondling each other, the touches becoming more intimate and more urgent, until my hand found its way between our bodies and reached for the join of her legs.\n\n\"See!\" I told her with a grin. \"We won't even be able to kiss when we're in company, because I wouldn't be able to keep my hands to myself.\"\n\n\"Then maybe we'd better practise.\"\n\nI looked at her questioningly.\n\n\"It would be nice to play with ourselves while we're still kissing, wouldn't it?\"\n\nIt would! I rolled my bottom half away a little while keeping one arm around Hayley's shoulders, so that I could reach between my legs while keeping my mouth within reach of hers. She did the same thing and very soon we were masturbating and looking directly into each others eyes at the same time. We leaned forward to kiss each other, feeling the motions of our arms and bodies through our mouths and knowing exactly what we were each doing. It was a most erotic and stimulating experience, one that I want to try again, and I can it recommend to anyone else who fancies it.\n\nWithout thinking about it we automatically pulled each other closer as we kissed and the back of my hand ran into the back of Hayley's. Now I could feel her knuckles moving as her fingers played with her clit, and I could match her little pleasure sounds with the tiny movements of her hips transferred through her hand. My fingers rubbed at my pussy, arousal returning in full measure, and the possibility of another massive orgasm loomed large.\n\n\"Jesus, Sue.\" Hayley tore her mouth from mine in order to speak. \"I'm not sure I can stand much more of this.\"\n\nHer face belied the words, but I had to ask. \"Don't you like it?\"\n\n\"God, yes. But I want us to do each other.\"",
        "\"So do I.\" I paused, wondering if I dare suggest it, and then I asked. \"Shall we try a sixty-nine?\" \n\nHayley's eyes lit up and I thought for a moment she was going to say yes, but then she shook her head.\n\n\"No, not right now. Let's save that. I know something else I want to try.\"\n\nWithout explaining she pulled away from me and scrambled from the bed, turning to stand at the edge.\n\n\"Lie at the far side, but diagonally across the bed.\" She instructed, pushing both duvet and pillows onto the floor.\n\nI did as I was told, without being sure why.\n\n\"Right, open your legs a little bit, and then push one leg straight out and bend the other one.\"\n\nI still didn't know what I was doing, but I did it anyway, finishing with my left leg pointing at the diagonally opposite corner of the bed and my right knee raised beside it.\n\n\"Mmmmm! That looks good.\" Hayley smiled at me and went to the foot of the bed. \n\nI was just beginning to dimly see what she was doing, or at least I hoped I was, and my excited belief was confirmed when she sat on the edge and swung her own legs up and right around so that she mirrored my position. She could see that the penny had dropped for me and she smiled sexily.\n\n\"Fancy it?\" She asked, shuffling forward on her bottom.\n\n\"Only if there's nothing better.\"\n\nI had intended my response to sound teasingly offhand, but instead it came out as an excited whimper and Hayley giggled at the failure.\n\nWe came together like two pairs of scissors. Hayley slid her extended leg under my raised knee and hooked her other leg over my straight one, moving closer until her pussy was only a couple of inches from mine. She looked at me, her eyes bright and her breath ragged as she plucked up the nerve, and then, tipping herself slightly onto her side, she pulled on my raised knee, sliding herself forward until our pussies touched.\n\n\"Wow!\" She said just the one word in an explosive release of breath.\n\nI gripped her knee and, turning a little in the opposite way, pulled her close in, feeling the softness of her labia pressed on to my own. She smiled a tiny excited smile and began to move her hips, rubbing her pussy over mine. For a few seconds I just let her do it, revelling in the exquisite sensation, but then arousal took over and I too began to thrust with my hips, my pussy moving at right angles to Hayley's. The feeling was beautiful. I could feel her pubic bone pushing hard against my soft cleft, passing back and forth over my clit, and hear our combined wetness squelching as we rubbed together, and because the two of us were rubbing in different directions, it multiplied the sensations, making good feel fantastic, and fantastic totally awesome. \n\nAlmost immediately I knew that I was going to cum, and the look on Hayley's face told me that she had the same feeling. Our movements became faster and more forceful, her pussy grinding into mine harder and harder, so hard in fact that I could even feel that little nub of her clit pressing into me. My breathing was soon coming in little gasps and the movements of my hips were losing coordination, making me jerk and thrust at Hayley in unsynchronized jerks, jerks that seemed to increase the stimulation and get me closer to cumming.\n\n\"Ohhh Sue! I'm going to cum big time.\" Hayley announced, her face reddening and her mouth tightening from her effort.\n\n\"Me too.\" I told her, gripping her thigh so hard that my fingers sank into her the muscles of her leg.\n\nI must have been gripping her hard enough to hurt, but then she was doing the same to me and I didn't feel a thing.\n\n\"I'm cumming!\" She shouted suddenly and pushed herself hard up against me, no longer rubbing against me but ramming herself onto my pussy, and at the same time triggering my own orgasm.\n\nThat was the most explosive orgasm I had ever had. I cannot say that I didn't feel it coming, but it still caught me unawares. It was as if molten ecstasy had just run along all my nervous system and detonated at each nerve ending. I bucked and thrust, forcing myself against her, only to feel her pushing back just as strongly. I cried out, a meaningless stream of sounds that were intended to be the words that described how good it felt. \n\nOn and on it went, I looked across at Hayley, seeing her neck muscles standing like chords and knowing that mine were the same, seeing her abdomen rippling from her effort and her leg muscles knotting at the force of her climax. Then I just closed my eyes and let myself be carried on by a river of sensation until it eventually dumped me on the bed, panting and sweating, totally and utterly spent, and almost sobbing with the pure emotion of it. \n\nFor a while neither of us moved. We just lay together in the same position, with our pussies still touching, while we fought for breath. I was shivering and trembling and I could feel that Hayley was doing the same, occasionally grunting or gasping as an orgasmic aftershock ran through one or the other of us, lying in awe of what we had just experienced.\n\n\"There's a special name for when girls do that with each other, but I don't know what it's called.\" She gasped after a while.\n\n\"I do!\" I told her.\n\nShe looked at me enquiringly.\n\n\"It's called absolutely fucking fabulous, that's what it's called.\" "
    ],
    "authorname": "Otazel",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/busy-fingers-ch-05"
}