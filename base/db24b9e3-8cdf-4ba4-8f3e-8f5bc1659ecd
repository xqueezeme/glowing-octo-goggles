{
    "title": "Flowers for Jill Ch. 03",
    "pages": [
        "Author's Note: \n\nMany thanks to everyone that took the time to comment, rate, or email me about the story, you're all superstars! \n\nI apologize deeply for taking so long to post this chapter; I've been busy, busy, busy, and my tardiness bugs me more than I can say. I wanted to post this as soon as I'm finished writing it, so I didn't proofread it, and I want to apologize in advance for any errors or misspellings you might find. \n\nI appreciate all your feedback and look forward to it, so don't hesitate to shoot me a comment or an email! \n\nYour girl Ginger \n\n***** \n\nJillian was popular, but she didn't have a lot of friends. She had many acquaintances, but none of them was considered an extension of her family or whatever it is close friends were. She was, however, close to three friends. Two of them lived out of town, and she kept in touch with them via emailing and social networks when they didn't have the time to call or visit each other. The third was Spencer; her ultra awesome gay friend whom she could call or pay a surprise emergency visit anytime, and vice versa. \n\nWhile she was putting on her makeup, Spencer complained loudly on speaker phone, \"You know, for a non-morning person, you wake up too damn early!\" \n\nIt was 6:42 am, and she'd already finished her workout, and was eating a breakfast of whole wheat bread with whole fruit, sugarless jam with a mug of black coffee while getting ready for work, \"It's called committing to my work, Spence, you think I like getting up at the ass-crack of dawn?\" \n\n\"Some people do.\" He said it with such horror that she smiled and shook her head casting a glance at his caller picture on her phone screen, \"They're unnatural.\" She commented. \n\n\"Yeah, no kidding.\" He snorted, \"So why do I have to suffer with you today?\" \n\n\"I need outfit advice.\" She rarely depended on another person's opinion when it came to her clothes, makeup, or hair, but today was important, and she wanted feedback. \n\nA theatrical gasp blared through the speaker before he said, \"Are you asking for fashion advice? Gurl! What's going on?\" \n\nShe wiped a dot of makeup primer on the metal edge of her eyelash curler, then put it to her lash line, having found a trick to curling her lashes after applying mascara, \"You know how I told you the boss's son is taking over?\" when he confirmed it, she went on, \"Well, he's coming today. We're all meeting him for the first time because he was pretty much out of the picture the entire five years I worked for \u00c9lsi Dussant. We've been emailing some plans and whatnot for the past few months, and he's basically been acquainting himself with the ins and outs of the company. I want to make a good first impression.\" \n\nHer friend's pause fooled her into thinking that he was compiling some suggestions for her, but he was in a whole other world all together, \"Is he cute?\" \n\nGrunting, she replied, \"I don't know. I've. Never. Met. Him. Were you listening to me?\" \n\n\"Yes, yes,\" he defended, \"I was just trying to get the scoop. So, like, why hadn't he been in the picture earlier?\" \n\nShe hadn't stopped to think about it before, \"I don't know. He used to work for another company -again, I don't know why, but we bought it about six months ago, and then, suddenly, Mr. Dussant Sr. decided to plan retiring and moving his son in his place.\" \n\n\"Fascinating.\" \n\n\"Not really, you just like to put a dramatic spin on everything.\" \n\n\"That's why I have way more fun than you.\" \n\n\"True.\" She chuckled, \"Now help me, I was thinking I should wear a dress.\" \n\n\"Color? Style?\" \n\n\"It's a Calvin Kle-\" \n\n\"Don't mention that man's name to me.\" Spencer cut her off dramatically, \"He is dead to me. Dead.\" \n\nBiting her lip against a laugh, she met her own gaze in the mirror, \"Are you still upset because he dated that cute little porno guy?\" \n\nEver reasonable, he cried, \"He stole him from me!\" \n\n\"You didn't even know the guy existed until they started dating.\" Silence followed until she cooed, \"I wov you, Spency!\" \n\n\"Color? Style?\" \n\n\"Lavender, knee-length sheath.\" \n\n\"Purple again? Yawn!\" \n\n\"Hey, purple is great!\" \n\n\"Let's do something else, m'kay? What else do you have picked?\" \n\nShe had washed and straightened her wavy hair until it glistened in a dark curtain that she draped on her shoulders and upper back, \"I was thinking a Calvin number would be appropriate, more business-like.\" \n\n\"It's not always about who you're wearing.\" \n\nTrying to avoid getting into that subject with him like they had in the past, she corrected, \"Whom.\" \n\n\"I didn't realize I signed up for a pre-dawn wakeup call, and a double shot of bitch for breakfast.\" \n\nShe was being unreasonably difficult, \"Sorry. I truly am.\" \n\n\"Apology accepted, but it won't be if you say you want to wear that orange wrap dress.\" \n\nShe started to defend her pretty Nicole Miller, then bit her tongue swallowing the label name, \"There this silver green sheath with a square-cut neckline, and a ruche bodice.\" \n\n\"Sleeves?\" \n\n\"Cap-sleeves.\" \n\n\"Shoes?\" \n\n\"Two-toned mint green cap, and taupe, sling-backs.\" \n\n\"No, ew.\" \n\nEw?? \"Gray with dark silver mesh on the side pumps?\" \n\n\"Ooh, are they Louboutin's?\" \n\n\"Oh, so only you can pick by designer! And no; Diane Von Furstenberg.\" \n\n\"Yes, and I don't know her, so yes.\" \n\nShe smiled at her clothes' picks hanging on a wooden row of hooks attached to the door of her gigantic closet, and dedicated entirely to display possible outfit options, \"Thank you so much.\" \n\n\"Welcome, but we're not done,\" he enquired, \"Makeup?\" \n\nOh, damn. \"Uh...well, I'm ah...I started wearing mascara again, like...two months ago.\" She grimaced and heard him curse with a lot of \"Oh no, girl.\"'s and \"What the...?\"'s. She had \"gotten off\" mascara a few months back, her decision made the day before she met Marc, after a rather ugly episode of her getting caught in the rain with washable mascara and no umbrella. Of course, fate decided that she needed an audience for her horrid look, and decided that she needed to run into her ex-flame, Curt. It was one of the few -very few- times for him to actually acknowledge her, and say her name. He only did that when he found her in a compromising position, and this particular situation was the mother of them all. \n\n\"I thought you were switching to eyeliner and shadow for good. You caved! I can't believe you!\" \n\nShe realized that she didn't want to change her habits and preferences because of a man like Dirty Curty. For a long time, she stayed hung up on something that never happened, never developed, turning into a sad, simpering fool for...well, a fool! She didn't want that anymore, \"That's too much makeup, with mascara I can just brush it on, slather some moisturizer and leave. And, and, and still look like myself without makeup.\" \n\nHe contemplated for a second, then gave her his blessing, \"Use a waterproof coat.\" \n\nBy the time she left the house, she felt positively beautiful, poised, and ready to bitch-slap Goliath if need be. \n\nThe fact that she was too early didn't faze her, nor did it prompt her to lollygag with any of the other employees that flocked the employee lounge and shot the breeze over fresh Kolache and Donuts. She was geared up for her big meeting, and had sailed through half a project when a knock on her door startled her. \n\nHer Michelle watch reminded her it was too early for Mia, her secretary, to be at her desk as she normally paged her before letting a visitor in. \n\n\"Come in,\" her eyes moved back to the buyer's report she had printed earlier, and she highlighted another request to be approved. \n\n\"Are you always this early?\" \n\nThe voice made her gasp jumping in her chair. Back straight, eyes wide, no sound came from between her parted lips, and she moistened them with her tongue and tried again only to croak out a weak, \"Marc?!\" \n\n\"Instant Human Just Add Coffee,\" he read the quip on her coffee mug, \"That' funny! Good morning, workaholic!\" \n\nShe wrapped her fingers instinctively around her cup, hiding the writing, I won't ask how you knew I work here -not now anyway, but I will ask you to kindly leave.\" \n\nWhen he merely parked his butt in a chair after inspecting it with a grin, she explained, \"My new boss is coming today. Actually, he's everyone's new boss, and we have a meeting. Please, I'll see you at the hotel this evening, I promise.\" \n\n\"Funky chairs. Custom made?\" he was still smiling. \n\n\"Marc!\" she shot up in exasperation, \"I wasn't planning on ditching you, I swear. This isn't necessary.\" She glared at him, arms crossed, lips twisted in irascibility, but he just said, \"Oh I know you were coming.\" He adjusted his gold tie on his blue shirt, then looked her square in the eye, \"I don't tolerate bullshit, and I know you don't either.\" \n\n\"Good. Then you'll appreciate this warning,\" she stayed behind her desk knowing the importance of keeping a buffer between them, \"If you don't leave now, I won't show up at the hotel...not today, not next week, not ever. I don't want you to embarrass me at work.\" \n\n\"I don't take well to threats, and I won't embarrass you.\" \n\n\"I'm done arguing with you.\" She strode briskly towards the door, \"I'm going to ask nicely for the last time, but if you don't comply I'll have to call security to escort you out.\" \n\nHe caught her from behind hugging her close, big arms wrapped around her, \"I don't take orders, either. This is the first time I see you in a dress. I like it.\" his voice was smooth as whiskey in her ear, \"I like it very much.\" It burned its way down warming her to the tips of her toes. \n\nShe closed her eyes resisting the urge to relax in his hold, \"Marc, no.\" \n\n\"Lock the door.\" \n\nSwallowing, she whispered, \"I can't. Not here, please; my job is my life, I can't lose it.\" \n\n\"No one will know.\" \n\n\"I'll know. It's not professional.\" \n\n\"Lock the door.\" He repeated, the order a low, dangerous hiss that she found herself obeying with shaking hands. \n\nHis lips were hot and moist on the side of her neck, and she swept her hair to the side presenting no obstructions in the way of his wonderful mouth. \n\nHe ran his hands on her sides feeling her up from ribcage to thighs, up and down, then up again...slowly, deliberately...slithering down thoroughly, hypnotically, settling on her hips for a few heartbeats, \"How can a woman be so impossibly tiny, yet so perfectly curved?\" he whispered in her ear spanning her small waist with his hands as if to see if his fingers would meet -and they almost did, \"Your ass is pure magic.\" His hands roamed lower again caressing her hips and ass boldly like he owned her. The thought disturbed her; she didn't want to belong to anyone. Not in that way. People always disappointed her. The only one who's always been there for her, dependable, non-judgmental, and well-versed in her deepest thoughts was herself. The fact that he murmured, \"All mine\" while stroking her firm derriere in circles, added to her anxiety. \n\n\"I workout, that's why.\" She said dryly, her voice a scratch against his smooth petting. She placed her hands on his giving him a chastising squeeze, \"And I'm not yours.\" \n\nRelentless and incorrigible, he pressed her against him with a big hand on her stomach, \"When you're with me, you are.\" \n\n\"Right.\" She infused as much irritation in her tone as possible, but her body was winning over her mind. Sanity was slipping, the whole I'll-worry-about-fixing-this-later warped concept -which was foreign to her strict way of thinking and planning- presented itself as the most viable option. \n\n\"There isn't much we can do here without messing up the place, Marc.\" She managed to turn in his arms and hold his face with both hands, \"You'll have to be discreet without sacrificing any of your skills.\" \n\nEven in high heels, he towered over her 5'9\" frame, and she had to rise on tiptoes to kiss his sensuous mouth. That chocolate-minty taste that she now associated with him, made her smile into the kiss. She was sucking on his lower lip noisily when she imagined him keeping a stash of Andes mints handy, maybe on a chubby chef-shaped ceramic jar on his kitchen table. The imagery made her giggle. \n\n\"What is it?\" his inquisitive eyes had a trace of humor when they searched hers questioningly, \"You should know better than to laugh at a guy when he's trying to impress you.\" \n\n\"It's not that,\" she gave him a dozen quick pecks on his delicious mouth before saying, \"Your kisses taste like Christmas.\" \n\n\"Christmas is-\"He started, but she kissed him again lingeringly cutting off his reply. \n\nHe was hard, broad, and beautifully angled everywhere. The appreciation she had earlier for his ability to bring together his navy trousers and camel blazer in a refreshing utilization of suit separates, was now transforming into frustration with the fact that he was dressed so formally, that there were a lot of clothing items between her and his bare skin. They had very limited time, and a lot of layers between them. \n\n\"I have thirty-nine minutes.\" She pushed his jacket off his shoulders, kissing his chin and mouth, and that soft area between his cupid-bow and nose. This was her first time to see him -to feel him clean shaven. The smooth texture of his skin contrasted with his sharp, masculine edge. \n\nShe traced her fingertips along the square of his jaw where his skin stretch tautly when he smiled down at her, \"I can make you come at least three times in thirty-nine minutes with time to spare.\" \n\nHer eyes were riveted to his face. He looked so handsome and clean-cut in the daylight her large office windows provided. His wide smile would've seemed wholesome had it not been for the teasing quality of it that paired perfectly with his salacious suggestions. \n\nShe noticed, for the first time, how long his light golden lashes were, how the straight slashes of his eyebrows were darker where they started, their color gradient, as the ends were a lighter blond \"So you think you're that good?\" \n\n\"I rely heavily on the adequacy of my talents, so yes, ma'am.\" \n\n\"Don't call me \"ma'am\".\" She chucked him lightly on the chin and sent her other hand to inspect his crotch, to be rewarded with a big hard erection that pressed defiantly against his slacks' zipper. He groaned at the feel of her hand, fidgeting his left leg uneasily. She cupped him, stroking up and down his hard length, and relishing his response and the sight of his lashes touching the tops of his cheeks when he squeezed his eyes shut and swore. \n\n\"You're hard already.\" She crooned, \"So hot, so thick,\" slipping her fingers lower to caress his balls through his pants and boxer briefs, she bounced them lightly, \"So full of cum for me.\" \n\nEyes still closed, his mouth quirked to the side and he breathed, \"Yes, ma'am.\" \n\n\"Cheeky!\" she squeezed his testicles tighter making him groan and shift his legs again, \"Jesus, don't...I won't be able to hold it if you...\" he swallowed and opened his eyes trying to pin her with his intense gaze, but she pushed further, \"Don't call me \"ma'am\",\" she palmed his balls expertly, \"it makes me feel old and matronly.\" \n\n\"Matronly!\" he coughed a strangled chuckle, \"Lady, you're the furthest thing from matronly!\" \n\n\"Lady?\" she walked him back towards her desk, guiding him by the crotch until the back of his thighs bumped the wooden edge. \n\nThere was a lopsided grin on his face, \"Why not?\" \n\nHis belt buckle came off with a flick of her fingers, followed by the button, then the fly, and she went down to her knees hitting the carpet as the zipper slider hit the bottom of his pants' crotch line. \n\nThere was a damp spot on the front of his white boxer briefs, and she glanced up at him momentarily before letting her lids fall closed as she put her lips to the convex notch his glans made against his briefs. He groaned, she sucked, knowing that the cotton fabric adding to sensation her mouth caused, and she let her tongue seek out the details of the tip of his cock, his frenulum, the round edges of the mushroom head, and the slit that leaked copious precome. \n\nHand fisted in her hair, he pulled her back so that she looked up at him, and rasped, \"That's not what I had in mind, Jillian.\" But she touched the tip of her tongue to her upper lip pulling his underwear down, and freeing his cock that flapped up, lissomly bouncing up until she grasped it in her hand, \"You don't want this?\" she squeezed the tip milking more precome out of it then wiped it on her lips like lip-gloss. \n\nMarc's hand tightened in her hair, \"Jesus!\" \n\nShe fought a triumphant smile and ran her tongue on her lips taking his taste into her mouth, smacked her lips together, then kissed his cock, \"You don't like it when I do this?\" she cajoled kissing the thick, throbbing vein that ran along the lower side of his dick. \n\n\"You know very well that I do,\" he pulled at her hair a tad harder than before, and she felt her scalp sting in several places. A small wince escaped her lips involuntarily, and his grip lessened perceptibly as he stared down at her with unreadable, flaming blue eyes before barking, \"Get up.\" \n\nHe kept his hand in her hair when she rose up slowly, clumsily standing in front of him on wobbly legs with a chary, uncertain look in her eyes, \"What are you going to do?\" her timid voice sounded enticing even to her own ears, and she cleared her throat, \"Marc?\" \n\nHis answer was a fierce kiss that surprised her into gasping, but he didn't heed her surprise using it as an advantage to plunder her mouth avariciously feeding on her with a growl stuck in the back of his throat. His hand soothed her abused scalp gently, blunt fingertips twirling in circles around the roots of her hair and making her want to purr at the contrast between his fierce kiss and tender touch. \n\nPutting her own fingers to use, Jillian tore at the buttons of his shirt without bothering with his tie, and rested her hands on his lightly furred chest that expanded in a deep sigh at her touch. For a man, he was extremely graceful, for a man of his athletic build and big frame, he needed a new word put in the dictionary to describe his agility as he danced her around until she was seated on her desk top with her dress around her waist. \n\nHe paused briefly to unbutton his cuffs, and roll up his sleeves, but didn't waste an extra moment to take it completely off, dropping to the floor in front of her. \n\n\"For all the times you did this for me, Jill.\" He declared cupping her knees and parting them before he edged closer and closer until her thighs straddled him. \n\nSomething pinched her heart, an alien emotion that she was too scared to dwell upon, so she didn't -she wouldn't go there for him...for anyone. She took in his smiling face between her legs, hair blond as wheat in the sun, crisp and ready for harvest...don't go there, her mind warned when she plunged her fingers in his hair, clenching and unclenching them amongst the burnished gold locks. \n\nHe winked at her before turning to her left thigh, his lips connecting with her soft skin in a tenuous, aerial little kiss that developed when he parted his lips to suck at her inner thigh sharply. \n\nJillian gasped, slipping slightly off the glass top that covered her desk, and placed her hands on both sides bracing herself up. Mindless of her precarious position, he turned to her right thigh leaving another wet love bite on it, and it hit her that he was marking her. His kisses went beyond affection, or wanting to sample her taste; he was leaving his stamp on places only she would see and know who was there claiming her as his. She wanted to tell him to stop or to feel impervious to having him sign his work -so to speak- but it was all a part of the Pleasure Package that was Marc's specialty. ",
        "He nuzzled her skin where it was incredibly sensitive, taking his sweet time to get to the soaked crotch of her lace g-string. Inhaling her musky essence, he murmured, \"Time?\" \n\nHer hand shook when she lifted it to peek at her watch, and she dropped it back on the table, dug her left heel in the carpet pushing her body up, then held her trembling wrist in her line of vision again, \"Thirty-one minutes.\" \n\n\"Plenty o' time to go.\" Marc opened his mouth on her lapping at her cunt through the flimsy crotch of her panties -just like she did for him. He gave her as much as she gave him, and more. His whole demeanor relaying how her pleasure satisfied him, like pleasing her granted him the same euphoric gratification that she felt when he was on her. \n\nSlipping his finger into the leg of her g-string, he pulled the crotch away from her cunt, and slid his finger up and down in her moisture spreading it. the slick friction his knuckle caused everytime it came in contact with her softness, everytime it slipped over her clit, made her bite her lower lip flinching with half moans every few seconds. \n\n\"There's so much honey,\" he rubbed the lace against her leaking hole, then pulled it back and to the side, clear lines of her slimy arousal extended and stretched obscenely between her panties and cunt, \"my favorite breakfast,\" he licked the strings of moisture twining them around his tongue, \"So sweet...the sweetest.\" With his right hand, he pinched her pussy lips together between his index finger and thumb, rubbing them against each other, then kissed them like he would her mouth. \n\nJillian squirmed curling her fingers around the table edge, only Marc would fuck her mouth like a pussy, and kiss her pussy like a mouth. She heard herself whimper his name when he slipped his tongue between her nether lips while still holding them squeezed together, and lap up and down then gradually slip his fingers to the sides opening her pink petals like a blooming flower. \n\n\"Hold your panties for me.\" he asked, and she complied hooking her trembling middle and forefinger through the lace, and pulling it to the side. \"Just like that,\" he commended, \"feed me your honey, sweetheart.\" \n\nHis tongue explored her intimately, getting to know her better than she knew herself, making wet clicking sounds against her cunt everytime he licked her to scoop some of her juice into his mouth then swallow soundly with hushed, animalistic little grunts. \n\nHer eyes fluttered, gaze unfocused and jumping everywhere until it landed on a display of a hollow metal mannequin and an irregular, elongated mirror that she had set up close to the corner of her office that faced her desk. The reflection of the sight they made was wanton...forbidden, and her eyes were glued to their image knowing full well that what they were playing was indeed wanton and forbidden, not to mention that it put her job on the line. She may very well be escorting her career to the guillotine to be beheaded the second anyone found out about her indiscretion. \n\nHeart rapping a deafening tattoo, she felt his lips form an O around her distended sex bead sucking it, and toying with hood of her clit, all else lost its importance...everything faded next to the intense point of pleasure where his mouth fed on her center. Her toes curled in her shoes, one hand tightened on the desk while the other shook spasmodically, still clutching her underwear as her head lolled back on her shoulders in sheer ecstasy. \n\nShe felt her moisture drip lower, sliding in chubby drops between her ass cheeks and gather at the star of her anus. Marc's tongue followed the wet trail several times licking her dedicatedly as if he was priming her ass for a fucking. The idea that never held any appeal to her before didn't seem like such a bad thing right then. On the contrary, the memory of his fingers there triggered a dark craving she would've frowned upon had she not been so high on the pleasure he heaped upon her. She was too numb to think prudently, or even feel the discomfort of her position with the table edge -glass over cherry wood- biting into her soft ass cheeks, or the cramps caused by holding her legs rigidly still against their shaking. There was no other sensation to feel but his tongue licking between her inner and outer labia, then dipping into her tight hole repeatedly in shallow, quick fucking gestures. No other point on her body existed but the snug opening that welcomed two of his thick, long fingers which slid inside her and curled up brushing her g-spot on their way in and out. \n\nIn and out he finger-fucked her, mouth latched to her clit suckling on it. Everything sped up against everything, coming together in a crash of iridescent lights that flickered behind her eyelids when she shut them against the blast of her climax. She shook and convulsed against his face, too weak and shocked to moan, the only sound escaping her lips was the choppy gasps and exhales that were choreographed to the rhythm of her inner muscles' clench and release on his fingers. \n\nHer waning strength succumbed to the orgasm's aftershocks, and she thought with a thread of hazy panic that she was going to collapse, but Marc was there to hold her still, like a masculine brace that surrounded her with his muscles and scent to keep her world together. \n\n\"Oh my God!\" she managed a half whisper-half moan, and he kissed her brow, her cheekbone, and then her ear before declaring in a seductive murmur, \"That's one.\" \n\nShe blinked, a spall of sanity tearing into her brain, \"We don't have time.\" \n\nHe cupped her ass seating her more comfortably on the table, \"We have more than enough time, just keep your legs spread wide for me.\" his hands slithered forward and pushed her thighs further apart testing her flexibility, and grinned mischievously when they lissomly yielded, \"Watch me get inside you,\" he urged dropping his stare to where his groin faced hers, steel-rigid erection in his hand poised at her entrance, demanding entry. The spectacle's lewdness was intoxicating in a ribald, smutty sort of way, again, forbidden yet delicious -just like everything Marc was about. \n\nHe rubbed the swollen head of his cock up and down along her cleft mixing his precome with her dew, their combined juices making slick little sounds of lubricated flesh on flesh. Lower he went, until his glans touched her asshole where he paused to stroke her with a lopsided smirk pulling at the left corner of his mouth. They both peeked up at each other at the same time, and she lowered her lashes quickly when he licked his lips and canted his head to the right, still smiling that smug, male smile of his. \n\nBefore she formed on objection, he ran his dick back up to her cunt hole, and thrust experimentally into her. Her still sore tissues remonstrated against the stretching invasion, and she whimpered shutting her eyes and biting her lower lip. \n\n\"You okay?\" she felt his nose nuzzle her cheek, and swallowed, \"Hurts...\" then opened her eyes and faced him, \"I'm still a little tender,\" \n\nA thread of pride tinged the blue in his eyes darker, and he pushed a little deeper, \"Does this hurt?\" she blinked biting her lip again, and didn't answer, so he plunged deeper still, \"Do you want me to stop?\" \n\nShe shook her head, lips mouthing the word \"No\", then cleared her throat and said it; his intruding penetration a delicious marriage of pain and pleasure against her pussy that was attenuated by her earlier orgasm. \n\n\"You sure? I can kiss it and make it better again.\" he crooned, but his hips were already moving forward, driving into her. \n\nShe put a hand to his waist, right above his hipbone, and smoothed his tie on his bare chest with the other, \"Keep going, fuck me, make me come for you again, Marc,\" \n\n\"Right here in your office?\" he teased, \"You're not gonna call security on me?\" \n\n\"Fuck you!\" she pulled at his tie when he buried his cock all the way inside her, \"Maybe later,\" a small grin touched her lips and he gave her a sharp thrust as punishment, \"Not if I filled your mouth with cock and cum to shut you up.\" \n\n\"Yum!\" she yanked his tie again, bringing his head closer to hers to kiss him, \"I can't wait. I love it.\" She clenched her cunt on his penis drawing a harsh curse out of him, \"You're a filthy little nymphomaniac, Jillian,\" he pumped his hips bluntly, stretching her quivering pussy around his thick tool, \"do you beg other guys to fuck you like this?\" \n\nShe didn't, not with anyone else; he was a whim, a fantasy that she acted upon after caging all of her cravings and lustful dreams far too long, but she didn't want to reveal that to him, \"What difference does it make?\" \n\nHer answer set him off, his brows lowered to knot in a sullen frown, and she felt his fingers dig roughly into her thighs, \"Do you?\" he enquired again fucking her faster as if to chasten her pussy for ever embracing another cock. \n\nJillian gasped rather loudly, then swallowed nervously, \"No, I don't...\" then she added, \"I swear.\" And grimaced at her weakness, and turned her head to the side. \n\n\"That's what I thought,\" he grumbled settling his right hand on the small of her back to keep her from bouncing as his pounding got more feral, and insistent, \"you might be a little cum-slut, but you're my cum-slut, and it's my cock you'll be begging for.\" \n\nWhat brought that on? Why was he suddenly so intent on staking a claim on her? She didn't need any more confusion to add to the bewildered tangle of emotions that raged within her everytime she thought of him, \"How come you can say that I'm yours, but I can't say it about you?\" she struggled to keep her eyes focused on his while his cock pistoned in and out of her making a variety of luridly pornographic sloshing sounds. \n\n\"Who said that you can't?\" he paused for a heartbeat, and she inhaled swiftly, taken aback by his loaded question, and her inability to find an answer. Her vision cleared, and she gulped, \"Marc...I don't-\" \n\nHe shoved his cock into her, and ground out, \"Yeah?\" \n\nShe cried out feeling his encroachment on her body and now mind, complete in all aspects; he wanted to takeover and she was letting him, \"Why did you make it so difficult?\" she framed his face with her trembling hands, wanting so badly to staunch the traitorous part of her that was glad he took things further than they agreed upon all those months ago. \n\n\"I didn't make it difficult,\" he faced her, and when she dropped the subject, too wound up in her arousal to contest his argument, he kissed her and slowed his thrusts readjusting his stance to stuff himself all the way inside her until he hit all the places that made her squirm at once. And squirm she did, scratching at his shoulders, and pulling at his tie and the lapels of his open shirt as she felt every thick vein on his solid erection titillating and scrubbing her softness raw. \n\nShe was so close...his pubic hair scraped her engorged clit, his cock hit her all the way to her womb, the lace of her panties added to the maddening friction of his thrusts, and his left hand palmed her breast through her dress...she was so close, she swallowed the nervous saliva forming in the back of her throat, and heard her own heart thump loudly in her ears, her blood thinned by arousal like it was light with alcohol, yet this was more intoxicating than the hardest liquor, \"Marc, I'm going to come,\" she leaned forward breathing against the place where his neck met his shoulder, \"I want you to come with me,\" her tongue darted out to lick the small beads of dew her breath left on his skin, then kissed him hard enough to leave a hickey, \"I want you to come with me,\" she whispered shakily whimpering and beating her left leg back, hitting the desk with her heels. \n\n\"Yes, baby, come for me, squeeze my dick with that tight pussy, Jillian, come for me,\" he pumped into her faster, then she heard him groan, and wheeze a strangled curse as he released into her. His large cock felt impossibly larger as it surged deep spurting into her, and the power of his combustion set hers off. She had to bite his shoulder to keep from screaming, the ebb and flow of her orgasm milking him dry, and drawing out his pleasure. He pulsed inside her, his heartbeat hers for those countable, precious moments, and her cunt gobbled him up greedily squeezing him, clenching against him, spasm after spasm announcing the \"Mine.\" Declaration she couldn't bring herself to voice. \n\nHe stilled within her, but she was wracked by lingering, softer spasms still that were too perfect with the taste of his skin under her tongue, and the sound of his harsh panting in her ears. \n\n\"That's two.\" He muttered hoarsely and straightened up bringing her face up with his fingers under her chin. \n\n\"I don't think I can take another one.\" She confessed, but he gestured with his head for her to look at their centers as he slipped his softening cock out of her with a wet slurp. \n\nInstantaneously, a stream of his pearly white cream started to dribble out of her pink hole, and she put her hand to it, then met his gaze. He looked like he was fighting a grin, \"'S gonna make a mess.\" He murmured, leaning his head characteristically to the side, his grin winning over. \n\nUnthinkingly, she brought her hand to her mouth, and lapped at the puddle of cum gathered in her palm, then watched with wonder as his limp cock lurched up, and heard him swear violently, \"Motherfucker!\" he ground out, all traces of his smirk erased, and replaced with hungry lust, \"Eat it off your fucking hand, eat it all off.\" \n\nAha! And just like that, she had the upper hand again; right in her hand! Smiling into her palm, she licked his cream, then swallowed it soundly, and licked her lips contentedly afterwards. \n\n\"There's more.\" He rasped, and she nodded swirling her fingers on the plump drops of cum that dripped on the glass-top of her desk, before bringing her fingers to her mouth and sucking them. \n\n\"Time?\" he requested gruffly, eyes dilated, and fixed on her, and she finally released her panties lifting her left hand to her mouth and cleaning his semen off the thenar muscle arch, under her thumb, and flashing her watch at him. \n\nNodding resolutely, he reached behind her, and she followed his face giving him a wicked smile while nibbling on her fingers soundly. He divided his gaze between her eyes and mouth barely blinking, his breathing was harsh, but a ghost of his grin shadowed his face when he murmured, \"Ready for number three?\" \n\nShe glanced at his already semi-hard cock, and reached for it, but he grasped her wrist with his left hand, \"No time for that,\" he said flashing in his other hand her budding rose glass figurine that he snatched from her desk. \n\nFrowning slightly, she started to question his intentions, then shook her head, \"Whatever you're planning, Marc, it's-\" but he was already pulling at the triangle that formed the front of her g-string, rubbing the lacey material between her nether lips, and soaking the already stained fabric with their essence. The pattern of her panties' lace sent short electric jolts of pleasure through her. \n\n\"You sound much more agreeable with my cock in your mouth, Jillian.\" \n\n\"How dare you!\" she slapped his shoulder, but he flashed her a smile, \"I jest, my lady, I jest!\" his teasing making her giggle against her will, \"You're incorrigible.\" \n\n\"I aim to entertain and pleasure,\" he said holding her panties to the side with one hand, and touching the clear glass of the flower to her moist folds. \n\n\"I need time to recover, Marc,\" she admitted seeking his gaze, but he merely kissed her, the sapid taste of his ejaculate mixing with the remnants of her pussy on his lips. The flower scraped in circles around her hole, then he brought it to her clitoris, the glass slithering easily with her moisture -and his- all over it. \n\nThat's all he needed to do, kiss her breathless while twirling the flower in maddening patterns over her sensitized button. Her hands rested on his chest, sticky with his residue that her fingers twirled his chest hair with, then painted over the flat disks of his nipples. \n\n\"Jesus, Jillian, no,\" he entreated, \"this time's for you.\" \n\n\"But I want to touch you.\" \n\nHis right hand shook pressing the glass flush against her clit, \"We don't have much time left.\" He rubbed faster, making sure the top of the bud, where the petals' edges were corrugated and scalloped, scraped across her clitoris until she squirmed and her breath turned patchy. \n\nShe pinched one of his nipples sharply whispering, \"I can't, Marc, it's too much,\" but he didn't ease up until her third orgasm hit her in an abrupt wave. She keened softly, then closed her eyes and felt his left hand cover her mouth masking her moans. He thought of everything, she mused in the back of her mind feeling him slip his middle finger into her just to feel her undulating inner muscles ripple and squeeze him one more time. \n\nThat last one left her with a sensation similar to an ice-cream induced brain-freeze, and she swayed and leaned against him when she tried to stand up. Releasing her breath on an exhale, she said \"I need to clean up,\" and slipped her panties off awkwardly, stepping out of them and holding them crumpled in her hand and adjusted the skirt of her dress, \"Wait here.\" She held a finger to him and made to turn to her private bathroom. \n\nTrousers clutched at his waist with the zipper down, he asked, \"Do you have any Kleenex?\" and looked sensuously sexy with his rumpled clothes, and mussed hair, his cock unapologetically hardening again like a flagrant indicator of his lust. \n\nShe dug in one of her drawers and tossed him a pack of moist facial wipes, \"This is better.\" \n\n\"Thanks.\" \n\nWhat have you done? Was her first conscious thought when she met her reflection in the mirror, the second one was a deep appreciation for the fact that she had her own bathroom complete with a bidet shower that came with her deeply rooted hatred of germ-occupied public bathrooms. \n\nWhat have you done? Was still a predominant query that her sanity demanded an answer to, even as she washed up and dried, brushed her hair neatly again, then sprayed some perfume to cover any scent of sex that might've clung on her. She made a quick job of washing her g-string, and hung it to dry on a towel rack, she'd worn it with a matching balconette bra just for Marc...well, good ol' Marc's impatience had separated it from its mate for the remainder of the day. \n\nShe always kept a change of business clothes in the office, but her fresh underwear were in her gym back. She calculated whether she had enough time to run down to her car and retrieve a pair of panties when the bathroom door opened behind her and she jumped to see Marc enter so casually, and drop the used wipes into the trash bin. \n\n\"Excuse you!\" she smoothed her dress down again, brushing over the small wrinkles that still attested to what they did a few minutes ago. \n\n\"I figured you were done,\" he turned on the water and washed his hands, then his face, and took the liberty of using one of her monogrammed hand towels to dry, before dipping it under the faucet's running stream and wiping his chest with it, \"you got cum on my chest, Jill, I have to clean up, too.\" \n\nShe heard herself say, \"You look like a male stripper with your shirt open, and your tie hanging on your bare chest like that.\" \n\nHe laughed taking off his tie. \n\n\"I'm sorry about your tie.\" She pointed at the wrinkled, and miserably ruined tie apologetically, and he shrugged, \"Don't worry aboat it.\" his accent so fetching as his voice echoed slightly in the bathroom. \n\n\"I have a few sample orders here somewhere, I'm sure there're a few ties in one of the boxes.\" \n\nHe buttoned his shirt and stuffed the tails in his pants, \"I'd appreciate another one if you can find it.\" he'd done a good job of stuffing his cock in his pants again, and adjusting it so that it doesn't bulge against his zipper too obviously despite its large size. Noticing the destination of her gaze, he said \"I'm going to have to go like this all day if you don't do something about it soon -after the meeting, maybe?\" ",
        "\"You're insatiable.\" she left the restroom with him on her heels, and started digging in a box labeled \"Accessories\" with a short list of designer names printed on the same label. \n\n\"For you, I am.\" \n\nShe found a beige tie that worked with his outfit, though not as elegantly as the gold one did, but he didn't complain about the color. Her walking up to him and sliding it around his collar to tie it surprised him, and he smiled, \"This is nice, you're sweet.\" \n\nShe paused, then said, \"Listen, Marc, this has just taken a serious turn; you've gone and changed everything making it so difficult.\" \n\n\"I wanted more, you wanted more, but you were too chicken to tell me; so I took the lead.\" He added steadfastly, \"It was bound to happen.\" \n\n\"That's not true.\" \n\n\"You're a terrible liar -beautiful, but terrible.\" He challenged, and she shook her head, \"Okay, so we'll do it your way, but as it stands, you know a whole lot about me, and I know diddly squat about you.\" She slid the knot up setting it between his collar points, \"I know you're Canadian because of your accent, or maybe from somewhere in northern Michigan?\" \n\n\"Canadian's right,\" he smiled, \"Born in Montr\u00e9al, raised all over, but always a Montr\u00e9al boy.\" \n\n\"What do you do for a living?\" \n\n\"I work for my family's business.\" \n\nShe scowled, \"Like the mob?\" \n\nHe chuckled, \"Do I look like someone who works for the mob?\" \n\nHe looked like he could be a professional athlete, a hockey player or something, \"I don't know how mobsters are supposed to look like.\" \n\n\"Al Pacino.\" He smirked, but she shook her head, \"That's politically incorrect.\" And before he opened his mouth to say something, she shot out, \"You're not a male stripper, are you?\" \n\n\"Nah, I'm too shy.\" He fought a smile, placing his hand on his chest in a humble gesture. \n\n\"Right, and I buy my steak meat from Wal-Mart.\" \n\nThat made him laugh again, he looked so relaxed in her environment, like the monumental flip in their arrangement didn't have the same perplexing effect on him as it did her. \n\nHer pager buzzed, and Mia said \"The folks from management are swarmed around Helga, and I think she's P-ed off she looks like she'd just bitten a lemon. Good morning, Jillian.\" \n\n\"Morning, Mia, and you know that's Helga's happy face,\" she pressed her pager button talking into it, then turned her pyramid clock towards Marc -who was putting on his suit jacket- gesturing the time, \"Is Mr. Dussant Jr. with them?\" \n\n\"I don't see him, they all look so grouchy -well, not all of them, just Helga.\" \n\nHelga was Jillian's boss, and one of two above her before the Dussant's, \"Again, it's her happy face, she's a sweetie beneath all that.\" \n\nMia said something else, but Jillian released the intercom button turning her attention to Marc, \"I don't even know your last name.\" \n\n\"Dussant,\" he stated simply, \"Marc Dussant.\" \n\nThe ground disappeared from underneath her feet as her heartbeats turned into a buzzing noise in her ears, and in a flurry of motions, her door was opened by her secretary, and a group of her coworkers marched in, headed by Helga who exclaimed, \"Mr. Dussant! We were looking for you!\" \n\nMarc Dussant? Belatedly, she connected the dots, M. Dussant stood for Marc not Marcel, but she had just assumed the name was the same as his father's since everyone called him Dussant Junior. He knew exactly who she was all along, knew where she lived, where she worked; he was her goddamned boss and she was in the dark this whole time! \n\nSwallowing, she turned to her officemates trying to come up with a fib to placate their curiosity, but Marc was already talking, \"I stopped by a little early to see Ms. Zahra,\" he looked at Jillian, he knew who she was from her employment history down to her last name, yet she only found out what his last name was less than five minutes ago, \"We're good buddies.\" He flashed her a smile, and she exercised a herculean amount of self-control to keep from slapping him soundly, and calling him every name in the book -and a few she'd come up with just for a bastard like him. The asshole, how dare he! \n\n\"Are we?\" she cocked her head to the side belligerently drawing composure from her furiousness, \"Huh! I can't call my new boss a friend, anymore, now can I?\" her gaze told him to go fuck himself for there will be no more Jillian for him, but he slipped his hands in his pants pockets rocking back and forth on his heels, \"Of course you can, I'm not that kind of boss, Jillian.\" \n\n\"We're so glad you're here,\" one of the guys said extending his hand, \"your father was a stellar guy, real hardworking, yet very approachable, and he had you in his highest regards.\" \n\n\"I have big shoes to fill,\" he nodded shaking the man's hand, the ice-breaker creating a chain reaction of introductions, while she grabbed the folder she'd put together for the meeting with quivering hands, ignoring the puzzled looks her secretary gave her. \n\nWhen they left to the boardroom, she just followed the crowd on leaden legs, a million warring emotions scrambling and combusting in her mind, and forming a massive lump in her throat. \n\nThe boardroom was cool, elegant with a lot of glossed African Blackwood furniture and modern art that bordered on out there in its styles. It also smelled of the fresh linen scent that the cleaning lady tended to go heavy on, which made a lot of employees go ahead and buy her other air fresheners, but she never used any of the stuff they brought. \n\nThere was a long breakfast table set up with a Keurig coffee machine, an electric glass kettle full of water for tea, and an array of pastries. \n\nEyeing the buttery no-no's, Jillian shoved a company logo mug under the coffeemaker's spout, selecting a cup of dark roast to go with her gloomy mood that bubbled indignantly just like the water boiling in the kettle on her right. Ultra-mega pain-in-the-ass, Sam Delaney decided to inject himself next to her, intruding on her personal space with a suave smile other women swooned over \"I wouldn't have imagined that a woman with your figure would touch any of these goodies.\" He gestured the pastries that she wasn't planning on eating a piece of, since she'd already had breakfast. He knew her better than that, and she had a serious pet-peeve that involved the ignorant notion that a woman who fit in her low-digit-sized clothes starved herself. Sure, she didn't go ham on ice cream and chips every day, but she didn't deny herself, \"All in moderation,\" she barked snatching a mini cheese Danish with a glistening raspberry on top, and sunk her teeth into it. The treat tasted like sawdust as her dour mood pissed on everything -thanks to Marc The Lying Asshole, who was talking to someone else with one hand in his pocket while the other smoothed his tie absently. \n\nAs if sensing her eyes on him, he glanced around and smiled unconsciously at her without a trace of malice or teasing in his eyes, and she felt her insides roil with a mixture of rage, confusion, irritation, attraction, and...that nameless feeling that bugged her like a pesky fly that refused to land after she grabbed a newspaper to swat it. \n\nShe gave him a dark scowl before turning to the coffee machine that coughed and spat the last of its steaming, bitter stream, and she pulled the cup fast splashing a sizeable hot drop of coffee on her hand. \n\n\"Whoa, careful.\" Sam grabbed a few napkins offering them to her, \"I'm not in a hurry to use the coffeemaker, don't worry.\" \n\n\"Thanks.\" She grumbled snatching one of the napkins and wiping her hand. \n\n\"Welcome!\" he smiled genially looking very much like the same as he did the first day she met him in college when she helped him find his class. Okay, so he was a decent guy, but it lessen the fact that he was a major pain in the hiney who seemed to sprout everywhere she went since their university days. \n\n\"So you know that guy?\" he gestured with his eyebrow at Marc, and she felt an outlandish urge to laugh, \"By that guy you mean our boss, right?\" \n\n\"Uh, duh!\" \n\nShe threw him a withering look and shook her head, \"Not really, we just kind of...we're acquainted, but it's all because I had to email him several times after Mr. Dussa\u2014his father started planning his retirement and I needed direct managerial guidance.\" It wasn't the entire truth, but it wasn't a lie either, and she didn't feel as terrible as she would have had she agreed with Lying Marc's story about them being buddies. \n\nAs usual, she sat on Helga's left and watched Marc take his dad's seat at the head of the table as if he'd done it a thousand times before, and he started \"Okay, so many people ask me why I haven't worked to \u00c9lsi Dussant straight out of college, and I'm sure you all wonder the same thing; why now? Well,\" he drew a breath, \"dad wanted me to, I didn't, and we had an argument about it -a bit of a squabble, if you would- and since I wanted to do my own thing, I headed over to a smaller company -one that didn't have my grandmother's name on the building outside,\" he grinned glancing at the big logo on the wall of the big hall, then the coffee mug in his hand, \"and the inside, and the cups, and the letterheads, but I digress...older and wiser, I saw an opportunity of bringing the companies together, and suggested a buyout to my older boss then to my father, aaaand, a mountain of paperwork later; here I am!\" \n\nHe was schizophrenic, is what he was, Jillian raged, how could someone act all nice and professional when he was such a massive dick\u2014wrong choice of words, but she still agreed with herself. He'd seemed very business-oriented, and dripped of professionalism in his emails and the way he handled the reports she sent him, which contrasted shockingly with what he just did to her in her office, making her count her orgasms and lick his jism off her fingers. \n\n\"Ms. Zahra here has helped give me a detailed picture of how things were looking, staff and image-wise, and I have to agree with her on the number of changes that need to take place in order to keep \u00c9lsi Dussant from sinking and turning into another coup d'\u00e9tat for another corporation,\" he pulled a few documents from a folder supplied by -whom she assumed was his assistant- and hit a few printed bullets, pausing to explain his view in between his reading, as well as sending sharp scrutinizing looks at the faces of his audience. \n\nOpinions were thrown about, some possible solutions, some plain silence fillers that screamed I participated, so that's out of the way, and she found it difficult to keep her attention from straying towards Marc. She was staring at a printed page in front of her, after reading the same paragraph a good thirty times without really reading it, when his voice rang out, \"I'd like to work on your suggestions, Ms. Zahra.\" \n\nSo she went from Jill to Ms. Zahra in less than half an hour, \"Right, yes,\" she straightened in her seat tapping her pile of papers on the table, \"The ah...the proposals I've emailed you about?\" she couldn't bring herself to meet his gaze as she went on with her plans shortening the detailed aspects to as not to bore everyone to tears since this was just an initial discussion. \n\n\"The plan is to revamp the operating staff and some of the managerial chairs, and I think it's been delayed for far too long,\" Marc commented using the same description she had in her head; revamp, she found herself staring at his face for a brief moment that she killed the second he turned his eyes to her, \"The assessments you've given me are quite bleak, to be frank, but not unsalvageable.\" He repeated. \n\n\"We need to act fast though,\" someone put it, \"you don't want us to promote from within, Jillian, but it will save us the training time needed on outsiders.\" \n\n\"Here's my issue,\" Jillian began spiritedly, \"We don't have the right people in the right places; a buyer for a Dallas market can't do the job in place of their peer in...say, Atlanta, unless they're from Atlanta, or very well acquainted with the funky fashion trends ATL requires as opposed to the old-money austere-class Dallas socialites lean towards...and that's just one example, on just one problem area. I've been guilty of micro-managing before -caught myself doing it several times- but sometimes it's the only way to prevent disaster.\" \n\n\"Yeah, you breathe this job.\" Sam put in. \n\n\"She does micro-manage!\" Stella, the marketing guru chuckled, her short, straight blunt-cut platinum hair bobbing forward and back like a pendulum, \"In fact, that dress she's wearing was obtained by her interfering with a buyer's deal that was going down the drain, and saving it. She finagled it right from under Gilbert Goupin's talons!\" \n\nThe memory of beating another company to the punch brought a grin to Jillian's face, \"It's a limited edition, I had to save it, and keep a memento for myself!\" \n\nShe felt his heated gaze on her for the remainder of the meeting, and was crafty in her escape as she sneaked out of the hall unnoticed by him, and slipped into the ladies' room. \n\nThe common restroom was nice, but she hadn't needed to use it since she got her promotion and bigger office more than two years ago, but it was the closest place to hide in until everyone went back to their offices. A soft hiss startled her, and she detected the air freshener attached to the wall, her OCD brain emphasizing the scent that was better than the boardroom's fresh linen, as she watched the small drops get sprayed across the air. \n\n\"You're pathetic,\" she told herself breathing deeply, and watching her chest rise and fall in the mirror, her breasts pushing against the dress' bodice like they're about to spill out everytime she inhaled. \n\nShe shook her head still looking at her reflection, not heeding the door that swished open, until she saw his reflection behind her in the mirror, and swiveled on the balls of her feet with a finger pointed at him, \"You lying bastard! How dare you! You're a liar, a jerk, and you sneak on people in bathrooms,\" she was gushing, and didn't care to lower her voice, \"you can't do that to people...what was that, like, a-a-a test?\" she threw her hands in the air, \"Okay then, I guess I failed. Good for you, good for you.\" She caught herself before she turned into a full blown lunatic. \n\n\"I didn't lie,\" he amended, \"you wanted a stranger to fuck, so I didn't tell you my name until you asked for it.\" \n\n\"Omitting important facts is lying, genius.\" \n\n\"It wasn't a test, I wanted you. Still do. You're not wearing panties, are you?\" \n\n\"What the...\" she blinked pressing her fingertips to her temples, \"Are you for real? What are you on, seriously, 'cause it sure is one hell of a trip!\" \n\nHe started to say something when a couple of conversing voices materialized at the door, making him slip into a stall and try to pull her with him. She swatted at his hand right before the two women walked in, and he was forced to close the door and hide. \n\nStriding decidedly to her office, she emptied a box of hopeful models' polaroids, and started arranging her personal stuff in it. The stylish desk clock, her collection of engraved ballpoint pens, an eclectic selection of planners, rolodexes, and her\u2014she paused staring at the glass rose that Marc had wrapped with a moist wipe clearly intending to wipe it after he cleaned himself. The delicate artwork sat there like an offending witness of her foolhardy, reminding her of how people always let her down. \n\nShe shook her head in an attempt to reroute her thoughts, this box wasn't going to be enough -her office had become her home away from...actually, her own home was \"Home away from the office\" so to speak- she'd brought in a lot of stuff turning it into a cozy haven for her to drown in her work. Things won't fit in her car in one trip. She also needed to type and sign an official letter of resignation...oy vey! \n\n\"Jillian, you have a visitor.\" Her intercom blared. \n\nShe leaned across her desk pressing the button, \"I'm busy.\" \n\n\"It's Mr. Dussant.\" Mia clarified the same moment Marc pushed the door open, \"That wasn't cool.\" He began, then halted, taking in her half empty desk with the loaded box on top, \"What's this about?\" \n\nFacing him, she squared her shoulders, \"I quit. You don't need to fire me, I'll do it for you.\" There. This was easier than typing a letter of resignation. \n\nA dark frown transformed his face, \"You what? I won't accept it.\" he treaded towards her, and she held a hand up gesturing him to stay away, \"I'm saving you the time and energy, and saving myself from the humiliation of a demission. I failed your test, hence I'm leaving.\" \n\n\"What test? There's no test. What's with all this crap? I told you I don't like bullshit.\" \n\nArms akimbo, she spat, \"No bullshit here, I'm leaving. Officially.\" \n\n\"Yeeaaaah, no. You're not. I don't accept; you're the best asset this company has, and you said yourself that this job is very important to you, don't flip out over some personal shit that isn't related to your work in any way or form. What we have between us is exactly what it is; between us. Personal. Case closed. When you come in here, I expect you to do your job the way you've always done it, and I shall do my job the way I'm needed to. Our relationship-\" \n\n\"Is that why your fucked me in my office?\" she nearly shouted, and stood in place, shaking with rage for a ten second count, before snatching her purse, \"I'm done with this.\" \n\nShe rounded him reaching the door first, and throwing it open in a cheap shot at stopping any further arguments from him in front of witnesses, and out of the privacy of her office. \n\n\"This conversation isn't over.\" He ground out then walked off ahead of her. \n\n\"Wow, he looks pissed.\" Mia remarked tilting her head back to stare at his retreating behind, \"He's a super hunk. I like angry hunks.\" \n\nJillian shook her head balefully, \"I'm leaving for the day.\" She declared shutting her mind and ears against Mia's comments about what a prime piece of beefcake Mr. Dussant Jr. was. \n\nUnconsciously, she drove to the pet store closest to her loft, and walked straight to the cat section where they had some cats for adoption. One cat has caught her attention a few weeks back, as she frequented the store to look at animals she didn't have the time to raise, and she noticed that it -she was still there. \n\nThe kitty was three years old, as the chart on her glass window said, nameless, and had a bum-eye. \n\n\"Hi Kimmy,\" Jillian touched her hand to the glass watching the cat's good eye dilate in affection before she started to rub herself against the window as if she was getting stroked by Jillian's hand, \"I missed you.\" \n\nIt was sad that everyone wanted the pretty little kittens, and fluffy cats, but no one wanted Kimmy because of her eye. She was a very friendly calico, and it squeezed Jillian's heart to see her get ignored by the kids and animal lovers who came in to adopt a helpless creature, and walked out with one of the cute ones. \n\n\"You should take her home.\" Shannon, the store manager walked up to Jillian, \"I know you want to.\" \n\nShe smiled ruefully, \"I can't take care of her, you know that.\" \n\nHe cast her a knowing glance, \"You'll make a great mother for her; you're very affectionate and kind.\" \n\n\"Right,\" she laughed mirthlessly, \"you should do stand-up, Shannon.\" \n\nBut he insisted, \"You come in here regularly to look at the animals, and donate money, and you don't even own an animal. That says something. And I haven't even mentioned how sweet you are to my associates, or the Christmas gifts you gave us last winter.\" \n\nWas she kind? \"What if I was a terrible person who wanted to attune to their sins by giving back a little?\" was she a terrible person? She tried not to be, very effectively, in fact, yet karma seemed to be after her all the time. ",
        "\"You've had a long Monday.\" He reasoned, \"You need a pet to keep you company.\" \n\n\"Not today, Shannon.\" She smiled, \"Not ever, but nice try.\" \n\nShe made her regular trip around the bird cages pushing her finger between the bars of the big lovebird's cage, and chuckling at the little mice who fell off their exercise wheels, then made her regular donation at the register before heading home feeling positively better. But the minute she opened her door, she was assaulted by a sense of despair, and a loneliness that was worse than the numerous times she got her heart broken by Curt and, of all things, she burst out crying for the first time in a long time. \n\nShe had promised herself not to cry about a guy anymore, yet here she was, bawling her eyes out for Marc Dussant. Boy, was she in trouble."
    ],
    "authorname": "Ginger_Martin",
    "tags": [
        "office sex",
        "pussy eating",
        "cunnlingus",
        "cum eating",
        "rough sex",
        "one on one"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/flowers-for-jill-ch-03"
}