{
    "title": "Two Years, Four Months, One Week...",
    "pages": [
        "Two Years, Four Months, One Week and Roughly 4 Hours \n\nPart two of Kate and Erin's story: \n\nAn unplanned continuation for two of my favourite characters, I hope you all enjoy this one. There isn't too much sex here so if that's what you're hoping for you might want to give this one a miss, this story also works on the assumption that you have read part one (Nine Months, One Week...) ...although it's not an essential for this to make sense. \n\nI apologise for not responding to a lot of the feedback I've received, please know that all your comments and feedback do mean a lot to me and I try to take them onboard when writing my next story. \n\nAll the best \n\nTwo Years, Four Months, One Week and Roughly 4 Hours \n\nChapter One: \n\nOne Year, Six Months, Two Weeks, Three Days and Roughly 12 Hours: \n\n\"See you tomorrow Kate, don't forget the meeting!\" Dan shouts across the carpark as he waves goodbye to me. \n\n\"I won't Dan.\" I reply. \n\n\"Has Erin put it in your diary for you?\" He smirks. \n\n\"Erm, excuse me,\" I frown in mock annoyance, \"I'm perfectly capable of remembering my own meetings without Erin having to put them in my diary!\" \n\n\"Yeah, yeah,\" He smiles, \"course you are. I'll call her later with the details then, shall I?\" \n\n\"You'd be wasting your time.\" I grin \"I'll be there, bright and early.\" \n\n\"If you say so, but don't forget I knew you before Erin came into your life all those years ago...\" His grins widens \"and you were never on time for anything.\" \n\n\"Bye Dan.\" I call as I climb into the car. \n\nI'm so tired, this is my third eighteen-hour shift at the hospital in a row with only a few hours' break in between, my eyelids feel like lead as I lean back in my seat and turn the key in the ignition. \n\n... \n\n\"Baby, I'm home.\" I slam the front door, drop my bag unceremoniously at the foot of the stairs next to Erin's favourite hoodie and let myself into the front room. \n\n\"Hey beautiful,\" Erin smiles at me from her reclined position across the couch, her book resting lightly on her chest, her blonde hair tied back in a ponytail, \"how was your surgery?\" \n\n\"Oh, you know,\" I kick my shoes off and lay on top of her. Carefully moving her book to the floor, I rest my head on her chest, my arms fall to either side of her ribs and I feel them gently expand against my forearms as she breathes, \"I was as awesome as ever.\" \n\n\"Oh really?\" She smiles and runs her hands through my hair, kissing the top of my head. \n\n\"Really, really.\" I reply, already feeling sleep start to take over my aching and sore body under her touch. \n\n\"Well unfortunately you don't smell awesome,\" she giggles, \"let me up, I'm gonna run you a bath.\" \n\n\"Noooo.\" I groan, gripping her tighter as she tries to move from under me. \n\n\"Kate,\" she laughs, \"to be blunt darling you stink. You need a bath. Now let me up so I can run you one.\" \n\nBegrudgingly I let her up from under me. \n\n\"I'm too good to you, you know.\" She smiles, swinging her legs round until she's sat on the edge of the couch. \n\n\"I know,\" I smile in return, \"there's not a day goes by where I don't remind myself how lucky I am.\" \n\n\"Oh ha ha.\" She leans down and kisses me deeply. \"Give Wilbur his dinner for me would you?\" \n\n... \n\nWilbur. \n\nWilbur was Erin's very real, very fluffy, giant rabbit, who, despite my objections, lived in the house and slept in the front room. We'd been to an animal shelter last winter and it had been love at first sight when Erin had walked past his hutch and seen him sitting there. \n\n\"We can't just leave him here,\" she'd begged, \"please Kate. Just look at him, sitting there all on his own. He's only a baby.\" \n\nOne look at her sad eyes was all it had taken for me to cave in...although she'd had to work a bit harder for me to agree to letting him live in the house. A small smile crosses my lips as I remember how she had taken me to bed one night and teased me mercilessly, driving me higher and higher, to the point where I would agree to anything, making me beg for release before leaning over me and whispering; \n\n\"It's really cold outside baby...and lonely...I think Wilbur would much prefer to be inside with us...\" \n\nI could still feel the way her tongue had traced from my collarbone up across my neck and then up to my ear as she had whispered those words. \n\n\"Ok, ok fine.\" I had groaned through a smile \"He can live in the damned house...now please baby, please don't make me wait anymore.\" \n\nThe orgasm that rocked my body after that was one of the best I'd ever had. When I was next able to clearly focus on her, Erin had this amazing, cheeky, yet triumphant grin on her face that seemed to radiate out into the room around her. She was so beautiful. When she fell asleep in my arms that night I knew I'd never love anyone else the way I loved her. \n\n... \n\nComing out of my daydream I sigh and look over to the corner of the room, sure enough Wilbur is there, sat waiting patiently next to his empty food bowl looking at me with doleful eyes...anyone who says rabbits have no personality has clearly never owned one. It takes a considerable effort but eventually I manage to slide off the couch and fill it up for him, stroking him briefly before dragging myself upstairs to the bathroom. \n\nI meet Erin on the landing and pull her in for another kiss. \n\n\"Bath, Kate,\" she smiles as she extracts herself from my grasp, \"you can kiss me all you want when you're clean.\" \n\n\"You don't want to join me?\" I pout. \n\n\"Maybe later.\" She says walking down the stairs. \n\nSomewhat reluctantly I draw my gaze away from her ass and open the bathroom door. \n\nThe bath is run to perfection, hot water, bubbles, candles...and on closer inspection...a vibrator I didn't know we owned sitting on the edge. \n\nGrinning, I strip off my clothes and lay down in the hot water, letting it soak through my aching body. \n\n... \n\nRoughly twenty minutes pass before I find the strength to reach out for the shower gel and start to wash away the smell of the hospital. I debate for a while if I should use the vibrator or not. I know Erin put it there to tempt me but I'd much rather have her wrapped around me. \n\nI bite my bottom lip as I stare at the vibe, my fingers take on a life of their own and begin to play with my breasts, massaging them gently as my thumbs make small circles over my nipples...an orgasm would definitely help me to de-stress... \n\nIn the end my growing arousal wins out. Cursing Erin and her knowledge that I wouldn't be able to resist I pinch my nipples roughly as I turn on the vibe and press it against my clit under the water. \n\n\"Fuck!\" I gasp. This thing is seriously powerful. \n\nMy mind wanders to all the ways Erin could tease me with this toy and I rapidly find myself falling over the edge, I grip the side of the bath tight as my orgasm courses through my body, my breathing unsteady. \n\nI take a few deep breaths and look down at the vibrator still in my hand, smiling as a plan formulates in my mind. I jump out of the bath, dry myself off and walk naked back downstairs. \n\n... \n\nErin is stood in the kitchen writing in her diary as I enter, I walk across to her and press myself against her back, my left hand gripping her hip as my right tangles in her hair and pulls slightly, exposing her neck. \n\n\"Do you enjoy your bath?\" She gasps as I bite her neck. \n\n\"What do you think?\" I reply taking her right hand and pressing it between my legs. \n\n\"Mmmm,\" she moans and pushes the tip of a finger into my still wet pussy, \"I think you did.\" she turns in my arms and kisses me. \n\n\"You certainly smell a lot better.\" She grins. Her left hand comes to my breast while she slips her finger deeper into me. \n\n\"Ah,\" I gasp, \"I'm spotlessly clean...which I think you'll find means I can kiss you as much as I want.\" I go to kiss her again but she presses a finger to my lips. \n\n\"Hmmm, you could,\" she smirks, \"but it turns out you missed a spot.\" \n\n\"I did?\" I murmur against her lips. \n\nShe kisses me again and traces my bottom lip with her tongue, a cheeky gleam in her eye. Despite having a few inches and several extra pounds on her, I find myself being turned around and backed into the kitchen counter. I flinch as my ass makes contact with the cold wood and Erin smiles. \n\n\"Relax baby.\" Her lips leave mine and she tucks her head into the crook of my neck, her teeth making gentle contact with my skin. \n\n\"Here?\" I raise an eyebrow \"Really?\" \n\n\"Right here.\" She whispers before biting harder and using her fingers to pinch my nipples. \n\nI moan loudly, I can't deny that I want this, but it wasn't exactly what I had in mind when I left the bathroom. Slowly I relax against the counter trying not to make it look like the wood is that cold, Erin smiles at me and slides her tongue down over my collarbone to my breasts, she takes my nipple between her lips and sucks softly. My eyes flutter closed under her loving touch and I barely notice her moving lower and lower down my body. That is until I feel her give my left thigh a sharp nip. \n\n\"Hey,\" I gasp, \"that hurt.\" \n\nErin doesn't answer, instead her eyes lock on mine as I look down my body at her and she nips my thigh again, gently this time. I sigh softly, loving the sight of her on her knees between my legs, I feel my arousal spike and start to run down the inside of my thigh. \n\nShe strokes her fingernails lightly over the tops of my feet, around my ankles and up my calves, her eyes never leaving mine. I moan as her fingers run up the back sides of my thighs, scratching lightly. \n\n\"This is where you missed baby.\" She whispers. \n\nShe extends her tongue and licks the trail of juice running down my thigh back up my leg to my now dripping pussy, my eyes roll into my head and I can't help but lean back fully against the counter as her lips make their first contact with my clit. \n\n\"Oh fuck,\" I moan, \"that feels so good.\" \n\nShe nuzzles further into me and lifts my left leg, laying it over her shoulder. Her left hand wraps around my right thigh and she digs her fingernails into my ass causing me to moan again. She buries two fingers from her right hand in my pussy and quickly slips them in and out while her tongue continues its work against my clit. \n\nMy legs start to shake and I push my fingers through her hair, pulling her against me. \n\n\"Fuck, Erin,\" I shout, \"that feels so good baby. Please honey, please don't stop.\" \n\nI feel her smile against me, her fingers curl deliberately, it takes less than half a second for her to find my g-spot. \n\n\"Fuuuucccckkk!\" \n\nI'm moaning loudly now and panting hard, my fingernails dig into the back of Erin's head holding her so close I'm surprised she can still breathe. I bring my eyes down from the ceiling to look at her, using the pressure from my fingers to tilt her face towards mine slightly. I'm desperate for her to see my face, for her to look into my eyes and know just how much I love her. \n\nOur eyes finally meet and that was all she wrote. \n\n\"Cumming...baby...fuck...\" I babble incoherently as I reach out and grip the kitchen side to stop myself from collapsing. \n\nMy left leg wraps as tightly as I can muster around Erin's back, my other hand leaves her hair to grip the counter to my other side. My body shakes as wave after wave of pleasure washes over me...then...just as I think I'm done...Erin switches her mouth and fingers around, she buries her tongue deep in my pussy and rubs furious small circles on my clit. \n\n\"Ohhhhh goddddd...\" I wail \"...bayybbee...\" \n\nI feel my release pouring out, soaking Erin's chin, she uses her left arm to help support me as I slide down the cupboard to the floor, I pull her against me as best I can and bring her in for a kiss, tasting myself on her lips. \n\n\"Baby...\" I gasp breathlessly \"...that was...that was just...\" \n\n\"Shhhh,\" she kisses me again, knowing I need her to hold me close, \"just breathe.\" \n\n... \n\nEventually we make it upstairs to bed. \n\nI roll Erin onto her back and stroke my hand up the insides of her smooth thighs while we kiss softly under the covers. \n\n\"You know I love you right baby?\" I whisper against her neck as I kiss my way down to her shoulder. \n\n\"I had noticed, yes.\" She smiles at me and kisses my forehead. \n\nI move to kiss across her chest and she runs her fingers through my hair, cupping my cheek. \n\n\"You don't have too baby,\" she whispers, \"I know you're exhausted from work.\" \n\n\"I want too,\" I turn my face into her hand and kiss her palm, \"I'm desperate to show you how good this thing is.\" Grinning, I reach over and grab the new vibrator from my bedside table. \n\n\"What makes you think I haven't already tried it out?\" She asks when she sees it, trying hard to supress a grin. \n\n\"And here's me thinking you'd bought it specially for me.\" I frown in mock outrage switching it on and running it down between her breasts. \n\n\"Ohhhh.\" She moans quietly as I let the vibe run further down her body, through the triangle of hair on her pussy towards her clit. \n\nI take her nipple between my lips and swirl my tongue around it, moving the vibe down over her pussy as I go, deliberately avoiding direct contact with her clit. \n\n\"That's mean baby,\" she gasps \"especially when I'm already so damned turned on from watching you in the kitchen!\" \n\n\"You brought this on yourself sweetheart.\" I hum against her nipple. \n\n\"Ahhh,\" she gasps again, her hands gripping my shoulders, \"please baby, let's go already.\" \n\nI re-position myself between her legs and hold the vibe tantalisingly over her clit, my lips never leaving her breasts. \n\n\"Please Katie.\" She begs, lifting her hips towards the vibrator. \n\n\"Hey!\" I say firmly, pulling the vibe away and pressing my weight against her \"Do that again and I'll stop.\" \n\nErin simply looks at me. \n\nNot remotely bothered by my threat, she raises herself onto her elbows and kisses me, her fingers traversing my arm until she reaches the hand holding the vibe, she pushes her hips upwards again, making sure I feel the contact between my thighs. \n\n\"Pleeeaaase baby,\" she whispers against my ear while slowly moving the hand holding the vibrator towards her pussy, \"I've been thinking about you all day, I need this...we need this.\" \n\nShe pulls her hips back from me and positions the vibe between us, her legs wrap around my thighs, holding us together as her free hand slips into my hair. She kisses me again and switches on the vibe. \n\n\"Oh fuck!\" I gasp against her lips. \n\nThis feels amazing. I can tell Erin is already close from the way she's panting and moaning into my mouth. I suck lightly on her tongue as I gaze down at her, her eyes turning that beautiful deep green they become when she's incredibly aroused. \n\nErin pushes herself fully against me, our nipples brush softly together and she abruptly pulls her head away. \n\n\"Oh fuck, oh fuck, fuck, fuck, fuck!\" She shouts \"Kate...Katie...baby...please...I need...\" \n\nHer body shakes strongly beneath me as I follow with my own orgasm. Knowing exactly what she needs I switch off the vibe and thrown it across the bed. I roll onto my side and gather her in my arms, covering as much of her body with mine as I can.  \n\nAs her breathing begins to steady I roll her gently onto her back once more and lay down between her legs. I press the flat of my tongue against her soaking pussy and lick softly upwards, lowering the pressure as I reach her clit. She sighs appreciatively and tangles her fingers in my hair. \n\nI breathe her in deeply as I lick every drop of juice from her pussy and thighs, feeling her become more and more relaxed with each stroke of my tongue. As I finish I kiss my way softly back up her body, making sure to avoid any particularly sensitive spots. I lay down beside her and take up my favourite position nuzzled into her neck. \n\n\"I love you Katie.\" She whispers as her eyes flutter closed. \n\n\"I love you too honey.\" \n\nChapter Two: \n\nThe Job Offer: \n\nI wake the next morning to the smell of coffee and roll over to see a steaming mug on the bedside table beside me. Sitting up in bed I smile and pull the covers tighter around myself as I reach for the mug. \n\nHowever, my smile doesn't last long when I pick up my cell phone and notice the time...I should have been at work two hours ago! Maybe I should've let Dan call Erin... \n\nI Jump out of bed, run to the bathroom, squeeze some toothpaste onto my toothbrush and step into the shower with my toothbrush still jammed in my mouth. \n\nAfter a quick shower I sprint back to the bedroom and throw on some clothes, run downstairs to the kitchen to grab a banana, then realise I've forgotten my phone and sprint back upstairs again. \n\nI step into the bathroom again to say bye to Erin just as the shower starts to sound. \n\n\"Hey beautiful.\" I pull Erin out from under the spray and kiss her \"I have to go, I'm really late, I'll call you this afternoon.\" \n\n\"Do you really have to go?\" She asks with sad eyes as she wraps her wet arms around my neck \"I've hardly seen you lately.\" \n\n\"I'm sorry honey,\" I kiss her again, trying my hardest not to let my eyes wander down her shining, wet body, \"I have a ton of paperwork to catch up on and a meeting in...\" I check my watch \"...forty-five minutes. Once I'm done though I'm off for two days and you can see me as much as you want.\" \n\n\"Ok,\" she sighs pressing herself fully against me, \"I'll see you later then.\" She kisses me deeply. \n\n\"Bye baby.\" I whisper. \n\nI pull away from her and notice that my shirt is soaked through...too late to change now...I exit the bathroom, sprint back down the stairs again dodging Wilbur as I go and throw myself out the front door. \n\n... \n\nThree hours later I've managed to survive the meeting, call Erin and get myself to the halfway stage with my paperwork. Never again am I leaving it all to pile up like this! \n\nI get up from my desk to get a glass of water just as my cell rings, it's a Canadian number I don't recognise. Wondering if perhaps it's some family member or other with a new number I answer it. \n\n\"Hello, Dr Shepard speaking.\" \n\n\"Hello, Dr Shepard-Speaking, how are you, you old bitch?!\" \n\n'You old bitch?' I think holding the phone away from my face and staring at the number...it takes a few long seconds before I realise who's calling...and I can't say I'm thrilled when I figure out who it is. \n\nNina Jones had been at med school with me, she was a loud, busty, two-faced blonde that I unfortunately couldn't stand. \n\n\"Hi Nina,\" I groan inwardly, \"how did you get my number?\" \n\n\"Not a very friendly start bitch.\" She answers \"I saw Jamie at work and asked him for it.\" \n\nFuck! I forgot she worked with Jamie...I hated the thought of her being anywhere near him in a physical sense...Nina had a reputation for playing around with multiple different men and despite Jamie being my least favourite of my three brothers, I loved his wife and their four kids to pieces. I was pretty certain his head wouldn't be turned by Nina...but stranger things have happened... \n\n\"What can I do for you?\" I say, trying my best to stay polite. \n\n\"Many, many things babe.\" She replies \"Want me to list a few?\" \n\n\"What do you want Nina?\" I ask, my patience rapidly wearing thin. \n\n\"What do I want, she says...well, there's a few things on that list I mentioned...but mostly I'm calling because I want to offer you your dream job.\" I can almost hear the superior look assembling itself on her face through the phone. \n\n\"My dream job?\" I ask confused. \n\n\"Am I talking in fucking riddles or something here?\" She sneers \"Your dream job bitch, the one you've been pining after since med school!\" \n\nThis time there's no confusion, I know exactly which job she means, I'd wanted it since I first set foot in Vancouver General Hospital all those years ago. ",
        "\"There must be a list a mile long for that job Nina,\" I sigh as I sit down again, all thoughts of water forgotten, \"I've got no chance with my experience.\" \n\n\"You've got a chance if I say you've got one!\" Her tone hard and final. \n\n\"I don't know Nina,\" I sigh again, \"my whole life is here in the UK, I can't just-\" \n\n\"Listen!\" She cuts me off \"I'm in London on business, I've got a few interviews to conduct for the job and you're one of them. I won't take no for an answer! Be here, I'll email you the details...you're still under Pussy Licking Dyke right?\" \n\n\"I was never under 'Pussy Licking Dyke' Nina.\" I take a deep breath \"You can call my secretary on Monday and get my email from her. I have to go,\" I invented wildly, \"I'm due in surgery in ten minutes.\" \n\nI hang up and lean back in my chair, cupping my head between my hands as I stare at the ceiling. She's right about this being my dream job, but things have changed since I left Canada all those years ago. Back then medicine and becoming a doctor was the be-all and end-all of my life, now I had other priorities. \n\n... \n\nFinally, I close the last set of notes and move them to the finished pile on the edge of my desk. My office is a dump, it had never been anywhere near this untidy when Erin was still my secretary. \n\nAfter a few months of being 'officially together' we had decided that working in the same office was no longer a good idea. We found it increasingly difficult to keep our hands off each other and had nearly been caught on more than one occasion. Erin had soon been snapped up by a different department and I had been assigned a replacement. My new secretary, Lisa, was good don't get me wrong. But she was nowhere near as good as Erin. \n\nI could have a quick tidy round I think to myself...but instead I throw my things back in my bag and set off for home, desperate for my two days off to start. \n\n... \n\nI walk in to a note from Erin saying she's out with her sister and will be back around nine, I give Wilbur a few bits of veg and then jump in the shower, knowing that if I sit down that's it, I won't get up again. \n\nI struggle through washing and drying my hair, throw on some boxers and a shirt and force down some leftovers before finally allowing myself to lay out on the couch. Wilbur comes over to investigate but soon disappears when he realises I've no more food for him, I flick the tv on and start trying to watch my recorded hockey game but I end up passing out before the pre-match build up finishes. \n\n... \n\n\"Kate, Kate, wake up sweetheart.\" \n\nI open one bleary eye and find Erin crouched down beside the couch. \n\n\"Come and get in bed baby.\" She whispers gently. \n\nI don't take much persuading and Erin easily manages to pull me up from the couch and guide me upstairs, I collapse onto the bed and drag her with me. She pauses long enough to remove her jeans, t-shirt and bra then lays down beside me. Wrapping an arm around my waist she presses against my back and kisses my shoulder. I take a deep breath and soon find myself drifting off again. \n\nChapter Three: \n\nThe Interview: \n\nI found myself awake early the next morning. The sound of heavy rain and thunder outside seemed to be the primary cause but when I rolled over to wrap myself around Erin and found her missing I realised that was far more likely to be why I'd woken up. \n\nI sit up and find her wearing one of my shirts, sitting next to the window watching the weather, a cup of tea in her hand, her bare legs tucked up underneath her. \n\n\"Morning beautiful,\" I pull the duvet tighter around myself, \"you coming back to bed?\" \n\nShe smiles and stands from her chair, my eyes instantly drawn to her body as the shirt hangs loosely to her sides. She puts her tea down on the bedside table and positions herself above me, straddling my waist. \n\n\"I think you need to lose the shirt.\" I whisper, sliding my hands up to her breasts and squeezing gently. \n\n\"Hmmm, maybe,\" she leans down and kisses me, \"but first you need to tell me who you know that feels it's acceptable to phone you at least five times so early on a Sunday morning.\" \n\n\"What?\" I run my thumbs over her nipples. \n\n\"Your phone hasn't stopped ringing, it's a Canadian number.\" She kisses me again. \n\n\"Fuuuccckkk.\" I groan, begrudgingly sitting up and reaching for my phone. Not that I need it to know who it is! \n\n\"What is wrong with that woman?!\" I wrap one arm around Erin's waist and scroll through my messages with my free hand. \n\n\"What woman?\" Erin asks, pulling my phone out of my hand and kissing my neck. \n\n\"Nina,\" I say trying hard not to whimper under her touch, \"we were at med school together. She called me yesterday to tell me about a job.\" \n\n\"A job?\" She nips my earlobe. \n\n\"This job, ah,\" I gasp as she pinches my nipple through my shirt, \"this job I've wanted for years.\" \n\nShe kisses me again, her tongue searching for mine. \n\n\"Sounds like a good thing, what's the problem?\" \n\n\"It's in Vancouver.\" \n\nHer lips leave mine and her expression becomes anxious. \n\n\"Do you still want it now?\" She asks. \n\n\"I've wanted it since I was in med school,\" I sigh, \"for years my entire career was focussed directly on getting the experience and qualifications to apply for it.\" \n\n\"Answer the question Kate.\" She demands, her voice suddenly sharp. \n\n\"I...\" I look into her eyes \"...I don't know. A huge part of me wants to at least go for the interview and try my luck, but I don't think I have the experience to actually get it.\" \n\n\"What if you did get it?\" She whispers. \n\nI lick my lips nervously \"I'd want to take it.\" She tries to pull away but I wrap my arms tightly around her and hold her close \"I'd want to take it baby, but not if it meant I'd lose you. Our life is here, our home, our jobs, our friends...Wilbur.\" \n\n\"I don't want to lose you Katie.\" She smiles sadly and holds me even closer to her \"But if you've wanted the job for that long I also don't want to be the reason you don't go for it.\" \n\n\"Hey,\" I smile, \"you mean so much more to me than a stupid job. I'm happy as we are, we don't need to change a thing.\" \n\n\"You won't resent me?\" She asks. \n\n\"Never,\" I kiss her, \"I promise.\" \n\n... \n\nI made no further mention of the potential interview over the next few days. In fact, it was Erin who brought it up again. She surprised me with dinner and a movie one night, then proceeded to tell me she'd been thinking and had decided I should take Nina's offer of an interview. If I did get the job we would talk about our options afterwards and if not, at least I could say I tried. \n\nI was a little surprised at Erin's sudden change of heart but nonetheless I had Lisa call Nina to confirm I would be attending (I couldn't face speaking to her myself) I then spent nearly every second of my free time over the next month preparing my portfolio and working on my interview technique, I even took a few days off work to perfect it. \n\nThe effort I was making didn't escape Erin's attention. \n\nI had barely spoken a word to her in the last few weeks, the closer it got to my interview the more nervous and agitated I became. Some days she would only have to walk into the room to ask a simple question for me to snap at her. \n\nShe had tried everything to get me to open up to her, offering to help me with interview questions, to work on my portfolio, dinner out, a movie, a short walk...on more than one occasion she had attempted to initiate sex as both a release for the pair of us and a way for us to spend time together, but I had found her efforts more irritating than anything else. \n\nI couldn't pinpoint exactly why I was refusing her advances, normally I struggled to keep my hands off her, the sex had always been incredible with her and it wasn't that I felt any differently in my heart, I was still crazy about her. I just simply wasn't in the mood. \n\nI could tell Erin was really trying not to rise to my attitude but her patience was definitely wearing thin. All she wanted was to be there to support me and I was pushing her away at every turn. \n\n... \n\nIt all came to a head the day of my interview. \n\nI had been packing my bag as I was staying in London overnight when Wilbur had come into the room and tried to wrap his teeth around my laptop charger. Without thinking and with my arms full I had flicked my foot lightly at him, never with the intention to make contact or to hurt him, just to distract him long enough for me to grab the wire, but Erin, already frustrated and annoyed, hadn't seen it that way. The tension of the last few days quickly brought the situation to boiling point and within seconds we were screaming at each other. We had never argued like that before, both of us were beyond rational thought. I threatened to leave and not come back...she told me to enjoy Canada and disappeared off upstairs with poor Wilbur stuffed in her arms. \n\nI left the house without a word to her and slammed the front door so hard I thought it might've cracked. I switched my phone off as I got in the taxi to stop myself continuing the argument via text and was still seething four hours later when I walked into the restaurant to meet Nina. \n\n... \n\n\"Katie, you whore.\" She stands and kisses my cheek. \n\n\"It's Kate, Nina.\" I answer, hating the way she said Katie. The first time Erin had called me that I had melted, she was the only person outside my immediate family I had ever felt comfortable with using that name. \n\n\"Alright then, Kate it is.\" She kisses my other cheek \"I was beginning to think you were going to stand me up.\" \n\n\"I want the job Nina,\" I reply, trying my hardest to keep a calm tone, \"I won't get it by standing you up.\" \n\n\"I'm glad to hear you've come around to the magnitude of my offer.\" I stare at her incredulously for a second before she continues... \n\nHer offer? \n\n\"I took the liberty of ordering you a glass of wine.\" \n\n\"I was under the impression I was here to apply for a job?\" I raise an eyebrow. \n\n\"You are, but can two old friends not enjoy a glass of wine together before they get down to business?\" She smiles. \n\nI take a deep breath, Nina and I are hardly what I'd describe as 'old friends', but I push that thought to the back of my mind as I remember what's at stake here. \n\n\"In that case I hope you made it a large one.\" I smile mechanically as I pull my skirt down a little more and take my seat. \n\n\"I must be a mind reader.\" Her smiles widens \"Trouble in paradise is there?\" \n\nI don't answer, the last thing I want to discuss with her is my argument with Erin. \n\nThankfully the waiter chooses this moment to come over with our drinks. I take mine and down half of it at once while Nina watches me with a devious look on her face. \n\n\"Let's get down to business, shall we?\" She smiles even more widely. \n\n... \n\nNina took on a surprisingly professional persona as she conducted my interview, we discussed my portfolio and experience as well as the job itself and changes that had occurred in the hospital since I was last there. I asked at one point how she had come to find herself as the interviewer for this job, she was much less experienced than I was even though we had graduated together. As it turned out she was fucking my potential future boss. From what I gathered his wife was starting to get suspicious about the affair and he had found a ready excuse to get Nina out of the country in an attempt to throw the poor woman off the scent. \n\nOnce the interview was over I was expecting to be able to leave and retire gracefully to my hotel, but Nina had other ideas. We ended up having dinner and several more large glasses of wine at the restaurant before getting a taxi to my hotel and continuing to drink in the bar there. Nina picked a secluded table in the corner of the bar, away from prying eyes. I was conscious of how much I'd had to drink but Nina had been quite insistent we carry on...alcohol did at least make her a lot more bearable. \n\n... \n\nWe were half-way through a whiskey nightcap when Nina suddenly leaned over and put her hand on my knee. \n\n\"I've always wanted to fuck you, you know.\" I inhale sharply and start coughing as the whiskey hits the back of my throat. \n\n\"For years I've thought about how good it would be.\" She slides her hand further up my leg, under the edge of my skirt. \"I've been told I'm a great fuck.\" Her long fingernails stroke the inside of my thighs. Her touch is foreign but not completely unpleasant... \n\nErin hasn't touched me like this since before I told her about the job...'which is your fault idiot!' I think to myself, it wasn't like she hadn't tried, I'd just pushed her away every time. \n\n\"I need to go to bed Nina.\" I say suddenly, I try to stand but find myself feeling dizzy and light headed. \n\n\"Here, let me help you.\" She pulls me to my feet and I fall into her slightly. Using this to her advantage she presses her lips to mine and forces her tongue into my mouth. \n\nThe world seems to go dark for a few seconds and I find myself unashamedly kissing her back. \n\n\"No...no...\" I gasp, pulling away \"I can't...my girlfriend...\" \n\n\"I don't think your girlfriend has been very good to you lately babe.\" Nina whispers, stroking my cheek \"You're so hot already and all we did was kiss, when was the last time she touched you?\" \n\nI don't answer. \n\n\"Come on babe, I'll show you a night you won't forget.\" She squeezes my breasts and a small moan escapes my lips. \"I know you want to.\" \n\n\"No Nina!\" \n\nI push her away and stagger to the lifts. Eventually I find my key card and let myself into the room. I sit down on the bed fully clothed and pick up my phone... \n\nChapter Four: \n\nThe Biggest Mistake of my Life: \n\nA warm weight lays across my naked body as I stir. My head feels like a lead balloon attached to my shoulders as I tilt my face down to kiss Erin good morning, she kisses me back with enthusiasm and runs her sharp nails across my chest, digging them painfully into my breasts as her teeth meet my lip. I inhale sharply and catch the scent of her shampoo...it smells different...I wonder to myself when she changed her hair products...I open one bleary eye to ask her and instantly tightly close it again...this can't be real...I take a deep breath and open my eyes again...looking down the horrific reality of the situation hits me like a brick...I'm still in London...it's not Erin I'm laid next to...it's Nina... \n\nTrying my hardest not to throw up I run to the bathroom, throw some cold water at my face and grip the sink...what the fuck happened?...I'm sure I fell asleep fully clothed and alone last night...I know I came upstairs alone...my heart races as I rack my brain trying desperately to remember...Nina kissed me in the bar...yes that happened...but then I pushed her away and I came upstairs...I definitely came up by myself...so how the hell did I end up in this situation?! \n\nI look up into the mirror and my face is white...maybe we didn't actually have sex, I think desperately...maybe there's some other reason I'm naked...I catch sight of a small scratch on my chest...I did it myself, in my sleep, I must have...closer inspection however shows there's a lot more than just one...they're all down my back too...I couldn't have done those myself...the room spins and I can't hold it in anymore, leaning over I vomit into the toilet and stars pop in front of my eyes...I can't pass out now...not here... \n\nGripping the toilet tight, I slowly flex my fingers and attempt to get my breathing under control... there could be another reason I'm covered in scratches...maybe I fell on something...naked...another wave of nausea passes through my body and I throw up again...I have to know for sure...I take one final deep breath and reach for my toothbrush...fuck...I'm not even in my room...where the hell are my clothes?!... \n\n\"Too much to drink babe?\" Nina enquires as I re-enter the room, that sickly fucking grin back on her face. \n\n\"What happened last night?\" I manage to stammer as I locate my clothes and start pulling them on. \n\n\"Well after you stormed off and left me in the bar I came up here and got in bed...then half an hour later you came to your senses, turned up at my door and fucked me senseless all night. I even have the marks to prove it.\" She pulls the duvet back and shows off the unmistakable bite marks covering her body. \n\n\"You're lying,\" I reply in desperation, \"I love my girlfriend, I wouldn't do that to her.\" \n\n\"That's funny,\" she smirks, \"because less than three hours ago you were between my legs telling me how much you loved my pussy and how she could go fuck herself.\" \n\nMy mind flashes back to last night as she says these words...I remember...I remember being between her legs...and biting just above... \n\n\"I think you're looking for this one.\" Her grin widens as she points out the huge bite mark just above her left knee. \n\nI fight back the urge to breakdown in front of her, grab my key card from the floor and run from the room with my shoes in my hand. \n\n... \n\nBack in my room I strip out of my clothes again, get changed and start packing, I have to get out of here and get home...why...why the actual fuck would I do this!...the tears start as I pick up my phone and look through my messages...in my drunken state I had texted Erin a load of irrelevant and somewhat offensive bullshit to try and pick another fight with her...she hadn't taken the bait...instead she had messaged me back to tell me she was glad I was 'maintaining some degree of professionalism' and that she was going to bed...she obviously knew I was steaming...this couldn't be it...this one stupid thing couldn't be what had prompted me to risk throwing everything away... \n\n... \n\nOn the train on the way home...my stomach in knots and my head pounding...the reality of what I'd done starting to sink in...Erin will never forgive me for this...unless she never found out...no...no, I have to tell her. Maybe if I just come clean we can work it out. \n\nThe closer to home I get the worse I start to feel...memories of the previous night flood my brain as I stare out the window...my legs around Nina's neck, her fingernails scratching up my back...my fingers buried deep inside her as I lick...I manage to make it to the bathroom just in time to throw up again... \n\nIn the taxi from the station to home...what am I going to say to Erin...how can I tell her and not lose her...my heart seems to shrivels up at the thought...I love her so so much... \n\n... \n\nThe taxi pulls up in front of our house and I breathe a sigh of relief when Erin's car is missing. I pay the driver and let myself in to find the house is immaculate...my stomach churns again...Erin cleans when she's stressed and upset... \n\nI throw my clothes in the washing machine and then head to the shower. The scratches covering my body sting sharply as the hot water washes over me and I know I deserve every single stab of discomfort, I reach for the body wash and catch sight of Erin's shampoo bottle on the side...within seconds I'm sat sobbing on the floor of the shower, the memories of waking up next to Nina this morning washing over me again... \n\n... \n\nI've been sat there so long the water starts to run cold...I scrub my skin roughly, trying to rid myself of all memory of last night...climbing out of the shower my skin is tinged red from scrubbing and blue from the cold water...I grab my toothbrush and apply the same treatment to my teeth...the harder I brush the more I seem to be able to taste Nina...I breakdown again...I can't get my breathing under control...I grip the sink in a repeat performance from earlier and again fight passing out...slowly I start to feel myself coming back...I leave the bathroom and throw on some clothes, covering as much skin as I can, I need to cover these cuts, Erin can't see them. My body is frozen despite the warm weather outside...I try to get into bed and sleep...but every time I breathe in instead of being able to smell Erin I smell Nina...in the end I sit hunched up on the edge of the couch...staring into space...waiting for Erin to come home... ",
        "... \n\n\"Kate...Kate...\" I snap out of my trance to find myself face to face with Erin, her hands cup my face and I feel an overwhelming rush of emotion at the sight of her \"...Kate what's wrong? Are you ok? Talk to me...please baby...say something.\" Her voice wavers as I start to cry again, her eyes full of concern. She pulls me to her and wraps her arms around me. \n\n\"I'm so sorry.\" I sob trying to push her away from me \"I should never have sent you those messages. I didn't mean any of it.\" \n\nInstead of moving away she grips me even tighter and I feel my chest start to compress. \n\n\"Erin please, let go,\" I struggle to get out of her embrace. \n\n\"Not until you tell me what's wrong.\" Her grip stays firm. \n\n\"Erin! I said let go!\" I stand abruptly, she steps backwards and her ankle makes painful contact with the coffee table. I see her eyes start to water and I can't look at her anymore. I run from the room and bolt into the bathroom to throw up again... \n\n... \n\nExhausted, empty and drained I crawl from the bathroom some time later to find the house dark and cold. I stumble to our bedroom and fall onto the bed, Erin stirs and pulls the duvet over me, I don't have the energy to push her away. Instead I lay there quietly while she holds me close and shushes me, running her fingers through my hair and kissing my forehead...guilt fills my body once more as I feel myself falling asleep...I don't deserve this beautiful, sweet, caring woman to be laid here comforting me...making up my mind, I decide that first thing tomorrow morning, when I'm able to speak properly, I have to tell her the truth... \n\n\"I love you so much Erin.\" I sniff as I curl my fingers in her shirt and nuzzle against her. \n\n\"I love you too Katie.\" She whispers, her voice shaking slightly. \n\nI try to commit every detail of this moment to memory, knowing that when I tell her the truth she will never hold me like this again, she had said before that cheating was something she would never forgive...and I couldn't blame her. \n\nI take a deep breath and think of the way her lips feel against my forehead, the smell of her hair as it tickles my cheeks, I run my hand up the leg curled protectively over my hip and memorise the way her skin feels under my fingers, every sensitive spot that makes her squirm and the exact location of the small scar on her knee. I nuzzle deeper into her neck and gently kiss just above her collarbone, my fingers graze slowly up over her ass and come to rest on her hip, she sighs softly and my eyes start to drift closed...one last solitary tear rolls down my cheek. \n\n... \n\nI woke with a heavy heart the next morning, knowing exactly what I had coming. My stomach was in my throat when I went downstairs, I went into the kitchen with the intention of telling Erin everything but was instead met by a note from her. \n\nKatie, \n\nWhen I get home we need to talk about what's going on with you, I'm really worried, you looked awful last night...please phone me when you wake up. \n\nI've had to go into work this morning, it's all hands-on deck preparing for that huge annual meeting we have, but if you need me I can work from home instead. \n\nI'll be home just after lunch anyway, maybe we could go for a walk, get you some fresh air? \n\nLove, \n\nErin \n\nxxx \n\nShit! My throat goes dry...this meeting is the same one they have every year, it covers the whole department and I know Erin plays a huge part in getting everything ready for it. The last thing she needs right now is me telling her I slept with someone else and adding to her stress...but I can't not say anything for the next two months...what the hell do I do now? \n\nChapter Five: \n\nStalling, Crashing and Burning: \n\nI said nothing...of course I did...one look at Erin's face when she walked through the door that afternoon was all it took...I loved her so much, I couldn't add to her stress...and I couldn't face losing her. \n\nInstead I said I thought I was coming down with something, I got down on my knees and begged her to forgive me for pushing her away yesterday, for ignoring her for the past few weeks while I prepared for the interview and for making her feel that my job was more important than her. I kissed every inch of her face and neck and held her close. \n\nI was a coward, a lousy, cheating, selfish, cowardly bitch who didn't deserve her. \n\n... \n\nThe days past and still I said nothing, I told myself over and over that I was keeping quiet for her, that she needed me to be there while she was under so much stress at work. But deep down I knew the truth...I was terrified of losing her. \n\nThe following Monday morning I had a phone call from the hospital in Vancouver...I'd got the job...I should've been overjoyed, but for me it was tainted...had I only been offered the position because I'd slept with Nina? \n\nErin's frustration level grew over the course of the next few weeks, I could see she was worried and stressed, she knew there was something going on, my reaction to being told I'd got the job was evidence enough of that. All I had to do was open my mouth and speak to her...but I just couldn't do it. \n\nWe had decided that I would take the job, or rather, Erin had decided I would take the job. She wouldn't let me turn it down, not when I'd wanted it for so long, I tried to act happy about her support but all I felt was guilt and shame. I had to leave the room when she had been applying for a work visa and I could barely hold it together while she made arrangements for her sister to take Wilbur, she loved him so much and it broke my heart to see her so upset about leaving him behind.  \n\nThe house was staying empty, Erin had suggested renting it out but I stayed firm on leaving it...we had argued about that too...I understood her confusion over why I wanted an empty house, but I just couldn't let it go, it was our home. \n\nBoth of us were quiet and subdued all the time, we barely spoke to each other, our sex life was non-existent, I couldn't touch her without flashing back to Nina and that hotel room. I had tried to push through the flashbacks and to ignore them, but it hadn't worked, I was laid between her legs one night with my tongue buried in her pussy, a position I used to love being in, when all of a sudden I had looked up at her to see Nina smiling back at me...I bolted from the bed into the bathroom and spent the next fifteen minutes throwing up while Erin held my hair away from my face and rubbed my back...I tried to tell her everything that night, but every time I opened my mouth to speak my throat closed up. \n\n... \n\nSlowly the days turned into weeks and the weeks into the end my two-month notice period. The day of Erin's meeting had finally arrived and I knew that I had to tell her everything that night...unless I didn't...maybe I could see a shrink to learn to cope with the guilt, after all, we'd come this far without her knowing... \n\nI knew instantly that I was talking nonsense the second that thought crossed my mind, we weren't fine as we were, I'd lose her long before a shrink could convince me I'd ever get over the shame of what I'd done...having that thought and actually considering it made me feel sick, if I loved Erin I would have to tell her the truth...that of course was when karma stepped in it all came crashing down around me. \n\n... \n\nI was working at my desk when I heard a knock at the door, looking up I felt my blood run cold as Nina smiled at me from the doorway. \n\n\"Kate, babe,\" she calls loudly as she enters the room, \"how are you, all packed and ready to come home? There's a burning in my loins that only another night with you can fix.\" \n\n\"If your loins are burning you should probably get yourself off to a sexual health clinic.\" I say bluntly. \n\n\"Awh, come on now.\" She grins \"I'm sure you could help me out.\" \n\n\"What do you want?\" I stand abruptly from my desk. \n\n\"That's no way to greet a woman whose pussy you've spent a night getting thoroughly acquainted with.\" She runs her fingers down my cheek. \n\n\"It should never have happened, I was blind drunk an-\" \n\n\"You being blind drunk didn't stop you from begging me to fuck you.\" She kisses me and forces her tongue into my mouth. \n\n\"You were a mistake...a drunken, stupid, fucking mistake.\" I spit, pulling my face away from hers. \n\n\"I wasn't a mistake when you had your legs wrapped around my neck and you were moaning and writhing under my hands, my tong-\" \n\n\"You were a mistake!\" I repeat firmly \"I love my girlfriend more than anything in the world.\" \n\n\"But not enough to tell her that you fucked someone else!\" \n\nI whip my head round to find Erin stood shaking in the doorway. The bag in her hand told me she'd come to surprise me with lunch. \n\nI feel the colour drain from my face. \n\n\"Erin please,\" I croak, \"please just let me explain.\" \n\nShe turns on her heel and starts walking off down the hallway. \n\n\"Erin!\" I shout running after her. \n\nShe doesn't turn around. \n\n\"Erin, baby, please,\" I catch up with her and take her arm \"please just let me explain. I wanted to tell you, I swear I did...but then you said you had this meeting coming up and I couldn't...I just couldn't add to the stress you were under.\" \n\n\"But you could quite happily humiliate me for months?!\" She pulls her arm out of my grasp and tears start to fall down her cheeks. \n\n\"I thought you were seriously ill!\" Her voices strains \"I thought you wanted to break up, that you wanted to piss off to Canada without me, that you didn't love me anymore!\" \n\n\"Baby, I'm crazy about you, I lo-\" \n\n\"Don't Kate! Just don't,\" she sobs, \"I can't believe this is happening,\" her hands go to her hair, \"I can't believe you would do this to me. I was going to leave everything, my friends, my family, my home...all for you! And you were off fucking someone else!\" \n\nShe moves as if she means to hit me but seems to change her mind and instead turns and walks away again. \n\n\"Erin...\" I walk beside her as we turn the corner \"Erin please...I wanted to tell you, I wanted to tell you the second I saw you when I got home from London. But I just couldn't, I love you so so much. I was absolutely hammered drunk that night in the hotel, I didn't know what I was doing, I...\" \n\n\"You knew exactly what you were doing Kate!\" She growls \"I read your texts, I knew you were trying to start a fight...was that so you had a readymade excuse to fuck her or had you already started by that point?!\" \n\n\"No, I wouldn't do that you!\" I say as firmly as I can manage through the tears. \n\n\"You already did it!\" She yells. \n\n\"Baby please.\" I whisper \"Please. I was going to tell you everything tonight I promise...once your meeting was over I-\" \n\n\"That's bullshit and you know it!\" She can't even look at me \"You know this meeting doesn't take priority over you...you were just too much of a fucking coward to say anything!\" \n\n\"I know,\" I take her arm again and turn her to face me, \"I know I should've just told you, but I was scared, I still am scared, I'm absolutely terrified of losing you.\" I pull her into my chest \"I've never loved anyone the way I love you.\" I cup her face between my hands and gently press my lips to hers. \n\nI try to convey everything in that kiss, she has to know how I feel...maybe if she does she won't leave... \n\nShe allows me to kiss her for another few seconds before suddenly pushing me strongly away. \n\n\"But yet you never cheated on anyone else.\" She says firmly. \n\n\"Erin please.\" I beg as she turns to leave \"Please honey, please don't leave. I love you so much, I made a terrible, horrible, heart breaking mistake and words can't explain how sorry I am. Please,\" I take her hand and hold it to my chest, \"please, you mean everything to me.\" \n\n\"I'm going back to work Kate,\" she whips her hand out of my grasp, her eyes narrowed and cold, her posture rigid, \"like you said, I have a big meeting to get to.\" \n\n\"I'll see you at home?\" I ask, tears falling heavier from my eyes \"Erin, honey, please...please say we can talk about this, please say you'll be there.\" \n\nShe doesn't say a word. My eyes follow her as she walks away down the hall and through the double doors at the end. She doesn't give me a so much as a second glance. \n\n... \n\nMy last surgery finishes and I race to Erin's office, my bag slung across my shoulders. I skid to a halt outside the door and stick my head around the corner...the office is empty. \n\n\"Where is she?\" I demand of Hannah, the secretary across the hall. \n\n\"She left, earlier this afternoon, after she'd done the meeting notes.\" Hannah answers without looking at me. \n\n\"What?\" My heart drops into my stomach. \n\n\"Said she'd got some holiday to use up and she was going away for a while...\" Hannah continues, still not looking at me \"...didn't say where or for how long an-\" \n\nI don't wait for Hannah to finish, I sprint back up the hallway to the stairs, I nearly fall several times as I run down them to the carpark, my heart pounding against my ribs. \n\n\"She'll be there,\" I whisper to myself as I drive home, trying desperately to calm down, \"she has to be there.\" \n\n... \n\nI pull up to the house and into the driveway. \n\nErin's car isn't here. \n\nNo lights on in the house. \n\nI leave my bag on the back seat and stumble up to the door. It's locked. \n\nMy hand shakes as I try to get the key in the lock. \n\nI push the door open. \n\n\"Erin?\" I call out. \n\nNo answer. \n\nHer favourite hoodie gone from the stairs. \n\nTentatively I make my way to the kitchen. No dishes on the side, no dinner in the oven, Wilbur's food not in its usual place. \n\n\"She ordered take out,\" I tell myself, \"Wilbur must've run out of food...that's where she is right now, out buying more.\" \n\nI turn to the front room. \n\nNo book on the couch. \n\nNo Wilbur. \n\nThe tears start again. \n\nI stumble up the stairs to our room and push the door open. \n\nThe bed still unmade from this morning. \n\nNo phone charger on the bedside table. \n\nI pull the closet door open, one suitcase missing, Erin's clothes gone. \n\nI sit on the edge of the bed and pull Erin's pillow to my chest, tears falling thick and fast. \n\nI lean back across the bed, something crinkles under my back. \n\nReaching behind me I find a piece of paper. \n\nThe words are scribbled, the paper tear stained. \n\nKate, \n\nI don't even know where to start. \n\nYou said you wanted to tell me, yet you did everything you could to stop me finding out. You let me believe for weeks that I'd done something to upset you, that you wanted to break up, that you wanted to go to Canada alone...you pushed me away physically and emotionally and let me think it was my fault...do you have any idea how that felt? Did you even care? \n\nMaybe we could have worked through it if you'd been honest...I don't believe you set out to cheat on me...but I can't Kate, I just can't, you hurt me in the worst possible way. \n\nEvery time I close my eyes I see you with her, naked in a hotel bed, your legs around her neck and it breaks my heart. \n\nGood luck with the job, I hope it was worth it. \n\nI scrunch the paper up and clutch it to my chest with the pillow. \n\nMy vision blurs as tears stream down my cheeks. \n\nMy chest tightens, suddenly I can't breathe, a ringing starts in my ears, I sprint to the bathroom arriving just in time to vomit spectacularly into the sink before falling backwards and passing out against the door. \n\n... \n\nTwo days later. \n\nI physically can't cry anymore, I haven't showered, I've barely slept, anything I have managed to eat hasn't stayed down for long, my body is starting the feel the strain. Erin's note lays flat on the kitchen table, I know it by heart now. \n\nI call in sick to work, it had been my last couple of days anyway so I didn't really care if it caused any upset. \n\nI call Erin's parents, they refuse to tell me where she is. I call her sister, same story. Not that I blame them at all, I wouldn't tell me where she was either. \n\nSara. \n\nSara will know where she is. \n\n... \n\nI knock at least five times on the front door before it opens. \n\n\"Ok, ok, I get it, I'm he-\" Sara stops talking abruptly when she realises it's me. \n\n\"Where is she Sara?\" I ask, my voice calm and firm as I quickly dodge past her into the hall. \n\n\"You've got some fucking nerve being here Kate.\" Sara slams the door behind me. \n\n\"Where is she?\" I repeat. \n\n\"She's not here.\" Sara says in an emotionless tone. \n\n\"Then where is she?\" I ask again. \n\n\"I'm not telling you Kate,\" Sara says simply as a familiar soft thudding noise reaches my ears. I look behind me to see Wilbur bobbing down the hall, my heart soars when I see him, if he's here Erin must be too. \n\n\"Don't lie to me Sara.\" I turn back to her \"If you have him she must be here too. She wouldn't just leave him.\" \n\n\"I'm telling you she isn't here Kate.\" Sara replies firmly. \"You look like shit by the way.\" \n\n\"Please Sara,\" I beg, my calm and firm voice leaving me, \"please just tell me where she is. I fucked up, I fucked up big time and I know it. She's your best friend, I get it, but I love her, I need to make it right.\" \n\n\"Look Kate, I don't know where she is.\" She sighs and her shoulders drop when she hears my voice crack \"She turned up at my door with him and a suitcase two days ago and asked if I'd do her a favour and look after him. She stayed long enough to tell me what happened, promised she'd call in a few days and then left.\" \n\nFresh tears spring from my eyes as I stroke Wilbur's ears. \n\n\"Please,\" Sara sighs, \"please don't make this any harder than it has to be. Erin was distraught when she was here. Lucy thought you'd died or something she was so upset. Just leave things for a while. Give her space. Go to Canada. Get on with your dream job...and stay as far away from fucking Nina as you can!\" \n\n... \n\nShe let me stay there, crouched in the hallway with Wilbur for another hour or so, even brought me a box of tissues and a cup of tea, but when it came time to go she made it perfectly clear I wasn't welcome there again without Erin's consent. \n\nI got home and went straight to the kitchen, pulled out a bottle of JD, read Erin's note again and remembered nothing of the next thirty-six hours. \n\n... \n\nI wake alone in our bed, the smell of stale alcohol combined with the pile of dirty laundry in the corner of the room overpowering despite the window being wide open, a glance at the clock on the bedside table tells me it's 1pm on Sunday. \n\nMy head is throbbing, surely on the verge of exploding, the room spins as I sit up, my knee makes contact with something hard. Looking down I find it's an empty bottle of So-Co...with the empty bottle of JD right beside it. I feel disgusted with myself for letting things get this bad. \n\nSuddenly I hear my phone ringing from somewhere under the pile of clothes, my heart thumps against my chest, it must be Erin calling, it has to be her, my flight is next week and she's calling to check I've got everything I need, just like always. I jump out of bed and throw the clothes aside until I find it. \n\n\"Hello?\" I shout \"Erin?\" \n\nIt seems to be an eternity before someone speaks, I stop breathing, my heart stops beating. \n\n\"Hi sweetie, it's mom.\" her voice is upbeat and happy while I feel like my world just ended all over again \"I was just calling to check what time your flight gets in. I've got it on the calendar but you never know, things change. Are you and Erin arriving together now or will she still be coming later? I'm so excited to see her...and you of course honey...I found a seaside town out here that's just like the one we went to while we were ov-\" \n\n\"Erin isn't coming mom.\" I interrupt bluntly. \n\n\"Oh ok, your dad and I will come pick you up at the airport, we'll be able to fit all your bags in the one car then. You can pick Erin up yourself when she arrives.\" ",
        "\"No mom...\" I take a deep breath \"...Erin isn't coming, period.\" \n\n\"What? Why sweetie, what happened, did she get cold feet over leaving her family?\" \n\n\"No mom, nothing like that.\" Tears start to form in my eyes again as I steady myself for what I'm about to say. \n\n\"What then honey?\" Her voice becomes softer \"You can tell me.\" \n\nI take one last deep breath and blurt the words out in a rush, as if saying them faster will make them hurt less. \n\n\"I cheated on her mom and now she's gone and she's not coming back.\" \n\nI manage to make it back to the bed before the hurt takes over again, I sob and howl into the empty room, the phone pressed hard to my ear as my mom tries desperately to calm me down. \n\nEventually the combination of her words of comfort and sheer exhaustion calmed me to a deep and thankfully dreamless sleep. \n\nChapter Six: \n\nHome: \n\nAnother two days had passed since I'd spoken to my mom and the day of my flight was finally upon me. \n\nI woke early and started picking up the pieces of my shattered life. The pile of dirty laundry in the corner of the room was washed, ironed and packed up together with my other clothes, the empty bottles of alcohol thrown in the recycling, the rest of the house vacuumed, dusted and mopped. Any food that wouldn't keep once the house was empty was thrown out, the place was unrecognisable by the time I'd finished...the only sign someone still lived there were the remainder of Erin's things, untouched, exactly where she'd left them. I knew she'd have to come back to the house at least once when she returned from wherever she was and I wanted it to look like it was still her home. The only thing missing, if she took the time to look, would be the picture of us from the mantlepiece. \n\nI took her note to me from the kitchen table and packed it into my rucksack before sitting down to write a message of my own. \n\nErin, \n\nI love you more than the words I could fill this page with will ever be able to explain. You mean more than the world to me, you're my everything. \n\nI'm so sorry, I wish more than anything I could go back in time and not make that same stupid, fucking mistake. \n\nI miss you so, so much honey, \n\nYours, always and forever, \n\nKate \n\nxxx \n\nI re-read these words several times before I left, trying to imprint my emotions onto the page so that when Erin read it she'd know just how much I meant them. \n\nI gave the house one last look, closed and locked the front door, got in the car and left for the airport. \n\n... \n\nFrom the moment I got through security at the airport in the UK I had been looking at my phone thinking that Erin would surely call before I got on the plane...she didn't. \n\nThe flight itself was torture. I normally managed to sleep on the journey but I just couldn't settle, I was desperate for some form of contact from Erin. I couldn't keep myself calm, my heart raced, my chest tightened, I was an emotional wreck and I didn't know how to express it. I sobbed over dinner and shook with frustration through the film I was trying to watch. \n\nBy the time I got through security in Vancouver I was exhausted. As soon as I was able I had switched my phone back on...still nothing from Erin. Trying to bury my feelings I picked up my bags and headed out to the arrivals hall. Sure enough my parents were there waiting for me with huge yet sad smiles on their faces. My mom pulled me into a hug as I reached them and all my pent-up emotion came out at once. They somehow managed to get me and all my bags out of the airport and into the car, mom sat with me in the backseat and held me while I sobbed and howled all the way home. \n\nWhen we arrived at home they forced a warm drink down my throat and made me get into bed. Exhaustion quickly took over and I was asleep before I knew it. \n\n... \n\nI spent a lot of the next few days sleeping. My parents were reluctant to let me look for my own place while I was in the state I was, deep down I was grateful, I needed them more than I was prepared to admit. \n\nMy brothers visited a lot, bringing with them my ever-growing gaggle of nieces and nephews. The kids were a great distraction and I enjoying getting out into the wilderness with them, a few of the older ones asked about Erin, having met her on a trip to see me a few months ago, but I dodged their questions and tried to distract them with other things. Thinking about her was too painful. \n\n... \n\nSeptember 8<sup>th</sup>. \n\nErin should've been flying out today. \n\n\"Mom, I'm going out,\" I call, \"I think I'm gonna go see Rob.\" \n\n\"Have fun sweetie.\" She replies \"Don't forget Liam is bringing the kids round later.\" \n\n\"I won't.\" I reply as my mind flashes back to similar exchanges from twenty years ago, although without the part about the kids. My oldest niece was only eight. \n\nI climb in the car and set off to Rob's place, I need a distraction today, the roads are clear, everyone either at work or school, but it's so nice out I decide I'd actually really like to be outside walking for a bit before I go see him. I turn down a few different streets with the intention of heading to the park...and somehow find myself sitting in the airport parking lot. \n\nI look at the dash and check the time, Erin's flight should land in an hour, what if she actually got on the plane and I'm not there to greet her? She'll think I don't care even more than she already does. I'm already here, I may as well go in and wait. If she's coming I want to be there. \n\nI head into the terminal and go to check my phone, crap! I must not have put it in my jacket when I left. I'll have to stand right in front of the doors so she can find me. \n\nThe minutes tick by slowly until eventually the arrivals board details her flight as here...my heart beats stronger against my ribs as passengers start making their way through the doors. Five minutes pass...ten...thirty...an hour... \n\nI know she isn't coming, she didn't get on the plane, but still I stand there waiting. I see the hall empty and fill around me, people waiting to pick up their loved ones, excited shrieks and passionate kisses being exchanged as more passengers file out through the doors. Despair begins to set in in my chest and slowly seems to spread to every inch of my being. I feel the tears dripping off my chin. \n\n... \n\n\"Katie! Thank god you're ok!\" \n\nI turn to find myself face to face with my brother Liam. \n\n\"Come here.\" He pulls me into a hug and I wrap my arms around him, resting my head on his shoulder. \n\n\"She's not coming Liam,\" I whisper, my voice calm and impassive despite the tears \"I waited for her but she's not coming.\" \n\n\"I know, I know you did Katie-Kat.\" He whispers back, using the nickname he gave me when we were kids. \n\n\"I love her so much.\" I sob against his shoulder. \n\n\"It'll be ok, I promise. Once I call mom and tell her you're ok and dad gets over how much the car park is gonna cost him...it'll all be ok. We'll help you get right again.\" \n\n\"I don't want to get right again,\" I cry, \"I just want her back.\" \n\n... \n\nOnce we get home and Liam sits me down at the kitchen counter I start to feel just how much my feet and calves ache, it turns out I stood at that railing waiting for eight hours. \n\nMom went mad, yelling at me for not coming home, she'd called Rob and he hadn't seen me, I hadn't taken my phone, she'd called the police and the hospital to check I hadn't been hurt or arrested, I'd taken the car so she couldn't drive out to look for me... \n\nI think she would've continued all night if dad hadn't stepped in. \n\n\"For the love of god Elaine please shut up!\" He shouts \"She's a grown woman who's going through a tough time. She needs help, not you yelling at her like she's gone back to being a teenager!\" \n\nWe all turned to look at him, it was very rare he raised his voice. \n\n\"Fine,\" she yells again heading upstairs, \"fine Ira! You deal with it, like father like daughter eh?!\" \n\n\"What was that about?\" Liam asks. \n\n\"Nothing.\" Dad answers, his face impassive \"Listen Liam, thanks for coming with me to find her but it's ok now, I've got it from here.\" \n\n\"You sure? Jess came for the kids I can stay a while.\" He gives me a concerned look. \n\n\"No, you go. I've got it.\" \n\n\"Ok,\" he sighs, \"night Katie-Kat.\" He kisses my forehead and gives me a big hug \"You need anything you call me right.\" \n\n\"I will, thanks Liam.\" I give him a small smile as he pulls on his coat and leaves the kitchen. \n\n\"Right.\" Dad says firmly \"Let's get this sorted then shall we?\" \n\nHe turns to the cupboard and pulls out two glasses then pours a generous helping of whiskey into each. \n\n\"Now,\" he pushes one across the counter to me, \"start talking.\" \n\n... \n\nI tell him everything...and it's awful. I couldn't have done it without the whiskey. \n\nI start with how Nina called me to tell me about the job, how, despite her early worries, Erin had pushed me to go for the interview, how I'd basically ignored her for the weeks leading up to it and how we'd argued before I left for London. Then I tell him about Nina's advances, how I'd pushed her away at first but then somehow ended up in her room, how I'd avoided telling Erin because of her meeting when really it was because I was terrified I'd lose her. How Nina had come to the office and blurted it all out...how Erin had come to surprise me with lunch and heard everything. \n\n\"...and then,\" I tip a mouthful of whiskey down my throat and cough, \"then I begged her to be there when I got home. I begged her dad, pleaded with her to be there so we could talk about it...but she wasn't there, she'd gone...I miss her so much...\" I cry as I start to sob. \n\n\"I know you do honey.\" He stands and wraps an arm around my shoulders \"And I'll do everything I can to help you get through it. But promise me something...\" I look up at him \"don't ever leave my car in an airport parking lot for eight hours ever again...cost me a fortune to get out of there.\" \n\n\"I'm so sorry,\" I reply, smiling a little, \"I didn't mean to end up at the airport, I just sort of did, then I went in to wait for her, just in case and lost track of time. How did you know where I was by the way?\" \n\nHe points at the calendar hanging on the wall, I see my name on there with my flight arrival time...then a little further on, under today's date it says 'Erin?' and her flight arrival time. \n\n\"Your mom couldn't quite bring herself to take that one off there,\" he smiles sadly, \"she was convinced the two of you would patch things up so she sort of went half way and made it a question of when instead.\" \n\n\"I'm so sorry dad,\" I say again, \"it's all my fault. I know how much you guys were looking forward to seeing her.\" \n\nHe grasps my shoulder tightly and encourages me to finish the whiskey in my hand as he leaves the room. \n\n\"Here,\" he says quietly, re-entering the room and passing me a notebook and a pen, \"write to her, tell her how you feel. A letter is a lot more personal than a text...and she can't hang up on you through the post.\" \n\n\"She'll just burn it before she even reads it.\" I sigh. \n\n\"Hey!\" He grips my shoulders and lowers himself so we're face-to-face \"You love her, yes?\" \n\n\"More than anything.\" I nod. \n\n\"Then don't give up on her, don't give up on what you had. Tell her everything. Even if it's hard, you tell her and you get it all out in the open. No more secrets.\" \n\nHe pushes the pen into my hand and refills my glass. \n\n\"Send this and we'll go from there, ok?\" Without another word he grips the top of my arm comfortingly on his way out the door and heads off upstairs to bed. \n\n... \n\nI stare at the paper in front of me for at least an hour before I pick up the pen and start to write. At first the words just won't come out, but once I get started the pages soon fill up. I tell her everything...and it's worse than telling my dad. I have to stop a few times to compose myself enough to carry on but eventually I make it through to the end. I think about telling her that I ended up at the airport today...and how much my parents were looking forward to seeing her...but decide against it, I'll start with the truth and as my dad said 'we'll take it from there.' \n\nChapter Seven: \n\nTrying to Keep Going: \n\nI don't know exactly what I expected to happen when Erin received the letter, I didn't even know that she definitely would receive it, for all I knew the house was still empty. I called Lisa to ask if she'd seen Erin around the hospital...she hadn't, she had actually heard that Erin had left the hospital completely but didn't know where she'd gone. My heart dropped. If she'd changed jobs there was every chance she'd left the house too. I daren't call Sara and ask her, she'd made her feelings towards me quite clear. I thought about calling her sister, thinking I could come up with some bullshit story to try and find something out...thankfully I bottled it, harassing every member of Erin's family probably wouldn't help me in the long run. \n\nInstead I tried to focus on not breaking down again. I sent Erin a new letter every fortnight, each one telling her I missed her, how sorry I was and how much I loved her. My parents and brothers were amazing, they kept me busy when I wasn't at work but left me enough space to get my emotions out in private. \n\nMy new job at the hospital kept me focused enough that Erin couldn't invade every second of my waking thoughts but that didn't stop me dreaming of her at night. Every dream was the same, it was just me and her cuddled up in our bed at home, our bodies pressed closely together as we kissed gently. They felt so real, I could feel her lips against mine, her soft skin under my fingertips, her hair tickling my face and her warm breath on my cheek. I would wake feeling comforted and relaxed...for those feelings to be replaced by sorrow and loneliness when I opened my eyes and realised it had been a dream. \n\n... \n\nThree months past. \n\nI thought I was making progress. \n\nI got through Christmas and New Years by spending it either at the hospital buried in my work or at home surrounded my nieces and nephews. \n\nOne of the other doctors made a pass at me over the festive period. She was gorgeous, successful and single but I just wasn't interested. My oldest brother suggested I ask her out and try to move on...I didn't...I didn't want anyone else, my heart was still with Erin, wherever she might be. \n\nJanuary ticked by slowly, I was still living with my parents, I hadn't had time to look for a new place. Every morning I got up and went to work, some days I didn't come home between shifts and just slept at the hospital. I started missing meals, working longer hours and sleeping less each week. When I did surface at home I was met with concern from anyone in the vicinity. Mom would force food down my throat, Liam would casually suggest I put some make-up on, dad would hug me and ask me if everything was ok. My younger nieces were quick to point out the growing dark circles around my eyes while my younger nephews complained I was always too tired to play with them. \n\n... \n\nI woke one morning in early February feeling nauseous and with a small fever, thinking nothing of it I dragged my tired and aching body to work. Perhaps an hour later I felt a sharp, stabbing pain just below my belly button and began to have to keep running to the bathroom to throw up...as a doctor I really should've seen the signs...but I was mentally and physically drained and beyond caring about my personal health by that point...I lasted another hour before collapsing half way through rounds and being wheeled in to theatre for an appendectomy. \n\n... \n\n\"Hey there Katie-Kat.\" \n\nI blink groggily and the room comes into focus, Liam and my parents stand around one side of my bed. I try to sit up but a sharp pain in my stomach stops me dead. \n\n\"Don't move sweetie,\" mom says, pushing me back down, \"your appendix burst, you need some time to relax and recover.\" \n\n\"What?\" I groan confusedly, \"I have to get back to work.\" \n\n\"You're in the hospital Kate.\" Dad says. \n\n\"I know that,\" I groan again, \"but I can't just lay here in bed, I've got rounds.\" \n\n\"You're here as a patient Kate!\" He says firmly \"The only round you're going on is your own when they come to see you!\" \n\n\"But I-\" I start. \n\n\"Try to sleep Katie.\" A small voice interrupts. \n\nI know that voice...I look to the right of my bed and I know I must be dreaming...it looks like Erin, but it can't be her... \n\n\"Erin?\" I ask quietly as I feel her squeezing my hand. \n\n\"It's me sweetheart.\" She whispers. \n\n\"Erin...\" tears spring from my eyes and I lace my fingers as best I can through hers \"Honey...I'm so sorry...\" \n\n\"Shhhhh.\" She whispers as she moves some hair back from my face and tucks it behind my ear \"Go to sleep.\" \n\n\"But I...I...\" \n\n\"Shhh Katie, go to sleep.\" \n\nThe room swims before me and I find myself drifting unconscious again... \n\nEnd"
    ],
    "authorname": 184081,
    "tags": [
        "lesbian",
        "lesbian sex",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/two-years-four-months-one-week"
}