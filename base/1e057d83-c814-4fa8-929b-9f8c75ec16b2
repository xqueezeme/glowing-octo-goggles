{
    "title": "A Clutch of Mermaids",
    "pages": [
        "<center>\n\n A bespoke story, written for an individual with their own dreams and fantasies.\n\nMay you enjoy it as much as they have.\n\n+</center>\n\nRachel Monk looked up over her books strewn over a table in the library.\n\n\"Hey! Where've you been?\" she asked her best friend, roomie and study-mate, Sarah Suomi. \"I thought we were supposed to be studying for that Economics final tomorrow.\"\n\n\"Sorry,\" Sarah replied. \"I got hung up looking over the displays in the student centre job office. Sometimes they post stuff there before it goes on the net.\"\n\n\"Any luck?\" With graduation rapidly approaching and no jobs in sight, both of them were getting worried about their prospects.\n\n\"Nothing useful, mainly McJobs,\" the petite blonde said, pulling books out of her pack. \"There was one sort of weird one looking for mermaids or something.\"\n\n\"Mermaids?\" \n\nRachel, a head taller than her friend, raised her eyebrows in disbelief.\n\n\"Mermaids,\" Sarah affirmed. \"Look, I've got the info in my purse. Let's talk about it tomorrow, after the exam, OK?\"\n\n\"OK.\"\n\n.\n\nThe exam had been a tough one and both women left the room exhausted. On the other hand, both sensed that they had passed, had probably done better than just squeaked by. \n\nMoreover, it was not only their last exam of the term, but also the last of their school career. Assuming that they'd passed it and the other exams they had taken in the past couple of weeks, they would graduate in a couple of weeks.\n\nThe two friends decided to celebrate with a drink at the campus student bar. Neither of them was in any mood to do anything but relax and, thankfully, the normal music had not yet started.\n\nThe girls slumped in their chairs and, when the server arrived, ordered a favorite cooler. When the drinks arrived, they sat up and, distaining the waiting glasses, clinked bottles.\n\n\"So,\" Rachel said.\n\n\"So, indeed.\"\n\nThe two just sat there for a few minutes, small smiles of satisfaction on their faces.\n\nFor no apparent reason, the smiles suddenly got much brighter. The two whooped almost in unison.\n\n\"We made it!\"\n\n\"Watch out, world! We're coming for you!\"\n\nThe two fell into a long, strong hug. \n\nIt had been a tough go for each of them. Personal issues, money, boyfriend troubles, struggling with courses -- none of it was in any way unusual for university students, now or in generations long gone, but each of us has to find our own path, find our own solutions.\n\nIt helps, of course, when you've got somebody solid by your side. \n\nThe two had met as freshmen when they were paired as dormitory roommates and had formed the most solid of friendships.\n\nReleasing each other from the hug, they sat back and simply looked at each other. Both women were athletes, their bodies honed by grueling hours under a relentless -- and highly competent -- coach on the varsity swim team. Both had very long hair, Rachel's a medium brown and Sarah an ash blonde. Rachel towered over her petite friend but both were a bit jealous of each other's beauty. One thing they had in common was a magnificent bosom, to the point where each had seriously debated giving up competitive swimming.\n\nRachel however was much shyer, much more reserved, much more easily embarrassed than her friend. Sarah was the ebullient one, the one constantly daring her friend to push the envelope. It had been Sarah who'd first lost her virginity, Sarah who'd had the first hangover, Sarah who'd dared Rachel to go skinny dipping. The tall brunette on the other hand was the keel to Sarah's sail. The calm, sensible member of the duo, she kept her friend from going too far, talked them out of trouble when it came and in return was helped pushing her own boundaries and enjoying life to its fullest. While neither was a brilliant student, both were solid scholars; it helped that each was able to coach the other in various subjects. \n\nThe two made, in other words, a good team.\n\nThe girls sat in the cool dimness of the pub, at peace with themselves and the world. Eventually, Rachel caught the attention of the server and two more coolers arrived.\n\n\"So,\" she said. \"Mermaids.\"\n\n\"Yeah, can you believe it? It's a posh resort in the Caribbean looking for girls to get dressed up as mermaids and swim in a pool.\"\n\n\"That's it?\"\n\n\"Apparently. I did some research and it seems to be all legit. It's not a bordello or sex club, although things are, shall we say, 'relaxed'. It's just something that they're pushing, an image or marketing thing - their guests being able to swim with 'real' mermaids.\"\n\n\"Any 'mermen'?\"\n\n\"Didn't see any mention of it.\"\n\n\"Too bad. How's the money?\"\n\n\"Not great, but not bad, either. Room and board are included, so it's better than it looks at first glance.\" Sarah pulled out her laptop and soon had the resort website up. The two pushed their chairs together and began scrolling through.\n\n\"The summer season is coming up soon and, look, here's the hiring page.\"\n\n\"Available May to October - check. Good swimming ability a must -- check. Passport -- hey you do still have yours, right\"\n\n\"Uh-huh. Got it renewed it for that trip with the team last year.\"\n\n\"Is there a photo gallery? There!\"\n\nThe two watched as the gallery opened.\n\n\"Wow!\"\n\n\"Talk about fancy!\"\n\n\"Are there photos of the mermaids?\"\n\nEventually, the found photos of the pool. Sarah grinned at Rachel's blush.\n\nNot to put too find a point on it, many if not most of the mermaids were topless. Some had a pair of large shells over their nipples, worn like a tiny bikini top, but they were the exception. \n\nAll wore a long mermaid tail reaching down from their waist, brightly colored and made to look as if covered in scales.\n\nA short video showed them sunbathing by a large pool surrounded with palm trees and chairs. Some were swimming in the water. The video cut to the inside of a dark room, obviously a bar or club. The camera turned slowly to reveal a large window behind the bar.\n\nActually, 'aquarium' might a better term. It took but a moment to realize that the window was part of the pool. Two 'mermaids' swam up to the window, hair drifting around them as they paused and peered through the glass at the bar. One of them was topless, the other wore the shell bikini top.\n\n\"Wow!\" Sarah breathed again.\n\n\"No way,\" Rachel said, flatly. \"Paid to sit around and have some jerk perv out over me. That's sick, Sarah.\"\n\nHer friend thought for a minute.\n\n\"Listen to me, Rache. First off, it seems to be reputable. It's listed on the usual booking sites and it's had some good reviews. I'm not seeing anything really pervy about it.\n\n\"Second, you don't have to go topless. Look at those other girls with a top on.\n\n\"Third,\" and here she grasped her tall friend by the forearm and squeezed, \"you've got nothing to be ashamed of, girl. Tall and really pretty and a great figure -- jeez, you turn the head of every boy on campus.\"\n\n\"But...\" Rachel started to interrupt.\n\n\"But nothing and don't interrupt! Here's the fourth thing, Rachel.\" Sarah's voice turned flat. \"We're broke, kid. We've both been looking for jobs for what - six weeks? We're about to graduate and our student loans are about to come due. Neither of our families can look after us and the economy around here sucks.\"\n\nThe small blonde girl looked her friend in the eyes. \"I don't want to live on the street, Rachel and I'm not &hairsp; hooking to stay alive.\"\n\nRachel sat with her eyes closed. \n\n\"Promise me you'll at least look at it, Rache,\" Sarah continued.\n\n\"I don't know, Sarah. It just seems...\" Her voice trailed off.\n\n\"Look, what harm can there be in just looking, talking to them?\"\n\nThe brunette thought a moment. She knew to the penny what was in her bank account -- and it wasn't enough to cover her first student loan payment, let alone rent.\n\n\"OK, but we're just looking.\"\n\nSarah hugged her before turning to her laptop and starting to type.\n\n.\n\nSarah woke her up the very next morning.\n\n\"C'mon, girl. Get up! We have an interview in two hours.\"\n\n\"Mrmmf.\"\n\nThe tall woman started to drift back to sleep, but Sarah kept shaking her shoulder. Eventually, the sound of the coffee maker brought her awake. Her roomie sat cross-legged beside the bed, a steaming cup in her hand.\n\n\"Timezit?\" Rachel mumbled. Of the two, she was not&hairsp; the early bird.\n\n\"Nine, Princess. Nine o'clock on a bright, sunny day! And there's a text response from Pirate's Cay resort. They want to interview us online at 11 our time.\"\n\nSitting up and taking the coffee gratefully, Rachel shook her head as if to clear it.\n\n\"Did we really agree to this, Sarah?\"\n\n\"We agreed to talk, girl.\"\n\n\"OK,\" Rachel said. \"I guess.\"\n\nThe two had a quick shower. Back in their room, they nibbled on some dried fruit and bagels while drying their hair.\n\n\"Where's the interview, Sarah?\"\n\n\"It's online, a Zoom interview. We can do it from here.\"\n\n\"Oh.\" She looked around, started to tidy up.\n\nSara took her by the arm, pulled her around so they were facing.\n\n\"Relax, Rache. It's just an interview. You Skype all the time with your parents.\"\n\n\"Yeah, but... Oh, heck. Fine.\" Rachel's shoulders came back, as if she was about to face a firing squad with dignity. She did however turn back to tidying up the dorm room.\n\n\"What are you going to wear?\" she asked Sarah over one shoulder as she worked.\n\n\"Um, yeah. About that...\" came the reply.\n\nRachel's problem-radar started beeping in her head. She'd heard that tone from Sarah before and it generally meant something was up. She turned to her friend.\n\n\"'About that', what?\"\n\nSarah looked away, took a deep breath. \"Well, it's a pool job, right? They want to interview us dressed in bikinis or swimsuits.\"\n\n\"What?\"\n\nSarah, hands on her hips, turned to lock eyes with her friend. \"Bikini. Put it on. Now, Rachel!\" \n\n\"Like hell! What kind of unprofessional bullshit is that, demanding job hunters interview wearing fuck-all?\"\n\nThat the tall girl had slipped into very uncharacteristic profanity was clear evidence, Sarah knew, of how upset she was. She realized that she would have to tread softly.\n\n\"Honey, it's a job for girls dressed as mermaids. Even if you wear those shells, they still want to see what we're going to look like in our mermaid costume. That's not perv, that's good business sense.\"\n\n\"It's illegal, Sarah!\" \n\n\"Maybe here, Rache, but not there, I'm thinking. The Caribbean is a bit more relaxed. \n\n\"Anyway,\" she continued, \"I can adjust the camera here so it's just our faces showing until you're satisfied it's OK.\"\n\nShe looked up at her friend, took another breath.\n\n\"Rachel, you know I love you, dear, but grub comes first. I know that I'm broke and this looks like it might buy me some breathing room. \n\n\"I'm going to take it, Rachel,\" she continued determinedly. \"I really hope you consider it, but I need the money. It ain't hookin' and it pays money.  Please!\" \n\nRachel closed her eyes, considered the situation. It was her turn to take a deep breath.\n\n\"OK.\"\n\n\"Great! What are you going to wear?\"\n\n\"My team swimsuit?\"\n\nSarah rolled her eyes in disgust. \"No way! That one-piece thing? Girl, you've got a great figure and now's so definitely the time to show it off. You're wearing that red thong you got last summer.\"\n\nRachel blushed. Yes, she knew she looked good in it and she knew that hundreds of strangers had watched her on the beach in it last year, but still...\n\n\"Good, then,\" Sarah said. \"It's settled.\"\n\n.\n\nThe man on the screen was in his early 50s, darkly tanned and speaking with a slight British accent. He introduced himself as Karl. Beside him was a woman who Karl introduced as Kami, his 'HR department'. Slightly younger than Karl, she too was deeply tanned. Her grey hair was cut quite short.\n\n\"We're pleased to meet you two,\" she said. \"We've been hoping to fill a couple of positions here and your message, Sarah,\" she said, looking at Rachel, \"came at just the right time.\"\n\n\"Actually, I'm Sarah,\" the blonde girl said.\n\n\"Oh, sorry. Anyway, we do have some positions open if everything works out.\"\n\n\"Could you go over our duties, please?\" Rachel asked, softly.\n\nKarl answered. \"To be honest, you're mainly there to be decorative. I know that may be a blow, but the image Pirate's Cay had built up is of a tropical paradise, an adult resort where people can blend into their fantasies about, well, pirates and white sand, and...\"\n\n\"And mermaids,\" Kami said, cutting him off. \"It's our branding thing. Pretty mermaids by the pool all day.\"\n\n\"And nobody...\" Rachel began to ask.\n\n\"Ah, the elephant in the room!\" Karl smiled.\n\nKami took it from there. It was apparently a common question. \"Just being ornamental, dear. Although we encourage a relaxed atmosphere, this isn't a cat house or a sex club. We have a topless-everywhere dress code for those guests who so wish and one of the beaches is clothing optional. But the bottom line is that nobody touches you without your permission. That's a hard limit and here's no expectation of sex, ever.\"\n\n\"Some of the patrons,\" Karl continued, \"like to have their photos taken with the mermaids. It's a club tradition, I guess you could say. But they have to ask first and I assure you that there's no penalty for declining.\"\n\nKami nodded in agreement, smiled reassuringly. \"That's so. And there's generally a generous tip for that. But your core job is, well, spending 10 hours a day, six days a week, doing what every girl just loves to do -- sit around in the sun and relax. You can swim whenever you want. Actually, we expect you to swim a fair bit, mingle with the other swimmers. Oh, and we need you to dive down by the bar and wave at the customers a lot. It's long hours, but it's easy work, just working on your tan.\"\n\nKarl spoke up. \"There's also an outdoor bar right next to the pool. Some of the girls act as waitresses, bringing the guests their drinks by swimming them across the pool. Not a biggie, but it's there.\"\n\n\"Sounds pretty good,\" Sarah said, as much to Rachel as the older couple.\n\nEver the cautious one, Rachel continued. \"And our contract?\"\n\n\"If we're in agreement, we'll email it to Sarah. You can fill it in and send it back to us, along with a standard medical check, including a couple of inoculations if you don't already have them.\"\n\n\"I think the student medical centre can handle that,\" Sarah said.\n\n\"And, forgive me, but the pay?\" her friend asked.\n\n\"Room, board, plane fare and...\" Kami named a modest sum, payable on completion of the four-month contract.\n\n\"And tips,\" Karl added. \"There's no house cut on tips.\"\n\n\"In reality, ladies,\" Kami said, \"you're being paid to go to the beach and sunbathe.\"\n\nThe two girls looked at each other. Rachel overcame her initial reservations and nodded. Sarah took that and, turned to the camera. \"Yes,\" she said, speaking for both of them.\n\n\"There are a couple of other things first,\" Karl said. \"How well can you swim?\"\n\n\"Karl,\" Kami cut in, \"look at their application. They're both varsity there.\"\n\nThe man's eyes flickered to one side for a moment. He nodded. \"That right for both of you?\" he asked.\n\nThe two girls nodded together.\n\n\"OK, sorry. One last thing then. We need to confirm how you would look in a mermaid costume. Would one of you adjust the camera, please, so we can see more of you?\"\n\nSarah looked at Rachel, who nodded. Reaching out, the small woman fiddled with the camera. Taking her friend by the hand, she stood up and stepped back to bring their whole bodies into the picture.\n\n\"Impressive,\" Kami remarked.\n\n\"Very much so,\" Karl added. \"Please turn around slowly, ladies.\"\n\nThe two did so.\n\nOn the screen, Karl looked at Kami. The two nodded in agreement, turned back to the girls.\n\nKami smiled. \"OK, you're hired. I'll send you flight information once I get your signed contracts and medical chits. Can you be here by Wednesday next?\"\n\nThe two girls thought, nodded.\n\n\"Good,\" said Karl. \"We'll see you at the airport then. Do either of you have any questions?\" \n\n\"Um,\" Rachel asked carefully, \"I notice that there seem to be, um, two styles&hairsp; of mermaid costumes.\"\n\nKarl and Kami both laughed. \"Oh, yes!\" she said, giggling. \"There are indeed! But it's perfectly up to each of you to decide whether or not she goes topless.\"\n\n\"There is a pay differential for that, of course,\" Karl said. \"We can talk about that once you get here. I take it you're open to the idea?\"\n\n\"Well, I certainly am,\" Sarah said, giggling herself. She thought for a moment, reached behind her neck and pulled on a bikini tie. The garment fell away, letting the girl's opulent breasts fall free. She put her hands under them, lifted them for inspection before doing little pirouette for the camera. \"How's this?\" Her breasts swayed a little as she came to a halt, again facing the camera.\n\n\"I think I'm as impressed with those as you'll be as impressed by the pay raise,\" Karl said, dryly. Beside him, Kami laughed.\n\nHe turned to Rachel. \"From your expression, I can see you're still thinking about it, young lady.\"\n\n\"Still thinking,\" Rachel admitted. \n\n\"You do that,\" Kami said. \"We'll see you at the airport.\" Her hand reached out and the picture on the screen died.\n\n+\n\nAs promised, Karl was waiting for them when they landed. There was a short taxi ride to a second, private airport and Karl was soon helping the two stow their bags in a bright red, one-engined float-plane. The girls watched as he did a quick but thorough inspection of the aircraft.\n\nInside, the little aircraft was very clean and surprisingly roomy, with seats for eight people in addition to the pilot and co-pilot. Karl seated them in the back, made sure they were buckled in and handed each of them a bulbous set of earphones, each with a built-in microphone. \n\n\"Don't talk until we're airborne,\" he directed. \"If there's a problem, life jackets are under your seats.\" That apparently comprised the entire flight safety briefing.\n\nThe growl of the engine filled the compartment and the earphones were soon filled with concise but, to the girls, incomprehensible messages, directions and instructions. The little craft taxied out into the channel; the engine roared into full power. It sped up, bounced once or twice and was very quickly airborne.\n\nOnce the little aircraft had taken off, the radio chatter died away.\n\n\"How's that?\" he asked.\n\n\"Amazing!\" Sarah replied. \"I can't believe you flew all the way just to get us.\"\n\n\"I like to fly,\" he replied. \"And there's really no other way to the island except for the weekly supply boat.\"\n\n\"What kind of airplane is this?\"\n\nA low chuckle came over their eyephones. \"It's a de Havilland Beaver,\" he said. \"This one is older than the two of you put together, but it's been properly maintained and Viking Air did a major rebuild before I bought it. Not too fast, but safe as houses.\"\n\nTurning around, he looked at the two girls. \"Either of you care to come up front for a bit? We've got about an hour's flight.\"\n\nPredictably, it was Sarah who popped forward, beaming. \n\nOnce she was buckled in on the righthand side, Karl began to point out the various islands and, occasionally, large boats below. There seemed to be a fair number of sailboats and the occasional large passenger liner. \n\nRachel was seated by a fair-sized window and had a good view of a mass of tiny islands below, all seeming to float on a crystal-blue sea. The view was entrancing.\n\nUp front, Karl looked at Sarah. \"Want to try flying?\"\n\nThe girl's eyes turned to him in amazement. \"I... I don't know how to fly, Karl.\"\n\n\"Not a problem. Put your hand on the stick -- lightly. I'm still in control; you're just following along. OK?\"\n\n\"Yes.\" The girl's voice was uncharacteristically timid.\n\n\"OK, now look out the window to your right. At the far end of the wings are the ailerons. When we move the stick from side to side, we move the ailerons, which makes one wingtip go up and the other go down. It makes the aircraft bank a bit, which is mainly how we turn.\"",
        "Sarah felt the stick move in her hand and, sure enough, the aileron moved down. The wing lifted and the aircraft started a turn. As soon as it started however, Karl brought the stick back to its original position and they levelled off.\n\n\"OK, the other thing the stick does is control the elevators in the tail. If we push forward,\" and here Sarah felt the stick move forwards and backward slightly, \"it lifts the tail, which pushes our nose down and makes us descend.\" The stick moved forward again under her hand and, as promised, the nose of the aircraft pointed downwards and the aircraft started to go down. A few seconds later, Karl pulled up on the stick and levelled them out.\n\n\"OK, Sarah?\" \n\nThe girl beamed at him in excitement and he smiled.\n\n\"Next we have the pedals. You can see them in front of you, yes?\" The small woman nodded.\n\n\"They control the rudder, which makes us yaw, which is to say, turn to one side without dropping the wing. I think they're set for somebody a little taller than you, but you might still be able to reach them. Tell me if you can.\"\n\nThe girl fidgeted for a moment and the pilot felt the aircraft jerk slightly to one side.\n\n\"Woah!\" he said. \"Gently, Sarah!\"\n\n\"Sorry.\"\n\n\"No, no, it's OK. I've got this solid, and we're in no danger. Just take it easy.\"\n\n\"We're going to do a slight turn to the right now. We'll start off by moving the stick a little to the right, which will cause us to bank in that direction. Feel that?\"\n\n\"Yes. This is so cool, Karl!\"\n\n\"To make a smooth turn, we use both the ailerons and the rudder. The tricky part is learning to coordinate them. It's kind of like riding a bicycle, though. Once you get the hang of it, you don't have to think about it.\" He again demonstrated.\n\nHe paused the demonstration. \"How are you doing back there, Rachel?\" he asked.\n\n\"Great, thanks.\"\n\n\"Good. Now, Sarah, you try flying it straight and level for a while. Don't worry, I'll still have my hands and feet on the controls. If things go screwy, just let go of everything and pull your feet back.\"\n\n\"Um, OK?\"\n\nRachel could feel the difference. Karl's smooth mastery of the craft shifting to a more jerky, uncertain control.\n\n\"Right,\" the man's voice said over the intercom a minute or two later. \"Let go now. My airplane.\"\n\nAlmost instantly, things became smoother.\n\n\"Good job, Sarah. We'll make a pilot out of you soon.\"\n\nThe young woman said nothing. Her bright smile did all the talking for her.\n\nShortly after, Karl again spoke. \"OK, it's time to give Rachel a chance.\"\n\n\"No, I'm OK back here, thanks,\" she replied.\n\n\"Come on, Rachel,\" Sarah said. \"It's fantastic!\"\n\n\"I'm OK.\"\n\n\"Suit yourself,\" Karl said.\n\nWith an exasperated look at Karl, Sarah struggled out of her seat, squeezed by him and came back. The engine noise in the cabin was loud and she had left her headset behind. She went to speak, stopped and, pulling Rachels' headset off, shouted:\n\n\"GET... UP... THERE ... NOW!\"\n\nThe tall girl smiled, held up her hand in polite refusal.\n\nSarah made a stern face and pointed imperiously. With that, her friend shrugged, undid her seat belt and made her way up to the co-pilot's spot.\n\n\"Welcome!\" Karl's voice came over the intercom. \"Glad you could make it.\"\n\nFrom behind, there was a giggle from Sarah.\n\n\"Thanks.\"\n\n\"I think you heard me describe what the controls do,\" Karl said. \"Would you like to try?\"\n\n\"No, thank you. Really, Karl - I'm a total klutz. But, sitting here, I'm surprised that you can figure out all these dials and stuff. What do they all do?\"\n\nKarl proceeded to name them, pointing as he did. It took a while, even for the relatively simple instrument panel.\n\nSoon after, he pointed out the window. \"There it is, the large island just off to port.\" With that, he put the nose down and started a gradual descent. \n\nThe girls watched in amazement as the island grew larger in their windows.\n\nPerhaps half a mile long, it was in a broad C-shape, quite high and broad in the middle. At one end of the island was a large, red-roofed structure. A score of smaller versions of it were scattered here and there under the trees across the island. With the exception of those, some paths, tennis courts and a large irregular pool by the large building, the island was a lush green, with trees everywhere. A sheltered bay held a dock with a boat of some sort next to it. \n\nAs they went lower still, the girls could see that many of the trees were flowered. There were small sailboats in the bay and people on the beaches, both inside the bay and around the outside perimeter of the island.\n\n\"It's so pretty!\" Rachel breathed.\n\n\"It is that,\" Karl agreed.\n\nKarl leveled off and did a low pass over the island.\n\n\"That's so they'll be sure to send the shuttle,\" his voice said in the earphones.\n\nHe did one more pass, then circled around and made a surprisingly gentle landing, taxiing up to the dock where a tanned young man in matching shorts and t-shirt with the Pirate's Cay logo helped them moor the Beaver. Baggage was carried to a golf cart and the four were soon heading up to the main building.\n\n\"Room 27 for the bags, Jason,\" Karl said as they arrived. Turning to Rachel and Sarah, he said, \"Come with me.\"\n\nThe arrival routine was efficient. Part of it was a briefing using a large aerial photo of the island. \n\n\"We're here&hairsp;,\" Karl said, pointing at the photo with a long ruler. \"This building contains guest rooms, resort offices, the dining room, the pub and most of the other administration features for the resort. It also contains the staff quarters, staff dining room and lounge.\n\n\"In addition to the rooms in this building, there are 18 guest villas of various sizes on the island. Here&hairsp; are the tennis courts, also for guest use. This&hairsp; beach is for guests, this&hairsp; one is the guest clothing-optional beach and this&hairsp; one is reserved for the staff.\"\n\nHe turned from the photo and smiled at that. \"Given your job, I'm not sure you two will be wanting to spend much time there, but it's there if you want it.\"\n\nThe girls were each fitted with a close-fitting bracelet of about the same thickness as a pencil. \"This is your room key and your dining card,\" he said. \"It also allows you to charge drinks at the staff lounge against your pay. In addition, it's also your tip pass -- a guest only has to tap his bracelet against yours for the tip to register on your account. The longer the two bracelets are held together, the higher the tip. You'll catch on quickly, I promise.\"\n\nAll that done, Karl took them on a tour of the large building. While not crowded at the moment, it was clear that there were quite a few people on the island. \n\nOutside, the pool was precisely like its image on the website -- large, irregular in shape and located right by the main building. \n\nAnd there were indeed mermaids, some topless and some not. They were all, Rachel and Sarah saw with just a slight bit of jealousy, truly beautiful. One black girl in particular had stunning features and perfect skin set off by a creamy white tail.\n\nAbout half of the female guests seemed to have chosen to go topless as well. Looking around, it suddenly didn't seem like that big a deal to the tall girl and she found herself relaxing just a bit.\n\nAs they watched, a pair of guests, both obviously in their 60s, approached one of the mermaids. Her tail was green, perfectly complimenting her red hair. Her nipples were covered with seashells of the same color as her tail. While large, her breasts offered no competition to either Rachel or Sarah. When the man leaned over and said something, she smiled graciously, pulled herself out of the water and sat on the edge of the pool. The couple slid down to sit beside her, one on either side. The man said something to her; she nodded. Both of them put their arms around her waist.\n\nThe mermaid smiled brilliantly as another staff member took a series of photos with the old man's camera. Being careful not to splash them, the mermaid, obviously an old hand at modeling this way, flipped her tail out of the water, turned from side to side as photo after photo was taken. \n\n\"We did mention that that's a tradition here, I think,\" Karl said. The two new girls nodded. \n\n\"And you noticed that they asked Sandra first and that there was no hanky-panky, just a hug, right?\"\n\nAgain, the two nodded.\n\nThe two guests released the mermaid, got up. The woman leaned down and tapped the girl's bracelet with her own before following her husband. The mermaid smiled and slipped back into the pool to do a couple of slow laps.\n\n\"All the guests here also wear a bracelet and they've all been briefed on expected conduct. If any of them gets weird or pushes you too hard, get their number and let us know. OK?\"\n\n\"Yes.\"\n\nKarl looked both of them in the eyes.\n\n\"We have two rules here. First, nobody -- nobody&hairsp; -- has the right to grope you or demand any kind of sex from our mermaids. We've been doing this for years and it's generally been trouble-free. Every so often however we get a new guest who thinks rules don't apply to them -- generally to him.&hairsp; Just to be clear, Pirate's Cay supports its employees. Don't take any kind of crap.\"\n\nSarah and Rachel nodded.\n\n\"Second rule. To make the...' and here he smiled, \"...wholesome nature of this place perfectly clear, what you do as adults off-hours is your business, but there is no off-duty fraternization between the staff and the guests. No picnics on the beach, no walks on the paths, no private dinners -- none. Got it?\"\n\nHe saw the puzzlement in their eyes. \"OK,\" he said. \"A couple of reasons for that. First, we really do want to maintain a fairly wholesome business reputation. And getting a reputation for being a source of always-willing young ladies, if you get my drift, wouldn't sit well with the government. Secondly, we've found it's bad for staff morale. Some here will be jealous already, seeing you as being paid a lot of money to just sit around dressed in Sweet Fanny Adams. Having close relationships with the guests would make it worse.\"\n\n\"We understand, Karl,\" Rachel said softly.\n\nFrom time to time as they watched, one of the mermaids would slip into the water from their perch under some palm trees. She'd make a turn or two around the pool before diving under the water near the building. \n\nThey generally spent quite a while underwater before surfacing. Sometimes they dove again, sometimes they simply returned to where they had been on the other side of the pool.\n\n\"That's where the bar is?\" Rachel guessed.\n\n\"Yup. 'Blackbeard's Cove', we call it. It's next on our tour. Follow me.\"\n\nThe bar proved surprisingly large but was as dim as the website made it out to be. The window behind the bar was the size of a king-size bed. It was almost empty when they entered -- just the bartender and two couples.\n\n\"Let's sit down,\" Karl suggested. \"Normally, this place is for guests only, but you should see what it looks like from inside.\"\n\nThe two declined an offer of a coffee and simply sat there admiring the d\u00e9cor. Dark wood and faux portholes were matched with numerous prints of sailing ships. The furniture was solid, comfortable.\n\nRachel's eyes were caught by movement behind the bar. A mermaid slowly swum into sight, her tail driving her forward and her arms beside her body. She came to the window and hovered before it, waving. Karl waved back. Her hair trailing behind her, she did an underwater somersault before gliding out of view.\n\n\"Oh!\" Rachel said. \"That's really pretty.\"\n\n\"We try to get a mermaid or two by there every few minutes.\"\n\n\"I can see why,\" Sarah said.\n\n\"Staff dinner starts at 5:30. Right now, you should find Kami -- she's in Building B, off to the right -- and get fitted for your tails.\"\n\nThe two girls nodded.\n\nTurning to Sarah, Karl asked, \"Are you still good for the topless costume?\"\n\n\"You bet!\"\n\n\"OK, I'll have it entered into the pay sheet.\"\n\nHe turned to Rachel. \"Change your mind?\"\n\n\"Not yet. Thinking on it.\"\n\n\"OK. I've got you two on tomorrow from 10:00 AM to 8:00 PM. You get two half-hour meal breaks and there need to be at least two mermaids in the pool area at all times, so you can figure it out with the others.\"\n\n\"Thanks, Karl,\" Rachel said.\n\nAs they exited the building, the two saw one of the younger male guests with a bare-breasted mermaid lying in his arms. The girl had obviously agreed, for her arm was around his neck and she was smiling broadly. Another young man was taking their photo. A moment later, the first leaned over the edge of the pool and simply let her roll down his forearms into the water. The motion of her breasts as she was rolling was amazing. The mermaid gave a shrill squeal, surfacing a moment later laughing. The man held his bracelet next to hers for more than a mere tap.\n\n\"Darn good racket,\" Sarah mused.\n\nThe two took a moment to change, each settling on what seemed to be a common garb around the Resort, a bikini and a waist-wrap sarong. \n\nArriving at an out-of-the-way building with a large B painted on the doorpost, they stopped. With one last look at each other, Sarah knocked on the door.\n\nThe grey-haired woman from the interview opened it.\n\n\"Um, It's Kami, right?\" \n\n\"That's me! And you're Rachel and Sarah, looking for your fins, so come on in!\" \n\nLeading them through a cluttered workspace and onto a patio behind the building, she sat down on a chair, gesturing to the two younger women to join her. The patio was comfortable, shaded with palm trees and featuring a small private pool.\n\n\"Why don't we start with you, Rachel?\"\n\nShe rose, went back into the workroom, returning a minute later with a scruffy cardboard box. The girls watched as she opened it, first taking out a very ordinary, rather battered shoe-sizing device of the sort found on the floor of any shoe store.\n\n\"On you get, girlie,\" she commanded, recording Rachel's foot measurements on a small tablet. \n\nA tape measure followed.\n\n\"You're either going to have to hold up the hem of that sarong or else take it off, hon. It's in the way.\"\n\nRachel shrugged. She flipped the skirt off, revealing a tiny bikini bottom.\n\n\"Sweet legs,\" the older woman said softly. \"Take care of that skin, hon, it's amazing.\"\n\nFor the next two minutes, Rachel simply stood still while Kami's deft fingers measured her ankles, her calves, her knees and so forth. The process was repeated for Sarah.\n\n\"OK, you two,\" I think we're in luck. I don't think I'm going to have to make anything special for you. You're both close enough what we have on the shelves, I think. Wait a sec.\"\n\nShe reappeared shortly after with a pair of what she referred to as 'mono fins' in one hand and lengths of brightly-coloured fabric over the other arm. \n\nThe mono fins were both red-orange in colour and shaped like a fish's tail fin. Each had a pair of low rubbery boots mounted on one side.\n\nStanding in front of the two girls, she demonstrated how to wear them.\n\n\"To get out of them, you just push down with one foot and pull the other out. Then you do the same thing for the other foot.\" \n\nShe offered Rachel and Sarah a selection of 'tails', tubular elastic fabric sheaths to slide over the legs and convert them to a mermaid tail. The bottom end of all of them were coloured to match the mono fins, with colors changing rapidly above that. \n\n\"You pull these on like pantyhose and you can simply push them down over your feet when you want to get out.\"\n\nRachel decided on a bright red one and Sarah took one which had amber and dark brown stripes. Both had printed patterns like fish scales. \n\nLeading the two to sit beside the shallow end of the pool, she helped the two into their tails, which ended just above the waist, then helped them into the mono fins.\n\nIt was an odd sensation, they both thought. For the crawl, the fastest swimming stroke, their coaches had stressed the need for independent leg action. With this on, it was impossible. There was only one possible way to swim, the dolphin stroke, bending knees and waist, using a lot of core muscles. They'd done that for butterfly stroke races, of course, but it felt much different.\n\n\"Happy with those?\" Kami asked.\n\nThe girls beamed. The costumes were fun, sexy and cute.\n\n\"Did either of you do any mermaiding as girls?\" Kami asked. \"There's a lot of youngsters out in the real world who really enjoy it.\"\n\nThe two shook their heads.\n\n\"Too bad. Anyway, those are your costumes, ladies. The tail can be machine washed, but hang it to dry, OK? I look forward to seeing you at the pool.\"\n\n\"Um...\" Rachel said.\n\n\"Yes?\"\n\n\"I think there's a bra or top?\n\n\"Oh! I'm so sorry!\" Kami said. \"I forgot.\"\n\nHer manner became thoroughly professional. \"What's your bra size back home, hon?\"\n\nRachel blushed. She was proud of her bosom, but still embarrassed by it at times. \"Erm, 36F,\" she said softly.\n\n\"OK, let's see what I can find. Back in a minute.\"\n\nSarah chuckled as the older woman left the room. \"There are boys out there who are going to swear off shellfish if you wear that bra, Rache!\"\n\n\"Oh, shut up. I just don't...\"\n\nThe smaller woman patted her on the hand. \"Sorry, hon. I didn't mean to tease. But honestly, roomie, speaking as somebody who's seen them a bunch of times, you've got no reason to hide them, especially in a place like this. There's millions of girls who'd kill for a rack like that.\"\n\nRachel's reply was cut off as Kami returned, a handful of shells and strings dangling from her hand.\n\n\"Here we go,\" she said. She took a quick look at Sarah before asking Rachel, \"They're sort of like bras, dear; they need to be properly fitted. Would you like Sarah to wait outside?\"\n\n\"No,\" Rachel said. \"We're roommates. She's seen me before.\"\n\n\"Fine. So, slip off that bikini top and let's see how these fit, please.\"\n\nRachel paused, then reached back and pulled first one tie, then the other. She took off the bra and tossed it aside.\n\n\"OK, good news and bad news, Rachel. The bad news is that these,\" she said, holding up a costume top,\" don't offer a lot of support. The good news is that you won't get those red marks from the strings because they're not holding up anything but the shells.\" Her finger reached out and ran along the marks left by Rachel's bikini ties.\n\n\"No support?\" Rachel asked. \n\n\"The shells are mainly there to cover your nipples, dear.\"\n\nShe handed one top to Rachel, with red shells to match her tail. Holding it up in her hands, it was little more than two shallow plastic scallop shells fastened together with ties. She held them up over her breasts, but the shells were just a little bit too small for the job. The edges of her soft brown areolae were clearly visible around the shell edges.\n\n\"Put them on anyway, dear,\" Kami directed. \"I have a 3D printer here; I'll make you a larger pair later. Let's just see what these look like for now.\"\n\nKami had been right; there wasn't much support. On the other hand, the young woman thought, it wasn't like she was going to be doing much walking around in them; it would be mainly swimming or lying down.\n\n\"Hot!\" Sara remarked, smiling.\n\nThe shells felt odd. Accustomed to the soft fabric of brassieres and bikini tops, the shells were hard, unyielding against her soft flesh. She turned back and forth to look at herself at a mirror on the patio wall. \n\n\"Do me a favour,\" Kami said. \"Bounce a little.\"\n\n\"What?\"\n\n\"Bounce. On your toes. I want to see if this is going to be a problem. The shells aren't for support; they're just for modesty. If this is going to be an issue for you, let's find out now.\"\n\nBlushing, the young woman did so. Her breasts wobbled up and down as she did, Kami watched her dispassionately. \n\n\"Rachel,\" she asked, \"have you ever gone topless, like at a beach?\"",
        "\"No.\"\n\n\"Do you ever go braless at home?\"\n\nSarah snickered. \"All the time.\"\n\nKami glanced at her, turned back to Rachel. \"Do your breasts hurt after a day without a bra?\"\n\n\"No. Not usually.\"\n\nKami sat back, smiled. \"Then I think you'll be fine.\"\n\nTaking a measuring tape, she did a quick check on Rachel's breasts. \"I'll have a new set ready in a couple of hours, Rachel. Just come back after dinner to pick them up. You gals can get dressed and go.\"\n\n\"Oh!\" she said as the two were at the door. \"Two things I forgot to mention.\n\n\"Both the tails and the seashells are UV-transparent. You won't be developing any tan lines, but you may need sunblock in some... odd places, at least initially.\"\n\nThe two smiled at that. No worries.\n\n\"And, yeah - the tails are pretty stretchy and clingy. They really show that dreaded visible panty line. So, nothing under them, please, ladies. It really shows.\"\n\nWith that, she closed the door, leaving the two shocked women looking at each other.\n\n.\n\nThe food in the staff cafeteria proved to be quite good, much of it apparently unordered dishes from the guest restaurant. And the two friends got to meet some of the other mermaids.\n\nThere were 10 of them at the Resort at any one time, they learned, but some were almost always working at the pool. With Rachel and Sarah arriving at the Resort, two others were about to leave. \n\nThe two were pleased that all of the others seemed friendly. Sarah and Rachel were tired after their journey and begged off when invited to the staff lounge. Neither of them had any trouble sleeping that night.\n\n.\n\nThere was a small change room and toilet discretely located at one end of the pool. Sarah and Rachel talked nervously as they pulled themselves out of their clothes and into their tails. \n\nThere was a full-length mirror by the door. The two of them struck a pose, arms around each other's waist. They were a striking pair. Looking at her reflection, Rachel realized that the seashells did more to accentuate her near nakedness than hide it and wondered if that made it better or worse.\n\nSarah was thinking much the same thing. Impishly, she flicked a forefinger against one shell. Her nail made a dull click.\n\n\"Pretty cool top, Rache! You'll have every boy drooling.\"\n\nRachel bent her head to pointedly stare at Sarah's uncovered breasts. While not so large as Rachel's, they were ample, indeed oversized for the blonde's small frame. Rachel saw to her surprise that Sarah's coral-colored nipples were prominent, hard. She decided this was not the time to mention it.\n\n\"Not as much as they're going to be drooling over those, Sarah. They're just awesome, &hairsp; sweetie.\"\n\nSarah grinned, leaned up and kissed her friend softly on the cheek. \"It's showtime, girl. Let's get out there and wow the boys!\"\n\nThe stretchy fabric of the tails meant that they could hobble a little bit. Picking up their mono fins, they moved slowly to the edge of the pool, sat down and pulled on their fins.\n\nSlipping into the water, they swam slowly over to the 'mermaid beach', a sandy spot with both sunny areas and shade from a couple of palm trees. There were two other mermaids there, one of whom was also wearing shells.\n\nRachel couldn't decide if she was happy about that or not.\n\n.\n\nThe day passed slowly, but not unpleasantly. As Kami had noted during their initial interview, their job was what many women their age wanted to do in their spare time. And swimming was something they'd been getting up early each day for years to do.\n\nGuests came by every so often. Some wanted photos, others just wanted to chat. All of the mermaids got good at both. None of the guests made any rude remarks, which was a relief, although the men in particular had a difficult time keeping their eyes on the girls' faces. \n\nThey giggled over that when by themselves.\n\nRemembering Karl's instructions, the two took turns with the others swimming around the pool and diving by the bar window. It was dark on the other side of the glass, making the window look rather like a half-mirror, difficult to see through. Sarah made a point of doing a slow summersault each time she went by. A couple of men in the pool sank underwater to watch them swim by each time they passed.\n\nSarah was amused by the attention. Rachel on the other hand initially bristled inwardly at being ogled, but, to her surprise, found it soon ceased to bother her. This wasn't back home and being visible in their minimal costumes was what they were here for. Looks, in other words, were free.\n\nFrom time to time, one of the mermaids would deliver a drink to a poolside guest, usually receiving a bracelet tip in return.\n\n.\n\nThe two friends quickly settled into the resort routine. Their hours shifted periodically as the weeks went by, but it was always 10 hours a day. \n\nThey made friends easily enough with the other girls. There was little to do on the job but swim and talk.\n\nThe black girl, Iris, left soon after they arrived and was followed by others leaving after their contracts had ended. New mermaids arrived in their turn. There were always new faces.\n\nLife was peaceful, one day flowing into the next.\n\n.\n\nAfter they got off work one evening, the two made one of their routine stops to check their pay. Tapping their bracelets on a resort computer terminal, they were able to watch their pay balance building up. \n\nThere was of course no need for money on the island. Having their bracelets tapped added funds to their accounts, tapping their bracelets at the staff lounge or one the Resort shops took some away.\n\nRachel had known from the beginning that topless Sarah was earning more than she was and was content with that. Then she noticed Sarah's tip balance, which was about two and a half times bigger than hers. \"Hey!\" she said, pointing. \"No fair!\"\n\nSarah looked up at her, tilted her head to one side. \"Really, Rache? You're so innocent, girl.\" She giggled, put her hands behind her head and thrust out her chest. She wiggled a little and her boobs bounced under the staff t-shirt.\n\n\"Rachel, honey, I've been getting a lot of photos taken with the younger guys. And they've also been the ones asking for me to bring them drinks. You, Miss Seashell, have been having your photo taken with the older couples, ones where your hidden nips don't threaten a little old lady's self-image. Who do you think tips better -- and why?\"\n\nThe tall woman blushed a little. Irritating as it was, she had to acknowledge that her friend was right. And how much did the shells actually do to protect her modesty? She had to admit, not that much. Rachel had a lot of boob and most of it was visible, even with the shells.\n\nThe next morning, Rachel stood in front of the mirror in her room, dressed only in her sarong. She pulled her shoulders back, put her hands under her breasts, turned back and forth, examining herself.\n\nThen she took a deep breath and walked out, leaving the seashell bra in her room.\n\nPerhaps coincidently, her tips started getting much higher thereafter.\n\n.\n\nOne big tipper towards the end of their contract was named William. A tall man in his early 30s with dark hair and an exuberant moustache, he became what the girls considered a 'regular', one of the guests -- mostly but not entirely men -- who spent a lot of time near the mermaid beach. \n\nRachel and Sarah were both taken with him. Handsome and charming, William was some sort of investor and proved to be a very good tipper.\n\nHe was also fascinated with breasts. He came back again and again for photos with the mermaids. In one, he sat down and arranged Sarah and Rachel on his outspread knees. His hands were around their waists, high enough that he got a not-quite-unintentional but hardly objectionable resting of the girls' heavy breasts on the backs of his thumbs. In another, he had all the mermaids present cluster around him. Pulling them in close, he had soft, tanned boobs resting on both shoulders and pushing against his back. One girl stood behind him with hers on his head. \n\nWilliam was in seventh heaven.\n\nYet he was a gentleman, in his own fashion. Beyond the photo poses, he never touched the mermaids, never made lewd remarks. He was personable, interested in them as people as opposed to mere decorations. He was, indeed, pleasant to be around.\n\nOne evening, when Rachel and Sarah were about to go off shift and swimming languidly towards the change room, William was waiting for them. For once, he seemed a bit uncertain of himself.\n\n\"May I ask you two a question?\"\n\nThey smiled. \"Of course, William.\"\n\n\"Look, I don't mean to pry, but are... um.... about the Hunt...\"\n\n\"The what?\" Neither woman had a clue what he was talking about.\n\n\"Look, I'll personally double the bonus if you're going.\"\n\n\"What bonus?\" \n\nWilliam was becoming more uncertain and it showed.\n\nRachel looked at him blankly. \"I'm really sorry, William, but I don't understand.\"\n\n\"No? Surely you two have been told about... \"His voice trickled off. \"Never mind. Forget I said anything. It's been a pleasant evening. I hope you both sleep well.\"\n\nThe two women were soon headed back to their room.\n\n\"Well, that was weird. What in heck was he talking about?\"\n\n\"Don't know, but I really am not ready for bed yet. Can I buy you a nightcap, Rache?\"\n\nThe tall woman thought for a moment.\n\n\"Sure, why not? But just one.\"\n\nEntering the lounge, they heard a call. Turning, they saw a few of the other mermaids sitting in a corner. They waved and joined the rest.\n\n\"So, where did you two get to after work?\" Tammy asked. Petite, with full breasts, a tiny waist and a look that murmured Aloha!&hairsp; when you looked at her, this was Tammy's third time at the Resort.\n\nRachel and Sarah looked at each other, shrugged. \n\n\"One of the guests invited us for dinner at his cabin,\" Rachel said, telling a little white lie. \"We turned him down, but it took a while.\"\n\n\"Hope he didn't get creepy on you,\" one of the other girls muttered.\n\nSarah smirked. \"Let's just say that he was a gentleman, but one with a lot of very polite hopes.\" All of the girls broke out laughing. \n\n\"Hey,\" Sarah said quietly to Rachel. \"Maybe somebody here knows.\"\n\nTurning to the group, she raised her voice, \"He mentioned raising the bonus for a hunt. Anybody know what that's about?\"\n\nThe question was met with raised eyebrows and shaking heads - from everybody but Tammy. She merely stared at her drink and smiled softly to herself. Nobody but Rachel seemed to notice.\n\nThe party wound down after a second round. It would be an early enough morning for many of them.\n\nRachel grabbed Sarah by the arm. \"Tammy knows. I'm sure of it.\"\n\n\"Knows what?\"\n\n\"About hunting! Didn't you see her? Come on, I want to talk to her!\"\n\nThe group of mermaids was breaking up as they walked, each woman heading for her own bed.\n\nThey managed to catch Tammy alone by the door to her room.\n\n\"Tell us!\" Rachel demanded.\n\n\"Tell you what?\"\n\n\"You know,\" Sarah pressed her.\n\n\"The Hunt?\"\n\n\"Uh-huh. What's it all about?\" Rachel asked.\n\n\"Forget it, hon. You're a sweet girl. It's not for you and you don't want to know.\" \n\n\"But...\"\n\n\"Look, it's just kind of a game some of the guests play. Your guy probably had had too much to drink when he mentioned it.\"\n\n\"Tell us!\"\n\nTammy sighed, tapped the lock with her bracelet and, as it swung open, pulled them in after her. She stuck her head out, looked up and down the corridor before closing the door after her.\n\n\"Look, it's kind of a secret. I had to sign a legal non-disclosure agreement and your blabbing could get me fired.\"\n\nThe two stared at her. \n\n\"We won't tell,\" Sarah said.\n\n\"We promise,\" her friend added.\n\nTammy bowed her head and rubbed her temples. Her head came up again and she looked from Rachel to Sarah and back again with a strange expression on her face.\n\n\"The Hunt is like an after-hours game Karl and Kami run for a few of the male guests. Maybe some of the female ones, too, I dunno, but it's mainly guys.\"\n\n\"What kind of game?\"\n\n\"Well, you know how this place is so pure, with us posing tits-out in public all the time but everything's aboveboard and wholesome? You know, the customers can pose with you in their arms but nothing more? No dating the guests? Right?\"\n\n\"Yes?\"\n\n\"Well, the Hunt...\" and the girls could hear the capital letter as she spoke, \"is the exact opposite of that.\"\n\n\"What do you mean?\" Sarah demanded.\n\n\"There's another island near here - a group of little ones, actually. Karl flies everybody in and out. And then it's... well, 'pirates and captive mermaids' for a week.\"\n\n\"Huh?\"\n\n\"You're in a mermaid costume you can't get out of and they've got a week to catch you. It can either be a real bitch or...\" Tammy's eyes closed and she smiled to herself, just a little, \"...or it can be a lot of fun, I guess.\"\n\n\"So, what happens if they catch you?\"\n\n\"They own you for the rest of the week.\"\n\n\"Own you... You don't mean...?\"\n\n\"I do mean. If they catch you, they have their own pet-mermaid-sex-bunny-slave-girl-fuck-toy for the rest of the week and can do whatever they want.\"\n\n\"Whatever...?\" Rachel was shocked.\n\n\"Well, no, nothing really nasty, at least not when I did it. But having a captive mermaid available 24/7 really seems to do something to a guy's libido. I don't think I've ever been screwed so many times in three days. It was almost continuous. Thank heaven they caught Gale soon after.\"\n\n\"Gale?\" \n\n\"Another mermaid who'd agreed to do it.\"\n\n\"But why would...\"\n\nTammy cut her off. \"Why would any normal girl agree? Well, first off, it is exciting. And maybe a girl really likes one of the guests, but Resort policies have kept them from getting together. Bottom line though, it's the money, honey. Just participating earns you about what you'd earn all summer. And the tips from the guys were pretty spectacular on top of that. And it's all paid in cash.\"\n\n\"I'm no whore!\" Rachel said heatedly. The thought of being paid for sex was more than just irritating.\n\nTammy looked up at her, her gaze level. \"Nobody said you were, Rachel. But nobody has to participate and there's always a chance the boys won't catch you 'cause it's mainly swimming between the islands there and we can all outswim them. A mermaid either has to be unlucky or else come up against somebody really smart.\n\n\"Anyway,\" she said, \"nobody's asked you, have they?\"\n\nThat stung, when Sarah and Rachel thought about it. Weren't they pretty enough to be asked? Were they perceived as being too prissy?\n\n\"And Kami lets them play this... Hunt?\" Sarah asked.\n\n\"Hey,\" Tammy said, rather sharply. \"Get down off your high moralizing horse, Supergirl. It's just a game for big boys and girls. Yes, it's a sex game, but nobody's forced into it. Hell, Kami designed the tails the girls wear! She and Karl do well by this resort, I guess, but I suspect they make just as much organizing the Hunt.\"\n\n\"So, how many guys are we talking?\"\n\n\"Two or three. And maybe three to five girls. They can release you if they want, let you go back to the wild, but one way or t'other, you're a mermaid until the end of the week.\"\n\nEver the realistic one, Rachel interrupted. \"But, well... with a mermaid tail on for a week, how do you...?\"\n\nTammy snickered. \"Pee? Poop? It's a special tail. It only locks your feet together. You can pee, no problem. And the boys -- well, no access problem for them, either.\"\n\n\"But that's just sick!\"\n\nTammy sat down on her bed, sighed.\n\n\"Look, an hour ago, you thought Karl was a real nice guy, right?\"\n\nThe two thought on that. They nodded.\n\n\"Well, he is nice - and I guarantee he'll remain nice. Karl's no pimp. He doesn't grope you or proposition you like some bosses would. He stands up for his girls with creep guests no matter what. He treats us like ladies, right? You'll get paid to the penny owed when you leave here with no quibbles and that includes your tips. He is a nice guy and Kami's a nice lady, too. But they've figured out a very special fantasy adventure that some very rich men will pay a lot of money for. \n\n\"And the mermaids who're asked to play all have a choice. They can say no and that's the end of it, no hard feelings. And they all have a chance -- a good chance -- of keeping out of the men's hands. Better than that if they're good swimmers. And the boys are all clean and the girls all go home well-paid.\"\n\nShe sighed.\n\n\"OK, to be honest, it was a hell of a lot of fun. It was exciting dodging the boys and fun sensing their frustration because none of us got caught for days. And, yeah, the sex was amazing when it happened - I came and I came and I came. That dessert island fantasy thing, maybe?\"\n\nShe yawned. \"Look, I'm tired, kids. Can we talk about this tomorrow? I really need some sleep.\"\n\nAnd with that, all she would say was to remind them that they'd promised to keep quiet.\n\n+\n\nThe summer was coming to an end. Rachel had been unable to pry anything more out of Tammy. \n\n\"What do you think? Sarah asked one afternoon as they lay under a palm tree.\n\n\"Think?\"\n\n\"The Hunt.\"\n\nRachel shivered a little. \"I don't know, Sarah.\"\n\nShe paused, lost in thought, then, \"Look, this place has pushed my boundaries way, way out already. It's OK for you, Sarah...\"\n\nThe shorter woman cut her off, a frown on her face. \"Because I'm thinking of doing something that makes me a slut, Rachel?\"\n\nRachel's head snapped over to look at her friend. \"Oh, shit, no! What I mean, Sarah, is that you're the adventurous one, the one always pushing the envelope, the daring one. I'm...\" and her voice grew soft, \"just not very brave, I guess.\"\n\nSarah's frown turned to a look of compassion. \"Cut it out, Rache. You're the one with common sense and I'm the one who's always getting us into crap, one way or another.\"\n\n\"Sarah...\"\n\n\"It's true, Rachel. You're smarter than I am. I should listen to you more. But...\"\n\n\"But?\"\n\n\"Look, we've done OK here, right? Or, at least, I have. And your tips sure went up once you lost the shells.\"\n\nThe brunette blushed, nodded.\n\n\"But this could be our chance, Rache! Double the money, that talks. And William said he'd double the bonus on top of that. And, anyway, who's to know?\"\n\n\"You said you weren't willing to consider hooking, Sarah. This is getting paid for sex. That's hooking, the way I see it.\"\n\nThe blonde woman sighed, closed her eyes.\n\n\"It's getting paid to participate in a high-stakes game which might -- might -- culminate in sex, Rachel. We're not standing on a filthy street corner, turning tricks all night. At worst, it would be like Tammy said, the same two or three guys for a few days. Maybe just the one.\"\n\nIt was Rachel's turn to close her eyes and think.\n\nSarah didn't give her much time. \"Look, girl, if it's what Tammy said, we get to play hide-and-seek with some good-looking guys and maybe -- maybe -- get laid. Are you turning into some kind of werevirgin or something? What about Tom and Billy? You told me you really enjoyed sex with them.\"\n\n\"I did,\" her friend admitted. \"But I was in love... OK, no, but I really liked Tom.\"\n\n\"And Billy?\" Sarah smiled at her. \n\nRachel blushed again. \"OK, but...\"\n\n\"But nothing, sweetie! You let Billy into your pants to get back at Tom for ditching you. You said that, Rache!\"\n\nRachel was silent.\n\n\"And you said you'd enjoyed it, girl!\"\n\nRachel sighed. \"I'll think about it, Sarah.\"\n\nSarah's smile could have been used to start fires.\n\n+\n\nKarl looked at the two of them over the tops of his glasses. The door to his office was closed.\n\n\"OK, what's up?\" he smiled. \"Why all the secrecy?\"\n\n\"Karl,\" Rachel said, \"You told us to talk to you if there was a... problem with one of the guests.\"\n\nThe man's smile vanished.\n\n\"Who?\" he demanded. \"What happened?\"\n\n\"It doesn't really matter,\" Sarah said. \"And none of them have done anything really wrong. It's just that...\"",
        "\"One of them,\" Rachel cut in, \"asked us if we were taking part in a hunt.\"\n\nKarl's look turned thunderous.\n\n\"Who?\"\n\n\"Does it matter?\" Sara replied.\n\n\"Look, I don't know what he told you...\"\n\n\"Very little,\" Rachel interrupted. \"But you hear things hear and there ...\"\n\n\"... and we'd kind of...\" Sarah continued.\n\n\"... like to hear more,\" her friend finished.\n\nKarl sat back in his chair.\n\n\"You two have been good employees,\" he said. \"We're impressed. The guests really like you; we've had compliments. We've been considering asking you to come back next year.\"\n\nThe girls looked at each other.  So?\n\n\"So why am I surprised to hear you two asking about something which really is none of your business?\"\n\nThe two looked properly abashed. They hadn't thought of it that way.\n\n\"But,\" he said, a grin starting to grow on his face, \"since you ask...\"\n\n+ \n\n\"I see you accepted Karl's little challenge,\" Kami said, in a dry voice.\n\nRachel and Sarah looked at each other. How much of this had been spread around?\n\nKami read the look correctly, grinned.\n\n\"Not to worry, you two. He told me 'cause I'm his wife and the co-owner. I also make the 'special' fins for the 'special' mermaids.\"\n\nReassured just a little, the two looked at her.\n\n\"Would you a tea, some water, juice?\" \n\nThe two shook their heads. \"No, thanks,\" Rachel replied.\n\n\"Karl briefed you on the rules, had you sign the contract and the NDA?\"\n\nThey nodded.\n\n\"OK. Well, what you'll be wearing on the Hunt will be very different from what you've been wearing here. Give me a couple of minutes. I'll be right back.\" With that, she disappeared into the gloom of her workroom.\n\nA few minutes later, she re-emerged into the sunshine carrying three pairs of flippers.\n\n\"I'm pretty sure about Sarah's, but you're a big girl, Rachel, so it could be either of these.\"\n\n'These' turned out to be very different indeed from their work costumes.\n\nThey appeared to be like skin-diving fins, but much larger. And colourful -- far more colourful than any other set of flippers. They looked like fins a mermaid princess would be proud to call her own, fins which, a hundred sizes smaller, would win prizes in tropical fish club conventions. The boot parts were high; they'd reach half-way up the calf of the woman wearing it. \n\nKneeling before Sarah, she held up a shimmering blue pair. Putting one aside, she positioned its mate in front of the girl, like a helpful sales clerk offering a new pair of high heels to a customer.\n\n\"Try it on, hon.\"\n\nSarah took the boot and pulled it onto her foot. It was a snug fit, but not that hard to get on. A sturdy full-length zipper ran from the inner ankle all the way to the top. \n\nRunning a finger up inside to prevent pinching, Kami zipped it up all the way.\n\n\"How's that feel?\" she asked the small blonde.\n\n\"Good. Actually, really good.\"\n\nKami smiled, presented the other 'boot'. A few seconds later, it too was on.\n\nKami took one of them by the heel. Stretching Sarah's leg out, she gave a hard pull. \n\n\"C'mon, work with me, woman! Try to pull this off.\"\n\nThirty seconds of struggling showed that neither boot could be removed without being unzipped.\n\n\"'Kay,\" she said. \"Your turn, Rachel.\" In a few minutes, the first set having proved too small, a second pair, orange this time, was firmly zipped up on the tall girl's legs. They too proved impossible to remove.\n\n\"Right, then,\" Kami said, sitting back with a satisfied look on her face. \"Here's where we go all Oscar for the Academy members.\" She picked up a small fob-like control from a side table. \n\n\"Put your legs together, girls.\" She knelt in front of Sarah, arranging the flowing material covering the stiff core of her fins, making slight alignment changes.\n\n\"OK, don't move now.\" She brought the fob up, pointed it at the fins and pushed a button.\n\nThe girl squealed as her legs snapped together and locked into one. Looking down, she saw that her lower legs had been transformed into an almost-perfect mermaid's tail, one starting however rather below the knee. Soft foam filled in the gaps between her calves, making the costume look like one very fish-like tail vice two human legs held together.\n\nThe young woman flicked her new 'tail' experimentally, smiled. It looked good - very good. She tried to separate her legs, found it absolutely impossible. She noticed that both zippers were hidden between her calves, inaccessible.\n\n\"We'll do some spray-painting tomorrow to help the top of the fins blend in with your legs. It takes me about 20 minutes each. It'll last the week and will come right off with hand lotion once you get back.\"\n\nShe handed the blonde woman a folder of photographs of young women wearing the special fins. With the body paint continuing the fin color and scale pattern above the top of the boots, it was hard to make out where the fins ended and their legs began.\n\nSarah made the mistake of trying to stand up to hand the photos to Rachel. Kami jumped to catch the girl when it became apparent that it was almost impossible for her to keep her balance while wearing the fins. \n\n\"Here, hon,\" she said, sliding one arm around her waist. \"Let me help you into the water.\"\n\nWith Kami's help, Sarah slid into the pool and was delighted to discover how well she could swim in the new fins. It was a dolphin kick, to be sure, but she was certain she was swimming far faster than she ever had before.\n\n\"Rachel,\" Kami directed, \"if you turn around, you'll see that you can walk backwards. Just be careful.\"\n\nThe tall woman carefully turned and edged backwards to the side of the pool. Swivelling around, she sat down. With a slight adjustment and a push at the fob, Kami locked her legs together as well.\n\nIn a moment, the girl slid into the water with her friend and the two began frolicking in the sunlit water. The maneuverability and speed the fins gave the two trained swimmers was remarkable. All three women were soon laughing together.\n\n\"OK, you two. Out of the pool!\" Kami ordered.\n\nShe unlocked the fin sets with the fob, allowing the two girls to remove their fins.\n\n\"Just so you know,\" she advised, \"the fabric on these things is very permeable. Your skin will be able to breathe very well and they dry out quickly, so don't worry. You could wear them for two weeks if you had to.\n\n\"The hunt starts tomorrow at 0900,\" she added. \"I'll need you here by 0600 for prep. Make sure you wax or shave tonight. Mermaids don't have pubic hair... Otherwise, it's all your time until then.\"\n\n\"Prep?\" Sarah asked.\n\n\"Mainly the body painting for your legs.\"\n\nKami gave each of the girls a parting kiss and closed the door behind them.\n\nThe two stood there for a moment.\n\n\"Wow!\"\n\n\"You said it! Those fins...\"\n\n\"Like I said, wow!\"\n\nWith that, the two of them headed for dinner.\n\n+\n\nDay 1\n\n\"OK,\" Karl said once the aircraft had taken off. \"Listen up, ladies. One last set of reminders.\"\n\nThe four girls listened intently over their headsets.\n\n\"The island we are going to -- islands, plural, actually -- is perfectly safe. There are no sharks, no snakes, no jellyfish or other creepy-crawlies and, amazingly, not even mosquitoes. There are a couple of fresh-water springs by the shoreline which are quite safe to drink. All of the fruit trees there are OK to eat as well. Actually, they'll be your main source of food for the next while. With me so far?\"\n\nThe four young women seated behind him replied together, \"Yes.\"\n\n\"There's a camp for the men on the island; you'll see it when we get there. In an emergency, there's a radio there but, asides from daily check-ins, it's never been used.\n\n\"The men are free to look for you anywhere and at any time they wish and use any method to catch you short of violence -- no spears or clubs, for instance. Once you're caught -- and by that I mean them just getting a firm grip on you anywhere, you stay &hairsp;caught. No trying to slip away, no trying to help others escape - that will void your contract. Understand?\"\n\n\"Yes.\"\n\n\"There are quite a few hiding spots for you on the minor islands and in caves along the shore. You'll find them if you look. Some of them even have some treats waiting for you. But keep in mind that none of them are out of reach for the men. \n\n\"They,\" &hairsp; he said almost grimly, \"are the hunters and you&hairsp; are the hunted.\" \n\nKarl circled the new island several times to let the four girls get their bearings.\n\nIf the sea level had been 10 feet lower, it would have all been one fairly round island. As it was, much of the overall shape was underwater. The northern semicircular side comprised the bulk of the land, but even it was bisected by a sort of slowly-bending channel or passage across its middle. The southern half was little more than a broad lagoon edged by a semicircle of tiny tree-covered islets, none bigger than a tennis court. \n\nThe entire island was covered in bright vegetation. As they circled, the four women could see the roof of a simple shelter on the main island.\n\n\"Once I drop you off, I'll be flying back directly to pick up the men. That will give you lot an hour, maybe less.\"\n\n\"How many men?\" Jade asked. This was Jade's first time with the Resort, too. \n\n\"That would be telling,\" Karl grinned. \"You'll find out soon enough.\"\n\nThe landing in the lagoon was smooth and the little airplane glided to a stop near one end.\n\n\"OK, out you get.\"\n\nAt Karl's direction, the women shed their clothes and placed them inside the aircraft.\n\nWith Tammy's help, the four were soon sitting on one of the floats. Karl passed down their fins and, hopping into the shallow water, helped the girls put them on. Then, climbing back into the aircraft, he produced a fob; their legs were locked together with a push of his thumb.\n\n\"Any last questions?\" he asked. \"No? Well then, good luck - off you go! See you in a week.\"\n\nThe four slid off the float and swam slowly away from the aircraft. The lagoon was shallow enough where they were for them to stand on their fins as they watched the red Beaver rev up, accelerate and take off. They waved as Karl flew over and waggled his wings at them in farewell before heading back to the Resort.\n\nThe four looked at each other. \"Any hints for us, Tammy?\" asked Rachel.\n\n\"Not to be a bitch, dear, but no, I don't. You're all grown-ups and any energy they expend on you is less they'll have for chasing me.\" With that, the girl turned and headed towards the main island, her firm buttocks and golden tail alternately coming out of the water as she swam.\n\nJade looked at the others, her eyes wide. She shrugged.\n\n\"Good luck,\" she said before turning and following Tammy towards the main island.\n\nSarah turned to Rachel with a what now?&hairsp; expression on her face.\n\nRachel shrugged.\n\n\"The boys will head to the camp first,\" she said, thinking out loud. \"So, I think we really need to find where the drinking water is and then we need find a place to hide.\"\n\nShe looked around and continued.\n\n\"Karl said there were springs by the shoreline. If we have an hour, let's head along the shore and see if we can find at least one. It'll only take 10 minutes to swim back across the lagoon and I think that one of the little islands would be a good place to hole up, at least to start. We'll be able to see where the men land and, if we get cornered, we can cross the lagoon faster than they can, right?\"\n\n\"Makes sense to me,\" Sarah said as she pushed off toward the shore.\n\nDay 3\n\nAs predicted, the mermaids had been able to evade the men initially. There had been one series of shouts and yells from the main island yesterday, but it hadn't lasted long. The pair had speculated that the boys had caught one of the other mermaids, but soon saw two tall figures sweeping the island again, so the girls decided that it had been just a close call.\n\nRachel and Sarah had found two springs and some fruit trees -- plums, oranges, bananas and a bunch of others they couldn't name. One problem was the lack of a knife to open some of them or a spoon to eat some of the others with. Still, they were not going hungry. \n\nThe air was warm enough that, even nude except for their fins, the two young women were never cold.\n\nThe fins themselves had proved to be amazing in the water but an annoyance out of it. They were comfortable enough, but the Resort costumes had been easier to move on land with. With these, they could only crawl. \n\nThey had, on the plus side, found one of Karl's promised 'treats'. It wasn't much, but it was definitely prized -- a large, heavy plastic comb. Truth be told, it was much needed, for both girls' hair was becoming snarled and tangled. Much to their amusement at the meme they were echoing, the two spent hours away from searching eyes on the far side of their islet simply combing their long hair.\n\n\"Aren't we supposed to be singing songs to passing sailors or something?\" Sarah snickered.\n\n\"Not this mermaid, kid,\" Rachel laughed. \"And I've heard you try to sing, so maybe just No, period.\"\n\nA much bigger problem than tangled hair was that the fruit on the small islets was becoming depleted and the only springs were across the lagoon on the main island. It was a classic prey/predator situation, with the predators sooner or later going to stake out the sources of food and water. \n\nMost of the fruit and one of the two springs they'd found were actually on the main island, on either side of the channel splitting it in two. The channel wasn't all that big, but it was wide enough that it couldn't be jumped and in many places was too deep to wade. There were a couple of fallen trees here and there which provided convenient bridges for the men. The water was fairly calm, occasionally reflecting ripples down its length if the waves outside were particularly large. \n\nThe girls had cautiously explored part-way up the channel one evening, but it made them nervous. They could easily make their way along the passage, but were very aware of the heavy vegetation on either side. It would make ideal cover for a man lying in wait and, in a couple of places, branches heavy enough to hold a man's weight grew completely over the channel. Vines grew everywhere. \n\nHiding on the islet furthest away from the island, the two friends lay low on the sand behind a palm tree, watching the lagoon and pondering their options.\n\n\"I don't think we can stay here much longer,\" Sarah said.\n\n\"It's a good hiding spot,\" Rachel replied. \"I think the boys figure that this place is too small to hide on.\"\n\n\"Maybe, but there's nowhere to go if they come this way.\"\n\n\"Sure there is, Sarah. We can head to the island.\" \n\nRachel paused, spoke again.\n\n\"But you're right anyway, Sarah - food's becoming an issue. It'll be another four days until the plane comes back and it's going to be a hungry time if we have to depend on this.\" She pointed her finger upward at a depleted plum tree. \n\n\"We're already having to cross the lagoon a couple of times a day for water, Sarah. If we double that looking for food, we're going to be spotted, sure as sure.\"\n\n\"Got a plan?\" Sarah asked.\n\n\"No, not really. But Karl said there were caves on the island by the shoreline. Maybe we should take a look tonight?\"\n\nIn the event, the decision was made for them.\n\nRachel was dozing, hiding from the bright sun under a tree when Sarah woke her up by putting a hand over her mouth. The tall woman came awake in an instant.\n\n\"We've got problems, girl,\" the small blonde whispered in her ear. She beckoned her friend to follow her as she crawled further up the white sandy beach and into the vegetation. In less than a minute, they could see the full expanse of the lagoon. A man was walking between the second and third islets on one side.\n\n\"Oh, poop!\" Rachel muttered.\n\n\"There's another one over there,\" Sarah whispered, pointing.\n\nSure enough, a tall figure could be seen emerging from the vegetation on an islet on the other side. It looked like William, but he was too far away to be sure. He waved at the other man before wading into the water and heading for the next islet. The water rapidly rose over his knees, was at his waist and soon enough the man was doing a clumsy breast stroke, his head up and alert. His companion was already halfway to the next islet.\n\n\"That's it for this place,\" Rachel said. \"They're sure to find us once they get here.\"\n\n\"So, we're going to have to swim for it,\" her friend breathed.\n\n\"Looks like.\"\n\nSarah rolled over next to Rachel, threw an arm over her bare back. \"Whatever happens, Rache, we're going to get through this.\"\n\nThe tall girl wiggled back a few inches until their heads were even. To her surprise, Sarah's hand shifted to the back of her head, pulling their lips together. \n\nGirl kisses are common and they'd shared many of those. This was not a girl kiss.\n\nRachel's heart started pounding as she felt her friend's tongue sweep her lips. Confused, but still very much attached to Sarah, she opened her lips and matched tongues.\n\nIt didn't last long; Sarah surprised the tall girl again by being the one to break it.\n\n\"Um...\" Rachel gasped.\n\n\"That's just a promise, Rache. I don't care what happens to you, to either of us. I'm going to be here for you no matter what. You're my BFF and more. You know that, right?\"\n\nRachel took a quick look through the bushes. The two men each had another couple of islands to go over before they reached where the girls were hiding.\n\nShe turned back to Sarah. \"Erm, more?\"\n\nSarah shrugged. \"Let's just say that William over there isn't the only one who's been leching on your, um, bouncy assets, Rache. I'm not pushing, but I wouldn't say No if you asked.\"\n\nRachel was shocked. Her friend had never indicated any interest in girls before.\n\nSarah took another quick peek over at the lagoon, turned back. \"But right now, let's think of a game plan.\"\n\nRachel looked back and forth at the approaching men. She was mightily confused, but tried to focus on the situation at hand.\n\nWilliam -- it was William, she was now sure -- was dressed in just a pair of cut-offs. The other man, somebody she'd seen but not met, was a ginger, shorter, stockier. He was wearing swim trunks and was close enough that she could see the patch of reddish hair at his chest.\n\n\"How's the other one at swimming?\" she asked.\n\nSarah giggled. \"Like a cow. He asked me for a photo op back at the Resort. His name's Tim and he seemed pretty nice. Tipped well. But, yeah, he swims like a cow.\"\n\n\"Then let's wait until they each get into the bushes at the next little island,\" Rachel suggested. \"That'll give us a head-start.\"\n\n\"OK, but where to?\"\n\n\"Heck, we can outswim both of them easily. We should be able to get to the island 10 or 15 minutes ahead of them.\"\n\n\"Then where?\"\n\nRachel thought for a second. \"I don't know. But I don't think they've caught Tammy or Jade yet. That means that there has to be cover over there, someplace we can hide. We've only been a little way up the middle, but from what we saw from the plane, the creek or whatever it is goes all the way through. My vote is that we do a sprint to the shore and then cut through the island via the channel. By the time they get back there, we should be out the other side and -- hopefully -- will have found a hiding place.\"\n\n\"And if not?\" Sarah asked.\n\n\"Then we'd better hope they've got tanning lotion for the soles of our feet, Sarah, 'cause otherwise they're going to get seriously burned.\"\n\nSarah gazed in astonishment at her friend. Such a remark was utterly unlike her.\n\nRachel took the comb and wedged its handle inside the boot of one of her fins. \"All packed!\" she announced.\n\nWatching the two men approaching, the young women figured they'd have another 10 minutes or so before they had to make their break.\n\nRachel turned her head to her fellow mermaid. \"Sarah...?\" ",
        "The question was obvious.\n\n\"Am I...? No, not really. I guess every girl has kissed another at parties, just to see. I like boys, Rache, always have.\" She paused. \"But you know something?\"\n\n\"What?\"\n\nSarah's blue eyes seemed to bore into Rachel's. This time it was she who was blushing.\n\n\"Rachel... Look, this is embarrassing, but all this excitement right now...\"\n\n\"Yes?\"\n\n\"Oh, shit, Rache. Look, it's making me as horny as hell. If they boys weren't just about here...\" She blushed deeper and looked away.\n\nRachel pulled Sarah's head back to rest on her shoulder.\n\n\"It's OK, babe. This is just totally surprising and,\" she again looked through the bushes, \"and it's so  definitely&hairsp; not the right time. William's just about out of the water. I think Tim's about to hit the shallows any time.\"\n\nThe two mermaids watched as the two men both waved at each other. Tim moved into the brush, but William stayed outside on the beach, looking around.\n\n\"Oh, poop!\" Rachel whispered. \"Why doesn't he get going?\"\n\n\"What'll we do?\" Sarah whispered.\n\nRachel was about to respond when the tall man turned and vanished amid the trees.\n\nNeeding no further encouragement, the two girls quickly wriggled their way over the sand and down the beach on the lagoon side of the islet. They'd raced together often enough to trust each other's abilities and didn't watch each other, beyond making sure they'd both been able to get into the water.\n\nThis was the fastest they'd ever swum in a mermaid costume, Rachel realized. Back at the Resort. they'd primarily tried to be graceful; once here, silence had been more critical than speed. She was thrilled at how fast she was going, but surprised at the amount of sensation she was getting from the warm, clear water flowing over her skin, across her boobs in particular. It was unusually stimulating in a number of unaccustomed ways.\n\nThe two swam as quickly as they could, trying at the same time to be as quiet as possible. The idea came to both of them at the same time and, jackknifing at the waist, they both dove, swimming underwater and surfacing only when their lungs began to burn.\n\nThe two looked back each time they came up for air. The first time, the men were still out of sight. The next time Rachel came up, however, it was clear that they'd been spotted, for Tim was floundering back through the shallows and William was splashing in a clumsy front crawl across the lagoon.\n\nThe two girls reached the island at about the same time. Gasping, they turned to look back. \n\nAs they'd figured, William was still only part-way across the lagoon and Tim was nowhere to be seen, presumably thrashing across one of the islands.\n\n\"Let's go!\" Sarah panted.\n\nWithout speaking, the two turned towards the channel opening. It was much as they remembered it. Trusting that there wouldn't be a third man waiting to ambush them, they tried to get across the island as quickly as they could. \n\nSoon they were beyond where their explorations had taken them before, but the channel remained wide enough and fairly deep. In a few minutes, the overhanging trees parted and they emerged into bright sunlight on the far side of the island.\n\n\"Which way?\" Sarah gasped.\n\nRachel began to tread water. This side of the island was different, rocky in places. To their right were some cliffs, just a few yards high but very steep. The coastline curved and they couldn't see much beyond where the cliffs started. To their left, there was more sand and a couple of islets just off-shore. \n\n\"Right, I think,\" Rachel said. \"If we go left, they could run along the shore to follow us.\"\n\nWordlessly, Sarah turned right, swimming towards the cliffs.\n\nOnce the two got around the point and out of sight from anybody not immediately above them, they stopped to take stock of their situation.\n\n\"Damn!\" Rachel said, panting.\n\n\"Too close,\" Sarah agreed. Then she broke into a broad grin. \"But we beat them, girl! Did you seem them trying to catch up? I think I understand now what Tammy said about having enjoyed frustrating the boys.\"\n\nRachel giggled a little, then began to swim slowly along the base of the low cliff. In a few minutes, they came to a small hollow in the wall of rock. In it, staring back, was Tammy. It was clear that she wasn't pleased to see them.\n\n\"You two keep right on going,\" she said quietly. \"There's no room here for anybody else and I don't want to get caught by you hanging around.\"\n\nSarah nodded. \"No worries, we will. But have you seen Jade?\"\n\n\"Not today. She's hiding in one of those tiny islands on this side. I met her two nights ago looking for fruit. They boys almost caught her once, she said.\"\n\n\"Thanks,\" Rachel said. \"One last thing and we'll be gone. Where are the springs on this side of the island?\"\n\nTammy pointed to her right with a thumb, hissed. \"There are two along that way. Now shut up and get going!\"\n\nThe two other girls gave her a brief thumbs-up and swam on, keeping an eye out for a sheltering spot and an ear out for the inevitable pursuit. \n\nIt was only five minutes later that they heard heavy footsteps at the top of the low cliff, just a couple of yards above them. Silently, they moved as close to the rock face as they could.\n\nThe footsteps stopped directly overhead. The two held their breaths and allowed themselves to silently slide underwater. Looking up, the surface was a rippled mirror. Through it could be seen for a moment what might have been a head looking over the edge.\n\nA small twig slipped down to land on the water. Fascinated, Sarah watched the ripples formed by its impact spread out across the silvery surface above her.\n\nThe two stayed underwater as long as they could, then surfaced as quietly as possible. There was nobody above and they could just hear footsteps following the island's edge away from them.\n\nThe two remained frozen, scarcely daring to breathe. After a minute, both girls let out a long, slow breath.\n\n\"That was close,\" Rachel said, very quietly.\n\n\"Too close,\" her small friend agreed, \"but, you know, we were pretty safe there. How could he have got us? Neither of them can swim for shit.\"\n\n\"Remember the rules,\" Rachel said softly. All they have to do is catch hold of us, anywhere. He could have just jumped off, landed beside us and it would've been all over.\"\n\nThe blonde girl looked solemn. \"That's so,\" she whispered. \"I hadn't thought of that.\"\n\nAs quietly as they could, the two mermaids swam further on, passing first one, then a second spring as they went. They stopped to taste each one and drank their fill.\n\n\"Look!\" Sarah whispered, pointing.\n\nIt was another cave, not large, but big enough for both of them to squeeze in. The water in front of it was little more than waist deep.\n\n\"Looks like neither Tammy or Jade have been along here,\" Rachel said softly as she peered in.\n\n\"How do you know that?\"\n\nRachel simply pointed to a second comb protruding from a crack in the cave wall, with a bar of plain white soap lying on the cave floor below it. \n\nSimple treasures, but right then the soap was preferable to diamonds. The two could barely keep themselves from immediately grabbing it and launching themselves back into the sea for a bath. Common sense prevailing, they agreed to wait until it was dark.\n\n\"We're going to have to go looking for fruit tonight,\" Rachel mused. \"Maybe we can give the second comb to Tammy on our way by, build up some goodwill or something?\"\n\nSarah nodded before climbing into the cave. It proved be high enough above the water than the soft sand floor was mostly dry. How long it would stay that way if it began to storm was anybody's guess.\n\nRachel, still in the water, said, \"Look, you stay here. I'm going to see how far this cliff goes. It's got to curve around soon and I'd rather know.\"\n\nSarah nodded. \"Be careful.\"\n\nRachel smiled. \"That's my middle name!\"\n\nShe was back in 20 minutes and pulled herself up into the hollow beside Sarah.\n\n\"The cliff starts to get lower once you get around that point,\" she said, gesturing. \"It goes back to sand beach -- and I didn't see any more fruit trees.\"\n\nSarah pouted. \"That means we're going to have to try the channel again, I guess.\"\n\n\"Well, I didn't go too far, not with those boys running around looking for us. We'll see.\"\n\nThe cliff had enough of an overhang that the two mermaids, without being visible from above, could bask in the warm sun in proper mermaid fashion, dozing lightly and idly flipping their tails. They kept half an ear open for movement above. \n\nSarah's head came down to rest on Rachel's shoulder and the tall girl hugged her tightly.\n\n\"Here, turn to your right,\" she said. Rachel picked up the comb and began to comb Sarah's fine blonde hair, starting at the bottom end and slowly working out the knots.\n\n\"That's so nice,\" Sarah sighed. \"You know, I'm not sure if I'm just excited or if I'm scared shitless and don't realize it.\"\n\nRachel kept combing. \"Me, too. The was exciting, wasn't it? But it's been three days and I could really do with a hot bath and something asides from fruit to eat.\"\n\n\"I'd kill for a pizza!\" Sarah muttered. \"Double cheese and avocado!\"\n\n\"Gotcha - you're hungry and needing a shower. Still horny?\" Rachel blushed even as she joked.\n\nSarah turned so quickly that the comb snagged. \"Rachel Monk! Did you just ask me if I was horny?\"\n\nHer friend pushed her embarrassment down, grinned. \"Yeah, I suppose that I just did. Are you? You said you were super turned on watching the boys wading out looking for us back there. Then we had to swim for our lives.\"\n\n\"Our lives?\" the smaller woman grinned back.\n\n\"OK, our virtue.\"\n\nSarah giggled. \"Virtue? I must have missed that class.\" The two wound up chuckling together, doing their best not to break into loud gales of laughter.\n\nSarah took the comb. \"Your turn, so turn around\"\n\nThe fins posed a bit of a problem, but Rachel still managed to turn most of the way. In a moment, she felt Sarah's gentle but strong fingers guiding the comb through the worst of the knots in her long hair.\n\nThe sun was just above the horizon by the time Sarah had finished. Carefully putting the comb down well at the back of the cave, she leaned forward to embrace her friend.\n\nRachel felt Sarah's boobs press against her back. That she had experienced before, in group hugs and photo shoots, but never without clothes, never so intimately. It felt good, she realized. Her head tilted back, came to rest on Sarah's behind her.\n\nThe two rested together and watched the sunset, almost contentedly.\n\nThey waited for an hour after it was dark before slipping into the dark water. The fins made it easy to tread water, of course, but the waist-deep water also made it possible to stand upright on the sandy bottom and they took their time bathing with the soap. \n\nRachel offered to wash Sarah's back. They'd been in showers many times before on the swim team, but this was the first time she'd helped Sarah bathe. She was amazed at how smooth the girl's skin was.\n\nAnd was mortified to find herself becoming aroused by it.\n\nShe quickly returned put the soap back on the ledge.\n\n\"Time to go,\" she whispered.\n\n\"What about you?\" Sarah responded, quietly but firmly. Taking Rachel by the shoulders, she turned her in the water.\n\nRachel's arousal increased with the feeling of Sarah's hands on her back. The tall girl had become increasingly confused about the cascading changes in their relationship since arriving on the island. Right now, she was even more uncertain about how she felt about another woman touching her like that.\n\nBut, she had to admit to herself, Sarah's hands felt good on her back and shoulders. She relaxed, tried to think of it as a massage.\n\n\"Hey!\" she hissed as two soapy hands slid under her arms and, clasping her by her breasts, pulled her back against the lovely young blonde.\n\nDespite her protest, she didn't pull Sarah's hands away. She was suddenly too aware of Sarah in the context of 'lovely', especially with soapy hands slowly but smoothly sweeping over her increasingly-sensitive breasts.\n\nWhat's happening to me?&hairsp; she wondered. Then she felt Sarah's lips next to her ear. The girl's sharp teeth gave her earlobe a gentle nip before whispering, \"Just to make sure you're awake, Rache!\" She giggled softly, let herself fall away from her tall friend.\n\nShe spun in the water. Sara's pixie grin was easy to see, even in the dim light.\n\n\"Sarah...\"\n\n\"Ssh. Time to go.\" Sarah would say no more.\n\nRinsing off was easy and they began dolphin-stroking their way slowly along the shore. It was dead quiet; even the sea was still and the usual lapping of waves on the rocks and beaches was absent.\n\nIt was a cloudless night. Between the stars and a sliver of a moon, the girls could see well enough to navigate.\n\nTammy was not in her niche when they swam by; Sarah left the comb at the back. \n\nThey slowed as they approached the entrance to the channel, knowing it was the most likely place to be ambushed. Hardly disturbing the surface of the water, Rachel halted just short of the channel. Sarah started to pass her, but her friend's hand shot out and seized her by the wrist.\n\n\"Wait!\" she whispered, pointing ahead of them towards the small islets just the other side of the channel mouth.\n\nSilent, but just visible in the low light, two forms were stealthily wading waist-deep towards the first islet.\n\n\"It's them!\" Sarah whispered. \"They must think somebody -- one of us -- is out there.\"\n\nRachel nodded.\n\n\"What can we do?\" her friend whispered.\n\n\"Nothing. They're almost there, Sarah.\" Her voice was very quiet, but Sarah could sense the resignation in it.\n\nOne of the wading forms paused, pointed; the other moved quietly around to the other side of the islet.\n\nThere was a short pause. A shrill and very feminine shriek rang out over the water before a sleek shape wriggled into the water on the inner side.\n\nWhere, of course, the first man was waiting.\n\nThere was not much of a struggle; apparently he -- or the second man, plunging noisily into the water a second or two later -- had managed to get the required 'firm grip' on the fleeing mermaid.\n\nA male voice came faintly but clearly across the calm water. \"You're caught, girl. You know the rules.\"\n\nThe slim figure rose from the water between the two men, breasts clearly visible even by starlight. As they began to wade back to the island, the mermaid -- now their&hairsp; mermaid - swam tamely between them.\n\n\"We have to do something,\"&hairsp; Sarah whispered.\n\n\"No. You heard Karl. We can't help her now.\"\n\nThe two men waded ashore, their finned captive swimming between them. When the water was no more than knee deep, one of the men bent down and, picking up the mermaid, slung her over his shoulder. Heavily-laden now, he plodded towards the shelter, the girl's fin waving in front of him as he walked. \n\nSarah and Rachel stared at each other. \n\n\"I think it was Jade,\" Sarah whispered. \n\n\"They're going to be busy for a while,\" Rachel said. \"Now's our chance to get some food -- and maybe check out the camp, too.\"\n\nSilently, the two swam up the channel. Coming close to where they knew the camp was located, they kept to that side of the waterway so as to keep out of sight.\n\nRachel almost screamed when she bumped into something large and yielding in the water.\n\n\"For fucks sake, keep it down!\" Tammy whispered fiercely.\n\n\"What are you doing here?\" Sarah whispered.\n\n\"Same thing as you, I think -- trying to see what's happening. Just be quiet, OK?\"\n\nThe three girls crawled their way up the bank and gingerly peeped over the top. The camp -- a simple but fairly large roofed shelter, a sturdy table and some chairs -- was only a few yards away and was now brightly lit by a fire blazing in a central fire pit.\n\nThree figures were all sitting in chairs, Jade in the middle. The two men were laughing and caressing the mermaid. Rachel watched as William's strong hands lifted and caressed her firm, well-rounded breasts. Tim was running his hand up and down her legs. One slid between her inner thighs and the girl seemed to shudder at the sensation.\n\nThe two men turned and gave each other a high five before rising and stripping off their clothes. Both were already hard, their meaty cocks jutting out in the flickering light.\n\nWhile both men were obviously ready, it was clear to the hidden onlookers that the locked fin assembly posed them some problems. Tim strode into the shelter while William leaned down and began licking and sucking the girl's boobs. His mouth shifted from one pink nipple to the other and then back again as his hands played with Jade's shapely mounds. \n\nThe three women by the canal watched as Tim returned with something in his hand. He pointed his hand towards the young redhead and her legs fell apart as the fins' locks released. He tossed the fob back into the shelter and went to join William.\n\nThe men wasted no further time and placed Jade on her back in the middle of the table. The stocky Tim immediately knelt between her legs and began to run his tongue up her inner thighs. The tongue strokes weren't quite reaching their obvious prize, but it was clear that that would happen soon.\n\nWilliam looked the slender woman in the eyes before allowing his gaze to drift along the length of her body, over her breasts, pausing at her bare mound where pale labia could just be seen and continuing down to where her painted legs ended in the colourful fins. He smiled as his eyes returned to see her green eyes staring up at him.\n\nWilliam ran the tip of his hard cock along her chin; she obediently opened her lips to receive him while her hands came up to enfold and fondle the low-hanging balls dangling immediately in front of her eyes. He began to ease his hips back and forth, slowly moving his tool in and out of Jade's mouth.\n\nThe other women watched from their hiding spot, each lost in her own thoughts and emotions.\n\nBarring the odd look at on-line porn at dorm parties, Rachel had never seen people having sex before. Emotionally, she was dismayed at the pert mermaid having been captured, but at some deep, primal level she was completely taken up, utterly fascinated by the spectacle unfolding in front of her eyes. \n\nTim's head was moving up and down between Jade's legs as his tongue and lips worked the length of the girl's sex. \n\nWithout pulling himself out of the mermaid's mouth, William bent forward and began toying with her body sprawled on the table before him, his large hands squeezing, stretching and stroking her breasts. \n\nDespite her captive status, their attentions were clearly having an effect on the girl, for she started becoming more energetic in her response. Rachel's mixed feelings became yet more tangled when she began to hear a rising series of moans of pleasure from the girl on the table. \n\nJade's oral attentions to William became more and more energetic. Her legs were now wrapped around Tim's head. Her moans had become cries. \n\n\"Why didn't Karl tell us they could unlock our fins?\" Sarah whispered.\n\n\"Ssshhh!\" Tammy hissed.\n\nJade's exclamations as Tim's head bobbed back and forth rapidly over her sex were muffled by William's cock moving in and out of her mouth. Her slim figure jerked, stiffened; she roared as what clearly had to be a massive orgasm tore through her body. Her hands fell away to her sides, leaving William's sack swaying beneath him. \n\nWide-eyed, Rachel looked at her fellow mermaids by the channel. Tammy was watching intently, lips thin. Rachel couldn't read her Sarah's expression at all, but both her mouth and her eyes were wide open as she stared at the display by the fire -- amazement? excitement? desire? \n\nRight then, Rachel would have believed 'desire'. Maybe even 'lust', for she was surprised at her own reaction to the sight unfolding in front of them. Her hands slid over her nipples, stiff, almost expectant. The girl could feel a heaviness in her own loins and shivered.",
        "As the three watched, Tim took his head from Jade's pussy and stood up, his cock waving as he moved. He stepped between her legs. After a moment's fumbling, his hips moved forward again, seating his full length in Jade's now-dripping sex. Grasping her hips, the red-haired man began pounding the young woman's pussy as fast as he could. Her breasts shimmied and rippled in the firelight as her body shifted with the force of each impact.\n\nRachel's boyfriends to date had been gentle lovers and she wondered what her breasts would look like in the same situation.\n\nWilliam looked down, squeezed Jade's breasts, spoke gently. \"Hey, remember me?\"\n\nObediently, the slender girl's hands returned to his cock and balls. Rachel thought she could see Jade's cheeks hollow with suction.\n\nFrom between her legs, Tim soon growled with his pleasure. He stood still, eyes closed and cock still inside the captive mermaid as Jade brought William to his own climax with hands, lips and tongue. \n\nWilliam himself was not inactive - stroking, stretching and tickling Jade's prominent nipples with his skilled, knowing hands. The redheaded woman gave an odd cry, her breasts shaking under his fingers as she came again.\n\nWilliam pulled out of her mouth, leaving the young woman prostrate and gasping on the table. Tim staggered back, fell into a chair.\n\nObviously fighting the temptation to join him, William instead went into the shelter and emerged a minute later holding three glasses. He handed one to Tim, who took it wordlessly, raising it slightly in a salute to their success. \n\nWilliam continued to the table, where the supine Jade rested, her eyes closed, chest heaving. Almost tenderly, he helped the young woman sit up and handed her the glass, supporting her as she drank. Jade took it gratefully, gulped the first half and then began to simply sip it, eying the two men from the corner of her eye.\n\nFrom where they were hiding, the three other women could hear Tim speak to her. \n\n\"We'll be locking your fins back up in a few minutes. But here's a bar of soap and the path to your right leads down to the creek. If we let you go by yourself to wash up, will you remember that you remain our captive and come straight back?\"\n\nSarah pondered that, reflected on how much trust was built into the Hunt. It was all based on trust, when you came down to it.\n\nJade's grateful nod was crowned in sparks as Tim tossed another log on the fire.\n\nA naked and sprawling William, his glistening organ now soft and depleted, spoke up as she started to shuffle backwards. \n\n\"You're Jade, right?\"\n\n\"That's right,\" she answered.\n\n\"Pretty name! Well, Jade, you can take the fins off while you wash.\"\n\n\"Thank you!\" The gratitude in her voice was obvious. While the fins were hardly uncomfortable, they were very clumsy on land even when separated. \n\nThe young woman sat down where she was and began tugging at the zippers. Setting them aside, she stretched, massaged her feet and stood up. Utterly unclad now, she began walking straight to where Rachel, Sarah and Tammy were hiding.\n\nComing down the path in the gloom, she failed to notice her fellow mermaids until she was in the water. Her slender figure went rigid as Tammy clapped a hand over her mouth. Recognizing the people around her, she relaxed and Tammy removed her hand. \n\n\"What the hell are you doing here?\" Jade whispered.\n\n\"We saw you get caught,\" Sarah said, softly.\n\n\"Are you crazy? They'll catch you for sure!\"\n\n\"Are you OK?\" Tammy asked.\n\nJade thought for a second, mentally assessing her condition.\n\n\"Yeah, I'm OK. It feels really good to get the fins off.\"\n\n\"I bet,\" Rachel mused. \"Did they, um, hurt you?\"\n\n\"You were watching,\" Jade said. \"You saw it.\" Her eyes dared the others to have any sympathy for her.\n\nShe dipped the soap into the water, began to wash herself before continuing. \n\n\"They didn't hurt me,\" she confirmed. \"Just sex. The tall one is pretty nice. Actually, they both are. And was just sex.\" She paused. \"I've had sex before.\"\n\nTo Rachel's ears, Jade sounded just a bit unsure.\n\nTammy giggled. \"It looked like more than just&hairsp; sex, Jade.\"\n\nSarah smirked softly. \"Sounded&hairsp; like more, too. Sounded like you really enjoyed yourself, sweetie.\"\n\n\"Well, OK, Tim can eat pussy like nobody's business,\" Jade admitted. \"But it's not like I had much choice.\"\n\nTammy's voice hadn't much sympathy. \"You had lots of choice, right up to the point you agreed to play catch-me-if-you-can with no knickers on. Getting off the plane here was your agreement to get laid by whoever could catch you.\"\n\nJade was silent. There wasn't, after all, much she could say to that.\n\nSensing the tension, Rachel tried to change the topic. \"I thought William was going to lick your boobs off,\" she said quietly.\n\n\"He's a sweater puppy fan, that's for sure!\" Jade snickered. \"He'd go nuts over yours if he got a chance, Rachel. And, honestly, he's really good! I've never cum before just from somebody playing with mine.\"\n\nShe paused as a pebble rolled down the path from above. The four mermaids instinctively looked up. \n\n.\n\nDay 4\n\nShaking, Rachel pulled herself up into the cave, her heart still pounding with adrenaline.\n\nShe had screamed as a large form landed with an enormous splash amidst the four girls. She and Sarah had darted away in opposite directions and she had not seen her friend since.\n\nLooking behind her as she fled, Rachel had seen the tall man silhouetted against the fire, his outstretched arm holding Tammy by the hair. She'd heard his roar of triumph: \"Hey, Tim!&hairsp; Look what I found!\" \n\nWilliam had obviously tiptoed away the fire when they were talking to Jade and discovered the four of them. It certainly looked like Tammy had been caught, but what had happened to Sarah?\n\nShe sat huddled against one wall of the cave. In the distance, she could hear male laughter and, in due course, the growing cries of a woman approaching orgasm. She couldn't tell who it was.\n\nHer mind was whirling. She was frightened, yes. Even though she knew she wouldn't be hurt, it was still frightening, deeply disturbing.\n\nBut, she thought to herself, anything exciting has&hairsp; to be just a bit frightening, right? Being pushed on a swing as a little girl, riding a bike for the first time, loosing your virginity -- fear was always part of the excitement, the spice in the chili.\n\nShe hadn't really come to terms with being forced into sex... well, that was the heart of the issue, wasn't it? Was it really being 'forced'? As Tammy had bluntly reminded Jade, they'd all agreed both by contract and by coming here; their consent had been both explicit and implicit. And she had a safe-word; she could object, that was her right as a human being. Of course, that would have her sent home for breach of contract, but...\n\nBut...\n\nBack at the Resort that night, hadn't Tammy said that she'd really enjoyed it, sort of? \n\nAnd Jade had just said the boys were both nice; Rachel already knew William and he was&hairsp; nice. \n\nAnd, aside from the sex, they'd treated Jade well. And even the sex hadn't been rough or even really kinky.\n\nFrom what Rachel had seen, Jade hadn't been abused; indeed, she had really seemed to have enjoyed her time by the fire. The intensity of Jade's orgasms as Tim and William took her body for their own pleasure lingered in Rachel's memory.\n\nIt was so confusing.\n\nStill pondering, she lifted her tail up into the cave and fell asleep leaning against the wall.\n\n+\n\nTwo men sit talking by the light of a dying fire. \n\nAll is fair in love and war -- or so it is said.\n\n+\n\nRachel awoke before dawn at the sound of somebody gently swimming along the base of the cliff.\n\nShe pulled as far back into the shallow cave as she could and held her breath.\n\nSarah's head popped up over the edge.\n\n\"Hi,\" she whispered, reaching up and dropping a double handful of dripping fruit inside. \"I brought breakfast.\"\n\nRachel helped her friend in and the two fell together in a deep embrace.\n\n\"I was so scared, Sarah,\" she said. \"I thought he'd got both of you.\"\n\n\"Nah,\" Sarah said, \"just Tammy. And Jade, of course.\"\n\n\"Are you OK? Where have you been?\"\n\n\"I'm fine, Rache,\" the blonde girl replied, her head on her friend's shoulder. \"Really, I'm OK.\"\n\n\"But where've you been? I've been so worried!\"\n\nThe smaller girl hugged her friend in reassurance. \"Well, when William jumped in and grabbed Tammy, I was warp speed for the lagoon. I could hear both William and Tim shouting and laughing back at the camp. I figured you'd got away 'cause William only had Tammy in tow. That meant that it was safe enough for me to sneak back.\"\n\n\"Sarah Suomi, do you mean to tell me you went back there?\"\n\n\"Yes, of course. Like I said, so long as I could hear the two of them talking and carrying on, I knew exactly where they were.\"\n\n\"So? What happened?\"\n\n\"William carried Tammy up to the fire 'cause of her fins and Jade followed along. He and Tim were laughing their heads off.\"\n\n\"What did they do?\" Rachel asked, her eyes wide.\n\n\"Two guesses, Rachel. Pretty much what we saw with Jade. They had Tammy on the table by the time I snuck back to where I could see. William was all over Tammy and her big boobs. He went to town with her tits - licking them, sucking them, squeezing them. That guy must have been a bottle baby, Rache!\"\n\nThe tall girl smiled, laughed a little at the thought. \n\nSarah continued, \"And Tim was eating pussy like it was about to be hit with a government recall.\"\n\n\"What about Jade?\"\n\n\"They had her under the table, going back and forth between them, stroking and licking and...\"\n\nThe girl's voice trailed off, then, \"Jeez, girl! They'd already fucked Jade three ways from Sunday, but you'd never know it from the way they worked over Tammy! \n\n\"Tammy's fins were still locked together, Rache. William turned her over on the table and had her doggie style, even though the fins kind of got in his way.\" She giggled at the memory. \"Tim took her from the front. Tammy had his... thing in her mouth. Then he got Jade over to help Tammy, so Jade was licking his balls from underneath while Tammy sucked on him.\"\n\n\"And here's the funny thing. You know how Tammy has always had a sour face when she's talked about the Hunt? Well, she sure seemed to get over that in a hurry. That little girl came about four times by the time I left. You should've heard her squeal!\"\n\n\"I did.\"\n\nSarah's eyes widened at that. \"Really?\"\n\nRachel simply nodded.\n\nSarah giggled. \"Not surprising, I guess.\"\n\nRachel looked solemnly at her friend. \"What about you, Sarah? How's my roomie doing?\"\n\nThe blonde head came up off Rachel's shoulder. Blue eyes burned into Rachel's.\n\n\"Truth?\"\n\nRachel nodded solemnly. \"Tell me.\"\n\n\"Promise you won't tell anybody!\"\n\n\"I promise.\"\n\n\"OK, look...\" She took a deep breath, sagged, let it out in a rush. \"My mind's all messed up, Rache. I mean, watching those two guys and their private mermaid orgy has me so worked up that I feel like I'm going to explode! But it's not just that...\"\n\nThe blonde woman stopped. Her shoulders began to shudder. Her eyes filled with tears as her head darted forward, her lips locking on Rachel's. One hand pulled Rachel's head in while the other grasped the big girl's left breast, squeezed. \n\nStartled, Rachel didn't fight back, didn't push her away. But neither did she kiss back.\n\nSarah broke away, her head dropped as if ashamed. \"I'm sorry, Rachel. I'm just really upset and...\" \n\nShe began to weep again. Rachel could see tears flowing down her cheeks in the moonlight.\n\n\"I didn't know it would be like this, Rachel! Tammy warned us, but I didn't understand. Jeez, I think I'm wanting to get caught!\" \n\n\"What?\" Rachel was stunned.\n\n\"I mean, I watched William's hands all over Jade and Tammy's boobies and it was like I could feel them on my own, Rachel! \n\n\"Back home, I was a strong, independent, take-no-crap woman, Rache, but, shit, watching them, I wanted those big, masculine hands on my own tits! I wanted to feel Tim's whiskers between my legs, I wanted him munching me like he did those two!\n\n\"I think I'm going crazy, Rachel!\"\n\nShe began sobbing uncontrollably. \n\nRachel stroked her head. On impulse, she took a deep breath, took her friend's head in both hands.\n\n\"It's OK, babe,\" she said softly. She leaned forward and pressed her lips to Sarah's.\n\nSarah's eyes popped open. She stared at her friend for a second before leaning into the kiss. Her tongue swept over Rachel's lips. To her delight, she felt Rachel's lips part, Rachel's tongue venture inside her own mouth. She teased Rachel's tongue with her own, swept its tip between her teeth and gums.\n\nTo Sarah's amazement, she felt a soft hand grasp her own breast. Tentatively, cautiously at first, Rachel's hand fondled first one, then the other of Sarah's large orbs. The smaller woman moaned with delight. Despite a wet face, her tears had paused.\n\n\"Rachel?\" she whispered.\n\nIn response, Rachel's hand caught a coral nipple between finger and thumb, pulled gently. \n\nSarah bit Rachel's lower lip, gently. She tried to hold both of Rachel's breasts, but they were simply too big; her small hands were overfilled with boob. She moved both hands to one of them, then shifted to the other, squeezing them, bouncing them slightly before simply running her hands over them, with particular attention to Rachel's now-taut nipples.\n\nRachel felt a tightness in her groin. Sarah's fingers continued to run over her skin, sweeping over her body; her nipples felt like they were glowing with heat. She leaned into the kiss, her tongue stroking the inside of Sarah's mouth.\n\nSarah twisted away. Her tears returned.\n\n\"I'm sorry, Rachel! I don't mean... I mean, I don't want...\"\n\nThe tall girl pulled her against her chest, rocked her as one would a toddler with a bad dream. \"Sssh, hon,\" she murmured. \"It's OK. Really.\"\n\nThe fingers ran over Sarah's hair, down her back and again. And again. The small girl continued to cry. \n\nWhy not?&hairsp; Rachel decided. It's not like...\n\nHer soft, strong fingers moved down Sarah's back, clutched her bum. \n\nStrong from years of competition in pools across the nation, Rachel's arms pulled at the smaller woman. Leaning back against the wall of the cave, she lifted Sarah onto her lap, leaving her legs and sparkling fins sticking out over the edge. \n\nShe held Sarah tight, one arm over the smaller girl's shoulder. Sarah sighed, hiccupped once. Her head came down on Rachel's shoulder as she sobbed silently.\n\nRachel's fingers ran over the girl's soft hair, slowly continuing to trace a path down along her arm and onto Sarah's thigh. She repeated the stroke a dozen times, crooning tenderly in a comforting tone.\n\nOn the last stroke, instead of running back up to Sarah's head however, Rachel slipped her fingers between Sarah's thighs. Blue eyes opened wide, stared in amazement. Rachel's strong arms pinned her in place.\n\n\"Hush, Sarah,\" Rachel whispered. \"It's OK, honey.\"\n\nHer fingers explored further. Sarah's lower legs were held together by the diabolical fin, but there was room for Rachel's forefinger to reach Sarah's lower lips and - delicately, slowly, gently - begin stroking their length. She did nothing else for a long time, then, shifting just slightly, she found she could reach one of Sarah's nipples with the other hand. She began to fondle it. It was warm under her hand, hard in its need.\n\nSarah moaned in her lap.\n\n\"Hush, baby.\" Rachel whispered. \"Sssh.\"\n\nHer hand, wet now with Sarah's dew, began to sweep over the girl's clitoris. Softly, ever so softly, Rachel continued to arouse both it and Sarah's nipple. \n\nSarah's moans turned to gasps, pants, but Rachel decided to take the risk. She kept her strokes slow, but increased the pressure on the girl's pleasure bud, began pulling and gently pinching her nipple, pushing the girl away from sorrow, doubt and self-pity, pulling her towards happy passion. She could feel Sarah's breast heaving under her palm, heard her breath become ragged.\n\nSarah's hand fondled Rachel's exposed breast, flowed lovingly over her nipple. Rachel could feel herself respond still more, but ignored it, focussing on her friend's pleasure.\n\nWith a strong pull, she lifted her friend up, locked their lips together. At the same time, her fingers dove into Sarah's slippery depths, found the rough mass of her G-spot and pressed, rolling her fingertip against it.\n\nThe small girl began to spasm under Rachel's hand. Rachel pulled her head in tighter, muting the blonde's cries of ecstasy with her lips. She continued to pull Sarah's nipple, work the girl's sex with her hand. \n\nHarder. \n\nFaster. \n\nDeeper.\n\nThe muffled cries became a caged roar. The girl jerked under Rachel's loving touch, her body thrashing in her joy. Finally, she grabbed Rachel's wrist and, with a wrench, pulled it away from her sex. She lay panting on the tall girl's lap.\n\nRachel's hand returned to petting Sarah's head and hair. \"It's OK, Sarah, it's OK.\"\n\nThe young woman in her arms smiled lightly before going limp. Her eyes closed and she began snoring very gently. She slept in Rachel's arms.\n\n.\n\nHours later, Rachel was staring out to sea, wondering what was happening to the others, wondering what was happening to herself. Looking down, she saw blue eyes opening inches from her own.\n\n\"Good morning, Sarah,\" she whispered.\n\nSarah's eyes were motionless, focussed on her friend's brown ones.\n\n\"Rachel...\"\n\n\"Ssh, baby. Quiet, now. The boys are still out there.\"\n\n\"Rachel,\" the young woman whispered. \"Rachel, I had the most wonderful dream. You and I...\"\n\nSarah stopped. She realized that her hand was still on Rachel's breast and that one of the tall brunette's hands was supporting her head.\n\nShe turned her head to the tall girl's hand by her nose. Tentatively, she sniffed. Her eyes whipped back up to Rachel's.\n\n\"It wasn't a dream!\" she whispered. \"It wasn't, was it?\"\n\n\"Hush, Sarah.\" The tall girl hugged her, began to stroke her hair again. Together, the two of them watched clouds pass far overhead for a long time.\n\n.\n\nDay 5\n\nIt didn't have to be pretty. \n\n+\n\n\"Look,\" Sarah repeated. \"If both Tim and William are by the fire, we're safe, right? We can be back in the channel and away as soon as they see us.\"\n\n\"And what're we going to do there, Sarah?\" \n\n\"Find some food. Look, Rachel, the best trees are inland, along the channel, right?\"\n\n\"Yes, but...\"\n\n\"But nothing. I'm hungry.\"\n\n\"So am I,\" Rachel replied. \"But it's dangerous.\"\n\n\"Dangerous how? Dangerous like dying? Like getting injured? Or dangerous like getting caught by two very handsome men?\"\n\nSarah had never referred to their pursuers that way before and stopped as she heard her own voice. The two hesitated, wordless in thought.\n\nFrom far too close, near the mouth of the channel, the two men could be heard laughing and shouting. The two girls instinctively pulled back as far as they could into their cave. Tim and William had been nearby most of the day.\n\nOnce they had heard a woman - Jade? - crying out as she was again overcome by her own orgasm.\n\nRachel, silent, thought of her empty stomach and of the not-quite-entirely-terrible situation of the two captive mermaids. Her mind flashed back to a Business 101 basic lesson -- 'Perceived Risk vs Potential Benefit'. She could see the professor's PowerPoint graph in her head.\n\n\"OK,\" she whispered. \"But we wait until it's really late. Let them go to sleep first.\"\n\n+\n\nIt didn't have to be neat. \n\n+\n\n\"Poor Tammy,\" Sarah giggled. \"Poor Jade.\"\n\n\"They don't seem to be doing all that badly.\"\n\nSarah looked at her friend. A tentative hand came up, ran along Rachel's bare flank.",
        "The tall girl smiled, more comfortable with her friend's touch now. She leaned forward and kissed Sarah's neck.\n\n\"That's nice,\" she whispered, \"but not now. They're 75 yards away, Sarah - they'll hear us for sure!\"\n\nSarah was feeling more reconciled to the possibility of 'captivity'. Her eyes sparkled with amusement. She bent until her lips were next to the tall girl's ear.\n\n\"Then,\" she whispered very softly, \"you're just going to have to control yourself, aren't you, Rache?\" Rachel shivered as Sarah's tongue-tip traced a slow line down her jawline. \n\nThe little blonde's hands grew bolder, roamed up and down Rachel from shoulder to knee. A hand settled on one of Rachel's legs, Sarah's thumb moving slowly over her inner thigh. Rachel squirmed, gasped slightly as Sarah's other hand settled under one of her breasts.\n\n\"They're so beautiful!\" Sarah whispered, her head still on Rachel's shoulder. \"Mine are pretty good, but I've always been jealous of these, Rachel.\" \n\nHer hand swept back and forth over Rachel's yielding womanflesh, lingered over each stiff nipple to play and tease.\n\nHer head lifted from the brunette's shoulder and her lips met Rachel's, lightly at first, then with increasing pressure. Her white teeth softly bit her friend's lip, pulled back gently. Rachel, giving into the inevitable, opened her mouth and began to meet Sarah's tongue-tip with her own.\n\nAt that, Sarah leaned in even harder. Her tongue pushed through into Rachel's - teasing, arousing. \n\nRachel felt wetness between her legs, brought a hand up to caress Sarah. The small girl pushed it away. Leaning back, her face wore a bright smile.\n\n\"Nope! It's my turn, girl. Can't be both, 'cause one of us has to stay sane or those boys will be over here in a flash.\"\n\nHer lips returned to Rachel's, her hand continuing to play with the big girl's magnificent breasts. Again and again, her small hand lifted, massaged and squeezed them, running over rock-hard nipples.\n\nSarah shifted her hand, slim fingers sliding gently down over Rachel's stomach, lingering over her mound and finally slipping between her thighs to feather-stroke her labia. The big woman sighed deeply. \n\nSarah leaned forward, lovingly kissed first one breast and then the other. Her tongue began to circle one of Rachel's breasts, large circles spiralling in toward its prominent nipple.\n\nRachel moaned as Sarah stopped just short of her throbbing nipple, switched to the other breast and began again.\n\nRachel moaned lightly. \"Sarah...\"\n\n\"Hush, Rache! Stick a sock in it!\"\n\nA sock... The two broke out giggling, which only ended when Sarah's tongue returned to fondling and licking the tall woman's twins.\n\nAround and around and around, the blonde's soft tongue circled, almost but never quite reaching the centre. Rachel so very much wanted Sarah's lips on her nipples, but the young woman persisted in her teasing light tongue strokes, never quite touching Rachel's supersensitive tips.\n\nSarah's forefinger slid between Rachel's now-slippery lips, found her entrance, penetrated just to the first knuckle.\n\nRachel was panting now. She could not remember ever being so aroused, so needy.\n\nHer hand's movements constrained by the fin lock, Sarah's finger swirled around and around, teasing and tormenting her friend. \n\n\"Sarah!\" the tall girl moaned. \"No more teasing! I can't take it. Please!\"\n\nThe smaller woman paused. Leaving her finger inside Rachel, she felt with her thumb until she found her friend's clitoris and began to drag it lightly over the swollen button. At the same time, she found an engorged nipple with her lips and began to lash its tip with a flickering tongue.\n\nRachel jerked, started to give a loud cry. The smaller girl swiftly covered her mouth with a hand. As she continued to work Rachel's pussy with her hand, her mouth left the brunette's breast and darted up to cover Rachel's mouth with her own.\n\nRachel's thrashed in her bliss, pleasure flooding throughout her lithe body. It was all the young blonde could do to keep their lips locked together to stifle her lover's screams of pleasure.\n\nRachel slowly came back to earth. Her cries ceased, replaced by gasps for breath. Sarah sank back, gently slid her hand out of Rachel's pussy and lovingly cuddled the tall woman's breasts with damp fingers. Rachel gave a soft hum of contentment.\n\nSarah leaned up, kissed her friend's cheek softly. Leaning back, she smiled gently.\n\n.\n\nDay 6\n\nIt didn't have to last a long time. \n\n+\n\n\"Rachel.... Rachel, hon, it's after midnight. Rachel, wake up.\"\n\nThe blonde girl shook her friend by the shoulder and felt her awaken.\n\nShe leaned in for a kiss. It was dark enough in their cave that she missed the first time and had to shift slightly. Soft lips met soft lips; tongues tasted each other's breath.\n\nRachel's hand came up, stroked Sarah's jawline. \"You're amazing.\"\n\n\"I love you,\" Sarah said softly. \"But it's time to go, I think. The moon's just starting to come up.\"\n\n\"OK.\"\n\nThe two slipped into the water below, long hair trailing behind them as they moved. The sea surrounding the island seemed unnaturally calm, with scarcely a ripple. The moon's rising was an elaborate double event over its mirrored surface.\n\n+\n\nAll it needed to do was to slow down two swimmers for a few moments. \n\n+\n\nThey paused as they approached the mouth of the channel, waited silently for almost half an hour. Nothing was stirring and, with a short kiss, Sarah led them up into its dark water, her fin barely disturbing the surface of the water. Following her, Rachel admired the full curves of Sarah's bottom as it emerged from the water at each stroke.\n\nThe trees on either side cast shadows even in the prevailing dimness and there was just enough light to make out a plum tree by the bank. They waited in the water for another few minutes before pulling themselves out onto the bank, tails dragging behind them. Standing to pick the fruit was difficult, but Sarah helped prop up her taller friend by sitting beside her with a hand on her bare bottom.\n\nRachel was plucking the ripe plums, feeling around in the darkness, when Sarah's fingers mischievously began to squeeze her buttock.\n\n\"Stop that!\" she hissed. \n\nHer words were a mistake.\n\nThe two women froze at hearing a low swishing sound in the water from the way they had come. Alerted, they each clutched a handful of plums and listened intently, ears trying to pierce the darkness.\n\nUphill just a little, very close by, William's voice suddenly bellowed, \"Now,&hairsp; Tim!\"\n\nAlarmed, the mermaids slid the short distance down the bank into the channel. From behind them, in the direction of the shelter, came a male bellow, followed by the sound of a body splashing into the water. \n\nThe girls turned towards the sea, swimming as fast as they could towards the relative safety of open water where they knew the men could not hope to catch up.\n\n+\n\nJust a few moments... \n\n+\n\nRachel's leading wrist suddenly ran into something in the water. It felt like a dangling vine or maybe a washed-out tree root. Twisting away from it, she lunged to one side, only to be blocked by another, then another. Disoriented and becoming snarled in an invisible obstacle seeming to stretch in all directions, she flailed at it, only to have Sarah run into her from behind.\n\nBehind them were shouts and splashes from Tim, clawing his way down the channel, closing off that way of escape.\n\nThe two women tore at what seemed to be a snarl of vines going in every direction. They jerked at it, felt it begin to part. Knots gave way beneath their frantic hands, meshes parted.\n\nA huge splash immediately behind them again carried them against the mesh. A floundering hand caught Rachel by the hair, another seized Sarah by the arm.\n\n\"Gotcha!\" whooped William, shaking water out of his hair. \n\n\"Tim!\" he yelled, \"Tim! I've got them both! Bring a light.\"\n\nThe splashing noises from towards the shelter ended and, in short order, a torch began to bob its way through the darkness towards them.\n\nA naked and dripping Tim arrived on the path above them, holding a blazing branch high over his head. Looking at William, still waist-deep in the channel and still clinging to the topless mermaids, he whistled. \"Nice catch, William!\"\n\n\"Nice weaving, Timothy!\" William laughed.\n\nBy the light of the torch, the girls could now see a crude, half-ruined net stretching across the width of the channel. \n\nThe island had provided vines in profusion, some flowered, some fruit-bearing. It had not been that difficult for the men to tie enough together to form a rudimentary net long enough to span the narrow channel. \n\nHad the mermaids been able to see its wide-spaced meshes, getting through it would have been easy. Before William had raised it, they'd swum over it unaware as it lay slack at the bottom of the channel, hidden by both water and dim light. But once raised - it, their confusion and the darkness had combined to delay them just long enough for the tall man to pounce.\n\n\"Well and fairly caught, girls,\" William laughed. \"Now, do we need to carry you to the camp or will you swim and meet us there?\"\n\nTrust, Sarah again thought to herself, it was all about trust.\n\n\"We'll swim,\" she said. \n\n+\n\nThere no longer being any need for silence, the two mermaids reached the landing by the shelter before William and Tim. Hearing them in the water, Tammy and Jade lit their own torch and came to look.\n\n\"Are you two OK?\" Jade asked.\n\n\"Oh, yeah,\" Sarah said. \"Just really, really pissed at that net.\"\n\nTammy smirked. \"They were giggling and laughing all yesterday when they were making it,\" she said. \"Down by the end of the creek.\"\n\n\"We heard them,\" Rachel said.\n\n\"We heard one of you, too!\" Sarah grinned ruefully.\n\nJade blushed. \"Guilty. They took us with them to keep them amused while Tim wove the net.\"\n\n\"And provide sound effects, I think,\" Tammy said. The other three laughed a little, but not Jade. She just smiled. She was a vocal lover and knew it.\n\n\"Well, the sound effects sure worked,\" Sarah laughed. We figured they'd shifted the orgy down to the beach. No way were we going to go anywhere near that.\"\n\nRachel looked back and forth between the standing girls.\n\n\"You can stand!\" she exclaimed.\n\n\"Tim let us out of our fins for a while,\" Jade said. It seemed odd to the mermaids to be hearing a woman's voice at normal volume, so conditioned were they to whispering.\n\n\"Are you hungry\" Jade asked. \"The boys have food and they don't mind sharing it.\"\n\nRachel could hear footsteps. \"Let's see what happens now,\" she replied.\n\nThe two men arrived shortly after, still grinning broadly. Tim handed the torch to Tammy. \"Go build up the fire,\" he directed.\n\nLooking at the two mermaids sitting on the bank of the channel, William asked, \"Are you two OK? How hungry are you?\"\n\n\"New York striploin, medium rare?\" Rachel replied, her eyebrows raised. \"Candied carrots? Maybe an Argentinian merlot?\"\n\nThe big man laughed, his voice echoing across the island. \"Not likely! But how about some canned stew? It's not gourmet or anything, but it's warm and filling. Karl's left a stack of stores here.\"\n\nStew. Canned stew. Normally the two would have been revolted by the mere thought, but at that moment, it seemed the most appealing meal they could imagine.\n\nIn short order, they were both sitting in chairs, shovelling stew into their mouths while the other four watched. Tim even fetched them each a can of beer from the channel, which soon went to their heads.\n\nTim looked at William as the two put down their spoons. \"Time, I think. To the victors go the spoils.\"\n\n\"Agreed. But it's been a long day, boyo. I think I could do with a massage first.\"\n\nTim grinned.\n\nThe shelter was simple, lacking both walls and power, but it was hardly uncomfortable. Six posts supported a shingled roof over a simple raised wooden floor. The space was big enough for two large inflatable beds, far more comfortable than simple air mattresses one might take camping. \n\nThere were even sheets and pillows.\n\nThe men lay face-down on their beds. William had taken Tammy and Rachel for his body rub; Jade and Sarah were with Tim. All four had been released from their fins.\n\nRachel's hands were digging into a knot on William's shoulder while Tammy kneaded his feet. On the other bed, both girls were stripping Tim's arms, slowly sliding tightly-gripped hands down from shoulder to wrist, over and over.\n\nWilliam groaned as Rachel's strong fingers dug forcefully into the knot, sighed as he felt it release. The two girls began to coordinate their strokes. Soft hands rubbed in unison over William's back, sweeping and kneading the strong muscles under his tanned skin. When it seemed to the tall girl to be time to move further down his body, she looked at Tammy for guidance.\n\nTammy smiled back as her hands ran down from William's back and onto his buttocks. Rachel's followed a moment later and the two dug their fingers into his firm muscles.\n\nRachel, in spite of herself, felt some degree of tenderness and affection building within her. Tim had indeed proved a nice man and a gentle captor. William had, under the circumstances, been a real gentleman. And, she had to admit, he was easy on the eyes. Her hands ran over his bum, down along his thighs, squeezing and shifting his strong muscles.\n\nShe had few regrets or fears now. Based on what they'd seen earlier in the week, Rachel had expected to be taken the instant she was caught, but asides from William seizing her by the net and then soon after carrying her up the bank to the camp in his arms, he'd not touched her. He'd been quite kind to her, she realized, in minor ways, with little things.\n\nShe sensed her body reacting in spite of any reservations she might still have had. She was still uncertain about her feelings, but realized that she was no longer apprehensive of what she knew would inevitably follow. \n\nTammy slapped William lightly on the sole of one foot. \"Roll over,\" she said.\n\nObediently, the man shifted.\n\nUnsurprisingly, he was erect. \n\nThe two women ignored his manhood, carried on as if they'd not seen it and began massaging his scalp.\n\nOn the other bed, Sarah and Jade had found Tim more eager. He was lying on his back; his cock - not long but quite thick - swaying under the attentions of the two women. Jade was licking it slowly from bottom to top while Sarah was gently sucking his balls, one by one, into her mouth and tonguing them in there.\n\n\"Sarah,\" Tim said, \"the fire's dying. I want to see better. Go put some more wood on it, would you?\"\n\nThe blonde girl let go of his scrotum, rose and walked outside. Tossing a couple of logs onto the fire created a storm of sparks behind her as she re-entered the shelter. Tim, his arms crossed behind his head, looked approvingly as her young figure was silhouetted by the rising flames.\n\n\"Come here,\" he directed. Moving one of his arms for a moment, he patted the bed beside him. \n\nThe blonde girl knelt as directed.\n\n\"Spread your legs,\" he directed. \"No, turn so I can see.\"\n\nThe firelight flickered on her lower lips, slick with her arousal. \n\n\"Stroke yourself,\" he commanded, softly. \"Show me how you like it best.\"\n\nSarah found herself blushing. No lover had ever asked, much less demanded, that of her. For all her adventurous spirit, she hesitated.\n\n\"Do it,\" he said. Then, to her surprise, \"Please.\"\n\nHer eyes locked on his, Sarah slowly lowered a hand to her pussy. A slender finger began to run along her labia as Jade took Tim's cock deep in her mouth, pumping as much of the shaft as she could still reach with her hands. \n\nTim's eyes flicked back and forth, electrified by Sarah's display, thrilled by Jade's oral efforts.\n\n.\n\nTammy and Rachel worked their way down William's chest, massaging strong, prominent muscles. William sighed as their fingers slid over his abdomen, skirted his cock.\n\nRachel looked at it in the firelight. It was formed in proportion to his height, long, sizeable. Pendulous testicles hung it in his sack, one lower than the other.\n\nAnd he was uncircumcised. Rachel's boyfriends had all been circumcised; William's was the first of the kind she had seen. His foreskin had slipped back when he'd become hard, leaving part of his cockhead exposed.\n\nHer hand shifted to rest on his balls, rolled them slightly. She bent forward to kiss them lightly. He smelled of white soap, she realized. \n\nTammy's hand started to slowly drift towards William's groin, her fingertips just touching his abdomen. Rachel suddenly wanted  - needed - &hairsp;to be the one holding it and quickly slipped her hand up to its base. Gently but firmly, her hand slid over its rigid core and its silky skin covering, stopping just before she reached its shrouded head.\n\nNot entirely certain what to do next, she squeezed him, began to pump his shaft lightly while she considered her options. \n\nAs she pumped, the man's foreskin slipped up and down over his head. Intrigued, she lengthened her stroke, exposing and then almost covering his swollen crown with each beat. \n\n.\n\nTammy's face had a gentle smile on it as she watched Rachel's explorations. Her fingers glided over the sensitive skin of William's inner thighs.\n\nRachel pulled at the man's velvety foreskin with her fingers, giggled a little at seeing how far it stretched. She bent towards it, seized it lightly with her teeth; tugging just a little, she felt her breasts sway beneath her as she moved. She let go when she heard William's half-gasp, half moan. Turning her head, she looked up at his face to see closed eyes over a broad smile. Her hands began to stroke his shaft harder, soft skin flowing under her hand over his solid core.\n\nWilliam's eyes popped open; Rachel could see the pleasure in them. Turning away, she bent forward, taking its bulbous head between her lips.\n\nWilliam smiled. His hands came up, stroked her hair and Rachel, lifting her head to look up at him, smiled back. She was surprised to feel a growing contentment within her.\n\nLips over her teeth, Rachel began to bob up and down on his manhood, sucking and licking. William's abdomen muscles rippled as he twitched in pleasure.\n\nShe began tickling behind his sack with her fingers, probing his taint for the prostate she knew lay buried deep below her stiff fingers.\n\nWilliam rolled out from under her, pulled her head to his and kissed her - a long, deep, lingering kiss. Rachel's eyes looked into his and her heart seemed to fly.\n\n\"I love that, Rachel, but I want you&hairsp; now.\" He lay back and, waving his hand at his glistening member, motioned for the young woman to climb onto him.\n\nObediently, she swung a leg over his stomach, reached down with one hand, aimed his head at her entrance and slowly began to lower herself into a cowgirl position. \n\nWilliam's cock parted her inner lips, moved past them into her depths. She gasped as it stretched her inner walls, felt herself sliding down over his length until she was fully seated on him.\n\nHis strong, wide hands slid over her knees and up the soft skin of her thighs as she began to roll her hips, swirling her inner walls over the cock buried balls-deep within her. His fingers continued up to her mound, his thumbs pressing and shifting it. Deep within her, Rachel could feel her own arousal growing, felt her clit responding, glowing with animal heat.\n\nOver her stomach and upwards, William's hands slid until they reached her gently swaying breasts, capturing them in a cage of long, loving fingers. William lifted them, held them firmly. His thumbs ran gently over her eager nipples each time her body moved on his cock; Rachel huffed and growled at the slowly-growing ball of fire in her pussy.\n\n.\n\nOn the other bed, Tim was torn. He desperately wanted to roll Jade onto her back and bury himself in her soft wetness, pound her into the mattress, make them both scream with pleasure. Equally desperately, he wanted to continue to watch Sarah in the flickering light as her slim fingers brought herself closer and closer to orgasm for him.",
        "Two of those fingers were deep inside her pussy now, twisting and playing her slippery lining. Her other hand was locked on one of her nipples. Her hand pulled it, turned it, squeezed it before sweeping down over her stomach and then returning to her other nipple to start all over again. It was clear to the stocky man that Sarah was very close; he was fascinated by expression on her face, seeing both sweet pain and ultimate pleasure. Sarah was moaning constantly now, her eyes closed, consumed in pleasure, need and excitement.\n\nSelf-pleasure was hardly new to the girl, but this kind of imposed exhibitionism was pushing her well past even her already-generous limits. And, amidst the continuing, mounting pleasure her stroking hands were bringing her, the young woman also found herself increasingly aroused by... what? \n\nTim was anything but selfish, but it was crystal clear to Sarah that he viewed her as an instrument to be used for his personal pleasure -- not uncaringly, but definitely not timidly or uncertainly, either.\n\nThere was, she had realized, no hesitancy, no confusion in the man's mind about who was who. His solid, positive masculinity was in remarkable contrast to the fumbling diffidence of her earlier lovers. \n\nTim was a man, not a boy, and Sarah realized that her womanhood was reinforced, not diminished, by that. The strength of her feminine power in a true and equal yin-yang balance was proving to be a most powerful aphrodisiac for her.\n\nWatching her, Tim was amazed at the sheer eroticism of the girl's self-stimulation. His visual excitement stoked his lust as Jade's head bobbed up and down over his engorged cock, taking more and more of the sturdy organ into her mouth. One hand gently stretched his scrotum, pulling its sensitive contents away from his body. The other grasped the skin of his lower shaft, turning it one way and then the other in sync with her head's movements.\n\n.\n\nWilliam let go of Rachel's breasts and called to Tammy, whose massage had by now progressed almost down to his ankles.\n\nWhen she appeared on her hands and knees a moment later, William had her turn and kneel on either side of his head, her body facing Rachel's. The petite girl felt his hands come up over her thighs to lock her legs in place before his tongue started making broad strokes along her pussy, probing her entrance and circling her clit with its very tip.\n\nHe was good, Tammy thought - almost as good as Tim. She looked at Rachel, her body swaying back and forth as she rode the tall man. \n\nRachel was in her own world, feeling nothing but William's distended crown passing over her pussy walls, when Tammy's strong hands took her head, pulled her forward into a kiss. Rachel opened her eyes to see the dark-eyed beauty smiling in front of her.\n\nSurprised but pleased, she opened her lips, ground them into Tammy's. One hand came up to rest on Tammy's shoulder and the other cupped first one breast, then the other. Rachel had intellectually known that breasts were beautiful and had seen the effect they had on the men in her life, but had never actually realized before coming here how deeply exciting it could be to caress another woman in that fashion. Her happy excitement jumped still more at the sensation of Tammy's hands sliding over her own boobs.\n\nSarah, on the brink of cumming, opened her eyes to see Tim's fixed on her, following her every move, every stroke as if entranced. She turned her gaze to the other bed, saw Rachel and Tammy locked together with William under them.\n\nTurning her eyes back to Tim's, she gave a final twitch with her fingers inside her. Her orgasm exploded, searing its way through her body as she watched Jade pull back and begin furiously pumping Tim's cock. Thick jets of semen erupted from his slit, covering his stomach. Smiling, Jade leaned down, to kiss the man tenderly.\n\nRecovering, a smiling Tim pulled a pillow behind his head, gently gathered Sarah and Jade into his arms on either side of him to watch the scene on the other bed. A gentle smile grew on Sarah's face at the smell of semen on his torso. Her hand leisurely trailed her fingertips through the pool.\n\n.\n\nTammy, echoing what she had confessed to in her room so long ago, entered what seemed to be an endless, demanding, overpowering series of orgasms. She tried to pull away from William's persistent, tantalizing, expert tongue and lips, but his strong arms locked her in place over his mouth. Another orgasm hit her. She tried to pull away from Rachel's kisses, but she proved too strong as well and Tammy could only ride it out.\n\nRachel, sensing William was almost ready, began bouncing up and down on his cock instead of merely rolling on it. The tall girl's strong legs lifted her up and dropped her down with increasing speed and dramatic force. Her breasts quivered, shook each time she landed.\n\nWilliam, close to cumming, let go of Tammy's legs and the small woman collapsed beside him on the bed with a soft moan, almost comatose.\n\nSmiling, his eyes moved up to meet Rachel's; his hands slid up over her firm stomach to again cup her breasts. He saw her eyes begin to grow misty and, for the first time started to lunge upwards with his hips in counterpoint to hers, feeling his orgasm about to burst in his cockhead. \n\nHe squeezed the tall girl's nipples between thumb and forefinger, pulled gently. Rachel gave a great cry and fell across him. His cock twitching and pulsing within her, he gasped, rode the honeyed waves sweeping his groin.\n\nWhen he could breath again, William took the girl into his arms, stroked her bare back, ran his hands down to clasp her bottom. In response, she began to almost purr.\n\nRachel drifted into the sweetest sleep she could remember; silence descended on the camp as the fire burned down.\n\nIt was early afternoon before she awoke -- and she was hardly the last, for both men were still sound asleep. Leaving her fins where they were, she left the camp, returning soon after with an armload of fruit. Between that and the food Karl had stocked the shelter with, she and Jade prepared a much-delayed meal before slipping down the bank into the channel for a bath. \n\nThe afternoon passed quietly; there was no longer any urgency.\n\nLater, William and Rachel went for a walk while the others napped. Actually, William did the walking. Rachel had decided to wear her fin, knowing it might be the last time. At the end of the channel, William waded out into the lagoon with Rachel swimming gracefully beside him. As liquid as the water itself, her brown hair flowed behind her head, trailed down her back.\n\nWilliam smiled at the sight of her firm bum moving up and down just under the surface as she swam. Periodically, he would reach down and stroke her as she passed. Rachel sometimes spun beside him, treating him to a 360\u00b0 view of her naked beauty beside his knees. She smiled each time she did so, cherishing the pleasure she was giving him with the display.\n\n.\n\nAt one of the islets, William put his arms under her knees and shoulders, waded ashore and sat down with her on his lap as he leaned against a palm tree, facing west. The young woman leaned back against him, felt strong arms go around her waist. \n\nThe couple watched the sun slowly drop towards the horizon together, talking of this and that, but never letting the conversation distract them. From time to time, William ran his hands tenderly over her breasts, squeezed them lightly. It was not intended as sexual; rather, it was promise, a caress of love and they both knew it.\n\n+\n\nIt was almost dark by the time they returned to the camp. Tim or one of the other women had lit the fire and the six sat quietly around it as darkness fell completely. From somewhere, a night bird called.\n\nRachel, still in her fin, sat beside William, leaning against him and feeling completely cherished. On impulse, seeing his limp sex lying on top of his thighs, she reached over with one hand and began to stroke it gently, letting it run through soft fingers. William sighed in contented appreciation, leaning back in his chair with his hands locked behind his head.\n\nSeeing her caresses and his reaction to them, Jade and Sarah, seated on opposite sides of Tim, began the same thing. Both men gradually became hard under their ministrations.\n\nIt was a peaceful time. The attentions of the three women were indeed now sexual, but there was no hurry. They took their time and simply pleasured their men with the gentlest of hands as the moon rose.\n\nRachel rose, sat on William's lap and leaned forward for a light kiss before resting her head on his shoulder. Her hand continued to play with his now-rigid cock, gently sliding over his tender skin, fingertips rolling over its half-covered head.\n\nWilliam smiled, ran his hands slowly over her in turn, down from her cheeks, over her bare shoulders. His thumbs swept lightly over the sides of her tanned breasts as they ran down her waist and over her flawless hips. \n\nHe stood, bringing her with him, holding her upright with strong arms.\n\nShe felt his hands slide behind her, squeezing her bum, pulling her body against his. She looked up to see grey eyes twinkling, felt his hardness pressing against her stomach. \n\nWilliam smiled again and she felt her heart beat faster.\n\n\"I'm glad you decided to play, Rachel,\" he said softly. \"So very glad.\"\n\nHis head came down towards hers. Tall as she was, he had to bend well forward to bring his lips to hers. She felt whiskers on her chin, opened her lips as his tongue traced along them.\n\nWilliam pulled her in against him. Knowing the effect it would have on him, she rolled her belly against his cock, felt it surge against her soft skin.\n\nLaughing delightedly, he broke the kiss. Putting his arms around her, he lifted her, placed her kneeling upright on a tall stool with her fin hanging down over the far side. His hands moved from her buttocks to her breasts. Rachel felt a heat rebuilding in her core, something molten, surging as his strong hands moved over her. \n\nInstead of squeezing them however, William merely brushed his palms gently over her nipples, over and over. Her breath hissed in at the sensation; her pulse pounded in her ears. William locked his mouth on hers again, his tongue teasing hers as his hands closed firmly but gently on her breasts, pulling, lifting, manipulating their delicious weight.\n\nRachel felt his first squeeze flow all the way down to her toes. The next one settled in her pussy and she felt her lower lips swell in response, felt wetness on her thighs.\n\nA soft cry came from one side. Both she and William turned to see the four intertwined figures on one of the beds inside the shelter.\n\nTim had left Tammy and Jade free from their fins. The two women were kneeling beside him on the broad bed, facing each other, their lips locked in a deep, deep kiss. Each had her own breasts in her hands, raising them up as if presenting them to a connoisseur for inspection. The two brought their nipples together, swept them across and around those opposite.\n\nIt was an amazingly erotic scene. \n\nTim had put Sarah back as mermaid, her legs locked into her golden fin. \n\nSarah had realized to her amazement that her earlier fears and confusion had resolved themselves. She had wanted to escape, she had wanted the feeling of a strong captor's gentle hand. She had, as it happened, escaped the fears and had won the hands. Even if she could have fled, Sarah realized now, she wouldn't even try.\n\nKneeling on her fin, Tim took her from behind. His hard manhood slid in and out of her slippery, swollen sex, pulled home each thrust by a strong hand on one of the girl's hips. His other hand was wrapped around her blonde hair, pulling her head back and up. \n\nSarah could hear Tim's belly slapping against her thighs, heard the gasping sounds of Tammy and Jade in their embrace, close enough beside her that Tammy's thigh brushed against Sarah's flank each time her body was pushed forward by one of Tim's energetic lunges.\n\nKeeping one hand on a perfect hip, Tim let go of her hair with the other. Sarah, her breasts swaying back and forth with the force of the man's pounding, turned her head to see his fingers now running in appreciation over the smooth bodies of the two kissing forms beside him.\n\nSarah felt a growing tension in her pussy, felt her nipples sweep from time to time against soft cotton of the sheets. She heard herself cry out, louder and louder as her elation built inside her.\n\n.\n\nFrom somewhere, William produced a small bottle of lube. \n\nAgain he lifted the tall girl's boobs with his hands, brushed long fingers over them tenderly. \"I've dreamed of these, Rachel,\" he said. \"They're beautiful, simply amazing!\"\n\nPulling just slightly back, he squeezed lube over her breasts. The gel was cool and she shivered as it flowed and dripped into her cleavage, ran down her stomach.\n\nWilliam stood up straight again, his cock almost at the same height as her boobs. He groaned with long-delayed pleasure as his rigid organ slid effortlessly up between the tall girl's slippery boobs.\n\nWilliam took them in his hands, pressed them together as his cock slid back and forth in her softness. Rachel felt a charge flowing from her nipples to her clit, growing with each stoke of William's solid manhood. She could feel its head as it moved against her skin. Looking down, she watched it emerge from between her boobs before vanishing back again.\n\nWithout hesitation, she leaned down, stretched out her tongue. Smiling, William extended the length of his stroke, paused as her tongue-tip flicked across his slit.\n\n\"Do you like that, William?\" she whispered.\n\nThe tall man closed his eyes and concentrated on the sensations flowing through him.\n\n\"William,\" she whispered again as he slid back and forth. \n\nHis eyes opened.\n\n\"William,\" she repeated, \"I like it. I like it when we do that, William.\"\n\nAgain his cock withdrew, again it slid upward between her slippery mounds, again she licked its head when it came in reach. His eyes opened, filled with insistent desire.\n\n\"I like it when you look at me like that, William,\" she whispered and saw his eyes fill with warmth.\n\nAgain she licked him, again his cock retreated back into her slippery cleavage.\n\n\"You earned these, William,\" she said, holding them up. She was surprised at her boldness, but delighted at the expression her words brought to the tall man's face.\n\nShe reached beneath her boobs, felt the sweat on their stomachs, closed her fingers lightly around his scrotum. Her hand lifted up and down as he moved within her, tickling and squeezing gently as he made love to her tits.\n\n\"They're yours, William,\" she whispered. \n\nRachel felt the man's hands tighten on her breasts, pushing them more firmly together, increasing the pressure on his cock. His thumbs swept over her rigid nipples, fuelling her passion still more.\n\nAgain his cockhead emerged, shining in the firelight. As she bent to lick it this time however, William's body became rigid. He groaned, the shrouded head between her breasts pulsing its offering. A thick jet of semen erupted from him, splashed off her chin, dripped back onto her breasts. It was followed by another and another.\n\nWilliam's eyes were screwed shut in the bliss of his orgasm.\n\nRachel smiled, glorying at her power over the tall man. Never could she remember having pleased a lover so perfectly.\n\n.\n\nWilliam lifted Rachel off the stool, sat with her on his lap. He continued to fondle and stroke her breasts as they watched the spectacle a few feet in front of them, his fingers and thumbs teasing and pleasuring.\n\nJade and Tammy had shifted into a 69 position, each on her left side with her head resting on the other's thigh. The two had easy access to each other's breasts and Rachel watched as they stroked, squeezed and pulled soft flesh while eager tongues darted and licked orchid-like lips below. Tammy was mainly silent, giving only the odd moan, but Jade's voice was becoming steadily louder and louder.\n\nSarah, driven higher by each stroke of Tim's cock plowing her stretched pussy, exploded at the sound of Jade's orgasm. She felt heat boil deep within her, streak like lightning through her entire body. Her joyful shrieks filled the night as she burst into perfect pleasure. Tim, not finished, increased his thrusts into her, harder and faster and the girl's orgasm went on and on. \n\nTim slowed. He paused, took one final slow, deep, firm stroke. Sarah felt his cock spasm and pulse within her. After a minute, Tim gave a groan and pulled out of the girl. He slid down, coming to rest on his side.\n\nRecovering slightly, Jade recommenced licking and nibbling Tammy's sex. That and Sarah's shout was all it took to send Tammy over the edge as well. She yelled, pulled away from Jade. Kneeling for a second with her head down, she turned to fall to the bed, lying in Jade's arms.\n\nRachel listened with loving approval to Sarah's continuing squeals. Suddenly, the tall girl again found herself close to the edge as William's continuing play with her nipples drove her close to and then over the edge into a totally unexpected orgasm. It was unlike any she had ever experienced -- not as hard, but deeper, sweeter -- and it went on for a very long time. She gave a great cry and sagged against the strong form under her.\n\nWilliam gently picked up the sleeping girl, removed her fin and carried her to spoon with him on the second bed. He wiggled a bit, pushing his softening organ against the lovely woman's bottom, then started to drift off himself, one hand cupping a soft breast. A few moments, an eternity later, he felt an unaccustomed warmth as Tammy slid in behind him.\n\nDay 7\n\nKarl circled the island twice with the small aircraft.\n\nLooking down, he saw six figures in the water. Brightly-coloured tails flashing, three topless mermaids were playing and chasing each other, a stocky, sandy-haired man in their midst.\n\nA fourth mermaid, taller, with long brown hair, stood by the second man, their arms around each other's waists. The woman waved as the aircraft flew over.\n\nKarl smiled as he went around to land. \n\nSatisfaction was, after all, his business.\n\n<center> +\n\nThanks for reading. We hope you enjoyed yourself. \n\nVotes and comments are always welcome. \n\nOh, and many thanks to A.L.X. for his patience!\n\n</center> "
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "exhibitionism",
        "group sex",
        "lesbian",
        "sex slave",
        "skinny-dipping",
        "spit-roasting"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-clutch-of-mermaids"
}