{
    "title": "Secret Smiles and Three Little Words Pt. 10",
    "pages": [
        "Chapter 12* \n\nAlex walked into the hospital. She didn't know why she was going in to see her but she wanted to check on her anyway. Poking her head into the room she saw Kelly looking out the window. \n\n\"How are you feeling?\" Alex asked her. Kelly turned and smiled. She lifted her hand and wobbled it to say she was so-so. Alex showed her the flowers she picked up on the way over and Kelly smiled. Alex set them on a nearby table. \n\n\"Why are you here?\" Kelly whispered. Her voice shaking and the pain evident. \n\n\"Just checking on you,\" Alex said sitting in the chair. \n\n\"Not...necessary,\" Kelly struggled to whisper. \n\n\"Yeah,\" Alex frowned. \"I bet you are getting a lot of visitors.\" Kelly shook her head. She held up one finger, then pointed to her. Indicating she had one visitor, her. \n\n\"I would have been here sooner but I was kind of in a holding pattern until recently,\" Alex explained. \n\n\"You didn't have to come by at all!\" Kelly smiled and said with a great deal of difficulty. \"You don't even know me!\" \n\n\"I know,\" Alex smiled as she patted her hand. \n\n\"Gavin owns you?\" Kelly smiled. \n\n\"Yes,\" Alex smiled back. She hoped it was the truth. It felt like the truth. She had the opportunity to persuade him if nothing else. \n\n\"Lucky,\" Kelly said with jealous eyes. \n\n\"I know,\" Alex shrugged. \n\n\"Will you go back to him?\" Alex asked her about Royce. \n\nKelly shrugged. Alex shook her head. \n\n\"He almost killed you,\" Alex said firmly. \n\n\"I'm his sub,\" Kelly pointed out. \n\n\"No,\" Alex disagreed. \"You are supposed to be treated with respect. He doesn't respect anything you have done.\" \n\n\"Not that easy,\" Kelly argued, her voice straining against the pain. \n\n\"It is,\" Alex told her firmly taking her hand. \"You find another Dom.\" \n\n\"Set me up with Dr. Steward?\" Kelly teased. \n\n\"Not a chance,\" Alex laughed. \"I barely know you!\" She brought back up in a tease. \n\n\"We are subs,\" Alex said getting serious. \"And that position demands respect...at least that's what Gavin believes.\" \n\nWalking out of the hospital Alex stood in front thinking. \n\n\"Alexandria!\" the voice caused her to beam her smile. Madelyn was coming out of the hospital. \n\n\"Mistress,\" Alex said when she was close enough to not draw stares. Alex bowed her head. \n\n\"You are even more stunning in the daylight!\" Madelyn gushed. \"Where is he?\" She asked alluding to Gavin. \n\n\"He was called out,\" Alex shrugged. \"I came to see Kelly.\" \n\n\"Are you available then?\" Madelyn asked as she gently touched Alex's hair. \n\n\"Available?\" Alex asked a bit surprised at the question and wondered if it meant something. \n\n\"For dinner,\" Madelyn laughed catching the tone. \"You belong to a Dom, no other Dom will move in on you.\" \n\n\"I am available to you,\" Alex smiled. \n\n\"Gavin is in turmoil with you,\" she smiled. \"I like that. He needs it from time to time to grow. We all do!\" \n\n\"You have talked to him recently?\" Alex asked her. She thought he was banished. \n\n\"I talk to Gavin almost daily, he is like my son,\" she smiled. \n\n\"I thought you were mad at him,\" Alex pointed out. \n\n\"Sometimes our children frustrate us,\" Madelyn shrugged. \"But we never stop loving them! Have you had dinner yet?\" \n\n\"No,\" Alex shook her head. \n\n\"How about dinner with me? I know a great place nearby,\" Madelyn offered. \n\n\"I would love to have dinner with you,\" Alex smiled. \n\nThe two women gossiped through drinks. Mostly about Gavin, which Alex loved a great deal. She loved learning things about him that he probably wouldn't share on his own. \n\n\"What troubles you?\" Madelyn finally asked. \n\n\"I believe Elizabeth brought me on so she could leave,\" Alex told her. \n\n\"Gavin believes the same,\" Madelyn smiled with a shrug. \"Her loss.\" \n\n\"I should feel bad that she is leaving, but I can't help thinking that if she stayed, I would be on the outside looking in,\" Alex said carefully. \"Gavin and his absolutes.\" \n\n\"You are probably correct,\" the older woman agreed. \"Gavin would damn himself for his absolutes.\" \n\n\"He said he had some things to discuss with me,\" Alex carefully tested, probing gently. \"Any idea what he has on his mind?\" \n\n\"I do,\" Madelyn said but didn't elaborate further and her smile told Alex it was useless to try and glean any information from her. \n\n\"I can see you aren't going to give me much information other than Gavin as a younger man,\" Alex smiled shaking her head. \"But will you answer me one question?\" \n\nMadelyn sat there silently staring at her. Evaluating her. \n\n\"One question,\" Madelyn conceded. \n\n\"If Elizabeth leaves,\" Alex began slowly. \"Will he claim me fully?\" \n\nMadelyn rolled her eyes. \n\n\"Seriously,\" Alex pushed. \"I have doubts that I'm good enough.\" \n\n\"Seriously? You are crazy,\" Madelyn laughed. \"No, he will claim you.\" Alex smiled. That's what she wanted to hear. \n\n\"You don't really think you aren't good enough?\" Madelyn asked her. Alex nodded. \"You have pushed him to violate an absolute! How can you possibly think that you aren't good enough?\" \n\n\"Things like this don't happen to me,\" Alex shrugged. \n\n\"Get ready,\" Madelyn smiled holding her hand. \"Things are about to happen to you on a regular basis!\" The wink caused Alex to bark out a laugh louder than she intended and she covered her lips with her hand and looked around the restaurant. \n\nAlex waited impatiently around the apartment the next morning. She tried to sketch but couldn't stay focused. She picked up Lena's Kindle and pulled up her latest book to read, she was still on the same author but different book. This one was called \"The Goldbriar\" and it struck a chord with her. The main character stuck in a world she didn't belong. Alex felt that way at times as she thought about her life. \n\nShe looked at her watch for the fiftieth time and found she basically was looking at it every minute of the hour causing it to go by very slowly. Lena had gone to see her boyfriend so she couldn't even pass the time with her. \n\nAt nine there was a knock at the door. Damn him for being exactly on time! She shook her head. She normally bitched and moaned that her man was late. This one was punctual and she was angered by it. This one she wanted to arrive early! \n\n\"Ready?\" he asked her as he drank her in from head to toe. \n\n\"For two hours!\" she smiled letting him look and reveling in it. \n\n\"I said nine,\" he pointed out meeting her eyes. \n\n\"I know,\" she smiled. \"But when a girl is waiting for her man, it's ok when he comes early!\" \n\n\"Coming early is a bad thing!\" he joked with a wink. She rolled her eyes as he moved to the side to let her come out. \n\nOpening the car door for her she looked as a couple of women looked on with a tinge of shock at the gentlemanly gesture. Her secret smile came out. She devoured him as he walked around the car. \n\n\"Hungry?\" he asked her once he was in the car. \n\n\"Famished,\" she smiled, turning in her seat a little to face him. \n\n\"Me too,\" he smiled. \n\n\"I could eat too,\" she teased. He shook his head at her innuendo. \n\nShe watched him drive, and loved the concentration on his face. \n\n\"You are making it hard to drive,\" he smiled never taking his eyes off the road. \n\n\"Isn't that my job?\" She giggled. \"To make it hard?\" \n\n\"You are very good at it!\" he laughed with her. \"Now behave, we have serious things to discuss before you entrance me with you magic.\" \n\n\"So it's going to be that type of day,\" she frowned. \n\n\"Wow,\" Gavin said dryly. \n\n\"What?\" she asked looking back at him. \n\n\"It never ceases to amaze me at just how needy kittens can be!\" he winked at her. \n\n\"Quit being fantastic!\" Alex dared in a scoff to him. \n\n\"Careful,\" he warned without looking at her. \n\n\"Yes Sir,\" she nodded. \n\n\"I saw Madelyn yesterday,\" Alex said after a few moments of maddening silence. She wanted to keep him talking. Not about the serious stuff that was obviously on his mind but she had to hear his voice. She then shook her head. She was needy. She needed his voice. She needed his smile. She desperately needed his touch. \n\nAs if on command his hand came and rested on the inside of her knee and she melted into the expensive leather of the car. Her eyes fluttered closed and she took in a deep breath which brought in his aftershave and that made her wet. Then the thought hit her, was she gaining Jedi powers? Was she a Padawan, a Jedi in training? She smiled and shook her head. \n\n\"Where did you see Madelyn?\" he asked her bringing her out of her reverie. \n\n\"At the hospital,\" Alex smiled as she began to stroke his fingers on her knee. \"I went to see Kelly.\" He nodded. \"Is she going to be alright?\" \n\n\"Yes,\" he nodded. \"I released her this morning.\" \n\n\"That's great!\" Alex beamed. But it disappeared quickly. \"Is she going back to him?\" \n\n\"No,\" he told her looking at her fingers as they brushed softly against his. Normally he wouldn't allow it, but he liked the way her fingers felt on him. \"She is staying with Madelyn until she is fully better. Then Madelyn will help her find a new Dom.\" \n\n\"What about...Royce,\" Alex was careful to say his name to Gavin as she knew they didn't like one another. \n\n\"Fuck Royce,\" Gavin growled. He looked to Alex and saw her nodding out the window with a little smile. \"He doesn't deserve her.\" \n\n\"I agree,\" Alex said without looking at him. \n\nAfter placing their order for brunch Gavin waited until the waiter had left them before folding his hands on the table, business like. Alex frowned. She wanted to avoid this conversation. It was weighing on her as she was afraid he was going to tell her she wasn't fully claimed. If he didn't say it, then she could still dream about it. Like living the daydream of the lottery before the numbers are announced. Until you hear the numbers you have a shot. \n\n\"We should get the ground rules out of the way,\" Gavin sighed, reading her easily. \n\n\"Do we have to?\" Alex asked looking away. \n\n\"I think it would be best, that way we have clear expectations,\" Gavin said firmly. She couldn't tell if he was being firm for her benefit or his. \n\n\"I thought my expectations were clear,\" Alex said, turning her eyes to him. The fire was stoking and she couldn't stop it. Why wouldn't he just claim her for Christ's sake? Then there wouldn't be a need for ground rules or expectations! They would be implied! There wouldn't be a need for two sets of rules. One for Elizabeth, then another for her. \n\n\"Don't think for one second, that this restaurant will save you from a consequence,\" Gavin warned her firmly. \"I have no problem taking you into the bathroom and correcting your tone.\" \n\nAlex swallowed hard and then her secret smile came shortly after. \n\n\"Yes, Sir,\" she nodded. \n\n\"Better,\" he smiled. \"Look, I just want us to be careful. I don't want anything but pleasure for this relationship. For both of us.\" \n\n\"I understand,\" She frowned. \"You're right of course, but...,\" \n\n\"But?\" \n\n\"But I want you,\" Alex said firmly. \"I don't want part time. I want full time. I want to be your submissive. I want your ownership!\" \n\n\"Have I said anything to suggest that is off the table?\" he asked her. \n\n\"Your body language says it all,\" Alex told him what she was seeing. \n\n\"You really need to explore the Dom side,\" Gavin smiled as he admired the way she could read him like no other sub had been able to. \"You would be excellent at it!\" \n\n\"Being a Dom doesn't help me with you,\" she pointed out firmly. \"You aren't a sub, so that part has been decided for me.\" \n\n\"So you think, based on your limited knowledge, you can make a life-long decision such as that?\" he asked her firming up his eyes on her. This surprised her. She didn't think he was thinking long term, but this statement said it obviously entered his mind. \n\nShe looked to the table in thought. \n\n\"Maybe you think it's complicated, but it isn't for me,\" she said bringing her eyes up. \"I have never been with a man like you. I want to see where that road takes me.\" \n\n\"All the more reason for us to set up the expectations now,\" Gavin smiled. \"So that what we want isn't in question.\" \n\n\"Ok,\" she said sitting up straighter. \"I want to be your sub. I want to live that life for now and see if it brings me the pleasure I expect. If...IF,\" she stressed. \"I feel it doesn't then I will tell you as soon as I know.\" \n\n\"That's all I'm asking,\" Gavin nodded. \n\n\"What do you want then?\" Alex asked him. \n\n\"I want your submission,\" Gavin said firmly. \"When you are with me, you are to do what I expect. No questions. No hesitation. You are to give yourself to me fully.\" \n\n\"I am willing, and eager, as you keep pointing out, to do so,\" Alex said as firmly. He nodded. \n\n\"The rules for you will be different than they are for my sub,\" Gavin told her. This caused her heart to flop. He wouldn't call her his sub. That is not going to be good for her. \n\n\"So what will I be?\" Alex frowned. \n\n\"You will remain a pet for now,\" Gavin recognized the disappointment. \"You will come and go as you please. When you are with me, you are my sub and will act like it. When you are not with me you are free to do as you please. See who you please. Explore what you need to in order to gain the knowledge you need to make an educated decision.\" \n\n\"I can date others?\" Alex was shocked. This was an absolute. One she was surprised he would waver on. \n\n\"Madelyn was right,\" Gavin said softly. \"If I'm not going to claim you properly then I can't place the same demands on you as I do Elizabeth.\" \n\n\"What if I don't want another?\" Alex asked him. \n\n\"That is your decision,\" Gavin told her fighting the smile. He did like her response as he didn't want to share her, but rules are rules. He wasn't claiming her fully, so he couldn't stop her from seeing others as he was not monogamous to her as long as he was with Elizabeth, but he hoped she wouldn't see other men. He could tell by the look on her face she saw it. \n\n\"When do we decide?\" Alex asked him. \"When will you claim me? What time period do we set?\" \n\n\"You don't,\" Gavin said with a shake of his head. \"This is something you do by feel. I will decide when to claim you. I, and only I, gets to make that decision. Then you will have to decide to submit to me.\" \n\nAlex sat back. She didn't like this one bit. \n\n\"Speak your mind,\" Gavin encouraged. \"Respectfully.\" He cautioned. \n\n\"I won't live half in, half out,\" Alex told him. \"I'm not that type of person.\" \n\nGavin propped his elbow on the table and nestled his chin in his palm as he stared at her thinking about what she said. \n\n\"Look,\" she said leaning in to him. \"If you are going to violate an absolute, why not the one about owning one sub at a time?\" \n\n\"Because I don't believe I can keep both of you happy,\" Gavin said plainly never taking his chin from his palm. She thought back to the way Elizabeth reacted to his attention to her. From the oral sex in the shower to not opening the door for her on Sunday. While she probably had her own agenda she was Gavin's sub and didn't like the sharing at times. \n\n\"What about Elizabeth?\" Alex asked him. \n\n\"I told you, Elizabeth leaving was a foregone conclusion,\" Gavin sighed. \n\n\"Then, you will only have one sub,\" Alex pointed out. \"Me.\" \n\n\"Stubborn as a mule,\" Gavin laughed. Alex lifted her eyebrow at him. \"I made a commitment to her. I am a man of my word. I don't say things I don't mean, and I don't make commitments I don't intend to keep. I've committed to her, as she has me.\" \n\n\"But she is leaving,\" Alex pointed out. \n\n\"Part of the deal,\" Gavin shrugged unconcerned. \n\n\"Please explain,\" she encouraged. \n\n\"The first day we make a commitment to one another, a sub and me, I tell them when they feel they aren't getting what they need, I will know. I have done this with every sub I have owned,\" he told her. \n\n\"They then come to me and tell me they are leaving, but by then I have already known this. Once I claim a sub, unless something drastic happens, the sub decides to end it. I get to decide to start it, but the sub always...always...decides when to end it.\" He told her emphatically. \n\n\"I then release them of their vow to me, and they release me of my vow to them,\" Gavin continued with a deep sigh. \"I take these vows very seriously.\" \n\n\"Have you ever tried to release a sub that didn't want to leave?\" Alex asked him. \n\n\"No,\" he said quickly. \"Each time I enter an arrangement, I make sure I know them. I make sure that I can maintain my commitment to them.\" \n\n\"So why won't you do that with me?\" Alex asked a bit hurt. \n\n\"Because,\" Gavin shook his head. \"I can't figure you out.\" \n\n\"What?\" Now she was really confused. He knew her. He could read her like a damn book! \n\n\"Look,\" Gavin said patiently. \"You are a complete novice, I think you are looking for more than a Dom/sub relationship.\" \n\n\"What am I looking for then?\" Alex asked sharply, her temper percolating. \n\n\"A husband,\" Gavin said his eyes firming up. He wasn't used to being talked to this way and it was becoming a challenge to keep himself in check. Alex looked away as the truth slapped at her. \"Point made?\" \n\n\"No,\" Alex growled defiantly. \"So you aren't looking for a wife?\" \n\n\"I'm not marriage material,\" Gavin assured her his teeth grinding. \n\n\"Is this another absolute?\" she asked him sarcastically. \n\n\"Why are you getting upset?\" he asked. \n\n\"Because I don't like the fact you won't admit your feelings,\" Alex said harshly her temper rising and bubbling out causing her voice to rise to above the din of the restaurant. \"What happened that you won't let anyone that close?\" \n\nThe table grew cold as Gavin leveled her with his eyes. She sat back and was afraid she had screwed up her shot with him. \n\n\"I've made my offer,\" Gavin said coolly. \"Take it or leave it.\" \n\n\"Ouch,\" Alex warned him. \n\n\"Why are you making this so difficult?\" Gavin asked her exasperated. \n\n\"Why can't you just claim me, if you are so sure she is leaving?\" Alex turned on him. \n\n\"Because I gave her my vow,\" he said with a deep, exhausted sigh. \"Would you want me to go back on my vow if it was you?\" \n\nAlex looked to the table embarrassed. No she wouldn't, but she also knew it didn't need to be said. \n\n\"I promise you, here and now, once Elizabeth makes her decision to leave, and it's her decision, I will claim you,\" Gavin said taking her hand. \"You and only you, by that time, I hope you have fully formed a knowledge based decision. Not an emotional one.\" \n\n\"What's so wrong with an emotional decision?\" Alex asked him with a nod that she understood his stand. \n\n\"It can override the brain, the heart is flawed, it can make you do things that aren't good for you,\" Gavin told her without a doubt in his words. \n\n\"It can do wondrous things as well,\" Alex pointed out to him. \"Keep that in mind! Your brain is also flawed, it can make decisions that aren't good too!\" \n\nGavin nodded as he pulled her hand to his lips. \n\n\"Agreed,\" he laughed to her hand. \n\n\"So we leave things as they are for now,\" Alex summed up. \"You won't go back to your original absolutes, will you?\" \n\n\"Like?\" \n\n\"Only playing with pets, only fucking your sub,\" Alex said softly. Hoping he would continue to fuck her. \n\n\"I think we are beyond that...aren't we?\" Gavin laughed. \"You destroyed that absolute!\" \n\n\"Agreed,\" she snickered. \"But you didn't fight all that hard.\" \n\n\"Trust me,\" Gavin said losing his smile slightly. \"I fought as hard as I could...you just made that impossible. I had to have you. I had to touch you. I had to taste you fully and that's the part I'm afraid of!\" \n\n\"What part?\" she asked. \n\n\"The part that I can't control,\" he smiled. \"I can't control the feelings I have for you!\" \n\n\"I'd apologize, but again, it wouldn't be sincere!\" \n\n\"So we are agreed then?\" Gavin asked her. \"We continue like last weekend, with the exception that I will fuck you?\" \n\n\"Agreed,\" Alex said. It wasn't exactly what she wanted, but it was what he was willing to give her and she couldn't push him or she would push him away. That much she knew for certain. ",
        "\"Are you agreeing to my conditions?\" Gavin asked her. \n\n\"I am,\" she nodded. \n\n\"Say it out loud,\" he said firmly. \"Be careful...commitment.\" \n\n\"I will be your sub when I'm with you,\" she said firmly. \"I can come and go as I please but when I'm with you, I will submit completely.\" \n\n\"And I commit to you,\" Gavin said. \"I will protect and provide for you and I will guide you to making an informed decision when the time comes.\" \n\n\"Agreed,\" She smiled. \n\n\"Good,\" Gavin smiled as the food arrived. \"I'm taking you shopping.\" \n\n\"I don't need to go shopping,\" Alex shook her head with a laugh. When he didn't respond she looked up from her food. The sharp anger in his eyes caused her to swallow hard. \n\n\"I'm sorry,\" she whispered. \n\n\"Not enough, evidently,\" he said getting up. He had tolerated it for long enough. Time to push her a bit he decided. \"Wait two minutes, then come to the men's restroom. I won't put up with it for one second longer.\" He briskly walked away before she could protest. \n\nAt exactly two minutes she got up from the table and made her way to the restrooms. She looked up and down the hallway, but right before she was about to go in a waiter came out from the kitchen area. \n\n\"Can I help you miss?\" he asked her as she looked to the door. \n\n\"Sorry I'm a space cadet,\" she laughed embarrassedly. She went to the women's door and was about to enter when the waiter disappeared around the corner. She went back to the door and with one last look entered the men's restroom apprehensively. \n\nGavin leaned against the wall waiting. \n\n\"You're late,\" he admonished. \n\nHe didn't let her respond before moving to the handicapped stall and opened the door. With a wave of his arm he ordered her in. She entered the large stall. The smell of disinfectant told her the bathroom was at least clean. Thankfully. She turned to face him but kept her eyes low. He pulled on her chin to lift her eyes to his. \n\n\"I said when you are with me, you are to act like my sub,\" he reminded. \"That includes your tone. You then committed to me fully. That's a vow. I take vows very seriously, it's time you figure that out.\" \n\n\"Yes...Sir,\" she whispered. \n\n\"Grab hold of the top of the door,\" Gavin nodded with his head to the stall door. She obeyed immediately. \"In the future, you are to wear only dresses around me.\" He said undoing her pants. \n\n\"I will not have my property hampered with clothing,\" he told her as he pushed them down revealing her ass to him. He stroked her bare ass. A surge of excitement overwhelmed her. How could he not consider this an act of claiming her? She wouldn't point it out now. She was in enough trouble she decided. \n\n\"Yes, Sir,\" she whispered as she put her forehead on the cool metal door. \n\n\"I owe you thirty,\" he said to her. \n\n\"Thirty?\" she questioned. \n\n\"Twenty for hesitation, if you remember, ten for today,\" Gavin said into her ear as he moved his body close to hers. \"And don't question me.\" \n\n\"Yes, Sir,\" she fought her secret smile. Her body began to tingle with excitement. Yeah there was no going back to the vanilla world after things like this! \n\n\"Thirty,\" she repeated in an excited whisper. \n\n\"Do you want them all now, or in stages?\" he asked her. She thought on it, then smiled. \n\n\"All now sir,\" she smiled. \"I'm sure I'm going to be naughty later!\" \n\n\"That I have no doubt!\" he smiled with her. \"As you wish.\" \n\n\"Shall I count?\" she asked him. \n\n\"Always,\" he confirmed. With that he struck his palm to her ever warming flesh. The sound of the swat on her behind filled the bathroom with an echo. \n\n\"One,\" she whispered. He brought his hand down again. \n\n\"Two,\" she whispered, her voice becoming strained with excitement from, what was becoming evident to her, a wanted spanking. \n\n\"Three,\" she pressed her face to the door now trying to cool her burgeoning desire. She began to realize she had never been in a men's restroom, now she was getting spanked in a men's restroom. That was making her very horny! \n\n\"Four,\" she whispered on the next strike. \n\n\"Five,\" \n\n\"Six,\" \n\n\"Seven,\" her ass began to burn hotly. Her body began to yearn for more. More of Gavin. More of this life. More of his hand on her bottom. \n\n\"Eight,\" she hissed as she gripped the door tighter, her knuckles whitening under their pressure. \n\n\"Nine,\" she gritted. \n\n\"Ten,\" she gasped as her body began to warm up more than her bottom. Gavin gently rubbed her backside admiring his work. She looked over her shoulder at him. \n\n\"Thank you, Sir,\" she smiled. He let his fingers follow her rounded cheek to her sex which he found wet. \n\n\"Hmm,\" he smiled in her ear. \"Seems this might not be the deterrent I need it to be.\" \n\n\"No,\" she said. \"It is. I like it, yes, but I don't like displeasing you!\" He brought his hand down to her backside. \n\n\"Eleven,\" she hissed. The door opened to the restroom and she fought the urge to remove her hands to keep them from being discovered. \n\nWhile Gavin waited for the man to leave the bathroom he slipped a finger in her causing her to gasp. He pushed it deeper within her, causing her to shudder with excitement. Alex kept her lips tightly clamped shut to keep her from crying out in pleasure. She listened to the unknown man whistle happily as he used the urinal, then flush it. Finally he washed his hands. Slowly the dryer came on as the man kept has hands under it. \n\nAlex looked through the crack in the door and saw a man in his early sixties. He looked to the door on occasion and shook his head. She realized she had done her nails that morning in an attempt to pass the time. They were fire engine red and they matched her shirt. Her fingers were on the outside of the door and the man had to know a woman was in the stall. \n\nShe fought the laugh as she figured what he was thinking. That a woman was bent over getting it. Not in the way she figured he imagined, but she was getting it. Gavin was bringing her closer to orgasm with his fingers and the man was taking his time. He tilted his head to look under the door. Could he see four feet under it? Could he see her pants around her ankles? Her thong panties? That was turning her on! \n\nThe man smiled appreciatively as he shook his head as he made for the door, he exited just in time for her orgasm to hit and she gasped at Gavin's fingering. \n\n\"One,\" she whispered alluding to her orgasm. \n\nGavin brought his hand back to her bottom. \n\n\"Twelve,\" she said as he continued her consequence. The pleasure of her orgasm, mixed with the sharp pain of her consequence. \n\n\"Thirteen,\" she jumped at the next one. Her bottom was getting very tender now. Gavin came up alongside of her. \n\n\"Fourteen!\" she barked out. She winced and furrowed her brow. He nodded, she didn't need to say anything and she knew it by the nod. \n\n\"Fifteen,\" she called out on her next swat. He was watching her carefully now. She tried to turn from him but he pulled her face back to him. She wanted to reach the goal of thirty. Now she didn't know if she could. She wouldn't stop him, but he would stop himself if she broke. If she turned from him maybe she could keep it from happening. \n\n\"Sixteen,\" she called out. \n\n\"Seventeen,\" she whimpered. Now it was straining her voice to keep it from erupting. \n\n\"Eighteen,\" \n\n\"Nineteen,\" the tear snuck out. \n\n\"Yellow?\" he asked her. She looked to him and wanted to say yes. Instead she shook her head. He smiled. He brought his hand down and the smack filled the room and she raised on her toes. \n\n\"Liar,\" he shook his head. \"Communication is very important. It's more important than the sex.\" She nodded. \n\n\"Yellow,\" she whispered. It sounded like she was admitting defeat, crying uncle. Something that did not please her. \n\n\"Don't be upset,\" he smiled as he nuzzled her ear. \n\n\"I failed,\" she whispered as she pressed her hot face to the coolness of the door. \n\n\"How?\" \n\n\"I didn't complete the task,\" she said shifting her eyes to look at him. \n\n\"I would have been amazed if you did,\" he smiled. The look on her face told him she didn't understand. \n\n\"You can't go from never being spanked to being spanked to thirty,\" he smiled as he brushed his lips down her neck tenderly. \"Even if you like it.\" She huffed out a laugh. \"Boundaries...and a tad more. Never forget that. This is a lifestyle you ease into. I won't ever ask you to go farther than you are capable. I will push your comfort level, but I will never take you where you don't want to go. Together, hand in hand, is the only way.\" \n\n\"Thank you Sir,\" she kissed him. \n\n\"You are so magnificent,\" he began nibbling on her. \n\n\"You bring it out of me,\" she smiled using his words against him. \n\n\"That's what this life should be,\" he smiled. \"Bringing out the best of each other.\" \n\n\"Can I bring something else out of you now?\" she smiled wickedly. \n\n\"Hmm,\" he smiled softly at her forwardness. \"Would that please you?\" \n\n\"Only if it would please you,\" she whispered. \n\n\"It would...immensely!\" He said into the nape of her neck causing her body to wash with a flood of goosebumps causing her body to shiver involuntarily. \n\nShe spun on him, leaving her pants around her ankles, she dropped to her knees there in the stall. She pulled down his zipper slowly as she looked up into his eyes, her lip under her teeth as she peered up naughtily. Reaching in gently, she pulled his hardening cock out. She pulled on it a couple of times. A droplet of thin clear liquid appeared at the slit. \n\n\"For me?\" she whispered as she looked up at him and let her tongue slide under the head of his heavy cock. She felt it flex in her hand as she trailed up the bottom of his shaft and around the head before tonguing the slit pulling the precum from his cock with a contented smile. \n\nLeaving her eyes up at him as he stared down into her blues. She lowered her mouth slowly down his shaft. He drank in the beauty of the sight of her taking him in her mouth. The way her red lips looked on his shaft. Slowly, maddeningly, dropping down his hard cock until she hit her gag reflex. She concentrated. She went back to her lesson in the shower. \n\nBreathing in and out of her nose, she relaxed her throat as much as she could. She pretended to swallow pills as Elizabeth had instructed. More of his cock disappeared. Her hands gripping the outside of his silk suit pants. Her eyes began to water but she refused to release him from her mouth. Her face reddened as she struggled. \n\nSuddenly she let go of his beautiful cock, coming off with a gasp and a deep sucking of breath. She smiled up at him proud of herself. Not quite all, but more than she did on her own before. She swirled her tongue around his cock, pulling her saliva off in a thin string dangling from the head of his cock to her tongue. \n\nShe moved to the underside of his cock and suckled his balls. First one, then the other. Licking her way from there, up the underside of his shaft before engulfing him in her mouth hungrily, causing him to gasp and drop his head back. \n\nShe fisted his cock with a tight hand and watched him enjoy her warm, wet mouth. She bobbed furiously for a few seconds then pulled off, tugging gently as she swallowed and prepared for another attempt to take him fully down her throat. \n\nShe looked around for a second and that's when it hit her. She was sucking a guy off in the men's restroom of a restaurant! How many women could say that? With no alcohol in involved? She came willingly, wantonly. First an erotic discipline, now she was kneeling on the cold tile floor where men could come in at any time and one had already. She didn't know she was this kinky! Or slutty! The things she was learning about herself made her head spin. \n\nIf someone would have told her that they had dropped to their knees in a men's bathroom to suck off a man they met a week ago, she would have thought...SLUT! Now here she was, doing exactly that! She didn't feel like a slut. She felt empowered. Free. She looked up at him to see him watching her. \n\n\"What?\" he asked her. \n\n\"I'm sucking your cock in a men's restroom,\" she smiled. \n\n\"And?\" \n\n\"Does that make me a slut?\" She asked him. His eyes hardened. \n\n\"Absolutely not!\" he said firmly. \"It means you are adventurous! Don't let society's bullshit Puritanism plague you. That's their hang up, not ours. Our world is all about pleasures with no holding back. Just because they deny themselves the desires because of some bullshit fear of being judged doesn't mean we have to live that way!\" \n\n\"Yes Sir,\" she smiled. \n\n\"I will have words with anyone who addresses you in such a fashion,\" he warned her. \n\n\"But I am a slut...I'm your slut,\" she smiled letting him know she liked what she was doing. \n\n\"You are a beautiful lady,\" he said firmly. \"Who likes sex.\" \n\nShe slowly lowered herself down his shaft again. Watching him the entire time, reaching her gag point she again did as instructed, this time she felt him slip into her throat and her nose nestled into his manicured pubes held behind the softness of his expensive suit pants and she wanted to stay there so she kept herself from dancing the happy dance. She saw the look of admiration in his eyes. \n\n\"Good girl,\" he whispered. \"You are such a good girl!\" He praised her with words most would find demeaning. She did not! She strived to hear those words. Words she wanted only from him. \n\nShe pulled off his cock quickly after holding him as long as she could. The smile of accomplishment couldn't be sanded off her face. She looked at his purplish head with the smile of a conqueror. She had throated Gavin! \n\nShe had to see if she could do it again. She took him into her mouth and dropped quickly down his shaft. She was eager. Too eager, as her gag reflexed kicked in and forced her off coughing. \n\n\"Slow down girl!\" she said to herself. He let her go. Just watching and enjoying her. She looked up and saw him staring with his secret smile. \"I love that smile, Sir.\" \n\n\"I love the way you won't quit!\" he marveled. She took him back into her mouth, slowly moving down, this time she forced herself to maintain her technique and she was nestled neatly in his pubes again. \n\nThe door to the bathroom opened but they didn't move. She held him there but jumped when the door to the stall they were in was pulled on. The lock kept whoever it was from discovering her in one of the most compromising positions she could think of. Pants around her ankles, a cock deeply lodged in her throat, her pussy moist with excitement. Her ass still undoubtedly reddened from twenty strikes from her Dom's strong hands. In that vulnerable moment the only thought she had was, how does she sketch this tomorrow? \n\n\"Occupied,\" Gavin said hoarsely. The pleasure of the moment catching his voice in his throat. \n\nShe pulled off slowly causing him sigh. Hearing the man in the next stall made her smile at the exquisite naughtiness of what they were doing. She had never even dreamed of doing this before. \n\nShe pulled on him bringing her small hand to the head of his shaft, she sucked him softly. Trying to be as quiet as she could but still working him. The man in the next stall finished his business and left the bathroom. \n\n\"How rude,\" she teased. \"He didn't wash his hands!\" She giggled. \n\n\"I didn't notice...I was thinking about other things!\" Gavin teased. \n\n\"I should hope so,\" she smiled as she ravenously went after him. She pulled and sucked. Sucked and pulled. She felt his thighs begin to tighten under the soft feel of his pants. They trembled slightly. \n\n\"Are you going to cum for me, Sir?\" she asked him wickedly while he was still in her mouth, forcing the words around his cock. \n\n\"I am,\" he gritted. \"Undo the buttons on your shirt! I don't want it to get messy!\" \n\nHer fingers fumbled with the buttons as he fisted his own cock. She dropped the shirt to the back of her folded legs as she knelt in the submissive position. Her hands resting on her thighs. Palms up, accepting. \n\nHe stared into her eyes as she opened her mouth and let her tongue come out waiting for his load. \n\n\"Holy shit,\" he grunted with a smile as his cum erupted from his cock head. \n\nThe first blast hit her tongue and splashed. She felt it splatter slightly on her face. The second shot hit her throat as he aimed expertly into her mouth. His smile went from pleasured, to one of wicked desire. He pulled back and shot the last remaining cum on her chest and its hot stickiness slid down into her bra cups. It also stuck to her cleavage. \n\nHe finished but she took hold of him and swallowed his cock to the base causing his body to convulse at the ultra-sensitive feel of his recently ejaculated cock. She reveled in his convulsions knowing just how pleasurable that feel was. It was a painful sweetness comparable to nothing else that could be imagined. \n\nSlowly she pulled back causing him to hiss in pleasure. She looked down at his hot cum as it slowly slid down into the valley of her breasts. She thought about how to clean up. \n\n\"Leave it,\" he warned her as she looked to the toilet paper. \"I want you to wear it today.\" She looked up into the firmness of his eyes. \n\n\"As you wish,\" she smiled. \n\nShe looked down at his hot cum as it felt sticky between her breasts. She smeared the glob across her chest. She couldn't believe she did that. Or she would do that! Then again, she couldn't believe she was kneeling on the bathroom floor of a men's room in an expensive restaurant in the submissive pose either. \n\nShe finished cleaning his now softening cock before reluctantly putting it away with a gentle kiss. \n\n\"For now,\" she smiled up at him. \n\nShe took his hand and he helped her up. He kissed her passionately and her knees went weak and she almost went back down with the power of his kiss. She pulled her shirt over her but he pushed her hands away and buttoned her up himself. He then bent at the waist and pulled her pants up for her. She shimmied into the tight fitting garment. \n\n\"You look magnificent in my cum,\" he grinned as he kissed her. She tucked her shirt in then buttoned her pants. \n\n\"Thank you, Sir,\" she smiled. \n\nGavin left first, checking to make sure it was clear so she could leave without being seen. Joining him at the table he pulled the chair out for her. She sat down gingerly as her ass tingled from her spanking. She now knew what Elizabeth had felt that very first night as she watched Gavin play with her. It was uncomfortable, but erotic knowing why they burned. \n\nShe scanned the restaurant and found the older man from the bathroom. He locked eyes on her and he let a smile come out as she flushed. He must have put two and two together. It wouldn't take Sherlock Holmes. A couple coming back to a table at the same time? Her bright red fingernail polish didn't help. \n\nShe scanned and tried to discern who the other man was. There were several there now, and some were new to arrive after they had disappeared to the restroom for her discipline. It could have been any of them! That made her tingle with excitement.  \n\nShe looked at him and he was smiling at her. \n\n\"Trying to figure out who didn't wash his hands?\" he teased. She laughed and nodded. \n\n\"How many times have you done something like that?\" she asked him as he took a bite of his food. \n\n\"Honestly?\" he laughed. \"That was a first.\" \n\n\"You're shitting me!\" she gasped. \n\n\"No,\" he smiled at her stunned surprise. \"It's not something any of my other subs needed.\" \n\nShe shook her head. That's right, this space alien tailor made his fucks for his subs. She just didn't know how he knew that she needed that boundary pushed. \n\n\"That's right,\" he smiled. \"I know.\" \n\nDamn Jedi master."
    ],
    "authorname": "CJT",
    "tags": [
        "spanking",
        "oral sex",
        "bathroom"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-10"
}