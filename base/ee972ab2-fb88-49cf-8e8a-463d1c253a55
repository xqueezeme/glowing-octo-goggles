{
    "title": "Legend of Lexi",
    "pages": [
        "I didn't mind Lexi hanging out in my room. I truly didn't.\n\nBack when I'd received my first Nintendo, Mom hadn't wanted it in the living room, so I got to have it conveniently tucked in the corner of my bedroom. I'd had to let Lexi play sometimes, but it wasn't that bad. Unlike some of my friends' siblings, my little sister was generally pretty respectful of my space, and only occasionally a bit of a brat.\n\nMy setup had evolved since the early days, in consoles and tvs. The size of my screen had expanded to the point where it was genuinely comfortable to play while sprawled out on my bed. The height of luxury, given the right mood. I didn't mind Lexi emulating me there either, lounging on my bed like it was her own while she played either with me or by herself. Even using my room while I wasn't there was fine. She'd remained a model room-guest over the years, and there'd been no change to that as she reached her late teens.\n\nWhat bothered me, rather frustratingly and counter-intuitively, was that Lexi had grown up.\n\nIt happened to everyone, I supposed. I'd grown into my body ahead of Lexi, being the elder sibling and all. It wasn't like I expected her not to follow suit, albeit in a somewhat more feminine way. It was just that there had never come a time when natural barriers got thrown up to protect us from one another.\n\nI knew Lexi was aware that she'd grown up. I saw the way she changed around her friends, around boys, around Mom and Dad, even. She acted differently, talked differently, and dressed differently. And yet, somehow, she thought nothing of bouncing into my room on a Saturday morning in her sleep shirt and panties and flopping onto my bed while firing up whatever game had her attention at the moment.\n\nSleep outfits were often the worst offenders of all her outfits, since they nearly always lacked proper bottoms. Skirts could be just as bad, though, or tight jeans or shorts, or tops that either hugged her too well or not well enough.\n\nI honestly, truly tried my very best not to look at her that way. I made a very conscious effort. But in spite of my best efforts, there were only so many times I could wake up to her casual state of partial undress before I had to acknowledge that yes, in fact, my sister's butt looked pretty good, and was just as interesting to stare at as if she hadn't been my sister.\n\nFollowing from there, naturally, was the forced acknowledgement that Lexi possessed all the other physical attributes an eighteen year old girl generally does, all the same interesting-to-stare-at kind of bits. Bits I really wished didn't look quite so good on my sister.\n\nLexi was cheerfully oblivious to my problems, which was infuriating at times. I could almost think that she was doing it on purpose, showing off her butt to me just for fun, but that wasn't like her. She'd never, to my knowledge, deliberately teased me with her body. I didn't think it even occurred to her that she could.\n\nAnd so, once again, I woke up one Saturday morning to the shifting of my bed as Lexi got all comfy, lying down facing toward the tv and away from me. She was quiet about it, had muted the tv and everything, but she couldn't help disturbing the mattress as she lay down on her tummy. Not for the first time I wondered if there might have been subtle benefits to having a narrower bed, if only so I wouldn't wake up to her butt in my face, and all associated problems..\n\nI feigned sleep for a while. I didn't have to get up yet, and I didn't much want to either, partly because I had some inconvenient morning wood. Not because of Lexi, but just because.\n\nUnfortunately for my attempts at being good, the way the two of us were lying, Lexi's butt was directly in my eyeline if I opened my eyes. I could keep them closed, sure, but that was boring, and I kind of like watching her play. She'd only recently discovered Breath of the Wild, and it turned out she loved it. There was a delightful innocence of sorts to watching her explore.\n\n\"Mom's making muffins,\" Lexi said. \"They might be ready by now.\"\n\nI stayed quiet for a moment, then, \"How'd you know I was awake?\"\n\n\"The way you breathe.\"\n\n\"You've been listening to my breathing?\"\n\n\"Kinda. Kinda can feel it through the mattress too.\"\n\n\"Oh you can not.\"\n\nLexi shrugged. \"'K.\"\n\nI sat up, leaving my covers strategically draped over my lap. \"You just guessed, didn't you? You know I don't stay asleep long once you start playing.\"\n\n\"That's probably it.\" She took the opportunity of a brief lull to look over her shoulder and flash me an impish grin. \"Not like I've known you for years and can tell these things.\"\n\n\"Not through super vibration senses. Or whatever.\"\n\n\"Doesn't take super senses. Just takes some basic awareness.\"\n\nLexi was back at her game, eyes glued to the screen once again. I let the argument drop. I didn't really know if she was telling the truth or not. There was just enough believability in what she said to make it confusing. On the other hand, I couldn't remember her ever correctly calling me out on being awake without checking before. But on the other other hand, how many chances did I give her? Not many.\n\nI was happy enough to be distracted from my mental circling by watching her play. Then a little less happy when I was further distracted by what she was wearing. Her top was riding up a bit, leaving a gap between it and her panties. Her lower back was uncovered. Not strictly arousing on its own, but rather by proximity and potential. And she did have such beautiful soft skin...\n\nI reached over and tugged Lexi's top down. It only halfway covered her panties even after my adjustment, but it was better. She gave me a lopsided grin for my troubles.\n\n\"What was that for?\"\n\n\"What was what?\" I asked, electing to plead ignorance.\n\n\"You just pulled a 'Mom'.\"\n\n\"Nuh uh.\"\n\n\"Yuh huh. She's always fiddling with my outfits too.\"\n\n\"That's not what I was doing. Your shirt was riding up. That's all.\"\n\n\"So you fiddled with it.\"\n\n\"I fixed it.\"\n\nLexi nodded sagely. \"That's what Mom calls it too.\"\n\nI frowned, but she didn't glance back again. I opted not to carry on arguing on the basis that I'd only get myself in trouble. Pointing out that I wasn't acting like Mom at all because Mom wouldn't have been fascinated by the small of Lexi's back seemed like a bad move.\n\nJust to make things more difficult, Lexi shifted during a lull in the action and her top rode up again, more or less where it had been to start with. What ever happened to the days when it was all baggy shirts at bedtime? When did these smaller, cuter tops start making such an appearance? Oversized t-shirts wouldn't ride up like that.\n\nAaannnd now I was thinking like Dad. Fantastic.\n\nI should probably have just given up then. I could have just walked out, left Lexi to her game, and gone to check on those muffins she'd mentioned. That wasn't what I decided to do.\n\nInstead, I tickled the bottom of Lexi's foot. She squealed and kicked at me. I tickled her other foot, resulting in more kicking and protesting.\n\n\"Cut it out!\"\n\n\"I'm not doing anything.\"\n\n\"You're tickling me. Stop!\"\n\nI stopped. That wasn't what I wanted anyway. Instead, I place my hand square on the small of Lexi's back. There was only a small strip of skin between her camisole and panties, the rest of my palm lay with the fabric of her top between us. I didn't dare go for her butt.\n\nLexi didn't protest my hand placement. I hadn't been sure either way, though I expected at least a questioning look or something. She ignored me entirely, to all appearances.\n\nI was being so very stupid. I knew it, but it was one of those things I just couldn't help, despite knowing better. That small, sneaky feel of my sister. That illicit touch. It was the tactile equivalent of all those times she'd made me stare at her butt. It got to me the same way, made me feel things that weren't at all proper for a brother.\n\n\"What ya doing now?\" Lexi asked.\n\n\"Nothin'.\"\n\n\"Nothin'?\"\n\n\"Yeah.\"\n\n\"Huh.\"\n\nAnd still she didn't tell me to move my hand, nor even glance over her shoulder at me. Just kept playing. Letting me leave my hand on her back. Though, I supposed, it wasn't really objectionable yet. Since she couldn't see into my mind, all she knew was that I had a hand on her back. Odd, but not yet fully weird or worthy of argument.\n\nIt made me question myself though. Why I was doing any of this. Yes Lexi had a nice butt. Yes I'd been forced to acknowledge that thanks to her lack of awareness around me. Yes she had lots of other interesting qualities too. And yes it felt nice just having my hand there, resting, drawing her warmth through my palm. And... and...\n\nI shook my head, having rather lost my train of thought somewhere back there. I needed to snap out of it. It was early, that was all. Not thinking straight.\n\n\"I'm gonna go check on those muffins,\" I said.\n\n\"Good idea. Bring me one if they're ready?\"\n\nShe beamed such an innocent, hopeful smile that I could hardly refuse. I amended my earlier thought about how she didn't realize what she did to me. In certain specific ways, she certainly did. How hopeless would I be if she ever explored beyond adorable, impossible-to-resist smiles?\n\nI threw on a shirt and headed to the kitchen. I could smell fresh-out-of-the-oven baked goodness even before I got there.\n\n\"Morning, Aiden,\" Mom said. She was just setting the last of a tray of muffins onto a cooling rack. She smiled. \"You do have a sense about these things, don't you?\"\n\n\"It's why I get up every morning.\"\n\nI gave her a kiss on the cheek in passing, then snagged a couple small plates from the cupboard.\n\n\"Are you taking one to your sister?\"\n\nI nodded. \"Yeah. She's in my room. Probably not coming out for a while.\"\n\nMom chuckled softly. \"Where else? I don't understand that girl. She never wanted a Nintendo of her own, you know. Never in all these years.\"\n\n\"I think she's just clever and realizes she doesn't need to spend money or presents on a setup of her own when she can just use mine, and maybe pick up a few games here and there that she wants to play.\"\n\n\"Probably so,\" Mom agreed. \"When you take those up, ask her if she wants some juice?\"\n\n\"I'm not room service,\" I grumbled.\n\nLexi hadn't moved since I'd left her. She might as well have been frozen in time, if not for the progress she'd made on screen.\n\n\"Thanks, bro,\" she said with another beaming smile as I set her muffin next to her.\n\n\"No crumbs,\" I warned her.\n\n\"No worries. I'll sweep 'em all on the floor.\"\n\n\"That's not at all what I said.\"\n\n\"Mmhm,\" she replied absently while carefully breaking off a bit of muffin and popping it in her mouth. \"Ow! Hot!\"\n\n\"Yeah, doofus. Just came out of the oven.\"\n\n\"'oo din' tell me 'at.\"\n\nI sighed dramatically. \"Yeah, my bad. You want juice?\"\n\n\"'es p'ease!\"\n\nI shook my head and made my way back to the kitchen. Mom already had two glasses of juice sitting on the counter, though she'd disappeared in the interim. I scooped up the glasses and escorted them back to my room. Apparently I was room service this morning whether I wanted to be or not.\n\nLexi took a long drink of her juice upon delivery, then paid me with yet another angelic smile. \"Thanks.\"\n\nI sat and watched her play for a bit while we both ate our muffins. It was easier not to stare at things I shouldn't when I had food to distract me, so that was nice. Once I'd finished eating, I ran into trouble again.\n\nAnother muffin would have been good. I probably should have grabbed two to start with anyway. But that would require some small amount of motivation, and I was already comfortable, and Lexi's cami had pulled up again...\n\nThere was a solid band of skin between the bottom of her shirt and the top of her panties. Wider even then when I'd tried to fix it before. Like she was doing it on purpose. I watched her carefully for a moment, but I still didn't think it actually was deliberate. Just careless. Totally unconcerned around me, for some reason.\n\nWell, not for some reason. Because I was her brother, and she assumed she could trust me not to perv on her. I felt horrible that she wasn't correct in that assumption. And yet, somehow, not horrible enough to look away.\n\nSince I'd already gone for it before, and it hadn't worked out too badly, I was quicker this time to scoot close to Lexi and put my hand on the small of her back.\n\n\"You want another muffin or anything?\" I asked, just to pretend to myself like I would take an excuse not to feel up my little sister.\n\n\"No,\" said Lexi in an absent tone. \"I'm good.\"\n\nShe was good. I had my hand on her back, not quite on her butt, and she could have sent me away if she wanted. But she was good. Interesting.\n\nI rubbed a small circle over her lower back, partly directly on her skin, partly through the thin material of her camisole. Still no reaction. I carried on with another circle, then just kept going. Maybe I could spin it as just giving her a back rub if confronted, which in a sense was exactly what I was doing, so I had the technical truth on my side. But that was only if I was confronted, and thus far she didn't seem to have any interest in such a thing.\n\nMy low-key, impromptu back rub continued, gradually expanding its radius of influence. I made sure not to actively grab her butt at any point, though my pinkie strayed across the line of her panties more than once.\n\nIt was both fascinating and confusing that Lexi was just letting me do it. It was possible, I supposed, that it might just feel nice. Strictly speaking, back rubs didn't have to be weird or sexual. Maybe she was genuinely enjoying it and didn't realize I might have less wholesome motives.\n\nI truly didn't know how far I was prepared to push it, and luckily I didn't have to find out. Our dad called for me, interrupting my pervy, daydreamy back rubbing.\n\n\"Aiden! Are you in your room?\"\n\nI jerked my hand away from Lexi, then tried to play it off like I hadn't been caught in the cookie jar, so to speak.\n\n\"Yeah, Dad,\" I called back. \"What's up?\"\n\n\"Can you come help me with something?\"\n\n\"Ok. Give me a minute, I'll be right out.\"\n\nMy heart pounded a little too fast in my chest. It wasn't like I'd been caught or anything. Dad hadn't even come to my room. But I'd been doing something I shouldn't, and it could easily have gone worse.\n\n\"Guess that's the end of that back rub, huh?\" Lexi said.\n\n\"Uh, yeah, I guess so.\"\n\n\"That's too bad. It was kinda nice.\"\n\nI stared at her, but she didn't even glance my way. Her tone was utterly lacking in guile or sarcasm. So far as I could tell, she meant exactly what she'd said. Which was, after all, what my hope had been. Something didn't sit quite right with me about it, but I didn't have time to worry about it right now.\n\n\"Keep your eyes on your game,\" I said.\n\n\"Why?\"\n\n\"Gotta change, don't I? You heard Dad.\"\n\n\"So what, you thought I'd peek?\"\n\n\"Maybe. I dunno. Just keep your eyes averted, yeah?\"\n\nLexi snickered. \"You're being so weird this morning. When have I ever looked?\"\n\n\"I dunno. Just don't start now.\"\n\nI was pretty quick about getting dressed, and it was really only a few seconds while I changed boxers that mattered anyway. I rarely slept in anything more than underwear, and what with Lexi's early morning gaming, she'd seen me like that too many times for it to even register.\n\nShe was still just lying there staring fixedly at the tv screen when I left.\n\n****\n\nI was pretty convinced I'd been temporarily insane that morning. Once I'd gone through some of my normal life, the urges I'd felt seemed ridiculous and not a good idea to act on at all. Then again, that was often how urges experienced while horny seemed once the moment had passed.\n\nLuckily, I hadn't broken anything. Nothing had changed. I'd acted a bit weird, but judging by Lexi's lack of reaction through the rest of the day, she'd barely given it any thought.\n\nIt was late that evening before I was given any sign that I'd made an impression.\n\nThis time, I was the one playing a game. Lexi came into my room near-silently, except for the faint squeak of the door. I didn't give her much notice at first since that morning was out of my mind, I was otherwise absorbed, and her walking in whenever she wanted wasn't unusual, so long as I hadn't left the door fully closed. She was better than our parents about respecting a shut door, and I made sure to leave it cracked most of the time so as not to push my luck and ruin a good thing.\n\nRather curiously for Lexi, she slipped around behind my chair and stood leaning against the back of it, arms draped loosely around my neck. When she didn't do anything more than that, I got too curious not to say anything.\n\n\"What ya doing there?\"\n\n\"Nothin'.\"\n\n\"Nothin', huh?\"\n\n\"Yep.\"\n\n\"You trying to freak me out just hovering like that? You know I'm not gonna give up and let you play instead just because you're being weird.\"\n\n\"Perish the thought.\" Lexi shifted slightly. \"No, I had a thought like maybe I could rub your shoulders or something, but it's not a very good angle. Then it turned out it's kind of a comfy spot.\"\n\n\"Comfy, or just amusing because you're lurking behind me?\"\n\n\"Both.\" She moved her chin closer to my ear. \"It was kinda weird you just rubbing my back out of nowhere, you know.\"\n\nMy heart jumped. She didn't sound like she knew exactly why I'd done it, but she was being a bit hard to read too. \"Oh?\"\n\n\"But it was nice.\"\n\n\"Oh. Good.\"\n\n\"So I thought it might be nice if I did something for you too.\"\n\n\"Really? Is that what this is?\"\n\n\"I dunno. It was a thought. People like shoulder rubs, I think. I never saw the appeal really. Back rubs just seem better. Mighta been a good chance to find out for sure, though.\"\n\n\"Well I mean if back rubs are on the table...\"\n\n\"Can't do that either, smarty-pants.\"\n\n\"Maybe not right here, but I possess the mystical power of locomotion.\"\n\nI slid smoothly out of my seat and onto my bed without ever taking my eyes off my game. I emulated Lexi's favourite game-playing pose by resting on my tummy with my elbows propping me up near the very foot of the mattress.\n\n\"Wow,\" Lexi said with all due sarcasm, \"that's a neat trick.\"\n\n\"I thought you'd like it.\"\n\n\"Buuuttt what if I just steal your chair now that you're out of it?\"\n\n\"That would be cruel, and I would be forced to be slightly annoyed at you.\"\n\n\"Oh. Well then.\"\n\nLexi seemed to still consider being a chair thief for a moment, but opted against it. She came over to sit with me instead.\n\nShe was once again in my blind spot. I could feel her, but couldn't see her without craning my neck around. I was forced to consider whether I'd made an error in playing along. Having her so close to me and not being able to see what she was doing did some very weird things to my imagination.\n\nSomehow, Lexi's first move was not something I ever would have guessed. She shifted around, disturbing the mattress under me with her movements, then swung a leg over me and sat down straddling my butt.\n\n\"The hell are you doing?\"\n\n\"What?\" Lexi wiggled a bit, then settled in. \"Seemed easier this way.\"\n\n\"What seemed easier?.\"\n\nHer hands landed on my back. \"This.\"\n\nLexi started rubbing the small of my back, slowly working up my spine. Admittedly, sitting right on top of me allowed for a remarkably even pressure distribution, but I still wasn't sold on it.\n\n\"I really don't think you needed to sit on me for this,\" I said.\n\n\"Of course I didn't need to. I chose to. I opted to. But no, I didn't need to.\" Lexi pressed more firmly, approaching more of a massage than a simple rub. \"Or are you not enjoying it?\"\n\n\"No I mean it's nice, definitely.\"\n\n\"Good.\" Lexi ran her thumbs all the way up my spine, then spread her fingers and dragged her hands back down. \"It's supposed to be nice.\"\n\n\"And you're just gonna keep sitting on me?\"",
        "\"Yep.\"\n\n\"Fair enough.\"\n\nI couldn't really complain too hard about Lexi being weird. I'd started it that morning. There was no arguing that. And it genuinely was pretty nice getting a casual back rub while chilling together. Even better, it almost certainly meant she hadn't taken my morning weirdness as being anything to worry about. She wouldn't be reciprocating otherwise.\n\nFor a time, it was all good. Great, even. Getting to hang out and game like I'd wanted to anyway, but with the added bonus of getting a thorough, if unfocused, back rub. I only had to start questioning everything again when Lexi slipped her hands under my shirt.\n\n\"Ooh, you're really tense,\" Lexi said. \"I couldn't feel that before.\"\n\nI declined to mention that I'd only tensed up specifically because she'd gone under my shirt. I had enough to deal with trying to figure out why she'd done so.\n\nThere was a reasonable chance this was some kind of slow-played payback. That maybe she knew my intentions had been somewhat less than honourable when I'd rubbed her back, and she was getting some kind of revenge now. Or, on a more hopeful note, maybe she was just messing around, emulating me on the assumption that I'd been doing likewise. Or it could even be something like she genuinely was just rubbing my back and thought that my shirt was interfering.\n\nIt was so hard to know what to do when I couldn't tell what Lexi was thinking. So I did nothing. It seemed safest.\n\nShe kept right on going. My shirt got pushed up further and further to the point where I lifted myself and let her roll it right up to my shoulders. I wasn't sure that was wise, but I was really kind of getting into it. As long as I ignored the question of her motives, it was extraordinarily pleasant.\n\nI got so accepting of Lexi's back rub that I let it soothe and relax me, and let all my concerns about it drop away into the background. I was also rather unprepared for her suddenly hopping off me and exiting the room. I watched the doorway for a moment in case she was coming back, but it remained empty. I bemusedly tugged my shirt back into place and carried on by myself. Even though that had been my initial intent, it wasn't quite the same anymore.\n\n****\n\nLexi returned as normal the next morning like nothing had happened. She snuck in and settled in on my bed on her tummy, wearing only panties and what appeared to be the same cami top as yesterday morning. She got Zelda going, and was soon fully absorbed in it.\n\nI was glad things hadn't changed, but I also would have liked if she'd worn pants. Even a more modest pair of panties would have been nice. The ones she wore this morning were smaller and silkier than I was used to seeing on her, molding to her butt and not covering nearly enough of it to keep me from checking her out.\n\nI feigned dozing for a while, using the time to stare at my sister's tight ass. Not a healthy or helpful option, but it was what it was.\n\nEventually, if only to stop my own perving, I stretched and carefully extricated myself from my covers, which was somewhat tricky just because of how Lexi was pinning them down on one side. I cunningly hid my morning boner by lying on my tummy next to her and watching her game.\n\n\"I was wondering when you were gonna move,\" she said.\n\n\"When I woke up.\"\n\n\"You've been awake for a while.\"\n\n\"Not this again.\"\n\n\"Look, dude, I know when you're awake. It's not a big deal.\"\n\n\"Bah, get out of here with your witchcraft.\"\n\n\"Shan't.\"\n\nI shrugged, conceding defeat. \"Fair enough.\"\n\nI laid where I was, agonizing over the knowledge that my erection was unlikely to go down if I kept it pressed against the mattress, nor indeed if I kept lying so close to Lexi. Subtly grinding my hips both helped and didn't, for different reasons.\n\nThere really wasn't much chance of me staying good forever under the circumstances. I definitely couldn't just start massaging Lexi while fully erect though. That was insane far beyond even the boundaries I'd already pushed. I slipped out of bed and made my way to the bathroom, keeping my back to my sister until I was out of sight.\n\nUpon my return I was in a much better state, still kind of horny, but on a much more manageable level, and without a telltale erection to give me away. I tried to play it cool as I positioned myself next to Lexi again and lowered a hand to her back.\n\nNeither of us said anything as I rubbed small circles, then up and down Lexi's spine. I casually rubbed her back like it was no big deal, like it was something we'd always done.\n\nI took a cue from Lexi and slowly pushed her top up, exposing more bare skin above her panties. I didn't dare push it quite as far as she had mine, but I got plenty of warm, smooth skin under my palm and fingers, and still she didn't say a word about it.\n\nI half wished she'd balk, just a little. Just enough to keep me in line. Because as it was, I wasn't sure I could stop. There was something truly fascinating about touching my sister like this. In an ostensibly innocent way, that in reality was nothing of the sort. I felt guilty that she didn't know what was going on in my head, but not quite guilty enough to stop on my own.\n\nIt was one of those times when I should maybe have been more careful what I wished for. Although, admittedly, it was entirely my own damn fault.\n\nIt was a stupid move. No way around it. I was just horny enough to be an idiot, take things that little bit too far, and very nearly ruin everything. In this case, all it took was grabbing Lexi's butt.\n\nHer facade of ignoring me dropped immediately, and she whirled her face around toward me, lips frozen in a shocked gasp. I stared at her for a long few seconds, still cupping her ass, then jerked away.\n\n\"Sorry! Sorry. Shit, sorry. Fuck.\"\n\n\"Aiden?\"\n\nHer voice was a mix of surprise and confusion. I didn't dare look right at her again. I stood up, facing away from her, very much wishing I'd thought to get dressed before now. Standing in my underwear was not making the moment any easier.\n\n\"I know, I shouldn't have done that,\" I said. \"That was my bad. Totally. I really... I just... I'm sorry.\"\n\n\"Well you don't have to freak out that bad about it,\" Lexi said.\n\nI almost smiled at the gentle chastisement, but wasn't ready for that yet. \"I don't?\"\n\n\"No. You caught my surprise, mostly. I didn't really think you'd do it.\" She paused. \"But after yesterday... I kinda knew it was a possibility you'd do something like that.\"\n\nI cautiously turned to face her. She'd paused her game and was sitting up cross-legged.\n\n\"You knew?\" I asked.\n\n\"Kinda. I suspected. But, like, I didn't think I was right.\"\n\n\"And you didn't say anything?\"\n\n\"I told you. I didn't think I was reading it right.\" Lexi shrugged. \"And if I was, I kinda wanted to see what you'd do.\"\n\n\"Well, uh, I'm kinda confused now, then.\"\n\nLexi chewed her lip thoughtfully. She studied me with big, searching eyes. \"You know, all those times I saw you looking at me... I thought it was just looking.\"\n\n\"Well-\"\n\n\"I thought there's no way you'd be looking the way other boys do.\"\n\nI flushed, fully ashamed of myself. \"'Cause I'm your brother.\"\n\n\"Yes, partly that. But, like, I didn't think you saw me that way. Didn't think it occurred to you.\" She waved a hand at me. \"Always being topless. Changing around me and stuff.\"\n\nI looked down at my almost-naked body. \"Wait, really?\"\n\n\"Well duh.\"\n\n\"But... but... it's my room! You're the one always coming in wearing hardly anything.\"\n\n\"'Cause you hardly wear anything. I thought it was fine.\"\n\n\"So did I.\"\n\n\"Yeah?\"\n\n\"Yeah.\"\n\n\"Good.\"\n\n\"Fine.\"\n\nWe both stopped for a second.\n\n\"I can't tell if we're still arguing,\" I said.\n\n\"Were we arguing?\"\n\n\"I can't tell that either.\"\n\nLexi nodded. \"Fair.\"\n\nI looked down at myself again. \"I'm gonna put on a shirt.\"\n\n\"Also fair.\"\n\nI threw a shirt on, then sat down next to Lexi, but not too close. I still wasn't sure where we stood.\n\n\"So, this is a whole thing, huh?\" Lexi said.\n\n\"Seems so.\" I tilted my head slightly. \"Was my lack of clothes really a problem?\"\n\n\"Not a problem, exactly. But it made me look sometimes. And made me feel things I didn't necessarily want to, you know?\"\n\nI nodded. \"Oh boy do I know.\"\n\nLexi smiled slyly. \"You were totally checking me out too, huh?\"\n\n\"Constantly. Some days, it was like you wanted me to look at your butt.\"\n\nShe giggled softly. \"I really didn't think you'd care. You know, 'cause you didn't care about what you wore around me. I liked being able to wear whatever around you. It was kinda fun.\"\n\n\"Fun?\"\n\n\"Well, you know, a little naughty, but not in a way that would really mean anything.\" She shrugged. \"But I guess I was wrong about that one.\"\n\n\"Yeah. Kinda.\" I shrugged back. \"But then, I guess I got it pretty wrong too.\"\n\n\"Yeah.\"\n\n\"Yeah.\" I scratched my head. \"So, uh, what do we do now?\"\n\n\"You're asking me?\"\n\n\"I am. I was really hoping you had something.\"\n\n\"Not so much.\"\n\n\"Alas.\"\n\nI took a moment to consider our position. Somehow when I imagined disaster scenarios, or scenarios where nothing went horribly wrong, this particular set of circumstances never came up. I was unprepared for a reality where Lexi and I both felt some inappropriate things for one another.\n\n\"Well,\" I said slowly, \"I guess we probably need to start by wearing more clothes around each other.\"\n\n\"Oh. Yeah, that makes sense.\"\n\n\"And the back rubs weren't ever a good idea.\"\n\n\"Probably not.\"\n\n\"And maybe first thing in the morning visits aren't so great.\"\n\nLexi nodded with reluctant acceptance. \"'Cause of your boners.\"\n\n\"What?\"\n\n\"What? Isn't that why?\"\n\n\"Partly, yes. But that shouldn't be your reason. You weren't supposed to see them.\"\n\n\"I mostly didn't when you were awake. But I've come in often enough when you've got a little tent going under your blankets.\" Lexi grinned crookedly. \"That's part of how I know when you're awake, actually. You shift a little to hide your erection.\"\n\n\"Oh.\"\n\n\"Yeah.\"\n\n\"Well then.\" I coughed awkwardly. \"I didn't know that either.\"\n\nLexi shrugged. \"If it helps any, they never really mattered one way or the other to me.\"\n\n\"They didn't?\"\n\n\"Nah. I know it happens to boys. And I knew for sure they weren't over me, 'cause of how you were asleep and all.\"\n\n\"True.\"\n\n\"Although... actually no.\"\n\n\"What?\"\n\n\"Nothing.\"\n\n\"No come on, what were you going to say?\"\n\nLexi had gone a bit red. Her sudden reluctance and shyness really made me want to know what she could possibly have cut herself off from saying.\n\n\"It's kinda bad,\" she said.\n\n\"So?\" I spread my arms. \"So is this whole morning.\"\n\n\"Ok. Yeah. Fine. I just, like, I sometimes thought about maybe... touching it.\"\n\nI sat back a little. \"Oh.\"\n\n\"I didn't or anything. Just thought about it. Just 'cause it was there.\"\n\n\"Yeah, no, I get it.\"\n\n\"That's not too weird?\"\n\n\"Lexi, I grabbed your butt. I didn't just think about it, I did it.\" I shrugged. \"So no, you're not any weirder than me.\"\n\nShe nodded. \"Ok.\"\n\n\"Which is not to say that either of us should be having these thoughts in the first place.\"\n\n\"That's the problem alright.\" Lexi sighed heavily. \"So... pants time, I guess? For both of us?\"\n\n\"Um... yeah, that's probably a good idea.\"\n\n\"Yeah. Probably is.\"\n\nLexi left to go get changed. I tried to resist the urge for one last peek, but still snuck a glance at her butt before she was out the door.\n\nWhat an emotional mess this all was.\n\nBut at least we could be responsible adults about it. We could behave ourselves and dress and act properly, even if we'd needed a little nudge to remind ourselves of it.\n\n****\n\nAs prim and proper as our behaviour was over the next week, which was to say adequately so, something didn't feel right about it to me. Lexi and I made sure to always be dressed around each other, the same as we would around anyone else. We also lapsed into polite formality at times when speaking to each other, though that had more to do with trying to crack each other up than anything else.\n\nIt took a few days for me to realize that I just wasn't seeing as much of her. She was still around, still present at meals and stuff, but not in the same way. She didn't, for instance, come to my room hardly at all except for one evening when she asked if she could come in and play a game. I didn't think about it at the time, but that might have been the first time in years that she'd actually asked instead of just wandering in and claiming my setup if I wasn't already using it.\n\nI thought about talking to Lexi about our situation again a few times, but didn't quite work up to it. We still needed time to settle, or whatever, and technically things were going the way we wanted them to. Kinda. Sorta.\n\nIt took me by surprise when I woke up the next Saturday and found Lexi lying in my bed, playing Zelda in her shirt and panties like nothing had changed. I briefly considered the idea that I'd traveled backward in time somehow, then concluded that was insane. I blamed my sleepy brain.\n\n\"You forgot pants,\" I said.\n\nLexi didn't hesitate even slightly. \"You forgot a shirt.\"\n\n\"I was sleeping.\"\n\n\"Yeah. Without a shirt.\"\n\n\"I'm in bed. This is how I sleep. I thought I was going to be alone.\"\n\n\"Why would you think that?\"\n\n\"Because... you haven't been around as much.\"\n\n\"Yeah. And that sucked.\" Lexi shrugged. \"So I'm here again.\"\n\n\"In your underwear.\"\n\n\"An' a shirt. I remembered mine.\"\n\n\"Thank goodness for that,\" I muttered. I shifted a bit so I could see the tv screen. It didn't distract me from Lexi's butt nearly enough, but it was an attempt. I was trying. \"You know you're gonna make me stare.\"\n\n\"Not making you do anything. Tempting, perhaps.\"\n\n\"You're... are you doing it on purpose.\"\n\nLexi sighed. \"No, not really. I just... I got up, and I really wanted to come play Zelda. Then I was just outside when I remembered that I wasn't s'posed to come in without pants. I didn't want to turn around and have to come back again.\"\n\n\"It's not that long a journey.\"\n\n\"No, but, like, it sucks, Aiden.\"\n\n\"Walking?\"\n\nLexi paused her game and half turned around toward me. \"This, Aiden. This whole thing with us. I felt all week like I couldn't just come in anymore. I didn't like that feeling.\"\n\n\"You still can. Anytime. Just... with pants on.\"\n\n\"Yeah. Not the same, though.\"\n\nI blinked slowly. \"That's a deal breaker for you?\"\n\n\"It's a symbol.\"\n\n\"A symbol?\"\n\n\"Of our self-oppression.\"\n\n\"Um...\"\n\n\"And I mostly really didn't want to go back for them.\"\n\n\"Again, not that long a walk.\"\n\n\"More of an emotional trial than a physical one.\"\n\n\"Huh?\"\n\nLexi tilted her head and made direct eye contact. \"If I turned around, I might not have come back.\"\n\n\"Oh. Is it that bad?\"\n\n\"I dunno. Kinda. I never ever felt like I couldn't be in here before. Never felt like there was a problem between us. I don't like it.\"\n\n\"Yeah. Me either.\"\n\nLexi chewed her lip and fidgeted a moment. \"So, like, an amnesty morning? Or something?\"\n\n\"I don't feel like I've been given much of a choice.\"\n\n\"You could kick me out.\"\n\nI shook my head. \"Never.\"\n\n\"Good.\"\n\nLexi went back to her game. I went back to staring at her butt. Somehow, I wasn't entirely convinced we'd made the correct decision.\n\nI eventually sat up, mainly just because it made it harder for me to absently check out my sister. She glanced at me as I rose, then turned away again when I stopped making such a disturbance.\n\n\"You're welcome to get dressed if you want,\" Lexi said.\n\n\"I have to even though you don't? Not hardly fair.\"\n\n\"You don't have to. Just saying you could.\"\n\n\"Well... not just yet.\"\n\n\"No?\" Lexi was quiet a moment, then giggled to herself. \"Oh, right, morning wood, huh?\"\n\nI flushed slightly. \"It's not that funny.\"\n\n\"It's a little funny, though. I mean, boners, right?\"\n\n\"That's what constitutes humour for you?\"\n\n\"Sometimes.\"\n\n\"You must be so popular with the boys.\"\n\nLexi gave me a funny look. \"Did you just call me a slut?\"\n\n\"What? No! Because of the, you know, laughing at dicks. And such.\"\n\n\"Uh huh.\"\n\n\"You know that's what I meant. Don't be difficult about it.\"\n\n\"You're right, I do.\" Lexi grinned at me. \"See what I mean about it being funny?\"\n\nI rolled my eyes, but she was already looking away again. As revenge, without really thinking it properly through, I smacked her butt. Just a quick, light slap.\n\nLexi gasped in indignation. She fixed me with an accusing glare, but I met her gaze neutrally and serenely.\n\n\"Rude!\" she said.\n\n\"Or is it funny?\"\n\n\"Nope. Just rude.\"\n\n\"It seems we have some differences of opinion this morning.\" I slapped Lexi's butt again.\n\n\"Hey!\"\n\n\"What? Amnesty morning, right?\"\n\n\"That's not how that works.\"\n\n\"Isn't it?\"\n\n\"It isn't.\"\n\n\"Oh.\" I raised my hand yet again, but Lexi swung her fist and connected solidly with my thigh before I could spank her. \"Ow!\"\n\n\"Amnesty morning,\" she said calmly as I rubbed my leg where she'd hit it.\n\n\"Now who's abusing it?\"\n\n\"Both of us, I guess.\"\n\nI continued to rub my leg, though it honestly didn't hurt after the initial jab. It was an excuse to keep my hand to myself, which wasn't the worst thing. In spite of my playfulness about it, I had genuine concerns about Lexi's attitude this morning, and indeed my own possible reactions.\n\nThe flip side was that I was happy to have her back. It didn't feel right always waking up undisturbed, no scantily clad sister-butt to guilt over. Didn't feel normal. That was probably a sad indictment of my life, in some respects, but it was what it was.\n\nJust to see what would happen, I slowly moved my hand toward Lexi again. I didn't go for more spanks or anything, but rather simply set my hand on her back. Just let it lie there, gentle and unassuming.\n\n\"You're kinda pushing it,\" Lexi said.\n\n\"I know.\"\n\n\"I might have to go get dressed.\"\n\n\"You say that like it's a threat, even though it's exactly what I wanted this whole time.\"\n\n\"Is it, though?\"\n\n\"Yes.\"\n\nLexi gave me a disbelieving glance, only for a second. I knew I wasn't making a compelling argument at the moment, but it genuinely wasn't my fault she'd shown up in her shirt and panties this morning.\n\nI moved my hand just a little, drawing the smallest of circles with it. I rubbed in gradually broader strokes, waiting for a reaction from Lexi. It was unclear even to me why I was pushing my luck like this. Why I would risk it. But then, it was unclear too why she'd returned without being properly dressed. There was probably some truth to the explanation she'd given, but I couldn't imagine it was the whole truth.\n\nI pushed Lexi's shirt up her back, baring the lower half of it to be rubbed directly. She bit her lip very noticeably, but didn't turn or say anything. Just let me massage her.\n\nOnce I'd started, I couldn't easily stop. Regardless of what my original goal had been, either in theory or reality, I was sucked in by something much less than innocent. Lexi's warm skin under my fingers, so silky smooth to my caresses. The subtle tensing and relaxing of her muscles, the small, barely audible gasp I caught only because I was listening for something, anything.\n\nI grew even bolder, far too daring for my own comfort, really, but being horny could do that to me. I moved to my knees, swinging one leg over Lexi to straddle her and get a better angle. My erection was all the more prominent from that position, and I was careful not to drop too low and poke her with it. I really hoped she wouldn't turn around, which was probably a good indicator that I should stop.\n\nInstead, I kept pushing. I rubbed Lexi's back with both hands, sliding her shirt incrementally further up toward her shoulders. It was barely covering anything, though since she was on her tummy, she wasn't actually indecent or exposed. Kind of.\n\nHer panties looked even smaller, tighter, and less appropriate with so much of a gap. Nothing but bare skin to either side; long, stretched out legs one way, the soft line of her spine the other. Her butt tempted me more than ever, barely covered and so easy to reach.",
        "I resisted a little longer, but only a little. In spite of the further trouble I expected it to cause, I couldn't control myself for ever. I swooped both hands downward in synch, grabbing firm handfuls of her ass and holding there just for a moment. I moved away again, back up to her shoulders, still awaiting a delayed reaction that just wasn't coming.\n\nShe wasn't going to say anything? Interesting.\n\nLexi was very clearly aware of what I was doing. She couldn't possibly miss it. Plus there was the tension in her muscles, and the way she stared a little too fixedly at her game. She was deliberately hiding her reactions as best she could, but wasn't entirely succeeding. Her efforts only made me want to try harder and get something out of her, even though any word from her was as likely to put an end to the fun as anything.\n\nNothing about it was strictly rational. Nothing at all.\n\nI rubbed Lexi's back, taking incrementally longer and longer breaks to fondle her bum. I grew daring enough to venture along to the sides of her breasts as well. If she hadn't been lying on them, I might have gone even further.\n\n\"Aiden?\"\n\nI paused, hands halfway onto Lexi's butt. I slid them a down a little more and snuck in a last squeeze, just in case.\n\n\"Yeah?\"\n\n\"I think I'm gonna go grab breakfast now.\"\n\n\"Oh.\"\n\nLexi turned her game off, wiggled out from under me, and fixed her shirt as she sat up. She grinned crookedly at me, and as I looked down at myself, I belatedly realized my cock had slipped out the front hole of my boxers at some point without me noticing.\n\n\"See, you shoulda wore pants,\" Lexi said gently. She reached over and calmly tucked my erection back into my underwear for me.\n\n\"That, uh...\"\n\n\"Must be very embarrassing having your penis fall out like that.\"\n\nLexi gave my cock a squeeze through my boxers, then kissed me on the cheek. I stayed frozen, kneeling right where I was, but followed her with my eyes until she was out of the room. She stayed long enough to put her controller away and turn off the tv, then padded out without so much as a glance my way, but the smallest, most knowing of smiles on her lips.\n\nAfter she was gone, it still took a few moments for me to shake myself into action. First thing was to stumble over to my door and make sure it was firmly closed. Next thing, drop the boxers. Then, naturally, fall back into bed naked and horny, and wrap my hand around my hard, pulsing cock.\n\nLexi's brief, soft touch was fresh on my skin and in my head. She'd grabbed my cock so decisively I couldn't have managed a protest if I'd wanted to, and being honest, I really wouldn't have wanted to.\n\nMy head was full of my sister as I jerked off in me bed where she'd been lying so shortly ago. I thought of her scantily clad body, the way she felt, how she'd let me play with her.\n\nI wanted more. I wanted her hand wrapped around my cock again, to feel her stroking me. That brief touch had been such a tease.\n\nIt was so easy to imagine Lexi doing more. To picture her sneaking back in, kneeling next to me in just her panties, giving me a look of mock disapproval even as she reached for my cock. I so badly wanted to let her jerk me off. Thinking about what it would feel like just wasn't the same as experiencing it. Not even close.\n\nThe door opened while I was still lost in my incestuous daydream. I hadn't been listening for anyone approaching, and usually I could at least expect a knock first, even if it was the classic parental knock where they didn't give me enough time to hide whatever I was doing before opening the door.\n\nLexi poked her head in a mere fraction of a second after I'd pulled my blanket over my lower half. Her eyes flicked toward my hastily covered erection, but I didn't think she could see it. Not that it mattered. She knew what I'd been up to. Along with her having already seen my cock slip out, me covering myself wasn't accomplishing a hell of a lot.\n\n\"Mom wants you to come down,\" Lexi said in a professionally casual tone. \"We're all gonna have breakfast together.\"\n\n\"We are? Why?\"\n\n\"Dunno. Just telling you what she said.\"\n\n\"Uh...\"\n\n\"Should I tell her you're busy?\"\n\nI glared at Lexi. \"No, you ass. Just... ugh.\"\n\nA smile escaped her otherwise perfectly controlled lips. \"Shoulda jerked off faaasteeerrr,\" she said in a sing songy voice.\n\n\"Not helping.\"\n\n\"I know. But it's fun.\"\n\n\"Well can you just, like, let me get dressed then?\"\n\n\"Yeah, I guess I could.\" Lexi grinned even wider. \"Don't take too long, or I'll be back.\"\n\n\"I believe you would, too,\" I muttered as she left.\n\nJamming my cock into a pair of pants really sucked. It sucked even more trying to arrange it somehow so my boner wasn't obvious. But it was necessary, thanks to my darling sister. In more ways than one, even.\n\nI made it through breakfast ok. I started out eating fast and without tasting much of anything, with the idea that I could escape again as soon as possible, but that didn't work very well. Lexi and I kept meeting each other's gaze. That was all it took. Knowing what she knew, being reminded of it several times a minute, none of that was helpful. I softened somewhat, but not entirely, thanks to her presence.\n\nIt got worse toward the end because Lexi started giving me deliberate little smiles. I didn't know exactly what they meant, but the uncertainty didn't help any, it just made me imagine possibilities.\n\nI escaped back to my room afterward. I wasn't quite as horny as before, but still felt the urge to jerk off. It wasn't quite clear whether I should bother or not, given that I was all dressed and everything now, but I was leaning toward doing it anyway. Luckily I still had my pants on when Lexi popped by again.\n\n\"You're going to make me think you're trying to catch me with my pants off,\" I said.\n\n\"Maybe stop taking 'em off then?\" Lexi replied with a casual shrug.\n\n\"You want me to masturbate with my pants still on?\"\n\n\"Hey, man, that's all up to you. I have nothing to do with that.\"\n\n\"You kinda do, actually.\"\n\nLexi grinned crookedly. \"Perv.\"\n\n\"Did you need something?\"\n\n\"Nah. Not really. Guess I should probably give you some, uh, alone time, huh?\"\n\n\"That'd be nice.\"\n\n\"Hell, maybe I should go play with myself too.\"\n\nMy cock twitched at the thought of my sister with her hand down her panties. \"Maybe you should.\"\n\n\"After all, someone wouldn't stop feeling me up this morning.\"\n\n\"Well-\"\n\n\"Kinda gets to me after a while, you know?\"\n\n\"Yes. I think I do.\"\n\n\"I bet.\"\n\n\"Well have fun.\"\n\n\"Yeah. You too, I guess.\"\n\nI began questioning what had just happened after Lexi was gone. It all seemed pretty straightforward, in one way, but in another I couldn't quite reconcile that we were both, presumably, about to masturbate while thinking about each other. Unless she was just teasing or something, which was possible. I, certainly, was going to jerk off to my sister. Whether she did or not was up to her.\n\nIt was an odd state of affairs, at any rate.\n\n****\n\nMy only other questionable interaction with Lexi that day-as if more were needed-came that evening. I was, initially, watching a movie with Mom and Dad. Or, rather, I was watching, Mom was flitting back and forth doing other things and asking me what happened while she was gone, and Dad was fighting his evening battle with falling asleep in his chair. Generally a losing battle, as it was this time.\n\nSo despite there being three of us ostensibly watching, I was the only one to take note when Lexi slipped in to join us. I didn't think anything of it at first. She just sat and behaved herself, rather deflecting my attention away again.\n\nLexi crept closer on the couch with such small, sneaky movements that even though I caught the individual shifts, she was practically right next to me before I realized that she had a purpose in mind. I gave her a curious look, but she stared evenly straight ahead at the tv until I gave up. I knew she was looking when she thought I wasn't, but I didn't challenge her on it.\n\nShe leaned in against me, just gently, not with her full weight. I said nothing. I remained mute when her hand crept up to my head and she started running her fingers through my hair.\n\nIt might just have been her version of carrying on whatever it was we'd been up to that morning. Maybe it was just something she felt like doing. I couldn't imagine it was totally innocent, not with the context of what had been going on between us, but I wasn't yet convinced that it was anything I needed to stop. It didn't hurt that it felt really nice having her play with my hair.\n\n\"You sure you wanna be this close when Mom comes back?\" I whispered.\n\n\"Why wouldn't I be?\" Lexi whispered back. \"M'not doing anything wrong.\"\n\n\"Sure, but this isn't something you normally do either.\"\n\n\"So what? It's cute.\"\n\n\"Is it? Not suspicious, you don't think?\"\n\nI was forced to concede, however, that judging by Mom's expression when she came back in, Lexi and I probably did look cute together. Outwardly innocent too, it seemed. Good enough.\n\nLexi stuck around and cuddled for a while, then flounced off again on some schedule known only to her. Maybe she'd just been trying it out or something. Testing the water on being subtly naughty when it wasn't just the two of us.\n\n****\n\nI smiled to myself the next morning upon waking up with Lexi next to me. Her bare legs were the first things I saw, meaning that she hadn't done a damn thing about dressing more appropriately. That was fine.\n\nThe hell with everything else; it was fun first thing on a weekend morning. If she was gonna keep coming in like that, I was going to enjoy it.\n\nI rolled onto my back and closed my eyes again. I reached a hand out to my sister's calf and gently ran it up and down her lower leg. That was all I did for a while, other than listen to her play, as she'd turned the volume up once I'd awakened.\n\nAs I allowed myself a slow, lazy waking up process, I gradually scooted my way to where I could let my hand travel up Lexi's thigh, and eventually her butt. She didn't outwardly react as I fondled her ass, not that I'd expected her to.\n\nIt was only when I finally sat up and took a full look at Lexi that I realized her panties were, in fact, the only clothing she had on at all.\n\n\"Where the hell's your shirt?\"\n\nLexi shrugged \"Where's yours?\"\n\n\"You know I don't sleep with one.\"\n\n\"I do. So why should I wear one if you aren't gonna?\"\n\n\"You're a girl.\"\n\n\"Good catch.\"\n\n\"You have boobs.\"\n\n\"You can't see 'em.\"\n\nIt was true, in a technical kind of way. Since she was lying on her tummy, I couldn't actually see her tits, other than the barest hint of side boob. Still, though.\n\n\"What about when you want to leave?\" I asked.\n\n\"Dunno, really. Guess we'll figure that out at some point.\"\n\nI didn't really believe that Lexi had nothing in mind. She wouldn't have just walked in topless without some kind of plan or agenda.\n\nHer top was on the floor by the bed, as I belatedly spied. So she hadn't come from her room like that, and she could probably reach it and slip it on without me actually seeing much of anything. Although I could 'accidentally' kick it out of reach, if I wanted. That was a thought.\n\n\"Pretty soon you're not gonna be wearing anything at all,\" I said as I ran my hand up Lexi's bare back.\n\n\"And wouldn't you love that.\"\n\n\"I might.\"\n\n\"You would.\"\n\nI grinned and grabbed her ass. \"Ok, I would.\"\n\n\"So I really couldn't do that.\"\n\n\"No?\"\n\n\"No. Look at how handsy you get when I'm just lying here being good.\"\n\n\"Excuse me? Good?\"\n\nLexi stuck her tongue out at me over her shoulder. \"Yes, good. Not now, obviously, but most of the time.\" She turned to face front again. \"I can only imagine what you'd try if I was lying here naked.\"\n\nA thrill ran through me at the thought of it. I shook my head to try and clear it, which didn't really work.\n\nI shifted again, moving to straddle Lexi as I had the day before. I rubbed her back with both hands, going slow and firm like I was professionally massaging her. Though, rather unprofessionally, I snuck little feels of her side boob as I ran my hands over her soft skin.\n\n\"I can't believe you'd think such things of your own brother,\" I said.\n\n\"Oh you can believe it.\"\n\n\"So harsh.\"\n\n\"Fair as can be, dude.\"\n\n\"I guess we'll just have to see about that, won't we?\"\n\nLexi tensed beneath me. \"We will?\"\n\n\"Yes. For science.\"\n\nI slipped my fingers into Lexi's panties with the intent of pulling them down. She reached back and gave one of my intruding hands a vicious slap.\n\n\"None of that, now,\" she said.\n\n\"Ow. Not nice.\"\n\n\"You're trying to steal my panties.\"\n\n\"Well... yeah.\"\n\nI grumbled to myself and went back to massaging Lexi, while she in turn went back to pretending to ignore my decreasingly subtle groping of her ass and the sides of her tits. I tried pulling her panties down a few more time, but got slapped again with unerring accuracy.\n\nIf I really wanted to, I could strip Lexi anyway. If she truly had to fight me off, she'd have to roll over, and in that case I'd be in a no-lose kind of scenario. That wouldn't be right, though. If she wanted her underwear left on, then on it would stay. \n\nMine however...\n\nMy heart sped up as I slipped my boxers off. This was very nearly as risky as stripping Lexi, and without any of the immediate feedback from her that would have let me stop before committing.\n\nI was so hard, and precum was leaking from my erect cock. I looked down at my sister, so very nearly naked below me. She was entirely right about the things I might want to do to her, under the right circumstances. She tempted me so badly.\n\nI had no idea if Lexi knew that I was naked or not. She hadn't looked, so far as I'd seen, but she might well have guessed what I was up to, since I'd been squirming around awkwardly behind her. She hadn't said anything, though.\n\nEither way, I was going to try. Just to see what I could get away with. I rubbed Lexi's back, returning to my regular pattern, carefully keeping my cock away from her at first. It wasn't easy.\n\nSlowly, so slowly, I lowered myself until I was just pressing against her butt. She tensed at the feel of my cock, though I still didn't know whether or not she knew it was free of any covering. I didn't get slapped, at any rate.\n\nI kept rubbing her, getting her back to a relaxed state before sitting down more firmly. I wedged my cock between us, sitting it firmly in the faint cleft in the middle of her panties. That made her tense right back up, of course, but by proceeding slowly I kept things more or less balanced out.\n\nAlthough, really, in spite of her tension, I couldn't say for sure that I wasn't doing exactly the sort of thing she expected me to. It was unclear which of us was in control of the situation, if indeed either of us were.\n\nI rocked my hips ever so gently, testing her reaction. She didn't say anything about it or swat at me, which was encouraging.\n\nIt felt really nice grinding on Lexi's butt. I was glad she wasn't stopping me, because once I'd started I really didn't want to quit. I rubbed my cock back and forth, sliding on the smooth material of her panties, slowly pushing them deeper into her butt crack.\n\nLexi was actually getting better at ignoring me the longer I went. Possibly she just couldn't help reacting to the initial shock of it. Admittedly, I could understand how feeling her brother's cock rubbing on her ass for the first time might not be something she could take in stride. Now that she'd adjusted, I'd hardly even know anything was amiss, if I wasn't fully the cause of it.\n\nI kept rubbing her back for the pretense of it. I was much less thorough and consistent about it now that I was so very distracted. My sister's butt and getting off thereon were shutting everything else out to a distant secondary priority level.\n\nI was getting more and more worked up. I was so hard, so needy, smearing precum all over Lexi's panties. My thrusting was getting a little out of control, though it helped to grab her hips and hold them firmly while I kept grinding on her.\n\nLexi's attempt at pretending I wasn't doing anything was an absolute joke by this point. Her face was buried in the bed, a game over screen on the tv, controller barely clutched in one hand. She was even lifting her hips, just a little, just enough to push her butt back against me.\n\nI thrust against her ass harder and more desperately as I got close. I was nearly there, but it took some extra effort to finish off since I wasn't getting quite the physical stimulation I would have with my hand. It was way hotter using my sister's bum, but not quite as practical as jerking off, or actually being inside her, if I dared to imagine it.\n\nThat last thought was what did it. The thought of actually fucking Lexi's ass instead of just grinding on it was enough to make me cum. It was so wrong to even contemplate, yet it thrilled me so much more than I could have expected. She'd feel amazing, I knew she would, and the sheer ridiculous, forbidden hotness of actually getting inside my own sister like that...\n\nI grunted and gave a few last, sporadic thrusts as I came all over Lexi's bum. Her panties and lower back got thickly streaked with my cum. All that pressure from my balls exploding delightfully from my shaft and making a total mess of her skin and sole article of clothing.\n\nIt wasn't at all clear to me what to do in the aftermath. Lexi's ass was a cummy mess thanks to me, and I was still naked and straddling her. For her part, she'd hardly moved at all.\n\n\"I think you died,\" I said.\n\nLexi took a few seconds to respond, slowly pulling her head up and refocusing on her game over screen on the tv. \"So I did,\" she said faintly. She settled her elbows for support, took a fresh grip on her controller, and resumed play.\n\nI stayed where I was for a moment to see if she really was going to carry on like nothing had happened. It seemed that was exactly her intent. I carefully dismounted her, then sat beside her for a while, casually running my fingers up and down her back, steering clear of the small lake of cum around her butt.\n\nEventually I got up and got dressed, not much worried about whether Lexi would peek or not. It didn't seem all that important anymore, for some reason.\n\n\"I'm gonna see about breakfast,\" I said. \"You want anything?\"\n\n\"No thanks. I'll probably be down shortly.\" Lexi looked my way just for a second. \"I need to shower soon anyway, before your cum gets all dried on.\"\n\nI felt my face warm at the acknowledgement of what I'd done, but there was no accusation in Lexi's tone. Just the hint of a smile on her lips that could have been either teasing, or just amused at the circumstances.\n\n\"I might have made a bit of a mess,\" I admitted.\n\n\"Yeah you did. I'm almost impressed.\"\n\n\"You are?\"\n\nLexi shrugged. \"In an odd sort of way. Or is that too weird?\"\n\n\"It's fine. Probably. But, uh, that was fun, anyway. Thanks, I think?\"\n\nLexi's grin broadened into almost a real smile. \"Rather naughty of us, wasn't it?\" she said softly.\n\n\"Very.\"\n\n****\n\nI went out for a while, through late morning and most of the afternoon. I was back for supper, but found that no one was around, let alone making anything. Undeterred, I set about making something for myself. I had no idea what anyone else's plans were, and I was getting hungry enough not to have any interest in waiting to find out.\n\nLexi was home, as it turned out. She'd just been off somewhere being quiet when I returned. She found me while I was only in the beginning stages of figuring out what to make.\n\n\"You're back,\" she said.\n\n\"I am.\"\n\n\"Not nice to run off on a girl after messing her panties like that, you know. Very uncouth.\"\n\n\"Oh. Well I certainly didn't mean to be uncouth. Couthness is very important to me.\"\n\n\"As well it should be.\" Lexi hopped up to sit on the counter nearby. \"What ya making me?\"",
        "\"Who says I'm making anything for you?\"\n\nShe clicked her tongue and shook her head. \"Not even a dinner in it for me. Boy do I feel used.\"\n\nI tilted my head and gave her a Look. \"Are Mom or Dad around?\"\n\n\"Nope. Gone out.\"\n\n\"Good.\"\n\nI stepped over to Lexi, pushed her legs open to make it easier to get close, then kissed her. I kept it short and soft.\n\n\"Well. That's better, I suppose,\" she said.\n\n\"Glad to hear it. What would you like?\"\n\n\"What?\"\n\n\"For supper.\"\n\n\"Oh. Right. Uh... I dunno.\"\n\n\"Anything you want.\"\n\n\"Anything?\"\n\n\"Provided I know how to make it.\"\n\nLexi returned the Look I'd given her earlier. \"That's a much less amazing offer. So, what, sandwiches or Kraft Dinner?\"\n\n\"Ouch. I can make more things than that.\"\n\n\"Name twenty.\"\n\nI grinned. \"You set an impossible standard for cheffery, you know.\"\n\nLexi tossed her hair in an impressively haughty manner. \"I'm pretty high maintenance like that.\"\n\n\"So it would seem.\" I considered the issue for a moment. \"Maybe I just gotta take you somewhere.\"\n\n\"To eat?\"\n\n\"Yeah.\"\n\n\"Like a date?\"\n\n\"Um... maybe?\"\n\nShe shook her head. \"Nuh uh, dude. Not falling for that one.\"\n\n\"What?\"\n\n\"You're my brother.\"\n\n\"I know. I caught on a couple years ago. You act like I'm slow or something.\"\n\n\"You can't date your sister,\" Lexi said, speaking very slowly and enunciating carefully.\n\n\"Well... that's the conventional belief, sure.\"\n\n\"No dating. No way.\"\n\n\"Huh.\" I folded my arms. \"You're awfully firm on that question, considering it didn't even officially come up.\"\n\nLexi shrugged. \"It would have come up sooner or later. A boy cums on your ass, all of a sudden he wants to get all romantic and shit.\"\n\n\"I... you...\" I scratched my head. \"Do I dare ask how many times that's been an issue?\"\n\n\"None yet. But only because I've been proactive.\"\n\n\"Ah. I see.\"\n\nI only kind of saw, in fact. I also wasn't sure whether to be hurt or not that Lexi emphatically didn't want to date me. I was pretty sure that wasn't even what I'd asked. At worst, I'd maybe kind of asked her on one date. Maybe. I wasn't even sure about that. The rules got pretty fuzzy in cases like this.\n\n\"So we're still stuck with me making something, are we?\"\n\n\"Maybe. Could be fun. You could be, like, a sexy chef guy. Or something.\"\n\n\"Could I?\"\n\nLexi shrugged. \"Enh... probably not. But I'm willing to be surprised.\"\n\n\"I'm not getting a hell of a lot of support from you, you know. Lotta criticism flying around. Maybe I don't want to cook for you anymore.\"\n\n\"Then... hm. Guess we order pizza?\"\n\n\"I dunno.\"\n\n\"Order pizza and snuggle with a movie?\"\n\n\"... you have my attention.\"\n\n\"Thought I might. Lemme look up the number.\"\n\nAnd so, once the pizza arrived, Lexi and I settled into exactly what she'd suggested. We cuddled really damn close on the couch, too close to easily eat our pizza, as it happened. Not that that stopped us. It just meant we had to eat carefully, and that occasionally one of us would feed a bite to the other in a cutesy kind of way that was nevertheless Not Like A Date.\n\nThe cuddling only intensified once we'd finished eating. There was nothing anymore to distract us from us. The movie certainly wasn't more alluring to me than my sister's warm, cozily snuggled body. Not even a contest.\n\nWe pretended, of course. Acted like we cared about something other our dangerous proximity. I was pretty sure we didn't make eye contact the whole time, even while I was slipping hands under her shirt, or she was wiggling around in my lap.\n\nWe more or less settled down after a while. Still close as could be, but having somewhat established ourselves. I was amusing myself with an arm casually wrapped around Lexi, hand firmly embedded under her bra. She was a little more subtle at first, but that subtlety went out the window when she started undoing my zipper.\n\nI glanced at Lexi, but she was staring straight ahead, apparently oblivious to me except for her cunning little fingers digging for my cock. I leaned back and waited to see how it was going to play out. I had my suspicions.\n\nSure enough, Lexi slowly, carefully pulled my cock free from my pants and underwear. I was so hard for her, and I smiled at the sharp intake of breath I caught when she wrapped her hand around my pulsing shaft.\n\nWhat followed was about the most decadently frustrating experience of my life. Lexi stroked and teased me about as glacially slowly as was possible without being frozen in time. Her hand barely moved at times, and at others only her fingertips slid across my sensitive skin, hardly touching me at all. She kept me crazy horny without ever giving me even the hope that she might finish the job at some point.\n\nI couldn't even do anything about it. If I said anything, if I did anything, she might just stop. I had no idea what she was thinking, what she might decide she did or didn't want. I had to just let her play with me however she wished. That was what she did for me, after all. It wasn't even just in my bed anymore. Not with my hand cupping her tit right there in the living room.\n\nIt did make me wonder if what I'd been doing was quite the same tease for Lexi as what she was doing to me. I didn't think it was. Certainly not on purpose at any rate.\n\nEither way, Lexi was in no hurry at all. She played with me so slowly, and was still at it when our parents got home.\n\nI swore as I heard the front door open. I had to disentangle my hand from Lexi's bra, then try and stuff my poor, overly-teased cock back into my pants. Lexi, thinking a little more clearly, just threw a blanket over our laps. It meant we were still sitting a little too close together when Mom and Dad came in, but at least we weren't being obviously handsy or horny.\n\nDad took over his chair for the evening. Mom went to get changed, then flitted back and forth between joining us and taking care of something she'd just thought of. The usual.\n\nI was happy enough that neither of them thought to comment on how close Lexi and I were sitting, though admittedly it might not have looked so bad without the context of knowing what we'd been up to.\n\nLexi's hand strayed to my lap a couple times, despite me trying my best to go soft. I couldn't even reprimand her too overtly without attracting attention I very much didn't want. Glaring at her accomplished very little.\n\n****\n\nOur weekday schedules ate into our naughty time a bit. That issue didn't come close to dissuading us entirely.\n\nIt was only a few mornings later when Lexi entered the bathroom while I was mid-shower. I wasn't expecting her to be quite so brazen, but there wasn't really any reason why she wouldn't.\n\nI felt a tad vulnerable standing naked behind the shower curtain while she stood at the sink. I'd been unclothed with her in the room many times before, but never because she'd deliberately walked in on me. She didn't make any obvious attempts at peeking, but it would have been easy enough if she'd wanted to.\n\nI got halfway hard just from knowing she was there and wondering what she was up to. She didn't even really have to do anything to turn me on.\n\nEventually I had to give in and dry off. I stayed behind the curtain, reaching around it to grab my towel, only stepping out once I had it wrapped around my mostly dry body.\n\nLexi was applying moisturizer to her face. All outward evidence suggested she didn't care at all that I was in the room too. I knew that to be false.\n\nI took a quick moment to admire her tight top and panties combo, keeping her modest to an extent while also highlighting some interesting areas. There was some tantalizing cleavage on display the way her top sat, and when I stepped next to her I could still see it in the mirror.\n\n\"You couldn't wait for me to finish?\" I asked.\n\n\"You were taking forever. I have things to do.\"\n\n\"That's never been a problem before.\"\n\n\"Not that you know of.\"\n\n\"I think you just wanted to perv on me in the shower.\"\n\nLexi turned her face toward me, eyes all big and innocent. She distracted me so masterfully that I didn't notice her hand moving to my towel until it was already dropping to the floor.\n\n\"Oops,\" she said.\n\n\"So clumsy of you.\"\n\n\"Really though. Still waking up, I guess.\"\n\nI got even harder. Standing naked next to my sister, knowing she could see my arousal, it fed back on itself and only got me increasingly excited.\n\nLexi kept her hand near my waist while only using her other one to fuss with her appearance. She was just stalling, I assumed. Using any excuse to stay right where she was. And, indeed, she soon wrapped her fingers around my cock.\n\nMy eyes rolled back and I bit my lip at the feel of Lexi holding my nearly full erection. She was so casual about it, though less so than our evening cuddling with a movie. And she wasn't quite so much of a tease this time either. She just held me at first, but with a firm grip, and when she started moving it was very nearly like a real handjob.\n\nIt was tricky fighting for space at the sink without dislodging Lexi entirely. I didn't want to risk making her let go of me. But I too had things to do, and I needed to get ready for them sooner than later.\n\nIt was quite a fascinating experience brushing my teeth while Lexi jerked me off. I felt uncoordinated enough to have been embarrassed by it under any other circumstances. In this case, I felt somewhat justified.\n\nShe was still going when it came time to shave, which turned that into a slow and careful exercise. It would be all too easy to cut myself while Lexi played with my cock.\n\nAs soon as I'd finished everything and was finally able to just lean on the counter and enjoy my handjob, Lexi released me and took a step toward the door. I caught her with a speed that impressed even me.\n\n\"Where do you think you're going?\" I asked.\n\n\"Gonna go get dressed.\"\n\n\"You're just going to leave me like this?\"\n\nLexi looked me up and down. \"You can dress yourself, can't you?\"\n\n\"That is so not what I meant.\"\n\n\"And what exactly did you mean?\" she asked, flashing those overly innocent eyes at me again.\n\n\"You did this to me last night too.\"\n\n\"Made you dress yourself?\"\n\n\"Teased me. Got me all excited. Then didn't finish the job.\"\n\nLexi shrugged. \"Not really my fault last night. Couldn't go jerking you off with the 'rents hanging around.\"\n\n\"No, that's true. What about now, though?\"\n\nShe looked down at my erection that was pointed right at her. She chewed thoughtfully on her lip. \"Well...\"\n\nI released Lexi as she grabbed my cock again. She stroked it with much more purpose, with the full intent of getting me off quickly. It was so very different, in an amazing and wonderful way. Unlike her teasing, this was pure bliss and would actually make me cum. I could feel it already.\n\nWe stood together in a state of near-silence while Lexi jerked me off. Her tongue poked out of the corner of her mouth in an adorable expression of concentration. I let out the occasional soft grunt or sigh of pleasure.\n\n\"You're gonna make a mess when you cum,\" Lexi said.\n\n\"Probably.\"\n\n\"Can you reach a towel or something?\"\n\nI could have grabbed a towel. But I was just horny and stupid enough to grab something else instead. I reached for Lexi and took hold of her panties. I pulled them out, away from her body enough to get my intent across.\n\n\"Oh my god, you perv,\" Lexi said breathily. \"That's not what I meant at all.\"\n\nDespite that, she jerked me even faster and more intensely. Her eyes locked on my cock, waiting for its explosion. Her breathing had become heavier, much like mine.\n\nWhen I came, she thrust her hips forward and aimed me right for the gap between panties and skin. My cum hit her in thick, gooey streaks that dripped down toward her pussy. She milked every little bit of it from me, even wiping the last of it off with the edge of her underwear. I eased her panties back into place, trapping my cum within them.\n\n\"You happy now?\" Lexi asked.\n\nI grinned. \"Very.\"\n\nI pushed her back against the wall and kissed her firmly. At the same time, I slipped my hand between her thighs and pressed my palm hard against her panties over her cummy pussy. I held her like that for a moment, then broke away.\n\n\"You're the best, Lexi.\"\n\nI left her standing there breathless, confused, and horny.\n\n****\n\nLexi was waiting for me in my room when I got home that evening. She wasn't even playing Zelda and pretending like she didn't care if I showed up or not, but instead was on her phone while waiting and put it away as soon as I showed up.\n\n\"Wasn't very nice of you this morning,\" she said.\n\n\"Oh?\"\n\n\"Leaving me like that.\"\n\n\"Now you know how I felt.\"\n\n\"Hey, I jerked you off this morning.\"\n\n\"That's true. And it was lovely, thanks.\"\n\nLexi flushed. \"Well... you're welcome. But then I had to go to class all worked up, and with my panties all messed, and-\"\n\n\"You didn't change them first?\"\n\n\"No.\"\n\nI grinned. \"Bad girl.\"\n\n\"Shut up! It's your fault.\"\n\n\"Only partly.\"\n\n\"Mostly.\"\n\nI shrugged, not too bothered either way. \"If you say so.\"\n\nLexi bounced off the bed. \"Glad you're admitting it.\"\n\nShe moved to leave the room, but I stepped in front of her. She didn't try very hard to get around me.\n\n\"Where do you think you're going?\"\n\nLexi tossed her hair flippantly. \"Probably to go masturbate, since I have to do everything myself around here.\"\n\n\"Is that what you think?\"\n\n\"Kinda, yeah.\"\n\nI smiled crookedly and pressed my hand to her pussy, much as I had that morning. Her jeans prevented me from getting a particularly good feel this time, but it still got a reaction out of her, which was the main thing.\n\nLexi stood nice and still for me as I knelt in front of her, undid her pants, and pulled them down her legs.\n\n\"Glad to see you changed your panties since you got home, at least,\" I said.\n\n\"Had to. They were getting all dry and gross. Thanks to you.\"\n\n\"Can't blame me for that,\" I muttered. \"I don't control how cum works.\"\n\nI pressed a finger to the front of Lexi's panties. I located her slit by touch and rubbed up and down on it. It didn't take long for me to start feeling some moisture through the material. She really had been waiting for me. However, as soon as I tried to pull Lexi's panties down, I got my hands swatted again.\n\n\"I'm getting some seriously mixed signals here,\" I said.\n\n\"Tough.\"\n\n\"Were you not just complaining that I wasn't getting you off?\"\n\n\"Maybe.\"\n\n\"Well I'm trying.\"\n\nLexi shifted her weight from foot to foot. \"I'm not quite ready for that.\"\n\n\"For what, me touching you?\"\n\n\"No. Taking my panties off.\"\n\n\"Seriously?\"\n\n\"Yes.\"\n\nI threw my hands up. \"What do you want from me then?\"\n\nLexi considered the question. \"I have a few ideas, actually.\"\n\nI followed her lead as she guided me to stand, then took my pants off. It seemed easier to go along with whatever she had in mind. I didn't know what was with her reluctance for panty removal, but it might just have been one of those things that didn't fully make sense. Sex and emotions could be like that.\n\nLexi made me lie back on my bed. I was in the beginning stages of getting hard anyway, and she accelerated the process greatly when she straddled my waist and practically sat on my cock.\n\nShe had grabbed a controller beforehand, and casually started up her game while rocking very gently back and forth on top of me. I grew harder beneath her, and I had to press on her butt a couple times so she'd shift enough to give me space to grow.\n\nHer grinding got a little firmer and more intense as she made better and better connection with my erection. Eventually I slipped out the front of my boxers, giving her free rein of my exposed cock. She reached down to touch it a few times when she had a free hand, but mostly just kept grinding.\n\nI was stuck, it seemed. Somehow that just kept happening to me. It wasn't a bad thing by any means, since I was getting my sister's panty-covered pussy rubbed all over my cock, but it was at a slower pace than I would have chosen.\n\nI had Lexi's butt to stare at and play with to help amuse me, and I took full advantage of that. It wasn't quite enough to get past my arousal and desire for something a bit more. Something faster or harder. Something more than a decadent, sensual tease.\n\nOr, dare I think it, something along the lines of Lexi riding me for real.\n\nThat was probably too much. Maybe. Possibly. I wasn't quite sure either way. But just the thought of it was worryingly enticing.\n\nI was kept pinned and ruthlessly teased for quite a while. Lexi eventually came on my cock, which was kind of fun and interesting. It made her lose her rhythm and go nearly still for a moment afterward, but she soon got right back to her slow, excruciating pace rocking back and forth on me.\n\nOnly when she came a second time did Lexi finally get off of me. Her panties were visibly soaked as she turned around and took a look at me.\n\n\"That looks kinda painful,\" she said, gently poking my angrily erect cock.\n\n\"It kinda is,\" I agreed. \"You like doing that to me, don't you?\"\n\nLexi shrugged. \"You coulda said something.\"\n\n\"And that would have worked.\"\n\n\"I dunno. Maybe.\"\n\nHer game stayed paused and forgotten as she settled into playing with me instead. Either she could tell how needy I was, or maybe she just realized how long she'd been grinding on me, because she didn't fuck around too long with me before getting to a solid grip with her hand and jerking me off with smooth, rapid strokes.\n\n\"I was never sure if it was a myth,\" Lexi said as an afterthought. \"Blue balls, or whatever. If it was just a ploy, or actually a problem.\"\n\n\"Probably a little of both. Depending on the situation.\"\n\n\"Probably.\" She looked at me with a slightly raised eyebrow. \"Do your balls hurt too?\"\n\nI actually felt a little embarrassed by the question, silly as that was. \"Ah, yeah. They're actually where the pain tends to be. Kind of an ache to them.\"\n\n\"Like you need to cum really badly?\"\n\n\"Yeah. But, uh, they probably still won't be happy afterward.\"\n\n\"Oh. Teased you too much, huh?\"\n\n\"Kinda, yeah.\"\n\nLexi smiled apologetically. \"You really could have said something.\"\n\n\"Yeah, well... I didn't want you to stop.\"\n\nHer cheeks coloured softly and she ducked her eyes for a moment. \"I see.\"\n\nLexi kept jerking me, getting me close. I was almost there when she abruptly leaned her head in close, opened her mouth, and took part of my cock inside. I didn't last long at all in her warm, smothering mouth, with her lithe, wet little tongue wiggling around on me.\n\nI had a ridiculous amount of cum for her, thanks to the time she'd spent working me up. My balls contracted over and over in a simultaneous huge wave of relief, and a mild repeating pain. It was both wonderful, and not something I particularly wanted to experience again.\n\nLexi swallowed most of my cum, but didn't quite manage all of it as fast as it was coming. She choked a bit toward the end, and had a bit of a messy chin when she sat back up. There was a rogue streak on her shirt where some had dripped.\n\n\"Damn, you did need that.\"\n\nI nodded. \"Yep.\"\n\n\"Feel better?\"\n\n\"Much.\"\n\nI wiped Lexi's chin with my thumb, then offered it to her. She hesitated a second, then sucked it clean.\n\n\"Not a bad taste, at least,\" she said, still eyeing me a bit oddly.\n\n\"Glad to hear it.\"\n\n\"Uh huh. You're just lucky. 'Cause if it had been too gross, I wouldn't have been doing that again.\"\n\nI almost made a smartass comment about how she was implying she would do it again, then wisely decided against it. Too risky. Too much at stake.\n\n****\n\nLexi and I got more comfortable than ever with each other over the next few days. I got to wake up to her playing with my cock a couple times, and she took another cumshot in her mouth after jerking me off again. She still wouldn't let me take her panties off, but I got my hand inside them to rub her off on one occasion, and anything to do with her tits seemed to be fair game still.",
        "Saturday morning found Lexi in my bed, pretty much just as expected. I felt her up some while I slowly came awake, and she pretended not to notice. Also as expected.\n\nI noticed that she had a much baggier shirt on than usual for our weekend morning naughty play time. That didn't alert my suspicions as much as maybe it should have. In the moment I just shrugged and flipped her shirt up to get it off her butt. I went wide-eyed afterward at the realization that she had no panties on underneath.\n\nAll I could do was stare, dumbfounded. I'd expected to get her panties off sooner or later, but I would never have guessed this is how it would go.\n\nI caught the smirk on Lexi's lips despite her best efforts to look forward and ignore me. It helped ground me back in reality. Sure I had my sister's perfect little ass all nicely bared in front of me, and sure it rather pulled the rug out from under my expectations, but it was still Lexi I was dealing with, with all the good, bad, and impishness that entailed.\n\nI ran my fingers reverently up her thigh and over her ass. I kept my touch light and teasing. Her deliberate lack of panties meant that I had a lot more leeway to play with, but it didn't feel right to immediately explore these new boundaries right to their limits.\n\nInstead, I went slow. I savoured the moment. I caressed Lexi's thighs, hips, and back, with special attention paid to her ass. It took concerted effort to hold back, but I kept myself in check. Eventually I got her wiggling under my touch, seeking more. I responded with a gradually firmer fondling of her backside.\n\nI straddled Lexi, settling in comfortably as I started to really lean in and massage her. I didn't have to pretend I wasn't after her butt this time. It was all about her ass. I continued to give some attention to her surrounding areas, but it was all focused on her pert little tushy.\n\nLexi's breath caught a few times, and I got some quiet sighs and gasps from her. My careful progression to fully kneading her ass got some lovely reactions from her, small as they were. She got even squirmier when I spread her ass cheeks and experimented with rubbing my thumbs over the sensitive region between them.\n\nLexi's butthole was as cute and perfect as I could have imagined. She seemed sensitive to it being touched, but I wasn't yet sure whether her twitches were a sign of anxious enjoyment, or of seeking avoidance. For all I knew, she might not really have known either.\n\nUntil she gave me a clearer sign, I carried on rubbing her butthole, reveling in the freedom I had to play. I didn't quite dare try to get a finger in, though I was very tempted. I circled and pressed, but stayed outside. Mixed with grabbing and rubbing her ass, I amused myself just fine.\n\nEventually I settled myself even lower, pushing Lexi's legs apart so I could get right down between them. I caught her glancing back at me, but ignored her. I nuzzled her bum, giving little kisses and licks to her ass cheeks. She tasted good; clean and fresh, with just the slightest distinct flavour of her own that I'd previously tasted on her lips.\n\nAgain I spread her ass, this time for my tongue rather than my fingers. I kept my licks small at first, but they were quick and furious, getting longer and longer with every additional taste of her. Her little wiggles and sighs only encouraged me, fueling my new addiction to my sister's butthole.\n\nLexi abruptly set her controller down and whirled her head around toward me. \"Goddammit, Aiden.\"\n\nI paused, tongue mid-lick along her ass. It slowly retracted. \"What?\"\n\n\"You keep licking my butt.\"\n\n\"Well... yeah.\"\n\n\"You were s'posed to, you know, do other stuff.\"\n\n\"Other stuff?\"\n\nLexi squirmed and looked away for a moment. \"I like when you play with my pussy, alright?\"\n\n\"Sure. Makes sense.\"\n\n\"And I wasn't sure about taking my panties off. 'Cause... I dunno. Just 'cause. But I kinda wanted to, and I wanted you to, like, play with me more.\"\n\n\"Uh huh.\"\n\nLexi balled up a fist. \"And then all you want to do is eat my goddamn ass.\"\n\nI grinned. \"You could have just asked.\"\n\n\"It was obvious!\"\n\n\"Was it? You're kinda lying on your tummy. Your ass is way more visible. And it looks way too good to pass up.\"\n\nShe flushed, a smile fighting for space on her lips. \"Such a pervy brother.\"\n\n\"That's me!\" I slipped a hand between her legs, below where I'd been playing. Her little slit was easy located by touch, and incredibly wet for me already. \"You really could have just asked, though. I'm happy to help.\"\n\nLexi looked like she wanted to retort, but thought better of it, bit her lip, and turned back away from me. She was getting what she wanted. Further arguing, fun as it might be, wasn't really going to accomplish anything.\n\nI got to keep on eating Lexi's butt while rubbing her pussy. I alternated hands, using her own arousal to slick up her asshole, which both made it even more delicious, and allowed me to try probing deeper. She tensed when I tried to poke a finger in, but those reflexive contractions were getting slower and weaker all the time.\n\nShe took a pair of fingers in her pussy much easier. Unlike with her ass, Lexi was happy to get more action there, and was so wet and excited already that I could slip right in. She rocked her hips in a gentle motion, riding my fingers as they slipped deeper inside her.\n\nI went back to aggressively eating Lexi's ass as I felt the change in her. She was quivering with impending release, her pussy gripping my fingers tightly. I lapped at her butthole and finger-fucked her steadily while she moaned and wiggled, and eventually came under my diligent ministrations.\n\nLexi slowly recovered, body going still, breathing returning to normal. I kept up some soft caressing, but mainly just watched her.\n\n\"Better?\" I asked.\n\nShe nodded. \"Yeah. You do alright with some direction.\"\n\nI grinned. \"That's probably what I need. More direction to play with your butt.\"\n\nLexi squealed as I smacked her bum. \"Ow! No, you do that fine on your own. You need direction to do literally anything else, it seems.\"\n\nI used some leftover wetness from Lexi's pussy to push a finger partway into her ass. \"You might have a point.\"\n\nShe glared at me, but in her relaxed, post-orgasm state, she didn't tense at all at the intrusion. \"You've got a problem.\"\n\n\"I've got an obsession.\" I kissed Lexi's butt cheek while gently fingering her ass. \"If you had the view I did, you'd understand.\"\n\n\"If I were a pervy brother maybe I'd understand.\"\n\n\"That too.\"\n\nI finger-fucked her some more, then sat up and tugged my boxers off. I'd pulled a Lexi on myself and gotten all horny and worked up, and was definitely getting to a point of needing to do something about it.\n\n\"What, you think you're gonna fuck my ass now or something?\" Lexi asked.\n\n\"That's the plan,\" I said cheerfully, with no expectation that she'd actually agree. I'd really only intended to grind on her until I came, but as long as she was going to bring the subject up, I'd take the long shot on it.\n\nLexi was quiet a moment, then, \"Well you better damn well use real lube if you're gonna do that.\"\n\nI stopped cold. \"Really?\"\n\n\"Yes really! You think I want you half-assing this?\"\n\n\"No, I mean obviously lube, but... I can really, like, fuck your butt?\"\n\nLexi squirmed. \"Well, you probably need to cum, yeah?\"\n\n\"I do.\"\n\n\"And you have your weird obsession.\"\n\n\"Not that weird.\"\n\n\"So, like, you might as well, right?\"\n\nI tilted my head, considering what Lexi was telling me. \"You want to try it, don't you?\"\n\n\"I'm totally indifferent. It's just so you can-\"\n\nI leaned in over Lexi, accidentally dragging my erection along her butt, and kissed her on the cheek. \"You're still horny and want your brother inside you,\" I whispered in her ear.\n\nShe elbowed me in the tummy and never looked back at me. \"I'll take back the offer. See if I don't.\"\n\nI didn't think she would, but I cut out the teasing anyway. I had to stop and ponder, which apparently was enough hesitation to make Lexi curious.\n\n\"What's the hold up, not sure anymore? I wouldn't have guessed you having second thoughts now.\"\n\n\"Not at all. Just trying to think where I can get lube at this time of morning on a Saturday.\"\n\nLexi stopped everything and slowly turned her whole body to face me. I absently checked out a better view of her pussy, but still had things on my mind.\n\n\"Are you fucking for real right now?\"\n\nI shook my head. \"Not yet, alas.\"\n\n\"You don't have lube?\"\n\n\"Why would I?\"\n\n\"You... I... you...\" Lexi closed her eyes and took a deep breath. \"I can't believe this nonsense.\"\n\nI shrugged, slightly embarrassed now. \"There aren't really a lot of opportunities where I need it, are there?\"\n\nStill with her eyes closed, \"Fine. Top drawer of my dresser. You unprepared fool.\"\n\nI smiled, darted in for a kiss, then headed for her room. \"Thanks, Lexi. You rock.\"\n\n\"Yeah, I know,\" she grumbled as I was on my way out.\n\nI bounded down the hall, cock bouncing in front of me. An errant trail of precum smacked my thigh and stayed there. It was pretty damn stupid to be racing naked and horny for my sister's room when I didn't know for sure there were no parents lurking about, but I didn't much care.\n\nI had to dig through Lexi's panties to find the lube she'd hidden away. I also found a vibrator on my quick sweep, and I suspected there might have been more to be found. However, it wouldn't be right to pry into her private things just for my own curiousity. And, more importantly, her ass was waiting for me. I slammed the drawer shut and sprinted back to her.\n\nLexi was waiting for me. Not just still where I'd left her, but specifically awaiting my return. She'd ditched her shirt and adopted a face down, ass up position on my bed, presenting herself beautifully for me. In spite of my haste, I had to stop and just admire her for a moment.\n\nI approached her much more calmly than I felt. I felt a full body ache of need and desire for my beautiful little sister. The adoration I had for her in that moment manifested physically inside me, making my actions wooden and drawing me in like I was under her thrall.\n\n\"You put your game away and everything,\" I said softly in attempt to keep some control. \"How romantic.\"\n\n\"You've been too distracting. That's all. I can't play properly with you... doing stuff.\"\n\n\"Uh huh. I'm sure that's it.\"\n\n\"It is!\"\n\n\"I believe you.\" I knelt behind her on the bed and casually ran a pair of fingers along her pussy. \"I'm sure you're crazy wet for totally unrelated reasons.\"\n\n\"Ugh. I'm gonna regret this, aren't I?\"\n\n\"You most certainly will not.\"\n\nLexi was ready for me, thanks to the work I'd put in already, but I didn't risk ruining all that by going to fast. I got her butt nice and lubed up first, spreading it with my fingers and making sure to get inside her some too. Her hips rocked back a bit even just at that gentle penetration.\n\nGrinding on her with my cock really got her going. She could protest all she wanted, but her pretense fell apart pretty quickly as I rubbed back and forth across her butt crack, teasing her little hole. She got all wiggly and made some cute, involuntary noises of desire and impatience.\n\n\"You gonna do it already or what?\"\n\nI smiled and spread her butt one last time to get a good look, then pressed the head of my cock to her butthole. \"So impatient.\"\n\n\"Yeah, well, I've got things to do today. Haven't had breakfast even, and I'm getting... hungryyy...\"\n\nHer sentence trailed off into something like a surprised moan. Her ass took me even easier than I'd hoped, and I was inside her before she realized it. I stopped immediately, just in case, but I didn't need to worry.\n\n\"Oh wow,\" Lexi said. She clutched at the sheet beneath her, then released it. \"That's it?\"\n\n\"Um... no? There's more.\"\n\n\"No, but I mean... I thought it was gonna hurt a little or something at first.\"\n\n\"You were pretty well warmed up.\"\n\n\"True. Pervy brother.\"\n\n\"Guilty.\"\n\nLexi bit her lip, then nodded to herself. \"You can go deeper.\"\n\nI held her hips and gently pushed forward, then pulled back, then forward just a little bit more. She was tight, but not so much that I was worried about hurting her. I'd already seen that she could take my width. It was just a matter of working the rest of my cock into her snug little butt.\n\nLexi had her face turned on my bed such that I could see half of it. That was enough to watch the twitches of her lips and the way her visible eye rolled back when I sank deeper into her ass. I loved seeing the effect I was having on her, even while experiencing inverse but equally amazing sensations.\n\nI expelled a huge sigh of contentment as I bottomed out fully inside my sister. Her butt had taken everything, the entire length of my cock, right down to my balls. It was so warm and cozy in her ass, and the way she gripped me when I pulled back was like she didn't want to let me go.\n\n\"And you thought you'd hate this,\" I said.\n\n\"I never said that.\" Lexi bit her lip and clenched her hands into tight fists as I thrust a little harder. \"And I definitely don't hate it.\"\n\n\"I knew you wouldn't.\"\n\n\"Sure you did.\"\n\nI got into a rhythm fucking Lexi's ass. I held her hips steady, sometimes kneading and spreading her butt cheeks, but mostly just keeping her firmly in place for easy thrusting. She was very helpful about it, holding nice and still, only moving just a little to rock her hips back in time with mine. She could downplay it if she wanted, but there was no question she was loving this as much as I was.\n\nLexi closed her eyes and arched her back even more somehow, while always keeping her bum up in the air at a constant height. She alternated biting her lip and letting out soft moans and sighs. I was truly glad she liked it. It would have sucked if she didn't, and I wouldn't have been able to enjoy myself. More than that, the pleasure she got, everything I could see and feel from her, it all made it that much more fun for me. Getting to bury my cock in my sister's tight ass was physically amazing by itself, but getting that positive feedback from her amplified it to ridiculous levels.\n\nIt was undoubtedly the best morning ever. I'd already had the chance to play with Lexi for a while, to explore her ass in a way I wouldn't have expected upon waking up, and now to leisurely fuck her up the butt and further my naughty claim on it. I couldn't ask for anything more than that, excepting, possibly, more time.\n\nIt was just as well I couldn't last forever. If I'd gone too long, I would have run the risk of wearing Lexi out, or chafing her butt and marring the experience. As much as I wanted to pound her ass for hours, I couldn't resist its magnificence nearly so long, nor would it have been ideal in the grand scheme of things.\n\nI kept fucking her until the very end, kept right on savouring every moment of being in my sister's ass until I came inside it. There was a brief period of an even more magical experience, the bliss of cumming added to everything else, then came the gradual fading away.\n\nI stayed inside Lexi for a bit afterward, even to the point where I could feel myself softening in her, then eventually pulled out. I lay down next to her, staring at nothing. She stayed right where she was a moment longer, then dropped flat to the mattress, curling up slightly while facing me.\n\n\"You really like making messes,\" Lexi said softly.\n\n\"Didn't make a mess. Very neat and clean.\"\n\n\"Inside my butt's a total mess. Don't think I didn't feel that.\"\n\nI grinned lazily. \"But as long as you keep it in there, it's not hardly a real mess, is it?\"\n\nShe snorted. \"You'd like that, wouldn't you? Me walking around all day with a butt full of your cum.\"\n\nA thrill went up my spine. \"Oh my god, I so would.\"\n\n\"Naughty brother.\"\n\n\"Bad sister.\"\n\nLexi grinned back at me, then slipped an arm under her head and closed her eyes. I watched her a moment, then rolled my head to face the ceiling without really focusing on it. Her breathing was barely audible, but drew my ear as surely as an explosion would have. When I closed my eyes too, all I could see was her.\n\n\"Didn't you say you were hungry?\" I asked.\n\n\"Yeah. I am. I guess. Just maybe not that hungry.\"\n\n\"No?\"\n\n\"Well... I dunno. I'll get there. Eventually.\"\n\nI cracked an eyelid and peeked at her. Still just lying there. Still naked. Full of my cum. No sign of wanting to leave.\n\n\"Sure,\" I said. \"Eventually.\"\n\nWe lazed around together for a while afterward. I got pretty hungry too, but I just didn't want to move. It wasn't even a matter of wanting to play with Lexi more, or to stare at her enticingly nude body, but rather just being with her, sharing our mutual secrets without having to say a word, and basking in her proximity.\n\nWe eventually got dressed and pretended like we were functional humans, but my day had begun and ended with Lexi first thing in the morning. The rest was a wash, except for the little thrill I got every time I saw her and thought of my cum still in her butt. I assumed she didn't walk around with it all day, but I actually wasn't sure about that.\n\n****\n\nLexi and I kept messing around the next few days. Nothing on Earth could have stopped us, I think, other than perhaps a very large wall placed between us.\n\nWe spent a lot of time casually misclothed together, and hands sneaking places they shouldn't was practically becoming 'hello' for us. I didn't actually get to fuck her butt again right away. As much as she'd loved it the first time, she wasn't giving me signals that she wanted it again, let alone actually telling me so. I still ate her ass out a few times and rubbed my cock on it in case that would work, but it didn't go any further. Which was all fine with me. I was pretty sure it would happen again, and I was having lots of fun in the meantime.\n\nI was chilling in my room one evening toward the end of the week when Lexi approached me differently than I was used to. She'd been getting to be quite well versed in luring me in when she wanted attention. Not that she'd ever truly struggled in that area, but since she'd begun to make a habit of showing off her tits or ass, or sometimes both, she didn't run hardly any risk of being ignored.\n\nThis time was different. I was zoned out, reclining in my chair and playing a game, and instead of stretching out on my bed and 'accidentally' flashing me a little something, she sat firmly cross-legged on my bed, hands in her lap, staring fixedly at me until I acknowledged her presence.\n\n\"If this is you wanting to play, you're picking an awfully strange way of going about it,\" I said.\n\n\"It's not,\" Lexi said.\n\n\"Then what?\"\n\n\"I hurt my butt.\"\n\nThat got my attention. I paused my game and turned for a proper conversation. \"From when we-\"\n\n\"No. I had maybe a tiny little ache after that time.\" Lexi flicked her hair. \"So I thought, like, no big deal, right?\"\n\n\"Um... I guess?\"\n\n\"And I just wanted to experiment a little.\"\n\n\"Uh huh.\"\n\n\"And it fucking hurt!\"\n\n\"Oh. Well that can happen. You used lube?\"\n\n\"Oh course I did! Why would I not- nevermind. Just, like, how come it didn't hurt when you did it?\"\n\nI cocked my head. \"Well, you remember how I warmed you up for basically an hour?\"\n\n\"You licked my butt like a pervy brother, sure.\"\n\n\"I mean, I assume you didn't warm up nearly so well this time.\"\n\n\"Is that all?\"\n\n\"Well... yeah.\"\n\nLexi shook her head. \"But it was so easy last time.\"\n\n\"Yes, because-\"\n\n\"I know, I know. Your weird obsession had some value. I get it.\"\n\nI wasn't sure if I'd won or not, but I decided that I probably had. \"Good. Glad to hear it.\"\n\nI went back to my game, but it turned out Lexi wasn't done with me yet.\n\n\"It still hurts,\" she said.\n\n\"Your butt?\"\n\n\"Yeah.\"\n\n\"Oh. Sorry.\"\n\nThere was a pause.\n\n\"It felt nice when you licked it,\" Lexi said in a hinting kind of tone.",
        "\"Did it? I thought it was just a weird obsession thing that I-\"\n\n\"Yeah, yeah. I'm admitting it, alright? Would you just please, like... you know.\"\n\nI smiled, unable to help it turning into a bit of a smirk. \"Would you like me to make it feel better?\"\n\n\"Yes please,\" she mumbled.\n\n\"Well you've come to the right place.\" I held up the controller. \"You want to play?\"\n\n\"Sure.\"\n\nWe got situated into what was definitely one of my favourite positions. Lexi stretched out on her tummy, naked from the waist down, focus firmly on her game until I did something to change that. I nestled in between her legs, getting all the access to her sweet little ass that I could ever want.\n\nLexi's poor butthole was a bit tender. After some initial testing, I kept my fingers well away, and soothed it with the very gentlest of licks and kisses. She was on edge at first, but began to relax under my dedicated care.\n\nAs she was salved by my tongue and saliva, some of the sting seemed to gradually fade away. I got firmer and deeper with my tonguing, really spreading her cheeks and getting my face in there. Her ass was so damn addicting, I couldn't have maintained a delicate, professional touch if I'd wanted to.\n\nLexi was enjoying herself too, now that I'd taken care of her initial pain. She was getting all wiggly the way she did when I made her horny but she didn't want to show it too obviously. When I checked her pussy, it was all wet and ready for fun.\n\nI fingered Lexi while eating her ass, getting her all worked up. Of course, I got myself pretty horny too. I eventually had to take a quick break to ditch my bottoms and let my hard cock run free.\n\nIn the brief time I had my back turned, Lexi had rolled over and was watching me as I turned around again. My gaze swung from her face down to between her immodestly spread legs, then back again. I shrugged and repositioned myself to eat her pussy instead of her ass. I was flexible when I needed to be.\n\n\"You got your cock out,\" Lexi said after a few minutes of letting me lick her wet little slit.\n\n\"You noticed.\"\n\n\"What do you think you're gonna do with it, hm?\"\n\n\"Nothin'. Was getting uncomfortable, is all.\"\n\n\"Uh huh. Well you can't fuck my butt.\"\n\n\"I know.\"\n\n\"It's still sore.\"\n\n\"I'm aware.\"\n\n\"So you can't.\"\n\n\"Gotcha.\"\n\nI licked Lexi some more. I had a feeling she wasn't finished, but she tasted really good, and I was enjoying myself. She'd say whatever it was in her own time.\n\n\"It'll just have to be my pussy,\" she finally said.\n\nI finished a last lick almost comically slowly, then stared at her. Fuck her pussy, huh? I couldn't very well say no to that. I'd been ready for the usual grinding on her, or maybe getting jerked off at some point. This was better. Far better.\n\n\"Well, if it has to be,\" I said with all due solemnity, \"who am I to argue?\"\n\n\"Who indeed?\" Lexi murmured.\n\nMy licks transitioned upward into a soft trail of kisses and nuzzles leading to Lexi's mouth, which I gave some extra attention. Kissing her properly put my cock just about level with where it needed to be, which was a double bonus.\n\nThis was probably what she'd been angling for right from the start. The way she bucked her hips to rub all over my cock, the way she kissed me back, there was no way her suggestion had been anything like as casual or out of necessity as she'd wanted it to sound. Taking things even further back, I could only assume she'd been in a particularly horny mood anyway if she'd tried fucking her own ass in the first place. I'd have to subtly remind her at some point that that was my job.\n\nI started grinding back against Lexi, needing more of her rubbing on my cock. She was so slick against me, so tantalizing. Her pussy was also a much more natural fit than her butt, in some ways. My cock could practically navigate on its own, Lexi's body was doing such a fantastic job of coaxing it in.\n\nI slowed my movements, but let our bodies do what they wanted to do. My cock found her entrance and the head slipped inside just as smoothly as if we'd done this thousands of times before.\n\nLexi clasped me tightly and tried to wiggle me deeper, but she was stuck beneath me and didn't have the right leverage. I kissed her firmly as I obliged and thrust into her.\n\nHer pussy accepted me eagerly. It was tight and wet, like her ass in some ways, very different in others. Regardless of the minutiae, it was a simply wonderful feeling to slip deeper and deeper, and eventually bury my cock inside. It felt so right, so very amazing.\n\nI pulled my head back enough to look at Lexi's face. She was the reason. Sure she felt good physically just goddamn everywhere I'd touched her, tasted her, and been inside her. But that wasn't all of it. It was that she was Lexi. My sister. The person I trusted and knew best of anyone in my life. The one I spent so much time with and still never got tired of. Sex with her was on a whole other level from just the physical act of it.\n\nI could only hope she understood she was spoiling me. That every new experience we shared was another step that couldn't be taken back. Just as I had become helplessly addicted to her ass, so to could I develop other obsessions. From just the feeling of her pussy gripping the full length of my cock, I was pretty sure I'd found a new one.\n\nAt the same time, it was quite possible Lexi knew exactly what I felt with her. Her fingers were digging into me enough to hurt, her eyes were rolled back, and her mouth open in either a pant, or just waiting for me to kiss her again. Her oft feigned indifference or dismissiveness of my desire for her had always clearly been a game of sorts, but I hadn't considered that part of her coyness might have been an emotional layer of defense. A way of maintaining control not just over me, but over herself as well.\n\nOr maybe it was just fun, and I was reading too much into things.\n\n\"You're staring,\" Lexi chastised lightly.\n\n\"Sorry. Couldn't help it.\"\n\n\"You have a bit of a problem with that sort of thing, don't you?\"\n\n\"Around you, sure.\"\n\nLexi rolled her eyes, but her lips betrayed a smile all the same. I kissed her and rocked my hips back and forth, making her moan into my mouth. She grinded back on me even more energetically, as well as squeezing her pussy around my cock and doing just amazing things down there.\n\nWe were a little uncoordinated and still figuring things out, but I enjoyed every second of it. Every move, every touch, whether dextrous or fumbling, held its own special magic. Every meeting of our eyes in between kisses contained some small communication.\n\nLexi tugged at my shirt, forcing me to move even less smoothly for a moment while I helped her get it over my head. I responded by pushing her top up over her breasts and leaving it there. I didn't need it off, just out of the way. Her hands clutched at bare skin now, sometimes rubbing over my chest when there was room. I fondled her tits right back, then lay closer to her so that our chests could press together.\n\nI fucked Lexi harder, getting just as much an increase in vigour from her as she matched my energy at every step. I wanted more, and harder, and deeper. If anything, her desire might have been all the greater.\n\nIn a sense, it was a bigger thing for her. It was probably a more significant difference for her between me being in her butt or her pussy. If I felt those exquisite little differences on my end, I could only imagine how she experienced them.\n\n\"You're gonna make a mess again,\" Lexi whispered as she nipped at my earlobe.\n\n\"Eventually, sure.\"\n\n\"Inside me.\"\n\n\"Well-\"\n\n\"Bad brother, always messing me like that.\"\n\n\"I could cum somewhere else.\"\n\n\"And make me clean it up? Rude.\"\n\nI smiled, then turned my head to meet her mouth, pulling my ear away from her and replacing it with my lips. I nipped back at her bottom lip as revenge for her toothy excursion.\n\n\"I could cum in you again,\" I said.\n\n\"Bad brother.\"\n\n\"But only if you want me to.\"\n\nShe looked at me, a faint wrinkle on her brow, a slight pout on her lip. I held her gaze evenly, or as evenly as I could while constantly thrusting into her tight little pussy.\n\n\"Please?\" she said.\n\nI nodded, kissed her again, and lost myself in her, in so many ways.\n\nI didn't worry about holding back from cumming. Not if she wanted it. I just let it happen naturally.\n\nLexi's nails dug into my flesh as we came. She buried her face in my neck. My cum exploded inside her, into her already soaked pussy, making just the sort of mess she'd alluded to. The mess she wanted.\n\nIf I'd thought cumming in her ass was special, this was something else again. I wasn't sure that I preferred one or the other from a physical standpoint, but emotionally I knew this meant more.\n\nI rolled to the side, Lexi followed, clinging so close that I didn't slip out of her right away. We held each other in a warm, loving embrace, and I slowly softened until my cock slid out of her on its own. It was a bit gooey, but most of my cum remained inside her.\n\n\"It's better when the mess is inside,\" Lexi murmured, slipping a hand between her legs and cupping her pussy.\n\n\"Is it?\"\n\n\"Mmhm. Tidier.\"\n\nI snorted softly. \"Sure. Tidy. That's what it is.\"\n\n\"And secret.\"\n\n\"Secret?\"\n\n\"Yeah. No one knows. But I do. I can feel it.\"\n\n\"Tidy and secret, huh?\"\n\nLexi smiled and kissed me. \"Don't look all befuddled. I like having you cum in me, ok? 'Cause it's yours, and 'cause it's naughty.\"\n\n\"But mostly because you don't have to clean up right away, right?\"\n\nShe giggled. \"Sure, yeah, that's the main thing.\"\n\n\"Thought so.\" I wrapped my arms around her, nestling my chin against her shoulder. \"I love you,\" I said.\n\n\"Love you too, Aiden. And your perviness. And messes.\"\n\n\"I'm serious.\"\n\nLexi pulled back to look at me. She sighed gently. \"Me too. Really. But, like, we can't date or anything, right? You remember that?\"\n\n\"Of course I do.\"\n\n\"You're my brother.\"\n\n\"Got it. Doesn't mean I can't love you.\"\n\n\"Siblings can love each other.\"\n\n\"And kinda wish you were my girlfriend.\"\n\nLexi pursed her lip. \"See, you're pushing it.\"\n\n\"Just saying.\"\n\n\"Yeah. I know.\" She shrugged. \"But I'd take you being my brother over my boyfriend any day.\"\n\n\"Really?\" I thought about it. \"Yeah... yeah, you might be right.\"\n\n\"Of course I am.\"\n\n\"Only 'cause you're a pervy sister though.\"\n\nLexi mock-gasped. \"Am not!\"\n\n\"Are too.\"\n\n\"I'm just... trying to deal with your perviness. You've corrupted me.\"\n\n\"Oof. That's no good. Guess I better stop cuddling naked with you, and licking you in fun places, and making messes, and-\"\n\n\"Whoa, now, let's not go crazy here.\"\n\n\"No, no, you've got such a good point.\" I extricated myself from Lexi's clutches and started gathering clothes. \"I need to be much more prim and proper. Set a good example.\"\n\nLexi sat up. Her shirt slipped partway down over her tits. \"Dammit, Aiden, come back to bed. You can lick me all the fun places you want.\"\n\n\"Ooh, tempting. But I actually gotta take a wicked piss.\"\n\nLexi collapsed backward, shaking her head. \"Ugh. Changed my mind. And here I thought you had class.\"\n\n\"Really? Maybe I do. Everyone pees, you know.\"\n\n\"You don't gotta say it and ruin the mood like that.\"\n\n\"There'll be other moods.\"\n\n\"Will there though?\"\n\n\"I'm pretty confident.\"\n\nMy confidence was well justified, too. By the time I got back, which wasn't all that long, Lexi had her shirt pulled down and was lying on my bed playing Zelda. She remained fully bottomless, long bare legs and pretty little bum all exposed and waiting for me, not to mention the pussy full of my cum that I knew she hadn't done anything about.\n\nI wasn't quite in the mood to really start something again just yet, but I was happy to sit and play with her while she played her game, and kind of just see what happened.\n\n****\n\nLexi and I were more inseparable than usual over the next little while. It was getting to a point where we almost couldn't be in the same room without one of us sneaking some naughty feels. If we were in my bedroom, or otherwise confidently alone, those sneaky feels graduated to fondling, making out, getting half or fully naked, and various forms of sex.\n\nIt was pretty great, essentially.\n\nLexi had become less patient about waiting for me, especially in the mornings. I started waking up to find her already slowly stroking my cock when one of her hands was free. Once she figured I could take over naughtiness, she'd usually adopt her more passive, stretched out on my bed pose.\n\nIt probably shouldn't have surprised me when I woke up one weekend morning and found she'd been less patient than ever. As I cracked my eyes and tried to sort out my bleary senses, I found that what I was feeling was Lexi already astride me and grinding gently with my cock firmly buried in her pussy. She was focused on her game, not fucking me very hard at all, but moving enough to immediately place it as the best wake up call of my life.\n\nOn that occasion, I didn't take over. I didn't make any move to. Nor, indeed, did she seem to care if I did. She had her hands and attention free, and I got to wake up as slowly and luxuriously as a boy could ever ask for.\n\nWake up sex got worked into Lexi's rotation, much to my delight. She still did a lot of casual jerking off, bottomlessly waiting for me to wake up and play with her, and on one notable occasion when I'd been too deep a sleeper, actually sitting firmly on my face and not getting off until I licked her out.\n\nAll of that was on top of whatever other games we felt like playing at other times. Those were great too, but mornings with Lexi had taken over even more a special place in my heart than they'd occupied before. She made waking up fun.\n\nQuite surprisingly to me, it was Mom who made me think harder about Lexi and me. Not that she meant to by any means. In fact, she started off my scaring the shit out of me.\n\n\"I think Lexi's seeing someone,\" Mom said.\n\nLuckily, she wasn't looking at me, as I'm sure my face was a horrifying mix of confusion, fear, and jealousy. I forced myself to rein it in and get more information before I panicked properly. I wasn't even sure if I should panic because Mom was suspicious of us, or because Lexi was interested in someone else.\n\n\"You think so?\" I asked.\n\n\"You haven't noticed how different she's been?\"\n\n\"Uh... no? She's just Lexi.\"\n\n\"Maybe you don't see it. But lately she's just been so... happy, I guess. In good moods all the time.\"\n\n\"Sometimes that just happens.\"\n\n\"To teenagers?\"\n\n\"Uh...\"\n\n\"She's kind of reminding me of when I met your dad.\"\n\nI flinched. \"Ok.\"\n\n\"I wonder if she's in love.\"\n\n\"Well-\"\n\n\"First love.\" Mom sighed. \"So beautiful, so fragile.\"\n\n\"You're freaking me out a little, Mom.\"\n\n\"Sorry.\" Mom ruffled my hair affectionately. \"You're not seeing anyone, are you? I shouldn't just talk about your sister, I guess.\"\n\nI shrugged and hoped it looked casual. \"Not as such.\"\n\n\"No? And you don't know of anyone Lexi's seeing?\"\n\n\"She hasn't told me about any boys at school or anything,\" I said carefully.\n\n\"Maybe not, then,\" Mom said thoughtfully. \"Could just be a big crush or something too, I suppose. But if I had to put money on it, I'd say she's really into someone. Someone she hasn't talked about.\" She paused. \"You don't think it's a girl, do you? And she doesn't want us to know?\"\n\nI almost laughed at how wrong and right she was at the same time. Instead, I put a hand on her shoulder and somehow maintained composure. \"Mom, she might just want her privacy. She doesn't tell any of us everything.\"\n\n\"Yeah, maybe.\" Mom pouted. \"I want to know what's going on with her, that's all.\"\n\n\"I know, Mom. But teenagers, right? What can you do?\"\n\nMom tilted her head. \"I know you think you're being funny, but just wait until you have a couple. See how you like it.\"\n\n\"I plan on not having any. Saves the hassle.\"\n\n\"Uh huh. We'll see.\"\n\nI patted Mom patronizingly on the head. \"Sure we will.\"\n\n\"Things happen, Aiden.\"\n\nI thought of Lexi, my little sister, the girl I was in love with, having sex with every day, and wanted to spend all my free time with. The one girl who should never have been in the running for any of that.\n\n\"Now that I believe,\" I mumbled absently.\n\n****\n\nIn all the years Lexi had been sneaking into my room first thing in the morning, I didn't think I'd ever returned the favour. I'd never had a reason to, for one, and she was so consistently an earlier riser that I wouldn't have had much of a chance anyway.\n\nIt took a very deliberate effort to wake up early enough on the next available Saturday to beat her to it. It was an ungodly early hour for a weekend, but hopefully worth it.\n\nNo one else would be up yet, so I had no fears about padding over to Lexi's room in just my boxers. It looked suspicious as hell, but I had to be seen for that to matter.\n\nLexi was still asleep, which was good, because the effect would have been somewhat ruined otherwise. I closed the door, approached her bed, and just watched her sleep for a moment. Something I so rarely had a chance to witness.\n\nI painstakingly pulled her covers out of the way without disturbing her. She lay on her side, which was inconvenient, but was made up for by her not wearing any panties. I smiled at her half-naked, comfortably dozing form in the dim light. I couldn't imagine why she'd think it would come up, but I was about eighty percent sure her bottomlessness was for my potential benefit. That or she'd really started to enjoy dressing that way thanks to our messing around.\n\nI had no idea how to urge my sleeping sister onto her back without waking her, other than just try to physically move her and hope for the best. Some careful, gentle pressure eventually did the trick. I thought she was going to wake up once she'd rolled, but after waiting and watching for a couple minutes, I decided I'd either gotten away with it, or she was better at faking sleep than I was, and that seemed unlikely.\n\nWith all the tricky parts out of the way, I got to savour the most purely fun phase of my plan. For the first time I got to wake Lexi up by playing with her instead of vice versa. I felt her up a bit through her shirt, but that wasn't what I was really after. No, I wanted her pussy.\n\nLicking Lexi out was one of my favourite things anyway. Sure I didn't get a reaction from her this time, but I often didn't while she was awake either. In this case, I had the bonus anticipation of not knowing exactly when she'd wake up, that thrill of switching roles, and the exciting uncertainty of not being entirely sure what she'd do about it.\n\nI licked and sucked gently on Lexi's pussy, though with increasing fervour as the taste of her and my own naughtiness got me all horny. Even before she moved, I could tell when I'd finally awakened her. It was my first chance to understand what she'd meant about knowing when I was awake. There was something just simply different about her when the change happened.\n\n\"What are you doing up so early?\" Lexi murmured, her fingers finding my hair and running through it lazily.\n\n\"I thought that was obvious.\"\n\n\"Just couldn't wait, huh?\"\n\n\"Kinda that. Kinda other stuff.\"\n\n\"Oh?\"\n\nI kept rubbing Lexi, teasing her clit with my fingertips while we talked. \"I thought it needed to happen.\"\n\nShe gave me a sleepy, crooked smile. \"I'm a little surprised you didn't take the chance to do something... naughtier.\"\n\n\"If you'd taken to long to wake up, maybe.\" I kissed the inside of her thigh. \"But then, I'd feel a little weird about taking too many liberties.\"\n\n\"Well don't feel bad. Take liberties.\"\n\n\"You weren't wearing panties on purpose, huh?\"\n\n\"For almost two weeks now.\" She sighed. \"Always hopeful.\"\n\n\"I'll have to try harder in future.\"\n\n\"Yes. You must.\"\n\n\"So if you woke up and I was inside you...\"",
        "Lexi bit her lip. \"Yes please.\"\n\n\"Good to know.\" I kissed her just above her clit. \"Wasn't sure.\"\n\n\"Really?\"\n\n\"Well... I dunno.\"\n\n\"Because you seemed fine waking up inside me. Tryin' to be all chivalrous or something?\"\n\n\"... maybe.\"\n\nShe ruffled my hair affectionately. \"You goof. You know chivalry isn't what I'm after.\"\n\n\"No. I suppose there hasn't been much call for it, has there?\"\n\n\"Not really, no.\"\n\nI went back to licking Lexi, already planning in my head what I might do next time I could force myself to get up before her. There were interesting possibilities if I truly didn't have to worry about her being upset. Not that I'd believed she would be, but confirmation was nice.\n\nLexi cooed and wriggled as I licked her more and more aggressively. I loved eating her out, and I loved making her cum on my tongue even more. Now that the novelty of licking her awake was fading, I wanted to finish her off and put a nice little cap on our early morning naughtiness.\n\nShe eventually came for me, giving me a last messy taste of her delicious pussy as her orgasm flooded my lips. I licked her gently back down to earth, then crawled up to cuddle with her.\n\nI spooned in behind Lexi as she rolled onto her side. I was so hard for her, my erection all snugly pressed into her butt and demanding not to be ignored. There was going to be more fun, but I had something to ask her first.\n\n\"I could get used to this,\" Lexi mumbled contentedly.\n\nI slipped a hand under her shirt, pushing the material partway up her tummy as I located her tits by feel. \"Nice, isn't it?\"\n\n\"Mmhm.\"\n\nI kissed her shoulder. \"Lexi?\"\n\n\"Yeah?\"\n\n\"I've been thinking.\"\n\n\"That's dangerous.\"\n\n\"It really is. I love you.\"\n\n\"I know.\"\n\n\"I want you to be my girlfriend.\"\n\nShe tensed. Her response was slow in coming this time. \"Aiden, you know we can't. I can't date my brother.\"\n\n\"Who said anything about dating?\"\n\n\"You literally just did.\"\n\n\"I said I want you to be my girlfriend. I want to be together. We don't have to date.\"\n\n\"How exactly does that work?\" The amusement was thick in her tone.\n\n\"You'll like it, I think.\"\n\n\"Oh yeah?\"\n\n\"Mmhm. Here's my cunning plan.\"\n\n\"Tell me.\"\n\n\"We'll be together, yeah? But we won't tell anyone. We'll be super sneaky about it.\"\n\n\"That's... already what we do.\"\n\n\"Exactly. So it'll be easy.\"\n\n\"Then what's the difference?\"\n\n\"'Cause then we have a bonus secret. And it's official. Secret, but official.\"\n\n\"Official, huh?\"\n\n\"Yes.\"\n\n\"You know you'd be stuck with me then.\"\n\n\"When have I ever not been?\"\n\n\"And you wouldn't be allowed to see other girls.\"\n\n\"Why would I want to?\"\n\nLexi shrugged. \"Well, you went after your own sister. You're obviously horny and out of control.\"\n\nI tickled her side where she was vulnerable, making her squeal and try to roll away. \"You know that's not what happened.\"\n\n\"Do I?\"\n\n\"You do.\" I had to wrestle her a bit to get on top of her, pin her down, and kiss her properly. \"I honestly love you, Lexi. Just you. I don't care if no one else knows. Only we have to know.\"\n\nShe chewed on her lip, eyes searching for clues in mine. \"I do like it being our secret,\" she said.\n\n\"I thought you might.\"\n\n\"And it doesn't really change anything.\"\n\n\"That's my point.\"\n\nLexi booped my nose. \"Ok. You win. You can be my boyfriend.\"\n\n\"Actually, you're my girlfriend.\"\n\n\"Nuh uh. You're my boyfriend. I called it.\"\n\n\"Fine.\"\n\nLexi nudged my shoulder, dislodging my arm and allowing her to scoot out from under me. Her top didn't cover her pussy when she stood up, which was very distracting.\n\n\"Good. Got that settled. That was too much work this early in the morning.\"\n\n\"Tell me about it.\"\n\nShe flipped her hair casually and turned toward the door. \"I'ma go play some Zelda. You wanna watch?\"\n\nI was already staring at her swaying butt as I followed behind her. \"Just watch?\"\n\n\"Well... maybe you can find something to occupy yourself with.\"\n\n\"Yeah. I think maybe I can.\"\n\n****\n\nIt took me a while to sneak in on Lexi again. I tried my best a few times, but now that she knew and could anticipate, it just wasn't happening. She was as disappointed as I was.\n\nThe trick that ended up working was to do it on a weekday. She wasn't expecting that, and so was in a nice, deep sleep when I padded into her room at perhaps the ungodliest hour I'd ever been awake. Or rather, that I was awake after having slept, rather than before I'd even gone to bed.\n\nI was still careful and silent, since I'd been foiled before by Lexi being easily disturbed when she was expecting something. Even though I thought I'd beaten her this time and she'd be sleeping normally, I didn't want to ruin everything by being overconfident. I needed my payoff for all this inhumane early rising nonsense.\n\nLexi was bottomless, as she'd been every night for weeks, so far as I could tell. Her dedication to maybe getting some action in her sleep was both hot and kind of adorable.\n\nI'd been hard before even entering her room, just from the thought of what was coming. When it came to Lexi, it didn't take much to get me going. Now, alone with her, staring at her pretty pussy while she dozed unaware, I couldn't have been any more aroused. This was it. What I'd been striving for.\n\nI spread Lexi's legs as gently as I could, exposing her sweet little pussy for a nice, soft tongue bath. I loved licking her anywhere that was on offer, it was very nearly my favourite activity with her, and it was all the hotter doing it while she was asleep.\n\nAs much as I enjoyed the thrill of waiting for her to wake up to find my brotherly tongue buried in her, I very much hoped that wouldn't happen this time. I just wanted to get her all soaking wet and ready for more. She reacted so nicely to my licking, even when she didn't know about it. Her pussy knew what was up without conscious instruction at all.\n\nGetting inside my angelically snoozing sister was trickier than licking her. I could be gentle and soothing with my soft, wet tongue, but my cock was hard and needed to go much deeper.\n\nIt was a struggle of self-control to push into Lexi so very slowly. No kissing, no fondling, no putting any unnecessary weight on her. Just sliding into her waiting pussy, barely breathing, and filling her up without waking her.\n\nI had to fuck her so slowly, so gently. It was the kind of exquisite torture Lexi liked to visit upon me, only I was doing it to myself this time. I had good cause, sure, and I never doubted it, but I so badly wanted to pound the shit out of her and make a nice cummy mess. That would certainly wake her up and would ruin all my efforts, but boy was it tempting.\n\nI was actually sweating and feeling some ache in my muscles by the time I got close. Despite not going hard or fast in any respect, it was a pretty physically intense time. Having to hold a careful position while giving steady, gentle thrusts into my sleeping sister was a workout all its own.\n\nAnd it was all so very worth it in the end. I gave a happy, successful sigh than turned into a moan, my cock finally pulsing and spurting cum, finishing the sexy task I'd assigned myself.\n\nLexi's breathing changed and her eyes fluttered open as my cum continued to flood into her. It only took a second or two before she broke out into the hugest grin I'd ever seen. She stretched out, lazily accepting the last of my cum while waking up.\n\n\"Almost had a perfect run,\" I said, smiling back then giving her a good morning kiss.\n\nShe shook her head. \"No, you nailed it. That was perfect.\"\n\n\"You think?\"\n\nLexi pulled in for another kiss. \"I know. Feeling that last little bit, knowing what you've been up to...\" She bit her lip and looked deep into my eyes. \"It was amazing. Thank you.\"\n\nWe kissed and snuggled some more, then I eventually made my way back to bed since I still had a possible hour or two of sleep I could sneak in before having to actually start my day. I probably should have guessed what Lexi had in mind, but I was running a bit of a sleep deficit for the night and wasn't quite thinking everything through.\n\nWhen I awoke again later on, it was with my cock firmly ensconced in Lexi's ass. Not only had she managed not to injure herself playing with her butt this time, but she'd fully buried me inside, and was grinding on me to such a beautiful wake up call. The sort of wake up that she was much more practiced at giving me than vice versa, though not one that she'd ever done with her ass quite like this.\n\nLexi was facing away from me, giving me such a beautiful view of her grinding her bum around on my cock. She bounced on it a little, but only softly until she knew I was awake, at which point her bouncing got a whole lot harder and more fun.\n\nHer hand was busy on her pussy, probably working her clit if I had to guess, while she rode me to my second orgasm of the morning. She came before I did, but there was barely a stutter in her rhythm as she kept anally milking me for the sexy mess she was after. Her bum eventually got a nice, big load to match the one in her pussy, which delighted her to no end, judging by the smile on her face when she finally turned around.\n\nWe didn't really have time for cuddling at this point in the morning. We were running ourselves pretty late and needed to get moving. I took the time to appreciate Lexi pulling a fresh pair of panties up her legs and snugging them cozily to her messy holes, but then I really had to get moving.\n\nLexi wasn't even done yet. I was in the bathroom trying to get ready when she waltzed in like she hadn't a care in the world, dropped to her knees, and scooted as close between me and the sink as she could. She yanked my boxers down with no preamble at all, the only clothing I'd yet managed to don, and started sucking on my soft cock like we hadn't had sex in months.\n\nI couldn't say no to her. Not even knowing how close we were pushing our time. Not even with the risk that our parents would wonder what the hell was keeping the both of us this morning. One look into her big, adorable eyes as she sucked on me was enough to dispel the very notion of trying to stop her.\n\nI somehow managed to shave while getting frantically sucked off by my horny little sister, but I had no idea how I didn't cut myself repeatedly in the attempt. As soon as I'd finished I had to lean on the sink for support. Lexi was working me hard and making my legs go all funny.\n\nLexi wanted another mess of cum, and she got it. It wasn't as nice a load as the first two of the morning, but her ferocious assault on my cock still got pretty good results. She had a nice mouthful as she stood back up.\n\n\"You gonna swallow or what?\" I asked as she leaned against the sink where I'd braced myself moments ago.\n\nHer mouth remained closed, cheeks slightly puffed out. She shook her head.\n\n\"Spit?\" I asked.\n\nAnother shake of her head.\n\nLexi's eyes rolled back as her fingers slipped into her panties and found her clit. She rubbed herself with all the frantic horniness that she'd just finished showing on her surprise blowjob.\n\nI shrugged and pushed her top over her tits. There'd be no reasoning with her at least until she came. Might as well give her a hand. Or two.\n\nI ran my fingers over her pussy from outside her panties, while she continued hard-focusing on her clit from within. I played with her tits with my other hand, sometimes leaning in to kiss and suck on them some, though I couldn't help myself from spending more of my time watching her face as she neared orgasm.\n\nHer mouth was full of my cum. As were her pussy and ass. Her eyes were rolled back so far I was afraid they'd get lost. The noises she made even through her firmly closed lips would have had my cock twitching on any morning except the one that had seen me cumming three times in such quick succession already.\n\nIt was a thing of beauty to watch her get herself off.\n\nLexi finally brought herself to a hard, shaking, leg-weakening orgasm. She only swallowed the cum in her mouth as the last of her pleasure receded, sucking in large breaths as she stabilized.\n\nI held onto her until I was sure she wasn't going to fall over. She beamed at me and wrapped her arms around my neck for a long, loving kiss. Her tongue was still pretty cummy, but she mostly kept it to herself.\n\n\"We're gonna be so late,\" I said.\n\n\"I know. Worth it though.\"\n\nI nodded. \"I'm inclined to agree.\"\n\nLexi smiled even wider. \"I had my brother's cum in my pussy, my butt, and my mouth all at the same time.\"\n\n\"I noticed that, yes.\"\n\n\"He's the bestest secret boyfriend ever.\"\n\n\"Good to know.\"\n\n\"And this gives me another sexy secret.\" Lexi gave me a quick kiss. \"Only for me and you. No one else.\"\n\n\"You like your secrets.\"\n\n\"Don't you?\"\n\nI had to admit, they were pretty great most of the time. \"You know, I really do.\"\n\n\"Thought so.\"\n\nLexi kissed me again, another long and deep one while pressing herself sensually against me. I held her to me, running my hands everywhere, but I knew we had to pull ourselves together.\n\n\"We're so late.\"\n\n\"I know.\"\n\n\"You need to stop kissing me.\"\n\nLexi grinned, gave me a last quick peck, then flounced away. She stopped and half turned at the doorway. \"You could just stop kissing me, you know.\"\n\nI looked down to her butt, panties molded to it and showing the cleft between her ass cheeks, then up to where her breasts were still showing since she hadn't fixed her top, then to her beaming face.\n\n\"Sometimes I really can't,\" I said.\n\nLexi giggled and finally pulled her top down before prancing down the hall. I followed her, watching her swaying butt for the brief time before we each went to our separate rooms to get dressed.\n\nI had to agree with her, in my own reciprocal way. She was the bestest secret girlfriend ever."
    ],
    "authorname": "Xarth",
    "tags": [
        "ass licking",
        "bored and ignored",
        "cum inside",
        "free use",
        "groping",
        "secretly attracted",
        "sibcest",
        "sleeping",
        "zelda"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/legend-of-lexi"
}