{
    "title": "Misbehaving",
    "pages": [
        "I think I was about ten when I found out there was a word for what ailed my Mum. She was a Francophile. From the outside, our house looked utterly, utterly ordinary, just like every other shonky fibre-cement clad rectangle the early eighties churned out. Inside it was a different story. Inside was Mum's domain, and every picture, every trinket, every piece of furniture had to be French, or at least 'French-style'. There were little gilded fleur-de-lis tacked up around the place, Eiffel tower candles and salt-shakers, prints of cows grazing in Normandy, cross-stiches of Monet's waterlilies, bunches of dried lavender...the whole nine yards.\n\nLooking back, I can understand the obsession. It was an escape for her, from the rectangular realities of daily life. France was romantic, steeped in history, full of the vestiges of knights and castles, and old crumbling stone things, baking sun and fields full of flowers - all of which probably seem pretty attractive when your life's ring-fenced by rectangles of four-metre high Sarlon wind-break populated with kiwifruit vines, living by their rhythm, breathing in their weird fug year round, alongside a husband whose supreme ambition in life is to be able to fit a game of golf into a weekend...\n\nI don't know whether the francophilia pre-dated the marriage, but it definitely pre-dated us kids. My baby sister, who came along when I was six, got called 'Chloe', and Mum was very particular (read: mental) about making sure the everyone double-dotted the 'e', because that was the French way. But hey, it's a nice name for a girl. My brother was saddled with 'Benedict'. He drew some side-eye now and then, but mostly he got away with 'Ben' - so long as Mum wasn't in earshot.\n\nOh, but me? The firstborn? I got to be 'Michel'. Yeah, that's right. In a three pub, one high school, one dairy factory town - a place that qualified as small and provincial even by the standards of a small provincial country, I got to haul around Michel for a name.\n\nDid I get called 'Michelle' every school day of my life for thirteen fucking years? You bet your tits I did. Every single one. The kids I went to kindy with were the kids I went to primary school with, for eight years of those thirteen years, after which a decent cohort of them passed on to high school along with me to spread the joyous tidings of my stupid girly name to an even wider audience.\n\nIt could've been worse though - it could've been worse. For all of primary and most of high school as well, I was pretty much guaranteed to be the biggest kid in the class, so the harassment never got physical. Also, I played rugby and I was good at it, which gave me a certain amount of cachet (yes, that's French) among my peers. But back to the rugby for a moment.\n\nThe rugby, yeah. From the beginning, rugby was for me what France was for Mum. What I focused on, surrounded myself with, what I lived and breathed. Except in my case it held the promise of being something beyond simple escapism. If I was good enough, it was an actual way out. I was going to give rugby my all, and rugby, in return, was going to give me everything.\n\nThat was the idea, anyhow. For a while it looked like it might just pan out. As a junior player, I was kind of a hot-shot. I had the proudest parents for miles around. They stood in their gumboots and jackets under umbrellas at the sidelines of hundreds of sodden fields, shouting me on season after season, as I shoved or ran my way through the opposition and slid around in the mud.\n\nWhen the time came, I was selected for the regional under-sixteen squad. I'd assumed I would be. It was a whole different kettle of fish, that level of play. Not bad, but definitely different. Now the guys I was playing with and against were all hot-shots - they wouldn't have been there if they weren't. As usual, I was the biggest. My team-mates nick-named me 'brickie', not because they were forecasting a career as a mason, but because I was built like a brick shit-house. I didn't mind. It was a fuck sight better than 'Michelle'.\n\nDuring my time in that squad a lot of the other guys caught up size-wise. Some weeks it was hard. It hadn't been like that for me before. For the first time, I had to look inside myself for the hunger that we were given pep-talks on, the hunger that makes you dig deep, find more, that drives good players to become great. I dug deep, I put in the work, and I was selected for the under-nineteens. But I knew that this time round I wasn't an automatic choice.\n\nUnder nineteens was tough. Tough-tough. More of the guys caught up on the size front and quite a few actually overtook me. Being really big as a child is not a guarantee of being really big as an adult. At fifteen I was already 6'2\" and 110kg, but that's actually where I stayed. Still made me bigger than the average guy on the street, but not big for a first-class rugby player. So that was problem number one - up to that point, finesse hadn't been a major issue for me. I was a bulldozer. I had size, speed, and fitness, so I'd never needed to attend to things like feinting, footwork, mind-games. I was maybe not the greatest team player, either - too used to being the centre of attention. Now when I got attention, it was often the negative sort. But I had to stick it. This was my thing.\n\nBy the time I failed to be selected for the under-21's, I was actually a tiny bit relieved to have a way out, and for more reasons than one. I'd reached the point of being fairly sure I liked dicks better than tits, and I knew deep down that that meant rugby was not going to be my ticket out of town, my saviour, my life's great work.\n\nDon't get me wrong; the professional levels of the game, they're kitted up and ready for that eventuality. When - finally - a currently contracted first-class player comes out as gay, he'll get a hearty round of applause from his management, his team, and his public. But the path to professional rugby goes via clubs and development squads and academies, and that? - that's a whole different world. First-class rugby was still a long way away, and I knew I wasn't cut out to be a pioneer or a political statement-maker. I wasn't built for that sort of thing.\n\nSo I didn't make it into the under-21's, and I wasn't surprised, and I wasn't sad either, but I had to pretend to be devastated so my folks didn't find it weird. I felt uncomfortable about that. Get used to it, Michel, I told myself. There's a bunch more pretending coming up on the road ahead. Buckle down and get used to it. Dig deep.\n\nI don't remember agonising over it or trying to fight it - I guess I knew it was pointless. I do remember standing in the bathroom at home after a shower and staring hard at myself in the mirror - as if it would help me know, somehow - as if there was something to see that'd indicate to me whether all this shit was real or not. All I saw was myself, the same as always, and all I felt was...resignation. A grumpy sort of acceptance. Well, that's all I need, isn't it, to go with a name like Michelle. Fan-fucking-tastic.\n\nI had big plans to change things up when I went to uni. I chose to go to Massey, despite the fact that there were two much closer universities I could've gotten into, one of which was definitely regarded as 'better', because I wanted to put some distance between me and home. I wanted space to work out how to be a different sort of Michel.\n\nBefore I arrived in Palmy, I'd toyed with the idea of maybe coming out when I got there. But there were a few drawbacks I hadn't foreseen. In the unfamiliar environment of my hostel, surrounded by several hundred other similarly disoriented eighteen and nineteen-year olds, I did what everyone does when they're confused and a little bit threatened. I reverted to type. It wasn't difficult. Actually, it wasn't even conscious. I just sort of...aggregated...with a bunch of rugby dudes, some of whom were actively playing, some of whom were simply part of the culture.\n\nAnd then that was that done. I felt like if I stuck my head up above the parapets and said, 'He-e-y guys, I'm actually gay,'...I wasn't so much worried that I'd get unfriended, as that everyone would just be convinced I was pranking them. There were a few evidently gay guys at the hostel, and I was so far removed from what they were like, culturally, aesthetically, everything-ly...I carried myself with the poise and elegance of a Mack truck, I cut my own hair short-all-over with a buzzer, I had a thick neck, the beginnings of a cauliflower ear on one side, and no idea how to dress. I was pretty sure that if I tried to come out, the heteros would be all like, 'Hah, yeah right, mate,' and the homos would be more, 'Ick. No thanks, mate'.\n\nSo I stayed with my pack for the year, and I passed all my courses in between drinking a hell of a lot of beer. In fact, I combined so much beer-chugging and pie-eating with no rugby training at all that I came home for the holidays more than a little lardy. Over Christmas the family all got together and I realised that, looks and build-wise, I was a younger version of my uncle Jason and that if I didn't sort myself out, I was gonna end up pretty fucking fat. It'd just never been a problem during the rugby years, but now it was making its way to the surface. Literally.\n\nI knew I was all done with rugby though. I couldn't even find a desire to play at hobby level. Instead I decided to have a go at triathlons. God knows why, I think I was looking for something I could understand that didn't have a team element. I started training as soon I got back to uni, and found the swimming depressingly difficult and the cycling unbelievably hard on the arse to begin with, but the running was never a problem. I was plenty used to that. I'd swim three days a week, cycle three days, always early morning, and then run in the late afternoon after my last class, six days a week. Sundays I kept free for finishing assignments and having hangovers.\n\nI lost my flab inside of six weeks, but even without it I was heavy, and pounding pavements was getting to my knees, so I switched to turf and ran laps of a park area near the pool I swam at. There were several soccer fields, a cricket pitch, a kids' playground and a high school all kind of haphazardly slapped on and around the place, so it was big enough to keep me occupied.\n\nAs time went on I got to know the rhythm of the area. Little kids soccer training some evenings, bigger kids on others, adult friendly leagues playing games on yet others. The same faces lurking around the playground, too old for swings and see-saws, too young for the cigarettes they were smoking.\n\nEvery evening when I was done, I'd stop to fill my water bottle at a tap protruding from the concrete block wall of a building by a small hot-sealed area painted up with basketball markings. A board and net were affixed to the wall, and invariably there'd be the same guy there, alone, practising his dribbling, his footwork, his shots, sparring with invisible opponents, sinking ball after ball. He was Asian, tall and lanky, big hands, big feet, neither heavy nor stringy - built like...well, a basketballer. \n\nIn theory, I was just hydrating and doing a bit of a warm-down while he bobbed about in the background, but I was watching him, of course I was watching him. Despite being basically a jumble of limbs, he ducked and wove with surprising ease and shot with enviable precision. Each afternoon, I'd notice some new detail - a birthmark on the side of his neck, the way his hair stuck to his forehead once he was sweating freely. I wasn't lusting after him...exactly, I told myself. I was appreciating him.\n\nI said 'hi' the second or third day because, hey, it would've been weird if I didn't. He flicked his eyes over briefly, grunted a 'hi' back without breaking stride, and continued his practise. After that I'd just nod at him when I arrived and wave when I left. Sometimes he'd acknowledge me, sometimes he wouldn't. A few weeks in he astonished me by actually stopping to ask what I was called.\n\n\"Michel,\" I replied.\n\nHe frowned. \"That's a girl's name?\"\n\nI didn't feel much like explaining it all yet again. \"Spelt differently.\"\n\nHis brow cleared as he nodded understanding and tapped his chest. \"Brian.\"\n\n\"Nice to meet you, Brian,\" but he was already turned away and warming up his ball once more - toing, toing, toing, on the hard surface.\n\nHis name wasn't Brian, of course - that was just an identifier he'd chosen for use in an English-speaking context, but I of all people could get why someone would do that. If I'd thought our brief conversation might start something flowing, I was wrong. He didn't seem to be a talker, but then everything he did say he was having to assemble carefully word-by-word before verbalising, and that'd make anyone a bit sparing with their speech. It must've been a fortnight before we had another conversation, but one random day he stopped again and turned to me.\n\n\"Do you come here every day?\" he demanded.\n\nI shook my head. \"Not on Sundays.\"\n\n\"Do you go to church?\"\n\nI managed not to snort. The only religions I'd encountered were rugby and golf. I'd tried one and written the other off without bothering.\n\n\"No - do you?\" I enquired politely.\n\nI saw the tiniest hint of a smile tugging at the corners of his mouth as he replied, \"This is what I tell my mother...\"\n\nI was smitten.\n\nI'd almost managed to convince myself so far that I was just getting aesthetic enjoyment, neutrally savouring his athleticism - but this, the sharing of a harmless secret, the accompanying co-conspirator's smile, the sense there was some humour, some mischief, buried in him - I couldn't pretend it was going to be all objective from here on. So I didn't even try. I leaned back against that wall day after day and just basked in his presence.\n\nHe stopped again one afternoon, abrupt as ever. \"Do you want to play?\"\n\nI shook my head. \"I'm all good, thanks.\"\n\nHe paused, building a sentence. \"I won't make it very difficult.\"\n\nThat wasn't what I was bothered about. \"It's okay,\" I assured him. \"I'm happy just watching,\" adding, \"you're cute.\"\n\nIt was a calculated risk. I wasn't worried he'd try to bash me. I figured the worst that could happen would be that he'd be weirded out, leave, and take up practising somewhere else to avoid me in future.\n\nWhat actually happened was...nothing. He simply turned away and gave his attention back to the net, springing and dodging around the meagre court area, seemingly totally unbothered by anything I'd said. I realised that probably the nuance of the word 'cute' had passed right by him, and I was trying to decide whether this was a good or a bad thing when he suddenly threw the ball at me. I didn't see it coming, and it whacked me square in the solar plexus, but I caught it anyway - a lifetime of having people launch stuff at you while you're running full-tilt down a field will do that. I looked across, and he jerked his head at me. The message was pretty clear. Come over and play.\n\nI gave it a shot. I was probably less terrible than a ring-in off the street might've been, though not so much due to my ball-handling skills and for sure not my aim, but I had practise amassing knowledge about an opponent on some instinctive level, so after a few minutes I could predict, at least some of the time, which direction he'd lunge, whether he was feinting or not. He was still way outpacing me, nonetheless - then he stopped in characteristically sudden fashion, tucked the ball under his arm, and started away. A few paces on, he jerked his head at me once more in summons.\n\nSide by side we walked for almost four blocks in complete silence, as I wondered internally just-what-the-fuck was going on here and how concerned about it I should be. We clomped up the stairs of what had once been a nurses' hostel, now re-purposed as international students' accommodation, and he inserted his key, shoved the door open, stood back to let me pass. I stepped into the room, turning to lock eyes with him as the door swung closed on its hinges, and I knew without a doubt that he understood exactly what 'cute' meant.\n\nGod...Brian, with his big sinewy thighs, his intoxicating personal odour, his generous black bush, his hair-trigger dick. He dropped to his knees, yanked down my shorts and went to town on me with his mouth with the same silent dedicated ferocity he brought to his practice, all before my mind had really managed to assimilate what was happening. I didn't get to return the favour, seeing as he creamed himself while he was bringing me off.\n\nIt was the same the next time, and the next. Exactly the same. The fourth day, as his door slapped shut, I put a hand on his chest to arrest his descent, and told him, \"My turn.\" \n\nIt was all that I could've imagined and more. I loved every single thing about it except that it was over too soon. But there were other days, there were plenty of other days. Six days a week, for the seven remaining months of the academic year, we followed a near unvarying routine, meeting up at the end of my runs, slinking off together to his room to swallow each others' loads - first me, then him, because he could never last through an orgasm of mine without blowing.\n\nI went to kiss him once but he jerked his head away, so that was out. I tried to slide a finger up his crack when I was sucking him and he cuffed at me, so obviously that was out as well, but I was too thankful for what I was getting to waste much energy being disappointed about what I wasn't.\n\nThe one and only deviation from the pattern we'd established came on a Thursday in August when the weather was bad. Not just ordinary winter bad, but cartoon villain-style bad. The kind of weather that only a complete idiot would even consider going running in. Or a horny idiot. By the time I reached our usual meeting place, I was soaked to the bone and too cold to be horny. Too cold to be anything other than cold - but it was worth it, because Brian was there. He had his ball with him, but he wasn't even pretending to practice. He was just huddled in the meagre shelter the block wall was offering, getting wet and cold, waiting for me. For me.\n\nWhen we made it back to his, he pushed me wordlessly through to the bathroom, turned the shower on, and started shucking off his clothes, indicating that I should do the same. I'd never gotten to see him all the way naked before, and even the fact that I was still bloody freezing did nothing to blunt my delight. We crammed ourselves like sardines into his tiny shower, which barely had space for one large human, let alone two. Thigh to thigh, chest to chest, face to face, we stood under the steaming spray. I drank him in, marvelling at the contrasts between us - me, lumpily muscled, skin pale, dotted with pin-prick tiny freckles, dusted with dark reddish-brown hair, him, long necked and long limbed and all his unblemished warm-toned skin, his brown oval nipples...\n\nBut if everything else about us was different, our excited dicks were the same - height from the ground, length, girth, degrees from the vertical - identical. Dick twins. Except his listed ever so slightly to the left and mine an equally tiny bit to the right, meaning they were head to glistening head, leaning in, calling out to one another.\n\nIt had to happen. Had to. Down and up, my eyes flicked between between his face and that almost-connection, down and up. It was a silent pleading, but he heard me. He reached down and closed his massive paw around us both in a gentle embrace, and then he started thrusting lazily up into his hand, along my length, skin on skin on skin. Thank god he was doing the work. It was all I could manage to keep my knees locked, stay in place. I watched his hand, his face, his dick...mine. Watched my stomach muscles flinch, contracting helplessly, bit my lip, trying, just trying to hold on a little bit longer. I didn't close my eyes - I couldn't.",
        "That was the only time he outlasted me. I came so hard I felt like my whole body passed out through my dick, but somehow I was still there after, still standing, panting. I looked down at the mess I'd made, coating his dick, oozing down over his hand, his wrist, and I'm pretty sure I would've come again if it had been at all possible. And then again, when he spilled all over me thirty seconds later...\n\nAnd again, once we were out and dried off - I was so outrageously turned on, I would've just kept going and going and going. But he was done. He poured us both a glass of coke and we sat naked on his couch to drink them, and then I put my clammy clothes back on and ran home and had another shower. The next day it was bright and clear and sunny and we were back to blowjobs.\n\nEnd-of-year came up hard and fast in that way it does, but we stuck to our schedule through deadlines and study week and even exams, right up until the day before he had to leave for Seoul. I had my last exam two days later and then headed home myself for a summer of Not Getting Any and sleeping in a bed that was too short for me.\n\nI didn't know what date Brian was coming back, we hadn't discussed it, but you'd better believe I went for my first run of the academic year all of two hours after I arrived in Palmy. Nothing. And for the whole next week, nothing. After ten days of hanging around that court like a lost puppy, I broke, and ran instead to the hostel. Once I'd convinced somebody to let me in the front entrance, I jogged up the stairs and knocked on his door.\n\nA guy who wasn't Brian pulled it open and stared at me. \"I help you?\"\n\n\"Uhh...no,\" I said, backing up, \"um...sorry, wrong room.\"\n\nIt wasn't the wrong room. I walked home slowly, considering the possibilities. There were a lot of them. Maybe he'd gone out of his way to ghost me. Maybe. Or maybe he failed. Or maybe he decided to study somewhere else. Or his mum found out he wasn't going to church on Sundays and decided a few things on his behalf. He could be working. He could be sick. He could be dead. I didn't know, and I wasn't gonna find out. I didn't have a contact. I didn't even know his real name. What we'd had - it was an arrangement, not a relationship, and whatever the reason, the arrangement was over.\n\nBrian's non-appearance meant I was staring down a way leaner year than I'd anticipated, and I was already champing at the bit after almost three months of living with my parents and valeting cars forty hours a week. I thought about heading down to Wellington to see what I could find. I mean, the way people talked about it, you'd think it was the San Fransisco of the southern hemisphere. But it was a long way to go for a hook-up, and equally, if I found something more than a hook-up...still a long haul. You can't get off six days a week with somebody who lives a hundred and fifty kilometres away. After simmering for a month or so, I downloaded an app, and quickly discovered two things; one, that there were some deeply weird people in my town, and two; that I didn't perform particularly well when I was nervous. And two-point-one, that worrying about not performing very well only compounded the problem. By mid-year, I gave it away altogether and went back to headphones and a computer screen and the fellowship of the hand.\n\nIn the final term of my degree, one of my lecturers started working fairly hard to persuade me into postgraduate study. I was dubious. Although I had the grades to probably score a scholarship and I still found chemistry plenty interesting, I had concerns around fitting in if I tried to make a career out of academia. In the same way as I don't look like anyone's immediate idea of gay, I also don't look like the poster boy for clever. You can put me in a lab coat, nitrile gloves and safety glasses, even give me a test tube to hold and stand me under a fume hood, but I still look like I ought to be out concreting a driveway somewhere. That sort of thing shouldn't matter, but unfortunately it does. In the end, I gave it a go anyhow. What else was I gonna do? A bog-standard BSc isn't much of a drawcard for an employer. I mean, practically everybody's got one.\n\nFour months into my two-year Masters, there was yet another department morning tea. This one was on a Thursday, which threw me a little. Usually they held them on Mondays, but I was coming to understand that morning teas were a big thing here. At the beginning, I'd think, group morning tea? Where am I, the Country Womens' Institute or something? By now, I understood that the lure of free food - even a platter of cheap shitty prefrozen Coupland's savouries and a few nasty rectangles of mummified ginger slice - guaranteed a near-perfect attendance rate for whenever a Somebody Had Something To Say and wanted to only say it once. Plus I suppose it made us all look collegial for an hour or so a week.\n\nThere was someone, that Thursday, who had Something To Say, but I don't remember who, or what it was about. Remember to turn the lights off in the lab if you're the last one out. Just because you ran out of liquid nitrogen it doesn't give you the right to nick some from the lab next door or something like that. But there were a couple of new faces present - two guys standing side by side against the far wall, hunkering in and sort of scanning the room for threats - a gigantic floppy-haired blonde and a more diminutive, dark-haired one who probably wasn't actually that small, just dwarfed by his companion. Once the talking was out of the way, Allie made a beeline for them and started hauling them around the room introducing them to everybody.\n\nThere's an Allie in every department, I figure, and in every school and workplace and for sure on every committee in the world. A sort of combination cheerleader/drill sergeant/mother hen - an endlessly cheerful get-things-done-er whose current self-assigned task was Making These Guys Feel Welcome.\n\nShe dragged them over to the group I was standing with and gestured to the blonde. \"Hey guys, this is Peter.\" Then, indicating the other, \"And this is Vincent.\"\n\n\"Nice to meet you all, yah,\" the big guy said with a flat nasal Afrikaans intonation, nodding neutrally around.\n\nVincent didn't get a chance to say anything, because his phone started tinkling in his jeans pocket. He pulled it out, stabbed the screen, and launched into speech, angling slightly away from the rest of us. Although I had no clue what it was about, I was a hundred percent certain that the verbiage pouring forth from his mouth was French. The sound, the shape, the cadence were all familiar to me from a childhood of Mum's movies playing in the background. So obviously I assumed he was French.\n\nJust as obviously, when he finished talking and Allie introduced him to 'Michel', he assumed the same thing about me. Delighted recognition flared in his face as he exclaimed, \"Ah! Michel!\" and fired off into another screed of syllables, excitedly telling me...something.\n\nWell, we were both wrong in the end. He was Belgian. He was also, in that instant when his face lit up, startlingly beautiful. But I knew I wasn't going to be interacting with him all that often. He was a plastics researcher, so not in my lab, not even on my side of the building. Suddenly all those bloody morning teas seemed a little more appealing...\n\nMaybe a month later, I was sitting at a large round table in the lunchroom with Vincent a couple of seats to my right, trying not to stare. The table had been full half an hour ago, along with most of the others in the room, but it had gotten to the arse end of what you could possibly call lunchtime and the place was mostly empty. Vincent was peeling a mandarin. I was done eating and just plain slacking, because my afternoon's work was going to basically consist of counting dots on a screen, and I didn't want to do it. I glanced over at Vincent just as he was breaking his mandarin up into segments and discovered he was watching me.\n\nAs he caught my eye, he tipped his head a little to one side and murmured, \"So...Michel. I am thinking you are maybe gay, no?\"\n\nI went still as a statue. Couldn't even breathe. I desperately wanted to look around and see whether any of the other stragglers in the room were looking at us, had heard, but I willed myself not to, because that'd make me seem guilty.\n\n\"What...what makes you think that?\" I eventually croaked.\n\nHe smiled. No, he smirked. \"Perhaps it is how you reply with 'what makes you think that?' instead, of, 'nooo, not me'?\" he breathed. \"Or that, mmn, one gets to have a feeling for these things after a while?\" He smirked again and gave a very gallic one-shouldered shrug. \"But perhaps I am wrong this time? Or maybe you have not quite made up your mind yet, mmn?\"\n\nIn the midst of my scramblings for something to say that would allow me to exit the conversation without incriminating myself any further, a voice in my head suddenly shouted, Earth to Michel! Earth to Michel! He's good-looking, he's interesting, and he's flirting with you! Why are you being so fucking coy...?\n\nVincent turned out to be a boatload of fun. Playful, persuasive, cocky. Dirty. He had waaay more experience than me in bed, coupled with absolutely zero shame, both of which were Very Good Things. Staying over with him meant that I effectively came out to everyone in the lab because he was flatting with two other guys from there. The whole thing was refreshingly non-eventful, and the following month I just as undramatically came out to my own group by towing him through the lounge and down the hall of my flat on a Friday evening when all my flatmates had elected to stay in for some reason.\n\nI slunk out in the morning to hopefully quickly make some coffee and take it back to my room. The girls seemed to still be asleep but Jake was up, sitting on a stool by the bench in the kitchen-dining, drinking coffee and reading his phone. He looked over at me slyly as I pulled two mugs down and reached for a spoon.\n\n\"So,\" he murmured, \"much becomes clear...\"\n\nI quirked an eyebrow at him, and he shrugged.\n\n\"I thought it was crippling shyness holding you back all this time, mate.\"\n\n\"Nope,\" I told him, \"crippling gayness.\"\n\nBoth of us laughed, but only Jake spat coffee all over his phone.\n\nVincent and I never actually moved in together, but it was less than a month before we had spare toothbrushes at each other's places. It was only a short-term thing, obviously. That's all it was ever going to be. He wasn't going to want to stay in New Zealand after his fellowship was finished - he had a position open for him back in Liege. And I couldn't realistically follow him, not least because the only French I knew was the filth he'd taught me in bed. So when his year wound up, Vincent was going to fly back home, rejoin his lab group and continue his research on novel polymers, and I was going to stay here, finish my experiments, write my thesis, and hope like hell it'd make me employable. That's how it was going to be. And because I knew all this from the word go, I thought I understood it, I thought that it'd be okay. I thought that I'd be okay.\n\nI wasn't okay.\n\nWe took a holiday together for ten days before he left, so Vincent could see the postcard things you're supposed to see and get all the regulation selfies - Mitre Peak, Queenstown, glaciers, Punakaiki, blah, blah - before he headed home. I waved him goodbye as he walked down the tunnel at Christchurch airport bound for Brussels via Sydney and Dubai. I was already antsy an hour and a half later when I got on my own flight back to Palmy. I had a window seat, but I didn't want to soak up the view. I had a three quarters finished Lee Child book in my carry-on but I didn't want to read. I took out my phone to play a game then set it down on my lap after a couple of minutes, chewed on my thumbnail, and ever-so-quietly spun the fuck out.\n\nIn the weeks that followed, I tried to be nice to myself. Firm, but nice. I didn't beat myself up over my lack of progress with my write-up preparations, my continuous zoning-out in meetings. I went for positive self-talk, rather than negative. You've got this, Michel. You're going to push through. You're not pathetic, you're sad. So, okay. You're not gonna be sad forever. Give yourself time. You'll get over this. You will. Being my own therapist worked alright during the daytime. Less so in the evenings, even less at night. A pattern began to develop where I'd be juuuust dropping off to sleep, in that floating borderland state, and suddenly I'd jerk awake with a feeling of falling, heart pounding, roaring in my ears, sweating up a storm.\n\nAfter a few weeks of that shit, I was craving and fearing sleep in roughly equal measure, and averaging maybe four hours a night. I hung back from the idea of drinking myself into oblivion because I had a strong suspicion that ugly snotty crying would result, but I felt like I was nearing the end of my rope.\n\nThe only thing I could think to do about it was run - run until I was so utterly fucking exhausted I couldn't even think in a straight line - until I was guaranteed to pass out immediately my poor battered carcass hit a mattress. Now, Palmerston North isn't very big; it's not Sydney or Melbourne or Adelaide. Or even Darwin for that matter. But running from one end of it to the other and back isn't nothing, turns out. I was living fairly near the southern limits, close by the university, and thought I'd give it a shot. I was looking to ruin myself after all. Over an hour later and only a third of the way into the circuit I'd planned out in my head, I admitted to myself that I wasn't up to it - that I needed to start heading back home now, right now, if I wanted to make it in one piece.\n\nI turned down a side street that I knew ended in a park, not thinking about anything beyond cutting this ordeal short, but a couple of hundred metres on I ran straight into another memory. The wall, the hoop, the little stub of a half-court that 'Brian' had practiced on, every day except Sunday...\n\nI stopped. I sat down on the warped and wizened seal, dropped my forehead to my knees and panted and drooled and bled internally. After a while I lifted my head and stared blearily around, wrung out and run out, and acknowledged the truth; that yes, one day all of this would be painless and distant - but also that I might need to leave this place for that to be able to happen.\n\n\u2014\u2014\u2014\n\nNot completing my Masters wasn't a tough decision. That'd been somebody else's idea of what I should do right from the start. What to do instead was a bit tougher. Concreting driveways is still an option, I told myself, scrolling through the job ads on the seek website. You know you've got the looks, Michel. Thankfully a listing jumped out at me before I felt like there was an urgent need to investigate concrete from a hands-on perspective. Hazards and containment manager for a composite wood panels manufacturer, and the only prerequisites were three HAZMAT certificates that I already had from my lab work.\n\nI emailed off an application before looking the place up, which was stupid. Not that there was anything shonky about their set-up, but holy shit it was in the middle of nowhere. About halfway between Whangarei and Kaikohe on the back road. When I got an email the next day asking me to come for an interview I wondered if they were having trouble filling the position, due to their...position. Five in the fucking morning was when I had to leave to make the trip in time for my 3pm appointment, and even that only gave me time to grab the odd coffee to go while I pissed the previous one out.\n\nI arrived jee-ust in time for my interview with the site manager, who looked like he was the hands-on type - he was wearing safety boots and had divot in his hair which suggested he'd recently taken off a hard hat. After twenty minutes of unthreatening interrogation, the guy glanced down at my CV, sitting on the desk in front of him, and then back up at me, frowning.\n\n\"Michel Stoddart...\" he mused. \"I thought that sounded familiar when this came through, and now you're sitting there, you look familiar too, but I can't place you. Where you from originally?\"\n\n\"Te Puke,\" I told him.\n\n\"That figures,\" he said. \"I used to manage HT Panels over at The Mount.\" He fell into contemplation again for a few seconds, nodding vaguely to himself, before hissing, \"I've got it! You played junior rep rugby with my son! Cordell Wagner - remember him?\"\n\nCordell, yeah. I remembered. A super speedy fullback. And a top shelf single barrel triple distilled export grade cunt.\n\nI made myself look thrilled. \"Sure do!\" I said. \"How's he getting on these days?\"\n\nHe raved about Cordell's many successes for a few minutes, then straight-up offered me a job.\n\nI said - because you do, right? - I said I'd think on it for a couple of days. He seemed fine with that, grabbed me a hard hat and showed me around the site. It was a pretty tidy set-up in general, except...ooooh, boy...except for the room where the chemicals were stored.\n\nHe saw my wince and grimaced in return. \"Yeah, I know, I know. I need someone in this role yesterday, as you can see.\"\n\nI nodded. \"Let me head back to Whangarei, and eat and sleep on it. I'll get back to you tomorrow.\"\n\n\"No need for that,\" he told me. \"There's a hotel just up the road.\"\n\n\"There's a what?\" I didn't believe it. We were deep into nowhere.\n\n\"A hotel,\" he repeated patiently. \"About a kilometre further up the road. It's not a...I mean, it's mostly a bar, y'know. An old-style country hotel from back in the day, but they do have rooms. Give it a look-in, you may as well scope out the area while you're here. In fact, give me fifteen minutes and I'll come along with.\"\n\nI gave him his fifteen minutes and then I trailed him up the road, and sure enough, there it was. A fucking hotel. A dilapidated, lichen-encrusted once-was-white-painted honest-to-god concrete stucco hotel. All the way out here.\n\nA bell tingled as we pushed through the door, and the two old codgers propping up the bar glanced momentarily away from the trackside channel.\n\nOne of them nodded at the site manager. \"Steve.\"\n\nHe nodded back. \"Trev.\"\n\nSteve. Trev. I had another of those panicky moments I'd been having my whole life long, thanks to Mum. Wayne, Shane, Dan, Stan, Sam, Cam, John, Tom, Michel. Pick the weirdo. And hey, after that, we can play pick the homo! This won't work, I thought. It won't work. Not here. I should drink my beer and make my excuses and get the hell away from here and let this be a lesson to me not to apply for jobs I haven't thoroughly researched. But then a jug was placed before me, a jug that was clearly my own personal jug - the other three guys all had their own too - and I realised I wasn't feasibly getting out of here anytime soon. Oh well. I was pretty bloody thirsty.\n\n\"Are you after a feed?\" Steve asked a minute or so later, sliding a sticky laminated A4 sheet across in front of me.\n\nI considered it. On the one hand, whatever I got from here might be fairly dodgy. On the other, I had over a litre of beer to get through and had put nothing but coffee into myself so far today. I probably wasn't going to be able to drive back to Whangarei for a couple of hours either way, and I was only gonna get hungrier.\n\n\"It's just bar food today,\" Steve continued, \"they have the kitchen properly staffed on Thursdays, Fridays, Saturdays and Sundays. Rest of the time, you're stuck choosing something Jack here can tip into a fryer.\"\n\nWell, at least it's hard to fuck that sort of thing up too bad, I thought. \"I'll have a plate of wedges, thanks.\"\n\n\"Reckon I will too,\" Steve agreed.\n\nThe ole boy who hadn't said anything yet suddenly roused. \"Oh look, while you're chucking stuff in the fryer, do some for me as well, eh Jacky? But don't be putting any of that sour cream shit on mine, willya? Or any of those green circley things either.\"",
        "Green...circley...things? Steve leaned in a little and pitched his voice low. \"Spring onions,\" he confided. \"Poncey towny rubbish. Yeah, I know. Look, most of the population here is...a little fruity, I guess, but if you can just keep an open mind and give them a bit of latitude, they're actually fairly solid on the whole.\"\n\nMmm, I thought. And will they keep an open mind on me? What are the chances?\n\nBut the wedges were hot and crunchy and tender inside and surprisingly good, and the beer slid down easily and took the sharp edge off of things, and neither of the codgers had asked me my name and I thought, well, I wanted something different and okay, this would be really different, but maybe I could give it a crack? It's not like I'm signing up for life or anything. If it's too off-the-wall I can always go somewhere else. But then...\n\nSteve broke in on my thoughts. \"You'd need somewhere to stay, of course, if you were gonna shift up here.\" Addressing the others, he said, \"Either of you know whether there are any vacant houses at the mo? Liveable ones, I mean. Michel here is looking at being my HAZMAT guy.\"\n\n\"That Tamati bloke with all the hair moved in with what's-her-tits, the tall girl, last month,\" no-sour-cream offered, \"so his place'll be free.\"\n\nAaaand zero bites on my name. Crickets. Wow.\n\nHe looked at his watch. \"He'll be coming by shortly enough. Could give him a bell and ask him to stop in. Hey Jack, can we use the phone?\"\n\n\"Colin, I have a phone,\" Steve said, waving it in front of him. \"Just tell me his number.\"\n\n\"So cellphones do work out here?\" I asked him. Because I am out, otherwise.\n\n\"Oh, for sure,\" he replied. \"I mean, being a valley, there's pockets where it's...not so great, but we get by.\" He then proved the point by calling Tamati, identifying himself as 'bossman Steve', and carrying out a conversation that showed no hint of being interrupted by poor service.\n\n\"Bossman Steve, eh?\" I said, as he tucked his phone away.\n\nHe sighed. \"I did not come up with that. It's just that there was already a Steve and a Steve-o and a Stevie by the time I turned up, so I had to take what I got. It's the same everywhere I go - you have no idea.\"\n\n\"You're right,\" I told him. \"I have no idea at all.\"\n\nHe laughed. \"Yeah, Cordell's never been thrilled at having a non-standard name either. Tamati said he'd coming by in about ten minutes and he can pick you up, so you'll want to head outside shortly and wait for him.\"\n\nWell, in fact nobody's consulted me about what I want, I thought. But I wasn't capable of being properly annoyed with most of a jug of beer doing its thing inside of me, so I docilely picked up my things and went to wait by my car.\n\nAt least that was the plan. But when I got outside, there was a horse - a whole actual horse - using my driver's side mirror to give its ribcage a scratch. Fuck! I thought. Fuckety fuckety fuck! Don't fucking break it! I started forward and it gave me a very 'yeah whatever' look, before sauntering out of the carpark and onto the road.\n\nFuck, I thought again. That's not so good. I poked my head back in the hotel's door, setting off the bell. \"Uhhh....guys? There's, like, a horse out here.\"\n\nNobody was surprised. Nobody even got up. The one called Trev simply leaned back toward the door to the kitchen and bellowed, \"Hey! Jack! Jacky! Better call Bonnie and tell her her horse is on the lam again!\" \n\nAs the door swung closed, I faintly heard, \"Trev, I have a phone...\"\n\nThe horse was having a mouthful of somebody's tree by the time I made it back to my car, then a few mouthfuls of their hedge, followed by a good hard lean on their fence to reach in for some tasty morsel out of my sightline. Then it walked back out into the road and just stood there like it owned the whole damn place. Now every stand-up comedian in NZ has a piece in their set about about how Palmerston North ain't nearly so hip as it'd like to think it is, about how grungy and inherently provincial it'll always be no matter how hard it tries...but hey, it does have all the conveniences of modern life, and it doesn't have horses just casually wandering around the place sampling the vegetation. Am I seriously going to do this thing? I asked myself, again. Am I gonna move...here? As if reading my thoughts, the horse swung its neck round and eyeballed me directly, a moment before cocking its tail and depositing a pile of khaki coloured poop precisely on the white centre line. I burst out laughing, because suddenly everything was hilarious, including the fact that I was, seriously, going to do this thing.\n\nFortunately, it had clip-clopped away down the sole side street when Tamati-with-all-the-hair showed up behind the wheel of a Fulton Hogan ute and threw open the passenger side door.\n\n\"You the dude wanting to look at the house? Hop in.\"\n\nI wedged myself in with difficulty around a toolbox, an all-weather radio and a large gym bag, as he said, \"Yeah, sorry about that - wasn't expecting company. And, ah, same thing with the house. I haven't exactly moved all my shit out. Or tidied. Or anything. But I will, obviously, if you think you're keen.\"\n\nKeen might not be the exact right word, I was thinking fifteen minutes later...the place was a tip, and it smelled of a thousand stale cigarettes, but it was provoking some deep nostalgia in me nonetheless. It was a near-replica of the house I grew up in, except it had two bedrooms instead of four, and in place of all the French tat it was decorated with ashtrays and titty calendars, but the flimsy bronze-toned aluminium joinery was exactly the same, and the wrinkled carpet, and the cantankerous ranch-slider that I could just tell would behave in especially cunty fashion any time it was raining buckets, or I had my arms full, or something like that.\n\n\"What would you want for it?\" I asked, after we'd completed the tour and were outside again, leaning against his ute.\n\n\"Ahhh, dunno,\" he said, pulling a pouch of Port Royal out of his pocket. \"Hundred and sixty maybe? Yeah?\"\n\nHoly shit, I thought. I'm paying a hundred and eighty for a room, in what's not exactly a metropolis.\n\n\"And if you wanna use, I dunno, the fridge, and the freezer, and the washing machine, I can just leave them,\" he continued. \"I mean, the missus has all that jazz already. In fact, even the furniture...let me know what you want left, and whatever you don't, I'll shove it in the garage. I think I should be able to fit it all in one bay, so you'd still have one for your car and whatever.\"\n\n\"Don't stress,\" I told him. \"The car's never been kept inside, and I've never rented a place where the garage didn't have sixteen metric tons of the landlord's shit stored in it.\"\n\nHe laughed. \"I'll leave a bay free for you. So whaddya think?\"\n\nWell, I wouldn't have to put up with any neighbours...I scratched my head and rubbed my eyes, beginning to feel the early start.\n\nTamati nudged me. \"All a bit much for you, eh, city boy?\"\n\n\"Ah, fuck off,\" I said. \"I got up at four-thirty this morning and I haven't had breakfast or lunch. Also, I'd hardly call Te Puke a city.\"\n\nHe tipped his head to one side and regarded me for a long moment. \"Te Puke? You don't happen to know Levi Ormsby, by any chance?\"\n\n\"Yeah,\" I said, \"he was a year behind me at school. And, um...Chantelle, she was a year ahead. How do you know them?\"\n\n\"They're my cousins,\" he said.\n\nNo fucking way. Small pond. Tiny, tiny pond.\n\nTamati was shaking his head. \"This bloody country, eh? Still, where else are you gonna go?\" There was a pause, then he said, \"Levi's over in the mines at the moment, earning himself a shit-ton of money. All power to him, but I couldn't do it. I can't be away from the bush for too long, or I get...itchy, I can't settle. I gotta be near it.\"\n\nI followed his gaze over to the valley's eastern flank. Though it didn't feel like rain, there was a wall of slate-grey cloud built up, which, in combination with the westering sun, was illuminating the tree-clad slopes in a fascinating way, making the palette of greens intensely vivid and highlighting the canopy's textural qualities. It was definitely kinda magic. Maybe even a little bit holy. I felt myself falling.\n\n\"It's really beautiful,\" I whispered.\n\n\"It's alive,\" Tamati said, hushed as me. \"I mean, obviously the trees are alive, and the birds and the insects, as well as the fuckin' possums and goats and pigs and deer, but, like...the whole thing. As an organism. It's alive. And I think it kinda, I dunno, sustains us.\" He flicked away the stub of his cigarette and shrugged. \"See, now I sound like one of those strange females who're all into crystals and shit, like the chick with the horse.\"\n\n\"The horse that just wanders around the place eating people's hedges?\" I said.\n\nHe laughed. \"Ah, you saw it? Yeah, it's out more than it's in, I reckon. It's smarter than her, basically. She's alright, though. In her own way.\"\n\nWell, I'd already decided I'd do it, so I shook hands with Tamati and let him drop me back to the hotel. I told Bossman Steve yes, got myself another jug of beer and another plate of wedges and a room for the night, and next day I drove back to Palmy and started shucking responsibilities and packing up my shit. Ten days later I moved into a house so totally transformed that I suspected 'the missus' had been called in to give it a going-over. I wonder if he got to the titty calendars first, I thought, wandering through the place, taking in the gleaming surfaces...\n\n-----\n\nFirst morning on the job, it took me over an hour to successfully log in to the program they used to inventory and order their chemicals and protective equipment. Once I was in, I could see it was going to take the next very many hours to bring everything up to date, because clearly nobody else had recorded anything since the last guy left. Fifteen minutes into that task, the whine of machinery died away and Tui, the forewoman, poked her head around my door.\n\n\"Smoko. C'mon, time to cram a few more names and faces into your memory bank.\"\n\nYeah. It's not one of my top skills, that. But when we got to the break room there were a whole four people there, two guys and two women, sitting in two knots of two, one close by the door, the other over in the far corner.\n\n\"Whaaat?\" I said, before I had time to think better of it. \"Where is everybody?\" I knew there were nearly thirty people employed here.\n\nThe close guy, who was probably in his fifties, with what can only be described as a curated selection of teeth, gestured over his shoulder with his thumb. \"They're all out there under the awning, sucking away on their cancer sticks like there's no tomorrow,\" he grunted, \"getting their dose of their arsenic and their formaldehyde and their-\"\n\nTui laughed. \"He only gave it up last year,\" she murmured to me, \"so he's still got a real hate on about the whole thing. I keep telling him it gets better. Don't I, Lester? Wiremu and I quit a decade ago - bad example to the mokopuna, y'know. Doesn't bother me at all by now. And this is Ria, she does all the accounts and the pay, and over there that's Lisa and Zac, our forklift drivers. Hey, Zac! Lisa! This is Michel, the new HAZMAT guy.\"\n\nThe two of them looked up from their phones for as long as it took to nod at me, and then back down again.\n\n\"Now there's another addiction,\" the Lester guy grumbled. \"They fry your brain, you know. The light, and the waves they give off, plus they have things in them that track your movements.\"\n\n\"Well, I know that,\" I said, pulling out a chair, \"it's called GPS.\"\n\n\"No-no,\" he told me, wagging a finger. \"I'm talking about the other tracking software, the stuff they don't tell you about.\"\n\nTui sat down, pushing a coffee in front of me. \"Lester,\" she said, \"he just arrived. Give him a day or so to acclimatise before you really get started, huh?\n\n\"Oh?\" I said. \"What else can I expect down the road, then?\"\n\nShe rolled her eyes. \"It's quite the list. There's big tobacco, obviously, and big pharma, and big brother is watching you, and earthquake prediction and MMR and autism and fluoridation and...\"\n\nI heard bossman Steve's voice in my head; 'if you can just give them a bit of latitude'...nope. I locked eyes with Lester. \"A word of warning on the last one. You really don't want to have that argument with me. I'm a chemist. I will eviscerate you.\"\n\nAs an opening gambit, that could've backfired fairly badly, especially given that both Ria and Tui responded to my throwdown by clapping and whooping and stamping their feet on the floor, which caused the phone-starers to look up again for a few milliseconds, but he didn't seem fazed at all. Just grinned slyly and nodded and took a white-bread sandwich from the open lunchbox in front of him. Ria was eating an apple which'd come from the same box, so I guessed they were a couple. I wondered about Lisa and Zac. There was something about the way they were sitting in close proximity but totally ignoring one another which sort of suggested a long-established relationship. On the other hand, they weren't sharing food...\n\nThe sound of the plant gearing back up reverberated through the floor as Tui pushed back her chair, calling, \"Alright, e tu! Back to it, everybody,\" and I went to wrestle some more with my program.\n\nAt lunch, the same suspects were populating the break room, arranged exactly the same, but this time a steady trickle of others passed through, making coffees, grabbing stuff from the fridge, heating leftovers in the microwave, before scuttling back outside to combine it with a smoke. As each of them appeared Tui did introductions. I tried to keep up in between listening to Lester tell me how earthquakes were caused by sunspots or some such shit, which...whatever...\n\nBy the end of the first week I had the inventory up to date, and after another couple of weeks I could see how the rhythm of the job was going to work. Trucks came in and offloaded with raw materials, including the chemicals it was my responsibility to order, other trucks came in empty to be loaded up with with wrapped bundles of finished panels. People showed up in the mornings, parked in the same spot every day and got quite pissed off with you if you failed to respect that, worked while the machinery was running, smoked when it wasn't, and headed straight for the bar at the hotel after work on Fridays.\n\nOr at least most of them did. Lisa didn't, because she was a crossfit freak and didn't drink, Ria and Lester didn't, because Lester was nursing some kind of long-running grudge against Jack, and Zac didn't, because he was too busy getting the hell out of dodge or some such thing. He seemed like a reasonably surly guy most of the week, but on Fridays he was noticeably more enthused about life, and by knocking off time he was almost jaunty. He'd fist-bump Lisa after they clocked out and say, \"Nuff of this shit - time for some misbehaving,\" and walk off jangling his keys and nodding his head to some imaginary beat.\n\nAs he came bopping past me on the way to his car one of those times I said, \"So, what kinds of misbehaving can you get up to in Whangarei?\"\n\nHe looked at me like I was insane. \"Whangarei? Fuck that. I'm goin' to Auckland.\"\n\nI nodded. \"Okay.\" But watching him fishtail his way up the gravel driveway in a cloud of dust, I decided that he was the one who was insane. That was a significant drive that he was tacking on the end of a week's work, after which he was apparently going to spend several hours clubbing or bar-hopping or something. Maybe I'm getting old, I thought. That'll be it. I'm getting old. I'm twenty-fucking-five and I have no interest in going clubbing anymore. How sad is that? Oh, but wait, I never really was all that into it...\n\n\u2014\u2014\n\nBefore long, I got into the habit of staying on at the hotel after the Friday post-work drinks and having dinner there. And not long after that I started heading there for dinner on Saturdays as well. Alongside the many, many upsides of not having to share a house with anyone, I discovered there were a couple of teeny tiny downsides. When you don't have any flatmates, you're on cooking every day. And dishes. So I gave myself those two nights off. It might've had something to do with those nights being the best nights for watching Sky Sport, which I also didn't want to pay a subscription for without any flatmates to share the cost.\n\nI made some connections outside of the lunchroom crew, in the way that you do in these places - the kind of subtle bonding that results from watching the same games at the same time, finding yourself shouting the same sort of thing at an inanimate screen: Offside, offside! Jesus christ, he's so far offside he's in Spain!...A couple of people felt the need to have a go about my name, but mostly folk seemed mildly intrigued by this newcomer trying to bed himself down in amongst their community.\n\nI discovered that bossman Steve had helpfully told approximately everybody that I used to be a very promising junior rep player, probably because it provided a conversational intro for him to yammer on about how amazingly Cordell was doing, playing professionally over in Australia. It meant that I ended up talking shop about rugby a lot more than I wanted to, because there was this general assumption that it was my main interest in life.\n\nIt also had the effect of causing Tui to suggest that I should coach the local primary school's Rippa Rugby team. She had a bunch of grandkids at the school (and a bunch more living out of the district), and I'd already picked up that she was one of those people who's everybody's aunty by default - interested, involved, sympathetic, but at the same time not looking to put up with any of your shit, mister...\n\nGod, I tried so hard to say 'no' to her. I came up with so many reasons. I never did any coaching, coaching's a whole different skill set to playing. I never played Rippa Rugby anyway, only full contact, I wouldn't know where to start. I've never worked with kids, I don't know anything about them. I even reached for 'my knees are a bit fucked', which wasn't totally true. She kept brushing my excuses off and telling me to 'just think about it' and coming back a couple of days later until I realised that unless I brutally said 'I have absolutely zero interest in helping out in my local community so would you please piss off', this shit was never gonna end.\n\nBut I didn't want to say that. So I had to say the other thing instead.\n\nAfter listening to her put her case for the fourth time as we walked to our cars after work, I told her, \"Here's what concerns me. I'm a single guy. Is it...are people gonna think it's appropriate for me to be spending a load of time with a bunch of little kids?\"\n\nShe gave me a confused frown. \"Plenty of teachers are single guys.\"\n\n\"Yes, but that's not...I didn't...\" Agh, fuck...\n\nWe'd reached my car. \"Hop in for a moment,\" I said. She eased herself into the passenger seat with a grunt, and I sat down behind the wheel and gripped it with both hands, holding on like a drowning man. I took a deep breath. In, out.\n\n\"So, yeah,\" I said. \"There's more, obviously. The thing is, I'm gay, and...and I'm not really out, and I don't think I really want to be out...here...and anyway I haven't told my folks yet, and so...but the thing is, there are people who know. Like, people from Palmerston North. And...and on the very first day I show up here I run into two people who know somebody I know - okay, so in both cases they were from way back, but still...and if I haven't been open about things, and then it...comes out...and in some people's minds, if you're that kind of pervert then you're probably every kind of pervert, and...\"",
        "I was getting all tight in the chest and panicky-feeling just imagining the shitstorm that would ensue if anybody went all 'won't somebody think about the children'...\n\n\"I only just got here!\" I panted, \"I probably seem strange to a lot of people anyway. I'm not exposing myself to the possibility of being talked about...in that way. I'm not-\" I slammed the heels of my hands down on the wheel in frustration, \"I-am-not-doing-that to myself! No way!\"\n\nI honestly thought that would be the end of it. I thought she would finally fucking quit. Either by proving my point, backing away slowly and acting deliberate and distant around me in future, or by sympathising and agreeing with me that the whole thing was probably too risky.\n\nInstead she sat in silence for a while, chewing on her lip, before saying, \"Okay. But if all that wasn't an issue, would you be prepared to give it a go?\"\n\nI sighed. \"Of course I would, but no offence, I'm not just going to take your word for it that it won't be an issue.\"\n\n\"I realise that,\" Tui assured me. \"I get it. I was just thinking...the problem kind of goes away if you're never alone with the kids, doesn't it? If there was someone else helping you? An assistant coach, somebody everyone already knows? My nephew Matiu, his oldest was on the team last year, and he'll probably want to play again this season. He'd help you out. And he's not...he's not some yokel, he lived in Sydney for twelve years. He's met and worked with all kinds of people, and he's a very decent guy. Would you have a chat with him, see if you can work something out between you?\"\n\n\"Sure,\" I said, \"sure. I'd be happy to.\" And I meant it. I felt actually happy at the prospect. I think it was partly because her level of persistence was borderline comical, but partly it was that she'd gone and found me a solution. A simple, obvious solution that I'd been too worked up to think of myself. I wouldn't have to expose myself to risk, and I wouldn't have to be the asshole who refused to lend a hand either...\n\nA few weeks later I was standing beside Matiu at the edge of a pockmarked school field that it looked like we were going to have to share with a family of pukekos, meeting my 'team'. It was a small enough school that there were no tryouts, no grading. If you wanted to play that was good enough, you were in, so they were a pretty mixed bunch. Gender, age, size, skill, you name it. Well, this is gonna be interesting, I thought to myself. But the one thing they had in common was plenty of enthusiasm, and they all seemed to think I was some kind of god. Not that it stopped them asking me why I was called Michelle...\n\nWalking home in the rain after our third practice, I admitted to myself that it was interesting. The good kind of interesting, not the grim sarcastic kind. It was interesting, and I was even enjoying it. I dried off, threw my gear in the washing machine, sat down to eat some stew made from the freezer full of donated venison that Tamati had left behind - 'eh, it's not like I paid for it, and the missus doesn't like it' - and thought about how fucking decent all these people were. How they didn't seem weird to me any longer. Mostly. I had to spend a lot of time gritting my teeth while listening to Lester, and I still hadn't fully adjusted to the whole free-range horse thing...\n\nThe rain let up shortly after dark and the wind died down a couple of hours later. By the time I went to bed it was totally still, silent apart from the dull bonking of moths head-butting the windowpanes. When I switched off my light they dissipated and I became aware of other sounds. A couple of moreporks were calling to one another, probably on opposite sides of the valley. One was close, crisp and distinct, the other much quieter, like a delayed echo. Interspersed randomly and sometimes drowning them out, a possum was cackling demonically.\n\nUsually I'd get agitated if I didn't fall asleep quickly, 'cos if I had lots of time to think I'd starting thinking about the wrong things. Things like Vincent. But that night I felt okay just being. Just listening. Then the moreporks stopped abruptly, and I had about five seconds to wonder what was going on before the rain hit again. Straight down this time, ridiculously intense, like a bucket of nails being emptied out on the tin roof. I listened to the gurgly choking of the downpipe outside my window as it struggled to cope with the deluge, the wet spatter when the inevitable happened and the gutter overflowed onto the concrete path below, and it occurred to me that Vincent would not have liked it here - and that I did.\n\nIt wouldn't have worked. Regardless of...whatever, it wouldn't have worked. I sat up, reached for my phone, and opened Instagram. I hadn't even let myself look since he left. Too worried I'd go and do something stupid like buy a plane ticket. But there he was, on my glowing screen, bookended by a couple of mates, arms slung around each others' shoulders, leaning against the railings of what looked like a canal, an assortment of apartment buildings on the far side, not a single tree in sight. There was no possible way our surroundings could've been any different.\n\nIt wouldn't have worked. I'd always known it - I just needed to understand it. I lay back down and listened to the rain.\n\n\u2014\u2014\u2014\n\nNext morning, Lisa managed to tip her forklift. I followed the shouting and screaming outside to the courtyard to see it lying on its side tangled up in a mess of cracked and broken panels. Lisa herself seemed mostly okay - she was clear of the wreckage and standing, though holding a hand against her torso in a way that suggested it was hurt. I wondered how she'd managed it. Forklifts are kinda designed not to tip - but she did have a bit of a gung-ho, let's get it done quickly thing going on, in contrast to Zac, who seemed to be much more about precision. I'd watched him working the previous week and thought of that old children's book where the steam-shovel puts a baby bird back in its nest, thought that he could probably pull something like that off...\n\nWhen Bossman Steve arrived on the scene, he was furious. Not the spit-flying-everywhere type of furious, more the white about the mouth, speaking kinda jerky sort.\n\n\"Do you have - any idea - how much paperwork - you have just made for me?\"\n\nPaperwork. Yeah, there'd be a bit of that. I was standing in a huddle off to the side with three or four other shell-shocked people, none of us saying anything much, but I was thinking a mile a minute. Thinking about the orders I had coming in, about the consequences of a potential spill. Some of it was corrosive. Some of it was highly flammable. One or two items were suspected carcinogens. All of it was massively ecotoxic. I imagined a pallet tipping over, containers cracking, leaching their contents across the forecourt, into the drain. And a creek less than two hundred metres away. Paperwork, sure. But also a total shutdown, and fire crews in breathing apparatus and Worksafe audits and angry letters and petitions and maybe even a date in court...\n\nI sidled over to Zac. \"Hey...um...I was thinking, could I maybe get your number? And then I could, like, text you when I'm expecting a delivery? I usually get a notification about half an hour before they arrive.\"\n\nHe didn't say anything, and I wondered if I'd screwed up - if his tightness with Lisa was such that I'd offended him - but after a few uncomfortable seconds he stuck out his hand for my phone, and I passed it over. It turned out to be unnecessary, because Steve kept Lisa on a pretty tight leash when she came back after her wrist was mended, just doing the boring donkey work, back and forth transferring this thing and that. I felt a bit sorry for her. Okay, so it wasn't an accident in the true sense, but it was one little moment of carelessness over against all the other moments when nothing went wrong. But then, paperwork...\n\nRegardless, everyone forgot about it after a while, and things went back to normal, people continued with their routines. For me, that was Fridays and Saturdays at the hotel, Sundays, get up at the crack of dawn to drive to wherever the kids' game was at that week, followed by groceries, petrol, haircut, whatever. Mondays, cook something that'd hopefully feed me for three nights, Tuesdays, training followed by leftovers, Wednesdays, leftovers and trash TV, Thursdays, marmite on toast, and often a little nagging sense of...I don't know...not exactly loneliness. Not boredom. Not restlessness even. Just...meh. I'd sometimes go for a walk if it wasn't raining and there was a chink of moon, and I'd wonder if I'd ever had the slightest influence over anything that'd happened to me, or if it was all just chance, everything. \n\nOnce, early spring, it was quiet and still and after midnight and I'd tramped well north of the t-junction, of any houses, anything at all, and I thought of that stupid horse, the day I got here, standing out in the road...I went and laid on my back on the centre line and looked up at the stars, the cross high in the sky at this time of the year, the Milky Way a wide dusty track almost directly overhead, and I thought, what the fuck do my problems matter? My ideas about anything? So I don't get it - well, maybe I'm not meant to get it. Maybe I'm meant to be amazed. I lay there looking up, feeling the dense cold of the tarseal underneath me, the more prickly cool of the night air, and I thought how all this would be so much more if there was somebody else here to be amazed with. Except...not. Because I wouldn't be doing this if anybody was watching.\n\n-----\n\nAnother Friday, and it was raining - well, of course it was raining, it was springtime in Northland - but I mean it was really fucking raining, like the brief cloudburst style rain that happens in romantic comedies, except it'd been going on for a day and a half without letting up. On the far side of the valley the creek was over its banks and edging across the flat, the pot-holes on my driveway were in the process of coalescing into three or four interesting-shaped lakes, and the sky was still uniform dark grey and tipping it down gallons at a time.\n\nInside the bar, tucked into what was by now my habitual little corner, it was unpleasantly humid, the steam of wet jackets and wet shoes and a goodly number of wet people overwhelming the archaic ventilation system, and just no end in sight. The door swung open with its usual annoying jingle and Zac burst onto the scene - and I do mean burst - there was nothing subtle about his entrance.\n\nHe stamped over to the bar and threw his keys, phone, and wallet down before snapping at Jack for a jug of Speights, all while still shucking off his coat. Then he swivelled round to survey the rest of us, saying bitterly into the silence he'd created, \"Well, you'll be delighted to know we're all fucking trapped. There's a massive slip across the road at Twin Bridges, and another one about five k's south of Kaihoke. The ground's like porridge out there. Like soup.\"\n\nThat announcement caused a bit of general babble, people quite reasonably speculating about what would happen with work if no trucks were able to get through on Monday, but what I thought was, you were gonna go up to Kaikohe so that you could go down to Auckland? Now that's commitment...\n\nHe was clearly royally pissed at being bilked by the weather. I looked on as he had some sort of verbal tussle with Jack, which turned out to be because he wanted a double shot of vodka to get himself started, and Jack wouldn't pour it until he handed over his car keys to be hung on the board behind the bar. He eventually slapped them into Jack's palm with very bad grace, and then tipped the shot back the moment it was poured. I watched as he shook his head and shoulders in that shuddery way you do as hard liquor burns its way down, and...yeah...\n\nI get this feeling it might be unusual in a guy, but I don't automatically assign a fuckability quotient to each and every individual who passes through my field of vision. Could be fear of being found out, and the attendant years of training my eyes not to see in gyms and changing rooms. Could just be how I am. Anyhow, up to that point the only thing I had really noticed about Zac, aside from the fact that he was very good at his job, was that he was welded to his phone anytime he wasn't welded to his forklift.\n\nBut that little movement? I noticed. Noticed-noticed.\n\nThen of course I started to notice other things. Like, he was dressed up. Well, of course he would be dressed up if he was going out on the town. But he was...wow. He knew what to wear. And how to wear it. Like, his hair was a little bit curly. Usually, it was an indeterminate dirty blonde mat, compressed by the hard hat he needed to have on most of the time, but he'd apparently put product in it, making it look all tousled and pullable and...\n\nUrgh. Fuck. I tore my eyes away and stared down into my glass. There was only about an inch of beer left, and I didn't generally like to have a second pint until after I'd eaten, but I needed something to distract me, and where the fuck was my meal anyway? It was taking an age. But the place was packed. Rammed. There was a little clear space around the bar, but...I counted...only three spare seats total in the dining area. One immediately opposite me, one on the table where Tui and Wiremu were having dinner with three of their grandkids, one on the table beside that, all with no view of any of the three screens in the room. Definitely fuller than usual. Probably people were getting rain fade on the TV at home and had come in for the stronger signal, prepared to pay for it in beers and chips.\n\nAgainst my better judgement, I kept stealing little half-second glances at Zac. He was zoned out, ignoring everybody, focused on his phone screen, playing some game one-handed while motoring his way through the beer he had clutched in his other fist. If he kept going at this rate somebody would need to carry him home later. My dick volunteered me for the job. No, I told it, no. Abso-definitely-lutely not. I don't want to carry him to bed when he's comatose! I want to carry him to bed when he's awake and functioning and begging for it with every cell in his body...agh, no...now apparently my dick and my imagination were ganging up on me...\n\nSomething at the periphery of my vision caught my attention. I turned to see it was Tui waving her arm, beckoning to Zac, inviting him to come and take the free seat at their table. Trying, probably, to get him to slow down a bit - and to force some food into him. He held out for a while but she kept it up, and eventually he shoved his phone in his pocket and slipped off the barstool, glass in one hand and quarter-full jug in the other. The free seat was at the end of the table farthest from the bar, so he had to make his way through a narrow gap between tables to get there. As he lifted his arms, beer and all, above his head to shimmy through, his t-shirt rode up, exposing a couple of inches of skin, and my brain just...melted.\n\nI saw him like that at a rave, on a dance floor, 'misbehaving' in a club somewhere, arms upraised, head thrown back, shiny with sweat, lost to the beat, writhing in stop-motion under a strobe light, narrow, lithe, ropy-lean, slim but not frail...he'd be an awesome dancer, I just knew it. He owned his body like nobody else I'd ever seen...\n\nMy meal was placed in front of me with a thunk that actually made me jump. Shit, I thought, was I staring? I was definitely staring. How long was I staring for? At least I had something to focus on now...but I was hungry for more than food.\n\nI kept up a low-level surveillance throughout my dinner, and saw the coolest thing unfold. When Zac first sat down they all started offering him fries and garlic bread and shit, and he obediently nibbled for a minute or so before pulling out his phone and re-communing with it, but the little girl opposite him wasn't having any of that. I couldn't quite keep track of all Tui and Wiremu's grandkids - they brought a set in every Friday on some kind of rotation - but I thought this one might be Kahurangi. About eight, maybe? Now an adult will give up on somebody who's not engaging with them after a while, but eight year-olds, they just double down. In less than ten minutes, Zac had put his phone away and was listening to her babble, eyes locked on her face, nodding now and then, beer apparently forgotten.\n\nThen after the plates were cleared from their table she coaxed him into some sort of hand-clapping game, where you mirror each other's rhythm, hands down on the table, then palms together, then against the person opposite, one hand or both in some sort of sequence. It was too complicated for Zac. That, or he was making out that it was for Kahurangi's benefit. He'd fuck it up again and again, and she'd squeal with laughter, and he'd shake his head and grin - and that smile? - I'd never seen that smile on him before. Not a big smiler, Zac. Occasionally he'd manage a semi-sarcastic, self-deprecating smirk. But not that smile. I would have remembered that smile...\n\nI felt a lump form in my throat, watching them. Oh great, I thought. Now I don't just want to fuck him. Now I want to hold him, and keep him, and...make him smile like that. Jesus, as if this needed to be any more complicated...\n\nThe crowd started to dissipate around eight-thirty, as the people who'd primarily come for dinner finished up and left. It thinned out noticeably more once Sky TV's coverage switched to NRL, which was about when Tui and Wiremu and their entourage decided to call it a day, leaving Zac marooned out in the middle of a by-now mostly empty dining area. He didn't stick it long, but instead of planting his ass back at the bar, he only went over to replenish himself - with just the one beer this time - and then came to sit where the small tables were, over my side of the room.\n\nDirectly opposite me in fact, with two now-empty tables between us. I was surprised he'd choose that spot, given there were plenty of seats available, because it was one of those where you had to sort of lean sideways on your chair to get a view of a screen. But of course the only screen he was interested in was the one on his phone. I watched it lending a slight glow to his face in the dim light, watched his expressions change, now concentrating, now startled, now elated, thinking about that smile, wondering when - if - I'd get to see it again.\n\nHe looked up suddenly. Straight across at me, eyes narrowing in suspicion, he stared. Don't back down, I told myself, don't back down. He's the one that picked a seat in your eyeline. I relaxed into my chair, lifted my chin, returned the stare. Yeah, that's right. I am. Looking at you. And you're gonna be the one to look away.\n\nIt took a while, and several emotions played across his face meantime. The initial what-the-fuck incredulity gave way to something akin to 'you've got to be kidding me', and as the moment spooled on it morphed again to a scowl of almost-outrage. But...not disgust. Not disgust. And in the tiny moment after he finally broke the gaze, his eyes flickered down and up before retreating. Seeing, assessing. Noticing.\n\nHe returned to his phone but he obviously wasn't engaged with it - it was acting as a shield, something to focus on so he didn't have to acknowledge me watching him. But he could feel me watching. He managed about a minute before wrenching his head up, locking eyes with me for a tense moment - and then away. Another extended pause, then again. And again. It was getting to be a pattern. At a point where I knew he wouldn't risk another glance for at least thirty seconds, I pulled out my phone, unlocked it, brought up his contact. I saw him stiffen when my message arrived.",
        "~Anyone ever tell you you have a gorgeous smile?~\n\n~Nnnope.~\n\n~Then I guess I'm your first.~\n\n~Hah. Not even. I've been WELL used.~\n\n~And none of them ever told you that you had a gorgeous smile?~\n\n~Still nope.~\n\n~That sounds more like plain used to me. BTW, you have a gorgeous smile :) ~\n\nZac swept up his gear, shoved his chair back and stood, eyes blazing, his whole body arcing and sparking with fury as he stalked, not out the door, but across to my table to fling himself in the chair opposite. The aura coming off him was one-hundred percent angry cat. That thought tipped me into a flashback - the sleek grace of him, as he negotiated that gap between tables, the sliver of belly peeking out, the way his dark jeans perched on his hips...\n\n\"It's no use trying to fuckin' romance me, okay, because it won't work!\" he spat, leaning in on his elbows, chin in hands, all hot, hot fizzing defiance.\n\n\"Noted,\" I said, which if anything seemed to piss him off even more.\n\n\"I know what you're thinking,\" he hissed, \"and you can stop thinking it right fuckin' now! It's not gonna happen!\"\n\n\"Okay,\" I agreed. \"Out of interest, what is it that I'm thinking?\"\n\nHe seethed for a second or so, shoulders rising and falling. \"You're thinking about how these stupid fuckin' fish lips of mine would look wrapped around your cock. I know how it is, I know-\"\n\n\"Nuh-uh,\" I told him, lifting a finger to my lips, \"no. Sh. I hadn't got that far yet. I was thinking...I was thinking about before, when you were squeezing between those tables,\" I gestured across the room, \"and how, and how your shirt rode up and I could see you weren't wearing a belt and the way your jeans looked...and I was thinking about how there might be a little gap in the centre back where your waistband's sitting clear, there might be a beautiful little gap that I could get a finger in, or maybe two, and I was thinking about how your skin would feel if I was stroking you...stroking you just gently with the backs of my fingers, and...\"\n\nZac had gone still when I started talking, very still, almost as if he was transfixed. Then he broke the spell abruptly, coming to his feet. \"Okay. Let's go.\" \n\nHoly shit, I thought, as I grabbed my stuff to follow him, hoh-leee shit. It is gonna happen. It is. And it's gonna be...a whole other thing...\n\nThe tension between us, it was incredible. Even though it was still raining and we had to run for my car, and it was still raining and my driveway was now one long lake that we cut a pluming wake through, and it was still raining while my door did its usual shitty thing, through it all the tension built and built and built, and it felt like a fever that wouldn't break until I was touching him, until I was up against him, until I was inside him.\n\nI think it was the tension, the fever, that made me do what I did, because I'd never particularly felt a need to manhandle anybody before, but the instant he had his jacket off, I was on him, flinging him face-first toward a wall, following hard behind, crowding him into it while I lifted his hands and pressed the palms to the painted surface either side of his head.\n\n\"Stay,\" I growled, yanking the neckline of his t-shirt aside and attacking the skin of his shoulder with my lips and tongue and teeth, back and forth, over and over...I was aware, dimly, that I was jumping in the deep end, starting...kinda not at the start, but the fever...and I knew Zac was feeling it too. He hadn't said a word, but he was breathing hard and heavy and subtly flexing his entire body, and my thigh, when I pressed it forward, slid between his like a hot knife through butter...\n\nMy hands covering his, pressing in, continuing my assault on his shoulder, I ground on him for a while and he ground back.\n\n\"I'm gonna be so good to you,\" I whispered against his mauled skin, \"I'm gonna be so good - but just so you know - you're gonna be able to feel where I've been for a lo-o-ong time.\"\n\nA tiny shudder, a grunt that was edging into a moan. So, okay...he liked that.\n\nI stepped away and pulled up his t-shirt, holding it bunched in my left fist halfway up his spine, looking down at his jeans.\n\n\"Oh yeah,\" I murmured, \"oh yeah, there's a gap. Just...right...here...\" grazing in super-gentle with my index finger. I felt a huge breath lift my fist. \"That's one finger in, and that was easy, wasn't it mmh? No problem...two fingers now, Zac,\" sweeping side to side, across the tiny divot that was the very top of his crack, as he heaved in air, \"you're taking this so well, how about we try three, baby? Three fingers, here we go...that's feeling a bit tighter isn't it? Not a lot of room...but you can do it, you can take it, can't you? You want to take it, don't you?\" \n\nThe reply was all moan this time, a thready, surrendering yes. I eased my hand further down and discovered he was commando.\n\n\"Oh, what's this? No underwear - aren't you a naughty boy? Or were you hoping I'd take you home, is that it?\"\n\nI knew something was wrong before he spoke. The change was instantaneous. He didn't move, but suddenly he was rigid under my hands.\n\n\"Michel? I, um...don't. Sorry...to be a cocktease, but I wanna...I wanna back out now.\"\n\nI let go. Took a step back. Zac turned to face into the room, keeping himself plastered against the wall, holding up his hands to warn me away. He looked shellshocked, and I felt sick to my stomach. I didn't know what exactly it was I'd done, but clearly it'd been way too much.\n\n\"God, I'm so sorry,\" I stammered, retreating another pace. \"I didn't mean to...I came on too strong, I...fuck, Zac...I'm sorry...\"\n\nHe shook his head. \"No, you're good. Not...not your fault.\"\n\n\"Yeah, it is,\" I said. \"I freaked you out.\"\n\nHe shook his head again, blinking rapidly. \"No, I freaked me out. How...how I let this get away from me. I don't do this. I don't misbehave with people I know. Not ever. Too complicated. Just...no. And sorry. To have, um, lead you on. But...\" He was edging toward the ranchslider as he spoke, getting ready to rip it open, turn and run. If the door cooperated.\n\n\"Zac, wait on,\" I pleaded. \"It's still fucking pissing down out there, and it's too dark to see anything, and you're not exactly dressed for it! I'll take you home. I will, okay? You don't need to be worried about getting in a car with me. I'm not gonna try and...do anything more. Cross my heart.\"\n\nHis shoulders slumped. \"Okay.\"\n\nHe'd capitulated, but he hadn't relaxed any. I tried to think what I could do to reduce the sense of threat. It occurred to me that my sheer physicality was half the problem. I'm intimidating by default, because I'm so big. I sat down cross-legged on the floor, hoping it'd help.\n\n\"Zac, listen,\" I pleaded, looking up across at him, \"I'll drive you home. I'll take you whenever you ask. Promise. But...I think it shouldn't be just yet. I think we should hang for a bit and try to talk through this. Hear me out on this one. This is weird right now, yeah? Really...uncomfortable?\"\n\nHe nodded rapidly, without meeting my eye.\n\n\"The thing is,\" I continued, \"we have to go to work on Monday, regardless. That's just how it is. Realistically, we're not gonna be able to avoid each other. And I think that if we leave it weird tonight, it's going to be weird forever. And...\"\n\n\"And people will notice,\" he said, swiping his palms down over his face. \"Fuck. Fuck. Fuck.\" He slid down the wall and sat cross-legged himself, looking sour and angry. \"So we're supposed to talk through this?\" he hissed. \"Mind telling me what the fuck that even means? Because I'm not planning to explain my bloody life choices to you. Or to apologise.\"\n\n\"I didn't mean that,\" I assured him. \"And if anybody should be apologising right now, I think it's probably me.\"\n\nHe glared. \"I'll pass.\" \n\nWe sat in silence for ten or fifteen seconds, until Zac spat, \"This isn't getting any less uncomfortable!\"\n\nI grunted agreement. He was obviously feeling pretty hostile toward me, but I didn't feel hostile toward him. I didn't think I'd be able to feel hostile toward him even if he got up and kicked me in the balls. I tried to think about how I did feel, and...nope. Far too complex to pin a word on. But bad enough that the idea of being kicked in the balls was kinda...whatever...\n\n\"We don't have to sit on the floor,\" I said. \"I have couches through there, and we could have a drink.\" Not alcohol though, however tempting it felt. Coffee? I looked at the clock. It was only...god, it wasn't even ten. Still kinda late for coffee, though. \"You want a milo?\" I asked. \"Or I can do coffee, if you prefer?\"\n\nHe shrugged. \"Milo's good.\"\n\nMilo is good. Comforting, grounding. Relaxing...hopefully. I brought two mugs and a packet of gingernuts through to the lounge, where he'd tossed himself onto a couch.\n\n\"Want a couple?\" I said, offering the the biscuits.\n\nHe recoiled, clutching his mug to his chest. \"Jesus, no! What is wrong with you? You don't dip gingernuts in milo! You dip them in tea!\" He paused. \"Or coffee, maybe, I guess.\"\n\n\"Tea?\" I said, sitting opposite him, \"Tea? Okay...you drink tea, and apparently I'm the weirdo? Whatever...\" Slowly and deliberately, holding his gaze, I dunked a biscuit, leaving it until I knew it'd be just short of disintegrating before carefully transporting it to my mouth...\n\nZac closed his eyes and shuddered. \"Ugh, you fucking deviant,\" he whispered. \"You absolute utter freak.\" But the corners of his mouth were quirking.\n\n\"Oh, what?\" I said trying to sound innocent, \"Is it making you uncomfortable?\"\n\nHe laughed. \"Asshole.\"\n\nWe sat like that, throwing insults at each other over our preferred beverages, foods, movies, music, sports, RPGs...there wasn't much cross-over. But the atmosphere in the room started to feel a lot looser.\n\nAt about the point where Zac lifted his socked feet up onto my coffee table and spread out his arms along the back of the couch, I prompted, \"So, what's with the whole 'misbehaving' thing?\"\n\nHe snorted. \"Oh, come on. I think you get it. Friday evening, head into town, hit some clubs, get some dick, sleep in the car. Saturday, do my errands, grab a shower at the pools, wait until evening, hit some clubs, rinse, repeat. I mean, what needs explaining there?\"\n\n\"Why it's called 'misbehaving',\" I said.\n\nHe smiled. It was the standard sarcastic variant, not the...really pretty one. \"Ah yeah, that's down to my mum,\" he mumbled. Which explained approximately nothing.\n\nThere was a long pause while he stared down at his hands, but eventually he started talking again. \"So, I grew up on a farm, right? Down south. Kind of a big one. As in, a station. Three houses on the site, and quarters as well, full-time manager, so on. My dad was the leading hand. Still is, far as I know.\" He shrugged. \"Anyhow, we lived in on-site in one of the houses, but it was...y'know...\" he gestured vaguely, \"over on its own. None of them were close to each other. Now my dad was big into pig hunting, so we had pig dogs about the place always. You following me?\"\n\nI nodded, and he continued, \"So we'd get the manager, Warren was his name - ugh, what a cunt - he'd be coming around a few times a week looking for Dad, and you'd hear him bumping up the drive in his ute and, you can imagine this right, always three, four, five dogs on the back, in the tray, barking away.\"\n\nHe slouched further, stretching his legs across the coffee table. \"Generally working dogs are bitches,\" he said, \"the heading dogs especially. And of course pig dogs are usually left uncastrated, for the size and the aggression. So every time he'd be coming, Mum would start screaming at us, 'Isaac! Lucas! Get them dogs tied up, or we'll be having all kinds of misbehaving!' and we'd have to streak out there and try to catch them and drag them away before they could get up on the tray of the ute.\"\n\nHe looked at me briefly, then away. \"And I think...obviously I knew what she was on about from the beginning - it's not like you can shield kids from fucking on a farm - but at some point I realised it's not all equal. You run a ram in with a flock of ewes, nobody calls that misbehaving. That's servicing, or covering, or just...breeding. And...yeah. I think...when I accepted that I was never gonna be involving myself in the whole breeding side of the equation? I guess...I guess I leaned into the misbehaving thing a little.\"\n\nI raised my eyebrows. \"A little?\"\n\n\"Okay. A lot.\" He smiled, and it was one of the good ones. \n\n\"And Isaac, eh?\"\n\n\"Hey,\" he said, warningly, \"I don't think you should be giving me shit about my name...\"\n\n\"Believe me, I'm not,\" I assured him. \"I never give anybody shit about their name. Ever.\"\n\n\"I get that,\" he said, \"I get that. And seeing as we're on the topic, what the hell is with Michel? Your mother have her heart set on a girl or something?\"\n\nSo I told him about Mum. And about Dad, and Ben, and Chloe. About home and rugby and giving up on rugby. He didn't really reciprocate - I guessed that home was something he didn't especially want to dwell on - but he told me he started driving a forklift for 'something to do in the meantime', while waiting out the time period before he could apply for a class 3 license.\n\n\"I wanted to drive trucks,\" he said, \"but, y'know, the big suckers. Long haul. It was my thing, always. Just me myself and I on the road, in charge of umpteen tons of metal. But god, it's such a process. You have to hold a full license for six months before you can even apply for the light commercial grade - and who wants to drive a fuckin' milk float? - and then you've got to have that full for six months before you can move up a step, and then there's another step. Forklifts, all you need is an endorsement on your regular license, so I could get started right away. And then...I was good at it. Seemed to have a knack for it from the beginning, so...here we are.\" He stood and stretched. \"Think I'll head back now, if that's good with you?\"\n\n\"Sure,\" I said, getting to my feet, digging in my pocket for my keys. \"Out of interest, what brought you all the way up here?\"\n\nHe shrugged. \"Not so cold up this way, is it?\"\n\n\"Pretty friggin' rainy though,\" I pointed out, opening the door. It was still coming down crazy-pants outside.\n\n\"Fuck, you can say that again,\" Zac agreed, worming into his jacket. Once we'd made it to the safety of the car, he said, \"Okay, so it might be wet, but it's a damn long way from Southland.\"\n\nAnd there it was. What I'd suspected. \"Don't miss anything about it, huh?\" I said.\n\n\"Not much,\" he said. \"I guess just the shearers.\"\n\nI didn't mean to crack up at that. Fortunately he didn't take offence.\n\nI poked his leg. \"Okay, right. Zac misbehaved with the shearers - good times on the farm, eh?\"\n\nHe laughed as well. \"It was only once, dickhead. Only once.\"\n\nWhereas for me, it was less than once. I got back from dropping him home, wrestled with my stupid door then stepped inside dripping all over the lino, and I saw...I saw that bit of wall. I remembered the way he'd looked, mashed up against the paintwork, the feel of him under my fingers, the way he responded to me, the way he was so, so along for the ride - until he wasn't.\n\nI felt like I'd missed out on the experience of a lifetime. It would've been hot, yeah. But more than that, it would've been profound. It would've been...something else again. And it wouldn't have only been once. There was the kind of hunger behind it that grows, rather than abates, with feeding - which was maybe the real problem for him.\n\nI went to bed and lay there wondering when the rain was going to stop.\n\n-----\n\nIn case you care, it finally quit about 2pm on Saturday, by which time huge swathes of Northland were under water, and it was all over the news, and the Minister for Civil Defence choppered into Kaitaia to make a speech for a bunch of folk holding big fuzzy microphones. But it wasn't that much of a drama. Nobody died, and the water receded and the slips got cleared and things went back to normal. For me, though, it was a different normal than before, because once you've thought a thought? - that's it, job done. You can't un-think it. Can un-see what you've seen, un-feel what you felt. Zac existed, he was in my environment, and I continued to want him at levels which ranged from 'quite a lot' to 'clawing my eyeballs out'.\n\nAnd then he started randomly visiting me in the evenings. Very randomly. No pattern, no warning. Seriously, I had a phone, he had a phone; you'd think he could at least text beforehand, but no, his chosen option was apparently to just materialise on the porch two or three seconds after I heard his car door slam. At the beginning, I would definitely have preferred not to have to deal with any extra of him. Fortunately, he ignored me at work in exactly the same way he always had. Unfortunately, he was already present continuously as a thumping bass rhythm all the way in my veins, but I couldn't exactly argue against us hanging out - I was the one who'd insisted it was the best way to normalise things.\n\nSometimes I actually thought it might work. Sometimes just being around him made me feel like I had a sticky lump in the base of my throat that I couldn't quite swallow, a sense of tension there, like everything was tight and constricted. Sometimes the sense of tightness and constriction presented lower down - at least with that, I could do something to relieve the problem after he left. But sometimes there wasn't a problem. Sometimes he could show up of an evening and we'd talk and laugh and joke around and knock back milo or beer and it all felt...fine. Occasionally these times would stretch into weeks, and I'd just get to the point of thinking; See? Told you so. It's sorting itself out. Time and patience, Michel. Time and patience is all it needs.\n\nBut no. Out of nowhere, I'd catch sight of a lopsided yawn, a long-fingered hand running across his scalp, making furrows in his hair, a sliver of smooth stomach peeking out as he stretched, and I'd be euphoric and grateful and hungry and horny and and despairing all at once, buried under an avalanche of emotions I knew would take me days to dig my way out of. And the worst of it was that sometimes it took nothing, nothing at all, to trigger it. Sometimes it just happened. He'd spawn on the other side of my shitty ranchslider and I'd walk over, slow and measured, to shunt the fucking thing open far enough to admit him, nod wordlessly at him like some bro, but inside I'd be all like a puppy whose owner just got home after a long day at work - with the jumping and panting and drooling and generally short-circuiting with excitement...\n\nMaybe two months after the flood, two months into my new kind of normal, Tui cornered me as I was heading home one afternoon.\n\n\"I just wanted to let you know I'm really happy for you,\" she said in an undertone.\n\nI was totally baffled. \"Wha-at?\"\n\n\"You,\" she said, nodding first at me and then across at Zac, who was strolling along buried in his phone as usual, her eyebrows significantly raised.\n\nOh fuck, I thought. People have noticed. But what had they noticed? Probably just his car outside my house - it was getting to be fairly light in the evenings.\n\n\"I have no idea what you're talking about,\" I told her, calmly as I could.\n\nShe just nodded again, amusement and disbelief written across her face. Then she bloody winked at me. It was all kinds of weird, getting that sort of thing from somebody who was a grandma.\n\n\"We're not...there's nothing going on there,\" I specified, looking intently into her eyes so she could see I was wasn't joking.\n\nShe tipped her head to the side and regarded me for a moment, looking serious at least, but what she said was, \"Ah...Michel? I already know he's gay. He told me so himself.\"",
        "I didn't doubt it; after all, my own instinct had been to confide in her. But she needed some serious schooling.\n\n\"Okay,\" I replied, \"so you know I'm gay, because I told you so myself, and you know Zac's gay, because he told you so himself. But what you don't know is whether I know Zac's gay. For all you know, you just outed him to me.\"\n\nI saw her eyes go very wide, her mouth form a silent 'O' of horror.\n\n\"It's okay,\" I reassured her. \"I actually did know. But amazingly, we're still not fucking! Just because we're both gay, and, whoa, we hang out together sometimes, you shouldn't go and assume shit, alright!\"\n\nShe swallowed. \"Sorry, Michel. I uh...obviously I was out of line there. But it wasn't...I hadn't concluded you two were involved just because you're spending time together. It was more because Zac's stopped going into town in the weekends. I thought it must be because he'd...um...found something better.\" She sighed. \"I really hoped he had found something better.\"\n\n\"Oh well,\" I shrugged. \"Sounds like we were both talking past each other some.\" \n\nI walked off, frowning to myself as I attempted to process all that. Especially the last bit. Zac's stopped going into town in the weekends...but he hadn't been coming to the pub. He hadn't said anything about it to me. Though why would he? Perhaps he's a bit short of cash at the moment, I thought. Or maybe his car's getting unreliable. If it failed its warrant, he might not want to risk taking it somewhere it could actually get stickered. Maybe his car failed its warrant and he needs to save up to get it fixed before he can be taking it anywhere it might get stickered. Or hey, maybe he's fucking taken up knitting. Whatever. Not my business.\n\nDid that stop me from obsessing over it? Did it hell. I wasn't comfortable with this missing piece, because I felt that the more Zac visited, the more I was getting to know him, his likes and dislikes, his moods and his rhythms. Like me, he was restricted to fairly retro forms of entertainment when not in town, by a lack of quality internet. I'd given up my Netflix subscription when I moved because it just wasn't worth it, and online gaming was similarly out, but sometimes Twitch or YouTube would play semi-decently. Over time, I came to understand that the objects Zac was holding when he showed up outside my door were an indicator of his current internal state. If he had his playstation, he wasn't interested in talk, and he'd be all surly and monosyllabic if you tried to engage with him outside of the game. On the other hand, if he was carrying a six-pack or some junk food, he was feeling chatty. Actually, chatty was probably pushing it. More like not totally opposed to the idea of talk...\n\nAnd then very occasionally, he'd arrive empty-handed, seeming kinda amped up, almost lit from within, sneaky and playful, continuously baiting me, giving me shit . Thank god it didn't happen too often, because...because it was kind of torture. A good kind of torture, maybe, but...he was like that one evening when we were working our way through a box of beers and watching stand-up on YouTube - I spent more time laughing at the stuff Zac was saying than at the guys who were being paid for it.\n\nThen he got us onto the feed of some crazy band who played metal covers with a hillbilly twist. They were really bizarre, and kinda funny and also - possibly because I was four beers deep - also quite good. I hummed along discreetly through 'Thunderstruck' and 'Paradise City', but when we got to 'Run to the Hills' I just let go and belted it out.\n\nZac, possibly to punish me for the auditory assault I was subjecting him to, started in on me about one of the band members. \"How about that big lad on the left, eh Michel? Plenty to grab hold of there. You like that? You'd be down for a bit of that, huh? I bet he's right up your street...\"\n\nI couldn't believe he was going there. We'd stayed really, really wide of...that kind of thing.\n\n\"That's right,\" I said sarcastically, \"I've actually always had a bit of a fetish for guys in dungarees wearing dead animals on their heads, and the accordion is just...mwah! The finishing touch...\"\n\nHe laughed and started flicking his spent bottle caps across the room at me. \"He's got some nice side-boob going on as well. I saw, I saw you looking...\"\n\nNo you fucking didn't...\"Jesus, dude, leave the poor guy alone,\" I told him. And me. I don't wanna do this...\n\nHe laughed again. \"The poor guy. The poor guy - c'mon, admit it, you're into him!\"\n\nI raised my brows. \"Uh-huh? You sure you're not projecting here, Zac?\"\n\nInstead of answering he started throwing more stuff at me. There weren't any bottle caps left so it was pens, my phone charger, a couple of remotes, a book.\n\n\"I'm just gonna put all this in a nice pile beside me,\" I said, \"and when you've run out of ammunition I'm gonna throw the whole fucking lot back at you. You realise that, right?\"\n\nHe leaned back into the couch, spread himself, lifted his chin in defiance. \"Bring it!\"\n\nBring it. Bring it. Yeah, don't issue invitations. Especially not when you're in that kind of pose, or I'll...I needed to draw a line under this. It was Thursday and ticking past eleven, and the marmite on toast had worn off quite a while ago.\n\nI stood. \"I'm getting the munchies. Think I might make some pikelets. You in?\"\n\nZac scrambled up as well. \"Oh shit, yes! Totally!\" He followed me out to the kitchen and leaned against the fridge, watching as I put a pan on to heat and got to work on the batter.\n\nI remembered something. \"I don't know if it's a dealbreaker,\" I told him, \"but I don't have any maple syrup. Or any golden syrup. Don't really do sweet spreads. Though I might have jam, maybe?\"\n\nHe made a face. \"Jam? What for? You make them with butter, you cook them with butter, and you eat them with butter. End of.\"\n\nI grinned. \"Seems like we agree on something at last.\"\n\nWe didn't agree about how the person who isn't the cook should behave in a kitchen. Zac kept nipping in behind and around me to poke his finger in the batter and lick it off. It was a bloody pain. I didn't look, I did-not-look, but I didn't need to. I got the visual in my mind anyway, and it really felt like the absolute top of the list of things I didn't need to be dealing with at that moment.\n\n\"Would you fucking stop that?\" I hissed, the third time he went in. \"Seriously, what is your problem? You want me to pour some into a bowl for you so you can lap it up like a cat, is that it? Well, just say the fucking word and I will!\"\n\nHe rolled his eyes, like I was the one being unreasonable, and retreated back to the fridge. But not for long. Instead he grabbed a freshly cooked pikelet off the rack, wrapped it around a hunk of butter, and, took a huge bite.\n\n\"Hey, that's not fair,\" I protested. \"I'm still working here!\"\n\n\"Thucks to be you, I guess,\" he mumbled around his mouthful of pikelet.\n\nYeah, no shit. It sucks really quite a lot to be me, today...the next time he went to try it, I saw him coming and slapped him with the spatula I was using to turn the pikelets.\n\n\"Fuck! Ow!\" He hopped out of reach and looked down at his leg. \"Oh, you dick! You got butter on my jeans!\"\n\nI looked. He was right. There was a greasy, obviously spatula-shaped mark on his outer thigh. I shrugged. Guess it sucks to be you now...\n\nHe was rubbing it with the heel of his hand. \"Not to mention you basically fucking branded me!\"\n\nI opened my mouth - then closed it again, because really you can only jokingly say, 'ohh sweetums, show me where it hurts and I'll make it all better' to someone you haven't tried to get with. Instead I said, \"Well, how about you stop?\"\n\nHe didn't stop. He got in around me, evading the spatula, three more times, while the pile beside me grew and the kitchen filled with bluish, toasty-smelling butter smoke. It wasn't that I cared particularly how many pikelets he ate - there were still gonna be plenty for me - it was the teasing, taunting way he was going about it. He was doing it because I'd told him to stop, and doing it increasingly suggestively. It was misbehaving dialled up to eleven. He obviously felt fairly safe over by the fridge, as he waited to catch my eye before eating the latest one. It was rolled up tight like a cylinder around it's serving of butter, and leaking, dripping from its greasy glans onto his palm. Holding my gaze, he fed the entire thing into his mouth, then licked up the mess on his hand in a single swipe...\n\nSomething inside of me snapped. It was too much. I switched off the stove, put down the spatula and glared. Zac glared right back, daring me to make something of it. The situation reminded me of the staring pissing-contest we had at the bar the night of the floods. It reminded me of bringing him back here, of the way I had him up against the wall, the way he was loving it, until he wasn't, until he said 'I want to back out now', and I stepped away and gave him space...\n\nYou know what? I thought, I've been giving him space, and giving him space, and actually I'm sick of giving him space. If he needs space so much, then why is he always around at my fucking house? I stepped forward, right up into his face.\n\n\"Zac,\" I growled, \"you've just used up your last get out of jail free card. In about ten seconds, I'm going to start kissing you, and I'm not prepared to guarantee that's all I'll be doing. And if you have a problem with any of that,\" gesturing with my arm, \"well, I think you know where my bloody door is by this point!\"\n\nHe stared me down, because of course he did, because if there was one thing this guy didn't know how to do, it was lose.\n\nHis gaze faltered, flickered - he looked decidedly hesistant as I murmured, \"Three...two...one...\" but he let me do it. He didn't run. There was a split second of...something...right at the beginning, a tiny give like a bubble bursting, and then, god...then that tension again, that fucking runaway freight train, picking up speed, picking up speed...he was sweet-smoky-buttery and warm and alive and urgent against me, unhinging himself, allowing me in, letting me devour him...I knew I'd get too fast, too much, too quickly if I didn't take a breather.\n\nI broke away to look at him, holding his face in my hands. His pupils were huge.\n\n\"Wow,\" I whispered. Just fucking wow.\n\nHe laughed shakily. \"Yeah. I didn't...didn't know it would be like that.\"\n\n\"Oh, c'mon,\" I said. \"You had to, you had to know it'd be good between us. You felt it...that other time.\"\n\nHe shook his head, still between my palms. \"No, I mean...kissing. I didn't...realise...\"\n\nMy jaw dropped. \"Um, what? You never kissed anybody before? No way!\"\n\nHe frowned fiercely. \"Yes way! You don't kiss hook-ups! And I already told you I don't...I don't...I mean I don't usually...\"\n\n\"Misbehave with people you know? Yeah, I remember. Are you gonna be making an exception for me, though?\"\n\nHe swallowed audibly, looked down. \"I think...I already did.\"\n\n\"Good,\" I said, swooping in on his top lip, near the corner, drawing it between my own, nipping lightly, \"because this is not a hook-up. This is not a once-er. And Zac?\"\n\n\"Uh-huh?\" he said breathily, distractedly, as I worked my way along his jawline, headed for his ear.\n\n\"I don't want to share.\"\n\n\"I - I get it,\" he stammered. His hands had snaked their way up my arms and were now clutching my biceps, the first joints flexing in time with my nuzzling.\n\n\"And you know what else?\" I breathed, right into his ear, blowing across the wetness I'd made, \"I guess in some ways I kind of am your first...\"\n\nHe snorted. \"That was a pretty lame joke the first time you made it.\"\n\n\"Not joking,\" I mumbled, lifting one of his legs, holding it up against my hip, my lips working their way down to his neck. I kissed all the way down the lovely ropy length of it, and when I got to where his t-shirt was hindering me and went to move it aside, I remembered...\n\nI remembered we'd done this before. I peeled him off the fridge, turning him away from me. Slowly, this time, I walked us over to the patch of wall beside my ranchslider. Gently, this time, I came up behind him, put his hands up, pressed in, held.\n\n\"One day,\" I told him, \"one day, we're gonna finish what we started here...\"\n\nHe moaned. Long and low and oh, so needy, and the feeling it gave me? - I knew he was at least as helpless in the face of this thing as I was. I brought my mouth to his ear and my hand to his neck and squeezed as I growled;\n\n\"Yeah, I know, I know. But not today.\"\n\nIt wasn't very far to my room, but it took us a while to get there, due to the fact we had to basically shuffle, because neither of us was prepared to detach from the other, and I was trying to coax his t-shirt off as we went. We stumbled for the third time on our entangled feet just inside the bedroom door and Zac pulled away, peeling the clinging fabric up and over his head with a static crackle, letting it fall.\n\n\"There, dipshit! Happy now?\"\n\nI grinned. \"Yeah. But not satisfied.\" He'd given himself a mild case of bed hair and it made him look painfully fuckable. My dick actually ached just from watching him. I stepped forward, zeroed in on his button, his fly, but he knocked my hand away.\n\n\"Nope,\" he hissed, reaching for me instead, and then...fuck, I should've known - I'd watched him work, after all...I felt like I barely had time to blink, he was so deft and quick...my t-shirt was gone, over there somewhere, my jeans were undone and he was kneeling down, fingers hooked in both waistbands, yanking everything clear and away...\n\nHe sat back on his heels, whistling through his teeth. \"Uhhh, Michel? I've been living like a freakin' nun for the last three months - how am I supposed to take that?\"\n\nI lifted his chin, stroked his cheek. \"Slowly, I guess,\" I said. \"Or...not at all. I'm not gonna try and make you do anything you're not comfortable with, okay?\"\n\nHis eyes narrowed and he grabbed my thighs, hard. \"Oh, hell no! Did you not just hear me say it's been three whole months? You'd fucking better fuck me! You are going to fucking fuck me!\"\n\n\"Okay. I guess I fucking am.\"\n\n\"Now we're clear on that...\" He lunged forward, and I thought...well obviously I thought...but no, instead of trying to swallow my dick, he face-planted into my groin and started to kinda weave his head about. I didn't get it at first, but then he tilted his face and moved lower, down under my balls and across, and...oh god. He was rubbing my junk all over himself, coating his skin in my musk, forehead, cheeks, chin, nose and neck, silent and focused, over and over again...I watched entranced. There was something so base, so animal, so absolutely unfettered about it - like he was a dog, ecstatically rolling in some sublime pile he'd found, existing on a visceral, instinctive plane, surroundings irrelevant, if not entirely forgotten...\n\n\"My god, that's hot,\" I breathed.\n\nIt broke the spell. He stopped, but when he looked up at me, I forgave him. His expression, his eyes...fuck, he looked drunk. No, stoned. On me. I reached down and finally - finally - took a handful of that tantalising hair, tilted his head back further, and he let his mouth fall wide open.\n\n\"Oh yeah,\" I whispered, \"yeah, you know how it works, baby. Don't you?\"\n\nHe made an 'uhhhh' sound down in his throat, which was about all he could manage in the way of communication with his jaw hanging like that, but it was definitely a noise of agreement, so I gave him what he was looking for. I kept hold of his hair and made a pretence of guiding him back and forth on my length, but actually, from the moment he sealed himself around me, I understood I wasn't running this particular show. Zac might have been on his knees, but he was also in his element, and I was the guy who was having it done to me. God, was I having it done to me...I already knew how skilled, how ardent, how strong his lips and tongue were, because my mouth felt used in the best possible way, and uggh, now, uggh, my dick was getting a similar head-spinning workover...\n\nSeeing as we'd established that fucking was compulsory, I couldn't let it go on for too long. Regretfully, I hooked my hands in his armpits and hauled him to his feet. He stared at me with those same clouded eyes as I wiped his slobbery chin, chastely kissed his wet soft lips and gently laid him down on the bed, following close, hovering over him, forehead to forehead.\n\n\"So what's this?\" he said, sounding vaguely amused. \"You're gonna handle me like some fucking piece of antique china now?\"\n\nI nuzzled my nose against his. \"I thought I'd start off that way, yeah, and work slowly up to the pile-driving. That okay with you?\"\n\nI could see his lip quirking, trying to pin down a smile. \"Long as you get there,\" he muttered, trying to sound grumpy.\n\n\"I'll get there,\" I promised, fumbling with his button, tugging his jeans down, \"we'll get there.\"\n\nIn jarring contrast to his general leanness, his dick was stubby but...mmm...thick. Almost choad territory. I was thrilled, seeing as I adore having my mouth stuffed full of meat, but I don't feel the same way about my throat - that shit hurts.\n\n\"You don't have to do that,\" he whispered urgently as I descended on him, \"Michel! You don't need...\"\n\nI let go and rested my chin on his shaft, staring up at him, propped on his elbows regarding me worriedly.\n\n\"Umm, hello? Did you maybe miss the part where I'm gay? I love doing this.\" A thought struck me. \"Please, please tell me you've had your dick sucked?\"\n\nHis ears went a dull red. \"Course I have. Couple of times. Just not...\" he trailed off.\n\n\"Just not...?\"\n\n\"Oh god...not in bed, okay? Not - I haven't...haven't fucked in a bed either...\"\n\nI raised an eyebrow and grinned. \"Damn. All these firsts piling up here...\"\n\nHe scowled. \"Shut up, asshole!\"\n\nI shut up for a little while, while I enjoyed his fantastic chub, and he rocked his hips and drew slow deliberate breaths, then I let it plop out with a lovely wet slap, and raised my head.\n\n\"So...if not in a bed, then...?\"\n\nHe shrugged with his face. \"Doesn't matter. Storeroom, loading bay, wherever. So long as its quiet.\" A pause. \"Disabled toilets are good. Plenty of room, usually fairly clean. Plus they have rails to hold onto while you're bent over getting hammered.\"\n\nWell. Okay. That was, broadly, what I'd expected to hear, and yet...something about it felt off.\n\n\"And did you get to come during these encounters? Any of these dudes who bent you over and hammered you also lend you a hand?\"\n\nThe redness from his ears populated his whole face, as he closed his eyes to me. \"I can take care of myself...just...I mean, anytime,\" he mumbled.\n\nI felt like I might cry. I crawled up the bed, straddling him, and took his face in my hands. \"Jesus christ, Zac! Why would you allow yourself to be treated like that?\"\n\nHis eyes opened again, flashing and furious. \"I enjoyed it, okay?\" he spat. \"I never felt like I was missing out on anything, until you showed up and made me feel like, like I was...missing out on something.\"\n\n\"Sorrynotsorry,\" I told him.\n\nHe wrenched my hands away from his face. \"You should be fucking sorry! I had a system that worked for me for ever, and then you ruined it!\"\n\nAnd that's why you stopped going into town...totally not sorry.\n\nI took his hand and moulded it to my erection. \"Poor baby, I ruined your system. How's that? Not satisfied with just any old dick anymore, it's got to be this dick?\"\n\nHe snatched his hand away like it was burnt. \"Stop fuckin' hassling me!\" he hissed.",
        "I didn't want to make him feel bad. I really didn't. I wanted to make him feel good.\n\n\"Okay,\" I breathed, \"okay, I'll stop. I'll stop. Promise.\" I stroked his chin, his lips, with my thumb. \"Want me to kiss it better, mmh?\"\n\nI heard his breath hitch. \"hh-yeah.\"\n\nI just touched my lips to his, offering, not demanding, letting him take what he wanted, what he needed. This guy had years worth of kissing to work out of his system, and god, I was gonna be the lucky, lucky beneficiary...both of us were gonna have stubble rash tomorrow, I thought, as we melded still more, but I for sure didn't care. This was...crazy good, and it just kept on getting better, and it felt like there wouldn't be any end, it was fathomless...he was so hungry and demanding, and so fucking feisty, there was so much want in him, it fuelled it in me...\n\nI let myself sink down right along him, holding just a little weight on my elbows, starting to feel drunk-stoned myself...so much contact, so much heat, so much skin...I don't know how he did it, but Zac managed to get first one leg then the other outside my own, then wrap them around me. He hooked his ankles together, squeezed with his thighs, and writhed, rutting up into me. He was so hard. So hard. It...god, it was insane. I pushed all the way up on my arms to take a look.\n\nZac looked down too, but he was staring at me. \"Oh fuck, Michel, put it in, put it in...\" he panted.\n\nI knew that was the cock-drunkness talking. I wasn't really going to just put it in without some decent prep. But I pushed his knees up into his armpits and he hooked his elbows round them, still gently panting. When I pressed one lubed finger into him, he felt tight, as anybody who'd had a three-month long dry spell would, but I saw no sign of discomfort on his face, and he quickly started to relax around me as I nudged back and forth.\n\n\"C'mon!\" he hissed, before I'd been in thirty seconds. \"Another one!\"\n\nI ran the index finger of my free hand up the spongy tube of his cock. \"Shh. Soon.\" I don't exactly have tiny hands either, and one to two fingers is a big jump.\n\n\"Aggh,\" he groaned. \"Come on! Hurry up, man!\"\n\n\"Nuh-uh,\" I told him, \"nuh-uh-uh-uh-uh.\"\n\nWe're gonna go at my pace. We're gonna enjoy this. Because this chokepoint, I love everything about it. No matter how fast you got to here, no matter how hot and heavy things've been, this is the point where you have to slow down, which means you get to truly appreciate the magic, the mystery, and - I'm gonna say this - the majesty of a hole. Everything about them is glorious. The way they look, the way they resist, the way they yield...they're so shy, so unassuming at the beginning, but once you get them to bloom, they're capable of so, so much...\n\nBut did Zac care about any of that? No, he did not. He wanted another one. I relented after a couple of minutes and gave it to him, watched him breathe through the first few tough seconds, felt him sigh and relax amazingly rapidly. Oh god, this is gonna be good, I thought. I mean, I'd never doubted that for a moment, but suddenly I wondered if it might wind up being too good to handle. Zac brought me back to earth, loudly hounding me for another one, once again accepting it with surprising ease, and following up by insisting he was ready, trying to make me hurry...\n\nIf I'm honest, I have to admit I did, I did take things a little slower than truly necessary. Not just to spin out the moment for myself, but to get Zac going. He wanted my dick, yesterday or sooner, he was absolutely adamant about that - but despite all his yapping, he couldn't disguise the fact that he was enjoying my fingers. His dick was talking for him, gently leaching clear fluid onto his perfect fucking abdomen, and he knew I could see it. I kept purposefully looking at it, serenely smiling while he called me names, demanded that I stop being a such sadistic cunt, barked at me to get the hell on with it before he died of old age or boredom...\n\nI laughed at that and withdrew from his ass, flicking at his rigid dick with my sticky middle finger. \"Oh yeah, that'll be the problem. This thing is bored. Alright, do you think you can hang in there for ten seconds while I get a condom?\"\n\nIt took a bit longer than ten seconds to locate one, unfortunately. Because I didn't own much furniture, my bedside drawer functioned not only as an underwear drawer, but as a sort of backwater for storing anything small, important, or unclassified.\n\n\"Fucking hell!\" Zac spat after about thirty seconds, \"What's the problem here?\" He crawled over beside me, ripped the drawer completely free, and tipped it upside down, spilling socks, boxers, usb cables, loose change, eclipse mints, instruction manuals, and my tenancy agreement all over the floor. Leaning down, he grabbed a condom and waved it in front of my face. \"There!\"\n\n\"You're picking that up afterwards,\" I told him, nodding at the pile on the floor.\n\n\"Hah!\" he huffed. \"That's a nope.\"\n\nI was a little disappointed he didn't say 'make me'. I thought I probably could make him, and I was also fairly sure he'd enjoy the whole process as much as me, even if he'd never admit to it. Another time. Hopefully.\n\nI took the condom from him and brought my hand down hard on his nearest arse-cheek. \"Lie down!\"\n\nHe reared back, outraged. \"What the fuck was that?\"\n\n\"That was me slapping your arse,\" I said. \"Which I wouldn't be able to do if it was over there on the mattress where it's supposed to be, would I? Lie down!\"\n\nHe glared, chest heaving.\n\n\"I'll go get the bloody spatula if you're not quick about it,\" I threatened, rolling on the condom. I'm not sure if I would actually have followed through on that, but I didn't need to. Though he wanted to fight, he also wanted to fuck - his eyes were glued on the progress of the condom down my shaft.\n\nHe lay down. \"Whatever. Less talk, more dick.\"\n\nIt was good. He was good. We were good. And good...not a good enough word. Intense. Insane. Indescribable. The preoccupied look on his face as I sank down, the way he clamped a corner of his lower lip between his teeth when I was almost there, the way he grabbed me by the ears and pulled me to his searching mouth, the way he wormed his hips side to side, embedding me deeper and even deeper - and the feel of him? Sure it was hot and tight and clinging velvet and all the other adjectives, but mostly it was Zac, Zac, Zac...\n\nWe didn't find a rhythm straight away, but when we did...yeah. Something else again. I knew when it was right, because I felt the change in Zac. It was like a rebirth, like...shedding a skin. All evening he'd been spiky and backchatty and giving as good or better than he got, which I totally liked, but when it was right, he let it go, let it all flow away, and that? - That I loved. He lay there looking up at me in a sort of bemused wonder, eyes fogged, almost glowing, existing for the fuck, wallowing in it...\n\nWas it too good - too good to handle? It kinda was, after not very many minutes.\n\n\"I haven't - got - much more,\" I told him breathlessly, \"time to wank yourself, baby...\"\n\nHe kept his hands clamped on my arms and went to turn his head aside. \"Doesn't...matter.\"\n\nIt definitely mattered. Unfortunately I was waaay too close for a patient philosophical discussion on the topic.\n\n\"Fucking do it!\" I hissed. \"Do it now!\"\n\nAnd for once in his damn life, he didn't argue. A warm liquid look formed in his eyes and his breath hitched a little as he reached down, and god I was almost over the edge already...He worked himself fast and hard, impatient as ever, his hand almost a blur, neck arched, tendons standing out each side, and then his eyes rolled back and he let out a sort of gurgling groan all the way down in his chest, and...I just utterly fucking lost it. I was caught by some gargantuan tidal wave, or maybe I was the wave. I was inside my body and outside it, I was everywhere and nowhere all at once, I thought I might possibly be yelling, but I couldn't be certain it wasn't Zac because I wasn't sure where the boundaries were, what was me and what was him, or if the distinction even made sense anymore. But there was us, making our own kind of sense, our own kind of...wow. Together.\n\nTogether. Yeah. As my heartbeat slowed and the world mostly stopped spinning, I became aware I'd fallen down on him. We were lying together in a sweaty, cummy sandwich and there wasn't anywhere else I wanted to be. I knew I was gonna have to pull out soon to be sure the condom stayed on, but I really didn't want to. Just a little longer, just a little longer...just...like...forever...\n\nI gently kissed the side of his neck and pushed up on my arms to look at him.\n\n\"So, how about that? Did it feel like a first time?\"\n\nHe rolled his eyes, but he was also kinda laughing.\"God, Michel, this again? It felt...it felt like a beginning, okay? Like a beginning.\"\n\nLike a beginning. Okay.\n\n \n"
    ],
    "authorname": "sjreardon",
    "tags": [
        "new zealand",
        "country",
        "gay anal",
        "big cock",
        "cock sucking",
        "blow job",
        "gay love",
        "kissing",
        "cocksucking",
        "gay romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/misbehaving-3"
}