{
    "title": "Home On The Range Ch. 07",
    "pages": [
        "I really appreciate LocoHerb for editing this chapter of \"Home On The Range\" \n\n~ ~ ~ ~ ~ ~ ~ ~\n\n**PLEASE NOTE:\n\n**Author's Note: Home On The Range is a continuing story where each chapter builds on previous chapters. If this is your first encounter with Home On The Range, I'd like to suggest you read the previous chapters prior to reading this one. Please enjoy! \n\n** Home On The Range story is one of fiction based on the activities of a real-life. The plot of this story is to follow along as a family interact with the different situations they face in life. \n\n**Before you read this chapter, be advised that it contains very graphic depictions of raw sex between two or more consenting people. IF such depictions upset you or make you lose sleep, PLEASE don't read any further. It's a different-strokes-for-different-folks kind of story. \n\n~ ~ ~ ~ ~ ~ ~ ~\n\nFor the record: All characters engaging in any sexual activities - are of legal age!\n\n****************************\n\nFROM CHAPTER 6\n\nWe parted company with snake headed towards his apartment and we went to the house. On the way to the house grandpa asked me about Nicole. I told him not to say anything, but her parents kicked them out of their house when they found out Nicole and Mark eloped. They don't have any place to go so she said she hoped we would hire them.\n\nWe walked in the house and went upstairs and stopped in the bathroom to take care of business, before we went in and got undressed and got on the bed. We snuggled and kissed but it had been a busy day, so we fell asleep without much conversation. We did get some kissing and I love you in before we must have drifted off.\n\n****************************\n\nChapter 7\n\nGrandpa got up in the middle of the night to go pee and when he came back to bed, I was awake and pulled him to me and said, \"I love you my dear.\"\n\nHe smiled and said, \"Britt you have a great heart. I was thinking, I want you to take an active part during the interview with Mark and Nicole. I know I warned them you work while nude, but are you going to cook breakfast while you are nude too?\"\n\n\"Yes grandpa, if they are going to be working here, they might as well get used to me and the way I won't be dressed. I'm not going to sugarcoat my need to remain cool. I guess Doc Johnson will have to get used to me as well, if he comes while I'm doing chores.\"\n\nI reached down and found that grandpa's cock was hard from telling him I was going to be naked for Nicole, Mark and Doc Johnson. I moved down in the bed and took him in my mouth without any hesitation. Grandpa reached down and held my head in his hands and started pumping his hips up towards my face. I enjoyed giving grandpa satisfaction whenever I could, but this was the first time we'd done it in the middle of the night.\n\nGrandpa started breathing fast and erratically so I moved just a little to my left, so I was right on top of his cock and not at an angle. In this position, grandpa was able to slide his cock into my throat. When his cock moved into my throat, I held my face down so my head followed grandpa's movement down. I wanted to see how long I could hold him in my throat before I had to come up to breathe. Each time, I was able to stay a little longer because I wanted to be able to let grandpa empty his balls into my throat without me pulling back up.\n\nGrandpa sensed what I was doing, and he helped me by holding the back of my head until he felt me pull off his cock. I went down again, and I heard grandpa groan and I felt his cock expand and even though I was on the verge of needing to pull up, I stayed down on his cock while he exploded into my throat. I stayed a little longer and then yanked my head up fast and drew in a very deep breath. When I could breathe again, I cleaned all my saliva from grandpa's cock before I moved up beside him and said, \"Thank you. Thank you so much for helping me learn to hold you cock in my throat. I hope it feels good to you.\"\n\nGrandpa kissed my face and then my lips before he said, \"Now it's my turn to make you feel great.\"\n\nHe rolled me on my back and lifted my legs up, so they were near my shoulders. I was fully exposed to his view and my pussy was gaping open for him. He inserted his tongue into my love tunnel and tongue fucked me for almost a full minute. Then he attacked my clit and I was sent spiraling into another world. He licked, sucked and nibbled on my clit until the sensation almost drove me crazy. My orgasm hit me hard and I humped grandpa's face inconsistently while trying to get the most out of his love for me.\n\nIt took me a while to come back to earth, but grandpa was right beside me, cuddling me, kissing me and telling me he loved me. The radiance of his love shimmered throughout my body. When I was able, I kissed him back passionately and professed my love for him. We fell back to sleep in each other's arms.\n\nThen came that unearthly hour when grandpa rolled over and tapped my arm saying, \"We have a very busy day scheduled. I smiled and said, \"I know, but does it have to come at this hour of the morning?\"\n\n\"Yes, my dear Britt. Just like every morning, my internal clock ticks away the seconds until my eyes fly open and I'm wide awake. I've been waking up at this time of the morning for years.\"\n\n\"But what are you going to do when we have more ranch hands here and you and snake won't have to get up at this hour of the morning?\"\n\n\"I guess my clock will have to adjust itself to a new hour then. But for now, we are on this time.\"\n\n\"OK, you made your point. However, I'm going to wash up a little before I go downstairs and show off my naked body.\"\n\n\"I guess I'll join you in the shower.\"\n\nThe two of us got out of bed, and into the bathroom where I took the first turn on the toilet while grandpa started the shower running. While he took a leak as he likes to call it, I did a quick scrub and a soapy wash between my legs before he stepped in as I was stepping out. I dried my body, brushed my hair and teeth before I said, \"See ya downstairs.\"\n\nI went to the kitchen and turned on the lights and the first thing I did was start the coffee pot perking. The coffee was almost finished when grandpa rounded the corner into the kitchen. I pulled down five cups and lined them up on the counter. When the coffee was ready, I filled two cups and told grandpa to have a seat while I pulled some stuff out to make breakfast.\n\nI took out the large, one-inch deep griddle I found in the cupboard and put that on top of the stove and took the bacon out of the fridge and started that frying on low heat so it wouldn't splatter hot grease on me. I pulled out the buttermilk pancake mix and whipped up a batch in a bowl. I was taking a break and sipping my coffee when there was a knock on the door and snake entered saying, \"Good morning Ms. Britt, you sure have rosy cheeks this morning. Morning Frank.\"\n\nI said, \"Flattery will get you almost anything. Good morning snake, I hope you slept well, I know we did.\"\n\nI poured snake his coffee and just as I was about to put the pot down, there was another knock on the door and I said, \"Come in.\" \n\nNicole came in first and then Mark. I greeted both of them with a smile and said, \"Good morning, I hope both of you slept well.\" I poured each one of them some coffee without asking if they drink it but since both accepted the coffee and sipped it, I was safe to conclude they drank coffee.\n\nNicole blushed a little seeing my naked body and Mark just plain stared at me from top to bottom. I was facing them when I handed them their coffee so both were afforded a full-frontal view of me. Mark finally said, \"I thought spike was just joking with us about you not wearing any clothes, but I can see he wasn't.\"\n\nThe heat in Texas is stifling to me so the only way I can stay cool is without my clothes on. I only get dressed if someone we don't know is scheduled to arrive and then as with the lawyers last week, I only put on a pair of shorts. Since we met you for supper last night, I know who you both are. I told spike I was going to wear the best suit I own. I hope you two aren't embarrassed or offended because you are going to see me in my birthday suit a lot. I do my chores, wearing only my barn boots.\"\n\n\"Well it is a bit unusual,\" Mark said, \"If that's what works for you, then do it. Like I said, we thought spike was joking with us. We've never been exposed to anyone who is so open about being naked. It might take us some time to adjust.\"\n\nNicole laughed and said, \"It won't take me any time to adjust to seeing you naked Britt, but Mark is battling a hardon as we speak.\"\n\nMark blushed a bit and said, \"It's natural for a guy to get a hardon looking at a beautiful young lady. You can't blame me.\"\n\n\"Thank you, Mark, for saying I'm beautiful. You are only the fourth guy to say that to me.\"\n\n\"Nicole, can you give me a hand with the bacon while I do up pancakes and start the eggs?\"\n\nSnake guided Mark to a seat and told him we kinda have regular chairs we sit in. Mark sat down and spike started talking to him about his experience. Nicole and I talked while we cooked breakfast. It didn't take me long to turn out a stack of pancakes and Nicole took the bacon off the griddle, so I asked her to do some eggs over easy, so we had the yokes to break open.\n\nWhile Nicole was busy with the eggs, I set the table and I saw Mark's eyes follow me around while I set everything up. Nicole had most of the eggs cooked so I dropped the last few in my frying pan and then put them on the platter. I picked up the platter with the pancakes on it and set it on the table while Nicole put the eggs on the table, I went back and got the coffee pot to refresh everyone's coffee while Nicole put the bacon on the table. I told her the maple syrup was in the fridge. I made a fresh pot of coffee and then went and took my place at the table.\n\nNicole and Mark were sitting across of each other. Grandpa said the prayer and then it was open season on the food. I made sure I cooked extra pancakes just in case our new couple were really hungry.\n\nGrandpa (spike) got right down to business and asked both Nicole and Mark some hard questions about their experience on a ranch. Come to find out, neither one of them had much experience with a beef ranch but both of them knew how to mend fences and do general labor work. Both of them expressed a willingness to learn. \n\nThey didn't have cutting horses, but spike said, not having cutting horses didn't cancel them out because he said both Nicole and Mark could be positioned beside the cattle and keep them moving forward. He said when the group of ranch hands came in to do the round up, they were experienced and had cutting horses. He said there shouldn't be any problems bringing the beef in from the back pastures. He said we could put them to work if they were interested.\n\nSpike got around to asking them for references and that's when Mark said, \"We were working on her parent's ranch, but he doubted they would give a decent reference for either of them.\"\n\nSnake stood up and put his dishes in the sink and said, \"I need to go back to my apartment, I'll see you in the barn when you get there.\"\n\nWe bid snake goodbye and he left through the back door. Grandpa turned to Nicole and Mark and said, \"Britt has been doing my books for me, so she needs to be in on this conversation with you.\"\n\n\"Can you tell me why you wouldn't have a good reference from Nicole's parents?\"\n\nNicole said in a soft voice, \"I told Britt last night why.\"\n\n\"I didn't tell spike because I didn't want to sound like I'm spreading rumors. I figured if you wanted him to know, then you can tell him.\"\n\n\"Thank you for that Britt. It is kind of personal but since spike asked, my parents won't give us a good reference or any reference, because they don't like Mark. They never cared for him, but they let him stay in our house and dad gave him a job on the ranch. You see, Mark's parents were killed in a plane crash a few years ago and he didn't have any place to go. We went to school together and graduated. Even though we had very good grades in high school, we couldn't afford to go to college. Both of us worked on the ranch on weekends but dad always gave Mark jobs to keep him away from me.\"\n\n\"In Texas all you have to do to elope is get your marriage license and make an appointment with the Justice of the Peace. It was really easy so that's what we did. Since both of us are of age, we didn't need anyone to sign for us. Mark and I got married without anyone in my family knowing.\"\n\n\"I was a virgin when we got married and we slept in separate bedrooms. I used to sneak into Mark's room because it was the room furthest away from my parent's room. We had sex almost every night. One night, I was in Mark's room and we were having sex, I guess I got too loud and both my parents rushed into his room and caught us.\" \n\nI was on the bottom and my dad yanked Mark off me and began yelling at both of us. It was really bad. When I picked up the sheet to cover myself, my father told me to lay still with my legs spread until he was done talking to us. He was yelling loudly which woke up everyone. My brothers and sisters came into the room and he used us as an example. We were exposed while he told them we have been having sex in his house, which was forbidden by him. Both Mark and I were paraded out into the living room where we were made to stand with our hands on our head and our feet spread wide apart.\"\n\n\"That was going to be our punishment for having sex in my father's house. The whole family was allowed to look at our naked bodies while my father yelled at us. I innocently told him that we were married, and he really went into a rage and wanted to know how we got married. I was afraid to tell him more, but he made me. He even whipped my ass with a belt while I had to stand in that position and take a beating in front of everyone. When he was finished, he told me to get our marriage license, so I did. He looked at it and told us we were banned from his house.\"\n\n\"We only had a few minutes to get dressed and get out. I went to my room while he stood over me and demanded I hurry up and finish dressing. I grabbed my backpack and stuffed a few clothes in it when he told me time was up and to get out. My mother was just as bad with Mark in his room. Both of us were kicked out the door at the same time. We left in Mark's truck and we had to wait until the next day when no one was home to go hook up Mark's horse trailer and load our horses.\"\n\n\"I suppose if you want to call my parents for a reference, you can try and see what they say, but I don't think it will be very good, given the fact they were really mad when they kicked us out.\"\n\nSpike cleared his throat and said, \"Write down the number for your parents. Just for the hell of it, I want to see what they have to say.\"\n\n\"PLEASE, Mr. Campbell, don't tell them where we are. I don't want them to cause any problems for you here on your ranch.\" Nicole pleaded.\n\n\"Oh no, I won't tell them where you are, and I may even make up a name so it will throw them off your trail even more.\"\n\n\"Listen you two, I'm not a sucker for a sad story but at the same time, when I saw you two last night, I know damn well you haven't eaten much in a while. I also know that your horses haven't been fed right either. What I want to know without any bullshit, IF I gave you a chance to work for me, would you work or disappear in the middle of the night?'\n\nBoth Nicole and Mark looked at each other before Mark said, \"We need to work. You are right, we were very hungry last night, and we've been sleeping in my truck for the past couple of weeks. We have no where to go and you are the only prospect we have for a job. No sir, we won't disappear on you in the middle of the night.\"\n\nI looked at spike and searched his eyes for what he might be thinking. \"Nicole, do you have any experience feeding animals or cleaning pens and doing other odd and end things that need doing or come up?\" I asked.\n\n\"Britt if you are asking me if I'm willing to work and do what needs to be done, then yes, I can work alongside of you or anyone in the barn if you want me to.\"\n\n\"Spike, both Nicole and Mark have their own horses, and they know how to fix fences and are willing to do general work. Do you think we can come up with enough work to keep them busy?\"\n\n\"Extra hands are always useful even if they ride to keep the cattle moving. And I can use Mark out on the range, fixing fences and pounding posts where needed. He can go with snake and me and I'm sure we can keep him busy. It would be better if they had more experience, but both are young and if they are willing to work, we should give them a chance.\" Spike added.\n\n\"Nicole, Mark, spike told me when I came out here from Cleveland, that there are no free rides on this ranch. Everyone has to work and contribute something. I'm a city girl and when I came out here, I wasn't used to doing any chores outside of the house. My chores growing up were always inside. I'm telling you this because when I came here and started working in the barn, I've worked with sore muscles until I got used to the work. There's always a tube of liniment you can put on sore muscles and be right back to work the next day. I'm nobody special but we don't want to hire someone who will end up spending more time in bed than at work. Do you think you can handle some worker's pain while making a living? I asked. \n\nI continued with, \"I graduated high school in June, and I suspect both of you probably graduated in May or June out here. For all three of us, this is our first real job, am I correct?\"\n\nBoth Mark and Nicole nodded their head in agreement.\n\nHere's the deal before we talk money, I want you to know we put in a hard day's work. You see what time it is now and I'm normally in the barn doing my chores while spike and snake are off to work on the range all day. The three of us have been doing all the work. Spike and snake are getting older and I could use some help in the barn, so this isn't a nine to five job, we work until the chores are done and the animals are fed. The most important part is we need to keep our animals fed and in great health.\"\n\n\"I want the two of you to go out on the porch and talk about your future, the front door is over there. But when you come back in, give us your firm decision.\" I declared.\n\nBoth Nicole and Mark stood up and walked out the front door. I stood up and cleared the table except for their coffee cups and noticed there wasn't a pancake left on the platter. I poured spike a refill along with my cup and sat back down. \n\n\"Wow, Britt, I've done a lot of interviews but you sure are a straight shooter. You don't leave any room to wiggle.\"\n\nSpike and I started talking about the ranch and I told him I was going to tell him the grain was getting low, but I thought I had a few days left.\n\nSpike said, \"You most likely do but I like to keep a supply on hand in case something happens. I don't want to take the chance the truck breaks down or the grain supply is interrupted for some reason. I just don't like to let it get too low.\n\nWe talked for a little while longer before the screen door opened and the couple came in. I greeted them with a friendly smile and asked if they wanted more coffee. Both said they did, so I got up and poured them a refill.\n\nI put the pot back and came back to sit down.\n\nMark started to talk, but Nicole cut him off, \"Britt, you were very straight forward with what you were asking us. It left no doubt in our minds that you only have the interest of this ranch in mind. I'm going to be just as straight with you as you were with us.\"\n\n\"You are sitting here completely nude. At some point in time, during our employment will we be expected to be naked too. That's question number one.\"\n\nI smiled at both Mark and Nicole as I said, \"I find it interesting that the first question deals with me being nude. Let me say, when you see me out in the barn working and the sweat is pouring off me because I'm not used to the heat here, you might want to join me. However, being nude or naked is NOT mandatory but if at any time you want to join me, you would be welcome to do so.\"",
        "\"We have a pond about a ten-minute walk from the barn that's spring fed from the bottom and the water is very chilly. We go out there when we can and go skinny dipping. However, again it's not mandatory. We do take off Sunday afternoon after the barn chores are done and go out to the pond and have a picnic.\" \n\n\"Last week we decided to build a large fireplace to cook on so people can camp out there and cook on the fireplace when it's finished. The man who is building the fireplace for us is out there with his fifth wheel camper, camping with his whole family. To let you know in advance, all of them are nude, all day and all night long. You are welcome to go out there and go skinny dipping with them if you care to.\"\n\nNicole and Mark acknowledged what I told them with a nod of their heads.\n\n\"Next,\" Nicole asked, \"You said you put in long days, does that mean we will be up before sunrise and work until sunset?\"\n\n\"Well, that's a hard question to answer.\" I said, \"On this ranch, the animals come first because if we don't feed them, we don't eat or make money to pay the hired hands. So, if there is a reason to work seven days a week because the animals need something, then we will work seven days a week.\"\n\n\"As for the long hours, I mentioned this before you went outside, ranch work isn't a nine to five job. We get up and get breakfast then start our day. Currently, there has only been three of us working this ranch, our days are long. The reason we are hiring is to make life a bit easier. Have you ever heard the old saying, \"Many hands make light work?\" If the work gets done and it doesn't take as long to do it, then we are done for the day. But on each end of the day, the animals need to be fed.\n\n\"Do we get any days off? That wasn't mentioned.\" Nicole asked.\n\n\"I guess I didn't expressively say time off,\" I added, \"But I did say we go out to the pond on Sunday afternoons and have a picnic and relax. We go skinny dipping on Sunday afternoons.\"\n\nAgain, both Nicole and Mark nodded their heads as they understood what I said to them.\n\nNicole asked, \"We, Mark and I would like to talk about monetary compensation for working all those hours.\"\n\nSpike spoke up and said, \"Do you have a number in mind, what you need to make? Keep in mind, you won't be charged for being in the bunk house even though I'm supplying the gas for the gas range to cook on or the electricity and water for the showers. So that's basically your room and board.\" \n\n\"You do need to feed your own horses with hay and grain. I won't charge you for the stalls your horses are in like most ranchers do. But horses are the roots of the ranch, so they need to be kept fed. We can do that two ways, I can provide the hay and grain upfront and then get it back from you each payday. Or you can supply your own hay and grain. If you do it that way, I'll help you get your first order of grain, but you'll have to charge it to your own account.\"\n\nI slipped in, \"Remember, once we hire four new ranch hands, two of which might be sitting in front of us right now, the work will be lighter on all of us. Base your number on regular work and you will be compensated for any extra work you put in.\"\n\nNicole looked at Mark and right away, I realized that she was the brain in the family. She was going to be the negotiator, not Mark.\n\nThey asked if they could go out and talk on the porch again and I told them to go ahead. As they stood up to go, I said, \"Just for your information, since you don't have any food out there in the bunk house until you get paid, you can eat your meals here with us. If Nicole helps with the barn chores, then she can be here to help me make the meals. Of course, you already know about breakfast. I fix the guy's lunch pails before they head out on the range in the mornings.\n\n\"Oh, and there is one last thing you should know. After supper, me, spike and snake relax out on the porch in the evenings and watch the sun set. The reason I'm telling you this is, ...\"\n\nNicole interrupted me and said, \"All of you relax out there in the nude, right?\"\n\nI laughed as I asked, \"How did you figure that out?\"\n\n\"Because,\" Nicole said with a giggle in her voice, \"Every time you've said, the words, \"you should know\" you follow it up by saying that you will be nude. The only thing you haven't said up until now is all three of you will be nude on the porch in the evenings. And you want to add we are welcome to join you. Am I correct?\"\n\n\"As a matter of fact,\" I laughed as I said, \"You both would be welcome to join us in the evenings and have a beer or two with us. We just sit and relax.\"\n\nBoth of them started laughing as they walked across the living room and out on the porch.\n\nSpike looked at me and said, \"It seems you have covered all the bases Britt.\"\n\n\"What is the going rate for an untrained ranch hand spike?\"\n\n\"I would be willing to give them each maybe two hundred and fifty dollars a week each, with room and board in the bunk house, with us feeding them here in the house. But see where that goes.\"\n\nWe waited patiently for about fifteen minutes before they came back in and sat down. When they did, it was Nicole who addressed spike and me. She looked at both of us as she said our names and then paused ... with thoughtfulness she said, \"We, Mark and I would like to make at least two hundred and fifty dollars a week each. We understand that we will be in the bunk house and we will be eating our meals up here in the house with all of you. We based that number on the fact you are going to hire two more ranch hands as soon as you can, and we understand we will be working extra hours until that time.\"\n\n\"Not that we are planning on leaving your ranch anytime soon, both of us realized after you asked about a reference, that we need to build up a work record just in case we ever go to a new job. We would like to be able to count on you to give us a good reference. Basically, we are looking at here and now, but at the same time we are looking into our future.\" \n\n\"If things work out here, you people seem nice enough and we'd like to stay on here. I'm not so sure about the nude thing but Mark and I talked it over and we will most likely relax with you on the porch wearing our underwear. I don't have any fancy panties so don't expect much.\"\n\n\"As far as going out to the pond and going skinny dipping with you on Sunday afternoons, we've never been exposed to showing off in front of anyone. Well, except my family when my father forced us to stand naked in the living room. We'll have to play that one by ear.\"\n\n\"Mark, Nicole I think you did a great job telling us what each of you would like to make each week given your room and board along with your meals with us up here in the house. Both spike and I came up with the same number as both of you did. The only thing we are going to add to your weekly pay over and above what you've asked for is, we are going to cover the cost of your hay and grain in your weekly salary. We aren't going to do that for any other hired hands so please keep that part to yourselves.\"\n\n\"Nicole, part of your duties will be to help me prepare the meals for us. Of course, in the evening after supper we would love to have you relax with us on the front porch.\"\n\n\"I know you two are newlyweds, and I don't want you to get a case of jealousy when you sit with us on the porch. Both spike and snake will be as naked as I am now. Mark you will be seeing me, but Nicole will be seeing two rather large cocks also. I will tell you, since I've been here, neither one of the guys has ever bothered me or did anything I didn't want them too. Mark, you can trust both guys being around Nicole, you have my promise on that. Like wise Nicole, even though you see me completely naked, I'm no threat to your man Mark. I promise you he's as safe as if he was in his mama's arms. I have a saying, once you've seen something, you can't unsee it. Both of you can trust us.\" \n\nOne last thing, the vet bills for your horses is on you. I believe as does snake and spike that your horses are a little mal nourished from not eating properly since you've been on the road. Doc Johnson is a very good vet and he won't hand off a large bill if your horses don't need it.\"\n\n\"Do you have any other questions other than can we start today?\" I slipped in at the end.\n\n\"Britt, are you really going down to the barn naked and do your chores?\"\n\n\"Nicole, I wasn't kidding or pulling your leg, I need to put on my work boots and that's all I'll be wearing to do the barn chores. Which I need to get doing, it's late.\"\n\n\"Ok, look, you promised that we are safe here on this ranch, I don't want to go down naked but if I can wear my panties, I will do that, so I won't stand out. Mark and I talked about that last night, but the only concern was he didn't want me to be forced to have sex with snake or spike. It's not that he's jealous or anything like that, he doesn't want me to have sex with anyone else but him. I hope you understand.\"\n\n\"Nicole, I've been silent through most of this interview because Britt just came to work for me a little over a month ago and part of her job is to interview the four new ranch hands we wanted to hire. Now we are down to two more ranch hands and I want to welcome you to the Campbell Ranch. By the way, I am not going to call your parents for a reference because of your honesty in answering the questions and asking questions of us. I feel you two deserve a chance to establish yourselves. It seems to me you've had it hard enough to start off your new lives together.\"\n\n\"Furthermore, for all I care, both of you can run around here completely naked. Well, except for Mark in the daytime because out on the range fixing fence is not a good place to be naked.\" \n\n\"Nicole, if you want to be like Britt and not wear anything, you are completely safe as Britt told you. Neither snake nor I will ever bother you. Before my wife died over a month ago, she used to run around here completely naked also. The only time she got dressed is if she went to town or if someone like the minister was going to stop by. How am I doing guys?\"\n\n\"Mark spoke up and said, \"Our major concern was for Nicole. Britt made it quite clear to her last night that she would only be wearing her barn boots to the barn to do her chores. We did think she was kidding but we see she isn't. So, if she can do her chores while she's naked, Nicole can choose for herself if she wants to join Britt. I won't have a problem if some other guy like the vet or snake sees her beautiful body.\"\n\nNicole laughed and said, \"Britt, I won't have a problem if you see Mark's big cock either. He knows where to put that thing when we are ready to make it puke.\"\n\n\"That's a new one, I haven't heard before. Interesting concept, a cock puking.\" Spike said.\n\n\"Nicole, I did tell you that Bart is out at the pond camping and building our fireplace, right?\"\n\n\"Yes, you did, why?\"\n\n\"Well Bart is out there camping with his family of four girls and his wife. His hired hand, Kendra is also out there by the pond. They are nudists and having a ball on this private ranch.\"\n\n\"Holly shit, do you mean to tell me you aren't the only nude girl on this ranch? There's more?\"\n\n\"That's what I'm telling you.\"\n\nNicole looked at Mark and said, \"We didn't know there's more, do you mind if I help do chores today while I'm naked?\"\n\nMark smiled and said, \"I can't believe what we've just stumbled into, but I think I'm going to like it. I think we need to go out and go skinny dipping tonight.\"\n\nI stood up and said, \"I'll be right back, I need to go get some socks.\"\n\nI ran upstairs and came back in a flash. I sat down and pulled on my socks and boots while Nicole stood up and shed her blouse and bra, then dropped her pants and panties.\"\n\nShe asked Britt, \"When will you be washing clothes again? I only have this pair of pants and a pair of shorts. I was wondering if you could drop these in with your clothes. Since I don't need them to wear around here, I need to get them washed.\"\n\n\"I wasn't going to wash right away because it's really only spikes clothes but this afternoon when the guys come back in, if Mark wants to take off his clothes, I can toss a load in and wash them.\"\n\nMark said, \"I can do that. Hell, if everyone is going to be naked, I might as well join the crowd.\"\n\nSpike said, \"Come on, we are way late starting the chores, let's go.\"\n\nThe four of us walked out on the porch with Nicole and me in the middle of our men and naked as jay birds. I hooked Nicole's arm and we laughed and giggled as we walked. Nicole turned to me and said, \"Never, have I ever dreamed of walking naked in front of anyone other than Mark. This is so fucking wild.\"\n\n\"When we get to cleaning the pens, even though the barn is basically open, it gets hot in there and you'll be glad you are down to nothing.\"\n\nWe stopped and talked to snake who was still feeding the animals when we arrived. Spike said, \"Snake would you take Mark out where you are working and show him what needs to be done out there. Mark have you ever driven a tractor?\"\n\n\"No sir, I've ridden on them when someone else is driving.\"\n\n\"Mark, we don't say sir around here, my nickname is spike and that guy over there is snake. I think we'll have to come up with a nickname for you a little later.\"\n\n\"Snake if you would, please show Mark how to drive the tractor when you get out in the open spaces where he can't hit anything.\"\n\nNicole laughed and said, \"I have a delightful feeling we are going to have a wonderful time working for you spike.\"\n\nSnake had Mark follow him over to the shed and said, \"When we use tools, spike has one hard and fast rule, you have to put it back each time you use it, in the place where you found it. He says he hates to go looking for a tool out of place.\"\n\nThey put all the tools they would need in the bucket, on the tractor, that snake used. When they rode past the barn Nicole was there by the front door to wave goodbye to him. I said to Nicole, \"Snake got almost all the animals fed so let me show you where the feed is and how much we give them.\"\n\nI measured out the feed and Nicole fed the remaining animals. Each time I passed her a bucket I told her which pen to dump it in. Then we moved to the horses and I measured out the grain for each horse while Nicole walked into each stall and dumped the grain in the bucket for each horse.\n\nWhen it came time to clean the pens, I pulled out a second wheelbarrow, fork and shovel for Nicole to use. While she cleaned one pen, I cleaned another. We were still cleaning the pens when Doc Johnson showed up. \n\nSpike went out to talk to him and told him how the horses had spent a lot of time on the road over the past couple of weeks and probably were off a bit because of all the riding and they probably hadn't been fed properly. He gave him a short rundown on the newlyweds and the doc said he understood.\n\nBoth the doc and spike walked into the first stall and he checked the horse over and told Spike his guess was right on. He gave the horse a shot and gave spike some medicine to put in his feed.\n\nSpike and Doc Johnson were in with the second horse, when both Nicole and I stepped into the doorway of the stall. We were watching Doc Johnson for a few seconds before he noticed us standing there. When he did, he did a double take and said, \"Frank, I don't know if you know this or not, but you have two lovely naked ladies standing behind you.\"\n\nSpike laughed and said, \"Yep, doc you must have twenty-twenty eyesight cause I've been seeing them all morning and I know my eyes are good.\"\n\nThe doc laughed and said, \"OK, if you say so. I think both of them are fine looking ladies though.\"\n\nSpike said, \"That may be true doc, but I'd appreciate it if you didn't spread the word around, if you know what I mean.\"\n\nDoc looked at spike before saying, \"I know ranching ain't that good anymore but what are you raising on the ranch now?\"\n\n\"Have you ever heard of contented animals doc? I keep mine contented a little different than other ranchers.\"\n\nThe vet looked at me and Nicole again before he agreed with spike.\n\nWhen the doc was finished, he said, \"Frank, both horses are healthy but need a boost to get them back on track again. Sprinkle this medicine in their feed once a day and if you don't see any improvement in them in a week, give me a call and I'll come back out and give them both another shot.\n\nWe left that stall and went to spike's horse. I opened the door to the stall and showed Nicole how I let the horse put his nose against my chest while I talk to him and rub behind his ears and down his neck. Then I hooked the lead rope on him and walked him out in the alley and tied him off while we cleaned his stall and put hay in his rack. \n\nWe walked out in the alley and I handed Nicole a brush and each us took one side of spike's horse and brushed him down before we put him back in his stall. We did the same thing with all the remaining horses. Only I encouraged Nicole to do what I did with their horses. We finished up the barn chores and I showed Nicole where to collect the eggs. The three of us walked up to the house, I put the eggs in the kitchen. \n\nI asked Nicole, do you want to shower with me upstairs instead of walking out to the bunk house. I told her I always take a shower after the barn chores. She agreed so we left our barn boots by the kitchen door and headed upstairs. I sat down to pee while talking to Nicole. Then while I adjusted the shower, she peed. \n\nShe was going to wait for me to take a shower before she took hers, but I told her to come on in with me. We shared my shampoo and conditioner and then I took my dove body wash and put some on a scroungy and handed it to her. I put some on another one and started to wash my body. She was under the spray, so she had to step towards me to get out of the water and wash her body.\n\nI noticed she had a five o'clock shadow as my father always called it, so I asked, \"Nicole, did you get a chance to get your razor before you had to leave your house?\"\n\n\"No everything I owned ended up being kept by my parents. It was terrible Britt; I've never seen my parents go ballistic like that before.\"\n\n\"If you need to use my razor you can. I know what it's like to be scruffy.\"\n\n\"Britt, I know we were naked this morning, but what's it like to lounge around naked?\"\n\n\"Nicole, if you would have asked me that question when I lived in Cleveland, I would have told you I didn't know. But since I've moved out here and it's so damn hot, I'm completely naked out of necessity. As I said, the only time I put on anything, when our lawyer comes out here and then it's only a pair of shorts. He was here a few days ago and he loved looking at my small titties because I didn't put a shirt on.\"\n\n\"But if I'm in the barn and someone pulls up, oh well, they get to see all of me because I'm not about to run and hide. That's just the way I am, I don't know what you want to do, but you have a great looking body that you should be very proud of. You don't have to do what I do, but you can if you want to. I know it turns me on when someone sees me naked and spike gets the benefits, if you know what I mean.\"\n\n\"Oh yeah Britt, I know what you mean. Mark and I talked about it last night and he doesn't mind if someone sees me naked as long as I don't get forced to do anything. That was our only main concern. But I see how you are with snake and spike, so I'm not worried. I'll be as naked as you are and this heat is bad for me too, even though I grew up here in Texas.\"\n\nWhen we finished our shower and dried off, I got my razor and shaving cream out for Nicole. She drew some water in the sink and I sat on the closed toilet lid while Nicole lathered up her pubic mound and pussy lips. We continued to have our conversation while she shaved herself and I watched her. I rubbed my mound and noticed I had some stubble so I told Nicole when she was finished, we could switch places and that's what we did.",
        "When we finished, we went downstairs, and Nicole chose to wash the breakfast dishes while I dried them and put them away. While we worked spike came out and sat down at the table, so I asked him if he wanted something to drink. He only wanted a bottle of water, so I got him one out of the fridge.\n\nWhen the dishes were done, I asked spike if the guys were coming in for lunch and staying or would they be going back out? Spike said, \"They would be coming back in and he wanted to take Mark and Nicole out on the range so they could know at least part of the ranch. He told me I could come along if I wanted.\"\n\nNicole and I got busy and made lunch for the guys because it was near the time, they would be coming in. We started fixing lunch when the phone rang. I picked it up and answered it. Some guy named Steve said he heard we were hiring and wanted to come by for an interview this afternoon if possible. \n\nI asked him to hold on a second as I said to spike, \"There's a man on the phone named Steve and he heard we were hiring and wants to stop out this afternoon and talk to us about the job.\"\n\nSpike looked at me for a second and said, \"Tell him to come out to the ranch about two so we can talk to him.\"\n\nI asked him if he could be out here at the ranch about two and he said he could. I asked him if he needed directions and he said, \"Sarah Kelsey gave me directions. This is for a ranch hand job, right?\"\n\nI told him, \"Yes, we are hiring ranch hands and I hope he has his own cutting horse.\"\n\nHe laughed and asked, \"What good is a cowboy without his horse?\"\n\n\"I laughed right back at him, then I said, \"Hey stud, for every question there's usually a reason for that question. Do you think that everyone who calls, meets the qualifications of being a cowboy?\"\n\nI heard in the phone, \"OOPS, sorry ma'am, I guess from your response there must have been at least one who applied that didn't have a horse. I'm terribly sorry for my sarcasm.\"\n\n\"Don't let it bother you none, I've heard all the dumb cowboy jokes and a few cowgirl jokes to boot. Come on out here and we'll talk to you. See ya about two o'clock.\"\n\nI hung up the phone and started laughing while spike and Nicole stared at me. I didn't tell them why I was laughing so it blew over quickly. I asked spike if he was going to stay until two so he could talk to the new cowboy and he said, \"No, I'm taking Mark and Nicole out to show them around the ranch. You can do the interview with him.\"\n\nI went back to help make lunch and I would look up at spike every now and then. He didn't give me any indication that he'd changed his mind, so I just went with it. I heard the tractor coming in, so I hurried up and set the table, while Nicole put the finishing touches on lunch. I took a bottle of water out for everyone and put it on the table just as snake knocked and walked in with Mark right behind him.\n\nSnake greeted us by saying, \"Hi Frank, Ms. Nicole and you to Ms. Britt. Something smells good, I'm hungry for some reason today.\"\n\nAll of us returned snake's greeting and Mark leaned over and kissed his wife before he went and sat down. Nicole and I put lunch on the table and Mark said, \"Geee honey, you look like a new woman today, beautiful as ever and I love your new suit.\"\n\nNicole blushed and said, \"You would love my new suit and if I told you the truth of the matter, I love my new suit also. It's a whole lot cooler than what I was wearing yesterday. Mark, I've decided, this is the suit I'm going to wear from now on, unless of course we have to go into town.\"\n\nWe sat down at the table and spike said the prayer before there was a clatter of utensils on the plates. We started eating when spike said to snake, \"I want to show Mark and Nicole around the ranch this afternoon, but a little while ago, a cowboy named Steve called up about a job.\"\n\n\"Snake, you can either take Mark and Nicole out in my truck and show them around or stay here with Britt and check this guy's experience and let Britt handle the rest. I don't care which you want to do, I'll do whatever you don't choose. I know you've been out in the sun already so if you want to stay here, you can.\"\n\nI looked at snake and said, \"We can handle it if spike wants to take them out and show them the ranch.\"\n\nSnake was busy thinking and eating while both Mark and Nicole were still trying to fill the void in their stomachs from not eating much in the last couple of weeks. It was Nicole who asked, \"Spike, can I ride in the truck just like I am?\"\n\n\"Without even looking up, spike said, \"As long as I don't get hit with a sexual harassment lawsuit, you can stay naked any time except for when we have to do something that might injure that beautiful body of yours. I wouldn't want you to be riding for work naked. If you and Britt want to go for a naked ride on your own, please feel free to do so.\" \n\nSpike looked at Mark and Nicole as he said, \"I hope you two grabbed your saddles, chaps and boots before you left your father's ranch. I forgot to ask that before.\"\n\n\"All of our equipment, hats, boots and dusters are in the trailer. Yes, when Nicole was walking our horses into the trailer, I was busy hauling all of our gear into the nose of the trailer.\"\n\n\"That's good cause without that stuff, it would be hard on you to replace it all.\" Spike said.\n\n\"Do you wanna take Nicole and Mark out on the ranch this afternoon spike? It really don't matter to me either way, it's gonna be hot.\"\n\n\"Tell ya what snake, let's flip a coin, heads I win and tails you lose.\" Spike said with a straight face.\n\nSnake caught on very quick to what spike said but the others including Britt were sitting there waiting for the coin drop. \n\n\"Mark, you and Nicole will be riding with me this afternoon. I'll take you for a two or three hour tour of the ranch. I know it will be a lot to remember but you'll be working with either snake or me. We'll get going right after lunch.\" Spike said with a smile.\n\n\"Are we only going to ride in your truck spike?\"\n\n\"Why do you ask Mark?\"\n\n\"I was wondering if I had time to take a quick shower before we go?\"\n\n\"Sure, I don't see why not. You and snake have been out there sweating so go ahead and take a shower.\"\n\n\"Mark, if you want to leave your clothes here, I'll throw them in the wash along with Nicole's clothes. Do you have any other dirty clothes in your bag? If you do, get them up here and I'll wash everything at one time.\" I said.\n\nNicole said, \"I can run down to the bunk house and get our dirty clothes and Mark can leave his clothes here.\"\n\nWe finished lunch and I asked Nicole to help me clear the dishes off the table and help me clean them up before she took a ride with spike. Nicole looked confused as she said, \"How do you know Mark and me will be riding with spike this afternoon?\"\n\nI don't know for sure because they didn't flip a coin so I'm guessing you will be riding with spike. Both guys smiled and spike said, \"Why are you questioning our coin flip? Snake and I settled that ten minutes ago. I'm going to take Nicole and Mark for the tour and snake is going to stay here and talk to that guy Steve.\"\n\nMark stood up and started for the kitchen door when I asked, \"Where are you going Mark?\"\n\n\"I'm going down to the bunk house and take a shower, why?\"\n\n\"You don't need your clothes to take a shower, take them off right here and leave them in that room right over there and I'll wash them. That will be less clothes Nicole will have to carry back up here. Nicole do you have any white clothes in your bags?\"\n\n\"I have a couple pair of panties and a couple bras, but not much more than that.\" Nicole stated.\n\n\"Ok run down and get what you have, and I'll go up and empty our hamper and see what we can come up with.\" I said.\n\nMark stepped timidly out of the laundry room with both hands covering his cock and balls. I smiled and said, \"Your wife has been running around here completely naked all morning, are you really that concerned about me seeing your package?\"\n\nMark smiled and said, \"I have a hardon.\"\n\n\"Good, move your hands, let me see.\"\n\nCautiously, Mark moved his hands and sure enough I saw he had a hardon. I smiled at Mark and said, \"Mark if you and your wife are going to relax with us on the porch later, you're going to see two more cocks. Nicole and I are going to enjoy looking at all three cocks which I'm sure you will have a hardon then, just like snake and spike.\"\n\n\"Go ahead and go get your shower, we'll see you in a few minutes.\" I said.\n\nRight after he left, I walked over to spike and said, \"Are you really going to leave me to do the interview with Steve?\"\n\n\"Yes, snake can handle the experience part and you handle the money part. You've already done this so use what you've learned, and you won't go wrong.\"\n\nNicole came back with her bag of clothes and I went up and cleaned out our hamper and brought the clothes downstairs. In the laundry room, Nicole discussed what to wash and what not to wash. We didn't really have enough white clothes to wash so I asked her if she could go without panties and bra until we did have enough whites to wash. We agreed to leave the whites and wash the colored clothes only. We put them in the washer and when we came out, I saw snake was missing. I asked spike where he went, and he told me he went down to shower and would be back soon.\n\nNicole again washed the dishes and I dried them and put them away. By the time we finished the dishes Mark was back with his hardon leading the way. Nicole giggled and said, \"I love your new look honey.\"\n\nI said to Nicole, \"Please run upstairs and get a couple of hand towels out of the linen closet so you have something to sit on in the truck.\"\n\nWhen she came back with the towels spike stood up and asked, \"Are we ready to go?\"\n\nNicole looked at spike before asking, \"Isn't one of us over dressed?\"\n\nSpike laughed and said, \"It doesn't matter to me if I ride naked or not. If you want me to be naked, say so and the clothes are gone.\"\n\nNicole looked directly at spike and said, \"Take off your clothes. You've seen me all morning completely naked and now I want to see what you are packing in them drawers.\"\n\nSpike said, \"Not a problem Nicole.\"\n\nNicole turned to Mark and said, \"Gheeezzzz we've been here less than twenty-four hours and I've already got the boss under my thumb.\"\n\nAll of us broke out laughing and were still laughing when snake walked into the kitchen carrying a pair of shorts and completely naked. Nicole looked at snake and then really looked at snake before she said, \"HOLY SHIT, I've never seen a cock that size before. Well, not a human cock that is. I'm going to love working here with meat like that dangling before my eyes. I guess it's true what they say about black guys.\"\n\nAll of us laughed without anyone taking offense over the comment Nicole made. Spike spoke up saying, \"How do you think he got his nickname?\"\n\n\"Nicole, would you please go up and grab another hand towel for me to sit on?\" spike asked.\n\nNicole bounded up the stairs with her small boobs flopping on her chest. When she came back, spike said, \"Let's go for a ride.\"\n\nAll of us walked out on the porch but only three of us walked down the steps and headed for the barn where the truck was parked. Snake put his arm around me and the two of us stood on the porch watching as Mark climbed into the front seat and Nicole in the back. Soon the truck disappeared around the barn and out of sight.\n\nI looked up at snake and said, \"Well, we are in a situation I didn't expect to be in any time soon.\"\n\n\"Ms. Britt, I don't know what you said during the interview with Nicole and Mark, but it must have been convincing enough for your grandfather to trust you to interview Steve without him being here. I guess the only thing you might need some help with is questioning about his experience and his knowledge for being a working ranch hand. I know him well enough that if he didn't think you could handle the job, he would be here instead of me.\"\n\n\"Snake, I've been wondering ... what's with that coin toss that never happened? I mean, I heard what spike said, but there was no coin and no toss, yet you are here with me and he's off to tour the range with Mark and Nicole.\"\n\nSnake started laughing and when he calmed a little he said, \"Ms. Britt, he wanted me to be here with you and unless you, Mark or Nicole knew what he said, I was the only one to understand his directions for me. He chose what he wanted to do and gave me the job of interviewing Steve. You said things were going to change around here and he is giving both of us a chance to prove what we already know. We, you and me, can do this interview to his satisfaction.\"\n\n\"Ok, it sounds like a bunch of double talk to me, so what did he mean? He said, heads I win and tails you lose.\"\n\n\"Ms. Britt, he said, heads I win, right?\"\n\n\"Yes.\"\n\n\"Tails you lose, right?\"\n\n\"Yes, ... but ... OH SHIT! Now I get it, that sly bugger, you lost both ways and he was going to take them for the tour, and you were going to stay here with me. And you knew what he meant all that time.\"\n\n\"Yes, Ms. Britt. Don't worry, it's a first for me too. I'm as nervous as you are because Steve's employment is based on our decisions.\"\n\n\"Well I better go put on a pair of shorts; I don't want to show my hand in the interview.\"\n\n\"Ms. Britt, if you don't put on a pair of shorts, you'll be showing Steve more than your hand.\"\n\nWe laughed while we walked inside with me headed up the stairs to get some shorts and snake picking up his shorts off the chair in the living room. I came downstairs and snake had gone outside and was sitting on the porch to wait for our potential employee to come by. I joined him outside, and I wasn't out there long before a pickup truck came slowly rolling up to the house. The driver was looking out the driver's window and when he spied us, he came to a stop and yelled, \"Am I in the right place?\"\n\n\"If your name is Steve and you are here about the ranch hand job, yep, you sure are, come on up on the porch.\" I said.\n\nSteve got out of his truck and crossed the lawn and up the steps. Snake and I stood up and shook hands with Steve and he introduced himself as Steve Moore and I said, \"I'm Britt Benson and this is Charlie Wilson. Please have a seat, would you like a bottle of water?\"\n\nHe said, \"Yes ma'am I really would.\"\n\nI looked at snake and he said, \"Yes ma'am I would like one also.\"\n\nI went into the house to get three bottles of water and while I was gone, Steve asked snake, \"Is this some kind of test or a joke, she doesn't have a shirt on.\"\n\nAll snake had time to say is, \"Ask her about it, here she comes.\"\n\nI passed out the water and said, \"Yes, here she comes, what?\"\n\nSteve nervously said, \"Ummmmm ... I was just asking Charlie if I was being tested or is it a joke you aren't wearing a shirt?\"\n\n\"Steve you have mastered the art of the power of observation, ... congratulations. I hope you don't mind being interviewed by a shirtless female.\"\n\n\"It's not that, it's just ummmmmm ... how do I say this,...? unusual?\"\n\n\"Ok, I come from out east, Cleveland, Ohio actually, I'm not used to this heat out here in Texas. My father was a Marine, so we watched a lot of Marine movies and I learned to Improvise, Adapt, and Overcome, when faced with a situation. Therefore, for me to remain cooler, I don't wear a shirt unless I go to town. As long as I'm saying that, I'd appreciate it if you do or don't take the job we have, that you won't go blabbing your lips to anyone about what you see on this ranch. We are a private ranch and we don't have any close by neighbors so what they don't know won't hurt them. Besides, if men can take off their shirt, I can too. While you are here, enjoy yourself and if you don't take our job, please forget what you've seen.\"\n\n\"Wow, I've never had a woman talk to me like that before. Not that I mind, because I like a take charge woman. I guess that's why you are sitting there and I'm looking for a job. But aren't you a little young to be in charge?\" Steve asked.\n\n\"Well Steve, when I was born, I used to be a boy ...\"\n\n\"WHAT DID YOU SAY?\" Steve asked.\n\n\"\"YES STEVE, I was born a boy, but when the doctor pulled me out of my mother, I wasn't breathing so the doc held me upside down and slapped my ass so hard ... he knocked my dick and balls right off me. Knowing that my mother wanted to have a son the doctor was worried what she'd say. The doc was in a fix, he couldn't put them back on me. When my mother asked if I was a girl or a boy, the doctor said to my mother, oops ... Oh, I'm so ... so very sorry ... I slapped her ass so hard I cracked it right down the middle, you ended up with a girl.\"\n\nSteve looked at me and it was snake who started snickering, which ruined my story line. I said, \"Let's get down to business. You're looking for a job, tell me about yourself.\"\n\nSteve started telling us about himself and his experience. I listened while snake asked him questions. The interview was going well so I asked Steve if he has some references. He said, \"Yes, Britt I do. Would you like me to list a couple for you?\"\n\nI had a pad of paper on the small table beside the swing with a pen and I said, \"In a few minutes I will have you write down your references. But first, why don't you stay at one place very long? We aren't looking for a part time cowboy, we want to fill the two remaining positions with permanent people. We don't really want someone who is gonna run off in a few months.\"\n\n\"Britt, it's like this, I'm looking for a permanent place to park my ass. I have been traveling for the most of ten years and I ain't getting no younger, so I figure it's time for me to settle down a bit and find me a woman who'll have me and start a family. I sure would love to have a son to carry on my name. The references I will give you are all ranchers I've worked for on a temporary basis cause most of them have their own ranch hands. They'll tell you I work hard and I'm dependable.\"\n\n\"Snake, do you have any more questions for Steve?\" I asked.\n\nSnake said, \"I'm satisfied with all his answers Ms. Britt, the ball is in your court now.\"\n\nI looked between both guys before I said, \"Steve tell me, do you have a number in mind, how much you'd like to make for a week, bi-weekly or a month?\"\n\n\"How do you pay?\"\n\n\"We can pay you using any of the three ways to pay, it doesn't matter to me. I only have to let my accountant know so they can send me your check when it's due.\"\n\nSteve looked at me and in a thoughtful manner he gave me a number that was way out of line, so I immediately told him I wasn't going to pay him that much per week. He laughed and said, \"You told me to give you a number, so I did.\"\n\n\"OK, I'll give you that one, now let's talk realistic weekly numbers.\"\n\n\"Before we get to how much you'll pay me a week, I need to know what we're going to do about my horse, and do you have a bunk house for board?\" Steve asked.\n\nThat's the part I was factoring into your salary. I'll tell you what, I'll be willing to give you two hundred and fifty dollars and I'll pay your horse's feed bill which will include grain and hay. I have the normal bunk house with a kitchen, bathroom, a large screen TV in one end of the room with beds in the other. It's in the style of the old military barracks where you'll have your space but not much privacy. I provide the basic services like electric and hot water showers and a commercial refrigerator where you can keep your food and the gas range to cook it on.\n\nSteve looked at me with a serious look before he asked, \"That's two fifty a week plus room and board with grain and hay for my horse, is that correct?\"\n\nI agreed with him and said, \"Our vet is Doc Johnson and he does all the work on our horses. If you need him for your horse, that bill is on you. All we'll do is call him for you.\"\n\n\"Remember, all that is dependent on what your references tell me. I can go in and call a couple of them if you want so we can solidify what I've told you, if you want to wait.\"",
        "\"Ok Britt, here let me write a few down. I'll wait here for you.\" Steve said.\n\nI waited for Steve to write down his references and then took the pad of paper and went into the office. I made three phone calls to the ranches he had listed as references and each one said he was a good ranch hand and confirmed what he said about being temporary help. I thanked them all for their time and went back out on the porch.\n\nI sat down on the swing and said, \"Steve, your references gave you a very good rating and said you were reliable. I'll tell you what, since you waited here, I'll up my offer and give you two hundred seventy-five a week, minus your income taxes of course. You'll have to fill out a W-4 form for our accountant. If this is something you're interested in, let me know.\"\n\n\"Would it be ok if we walk down and take a look at the horse stalls and the bunk house?\" Steve asked.\n\n\"Sure, let's go.\"\n\nAll three of us walked off the porch and down to the barn where Steve looked in at the horses and then at the empty stalls. He looked at the grain and hay we were feeding our horses. We walked up to the bunk house and he walked around while snake and I stood by one of the tables. He walked back to us and said, \"At least this place is clean unlike some places, I've stayed in.\"\n\n\"I told him we hire temporary ranch hands each year for the round up, later in the year. The place does get a bit crowded when everyone comes in, but they clear out at the end of the round up.\"\n\nAs we walked back towards the house Steve accepted the job and asked when he could bring in his horse and start to work. I asked him if he was going to cook his meals in the bunk house and he told us he would stop and get some groceries before he came back to the ranch with his horse.\n\nI turned to him and said, \"There is one final thing that might change your mind and again, I'd very much appreciate it if you kept this little piece of information to yourself.\"\n\n\"Ok, did you kill a ranch hand, is he buried in the shit pile out back or something more serious than that?\" Steve asked.\n\n\"Well, I guess it would all depend on how you were raised. I want you to know we seem to have adopted the nudist lifestyle around here. It all started with me not being able to stand this heat after moving here from Cleveland. I can't stand the heat, so I started doing my barn chores while nude. The other couple we just hired have also adopted being nude. So, as we speak, Spike, the co-owner of this ranch is giving them a tour of our ranch, all of them are nude.\"\n\n\"If you think you can handle being around nude people without causing a hassle or harassing anyone, then you can consider yourself hired. If not, please forget what I've said to you and you can be on your way.\"\n\n\"Just like that?\" Steve inquired.\n\n\"Yes, just like that. If you can handle the nudity or if you want to join us, that is totally up to you. You have to decide if you can work in this environment without filing a sexual harassment lawsuit against me and the ranch.\"\n\n\"Specifically, what do you have to do with the ranch?\" Steve asked.\n\n\"I'm the co-owner of this ranch.\"\n\n\"And you go nude around here doing your chores?\"\n\n\"Not only doing chores but just nude. Nicole and Mark who we just hired, like the idea also. That's why I said, they are out taking a tour of the ranch right now and they are nude.\"\n\n\"Would I be expected to be nude too?\"\n\n\"Not unless you want to. Your employment doesn't include if you will or won't be nude. It will be totally up to you if you want to join us.\"\n\n\"So, if I get lucky, I'll see you nude later?\"\n\nI pushed my shorts down to my ankles and bent over and picked them up. I stood facing Steve and said, \"This is how I do my chores. Can you handle this?\"\n\nSteve had to pull his eyes back into his head before he could see straight. \"This is not a trick is it?\"\n\n\"No trick, actually all of us sit on the porch in the evening and have a beer while in the nude.\"\n\n\"And you don't want me to say anything to anyone outside this ranch, am I correct?\"\n\n\"That would be correct. We don't have any neighbors close by, so we are isolated out here and that's the way we like it. Of course, when you are working out on the range during the day, you will want to wear clothes so the barbed wire and stuff like that doesn't cut you up. But when you get in at night, if you chose to, you can be as naked as I am right now. One last thing, I want to stress with you is, even though you see me or Nicole nude, we are not available for you to hang on or over. We have our own men. If you want a woman here, you'll have to find your own, just don't give her any advance information in case she isn't interested in our lifestyle.\"\n\n\"How would she know if I don't tell her?\"\n\n\"You leave that to me. I do wear shorts, as I have with you, when I don't know someone. Being a female, I have my ways of getting through to even the toughest person.\"\n\n\"Ok, when can I bring my horse out here and move into the bunk house?\" Steve asked.\n\n\"Do you agree with your wages and our way of life. You'll be working with spike and snake to learn the ranch before we turn you loose on your own.\"\n\n\"I'm not so sure about the nude thing just yet, honestly, I'm afraid I'll get a hardon and offend someone. For me, it will be boxers for now. But yes, I want to take your job, it's the best offer I've had in a very long time.\" Steve said.\n\n\"Can I bring my horse in tonight? I'll need to swing through town and get some groceries and then come out here later.\"\n\n\"Yes, you can, I'll have your tax form ready for you to fill out and get it to our accountant. Our regular pay days are on Friday, but it will take them a few days to put you in the system, so you'll most likely not your first check next Friday.\"\n\n\"That's ok, I have money to spend so I can wait until then.\" Steve said.\n\nWe walked back to his truck and he looked me up and down before saying, \"I must have died and gone to heaven.\" \n\n\"Remember, hands off the females until you have one of your own.\" I warned.\n\nSteve smiled and said, \"Just looking at you will give me plenty of material to work with, until I find someone to share my feelings with.\"\n\nSteve left and snake and I walked up to the porch and snake dropped his shorts before sitting down. He looked at me and said, \"Where did you learn to negotiate like that? When he gave you that one price, I was ready to jump in there and ask him if he was crazy, ain't no rancher going to pay that kind of money.\"\n\n\"But you handled him perfectly. Then you gave him a deal he accepted and then went higher.\"\n\n\"That's the number I had in my head. I wanted to start out low and if he was who he said he was, then I was going to raise him up to two hundred and seventy-five dollars. I wanted him to feel really good about coming to work for us, that's why I did it that way. I think it worked.\"\n\n\"His references all said he was a good worker and was very dependable. If he works out well, both you and spike can start later in the mornings and finish up about the same time in the afternoons. That will cut your working hours back. You guys have worked long and hard and I think with two of you working together, you'll accomplish a lot more in the day. You two can swap off the new guys so they can learn more about the ranch.\"\n\n\"I really like the way you are thinking and now all you have to do is sell it to spike. Which I don't see a problem in doing.\"\n\nSnake and I were still sitting on the porch when spike, Nicole and Mark came back from their tour. It was still early enough in the afternoon, so I said, \"Come on snake, let's go out and have a dip in the pond.\"\n\nSnake smiled at me and said, \"YES MA'AM, I'm all for going out there and seeing more white pussy. God girl, I'm glad you came out here to live.\"\n\n\"I called down to spike and told him to stay there. I said, snake and I will be right down.\"\n\nI ran into the house and up the stairs and pulled a couple more hand towels out of the linen closet and raced back down the stairs. I took snake's hand and the two of us went down to the barn. I said, \"We're ready for a dip in the pond. Spike how about driving us out there in your truck?\"\n\nWe loaded into the truck with snake and spike in the front seats with Mark in the middle of us girls in the back seat. Spike drove out to the pond slowly and when we arrived, we saw Bart and his crew were working and the rest of his family enjoying themselves.\n\nCarlie, Bart's wife, came running over to the truck and the minute spike got out, she hugged him and said, \"Spike, I want to thank you so much for allowing us to camp here. Everyone has been in and out of the water almost constantly. We are really having some fun here.\"\n\nSpike said, \"I'm glad all of you are enjoying the pond, that's what it's here for.\"\n\nMark looked around at all the naked flesh and his cock started getting hard immediately. Nicole said to me, \"My god, I thought you were joking but look, everyone is nude.\"\n\n\"I know, it's so nice to see everyone enjoying themselves.\"\n\nAll of us walked over to the new fireplace and when Bart took a break, I walked over and pressed my naked body against his and said, \"You are moving right along on this. I'm so happy you guys are here.\"\n\nBart held onto me a little longer and I felt his cock start to rise and I whispered, \"I better let you go or we're going to have a problem.\"\n\nBart smiled and said, \"It ain't no problem anymore. All of us have a much better understanding of nature and me, my wife and daughters are closer than ever now. I have you to thank for helping us jump the hurtle into family nudism.\"\n\nCarlie stood between spike and snake with her arms around each man while they talked to Bart and watched the girls continue to work. They were selecting stones off the pile and were bending over to put the stones in place while one of the other girls put the mud (cement mixture) in and around the stones. Carlie, spike and snake had perfect views of the tight places between the girl's legs as they bent over placing the stones. Carlie watched right along with the two guys and never said a word to them about staring at her daughter's pussies.\n\nSnake is the one who noticeably got hard when his cock hung down and swayed in front of him. Carlie leaned over and whispered in his ear, \"You like the look of that white pussy don't you snake?\"\n\nSnake smiled at her before he whispered back, \"Yes, Ms. Carlie, that is some fine-looking pussy there. Gives a man some visuals for later this evening. If you know what I mean.\"\n\n\"Yes, I do and if you need some help with that, I know where you can put it. But not here, do you have a place of your own?\"\n\n\"Ms. Carlie, are you suggesting what I think you are suggesting?\"\n\n\"I think you are on the right track snake.\" Carlie spoke out loud and asked, \"Snake would it be possible for me to see your horses. I heard Bart say you have some beautiful horses in the barn.\"\n\n\"Ms. Carlie, we have five horses in the barn currently and if you'd like to see them, I'm sure spike will let me use his truck to go back to the barn and show them to you.\"\n\nSpike heard them talking and turned to snake and said, \"The keys are in the truck.\"\n\nCarlie and snake walked over to the truck as casual as they could and got in. Snake started to drive, and Carlie was quick to reach over and stroke snake's cock once they were out of sight. Snake drove directly to the back of the shed and parked by the stairs which led up to his apartment.\n\nCarlie was out of the passenger door in a flash and part way up the stairs when snake caught up with her. She turned and kissed snake before she asked, \"Will you be gentle with me, I've never had a cock this big?\"\n\nSnake picked Carlie up and carried her the rest of the way up the stairs and into his apartment. He walked over and placed her on the bed, knelt down and opened her legs. She tried to protest saying he didn't have to do that, but snake didn't listen. He pushed his tongue into her hot wet pussy, and she let out a scream that almost shattered the glass. \n\nSnake attacked her pussy and when he found her clit she zoomed past outer space into the heavens. She had multiple orgasms just from snake face fucking her. Her noise level would have raised the dead, if there were any in the area. \n\nSnake continued to feast on her pussy until she pushed on his forehead and said, \"Please no more. My clit can't take any more stimulation. OH, MY FUCKING GOD ... I've never cum so much in my life. I have to have your big cock inside me, but I have to rest a few minutes first. Snake I'm in lust for you.\"\n\nSnake crawled on the bed and laid on his back as his tree trunk of a cock stood up in the air. Carlie moved up beside him and started kissing him while she stroked his cock. She looked at the large member in her hand and said, \"I want to suck your cock, but I don't know if it will fit in my mouth.\"\n\nShe moved down the bed and licked snake's cock and then opened as wide as she could and put the head of his cock plus an inch inside. She used her tongue to lick her new toy as she massaged his hairless balls. Snake started breathing harder and let out a few moans of appreciation as Carlie worked wonders for him.\n\nShe pulled off his cock and said to snake, so you loved looking at all that white pussy out there, didn't you? I'll bet you would love to push this beautiful black cock into my white pussy, right?\"\n\nSnake said, \"Oh Ms. Carlie, yes, I want you to ride my black cock until you have as many orgasms as you want.\"\n\nWith that Carlie moved up and straddled snake's hips and lined up the head of his cock with her love tunnel. She sat down on it until the head of his cock was inside her and she sounded like a kitten purring with satisfaction. Slowly she took more of his cock inside her and had to wait for her vagina to adjust to the size of snake's cock. She would raise up and then lower herself down until she felt the head of his cock press against her cervix. Carlie moaned as she rested on his cock knowing she still didn't have the whole thing inside her.\n\nCarlie said, \"Snake, look down here and see your black cock stretching my white pussy. I want you to have something to dream about tonight.\"\n\nSnake reached up and took Carlie's hips in his large hands and started to pick her up off his cock and then drop her again. Each time he did, she groaned with a twinge of pain as his cock pressed against her cervix. Carlie started helping snake pump his cock deep inside her and each time she did, she forced herself down more, so snake's cock really pressed hard against the barrier deep inside her. \n\nCarlie went wild and started bouncing on snake's cock while she endured the sparks of pain that shot through her whole body each time, she stretched her cervix to its maximum. She experienced a series of smaller orgasms until the big one started to rock her body. At that moment she made it well known by her noises that she was working on something way more powerful than the orgasms she had been experiencing.\n\nSnake sensed her urgency and started pumping into her sopping wet pussy. She responded with sounds of satisfaction and happiness and her own luxuriating in every thrill. Together they elevated their passion to critical proportions until both of them exploded in earth shattering orgasms. They rode the reverberations of their orgasms to the last end as they crumpled on each other with labored breathing and racing heart rates. \n\nIt took them several minutes to recover. Then Carlie had just enough energy to roll her body sideways off snake's body. He cuddled her in his arms and pulled her close to him as they rested from their exhausting sex romp. \n\nIt was Carlie who broke the silence with, \"I've never had sex with a black man before but I'm so glad I did. Snake, you've sparked my already great sex life to a whole new level. Thank you so much for being patient with me and going slow until I adjusted to your size. But I think I need to find your bathroom and dump a gallon of cum out of me.\"\n\nSnake laughed and said, \"It's been a long time for me, and the bathroom is around the corner on the left.\"\n\nVery carefully Carlie rolled off the bed and with her thighs pressed tight together, she waddled to the bathroom. She was in there for at least five minutes and when she came out, she had a washcloth and a towel in her hand. She sat on the bed next to snake and thoroughly washed his limp dick before she dried it and kissed it. She stood up and said, \"We better get back, I want to come here again but I don't want the girls to know that we had sex. I don't think any of them could handle your hard cock. Snake, you are certainly a wonderful lover. Thank you.\"\n\nSnake smiled as he said, \"Ms. Carlie, you can come back any time you want. Thank you for the wonderful time we shared together.\"\n\nThey stood up and walked outside and down the stairs and got into the truck. Snake drove them back to the pond and they sat in the truck and talked for a few minutes as they watched the three girls work building the fireplace.\"\n\nCarlie saw snake smiling and she said, \"I take it you love the view?\"\n\n\"Yes, but we better move before I get hard again looking at all that white pussy out there.\"\n\nThey got out of the truck and started talking about the horses as they walked back up to the place where the fireplace was being built. Spike asked Carlie, \"How do you like the horses? Maybe someday we can get you up on one and have someone take you for a ride.\"\n\nCarlie said, \"Oh, I'd love to ride one of those powerful animals. They look so stately.\"\n\nSpike laughed and said, \"I'm not so sure stately is the right word to use but they are very powerful. They are cutting horses and they are trained to move on a dime and give you nine cents change.\"\n\nAlex and Jess both spoke up and said, \"I'd like to ride one.\" It was like stereo with a half second delay.\n\nSpike said, \"We'll see what the summer brings since you will be camping here. Oh, Bart did you bring that paper from the dealership where you bought your camper?\"\n\nBart went into the trailer and came out with a few pages and said, \"If you want to take a trip over there, I'll go with you and maybe, they will give you a discount since I already bought one from them a month ago.\"\n\n\"It sounds great to me. I'll talk it over with Britt and see what she thinks of it.\"\n\nThe girls finished off the last batch of mud for the fireplace and went down to the pond and brought up two buckets of water to wash the tub and the tools. When they were done, they said, \"Come on dad, let's go down and take a swim and wash off some of this sweat.\"\n\nEveryone headed for the water and did cannonballs which made the raft move to the waves of the water, while Britt, Nicole and Mark were laying on it getting a tan. Some swam out to the raft and climbed on it and shook cold water all over the sunbathers. They screamed from the cold water and then sat up on the raft. With all the swimmers climbing up on the raft, it sure put a strain on the raft, when almost everyone climbed on it.\n\nI saw Kendra move around and stroke Bart's cock. He didn't stop her and no one from his family saw them or said anything to him. We jumped in the water and played tag for awhile before I asked what time it was. Nobody knew but the sun was getting low in the sky, so I knew it had to be getting late. \n\nI said to spike, we need to be getting back, I don't have anything out for supper. We swam around for a few minutes more and then spike said, \"Anyone who rode with me, if you want a ride back, come on.\"\n\nI spoke up and said, \"I need to start supper. If you don't want to come along now, you can walk back in a little bit and I should have supper ready.\"\n\nI said my goodbye to Bart and Carlie. Carlie hugged me tight and simply said, \"Thank you Britt.\"\n\nAll of us got out of the water and walked back to spike's truck and got in. On the way back snake said, \"I had a wonderful day.\"",
        "Spike asked, \"How did you two make out with Steve, did you hire him?\"\n\nI smiled and said, \"Spike, you and snake will have to decide which man you want to take with you tomorrow. Mark can go with one of you and Steve can go with the other. The best part is, we won't have to start so early. Each of you will have help, starting tomorrow.\"\n\nSpike smiled and said, \"We need to fill one more spot and then we should be good for a while.\"\n\n\"I told Steve since he is single, he needs to keep his hands off the females and if he wants to, he can find his own woman.\"\n\nSpike started laughing and said, \"Britt, that's what I love about you. You don't mix words and you say what you mean very directly. For as many people as I've interviewed over the years, for some reason, I've always let them get a little ahead of me. I'm glad you're by my side now.\"\n\nMark spoke up saying, \"Britt had us worried when we were interviewing with her. You are a little intimidating.\"\n\n\"I may be intimidating, but in the end, I had a firm commitment from both of you that you really wanted to work for us. We want ranch hands who are interested in long term employment.\"\n\nNicole spoke up saying, \"If this job is going to be like it was for us today, I'm all in. I really don't like a whole lot of change in my life. I'm not one of those women who don't care if they have to live out of cardboard moving boxes. I want a home someday. The bunk house is ok for now, but I still want a house I can call mine and raise my family in. I would especially love to raise my children right here on this ranch where they can learn about nature and won't have to be dressed just because society says so.\"\n\n\"That's great Nicole because I have the same dream. I want my children to grow up in the nudist environment and enjoy all of what life has to offer.\" I said.\n\nWe made it back to the barn and there was a truck and horse trailer sitting in front of the barn with the trailer door open. Spike parked the truck and all of us got out and walked into the barn. Steve looked at all our naked bodies as he brushed his horse. He didn't say a word as he watched us walk into the barn.\n\nI spoke up saying, \"Steve, I'd like to introduce you to Frank Campbell or better known as spike, you already know Charlie Wilson or as we call him, snake. Over here is Mark and Nicole Snyder. They are the couple who are in the bunk house I told you about earlier.\"\n\nEveryone stepped forward and shook hands with Steve. Spike welcomed Steve to the ranch. We talked for a few minutes as Steve put his horse in the next empty stall which he had already put bedding and hay in. Snake said as long as we were in the barn and it was this late in the afternoon, we might as well feed the animals.\n\nAll of us pitched in and fed the animals in record time. When we were done, I said to Steve, \"I haven't cooked supper yet so if you want to go take a shower and come up to the house, you can eat with us. I don't know what we are having yet because we were all out at the pond skinny dipping.\"\n\n\"You have a pond here on the ranch?\"\n\n\"Yes, and it is spring fed from the bottom and the water is very chilly but refreshing as hell.\" Spike said.\n\nSteve said, \"So all of you obviously have been skinny dipping at the pond. Is anyone going to get dressed before supper since all of you are standing here naked and nobody is bothering to cover themselves?\"\n\n\"I can only speak for myself; I'm not going to be getting dressed and I'm cooking supper.\"\n\nSuddenly there was a chorus of voices, \"I'm not getting dressed.\"\n\nSteve laughed and said, \"Did I just step in a pile of shit and come out smelling like a rose? I mean, I've never worked on a ranch where the people are openly naked like you guys are. I've seen some skin a few times but hey, I'm not against taking off my clothes and running around naked. I hope you girls won't be embarrassed but I have a hardon right now, but you can't see it. If I take off my clothes, will any of you be pissed off at me?\"\n\nSpike quickly spoke up and said, \"Before Britt came to work for me, there was only three of us who used to sit on the porch in the evenings and drink a cold one while relaxing and enjoying the end of the day. The short version is Britt can't take the heat here in Texas so she's hard to keep clothes on. Well, I guess we've had an epidemic of nudism around here because it seems everyone is catching it. Since Britt is my co-owner of the ranch, she's got some input on how we operate. The only thing I require is to wear safety boots around the animals and clothes when we are out on the range working the fence line. When you come from the range and you want to be naked, have at it. I know me and Britt will be naked, what y'all do is up to you.\"\n\nMark spoke next as he said, \"Nicole and I just started working here yesterday and Steve, I can tell you in just the short time we've been here, this ain't like no other place we've ever been. I'm thinkin' me and Nicole are going to be hangin' out here for a good long time.\"\n\nI said, \"This ain't gettin' supper cooked so y'all can stay down here or whatever, but Nicole and I have to go rustle up some supper to feed to y'all. Steve are you coming up to the house for supper?\"\n\n\"If you don't mind me joining you. It would be to my advantage so I could talk to everyone and get to know y'all. Yes, I'll be there.\"\n\nNicole and I turned and started walking out of the barn and we heard the guys start to talk again. Nicole asked me what we were going to make for supper, and I told her we'd have to check out the freezer and see what would be the fastest and easiest to cook.\n\nWe walked into the house and washed our hands before I opened the freezer and started looking around. I told Nicole, \"Spike always said, since we live on a beef ranch, a good steak is always the best bet.\"\n\nI saw the spareribs in the freezer but there was no way of telling how hungry everyone was, so I by-passed them. Chicken was out of the question also, so I looked at Nicole and said, \"I think steak it is.\"\n\nWe both laughed and I reached in and pulled out three large steaks. Nicole asked me what we were going to have with the steaks, and I asked her for suggestions. We talked over a few things and finally came up with home fries with onions, garlic and peppers in them. I went out and turned on the grill to heat it up and came back and said, \"Nicole, there are red potatoes in the pantry, just scrub them off and cut them up instead of peeling them.\"\n\nWhile Nicole attacked the potatoes, I got the steaks on the grill's top and middle shelf then came in and mixed up the BBQ sauce. Then while I was waiting for the steaks to defrost, I helped cut the potatoes up in small chunks so they would cook quicker. We put them in two large frying pans and turned down the heat while Nicole diced the onions and peppers. I worked on the few cloves of garlic and added them to both pans.\n\nThe steaks had thawed out nicely, so I smeared the BBQ sauce on them and left them on the upper shelves for a little while longer.\n\nI pulled the plates down from the cupboard and Nicole helped me set the table. We had to bring an extra chair in from the spare room for Steve.\n\nThe meat was coming along nicely so I moved it down on the grill and left the heat down low and smeared the other side of the meat with sauce. The home fries were on low heat and the meat was cooking on low heat, so all Nicole and I had to do was wait.\n\nI asked her if she liked beer or wine coolers and she informed me she'd never had a wine cooler. I pulled two of them out of the fridge and handed her one. Before I dank mine, I went outside and checked the steaks. They were cooking right along so I flopped them over and smeared them again.\n\nI went back inside and picked up my wine cooler and uncapped it before saying to Nicole, \"Let's go out on the front porch.\"\n\nThe guys were standing by Steve's truck so I called down and said, \"Supper will be ready in a little while.\"\n\nThey waved at me and Steve went around his truck and got in and moved it over beside Mark's truck. He got out and stopped briefly where the other guys were standing and then walked on up to the bunk house. The other three guys headed towards the house. When they got close enough, I asked if anyone would like a cold one and all three responded with a positive answer.\n\nI went in and pulled three beers out of the fridge and took them outside and passed them around. I went back inside then out the back door to check on the steaks while Nicole turned the home fries. All the smells blended nicely and there was a call from the porch, \"Whatever you're cooking sure smells good.\"\n\nNicole and I laughed and said, \"If they only knew, we just threw this together. But we can tell them we slaved all day over a hot stove.\"\n\nNicole added, \"They wouldn't buy that because we were with them this afternoon.\"\n\n\"Oh yeah, you're right. DAMN!\"\n\nWhen Steve got to the front porch, he was as naked as the rest of the guys. He sat down and they started talking ranch life again.\n\nI checked the meat and it was rare in the middle and the home fries were soft, so I put hot plates on the table for the two frying pans and then got the platter out and put the steaks on it. I poured the remaining sauce on the top of the meat then set it on the table.\n\nI called the guys for supper and they all filed inside. Spike directed Steve to the empty chair, Nicole and Mark sat where they did this morning leaving my chair open for me. I asked if anyone needed a cold one but the only one who did was Steve. I got him a beer and handed it to him and then sat down. Spike said the prayer before anything happened around the table. When he was finished, he picked up the knife and cut all the meat into pieces. Everyone took turns dishing up their own home fries then stabbed a piece of steak. \n\nSteve looked at me and said, \"I really though you were joking when you said you do your chores in the nude.\"\n\nMark echoed the same thing but said, \"I'm really glad Nicole and I found this ranch. There seems to be so much love floating around here between the owners and the ranch hands, it's hard to explain and a little weird but I love this.\"\n\nSnake popped into the conversation, \"Don't say \"floating\" around here, we don't have any left-handed joints.\"\n\nSpike and I started laughing so spike went on to tell the story about \"floating\" and by the time he finished, all of us were laughing.\n\nThere was a little bit of steak and home fries left so I said, \"Someone, I don't care who, needs to clean up that last bit of food. Ain't no sense of putting that little bit in the fridge, hell there ain't even enough to feed a mouse.\"\n\nBetween Mark and Steve, they cleaned up the food with both of them saying the meal was great.\n\nI wiped my forehead with the back of my hand and sighed before saying, \"Wheeew ... Nicole and I slaved all day on this meal and we sure are grateful our men folk enjoyed it. I'm so tuckered out right now.\"\n\nEveryone broke out laughing.\n\nNicole and I got up to clean the table with both Mark and Steve's help. I decided to draw the water in the sink to wash the dishes, but Nicole shooed me away and she washed the dishes. Mark wiped them and I took them and put them away. When it came to the silverware, Steve asked me which drawer it went in and I pointed it out to him. He grabbed a dish towel and dried the silverware and put it away. We had the dishes done in no time. \n\nSpike and snake got up from the table and spike said, \"Everyone grab a fresh beer and let's go out on the porch, we can talk about what's going to happen tomorrow.\"\n\nI told the guys Nicole and I get to sit on the swing because I love to let my guys look at my naked body. They had to bring an extra chair out for Steve but soon we were all assembled on the porch and I showed Nicole how I sat on the swing so the guys could appreciate the view. She was game so she positioned herself with her legs open for all the guys to see her cute bald pussy too.\n\nSpike spoke up and said, \"Normally, snake, Britt and I have been getting up early before sunrise, so we can get the work done. It's been rough on us for a long time but now with the three of you here and one more to hire, we can sleep in a little more tomorrow morning. I think if we all meet up here for breakfast around six in the morning, we can eat breakfast and then get to work.\" \n\n\"Since you guys are going to be out on the range with me and snake, you need to wear your clothes. We take the tractors out so we can put the tools we need in the bucket. Most of the time we will be fixing fence and running the fence line for any breaks. We'll switch every day so both of you can get to know my ranch.\" \n\n\"I have all my beef out in the far pasture right now where the grass is good. Now that we've got help, I want to move some of them in closer, probably a few hundred head. Later we will do our annual round up and bring all of them into a closer pasture for the winter. That's when the annual ranch hands come by and help with the round up. Some I'll sell off and the rest will pasture close by.\"\n\nBut before we move anything, I think what we'll do tomorrow is saddle up after the morning chores and take a ride so I can show all of you where my cattle are grazing right now. After you've had a chance to be out on the range with me then we'll move some beef. That will give me a chance to watch you work your horses. Make sure to fill your canteens tomorrow, it's gonna be hot.\n\n\"Does anyone have any questions for me?\" Spike inquired.\n\nSteve asked, \"When we get back in tomorrow are any of you going out to go skinny dipping? I sure do want to go.\"\n\n\"I'm almost certain I'll go out to the pond tomorrow when we get back. Being that I have to get dressed tomorrow, I'll be ready for that cool water. I'm going to warn you though, I ain't getting dressed until I have to.\" I said.\n\nNicole said, \"If Britt is going to be naked, then I will be too.\"\n\nSteve spoke up and said, \"Ladies, you sure do look delicious sitting there. I need to find me a girl who will add her naked body to this ranch. I still have to pinch myself to see if I'm dreaming.\"\n\nNicole said, \"Wait till you go skinny dipping out at the pond and see the three-girl crew who are building the fireplace out there. I mean, they have beautiful bodies. Oh, and they are naked also.\"\n\nSteve would have liked to jump up and down when he heard that. He excitedly asked, \"You mean there are more naked, not taken, girls on this ranch?\"\n\nSpike smiled and said, \"Yes, they're out at the pond working. You can't disturb them during the day.\"\n\nOh, I wouldn't do that. But to think there are three more naked girls on the ranch, makes me ... well I don't have to tell you cause all you guys have a hardon too.\" Steve admitted.\n\nSnake yawned and stretched before he said, \"It's that time of night again. Only this time I have two lovely ladies to dance for me in my dreams. I want to thank both of you for being so gracious in allowing us to see your beautiful bodies.\"\n\nSnake stood up with his cock standing straight out from his groin. I jumped up and stepped up to snake and let his cock press against my pussy as I kissed him and said goodnight. I was stepping back to sit back in the swing when Nicole stood up and followed my lead. She kissed snake goodnight and gave him a hug. She said, \"Thank you snake for telling us that we have beautiful bodies.\"\n\n\"Ms. Nicole and Ms. Britt, my mamma told me to always tell the truth and that's what I did. You are both beautiful ladies.\"\n\nEveryone said good night to snake and he walked off the porch and headed towards his apartment. Steve asked, \"Where does snake live?\"\n\nSpike said, \"Snake has the apartment over the shed. He's been with me a long time. Actually, he's like family now.\"\n\n\"The way you treat everyone spike; everyone seems to be family.\" Nicole said.\n\n\"Nicole, the thing is, everyone is all hung up on material things and has little or no respect for others now days. I try to treat everyone like I want to be treated and so far, it has worked for me. I get just as pissed off if someone does something to me, but at least I know, I tried.\"\n\n\"Since Britt moved out here from Cleveland, she's even opened my eyes more. My wife, god rest her sole, snake and I used to sit around on this very porch and have a cold beer every night while we relaxed and enjoyed the end of the day. There was nothing sexual about it and I still cherish all those years.\"\n\n\"With Britt coming here and not used to the heat here in Texas, she's taught me so much more even though as an old man, I thought I had a pretty good handle on life because of my age. I'm not going to preach to you but don't ever stop learning. There's so much more to this life than your age. Age is just a number, experience is life.\"\n\nMark said, \"I wish you could have been my father figure. Everything he did or said was about material things and now that my parents are gone, I sure do miss them. All I have left is my wife Nicole and the love we share for each other.\"\n\n\"Hang on to that love son, my wife died unexpectantly. I found her one day when I came in off the range. I sure do miss her love from all the years we shared together. Things were very hard when we were young, and ranching is a hard life, but we always had each other. Now I have Britt to share my life and I'm truly grateful for her.\"\n\n\"I love you to spike, with all my heart.\"\n\n\"Gosh darn it, you two are gonna make me cry if you don't cut it out. That's such a lovely story and I love my man Mark just as much.\"\n\n\"Nicole, enjoy your life and do what you know is right for you and no one else and you will find happiness with Mark.\" Spike said.\n\n\"I think I'm going to take my man into the house and make love to him until five thirty tomorrow morning.\" I said.\n\n\"Wait a minute girl, I'm not positive that you can go at it for that long and I'm very positive I can't do it for that long, so dream on girl.\" Spike said.\n\nThe other three laughed and then Nicole said, \"I'm going to take my man down to the bunk house and bite the pillow while he ravishes my body. Sorry Steve, we'll try to keep it down.\"\n\n\"Hell, after all the years I've spent living in bunk houses with both sexes of ranch hands, there have been many times when some of us got lucky and the bunk house reverberated with sexual gratifications, while the rest of us enjoyed the sounds and sights. I learned to be a voyeur so have at it, I don't care what you two do. When I finally get a girl to come to the bunk house, we are going to get it on, on top of the bed so you can see how it's really done.\"\n\nAll of us laughed and I stood up and started collecting the beer bottles and Nicole helped me. We took them in the house, and I put them where they belong. Nicole turned to me and hugged me. She said, \"Britt, I want to thank you so much for giving us a chance, you won't be sorry.\"\n\nI pressed my body against hers and kissed her on her lips. I looked into her eyes and said, \"I like you and Mark a lot and I'm sorry that his parents were killed in a plane crash and your parents kicked you out. We will make up for all that sadness I'm sure.\" I kissed and hugged her again before I stepped back from her. We held hands as we walked through the kitchen where I turned off the lights and went out onto the porch.\n\nI looked at all three hard cocks before I said, \"I know at least two cocks that will be taken care of tonight in the proper manner. The third one will have to be by hand.\"\n\nSteve moaned and said, \"Yeah, right. Dammit.\"\n\nI stepped up to Steve and with everyone watching us, I looked straight at him. I contemplated my next move for a few seconds, before I reached down and massaged his rigid cock with my hand. Slowly, I spread my feet apart, then pulled him forward using his cock to move him between my thighs. ",
        "I sandwiched his cock between my slippery pussy lips. Then I moved my hips back and forth a few times to make Steve's cock slick with my juices. With the head of his cock poking between my ass cheeks, I closed my legs tight and whispered to Steve, \"Fuck me between my thighs until you cum.\" \n\nSteve had a stunned look on his face at first which turned into a smile as he started to move back in forth between my thighs. I could feel my juices leak onto his cock as he pumped faster. I guided his hands up to my little titties and he immediately started fondling them. He even pulled my nipples which made me moan and pump my hips back against his groin as I pulled his hips with my hands.\n\nSoon both of us were breathing rapidly and everyone was watching as Steve started moving his hips as he grabbed my ass cheeks. No one said a word as Steve became more excited by the second. I said to him, \"How does it feel to fuck the boss lady's thighs on the first night working here. Go ahead and cum for me, let me feel your hot juice run down the inside of my thighs. That's it Steve, pump that nice cock in there for me.\"\n\nI stood looking in his eyes and said, \"This will give you something to jerk off to. But this is as close to my pussy as you get. Enjoy it and let me feel your hot cum.\"\n\nSuddenly Steve held me tight and blew his load between my thighs. Everyone was watching but it was Nicole who seemed to be the most amazed that I let Steve do that to me, especially in front of everyone. We hugged each other as his cock started to wilt and his cum ran down the inside of my thighs. \n\nI said, \"You were the only one who wasn't going to get laid tonight and I thought I'd do you a favor. I don't expect you to tell anyone except the group gathered here. Behave yourself and you just may get to do this again someday.\" \n\nSteve kissed me one last time and said, \"Thank you so much Britt. You are a blessed angel in disguise.\"\n\nI stepped back and spike and I watched as the three of them headed for the bunk house. Spike looked at me and said, \"You are something else Britt. That man will now probably do anything to please you for your act of kindness towards him. You know Britt, I love you more and more each day. You don't stop amazing me each day.\"\n\nWe stood on the porch and kissed for a few minutes before I said, \"Steve in running down my legs, I have to go clean him up.\"\n\nWe laughed all the way into the house and up the stairs we went. I turned on the shower and washed off the evidence of Steve, then dried off. Meanwhile grandpa had taken a leak and was brushing his teeth while I sat down and turned loose with a long stream of pee. While I brushed my teeth, grandpa stood behind me with his hard cock pressing against my ass crack while he massaged my small titties.\n\nWhen I finished, we turned off the light and walked hand in hand to our bed. Grandpa started to go down on me, but I told him he didn't have to because I was wet from the fun I had with Steve. I laid on the bed and lifted my legs and spread them as an invitation for my lover. He didn't need the invitation because he moved up on the bed and rubbed the head of his cock up and down my slippery wet slit until he found my hole.\n\nSlowly he pushed forward sinking his cock into my wet and welcoming vagina. For the next half hour, we swapped positions bringing me to several mini orgasms while I worked towards one that I was sure would rock my world. I was on my knees with my face buried in my pillow and grandpa held my hips in place as he hammered his cock deep inside me. I felt his cock growing inside me and I knew he was only moments away from cumming. I turned my face and said, \"Please grandpa, cum inside my pussy. I want all your baby making cum in my womb so I can have your son. Please let me have all of it.\"\n\nGrandpa groaned and jammed his cock against my cervix and blew his hot load inside me. I thrust my hips backwards to meet grandpa's forward pushing into me. I spasmed as I came on his cock and screamed with pleasure at the sensations he caused within my body. When the sensations subsided, I said, \"Oh grandpa, thank you so much for making me feel so great. I love your cock inside me.\"\n\nGrandpa pulled his softening cock out of me and laid on his side. I laid down facing him and we cuddled together. We kissed passionately for many minutes before we got up and went to the bathroom to clean up. When we finished, we walked back to bed and cuddled up to each other.\n\n\"Britt, I can't believe how far we've come since you've been here. You have changed my life dramatically and as I've said before, I still love your grandmother, but I think you are pulling up even with the love I share with you. In my wildest dreams I never would have imagined I could fall in love with another woman like I did with Maggie. But here we are, together and I have to tell you Britt, I am head over heals in love with you. You have brightened my life after such a crisis. You are so much like your grandmother, I'm ... I'm ... aww ... I don't know how to describe it.\"\n\n\"Grandpa, I might be young, but I have to tell you, my feelings for you are so strong, your love has taken me by storm. I know there is a drastic difference in our ages, but it doesn't matter to me. I will never find a \"boy\" my age who could ever hold a candle to the love I have for you. As you have referenced grandma as being your number one girl for life, grandpa, you are my number one guy for life, and I mean that with all my heart.\"\n\nGrandpa and I hugged and kissed each other, and it wasn't long before we fell asleep in each other's arms.\n\nTO BE CONTINUED:\n\n** First, thank you for taking time to read this chapter.\n\n** Please take a couple of seconds and vote for this story.\n\n** Your vote rates the story/chapter and Literotica uses your votes to rate the authors.\n\n****************************"
    ],
    "authorname": "RecHiker",
    "tags": [
        "18-year-old",
        "black",
        "exhibitionism",
        "incest",
        "incest grandfather granddaughter sex",
        "incest taboo",
        "interracial sex",
        "nudist",
        "oral sex",
        "young woman"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/home-on-the-range-ch-07"
}