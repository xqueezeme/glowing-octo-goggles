{
    "title": "My Only Talent Ch. 25",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. The delay in posting this chapter and perhaps the next few may be ascribed to some unexpected turbulence and travel in the author's schedule.\n\n\n\n\nThe twins were little jumping blonde bundles of energy as we made our way from the hotel lobby back out to the car, which proved to be a big old silver grey Range Rover, very similar to the one Peggy had sold before she left Austin, but older and even more worn, and with British plates, several add on bumpers and brush guards, some aggressively treaded winter tires to handle snowy conditions and the steering wheel on the right hand side. I just can't get used to that. They guided me into the middle of the back seat with efficient position blocking feints and shoulder bumps that suddenly reminded me of two taller blond copies of Eldee winning one of her herding trials. They each handed me one end of the middle seat belt and strapped themselves in on either side of me while I buckled up. \n\nThe unshaven and hung over tennis bum and our reluctant chauffeur, whose name turned out improbably to be Newcombe (B. for breaking) Connors, put on his own seat belt and started the engine, looking up in the mirror to gaze at the girls seamlessly pressed against my thighs and staring like I was about to be their breakfast. I had not had breakfast, and my stomach was telling me about it. They caught him looking into the back seat and cleared their throats dramatically, and in response he shrugged, donned a pair of ear buds and turned up some very heavy metal sounding tunes, effectively preventing him from listening in on the conversation. He pulled the Range Rover out onto Whitehall and I saw the big Ferris wheel across the river to my right as we then turned left. We soon passed what I thought I recognized from the guidebook as Buckingham Palace, then Paddington Station, and merged into a motorway. This looked like approximately the same route we had taken to the Tier Group offices in Watford to start our all day tour yesterday. But I soon lost all ability to try to follow our progress, as we turned onto some small and not so clearly labeled roads, and then two lovely faces and two pairs of eyes and two sizzling Suzie signals suddenly pinned me in place like a bug mounted in a collection for careful study. \n\n\"Abbie said we would like you, Robbie, and we sure do, or at least I do. Don't you, too, Terry?\"\n\n\"Most assuredly, my dear sister Jerry! He is absotively scrum-diddly-umptous, just as advertised!\" \n\nI sought some clarification on our budding relationship. \"Tell me, girls, where are you in school?\"\n\n\"We are home schooled, Robbie, as our intensive tennis training, overall learning style and natural proclivities are not well aligned with the typical classroom atmosphere!\" That I could certainly believe.\n\n\"Sister, dear, I think Robbie was trying to politely enquire as to our ages, pursuant to Newcombe's catty comment about 'jailbait', a term of American slang referring to those unfortunate girls too young to be legally consenting sexual partners.\"\n\n\"Oh, we have certainly debated that one very frequently over the years at our house, Robbie. We just turned 18 and are well beyond legal age in the UK. Were we born in days of yore we might have been legal at 12 or 13.\" \n\n\"But to address your concerns, Robbie Dear, our Mommie trumps the law around here, at least as far as we are concerned, and she has decreed that we cannot have sex with anyone unless she gives us prior approval!\"\n\n\"Seems a waste of time and talent, but she says we have to wait until 'our brains develop properly'!\" That familiar phrase set my teeth on edge and my mind on guard. \n\n\"She says things like 'why have some just some good stuff now when you can wait a little while and have all the very best for the rest of your life' and 'you will thank me in the future'. \" Another set of familiar phrases: what were the odds?\n\n\"She says she doesn't want us to be like little girls in the candy shop and eat too much and make ourselves sick.\"\n\n\"I do want to eat a lot!\"\n\n\"But our Mommie is not exactly a stick in the mud, if you know what I mean, so there might be something to her concerns and cautions. At any rate, even though we are eighteen, she has not yet approved anyone for us!\"\n\n\"After we turn 21, we can pick out own poison, so to speak.\"\n\n\"So we have been making our lists of candidates for Mommie to approve since we were 14, sort of a 'bucket list' of people and things we want to do before we die, or in this case, as soon as she will let us.\"\n\n\"In our lighter moments, we call it our 'fuckit list'!\"\n\n\"I'm penciling you in on mine, Robbie. Mommie wouldn't have had step daddy Abbie invite you if you weren't a prospect, and you look very promising to me!\"\n\nWhat does one say to that? \"Well, girls, you are both charming and very attractive, and you certainly seem enthusiastic, but I think I'm just here to play tennis.\"\n\n\"You have no inkling of how enthusiastic we could be, Robbie! Officially speaking, you are here to help sell insurance to Abbie, aren't you? But something about you has piqued our Mommie's interest. Are you attracted to older women?\"\n\n\"Hush, Terry. If she does him we never can! You know the rules!\" \n\nLooking out the window showed me nothing but tree lined roads running through well-kept pastures. I suddenly longed for the simpler, more solitary, agricultural life. \n\n\"Speaking of tennis, we like to play strip tennis! When you lose a game, you lose one article of clothing. Set points are so thrilling!\n\n\"And we are very strict about how we count items, too! For instance, all jewelry counts as one item, inclusive of earrings, bracelets, watches, body jewelry, anything.\"\n\n\"Shoes count as one item, as do socks or hosiery! None of this left and right counts as two items stuff.\"\n\nSexually charged tennis bets made me think of Lara, and I started to get hard, perhaps not the wisest thing I could do in this situation. \"Does your mother know about all this?\"\n\nThey laughed nervously. \"Mommie knows everything about us, and about most everyone else, too. You can't lie to her and you can't fool her, and you certainly don't want to cross her!\"\n\nTerry nudged my thigh and leered openly at my erection, which was straining against the pleated crotch of my dark grey slacks. \"Does YOUR mother know about THAT?\" \n\nHoly Toledo. That just made it harder, and more difficult. Change the subject, Robbie. Peggy seemed to really like Abelard's wife, but she had described the daughters as 'evil'. Was that her synonym for threatening? \n\n\"How often do you lose at tennis, girls?\"\n\n\"Only when we want to - usually just a game or two to get our victims excited and set the hook. Then we scorch 'em and strip 'em. It's the primary vicarious sexual pleasure that Mommie will let us pursue, so far. She invites potential candidates for a match, and then we see how they handle being defeated and disrobed, plus we get to check out the goods, so to speak, that might make it onto our lists. It's delicious fun. I cross off the guys or girls that get all embarrassed and surly when they lose.\"\n\n\"And I underline the guys that get all hot and hard when they realize we are going to get to see them naked. Bonus points for boners, I always say!\" Jerry took a little Filofax out of her purse and drew two obvious lines on a page, looking from it to my crotch and back. \n\n\"Are you two really any good as players?\"\n\n\"Abbie and our coaches all say we are going to be the English equivalent of the Williams Sisters!\" That would be pretty good. Did I really want to play tennis against these two? Was that their mother's plan?\n\nThe Range Rover bucked as we turned off the two lane country road onto an even narrower one, through a radio operated gate, and then down the winding road flanked by hundreds of huge trees. A big old house loomed in the distance on a hill, surrounded by orchards full of now dormant trees and what seemed like miles of low stone wall. Snow dotted the landscape, and wood smoke escaped from several chimneys. We went through the front gate in the stone wall, and around behind the giant home, passing a very big and tall metal building, painted in wide swaths of green and brown, almost camouflage style. Back home in Texas, a building like this would probably be painted in a khaki color, be surrounded by pickups and SUVs, have a sign that said something like 'Bubba Bob's Baseball Academy' and be full of batting cages, pitching machines, and prospective baseball scholarship recipients or direct high school draft picks. I realized this was why 'step daddy Abbie' was so confident we could deal with tennis in the cold weather, and that this edifice must be full of tennis courts and serving machines. It was camouflaged and surrounded by trees even taller than it was to keep up the otherwise baronial appearance of the estate. I was suddenly a little apprehensive to see who I was expected to play first, and who would be in the gallery.\n\nWe stopped at the back entrance of the house, where lots of cars were parked. A guy dressed in what had to be a butler's outfit drove up in a 'stretch golf cart' and took the girls coats and my little suitcase, and loaded them in the back of the cart where you would expect the golf clubs to go. This guy looked to be about 40 years old, and moved like a well conditioned cat, hardly what you would expect from a stuffy English butler. He had a clear eyed and very observant look. \n\nHe turned to me. \"Come with me up to the Salmon Suite, sir, on the third floor of the main house, left hallway, the one with the salmon colored fabric on the door. My name is Jeeves, and you may call on me should need anything, anything at all.\" He handed me a blue duffle bag. \"This is some tennis equipment and togs and that you should change into, and then join the group in the dining room on the first floor for breakfast, before the tennis tournament begins.\" I took the bag automatically, as the twins each took one arm and gave me a stereo wet kiss, one set of twin lips on each cheek. \n\n\"Darn it, Robbie. Thanks to the tournament, we won't get to strip you. Mommies' tennis tournaments are nothing more than thinly disguised social devices to get the proper people to meet each other and talk. She lays out the seeds in each bracket so that people she wants to put together get eliminated early, and end up sitting and talking with each other, assuming she has handicapped the matches properly. Since you most regrettably haven't invited us to come and watch you change clothes, we'll just see you downstairs at breakfast.\"\n\nJeeves led the way up the massive stairs, and I got a load of the house, or perhaps I should say castle. This thing was huge and built a long time before indoor plumbing and electricity, and the primary components seemed to be giant blocks of granite. These steps would not have been out of place on an Incan pyramid. There were at least six levels above the ground floor, each separated by many widely spaced steps, up which we now trudged, although Jeeves seemed pretty light on his feet, even carrying my bag and what looked like someone else's much larger suitcase. We turned left at the third floor, and I saw a huge wooden door at the far end of the landing with a center decorative panel of what looked like salmon colored satin upholstery on it. Jeeves entered the suite, delivering quite a push to move the massive door open, and deftly hung up my clothes in the closet and put my Dopp kit in the bathroom, then hurried out on some other mission.\n\nI opened the blue duffle bag he had given me, and discovered a brand new Wilson Steam racquet, with the correct 5 grip, a pair of Nike 'ballistecs in the correct 12 wide, and some rightly sized and very high quality tennis whites with that ubiquitous 'Liverpool Tennis Center' logo in the same blue, complete with a blue tennis jacket that matched the color of the lettering and the laces in the shoes, and a custom grip wrap and sweat band, also in the same color coordinated blue. I was impressed, and I now had no excuse for poor performance on the court. I actually hadn't played anything but the charity tournaments since my match with Lara. I dressed out and then looked at myself in the mirror, and discovered that my newly developed thighs and butt did make me look very different in these tight whites than I would have back when ESU classes began.\n\nI took a look around in the huge suite, which was decorated like some sort of a steam punk version of a fancy hotel room. Everything that wasn't metal was colored in whites and blues, and the only salmon color I had seen was on the door. Then I looked in the corner near the window and saw a big salmon colored lump of something. On closer inspection, it was either a broken down old re-upholstered chair, or a very strange foot rest or ottoman. It stood like a toadstool up out of the floor, five feet across, except that it wasn't round and symmetrical like a toadstool. It had a five lobed top like the underside of a big strawberry, with the center elevated, and with a little depression in the very top. It didn't look like it would support your feet very well, as it was a little too high for that, and there was no chair nearby anyway. There were little areas scooped out of the wood base around the perimeter and lined with something smooth that looked like black leather that you could put something the size of a big grapefruit in snugly. It was apparently stuffed with horsehair padding, and covered in strange salmon colored leather that looked very smooth, but thick and very strong. There was also a row of old looking snap fasteners and brand new hook and ring strips around the very bottom of its circumference. \n\nI was still staring at it uncomprehendingly when I heard footfalls and laughter outside on the stairway, and noted that other people were heading down to breakfast, presumably from other suites on my floor or those above. I stuck my head out and saw two couples in their thirties, well dressed, each holding hands, and descending the staircase. I fell into step in between the two couples. \n\n\"I wonder who we will have to endure today?\" the woman closest to me hissed at her companion. \"You'd think he would impose all this only on his direct employees, not other museum donors! Does he want to humiliate us because we don't give the museum as much as he does?\"\n\n\"Nobody gives as much has he does. What's humiliating about meeting other donors, and playing tennis with them, plus free lodging, food and drink for the weekend?\n\n\"I just don't like it. I think there is stuff going on here that we don't get invited to!\"\n\n\"Like what?\"\n\n\"You know!\"\n\n\"I don't. If you know something, then please tell me.\"\n\n\"I heard something in the bathroom of the tennis building last time we were here. One woman said to another \"If I wanted to go dogging, this would be the place to try it!\"\n\n\"I thought some of the guests that did not play tennis went out 'birding' in the woods. We have been invited to do that, we just never went. What's dogging?\"\n\n\"You know!\"\n\n\"I do not!\"\n\nA loud pop of a Suzie signal emerged from the woman, not for her companion, or anyone in particular, just a generic 'woman signaling for man' desire signal. It quickly grew stronger, with a wild overtone. \"It's when a woman goes out into the woods and....\" She paused just as they turned a corner toward the dining room, and then noticed me and the other couple just behind me. Her face became a mask of alarm, and she instantly grew silent. Her Suzie signal wavered and died out. \n\nBy that time they had reached the dining room, which looked like it could seat at least 200 people. I caught a movement out of the corner of my eye and saw the twins waving enthusiastically at me. Next to them were my old ESU football game buddy Abelard Peters, and a tall and beautiful platinum haired woman that seemed to be about 45 years old to Abelard's almost 80. Both girls reached for an arm when I approached the group. \n\n\"Mommie, this is Robbie. He is on both our lists already!\"\n\nThe woman looked incredulous, but Abelard laughed loudly, taking her upper arm. \"Oh how you will serve me tonight, wench! I'll teach you to bet against me! \"\n\nShe reached over and patted his butt. 'I already do anything you want, you old goat!\" She smiled, pulled the arm away from him and held out her hand to me. \"I am Belinda Hatch-Peters, Abelard's second and final wife.\" \n\nI'm not sure why the inspiration struck me, but I took her hand, held it up to my lips and gave the back of it a lingering kiss. The twins bounced up and down as they watched, then both put their hands out to me. I passed on their implied offer and spoke to their mother, still holding her gaze. \"The pleasure is mine. My opinion of Abelard, already high, has now soared after meeting you and your lovely daughters. \"\n\nShe laughed heartily. \"What a shameless hound dog you are young man. We'll get along famously!\"\n\nAbelard spoke up. \"I usually introduce her as 'my current wife' and she was just trying to forestall my little joke. I am glad you could join us, Robbie.\"\n\nWe sat at a big table with about eight other people and breakfast was served family style in big bowls. I counted eight tables of about a dozen people each, and there would have been room for lots more. My stomach, growling all during the car trip, was delighted by the contents of the bowls: eggs, sausages, kippers, scones, strawberries, oranges, melon balls, and French toast dusted with powdered sugar. Yee Haw! The conversation included the entire table and ranged from the latest additions to the museum's various collections, to tennis, to Formula One racing, to geopolitics. I enjoyed listening, but I was too busy filling my hollow leg to participate. Perhaps getting my blood sugar back up to normal increased my Suzie sensitivity, as I began to hear subtle and not so subtle Suzie signals from all over the room. The twins provided their constant background noise of little jumping puppy Suzie signals popping all around, almost randomly signaling for a wide assortment of targets. Occasional signals from adjacent tables would override the twins, with stronger and more developed desire signals for specific people. \n\nAs breakfast wound down, Belinda changed the subject from Obama's treatment of Britain to tennis, \"Robbie, I have seeded you for this morning's tournament based solely on Abelard's assessment of your tennis ability. For my sake I hope he was not too optimistic. But I understand my girls are hoping that you are hopelessly inept and will fall victim to their skills later in your visit.\" With that she stood up and walked over to a large board on a stand at the front of the room, which was covered with a blue plastic tarp. All conversations instantly stopped at the other tables, and several frantic Suzies sprang forth, all tinged with raucous overtones of various kinds of wildness.\n\nThe woman to my left leaned over and whispered to the man next to her, but loudly enough for me to hear, \"If they get eliminated early, I am going to throw my match so I am free to be with them! Promise me you will, too!\" I instantly heard a strange spike of some mixed male signaling for female and some male signaling for male Suzies, but could not hear his verbal reply. Belinda Hatch-Peters reached the stand and pulled off the blue tarp, revealing a fairly standard looking ladder of seeds for a tennis tournament. Most of the names I did not recognize, but I saw my own name, paired with Belinda's, seeded as second highest mixed doubles pair. \n\nAbelard leaned closer to me. \"Belinda's tournaments are unusual. It looks like a regular mixed doubles setup, but there is an overall handicapping formula and then a separate ongoing ranking ladder for males and females. The main purpose is to stimulate giving for the museum, but some of our guests have 'side bets' that stimulate other things, you might say. You have probably noticed that Belinda is a very vital and striking woman, and I must tell you that we have a very open and understanding relationship; you could say, especially with regard to our libidos. Her needs are ten times mine, and while she can satisfy me completely, I also enjoy watching her satisfying herself and other people, with my complete approval.\"",
        "I had nothing to say to that, and desperately hoped he would fill the silence. He finally did. \"We expect you will only be interested in our lovely Miss Duchenne on this trip, and that is as it should be. But keep your mind open to other, future possibilities. I suspect Belinda is considering you as one of the girls 'pre-approved' partners for the future.\"\n\nI must have turned red, and he laughed. \"I know this is hardly the conventional talk that a father, or even a step-father, gives to a young man, and I don't expect that you will be part of the girl's lives in the long term, but in the short term I think you could be a good influence on them. Just observe and see what you can glean about them and our other guests as the day unfolds.\" What else could I do?\n\nThe entire group trooped over to the tennis building, buzzing with excitement, conversations, and various catcalls and challenges bouncing back and forth. There were four well lit courts inside, with a few rows of seats around each. Two big plasma screens loomed high on one wall: one had a video version of the tournament ladder that had been on the board inside, and the other had a map like representation of the courts, with the names of the teams for the next match displayed on each court. Belinda and I, as high seeds, were not playing in the earliest matches. People began filling up the courtside seating, and I noticed that Belinda and Abelard were already settled in courtside with no vacancies in the rows around them. I moved toward the least crowded seating at the furthest court away, and sat down to enjoy a match.\n\n*******\n\nLara busied herself getting ready for the open house. She had bundled up and doggedly done her three mile run right after breakfast, still surprised at how cold it was. Her 'work day' then started with the flower delivery, and she began to distribute and arrange them about the house to bring a little floral spring beauty (mostly imported from Central and South America) to this cold Colorado day. The caterers came next, setting up their tables and getting them and other stuff ready for when they returned later with the fresh food and drink. She had already set up two decorative Christmas trees in addition to the big one in the family room, and phoned to check on the musicians and the guy who would bring the 'rent a reindeer' for the front yard. Finally she completed her walk through and pronounced everything ready for action. The RSVP's had been vigorous this year, as apparently theirs was one of the most desirable events in the Beaver Creek area this evening. Maybe there would be some interesting new people to meet. She wished Robbie was coming. Actually, she wished she was coming, with Robbie, maybe with a little Suzanne on the side!\n\n\n\n*******\n\nSuzanne had enjoyed the performance of the Messiah at the Kennedy center, and even some of the conversations at the dinner party afterward. She was pleasantly surprised to see Heidi and her husband the newly elected Senator at the dinner party, and introduced them to her parents. Heidi's hubby and the Ambassador were very politically compatible, but Suzanne found herself wondering if she and Heidi were also personally compatible, and if she could tempt Heidi to run off for a little secret rendezvous. Probably not, given all the press attention they were receiving, and it would only get worse after her husband was sworn in. \n\nNow fully equipped with the proper clothing, Suzanne had made a date to visit the judge at his condo, which was the only place she would agree to meet him. He pledged his total devotion. She had pledged to cleanse him, more thoroughly than he could ever imagine. She wondered if her new super thin body suit would have the same effect on him that it had on Cindy. She almost got all sweet on Cindy when the woman took one look at Suzanne in that filmy getup and instantly stripped and fell to her knees, chin quivering and eyes full of tears, already dripping wet and filling the room with her surprisingly aggressive pussy smell. But Suzanne knew that being sweet would not get Cindy off, and that she would have to be very rough on her, and so she was. Cindy was even more excited when she left, and so was Suzanne. No release for either of them yet, but it sure gave her some ideas for the Professor's coming humiliation. Actually she was not planning to let him come, except perhaps via self abuse, and from a long way away from his supremely dominant Mistress. \n\n*******\n\nThe preliminary tennis matches actually featured better play than I expected. Everyone was in decent shape and relatively mobile, but they often had poor technique; reaching for the ball and hitting it without being set and balanced. I could probably do very well here as an instructor, at least with these lower seeds. As the early matches neared completion, several Suzies popped up, as if there were something sexual about who won the match. As they finished, the video screens updated, and I saw I was to sit out the next match, too. I decided to stay put and just watch. The play in the next round was better, but still well below what I perceived as my high school form. I realized I hadn't played really competitive tennis at all since my match with Lara. I remembered the wonderful prize I had won then, and realized that I missed Lara terribly already. Belinda Hatch-Peters then eased into the seat next to mine, so silently that I might not have noticed except for her perfume. \n\n\"I hope you are diligently scouting the opposition, Robbie. We will begin play in the next round, and I expect to win. I also expect your stellar play to carry me!\"\n\n\"I suppose the pressure is on me to perform, then. The twins told me that I really don't want to cross you!\" \n\nShe snorted. \"Well, I might give you a little more leeway than I usually give them. But tennis is not one of my special skills, and since the girls are already staking a claim to you, you may never get to experience my special skills. \"\n\nI snorted. \"My loss I am sure. Abelard mentioned your 'open' relationship, but the girls also mentioned 'the rules'.\"\n\n\"I love Abelard, and he is so good to me, and I am very good to him. You seem to be pretty quick on the uptake. May I ask you a personal question or two?\"\n\n\"Yes, so long as reciprocity applies.\"\n\n\"How old were you when you began having sex?\"\n\nI smiled, wondering what I should reveal and what I should keep to myself. \"Coincidentally, it was not until after I turned eighteen.\"\n\n\"I don't think it was coincidental at all. I suspect it was parental influence, like with my girls. I do worry about them. They are exposed to way too much at much too young an age these days. I am trying to get them at least near adulthood undamaged, and most of their friend's bubble-headed mothers are throwing booze and pot parties, 'I kissed a girl and I liked it' musical reviews, and 'E rainbow blow job orgies'. I'm hardly a prude, but there is such a thing as too much too soon, even for an old libertine like me!\"\n\nI was sure her next question would involve more details on my sexual initiation, but she changed directions on me completely. \"Where were your people from before they went to the New World, Robbie?\"\n\nI answered without thinking. \"My father's people are from Scotland mostly, Aberdeen to be specific. My mother's ancestors are mostly from France and England, although there are all sorts of interesting twigs in her family tree, including Karankawa and Chiricahua Apache.\"\n\nShe looked interested. \"Cannibals and scalp takers: a savage beast in your DNA, perhaps? How evocative.\"\n\nMy turn, Belinda baby. \"Does platinum hair run in your family?\"\n\n\"Yes, but females only. My grandfather used to say we were descended from Druids, but I think he was joking.\" \n\nThe second round match ended, and we moved to one of the other courts for our first match, as directed by the map on the overhead video screen. I did my stretching and warm-ups, as did Belinda. She looked very flexible and seemed to have good balance and excellent core strength, causing me to speculate briefly on the other 'talents' she made reference to earlier. Maybe I would have to 'carry her' to win the match, but I suspected she could carry me easily when horizontal. What a lovely image. She introduced me to our opponents, a thirtyish barrister who was quite successful and already a major museum donor, and his hot girlfriend, a trendy fashion photographer. Everyone hit a few practice serves, and then Belinda suggested they serve to start the match. When play began, I decided on my 'charity and social tennis' mode: just keep the ball in play, and let the other team make unforced errors, without trying to hit any winners myself. Against most opponents, especially playing doubles, this worked out just fine, and it did with this match, too. The barrister may have been spending too much time sitting at his desk, as he did not move very well on the court, and he was a showboat, trying to hit winners with every shot, instead of just returning the ball. His girlfriend was actually the far more effective player, and she got a little frustrated with him.\n\nBelinda was okay on the baseline, but she got nervous and was virtually useless up at the net. The showboat soon figured this out, and took delight in smashing shots right at her that made her cover up in fear. I changed my approach, making sure he got wide and deep balls he could barely return, much less deliberately smash toward Belinda, and I began rushing the net, sending Belinda back toward the baseline. After a few very effective volleys brought us a first set victory, I noticed the girlfriend grin, and Belinda grimace. Don't piss off the big donor, Roberts! I let up, giving him returns he could hit, but not smash, and his sprits improved as they won a few points. But they made enough unforced errors for us to win in straight sets. \n\nWe shook hands at the net, and as they trudged off, Belinda swatted my butt with her racquet. \"Glad you finally figured that out, Robbie, although I did enjoy his discomfort for a moment.\" \n\nThe video screens announced that we were already at the quarter finals. Belinda told me that the level of play was about to improve markedly, and we were matched against a couple in their forties, who looked very much alike, and as if they spent lots of time out in the sun. I thought about my grandfather's aphorism that people who live together for a long time began to look like each other, and like their dogs, and could not avoid the image of two nervous Basenjis with sunburns as these two warmed up. But Belinda then introduced them as brother and sister, mentioning sotto voce as we walked onto the court that they were fabulously wealthy and moderately royal, with the suntans coming from their major passion, yacht racing. The sister served, a damn good first one in the corner, and the match was on. Now I really was covering for Belinda, although I got the idea she was holding back to see how well I could manage. I avoided hitting any obvious winners, but I was near the envelope of my 'charity' style of play, still able to return all of their shots, but having to work at it. If the next match was any tougher, I was going to have to try to hit some winners just to survive. We won in three sets, but it was a rousing match. All four of us were winded, and they seemed genuinely happy with the effort, despite their loss. \"Well played, young man. I hope you two can run young Chasemoore around just as much!\" There were only the semi-finals and final left to play, so only two courts were needed from now on. Belinda motioned me over to one of the four indoor courts, where the nets had been struck, plastic flooring laid down, and tables set up with food and drink. I was in need, and soon found what I needed.\n\nThe Gatorade rally hit the spot: invented by an ESU grad, of course. That cinnamon bear claw pastry thing was just the sugar hit my brain needed, too. Suzies popped into my receiver: some were even signaling for me. But there was a very discordant and unusual signal emanating from a short and pleasant looking woman in her early thirties who was talking animatedly to Belinda. The signal was not for me, and not really 'for' the male that was eliciting it, either. It had a very hurtful and grating quality, the Suzie signal equivalent of nails on a blackboard, and was somehow even more disturbing than Melanie's meltdown signals. My hunch told me it was about rape, force, unwilling sex, and it made me feel awful. She was looking across the court at a tall and gangly young man in his mid twenties, who was staring unblinkingly at her with a smug grin on his face. I took an instant and deep disliking to him. Belinda walked over to me and nodded toward the gangly grinner. \n\n\"That is one of our most likely opponents in the final match, and betrothed to the woman I was just talking to. His name is Chasemoore Gardner-Betts.\"\n\n\"I don't think she is looking forward to the wedding, Belinda.\"\n\n\"She isn't, but her family is. They arranged it. The last few foolish generations have mortgaged the old feudal lands to the point of attachment and foreclosure, and the lad's family is going to pay off the debt after the wedding \u2013 sort of an 'inverse dowry' if you will, but very hush-hush. The two family lands adjoin each other. Chasemoore considers himself God's gift to women, although most women don't seem to want to open the package, if you get my drift.\" \n\nI did, with confirmation from my Suzie receiver. I wondered who his mixed doubles partner was. Chasemoore soon favored us with his presence. From close up, he looked even worse: oversized Adam's apple, big ears, close set eyes, and a huge and asymmetrical nose that really cried out for plastic surgery. 'Horse face' would be an upgrade.\n\n\"Greetings, Belinda. I see you have recruited a new doubles partner, not that it will do you any good.\" He stuck out his hand, magnanimously, he thought. \"Chasemoore Gardner-Betts!\" he announced. \n\n\"Catch any?\" I could not resist, even though I was sure he had heard it before.\n\n\"How droll! You must be the American fresher that Newcombe was prattling on about. Are you here to service the twins?\"\n\nI thought it was just in bad taste, but Belinda's reaction was much stronger. It must have been her equivalent of a Susie signal blast, something I was surprised she could produce. Chasemoore only blinked, but for me it was physically painful, like some of the car stereo decibel contests I had been to with Bigun Jackson back in Dallas. Whatever Belinda's other proclivities might be, she was fiercely loyal to her daughters, and Chasemoore was truly pushing his luck. Chasemoore moved over to the designated court for his semifinal match, and we headed for ours. We won and so did he, playing with a very athletic and attractive young lady that seemed to barely tolerate him, and sent no Suzie for him. \n\nBelinda said \"He plays with his school chum's sister, who I think is pressured to team with him for her brother's sake. The two young men have been roommates and joined at the hip since first form at Charterhouse. Both are the latest and least able males that their famous families have ever produced.\" We then joined them on the court for the final match. \n\nThe school mate was even more awkward looking than Chasemoore, if that was possible. Chasemoore introduced the chum as 'his wingman' which made me chuckle. He thought I was amused by his command of American idiom, but I was actually struck by the inappropriateness of the term: these two were about the furthest thing from fighter pilots I could possibly imagine. I dropped my charity tennis mode and tried to get fired up to do my competitive best. I resolved to get in the best position I could and hit the best shot I could, every time. Chasemoore was one of those guys who ran his mouth continually as he played, alternating between declarations of his own soaring superiority and inevitable triumph, and functioning as his own play by play man and color commentator, loudly describing his incredible exploits for an imagined audience. I made two promises to myself: I would beat this asshole, and previous to that I would run him around so badly that he had no wind left to talk with. \n\nMy partner's play suddenly improved markedly, too. Belinda had a look of grim determination on her face, and was now a ball hawk at the net with no trace of timidity, and continued to play the baseline very well. Chasemoore's partner was an even match for Belinda, though, so it was up to me to best the Bozo. I was fully warmed up from all the previous matches and feeling fine, having tanked up on water and some nuts and granola mix just before the match. Chasemoore's spinning serve kicked wide almost every time, which previously would have given me trouble, but I found my new marathon trained legs and Suzanne and Lara molded gluts propelled me easily into position to have time to set my stance fully, get down low, and hit it back deep and true. I was at least a step and half faster to the ball than I had ever been in high school! His partner's serve had good velocity, but I found her very predictable, and began taking the opportunity to drive my returns deep and in such a way that Chasemoore had to really dig for them. \n\nThey had obviously played doubles together before, and had good communication and almost no positioning errors, but Belinda was playing almost error free, too, and if Chasemoore failed to get back in position just right I could send one where he was not and win 3 rallies out of 4. When Chasemoore served to Belinda he held serve, and when she served to him he hit some very strong returns, but otherwise we had the best of it. I took delight in noting that Chasemoore's announcing was becoming less frequent and his breathing more labored. When he began to complain loudly when his partner couldn't return one of our deep balls, I knew we had them. I must admit I took some pleasure in his discomfort. Belinda was grinning ear to ear. I was really enjoying my new legs and command of the situation.\n\nI began to hear applause from the gallery, and thoroughly enjoyed that too. I looked up before my next serve and saw that Abelard was seated center court, and I suddenly noticed Peggy sitting next to him, her hair up in pigtails in a school girl outfit, smiling brightly, her lips highlighted by dark red lipstick. She looked incredible, and soon I noticed how tight these tennis whites were. When Belinda hit a winner right down the line, I heard two soaring cheers from the twins. In fact, almost everyone from the breakfast was in the stands watching and cheering. I suspected that more of them would be happy to see Chasemoore defeated than wanted to see me win, but it sounded good anyway. I would rather be playing with Lara, but other than that, this was the best I had every felt on a tennis court, and every hit was a bit of a high. I suppose the better you are at something the better it feels, and that explains why truly great players are so devastated when they can no longer compete \u2013 they are losing the chance to enter an altered state that they have enjoyed many times before and know they cannot achieve again. \n\nChasemoore was not talking at all now, just hustling for the ball and breathing hard between shots. I began to toy with him, extending how long it took to tend the match and prolonging my enjoyment. Belinda jogged my thinking \"Finish him off before he gets a second wind, Robbie.\" Three more quick winners, and then the final shot tied Chasemoore in a knot while he tried to decide whether to run back to the baseline or try to stand and volley \u2013 and thus he missed it totally. His partner, Sidwell Selene Happer, known to most people simply as Sid, came directly to the net to shake hands and congratulate us, Chasemoore refused to. That made it even better. I tried kissing her hand, but the initial contact with her Suzie told me she was sending for Belinda and not me, and I watched her shake Belinda's hand very warmly indeed. Chasemoore's chum, Evan Rembrandt Happer, commiserated with him in the backcourt, pretty much ignoring his sister. I stood at the net, hand extended across it and looking right at Chasemoore, demonstrating I hoped my good sportsmanship and highlighting his lack thereof. He never even looked at me.",
        "A late lunch was served in the main hall of the huge house, buffet style. Lots of salads, cold cuts, and dark bread, along with a selection of strong English cheeses, backed up with several kinds of fruit pies, and lots of wine, which I passed on, but there was also a big bowl of iced bottles of mineral water. Everything hit the spot. I sat with Peggy and some of the younger Museum employee crowd, failing to retain most of the names but enjoying the conversation and feeling convivial and victorious. After everyone had eaten their fill, Peggy looked up at me, eyes wide and twisting one of her pigtails with a big grin on her face. In her Betty Boop voice, she whispered conspiratorially \"I think I am going to go upstairs, and I think you should wait about five minutes and then come up to see me. I do. I really do think you should. Oh yes I do! Don't you?\"\n\nI did. I spent a few minutes talking to some of Peggy's co-workers and getting evil looks from Chasemoore and Evan from across the room. Then I ascended the stairs to the third floor and pushed the heavy door with the salmon colored cloth on it open, and latched it behind me. It was a very grey and overcast winter day, and the only light came in through the window. But it was enough to see an amazing sight, one that literally took my breath away. Peggy's schoolgirl outfit was on the floor just under the window, and she was displayed completely naked across the big ottoman, or whatever it was, face down with her legs in the two of the spaces between the 'lobes' of the top of it, and her arms together in another one, her waist just settled in the little depression at the top. It was the most vulnerable, open and available pose I had even imagined a woman could be placed in. Her lovely ass was up in the air at just about the level of my knees, with her head and feet about 18 inches lower. Her pussy and ass and mouth were all on perfect display, and easily accessible. There was now a linen cover over the thing, like a fitted bottom sheet for a bed, that snapped into the fasteners around the edge of it, and there were linen ties, like the belts of the robes I had used to restrain her in the hotel room, that were attached to the hook and ring strips around the base. \n\n\"That mean man will tie my arms and legs down, I just know he will! Then he can do anything to me, anything at all, and I will just have to let him. There will be nothing this poor little girl can do to stop him!\"\n\nI reached forward and grabbed the linen straps, which were perfectly placed, and soon had her trussed up like a calf at a rodeo. I walked around and looked at her. As I envisioned fucking Peggy, and in every orifice and position that I could picture, I saw that those little areas that had seemed earlier to be to be grapefruit size leather lined pockets would be the perfect places to put my knees or feet or hands while shoving myself into her. This thing was a very well-engineered piece of sexual furniture. There was just no other way to describe it. The 'poor little girl' was also wet, warm, fragrant, and quivering.\n\nI stood just looking for a minute. She was arranged artfully across the thing, and it was affecting me like a really fine painting or sculpture sometimes grabbed me at the Kimbell museum in Fort Worth, which my mom had taken me to diligently beginning when was I was about four years old. Peggy reminded me of the Madonna and child painting by Titian that I had seen there when I was just going through puberty, and it had resonated within me tremendously. Peggy had no dress on, and her color was even more vivid than Titian's paint and the added information of smell and actually feeling the infrared radiating from her in the cool room almost overwhelmed me. Then I heard her buzzing Suzie signal and realized I could appreciate this art from another perspective, and like no painting had ever been enjoyed. \n\nI tuned into her Suzie, trying to hear in it her every quiver. Art like this should be appreciated fully, and I was determined to do Peggy just as fully and completely as possible. I began by touching her gently, tenderly; conducting a tactile survey of what inflamed her, and what did not. I was surprised to learn that my assumptions on the subject had been pretty much wrong. The traditional 'erogenous zones' produced much less of a response. It was the top of her shoulders, the crook of her elbows, and the back of her ankles that produced the greatest responses. One did not need a Suzie receiver to know that she was excited, as her lovely smell filled the room. I have to admit, spanking her was just plain my idea, but she responded to it beautifully. Her ass got redder, and I could slow roll her no more, as my little monkey brain had gone round the bend. \n\nI put my knees in two of the little 'grapefruit holders' and my left arm in another and bent to my task: kissing the back of her thighs, using my tongue to leave little wet marks when I switched from one to the other. I was now the painter and she was my canvas. The heat of her astounded me; she was like a convection element in a cool room. I worked up to the top of her thighs and then put my elbows behind her knees and used my thumbs to open up her buttocks, exposing her lovely little puckered pink buttonhole. I rotated my hands forward and away from me, like turning two knobs, bringing the top of her sizzling pussy into view, my gaze settling on that magical little area where inner and outer lips curve and fold together. She shivered, I smirked. I began licking very gently about halfway between her anus and the backside of her pussy, gradually pushing more strongly against her and extending my circles down closer to her outer lips. I moved my thumbs down and spread her pussy open, mesmerized by its glistening wetness in the low winter sunlight coming in through the window.\n\nI decided to become goal oriented: I wanted her to crave and beg for orgasm, and then give it to her. Her Suzie was my guide, and the path was clear. I started on the outer aspect of her outer lips, working my way all around about 300 degrees of her snatch and then back to twelve o'clock. Then the wonderful valley between inner and outer lips the same way, and her Suzie screamed encouragement. I then opened that pungent pink taco and began to devour it. Her Suzie provided a perfect feedback loop, begging, and I began giving, and was soon rewarded with a wonderful grunt from her mouth and a pulse of her clear female taco sauce between her nether lips, as if someone had squeezed a taco from both sides and some sexual salsa escaped. Her Suzie suggested a slight pause, and then I went for the meat of the matter, so to speak. The second orgasm was much stronger than the first, and I think I actually felt her do a little flip flop inside, perhaps clamping down on a cock that wasn't there, but I could assure her that mine was close by and very ready. \n\nI gave her two more quick spanks and then I put my knees just outside of her thighs and lined up for phase two. We both sighed contentedly as I slipped into her pussy: she was wet and I was very ready. I lowered myself down onto her and discovered that the design of the ottoman or fuck chair or whatever it was called somehow focused my weight and motion right onto her center. The front side of my legs naturally fell into long and close contact with the back of hers, and my hands slipped under her shoulders and up around her neck , like the full Nelson hold our wrestling obsessed substitute coached tried to teach us so often. He should have set it up as a coeducational exercise like this, as no one would have objected. I could feel her spread her legs and arms out even further, allowing me more penetration, which I craved. I tuned for Suzie again and found her natural rhythm, matched my motions to it, and enjoyed rocking her boat immensely. This time when she came she did clamp down on me, and hard. \n\nI was ready to come, and I jumped off the chair, grabbed her pigtails, and finished off in her mouth. It might be more correct to say her mouth finished me off, she was sucking it out of me for all she was worth, and her Suzie was signaling her frantic desire to do so. She improvised her own little technique to keep me hard, and my thoughts turned to her little puckered ass. I crawled up above her again and put my knees of either side of her thighs. She knew what was next: she groaned and spread her legs even wider, and stuck her butt up a little more. What a woman.\n\nThe human mind is forever a puzzle, and as I slowly eased my cock into Peggy's puckered pink posterior play hole a quarter of an inch at a time, I suddenly found myself mentally back in 7th grade Natural Science class, with Miss Karatko, second period. She was a 60 year old spinster with way too much makeup and an almost demonic tobacco habit. This made her the school's number one user of 'educational films' in the classroom. She would appoint a student 'audio visual helper' to run the projector for the old films or the video player for the new ones, and then she would head for the teacher's outside lounge. From the way she smelled when she returned, she must have smoked three unfiltered Camels, lighting one off the other, until just before the film ended. She did have some dedication to her craft though, for she absolutely refused to show the same film twice, keeping meticulous records to ensure a 'unique educational experience' in every class period, and she always appeared back in the classroom about 30 seconds before the film ended, having noted its run time in her records. All this had the interesting side effect of making her search for a wide variety of science related films, and resulted in her ordering and showing films that most other teachers left untouched in the school supply rental warehouse. \n\nWe never had to listen to Miss Karatko lecture us in class, but we watched predators big and small running down and killing all manner of prey, lemmings jumping off cliffs, dozens of animal mating rituals and complete life cycles by the score. My current penetration of Peggy recalled two such films, merged together somehow in my mind's eye. The first showed a big black wasp laying her eggs in a live insect of some kind, having previously stung it into paralysis so that its rotting carcass would serve as food source and incubator for her brood. She positioned herself above the hapless victim, and then extended a very phallic looking 'ovipositor' (my vocabulary word for the week back then) deep into the insect's abdomen. The second film was a sequence of a starfish attaching itself to some sort of clam, flowing over it and sticking itself to the surface of the shell and then using its suction cup festooned arms to pull it the claim open and devour the flesh inside. I hovered over Peggy planning to leave my own deposit, and my arms flowed over her, owing to the natural shape of the ottoman sex chair, and pressed seamlessly to her all over, and then somehow my mind focused on only the ancient ritual of penetration and deposition. \n\nI devolved from monkey brain back towards lizard brain, just rocking it on that rock in sun. I did notice that Peggy had come again from my relentless anal stimulation of her, one of her most endearing talents, and that her Suzie had taken on a new and unusual overtone. It almost seemed to move left and right and back again like one of those fakey four channel stereo demonstration recordings, an effect I did not recall ever having noticed before. My interest in this new phenomenon was temporarily stalled as my second orgasm built up and a loud buzzing noise moved from my loins to my ears and took over my consciousness. I did my best wasp and starfish imitation and plastered myself to Peggy, maximizing penetration and making a very hot and deep deposit. I think I lost consciousness for a moment, and then awoke to hear an even more exaggerated spatial modulation on her Suzie signal. She was tied to the ottoman and was definitely not jumping around, so why was her Suzie moving?\n\nThen it hit me. There were three signals: Peggy's and two others sounding almost the same as hers, but emanating from slightly different locations. Holy Toledo! It was the twins, watching us like Lizzie Faye Reagan had in the laundry room back at the dorm. They were mentally putting themselves in Peggy's place and radiating what they thought the experience would be like. And they were so empathic that their Suzie signals almost perfectly mimicked Peggy's! Where the hell were they? I had previously only experienced Suzie signals as being weak or strong, and thus inferred intensity or distance, but now I found I could do a little three dimensional echolocation and be more precise. They seemed to be just on the other side of the wall behind the headboard of the bed. I thought fast and moved slow. These old castles must have lots of secret passages and peep holes, and having one placed near the bed in a guest bedroom would not be completely unexpected for the purposes of medieval intrigue. The twins must have explored this place and found them all, and given their 'natural proclivities' I suppose it was not surprising that they would engage in a little voyeurism. But what should I do about it?\n\nI finally decided that I should just concentrate on Peggy, and ignore the twins, at least outwardly. I released all the tie downs and restraints, and gathered her up in my arms, and carried her toward the bed, coincidently right under the twin's gaze. I got into the bed, with her next to me on my right, and pulled up the covers over us both. The room was getting very cool as the winter afternoon sun was beginning to set. She quickly snuggled into the crook of my neck, with her face right next to my right nipple, and her fingers toying with my left one. Natural talent! \n\nI then heard two loud signals from the twins which I took as the Suzie signal equivalent of women saying \"Awww\" when they see a cute kitten, and then both signals rapidly dopplered down away and disappeared as they departed through what must have the secret passage and went somewhere else. \n\nPeggy wanted to talk, and so she did. As long her warm breath blew across one of my nipples, while her ring finger toyed gently with my other one, I was going to stay still and listen. \"We are going to miss afternoon tea, you know, thanks to you. I plan to thank you more, later tonight!\"\n\n\"What is the deal with that ottoman, or chair, or whatever it is?\"\n\nShe giggled. \"Belinda found that on an antiquing trip to Sofia, from an infamous dealer named Plam, who specializes in erotica and antique furniture. I found some vague references to it in the literature. The translation is something like 'Thunder Chair' and that seems apt to me.\"\n\n\"Me too. Belinda called herself 'an old libertine'. Just how libertine is she?\"\n\n\"Very much so. She and Abelard have what they call an 'open relationship' which basically means that Abelard fucks her when he wants to, and she fucks anybody else she wants to.\"\n\n\"She said you and I might go birding later. Is that traditional birding, or......?\"\n\n\"There is some traditional birding here, but it's mostly used as an excused absence for some dalliance conducted away from the group. I haven't yet introduced them to 'strip birding' but next spring it may come up, so to speak. That's not the only non-traditional thing Belinda has tried to introduce me too, either.\" Her normally dulcet toned and clear Suzie got funky for a moment.\n\nI played dumb, even though Belinda's Suzie had told me that she liked girls too, and given that, how could she fail to notice sweet Peggy? \"Like what?\"\n\n\"Like........ Belinda is bi-sexual and she made a pass at me! Very upfront and honest, and she didn't freak out when I told her no and that I was a very traditional girl. She was surprised, but so open and nice about it that it sort of cemented our friendship. Now we check out guys together, and she whispers to me which girls she thinks are hot.\"\n\n\"Why did you call her twins evil?\"\n\n\"Well, I guess they aren't truly evil, but they are very exasperating. They are like little kids that ask 20 questions per minute, and at least since I have known them, all of their questions have been about sex. And they don't ask just generic questions either, but rather some very specific ones.\"\n\nI'll bet they did. \"What's the story on the twin's father?\"\n\n\"It is very much mysterious and unclear. He was from some family that Belinda's had supposedly feuded with for a long time, and the two of them were never supposed to even meet, much less get pregnant. Montague and Capulet meet Hatfield and McCoy: a very long standing blood feud. Apparently twins run in the father's family. \n\nMy stomach began to growl, so loudly that neither of us could even pretend to ignore it. She laughed. \"Just like Old Faithful, Robbie. Good thing I took some precautions.\" She went over to the big dresser and grabbed a large wooden tray that was covered with a big white napkin, set it down on the bed, and whipped the napkin off rapidly like a stage magician. And magical it was: Russian style black bread, sharp cheddar cheese, great big strawberries, green grapes, some unusual chocolate and orange cookies, and a bucket of iced Perrier bottled waters. She laughed again. \"Your eyes just got as big as saucers!\" I was hungry.\n\n\"I prevailed upon Jeeves to help you out, since I figured you would make us miss afternoon tea, and they don't serve supper her until after nine: a long drawn out affair that takes hours. He was so pleased with your victory over that shithead Chasemoore that he would have gotten you anything!\"\n\n\"Jeeves seemed like a pretty forgiving fellow to me.\" I said with my mouth full.\n\n\"He is, but our Chasemoore is one of those stuffed shirts that 'tends to mistreat staff' as Belinda puts it. If he didn't respect the lad's grandfather so much, Jeeves would probably just tie the ugly miscreant in a knot and throw him down the well.\"\n\n\"So Jeeves is not just a butler?\"\n\n\"No. He is Abelard's chief of staff. Belinda said he was selected for the 22nd, which didn't mean anything to me, but from the way she said it, it must be like Rangers or SEALS or something. One of the maids told me that a year or so ago three of the local lads decided to rob this house, after scouting it and figuring Jeeves alone was easy prey with all the other staff off for the weekend. They all three spent several weeks in hospital, and he thanked them kindly for the brief little workout.\"\n\nI fed Peggy grapes, not feeling the need to peel them for her. She closed her eyes and sucked my fingers very promisingly, though. We (mostly me) polished off all the food very quickly. I tuned to her Suzie and discovered that she really wanted a particular kind of attention, one that I was more than willing to give her. But, I felt a duty to give her a similar chance to do something good for me, too. I kissed her tenderly for a while, and held her on her back with her head over the edge of the bed, and then stood up and put my cock to her lips. Ever giving, she took me into her mouth and smiled up at me. Her smile turned to surprise when I grabbed her waist and lifted her upside down and vertical, throwing her strong legs over my shoulders and applying my mouth strongly to her pussy. Her Suzie soared, and I tuned in earnest, listening for every subtle note that pleased her best. The standing 69 soon became my favorite Olympic event, and I was going for a top score from the female American judge. Her weight was mostly borne by her thighs resting on my shoulders, and it took very little effort to move her up and down on my cock. It also made it easy to move her pelvis into just the right position to chow down on her pussy. No Suzie receiver was needed to confirm her pleasure, as she began to drip enough to wet the sides of my neck and the tops of my shoulders. You go, girl. ",
        "She was craving having my tongue just as far in and out and left and right as possible, and this position was made for that. I finally grabbed her where leg transitions to buttock; spread things open a bit, and dove for the goal line. Total concentration made me forget about my cock, and my focus soon produced a wonderful little orgasm from her that filled my mouth with extra wetness. The second one resulted in her grabbing my head with her thighs so strongly that she could have been supported by that grip alone. I would gladly suffer cauliflower ears for more of this. But all thoughts of my ears were driven from my mind as I exploded into Peggy's willing mouth, and it was fortuitous that I was standing near the bed, because we fell across it as my legs buckled and my head buzzed. Peggy muscled the still groggy me over so there was a spot for her on the bed, and then cuddled up in my favorite configuration. We both worked to catch our breath.\n\nAfter a few moments she said \"Well, I guess you really are a stand up kind of guy, Robbie!\" she giggled. \"We have used our time well, too. It's only about and hour and half until dinner, but I need to tell you about the bathrooms in this old castle. The plumbing is a recent addition, comparatively speaking, and there are some pressure and volume issues. So you have to take showers like we used to on my dad's little sail boat: get wet, turn off the water, soap up and wash, then turn the water back on and rinse off. So as much as I have enjoyed our prolonged mutual ass washings in the past, it's not in the cards here. In fact, I will go first, so we can let the water heater recover a bit before your 'showerette'. Abelard is planning a plumbing and electrical refit soon, but it is a major job and the excavation can only be done properly in warm weather.\"\n\nWhile she occupied herself in the bathroom, I considered my clothing options for the evening. I supposed that my navy blazer high tea outfit would be wrinkled but serviceable, but when I opened the closet door, I discover that Belinda and/or Jeeves were truly on their game. My stuff had been cleaned and pressed while I played tennis, and my shoes shined. But that wasn't all. Hanging next to that outfit was a very spiffy dark burgundy colored cotton shirt, a light grey wool blazer with a detachable quilted lining for those really cold English nights, and a pair of very dark charcoal grey wool pants. A quick try on proved that they all fit just like the altered Nordstrom's stuff that I brought with me. Damn he was good. I zipped out the lining and left it on the hangar. \n\nPeggy soon emerged from the bathroom and sat down at the little vanity mirror to do her makeup. I waited and watched her for a few minutes to let the water heater heat, and then took something halfway between a shower and a Sitz bath, but I certainly felt and smelled better. It didn't take long to feel cold and dry, so I was dressed well before Peggy was ready to go, which was not a surprise. She did notice the new outfit, and shot me a nice smile. \"I guess I can be seen with you at dinner!\" We pushed open the big door, with the salmon colored fabric having a much greater significance for me now, and started down the stairs to the dining hall. \"Belinda gets creative with her dinner parties, Robbie, and you never really know what to expect, so stay flexible.\" \n\nCreative proved an understatement. When we arrived at the dining hall, we saw that it was set up for at least twice as many people as were here this morning for the pre-tennis breakfast. We went through a reception line, manned by Jeeves on one side and a very attractive red-headed woman in her early thirties on the other: she suddenly made me think of what my first college girlfriend Janet Arroz might look like a few years hence. She too was sending some nice Suzie, not for me, but for Jeeves. Peggy whispered that she was Abelard and Belinda's new social secretary, having just joined the staff from Ireland. They gave us name badges on lanyards, quite large and with easily readable lettering, with bright colored borders and lots of symbols along the bottom edge. I discovered that Peggy and I would not sit together; in fact we would all change seats for every course, and dance between courses. The colored borders were keyed to the tablecloths and thus told us which tables to go to, mine was green and Peggy's was yellow. Like the tennis tournament, we were all to be 'seeded' to various tables to facilitate introduction and conversation. I gave Peggy a kiss and headed to the first green table I could find, watching her join a yellow table nearby. \n\nIntroductions and conversations flowed easily as a salad course began to be carried to the tables. It was a cheese dusted salad very similar to what I had been served each time we had dined with Strelsa and G\u00fcnter. My first thought was maybe Strelsa was really up on culinary trends; my second thought was that my pants were suddenly quite tight. I soon discovered what the symbols were on the name badges. It was a variation on a trick my father used for sales meetings \u2013 each symbol depicted a shared factor, interest, or hobby, and the people at each table decoded them and thus were further introduced and made familiar with each other. I quickly hooked up with two other tennis buffs, one had been here for the morning matches, and one had not. I also made contact with several other folks at the table. As plates were cleared, a small band took to a stage and began to play dance music, and we were encourage to ask someone not at our most recent table to dance. \n\nThe food was good and the company was too, and the evening passed quickly despite all the machinations between courses. I met a lot of folks that were interesting, and some from within Abelard's company that I might need to work with later. Just before dessert, I spotted Jeeves nearby. \"Thanks for the fashion upgrade, Jeeves, and the laundry service.\"\n\n\"You are more than welcome. I could watch young Chasemoore lose every week and never get tired of it! The clothes were Belinda's idea; I just carried out her plan.\" I bet he was very good at executing plans, and perhaps people, too.\n\nI changed the subject. \"I'm not sure what the policy implications are on personal relationships within the household, but you should definitely ask that new social secretary to dance, if you get my drift?\"\n\nHe actually looked scared. \"Glareete Bayliss? She's much too young and pretty for the likes of me!\"\n\n\"You are making a very bad assumption there, my friend. You don't find her desirable?\" I could tell he did. \n\n\"God yes, man, she's a dream come true, but if I approach her she will shoot me down in an instant.\"\n\nI smiled and stared at him until he looked me in the eye. \"Don't they say that he who dares wins?\"\n\nHe looked embarrassed, but then got a firm set to his jaw. \"Alright, I'll give her a go!\" He turned and scanned the room, and made a beeline for the table she was just getting up from. It almost looked like he was reporting at attention, but at least he didn't salute her. I could only see his back and her face. She smiled, and he put out his arm, very formal, and she took it with an even bigger smile, and a spiking and already content sounding Suzie signal sang out from her. They weren't exactly Fred Astaire and Ginger Rogers, but they were both smiling brightly as they moved across the floor. I watched for a moment, and then found my dessert table, and sat down.\n\nA woman almost instantly sat down right next to me. \"Hello, Master Roberts, it's nice to see you again so soon!\" It was Tessa Formby, feature writer and gossip columnist for the infamous Tattler, who I had last seen dancing naked at the 'Addicted to Austin' party. My shock must have shown in my face. \n\n\"Don't worry, Robbie, I am not here to pump you for information like I did on the running trail, although social occasions like this are my natural hunting grounds. I can see you are suspicious, but I hope I can allay your fears. You see we have a mutual acquaintance \u2013 well, actually I have only talked to him on the telephone, but he was very direct and made quite an impression on me.\"\n\nI must have looked puzzled, and she continued to explain. \"I had a call from Ambassador Pliskin right after the party in Austin. He was quite clear that he would discourage me most strongly from writing anything about his daughter, or any of her 'close friends' shall we say. He also encouraged me to help you out and keep you all from harm if I could. I am sure you will believe me when I say that The Ambassador is not someone I want to disappoint, and doing something positive for him is like money in the bank in the gossip trade.\" \n\nI would certainly not want to disappoint him. I tried to banter back. \"I really did enjoy your dancing!\"\n\nShe laughed. \"I certainly enjoyed the party, and especially your friend Rodney Driver and his cousin Little Hollywood, and his amazing girlfriend. They were unforgettable. I hope to see you at the party next November, too. But I want to talk to you now about another mutual acquaintance: Elizabeth Ashcroft Knowles.\"\n\nShe certainly had my full attention now. How the heck were they connected?\n\n\"She and I have just met, but we have some long standing mutual acquaintances that introduced us. She is going to ask you to help her with something, something that may be difficult for you, but is very important. I can't tell you details, because I don't know them, but she will. Her requests may sound strange, but I can assure you it is very well considered and planned. I can also tell you that The Ambassador would want you to help her, and you may call him to check on that if you need to. Will you keep an open mind until she talks to you?\"\n\n\"I always try to keep an open mind, Tessa. But let's have a truth test so I can gauge your credibility now. When you flirted with me in Austin, were you really interested in me or just pumping me for gossip.\"\n\n\"Why gossip, of course! 90% of my male sources respond positively to flirting. You seem like a nice boy, but I like my men much older and/or blacker.\"\n\n\"Okay. Now tell me about the 'dogging' that goes on here.\"\n\n\"Certainly you have seen the porn sites on the subject? It seems to be a primary British fetish but it draws viewers from all over the world. \"\n\nI had seen several, in some of my roommate Kevin's 'you just gotta see this' moments as he surfed the web. \"I thought that stuff was all actors and actresses staged for porn sites, not real.\"\n\n\"Some of it is real, especially in Britain. It is definitely real here at the estate. I sometimes observe, but not participate. I may occasionally have a discussion with a woman who would rather share some gossip with me than to have me share some gossip with the world, if you catch my meaning.\"\n\n\"Extortion, Tessa?\"\n\nShe smiled. \"I've never actually had to expose anyone. It's almost as if they really want to share the gossip. Some women have an extremely strong drive for this sort of thing, hidden in their animal nature so to speak, and this is a much safer venue for them than a car park somewhere. They would never think of cheating on their husbands at home, but an anonymous group of men can excite and satisfy them incredibly. Sometimes the husbands know all about it and like to watch.\" That was a little too much information for me, although I now understood the overtones in the Suzie signal I had heard from the woman on the stairs on the way to breakfast. Tessa gave me what seemed like a genuinely affectionate hug and scurried off before I could think of anything else to say. \n\nOther people began so sit down and the waiters brought dessert, causing my stomach to growl so loudly I thought it must have been miked and fed to loudspeakers. My plate contained some supremely dense cheesecake with strawberry sauce, and some angel food cake with chocolate sauce, simple and delicious, and it silenced my stomach perfectly. I caught site of Peggy, two tables away, talking with Tessa and Jeeves. Soon dessert was over and Peggy walked over and took me possessively by the arm. \"We need to talk!\" As we walked up the stairs my apprehension grew. \n\nThe suite was frankly cold by now, but a big fire was started in the fireplace near the bed, and that promised to keep things manageable during the night. Peggy and I had a remarkably domestic little moment where we both tried to brush our teeth at the same time, bumping hips and laughing while contesting positions at the mirror and sink. She turned out the table lamp and jumped in the bed, delightfully naked, the room now being lit only by the fireplace and some occasional moonlight on the window showing through the clouds. I joined her and applied myself to her left side as best I could. She snuggled against me. \"You do have a high metabolism, Robbie. You put out lots of heat on a cold night.\" She kissed my shoulder. \"I suppose that's why you eat so much and still stay skinny. Have you ever had your thyroid checked?\"\n\nDr. Asa's advice to avoid discussions of my metabolism kicked in, and I tried to change the subject. \"What was it that you and Tessa Formby and Jeeves were talking about?\"\n\nShe laughed gently. \"Birding, actually. You and I are going out early in the morning. Jeeves is going to drive us. I have set my alarm and I'll wake you up in plenty of time. Dress warmly. Tessa is not going, but she did tell me some interesting things. Some very interesting things, and that's what we need to talk about. Not now, but in the morning.\" She snuggled up into my arm pit and promptly went to sleep. \n\n*******\n\nThe judge had insisted that the earliest time he could safely receive his Mistress at his condo was at six, after the doorman went off duty. It was already dark, and Suzanne's parents readily accepted that she was 'going to a party and might be out late' and happily did not ask for any details. She had also purchased a 'Batwoman' mask that would hide her identity from someone who did not recognize her, and wrapped herself up in a big trench coat with a big scarf and high collar, and with the super high heeled black boots, she looked much taller than normal. As she emerged from the third taxi, the second two being unlicensed liveries as her father had taught her, she took a long and winding walk to the condo, while reviewing her plans for the judge, and smiled. \n\nShe took her cues from her own initial experiences with Robbie and Lara, getting goose bumps along with the memories. The scene was just as she had specified \u2013 he buzzed her in to the building at five minutes after six, and when she pushed the unlocked door to his condo open at ten minutes after six, the judge was naked, bound, blindfolded and kneeling on his entry hall tile floor, although she noticed that the blindfold was tied such that it would allow him a few peeks. So much the better for her plan. She locked the door behind her, and walked noisily toward him on the tile floor. He had all the things out she had specified, including a very nicely balanced little riding crop that fit in her hand perfectly. She checked his restraints, tightened them a bit, and then slowly removed her overcoat, circling the judge with a strutting cadence so he could hear her, smell her and get some glimpses of her around that loose blindfold. The recessed incandescent lighting of the judge's entry hall shone through the fabric of her thin costume like spotlights though gauze, highlighting the muscular perfection of her body. But her little mask hid her identify completely. \n\nThe judge gasped in surprise, and soon became very visibly excited. He was a pale and skinny man; just greying at the temples, bowlegged and knobby kneed, but now sported a surprisingly large and very red erection. That would be his first since his appointment to the court, if his tale was true. She laughed in her lowest and most derisive tone. \"Well, well, Wally. It seems that confession is good for the soul, or at least for your pitiful little Willie. \n\nHe literally shook, but if anything his erection got even larger. She had done her homework, reading all about Wally's childhood and career, and she had long ago learned from her father the technique that was probably used to ensnare him. It was more subtle than a honey trap, and was actually a variation of an old investment scam that was surprisingly effective against basically honest and politically inexperienced people like Wally. She also knew that Wally really thought he did deserve to be humiliated and punished, and she surely would do that. But then she would redeem him.\n\n\"Wally you have been a very bad boy. A very stupid boy! You know that don't you?\" She punctuated each subject-object-verb with pops of the riding crop. His ass and legs were soon red all over, but his erection remained. \"You are very correct to be ashamed. Let's go through some things.\"\n\n\"When they approached you, you didn't even know you were being considered for the court, did you?\" Pop, pop, pop.\n\n\"They told you that you were a very long shot candidate for the job.\" Pop, pop, pop.\n\n\"That you didn't graduate very high in your law school class.\" Pop, pop, pop.\n\n\"That you hadn't decided enough high profile cases.\" Pop, pop, pop.\n\n\"That your technical background wasn't the best.\" Pop, pop, pop.\n\n\"Your only chance for the appointment was their political influence. They might be able to get you onto the final list, if you would be able to do a few things for them, later.\" Pop, pop, pop. Sob, sob, sob.\n\n\"That your only chance was to promise to provide them information on certain cases in the future.\" Pop, pop, pop.\n\n\"They gave you some time to think. Then they contacted you the night before the list of final candidates came out, and they said you had to decide or be left out.\" Pop. Sob. Pop. Sob.\n\n\"You said yes, and the next morning, you were on the announced list!\" Pop. Sob.\n\n\"They called you again. They said they had worked hard to get you on that list, but you were still a long shot. They would work even harder for you, but you had to do something for them. You might have to agree to favor certain of their clients if a case involving them ever came before you. Otherwise, you had no chance.\" Pop. Sob.\n\nThe judge was now racked with sobs and crying uncontrollably.\n\n\"They gave you some time to think, and then called you back. You said you needed more time. They said they would take one of the better candidates out of the running, to show you what they could do.\" Pop, sob.\n\n\"They next day, the news broke that a much respected jurist had asked that his name be withdrawn.\" Pop, sob.\n\n\"They called you back, and said we knocked him out with some unsavory stuff from his personal life, and it's now or never, we have to push you or lose the chance forever. You said yes.\" Pop, pop, pop. Scream.\n\n\"You were on pins and needles. Then you were called to the White House for an interview, and then another. They called you back and said it was looking good. You thanked them. They said you can thank us later.\" Sob.\n\n\"Then you got the appointment to the court. You were overjoyed, but you knew you didn't really deserve it!\" Pop, pop, pop, pop, pop.\n\n\"Oh God I am so ashamed!\" Wally screamed then sobbed so badly he could barely breathe. \n\n\"They gave you a few days, and then called to congratulate you. But with the next breath, they told you they owned you. One misstep and all this would come out and you would be forever disgraced.\" He melted down, rolled up in the fetal position on the floor, and wept like a baby. \n\n\"Wally, you have done a terrible thing. I am going to whip you now within an inch of your life. You will deserve every stroke. And then you will tell me what you are willing to do to make things right.\" It was the toughest thing she ever had to do, but she had learned from Millie's amazing weekly descriptions of how they helped Erminia (she and Millie and Lara really did talk about everything) that she had to make absolutely sure that Wally felt punished enough, and that even he began to feel she was going too far. Her right arm got tired and she had to switch to the left, but she kept on. Wally had gone to a Jesuit school, just like she had, and flagellation would suit him. She had to make sure it was almost biblical. Finally she took his disappearing erection as a sign, and stopped. He sobbed shook in the restraints, and she went to the kitchen and got him a glass of water. It was at least 15 minutes before he could hold his head up to drink any. ",
        "When his breathing finally stabilized, she began the next phase. 'What are you willing to do to make things right?\"\n\nHe began to sob anew. \"Resign, confess to the world, and expose those that bribed me. Go to prison.\"\n\n\"If you did that chances are you would do prison time and your so-called benefactors would not. What would be the just thing to happen to them?\"\n\n\"Have their plans thwarted, have all my decisions go against them!\" he snarled. \n\nShe popped him again. \"Did you really graduate from law school? What would be the truly just thing to happen to them? To their clients?\"\n\nHe drew a deep breath. \"They should be punished for bribery, along with any of their clients that authorized their actions too, but the cases before the court should always be decided on their merits alone.\"\n\n\"Good answer, Wally!\" She caressed him briefly on the neck. His erection returned, as strong as ever. \n\n\"But we may not be able to achieve all of that, but perhaps most of it. But let me tell you a story.\"\n\nAn involuntary \"huh?\" escaped his lips, but then he just listened, rocking slightly on his now surely very sore knees, despite his years in the catholic church. \n\n\"Suppose you want to sell an investment newsletter. You get a list of 1,000 wealthy potential subscribers, and you make up 1,000 very impressive bound research reports. In 500 of them you say stock ABC is going way up, and in the other 500 you say it is going way down. Then you mail them out, keeping track of which prospect got which report. In a few months, you check on what ABC actually did, and no matter if it went up or down, you send a letter to the 500 prospects that got the correct advice, saying we sent you a free research report a few months ago and we were absolutely correct about ABC, and now we are telling you about XYZ. In 250 of those letters you say XYZ will do great, in 250 you say XYZ will tank. A few months later, you take note of the final 250 potential suckers that got the right forecast both times and say our newsletter was right as rain twice in a row, for big profits, subscribe to our research now! And some of the suckers do.\"\n\nHe said nothing.\n\n\"Now let's suppose you get a list of potential court appointees.....\"\n\n\"Holy Fuck!\" The judge was pretty quick on the uptake. \"They did this to everyone on the list....\"\n\n\"Not everyone. Some they knew wouldn't go for it and some told them to go to hell when first approached, but if even one buys into it, they are ahead, especially if that one gets the appointment.\"\n\nThe judge sobbed anew, and then cried. \"I must be the dumbest fuck on the list!\"\n\n\"But you are also the one that got the job, likely without your 'friends' having any influence at all.\"\n\nHe was completely silent for two minutes. \"So what do I do now?\"\n\n\"You decide the cases just as you would have if you never heard of these guys. If they contact you again, tell them to jump in the lake. There are two sets of voices on the recordings they have, right?\"\n\nHe snorted. \"Actually I have my own recordings, too.\"\n\nSuzanne thought fast. \"Do you know who those guys are?\"\n\n\"Just one of them: a guy I went to law school with.\"\n\n\"Is he the only voice on the recordings?\"\n\n\"No. There are two others and I do not know who they are.\"\n\n\"What form is the recording in?\"\n\n\"Mp3 files on a USB drive\"\n\n\"Make me a copy. Send it to the email address from the ad. Maybe I can help out.\"\n\n\"What about punishment for them?\"\n\n\"They are going to be billing those clients a big retainer for years before a case comes up that raises expectations. When those hopes are dashed by a just and un-influenced decision from the court, the clients will punish them for us. So you are purged. Hold your head up high and work hard to reach the correct conclusions in the future.\"\n\nShe caressed his neck again, rubbing her breast against his shoulder. \"Tell me Wally, are you left handed?\" She knew he was.\n\n\"Yes.\" He stuttered.\n\nShe reached down and untied his left hand. \"Okay, Wally. Show me that your little Willie works again!\"\n\nHe tentatively touched himself and seemed to enjoy it a lot, surprised at first and then rapidly lost all inhibition and wanked himself enthusiastically. He shuddered and his breath came in fits and starts. Suzanne realized she had never actually watched a guy beat off to completion before, and she discovered she was fascinated by it. He was rocking back and forth and his cock seemed to wax and wane slightly in diameter as he did so. Suddenly his hand was moving very fast and then grunted and shot a huge stream of off-white come several feet. The pressure must have been building up for some time. \n\nWally lay sobbing on the floor, trying to catch his breath with a wild mix of emotions coursing through him. Suzanne slid out of her sheer body suit, giving Wally a spectacular rear view, if he could see through all those tears, and slipped on her panties, a white silk blouse, and a dark grey business suit that had been folded in the shopping bag she bad brought in with her. She put the body suit in the bag, and then bent over and kissed him lightly on the ear and whispered. \"Goodbye forever, Wally. I loved you.\" She grabbed her coat and long leather gloves and hurried out the door. \n\n*******\n\nPeggy's alarm went off very early, but happily she had added in a few extra minutes to 'thank me' as she had promised last night. She reached over and briefly verified my usual morning woody, and then climbed over and straddled me, already wet. I never thought I would enjoy being used so much. Another pair of quick water sparing Sitz baths and then we dressed and were soon waiting at the back door of the manse, glad that I had zipped the lining back into the new wool blazer. My stomach growled; Peggy laughed and handed me two Cliff bars just as Jeeves pulled up the Range Rover. It was a very cold and foggy morning. I scarfed down the make do breakfast and my stomach quieted a little. We sat in the back as Jeeves drove north a few miles and then turned off road into a very cold and foggy meadow surrounded by tall trees, and soon we saw another Range Rover, a black one, with its parking lights on, about a quarter of a mile away. \n\nJeeves got out and said \"stay here, she will come to you\" just as the driver and passenger of the other Rover got out of it. Jeeves and the other driver took up positions opposite each other in a wide circle, and began walking slowly around it. Jeeves would occasionally raise some kind of high tech binoculars to his eyes, and the other guy was wearing some big earmuff headphones with some sort of pointer in his hand, pointing it outward. As the passenger grew near to our car, I realized it was none other than Elizabeth Ashcroft Knowles, who I had last seen on my flight over. She looked much buttoned up in a long dark leather double breasted trench coat and a brightly patterned wool scarf, with her hair up in a tight bun. Her eyes were flashing at me like little neon signs, and her face was already flushed from the cold. She looked fantastic, and I could no longer be objective about her 'plain' face, I just saw the total picture, perhaps dominated by those wonderful bright eyes. \n\nPeggy bristled at her approach, much the same way that she had reacted to Vaya Perez at our cabrito dinner in East Austin, although I noticed Elizabeth was sending no Suzie for Peggy, nor for me, darn it. Just as Elizabeth got into the front passenger seat and turned toward us Peggy spoke, with hostility dripping from her voice. \"Aha! I think I see a Burberry-Coated British Bitch, but then I don't think that is a new species for you, is it Robbie?\" \n\nElizabeth reacted before I could. \"This must be Miss Teats and Ass, the Art History Major!\" This meeting was certainly starting off very well. She sounded almost like Suzanne. Wait a minute. That was exactly the phrase Suzanne had used with me, on the phone, and in Texas! Did that mean Elizabeth had talked to Suzanne? What was going on here?\n\nElizabeth jumped in, again before I could. \"I apologize, Miss Duchenne. I was out of line. I am under considerable stress and operating far outside of my comfort zone at present. Could you be gracious enough to forgive me?\"\n\nPeggy was stone faced, and Elizabeth continued, \"We haven't been properly introduced. I am Elizabeth Ashcroft Knowles.\" She produced one of her cards very smoothly, like a magician pops out a playing card during a trick, and handed it to Peggy. \"You see I am about to ask both of you to do something extraordinary, not for me, but for Abelard's company and for Britain and the United States, and it would be a terrible thing if my lack of manners got in the way of that.\" She sounded very sincere. Peggy's expression softened a bit. \n\nPeggy looked at the card and asked \"How does Abelard need help? What is the 'Department of Environment, Food, and Rural Affairs' and what does it have to do with us?\"\n\n\"DEFRA used to be called the Ministry of Agriculture, and I work there, but what I do is more like what in America you call homeland security.\"\n\nI instantly thought of Dwight and the no such agency that I had promised not to talk about. Wasn't there some sort of British spook shop like that, started up in WW2 spying on the Germans, and listening to everything and everyone ever since?\n\nElizabeth continued \"I try to look out for the interests of British companies doing business abroad. In this case, I am trying to prevent Abelard's expansion of his construction services into the Middle East from being used against us by potential terrorists.\"\n\nThat certainly made Peggy pause. \"How would that happen?\"\n\n\"They are one of the largest construction firms in the country, with a big inventory of industrial explosives for demolition and excavation, and a number of people trained to use them. Someone might target their employees to try to get them to supply explosives for terrorist use, via bribery, extortion or kidnap, or just theft.\"\n\nPeggy looked worried now. \"What is it you want us to do?\"\n\n\"Just after Christmas and before his school term begins again, Robbie will travel to several countries in the Middle East, along with several other people from the US and some of Abelard's people, to try to build relationships and win some contracts. All very fine business if that's all it is. We need to gather some information to make sure that's all it is. I need your help to do it.\"\n\nPeggy looked thoughtful. I hoped I did too. \"Go on.\" she said.\n\n\"In addition to the 'normal' meetings and relationship building, there are some cultural things there that are different from what we in the west normally understand. If things go well, and we think they will, Robbie may be invited to spend a day or two on a yacht, and to interact with an 'inner circle' very close to the ultimate power in many of the kingdoms and emirates. That is a tremendous opportunity for us to learn more about them, and what their real goals are. But in order for Robbie to 'fit in' he will need the two of us to travel with him on that yacht.\"\n\nPeggy drew in a quick breath, as if she was about to object, but Elizabeth continued quickly \"We will really be just stage props to portray the image of Robbie they want to see, need to see, in order to accept him as a 'player' as they say in America. These are some of the richest and most powerful people in the world, but they live in their own bubble and they have some very unique cultural rituals. They need to see and understand Robbie in the context of their own experience.\"\n\n\"Just how do they see me?\" I couldn't hold my tongue.\n\nElizabeth smiled at me, almost dismissively. I did not like it. \"They see you in an arranged marriage with one of Abelard's step daughters, being groomed as the 'crown prince' to take over his empire. We have taken certain steps to encourage this view; via sources that they think report only to them. They see you as a cute and socially well connected boy who may end up as the public figurehead of the company, while real professionals actually run it day to day. This is not unusual in their experience. Many of the their government ministries and major industries have a political leader who is related to or otherwise connected to the ruling family, and perhaps to several ruling families in other countries too, and some non-royal executives who actually have the expertise to run things. That's just the way it is. In the west it is called intermarriage among ruling business and political families, or 'interlocking directorships' or some other such euphemism. \n\nPeggy wore a strange expression. \"Am I to assume that we girls are to be involved in the 'unique cultural ritual' part of all this?\"\n\n\"Right you are, Miss Duchenne, and very perceptive! The old boy's club gathers on the yachts to have meetings and discussions about business, but also to show off to each other. Perhaps a new speed boat to race around the yacht in will impress the guys or a new helicopter, or a spectacular new mistress or hopefully two, to sunbathe nude on the deck. Are you getting the picture?\"\n\nA slowly rising and growling Suzie signal emerged from Peggy, with the same overtones I had heard recently when teasing her about exhibiting herself to those tourists back at Horse Guards, or being photographed naked for a brochure. Her nascent exhibitionistic streak was triggered, and it made her hot. Very hot. She may have been a pretty conventional girl, but she had gone from paralyzing self consciousness about her figure to truly liking and needing to be admired, and with her spectacular form, it would certainly happen if she were sunbathing, wherever it might be. \n\nElizabeth continued. \"We already have one 'player' on your trip, in the person of Alexis T. Quandry. He is a very highly paid mathematical whiz, but he has some personal quirks to say the least. He does fit in with the yacht crowd very well, though, and will be bringing two spectacular London fashion models along with him on the boat. You will supply the added 'spectacular' for our team, Miss Duchenne, portraying yourself as a very rich, spoiled, and bitchy young woman who only dabbles in art and who Robbie is dallying with until his future arranged marriage, and perhaps afterward, too. My assumed role will be as your personal assistant, doing everything from packing your clothes and carrying your suitcase to doing your makeup and giving you a massage at night. We will also hint that I am sexually submissive and make myself available to both of you, sometimes at the same time. This will play into their prejudices, fantasies, and tendencies very well, and build up Robbie's 'player' status tremendously.\"\n\nI was not following at least one aspect of all this. \"How do you know we are even going to get invited to this yacht?\"\n\n\"You and your whole group have a dinner meeting tonight with Fayez Adnan. He has been retained as a 'security consultant' to Abelard's company. We feel pretty confident he will invite you.\"\n\nI had heard of this guy, and even seen a report on him on TV several years ago. He must be roughly Abelard's age. He had at least six other names like Bin-something this and Al-something that, but everyone just called him Adnan. He was one of the largest arms dealers in the world, if not the largest, selling weapons all over the Middle East and Africa, collecting millions in sales commissions every week. He used to be one of the richest men in the world and own the biggest yacht in the world. His fortunes had faded considerably, but he was still a multi-billionaire, and the new up and coming group of Russian oligarchs had built a whole new generation of bigger and better yachts. He was still very well connected, though, and functioned as a 'facilitator' for deals all over the world, and his yacht was still pretty darned impressive. He also had a long string of much younger wives and mistresses, and seemed to enjoy throwing big parties and being photographed with them. \n\nElizabeth gave us some more detailed information. \"He does have some very capable mercenaries working for him, mostly testing and evaluating weapons, but they can also look at the plans for a project and come up with a pretty good estimate of how it might be attacked and defended and what the potential losses and expenses might be. For this he gets paid a very much inflated fee, for built into his fee is the budget for 'baksheesh' that he expertly negotiates and disburses as required to make the project work, leaving the American or British client firms blissfully ignorant of such practices, as their laws require.\"\n\nPeggy laughed. \"Sounds like exactly the way some art and antiquities dealers operate!\"\n\nElizabeth looked at Peggy thoughtfully. \"Perhaps we could discuss the potential in that later, after we tend to this matter?\"\n\nPeggy suddenly gave Elizabeth an amazing look. My eyes got big. It said 'super smug mega bitch looks down her nose at a servant' to me. \"Well, Elizabeth, let's see if you work out as a personal assistant, first.\"\n\nI thought Elizabeth would sputter, but she laughed softly. \"That's the perfect look and tone to adopt with me! You're a natural.\"\n\nLuckily, Peggy took that as a complement.\n\nElizabeth continued. \"I need to make you aware of one other thing, Robbie, something for you to pass on to Barry Fermy and to incorporate in your own proposals. In investigating potential methods for getting explosives on the sly, we identified one that was being used at another insurance company, until we stopped it. Are you familiar with the comprehensive project management software used on big construction sites, and how reports from the system are sent to the insurers to update them on risk factors and progress?\"\n\n\"Yes.\"\n\n'Well sometimes with approaching deadlines and time pressure, and sometimes just due to laziness or carelessness, instead of sending the properly defined reports or file extract, the construction firm will send the entire project file in its raw form, leaving someone like your Senex Pedo to build his own report to get the data he needs. This leads to a major security vulnerability, in that the raw file often contains very detailed information, like what vendor explosives are ordered from, what is ordered, when they are scheduled to arrive and where they are to be stored, and even the carrier that they are being shipped with, making it relatively easy for the shipment to be hijacked or the explosives to be stolen shortly after they arrive. This is the kind of vulnerability that we must be very aware of.\"\n\nPoint taken. I could see major problems just releasing such data to a competitor, much less a terrorist group. She turned to Peggy. \"Can I count on you?\"\n\nAnother wave of Suzie popped out of Peggy, along with a determined expression. \"I will do my best for God and country, yes.\"\n\nElizabeth smiled. \"I will be in touch with you, Miss Duchenne, just as soon as we know the exact dates and times. I expect you and I will be flying to join Robbie in a private jet, which can spoil you for commercial air travel. By the way, I only met Robbie on the American Airlines flight over here from Dallas, and he was a perfect gentleman with me.\"\n\nPeggy laughed, and got that smug and superior look again, in spades. I could feel the temperature drop inside the car. \"I can certainly understand that, my dear. Happily, he treats me much better than that!\" \n\nElizabeth's eyes darkened for a minute, and then sparkled again. \"Touch\u00e9!\" With that she opened the door and started back toward the black Range Rover. Jeeves and the other driver instantly started back to their respective vehicles, and we drove back to the estate in silence, except that my stomach soon began to growl again. Luckily we arrived back at the estate just in time for brunch and more delightful conversation. Newcombe B. Conners was off to afternoon tennis workout with the girls, and therefore Jeeves drove us back to London, dropping Peggy in Pimlico with a sufficient interval for me to walk her up and say a proper goodnight, and then drop me at Horse Guards.",
        "After I got out and closed my door, he caught my attention again. \"Two things, Roberts: one, thanks for the heads up on Glareete Bayliss.\"\n\n\"How is that going?\"\n\nHe shrugged. \"Good news and bad news. I think she likes me, but I have already hopelessly fallen for her.\" \n\n\"She finds you very desirable, Jeeves. It is up to you to convince her to want more than just that.\" \n\nHe looked very serious. \"Two, you can trust Elizabeth Ashcroft Knowles with your life!\" With that he sped away. \n\nI went up to the room, carefully hung up all the stuff from my suitcase, including my spiffy new outfit, and then took a long hot shower, luxuriating in the virtually endless supply of hot water. I would not get picked up for dinner until 8, so I put in a wake-up call for 7:30 PM and was dead to the world for a while.\n\n*******\n\nSuzanne had been so efficient in taking care of the judge that she had lots of time on her hands, for if she got back to her parent's house too early it would raise questions. Just in case, and in keeping with her anonymous 'legend', she walked from the judge's condo, which was close to the court he served on, to the Federal Triangle metro station. She took the Blue Line to L'Enfant, and then the Green Line all the way out to College Park. She walked around a bit and doubled back to burn any tails, which she would have already spotted unless they were using lots of very experienced people, which was not likely, and then waited a while for the Yellow Line, which took her on a short ride to Fort Totten, where she caught the Red Line to Farragut North, from which she walked to the Blue Spot. The night was still young, but it had already been a very colorful evening. She descended the stairs, and was reminded of the neutral odor and good ventilation, and then discovered she instantly felt right at home there.\n\nKimee Blue and Steve the bartender spotted her almost simultaneously, and waved excitedly. A few moments later, Steve brought over his latest and most improved version of the Instant Stripper drink she had taught him to make. She sipped it: smooth, very tasty, and yet had quite a kick to it. \"It's fantastic!\" she said. He just looked at her. She got the hint, and stood up and languidly took off her trench coat, did a little Gypsy Rose Lee number with her gloves, and even took off the top of her dark business suit, revealing a sheer white silk blouse. Steve stared a moment more, and then rushed back to the bar and began making another Instant Stripper for her. \n\nKimee walked over. \"Steve has been watching the door ever since he came on shift. I am so glad you showed up. Is the drink better?\"\n\nSuzanne smiled. \"It's practically perfect, and I needed one!\"\n\n\"Interesting times since you were last here?\"\n\n\"You would not believe me if I told you.\"\n\n\"Would I enjoy hearing it, though?\"\n\nSuzanne smiled, and leaned in close to whisper in Kimee's ear, \"I am certain of it.\"\n\nKimee giggled and then went off to make her rounds of the other tables. Suzanne perused the chalkboard menu, discovering she was famished. It was just plain Night Night, with no special theme, but the food items were all new to her and sounded great. She ordered a braised pork shoulder and white bean empanada, and a smoked salmon soft taco with mustard dill sauce, and she also planned to splurge on the peanut butter sorbet with homemade graham crackers. The DJ was playing some pretty good tunes, and a few couples were dancing.\n\nKimee soon arrived with her two 'entrees' although they were all of two bites each and with another tall Instant Stripper. Everything was tremendous, like before, and she savored every morsel. She ordered the sorbet and then settled in to people watch, almost hoping someone would ask her to dance. Maybe the Blue Spot should have an amateur night like the strip bars in Dallas. Nora had not been able to shut up about how hot it made her, and how hot it had made Robbie, and Suzanne was a little jealous, mostly of Robbie getting to see Nora naked when she didn't, but also of the thrill Nora had described when she finally stood naked before the screaming room full of men. She realized that Steve's version of the Instant Stripper seemed to be working on her tonight, much more so than the ZZZ version ever had. \n\n*******\n\nThe wakeup call shook me out of a deep and seemingly dreamless sleep, at least none that I remembered. I decided to go with my new outfit again and walked around the hotel lobby for few minutes before stepping outside a few minutes before 8 to look for Reggie. He was very punctual, but I could tell he was disappointed that Peggy was not with me. I just assumed we would go somewhere near Canary Wharf, but instead Reggie turned west rather than east and got onto the A4, which I had noticed before and briefly studied on the map in the room. I recognized St. James square on the right as we zoomed by, and then we passed a very stately looking hotel and pulled up at what looked like an angular and unusual set of four apartment buildings. \n\nWe pulled into a drive near the center of the buildings, and then did a quick left and right, through a gate that was manned by three guards, and then turned right as we descended into a parking garage. We stopped at an elevator manned by two more guards, and Reggie stopped abruptly, barking \"Welcome to the other side, mate, and good luck, their drivers will take you back to Horse Guards.\" There was a note of disapproval in his voice far beyond what I would associate with Peggy's absence. I got out of the car, and recognized Alexis T. Quandry, the uber-nerd and mathematical whiz, who Elizabeth had described as the 'other player'. Did I want to be included in this 'player' category?\n\n\"Hello Robbie. I want you to meet someone before we join the dinner group. Follow me.\" He was wearing the most expensive looking suit and tie I had ever seen, and even in my vaunted new outfit I began to feel like a sixth grader at the senior prom. We entered the elevator and I noticed its unusual interior: there were no buttons, no display of the floor we were on, no mirror, nor anything else save a little swipe card reader with three LED's above it, and a flat black plate next to that. Alexis swiped a red plastic card through the reader, and then touched his thumb to the black plate on the wall. The green LED blinked, and the elevator began to move, very smoothly. I could not tell how fast it was going, or even if it was going up or down. When it stopped, I realized it must have gone up, as we walked out into an entry hall three stories tall, with windows on one side all the way up, showing a spectacular view of the city lights. Greeting us was a dark Arabic looking man in his late forties I guessed, dressed in a suit at least as nice as Quandry's. He had a close cropped beard with hints of grey, and a very intelligent expression. \n\nHe smiled tightly and offered his hand. \"Hello, Mister Roberts. My name is Mohamed, but you may simply call me 'Med'. He handed me a business card and I somehow managed to give him one of mine. He had another one of the those long names full of 'Bin's and 'Al's, and on my first read it looked like a Zayani and a Fayez in there, and I assume he was related somehow to Fayez Adnan, our host. \n\n\"The pleasure is mine, Med, and call me Robbie.\" I managed. He motioned to a luxurious looking couch and a set of chairs and we three sat down. \n\nAlexis spoke up. \"Med is one of the most influential money managers in the world, advising the sovereign funds of many nations, including those that are the primary investors in many of the projects we are bidding on. He has a keen interest in making sure we are covered against all contingencies, not so much to ensure our profits, but to make sure our clients can take the projects forward to completion even in the face of adverse events.\"\n\nI mentioned a famous legal case from Engineering 101, where the contract was for specific performance and the court's decision had directed the insurer to make extraordinary expenditures to minimize the delays after an earthquake. Med looked up in surprise. \n\n\"Precisely on point! Alexis tells me you are a freshman at ESU. What's your major?\"\n\nI suddenly felt like I was on familiar ground at a UDP mixer. \"Electrical Engineering. I just had to declare it at the end of the semester.\"\n\nHe laughed. \"I absolutely hated electrical engineers when I was there. I was a Petroleum Engineering major, and I had to take EE 331, the electrical engineering course for non-electrical engineers. It nearly killed me. Kirchoff's current law, Kirchoff's voltage law, three phase motors and generators, a zillion problem sets, and a Korean TA that barely spoke English. I still have nightmares sometimes, even though I graduated 25 years ago. Which engineering professors have you had?\"\n\n\"Only Lillehammer.\"\n\nHe laughed. \"He was brand new when I was there, and he taught Engineering Mechanics, the course designed to weed people out of engineering, and he took delight in doing it. What a bastard!\" \n\nI decided not to tell the story about Lillehammer and my project management assignment, at least not now. \"I have to take it this coming spring semester, but not from him.\"\n\n\"Good luck!\" Then Med threw me a quick question. \"How did you meet Abelard Peters?\"\n\n\"We met at an ESU home football game. He was in Austin for the F1 race and missed his arranged tour group of the stadium so I showed him around individually. He was fascinated by Bevo, and I think my girlfriend, too.\"\n\n\"He does have a discerning eye. His wife is an arresting woman, and very attractive, too.\" I didn't even notice him shifting mental gears, and then he said \"Why do you think I should be in favor of Abelard using a new and unproven American insurance company on projects that I invest in?\"\n\nI cribbed shamelessly from the report that Brujo Lagoria, Sapiento Gallo's money man, had prepared and given me a copy of. I figured one money man's take would resonate with another. \"Tier Group is going to grow tremendously over the next few years, regardless of who insures them. The absolute amount of risk is more than their current insurers should take on. So the question is not if, but who Abelard adds as a new insurer. Many of the new projects are going to be energy and/or shipping related, and we have as much or more expertise in that field than the present vendors, and a strong balance sheet. But most importantly, we identified the issues first, we want the business, and we are proposing the best solutions.\"\n\nHis expression was completely unreadable. \"What if, in order to get the business, you needed to make some 'disbursements' in addition to those made through Adnan?\"\n\nThat sent a jolt through me. Was he angling for a little additional 'mordida' of his own, or was he testing our loyalty to Adnan? Should I say yes and close the business, or would saying yes queer the whole deal? My father's dinner table advice about bribery suddenly occurred to me, and it was the same as that about sucking up to someone: if it works with them, they are probably not going to stay the real decision maker for long. Plus I didn't think I could just punt and leave the issue open. Think fast, Robbie. \"We might re-evaluate our position if it turns out we are not successful with these initial proposals, but we have decided to rely on Adnan for his expertise in this area.\"\n\nHis expression was even more unreadable, leaving me in an ongoing state of worry. He stood up. \"Let's join the other guests for dinner.\" He walked on ahead of us.\n\nAlexis Quandry held my elbow to slow me down a few steps and then said \"See, Robbie, even an anti-social, autistic math freak like me can sometimes see the value of networking.\" \n\nWe trooped up a very ornate staircase into a large dining room, set up for about 30 people, as other folks filed in along with us. I saw Adnan, with his obviously dyed black hair and mustache, talking with Barry Fermy, and he motioned to us as we approached. Med took Adnan by the elbow and then shook his hand, and then introduced me to him. \n\nA waiter came by and offered us drinks, and when I declined, Adnan spoke \"You are not a drinker, Mr. Roberts?\"\n\n\"No. I don't drink or smoke or use any drugs. None of them affect me like they do most people: they just make me sleepy. I don't get high.\"\n\n\"What does get you high?\"\n\n\"Women!\" The whole group chuckled when I said it, \"running, and sometimes playing competitive tennis.\" A bell rang and everyone started toward their seats, complete with nametags at each place. \n\nI noticed that there were no women in attendance \u2013 Barry Fermy was here, but not Penelope Profico. Ben Wahni was here, looking as nervous and ferret-like as ever, but Senex Pedo, the project management guru, was not. None of our party was seated together, but rather dispersed across all the tables, encouraging intermixing, I supposed. I met lots of guys, most of whom had those long names that are hard for me to remember, but I began to associate some of the titles and faces. The few Brits and Americans that weren't part of our traveling group were relatively easy to remember. The food was absolutely fantastic, and every course was something new and amazing. One of the other guests commented on Adnan's new chef, which apparently he had lured away from some other, more minor billionaire. \n\nAs the evening wore down, people began to trickle out, and Adnan and Med installed themselves near the door in sort of an informal reverse reception line, speaking with each person as they went out via the elevator foyer. Barry Fermy motioned to Alexis to stay behind with me, and then he took Ben Wahni by the arm, and led him out ahead of us. When we passed by, Adnan asked if we would join him on his yacht when we returned after the first of the year and were visiting some of the sites in the Middle East.\n\nAlexis accepted for both of us, and Adnan asked 'Will you be bringing the fashion models you mentioned?\"\n\nAlexis looked embarrassed. \"Yes.\"\n\n\"Mr. Roberts, would you like to invite a female guest, too?\"\n\n\"Yes, but she will want to bring her personal assistant with her. She is a dedicated to my girlfriend, and someone we both get along with very, very well.\" Alexis looked at me funny. Med and Adnan smiled broadly. Personal assistants were not uncommon in their world, and I thought they got my drift with regard to how personal this assistant might be. \n\nMed spoke up. \"Do you think we will enjoy seeing this assistant on the yacht?\"\n\nI smiled archly. \"Yes, she is very unusual, and at any rate my very beautiful but very spoiled girlfriend needs her assistant there to put on her suntan lotion.\" \n\nAdnan said. \"I see no problem with that. Where will they be coming from?\"\n\n\"Pimlico, here in London.\" I said.\n\n\"Wonderful. If you send her contact information to the email address on my card, my personal assistant will contact her and set everything up for us.\"\n\n\"Thank you so much. I am going back to Dallas in the morning. I look forward to seeing you in the New Year.\" \n\nAlexis T. Quandry was beaming as he swiped the card to take us back down in the elevator. \"Am I a consummate networking genius, or what?\"\n\nAdnan's driver took us back in a beautiful mint old Rolls Royce. I texted Peggy and she agreed to take a taxi to Horse Guards to spend the night together there. When we pulled up, the Rolls looked right at home on Whitehall Place, and Peggy got out of the cab just as I arrived. Our perfect timing continued throughout the evening, and we made long and tender love, and managed to come together as I looked her right in the eye, with all my weight pressing into her. We then cuddled up and she began to talk.\n\n\"So Robbie, did they invite you on the yacht?\" A warbling Suzie escaped her, signaling her excitement. \n\n\"Yes, but they insisted that I bring my girlfriend and her very personal assistant, and that I promise she would shamelessly exhibit herself on deck in front of all those rich old men, and their mistresses, while another woman put on her suntan lotion.\"\n\nHer Suzie signal grew like an air raid siren. She leaned down and sucked my cock until it was hard, and then grabbed my neck and straddled me. I suppose it was my duty, for God and country. We said a tearful goodbye in the morning, and I before we got out of bed I suggested she send me a Christmas card with a topless photo of herself, taken from her little outside balcony. I could feel her nipples pulse next to mine. \n\nI took a taxi out to LHR and boarded my 10:45 AM flight for DFW. It was a brand new looking 747-400, perhaps the same one I came over on. I settled into seat 3A and expected to spend a lot of time looking out the window. This flight had no Elizabeth, and no Peggy, but at least I was on the way back towards Suzanne and Lara, although I wouldn't see them until just before classes started again. The cabin attendant handed me a little card announcing a new service, in flight Wi-Fi, no extra charge here in first class, and provided a network name and password for me to try. I had left my phone off all last night, and when I turned it on and brought up the setup dialog and joined the network, lots of messages popped in. By the time we were on takeoff roll, I had something to do. \n\nOne of the first I saw was from the Dean of Engineering, congratulating me on making the Dean's honor roll, and inviting me to a reception at the Faculty club. This actually arrived before my official grade report, 4 A's and one B. There followed an email from Lillehammer, congratulating me for finally picking a major, even if it was EE, which he considered greatly inferior to ME. He must not have seen the dual major deal, as I was trying to pick up a second undergraduate degree in Computer Science. Perhaps being around Nora was having a positive effect on me. I was sure that having Nora around me (tightly) would be even better. The CS degree required a language, and I would likely choose Italian, which I considered a better choice than that made by my cousin Mikee from New Jersey, who had taken two semesters of Klingon at a flakey junior college before dropping out. That sure looks good on your resume.\n\nNext was an invitation from Jay Kincaid to spend a day in Waxahachie with him and his family (and Millie) on his granddad's spread and I decided that would be the right time to have a serious talk with each of them, separately, about the other. Bigun Jackson sent an email about how wonderful Alley was, and inviting me to go with him to a car show in Fort Worth the day after Christmas. There were more than a dozen emails about Spring Rush. Part of me wanted to just pledge UDP and be done with it, but my curiously told me this would be my best chance to get some direct information on some of the other frats and frat rats. Finally there was one from G\u00fcnter, asking that we have a one on one face to face talk before our next 'dinner' at their apartment. I thought we had all that worked out, in sort of a 'sexual point shaving scheme' but maybe not. I needed to have the same talk with Ralph, too, and ask him if Big Liz and Marilyn had heard Suzanne' s offer, and how they responded.\n\nHaving sorted out my inbox, I then did my business networking duty and chatted up everyone in first class, including a nice looking blonde singer in her late forties that I did not recognize with an unusual sort of British or something accent who lived in London and was pouting about having to travel commercial and not being able to get a direct flight to Vegas, where apparently she had booked a series of concerts at a hotel over the holidays. She had not performed in some time, and was a little nervous about the new show. The older couple on the other side of the aircraft recognized her and made a big fuss about her and asked for her autograph, which seemed to cheer her up, and I even took the man's smart phone to take picture of them with the singer. I gave her one of my cards, and she gave me one of hers. I ate the pretty nice first class lunch, topped off with two warm chocolate chip cookies, and then slept the rest of the way."
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "exhibitionism",
        "anal",
        "dogging",
        "yachting",
        "university",
        "sunbathing",
        "oral",
        "tennis",
        "felching"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-25-1"
}