{
    "title": "Halo Two - Five Ch. 01",
    "pages": [
        "My warmest thanks go to my two friends who always seem to find the holes in the storyline and whose advice is always listened to, thank you so much. As always my deepest thanks have to go to SouthPacific for his editing skills, this story reads allot better with him keeping me honest, many thanks my friend.\n\n*****\n\nThe book wasn't engrossing, but at least it kept my interest inasmuch as I didn't get so fed up with the heat of the day. The flap of the tent bowed in and Tony stuck his head inside, looked around, and eventually spotted me sprawled out in my bunk.\n\n\"Rick! The boss wants you.\"\n\nI grabbed my bookmark, dropped it on the page, and left the book on the bunk. The boss was still on the phone when I knocked on the support pole of his tent before entering, so he pointed to a chair across the desk from himself and continued on the phone for another few minutes, occasionally scribbling something onto a note pad, before he told whoever was on the other end that I had just walked in and he would get me over there as soon as he could brief me.\n\n\"I'm loaning you out for a couple of days. I say a couple because I know how you like to work.\"\n\nThere seemed little point in saying anything. I still only knew as much now as I did two minutes earlier, so I continued to wait. It seemed that the American military forces down the road from us were going to deal with some insurgents in the town ten miles in the other direction. As backup they had brought in three snipers, one of whom had just been bright enough to break two fingers playing basketball.\n\nIt seems I was volunteered to take his place, since they couldn't get another sniper in before the planned attack on the town and, with everyone already prepped, they didn't want to cancel the attack. I joined the briefing for the snipers at the military barracks that afternoon. Between the platoon commander and the other two snipers we all picked our spots. The table got a bit too crowded for me so I pointed to my area and told them I would leave the rest to them.\n\nThey all looked at each other and then at me. The platoon commander finally handed me the comms frequency between me and him, before once again going over the operation and asking for any questions. Being the outsider in this group I kept my mouth shut. As things turned out, perhaps I shouldn't have. \n\nHe was clearly ambitious, but for my part I felt he didn't have enough men for the job considering the size of the place. But, like I said, I was the outsider. My call sign seemed to raise a smile amongst the group, and it was only when I left the tent that I realized they had all been calling me Halo most of the afternoon. The commander gave me a pass to go back and get my gear, and I asked if I could stay with my people that evening and head out early before the assault on the town. \n\nWith the aid of hindsight it seems he looked on my laid-back manner as nothing more than disinterest. I found out afterwards that he told the rest, when I left for the evening, that that was why he agreed with my request. When I got back to my boss we pored over aerial pictures of the town and, more importantly, my area of operation. When first one and then a second option became apparent that would allow me to follow the troops through a rifle scope, working around my area and staying unseen, I asked my boss if I could leave then.\n\nIt still took me another two hours to get ready and pull my rifle and assorted other weapons from the armory, as well as enough kit to last me for the duration of the operation. It was close to eleven when I left, and almost dawn when I was set up and ready in my preferred position. As the day broke my doubts about this operation increased, and I radioed my boss with my fears. Within the hour I was overruled, so I sat back and waited for the approaching clusterfuck to begin.\n\n*******\n\nI hate to say I told you so, but... I told you so. \n\nWatching it all go to hell in a handcart through my scope, and listening to it over the comms, just made it worse. The common-sense thing to do would have been to take a step back, regroup and send in the artillery, but there were way too many civilians still here for that to happen. When I spotted the attack team there were six of them. By the time they had got to the end of the street the six had become three. \n\nInstead of seeking shelter and waiting it out, the guy in charge decided to try and get across the open square below me. The three of them bolted as a group, thus making the biggest moving target known to man. The leader got ten feet and folded in two before hitting the ground. The other two tried to carry him, but only got to the centre of the square before another one went down. A lone figure was left standing and then crouching, looking around and wondering what to do.\n\nA door burst open, and three insurgents rushed at the one remaining solder left in the square. I got two of them and he dealt with the last one. He was just pulling his knife out of the insurgent's chest when his helmet fell off, and I let out a slow groan. Blonde hair cascaded down the soldier's back - he was a she!\n\nTwo more insurgents rushed her. She crouched down assuming a combat position, knife in hand, but I took them out as well. She looked over her shoulder, but it was a futile thing to do. I was a sniper and, if she could see me, I simply wasn't dong my job. I could see her tears through my scope which let me know she was afraid, but kudos to her - she was still holding it together better than some I had seen.\n\nI didn't waste time with the dick of an officer that sent me here - I wanted to talk to my own boss. \"Control, this is Halo Two-Five.\" \n\n\"Send Halo Two-Five.\"\n\nI recognized the operator: I had trained him. Tony was calm, and would already be waving at our boss to bring him into the conversation.\n\n\"Five down from Echo's team already; they were expecting the attack. One survivor in the town square, a female; looks like a medic. Request extraction.\"\n\nThe pause on the radio was both long and uncomfortable, and that was making me feel even more uneasy. \n\n\"Extraction impossible at the moment. Information on insurgents appears to have been fabricated. Reinforcements have taken up position outside the town and progress already slow.\" \n\nI scanned the bodies for signs of life. She was way too exposed, and moving from my position to get her would leave her without any cover at all. The odds were that, if I went to get her, she would have been taken before I had even arrived in the square. Two more chanced the quiet and rushed the woman, and got to within six feet of her before they both hit the ground. \n\nAgain I checked the scene through my scope and paused at the head of the dead lieutenant. His helmet had come off when the other two had dragged him as far as the center of the square. He was wearing a comms headset. I just hoped that she wasn't totally blonde.\n\n\"Control, this is Halo Two-Five. I need the frequency Echo team were assigned for this clusterfuck.\"\n\nI fired one shot as close to the head of the leader of the team as I dared. She looked down at the dust scatter, and then back at the doors to the buildings around the square. I fired another shot in exactly the same place as the first, and again she looked down, but then in my direction. Her head slowly lowered and looked at the body of the lieutenant before a smile came to her lips. I stopped mentally calling her a dumb bitch right about then.\n\nGrabbing the comms kit was an act of desperation. I could see her lips moving while still waiting for the frequency she was on. Finally Tony came through and I changed frequency to hers.\n\n\"Hello! Who's out there? Help me please - I'm stuck and I don't know what to do.\" I waited in case the platoon commander said something, but there was only silence.\n\n\"Calm down and put your helmet back on. Sort your hair out and hide it inside your helmet. Do it now.\"\n\nShe pulled the comms kit completely off the team leader, put her hands in her hair and twirled it around before wrapping it on her head, placed the headset over it and then put on her helmet, adjusting the chin strap and clicking that into place. The adrenalin had obviously kicked in - that whole action took about five seconds, max.\n\n\"Who are you?\"\n\n\"Halo Two-Five.\"\n\n\"No, I mean your real name. Who are you, and where are you?\"\n\n\"Halo Two-Five.\"\n\nThis time three men charged her. She reached for her knife just as the last of the insurgents dropped at her feet, kicking him in the face before dropping to the ground herself.\n\n\"I need you to do something that will save your life and give you nightmares for some years to come.\" I paused before I continued. She was already a hairs breadth from freaking out, and I couldn't stop her if she did.\n\n\"You're too exposed. I can cover you from here, but you need to protect yourself. Pull the bodies towards you and stack them two high. Leave yourself enough room in the middle to stretch out, but only just. Find any weapons that have been dropped as well as ammunition.\"\n\nI could see her lips move but I was already changing channels again.\n\n\"Control, this is Halo Two-Five. I can't keep moving channels back and forth. Squat on the frequency one below Echo's frequency so I can get you if I need you.\"\n\nI didn't bother waiting for a response from Tony - why should I? He knew what I was asking of him, and within seconds he would have changed channels to call HQ with the request to take it over and push other users further away to stop any bleeding over our frequencies. \n\nBy the time I had changed the channel back she must have been leaning on her send button because all I could hear was her retching. When I looked through my scope she was already in the process of being sick. At least she had the forethought to be sick the other side of the bodies she was hiding behind. Luckily, even though that left her exposed, nobody else tried an attack.\n\n\"What have you got in the way of weapons?\"\n\nHer head spun around in my general direction once again.\n\n\"Where did you go?\"\n\n\"Weapons?\"\n\n\"Oh, yes. Two AKs with six magazines each; a pistol with two mags for that, and my knife, as well as my Sig plus three mags.\"\n\nJust as she finished her inventory two doors opened at opposite ends of the square and four insurgents rushed her. I got three of them, and she emptied a whole magazine into the fourth from the AK she was holding as he grasped the business end of the weapon. As he slumped to the ground he managed to yank the gun from her grasp, and it landed behind him. \n\nShe heard me swear over the radio; it was one of life's unguarded moments for me. I still wanted to call her a dumb bitch for not only wasting ammunition but losing the weapon afterwards. I heard the bleed over from the channel below and knew it was Tony. It only took me acknowledging him before some stranger took over the airwaves.\n\n\"This is General Macalister.\"\n\nJust great, I thought. He's just announced to all the world who and where he is.\n\n\"I know what you're doing, and I'm ordering you to protect that medic.\"\n\nBoy, was I pissed off. \"I don't work for you! Put my boss on and get the hell out of my life.\"\n\nI could just visualize him having a coronary right about now.\n\n\"He's left, Halo. Sorry, but I wasn't expecting that. I will make this brief: you will be ordered very soon to keep that medic alive at ALL costs.\"\n\n\"Let me guess - it's way above my pay grade, and she has friends in high places?\"\n\nMy mind's eye already watched him nod his head.\n\n\"She's not even supposed to be in this area, let alone in the middle of this. We're still heaping one clusterfuck on top of another over this whole operation, and so far she's sitting on the entire heap.\"\n\nI could feel bleed over on the channel above: she was talking. I left her to it since I needed information.\n\n\"More troops are being pushed into this area. The trouble is that more insurgents are already on their way from the other side of the town. When it's confirmed I have to give you the order, we won't be able to get anyone in there to help out, so you'll be on your own.\"\n\n\"How long do I have to keep her alive?\"\n\nThe silence was longer this time, and that alone spoke volumes.\n\n\"Short of napalming the whole town, which has already been declined due to the potential civilian casualties, it's looking like it's going to be house to house.\"\n\nThe map of the place appeared in front of me, pulled from my own memories as my boss and I pored over possible locations that I could use as vantage points and cover for the assault. When I got here I counted way more insurgents than my initial briefing had forecast. Even when I voiced my concern to my boss, and he took it higher, he was basically ignored in favor of their own intel, and I was effectively told to get on with it and do as ordered. \n\nSo far that had worked out just dandy for five of the six that had made it to the square. My radio bled again and, looking through my scope, I could see her looking in my general direction with her lips moving. The map quickly disappeared when I spotted one of the smarter ones on his belly and using all the cover that the debris in the square was offering him.\n\n\"Control, this is Halo Two-Five. Get back to me when you have confirmation that General shithead has signed my death warrant. I need to keep Kitten alive.\"\n\nNot even waiting for an acknowledgment I moved channel once again.\n\n\"Where ARE you? Why aren't you talking to me? What's happening out there?\"\n\nAll valid questions, even I had to admit.\n\n\"Tuck yourself tighter into your wall. I know you don't want to, but at the moment they are keeping you alive.\"\n\nEven through my scope I could see the tears of genuine relief that I was still talking to her and hadn't bugged out.\n\nIt was through even more tears she asked again. \"Can you tell me your name now? I'm...\"\n\nThe second I realized what she was doing I pressed down on my send button and hoped my signal would clash with hers, making what she was saying nothing more than a garbled mess to anyone listening in. I even mentally counted to twenty before I spoke.\n\n\"From now on your name is Kitten; you answer to no other name but that.\"\n\nHer answer took longer to come back. As for me, I had my finger on the send button just in case she had another attack of the stupids, plus I was still watching the snail creeping ever closer to the bundle of bodies in the middle of the square.\n\nWith a sigh came her reply. \"OK, and I bet you still want me to call you Halo Two-Five.\"\n\nI smiled. Hell, she caught me off guard and I smiled! The dumb bitch is in a whole world of shit with just me as a safety net, and she's pouting about a name. By now the snail was about twenty yards from Kitten and reaching for a knife before placing it between his teeth and moving slowly onwards. This guy had seen way too many westerns on TV - that was for sure.\n\n\"No. You can call me Halo for short if you wish.\"\n\nEven through my scope I sensed she felt she had grasped some sort of victory from this conversation.\n\n\"I've tried contacting others. Why can I only talk to you?\"\n\n\"You have a short range comms system, added to the fact that you're in a built-up area. Even though you're in the middle of the square, your signal is just bouncing all over the place, and by the time it gets outside of here it's too weak to be heard.\" \n\nBy now the snail felt confident that he could get the job done. He jumped to his feet and, shouting something in his own language that even I heard from where I was, he leapt at the cover Kitten was behind. My bullet went into his chest and his forward momentum added him to the wall of bodies Kitten had put together, her scream echoing around the square.\n\nThat event set a whole turn of events to happen all at once. Five men crashed out of one of the houses that two others had come from earlier and, with screams of their own, rushed the growing wall in the middle of the square. Kitten stopped screaming and grabbed her Sig. She got the leader and I added to the body count with the others.\n\nIt was shortly afterwards that I caught a glint of sunlight off a piece of glass. My first instinct pulled me up real quick: I had been made. This was just confirmed when two men dashed out of the back of the house and took a real sharp right, one of them even looking up in my general direction.\n\n\"Kitten, make sure every weapon you have is loaded and the safety is off. Just don't shoot your damn foot off, OK? I may be gone for a few minutes, so be alert and kill anything that comes close.\"\n\nShe quickly looked in my direction, her mouth hanging open. Then she did something that I didn't expect her to do: she looked around the square at the carnage that surrounded her. Her hand went to the send button and her voice filled my ear.\n\n\"They know where you are, don't they? Are you leaving me here?\" \n\nI was still chuckling as I was putting my gear together.\n\n\"No. I'm moving to another location, and I have to deal with these two they've sent to kill me first. Chances are whoever is in charge down there will use me moving as an opportunity to come at you again. Keep your head DOWN!\"\n\nBy the time I got downstairs I could hear them the other side of the door. I'm almost sure they were arguing over who was going in first. Gunfire started in the direction of the square and afforded me the distraction I needed, so I pushed the shutter open and finished the argument they were having. That map appeared once again as my mind sought out a route to my next bolt-hole.\n\nKitten must have taken my swearing at the loss of one of the AKs to heart, because her firing was at a steadier rate. She was clearly conserving ammunition this time. It still took me a good half hour to get to my standby position and put together some basic security measures. When I looked through my scope she was being held by the neck by one of the insurgents. His grin wasn't too friendly either. \n\nWhen I dropped him Kitten fell the wrong side of her dead body cover. She scrambled back to the right side as I set about killing the three friends grinning boy brought with him.\n\n\"Thank you.\"\n\n\"Didn't your momma tell you not to talk to strangers?\" \n\nThat got a giggle out of her if nothing else. I watched her as she set about pulling weapons close to her and checking ammunition, then her hand went to her send button.\n\n\"If I had listened to momma I would be married to Bernard now, with at least one child out there and another one in me already.\"\n\nShe stopped suddenly, as though a thought had come to her. She looked around the square again and I copied her in my scope. Nothing moved, so I looked back at her again, now half-sitting as she rested against her wall.\n\n\"Halo, why am I still alive? That man had a gun in his hand and he could have used it at any time, but he didn't.\"\n\nI was going to be as honest as I dared. \"Because you're white, you're a woman and you're in the military. You would have been all over Al-Jazeera News by tomorrow morning.\"\n\nI took a quick moment away from my scope to look at my watch. We still had an hour before it started to get dark. I had to keep her from thinking thoughts that were too dark, and the situation she was in at the moment meant that would have been an easy road for her to travel. I had her counting ammunition and making sure the weapons she had were as clean as a cloth and spit can get them.\n\nWhen my boss and I looked at aerial maps of this place he spotted a collection of skips at the outer edge of the town. It was used as a storage area for someone's business, and we termed it as \"the dump.\"\n\n\"Control, this is Halo Two-Five. We're making our move at twenty-two hundred. I will make every effort to get Kitten to the dump; you better have an extraction team ready for collection. She's down on ammunition and fatigue is creeping in.\"",
        "I understood others would be listening, General Shithead being one of them. \n\n\"Kitten won't last another day. They are willing to take her alive, so I only have tonight as a window. After that the numbers will be too great.\"\n\nAll I got was an acknowledgment from Tony and then told to hold. Something in my head told me it was time to pay the piper. My boss came on next; his tone gave him away long before he got to the point. It seems General Shithead had been busy, and the order was now in my boss's hands.\n\n\"I'm sorry Halo; I'm looking at it right now. You are to take any and all measures to keep Kitten alive, and out of reach of any and all insurgents.\" The pause was my boss's way of giving me a moment to digest what he had said. \n\n\"Halo, this order comes from God's brother. Bring her home, Halo.\"\n\nJust who the fuck was this woman? Why the HELL was she even in a war zone, let alone being a hairs breadth from being front page news tomorrow morning? All I could do was acknowledge the order. In the space of three hours I went from being a sniper on loan, for a milk-run operation that hit the shit so fast it was still raining it all the way down here, to a bodyguard for a woman I had never met.\n\n\"Kitten: chances are they will try again in the half-light of dusk. Holster your Sig and your knife, and only use what's left.\"\n\n\"Oh, great! More party-crashers.\"\n\nI had to admire her bravado, if nothing else. It was also time for me to sort out my own kit. When I went to get her we would be in the middle of a running battle, so I separated what I had, dumped most of it, and had to hand what I would need in a hurry. By now dusk was upon us.\n\nThe gunfight that came was swift and brutal; the fact that I was still alive surprised some. When the first assault met deep resistance they played the waiting game once again. By eight-thirty I had broken down my sniper rifle and booby-trapped the kit I couldn't carry, and was already snailing it across the square. By the time I got to the other side of her body wall I could hear her breathing steadily in her sleep, utter exhaustion having overcome her wish to stay awake.\n\nMy night scope obscured part of my face, and the rest was covered by green body paint. She jumped out of her skin when I placed my hand over her mouth, thankfully managing to grab her wrist when her knife came into view.\n\n\"Now now, Kitten; that's not a nice thing to do to the cavalry.\"\n\nHer eyes were saucers and she immediately dropped the knife, her hands going around my neck as she gave me a hug.\n\nBetween sobs all I got was, \"I was beginning to think you weren't real. I mean, I knew you were, but because you were just a voice in my head.\"\n\n\"Well, I'm as real as it gets, so sit back and be quiet.\"\n\nI pulled my spare water bottle out and handed it to her, telling her to drink in sips. I watched her carefully to make sure she did just that, then pulled something else from my pocket and told her to eat it. She took one bite and, even through night goggles, I could see her face scrunch up. She hated it.\n\n\"Fuck, that's so sweet! What is it?\"\n\nIt took me a moment to get past my smile.\n\n\"You ever seen those glass plates on the wall that say 'in case of emergency, break glass?' Well, this is an emergency, so eat it and sip water at the same time.\"\n\nShe had eaten about half the bar before she asked again.\n\n\"I have to know what this is so I can avoid it at all cost from now on.\"\n\nShe was funny; I had to give her that. My finger went to her hand and tilted it towards her mouth once again. She got the message and set about eating, while I told her that it was a sugar bar. It was sold to the general public under the name of the town that made it, and called a cake, but the high percentage of sugar that was in it made it ideal for instant energy.\n\n\"So it's called a cake, but it's actually a candy bar?\"\n\nOther than shrug my shoulders I left the rest to her. The pause in conversation worried me slightly. It sure felt like she would try to get more information from me.\n\n\"You're British.\"\n\nShe took another bite from her self-proclaimed candy bar.\n\n\"Actually, I'm Australian.\" \n\nKitten almost choked on what she had in her mouth, and looked really closely at me when she recovered.\n\n\"If you're Australian, then my momma is half Eskimo.\"\n\nI used the time she took to drink from the water bottle to scan everything through my night scope.\n\n\"Okay, I lied. I'm actually from New Zealand.\" \n\n\"Mmmmm, and your nose is growing as well - Pinocchio.\"\n\nShe eventually got the hint that I wasn't giving her anything about myself. She also seemed to look on it as some type of victory that she had finished all of her sugar bar as well. She even emptied my spare water bottle, probably to chase away the taste of sugar. We sat in silence for a few minutes through what seemed to be the calm before the storm. I looked at my watch twice, the double click through my earpiece simply letting me know that all was ready.\n\n\"Halo... I ...\"\n\nShe sure looked like she wanted to be someplace else rather than say what she wanted to; wringing her hands only filled me with dread over what was going through her mind.\n\n\"Halo... I need to pee.\"\n\nThank goodness she didn't see me smile! I quickly buried the laugh that threatened to escape as well.\n\n\"Sorry, Kitten: you're going to have to squat and go there. We're going to be leaving in a minute and I can't have more attention directed at us by you sneaking over your wall and going.\"\n\nShe sighed; she knew I was right. \"Okay, close your eyes.\"\n\n\"Will not.\"\n\nSomething about her changed just then. She seemed to think I was handing her a challenge: her jaw set and her hands moved to her belt. I will admit the temptation was there to stare but, even through all this, I had to afford her something in the way of privacy. I adjusted my seating, and my hand went into one of the pouches on my belt and pulled out a silencer, screwing it on as I looked over her wall and checked everything in the square.\n\nThe sound of running water came next and I continued to watch everything but what was going on in front of me. Finally she sighed and I could hear her pull up her pants and clip her belt together. She wasn't the only one to breathe a sigh of relief now that she'd finished. \n\nKitten then moved to sit next to me, making it easier to talk rather than whisper.\n\n\"We leave in a few minutes. You're to carry only what you're standing in, and that's it. We need to be as silent as possible until it's too late to be silent, and that's when we run like fuck.\"\n\n\"Bold plan.\"\n\n\"More like as stupid as the one that sent you lot in here in the first place. But at the moment the insurgents are busy looking that way, and we need to keep them looking that way for as long as possible.\"\n\n\"So you're my one and only cavalry?\"\n\n\"Mmhhmm... Depressing, isn't it?\"\n\nRather than wait for a reply I hit send on my radio, \"Control this is Halo Two-Five, we're on the move. Make it rain.\"\n\nI pulled out a cloth, doused it with water and handed it to her before pulling her goggles down from her helmet and over her eyes. Smoke started hitting the town square, obscuring everything. I grabbed her free hand and we left, the shouting in Arabic starting just seconds later. We got a good distance from the square before we met anyone; although Kitten had her Sig in hand, she let me and my silencer deal with him and his friend.\n\nAnother twenty yards and I pushed Kitten into an alley; we had swapped places by the time we got to the other end. My mind's eye still focused on the map of the place in my head, trying to find the route of least resistance and willing to go around what we found. The good thing was that whoever was in charge out there simply couldn't figure out the route we were taking, so his attempts to intercept us fell back on luck alone.\n\nAnd, like all things about lady luck, she gets bored real easy.\n\nThe shouts in Arabic were getting closer. The dump was only two hundred yards away, but over a hundred of that was open ground. I flashed my thumb light in the direction of the dump - three on; pause; two on. Repeat after ten seconds. \n\n\"Control, this is Halo Two-Five. Confirm they have seen my signal?\"\n\nA shot pinged over my head and I did start to wonder if they thought keeping Kitten alive wasn't worth it anymore.\n\n\"Confirmed Halo Two-Five; three by two.\"\n\nI grabbed Kitten by the shoulder and looked at her, my own face still half obscured by my night goggles.\n\n\"OK. This is the part where you show me that you don't run like a girl.\"\n\nI pointed into the darkness.\n\n\"Run - and I mean RUN. Because they will be chasing you, and you don't want that. Make it two hundred yards in that direction and you're going home. Don't make it and I'll put you across my knee. Now get going.\"\n\nI pushed her and she was two paces out of cover before she glanced back at me. She knew I wasn't coming; I had to keep the mob off her so she could. I watched her run the first fifty before bullets started flying in her direction. That's when I unscrewed the silencer and made lots of noise taking the first two down, thus giving me an AK and spare ammo. I never looked back; I didn't need to. The roar of a helicopter came from the dump within a couple of minutes of Kitten running for it.\n\nAn Apache joined in the roar and started laying down covering fire for Kitten and the snatch squad to get the last ten yards. Within minutes the noise from the dump disappeared into the darkness. I spent the next four hours on the roof of the building opposite. It's interesting listening to people argue in Arabic, and the sound of a single shot meant that the leader wasn't too pleased with the person he was arguing with either. Failure came at a heavy cost for one person that night. \n\nWhen I deemed it safe enough I double clicked my comms. Tony came back instantly.\n\n\"Halo Two-Five, this is control. Proceed to second RV; we're waiting.\"\n\n*******\n\nI had been home for three months. Tessa and Olivia were pleased to see daddy back from his business trip, and Max and Beth, my late wife's parents, were relieved to see I was still alive. I took all of them on holiday with me and we caught up; or, rather, I caught up on the antics of my daughters. For five and four-year-olds they sure knew how to test the boundaries set by their grandparents! \n\nGeneral Shithead wouldn't let my disrespect of him lie either, right up until God's brother had a meeting with the President and politely told him that hell would freeze over before anything would happen. The President understood and made the call. At best, I was on probation; at worst, my boss had to write a letter of apology to the General that he got his secretary to write before he scribbled a signature. Kitten was a \"need to know\" and I couldn't be bothered to know. It was a classic case of a person being in the wrong place at the wrong time as far as my boss and I were concerned.\n\nIt was close to my fourth month at home when I had one of those feelings. I watched more often, and took the usual precautions, but nothing happened. Even a phone call to my boss got me covered in shadows for a week, but they found nothing.\n\nYet still that nagging feeling came and went on an almost daily basis. In the end I phoned my late wife's folks and asked them if they could take the children for a week. They instantly agreed, but it was clear that they had questions and I just prayed they wouldn't voice them.\n\nI was sitting on a park bench watching families having picnics and playing on the vast expanse of grass when someone sat next to me. She smelt nice - I had to give her that.\n\n\"Hello again, Halo.\" \n\nA red dot appeared on her chest and she noticed instantly; she was meant to. A middle-aged couple ten feet from me stopped smiling and doing the huggy-kissy thing; they got up and walked over, pulling handcuffs from nowhere. They stood her up and cuffed her before taking her away.\n\nI got a phone call that evening from my boss. Boy was he pissed off, and I'm sure glad it wasn't aimed at me. \"She wants to see you. She's at the American embassy. It seems mommy got her diplomatic immunity, so we had to drop her there.\"\n\n\"You promised! I made it a prerequisite that one life wouldn't clash with the other, and you promised. I could have had my daughters with me when all this went down!\" \n\nHe sighed. I think he expected me to rant, but at least I got it off my chest.\n\n\"I know, Rick, and I'm sorry, but she's not going away. I've spoken to God's brother and he has agreed a compromise. Neutral territory; she keeps her diplomatic status so we can't toss her arse out of the country the second she sets foot on British soil, but he has asked me to get you to meet her on neutral territory.\"\n\n\"Where?\"\n\n\"At God's brothers second home... Chequers, tomorrow afternoon.\" \n\nHe knew I was going to refuse because I was thinking about it.\n\n\"Rick, it turns out General Shithead is actually Uncle Shithead. Her mother works for State, and daddy owns half of everything. I don't know what you stepped in over there, but please go see her, talk to her and close this down, because I get the feeling that's what she wants - closure.\"\n\n*******\n\nThe place was crawling with our security and a heck of a lot of men in black. It always seems that sunglasses are a must for these folks, even on a cloudy day. My car was searched twice before I was taken inside. She was sitting on a couch, talking to one of the permanent staff. I asked for coffee and she nodded before leaving.\n\nKitten smiled, but sat watching me without speaking until my coffee arrived and the door was closed once again.\n\n\"Like I said the other day: hello, Halo.\"\n\nNot saying anything was the only option I took. I was still pissed off at her for making both my lives connect together like this. She leant down and picked up her bag, placed it on her lap and opened it. It took a second to find what she wanted and then she pulled it out, smiling all the more.\n\n\"Kendal Mint Cake. It really is called a cake, even though it's actually a candy bar.\"\n\nI still kept tight-lipped while she used the silence to her advantage. Placing the candy bar back in her bag and the bag once again on the floor, she rested her elbows on her thighs before she looked up and spoke again.\n\n\"So go on, Pinocchio: tell me again that you're from New Zealand.\"\n\nMy thoughts had calmed down; well, the ones that wanted to do her damage had, and so it was with genuine interest that I asked her personally this time. \"Why are you here?\"\n\nHer eyes seemed to take on a distant look before they focused once again as she looked directly at me.\n\n\"So I can call you a bastard, AND to your face.\"\n\nEven I would have to admit that the temptation was there to tell her to get in line. Hell, even my late wife had lead that parade. She sipped at her coffee again and then sat back in her chair. I followed her lead but continued to watch her.\n\nHer tale started on that run from the side of the building we had huddled against and into the inky darkness towards the dump. One moment she was running for her life towards the extraction point and the next she was lifted off her feet and surrounded by a Marine snatch squad, bundled into a Blackhawk and taken from the area. As she looked down the Apache was firing along the edge of the exact point that I had pushed her. She was transferred to a medical centre and then onto the first available flight out. She was debriefed at her home base and given extended leave.\n\nMommy and daddy brought her home and got her a complete check-up. They simmered for a while between wanting to tear her a new one and relief that she was safely home. The only thing they couldn't stop, even with all their money, was the nightmares.\n\n\"I told my therapist about my dead body wall, and even about you telling me I would have nightmares about it. We got onto the subject of you, and at first I refused to talk about you.\"\n\nAgain she leant over and picked up her coffee. It was as though she was simply going through the motions, since her thoughts still seemed to be on what she had already said. She even stopped the session short so she could talk to her uncle about what she could and couldn't talk about.\n\n\"For weeks I thought you were dead, Halo.\"\n\nEven when her uncle came to visit and she asked him about the man who saved her life, he refused to talk about me, instead venting about why she was there in the first place. Kitten again forced the topic of me onto her uncle, only this time she was backed up by her mother, who had also sometimes sat with her as she screamed through her nightmares into the darkness. \n\nMy boss was right all along - she needed closure. As for me, I was the least equipped to give her something like that. Following another conversation I had with my boss, if she had found me then there had to have been some form of security breach, and we needed to find it so we could seal it.\n\n\"How did you find me?\"\n\nShe smiled, and in my mind I was already forming the officially worded complaint against General Shithead. Something like this would either stall his career or end it in its tracks. \n\n\"You told me who you were.\"\n\nNow that confused the hell out of me, so I asked her to explain. \n\nWithin a week of being back home she pulled the uniform she had on during that operation from her bag to clean it. The contents of that day were still in her pockets, even the plastic wrapper the Candy Bar came in. She gave it to mommy and asked if it was possible to have the wrapper checked for prints. It was a longshot at best but, sure enough, two different people's prints were lifted from the wrapper.\n\nIt seems her mother used up a great deal of favors looking for the name to which one particular print belonged. A friend in the C.I.A. talked to a friend in M.I.6, who then had a pint in a bar with a friend who works for Special Branch who just happened to have a cousin working at Scotland Yard's data base and ran the print. \n\nMr. Rick Chalmers. Arrested for assault on the man charged with death by drunk driving of a Mrs. Abigail Chalmers. The case was dismissed when the man refused to press charges, and he himself received a three year jail sentence when he pleaded guilty to his own charge.\n\nAt least now I knew who the leak was: me. An act of kindness had got my cover blown right open. I would talk to my boss but, as of now, I was useless to him, and once we had our conversation he would know it as well. \n\n\"Are we allowed out of here?\"\n\nHer voice broke my train of thought, but I still didn't understand her question.\n\n\"I mean, can we go for a walk around the grounds? This is Chequers, Halo: your Prime Minister's country residence. I don't know about you, but I have little or no chance of ever coming back here, so can we at least walk the place?\"\n\nIt took some persuasion, but after a phone call to whoever made the final decision we were walking the grounds within fifteen minutes, accompanied by two sets of sunglasses and two of the permanent security staff. The flowers were giving their best before autumn came, and once in a while Kitten would stop and smell the blooms before we moved on again.\n\n\"You never got around to calling me a bastard.\"\n\nShe giggled, and her hand came out and punched my shoulder.\n\n\"I really should, you know, for what you put me through, thinking you were dead.\"\n\nHer eyes scanned the garden for a few minutes, but it wasn't until she looked at me once again that I realized she had been crying.\n\n\"I'm broken, Halo, and I don't know how to fix me. At least I get three hours sleep at night before the nightmares come for me. One doctor called it Post Traumatic Stress Disorder and gave me a bunch of pills. Mom said I looked, walked and talked like a zombie for two days before she took me off of them.\"",
        "This time she stood in front of me. The two sunglasses inched their hands closer to their jackets, and then thought better of it.\n\n\"You helped me once, Halo, and looked after me until you could get me out of there. I need you to look after me again.\"\n\nAs much as I wanted to do something, I simply couldn't. Now that I was away from the action, for at least a little while, my attention had to be on my own children. It was odd having this crossover in my life, since I had spent so long keeping both parts away from each other. Kitten did need help: that was clear to see. But, other than keeping her alive, I simply wasn't equipped to help her. Hell, I was a grunt on the ground, just like her - not a head doctor.\n\n******* \n\nIt was on the news that the Secretary of State was on a week's visit. The Prime Minister was having a party at some posh hotel in London for her and her staff. An envelope dropped through my door, hand delivered no less. I read the contents and placed the invitation back into its envelope, and I had to smile when I thought how much I would get for this if I put it on eBay.\n\nNot that I would go of course, mostly because it was Tessa's sixth birthday on the day of the bash in London. McDonald's with her friends from school was what she wanted, and who was I to refuse her? I even had two of the mothers helping me. It was Tessa who looked up and spotted the motorcycle first, the blue lights a giveaway. A second came around the corner, followed by a stretch limo. I smiled and instantly thought that there was no way that was going through the drive through.\n\nThen a darker thought occurred to me. \"NO!\" I screamed to myself. Not even she would do this to me. The guy getting out of the passenger side of the limo made me realize, yes - she would. He was one of those from our meeting at Chequers. As he leant towards the rear door I excused myself from the party and went outside. Kitten was stunning in some ball gown that would have sent every head spinning for miles around.\n\nThe smile fell quickly from her face as I got in first before she could speak. \"Turn this cavalcade around and get the hell out of here! I want you gone by the time I get back to my daughter's birthday party.\"\n\nSunglasses moved to get between us; I looked at him, but he just kept coming. \n\n\"You people have already fucked with my life, so I have very little to lose. This will be quick, easy and very one-sided if you take another step towards me.\" \n\nEven he paused when he understood I meant it. Kitten put her hand out to stop him.\n\n\"I'm sorry.\"\n\n\"Then be sorry back in London. I've told you I can't help you.\"\n\n\"At least let me make this up to you.\"\n\nShe tried to say more, but I interrupted her. \"How are you going to do that? Both my daughters have now seen all this from the window. This is a birthday party, not a posh ball. Do you even want to take a guess at how many people are videoing all this ready to share with friends? Leave NOW.\"\n\nI spun on my heels and went inside. The limo was gone by the time I got back to the daughters and mothers.\n\nIt took my eldest to ask what the mothers wanted to. \"Who was that, daddy?\"\n\n\"The lady was lost, honey. I gave her directions.\"\n\nThere would have been little point in looking at the mothers; they hadn't bought it, even though I hoped Tessa had. I waited for an hour after they went to bed before I phoned my boss.\n\n\"You have got to get that woman off my back.\"\n\nI went on to explain what had happened and he had the nerve to laugh.\n\n\"I've had the tech boys dealing with the video fallout, and the local Police already have the security tape from McDonald's. She still has diplomatic immunity, Rick. Added to that, mommy is in town with the Secretary of State, and I know for a fact that Daddy is booked to be here in two days' time.\"\n\nHe heard me swear, and laughed again.\n\n\"Oh, trust me: I have only just started. God's brother wants you at Chequers tomorrow at five for a one on one. You may have little choice, Rick.\"\n\nIn my anger I lashed out. \"I always have a choice! I could resign.\"\n\n\"And I'm sure it will be accepted, two days after you help Kitten. He won't accept it before then, so live with it.\"\n\n*******\n\nHer mother was more on the subtle side; she was waiting for me at Chequers. If it was true what they said about looking to the mother to see what the daughter was going to be like later in life, then it was certain that Kitten was going to be a stone fox.\n\n\"Let me guess: the Prime Minister couldn't make it and, since you just happened to be in the neighborhood, you came instead?\"\n\nEven her smile gave me a hard-on.\n\n\"My daughter can be headstrong, Mr. Chalmers.\" She pointed to the chair in front of her. \"Please sit. I have come to beg, Mr. Chalmers, and it's ground I haven't trodden in some years so I'm a little rusty at it.\"\n\nAs hard as I tried not to, I did actually like this woman. For the next ten minutes I got a mother's version of what happened to Kitten when they got her home. The terrifying screams that broke a mother's heart as she held onto her daughter, and the demons that stole her daughter from her when night time came.\n\n\"In the long term she will be in therapy for some years to come, but it's the short term that scares me. Each evening she takes longer to get to sleep because she knows what awaits her when she does.\"\n\n\"I've told Kitten, and I can only repeat it to you. I CAN'T HELP HER.\"\n\nShe smiled when I called her daughter by her code name. I didn't know her real name, and wasn't interested in finding out. She was Kitten.\n\n\"She seems to think you can, Mr. Chalmers. I have tapes of the conversations she has had with her therapist. Purely illegal, I know, but I have to protect my daughter. She always goes back to one sentence when the therapist thinks he's making progress. She tells him that he wasn't there, and there was only ever one person there for her.\"\n\nEven looking at this woman I knew the pressure bearing down on her shoulders. With the comms system on I effectively lived in Kitten's head. I killed anyone that came close to her, and finally I was the dark figure that took her to safety.\n\n\"For two months she believed you were dead. It was only when she overheard my brother talking to my husband that she knew you were alive. She tells me she is broken, Mr. Chalmers. PLEASE - as a mother, I'm begging you. Please fix my daughter.\"\n\nFor some time we stared at each other. It wasn't a contest; I just looked at her and noticed the sadness in her eyes.\n\n\"I'm no shrink. I could do more harm than good.\"\n\nA smile came to her in a wave of relief as I'm sure she felt my resolve weakening.\n\n\"You're more man than many, Mr. Chalmers. I've read and heard everything there is to know about what happened that day and evening. You protected my daughter even before God's brother gave the order to do so.\"\n\nI winced. What we called the Prime Minister wasn't a closely guarded secret, but it wasn't too well known to our cousins across the pond - until now, that is. She just smiled right back as though she had found a secret she was willing to share with us.\n\n\"From what I know of you, Mr. Chalmers, you're a proud man, but please don't look on what I have to say next as anything but a mother's thanks for at least trying to help her daughter.\"\n\nThis time she leaned forward; her eye contact was total.\n\n\"My husband will be here tomorrow. Take Brooke back with you on our jet. We have a ranch in the Virginia countryside just outside Washington DC. Security will keep people out, and there are only two staff at the house, a chef and a maid. The whole place is yours until you feel you can help her no more.\"\n\n\"Brooke?\"\n\nShe laughed, slapping her thigh as if in triumph.\n\n\"I knew it by the way you kept calling her Kitten. You don't know her name, do you? My daughter is Brooke Madison Armstrong.\"\n\nEven I was confused and I think she knew what was coming next.\n\n\"Then why did her jacket say Macalister?\"\n\nThis time the smile came close to splitting her face.\n\n\"Because Macalister is my maiden name and of course General Shithead's last name.\"\n\nI held my forehead in my hand as she giggled, and I groaned. \"You've listened in to everything, haven't you?\" \n\nShe laughed so hard I thought she was heading for a heart attack. We talked logistics for a while. I did say I needed time to get Max and Beth on board. She countered by offering to intercede and maybe twist an arm or two so that my two girls and their grandparents could go to Disney World for three weeks.\n\n*******\n\nShe was standing by the steps to the private jet, watching me walk over. It looked a little small for my taste, but then again I was more used to cattle class on a Jumbo. Her hands were on her hips, so I knew she was going to bug me about something even before we got on the plane.\n\n\"So how come mother managed to get you to come with me and I couldn't?\"\n\n\"She has bigger tits than you do.\"\n\nI walked past her while she was still in the early stages of hyperventilating; by the time she got it together I was already sitting down and buckling myself in. She lasted until the wheels slid into the body of the plane before she tried again. \n\n\"You had better make sure Daddy doesn't hear you say something like that about Mommy.\"\n\n\"Why? He's a guy. Do you think he hasn't noticed that his wife has bigger tits than his daughter?\" Her face went straight to crimson, and stayed there for almost an hour. Even the flight attendant didn't want to go anywhere near her while she looked like that.\n\nI woke after my senses told me to wake and be quick about it, and didn't even have to scan the plane to find out why. The problem was right in front of me. Kitten was asleep in her seat, but her legs were under her, her blouse was bathed in sweat and her forehead glistened.\n\nMy hand reached for her forehead and ran down both her cheeks. I pushed the service button and the attendant appeared. She quickly came to a stop when she noticed why I had called her.\n\n\"You must have blankets on this plane; please get them. All of them.\"\n\nShe still stood frozen to the spot, so I had to let go of Kitten and reach for the attendant. It still took me gently shaking her for a moment for her to even notice I was doing it.\n\n\"Please, get me as many blankets as you can find.\"\n\nThis time she nodded her head and left.\n\nBeing gentle wasn't on my list of things to do, so I pulled Kitten off her seat and laid her on the floor. Other than shuddering occasionally, not much changed. The flight attendant came back with two blankets, and told me she would be back with four more when she could get one of the pilots to help her in the storage compartment.\n\nAfter thanking her I pulled one of the blankets open and wrapped Kitten in it. She was still shaking so I added the other. It took ten minutes for the pilot and flight attendant to come back with the last four blankets. The pilot left, and the attendant and I were still sitting either side of Kitten forty minutes later when she woke up. The attendant just smiled, more from relief I suspect, and got up off the floor so that I could get Kitten up and back into her seat.\n\nWhen the blankets fell away from her, she pulled her blouse away from her body and had one of those \"yuck\" looks on her face as she did. The attendant appeared from nowhere with a shirt in her hand. Since our cases were in the hold, one of the pilots had donated one of his shirts to her. Kitten brightened up at that and thanked her. She asked the attendant if she would give her ten minutes and ask the pilot to come out so she could thank him personally. \n\nI watched all this in silent amusement. I even got a look at her tits, albeit still in her bra, as she changed in front of me.\n\n\"What? You know there's not enough room to do this in the toilet!\" The knowing smirk she wore as she said this let me know that it wasn't the only reason. The pilot got a hug and a \"thank you\" for being so thoughtful. Judging by his age and the ring on his finger, I assumed that he had a daughter around the same age, and that his paternal instincts had kicked in pretty easily.\n\n*******\n\nA limo was waiting for us as we landed. I think the driver doubled up as security, because he wouldn't have looked out of place as a linebacker in any football team. The privacy glass was already on the way up as the car moved forward. I was curious as to just how far Kitten would open up in her conversations, now that we were safely on the ground and in territory that was familiar to her. Once she had woken up on the plane she would only speak about general things, avoiding anything to do with the place that had given her the nightmares.\n\nBy the time we had pulled up in front of the ranch house she barely had anything to say at all. She was scared; Brooke had wanted my help and, now it was all happening, she was scared. Her mother was right about security round the place. Every second guy had a guard dog attached to his arm; those that didn't looked like they didn't need one.\n\n\"I'm going to bed to rest for an hour. Maria will show you to your room.\"\n\nKitten wouldn't look at me, and I knew why: she was afraid of what came next. I had to get her to face her demons, and I had a good idea of how to start. What I needed I got from Maria; her face showed her confusion but she wasn't going to ask questions. When Kitten came downstairs I was waiting for her. Maria came into the day room and asked us both if we needed anything and, after she got a drink for Kitten, she left us alone.\n\nFor her part Kitten spotted the dog collar on the coffee table next to me, but said nothing until we were alone again.\n\n\"What's with the collar?\" \n\n\"It's for you.\" I reached for it and held it out towards her. \"Take your clothes off and put this on; from now on you're my slave. As such, I can and will do what I wish with you. Oh, and I like pierced nipples on my slaves, so tomorrow we're going to look at getting them done for you.\"\n\nHer face was a picture of shock and disgust as I continued my speech on how I had looked into branding but I might leave that for a month or two yet. I had also checked out some of the sites on the internet before we left and found two places in the Washington area where Masters and slaves meet and share. In all the time I was saying this I still held out the dog collar and all she did was look at it and then me.\n\nThe stable got a mention as well when I told her that I would need to borrow a couple of riding crops to warm her backside for now until I could establish a play room. Finally, and to my relief because I was running out of things to say that I was going to do to her, she just snapped. She stood up and screamed at me, even bending down towards me slightly to add to the effect.\n\n\"I'm NOT your fucking slave, and never will be!\" \n\nPutting the collar back on the table, I looked once again at Kitten. She hadn't moved; her chest was moving back and forth at an increased rate showing me that she was still struggling to keep her own emotions in check.\n\n\"But you're a slave to your demons, Brooke, and that has to stop. It's you who controls your life: not them.\"\n\nSo much flashed across her face all at once. She knew I had forced her to stand up for herself, and the dog collar was just a prop to get her there. Her lips quivered as something else dawned on her.\n\nIn a voice barely above a whisper she said, \"I'm not Brooke, I'm Kitten.\"\n\nI shot out of my seat as I noticed her arms about to wrap themselves around herself and, as I hugged her, she burst into tears. As her knees gave way, I held her up and carried her to the couch, laying her on it as I sat on the floor next to her head, her hand in mine. She looked terrible; crying had made her eyes swollen and red, snot ran down her cheek to be wiped away when she realized it was there, and her cheeks had a healthy red tinge to them.\n\n\"YOUR NAME IS BROOKE! Kitten was a code name assigned to you by me, because we use codes on the radio - not names.\"\n\n\"Even when the Marines came for me they called me Kitten! I have Macalister on my jacket, but no one called me that.\"\n\n\"You were still in an operational zone, and they were given Kitten as your designation. You could have had Mahatma Gandhi on your jacket for all they cared, but they still wouldn't have called you that.\" \n\nHer eyes gave her away: she was drifting from one thought to another. It was time to get her back into motion.\n\n\"Get showered and come down in something comfortable to walk in. We're going outside for a couple of hours.\"\n\nI got up off the floor and then helped her off the couch. When she came down again an hour later I was holding the collar in my hand. She looked at it and then me, an eyebrow raised in mute inquiry.\n\n\"I figured I may as well return this to the security guys on our walk, since you don't want to wear it.\"\n\nThis time I got a punch on the arm for my troubles. Brooke gave me the ten cent tour of the grounds, but we weren't alone - the security people were never more than a few feet away.\n\n\"When do you return to unit?\" I asked.\n\nHer step faltered, and I watched the conflict cross her face. \"Officially I have another three months' leave.\"\n\nIt took an effort to remember why we were here. \"You're worried that you will still be broken when you go back?\"\n\nShe nodded her head.\n\n\"This isn't like catching a cold or having a bout of the flu, Brooke. You don't have it and get over it.\"\n\nIt was the contrast that struck me. The estate was so beautiful, but we were talking about something that happened thousands of miles away in a featureless town with a barren desert landscape in the background. I could only suppose that, in her eyes, this beauty was now tainted. She had a classic case of survivor's guilt: while I watched them all die from a distance through a scope, she was beside them. She was a medic, yet couldn't save any of them.\n\nHell, I was there as support and, no matter how quickly I killed one insurgent, another took his place. That's just how outnumbered her team were that day.\n\n*******\n\nSince we were all in the same time zone I would phone my girls daily. This was new for them, since they had come to accept that, when daddy went away, they didn't get to see or talk to him until he came back. The girls fell over themselves in telling me the things they saw that day and the food in the hotel. I always talked to Max and Beth last, getting the feeling that this holiday had taken a few years off. There's a saying about seeing things through your grandchildren's eyes. They always seemed to finish our conversations by telling me to look after myself.\n\nBrooke came down one morning and watched as I got out of one of the security guy's vehicles. She leant on the post as I shook the driver's hand and walked back to the house. I did say \"morning\" as I passed her, but I guess that wasn't enough. Mind you, she did leave it until we sat for breakfast.\n\n\"Want to tell me what you're up to?\"\n\n\"You and I are on a collision course with the chef's cooking.\"\n\nJust to emphasize my point I slapped my stomach. In her rush towards confusion her mind just kept going instead of stopping to think.\n\n\"Are you calling me fat?\"\n\nNow that amused the heck out of me. \"We're in a country that has it in its Constitution the right to bear arms. Not only that, I've seen up close how handy you are with a knife, so do you honestly think I'm stupid enough to suggest that?\"\n\nBrooke had the decency to look just a little sheepish.\n\n\"I did seem to remember some days back mentioning that I was on leave.\"\n\n\"Yep, I heard that.\"\n\nI did get the impression she took the fat comment to heart, mostly reinforced when she said she wanted to stay close to home today and came down after breakfast in a bikini that left little to the imagination. I sure made myself scarce when she wandered around the pool with sunscreen lotion in her hand. I bluffed a little when she saw me with my cell in my hand, and pretended to talk to my daughters.",
        "That was the thing about this place; you could run, but you couldn't hide. Brooke found me reading a book in the library.\n\n\"My back needs doing, and I can't find Maria.\"\n\nWhen I looked up I damn near dropped the book. The only thing between her and that skinny bikini was a nearly see-through wrap thing that wasn't even worth wearing, and that sunscreen bottle was still in her hand.\n\n\"Couldn't one of the security people do it?\"\n\nThe shrug of her shoulders was just as casual. \"Probably, but I'm not getting one of them from the gate down here when you're in the house. And that reminds me: why are you in the house instead of sunning it up and keeping me company?\"\n\n\"Because you're naked and I'm respecting your virtue.\"\n\nAt least she had the decency to look down at what she was wearing, but when she looked up her eyes held so much mischief.\n\n\"I still remember a conversation that already had me naked all day, every day, around you.\"\n\nMinutes later I was slapping sunscreen on her back while she lay prone. She wanted to know why we needed to run every morning since she was on leave. I did point out to her that this was her leave, not mine, and I would be running at seven sharp so that I would be done before the sun got up to strength.\n\nOnce I slapped her backside with one hand and handed her the sunscreen with the other I stood to go back into the house.\n\n\"Rick?\"\n\nI stopped and turned to look at her. She had adjusted her position so that she could watch me from her recliner.\n\n\"I promise I won't look, and I even promise to just do your back for you. Let's just enjoy a sunny day out here for a change, rather than being stuck inside.\"\n\nI've always been a sucker for puppy-dog eyes, and I strongly suspect that it's taught from the age of pre-school. Other than nod my head and go back into the house to change, I said nothing. I'm almost sure I heard Brooke say something in a whisper to herself that sounded a lot like \"yes,\" although I couldn't be sure. Minutes later I came out in shorts, with a towel over my shoulder.\n\n\"Before you start getting ahead of yourself, I'm not swimming. If we go into town then I'm getting trunks. If not, then it's sun time out here.\"\n\nHer mouth still hung open, even when I sat in the chair next to her. Finally, feeling really weird about Brooke not only staring but having a case of wandering eyes, I had to ask. \"What?\"\n\n\"I figured you would be ribbed, considering the job you do, but I didn't figure on how buff you would be.\"\n\nFeeling my cheeks go ever so slightly warm, I asked \"Do people still use that word?\"\n\nBrooke just shrugged her shoulders. As far as she was concerned, she did, so that's all that mattered. We talked about anything that came to either of us, and I was just starting to think that maybe she was going to be all right once she got cozier with a therapist. It was then that she wanted to do my back before I burned. \n\n\"What the fuck happened to your back? Shit, it's all down your legs as well!\"\n\nI spun round and grabbed her hand, her eyes still large and, although she was talking, I was hearing much more gibberish than English. This was the wrong position for me, so I sat next to her, putting the sunscreen bottle on the table beside the recliner. Thinking that she would calm down if I left her long enough was a pure false hope.\n\n\"I'm front line, Brooke. In your haste to feel guilty about your circumstances back in that square, you stopped short of realizing that most of us carry baggage. Some emotional like yours; some physical like mine.\"\n\nAlthough her mouth moved from time to time, she stayed quiet as I explained a rather unusual job I was given. Initially I was sent in as lead scout/sniper. What I found when I got there was the man our country considered the most dangerous of them all. He stayed alive longer than most because he was always suspicious of everything. Finding him was so unexpected that it even caught God's brother unaware.\n\nMy task changed to watching his movements while those upstairs decided what to do: take him, or drop a surprise on him. Of course, suspicious man just kept looking my way, and even sent a few of his guys up the hill to check on his own hunch. When they found nothing I thought that was the end of it, but within minutes air burst explosions covered the hill top. I was slightly lower down than the top of the hill, but still caught a chunk of it. \n\nTo me, I thought I had covered enough for her to stop asking. Silly me!\n\n\"OK, so then what happened? You can't just leave me hanging like that! It's plain to see you got out of it, but how?\"\n\nThe pain was excruciating. A quick hand check of my back revealed too much blood. My legs felt like lead, and my failing concentration worried me. The words \"sitting duck\" came to mind right about then. At best I may have been able to crawl a few yards, but the blood trail would have lead them to any position I moved to.\n\nFlight was out; it was time to fight. I took aim and, when I felt my concentration at its highest, I put two holes in Mr. Suspicious and then pulled my radio out from under me and gave a mortar platoon some work for the next ten minutes. The next part was perhaps the hardest: staying awake. The helicopter would never have found me on its own, and you had to be conscious to lay down smoke.\n\nWe both went inside for cold drinks, putting my top back on when I did. Brooke retaliated by wandering around the kitchen in that excuse for a bikini.\n\n\"I won't allow my children to see me like this; I have to let their grandparents take them swimming. At the moment they don't think it's odd that I wear a shirt and track bottoms on sunny days, but they're smart children so it's not going to be long before they do.\"\n\n\"What will you do then?\"\n\nShrugging my shoulders felt like a cop-out. The truth was I just didn't know.\n\n\"I'm hardly a poster boy for helping you with your PTSD, am I?\"\n\nBrooke launched herself across what little space was between us and gave me a hug, something I wasn't expecting. The thought of all that nakedness this close to me got my heart racing. I was polite and hugged her back, and then gently pushed her back before I found a need to adjust my pants. \n\nIt was her knowing smile that gave it away: I hadn't been quick enough to put some space between us. She called out to Maria for soft drinks in the day room as she practically ran up the stairs to change. As the staircase divided half way up and she took a left, I got a good long look at how her chest moved before she finally reached the top. The drinks came out and Maria was gone before Brooke came back. She was dressed, but I would have to use that term loosely. \n\nA baggy t-shirt that stopped just below her hips, and shorts that fitted her like a second skin. The jiggle of her tits when she walked gave away the lack of a bra, and what also seemed to be the norm for her was bare feet. Brooke dropped onto the couch across from me, and grabbed her iced tea before leaning back and sliding her feet under her.\n\n\"I'm sorry.\"\n\nWhen she noticed my look of confusion she continued.\n\n\"You are Halo.\"\n\nShe knew I was going to interrupt and correct her, but one of her hands came away from the glass she was holding to stop me.\n\n\"Please: let me finish.\"\n\nThere was something about her eyes that made me do as she asked; a sadness I had only ever seen at funerals.\n\n\"You are Halo. When my world imploded and I was all alone in that little square you were my guardian angel.\"\n\nBrooke's eyes went to her glass and her face almost took on a vacant look as she spoke. She had watched all of her team die; even the two men left after the run across the square were gone within seconds of each other, leaving her alone. It was then that people around her started to die, and she couldn't understand why. A part of her had already accepted she was going to die, and yet no one got close enough. When the bodies started to stack up she realized she wasn't alone anymore.\n\nWhen she felt the first bullet come within inches of the dead lieutenant's head Brooke had put it down to a stray, and then another landed in exactly the same place. It slowly dawned on her that someone else out there was on her side and, within minutes, her guardian angel had a voice. I now lived in her head and, for the first time since the death of her colleagues, she felt hope.\n\n\"The selfish part of me wanted to swap places with you.\"\n\nI smiled, thinking that was funny. Sadly, the look she gave me showed me that this woman in front of me was being brutally honest, both with me and, for perhaps the first time in her life, herself.\n\n\"My Halo was keeping me alive, and all I wanted to do was put you there and me elsewhere.\" Even as she paused her eyes looked around the room, her hand following her gaze for a moment before once again resting on her glass. \n\n\"I wanted to be here. I was there because they needed a medic, and when it all went to shit my only response was to put you in the line of fire so I could go and hide.\"\n\nHer emotions were catching up with her and the tears fell down her face, remaining unchecked as she clutched her glass of tea like a liferaft.\n\n\"I didn't want to die, Rick, and I'm embarrassed to say that, at the time, I would have gladly swapped places with you and just kept going.\"\n\nShe felt shame, both at being alive and for thinking that, if she had the power to swap places with me, she wouldn't have hung around for the order to keep me alive.\n\n*******\n\n\"You know you're talking crap, don't you?\"\n\nThe look on Brooke's face was almost the same as if I had gone over and slapped her.\n\nI had watched them enter the square, and quickly figured out where the gunman was that killed the lieutenant. The house next to that one came alive when the corporal went down, as did the various houses that the insurgents came out over that day to try and snatch Kitten away. Most would have relied on their sidearm, yet she instinctively went for her knife. Hand to hand is taught to us all. \n\nIt's only a few that perfect the art. The urge to survive may have pushed her onwards, but it was instinct that put a knife in her hand because she was far more confident with it. Not once, but twice, and when I grabbed her to keep her quiet it's what she went for first yet again. Yes, Brooke was in a hole and couldn't get out but, as she realized this, her humor saw her through.\n\nBrooke went to argue my conclusion, but a polite cough from Maria told us that dinner was ready. We both had to look at the clock on the wall to realize that we had talked for almost three hours.\n\n\"Are you dressing for dinner?\"\n\nShe raised an eyebrow and then got off the couch heading for the nice smells coming from the dinner table. Being a gentleman, I followed those swaying hips all the way. \n\n*******\n\nIt was just before seven the next morning when I walked into her bedroom. It seemed pretty obvious that she thought I had been bluffing. It was warm in her room and her naked form was face down, breathing softly. Well, at least until my hand slapped her backside. She let out such a scream that I'm just glad I had warned Maria what I was doing. She must have phoned security from the kitchen, as they didn't come rushing in.\n\nThe gentleman in me was walking away so I didn't get to see the front. Mind you, the supposed bikini she had worn the day before meant I didn't have to connect too many dots to join in what it covered. \n\n\"Get your backside out of bed, Brooke! We have five miles to kill.\"\n\n\"You fucking...\" \n\nI never did hear the last bit. Her bedroom door was shut by then, plus I was three steps down the stairs as well. The front door shook as she slammed it, her face a picture of anger.\n\n\"You come into my room again uninvited and I will shoot you before you get two feet past the door! Do I make myself clear, mister?\" \n\n\"Well, I see you've done your warm up, so let's go.\"\n\nNow, I have seen some competitive women in my time, but Brooke was right up there with the best of them. I set the pace and she matched it for a few hundred yards, then put herself in front of me. So, of course, I just had to match that, and a few hundred yards later... you get the picture, right? By the time we had got to the last five hundred yards of the course it was at a sprint.\n\nI'm almost sure we were the entertainment for the morning when it came to the security people. We reached the steps to the ranch house together at an all-out sprint.\n\n\"Warm down, Brooke.\"\n\n\"Go fuck yourself!\"\n\nThose words had just left her when she was suddenly looking up at the sky. My hand on her chest caused her tits to separate.\n\n\"I asked politely. Don't make me ask NOT so politely in future.\"\n\nWhat she saw in my face made her stop and mentally take a step back. She placed both hands on my wrist and I pulled her up. She kept her mouth shut for the next ten minutes while we warmed down, and remained tight-lipped once we were done and she left to take a shower.\n\nIt was the silent treatment all through breakfast that amused me. I felt sure that wasn't going to last, though, and sure enough, as she got up and headed for the stairs, she said \"I'm going out.\"\n\n\"Fine; but be back before six. We have someplace to go this evening.\"\n\nI'm almost sure curiosity made her stop and turn around. Her still being pissed at me quickly muddied that pool.\n\n\"I'm over twenty-one, and you're not my folks.\"\n\nAll I did was shrug my shoulders and carry on eating. She was dressed and gone within an hour. I enjoyed the pool and sunbathed for the day, packed up by five, and by five past six my cab was pulling up at the ranch house.\n\n*******\n\nIt was late evening when the commercial flight landed in Orlando, so I took a hotel room for the night and joined them for breakfast. Tessa and Olivia were so happy to see me, but their grandparents looked worried. They kept that to themselves until we managed to get both girls in the children's pool at the hotel, and I told them everything was fine. We were all sitting down to dinner when my cell rang. It wasn't a number I recognized, so I excused myself from the table.\n\n\"My daughter seems to be on her own at the ranch house, Mr. Chalmers.\"\n\nI smiled. \"Your daughter is a strong-willed young lady, ma'am.\"\n\nThe laughter sounded genuine.\n\n\"Are you two having a game of who has the biggest set of balls, Mr. Chalmers?\"\n\n\"No, ma'am. But, short of putting her across my knee, I'll have to let her have her way. She doesn't need my help, and has told me that.\"\n\n\"Well, I must say your help is somewhat out of the box, and I'm not surprised that going into my daughter's room to wake her that way would put her on the defensive.\" \n\nWas there anything this woman didn't know? \n\n\"My security people seem to be having bets on the outcome of this head-butting contest you're in, Mr. Chalmers. Do you plan on returning now that I have found you?\"\n\n\"No ma'am. I plan to see out my holiday with my children and go home to some peace.\"\n\nThere was silence at the other end and, for some reason, I felt the need to fill in the awkward moment.\n\n\"Your daughter has the stones to get through this survivor's guilt, ma'am; she's just a little lost at the moment. I'm no doctor, so I can only go by what I can see, and that is that you have a great daughter who went through a traumatic time and, when she finally comes up for air, someone should tell her that.\"\n\nShe laughed again, only this time I didn't think I had made a funny.\n\n\"Somehow I thought you would say that, Mr. Chalmers. Please enjoy your holiday; there is plenty to do in Disney World, even for the adults.\"\n\nI looked around the restaurant; unsure why, but I did it anyway. Nothing seemed out of sorts but, then again, I wasn't factoring in a mother with her own daughter's interests at heart. We were still enjoying our meal when the duty manager came and stood beside me. He leaned down and whispered into my ear that the management had been told to allocate me a larger room free of charge.\n\nWhen I asked why, he mentioned that my party was here as the guests of the owners, and I was to be given the same privileges. If I gave him the key to my room my stuff would be transferred immediately. Since I was the only one hearing all this, both children and grandparents alike just sat confused, even more so when I pulled out my room key and handed it to him. \n\nStupid of me I know and, with hindsight scurrying for cover, I believed the man. We took in a show, and the duty manager came back later with the key to my new room. It was a fun evening, and reading stories to my two girls at bedtime so their grandparents could have at least some time to themselves pleased them as well. I kissed the girls goodnight and waited an hour for Max and Beth to get back.\n\nThe light was on when I opened the door to my room. Brooke was sitting on one of the two queen size beds in a t-shirt and shorts, resting her chin on her knee as she painted her nails. \n\nShe looked up and smiled. \"Surprise!\" \n\nI waited until I hung my jacket first before saying anything.\n\n\"I suppose I should be pissed off. Let me guess: your mother?\"\n\nHer voice followed me to the bathroom. \"Half right; it was both of them. Ever had a conference call with your folks?\"\n\nSomehow I suspected that was a rhetorical question. \n\n\"Well I got chewed out by my folks for my attitude and what we both got up to at the ranch house. Mom said that, since you weren't coming back, there was only one solution.\"\n\nI came out of the bathroom in time to see her eyes follow her hands around the room, and her saying \"ta-dah\" seemed to have that full stop moment. Well, almost. Her mouth formed an O and her eyes did a full body scan of me.\n\n\"Um...have you forgotten you have a guest?\"\n\n\"Correction. I have an uninvited guest in my room and, since it's been a long day, I'm going to bed. As you may have noticed, I sleep naked.\"\n\nBrooke was still looking. \"Oh, I noticed! Want me to join you?\"\n\n\"Nope. That's your bed; this is mine.\"\n\nShe wasn't talking beds. As I was making myself comfortable she was already pulling her t-shirt off. It was perhaps time that I reminded myself that she was uncomfortably close in attitude to me. This was clearly one of those \"you started it, so I'm finishing it\" moments with her. Once her shorts hit the floor she again assumed the contorted position she had been in to finish painting her nails.\n\n\"We still on for seven?\" \n\nThe \"mmhhmm\" she got was as sleep took me.\n\n*******\n\nIt was the pain that came first. Opening my eyes a second later, although my mind was trying to tell me, it still took my hand to feel my backside for realization to grab a firm hold. She was already dressed in her running kit.\n\n\"See you in the gym downstairs in ten.\"\n\nMy hand was still feeling for blood; the bitch had bitten my backside to wake me up! Brooke was already warming up in the gym when I found her.\n\n\"Your choice - the hotel gave me a five mile route that the joggers use, or we could use the treadmills.\"\n\n\"You bit my bum.\"\n\nShe smiled, and then wandered over to the treadmill, turning it on so that it started life at a steady walk.\n\n\"I bit your ass. Go on - say 'ass.'\"\n\n\"Arse.\"\n\nHer hand went to the dial, and she was now on a slow jog.\n\n\"Nope! Not good enough! You still sound like an up-tight Englishman when you say that. Say 'ass.'\"\n\nShe was baiting me, and this early in the morning I was too stupid to notice. I stepped on the other treadmill and quickly caught up with her.\n\n\"Whatever. You still bit it.\"\n\n\"It took some doing as well! You were on your back when I woke, and the thought of biting that did make me stop and think about my original plan.\"\n\nI stopped. The machine didn't, and shoved me off the other end. I tottered for a second before momentum and gravity settled the issue. She laughed so much she forgot she was on a treadmill as well, and her machine put her on the floor next to me. Members of the gym team came to see if we were OK, and we somewhat sheepishly thanked them. ",
        "We had been back on the machines a good ten minutes when she started again.\n\n\"See. If you had said \"ass\" then we wouldn't be gossip material for the gym instructors for the day.\"\n\n\"This is me not listening to you, Brooke.\"\n\nShe had one of those pregnant pause moments before her hand went to the front of the treadmill and her speed lowered to a walk.\n\n\"My name is Brooke, and yet when you say it it doesn't sound like my name.\"\n\nI slowed my machine down and then off. My hand went to hers and she stepped off hers as well. One of the gym personnel came over to see if we needed anything, so I pointed to the sauna and asked if it could be \"out of use\" for half an hour. She tried to hide a smirk, but I just couldn't be bothered to set her straight.\n\nOne of the other gym people met us halfway there, handed us towels and placed the \"Out of Order\" sign on the door. I opened it and pushed Brooke in.\n\n\"Strip and go sit over there.\"\n\nShe did that O thing with her mouth once again. I just looked at her for a moment before saying, \"Really? You were buck naked in my room all night, and NOW you're freaking out?\"\n\nShe had already kicked off her sneakers, and her socks were next. I matched her as best I could, but still found my eyes wandering over that body of hers. Even I had to admit to wondering if there was a female version of the word \"buff.\" I had been so out of practice with women since my wife had died, yet here I was ordering a naked one around. Brooke grabbed her towel and sat with her legs up on the seat, looking at me. Thank goodness she had her legs crossed so I could concentrate on her face.\n\n\"Now, let's get something straight. Your name is Brooke Madison Armstrong. That is the core you; that is who you grew up as, and still are now. That changed for a brief day when you had to be Kitten. Again, HAD to be.\"\n\nShe seemed to take in everything I said, but I could see that one question hovering behind her eyes would soon come out.\n\n\"So why are we naked?\"\n\nI didn't get a chance to hide my smile, and thankfully she joined in.\n\n\"Because you seem to pay attention better this way.\"\n\nMy hand went out to her and she watched it for a moment before she shook it.\n\n\"My name is Rick Chalmers, father of two daughters, and I'm pleased to meet you.\"\n\nA thoughtful crease came to her brow, but she shook hands with me anyway. \n\n\"I am Halo Two-Five out there, Brooke. It doesn't interfere with my family because I won't allow my daughters to know what I do. At some point in their lives they will realize something is missing, like a nine to five job, and until then I will be Halo Two-Five. Once that realization comes to them, and they find the courage to ask me, my life changes and Halo will cease to exist.\"\n\nBrooke still seemed to be thinking about what I had said. It was perhaps time to try again.\n\n\"I'm going to try and arrange something for this week. I want you to meet some people. Be honest with them, and they will be with you.\"\n\n\"Something along the lines of what you set up before I went all bitch on you back at the ranch house?\"\n\nShe caught me smiling again, and I nodded my head, then stood and held out my hand. It confused her for a moment, but she grasped it and I helped her off the seat. It wasn't a race getting dressed again. The gym assistant got her towels back and Brooke and I went to our room. Even after we showered and started to dress again I still had to broach a subject with her, and wasn't sure how to start.\n\n\"Brooke... I...\"\n\nWhen she looked up at me she knew. I don't know how, but she did.\n\n\"It's OK. You're here with family, and I'm still the damaged woman.\"\n\nShe was smiling when she said that, so I wasn't going to take her to task over it. But she was right about her being here complicating my life. How was I going to explain who she was? The questions from Max and Beth would have brought both my lives once again into the spotlight. I met my girls for breakfast, and spotted Brooke about half an hour later sitting alone at a corner table.\n\nWhen I suggested a picnic at one of the parks, both my girls inhaled what was left of breakfast, and their grandparents went off to get them ready while I went to talk to the hotel management. Thankfully they got a basket together for us while I made a phone call to Brooke's mother.\n\nShe answered on the third ring. \"Good morning, Mr. Chalmers. I trust my little surprise went well last night? I'm told that you even shared a moment in the sauna this morning as well.\"\n\nThe pause allowed her to laugh at my hesitation. For the next ten minutes we talked, and I refused to grab hold of the bait she would drop into the conversation as we did. Finally admitting defeat, the mother in her came out and she listened to what I wanted her to arrange for me. Although she could see the benefit, she had to admit that it would take a couple of days to organize, even for her.\n\n\"And just how am I supposed to keep your daughter at arm's length for that long?\"\n\nThat laugh of hers filled my ear. \"I'm told the distance between your beds is three feet, Mr. Chalmers. Perhaps if you both wore pajamas at night those three feet might even remain enough.\"\n\nThe click on my phone seemed to be the end of that conversation. The urge to look around to see what hotel camera she was watching me on was almost overwhelming. Yet the strangest thing was that I still liked her, despite anything said in any of our conversations. She would often prove to me she knew more than she ever let on, but she was never judgmental about it."
    ],
    "authorname": "markelly",
    "tags": [
        "sniper",
        "combat",
        "medic",
        "protection",
        "therapy",
        "morning run"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/halo-two-five-ch-01"
}