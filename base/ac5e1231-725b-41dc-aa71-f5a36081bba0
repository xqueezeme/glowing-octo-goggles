{
    "title": "My Little Ventrue Pt. 03 Ch. 08",
    "pages": [
        "~~Jack~~\n\nThe meeting with the Invictus triumvirate went better than he expected. He told Julias first, about the werewolves, and then Julias insisted he tell the triumvirate as a whole; the problem was bigger than just him. So Jack scheduled a meeting to stand before the council, and like filing a report, detailed the issue with the werewolves.\n\nConveniently, he told no one he felt the werewolves might have been hunting Fiona. It'd have been an assumption, not enough evidence. And Fiona stuck around for a while when she visited that night; she was fun, and nice. Why would the wolves be hunting her?\n\nDid Natasha tell the Prince though, that was the question. He wanted to leave Fiona out of it, and he didn't put it above the Invictus to throw Fiona to the wolves \u2014 literally \u2014 to keep the Uratha out of Dolareido. And he kind of liked her. He hoped Antoinette would like her too, or she was well within her right to do more than throw Fiona to the Uratha, she could just kill her herself.\n\nHe did tell the triumvirate that he wanted to introduce a newcomer to Dolareido though, a Begotten. It'd earned some groans from the three of them. Apparently they knew about such monsters, and none of them seemed excited at having one of them in the city. But none of them seemed overly concerned either, so that was good. He also left out the part that Damien and Fiona were friends of a sort. Didn't need to make that man's journey any harder.\n\nA meeting with the Primogen though, he had no idea how that was going to go. Never done it, never wanted to do it. It was going to be his first meeting with the strongest Kindred of the city and he was already trying to figure out ways to cut corners on information for his own gain, for his friends' gain. One misstep and he was going to end up pissing off everyone. And yet he stood in front of the Elysium building with Fiona beside him, staring up at the glass tower, sighing.\n\nHow many times had he stood in front of this tower and smiled, excited to get inside, to talk to Antoinette and chat about music or life? Dozens. Now he was fidgeting, anxious, and dread was sitting in his stomach like rocks.\n\n\"Ye alright?\" Fiona said.\n\n\"Yeah, yeah I... I don't know.\"\n\n\"What's the worry?\"\n\n\"I... I'm dating the Prince.\"\n\n\"... ye're what?\"\n\n\"The Prince is my girlfriend... we love each other.\"\n\n\"Oh, that is nae something I expected. Damien said you stopped him from killing her \u2014 still very much in the mirk about all that by the way \u2014 but I didnae realize you two were an item.\" Fiona grinned and bounced in front of him. \"He said she was ancient.\" \n\n\"She is.\"\n\n\"And ye're very young. Young as me.\"\n\n\"Yeah.\"\n\n\"Well, ye love her. I'm guessing she's an intelligent, wise person?\"\n\n\"... she is.\"\n\nFiona shrugged and started to walk around him in circles. \"Then what's the problem?\"\n\n\"I have to talk to her about city matters. I have to try and control a conversation about serious shit that has nothing to do with her and me, but it's putting us against each other.\"\n\n\"Against? I thought ye said the werewolves just wanted ye to be the middleman in their talks.\"\n\nThe monster sat down on the steps of the tower, and stretched her arms over her head. Jack was in his typical Invictus business suit, but they had to find something for Fiona to wear; no way she'd be wearing jeans and a leather jacket to such a meeting. Natasha and Damien helped find her something a little less street, a little more business. Some gray business pants and a nice chestnut blouse with frilly cleavage. It looked good on the curvy creature.\n\n\"Yeah, you're right, but I doubt things are going to go that smooth. I'm going to have to argue the wolves' side, and then argue the Primogen's side, and then her side.\"\n\n\"I think ye're making things bad before they're bad. Besides, if ye're the middleman, maybe ye can be a mediator? Ye'll get to see both sides like ye said, so ye'll be in a better position than anyone to stop shit from going crazy.\"\n\nStop shit from going crazy. He laughed and set his face in his palm.\n\n\"My life has been one nonstop train of crazy since I was embraced, Fiona. I just... was kind of hoping the train would stop for a while.\"\n\nFiona hopped up, put an arm around his neck, and started to walk him toward the building.\n\n\"Sound like ye're pretty happy with the Prince. Why Prince, anyway? Antoinette's a lass, aye?\"\n\n\"Old title Kindred have used for a long time. Not sure where it came from.\" The Lancea et Sanctum records might, if Damien still had any, if Garry hadn't destroyed it. \"And we are very happy. It... it's fucking amazing, and I'm fucking terrified this is going to drive a wedge between us.\"\n\n\"Ye trust her?\"\n\n\"Yeah, a lot.\"\n\n\"And ye ken she loves ye like ye love her?\"\n\n\"Yeah.\"\n\nFiona shook her head, frowned at him, and shook him a few times. \"Then stop being a moron. Even if, for some silly reason, everything burns to the ground and ye're stuck in the middle between wolves and vampires, yer relationship is the stuff of legends. Legends! Movies are made and books written about this sort of romance.\" Despite being in the lobby of the Elysium tower, Fiona squeaked like an excited pig, a sort of squee sound, and jumped around a few times in a circle. \"I can't wait to meet her.\"\n\nFiona reminded him of someone. His sister Mary maybe, only because she seemed to run with small romance ideas and explode them into grand tales. Mary had inherited all the enthusiasm and jovial romanticism. He'd inherited a sarcastic bite and realist mindset.\n\n\"Jacob and Garry will be there too,\" he said. \"You're going to be in a room with a bunch of vampires, ages one hundred to five hundred. Ancient, hungry, and protective of their property. How can you be so excited?\"\n\n\"Sorry, just how I deal. I get nervous, I get excited. Like skydiving.\"\n\nJack felt his dead, withered stomach try and force up some nonexistent food. Jumping out of a plane was not something he could ever see himself getting excited about.\n\n\"You ok there Terry? Looking like you're about to get bitten by a dog.\" Chunk leaned over his desk and raised a brow at him as he walked by. \"Got a girl with ya though, and ain't she a cutie.\"\n\nFiona raised a brow at the heavy, bald man sitting behind the front desk. There were some other guards sitting around too, working at their computers, tapping away at their keyboards \u2014 no idea what a guard did on a computer \u2014 while Chunk looked at the two creatures.\n\n\"Ye're not too bad looking yerself,\" she said, chuckling.\n\n\"The Prince won't be too happy though,\" Chunk said, \"about you getting a girl.\"\n\nYeah, cause that was the real concern, a miscommunication about a girl, not the horrors crawling into their lives.\n\n\"Friend of mine. Has the council meeting started?\"\n\n\"Yeap. Just go right on to the top floor there, Mister Terry.\"\n\nIf only an Invictus was calling him Mister, it'd have some real weight then. Mister Terry, like Mister Mire. Powerful, and buried in responsibilities. Halfway there.\n\nJack nodded, and continued walking to the elevators of the grand lobby. Each step heavy, and slow, dragging through mud and all the cold sludge of inevitability. As the guards resumed their work, each clop of his fancy shoes echoed, and each earned a small wince. Fiona was fidgeting and bouncing behind him, glancing around and taking in the sights as best she could despite walking into the den of predators.\n\nCome on Jack, you've walked this lobby hundreds of times, and you've talked with Antoinette hundreds of times. The Primogen are predators, yes, but their leader is your girlfriend, your love, not to mention Julias will be there too, and Fiona's done nothing to warrant any action against her. She hasn't given up the Masquerade, and she hasn't damaged the food supply too much. Calm down.\n\nOr it wasn't Fiona he was genuinely worried about. The werewolves? He didn't know them, and as terrifying as the pack of wolves were \u2014 yeap, terrifying, no getting around that description \u2014 he wasn't really worrying about them either. Not right now at least. His earlier night with Antoinette had settled his worries for a little while, insuring him this meeting would not affect them, but now, as he stepped onto the elevator with the Begotten, all his worries were coming back.\n\nThe whole situation reeked of impending struggles for their relationship. It was his first real relationship, and if he lost it, he didn't know what he'd do. The knot in his stomach grew, and he swallowed it down as the door closed. Everything was going to be fine, you're making mountains out of molehills.\n\nYou're not Tony.\n\n~~~~~~~~~~~~~~~~~~~\n\n\"As you all know, I am sure, a series of visits to our city has occurred in a rather condensed timespan.\" Antoinette sat in her chair, back straight, legs folded, arms on the chair arms. Like she was sitting in a thrown, giving her decree. \"And I am sure I am not the only one to find this both unusual, and unnerving.\"\n\nJack gulped, and looked around the room. Julias glanced his way a few times, even offered a tiny smile, but otherwise sat the same as everyone else did, poker faces and steel bodies. The tallest room in the building, its gigantic wall window, the glass table, huge and impressive chairs; it was all very imposing. Jack could not have felt more uncomfortable standing a bit off to the side, near the Invictus triumvirate, and trying his best to not tremble. Fiona was outside the room, to be summoned later.\n\nIf Antoinette had had any feelings for him before now, they were gone. She looked his way every so often, and an ice glare froze him to the core. Never seen her red eyes do that, not ever. Sure, when dealing with Lucas her gaze had turned to fire capable of incinerating mountains, but ice was new, and painful.\n\n\"Yeah, it's pretty fucked up,\" Garry said. He wore some jeans and a black shirt; Fiona was overdressed in comparison. \"Not gonna lie, I can't imagine it's a coincidence either. Wolves and monsters coming to Dolareido at the same time?\"\n\nJulias nodded and tapped his fingers on the glass table in a quiet rhythm. \"But Avery and Azamel have no connection to each other.\"\n\nJacob wiped off some nonexistent dust from the shoulder of his robes \u2014 Christ he looked like a necromancer or something \u2014 and leaned in. \"We alright talking about these issues in front of the kid? Why's he here?\"\n\n\"Jack's purpose will be explained momentarily.\" Maria mirrored Jacob, leaning in before resting her elbows against the glass. Power pose. \"In matters concerning the Uratha, Jack is welcome to what we know.\"\n\n\"Is he now?\" Jacob, brow raised and looking straight at him, leaned back in his chair, hooked his fingers behind his head, and smiled at him. Joker smile and a bandage across eyeless eye sockets was not a pleasant thing to have staring at you. \"Everything?\"\n\n\"What you wish to share.\" Michael leaned back in his chair and rubbed his chin. \"Out of respect for you Jacob, we haven't brought up the details of the last visit from Avery.\"\n\nRespect for Jacob. Jack squinted one of his eyes a little and watched Michael, watched where his eyes went, what he did with his fingers, how his posture changed. It certainly wasn't a happy respect, more like a begrudging one. And Jacob returned it with a nod, a begrudging thank you.\n\n\"Indeed. We do not want a repeat of last time,\" Antoinette said. \"Avery is now the leader of her own pack, and has returned in pursuit of prey. What that prey is we are not sure, but we do believe it may have something to do with the old tunnels in Devil's Corner. We know the tunnels are in need of maintenance, but with the unusual activity in said tunnels, none of us have sent personnel to repair them.\" The Prince frowned, brushed her hair back over her ear, and tilted her head a little as she looked down at the table with furrowed brow. \"Naturally, wolves, spiders, and monsters have decided to nest there.\"\n\nSilence hung heavy on the room, and each Primogen looked to the other with slow glances and tensed shoulders.\n\n\"Surely this won't be the same as last time,\" Julias said.\n\n\"Indeed.\" Maria motioned for Jack to step forward, and he did with a snap to his step like a good little soldier. \"Avery is not Simon. She is open to a degree of communication. A small degree, but a degree nonetheless. She has chosen Master Terry to be an intermediary between the Primogen and the Uratha.\"\n\nJacob burst into laughter, and slammed both his palms down against the glass table. No one reacted, except for Jack. Jack jumped a foot in the air, and winced as every set of eyes glanced his way.\n\n\"Avery picked a fucking ambassador?\"\n\nJulias shook his head and dismissed the notion with a sweep of his hand. \"Master Terry will be an intermediary to help facilitate communication, and nothing more. Not a negotiator, not a mediator.\"\n\n\"The fuck is the point then?\" the eyeless said\n\nMichael growled and looked Jacob's way. \"Do you think it would end well, having Avery and her pack in our presence again?\"\n\n\"Doesn't bother me.\" Garry shrugged, and hooked his hands behind his head. Playing nonchalant, pretending to be comfortable with the situation maybe.\n\n\"Yes, we understand Avery visited you recently,\" Michael said. \"Would you aid those animals just to be a thorn in our side, Carthian?\"\n\nIt was certainly a possibility, Jack realized. If Garry was willing to side with the Uratha \u2014 whatever that would entail \u2014 then the Invictus would have a problem. Everyone would have a problem.\n\nBut Garry shrugged. \"I wasn't happy with how things went last time either, but admit fault where fault is. If everyone had simply stepped aside and let the dogs do their thing, less people would have died.\"\n\nGood god would one of them share the details already. Jack couldn't ask it, Jacob would probably kill him if he did, but the tiptoeing on the subject earned fidget after fidget, eye twitch after eye twitch.\n\n\"To prevent communications from escalating to such rancor, that is why Avery has chosen my childe.\" Julias smirked and turned to look at Jack. \"Master Terry has a way with people. I think you'll find him a much better point of contact than any of the wolves, and they will be more receptive to him than they were to any of us.\"\n\nJacob snorted and grit his teeth; didn't seem too convinced. \"So if I want to tell Avery to drown in shit and vomit, I have to go through this kid?\"\n\n\"Yes.\" Antoinette, sighing and tapping her fingers on the table, leaned her weight onto an elbow on the chair arm, and her eyes shifted between Jack and Jacob with scrutiny. \"I would prefer such requests be done only during Primogen meetings, but ultimately, all that Master Terry learns and says in this matter will be the domain of us all, in or outside of our meetings.\"\n\nHoly shit. He was going to have elders visiting his apartment or interrupting his Invictus work, so he could deliver messages to the wolves. Shit just getting worse by the minute.\n\n\"Master Terry.\" Jacob, lip raised in a snarl, leaned in over the table far and deep, and cocked a brow in his direction. \"So, what do the wolves have to say? They just want their hunting grounds or what?\"\n\nThe room went silent as all eyes \u2014 and Jacob's gaze \u2014 fell upon him. Heavy stone tied around his neck pulled him to the floor. Claws dug into his chest and opened his insides for all the beasts to stare. Even Antoinette, love of his life, was staring at him and waiting for him to say one thing wrong, one thing out of line, one thing that'd burn the situation to the ground, rubble and embers.\n\nKindred were paranoid creatures. He tried to convince himself he was overreacting, that they hadn't said anything disastrous yet; and they hadn't. But he knew there were layers to each sentence, most he didn't understand, but some he did. If the elders had a problem with the wolves, something worth arguing about, then it was a problem that cost lives.\n\nHe looked each elder in the eyes for a fleeting moment, did his best to hold their gaze, before moving onto the next, and gulped on nothing. If there was one way he was going to die, it'd be pissing off every elder in his home town, lover included.\n\n\"Nothing yet, my Prince and Primogen. Only that we are to stay out of the tunnels in Devil's Corner, and that all communication is go through myself. They will perform their hunt, inform me of their actions, and I am to explain them to you.\"\n\n\"And if I said I wanted someone else?\" Garry smacked his chops and glared at Jack, hard. If he'd started barking, it wouldn't have been surprising.\n\n\"The Uratha said it was non negotiable, Lord Tones.\" Maybe a lofty title of address would help the bitter truth pill go down easier. Or some peanut butter for the mongrel.\n\nFor the love of fucking god do not grin at that image.\n\nBut Garry laughed and shook his head. \"Course she did. But, Maria's right, Avery isn't Simon, so maybe things will go a bit smoother this time? Intermediary is a step in the right direction. Maybe choosing an Invictus was a bad idea, but, I'll give this a whirl and see how it goes.\"\n\nJack lowered his head in a nod, and waited. The tension in the room seemed to lessen a little, and where everyone had looked ready to pounce with their leaning forward postures and hard-set teeth, the elders \u2014 and Julias too \u2014 started to lean back in their chairs and get comfortable again.\n\n\"Master Terry does have another point of business, unrelated,\" Maria said, \"but important.\"\n\nThe Prince waved a hand for him, and Jack stepped a little closer toward her.\n\n\"Yes,\" Antoinette said. \"As if God were bored and seeking to humor himself, Begotten have begun sprouting in Dolareido again. It may be because of the passing of three of our elders, that we look weak and these wolves and monsters have decided to take advantage. It may simply be a case of bad timing. But Begotten now walk our streets once more.\"\n\nThe whole room sighed. Not the same oh-fuck-not-again sigh bringing up the Uratha stirred, but a there's-a-fly-in-my-food sigh.\n\n\"Azamel has returned,\" Antoinette said, \"but she is not Master Terry's concern. This concerns a newcomer. And while all new Kindred are to be introduced to myself, I believe it is to the benefit of us all that new Begotten are introduced to the Primogen as a whole.\"\n\nOh, an olive branch, maybe? She was the Prince, it was her job to keep everyone satisfied, or in line. She opted for diplomacy normally, far as Jack could tell, but he was sure she had to use force to get the position. He should ask her about it sometime. \n\n\"Master Terry, please fetch Fiona,\" Antoinette said.\n\nHe nodded and stepped out into the hall. No doubt the Primogen already knew what he was doing. Not like they didn't sense her from so close. So as he brought the small woman into the meeting room, they all glared at her like she was a pestering insect.\n\n\"Good morning!\" she said, big smile on her face, hand waving. \"Glad to meet ye.\"\n\nIf looks could kill, Fiona would have exploded in a glorious display of bones, blood, and organs as each Primogen and the Prince glared at her. It was enough to get her to stop waving, but her smile only shifted from nervous to anxious.\n\n\"This is Fiona Young,\" Jack said, \"a fairly recent arrival to Dolareido. In her ignorance, she began to hunt kine without permission. She is responsible for the disappearances in Devil's Corner.\" He escorted her to stand before them in the most open section of the table near the Prince. He bowed, she didn't; until he kicked her in the side of the foot, and she managed a nervous chuckle before bowing as well.\n\n\"Great, another pain in the ass. How old are you girl?\" Garry said. \"How long you been a monster?\"\n\nSo much for proper introductions.\n\n\"About a year.\" She stood up and, again, smiled. Just her way of dealing with nervousness, like she said.\n\nIt wasn't just her though. The hard tension in the air was gone, but everyone was looking at Fiona with a little more scrutiny than Jack had figured. If the Uratha were here, he was sure they'd be looking at the wolves with a mix of anger and distrust, but with Fiona, they were looking at her with... disgust?",
        "\"A year?\" Antoinette turned her chair to face the Scottish woman, and looked her up and down. \"You have a large appetite for someone your age.\"\n\n\"Uh, sorry. I... I can try and eat less.\"\n\n\"See that you do,\" Maria said.\n\nAntoinette frowned at Fiona, but after a few moments of silence, sighed and let the frown fade. \"What Maria means is that we have spent decades building Dolareido as a place Kindred can live more comfortably than other cities. I crafted this city for that purpose from its infancy. And Begotten have a habit of drawing attention we do not want.\"\n\n\"Attention?\" Fiona said.\n\nMcDonald groaned, loud enough to grab Fiona's attention. \"Yes, attention. Vampires and werewolves, and monsters, are known quantities in the world. You can find mentions of us in texts old and new. For Kindred, we preserve the Masquerade, the secret of our existence. If you had been Kindred, we would have punished you for your gross negligence.\"\n\nJack winced. Fiona whistled, and squirmed.\n\n\"Sorry,\" she said. \"I... I had nae idea.\"\n\n\"And,\" McDonald continued, \"our reports suggest the disappearances have mostly occurred in the past four months. How long have you been in Dolareido?\"\n\n\"About ten months... sir. But, uh, about four months ago, the um... the dream changed. Less oppressive. Less... cruel. So I got a little comfier when the changed happened, and I guess I let my appetite run away with me.\"\n\n\"The dream changed?\"\n\nEveryone turned to look at Jacob. The man had an intrigued expression, if Jack was reading his face right; never easy with the bandage tied around his head.\n\n\"Aye. When I first came 'ere, dark chains cut through much of the dream, and my lair was... uncomfortable. But something happened, nae idea what, and the chains went away. Been happy times since then, since\u2014\"\n\n\"Since Viktor and Tony died. It sickens me to know those two affected such things,\" Antoinette said, her turn for the intrigued expression. Everyone mirrored it soon after, throwing glances each other's way, and then settling on Fiona. \"We have had little contact with your kind outside a few encounters, Begotten, and they have not been... good, for the city. I am sure you will come to discover on your own, when Azamel inevitably talks with you.\" Venom dripped from her voice.\n\n\"Who is Azamel?\" Fiona said.\n\nThe Prince frowned and leaned back in her chair as she looked Fiona up and down a few more times, analyzing her body language no doubt. \"There are several other Begotten in the city. I cannot prevent you from interacting with them. But know that Azamel has been a problem for us before, and I cannot guarantee your life if you befriend her.\"\n\n\"... my life?\"\n\n\"What the Prince means,\" Julias said, \"is that Dolareido is run by Kindred and the Kindred are protected by our laws. Begotten are not. If a Kindred decides to end you because they want to, for any reason at all, you can't protest using our laws. All you can do is hope a different Kindred claims sanctuary for you. Understood?\"\n\nSecond class citizen. Jack winced again, and looked at Julias. His sire did a good job of avoiding eye contact, but when Jack looked to the Prince, she caught his glance. And twitched. Just a little, just on the lip, just enough to change her frown into something less, before she grit her teeth and looked down. She'd thrown Fiona a death threat, and Julias had backed it up. They were putting her in her place and she hadn't done anything besides eat a few abusive bastards. The fuck did they have against Begotten?\n\nFiona nodded, sighed, and squirmed a little in her shoes. But she still had a smile, and an edge of a grin growing on it too.\n\n\"I understand.\"\n\n\"Good.\" Antoinette motioned for the door with her hands before looking back to the Primogen. \"Thirteen kills since your arrival is far too many for Dolareido, despite the city's population. Control your hunger, or we will control it for you. You two may go.\"\n\nJack put his hand on Fiona's shoulder for a passing moment, and the two of them walked out of the devil's den. He glanced over his shoulder, but neither Julias or Antoinette looked his way, their gazes locked on the table. The others didn't seem to mind looking at him though, Garry with a sneer, and the two Invictus with something close to a dismissing eye roll. Jacob though, he had a small smile on his face, and his eyeless gaze followed them out of the room.\n\nOnce the door was closed behind them, Fiona opened her mouth, but Jack shook his head.\n\n\"When we're outside,\" he whispered, barely audible.\n\nDown the elevator, passed the lobby and Prince's servants, and back outside. The warm night air and the beautiful Elysium garden maze. The familiar sights of suits and sexy dresses walking the streets, jewelry on display.\n\nSo much better than being surrounded by that pack of angry, surly, barking animals.\n\n\"What the fuck was that?\" he said.\n\n\"I dinnae ken. I... I felt they hated me.\"\n\n\"Yeah, I got that impression too, like a brick to the face. I expected my night to suck, Fiona, but not because of you. Figured the wolves would be the main source of tension, and they were, but... but with you, it was... they really didn't like you. I... I have to apologize for them, cause that was... I can't...\"\n\n\"It's alright. I'm sure they have their reasons, aye? This Azamel might be a real bastard.\"\n\n\"Yeah, maybe. But it doesn't justify their behavior. They treated you like a...\" Like a fucking bug infestation. He grit his teeth, and started walking.\n\nDidn't get far before he looked back up at the tower. On the tallest floor, he could see movement. Someone standing in front of the glass then, and that someone had to be Antoinette; no one else would get up in her meeting room.\n\nHe frowned up at her, and kept walking. Maybe he was overreacting. They were just protecting the city after all, and being cautious. And assholes. He'd expected Garry and Maria and Michael to be dicks, and they were, and he expected Antoinette to be cold, and she was. But Julias too? And Jacob was the only one who didn't seem displeased about the situation.\n\n\"Hey,\" Fiona said, \"they said there'd been thirteen disappearances in Devil's Corner?\"\n\n\"Yeah.\"\n\n\"Weird. Only killed twelve.\"\n\nHe raised a brow. \"That is weird.\"\n\n\"Could be a mistake right? Coincidence?\"\n\n\"Yeah... maybe.\" Maybe not.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Julias~~\n\n\"... she isn't Azamel,\" Julias said. \"We didn't have to threaten her like that.\"\n\n\"Yes we did.\" MacDonald threw him a growl. \"You didn't have to deal with her, Mister Mire. Honors did. You want to clean up the mess of a hungry monster?\"\n\n\"I've dealt with draugr before, Mister MacDonald.\"\n\n\"It is not the same.\" Antoinette got up and walked over to the window, a loud sigh escaping her once she looked down. Probably watching Jack leave. Whole conversation couldn't have been easy for her. \"A Kindred surrendered to the beast is a dangerous creature, yes. A Begotten that is hungry is...\"\n\n\"You're familiar with the damage Azamel caused before she upped and left?\" Garry said.\n\nJulias nodded. \"Truncter tower and a couple nearby buildings were destroyed in the confrontation.\"\n\nJacob laughed, a hard snort of a chuckle that earned frowns from everyone. \"The buildings weren't destroyed in the conflict, they started the conflict, Mister Mire. Azamel got too hungry for her own good, and lost control.\"\n\n\"... she destroyed four buildings?\"\n\n\"In a single attack.\" Antoinette paced back and forth in front of the glass, hands behind her back, eyes still on the window and below. \"As I am sure Viktor Honors explained to you, Azamel Venastroth hungers for power. And I do not mean in the classic sense. She once used the word tyrant to describe the hunger, the need to be a tyrant.\" Snarling, the Prince dragged her nails across the glass, until the Primogen all winced as her nails began to cut into it.\n\nThe Prince got angry all the time, but she never showed it. Always steel, always cold and calculating; at least, during Primogen meetings. But she was visibly angry, shoulders raised and hands gripping into fists as if choking someone. Not cold steel this time, all fire, like Beatrice. With Triss, he could hug her and force her to calm down; Antoinette would rip him into literal shreds in a second if he tried to console her with even a single word.\n\n\"She did that alone? That quickly?\" Julias leaned back in his chair and brought a finger to his chin. \"I underestimated the threat.\"\n\n\"Alder Honors did not want the true threat Azamel posed to be known, Mister Mire,\" Maria said. \"She was not our enemy. Just a... volatile presence.\"\n\nHe sighed and rubbed his forehead. Just when he thought he knew the details of things, just when he thought he was getting a feel for what sorts of secrets Viktor had been keeping from him.\n\n\"What about this Fiona?\" he said. \"Not nearly as old as Azamel.\"\n\nJacob clicked his teeth and leaned in. \"Yes, but... you all felt it. We've dealt with Begotten before, young ones like Athalia. This Fiona creature was not like Athalia.\"\n\nNo. No she was not.\n\n\"But,\" Antoinette said, \"it is not the monsters that trouble me. They are but pests in my city. It is the wolves howling at the door that concern me. Us.\"\n\nJacob nodded, and his fingers tapped on the table a few times with some weight. \"Your boy toy is gone. Sure you want to talk about the wolves without him here?\"\n\nAntoinette turned, walked to the table, and set her hands down on the glass as she glared at the old Nosferatu. \"Did it look like I treated him with bias or favoritism, Jacob?\"\n\nThe eyeless man smirked, until Garry spoke up.\n\n\"No, it didn't. Thank you for that.\"\n\n\"I don't think Jacob was intentionally insulting you,\" Michael said. \"Just... being Jacob.\"\n\nIt was true. Jacob could talk like Garry sometimes, and the reversal was a sight to behold.\n\nThe Prince sighed, but nodded with time, and sat back down to join them. \"We do not need Terry here to speak of the Uratha, only if we wish to communicate with the Uratha. As we all know, the wolves will tear through whatever they perceive as a barrier, and that includes us.\"\n\nMichael shook his head. \"We could take them in a fight.\"\n\n\"Perhaps,\" Julias said, \"if we knew when and where they were coming, if we armed ourselves with silver weaponry, if we brought five Kindred for each Uratha.\" And even then, they'd lose those Kindred in the fight. \"But, if Avery is trying to communicate this time, at least somewhat, perhaps we can avoid violence entirely.\"\n\nThe room looked at him like he'd grown an extra head.\n\n\"Hey,\" Garry said, hands raised like he was surrendering, \"of everyone in this room, I hate the werewolves the least. But I know a storm coming when I see one.\"\n\nStorm coming. Only storm coming was everyone looking for one and making things worse than they had to.\n\n\"With no provocation of any kind, they nearly killed Miss Vola,\" the Prince said. \"Simply because she was in the area of their hunt, she was ripped open and torn into. They chased her down like hungry wolves.\"\n\nJulias winced. He had a hard time imagining Natasha being eviscerated. Girl had spirit, and a major brain in that very tiny body, but being ripped open by Uratha claws was not something he'd be able to deal with well, let alone her. Maria knew it too, and the ghost woman plucked at one of her fingernails with each mention of her previous subordinate.\n\n\"... that said,\" Antoinette continued, \"they also let her feed to heal herself, once they captured her. And, once they had found their desired intermediary, they let her go.\"\n\n\"Power move,\" Michael said.\n\nBut Julias shook his head. \"Maybe if they had known it was Natasha when they chased her down. Did they?\"\n\n\"No. Natasha tells me they suspected she was the thing they hunted.\"\n\n\"And what is it they're hunting?\" Jacob tapped his finger, making a ding of fingernail to glass, and threw his masked gaze at Antoinette.\n\n\"Again, Jacob?\" She snarled at him, a real snarl that Julias felt in his throat. \"You know all that I know. They hunt things from outside our realm. If I had more to share, I would.\"\n\nWould she? She said it with a touch of inflection, the sort she would normally abuse to imply something specifically. This time she said the words like a younger Kindred might when lying. Julias looked at her for a moment, watched her; her gaze was solid and her body language unwavering.\n\nSomething was going on.\n\n\"Right, right, like last time.\" Jacob, sighing, got up and headed for the door.\n\n\"Jacob,\" she said, \"do not do anything reckless. Avery has survived all this time, and for her kind, you know she will be strong.\"\n\nJacob offered another snarl, and left.\n\nAntoinette leaned back in her chair, and set the fingers of one hand against her forehead. No doubt analyzing the possibility Jacob might do something rash and irrational.\n\n\"I feel for the guy,\" Garry said. \"You telling me you wouldn't want to kill Avery if you were in his shoes?\"\n\nThe three Invictus nodded in unison, but Antoinette shook her head instead.\n\n\"If I were Jacob, and I had loved a creature such as Minerva for that long, only to lose her? I would not kill Avery, Mister Tones, I would destroy her. I would burn her world and force her to watch. And that is what scares me, that Jacob may be willing to destroy much of what we hold dear to pursue that vengeance.\" She leaned in again, and looked at each Primogen with hard-set eyes. \"Watch him closely, Primogen. I do not expect you to betray his trust, or to favor mine, but...\"\n\nThe Invictus nodded in unison, again, along with Garry as well. Much as Jacob was a pain in their ass, they didn't want him dead.\n\nFunny how a force to unify against could bring out the best in people.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n\"That could have gone better,\" Jack said.\n\n\"Maybe.\" Julias shrugged and leaned back on his couch. Jack had called him after the meeting, and had come over to his mansion to talk with him about it. Kid didn't seem very happy.\n\n\"Maybe? The werewolves thing, yeah that went about as well as I could have hoped. No one's happy about Avery or the Uratha, I get that. But Fiona? The fuck did she do? Worse she's done is killed a few too many people. Abusive people, I might add. Seems to be the quirk of how she feeds.\"\n\nJulias was sitting, but Jack was pacing, hands up in the air and waving\n\n\"How long you known this girl?\"\n\n\"A couple days.\"\n\n\"You trust her that quickly?\"\n\n\"Damien trusts her.\"\n\nJulias raised a brow. The hell was it about Damien that managed to affect everyone so much? Even Julias had been affected. Not that he brought up the Lancea et Sanctum thing at the last meeting; he didn't have a death wish.\n\n\"Even assuming Damien and Fiona can both be trusted, she's not the first Begotten to sneak\u2014\"\n\n\"She didn't sneak, she came here in genuine ignorance.\"\n\n\"Ok, fine, an honest mistake on her part. But Begotten like her have, both in ignorance and on purpose, caused problems. We preserve the Masquerade Jack, and we destroy things that threaten it. With the werewolves, it seems people who witness them have a tendency to go a bit crazy, so at least with the wolves the chances of a witness report is minimal.\"\n\n\"... they go crazy? What?\"\n\n\"Never heard of it? Moonstruck? Some people just go a bit nuts if they've been out and saw things in the woods? Uratha have that effect on people if they're transformed and people see them.\"\n\n\"Whoa. And\u2014\"\n\n\"Doesn't affect Kindred, or Begotten I imagine. Lucky for the Begotten; they have enough trouble as it is.\"\n\nJack, calming down and pacing less, sighed and hopped onto the couch next to him.\n\n\"I don't get it, what's the problem?\"\n\n\"Ever heard the fable the Scorpion and the Frog?\"\n\n\"What about it?\"\n\nJulias shook his head. Kid just wasn't getting it. But then, Julias was doing a piss poor job explaining the problem.\n\n\"Ask a Kindred to stop drinking blood, and they'll say no. But they'll at least try and find a different way to get it. Long as we get it from a fresh living human, all the other details are meaningless. Not so with the Begotten. Some of them feed in... in strange ways, Jack. You say Fiona feeds on abusive people?\"\n\n\"Yeah, she punishes them. Says she needs to make them know they're being punished for being abusive. Which is pretty damn strange.\"\n\n\"Just one of many ways these monsters feed, Jack. Some of them feed by collecting people's valuables, be it secrets or treasures. Some of them feed on fear. Some of them feed on human hearts. Some of them feed on destroying a person's power.\"\n\n\"Destr\u2014\"\n\n\"Azamel. I want you to avoid her at all costs Jack. Viktor told me the same. She feeds on crushing people's lives, taking away their control. We don't want her in this city.\"\n\n\"Damn... why's she here then? Why isn't Antoinette giving her the boot?\"\n\n\"She's never attacked a Kindred, and never broken the Masquerade even with her occasional destructive tendencies. Getting rid of her is doable, just difficult, dangerous, and possibly not worth the risk.\"\n\n\"Difficult for Antoinette and the sheriff? I mean, I saw them both in action Julias, I\u2014\"\n\n\"Yeah, Jack, even for the two of them.\"\n\nThere, that put an image in the kid's head. Jack opened his mouth to say something, but looked down. He tried again, eyes rising, hand raising, but he stopped again.\n\n\"... damn.\"\n\n\"Can you understand my concern about Fiona?\"\n\n\"But she's barely older than me, in monster years.\" Jack raised his hands to quote the word monster, like it were some sort of title that didn't fit, like it didn't describe the Begotten to a tee.\n\n\"There's something about her, Jack. I remember meeting Athalia when she was a new Begotten, I got an impression for what they felt like. Fiona was different. Can't put my finger on it, don't know what or why, just know it was different. I'm not going to tell you to avoid her too, she seems nice enough, just be careful, ok?\"\n\n\"Yeah, ok.\" Sighing, Jack leaned back into the couch as Julias did. \"So, the werewolves.\"\n\n\"Mmm?\"\n\n\"I know Jacob has an issue with them. But everyone seems to dance around the subject.\"\n\n\"... you should ask him.\"\n\n\"You really telling me to go talk to Jacob?\"\n\nHeh, good point. \"Better than me telling you myself. You\u2014\"\n\nThe door knocked. That stupid, massive knocker that shook the whole damn building. With a groan, Julias got up and headed down the stairways to the main entrance of his mansion, Jack behind him. Beatrice wasn't supposed to be visiting today, but maybe she was trying to surprise him? Smiling his best I-love-you smile, he opened the door.\n\n\"... Jacob?\"\n\n\"That happy to see me?\" Laughing, Jacob poked him the chest. \"From the tone of your voice Mister Mire, someone's dancing on my grave.\" The old bastard smirked, and stepped in. Least he was wearing some normal looking clothes; some black pants and a loose brown jacket was better than the robes he liked. \"Ah, Master Terry, how was your first meeting with the Primogen? We can be right sullen dicks, can't we?\"\n\nJulias winced and looked back to his childe. Jack had walked down to join him, but was probably regretting it now, standing before Jacob and Jacob having no issues walking up to the boy and getting into his personal space.\n\n\"Julias.\"\n\nA woman's voice. Julias looked outside again, and tilted his head.\n\n\"... Jennifer.\"\n\n\"Sorry about Jacob being a jackass. He wanted to talk about the dogs.\" Jennifer, winking at him with all the subtlety of a catcall, stepped into his mansion. Dressed in a power suit and a skirt, she drifted around the mansion's main lobby, and whistled as she looked up at the high ceilings and grand drapes.\n\nWhere the hell did she get a suit? He'd doubted a witch knew how to put one on, let alone where to steal a good one. But, it was a damn good suit, and she wore it with practiced ease.",
        "\"Elder Jacob.\" Jack offered the man a bow, but Jacob laughed and nudged the kid back up with a few fingers to the shoulder.\n\n\"So you're the middleman in this zoo, eh kid?\" The Nosferatu looked up at the walls like his witch did, before he sat down\u2014on the stairway. \"And you've made friends with an unusual monster. Look at you, getting stuck in shit no matter where you step.\"\n\nSeeing Jacob get chummy with his childe set Julias on edge. What a way with words the old snake had.\n\n\"There does seem to be some dangerous people coming to Dolareido, Elder Jacob, that... I keep stumbling into.\"\n\nKid managed to keep a steady voice as he turned to watch the old man. Never easy. Jacob was as old as Antoinette, and being around him always fired Julias's fight-or-flight reflex, let alone Jack's.\n\n\"For what reason do I owe the honor of\u2014\"\n\n\"Oh stow the niceties, Julias. I'm not here on official business. I'm here cause I want to talk about the werewolves.\"\n\nSounded like official business. \"Couldn't wait for the next Primogen meeting?\"\n\n\"Prince said herself we can come to Jack. I knew he'd be here, after that shit show, to talk about the Begotten I imagine.\" The old bastard laughed and shook his head a few times, like a condescending parent. \"That Fiona was a cute little thing wasn't she? Really liked the accent.\"\n\nRight, right, it was going to be like this, Jacob dancing around whatever information he was trying to get. Never direct. Probably wanted Avery dead, but it wasn't like Jack would have any information to help with that. Then what angle was Jacob aiming for?\n\n\"I like her,\" Jack said, arms folded across his chest, on guard.\n\nJulias came to stand beside his childe, while Jennifer seemed content to walk up the stairs past Jacob, and start exploring. The mansion held nothing that she'd want to steal or pry into, but she looked intrigued nonetheless, eyes scanning the walls and paintings and fortune in meaningless furniture.\n\n\"What's she like?\" Jacob said.\n\nJack looked up at Julias before Jacob again. \"Thought you wanted to talk about the werewolves?\"\n\n\"Aren't I?\" the Nosferatu said. Jack flinched. Kid was doing good standing up to the fucking snake, but something Jacob said managed to break his composure. \"Not like you need to be a genius to realize there's a connection. Fiona starts indulging her appetite when Viktor and Tony die. Understandable. Her kind have a good sense for the predators in their area, and if two of the major ones die, she'd naturally feel more comfortable eating more. A few months later, werewolves are in our city, hunting something.\"\n\n\"Well,\" Jennifer said, leaning over a railing above them, \"there's always the chance of coincidence.\"\n\nJacob snorted and looked up at his fellow witch. \"You seriously believe that?\"\n\n\"Are you suggesting the werewolves are hunting Fiona?\" Julias said. \"Why would she be their prey?\"\n\n\"... what is their usual prey?\" Everyone turned to look at Jack, and the young Ventrue met each of their gazes with something close to a frown. \"I've been kept in the dark about this, but it seems pretty damn important. The wolves won't tell me, the Invictus won't tell me, the Primogen won't tell me, and now I'm expected to be an intermediary for a bunch of dangerous beasts without even knowing what they're after.\"\n\n\"Tell you if I knew,\" Jennifer said, still above them, still drifting around and admiring Julias's decor. \"Jacob figures only person who knows exactly what they hunt is Antoinette, but she denies knowing the details.\"\n\n\"Really?\" Jack blinked at Julias, and turned around a bit to face him, stepping closer to Jacob in the process. \"Kind of figured the triumvirate knew their motivations at least.\"\n\nJulias's turn to wince. \"They hunt... we're not sure on the details. It's something... abnormal. Jacob might know more.\"\n\nJacob lowered his head to look back at Julias, and Julias's wince turned into a quiet smirk. No reason Julias couldn't turn Jacob's manipulation of the dialogue back on him. All's fair.\n\nAnd the look on the man's face was perfect. Even with the bandage covering his eyes, his jaw clenched and his teeth clicked as they grit and ground. Julias knew better than to play with fire, to piss off his blatant superiors, his elders, but the damn witch really got under his skin.\n\n\"I don't have the same knowledge on the situation as the Prince,\" he said. \"The talks between her and Simon didn't end well, but only she knows what was said in that room. I assume Simon is dead if Avery's running her own pack now. But... but the wolves don't hunt things of the world.\"\n\n\"Not of the world?\" Jack rubbed his buzzed head, and stepped closer to the witch. \"... that's the most ambiguous thing I've ever heard.\"\n\nJulias laughed. Kid was growing balls. Jennifer chuckled too, before disappearing into the hall of his mansion.\n\n\"Well, that's part of the reason I came here to talk, Jack.\" Jacob leaned forward, elbows on his knees, and stared ahead at the boy. \"I want to know what they're hunting.\"\n\n\"I don't know what they're hunting. They wouldn't tell me.\"\n\n\"And Fiona, what do you think of my suspicion, that she and the wolves are connected somehow?\"\n\n\"... there may be a connection, but I don't know what it is. We don't know what the wolves hunt, so I can't piece together a hypothesis.\" Jack took another step toward the ancient beast, and lowered his arms from his chest. \"And if I knew, why would I tell you?\"\n\nWell. Damn.\n\nSilence hung on the walls like ice, and Julias forced himself to stare at Jacob as the old man stared at Jack. Didn't need eyes to show the frustration on his face, the annoyance with the muscles in his neck bulging and his fingers curling the air like weaving thread.\n\n\"... you going home anytime soon kid?\"\n\nJulias stepped in until he was beside Jack again. \"You threatening my childe?\"\n\n\"No, no.\" Jacob took a long, slow breath, put up his hands, stood up, and walked off the stairs. \"I wanted to talk to Jack in private.\"\n\nJack blinked, and glanced between the witch and his sire. \"Me?\"\n\n\"You.\"\n\n\"... um, I was... but... uh...\"\n\n\"Jacob,\" Julias said, \"I don't\u2014\"\n\n\"I'm serious Mire, I won't hurt him, just wanted to talk to him alone. He's neck deep in shit and I happen to know a thing or two about this particular flavor of shit.\"\n\nTrue that. Julias glanced between Jack and Jacob, and looked for any hesitation or worry. Jack dripped of both, but nodded to him, and stepped forward toward the door.\n\n\"Ok,\" the kid said.\n\n\"Excellent. No worries Jack, Julias, just looking for... some common ground.\" Jacob saluted, stepped out the door, and waited for Julias's childe to follow.\n\nGod damn the kid was getting tougher by the second. Jack peeked over his shoulder back at Julias, smiled, gulped, and walked out into the city night with one of the two oldest Kindred in the city. Kid had a knack for making friends; funny that it never manifested until he died.\n\n\"Guess it's just you and me now.\"\n\nJulias raised a brow and looked up the stairs. Jennifer had returned, a smile on her lips and her fingers sliding along the rail of the grand stairway as she descended.\n\n\"Jennifer... I'm afraid I don't know your last name.\"\n\n\"It was Darla, back when I used it. What use does a witch have for it?\" Confident smile, a smile he knew all to well as she finished her hip-swaying descent of the stairs to stand before him.\n\n\"I suppose the Circle doesn't keep records do they?\"\n\n\"No. We remember our deeds and actions, not titles.\" Jennifer, looking him up and down, started to circle him in a slow walk, each step specific and exaggerated. \"You, we remember as the man who survived Viktor and Tony's squabble, survived the purge, survived the werewolves the first time they came, and survived Azamel's hunger.\"\n\nHe didn't follow her with his head, but did with his eyes once she was in front of him again. Woman never stopped smiling, but it was becoming more of a sly grin as time went on.\n\n\"The other Primogen did as well.\"\n\n\"Ah, but they were older, and had to deal with those out of a necessity for their positions. You were just a neonate when Azamel first arrived, no? And a young ancillae when Simon and Avery stuck their claws in our affairs. All before my time.\" One of her hands reached out, and started to trace a finger along his shoulders as she circled him a second time. \"And do not worry for Jack. Jacob does truly only wish to speak to him about our new troubles.\"\n\n\"I think that's reason enough for worry.\"\n\n\"Ha. Jacob is a bastard isn't he? A manipulative, smart bastard. But you should trust him more. He has the Kindred's interest at heart.\"\n\n\"Forgive me if I feel differently, specifically in the context of Avery.\" The desire for revenge could turn anyone into an obsessed, selfish villain.\n\n\"... he still hasn't told me about what happened with Avery,\" she said, and she sat down on the couch with a sigh. Comfortable getting comfortable, with all the confidence of a Ventrue. Different from Jack, a Ventrue with tenacity but without the confidence. Not yet, at least.\n\n\"Horrible things happened, Kindred died, and Jacob suffered a terrible, personal blow.\" Julias matched Jennifer's poker face, and sat down beside her. \"So we don't talk about it. If you ask him, he might tell you.\"\n\nJennifer put up her hands and shook her head before settling them in her lap. \"All I need to know is that he dislikes the wolves. I don't need to get on his bad side.\"\n\n\"... why are you here, Jennifer?\"\n\n\"Figured you knew.\" She folded a leg over the other, and twisted on the couch to rest an elbow along its back, fingers to her chin and nudging her lips. A seductive pose, complete with a batting of the eyelashes. \"We both have a common interest.\"\n\n\"Yes, Beatrice tells me you've grown quite affection toward her. Color me jealous.\"\n\n\"Jealous?\" Chuckling, Jennifer slid a little closer to him, close enough so the leg folded over the other nudged her shoe against his leg.\n\nHe didn't move. \"Yes, I am. She tells me the Circle of the Crone have no desire for privacy, or need for doors.\"\n\n\"True. We have little care for barriers about things like sex. We all enjoy our ghouls or meals in clear view of each other.\"\n\nSmirk. \"Yes, but you don't enjoy each other.\"\n\n\"... oh, I see.\" She looked away, and down at her foot where she bounced her leg lightly on the other. \"It's that I am Kindred, that's the problem.\"\n\n\"You could say that... You ever been in love, Jennifer? Before or after your embrace?\"\n\n\"Puppy love?\"\n\n\"No, lasting love. Ever been in a long term relationship?\"\n\n\"No,\" she said, voice once crisp and clear, now quietening and lightly wavering.\n\n\"I have, before I was embraced. I know what it's like to be in love, Miss Darla, deep love, the sort that'd last a life time. Even had the sort of marriage used as an ideal by wedding planner companies, to reel couples in.\" He leaned forward, elbows on his knees, and sighed as he looked down. \"I know what it feels like to have to let that love go.\"\n\n\"... you were married when Viktor embraced you.\"\n\n\"Yes.\" And the whole conversation was dragging his mind through the memories like he'd been tied to a horse and drawn, each memory cutting him open, rocks in the road. He just smiled, and let the pain pass, like it always did. Let her face fade with a century of experiences to bury her.\n\n\"Was it a choice for you?\"\n\n\"No. Viktor forced it during the first World War.\"\n\n\"... you did not embrace your wife?\" Jennifer raised a brow and frowned at him.\n\n\"Almost. One night, I nearly broke into her room and turned her, but I didn't have permission to sire a childe; I'd just be dooming us both. And... and I'm not sure I'd have wanted this life for her, Jennifer.\"\n\n\"... Beatrice warned me you'd be like this.\" She slid in closer again, and frowned at him from close enough he could see the different shades of amber and brown in her eyes. \"You always this morose? You hate this life so much?\"\n\n\"It comes and goes,\" he said, grinning. That managed to get a chuckle out of her. \"Beatrice is the best thing to happen to me in a long time, and you'll have to forgive me Jennifer if I'm hesitant to share our bed with another Kindred. With ghouls or a kine, it's different; they're food, and connections with them are fleeting. Did Beatrice tell you she's the first Kindred I've been with in a very, very long time?\"\n\n\"She did. And I get that you consider Kindred-with-Kindred sex to be special, meaningful... intimate. How delightfully archaic.\" Returning his smirk, she leaned toward him until their noses were only an inch apart. \"You really love her.\"\n\n\"Yeah, I do. You think I'm morose now? I used to dread every moment of this life, and I drowned my self in sex with my meals most nights to try and forget it.\"\n\n\"I enjoy sex with my food almost every night as well, but I'm quite happy being Kindred. And besides, you're not drowning yourself in sex with Beatrice?\"\n\nGood point. He laughed, leaned back and snapped his fingers.\n\n\"How much do you like her?\" he said.\n\n\"I like her a lot. And that ass, oh my god that ass.\"\n\nThey both laughed. The amount of sex he and Beatrice had had in the past month was astounding. Girl liked her ass more than he did, and anal sex was a frequent vice.\n\n\"Do you love her?\" he said.\n\nShe shook her head. \"Romantically? No. But she's fast become a close friend, Mister Mire, and I... well, I'd hate to ruin that.\" Sighing, she got up, straightened out her skirt, and leaned against the stairway railing. \"So, the offer is there. I don't want to taint what you have with Beatrice. But, at the same time, I would not belong in the Circle of the Crone if I did not pursue my desires, Mister Mire.\"\n\n\"You sleep with all your friends?\" A little jab, to test the waters.\n\n\"No, I do not. I do with my meals, as you once did, but other Kindred? Not since the first year of my embrace.\" She winked at him. Knew what he was getting at, no doubt. \"And to think, I found this suit to impress you.\"\n\nJulias stood up as well, and as Jennifer walked toward the front door, he followed behind her before opening it for her.\n\n\"It worked. And... let me think about it.\"\n\n\"Please do. I think you'll find I'm a joy to have under your sheets. I'd even share her.\" The raven-haired Ventrue grinned at him, licked her lips, and finger waved as she walked backward through the doorway, and out into the night.\n\nShe was a very, very attractive woman. Julias couldn't help but admire her butt when she turned around and put the rather tight skirt on display. Not as big or toned as Beatrice's, but close.\n\nHe closed the door, and smacked himself in the forehead. Was he being too dramatic, being so careful about this? He was worried about damaging his relationship with Beatrice, the first relationship he'd had in decades, a relationship he was so damn thankful to be in. Threesomes didn't exactly have the best track record with relationships, in his experience.\n\nBut that was a long time ago, and things were different with Kindred. Sex was different. And Beatrice was the one who'd first mentioned interest in the idea.\n\nHe sat down, and burst into laughter. How much life had changed. Used to be all he was worried about was if he pissed off his sire. Now he was worried about whether a threesome with another Kindred would ruin his relationship, and whether the Invictus would suffer under the claws of visiting monsters and wolves.\n\nAll in all, a step in the right direction. Now if Jack survived his midnight stroll with the deadly Nosferatu, maybe things would start looking up.\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nIf there was one way he was going to die, it'd be on a stroll home with the deadliest vampire in the city as his escort.\n\nHe thought Daniel or Antoinette had earned the title, but the longer he walked beside Jacob, the more he was starting to feel he'd earned it instead. The way the other Primogen looked at him, even Antoinette, was one he hadn't expected. A weird respect, like you might give a bully in school or dangerous cellmate who needed to be kept at a distance. But then, maybe deadliest vampire was the wrong title; rather, he was the most volatile.\n\n\"Not taking a ride back to South Side?\" Jacob said, voice casual and body language just as casual as the two walked down from the Rich Side hills.\n\n\"I thought you wanted to talk?\" It was difficult, finding a balance between defensive and not offensive with the elder Kindred. Didn't want to help him necessarily, but didn't want to piss him off. A tightrope Jack did not want to be on.\n\n\"Midnight stroll with old me? I'm touched.\" Another laugh, but Jack didn't join in. Jacob stopped laughing, suddenly, and frowned down at him as they walked. \"You know kid, you got me all wrong.\"\n\n\"Do I?\"\n\n\"Yes, you do. Think I'm a villain, a devil, out for his own gain.\"\n\n\"... do you think I'm stupid enough to blindly trust you?\"\n\n\"Heh, touche. A little paranoia is perfectly healthy for a Kindred, can't fault you there.\"\n\nJack didn't like the paranoia, he didn't enjoy having to be suspicious of everyone. So he frowned up at the five-hundred-year-old vampire walking next to him.\n\n\"Are you going to try and convince me that you're working for my best interest? The interests of Kindred?\"\n\n\"I am working for that goal, Jack.\"\n\n\"How's that? Far as anyone's told me, you create chaos so only the strongest are left standing.\"\n\nAnother chuckle. They never broke their stride as they walked, even as more kine started to show up on the sidewalks. Where South Side and Rich Side connected, it was an expensive neighborhood, a large one, and it'd take a while to walk it. Jack could call for a ride, but Jacob wanted to talk; not like he could call for an Invictus ride and just leave Jacob mid conversation, not without pissing him off.\n\n\"It's not nearly that simple kid, and you know it isn't. The Danse Macabre is a complicated thing, and we all have our goals. You think you can summarize me so easily? All I'd have to do is mention that you were the one that killed Viktor and Tony, and Maria and Michael would have your ashes by sunrise.\"\n\nOh shit. Shit shit shit. Jack looked up at the bastard again, eyes wide, jaw dropping.\n\n\"H-How\u2014\"\n\n\"I was there when Daniel brought in your broken body, kid, covered in ash-filled burns. Saw you had a pretty nasty sword slice from head to crotch too. Sort of mark Viktor liked to leave on more than a few victims I've known.\" Jacob grinned at him, showing off his teeth, and how his face could look fucking evil as hell even with a bandage over his eyes. \"Tony and Viktor were elders. You don't get that age being careless with fire.\" He leaned in, close enough Jack could feel the creature's gaze, eyeless or not. \"And your reaction was admittance enough.\"\n\nFuck. Fuck fuck fuck him, fuck him god damn it. Don't say another word Jack.\n\nBut Jacob started walking again, and with a glance back to him, motioned for him to follow. And now, Jack had no fucking choice.\n\n\"... you have no proof,\" he said. Please don't know about Lucas for the love of god.\n\n\"You're right, I don't; I wouldn't need it. But this is just between you and me. And Annie of course.\" Smiling, grinning, smirking, Jacob kept walking, and Jack had to jog to catch up to him. \"I never did thank you.\"\n\n\"Thank me?\"\n\n\"Yes. Annie and I worked hard to get those two to meet head to head, but I doubted it'd end with either of them dead. Thanks to you, they both died! God damn what a fucking relief that was.\"\n\nJack fell in step beside the old monster, and glanced left and right with quick snaps of the eye. Jacob was good at timing his words, controlling his voice, speaking in ways to prevent nearby kine from overhearing. But he was still risking Jack's life just by bringing it up. Fuck him. Fuck him fuck him.\n\nWait.\n\n\"... you... were working with Antoinette?\" Jack reached out, and grabbed Jacob's wrist.",
        "Like grabbing a titan by the toe. Jacob stopped, and turned his head to face him.\n\nJack froze. The beast in his gut froze. The world froze. Not a single kine breathed or moved an inch for that split moment. Jack stared up at the thing turning to look at him through the eye bandage, and his dead heart caught in his throat; he could see the darkness of his empty eye sockets. Get away. Get away.\n\n\"Don't do that.\" Jacob yanked his wrist free, and started walking again.\n\nAnd again, Jack stood there, watching the man's back. What the fuck was that? \n\nThe leader of the Circle of the Crone in Dolareido. Rarely did Jack ever have to deal with them, and almost never Jacob directly, but there were tales of their behavior, of their sacrificial rituals, their collection of bones from victims, their primal ways. Witches. But, that wasn't what Jack felt when Jacob had looked him. Just a glance, just a turn of his head, and... it was like a thousand hands reached out from the black, grabbed him, pinned him, and pulled him into the obsidian nothingness below.\n\nHe gulped, and jogged back up to stand beside him as they walked. The nearby kine didn't notice the predator walking the streets, or his bandaged eyes; just the right amount of the cloak of night to hide it, probably. But he wasn't hiding anything from Jack, any of the old beast in the bastard's gut that made Jack want to run.\n\n\"Yes, I was working with Antoinette. Your grandsire had become a psychopath, concerned only with his own survival. And Tony? Always hated that fucker. Conniving, manipulative kid, but not in the amazing way I am.\" Jacob chuckled and licked his teeth. \"He was a whiny brat who would have ruined Dolareido, just to hurt his ex. Fucking cunt.\"\n\nJack forced his eyes onto the sidewalk. The creature next to him was tearing into elder Kindred like they were pests. Viktor had gotten half his head blown off and had managed to recover in minutes, and Tony had slaughtered a thousand Kindred-summoned rats in a matter of seconds as well, with his bare hands as far as Jack could tell. They were gods, not pests to be laughed at.\n\n\"Your girl Annie and I came to Dolareido when it was barely more than a village surrounded by woods, Jack. Her and Daniel, her boy Tony\u2014just a young ancillae at the time, me, and that asshole Viktor. We worked hard to make this city a great place for our kind to live. And we succeeded, compared to other cities.\"\n\nJack didn't ask for a lecture, didn't ask for his history or life story. But any information was better than none. So he pushed down the frown, and listened.\n\n\"So,\" Jacob continued, \"I consider this my city as much as the Prince does. Leeches come here, sucking on our success. Which is fine to an extent, it's a fucking city after all. But when people come here and try and set the rules, dictate to us what we can or can't do? Fuck that, and fuck them. I'll burn this place to the ground before I let someone take it from me.\"\n\nIf I can't have her, no one will. What a classic, tragic motivation. Jack winced as he glanced between the elder and the sidewalk, and the nearby kine that barely seemed to notice them as Jacob kept them in the cloak of night.\n\n\"What does that have to do with the Uratha? I get that they're here trying to push us around while they do their own things, but I don't understand where the conflict is. Why do you hate them so much?\"\n\n\"It... it...\" Jacob sighed, and raised his hands to look at his fingers.\n\nOh my god the ancient beast was speechless.\n\n\"... what did Avery do to you?\"\n\nJacob stopped. Jack dug his shoe into the sidewalk, ready to bolt. Stop poking the bear you stupid man. Could never learn to keep his mouth shut, lesson that refused to sink in, and it was going to get him killed eventually.\n\n\"I like you, Clarice.\"\n\n\"... what?\"\n\n\"I like you.\" The snake flicked his tongue a few times, and licked his lips. \"I can see what Annie likes about you so much. All the vamps in this city dance around on their toes, afraid to sink their weight into anything. You and that Damien fellow are the only ones that don't let ceremony and the future dictate your actions. Unpredictable, compared to Kindred. Even Garry, even Beatrice, much as they like to think of themselves as ballsy, brave fucks. That just makes them as predictable as angry bears.\" The elder leaned against a lamppost, eyes downcast but occasionally sneaking glances at Jack, complete with a few more smirks. \"You really want to know why I hate that bitch?\" The light of the lamp fell on him and cast him in a glow that reeked of film noir. \n\n\"... I do.\"\n\n\"How long you think your relationship with Annie is going to last, kid?\"\n\n\"With Antoinette? I... I don't know. I'm way too young to know that, and I'm not stupid enough to think I know the future. But I know that I love her, and... and that I didn't know what the fuck that really meant until I met her.\" Love was a word, only a word, until you felt it in your bones.\n\n\"Lucky, to be able to feel that at your age, kid. Lot of people don't find that until they're way past their prime. Lot of people don't find that ever. Me? Must have been... nearly four hundred years old at the time, when I fell in love. Real love, the sort you don't understand until you have it. The sort that... gets into your bones,\" he said, face pointed to the sidewalk. Well damn.\n\n\"Did... did Avery...\"\n\n\"Yes. Killed her. Minerva got in the way of their hunt\u2014don't ask, I don't know why. But Minerva died trying to stop something. So, imagine my frustrations, Clarice, that I don't know why that happened.\" Jacob wrapped a hand around the lamppost pole, and leaned away from it so his body was tilted out on an angle, other arm dangling.\n\n\"... I am not FBI, and you are not a psychiatrist, Jacob.\"\n\nThe old snake hissed. \"What is one as old as I, if not a student of human nature, Master Terry? You, a social shut-in starting to blossom and open to the world of Kindred. Weight in your steps, distant but heavy. Took on a burden when you were too young for it, when you were alive. Father dead, I imagine. Became quite the analytical fellow after your dad died, distant with people, distant with emotions, constantly intellectualizing when you realized it was easier to weigh things as evidence and matter, instead of emotions. That's when you realized people are stupid creatures, compelled by their emotions to the point of absurdities. And yet, where they could find happiness, these idiot insects following their chemical reactions, slaves to them, you could find none. You saw the veil of ineptitude that runs the world, and you decided to play it safe, to coast through the world on your intelligence, afraid to enter that world of stupidity. You thought you were above it, but now, as the power of centuries dance before you, you realize you were just afraid you didn't have the courage to expose yourself. So much easier to stay... distant. Only now, do you realize you were a fool and a coward to hold everything and everyone at arm's length. You test the waters cautiously, now that you see the weight of eternity ahead of you. Like a fucking baby bird peeking over the edge of the nest.\"\n\nJacob snorted, and stared at the ground. \"If not for being embraced, you would have gone through life alone, probably as a lawyer, something that would fit your tendency for inquisitiveness, and your tenacity. And if not for a forceful personality like Annie, someone willing to punch through your barriers, your fear, it would have taken centuries for you to meet someone you could love.\"\n\nJack took a step back, and looked down the same way Jacob was. He might as well have been eyeless too.\n\n\"Thought you said I was unpredictable, and... that you liked me.\" Let's just conveniently ignore how accurate his analysis was, how much it resonated. Truth had a habit of doing that. Jack would have been a boring man, content to coast through life, if he'd never had his Requiem. If someone as amazing as Antoinette hadn't found his pathetic squirming and foot-in-mouth dialogue charming. Even before, if someone as wise as Julias hadn't noticed the potential in him.\n\nThe old man laughed. \"You ask questions where others won't, and have this nasty habit of surviving where you shouldn't. And that makes you a very, very dangerous person, Clarice. Dying seems to have agreed with you, made you into someone I'd like to keep around.\"\n\nNever did Jacob act his age, like the ancient beast he was, like Viktor or Maria or Michael, or Daniel or Tony or Lucas or even Antoinette. They all acted... old. They all acted like they were sick of people's shit, and were going through the motions for most things. Every time Jack caught a glimpse of Jacob, he didn't get that impression. The man called him unpredictable, then what the hell was Jacob compared to him?\n\n\"You want me to find out why Avery killed Minerva?\"\n\n\"Yeap.\"\n\n\"... and if you don't like the answer?\"\n\n\"What do you think?\" Jacob said, face deadpan, smirk and grin gone, face pointed at the sidewalk.\n\nA loud, high-pitched screech of metal and wire jolted Jack, made him jump a couple feet as his spine tried to leap out of his body. Jacob let go out of the lamppost, and started walking again, leaving behind the imprints of fingers \u2014 more like claws \u2014 on the pole deep into its body.\n\n\"Do you agree with Annie? That with some cooperation and some self-awareness, Kindred can grow past their animal urges? That we'll survival the future?\" the old monster said. Not with a mocking tone either, like Jack expected, or with a sneer or grimace or anything. A dead, cold face that made ice drip down Jack's back.\n\n\"... I do. One of the reasons we get along and love each other, we have similar views of our kind, I guess.\"\n\n\"She is a happier woman, since you came into her life, kid.\"\n\nOk, enough was enough. Jacob was walking a line between tragic character and psychopath villain, and Jack couldn't get his bearings. He had to cut through the bullshit.\n\n\"Jacob, what do you want from me? Even if I do find out what... what...\" The two of them stopped, and stared down the sidewalk, past the few kine walking this far near Rich Side, and onto the two women ahead of them.\n\nClara, and Avery. The two weren't talking, weren't looking at each other or anything else, except for the two Kindred. Still in typical street clothes, and a little out of place among the suits and dresses of the several kine that walked past them. Avery had been smiling, but her smile faded away as the two came closer, close enough until Jack could see the subtle frown on Avery's lips.\n\n\"... getting old, Avery,\" Jacob said.\n\nShe'd been around in the fifties, but she didn't look old enough for it. Werewolves must have aged slower than humans then, like the Begotten. In just a week Jack's world had gone from vampires, to vampires and werewolves and monsters, each with their own desires and hungers, each with their own motivations and physical capabilities. He was never going to get used to it.\n\n\"Jacob,\" she said.\n\n\"So this is Jacob.\" Clara came forward, flicked some of her box-braid hair back over her shoulder to get it behind her, and stood only five feet from the old Kindred. \"Avery wasn't lying about the eyes.\"\n\nJack winced and looked around. The humans kept walking by, Jacob's cloak of night insuring their eyes slid over the two Kindred like shadows on black, but the two werewolves seemed unaffected. Close as they were, Jack could feel the Nosferatu growing the aura to encapsulate the two wolves as well. Preserve the Masquerade above all else; even now Jacob obeyed that law.\n\n\"Clara,\" Jack said. \"Nice to see you again.\"\n\n\"Ha, is it? You're hanging out with eyeless here, can't imagine the conversation was to our benefit.\"\n\nJack shook his head. \"It wasn't like that.\"\n\n\"I bet it wasn't.\" Avery came up to join Clara, and the two stood side by side as they both watched Jacob. Neither of them looked Jack's way, not for long at least, eyes always coming back to catch the Nosferatu. \"Any luck talking to the Primogen, kid?\" Eyes still on Jacob.\n\nJack waited, and looked at Jacob. The man wasn't moving, and his hands were in loose fists that dangled at his sides. If he was angry, if he was fuming or livid or ready to strike, Jack couldn't tell, his beast couldn't tell. Like a perfectly calm animal, silent and waiting. Like a snake waiting for the right moment to strike.\n\nJacob didn't like to do that, far as Jack knew. The elder liked to dance, to play coy, to joke and poke. He never did the silent act.\n\n\"Spoke with them several hours ago,\" Jack said. Maybe if he kept talking, things could go smooth. \"You hunted me down to ask that? No way we just stumbled onto you by accident.\"\n\n\"Perceptive,\" Clara said, grinning at him. \"We got your scent, yeah, and Avery knows the city well enough to guess where you'd be near.\"\n\nScent. They're wolves, Jack, don't forget they're wolves.\n\n\"Jacob out walking with you, I'm guessing he wanted to talk about us,\" Avery said. Unlike her companion, Avery didn't chuckle or smirk or grin when she met his eyes. Her face was just as cold as Jacob's, and she let her arms dangle at her sides as she came close to stand in front of the Nosferatu. \"What'd you tell them?\"\n\n\"I uh, told them the tunnels under Devil's Corner are off limits, and that I'm to be the intermediary between our two kind,\" Jack said.\n\nAvery nodded. Seemed to satisfy her, if he was reading her right.\n\n\"And their response?\"\n\n\"... frustration, really. But they seemed to agree with the middleman idea, and to stay out of Devil's Corner, if only barely.\"\n\nClara chuckled, and came a bit closer to Jack again. \"Telling Kindred what they can or can't do must have really gotten under their skin, especially when they know it's the right call. Damn I would have loved to have been there, to see them snarl and groan about us blocking off sections of their own city. Like taking away kids' toys and telling them to go to bed.\"\n\nYeah, Clara had them figured out there.\n\nQuiet fell on them as Jack struggled to find the next thing to say. Jacob and Avery were only a few feet apart, and each moment Jack could feel the old vampire's insides twitch. If he was telling the truth, the man lost the love of his life to the woman standing in front of him. And Jacob likely was telling the truth, given what Jack knew about him. Manipulative, sure, but not the lying type, when the truth was the far more visceral, brutal tool.\n\n\"... Jacob,\" Avery said, \"I wanted to talk to you.\"\n\n\"Use the middleman.\"\n\n\"No, this is personal. I wanted to talk to you about Minerva.\"\n\nJacob visibly twitched. \"Is that a joke, tiny wolf? You refused to explain what happened, last I recall.\"\n\n\"And I still do.\" Avery got in closer. She had to look up to meet Jacob's eyeless gaze, short as she was, but her thick, muscled frame betrayed no weakness. And from so close, Jack could feel the woman's breath, feel her heat and her life. Feel her beast. It wasn't the same as a Kindred's; vampires' beasts felt like shadowy things of hunger and deceit, eyes in the dark, and fangs. Her beast was colossal, and primeval. From so close, he could feel its animal ferocity and size pressing on him, barki\u2014roaring at him. Not with real aggression, but to display dominance, like animals often did.\n\nHe was starting to miss the Danse Macabre. At least it was subtle. These wolves had all the subtlety of a nuke.\n\n\"Get out of my face, Avery. If you won't tell me what happened, we have nothing to say to each other.\" Jacob said.\n\n\"You don't have to say shit, old man. Just listen.\" Avery sighed and shook her head, before she reached out, and shoved Jacob. The man took a step back, and the loose fists at his sides tightened. \"I am sorry that I killed Minerva. It was an accident.\"\n\nHoly shit. Jack stepped back with Jacob, and tried to swallow down the words. Jacob coughed them back up.\n\n\"I'm sorry, you're what?\"\n\n\"I said I'm sorry I killed her. I didn't want that to happen. She insisted on getting in the way, and in the fight, she was killed.\"\n\n\"She's telling the truth, Jacob,\" Clara said.\n\nThe old bastard sneered. \"What would you know? You weren't there, kid. I don't know you, I know her. And I know how much of a fucking animal she is. Ever seen Old Yeller?\"\n\nPot calling kettle. Jack wanted to say it, but he wasn't that stupid. And besides, as he watched the argument, he had to admit, Jacob didn't seem to have the bloodlust in him Jack had expected. Tony, Viktor, Lucas, they all had a snap to them, something that drove their eyes to wild abandon. Something that sank them into almost mindless obsession with the moment, with violence and death, almost like a starved Kindred about to frenzy. He didn't see that in Jacob. He saw a lot of other horrible, twisted shit, but not that.\n\nAvery came up to Jacob, and shoved him again. Again, Jacob took a step back, fists tightening until they were shaking at his side. The hell was Avery doing? Why wasn't she afraid? The man was half a millennium old, and she had to know that, she had to feel that. She had a beast in her gut too; different than a Kindred, but she had it too. No ignorance or arrogance was going to mask the fucking elder and the sickening power that dripped from every action he made.\n\nBut Avery came closer, and got ready to shove him a third time.\n\nUntil Jack stepped between them.\n\n\"The fuck are you doing?\" Jack said. Maybe when he was human and alive, he wouldn't have said a thing. He would have coasted, like Jacob said. But now, he couldn't. Cause he was a Ventrue, for better or worse.\n\nAvery frowned at him. In the dark, her silver blue eyes caught the light a little more than they should, reflecting street light into his gaze.\n\n\"Jacob needs to let out some aggression, Jack. I killed his woman and you know what he fucking did? Fucking nothing. Fucking. Nothing.\"\n\nJack peeked over his shoulder at Jacob. Without eyes, reading him was so damn fucking hard, but the creature was staring at Avery as far as Jack could tell, staring and frozen.\n\nClara reached out, took Jack's shoulder, and pulled him aside to stand beside her.\n\n\"Let em talk kid,\" she said. \"Jacob will keep it all hidden in that cloak of night crap right? Just let em talk.\" Her fingers offered him a small squeeze of the shoulder, and she smiled down at him as she did.\n\nBut she didn't get it. He shook his head, and tried to walk back to Jacob, but she tightened her grip a little and pulled him back.\n\n\"... he's going to kill her,\" Jack said.\n\n\"Heh, him and what army? Besides, she's a Cahalith. She'd welcome the fight just for the story.\"\n\n\"This isn't about that!\" Avery said with a snarl and a glare for her subordinate. \"Not looking for a story here. Looking to take care of this problem here and now.\"\n\n\"Why get a middleman then?\" Jacob said between clenched teeth.\n\n\"For everyone else. But you? I felt like I should do this in person.\" And again, Avery reached up, and pushed the eyeless monster back a foot. \"Much as you might like to paint me as the bad guy, I do\u2014we do what we do because the world needs us. Sometimes people get stuck in the middle. Minerva? She put herself in the middle. So I'm sorry that I killed her, and I mean it when I say I didn't want to. Take a swing.\"\n\nJack stared at Avery and Jacob, back and forth, eyes snapping and fingers rubbing together. She didn't know what she was asking for.\n\nJacob snarled, quiet, deep and rumbling in his throat, and wiped his thumb across his lips. \"You think I'll be satisfied with a fist fight? You worthless, fuc\u2014\"\n\n\"No, but I'm trying, Jacob. Don't want us to be enemies, I have nothing against you. Hell, I don't have anything against Antoinette either, and she's the one poking the veil, Jacob.\"\n\n\"... the Prince forced nothing on Minerva. You, however, did.\" The old Nosferatu took a step forward, and got into Avery's face. \"You think some violence will solve this? Are you this mindless?\"",
        "\"I\u2014\"\n\n\"No. You don't get out of this with a fist in the face, you fucking dog. Not enough. Nothing would ever be enough.\" Jacob, shaking his head and grinding his teeth, stepped around Avery, and started walking. Clara let go of Jack and blocked the old man's path.\n\nJack didn't see the man's arm move, but he heard it. He heard the crunch of knuckle against bone, and the snap air parting. Blood splattered over Jack's face, and he stared down at Clara as she crumbled, a streak of red following the movement of her skull as she fell to her palms and knees. The humans continued to walk around them like nothing had happened, like the werewolf hadn't just taken the back of Jacob's hand to the jaw. Like blood wasn't gushing from her mouth into the cracks of the sidewalk, and sparkling in the streetlights.\n\n\"I don't know you, dog. Get out of my way.\" Jacob walked on without so much as a glance over his shoulder.\n\n\"F... fucker...\" Clara said, holding her mouth, the split open lip looked like it belonged on a butcher's table, and as she cradled her jaw, more of the red liquid dripped from between her fingers.\n\n\"Shit. You ok?\" Jack said. No idea how well werewolves healed when in human form, but fuck that looked painful. Jack got down on a knee, and held out his palm. Clara took it, bloody hand and all. \n\n\"Yeah. Fuck, he sucker punched me.\" Every use of her lip splattered more blood, and attempts to pronounce F were a slurred mess.\n\nDon't stare at the blood, don't smell the blood. And whatever you do, do not taste her blood. Don't lick the warm stuff off your hands. Just help her up.\n\n\"Sorry,\" he said, \"about Jacob I mean.\"\n\n\"Nah.\" Avery came up beside him, and the three of them stared at the old man as he disappeared into the crowd. \"We knew how he could be. I was hoping he could take out a little anger on me, maybe avoid the future fight, or delay it. But, seems I only pushed it to happen sooner.\"\n\nHumans started looking their way, the three of them no longer protected by Jacob's cloak, and many did a double take on Clara and the copious amount of blood trickling down her neck and chest. Jack had nothing to give her though, and all he could do was wince and offer a pained smile.\n\n\"... you know he's half a millennium old right?\" Jack said. \"He's... I've never seen him fight, but I've seen elders do some pretty scary shit, Avery.\" Viktor and Tony, Lucas, Daniel, fucking monsters. And Antoinette, slaughtering over a dozen Kindred with her literal bare hands, until she was covered in ash. \n\nAvery shrugged. \"Kid, what'd I tell you? You won't win a fight with us.\" She brushed him off, and started walking the opposite direction of Jacob. \"If Jacob becomes a problem, I'll kill him.\"\n\n\"He just wants answers. You killed the love of his life, Avery, and he doesn't know why.\"\n\nThe woman glared at him, grit her teeth, and walked over to the nearby lamppost. Sure enough, she reached out to touch the grip marks Jacob had made. \"He knows all he needs to know.\"\n\n\"... come on, you want me to be the cream in the Oreo here, you're going to have to give me something to work with.\"\n\nThe two werewolves blinked at him. \"... what?\" they said, in unison. For a moment, they reminded him of Ashley and Julee.\n\n\"You know, Oreos? Cookie with cream in the center? And the two cookie sides are hard and rigid and... make for a good parallel... with Uratha and Kindred and...\" Wow, tough crowd. The two werewolves were frowning at him hard enough to break glass, at least until Clara started laughing, then groaned as she cradled her ruined mouth. Avery just kept frowning though.\n\nHe was beginning to like Clara. The two wolves may have been terrifying, and being around them had his guts on edge and demanding he hide from them; Clara at least knew how to laugh at normal jokes and stuff though.\n\n\"We're trying to keep your fingers out of shit they shouldn't be in, kid,\" Avery said, frown chiseled into her face. \"Curiosity killed the cat.\"\n\nJack sighed, and looked to Clara. \"You really think that?\"\n\nClara winced, looked at Avery, and then back at him. But she didn't say anything, only shrugged.\n\nWell, that went nowhere fast.\n\nSighing louder, maybe just a little louder than needed, Jack jogged after where Jacob was walking. But the man was gone. Just when he was finally starting to understand the man, the wolves had ruined it. Avery's approach may have worked for wolves, but for Kindred, you had to be more subtle, more aware of the threads they weaved. Willing to dance the Danse.\n\nJacob was going to visit him again, and try and get his fingers into him, try and use him to get revenge on the Uratha. Only person Jack knew who could keep him safe from the man's machinations was Antoinette. He could walk to her tower, and just... ignore the shitstorm brewing. She'd give him sanctuary, hide him from all this fucking insanity until the Uratha left. One word, and she'd take care of everything for him. All he had to do was go visit her in her tower.\n\nJack rubbed his buzzed head, and started the walk home instead. You're a Ventrue now, for better or worse."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "vampire romance",
        "werewolf",
        "vampire",
        "squirting",
        "large breasts",
        "anal",
        "violence",
        "slow"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-03-ch-08"
}