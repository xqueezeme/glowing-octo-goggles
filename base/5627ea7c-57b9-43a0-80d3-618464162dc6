{
    "title": "Amnesty Program Ch. 04",
    "pages": [
        "This is a continuation of the story that began with Amnesty Program.\n\n----\n\nRebecca sat cross legged on the couch with Jason's laptop in front of her, typing their daily report. She felt small in his clothes, and the sleeves fell over her hands. Jason sat next to her, concentrating on sewing the button back on her grey dress. Hunched over the cloth, with an endearingly earnest air, and she saw that he had some skill. He had matched the thread to the other buttons perfectly and she watched his long fingers do the tiny needlework. It occurred to her that his hands were strong enough to tear the dress from hem to hem. She smiled.\n\nCookies were baking, filling the house with a delicious smell.\n\n\"How's that look,\" he said, showing her. She thought she heard a hint of worry in his voice. He really wanted her to be pleased.\n\n\"I love watching your hands,\" she said quietly,\n\nJason smiled and she saw his eyes flick up towards the kitchen. \"The button, is it okay?\"\n\n\"It's perfect. Thank you.\"\n\nJason's mom, Diane, was taking the cookies out of the oven.\n\n\"Does she always make that much noise in the kitchen?\" Rebecca whispered.\n\nJason grinned. \"Decibels are an ingredient in everything she cooks.\" He looked down at the thread in his hand. \"Damn. I forgot the scissors.\" He stood and went into the kitchen.\n\nRebecca heard his mother asking him questions in what she thought was a quiet voice.\n\n\"Where did you find her?\"\n\n\"Mom, I didn't find her- we met at school. We were kind of thrown together for a group project. She didn't want to work in a group and neither did I.\"\n\n\"So, a match made in heaven?\"\n\n\"Come on, Mom.\" Rebecca could hear the embarrassment in Jason's voice.\n\n\"It's about time you noticed that there are two kinds of people on the planet. You're one kind and she's the other kind. A girl. And if you aren't going to make the first move, then I will.\"\n\nRebecca set the computer aside and walked quietly to the kitchen door.\n\n\"I already did, Mom...\"\n\n\"Really? How?\" she interrupted, her voice sarcastic, \"By showing her your calculator?\"\n\n\"He bought me a cup of coffee.\"\n\nJason and his mother both startled.\n\nRebecca walked over and picked up a warm cookie. They watched silently as she took a bite, unsure what to say. One of the melted chocolate chips split and left a line of chocolate on her lower lip and her chin, dark against the pink of her lip. She didn't notice.\n\n\"And he held my hand.\" Rebecca said around the cookie and noticed them staring at her.\n\n\"What?\" she said, puzzled.\n\nJason pointed at her lip, dropped his hand. \"Chocolate.\"\n\nHis mother turned to find a paper napkin and when she turned back, Jason was already wiping the chocolate from Rebecca's chin with his finger. She coughed, not used to this tenderness in her son. He quickly licked it off his finger. Chocolate was still shining on Rebecca's lip.\n\n\"Well.\" Jason's mother said, \"When I was in college...\"\n\nJason kissed Rebecca, gently and deliberately, silencing his mother forever on the subject of girls and getting the chocolate from Rebecca's lip all at once. Rebecca smiled as he stepped back.\n\n\"Thank you,\" she said, smiling at him demurely. \"That was sweet.\" She took another bite of her cookie.\n\nJason heard his laptop bing in the other room. He had an email. He touched Rebecca's lip once with the tip of his finger and went to check the message. He read it and then called Rebecca in to read it too.\n\n----\n\nJason,\n\nWe'd like you to do some work in preparation for tomorrow's task. Rebecca will be doing the same preparation, but please don't share your work with each other before we give you some further instructions.\n\nMake a list of ten requests- things that you would like to ask Rebecca for, and that she is capable of granting. It will be best if you don't just memorize the requests or make it up on the spot. Type them out and make a hard copy. The requests should be simple and in command form, so questions like \"What is your favorite color?\" should be phrased \"Tell me your favorite color.\"\n\nYou are free to put any request at all on your list, but keep in mind that you will be sharing this list with her tomorrow.\n\nMeet Professor Suarez and me in her office tomorrow at 10:00 and we'll explain the rest of the task.\n\nProfessor Denton\n\n----\n\nRebecca grinned. \"I think I'm going to like this one.\" She took the dress and went back to change in Jason's room, leaving his jeans, his belt and his shirt folded neatly on his bed. She left her yellow panties in his underwear drawer and hoped he'd find them before his mother did.\n\n----\n\nRebecca woke the next morning smiling in her bed, still wearing Jason's boxers. She knew she probably should have given them back when she changed the day before, but she liked wearing them. When she had undressed for bed the night before she stood in front of her mirror, looking at herself in them, liking how they hung low on her hips, liking how it made her feel close to him.\n\nShe wore Jason's boxers while she ate breakfast, and while she brushed her teeth. After a shower she sighed and stepped into her own panties, a pair of jeans, and a white summer blouse.\n\nRebecca had written and rewritten her list. She had trouble picking just ten things, she could think of so many things she wanted to ask Jason for, but was just too chicken. The task gave her an excuse to be much more direct without seeming demanding.\n\nJason met Rebecca at the door to Professor Suarez's office at 9:58. He felt like his list was burning a hole in his backpack. He hoped he didn't have to share it with the professors.\n\nRebecca grinned mischievously. \"I'm going to have you so busy you won't have time to eat for two days.\"\n\nJason took a deep breath. \"I just hope you don't slap me.\"\n\n\"Why,\" she said as she stepped in close to him and batted her eyes. \"Is spanking on your list?\" She knocked on the door.\n\n\"Come in,\" Professor Suarez called and they entered, Rebecca first, in high spirits, and Jason following, with a touch of apprehension.\n\n\"Have a seat. There's something I'd like to address before we get to today's task. You made a recommendation, Rebecca, for another test subject for the Amnesty Program, Emily Andrews, your roommate.\"\n\n\"Yes,\" Rebecca said, \"We told her about the program in broad terms and she seemed interested. I hope that was okay?\"\n\n\"It's not going to end up in the university newspaper, is it?\"\n\nJason answered quickly. \"No. I made sure she understood that we were speaking off the record.\"\n\n\"Good. I've taken a look at her records and she does seem highly motivated and capable. She also is fairly overcommitted. I've talked this over with Professor Denton and we think she'll make just a mediocre candidate for our purposes.\"\n\n\"Why?\" Rebecca asked, surprised.\n\n\"In Journalism, there isn't as big a difference between educational expectations and work expectations. With you two studying sciences, that big gap is what we're trying to exploit. We want to close that gap. She doesn't have that much of a gap to close. She would probably work out well as a partner to a better candidate though.\"\n\n\"Well, thanks for considering her,\" Rebecca said.\n\n\"You're welcome. You're actually in a fairly good position to identify candidates for the program. Feel free to bring names to us any time.\"\n\nProfessor Suarez closed one folder and opened another. \"Now. With your permission I'd like to look over your lists just to make sure they'll be appropriate for today's task.\"\n\nJason's heart sank. He had been hoping to just keep this between himself and Rebecca. Their daily reports had been frank and open, even describing the nature of some of their sexual play, but it was one thing to write about what had happened, and something else to write about what you wished would happen. He dug his list out of his backpack and caught a glimpse of Rebecca's face as she handed over her list. She was looking a little startled too.\n\n\"Thank you,\" Professor Suarez said, looking over Jason's list first.\n\nHe sat uncomfortably and watched her face for signs of shock or disgust. There was none. In fact, she could have been reading a grocery list.\n\n\"Excellent,\" she said, handing the list back, \"that's going to work fine.\" She turned her attention to Rebecca's list and had a similar reaction, although Jason thought he saw her suppress a grin.\n\n\"Very good. Those are exactly the sorts of things we're looking for. Rebecca,\" she said, her professional composure cracking briefly, \"Number 5 is a work of pure genius.\"\n\nRebecca reddened. \"Thank you.\"\n\nA knock came at the door and Professor Denton walked in.\n\n\"Have a seat, Philip,\" Professor Suarez said. \"I've taken a look at their lists and I think we're ready for the instructions.\n\n\"Thanks, Sandra,\" Professor Denton said, then addressed Rebecca and Jason. \"Stress is a major health factor in most high-performing environments, both in and out of the educational system. Some of that, of course, is unavoidable, but we want to help equip you to avoid the stress that you can. Often, that comes by simply saying \"no\" to things that you will have to pay too high a price to complete. Disappointment is also natural product of competent environments and learning to be disappointed gracefully is a skill.\n\n\"We're going to kill two birds with one stone today. When you leave here, take some time to sit down together privately and make each request on your list to the other verbally. The other will refuse every request with a simple \"no.\" In order to have the desired outcome, the refusal must be real and in force for at least twenty four hours.\n\nJason sighed deeply. Rebecca looked angry.\n\n\"There are some elements here that are unfortunately not congruent with the workplace,\" Professor Denton continued, \"as in the likelihood that you will each be refusing to do things that you would much prefer to do. My hope is that this will reinforce the graceful disappointment aspect of the task. Do you have any questions?\"\n\n\"Yes,\" Rebecca said, a slight waver in her voice, \"what will you do if we cheat?\"\n\nProfessor Denton thought about this for a moment. \"Well, that would depend on the nature of the cheating. There are types of cheating that would probably enhance the success of our overall goals and there are types that will undermine it. I will leave it to you. Blindly following the rules of a task is ultimately of no consequence. The educational goal is primary. If you change the task, be prepared to explain how the change better suits the goals of the Amnesty Program. Maybe you'll have something to teach us.\"\n\nRebecca nodded, folded her list crisply and slipped it into her backpack. \"Is that all?\"\n\n\"Yes,\" Professor Suarez said, \"unless you have any more questions.\n\nJason shook his head.\n\n\"Let's get started,\" Rebecca said coldly and headed for the door. Jason followed, his list crumpled in his fist.\n\nProfessor Suarez sighed once the door slammed shut. \"They're ready for one of the societal norm challenge tasks, I think.\"\n\n\"You're right, Sandra. Let's get one in the pipeline and put it in front of them this afternoon while they're still angry and watch the fireworks.\"\n\nProfessor Suarez sighed. \"Damn, I wish you had been one of my professors.\"\n\nProfessor Denton raised his eyebrows at her. \"If I had been, I would have gotten fired.\" He winked and smiled before walking out the door.\n\n----\n\n\"My house,\" Jason said to Rebecca's back as she stormed down the hallway, \"Mom's not back until dinnertime.\"\n\n\"What difference does it make,\" she said bitterly, \"I was all excited, and, now it turns out I was making a list of things that are never going to happen... and they're not going to happen because I put them on my list.\"\n\nJason had to jog to keep up with her. \"It's 10:09 a.m. right now.\"\n\n\"So... so... fucking what,\" she said, brushing a tear from her eye.\n\n\"At 10:10 tomorrow morning, I'm going through my list with you again. I promise. And if you don't tear yours into pieces before then, I'll answer your requests too- honestly, not with some prescribed psychology bullshit.\"\n\nShe turned around and hugged him suddenly, burying her face in his chest. He was startled, but he put his arms around her, backpack and all. \"Thank you!\" she said into his shirt, then, after she sniffed once, \"you'll be sorry.\"\n\n\"Why,\" Jason said, warily, \"is spanking on your list?\"\n\nRebecca laughed and shook her head, squeezed him once and stepped back. She looked up at him.\n\n\"Good,\" he said, grinning down at her, \"then there's something we can still do today.\"\n\n----\n\n\"Let's not flip a coin,\" Rebecca said, sitting next to Jason in his living room. Jason's house was uncomfortably silent. \"I'll go first. I want to get this over with.\"\n\nJason nodded, feeling strangely sad.\n\n\"Get me a glass of water.\"\n\nJason was on his feet headed for the kitchen before he saw the crestfallen look on Rebecca's face. It was her first request and he had to refuse it. He sat down again, slowly.\n\nHe swallowed. \"No,\" he said, \"but why...\"\n\n\"Because,\" she said, \"you would do it so sweetly.\"\n\n\"I would try.\"\n\n\"Tell me about your hardest crush. Include fantasies.\"\n\nJason closed his eyes and saw Miss Johnston, his calculus tutor, leaning over an integral he had made a mistake on, her breast brushing his arm. He opened his eyes, smiled at Rebecca. \"No.\"\n\n\"Wash my hair.\"\n\nJason put his nose behind her right ear, breathed the fragrance of her hair in deeply and sighed. \"No.\"\n\n\"Let me fall asleep with my head in your lap.\"\n\n\"No.\" Jason felt a physical pang in his stomach. He knew this was just an exercise, he knew it was temporary. His stomach still hurt.\n\n\"Let me and some other girls watch you play basketball with your friends. You're skins.\"\n\n\"Really?\" he said, surprised, \"That's the one Suarez thought was genius?\"\n\nRebecca was impressed that he had been counting, but she narrowed her eyes at him. \"They're all genius.\"\n\n\"Oh, uh no.\"\n\n\"Too bad,\" she said, looking back at her list. She took a deep breath. \"Tell me everything there is to know about your cock. Answer any questions.\"\n\n\"No,\" Jason said, but he raised an eyebrow at her and smiled.\n\nRebecca put her list down. \"Does he have a name?\"\n\nJason laughed. \"I can neither confirm nor deny the existence of a name for my cock.\"\n\n\"Wanker,\" she said, trying for a British accent.\n\n\"Guilty,\" he said, \"as you well know.\"\n\nRebecca grinned crookedly, remembering how she hadn't cleaned his come off her canvas tennis shoe when he had masturbated for her.\n\n\"Tie me up and make me trust you.\"\n\nRebecca searched Jason's face as he processed her request. She saw his eyes flash to her wrists for a moment, making some secret calculation. When he looked at her eyes again, his \"no\" was so convincing, she thought she had offended him, but just as she felt her face flush with shame, he took her hand in his and bit her wrist just hard enough to leave neat marks.\n\n\"No,\" he said again, looking at her ankles, calculating.\n\nRebecca felt like she had just taken a step beyond her control. She tried to sound calm. \"I was really excited about that one,\" Rebecca said, and heard her voice tight with the promise of another chance. She looked at her list. \"Find and write down every blemish you can find on my body.\"\n\n\"No.\" Jason emerged and looked at her speculatively. She shrugged and grinned, pointing out a minor crescent scar on her shoulder. Jason covered it with his lips.\n\n\"Tell my pussy a story.\"\n\n\"No.\"\n\n\"It's one of my favorites on the list,\" she said, trying to convince him. \"I would be exceedingly grateful...\"\n\n\"It's a wonderful idea. No.\"\n\nRebecca didn't look at the list for the last request. Her eyes brimmed suddenly with tears.\n\n\"Promise,\" she said, slowly, \"to make love to me when the time comes.\" She covered her face, waiting hopelessly for him to speak.\n\n\"Yes,\" Jason said, \"yes.\"\n\nRebecca snorted a watery laugh. \"You're supposed to say no...\"\n\n\"I'm not even going to pretend to reject you like that. I promise.\"\n\nRebecca threw her list across the room. She straddled his lap and kissed him. \"I'm crazy about...\" she started, stopped when she heard herself, swallowed, started again, surprised at herself. \"I'm crazy about you.\"\n\nJason laughed. \"I'm crazy about you too,\" he said, \"and it's a good thing you said it now, because you couldn't have later.\"\n\n\"Really?\"\n\nJason nodded. \"It's number eleven on my list.\"\n\n\"You only get ten things on your list,\" she said, smacking his shoulder with her hand, \"you should have seen the nine things that didn't make the cut for my list. There was talcum powder and a rolling pin... and sushi!\"\n\nHe laughed and folded his list so only the last line was visible. He showed her.\n\n\"11.I'm head over heels for you. Tell me how you feel about me.\"\n\nRebecca beamed at him and kissed him again. \"No,\" she said into his mouth and touched the tip of her nose to his. She flicked his upper lip with her tongue. \"Anything else you want?\" She slid off his lap, crossed her legs and waited.\n\nJason looked at his list. \"Wash my car,\" he said, \"make my neighbors jealous.\"\n\n\"Is that one request, as in 'make my neighbors jealous by washing my car?'\"\n\n\"Yes.\"\n\n\"Are these the neighbors you play basketball with?\"\n\n\"Yes.\"\n\nRebecca smiled and nodded, but her mouth said \"No.\"\n\n\"Tell me what parts of my body you like to look at.\"\n\nRebecca ran her fingers lightly down Jason's arm and rested her hand on his thigh. \"No.\"\n\n\"Find a dirty story and read it to me.\"\n\nShe sighed, disappointed. \"No.\"\n\n\"Tell me what you would do if you caught someone having sex in plain view.\"\n\n\"I have caught someone having sex.\"\n\n\"Really? Who was it?\"\n\nRebecca smiled. \"My cousin and her boyfriend.\"\n\nJason swallowed. \"What did you do?\"\n\n\"I won't tell you,\" she said, \"today.\"\n\n\"Shit. Fine. Tell me every swear word you know. Use each one in a sentence.\"\n\n\"Hell no,\" Rebecca giggled, \"I mean fuck no. Shit. I just mean... no.\"\n\nJason's eyes lingered on the next request. \"Teach me,\" he said, \"how to touch your breasts right.\"\n\nRebecca's breasts lifted a little, as if to begin a lesson right then. \"I'll teach you something, she said, unbuttoning her blouse.\"\n\n\"But...\"\n\n\"Shut up,\" she said, draping the blouse carefully over the back of the couch. She sat close to him. \"This bra has two hooks in the back. Feel them with your fingers.\"\n\nJason put his arms around her. His nose was an inch from hers.\n\n\"The eyes the hooks are in are small and they'll tend to bind when you unhook them, especially if you try to force them. Take my bra off.\" She looked steadily into his eyes as his fingers fumbled behind her. \"Relax and you'll do fine. Are my eyes beautiful?\"\n\nJason was temporarily distracted. \"I love your eyes. They keep on talking when your mouth stops.\"\n\nThe clasp came undone.\n\n\"What,\" she breathed, \"are my eyes saying now?\"\n\n\"'Look at me' is what they're saying,\" he said quietly.\n\n\"Look at me.\"\n\nJason pulled the bra down and Rebecca slid her arms out of the straps. He had seen her breasts before, but it always seemed like some other beautiful, exciting thing was competing for his attention. Now Rebecca wasn't touching him, wasn't moving. All she was doing was sitting there, being beautiful for him. She took a deep breath, and Jason watched her breasts rise and fall, handfuls waiting for hands. She picked up her blouse after a long, charged minute and started buttoning it up again without putting her bra back on. She left the top three buttons open.\n\n\"I've forgotten,\" she said quietly, \"what your request was.\"\n\n\"Teach me how to touch your breasts right.\"\n\n\"No,\" she said, but she raised her hand to her left nipple and pinched it gently through the fabric. She let her eyes close and shuddered. She opened her eyes. Jason touched her other nipple lightly through her blouse, but she shook her head slightly, reluctantly.",
        "\"Tell me,\" he said, drawing his finger away from her, \"your best fantasy.\"\n\n\"No,\" she said, imagining the smell of dish soap and a warm, insistent presence behind her at a sudsy sink.\n\n\"Brag about me to a friend so I can hear.\"\n\n\"Ballsy,\" she said, \"arrogant. Intriguing. No. Is it okay if it's Emily?\"\n\nJason looked up at her, surprised. \"I guess so.\"\n\n\"Okay,\" she said, nodding to herself. \"No.\"\n\n\"Damn,\" Jason said, but he smiled. \"Give me a picture of yourself that will be sexy to me, but not to anyone else.\"\n\n\"Look at my face.\" Rebecca looked into his eyes, then closed her eyes for a moment. Opened them again. I'm imagining what your cock will feel like inside me. That's what I'm thinking about right now. A picture of my face right now, while I fantasize about your cock filling my pussy. Is that the picture you want?\"\n\nJason felt like his head was going to explode. \"Exactly.\"\n\n\"No,\" she said sadly, \"I'm afraid I wouldn't know how to do that.\"\n\n\"Liar,\" Jason said.\n\n\"Yes.\" Rebecca said back.\n\n\"Tell me in detail what your orgasms feel like.\"\n\n\"No!\" Rebecca said, then her face broke into a huge smile. \"That was all of them, wasn't it?\"\n\n\"Yes...\" Jason said uncertainly, \"What are you smiling about?\"\n\n\"I'm smiling because I was terrified that you were smart.\"\n\n\"Um...\"\n\n\"And a smart boy would have asked for a handjob,\" she gushed, \"and if he was really smart, he would have said where, and how, and then he would have asked for a blowjob too, since he was asking.\"\n\n\"Um...\"\n\n\"However, you,\" she said, straddling his lap again and laughing, \"you didn't. You didn't ask for a single thing that involves stroking your cock, or licking your cock, or sitting on your lap and mashing your cock with my pussy.\" She ground into him. \"What was going through that dim, wonderful excuse for a brain?\"\n\nRebecca's face was looking down at him, her hips gyrating, humping him gently through her jeans and his. Her breasts moved under her blouse with her rocking and Jason found himself unable to form a sentence. He opened his mouth, closed it.\n\n\"I figured,\" he said, finally, \"I'd ask for things that weren't likely to happen on their own.\"\n\nRebecca stopped. She started laughing. \"You're a sexual idiot savant.\"\n\n\"Thank you, I think,\" Jason said, and tipped his face up to kiss her gently on her neck.\n\n\"So,\" she said, \"What else didn't you put on your list? What naughty requests did you leave off because you thought they'd happen anyway?\"\n\n\"Well,\" Jason said, \"I do want to bone you.\"\n\n\"Yess,\" she said, rocking against him, \"and I want to be boned. I want to be everythinged.\"\n\n\"When?\"\n\n\"Friday,\" she said, \"will be perfect.\"\n\nIt was Wednesday. Jason traced his tongue along the edge of her jaw.\n\nRebecca sighed, enjoying his lips as they kissed the point of her chin, the hollow of her throat, the skin between her breasts. \"Do you know what the best part about your list is?\" she asked, as he unbuttoned the first button of her blouse.\n\n\"Yes I do,\" he said, \"tell me anyway.\"\n\n\"The best part is that I don't have to wait twenty four hours...\" she kissed him hard, \"to get your cock...\" she kissed him again, hungrily, \"...in my mouth, where I want it right now.\"\n\nShe slid to the floor and tugged his right shoe off. She stopped and let her blouse fall off her shoulders. Her breasts hung round and perfect in front of him. She twisted gently from side to side, showing off.\n\n\"Where,\" she said, \"do you want your cock?\"\n\nJason was unzipping his pants, pulling them off. \"I want one end of it attached to me,\" he gasped as her fingers curled around the silk firmness of his cock and she touched her nose playfully against the tip, \"and I want the other end anywhere that makes you happy.\" \n\nRebecca licked the underside of his tip and squeezed his length with her hand. She pressed her mouth over him slowly, savoring the moment. She smiled as she watched him suck in a breath. She worked him deliciously, gently bobbing and rocking. She was tender, deliberate, happy.\n\n\"Happy!\" she said, crawling up his body and kissing his lips. She shuffled her jeans off and went back down on him, held him in her mouth, feeling his pulse on her tongue.\n\nJason marveled, watching Rebecca. She was like a child kneeling in front of him with a toy- curious and playful. She was in no hurry. She pressed her chin just under his the crown of his cock and watched his eyes as she rocked her head gently, watching his pleasure, drawing him into her play. She wrapped him up in her hair, touched the soft skin of her cheek against his shaft, laughed.\n\n\"Do you want to play too?\" she said, waggling his penis in front of her face.\n\n\"I don't think I can reach,\" he said, bending over at the waist, \"but I'll try.\" Rebecca fell over laughing, watching his lips straining in vain for his own cock.\n\n\"It would be so hot if you could do that,\" she said, laying on the carpet, looking up at him. \"I'd watch you all day long.\"\n\n\"You think if I could suck my own dick I'd do it all day long?\" Jason snorted. \n\n\"Oh yes,\" Rebecca said, kneeling between his knees again, \"you would. You wouldn't eat,\" she said, licking his shaft from his balls to the tip, \"you wouldn't drink.\" She took him deeply and sucked hard as she pulled off of him. \"You would die of starvation.\" She admired his cock briefly. \"Ironic,\" she said, smiled and swallowed as much of him as she could.\n\nJason's laugh competed with a deep groan coming from his throat. \"Hey,\" he said, gruffly when she pulled off of him again, gently this time, \"do you know how a wireless repeater works?\"\n\n\"Sure,\" she said, tickling his balls with her fingernails and watching his stomach muscles respond, \"when a signal can't go all the way to its destination you put a repeater in the middle to boost the signal.\"\n\n\"Yes,\" he said, looking at her meaningfully, \"I can't get my signal all the way to my destination.\"\n\nRebecca looked at him blankly for a moment. \"So,\" she said slowly, \"you want me to...\" Her face broke into a huge smile. \"This is going to be fun.\"\n\nJason took Rebecca's right hand in his. \"Give me your thumb.\" He kissed the tip.\n\nRebecca giggled and kissed the tip of his cock.\n\nJason took her whole thumb into his mouth, tickled it with his tongue slowly. As he sucked her thumb, Rebecca did exactly the same thing to his cock. When he swirled his tongue all the way around her thumb, she matched him move for move, at almost exactly the same time.\n\nJason smiled. \"That feels weird. It's like I'm...\"\n\n\"Come on!\" Rebecca said impatiently, \"Do something else.\"\n\nJason took her thumb in his mouth again, bit it gently. He felt Rebecca's teeth. He pressed harder, experimentally and she followed. He ran his tongue over the tip of her thumb, tried different twisting motions, even bobbed his head a little. As long as he didn't move too fast, he could almost imagine he was sucking himself off.\n\nHe popped Rebecca's finger out of his mouth and she looked up at him, wondering.\n\n\"This feels weird,\" he started, \"I mean, it feels good and it's fun, but I think I like to be surprised a little too. If I wanted to play with myself, I'd just, um, play with myself.\"\n\n\"Well, I'll be your repeater any time.\"\n\n\"Thanks,\" Jason smiled, \"You want a turn?\"\n\nRebecca considered. \"Another time,\" she said, a hint of nervousness edging her voice. \"Can you help me out with something else?\"\n\n\"Anything.\"\n\n\"Do you think you can put the tip of your finger on my G-spot?\"\n\nJason felt his stomach drop. \"I don't know- I've only read about it.\" Jason paused, thinking, \"Isn't it kind of on the other side of, uh, virginity?\"\n\nRebecca grinned and stood. \"That depends,\" she said, taking Jason's hand and leading him away from the couch, \"on whether you think losing virginity is the beginning of something special or just breaking the seal on a cup of yogurt.\"\n\nJason stopped her in the middle of the hall. \"It's not a seal on yogurt.\"\n\n\"No,\" she said, \"it's not.\"\n\nJason led her to his room and closed the door. He kissed her, felt her take a calming breath. He smiled. \"I'm nervous. I don't want to hurt you.\"\n\nRebecca unbuttoned his shirt, slid it off his shoulders. \"You know what I would love?\" Rebecca said, resting her cheek on his chest, \"Do what you did yesterday. Use your imagination. I trust you.\"\n\n\"I absolutely can do that.\" Jason touched his finger to the back of her neck, let it follow her spine all the way down to the top of her panties. He ran his fingers lightly over her back until he felt goosebumps under his fingertips and she shuddered. He kneeled in front of her, taking the hem of her panties carefully in his fingers and pulling them off of her.\n\n\"Lie down,\" he said, nodding his head towards the pillow on his bed.\n\nRebecca wanted to bury her face in the pillow. She wanted her face both covered and uncovered. She wanted to hide and be seen. She wanted to be a mystery and be understood at the same time. She loved his scent, captured in the fabric of his bed and she did not hide. She relaxed and saw that he still stood over her next to the bed, naked. The look on his face made him beautiful to her- his admiration, his vulnerability, his tangible desire to please her. She touched his knee, all that she could touch.\n\nHis tongue in her belly button startled her and she jerked, then giggled, tangling her fingers in his hair. \"Say something,\" she said.\n\n\"I'm going to make you come.\" She felt his teeth briefly on her hip, then he was gone.\n\nHe was looking at her from the foot of his bed and she saw his cock, hard, standing out, ready for something that she was disappointed she would not give him today. She spread her knees, opening to him. She felt selfish.\n\nShe widened her knees, held out her hands to him in invitation. \"I wish...\"\n\n\"Shh,\" he said, kneeling on the foot of the bed. \"We don't need wishes right now.\"\n\nShe felt his arms curl around her thighs and she let her eyes close. She felt him brush the fine hair over her pussy with the tip of his nose. He blew softly. She heard him breathe in her scent, and the tip of his tongue made a ticklish line along the length of her pussy lips. He blew again, and chilled the places he had made wet. He kissed her, warm against her flesh, off-center, and she thought she could feel him smile against the inside of her thigh.\n\nHe softened his tongue and licked slowly, sweetly, his hands holding her hips still as her back arched in surprise, in pleasure. She tried to push herself up against his lips again, his tongue, but he held her, and licked again in his own time. Rebecca's breaths came in gasps and she squealed as she fought his grip. His tongue didn't leave her now, he flicked her clitoris, flattened her labia down one side and up the other, pushing as deep as he could, kissing her as chaste as a child one moment, then spearing her with his tongue again. She struggled against his grasp, knowing in the deep of her mind that she fought him to enjoy the losing. She loved that he never let go, never let her get away. She had his hair in a fist.\n\nJason held Rebecca's thighs as he enjoyed her softness and hardness, the moisture and violence against his tongue, her response to every change in tempo, to every pressure and motion. During a short lull in the storm, he let go of her thigh with his right hand and put a finger to the opening of her pussy. He licked, wide and wet for her pleasure and pressed gently into her with the tip of his finger. She went almost completely still, her fingertips resting gently on his head.\n\n\"That's perfect,\" she gasped, \"Go ahead.\"\n\nJason zig zagged with his tongue, drawing a moan and a squeal. When he closed his mouth over her clitoris and roughed it, she shook and came, the opening of her vagina tightening in a little band around the tip of his finger. He waited for her contractions to slow and stop.\n\nHe pressed with two fingers just then, smoothly into her moisture, feeling the resistance and pushing through, wanting to stop, not stopping. As he pushed, he felt the texture of the walls of her pussy change, and he could sense the pain of it fighting with the pleasure from her body. \n\nRebecca let out a clenched cry. The tearing pain had been stronger than she had expected. Jason held his fingers still, buried inside her and moved his body up so he was floating over her, supported on one arm, his lips inches over hers. Her orgasm was still in her blood, flushing her face, saturating her brain. It helped with the pain.\n\nHe opened his mouth to speak, but had no words. A tear leaked from the corner of Rebecca's eye. \"Kiss me,\" she said, bravely.\n\nHe kissed her, slipping his fingers out of her as gently as he could.\n\n\"Now,\" she said, her breathing slowing finally, \"I'll be ready.\" She smiled at him weakly.\n\nShe turned onto her side and Jason curled around her on the small bed.\n\n\"Thank you,\" she said as he draped his arm over her waist.\n\nJason breathed the scent of her hair. \"That's an odd thing to say.\"\n\n\"I know, but I'm glad it happened like this, with you.\"\n\n\"You're welcome then,\" he said, \"but don't ever make me do that again.\"\n\nRebecca laughed and closed her eyes. \"I promise,\" she said, before taking a deep breath and drifting asleep.\n\n----\n\nShe woke ten or fifteen minutes later, Jason's arm still over her waist, his other arm cradling her head, and something bumping her bottom every few seconds. She turned her head to look at his face.\n\nJason had a bemused expression. \"I can't make it stop,\" he said, \"I've been trying.\"\n\nRebecca smiled and kissed him. \"You don't have to make it stop.\" She studied his face, his dark eyes, his lips moist from her kiss. She put her hand on his chest and felt his heartbeat.\n\n\"I'd like to take a shower,\" she said, touching her feet to the floor, \"and I'd like to take this with me.\" She slipped her hand around his cock and led him down the hall to the bathroom.\n\nThe water, it seemed to Jason, washed away everything- the day's disappointments and anxiety. When Rebecca touched her soapy breasts against his chest, he felt his cock jump and bump her leg. She watched it stand straight up and then trapped it between their bodies. She slid her hands behind him and cupped his ass in her hands. Jason let his fingers explore the back of her neck, her back, her ass.\n\n\"That feels nice,\" she purred into his chest. She went up on her tiptoes, rubbing against him, then back down, and down. She sank to her knees, Jason's cock sliding from her belly up between her breasts, to her neck, then smoothly into her mouth. She toyed with the tip of his cock briefly before enveloping him. She bobbed up and down on him and smiled around his cock as he reached for the wall for support. She had his ass in her hands, and she used the leverage to steer him, turn him where she wanted. She let him pop out of her mouth and watched his cock bob under the running water.\n\nShe looked up at him, a naughty grin on her face. She caressed her breasts as she watched his face, watched the tip of his cock darken a shade. \"Are you going to come for me now?\"\n\nJason nodded, stiffly. Rebecca watched his face as she went down on him again, sucking, licking. She could feel his legs trembling. She slipped a finger over his asshole and felt him jerk, and finally, she fucked him with her mouth, hungrily, and without mercy. She heard him grunt a moment before his cock hardened impossibly in her mouth and he came, his ass flexing under her fingers. She let his come spurt over her breasts, fascinated with his climax like the first time she had watched him. There was something beautiful about him in the throes of his orgasm, his eyes unfocused, his body strong but surrendered to her completely in the moment. He slid slowly down the wall until he was lying in the bottom of the tub, spent and panting.\n\nRebecca smiled and stood up over him, washed herself slowly for him, luxuriously, as he watched from the bottom of the tub.\n\nJason watched, water splashing in his face. She was unselfconscious, washing every curve and fold of her body, some of them gingerly. There had been a little blood at first, when they got in the shower, and he was sure there was some on his bed, but it didn't bother him at all. The fact that she didn't try to apologize for it was appealing and intimate.\n\n\"Thank you,\" he said up to her as she rinsed shampoo out of her hair, the foam dripping on his thighs and stomach.\n\n\"For which of my many favors are you thanking me?\" she said, grinning through the wet hair hanging in her face.\n\nJason laughed. \"For the best one,\" he said, and absently stroked the tip of his cock with his thumb.\n\n\"You're welcome,\" she said, watching his hand, watching how he touched himself. \"I'm done,\" she said, wringing out her hair lightly, and she stepped out of the tub and reached for a towel.\n\nWhen Jason came into his room a few minutes later, his hair wet and standing on end, Rebecca was standing in the middle of his room wearing another pair of his boxers. Her breasts were uncovered, and she was engrossed in one of his books on robotics.\n\n\"Look at this,\" she said, turning the book half towards him. \"There's a whole chapter on screw theory.\"\n\n\"I used to masturbate to that chapter,\" Jason said offhand, dropping his towel and picking a pair of boxers out of his drawer. He saw that she had left her panties in his drawer again. He liked this tradition. He looked up and Rebecca was staring at him blankly. \"Shit,\" he said, \"sorry- you're actually interested in screw theory. I thought you were making a joke.\"\n\nRebecca rolled her eyes. \"I just didn't realize the math gets complex really fast when you start layering these systems on top of each other.\" She sat on the floor, leaning against his bed, and went back to the book. Jason sat next to her and they talked for the next two hours, starting with robotics and skipping to space travel, science fiction, chemistry, pharmaceutical research, oncology. She tried on all of his t-shirts as they talked. She settled on the one that said \"If you're not part of the solution, you're the precipitate.\" He wanted to build something. She wanted to save someone's life. Lots of people's lives. They touched briefly on nanotechnology and ended up racing each other to the kitchen for leftover oatmeal chocolate chip cookies.\n\n\"This could end up being the cure for cancer someday,\" Jason said through a mouthful of cookie. \"Nanotech embedded in food. A lot easier than chemotherapy.\"\n\n\"As long as it takes out the tumor and not, say, your gall bladder.\"\n\n\"Baby steps,\" he said, taking out all the makings for ham and cheese sandwiches. He was hungry. As they finished lunch, he heard his laptop bing with an email in his room. He went and got the laptop, brought it back to where Rebecca was fingering chip crumbs out of an empty bag.\n\n\"It's the professors,\" he said, surprised at how his mood turned hostile when he thought of the morning's bait and switch.\n\n----\n\nJason,\n\nI hope today's task is proving to be instructional. Some lessons are best learned in the fires of adversity.\n\nWe're giving you tomorrow's task early because it may take some discussion and planning. \n\nBecause jobs in the sciences require breakthroughs, and breakthroughs require original thought, it is necessary sometimes for the successful person to break rules that shackle progress to long-standing habit. Your task is to break a rule. Any rule. You have complete freedom in how you choose to do this, only keep in mind that while as heads of department we have some influence in mitigating the discipline of wayward students within the boundaries of the university campus, we are unable to intervene in matters of the law. Try to find a task whose consequences you are willing and able to accept.\n\nProfessor Suarez has added a further incentive to this task. If you allow yourselves to be caught by some authority, we will give you a nonmaterial reward of your choosing within reason. I agree that this is a valuable incentive. While the fear of being caught keeps honest people in line, it is precisely \"out of line\" that creates the atmosphere necessary for creative breakthrough. We think that having been caught will provide a much more realistic risk framework for your lives. The unknown results of getting caught are much worse in imagination than the actual results of getting caught. This is why troublemakers are difficult to deter with the simple threat of discovery. They know that getting caught carries no terror. This experience will, if you are successful, put your first brush with actual authorities in its proper perspective.",
        "Professor Denton\n\n----\n\n\"Fuck the fires of adversity,\" Rebecca said, and crushed the chip bag.\n\n\"Let's go to a bar.\" Jason said, suddenly. \"Tonight.\"\n\nRebecca's eyes lit up. \"Can you make me a fake ID?\"\n\n\"Sure. I think so. Enough to fool a bouncer anyway. Can you dress up like a wanton strumpet?\"\n\n\"Hmm, I guess so,\" Rebecca said, \"do you think it will help us get into the bar?\"\n\n\"I don't know,\" Jason said, \"I just thought it would be hot to see you looking slutty.\"\n\nRebecca hit him on the arm, laughing. \"I'll do it,\" she said, \"but you'll have to order me something with an embarrassing name if we get in.\"\n\nJason grinned. \"Our first date.\"\n\n\"You're lucky I already gave you a blowjob today,\" Rebecca said, gathering her clothes from the living room floor and heading back to Jason's room to change.\n\n\"Why?\" he said, following her, admiring the way she made his boxers sway.\n\nShe grinned over her shoulder. \"I don't put out on the first date.\" She shut the door to his room in his face. "
    ],
    "authorname": "Ambidentrous",
    "tags": [
        "oral",
        "virginity",
        "cunnilingus",
        "teasing",
        "college",
        "banter",
        "romance",
        "blowjob",
        "shower",
        "intelligence"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/amnesty-program-ch-04"
}