{
    "title": "500 Annies Ch. 04",
    "pages": [
        "Conclusion\n\nThe big finish, I hope.\n\n.................................................\n\n\"Good evening listeners, this is Barbara Barnes, glad you could join us for the final installment of our interview with Joe Williams. In this segment he tell what the book has meant to him and how it changed his life, even leading him to find a new love.\"\n\n\"Sit back, enjoy, and thanks for listening.\"\n\n.................................................\n\n\"So, Joe, was it love at first sight?\"\n\n\"No, but it was pretty close. My Maria was a breath of fresh air blown into my stale life.\"\n\n...............................................\n\nI had commitments for the next several days and could only see Maria for lunches. She usually brought us something, but I did manage to take her out to another restaurant she always wanted to try. And I always got a really nice kiss at the end of lunch.\n\nThen I had to go back out on the road. The publishers wanted me to go on an European tour, the book was really starting to take off overseas.\n\nLondon, Dublin, Edinburgh, Paris, Munich, Rome, Madrid, Istanbul, Moscow, and a few more to be confirmed. Three months of constant interviews and appearances. I hated the whole idea.\n\nI had two more weeks of domestic commitments, then two weeks off before I had to leave. I called Maria almost every night, I thought she might get tired of it, but on the days I didn't call she called me.\n\nI stopped by the office on my way to somewhere else and surprised her for lunch. I was surprised by the intensity of her welcome.\n\n\"Joe! Honey, why didn't you tell me you were coming, I would have made you something. I must look a mess, it's been really hectic today. I---\"\n\nI shut her up the only way I knew how, I kissed her, long and hard.\n\n\"I missed you too, Maria. How are the kids? Tell the girls I've been practicing, I won't be as easy next time.\"\n\n\"Oh, the kids are fine, they want to know when you're coming back. How long are you going to stay this time?\"\n\nI had three days off, the kids were out of school, and I wanted to spend it with all of them. Maria didn't know it, but she had been temporarily assigned to me as a personal assistant. Best selling author pulling strings, management wanted me happy.\n\nShe didn't know whether to be happy or pissed. I was glad happy won out.\n\nShe insisted I come to her house for the evening. I was already packed.\n\nThe girls ripped me up in Scrabble again, but did admit it was a little harder than before.\n\nWe were all sitting around the kitchen table, ever notice how many important events in your life occur at the kitchen table or in your car? I had some surprises for all of them.\n\nMy opening came when they asked me how long I was going to stay.\n\n\"I've got three days, and your mother will be my personal assistant, which means she pretty much has to do what I say to keep her job. I've got six tickets to the Cubs game tomorrow. They're playing the Braves. Her first official duty is to find four more people to go with us, think she can handle that?\"\n\nBedlam ensued. She alternated between irritated glances at me and the kids, but finally relented. The ride back to the motel was quiet. I didn't get a kiss.\n\nThe next morning was a little frosty.\n\n\"Don't ambush me with my kids again, ever. We don't know if we're going anywhere, it wouldn't be fair to get them used to you and then you up and disappear. It happened once since their father left and the aftermath wasn't pretty. So, if you've got any more surprises, tell me now and I'll make the final decision.\"\n\nI apologized.\n\n\"Sorry, I just got carried away. I didn't think it was fair to try and take you away from them for three days, and this seemed like the best solution. I just wanted everybody to be happy.\"\n\nHer smile was like the first thaw of spring. I decided to press my luck.\n\n\"Uh, as far as other activities, I didn't think it was fair to drag the girls to a baseball game without giving them something too. If we guys can force you to watch baseball, turnabout is fair play. Cassie said she was in the school orchestra and Tina is in marching band, so I sort of got tickets to the Chicago Symphony tomorrow night, with guest cellist Yo-Yo Ma. That should even the scales.\"\n\nAt first I thought she was pissed all over again, but she smiled. \n\n\"Don't tell them, I'll do it after the game. I have a sneaking suspicion you're trying to get to me through my kids. It's going to be a pain in the ass commuting back and forth, but we'll deal with it. If you have anything else to tell me, do it now.\"\n\n\"well, I thought about all the commuting, and kind of got you guys a suite in the hotel I'm staying at, look how much time we'll save, which means more time I can spend with you.\"\n\nShe whipped the car int a parking lot. I braced myself for the explosion, which surprisingly didn't come.\n\n\"Joe, how much did all this cost?\"\n\n\"Cost? I have no idea. The publishers came up with all the tickets, and I booked the suite. Not as much as you think, probably. Oh, and we got Bobby and the Caddy for as long as we need it.\n\nPlease Maria, money isn't that big a deal.\"\n\n\"Just how much money do you have, Joe?\"\n\n\"I don't really know, honest. Every time I talk to my accountant it changes. Last time I checked it was around three million, but my agent is close to closing the deal for the movie rights, and that will be another five or six, plus the royalties from the video and pay per view. And the paperback royalties, of course. He estimates I'll be worth about twelve to fifteen million by this time next year. Please don't tell anyone I told you this.\"\n\nThe numbers stunned her into silence. Then she smiled.\n\n\"All right, but I'm telling you now, I plan to be very high maintenance.\"\n\nI stuck my hand out.\n\n\"Deal?\"\n\nShe grabbed my hand and pulled me into a kiss. When she let loose she wiped the lipstick off my mouth and said \"Deal!\"\n\n\"Please don't be mad, or concerned about what this weekend costs. Whatever it is, it will be worth every dime to me. Let's just have a good time.\"\n\nAnd we did just that.\n\nThe kids were over the moon. The guys were packed in no time, but the girls took forever. Clothes were decided on, then discarded. She finally put her foot down and told them we were leaving in ten minutes, with or without them.\n\nAs the days went by, I thought about all the fun times Annie and I had with AJ, then multiplied by a factor of three. That's how much fun I had.\n\nThe game was great. I sat in the middle with Maria, the guys sat beside me, the girls by her.\n\nOne of the drawbacks to being semi-famous is you get singled out a lot. I had on my old 'lucky' Braves hat, sitting in a sea of Cubs fans. I caught a lot of ribbing. It was capped off during the seventh inning stretch, when we appeared on the jumbotron and the announcer gave my name.\n\nHe made a joke about being misguided, but being in good company.\n\nI think the crowd was more impressed with Maria in her tight Cubs jersey. \n\nThe Cubs lost. seven to four. I didn't rub it in, but wore my hat a little straighter.\n\nBobby knew a great little Italian place that was famous for the deep dish pies. It was a perfect end to the evening. Maria ordered two large with everything for Bobby to take home. She was already his friend, now she was his hero. I told him we probably wouldn't need him before noon tomorrow, so sleep in.\n\nHe dropped us at the hotel. We walked in, Maria on one arm and Cassie on the other, while Tina was between her two brothers. We passed a man with what was obviously his wife and two teenagers. Apparently they had been arguing because he pointed us out.\n\n\"See\" he said loudly, \"That's what families are supposed to be like.\"\n\nWe didn't say anything, but she gripped me a little tighter and the boys walked a little taller.\n\nI got a tremendous goodnight kiss from Maria, and pecks on the cheek from the girls. The boys didn't know what to do, so I let them off the hook with a warning.\n\n\"Today was about guy stuff. Tomorrow is for the girls. So, whatever it is, don't whine. Suck it up and let them have their day.\"\n\nThat left them wondering.\n\n...............................................\n\nMaria called me at eight the next morning. \n\n\"Get your butt down here. I've got four kids ready for breakfast and they won't start without you.\"\n\n\"Don't wait, order room service for us. Sausage, two eggs scrambled, whole wheat toast, and coffee for me. Let me talk to Cassie.\"\n\nShe didn't know why, but when I got her on the phone I told her to let the others know they could order anything and everything they wanted, and Mom wasn't allowed to complain. If she didn't like it she could take it up with me.\n\nThey had ordered a buffet spread, a little of everything. The boys were in sweats, the girls in pajamas, and Maria had on a short gown covered by an even shorter, silk robe. It was a good thing I was sitting down, it could have been really embarrassing.\n\n\"I seemed to be over dressed.\" I joked.\n\nTina answered me.\n\n\"When you said order anything we wanted, we realized we didn't have to get dressed. This is usually what we look like at breakfast.\"\n\nMaria couldn't help but needling me a little.\n\n\"Well, honey, I'm sure no one wanted to see you wandering around in your boxers.\"\n\nCassie couldn't help it, it was too good to pass up.\n\n\"Oh, I don't know Mom, I bet I know one person who would like to see him in his boxers.\"\n\nMaria choked on a bagel while the girls giggled and the boys grinned. She went bright red.\n\n\"Enough of that young lady. What shall we do today?\"\n\nI gave the girls their schedule for the day.\n\n\"Do not let your mother deviate from this. It's all taken care of, just enjoy. And your Mom is not to see it until after me and the boys are gone.\"\n\nShe was starting to get that tight look around her eyes. I pulled her into my lap.\n\n\"Be nice, or I'll have to get a new assistant. You'll have a good time, I promise. If you don't like it, feel free to cancel.\"\n\nThe girls had been reading the note.\n\n\"Noooo!\" They both wailed when I told her she could cancel.\n\n\"This better be good.\"\n\nShe looked grim.\n\n\"Remember what you said about high maintenance?\n\nThat gave me the idea. You're going to be so high maintenance today it going to take a rocket mechanic to get it done. Enjoy.\"\n\nThe girls were looking at her with unshed tears, that morphed into whoops of laughter when she relaxed.\n\n\"What are you guys going to do today?\"\n\nI grinned.\n\n\"Don't you worry about that. We'll find something to amuse us. Now, let's enjoy breakfast.\"\n\nI sat and ate while the banter and teasing flowed around me. The girls would kiss my cheek from time to time and whisper a question. It was driving Maria crazy. I loved it.\n\nThe boys got dressed and we left. I kissed her cheek at the door and told her to have a good time.\n\nWe were in a five star hotel, and they had a very nice spa. The girls got the full treatment, pedicures, manicures, massages, face and body treatments, everything they offered. Tina grabbed her Moms' phone and sent me a photo of her, green slime on her face, eyes covered with cucumbers, and a towel wrapped around her head. I kept it, texting back I was going to show it to anyone who wanted to see a picture of my girlfriend. Maria was NOT amused when she saw it but I refused to delete it.\n\nNext came the beauty salon. They were teased, styled, made up and redone until they got the right look. They left with bags full of cosmetics and hair care products.\n\nAt twelve thirty Bobby delivered them to one of the most popular dining spots in Chicago, a tea room catering exclusively to women.\n\nNext he took them to one of the most upscale ladies stores in town. I had made the arraingments, they were to each get two dresses, one for day wear and one formal. They were custom fitted for maximum effect. Plus 'foundation' garments. \n\nThe boys and I weren't just goofing off. First we went to a very nice menswear store and had two suits each tailored, with the instructions the more formal ones be done no later than three. The bill was more than I usually spent on clothing all year, but I had to admit, we really looked sharp.\n\nLunch at a popular Greek restaurant, then off to Wrigley field. We didn't stay for the game, but met most of the team while they took batting practice. The boys had their picture taken with players and a few of the coaches.\n\nMiguel, or Mickey as he preferred to be called, got to shag a few fly balls while Antonio[Tony] got to catch for a couple of the relievers.\n\nSometimes it's good to be rich and famous.\n\n.................................................\n\nI kept the boys until 5:30. Then we dressed in our new suits and went down to collect the girls for dinner. We did manage to get out hair cut, actually styled for the boys, so we were fairly presentable.\n\nWhen we entered, we probably spent a good minute just staring at each other.\n\nThey were stunning, simply stunning. Maria had an upswept hair style, a dark green shimmering dress that fell jut below her knees, with a neckline that made you realize what was underneath. The girls were dressed basically the same, except for a more demure neckline and a slightly higher hem.\n\nIn a premonition of things to come, I realized I was going to have a lot of sleepless nights when they started dating.\n\nWe guys were all matched with black suits, all though each was just different enough to give us some individuality. We were a damned handsome family, and I was proud to be associated with them.\n\n\"My God! Maria, you and the girls look so beautiful, words can't do you justice.\"\n\nThe boys chipped in about what a MILF she was and how hot the girls looked.\n\nThey glowed under our praise, then proceeded to tell us what a handsome group of men we were.\n\nWe had one more surprise for the girls before we left. We had stopped at a jewelers, and bought matching diamond earrings for all three. The girls each got a locket with small diamonds, while Maria got a diamond pendant. They were speechless when we presented them.\n\nThen the sniffles started, and they had to repair their make up before we left.\n\nWhen we hit the lobby heads turned. I was never more proud.\n\nThe same was true for dinner. We kept getting looks, and when the girls went to the bathroom, another diner asked the girls if their dad was someone famous. Maria told me about it much later.\n\n\"He's a writer, you might have heard of him. Joe Williams? 500 Annies?\" said Cassie, proudly.\n\nTina chipped in.\n\n\"Yeah, he's sort of famous, he was on 'Today' last week.\"\n\nI wondered why I kept getting looks, but no one invaded our privacy.\n\nThe concert was amazing. I've never been a fan of classical music, but the pieces performed that night were inspiring. Plans had been made earlier, so when we back stage, the conductor and Yo Yo Ma were there to meet us. Cassie actually cried. Of course, pictures were taken.\n\nThere was an article in the Sun-Times the next day about the event, and a picture with Cassie and Yo YO Ma. She framed it.\n\nThe next day was Sunday, and Maria insisted we go to mass. I was born a Methodist, so I didn't know what to do, but followed along. We had on our new suits, and the girls had on the new dresses. They were just as beautiful, but in a more demure way.\n\nWe spent the day lazing around, going to a movie. They fought, the boys wanted an action, the girls wanted a romance. They both appealed to me, but I dodged it by telling them to let their mother to decide.\n\n\"Oh no. We've been catered to all weekend. Ask your fa--I mean Joe what he would like to see.\"\n\nIt was a little slip with big overtones. Silence ensued for just a second before I responded.\n\n\"Well, if I get to choose, we'll see them both. The romance first, then the action to wake us up. And no junk, you'll spoil your dinner.\"\n\nOf course they got popcorn and drinks anyway, but no candy. Maria held my hand and snuggled during the weepy parts. I can't even tell you the name of what we saw, I couldn't focus on anything but her.\n\nAfter dinner and a game of Scrabble, it was time for bed. We were all sad, they had to go back home, and I had to go on the road. \n\n................................................\n\nIt was a bittersweet ride I had back up to my room. Being with Maria and her kids reminded me of so much that I missed in my life. I loved AJ with all my heart and soul, but I was sure if I had been given the chance, there would have been more than enough for a few others.\n\nI hadn't been in my room more than thirty minutes when there was a knock on my door. Maria swept in when I opened it, with an odd expression on her face.\n\n\"The kids suggested I come up here to say goodnight. They also suggested I stay around to say good morning.\"\n\nI didn't know what to say. It didn't matter, she rambled on.\n\n\"I keep forgetting they're not babies anymore. I'm pretty sure Mickey is sexually active, I found a pack of condoms in his room. Even the girls urged me to come up. God, what kind of an example am I giving them?\"\n\nShe looked me dead in the eye.\n\n\"But I wanted to come, really, really badly. I haven't felt these emotions since I first married their father, I didn't think I ever would again.\"\n\nShe was crying now.\n\n\"Please don't hurt me, Joe, don't hurt them. We deserve happiness, don't we?\"\n\nI swept her into my arms and onto my lap.\n\n\"You deserve everything I have in my power to give you, to give them. We've only been seeing each other for less than a month, but you're all I think about. I'll be in a hotel room watching something and think about talking with the boys about it. I practice Scrabble and think about the girls.\"\n\n\"But the worst is when I lay down at night, wishing you were with me to talk about the day, to hold in my arms, to be able to love you.\"\n\nDamn it, now I was crying.\n\nShe was listening, and had stopped snuffling.\n\nThe smile she gave me was small, soft, and secretive, and I wish I had a picture of it. Doesn't matter, I can shut my eyes at any time and see it plain as day. I'm sure I would until the day I die.\n\n\"I knew\" she said softly, \"I knew you were the one. I knew it when you met my kids.\"\n\nShe stood up and took my hand, leading to the bed.\n\n\"I want to show you something, something you paid for today.\n\nShe slipped the loose top off, revealing a black lace bra that barely contained her magnificent breasts. She slipped out of her pants, revealing a matching thong. She twirled around.\n\n\"Think you made a good investment?\" she said in a smoky voice.\n\nI couldn't breath, literally. She was the most beautiful thing I had ever seen.\n\n\"Look, it's French, see the name on the label?\"\n\nShe undid the front clasp of the bra, and they sprang free. Time and children had taken their toll, but the slight sag made them more alluring.\n\nI was having trouble thinking, I don't think any blood at all was getting to my brain.\n\n\"Want to take the rest off for me?\"\n\nI was more than willing. As I slipped the thong off her firm bottom, I thanked every deity known to man for this opportunity.\n\nI was out of my clothes in no time, thanks to enthusiastic help.\n\nI lay her on the bed, determined to kiss every square inch of her body. Flipping her over, I nuzzled her neck, licked and nibbled her ears, trailing kisses down her spine.\n\nWhen I reached her ass, I spent time kissing every part, leaving nothing untouched. She was starting to wiggle and moan,but I kept on, kissing down her thighs, the valley between, and nibbling the back of her knees. I could smell her smoky sweet scent of arousal, getting glimpses of moisture as I worked my way down. She nearly jumped off the bed when I kissed her ankles.\n\n\"Oh, Joe, Joe, what are you doing to me. I can't stand much more.\"\n\nI turned her back over and started my slow, sensuous journey back up. I kissed the tops of her feet, nibbled on her knees, and started on her thighs. Her legs parted slightly of their own accord and I licked and nibbled all the way up to what the French call 'The Gates Of Heaven'.",
        "She had a full bush[going to have to change that]. Her outer lips were swollen and slick, her clit sticking out like a little pearl. I swirled my tongue around the nub unexpectedly, and she shrieked, bucking wildly.\n\nShe grabbed my head and pulled it up.\n\n\"No, honey, not that, get up here and love me.\"\n\nI tormented her some more. Instead of doing what she asked I continued my slow ascension, kissing her lower belly, working my way up to those magnificent mounds.\n\nI practically worshiped them, kissing and nipping in small concentric circles until I reached the nipples. By them she was moaning and thrashing, but I locked my lips on first one and then the other, pulling and teasing with tongue and fingers. They were large and long, I found out later she breastfed all her children, and she said the twins really took a toll on them.\n\nIt didn't seem to make them any less sensitive.\n\nI bit her neck slightly, kissed her cheeks and eyes as she shook her head from side to side, trying to capture my mouth. I wouldn't kiss her until I was ready, she was almost begging.\n\nWhen our lips finally met, it was just long enough to form a seal for our tongues, sending them dancing and twirling back and forth. She was actually arching upwards, thrusting. She finally broke the kiss.\n\n\"Now, damn it, now. Make me yours!\"\n\nShe was dripping so access was easy, I slipped all the way in with one long thrust, as she moaned in pleasure. I began a slow, steady rhythm, followed by a few quick and hard thrusts, before slowing down again. She moaned, she gasped, she demanded. Her first climax was tremendous, screaming to the world her intentions. Her second was smaller, but almost as intense.\n\nWhen she got close she got vocal.\n\n\"I'm gonna come, Joe! Come with me baby, please!\" \n\nShe was bucking and pounding, almost throwing me off. I couldn't hold it any longer, exploding with a force I didn't think possible. She got there just before me.\n\nI collapsed beside her, gasping. This woman was going to kill me, I thought, what a way to go.\n\nShe cried, which I didn't understand. I don't think she was sad, so I just held her and let her cry it out. She fell asleep in my arms.\n\nI woke up about three a.m., trying to understand what I was feeling. She was spooned up against me, pressing her hips back and forth into me. I was already erect, and with a little adjustment I slipped right in. We enjoyed a long slow session. only speeding up when the need for release was too great. We immediately slipped back into slumbers.\n\nAt seven thirty she woke me up with a warm washcloth, bathing me gently into an erection.\n\n\"Good, you're awake\" She giggled.\n\n\"Lie back honey, I'm going to do the work this time.\"\n\nShe rode me slowly for awhile as I adored her breasts. I nipped one a little too hard and left a small hickey.\n\n\"Hey! What are you trying to do, mark your property?\"\n\nI was serious as I looked her in the eye.\n\n\"Yes.\"\n\nShe looked back just as intently before saying \n\n\"Good.\"\n\nShe twirled around, taking my beautiful toys with her, and got down to some serious riding. In a matter of minutes we were spent again, and she was back in my arms. We were almost asleep when the phone rang.\n\nI could hear Cassies' cheerful voice.\n\n\"Wake up, sleepyheads! I've already ordered breakfast, if you don't get her soon we're going to eat it all.\"\n\nWe groaned together. Showered together. We would have played again together but teenagers wait for no man.\n\nI thought it would be awkward, but the boys just nodded, and the girls hugged and kissed us like we had been gone a week.\n\nIt was a somber group at the train station. I was going to be gone two weeks.\n\nThe girls hugged and cried. Maria hugged and cried. The boys even hugged me, which surprised Maria. They might have been a little misty eyed, but that was probably dust.\n\nI told them all to call me, and then found out they didn't have cell phones, she just couldn't afford it. She was living on her salary and her ex husbands' social security. He had died in a car crash five years before. It paid the bills but allowed for very little extra.\n\nThe next day I got five phone calls, four thanking me for the cool Iphones, and one from an angry mother who told me if I ever did something like that again without talking to her it would be bad, but by the end of the discussion I was just apologetic enough for her to forgive me.\n\n\"I'm going to have to watch you every minute around the kids, aren't I? Be careful Joe, don't spoil them too much.\"\n\nI told her I hoped I was around long enough to be trained, and she laughed and said that's what she had been doing since we met.\n\nThey pretty much called me every day. The boys were glad to have a man to talk about guy stuff with, and the girls were glad to have a father figure. They knew I was always going to tell their Mom what we talked about if she asked, unless it was in confidence, then I would tell her she had to get it from them.\n\nI took two calls on a row one night while I was having dinner with the owner of a chain of book stores.\n\n\"How many kids do you have?\"\n\nI didn't even think when I answered.\n\n\"Five. Four teens, two of each, and a grown daughter with her own child.\"\n\n\"Wow, I bet you are happy to get some relief when you travel, huh?\"\n\n\"No, I hate it. I wish I was home with them now.\"\n\nHe looked at me with wise old eyes.\n\n\"I'm glad for you my friend, glad you're happy, after your first wife and all.\"\n\nHe had read the book of course.\n\nI hardly ever thought of Annie now. It was like it happened to someone else and I just read about it. The only time I gave her any thought at all was after talking to AJ. Her Mom had not spoken to or contacted her from the day she walked out.\n\nI could understand walking out on a spouse or lover, but not how you could abandon a child?\n\nI took Maria and the kids home with me when I got my two weeks off. I had forgotten how small my house was until I shoved it full of kids, but we managed.\n\nThe best part of coming home was introducing Maria to Jane and Anne. They took to each other immediately, adjourning to Janes' table and leaving me at the bar with Harry.\n\n\"She's nice, and quite a looker, Joe. I'm glad things are going well for you.\"\n\nHarry was sincere, I could tell.\n\n\"Yeah, well, my life sure has changed, I'll give you that. Sometimes I feel like strangling Anne and Jane, If it hadn't been for that night, I wouldn't be wandering the globe like some jet set bum.\"\n\n\n\n\"You made them famous as well. We have total strangers come in here looking for them, as if talking to them would help them with their problems. Jane almost put up a sign saying \"The Doctor Is In\" like the old Peanuts cartoon. But she loves it, even if she grumbles sometimes.\"\n\nIt was odd, all my old friends seemed a bit awed by me. It was like I had done something so outside the norm I was another creature. I never got used to that.\n\nMy new family, as I now thought of them, could only stay a week, school was starting. They were all going to be in the same high school, I'm sure Maria was going to have her hands full.\n\n.................................................\n\nI spent the next week with AJ and her family. I told her about Maria and her kids, showing their pictures on my phone. She was glad I found someone new, and wanted to meet her. I promised to introduce her as soon as I got back from my European trip.\n\nWe hadn't mentioned her mother once, but as I got ready to go, she asked if since I was going to be in Spain, was I going to look her up. I had thought about it.\n\n\"No, honey I'm not. My presence will be pretty well publicized, if she wants to, she can find me. If she doesn't, I don't plan to open old wounds.\"\n\nThis saddened her, but she understood. I don't think she'll ever get over the abandonment, what child would? She mad me promise to send her lots of pictures and presents, and dropped me off.\n\n.............................................\n\nI hated the trip, most of it. I never got to see much of the countries I was in, I was hustled from interview to public appearance to TV set on a tight schedule. I was allowed two days off a week, usually.\n\nDidn't think much of England, but loved Scotland and Ireland. When I was in Scotland I had a case of custom blended scotch send to Harry.\n\nIn Ireland, I found a jeweler and had seven silver Celtic crosses made and sent them to Jane, Anne, AJ, Bunny[for when she was older] Maria, Cassie, and Tina . Maria had told me her mothers' clan affiliation, and I sent them all kilts in the correct colors. I sent the boys two dirks with the clan crest inlaid on a silver medallion.\n\nOnce we established time lines, we would call each other as often as we could. It was terribly frustrating. I had a deep fear that my absence would make her affection wan, but she never wavered. By the sixth week, our standard good bye was \"love you, see you soon\".\n\nI heard angels weep and birds sing the first time Maria said it. It just slipped out.\n\n\"Bye, honey, I love you.\"\n\nI heard a startled gasp as she realized what she said.\n\nI didn't hesitate.\n\n\"I love you too, honey, very much.\"\n\nI swear I heard her crying as she hung up.\n\nI was going crazy with lonliness, missing everyone terribly by the eleventh week. Cassie had called me in tears the week before. A boy, a senior, was coming on hard to her. It's a good thing I was seven time zones away. I comforted her as best I could. Then I called her brothers and told them to keep a closer eye on their sisters, and called Maria. She got hot, but I managed to stop her long enough to see if the kids could handle it. \n\nI got the story from Tina. The senior got some books out of his locker, and turned to find Tony, Mickey, and Tina waiting on him. They told him in no uncertain terms to leave Cassie alone.\n\nHe sneered, and being much bigger than the boys, asked which one was going to try to make him first.\n\nTina smiled sweetly.\n\n\"We all are asshole. It's not gonna be a fair fight, we'll all go after you, with sticks if we have to. Do you understand?\"\n\nHe tried to bluff them down when Tina kicked him in the crotch with stilleto heeled boots. As he lay there writhing in pain, she reached down and grabbed his hair, forcing his eye on her.\n\n\"Do we understand each other, asshole?\"\n\nHe nodded. Word got out, mess with one Garza and you deal with them all. Maria acted pissed, but I sure she was secretly proud.\n\nIt was two weeks before Christmas, when I got the news They had added nine more cities to my tour.\n\nI was angry beyond words. I was supposed to get ten days with my new family, and now it wouldn't happen.\n\nManagement soon learned that a pissed writer is not a good thing. I threatened to just go home, they could sue me for breach of contract if they wanted. In fact, I told them I would never speak publicly about the book again.\n\nI was their cash cow, propelling them off the fringe and into the mainstream, and they were anxious to placate me. We compromised, if I couldn't go home they would send the family to me.\n\nThey called Maria in and told her she was being given a special assignment that unfortunately coincided with school holidays. She was furious and threatened to quit until they told her the new duties. She was to fly to Italy with her family to calm me down, by any means necessary.\n\nAJ was given the same information, and so I was standing at the gate in the Rome airport, waiting for my extended family to disembark.\n\nThey all flew first class, and when they came through the gate Maria was holding Bunny, so I knew they had met AJ. They had seen pictures of each other.\n\nI was mobbed. Maria was in my arms crying while the girls danced about and AJ smiled. I was required to kiss all the girls, starting with Bunny and ending with Maria. The guys tried to be cool but ended up hugging me anyway. We were all very, very happy.\n\nI had rented a villa, knowing we would need room. I had them for twelve days, and Mike, AJ's husband, was flying in on December 23.\n\nThey spent the first day resetting their biological clocks while Maria and I tried to make up for almost three months apart. They ended up relaxed and refreshed while we were tired and droopy.\n\nWe went to art museums, saw the sights, did most touristy things. We had a driver and a minivan at our disposal, which was good because none of wanted to try Italian traffic. I learned to close my eyes.\n\nThe girls wanted a shopping spree, it was Italy after all. The boys and I decided that as tempting as that sounded we would pass, opting to rent scooters and explore the countryside instead.\n\nI gave AJ a credit card with no limit on it, and told her not to worry about what they spent, consider it an early Christmas present to them all. Pulling Cassie and Tina to the side, I made sure that they knew they could get anything they wanted and Maria couldn't object.\n\n\"And if your Mom tries to stop it, make sure she buys just as much, on pain of being sent home.\"\n\nCassie hugged me, whispered in my ear \"yes Daddy\" and fled giggling. She had no idea how affected I was by her words.\n\nThe boys and I had a ball. The Vespas were light, easy to handle, and surprising powerful. We went to a cheese factory, a winery, and a fruit farm specializing in homemade jams. It's a good thing the scooters had storage compartments. We had lunch at a farm that specialized in cured hams, and after having a sandwich we ordered three, two for Maria and one for AJ.\n\nWe got back just after the girls. The driver was mumbling something that sounded suspiciously like \"crazy Americans\" while he carried packages into the villa. We helped and all of us had our hands full. I wondered how much it was going to cost to ship all this home.\n\nWe all got hug and kisses while they showed us their treasures. The boys and I tried to look interested and almost succeeded. Finally they just sniffed \"Men!\" and put them away. Maria whispered she had a few things she wanted to model for me in private, which made the clock move with agonizing slowness. I don't care what it cost, designer lingerie is worth every dime.\n\nShe was a little pissed when I tore a gown in my haste, but I made it up by demanding she buy at least two more, in different colors.\n\nWe made love almost every night and a few times during the day when we were alone. It wasn't the crazy heat of twentysomethings, but the more refined love of an older generation. Quality trumps quantity every time. But the heat was definitely there.\n\nAj made sure she took the kids with her on several expeditions for Christmas shopping.\n\nMaria and I went out to buy presents for the kids.\n\nShe had to slow me down, I would have emptied stores.\n\n\"Let's keep them grounded, Joe. It's gonna be hard enough now when the girls go back to school in designer clothes.\"\n\nChristmas morning was a riot of wrapping paper and ribbon. Everyone hugged and oohed and aahed over their presents.\n\nMike and AJ were speechless when I gave them their final present.\n\nFirst was a college fund for Bunny, $150,000.\n\nNext was a certified check for $250,000, to be used as a down payment on a house. Neither felt secure in their jobs and hadn't bought anything yet.\n\nMike said he couldn't take the money. I had thought about it a lot and had my answer ready.\n\n\"\"Mike, if I died and left you the money, would you take it?\"\n\nHe grudgingly admitted he would.\n\n\"Then what's the difference? I have it and want to give it to you. It really is just a percentage of what I've earned, I won't miss it in the least. If it makes you feel better, pretend I'm dead.\"\n\nHe finally smiled and said \"Damn, I'm gonna miss you.\"\n\nWe went to Christmas mass at the Vatican, conducted by the Pope himself. Maria was profoundly affected, she was serious about her faith.\n\nMike, AJ, and all the kids left on the twenty seventh. The kids were going to spend a few days with them to give Maria and I some time alone.\n\nIt was glorious. For the first two days we barely dressed. I found her a bit inhibited sexually. I don't know if it was her Catholic upbringing or her former husband, he apparently had more hangups than a telemarketer. She refused to let me give her pleasure orally, something I couldn't understand.\n\nI cured her, using something I had learned from my interviews. Women want to be loved and cherished, but sometimes they like to be taken. Not abused, but made aware of who they belong too.\n\nIn essence, every woman wants the 'caveman' once in a while, just to be reminded. \n\nI gave Maria just enough wine to make her giddy. then talked her into letting me tie her down to the old iron bed we slept in. I used silk scarves, tying her arms above her head, and binding her ankles loosely. She could move her legs but not close them.\n\nI massaged oil into her skin, nibbling her body. I blindfolded he, telling her it would enhance the experience.\n\nI had her moaning in arousal, while I nibbled my way slowly to my goal. She stiffened when I nibbled round her opening.\n\n\"Joe, no, you know I don't allow that.\"\n\nI raised up and whispered in her ear.\n\n\"You do tonight.\"\n\nHer protests turned to moans as I worked her body. She thrashed around as best she could in her restraints, but I stayed right with her.\n\nWhen she reached her first climax she was screaming, by the second she was moaning, and by the third she was begging.\n\n\"Yes, honey, right there, Yes, Yes, YES!\n\nThe last yes was more of a scream.\n\nI released her legs and pushed them upwards, thrusting as hard as I could. Her moans had worked me to a fever pitch, and I didn't last long.\n\nShe had one more climax before swooning back into the bed. I released her arms and cuddled her.\n\nWhen she came back to her senses I asked her if I was going to have to restrain her the next time, and her answer surprised me.\n\n\"No, honey, but would you do it anyway?\"\n\nI love this woman!\n\n.................................................\n\nJust before she left we were wandering the shopping districts of Rome, and happened to end up on jewelers row. The displays were beautiful, but I'm a man, so I wasn't paying attention.\n\nMaria had stopped, and was staring at a display that prominently displayed engagement rings and wedding bands. She had a longing, lost look on her face. I had been thinking about our future for a while, and without hesitation I dropped to my knees right there on the street.\n\nI took her hand.\n\n\"Yolanda Maria Garza, I love you with all my heart and soul. Would you marry me?\"\n\nThere may have been a language barrier, but everybody on the street knew what was going on.\n\nShe surprised me. She didn't burst into tears, she didn't display any outward emotion, just bent and gave me a kiss that went straight to my soul.\n\n\"It is my hearts' fondest desire to marry you, Joesph Allen Williams, on one condition. We wait a year before marrying. We fell in love quick, I want to stay in love slowly. Can you accept that?\"\n\nIndeed I could.\n\nWe went inside, and she picked the set she wanted out. It wasn't the most expensive, but it was by no means cheap. She wore it out of the shop, and I hope it never comes off for the rest of her life.\n\n..................................................\n\nAs he told of his romance, leaving out the sex parts of course, Barbara had tears in her eyes.\n\nThat's a beautiful story, Joe. I hope you live happily ever after.\"\n\n\"So do I, Barbara, so do I.'\n\nTell me Joe, do you think what you learned from writing your book will help you understand her better?\"\n\n\"Absolutely, but not from the reasons you assume.\"\n\nHe looked out over the audience.\n\n\"Writing the book was probably the stupidest idea I ever had. It was born out of pain, sired by idiocy, and delivered by alcohol, remember, I was pretty buzzed when I came up with it.\n\nWomen aren't machines, they're complex beings of flesh, blood, and emotions. There is no one size fits all way to understand them.",
        "Guys, you'll understand this analogy best.\n\nSuppose I decided to write the most definitive auto repair manual in the world. It should be easy, right? After all, they all need fuel, oil, batteries, spark plugs, etc. But what will work on a four cylinder Ford engine won't meet the needs of a twelve cylinder Jaguar, nowhere close.\n\nWomen are like that, they're like snowflakes, no one is exactly like another.\n\nBut one thing I can say for sure, I can tell you what each and every woman in the audience is thinking right this minute.\"\n\nHe paused for dramatic effect.\n\n\"They're thinking \"this guy is an idiot, there is no way he can know what's going through my mind'.\"\n\nThere was appreciative laughter.\n\n\"And they're right, there is no way me or anyone else can predict their responses at any given time to any situation. If we know them well, we may have a small inkling, but even that isn't certain.\n\nBut I can tell you this, communication is paramount. There is a song from the eighties, one of my favorites, by Marshall Crenshaw. Someday, Someway is in my opinion the definitive relationship song. In one part he sings \"If you can't tell me what is wrong, all I can do is wonder why'.\n\nThat's it in a nutshell. Men are oblivious to a lot, and the classic line 'if you don't know what's wrong, I'm not going to tell you' is possible the most fatal mistake a woman can make.\n\nWE DON'T KNOW what is wrong, if we did we would try to fix it. We're not as in touch with our emotions as you are. Give us the benefit of the doubt, tell us.\n\nSo, no, no one can understand women in the plural. But if we're lucky and really work at it, maybe we can understand just a little bit about the ones we love.\n\nI can tell one more thing I learned. You have to listen closely to what's not being said. Sometimes what they don't talk about is the most important thing of all.\n\nMaybe if I had listened a little closer Annie wouldn't have left. Maybe if she talked to me a little more things would have been different.\n\nI guess the saddest thing to me is I had no idea she was unhappy, and she never gave me a chance to fix whatever was broken.\n\nBut life moves on. Remember at the first of the interview when I talked about the law of unintended consequences? I'm living proof of that.\n\nIf Annie had stayed, I would still be a happy little engineer, writing my manuals and looking forward to retirement.\n\nBut she left, seeking adventure and something different.\n\nSo instead of my quiet little life, thanks to the book I've been in the international spotlight, traveled the world, hobnobbed with the rich and famous, grown wealthy beyond my wildest dreams, and got a large family and a woman I love more than the air I breathe.\n\nSometimes I wake at night and wonder about Annie, and then my beautiful wife murmurs in her sleep, and snuggles closer. My life is as perfect as it can be. I thank God every day.\n\nAll I can tell you definitely is guys, you better listen, and girls, don't be shy about what you want. Remember we're wired differently, make adjustments and your life will be better all round.\n\nGood night, and God bless you all.\"\n\n..............................................\n\n\"One last thing before we say goodnight, Joe. Describe the book cover for those who haven't seen it.\"\n\n\n\n\"The cover was designed by my friend Jane. I don't know where she got the idea, but it was perfect. It's a collage, pictures of a lot of the women I interviewed, as many as would give us permission. We managed to get two hundred and forty five. The two largest in the front center are Jane and Annie, the two who inspired this whole mess.\"\n\n\"The largest picture on the back, the one in the center, is the original Annie. I don't really know, I just felt I should recognize her, after all, without her this would never have happened.\"  \n\nThe applause was thunderous. Babs noticed a lot of the audience had serious looks on their faces, reflecting no doubt on the nights' subject.\n\nJoe was gracious, shaking hands and chatting with small groups. It seemed everyone wanted to acknowledge him, and the impression he had made on their lives.\n\nHe may think of himself as an 'Average Joe', she thought, but he was one of the most impressive men she had ever met, certainly the most impressive she had ever interviewed.\n\n...............................................\n\n\"Well listeners, that's it. The final segment. I hope you enjoyed it as much as I did.\"\n\n\"What's next for Joe Williams? Well, his new book, 'Average Joes', will be in book stores and on line in six months. As he explained it to me, It's 500 Annies in reverse. Five hundred men were interviewed at random on love and relationships, and Joe said there were as many surprises in it as there were in 500 Annies. I can't wait to read it, and hopefully have him on the show to talk about it.\"\n\n\"Goodnight, audience. I hope you remember his advice in days ahead, I know I will.\"\n\n\"This is Barbara Barnes, Book Report on WORD, 86.7 on your dial. Good night.\"\n\nShe lay her headphones down and left the booth.\n\nMike was waiting for her.\n\n\"Damn, Babs, you were right, that was great stuff. I wish I had----\"\n\nThat was all he got out before she grabbed him and kissed him, thoroughly. When they came up for air, she handed him a copy of the book.\n\n\"Read this tonight. We'll talk tomorrow. 'Night, babe.\"\n\nHe stood in shock, watching her retreating back before looking at the book.\n\nDamn!\"\n\n................................................\n\nWell, there it is. I'm thinking about an epilogue where he talks about his new book, his new marriage, and a final confrontation with Annie, but I probably won't get to is anytime soon.\n\nThanks for reading, and remember all comments are appreciated. Until next time, QHML1. "
    ],
    "authorname": "qhml1",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/500-annies-ch-04"
}