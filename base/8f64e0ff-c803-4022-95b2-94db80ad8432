{
    "title": "My Little Ventrue Pt. 08 Ch. 12",
    "pages": [
        "~~Beatrice~~\n\nShe walked into Jacob's alcove, down its curved path, and stopped at the fur curtain that blocked off his homely hole in the Circle's cave. She'd heard the noises, but decided to barge in anyway. If the two of them wanted some privacy, they could easily fuck somewhere else.\n\nBingo. Triss smiled as she pulled the fur curtain aside, leaned her shoulder against the curved entrance of his alcove, and watched.\n\nSamantha. Sweet, innocent, naive Samantha, was tied up. Her hands were cuffed behind her back, and judging from the thick chain between the cuffs, they were some heavy duty handcuffs. Daeva were strong, like Nos, but Samantha was a fledgling and wouldn't be breaking through handcuffs like that. But at least they looked fuzzy. Very thick, but fuzzy.\n\nShe faced away from the entrance, so she didn't notice Triss, which was perfect cause god damn, this was fucking hot. Jacob was sitting all comfy and lazy with his back against the wall, facing Triss, and the dude was naked save for a gray bandage wrapped around his eyes. Samantha sat on his lap, squirming and wriggling, as the man held onto her hips to keep her from falling back.\n\nTwo kine sat nearby, a man and woman, youngish. Jacob's thralls? Triss didn't recognize them, but he wouldn't bring them to the cave unless they were blood bound. They were naked, obviously drained of blood, and had dopey, exhausted smiles on, despite being unconscious. Lots of juices around too. She didn't know if they fucked each other or if Samantha and Jacob did something to them, but either way, damn.\n\nSamantha let out a squeak as Jacob bounced her, his hands hooking her ass. Dude could probably throw a firetruck, so using just his arms to bounce her would be damn easy, enough that he could sit back and watch, as if he wasn't doing a damn thing.\n\nTriss opened her mouth when Jacob noticed her, but slowly closed it. Hey, it was pretty damn hot, watching the beautiful milf obviously enjoying herself. And you should never interrupt a woman about to orgasm.\n\nShe didn't have to wait long. Two minutes later, Samantha's whimpers turned into panting groans, and she collapsed forward against Jacob's chest. He set a kiss on her head, and gave Triss a pleased smile. Triss mouthed 'how many times?' and Jacob answered 'three'. Yeap, that was one happy milf.\n\n\"Didn't take long for you to really let loose, did it?\" Triss said.\n\n\"W-What? Beatrice! I--\" She tried to push away from Jacob, but she had no hands to do it, and when she tried to use her legs to push away from the wall, Jacob gave her a hard downward yank, straight onto his dick. She squeaked, and her body trembled as she collapsed onto Jacob's chest again. Ah yes, the prolonged orgasm, fucking awesome.\n\n\"What brings you to my humble abode, Beatrice?\" Jacob said, voice perfectly level and casual.\n\n\"Wanted to talk about witchy stuff, but it can wait a bit.\"\n\n\"Good.\" The man winked at her -- it was all in the eyebrows -- and gently eased Samantha back, and back, and back. She slipped off his cock with a groan, landing on her back between his legs, and Jacob slid a nearby pillow under her ass.\n\nTriss grinned down at the woman, since she was now on her back and looking up at Triss, upside down. Grin turned into an outright groan when Jacob slid Samantha away a bit, grabbed his cock, aimed it a bit lower, and slid the woman back closer to him.\n\n\"Jacob!\" Samantha squeaked, lifting her head to look down her naked body to the man. But before she could try and sit back up, Jacob settled his grip on her hips again, and gently bounced her back and forth along the pillow and into his body.\n\nSamantha managed to open her eyes again and look up at Triss, and the fuckton of emotions there were amazing. Embarrassed, panicked, overwhelmed with guilt and shame, and most of all, completely maxed on the pleasure scale. Well, Jacob was old as dirt, and had probably literally fucked a hundred thousand women in his lifetime. Not only that, the fucker knew people, knew them inside and out, knew how to read them, how to manipulate them, how to control them. Or, in this case, knew exactly how to make them cum their brains out.\n\nAnd sure, of course Jacob could make Samantha climax easily. Sure he'd probably pushed things on her, made her try new things against her will, knowing full well she'd absolutely love it once she gave in. Or, didn't give in, but he did it to her anyway, to great effect. And sure, Samantha was cumming her brains out right now, and probably even harder now that Triss was here to watch; all part of Jacob's plan to turn Samantha into a total sex freak, to be sure.\n\nBut none of that was what had Triss struggling to keep her smile hidden. It was how Jacob looked at Samantha. Jacob always had a twisted happy look on his face, typical Joker sorta shit, but now, his smile was soft, gentle, and dare she think it, endearing. He seemed genuinely happy to be pleasuring her. It wasn't like Jacob couldn't sleep with any woman he wanted; his Nos mutation was easily hidden, and the bastard was smooth as silk when he wanted to be. Either with money or a drop of blood or a witty tongue, Jacob could have half a dozen of the most beautiful, big-titted bimbo models in Dolareido riding his dick all night.\n\nHe never did that sorta shit though. Hell, Triss was pretty damn sure Samantha was the first woman Jacob had slept with since Triss had joined the circle. Maybe even since Minerva. Whatever his reason, he seemed genuinely happy, even if it was only a little. Certainly not little for Samantha, who was squirming and wriggling and trying to escape, but completely trapped as Jacob gently bounced her ass on his dick. Yeap, they'd switched to anal. And considering how quickly he'd penetrated her, the girl had already been prepped and lubed.\n\n\"Who's idea was this?\" Triss said, gesturing down at Samantha, and then to the two spent kine.\n\nJacob grinned at her. \"Hers.\"\n\n\"N-No! It wasn't! I--nnnn.\" Poor poor Samantha bucked her hips, and started squirming and wriggling extra hard, only to have her efforts defeated, and rewarded, with more pleasure.\n\n\"I think she's got a crush on Othello,\" Jacob said. \"I'm just helping her release those fantasies, so she's Madison right now.\"\n\n\"Ah, that explains it.\"\n\nSamantha was definitely the sort of milf who'd more or less ride any sort of sexual atmosphere, from what Triss had seen. If Othello had been more into tit fucking Madison, Samantha would probably be using her -- albeit much smaller -- tits on Jacob. If he'd been more into just lying back and letting Madison ride him cowgirl style, Samantha would probably be doing that for Jacob, showing off her body and dancing on him.\n\nTriss was tempted to voice the obvious comparison between Jack and Samantha, but, nah, no good to ruin the sex by bringing up the mom's son.\n\n\"I was trying to convince her that if she wanted, she could invite Othello to watch, maybe fuck Madison beside us. Or, you know, we could both fuck her at the same time.\" Jacob shrugged, hands still wrapped around the women's hips. \"But Samantha's shy.\"\n\nTriss laughed, came around, and sat beside Jacob. Just witches doing witch stuff, talking and fucking and talking while fucking. Plus, maybe a different part of Jacob's personality would come out, if she talked to him now? She'd seen him fuck Samantha before, but never up close like this, and she'd never really talked to him during.\n\nCourse, Jacob could probably chat about anything, from politics to chess maneuvers, and it wouldn't mess with his fucking. Just came with the territory of being five hundred years old. Triss, on the other hand, found sex extremely distracting and enticing, and from her new vantage point, she watched Samantha again struggle and wriggle to try and escape Jacob's grip, super embarrassed by Triss's new position. All that struggling just made sex feel better, got everything tighter, and Samantha again erupted into mewls as Jacob bounced her on his dick a few more times.\n\nSamantha's thighs trembled, her toes curled, and some fluid slowly trickled out of her clenching, empty pussy, down her folds and skin, and onto Jacob's dick. Yeah, she really was riding Madison's wavelength. The fact that Triss watched her cum, and cum from pure anal, was hitting all the milf's buttons, and she groaned again as Jacob resumed bouncing her.\n\n\"You two been getting along?\" she asked, eyes still locked on the obscene, beautiful display.\n\n\"Nope. We hate each other.\" Jacob nodded, as if speaking obvious fact, and he nodded toward Samantha. \"Don't we?\"\n\n\"Jacob you... you...\" She managed to lift her head long enough to give Triss a very guilty gaze, before it fell back, and she succumbed to Jacob's rhythm.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"So, how long did it take you to figure out Samantha wanted to be tied up and punished, sexually?\"\n\n\"Five minutes.\"\n\nTriss laughed, and leaned against the entrance of the shower. A nearby building had open showers, some old factory that used to do manual labor of some kind. It'd been repurposed into some kind of office building, but there was still an open shower in the basement that the kine didn't use. Far as Triss knew, no other Kindred knew about it save for the Circle, and it wasn't like the other covenants didn't have easy access to showers. The witches didn't.\n\nJacob stepped under the shower, and Triss whistled as the water hit his hair.\n\n\"You know boss, you're a damn sexy guy. Why don't you normally show off more skin? Every other vamp in Dolareido does.\"\n\nHe was a damn sexy guy. The lean build kinda reminded her of Brad Pitt in Fight Club, but the wavy salt and pepper hair, a few inches long, gave him that mature older man vibe. Of course, when he removed the bandage and turned to face her, that vibe vanished. Jacob's eyes were straight up gone, eyelids too, and they looked like they'd been removed with a serrated spoon. Yeah, better he keep the bandage on.\n\n\"I'm shy.\"\n\n\"Ha! You don't know the meaning of the word, you asshole.\"\n\nHe laughed, shrugged, and started soaping up. She'd never tell the man, cause she'd never hear the end of it, but dude had a great dick, and she grinned as she looked him up and down as he lathered it. Samantha was lucky. Fucker probably did a ritual on himself to get a dick like that, like Antoinette probably did for the tits.\n\n\"It's a useful trick, to make people think I'm a scrawny little old man underneath my clothes.\"\n\n\"Not like muscles indicate much about a vampire's strength. All vamps know that.\"\n\n\"Who said it was for them?\" He grinned at her, washing the lube off his dick while looking right at her. The dick washing was kinda hot. The empty eye sockets were not. \"I deal with plenty of things that aren't Kindred. As far as they know, my strength is proportional to my size.\"\n\n\"Strange thought. I'm too used to dealing with vampires, and shit like Jack, strong in a small package. I forget there's crap out there like Uratha.\"\n\nHe snorted quietly at the U word, but looked away from her and into the water.\n\nOh fucking god, the water pooled inside his eye sockets! Jesus fuck. The bastard must have noticed her face, probably all fucked up with disgust, and laughed at her, before he leaned forward to let the water fall out of his eyes. Like dumping out a couple cups.\n\n\"Dust and dirt gets in there, ya big baby.\"\n\n\"Uh huh.\" Well, she'd felt weird before, thinking about Jacob in a sexy way. And he was sexy, especially now that she'd seen him making Samantha cum her brains out. But it was probably a good thing he also grossed her out.\n\n\"You obviously have something you want to ask, Triss.\"\n\n\"Maybe I just want to watch you shower.\"\n\n\"After what I just did?\" He pointed at his eyes, and borderline cackled.\n\n\"Just look the other way or put the bandage back on, and we're golden.\"\n\n\"Ha. Get as old as me and it won't bother you. You think Maria's skin bothered Lucas?\"\n\nTriss shivered at that idea. \"I figured she and Lucas didn't fuck.\"\n\nJacob threw his head back and laughed even louder. \"That old myth that elders lose their taste for sex.\"\n\n\"Bullshit?\"\n\n\"Bullshit. Besides, Maria looks fine in the dark.\"\n\nNothing could stop the ugly snort laugh Triss made. \"Ha! Paper bag body?\" She gestured putting a paper bag on her head.\n\nThey laughed again. God damn, it felt weird, and awesome, laughing with her boss like this. She used to talk to him all the time, before Julias died, but it'd never been personal back then, mostly meaningless insults. After he died, the only thing she ever talked to Jacob about for a long time was revenge, the hunters, and Cr\u00faac. So, macabre shit. And now her world was even more macabre, more fucked up, with the sick shit she was doing a couple times a week, but it didn't feel so bad. At least, not when she was talking with Jacob about it, now that their relationship had evolved. Kinda like colleagues chatting about work.\n\nAnd if things kept going the way they were, with Samantha igniting everyone's sex drive like napalm on paper, she knew she'd be seeing a lot more of her and naked Jacob. Two more weeks and they'd probably all get together in the same room, fuck their partners, and have a friendly chat while doing it. Just witches, doing witch things.\n\n\"Put a few hundred years under your belt, and you'll be pretty damn surprised with what turns you on.\"\n\n\"Samantha already seems pretty, uh, awoken.\"\n\n\"What, some kine for foreplay, then some handcuffs, anal, and a visitor?\" He laughed again and shrugged. \"A century ago, I met a vampire who couldn't even get horny unless she was tied up, and getting split-roasted by three men at once, while hanging horizontally from a pole like savages were about to cook her over a fire.\"\n\nShe held her hands out in front of her and tried to mentally arrange the girl and three men doing that. Didn't exactly fit. \"That sounds like it'd be difficult to make happen regularly.\"\n\n\"Sure, if you're kine. She was a Kindred. She had a bunch of thralls ready to do whatever she wanted.\"\n\n\"That reminds me. Any rituals that actually involve having sex?\"\n\nAfter a sew seconds pause, Jacob shrugged. \"Rituals are mostly about intent. The steps in the ritual create the physical barriers to overcome to give it weight, and mental steps so you can appreciate what you're doing.\"\n\n\"Yeah, you told me.\"\n\n\"Then use your head, dumbass.\"\n\nShe frowned as she rolled her eyes. \"So, if the ritual needs steps, then the steps also need to be a barrier. I can't just, do something I was already going to do, and call it a ritual. It's something I need to overcome in the specific context of a ritual.\"\n\nThe naked man grinned at her. \"Look at you, thinking like a scientist.\"\n\n\"Yeah yeah, fuck you. So, if I wanted to do a ritual that... I don't know, affected someone sexually, I'd have to discover the ritual, and in the act of discovering it, will be shown steps to perform it. The steps will probably involve sex, but that doesn't mean it'll be easy or enjoyable.\"\n\n\"It'll take effort, and vitae, and no ritual is done for free, but that doesn't mean you can't enjoy it.\" He turned off the water, and got to drying with a towel.\n\nThis was an interesting side of Cr\u00faac, and she grinned as she felt the buzz of excitement and interest run through her. It didn't always have to be super dark shit; certainly leaned that way, but didn't have to be.\n\n\"So, have you--\"\n\n\"Yes, you horny little fuck,\" he said, cackling again as he put his eye bandage back on, \"I've done rituals during an orgy. Many, in my younger days, usually to give me power over people, alter the way they think, and have villages sort of... protect me, in a way.\"\n\n\"Protect?\"\n\n\"Ever see a creepy vampire movie, or read a creepy vampire story, where everyone in the village or city or whatever is acting weird, and they all sorta try and dissuade our intruding main character from investigating disappearances?\"\n\n\"Oh, I get it. You had the whole town brainwashed. That's some classic vampire shit. And pretty awesome, honestly.\"\n\n\"Yeap. But convincing an entire village to get in on an orgy isn't easy. Convincing them to do it, outside under a full moon, with me at the center with seven virgin girls, each lined up and taking turns sitting on my dick? That took years of effort to set up.\"\n\nWow, that was a damn powerful image. \"And the virgins--\"\n\n\"Enjoyed themselves immensely,\" he said, grinning at her. \"And since I know you're a horn ball teenager who can't see past her own tits: I Kissed every one of them during the act, and then bled my wrists into a ritual bowl.\" His grin widened, right into Joker territory again. \"Those seven became my ghouls. I had them for fifty years. They protected me and fed me. I had a cave nearby, one you couldn't climb into without modern climbing gear, unless you were a vampire. During the night, I came out, and--\"\n\n\"And fucked and fed on those seven ghouls.\"\n\n\"Of course.\"\n\nAll she could do was laugh. This man was supposed to be a big, bad, powerful Nosferatu, a master warlock, and all around scary fucker. And he was all those things, but he was also a damn silly guy. It was hard to be afraid of someone when laughing at them, and with them. Maybe that was part of his shtick.\n\n\"Samantha know about this sorta stuff?\"\n\n\"Some. I can't just dump all the crazy on her at once. But, she is coming to appreciate the Kindred life, and the Circle, pretty quickly, wouldn't you say?\" The grin that followed was so perfectly smooth and suave, Triss found herself staring at the man. \"Don't think I haven't noticed how much the rest of you have taken an interest in her.\"\n\n\"She's... surprisingly fun,\" she said.\n\n\"Yeah, she is. She's had a rough life, a damn rough life, but she's pulling through.\"\n\nTriss raised a brow at that, and tilted her head to the side slightly as she looked at the man. If she didn't know better, she'd think that was some genuine concern in his voice.\n\n\"You like her.\"\n\nHe barked a laugh. \"Uh, yeah. I happen to be fucking her, in case you didn't notice?\"\n\nShe shrugged. \"People who barely care about each other fuck each other all the time, for a lot of different reasons. Hell, people who hate each other fuck each other sometimes. And you damn well know that.\" No point in giving the man tidbits of advice about the nature of people. He knew more about that than she ever would.\n\n\"Aren't you wise to the ways of the world.\"\n\n\"Jacob, come on, don't dodge me. I'm not going to think less of you for liking someone.\"\n\nHe got his pants on, but instead of reaching for his shirt, he looked at her, face unreadable. \"Oh?\"\n\n\"Yeah. I mean, if she's the first girl you've really ever opened up to since Minerva, then of course you're going to be... I don't know... feeling a bit guilty about it?\" Dangerous waters she was treading. If she said the wrong thing, or crossed a line, Jacob wouldn't hesitate to break her arm or something. That's what shit was like in the Circle, good and bad.\n\nHe stared at her, and she did her best to keep her eyes on his eye bandage. She also did her best to keep her weight on the balls of her feet, in case she had to dodge a punch.\n\n\"Being kind of hypocritical, don't you think?\"\n\n\"Uh, what? Not--\"\n\n\"Julias died months ago.\"\n\nShe snarled. Ok, if this was the direction the conversation was going to go, if he was willing to get their words dirty, then fuck him.\n\n\"Months ain't very long, asshole.\"\n\n\"You dated him for what, bit over two years? I was with Minerva for decades, kid.\" He said 'kid' with all the viciousness of an angry mentor, someone who knew where to dig to deal damage, someone whose opinion he figured she thought highly of. And she did.\n\n\"You saying I didn't love him as much as you did Minerva?\" She regretted it the moment she said it, not because she might hurt his feelings, but because he wasn't going to mince words on this topic. And much as she tried to push past it, this topic was still sensitive as fuck. If he wanted to, really wanted to, he could drop a few words and leave her a weeping mess.",
        "He took a step toward her. She stood her ground.\n\n\"I'm saying you weren't with the man long enough for his death to leave too deep a scar, dumbass.\"\n\n\"I--\"\n\n\"Shut up.\" He came in closer. Again, she didn't back off, but she damn well knew she should have. He was only two feet from her now, and if he wanted to get in a punch, she wouldn't even see it coming. \"Ever talk to an old person, someone who's been with their partner for decades, and then suddenly they're alone? It's not just that the person they loved more than the whole world is dead, but that a part of who they were is gone. A part of their routine, a part of how they operated. Imagine waking up and you're suddenly missing a hand. You reach for a doorknob, don't remember the missing hand, and then walk straight into the door. You can't even open a can of fucking beans anymore.\"\n\nShe almost laughed, but the man's tone crushed the possibility.\n\n\"When you lose someone you've been with for that long, a part of you is chopped off,\" he continued, \"and you don't recover, so much as learn to live with the handicap.\"\n\n\"But... we're vampires, Jacob. We live forever. We get to recover, right? And... you too?\"\n\n\"Yeah, we can. But that doesn't mean recovering from that sort of wound is easy. You were with Julias for a couple years. And yeah, I was happy for you, kid. Seemed like a great relationship. But you weren't with him long enough to have him become one of your hands. I was with Minerva long enough that she was. So if you'll excuse me, don't compare your situation to mine. It's not about guilt for me, unlike you. It's about a million things you're not nearly old enough to understand. It's about... testing out a new hand, and trying to my damnedest to give it a fair shot.\"\n\nSighing, Triss finally took a step back and lowered her head. It was all true. She'd loved Julias, loved him with everything she had, but a bit over two years wasn't long enough to develop the same sort of reliance and cooperative existence Jacob was talking about. It meant she would recover, where he might never.\n\n\"If... if Minerva was that important to you, why did you give up on resurrection?\"\n\nHe snorted a sad laugh, turned, and started putting on his shirt. \"Gave up for the time being, Triss. You still have a long way to go with your attempt before you've put in as much work into it as I did. And I never really gave up. I'm just... biding my time.\"\n\n\"Biding your time?\"\n\nHe grinned, that usual, half psycho grin of his. \"I'll tell you more about it sometime. But for now, keep doing what you're doing. Hey, maybe you'll learn something I didn't.\" He walked past her, and she fell in beside him as he stepped out into the empty night streets of North Side.\n\n\"So, about Samantha,\" she said.\n\n\"You saw her naked and cumming just an hour ago. That horny to see some more of her?\"\n\n\"What? Dude, I--\"\n\n\"Give it a few more weeks and I'm sure she'll let you touch her. Hell, one more week and she'll probably want me and Othello to fuck her at the same time.\"\n\nTriss facepalmed and groaned. \"No! Dude, no. I meant, you... so you really like her?\"\n\nHe rolled his eyes -- all in the head motion -- and laughed again. \"Yes, you idiot.\"\n\n\"Good, good.\" She nodded, and smiled to herself as she looked out at the empty street, the street lights, and the images running through her head. \"You really just, gonna share her with the whole Circle?\"\n\n\"That wasn't originally my intention, but the more it comes up, the hornier she gets. Who am I to say no to her desires? Not like I haven't done all that and worse in my lifetime. Like I said, village, orgy, seven virgins.\"\n\nTriss should have laughed, but she didn't. Instead, she set a claw on her lips, and thought about it, about that milf sitting on Jacob's dick, except with Othello and Madison there, and Jen and Triss too, everyone just fucking each other and being happy in a very weird, intimate, witchy atmosphere.\n\n\"It... does kinda make me... feel guilty,\" she said. \"I know Julias and I weren't together super long, but still. And... and we were a little more conservative with the sex, you know? I mean yeah, Jen was always with us, and sometimes we invited some kine, but without Julias, I feel...\"\n\n\"You know damn well the man wouldn't want you to feel guilty.\"\n\n\"Sure, yeah, and--\"\n\n\"Sexual healing is a thing. Jen's been trying to help you with that this whole damn time. Hell, whatever happened to that dude she was obviously trying to get you with?\"\n\nShe smirked at the man. Jacob damn well knew the man's name was S\u00e1ndor, and he was doing that guy thing guys did where they pretended to forget a dude's name. Course, he wasn't doing it for the reasons a guy would.\n\n\"S\u00e1ndor, dumbass.\"\n\n\"Well, go find him and fuck him.\"\n\nShe shook her head and sighed. \"Dude is boring.\"\n\n\"He's a stoic fucker, I'll give him that. But he's probably fucking miserable, and I'd bet good money that's a big part of why he's so boring.\"\n\n\"So, you think, what? If I fuck him, he'll be more fun?\"\n\nThe asshole grinned at her like a happy pirate. It wouldn't have surprised her at all if he suddenly broke into a sea shanty. \"I think if you and Jen fuck him, he'll be more fun.\"\n\n\"Jesus fucking christ. How does Samantha put up with you?\"\n\nHe hooked an arm over Triss's shoulders, and laughed a merry laugh, again, like a pirate. \"That woman has a bigger sex drive than I do, and kinkier tastes. It's just taking her a little bit to uncover them.\"\n\n\"You're corrupting her.\"\n\n\"Not even a little. If anything, she's corrupting me.\"\n\nThey laughed again. The idea of sweet, naive Samantha corrupting Jacob was pretty funny, and honestly, Triss could see it. Samantha was a walking bundle of sexual desire, and if Jacob kept nudging her onto paths the woman very much wanted to go down, it really wouldn't be long before things got super crazy in the Circle's cave. And, much as she tried to find that idea unappealing, Triss didn't. If Samantha and Jacob wanted to fuck right next to Triss and Jen, at this point, Triss wouldn't mind. Samantha's sweetness, combined with the milf vibe, was too damn hot. And, to her surprise, she didn't mind the idea of Jacob being there either. She didn't want to fuck him, but she'd be lying if she said she didn't find him attractive, or the sight of him fucking Samantha insanely sexy.\n\nSexual healing, Jen said. Sexual healing, Jacob said. Or were they just some horny witches that wanted to escalate the already insanely sexual Circle into full on orgy sex? Probably both.\n\n\"S\u00e1ndor's busy with the other Begotten. Azamel's dying, and he's going to replace her as the leader of their little group, supposedly. Or at least their guardian.\"\n\nJacob shrugged, arm still hooked over her shoulders. \"Sounds like a powerful individual, politically speaking. Even better reason to get him into bed.\"\n\nShe rolled her eyes again, but some tantalizing images of S\u00e1ndor drifted up from memory. Him, basically naked, getting dressed by Jennifer for the ball. He was damn fucking sexy, too. But the man reeked of maturity and wisdom, and pain. And yeah, it was obvious now that that pain scared her. The man was just so fucking broken, and it scared the shit out of her to see what losing a family could do to a man, a father and husband.\n\n\"Pretty sure he's not interested.\"\n\n\"Probably feels guilty.\"\n\n\"G--\" Fucking shit. She sealed her lips. Everyone feeling guilty for everything these days. \"You think... I...\"\n\n\"I think you should cut yourself some slack, you moron. Guilt is normal. It doesn't mean you're doing something bad, just that a part of you thinks you are. And guess what? We're all idiots, and think things that are wrong all the damn fucking time. You know damn well Julias would want you to move on and find happiness, and get laid. I know damn well Minerva would want me to do the same. Still feels weird, being with another vampire, even one as nice and sweet -- and horny -- as Samantha. But a big difference between you and me, Triss, is that I'm aware that these feelings are dumb, that it's ok to feel them, and it's ok to let them go.\"\n\nShe did her best to keep her voice steady, but it still came out a little wavery. \"Sometimes you make it easy, for me to forget you're really fucking old, and actually probably know a lot of shit.\"\n\n\"All part of my charm.\" He winked at her -- all in the eyebrow -- and let go of her. \"If you want to keep trying to resurrect Julias, go ahead. Lots of witches and warlocks have tried, and failed, but that doesn't mean it can't be done. And if you feel guilty for fucking someone, while trying to resurrect your old lover, don't worry about it.\"\n\n\"And if I feel guilty because I... because I'm trying to resurrect him? Because I'm killing kine to do it? Because--\"\n\nThe man held up a hand. \"That's part of being a witch, Beatrice. That's a big part of being a member of the Circle of the Crone. And it's personal.\" He sighed, a serious sigh, and she raised a brow. Jacob saying serious things was one thing, but for Jacob to actually sound serious, to use a heavy sounding voice? That was rare. \"You're stepping into deep shit, but sometimes that's what's needed to change the world.\"\n\n\"What?\" She blinked at him, and he looked away. That line, 'change the world', he said that with a straight face and a straight voice, and there was just no way Jacob would say a cheesy line like that with a serious voice unless he really fucking meant it.\n\n\"Keep working on it. I won't judge. Stop working on it. I won't judge. Hell, I think you're better off abandoning the attempt, Triss, but fuck me, who the fuck am I to judge any of that shit? All I'm saying is, you fucking dumbass, is that it's ok to do whatever, and feel whatever. There are no rules, nothing written in the sky that says how you should think or feel.\"\n\n\"That's, uh, a very anarchist philosophy.\"\n\n\"Yeap. S'why Garry and I get along.\"\n\nAfter a few more chuckles, Triss took a deep breath and dug up another conversation topic she didn't want to have.\n\n\"Jack wants to talk to Black Blood.\"\n\nJacob's laugh returned, with a healthy dose of that cocky asshole vibe coming through again. \"Heh, of course he does. Who tipped him off?\"\n\n\"I did.\"\n\n\"Naturally.\"\n\n\"He deserves help, Jacob.\"\n\n\"Does he?\"\n\n\"Yes, of course he does!\" She grabbed the man's shoulder and forced him to stop on the sidewalk. \"Dude, I owe him so fucking much.\"\n\nJacob's psycho smile faded away, and he stared at her, the sudden silence around them fucking haunting.\n\n\"Even after Julias died helping him? To save his mother?\"\n\n\"Yes, even after that.\" She grit her teeth and shoved him. \"And don't give me that shit. You know damn fucking well that was all Julias, dying a stereotypical, valiant death, like he was fucking destined to. And if it wasn't for Julias, you wouldn't have Samantha, the first woman I've ever seen actually manage to make you smile. Actually, genuinely, really smile.\"\n\nHer rant got louder and louder, and only at the end did she notice the subtle smile on the asshole's lips.\n\nShe growled and shoved him. \"You asshole. You already knew all that.\"\n\n\"Catching on, ain't ya?\"\n\n\"The fuck? What the fuck are you digging at me for?\"\n\n\"Just wanted to make sure you really understood your feelings.\"\n\n\"Oh fuck you.\" That hurt. That fucking hurt. Not that he'd tricked her; Jacob tricked everyone, and with the Circle, he tricked in order to teach them lessons the painful way. They lasted longer that way. What hurt was what she'd said, the way she knew Julias was bound to die because of the kind of guy he was. She didn't want to remember him like that.\n\nJacob grinned, hooked his arm over her shoulders again, and resumed their walk down North Side. \"I'll talk to Jack, and so will Black Blood.\"\n\n\"Thanks. And... fuck, you are so damn hard to talk to.\"\n\n\"Am I?\"\n\n\"Yes, you are. One minute you're hinting I should join you and Samantha for a good fucking. The next, you're... making everything hurt.\"\n\nHe chuckled, and half hugged her with his arm. \"Gotta come at you sideways to get past the defenses.\"\n\n\"Defenses?\"\n\n\"Yeah, defenses. Everyone has defenses, in the brain.\" He pointed at his temple with his free hand. \"They try and predict conversations, so they can say shit to defend themselves from others, and from words. They block emotions, and keep shit at a distance.\" He hugged her a little tighter, and leaned in to bring his lips close to her ear. \"You're the best witch I've had in a long, long time, Triss. I'm not gonna let you close yourself off to shit. You want to be a witch? You learn to embrace pain, and accept it. Don't rationalize it or explain it anyway, just accept it for what it is, and learn that it's ok to feel pain.\"\n\n\"The... same way you do, when learning Cr\u00faac.\"\n\n\"Exactly.\" He gave her a small shake. \"Learn that you can do whatever you want, and that you don't need to chase some idealism some fool taught you. It's all ok. Do whatever the fuck you want. No one out there has the answers. No one fucking knows a god damn thing. For sure, no one knows of any correct way to do life.\"\n\nShe smiled and looked down at the sidewalk. That made a lot of sense, in a sad, and freeing sort of way.\n\n\"You probably loved Fight Club, didn't you?\"\n\n\"Heh, to a point,\" he said. \"The allegory was a bit thick. And I wasn't kidding, about your first point.\"\n\n\"First point?\"\n\n\"You said I was hinting you should join me and Samantha. I'm telling you, Samantha would come her fucking brains out if you did. She really likes you two, and Othello and Madison. Especially Othello. Mostly Othello.\" He tapped his chin thoughtfully. \"I wonder if she's using me, to get to him?\"\n\nTriss rolled her eyes so hard she could see her fucking brain.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nA few days later.\n\nTriss had told Jack that Jacob would come get him when he was ready, but that it might take a few days. BB -- yeah, she called him BB -- was busy, apparently, doing who the fuck knew what. Maybe that's what Daniel was trying to figure out? The man vanished randomly, sometimes for weeks at a time. He was less a sheriff, and more a detective, hunting down random shit that happened in Dolareido.\n\nSighing, Jack squirmed on the bench in the small room, and watched the two ladies change. The two ladies were, of course, Elaine and Antoinette, and both were trying on some of the latest fashion trends. La DaFraam was an upscale, overpriced fashion store, the sort where you could get something almost straight off the runway, instead of the watered down version that flowed out into the real world over years; Antoinette had given him a small lesson about the nature of fashion.\n\nThe store was open all night. All the fancy stores and restaurants in Dolareido were; just that sorta city. It was also the kinda store where the employees wore whatever they wanted, and were strongly encouraged to look gorgeous doing it. Three women and one flamboyant man were the employees tonight. The clientele was obviously supposed to be women, or men easily manipulated into buying expensive things for their girlfriends and wives. He'd never seen so many lacy bras in his life.\n\nAntoinette sat beside him on the bench built into the wall of the changing room, legs folded, hair pulled over her shoulder, and she combed it absentmindedly with her fingers as she watched Elaine.\n\n\"Perhaps the red one?\"\n\nElaine nodded, slipped the dress off, and slid into the red one.\n\n\"I thought we were looking into possible thralls?\" he said. \"I mean, not that I mind this.\" He gestured to Elaine, and waved his hands toward her ass. She was wearing a black thong, high hip, and holy sweet mother of god there was just something so arousing about watching a woman put on and take off clothes while wearing a thong.\n\nAntoinette chuckled and shrugged. \"We are.\"\n\n\"We are? Looks like we're shopping.\"\n\n\"Veronica Tam, one of the assistant buyers here at La DaFraam.\"\n\n\"Veronica? The girl with the blue hair?\"\n\n\"Indeed. She has been exposed to the world of the paranormal.\"\n\n\"Really? How?\"\n\nAntoinette shook her head with a quiet but annoyed sigh. \"A chance encounter. Unfortunately, Kindred are not perfect, and make mistakes. Normally, as you know, an Invictus Ventrue would be sent to make sure she does not remember.\"\n\n\"And I'm to be that Ventrue?\"\n\n\"No. I am told that the woman did not panic when she discovered a vampire in the act. In fact, it was likely she had seen a vampire before, and had kept it to herself. This was likely a second sighting.\"\n\n\"Oh, so she's... kinda trustworthy?\"\n\nThe Prince nodded. \"She managed to notice the presence of vampires in my city, and did not open her mouth, of her own volition. Likely, the only reason she was caught spying, was due to her raised interest. The vampire who noticed her said she did not attempt to film the act. She simply wanted to see more of the world hidden in her shadow.\"\n\n\"Ah, I get it. She's a classic innocent young woman who finds herself pulled into things bigger than she is.\" Sounded familiar, too damn familiar.\n\nElaine laughed, but said nothing as she admired herself in the mirror. Skimpy little red dress, and Jack forced himself to look away and back to Antoinette.\n\n\"Oui. And we are going to offer her an opportunity. My file on her says she recently left the arms and money of her parents, and a relationship with a man, only to then move to Dolareido where she lives by herself. She is alone, and struggling to survive, likely deep in debt.\"\n\nThat was strangely detailed information, and Jack raised a brow at her. Her smile was flawless, best poker face ever, but it was obvious she'd done a little digging outside the usual means. Maybe she'd been looking into getting Veronica as one of her own thralls?\n\n\"So, she has good enough eyes to catch a young vamp making a mistake, and enough brains to keep her mouth shut. She doesn't have a support mechanism in her life. And, she went out of her way to look into stuff, without risking taking a picture; just wanted to see shit with her own eyes. Together, it all... makes her a perfect option for a thrall.\"\n\n\"Agreed,\" Elaine said. She slipped out of the red dress, and instead of grabbing for another, she reached out, took Jack's hand, and pulled him up to her. \"Look her in the eyes when she comes in.\" His great grandsire smiled at him, and met his eyes. Powerful, deep, brown, scary eyes. \"You will see it, plain as day. Instead of the mindless gaze of a sheep, you will find the eyes of someone with--\"\n\n\"A brain?\"\n\n\"Ha, in so many words.\" Elaine winked at him, walked over to the door to the changing room, and stuck her head out, careful to use the door to cover her naked chest. \"Veronica dear, could you come here? I have a question.\"\n\nOf course they were going to do this now. Jack almost interjected, but the click clack of Veronica's heels silenced him.\n\n\"How can I he--elp!\"\n\nElaine yanked the woman into the changing room, closed to the door, and turned her to face Antoinette and Jack. With hands on the kine's shoulders, Veronica wasn't going anywhere, and she rapid fire blinked in total confusion and shock.\n\nJack groaned and gestured at Elaine. \"You're going to scare her to death. Probably thinks we're going to rape her.\"\n\nElaine rolled her eyes, but kept her hands where they were, and the kine close enough her breasts pressed into Veronica's back and shoulders. \"Hardly.\"\n\n\"W-What's going on? I'll... I'll scream if you don't--\"\n\nAntoinette lifted a hand and swiped the air gently. \"Come now Veronica, you are an intelligent woman, are you not? You understand who we are.\"\n\n\"Who you are? I... I...\" The pale woman turned paler, and her arms fell limp at her sides. \"Oh.\"\n\nThat was surprising. Veronica looked at each of them, and her eyes fell as she realized the situation she was in, body going limp with submission. Smart, and she was quick on her feet to come to the conclusion that fast.",
        "Veronica was maybe twenty years old, and looked absolutely terrified. Not just terrified cause she realized she was in a room with three vampires, but because she was young and inexperienced with... everything. Obviously in over her head after moving out from her parents' place, and trying to make it in a cruel world. Another young person who found out too late that you couldn't live on a minimum wage like you could fifty years ago. Probably took out a loan, maybe with some unsavory people. To land a job at a place like La DaFraam, she had to know her craft, so she wasn't stupid.\n\nStupid enough to be impulsive with her life, like leaving her parents' money, and how she went looking for a vampire the second time. Smart enough to know how much shit she was in, and make solid efforts to dig herself out of it. Antoinette had it right, Veronica was a perfect option for a thrall. Beautiful, smart, but fucked by circumstance, and in need of help.\n\nShe was also fucking gorgeous. A bit short, maybe five two, and quite thin; the short black skirt she wore showed that, especially considering its waist was some kind of mini-corset that stopped below the navel. The whole getup was, what was the word, chic? And sexy. She wore a white top with long sleeves, and a very, very spread, open chest, cleavage that reached the navel, and made sure her large breasts were on display, no bra.\n\nOf course large, because Antoinette and Elaine were apparently convinced Jack could never have too much boobage in his life. And while that may have been completely and totally true, it was ridiculous. He wasn't going to pick a thrall based on the size of their rack. Probably not.\n\n\"I love this hair,\" Elaine said, and she raised a hand enough to run her fingertips along its ends. Shoulder length hair, dyed bright blue, with bangs that cut down along one half of her face. She probably had cute anime posters in her room, or in the modern age, as her smart phone background.\n\n\"Th... thanks,\" she said, eyes glancing up to get a peek of Jack and Antoinette. Nervous as fuck.\n\nJack looked up at Antoinette, but she smiled down at him, and gestured to Veronica. All in his hands then. Fine, sure, whatever, because he had loads of experience engaging potential thralls. Ugh, this might just become a train wreck.\n\n\"Veronica Tam,\" he said. The fact it was him talking in the authoritative voice, and not the two insanely tall, one topless, gorgeous women, surprised her. \"I'm informed you've discovered some pretty scary stuff, in Dolareido's nightlife.\" She managed a trembling nod. \"We're here to talk about that.\"\n\n\"How... how do I know you are what you... imply you are?\"\n\nHe pulled aside one of his cheeks with a finger hook, and grew his fangs. Her eyes widened, and she quivered, gazed locked onto the sight of his fangs emerging, and then reverting at will.\n\n\"Satisfied?\"\n\n\"Y-Yes.\"\n\n\"Good.\" He leaned forward, and gave her a hard look, the sort of look Julias gave when negotiating with corporate types. It was a good face to use when bullying people, but it was also a good way to make sure someone didn't lie to you. \"We don't let people run around knowing about us, Veronica. Dangerous.\" Her eyes widened even more, and he put up his hands. Shit, that'd sounded like a death threat. \"We're not here to kill you, calm down.\" Probably not here to kill her, at least.\n\n\"Then... w-what do you want?\"\n\n\"My love,\" he gestured to the tall white-haired beauty at his side, \"informs me you're in debt, Veronica. Considering how young you are, and that you don't have access to the assets of your parents, or the support of your old boyfriend, you probably took out a loan with less than reputable types.\"\n\nShe winced with every word. \"Life hasn't been... what I expected.\"\n\n\"And to make things worse, you stumbled onto a nightlife that should remain secret.\" He thought the speech was coming along nicely, honestly. Talking with an authoritative style wasn't that hard. Maybe it was just his Ventrue half having fun?\n\n\"I... I did. But I won't tell anyone!\"\n\n\"Indeed.\" He grinned at her, and sat up straight again. \"You have two options, Veronica. The first option: I can wipe your mind of the encounters you've had with our kind.\"\n\n\"B-Brainwashing?\"\n\n\"I'd be removing the memories of those encounters, nothing more.\" Still, kinda like brainwashing, but no point in making things even scarier for her. Hopefully he wouldn't accidentally delete her whole brain while he was in there. \"The second option: come work for me.\" And he gave her the Julias grin, the suave, smooth, flirtatious and confident grin. He'd practiced it in the mirror some more, and thought he was getting pretty good at it.\n\n\"Work for you? But, I... um... what does that mean?\"\n\n\"At first, you'll be taking care of my mansion.\"\n\n\"Mansion!?\"\n\nHe chuckled, a very Ventrue, cocky laugh. Damn, it came totally naturally. \"With time, you'll be given more responsibilities, and more knowledge, as your worth is proven. And you'll be payed handsomely.\"\n\nTalk of money had her eyebrows going up. \"How much?\"\n\n\"At least double what you're paid here. At first. Given time, your salary will grow to be larger.\"\n\nIf her eyes could have fallen out of her skull, they would have.\n\n\"Wow... Do I, um, get to think about this? It's such a big decision, and--\"\n\n\"No. Like I said, we can't let someone who knows about us go running around. When you leave this changing room, Veronica, either you'll have lost your memory of us, or you'll be working for me.\"\n\nShe sniffed a small whimper, nodded, and looked down again. \"I see.\"\n\n\"There's a price to pay, if you want to work for me.\"\n\n\"P-Price?\"\n\nHe nodded. \"A drop of my blood.\"\n\n\"What!? But isn't that how--\"\n\n\"No, it won't turn you into a vampire. But it will bind you to my will, Veronica. You'll be my servant, until I decide otherwise. You will do as I tell you to, and you will be compelled to do so.\" He stood up, and looked down at the small woman. \"Understood?\" He almost scared himself with how easy he found all this, being boss-like and confident. He didn't feel confident, not at all, but pretending he was hadn't only become easier the past few years, it'd become downright fun.\n\nShe opened her mouth, but no words came out. She just stared up at him, dumbfounded.\n\n\"I can assure you,\" Antoinette said, \"my love will take good care of you. You will be treated well.\"\n\n\"Very well,\" Elaine whispered down at the small woman, voice blatantly husky. No need to say 'sex is involved' when a tone like that did it for her. \"I can also assure you, you will enjoy having Jack as a master, but you will be required to do whatever he wants of you. Whatever. He. Wants.\"\n\n\"Again, just taking care of my mansion... at first.\"\n\nShe stared at them, completely overwhelmed by the bomb they'd just dropped on her. And, much as Jack knew he sounded and looked confident, more thoughts boiled up that made him nervous. The fuck would the curse do to his blood? Would it affect Veronica in some strange way? He had to find out, but it'd really suck to learn it made his blood toxic or something.\n\nThey waited, and waited, and after a few minutes went by, Veronica took a deep breath.\n\n\"I'll work for you. What... what do I have to lose, right? I have nothing here, just... debt from a loan shark, and no friends or anything anymore.\"\n\nShe'd convinced herself, and Jack. Took guts to come to a decision like that, that quickly.\n\nJack nodded, and held up his wrist. \"Are you sure?\"\n\n\"I'm... I'm sure.\"\n\nHe nodded again, slower this time, and sank his thumb into his wrist. Skin punctured, he held out his wrist to her, and with an effort of will, told his blood to pool at the wound. A single, large, thick droplet of inhumanely dark blood.\n\nShivering until her knees almost hit each other, she took his wrist, and kissed it. Her eyes went wide, wonder and shock combined, and she let out a small moan.\n\n\"Wow. It tastes... amazing.\"\n\nHe smiled. Better to let her know he didn't know what it tasted like. The Vinculum worked on vampires as much as humans, so a smart vampire was damn careful about what they put in their mouths.\n\n\"Wonderful!\" Elaine said. \"May I have a taste of your new thrall, Jack?\"\n\nHe rolled his eyes, sat down beside Antoinette again, and gestured to the kine. So far so good, not dead on the spot or anything. \"Veronica, have you ever had a vampire feed on you?\"\n\n\"Um, no? I... How would I know?\"\n\n\"Pleasure,\" Antoinette whispered, with the same husky tone Elaine used earlier. \"Extreme pleasure. And normally, the master is the first to taste of a new thrall, Elaine.\"\n\nElaine shrugged, and lowered her hands from Veronica's shoulders down to her hips. She was so damn tall compared to Veronica, her breasts almost sat on the blue-haired woman's shoulders.\n\n\"But she looks so utterly delicious.\"\n\n\"Pleasure?\" Veronica said. \"It won't hurt?\"\n\nElaine chuckled down at the woman, and sent her into more quivers as she leaned down, and set lips along her neck. \"Not at all.\"\n\nJack had seen Elaine feed on Julee and Ashley many times, and every time, the two women loved it. More than loved it, they came their brains out, because Elaine always got her fingers inside them whenever she did. And considering the mischievous look in her eyes now, he knew she was going to do it again.\n\n\"I think... I think I will have the first taste.\" He got back up, and stepped in front of Veronica. \"You're mine now, Veronica Tam.\" He didn't mean to say that, or say it in such a dark, gravely voice, it just came out, a statement of pure power. And he knew the curse wasn't the reason he said it. That was all him and his Ventrue self, the part of him that delighted in the idea of controlling someone else. They hadn't lied. He'd treat her well. But, damn, out of nowhere, he suddenly found himself saying these things as if he'd said them a hundred times, to other thralls and ghouls that served him. He was her master, she served him now, and that meant he got to feed on her whenever he wanted.\n\nShe nodded, and made no effort to move away as he leaned in, and set his lips on her neck. Her whole body trembled, but as he sank his fangs into her skin, her trembling melted away. She collapsed back, but Elaine remained standing, her breasts against Veronica's shoulders, one of them nudging into Jack's face as he drank down his first gulp of the woman's warm, delicious blood.\n\nAnd he stopped. After what was essentially nothing more than a sip, he licked the girl's neck, closing her bite wound, and he stepped back.\n\nVeronica, panting heavily, stared at him, eyes wide with a new stimulus she'd never felt before. Her nipples hardened, points against the thin white material of her shirt, and her face flushed. She was aroused.\n\nAnd as much as he'd like to say it was just the Kiss that had her boiling, he knew it was more. The clothes, the blue hair, the adventurous attitude, she'd been half scared and half excited the moment Elaine had pulled her into the room. Having the tall blonde constantly pushing her big, naked breasts into her shoulders had definitely put her in a mood. The Kiss just convinced her body it was ok to give in.\n\n\"Wow.\"\n\nHe smiled and sat back down beside Antoinette. \"There.\"\n\n\"Do... I taste good?\"\n\nThey all chuckled. There was something so perfectly sweet about a question like that, it stroked the Kindred sense of humor just right. Kind of twisted, but true.\n\n\"Yes, you do. Very. I look forward to Kissing you again.\"\n\n\"Kissing?\"\n\n\"The Kiss,\" he said. \"It's what we call feeding. And the next time it'll be... well, Elaine, you can show her.\"\n\n\"Ah, finally.\" With a hungry growl, Elaine lowered herself down to the other side of Veronica's neck, and sank her teeth into her.\n\n\"Oh! Oh... god...\" Veronica melted against Elaine's body, her eyes locked on Jack, and she struggled to stay standing. Elaine kept her from falling, one hand slipping up the girl's exposed sternum and neckline in an intimate hug, the other sliding down her stomach, and down onto her skirt.\n\nJack almost chimed in to say something, to tell Elaine to stop. Veronica hadn't given permission for anything sexual. But he stopped himself. The look in Veronica's eyes screamed the bliss of the Kiss, the adrenaline of her life being suddenly changed, the danger of her circumstance, and the joy in a chance to show off her body for her new master.\n\nOne taste of his blood, and she was already that deep into the Vinculum? It took three tastes. How far would it push her with the second and third dose?\n\nMuch as he tried to remain focused on his concerns, or at least not hypnotized by Veronica's sudden pleasure, there was no chance. Elaine was too damn good. She spread the already very open chest of the shirt apart, and hooked it around the outside of the thrall's large breasts. She had subtle nipple piercings, studs. Veronica blushed furiously, but all she could do was tremble, nipples swollen and begging to be touched. Elaine obliged, one hand clutching and squeezing the woman's breast with a little more frantic energy than Jack figured she would; she was hungry.\n\nHer other hand pulled up the thrall's skirt, exposing a black thong, and Elaine groaned as she slipped her hand underneath the waistband, and into the thrall's underwear.\n\n\"Pierced,\" Elaine said between gulps. \"I bet there are many hidden decorations to find on this beauty.\"\n\nVeronica's tried to say something, but it came to a quick end, as Elaine made sure Veronica's first full Kiss was world shattering.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nBack in his mansion, Jack sat down on the base of the stairs of the ridiculous grand entrance room, or lobby or whatever it was, and sighed. He'd handled the conversation with Veronica well, so well Antoinette said she'd been impressed. Apparently, he did the authoritative Ventrue thing like a natural. Veronica had been thoroughly convinced, and enamored.\n\n\"One thrall in development,\" he said to himself, and he checked off a non-existent list on a non-existent clipboard. \"Woo.\"\n\nHe didn't feel good about it, but at the same time, didn't feel as bad as he thought he should have. The choice had been given, and it'd been a good one. Forget, or join. And join was definitely a good option for someone like Veronica who needed some rescuing from shitty life circumstances. But the look in her eyes after she'd taken some of his blood, that was a little unnerving. She'd looked at him like she knew him, like she liked him, and the girl had known him for ten whole minutes.\n\nBut, that was the whole vampire human thing. He was a vampire, she was a human. Kindred and kine. Kine, a term that meant cattle, or cows. He wasn't supposed to think of her as an equal, because she was prey, and he was the predator. A part of him knew that, accepted it, and liked that. Another part of him very much did not.\n\n\"Julias would understand. He didn't use the Vinculum, usually. He created most of his thralls with Dominate.\" But the man had a knack for Dominate, subtle and powerful, that Jack just didn't have. Julias could gently nudge people in certain directions, or keep them under his control for weeks, even months. Jack could easily brainwipe someone with the power of the curse and leave them a total empty husk, but to manipulate their minds like a master puppeteer, wasn't a skill he had. Yet.\n\nMaybe things would be fine? Ashley and Julee had amazing lives, relative to other humans. And with some more years under their belt, Antoinette might embrace them. They'd no longer be slaves to her, and gain the power of a vampire, but they'd also have to deal with all the hardships that came with. Maybe Veronica would find herself in the same situation in the future?\n\nThat was assuming nothing was wrong with her. Antoinette and Elaine took her to the tower to check her in the weird, humming machine, ritual circle thing, and if no trace of the curse showed up on her, they'd deliver her to the mansion. His first thrall, an attractive girl with a head on her shoulders. Much as he originally wanted a thrall just to help him with the mansion, she'd be good for collecting information.\n\nAnd, considering how she reacted to Elaine's touch, there was no doubt in his mind Veronica would try and seduce him. The look in her eyes, how she'd watched him, basically eye-fucked him as Elaine fingered her, painted a clear picture. The Vinculum was damn powerful, even when only at a third its true strength, and now Veronica was thinking about Jack in a sexual context thanks to Elaine.\n\nDamn it, Elaine. He didn't need to put sex on Veronica's mind so damn early in this whole situation. Jack was already spoiled as fuck in the sex department.\n\nAntoinette didn't like the idea of sharing him with other vampires; Elaine was the exception, considering their history. Sharing him with ghouls and thralls though? To her, that was basically like using a sex toy on him. She'd prefer it be her ghouls, or his, to a random kine off the street though, because then she'd at least know where those toys came from.\n\nElders. They looked at kine like humans looked at sheep. Sure, they cared for them, even loved them, but they raised them as pets, cattle, an animal they could use for self gain. It was still hard to think of them like that. Julias had a hard time thinking about them like that, too.\n\nKnock knock. Fucking hell, again?\n\n\"Maybe she'd even open the door for me?\" He laughed at the thought. Yeah, it'd be so fucking weird to have someone do that. And yet, they not only would, it'd be damn expected from vampires that his thralls served him like that, opening doors for him and shit. Ugh.\n\nBefore he could open the door, he stopped, and grit his teeth. He felt it, the presence of another vampire; no need for Auspex when an elder comes knocking. Knock knock, to the tune of Shave and a Haircut. Which pretty much sealed who the fuck it would be.\n\nHe took a deep, useless breath, and opened the door.\n\n\"Jacob.\"\n\n\"Jack! Long time no see.\"\n\nHe growled, made no effort to hide it, and didn't move. \"Jacob. I--Triss, hey.\" The other Nosferatu stood behind her boss, and he gave her a nod. She returned it.\n\nChuckling like an asshole, Jacob took a step forward. Jack very much wanted to stand his ground, and may even push the man back. Maybe even punch him. But judging from the look on Triss's face, Jacob was here to help him talk with Black Blood, and it'd be stupid to bite the hand that fed him.\n\nHe could bite it later.\n\nSighing, he took a step back, and the witch and warlock followed him in.\n\n\"Nice place,\" Jacob said, smiling pleasantly. \"Oh my, quite the chandelier.\"\n\n\"You can blame Viktor for the fashion.\"\n\n\"I could,\" the elder said, \"but you killed him, remember?\"\n\nHe winced at that. Right, he knew that, and so did Triss thankfully. But, damn, it was frustrating just how much better Jacob was at amassing information and using it as a weapon than Jack was.\n\nWell, time to rip off the band-aid.\n\n\"How's Mom?\"\n\nJacob's manic grin softened for a moment, and that surprised Jack. Jacob was a master at the psycho smiles, so much he could have entire rooms of people all creeped out of their minds. To see his expression soften into something resembling normal, was strange.\n\n\"I suppose you think I'm here to tease you about the fact that I'm fucking your mom? Maybe I should grab a towel and whip your ass with it while I'm at it?\"\n\n\"... what?\"\n\n\"If we're gonna throw barbs like idiot jocks in a locker room, might as well go all the way.\" Laughing again, he hopped up onto the first stair, grabbed the railing, and hung off it toward the lobby. \"I'm game if you are, but I didn't plan on it.\"\n\n\"You seriously not going to take advantage of the 'I fucked your mom' angle?\"\n\n\"Nope. Because while it may be hard for you to believe, Clarice, I actually kinda like your mom.\"",
        "Kinda like? He rolled his eyes, but the heat in his throat settled. Well, that was better than using her to manipulate him and Antoinette. And, much as Jacob was fucking chaos incarnate, it was hard to dismiss the things he said. He wasn't a liar, not like that.\n\n\"And,\" Triss said as she stood beside Jack, \"the Circle likes her. She's fun, and sweet, and a total hornball.\"\n\nHe shoved her away, and she laughed as she joined Jacob. The two of them were getting along, better than Jack figured they would. Either Jacob was rubbing off on her, or she was on him, and considering the big smile she had on, he guessed the former.\n\n\"I suppose I should just accept that Mom's taking my advice. Taking it in a direction I didn't predict or want, but, she is. And as long as she's happy, I'm happy.\"\n\nTriss grinned and nodded. \"It's not like we're not treating her with respect. But I do think we were all a little surprised at how, um... easily she got into the spirit of things.\"\n\n\"Obviously it's because I'm a smooth and sexy fucker,\" Jacob said, lifted his eye bandage high enough to expose one of the empty sockets, and winked at Triss. No eyelid, but the wink was obvious from the face muscles, and Triss groaned and pushed him away.\n\n\"Fucking gross, dude.\"\n\nJack watched the two, arms folded across his chest, and every bit of analytical skill he had running at one hundred percent. Was Jacob legit, or was all this a careful manipulation of Jack's expectations? Even the softer smile he'd had on for a split second, which told Jack he was legit, could have been faked. Any elder could act their way to an Oscar in their sleep. For now, it did seem like Jacob liked his mom.\n\n\"So... how's this going to work?\" he said. \"We doing this here, or--\"\n\n\"Gimme a few weeks,\" Jacob said, \"and sure, we could summon here. But it'll probably save us some time if we head to my altar in Three Kings Cemetery.\"\n\nHe frowned at that. \"Why only now?\"\n\n\"Say what?\"\n\n\"I've been waiting a few days. Why'd it take so long for you to show up, if we're going to use that site?\" He'd seen that site. Any witch or warlock would have been able to perform any crazy ritual there, considering how much shit was in there. The work had already been done, then.\n\n\"Oh, I had things to do,\" Jacob said. \"And so did Black Blood.\"\n\n\"Uh huh. Or maybe you just like being a dick to me.\"\n\nJacob, chuckling, jumped off the stair and toward the door. \"Yeah, that's it, Jack. My life choices are made to annoy you.\" On the way out of the mansion, he smacked Jack on the back of the shoulder. \"Come on, dumbass.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe crazy cave beneath Three Kings Cemetery was straight out of a horror film. The secret switch hidden in the mausoleum, the hidden stone stairs, the cave itself, the hanging warning sign, and the quiet, constant wailing in the background, it was all a lovely concoction of doom and gloom. Honestly, it was pretty badass and metal, and he could understand why Beatrice found herself drawn to it.\n\nThe problem was the badassery and metalness were only surface level. Once you got past that, the Circle of the Crone was fucked up, into some really nasty shit, and you had to have the stomach for it. He'd managed to stomach it, when it meant helping Triss so they could get revenge for Julias. Slitting the throats of a bunch of kine, like sheep, was not something he figured he could do regularly. Even if every kine they'd sacrificed had been a horrible killer, and he knew they weren't, doing shit like that regularly would fuck him up.\n\nHe grimaced as they stepped into the main room. The big bowl where Jacob had ripped out the throats of the kine Jack had dominated was right there, huge and rusty and gross, and held up by a bunch of skeletons. Chains dangled from the stone ceiling. Strange symbols were etched into the walls and floor. An unnatural dark fought against the single candle Triss carried, preventing any light from reaching too far, especially to the back wall. No one was in the room, no one spoke, but he could hear quiet banshee shrieks, as if someone had sealed their dying sounds in the walls, deep beneath the cemetery above them. Or maybe they were hearing the dead from the cemetery, angry at them for violating the sanctity of their resting place.\n\nIt was the sort of place he wouldn't be surprised to see Sabrina rise from up the bowl, and get revenge on him for killing Viktor.\n\nJacob walked up to the bowl, turned, and leaned against it, like the rust and blood meant nothing to him.\n\n\"We never did talk about payment,\" the bastard said.\n\n\"He's not paying us,\" Triss said. \"He's already paid me, you fucker. And if I have to, I can summon Black Blood without you.\"\n\nJack folded his arms across his chest, tapped his foot on the stone, and glared at the elder. No need to say anything, or play stupid verbal jousting games with the asshole, not with Beatrice helping him.\n\n\"Ha, not for me, stupid slut.\" He shrugged, and hopped up onto the edge of the huge bowl. It didn't budge. \"I meant for Black Blood. He'll want something from Jack.\"\n\n\"Don't suppose I can give him an IOU?\"\n\nJacob laughed. Triss laughed. Jack did not. It wasn't supposed to be funny.\n\nThe elder hopped down, rubbed his hands together, and held them up. \"Black Blood, I summon thee.\"\n\nBlack Blood had to have the same sense of humor as Jacob, cause Jack figured it'd take a lot more than that single, short sentence, to summon a creature as insanely powerful and larger-than-life as Black Blood. Jacob said it'd take weeks to prepare his mansion, so maybe it was the hundreds of symbols? Maybe the symbols were exact things, and not just random gibberish? If Antoinette had to get crazy with weird mathematical symbols, crazy weird blue light that was most definitely not just blue light, some kinda hidden machine that made the room buzz, and a special lens to be able to see ephemera, then it made sense Jacob's ritual room was a lot more exact and designed than it initially seemed.\n\nSo, if Triss wanted to summon Black Blood, she'd have to use this room, or any others Jacob created. Or, maybe she knew how to create all the crazy symbols too?\n\nAnd of course, Jacob's single sentence was enough. The wailing, always just below noticeable noise, increased until it was very much noticeable. A horrible cold filled the room, the sort of cold he felt when he visited his dead sister. Black ooze bubbled up from the stones around his feet, from the cracks in the walls, from the ceiling, hidden in shadow. He forced himself to stay where he was, but with each passing moment, it was clear Black Blood's presence was crossing over to join them.\n\nThe candle flickered, but didn't die. The ooze avoided it. Not even vampires could see in absolute blackness, and this deep underground, that's exactly what they'd get if it went out.\n\n\"My my, look what we got here.\" A deep, rumbling voice filled the room, layered with rasp, the sort of rasp he heard from his sister. And it had a Texan accent. The accent was pleasing, but the alien, gravely depth mixed with grating rasp, was very much not, and he winced as the words cut his ears.\n\n\"Black Blood,\" he said.\n\n\"Jack Terry. I understand Malachi has been bedding your mother?\"\n\nOh fucking god. He threw up his hands, glared at Jacob, and glared at Triss too. They both chuckled.\n\n\"Black Blood, Beatrice told me you know a thing or two about the curse.\"\n\n\"Indeed I do,\" the darkness said. It came from all around him, no source, and Jack kept his eyes on the sacrifice bowl in front of him for lack of anything else to look at. The skeletons were crying black tears. \"The Strix have got their claws into you, boy. Took them a bunch of generations, but they got them into you.\"\n\nHe forced himself to not shiver at the mention of Strix. \"Tell me more.\"\n\nThe ooze laughed. \"And why would I do that? No profit in that for me, boy.\"\n\nHe rolled his eyes and looked over to Triss. She shrugged. They all knew the conversation would go this way. Well, fuck that.\n\n\"You must think I'm an idiot, spirit,\" Jack said. \"You think you can control me with a carrot on a stick? I'm not going to let you drag me along in a string of manipulative conversations. So how about you shut the fuck up, and I tell you how it's going to be.\"\n\nThe room went silent. Jacob said nothing, Triss said nothing, and Black Blood said nothing. The quiet wailing in the background softened, muffled, and the cold aura permeating everything settled. Good. If he'd managed to shock everyone, then maybe he could make some progress.\n\n\"I don't trust Jacob, but I don't trust or respect you, Black Blood. You might be big and powerful, but everything I've seen and heard about you shows me you're nothing but an opportunist. You've never done anything directly. You rescued me and my crew from S\u00e1ndor's nightmare, and again, you helped S\u00e1ndor in his nightmare, to put a stop to Jeremiah's ritual. But we both damn well know you did that shit for your own personal gain, for acquiring favors, and for learning.\" Jack tapped his temple once, and grinned. \"Don't think I don't know you've been up to something, Black Blood, and have been for years.\"\n\n\"Ha. I think you might be overestimating me, Ventrue.\"\n\n\"Yeah right. You wouldn't drop information for Triss unless you knew she'd tell me, and you knew it'd trigger this conversation. So, this is how it's going to be. You tell me, for free, if you can do something to get rid of this curse, and the likelihood of success. And then you tell me what you want in exchange for helping me get rid of it. Don't think I don't have options, Black Blood.\"\n\nBetter to not tell the spirit what those options were. Damien finding some information about the binding ritual, and Elaine's experiments, could be a great step toward dealing with the curse. And even Antoinette might be able to help, if he asked her, told her to go nuts with her experiments, even put him on a table and cut him open.\n\nBut, all of those options would be slow to produce results at best, and outright torturous at worst. If Black Blood had a direct solution, he wanted to know.\n\nThe darkness chuckled again, and Jack folded his arms across his chest as he tapped his foot. Negotiating mode. Black Blood was basically like every corporation Jack had dealt with the past few years, evil and greedy. It'd be in his best interest to treat the fucker like one.\n\n\"Tell me, boy, what do you know about diablerie?\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\n\"Uh, Natasha, that's a pretty dark story,\" Art said.\n\nShe nodded and looked down, not able to keep eye contact. \"I know, b-but it's... it's only a fantasy. The kind you could read about, but seeing it on video might be a... b-b-bit crazy.\"\n\nMatt nodded, and ran his hands along her hair. She closed her eyes, and switched from kissing Art's length, to Matt's. At this point, she was a total sucker for hands through the hair, and she beamed up at Matt as she set a suckling kiss on the head of his girth. The hot water fell over them, and she wiped some off her eyes so she could see Matt stare down at her with hunger.\n\nOne hand around the base of Matt's girth, and another around Art's. They were supposed to be cleaning up after sex in her apartment, but as usual, the boys had joined her as she showered, despite her protests; at this point, they knew which of her protests were serious and which weren't. And, as usual, the boys had quickly bounced back from their orgasms, and were ready for thirds.\n\nDown on her knees, she shivered in secret delight as she looked up at the two big men watching her work. Something about the way they looked at her, like she was theirs to be used whenever they wanted, was so dirty and wrong, and it sent tingles through her like crazy. It wasn't like she didn't know women had fantasies like this, she just never really thought she'd be one of them.\n\nNow that she had the movie director bug, worming its way through her brain all night every night, demanding she plot and prepare and obsess over it, stories ran through her mind. Erotic plots, full of naughty, erotic stuff.\n\n\"I'm all for playing a villain,\" Matt said, voice wavering a little as Natasha's growing skill sent obvious jolts of pleasure up through him. \"I mean, as long as people know it's a movie, I say we really indulge some taboo fantasies.\"\n\nTash grinned. Matt got it. They were just fantasies, and they could get really naughty with them. Really naughty! She was just one woman, a small one, and they were two huge guys with big muscles who could be pretty damn scary if they wanted to be. And, more important, she was a rich woman with a skill for tech. Setting up high budget film setups, and then doing some quality editing? She was excited to sink hundreds of hours into the project, and on the next, and the next.\n\nMatthew came first. She gave him doe eyes as she suckled and kissed the fat glans of his cock, and when waves of his cum poured into her mouth, a gentle push of her tongue against his cock caused it to flow down from her lips, and down her body. And seconds later, she did the same for Arturo, hot water flowing down over their bodies as she worked her hand on his girth while her lips wrapped the whole of his glans, and milked him.\n\nWork done, she stood up, and flicked some water at their faces.\n\n\"There. D-Done?\" she said. Matt nodded, and after a moment of exaggerated contemplation, so did Art. \"Good. You're b-both addicts.\"\n\nArturo grinned down at her, and plucked the soap off the shower wall. \"Yeah well, you can blame Dolareido for that. In fact, scratch that, you can blame you for that.\"\n\nShe yanked the soap from him, and lathered up her loofa. \"How so?\"\n\n\"Matt and I have been in sexual relationships before, like we told you. But even in the most active relationships, we didn't have sex this much.\"\n\n\"That's... n-not my fault!\" She frowned at him, but it didn't last. \"Is it?\"\n\nMatthew came up behind her, and set his hands on her hips. Then up her hips to her breasts, where he massaged and caressed. She wasn't Blushing Life anymore, but that didn't stop the man from entertaining himself with the softness of her small boobs. And, after having it done to her hundreds of times now, she kinda liked it, standing there and letting the man touch her. It was relaxing, in a weird sort of way. If she'd been Blushing, it'd have worked some heat through her, but without it, it was pleasant, and she sighed contentment as she rested her back against his abs.\n\n\"It is,\" the big guy said.\n\nArt nodded. \"Mhmm. You're too damn hot, Natasha.\"\n\nShe rolled her eyes, and ran the loofa up Art's abs. Abs everywhere. Abs she could make really pop on the screen with some lotion and high contrast lighting.\n\n\"I'm n-not... not super hot.\"\n\n\"The fuck?\" Art said.\n\n\"I'm not like, you know, the other girls.\" Girls they'd all seen topless now. \"They'd all... look b-better in the movies I want to make.\"\n\nMatt chuckled, and with her head back against his sternum, the warm vibrations flowed through her. \"I admit, they all have big, beautiful boobs.\"\n\nShe frowned up at him, but as she did, the mean leaned down over her, and his hands slid down her body.\n\nArt mirrored his friend's chuckle. \"Yeah, they do. Can't say I wasn't imagining what motorboating those would be like.\"\n\nShe outright glared at her boyfriends, but again, they both chuckled at her, and Matt set a kiss on her head.\n\n\"And yet, all I think about every day and night, is getting inside this tiny, little body,\" the giant said.\n\n\"Yeah,\" Art said, and he squatted down in front of Natasha so he could grin up at her. \"I don't go to sleep, thinking about putting my dick between a couple big tits.\"\n\n\"Giant t-tits.\"\n\nHe laughed, and traced a finger up and down her stomach. \"I go to sleep thinking about getting my dick inside this tight, tiny little pussy.\" His finger ran down to her mons, and he caressed the soft skin. \"You have no idea, Tash, no idea how hot it is to see you penetrated by Matt and me, to see your stomach stretch around our dicks. No idea how great it feels, how your little body--\"\n\nShe frowned at him harder, and folded her arms across her chest. \"P-Pedophile.\"\n\nBoth men laughed, and Art leaned in, and kissed her. \"You look nothing like a kid, more like, one of those tall, skinny models they sometimes use for fashion shows. Just, miniaturized.\"\n\nShe tried to keep frowning, but she couldn't. This conversation was dumb, and fun, a conversation they'd had before. Both men had assured her they were attracted to her, intensely so, and considering how easily they grew aroused around her, she believed it. Still, after everyone had their boobs out, she couldn't help but feel a little envy, and jealousy when her boys had given them looks.\n\nSometimes a girl just needs to hear that her man, or men, are attracted to her, right? Ugh, so girly. Antoinette would probably berate her for the lack of self confidence.\n\nShe hugged Art, and kissed him. And Kissed him, just a little. And that was dumb, cause then they spent another twenty minutes fucking in the shower. Ah well, at least they were already clean when they were done.\n\n~~~~~~~~~~~~~~~~~~~~~~\n\nDressed in her suit, she sat at her kitchen counter and popped open her laptop, careful to not open any apps she couldn't let the boys see; all of them were password locked, too. The boys wandered around in her kitchen and dug through her fridge. They were hungry, especially after she'd taken a small sip of both of them, and they ate food to get energy back. Her fridge used to have only bottles of blood, but now it had raw steaks, too.\n\nIf any kine ever looked in her fridge, she'd have a lot of explaining to do. She'd need to get a Ventrue to wipe their mind.\n\nShe smiled as she watched them. Both wore jeans and only jeans, and there was something intensely appealing about men wearing nothing but jeans, walking around in a kitchen, preparing food. She supposed vice versa was true, too. Unfortunately just looking at raw steak was enough to gross her out, vampire after all, and she grimaced each time she glanced at it.\n\n\"Hey, we don't judge your food!\" Art said.\n\n\"N-Not the same. I don't think spaghetti is disgusting to look at.\"\n\nBoth boys grimaced at the mention of spaghetti.\n\n\"No thanks,\" Matt said. \"If it didn't run or fly or gallop before it hit the plate, I don't want none of it.\"\n\n\"Um, b-beer and wine didn't do that.\"\n\nArt laughed, nodding. \"True, we made an exception for alcohol. But if we stopped drinking it for a while, or spent a lot of time in the Hisil, we'd probably lose a taste for it.\"\n\n\"David can't drink it,\" Matt said. \"Poor guy. Doesn't eat meat much anymore, either. He'll go on hunts in the Hisil and eat a spirit, and that's pretty much the only way he can get nourishment these days.\"\n\n\"Why?\" she asked.\n\nThey looked at each other, contemplating. Answering her was probably giving her information Avery would consider secret. But before she could say it was alright, Art shrugged and sat beside her at the counter.\n\n\"Werewolves can get closer and closer to our spirit halves, or further. Getting closer changes more than just our tastes, though. It changes how easily we transform into our wolf halves, and changes how easily we get nourishment from different types of food. I could eat a sandwich, if I really had to. David would just puke it up. His body wouldn't accept it.\"\n\nAh, that made sense, sorta. \"And you and Matt are... b-balanced?\"\n\nMatt shrugged and nodded. \"I like to think so. The further we are from our spirit halves, the harder it is to get into wolf form. But then it's easier to get along with humans. Eat a sandwich and stuff, you know? Less chance for instinct to kick in if, say, you hear a gunshot.\"\n\n\"But if something does trigger your instincts, they can be harder to control,\" Art said. \"Vampires have similar issues with their Beast, right?\"",
        "\"I... I guess.\" She never really thought of it as a balance to strike. The Beast was something that ate at vampires, demanded they succumb to its instincts and hunger, and gave no worries about things like the Masquerade or consequences. To her, it was just something to avoid. But to someone like Jessy, it was a source of power and confidence, that she could tap into the Beast's strength without completely giving into it.\n\nArt's phone buzzed, and he sighed. \"Probably Avery. Gimme a sec.\" He stepped away and pulled the phone out of his pocket.\n\nNatasha watched him for a second, but looked away. They had an unspoken agreement in their relationship, that they wouldn't pry into each other's covenant business. He was a werewolf, a member of Avery's pack, who belonged to the Hunters in Darkness group, called Meninna in the strange language they spoke, them and spirits. Sure, he wasn't a member of a secret organization of mad scientists who did experiments that bordered on insanity, like she was, but that didn't mean she shouldn't respect what secrets he had. Art and Matt did the same for her.\n\n\"I'm surprised you haven't brought up Maria,\" Matt said.\n\nTash froze and stared at her laptop. Better that than letting Matt get a close look at her eyes, that were probably wide and singing 'I visited her days ago!'.\n\n\"Everything's b-been quiet. Avery said she'd give me t-time, so I'll keep looking for evidence.\"\n\n\"Still think she's not up to something?\"\n\nOf course she thought Maria was up to something, just, not anything to do with Lucas. Getting that information into Avery's head was another problem entirely. It wasn't like Natasha had a catalog of quality evidence proving Maria was innocent, just her word, and a damn compelling argument.\n\n\"You know,\" she said, \"M-Maria is a devout worshiper of God?\"\n\n\"Right, right, the whole Longinus thing.\"\n\n\"Yeah. She's... she's a true believer, you know? I worked with her for decades, and she was...\"\n\n\"Cruel.\" Matt reached over and wrapped an arm over her shoulders.\n\n\"Yes, b-but... consistent.\" Pretty much the opposite of Jacob. \"I trust her. She wouldn't... d-do something that went against her beliefs, even if she really wanted to. And the Lancea et Sanctum doesn't condone dark magic stuff.\" She almost laughed as she said it. Dark magic? What was this, a fantasy story? Fifty years of vampire-y stuff, and the idea of magic still made her reel in shock, that something like that could actually exist. No wonder she ran from the Ordo after Daniel sired her. \"Or at least, they don't condone... doing things that they think God wouldn't like. Resurrection is--\"\n\n\"It might not be resurrection, you know.\" He let go of her shoulders, set his elbow on the counter, chin in palm, and winced as he looked at her. \"Spirits don't go around, talking about vamps unless they're connected. She's up to something, Tash, and there's no way she isn't. If you think it's not resurrection, fine, it's probably not, but you heard those spirits as much as we did. And Avery and the others have found more spirits, talking about some kind of ritual, with those red wraiths mentioning Maria specifically.\n\n\"I... I d-don't know why they're mentioning her by name.\"\n\n\"Maybe because they're working with her? And that's... not good.\"\n\nSighing again, she closed her laptop and set her chin on it. \"I know. I know.\"\n\nArturo put his phone away, groaned, put on his shirt and socks, and walked to the door of her apartment. He got his jacket, and tossed Matt his. \"Let's go.\"\n\n\"Go, where we going?\" Matt hopped up and joined Art at the door. Natasha did, too.\n\n\"Got a sighting on those azlu that got away. Clara said there were some that weren't merged, dealing with those tears, right? She thinks she's found them.\"\n\n\"Oh shit, let's go.\" As if summoned to do his destiny, Matt hopped around like a fool, putting on his shirt and socks at the same time, before he slipped on the jacket and rubbed his hands together. If Natasha didn't know any better, she'd think he was excited. He was definitely energized. They'd told her the Hunters in Darkness specialized in killing Hosts, like the azlu, and whenever the opportunity arose, they were all over it. It was their purpose.\n\nIt made her smile. Vampires didn't have that. Vampires were selfish, and everything they did was to further their own goals; which covenant they stuck with was determined by those goals, not the other way around. Sure, some vampires gave themselves a purpose, something bigger than themselves, but the werewolves did it naturally. To them, their purpose was as intrinsic as their wolf halves.\n\n\"Can I c-come?\" she said as she got close to Art. \"I have tonight off, and--\"\n\nA harsh thud interrupted her, and she blinked up at Art, confused. Did someone just slam a door? No. It felt kinda like that, but she didn't hear a slam or anything. Art had reached out for her, maybe to steady her from the sudden vibration? Earthquake, maybe?\n\nArt looked sad. Very sad. He looked miserable. Why? Matt was bursting with energy and eager to go on a hunt, but Art looked like someone had just ruined his life and told him to accept it.\n\nTash looked down, and blinked. Something was sticking out of her chest, straight through her blouse. A piece of wood? And it was sticking out from the right spot on her chest to stab her heart. But, that was crazy. Why would there be a piece of wood in her heart?\n\nShe blinked up at Art, and the man winced, as if she'd just shot him. Matt started yelling, but she couldn't hear him, only see the shocked and angry look on his face. She collapsed, Art caught her, and before she could say anything, everything went black."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "suspense",
        "paranormal romance",
        "urban fantasy",
        "vampires",
        "werewolves"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-12"
}