{
    "title": "Hypnosissy 04: Cum Cravings",
    "pages": [
        "Summary: Videos entrench his hunger for cock and cum.\n\nNote 1: Thanks to hfernandez1983 for the story idea and the intriguing revelation that hypno sissy videos exist.\n\nNote 2: Of course, all participants are at least 18-years-old.\n\nNote 3: Thanks to TexBeethoven, Robert, and Wayne for editing this chapter.\n\nApology: This part was originally announced as being either about cross dressing or pegging... but as I began writing the chapter, Rose (the mentoring character in the story) pointed out to me that Brian was in need of more training before he would become the PERFECT cock sucker, and that she had already prepared the syllabus for him... so before he delves into the more advanced kinks of pegging or cross dressing... here is one final chapter on how to become a cock sucker (and for all you curious boys out there... be warned... this chapter may make you more than just curious)....\n\nWARNING PLEASE READ:\n\n-This is a hypnosis story with potential influential subliminal messages within it.\n\n-The story contains hypnosis video scenes within it.\n\nNote 4: This story will make more sense if you read the first three parts first. But in case you don't have time, or you read them a while ago and need a refresher:\n\nHypnoSissy 1: Becoming a Cocksucker\n\nCocky and athletic 18-year-old Brian, a high school senior, tries to seduce pretty college girl Rose, but instead is seduced by her. Rose, after allowing him to go down on her a couple of times, gives him a USB with a dozen videos that he is to watch (unknown to him they are hypno-sissy videos) and under their influence he gradually becomes more and more curious about sucking cock and eating cum. After watching all twelve, Brian is summoned to Rose's college dorm, and under her tutelage, before the night is done he sucks his first cock and swallows his first load of cum.\n\nHypnoSissy 2: Becoming a Cum Slut\n\nBrian, having sucked his first cock, is given a second set of videos to watch by the beautiful, mysterious, persuasive Rose. As he watches the second set of videos, his hunger for more cock builds until he meets a stranger for lunch in a van (the menu should be obvious), and then is taken to a gloryhole by Rose, where to further his training, he anonymously sucks on five very dissimilar cocks, including one from a nerd he recognizes, who he has bullied for years.\n\nHypnoSissy 3: Big Nerd Cock\n\nBrian spends the day after the gloryhole visit desperately trying to avoid the nerd he'd sucked. Of course by now, conditioned by the videos and his recent cock sucking experiences, his hunger for cock and cum control his very being, and in the end the nerd from the night before identifies him, humiliates him and turns the tables on him, and he succumbs and willingly sucks cock. After sucking and swallowing the nerd's big cock he learns a shocking secret... the guy is Rose's brother. The chapter ends with Brian receiving a new USB assignment from Rose.\n\nAnd now Part 4 of HypnoSissy: Cum Cravings\n\nThe minute I got home, I went directly to my room to see what was on the newest USB.\n\nUnfortunately, Mom was just finishing preparing dinner, so I slipped the USB into my jeans pocket. We had dinner, talked about school, work and the weather... forty-five minutes of normality, something I hadn't had much of since I'd first met Rose.\n\nWhile I was helping Mom with the dishes she asked, \"Are you okay, honey?\"\n\n\"What? I'm fine,\" I said, surprised by the question, although maybe she was still concerned about catching me masturbating.\n\n\"It's just you've been gone a lot lately, or staying in your room,\" she said.\n\n\"Oh, I've just been studying a lot,\" I said, which was true in a twisted sort of way. I added, \"the SAT's are coming up soon.\"\n\n\"Oh, okay,\" she nodded. \"Just don't forget to spend some time with your dear ol' mother.\"\n\n\"Always,\" I said, moving in and giving her a big hug. I realized then that Rose and her videos had consumed me, and I needed to regain a bit of my life.\n\nSo although I could feel the USB burning a hole in my pocket, I ignored it and went and watched Wheel of Fortune with Dad.\n\nI then ended up watching an episode of Castle with Mom and Dad, before heading upstairs and doing what by now I desperately needed to do... the need to watch these videos having become part of my DNA.\n\nWhen I opened the relevant folder I found four videos... and a Word document named 'readme'.\n\nI clicked on the word document and opened it:\n\nBaby,\n\nI'm so proud of you! You've become a good cock sucker.\n\nNow however, it's time you became a great one.\n\nWatch these videos and focus on improving your technique... and on understanding there are different types of blow jobs from slow and sensual, to getting strongly face fucked... and all that lie between.\n\nSo watch these... only one per day... I don't want you to overdose on submission (LOL), and you need to understand you're on a lengthy journey of sexual discovery that is ONLY just beginning.\n\nHave fun... but to help enable the complete transformation that lies ahead, you must obey one simple command from me... no coming for a week... and when these four videos are done, you will come to me and....(!)\n\nKisses, Rose\n\nFuck, she was a tease.\n\nFuck, she knew exactly how to push my buttons.\n\nAnd oddly, I wanted to be a better cock sucker for her... strange of course, since she didn't even have a cock.\n\nI also was curious about her stressing this was only the beginning.\n\nTruth be told, talking to my parents and just hanging out had made me realize how completely consumed I'd become by cock sucking... I'd never been this consumed even about getting laid... so the limit of one a day seemed like a good idea, to maintain my balance of friends, family, school, and Rose.\n\nThe first video was called Cock sucking Philosophy. I shook my head at the idea that there were philosophical principles to sucking cock... had Socrates or Plato had anything to say about it? So, my curiosity aroused, I clicked on it.\n\nPhilosophy One... (On an all-black background in pink lettering)\n\nAll cock is good (as dozens of pictures of cocks of all sizes, all girths and all colours flashed briefly into view, all while the four-word phrase kept flashing in different screen locations)\n\nPhilosophy Two... (The letters still and always in pink on a black background)\n\nA good cock sucker is always on his or her knees unless otherwise instructed (a couple of dozen girls on their knees, eagerly waiting for cock, all of them with their mouths wide open)\n\nPhilosophy Three...\n\nIt's not about you... it's about the cock (pictures of girls gagging on big cocks, but continuing to suck)\n\nPhilosophy Four...\n\nTreat the balls with extra care; after all, that's where your treat is stored (pictures of girls sucking on balls or cupping them in their hands)\n\nPhilosophy Five... (This one had the following words bolded underneath: REPEAT WITH EACH PICTURE): Cock suckers are bimbos... don't think, just suck. (Girls furiously bobbing on cock)\n\nOf course, like I always did when watching these kinky manipulation videos I obeyed, each time reciting the words 'Cock suckers are bimbos... don't think, just suck'.\n\nPhilosophy Six...\n\nIf you want your treat, you must work for it (Pictures of girls getting roughly face fucked)\n\nPhilosophy Seven... (This one also had the words REPEAT WITH EACH PICTURE bolded underneath): Smother yourself in masculinity... I'm not a man, I'm a cock sucker. (Girls stroking big cocks, licking the shafts of big cocks while gazing at them with the admiration of someone in love with cock)\n\nI hesitated at this one a moment. Sucking cock didn't make me feel like less of a man... okay, it somewhat did... but I felt that Rose still saw me as a man... potentially her man... and thus I was both a man and a cock sucker. Yet, since Rose had given me this video and wanted me to obey it, I said the words... focusing on the pictures of the cocks being stroked, licked and worshipped.\n\nPhilosophy Eight...\n\nDevote your life to cock (Girls sucking cock in a variety of places... in a movie theatre, in a church confessional (there being a small, discrete glory hole for the priest), under a teacher's desk, in a bathroom, on an airplane, in the back of a taxi, on a crowded bus, in a hot tub, at a party while others watched, in a library, on a baseball diamond, in a phone booth, on the hood of a cop car, on a park bench at night, under a tiny table at a bar, on an office desk, in a kitchen with an oblivious mother across the counter talking to her son, on a hospital bed, and oddly, in a funeral home on the carpet near an open casket)\n\nI'm not going to lie, each of these five-to-ten second scenes had my already hard cock ready to burst and if it weren't for the requirement for a week-long celibacy, I likely wouldn't have made it to the end of the video. Truthfully, I wanted to find the extended version of each of these videos and see how the girl had ended up sucking cock in public... those scenes always turned me on.\n\nPhilosophy Nine...\n\nAlways Suck Until He is Done With You (Girls bobbing on cocks with cum already visible all over their faces)\n\nPhilosophy Ten... (For a third time it had the words REPEAT WITH EACH PICTURE bolded underneath): I'm Thankful For Cock and Cum (Girls getting facials)\n\nLike the first two, I repeated the sentence over and over again... and meant it.\n\nI was thankful for cock.\n\nI was thankful for cum.\n\nAnd I craved it.\n\nI could visualize Eugene's big cock and how he treated me like a slut... how that turned me on... how I'd agreed to suck his dick anytime he wanted... and how I wished I could have gotten permission to text him and beg for his cock.\n\nFuck... I really was losing control.\n\nGod, I needed to come and regain my senses... an ejaculation often helping me think clearly again... yet I wasn't going to disobey Rose.\n\nSo I shut my computer down and went to bed... Eugene's cock the last image that faded from my head.\n\n...\n\nI was nervous all the next day.\n\nEvery friend I talked to, I wondered if they were a cock sucker too.\n\nEvery male teacher I saw, I wondered if they were cum buckets for Eugene, too.\n\nI expected Eugene to text me to suck his cock.\n\nOf course, this filled me with trepidation.\n\nOf course, this also filled me with excitement.\n\nYet, it wasn't Eugene who required my services... but Camry... who I knew was a pussy munching pet of Rose's. She walked up to me during a morning break and whispered, \"Meet me in the cheerleader's dressing room at lunch.\"\n\nBefore I could respond, she walked away.\n\nI stood there in the middle of the hallway, dazed, until Barry walked by and asked, \"You okay Brian?\"\n\n\"Um, yeah, sure,\" I nodded, shaking my head and trying to regain my normal persona.\n\n\"Are you coming to work out after school?\" he asked.\n\n\"I'm not sure,\" I shrugged, before adding, explaining my sudden lack of attendance in the workout room, \"I pulled my groin last week and it still doesn't feel right.\"\n\n\"That's what the cheerleaders are for,\" Barry joked.\n\n\"Yeah,\" I laughed awkwardly, seeing cheerleaders in a new light. They were no more sluts than I was... sex was fun and part of who we were, and I no longer wanted to be encouraging the stereotype I had once believed. \"I mean no, Barry, cheerleaders deserve more respect than that.\"\n\n\"What?\" Barry asked, looking at me, confused by such a strange idea.\n\n\"Should I let them know what you said?\" I asked, knowing that the cheerleaders may be 'sluts' according to the stereotype, but if they were 'sluts', then so were all the guys that willingly fucked them because they were jocks... a double standard I couldn't accept anymore.\n\n\"What? No!\" he objected, realizing I was serious. \"I was just kidding, man.\"\n\n\"Yeah, sorry,\" I apologized, \"I'm getting sensitive in my old age.\"\n\n\"Yeah, once you're eighteen it's all downhill,\" he joked tentatively, unsure what to say to me after my stepping out of character with that brief tirade.\n\n\"Maybe I'll see you in the gym,\" I said, although I was hoping to be in Room 412 with a cock in my mouth.\n\n\"Yeah, sure,\" he nodded, and headed away.\n\nI shook my head and headed to class, wondering what Camry wanted with me. I was certain she didn't have a cock, and I assumed Rose wouldn't be happy with either of us if she had me fuck her.\n\nAn hour later, when I had become completely anxious to know what Camry wanted, I headed to meet her.\n\nI got to the entrance and paused, unsure what to do. I couldn't just walk in there.\n\nAs I pondered this, she walked up behind me and whispered in my ear, \"On time... good cock sucker.\"\n\nMy eyes went wide as she took my hand and led me into the cheerleader's locker room... a place I'd fantasized going into many times... but not escorted by a girl.\n\nOnce in the room, she locked the door, led me to a wall with a hole in it and ordered, \"Knees, cock sucker.\"\n\n\"Please don't call me that,\" I requested. Being called that by Rose, Eugene, or even an anonymous cock was okay and actually turned me on, but being called that by a girl was awkward.\n\n\"What?\" she refused, rather matter-of-factly. \"You suck cock, thus you're a cock sucker. Am I saying anything that isn't true?\"\n\n\"No, I guess not,\" I shook my head, humiliation coursing through me.\n\n\"Rose said you would need a cum fix, and I figured that here was a great place to get one secretly,\" she said.\n\n\"What's on the other side?\" I asked.\n\n\"Coach's bathroom,\" she answered, as she flicked a switch.\n\n\"What does that do?\" I asked.\n\n\"It's a signal that there's a mouth waiting for cock,\" she answered.\n\n\"Oh my God!\" I cried (quietly), shocked that the high school had a gloryhole for students to suck teachers' cock. Most gloryholes are ragged affairs; this one had obviously been built into the wall by a skilled carpenter.\n\nWe waited about a minute before I heard a door close and a few seconds later a cock popped through.\n\nNo words were spoken by him or by me as I stared at a seven inch cock.\n\n\"Get sucking,\" Camry ordered after I hesitated, too loud for my comfort.\n\nBut like always, my brain shut off when cock was in front of me. I took it in my hand, opened my mouth and began sucking.\n\n\"Good boy,\" she purred, informing Coach that it was a guy, not a girl doing the sucking.\n\n\"One of mine?\" a male voice asked. The voice belonged to Coach.\n\n\"Yep, you have another cock sucker on the team,\" she said, as I bobbed, feeling so awkward to have my coach's cock in my mouth.\n\nI was an athlete.\n\nI was relatively popular, and respected by my coach and teammates.\n\nAnd now I was also a cock sucker.\n\nIt was surreal.\n\nIt was wrong.\n\nAnd yet... it felt so right... nothing had ever felt as good as a hard dick in my mouth.\n\nI loved the hardness between my lips\n\nI loved the motion of bobbing back and forth.\n\nI loved the power I wielded when I served a cock (ironic, but true).\n\nI also loved the contrary humiliation that encompassed the taboo reality of being a cock sucker.\n\nAnd lastly, I loved the thrill of sucking a cock to completion and draining the balls until every drop had travelled to my belly.\n\nSo I ignored the fact that he was my coach, I ignored that Camry was watching, and just bobbed, focusing on pleasing the cock in my mouth, and earning the treat I had become addicted to.\n\n\"Shit, you're really going to town,\" Camry complimented me, impressed, as I bobbed furiously on almost the entirety of this seven inch shaft... determined to be a great cock sucker.\n\n\"Yeah, he's a go-getter,\" Coach groaned, and I could tell he was close.\n\nAnother minute, and Coach grunted, \"Here it comes, cock sucker.\"\n\nI kept bobbing, not at all fazed by the reality my coach had just called me 'cock sucker', so focused was I on finishing the play... running the yardage and getting my cum-down (I know that sounds silly, but the sports metaphor somehow made me feel less gay).\n\nAnd then I got my treat, a full, warm, gooey load of cum oozing deliberately into my mouth, which allowed me to savour the cum before swallowing.\n\nI kept bobbing, more slowly, trying to extract every drop of Coach's cum.\n\nWhen he pulled out, he complimented, \"Good job, cock sucker. I expect to use that mouth more often now.\"\n\n\"I'm sure he will be more than willing to accommodate you, sir,\" Camry answered for me.\n\n\"Thanks Ms. White,\" coach said, and then he was gone.\n\nI got off my knees and told her, \"I can't believe I just sucked off Coach.\"\n\n\"Whenever you get a craving, let me know,\" Camry said. \"Almost every male teacher here uses this glory hole, so you'll be able to find a cock pretty much any time of the day.\"\n\n\"Really?\" I asked.\n\n\"Oh yeah,\" she nodded, \"I've sucked Mr. Peterson's dick when he gave me a nod in class, and then we came here and he fed me his ten inch black cock while a film was showing in his classroom.\"\n\n\"No way,\" I gasped.\n\n\"Yes, way,\" she nodded, before warning, \"be careful, though. Besides being long and thick, he likes to face fuck you, and he comes in buckets.\"\n\n\"Wow!\" was all I could say, Mr. Peterson my history teacher, and easily in his fifties.\n\n\"Oh and he takes a long time to come,\" she added.\n\n\"Good to know,\" I laughed, as we headed out, still in awe of everything, and how my life had changed so much because of one meeting with a pretty college girl.\n\n.....\n\nThat night, Coach's cock still vivid in my head, although Mr. Peterson's ten inch dick was also lingering just below my consciousness, I watched video two.\n\nThe video began with the heading, Intermediate Cock Sucking Tips!\n\nThen words scrolled down the screen:\n\nYou have likely mastered the basics of cock sucking by now.\n\nIf you are a cock sucking virgin, this video is not for you.\n\nIf you have a few cocks figuratively under your belt and a few loads of cum literally, then this video is for you.\n\nThen I watched a lengthy clip (like 45 seconds, which is long for these types of videos) as a title was displayed, and then a sultry feminine voice spoke over the video.\n\nOne: Get the cock completely wet\n\nA pretty brunette licked up and down a long shaft with excessive saliva cascading down it in wavelets before taking the head in her mouth and bobbing away.\n\nShe spoke: The key to an amazing blow job is lubrication. A pussy exudes natural lubrication, an ass requires professional lube, and for a blow job you can create your own. Lick the shaft, inundating it with wetness. Take the head in your mouth and accumulate a large reservoir of saliva. Make your mouth into a cunt awash with welcoming liquid... the body part you wish you had.\n\nTwo: Ball Play 1: Play with the balls while you Blow",
        "A chubby redhead bobbed slowly on a big black dick as her left hand cupped and fondled the balls... in the same way I would cup a set of tits.\n\nShe spoke: The balls are often neglected by rookie cock suckers as they are so focused on the head and shaft of the cock. But the cock and balls are a package deal. Cradle these sensitive spheres in your hand, fondle them, and stir up the dessert you're craving which will eventually emerge from those very balls.\n\nThree: Ball Play 2: Lick and suck the balls\n\nA girl in a cheerleader's outfit sucking a ball sack.\n\nShe spoke: Rookie cock suckers just suck. Advanced cock suckers understand that worshipping a cock is a complex task that includes worshipping every aspect of a man's cock and balls. After you've sucked for a couple minutes getting him warmed up, then slide your open lips down one side of his shaft and suck each ball into your mouth.\n\nFour: Pacing\n\nAn older woman in a black dress is kneeling in a bar slowly sucking the cock of a man perched on a bar stool. As the video continues, she moves faster and faster.\n\nShe spoke: Many novice cock suckers think that you just bob rapidly until you pump out the load. But good cock suckers know that worshipping a cock is a lengthy journey that starts slow, then picks up under the direction of your Alpha Male (or if he declines to speak, you may take your cues from his increasing groans).\n\nFive: Edging\n\nA girl in pigtails bobbed furiously on the cock and then stopped. Then repeated.\n\nShe spoke: Good cock suckers want to retain that cock in their mouth and under the control of their hands for as long as possible. Thus edging is a valuable skill. You get him close and then back off. Get him close again and then slow down. And when he eventually does come, it will be with greater volume and more intensity.\n\nSix: The Wrist Twist\n\nA nun, yes an actual nun, jerked a huge black cock with her hand while simultaneously sucking.\n\nShe said: A great technique to enhance the blow job once you've gotten the Alpha Male Dick nice and wet, is to stroke the dick with one hand (or two if he provides you with enough length) while you're sucking; this approach is especially helpful for huge dicks. Although there are many ways to do this, the best is to synchronize your bobbing and your hand movements. Twist left on the down stroke and right on the upstroke. Or if you're using two hands, twist them back and forth in opposite directions, being careful that the cock is lubricated with plenty of saliva. Repeat.\n\nSeven: Deep Throat\n\nA video of a skinny brunette with huge fake tits taking an entire cock in her mouth over and over again.\n\nShe said: Every Alpha Male will expect a cock sucker to be able to deep throat their cock, no matter how well-endowed he is. So practice until you can readily take huge tubular objects into your cock sucking mouth.\n\nThe video then suddenly ended. I was surprised and disappointed. I had been taking notes, writing down all the advice.\n\nI know this makes me sound more gay, but I wanted to improve my cock sucking skills. I didn't want just to be a cock sucker, but to be a great cock sucker.\n\nI wanted to go to clip three, but knew I was only supposed to do one per day. So I texted Rose: Video 2 was kind of short.\n\nShe texted back: Watch it again! It has some great suggestions.\n\nI texted back: Okay.\n\nShe texted back: Enjoy the surprise glory hole?\n\nMe: It was a BIG surprise!!!\n\nRose: I imagine so.\n\nMe: Still can't believe we have a glory hole to serve teachers.\n\nRose: Even I was surprised by that. But the good news is that you now have a secret location to go and satisfy your cravings.\n\nMe: I guess, although it's kind of awkward.\n\nRose: Well, it's an option.\n\nMe: One I may use again.\n\nRose: Sorry, but I got to go... Camry brought over a new trainee.\n\nMe: Who???\n\nRose: I don't train and tell... but she is a teacher at your school!!!\n\nMe: NO WAY!!!!!!!!!!!!!!!!!!!!!!\n\nRose: I never tell lies... now go watch that video again, baby.\n\nMe: Yes, Ma'am!\n\nAs usual, I obeyed Rose, and I watched the video again... before sternly ignoring my erection and deciding to work on some biology homework... thinking to myself I had been doing a lot of hands on bio work recently... physics too... and chemistry.\n\nAs I went to bed, I stared at the number from the black cock guy from the gloryhole. I pondered calling him, as I was definitely craving a load of cum... but that scared me. I needed to be able to control my addiction... so I threw the number in the garbage.\n\n.....\n\nThe Friday school day was completely non-eventful. No Eugene, no Camry, not even a Mary.\n\nAnd although the glory hole was posted prominently in my brain all day, I wasn't brave enough to actually go and visit it... plus, I would need Camry to get there, and going and asking for help so I could suck cock was too embarrassing, even though I hadn't minded when she was watching.\n\nI also studied every female teacher, wondering which one had ended up munching on my girlfriend's (I'm pretty sure Rose is my girlfriend) cunt.\n\nAfter school, Rose texted me: Wanna go to a party tonight?\n\nTrying to act casual, I didn't respond right away, feeling way too dependent on her, but responded a few minutes later: Yeah, sure.\n\nShe texted back: Awesome, meet me at my dorm at nine.\n\nI tried to act casual and not as excited as I really was: See you then.\n\nAfter dinner and watching some television with Mom and Dad, I went to my room and watched Video 3.\n\nThe video came on with the title: A TRUE Cock Sucker....\n\nPictures of girls sucking cock flashed by, a new one every second, as a sultry-voiced woman spoke... every little while a recurring word flashing briefly on the screen.\n\nSpoken: A true cock sucker understands that sucking cock is more than just getting a guy off.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that your sole purpose in life is to worship the Alpha Male's cock.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that sucking Alpha Male cock is an enormous privilege.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that the more an Alpha Male gives you his most precious gift, his huge cock, the more you will thank him with heartfelt devotion.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that an Alpha Male's cock is the only thing that matters when offered to you, and you will treat it like the gift it is.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands there is no shame in being a cock sucker... feel no guilt as you accept what you are.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands it's all about the Alpha Male: his cock, his masculinity, his pleasure.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands you were born to serve the Alpha Male cock.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that you needn't expect any reciprocation.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands there's a hierarchy that spans the universe and that you are at the bottom.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands and values this hierarchy, and yearns for an Alpha Male to express his dominance over you... to demonstrate who is in charge.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker loves to submit to an Alpha Male without reservation and to be used.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that Alpha Males love to be dominant and there is no greater calling than to take dominion over a submissive cock sucker whose only purpose is to serve.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that Alpha Males love having their cock worshipped by a submissive dick stroker with hunger in your eyes, since that worship enhances an Alpha Male's power and reinforces his masculinity and superiority.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands and eagerly accepts an Alpha Male's superiority over you and will obey without hesitation any instructions given.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands your purpose is to serve an Alpha Male any way he desires.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands your purpose is to serve an Alpha Male anywhere he desires.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that the only real way to achieve fulfillment is to be used until an Alpha Male's cum is deposited on your face or down your throat.\n\nScreen: WORSHIP\n\nSpoken: A true cock sucker understands that any name given to you by an Alpha Male, no matter how demeaning, is endearing and true.\n\nThen the pattern changed as it shifted from stills to videos of extreme close-ups... each lasting only about five seconds... as the sultry narrator described them with a variety of nasty derogatory names.\n\nCocksucker (a nurse sucking a cock in a bed)\n\nPipe Smoker (a girl in a prom dress sucking a much older man)\n\nPrincess (a girl fingering herself while bobbing on a cock)\n\nSemen demon (a load shooting directly into a woman's mouth, the woman wearing a blindfold)\n\nSissy (a teacher kneeling on her desk sucking a cock)\n\nSausage jockey (a girl in a ponytail furiously sucking on a cock)\n\nBlow-boy (a stripper sucking a dildo onstage)\n\nFaggot (a cheerleader sucking a 'smoking hot' football player)\n\nCum bucket (a secretary earning her payload before it's sprayed on her face)\n\nPole Pleaser (a girl in a plaid skirt sucking a very long, thin dick)\n\nTwink (a girl in biker gear sucking a cyclist on his hog)\n\nThe videos on the screen went to black as the word WORSHIP slowly flashed ten times.\n\nMy cock was raging, this video somehow different and more arousing than the others. The massive amount of pictures at the beginning, mixed with the sultry narrative, and then the derogatory terms enacted near the ending making me want to cum, and cum now.\n\nAnd I was hoping that would happen tonight when I met Rose.\n\nAt least I prayed it would.\n\nIt didn't.\n\nI won't bore you with the play by play of my date as it was uneventful (because we didn't have sex nor did I suck cock), but instead it was just attending a house party as a couple.\n\nShe held my hand throughout the night.\n\nShe introduced me to her friends as her boyfriend.\n\nShe kissed me once in a while.\n\nWe had a few drinks.\n\nWe played a game of poker.\n\nWe just had fun.\n\nIt was better than sex.\n\nIt was more than sex.\n\nIt was a relationship.\n\nAnd although I was hard throughout much of the night... Rose was dressed sexy as hell and wearing sheer beige nylons under a short, tight, black skirt... I didn't think about sex with her or about cock all night... I just enjoyed being with her.\n\nI dropped her off at her dorm and kissed her goodnight, and as I headed back to my car to drive home, I knew without a doubt I was in love with Rose.\n\n.....\n\nSaturday afternoon I received a text from Rose: Re-watch the first three clips at least once more if you wish, then watch Clip 4 at 7 o'clock, exactly one hour before I pick you up at 8 o'clock!\n\nExcited, I texted back: Will do. Where are we going?\n\nRose: PS: Dress up in a suit if you have one.\n\nMe: Okay, where are we going?\n\nRose: Stop asking. You'll find out tonight.\n\nI had no idea what she had in store, perhaps a real date, yet based on her assignment to watch over an hour of cock videos (with the predictable result that I would be very horny), I could imagine what to expect.\n\nSo, I did as I was told.\n\nI re-watched each of the three videos... twice... and the second one on tips three times. My cock was raging and I was frustrated that I wasn't allowed to come. Yet, as odd as it was, I felt compelled to obey Rose without question: she seemed to know me better than I knew myself.\n\nAnd thus, at seven, I eagerly clicked on Video Clip Four... thinking I was now over halfway to being done, halfway to being allowed to come.\n\nVideo Four popped onto the screen, and this one was called Acceptance. I thought it was weird that I wasn't seeing this one until now; I had already accepted I was a cock sucker, but I watched it anyway.\n\nBut then when the video started and I heard the voice, Rose's voice, I knew this one had been made specifically for me.\n\nThis time videos of girls sucking cock played for a few seconds at a time as Rose spoke.\n\nRose:\n\nMy sweet cock sucker. Accept the reality of who you are. Of what you are! Who you were born to be!\n\nA cock sucker.\n\nYou may wish you were straight, like you used to think you were, but the reality is that you truly are what you are. And what are you? Say it with me.\n\nA cock sucker.\n\nOf course I said it. Obeying Rose's voice as if she were actually here in the room with me.\n\nAgain,\n\nA cock sucker.\n\n\"A cock sucker.\"\n\nNothing gets you more excited than a big thick rod being offered to you.\n\nNothing gets you more excited than a nice hard cock pulsing in your mouth.\n\nNothing gets you more excited than a thick dick sliding in and out of your mouth.\n\nNothing gets you more excited than an Alpha Male's dominant fucking dick inches from your face.\n\nNothing gets you more excited than a thick, gooey, warm load of cum spewing in your mouth and gliding down your throat, or taking the warm cream all over your face.\n\nSay it again,\n\nI'm a cock sucker.\n\nI declared \"I'm a cock sucker.\"\n\nAgain.\n\nI'm a cock sucker.\n\nI repeated the declaration, \"I'm a cock sucker.\"\n\nYou feel happiness when a cock pumps in and out of your mouth.\n\nYou feel delight when a man shares his manhood with you.\n\nYou feel joy when you're on your knees bobbing on cock.\n\nYou feel euphoria when a man uses you as his fuck toy.\n\nYou feel elation when a load is deposited in you.\n\nCock is your purpose.\n\nSay it.\n\nI was completely entranced by her words as I repeated after her, \"Cock is my purpose.\"\n\nAgain.\n\nCock is your purpose.\n\n\"Cock is my purpose,\" I declared, my cock throbbing in my pants.\n\nTake pride in being a cock sucker.\n\nSure, you're near the bottom of the sexual hierarchy... only a complete bottom is below you... but that's okay. You're a cock sucker... a dick flamer... and there is no shame that your primary sexual purpose is to suck dick and coax load after load out of as many of them as you can.\n\nIt's just who you are.\n\nIt's just something you need to do.\n\nIt's just what you were born to do.\n\nSay it.\n\nI was born to serve cock.\n\n\"I was born to serve cock,\" I declared, even as my mouth watered... craving a dick in my mouth right now.\n\nAgain.\n\nI was born to suck cock.\n\nI repeated, \"I was born to suck cock.\"\n\nUnderstand you are still a man... you're just a man who serves other men and needs to suck other men's cocks for mutual sexual pleasure and fulfillment.\n\nYou'd rather suck a man's cock than be sucked. It's who you are, it's in your DNA.\n\nIn public you're still the stereotypical jock society wants to see: big, strong and manly. But behind the scenes you understand that you're inferior to men who use you for their own pleasure... which in turn gives you pleasure... pleasure both from your inferiority and from their use of you.\n\nYou owe your feeder du jour ultimate submission because he is giving you the ultimate privilege of his cock and cum.\n\nI'm a man who lives for cock.\n\nSay it.\n\n\"I'm a man who lives for cock,\" I said, and at the moment it seemed true. This very moment I was going through cock withdrawal. I wanted one in my mouth right this second!\n\nAgain.\n\nI'm a man who lives for cock.\n\nI repeated, \"I'm a man who lives for cock.\" And this made me feel okay with it. I could still be a football player. I could still have a girlfriend like Rose. I could still fuck women. I just also sucked cock.\n\nIn today's society still wedded to stereotypical biases, it isn't easy being a cock sucker.\n\nA cock sucker needs another man's cock for his own sexual pleasure and satisfaction more than he needs his own.\n\nA cock sucker needs to suck cock; he craves it and lives for it.\n\nCum becomes a food group.\n\nYet, a cock sucker needs cock the same way he needs air to breathe.\n\nRepeat after me....\n\nA cock sucker lives for cock.\n\n\"A cock sucker lives for cock.\"\n\nA cock sucker lives for cum.\n\n\"A cock sucker lives for cum.\"\n\nI am a man who sucks cock.\n\n\"I am a man who sucks cock.\"\n\nI am a man who worships dick.\n\n\"I am a man who worships dick.\"\n\nI am a cock sucker.\n\n\"I am a cock sucker.\"\n\nAnd then the video faded to black.\n\nAs I sat there, my mouth watering, my cock ready to burst out of my pants, I realized I had gotten so immersed in Rose's narration that I had no idea what I'd just watched. Her hypnotic words had seduced my consciousness into a totally receptive trance of submission.\n\nGlancing at the clock, I had time to watch this video one more time... so I did.\n\nI'd just finished my second viewing when I got a text from Rose saying she was outside. I closed up my laptop and quickly left the house... assuming that such video training this evening would lead to some practical training tonight.\n\nFuck, I needed dick.\n\nFuck, I hated the fact that I needed dick.\n\nYet I equally loved it.\n\nFuck, my life was confusing, even as the videos helped me accept my nature and purpose.\n\nI got in the car and Rose leaned over and kissed me; I noticed she was wearing a shiny gold dress and beige stockings.\n\nBreaking the kiss, she asked, \"So are you enjoying the videos?\"",
        "\"There were a lot of good tips and reassurances in them,\" I answered.\n\nShe nodded, and started driving, \"These are important keys not only to help you become a great cock sucker, but also to become completely comfortable in your body.\"\n\n\"When I watch the videos or I'm horny, I completely accept that side of me,\" I admitted.\n\n\"But when you're not accepting that, or when you come, you feel guilty,\" she assessed insightfully.\n\n\"Yeah, is that weird?\" I asked.\n\n\"No, that's natural, and it's part of the human psyche. The reality is that you've spent eighteen years being told what you as a boy, and now a man, are supposed to do. Yet most men have deep down insecurities and other desires they suppress,\" Rose explained.\n\n\"But I didn't have any of those before I met you,\" I pointed out.\n\n\"Of course you did, dummy,\" she smiled, squeezing my leg. \"You just didn't know it yet. That's what suppression means.\"\n\n\"Really?\" I asked.\n\n\"Could I make you crave to suck cock, if deep down you didn't already crave cock?\" she asked.\n\n\"I guess not,\" I said.\n\n\"No different than if I tried to make a gay guy or a lesbian straight,\" she explained. \"It would be trying to go against who they are.\"\n\n\"I guess,\" I said.\n\n\"No guilt, Brian,\" she said firmly. \"We've had this talk before. Accepting who you are is the hardest thing to do, but ultimately it's the most liberating thing any person can achieve.\"\n\n\"I know,\" I agreed, knowing it was true... because when I watched the videos, I gave in completely to who I was and not any of society's expectations of who I should be.\n\n\"Did you repeat the words I gave you today?\" she asked.\n\n\"Every one,\" I nodded.\n\n\"Did you believe them?\" she added.\n\n\"Yes, I actually did,\" I answered, which was true.\n\n\"Good,\" she nodded, \"because when you're alone not sucking cock, not being judged, not pleasing a man, not impressing me, that's when you are most yourself. And what you think and say when you're totally alone reveals the purest truth of who you are.\"\n\nI said with a slight smile, \"Well then, I guess I'm a man who loves women and who also loves cock.\"\n\n\"There you go,\" she smiled. \"Acceptance unshackles you from the burden of lies.\"\n\n\"Thanks, Socrates,\" I joked.\n\n\"Plato,\" she shot back, as she pulled up to a house.\n\n\"Where are we going?\" I asked.\n\n\"To a masquerade party,\" she answered, as she reached into the back seat and grabbed a bag. She handed me a mask and said, \"Here, put this on.\"\n\n\"Okay,\" I nodded, as she put a gold mask on herself.\n\n\"Whose party?\" I asked.\n\n\"A professor of mine,\" she answered.\n\n\"You go to parties with professors?\"\n\n\"I go to sex parties with professors,\" she corrected, as she got out of the car.\n\nI quickly got out too as I questioned, \"Sex parties?\"\n\nShe took my hand. \"Yes, this is a monthly gathering where men do men and women do women.\"\n\n\"What about men doing women?\" I asked.\n\n\"Not allowed,\" she said. \"Although occasionally a woman does a man with a strap-on.\"\n\n\"Oh my,\" I joked.\n\n\"Oh trust me,\" she smiled. \"Don't knock it until you try it.\"\n\n\"I can't imagine,\" I said, as we reached the door.\n\n\"Oh I can,\" she smiled, \"but I've had a head start,\" as she squeezed my ass and rang the doorbell.\n\nThe door opened immediately and I saw a gorgeous, big-busted blonde in the sluttiest maid's outfit ever.\n\n\"Welcome,\" the blonde greeted.\n\nRose led me in and put her phone in a large basket. She explained, \"No cell phones.\"\n\n\"Of course,\" I nodded, that making complete sense to me. No photos or videos.\n\nI put my phone in the basket too as Rose signed herself and me in.\n\nRose grabbed a pink bracelet and put it on my right wrist.\n\nI asked, \"What's that for?\"\n\n\"It's so people know it's your first time here and that you're only a cock sucker,\" she explained.\n\n\"As opposed to what?\" I asked.\n\nShe laughed as she avoided the question, taking my hand and leading me down a long hallway and into a massive living room where people were mingling, chatting and having drinks while ridiculously pretty women dressed as sexy maids as well as a couple of equally ridiculously muscled Adonises wearing shirtless, sleeveless tuxedos served drinks and appetizers.\n\nRose explained, \"The living room is a 'no sex' room... the only room that is restricted, except for the stage in that corner, which is far from restricted.\"\n\n\"Oh,\" I nodded, thinking this was the tamest sex party ever... not that I'd been to any sex parties, although I'd often had sex in bedrooms at high school parties before meeting Rose. I glanced to the stage and saw no one there.\n\nI smirked to myself... my life was now split into two eras: BR and AR... Before Rose and After Rose.\n\nWe grabbed drinks and she led me through the house. She explained, \"Upstairs is for the ladies, and the basement is for the men... and the remainder of the rooms on the main floor are for the kinky stuff.\n\n\"Kinky stuff?\" I asked, curious.\n\n\"So I can't watch a lesbian daisy chain?\" I said, acting devastated... although I'd be lying if I said such an idea wasn't really hot.\n\n\"Nope,\" she shook her head, \"although you will likely see some girl on girl action on the main floor.\"\n\n\"Good to know,\" I nodded, as I downed my drink... needing some liquid courage.\n\n\"Just so you know, downstairs anything goes,\" she warned.\n\n\"Anything?\" I asked.\n\n\"Men suck other men, but men also fuck other men,\" she said clarifying this conversation, as well as the brief one we'd had as we'd entered the house.\n\n\"Oh!\" I said, my ass-cheeks clenching protectively.\n\n\"Don't worry, the pink bracelet identifies you as only as a cock sucker,\" she explained.\n\n\"I see,\" I nodded, now understanding and kind of relieved.\n\n\"And that bracelet means your dick can't be touched either,\" she added, \"by you or anyone else,\" even as she squeezed it.\n\n\"You just broke the rule,\" I rebuked her with a smile, my head again swimming with all this overwhelming unprocessed information.\n\nSuddenly a big breasted older woman walked up to Rose and ordered, \"Come with me, dear.\"\n\n\"Have fun and remember what you learned from the videos,\" Rose smiled, giving my hand a squeeze before leaving me.\n\nThen I was suddenly alone.\n\nNervous.\n\nExcited.\n\nConfused.\n\nI walked around a bit, finding and downing a second drink, before I decided to head downstairs, curiosity overcoming my nervousness, excitement and confusion.\n\nOnce downstairs, I was in another world. There was a huge television screen playing porn, interestingly enough it was lesbian porn, and about a dozen men.\n\nA man in a tux was on his knees sucking a very large man, like 350 pounds large.\n\nThere was a chubby man on all fours getting fucked while he sucked another cock.\n\nA younger looking guy was standing between two older men and stroking their cocks, as all three chatted about politics.\n\nA waiter (ridiculously muscled, of course) dressed in only a bowtie and a thong, looking like a Chippendale's dancer, was carrying around drinks.\n\nThree men were sitting on a couch, all watching porn.\n\nI stared around, trying to absorb all the sights, until one of the men on the couch noticed me and waved me over.\n\nAll three men looked to be in their forties as I walked over, again nervous and excited.\n\n\"First time here?\" he asked.\n\n\"Yes, sir,\" I nodded.\n\n\"Sir,\" he chuckled, \"I like that.\"\n\n\"Are you hungry?\" he asked.\n\n\"Yes, sir,\" I nodded, looking directly at his crotch... the hours of video today having me craving cock more than ever before.\n\n\"Well, go ahead,\" he offered.\n\nI dropped to my knees and fished out his cock, which was awkward to do because of how he was sitting. It was a very soft couch.\n\nOnce it was out, semi-erect and thick, I leaned forward and took it in my mouth. The moment it filled my mouth I felt a rush of adrenaline course through me as I finally got what I'd been craving... cock.\n\nI swirled my tongue around the cockhead, then bobbed slowly, getting the thick dick completely erect... which was only about five and a half inches. Yet, because he was sitting and I was trying to suck him by going down on his cock, it was a lot more challenging than when a man was standing... at least in the particular sitting position he was in.\n\nI remembered the first tip was to get the cock really wet... so I used as much saliva as I could to create a thick sheen on the thick shaft.\n\nI didn't suck his cock... I worshipped it. I slid my tongue up and down his shaft, although his balls weren't available in the sunken position he was in.\n\n\"Oh yeah, we got a real cock sucker here,\" he said, after a few minutes of my licking, sucking and slowly jerking his cock.\n\n\"Let me be the judge,\" the guy beside him countered before he ordered, \"Come here, boy.\"\n\nI looked up at the man I was already sucking, not close to being done with him, but he smiled, \"Don't worry, cock sucker. I'll save this load for you.\"\n\nI moved from one man to another, this one's pants already down to his ankles, his cock already hard and waiting for me.\n\nAs I took it in my hand, this one a good eight inches, and leaned forward, he ordered, \"Take your time, son.\"\n\n\"Yes, sir,\" I nodded, as I replicated the excessive wetness on this new shaft and cockhead.\n\nAfter a couple minutes of worship, he added, \"Don't forget the balls.\"\n\nI obeyed, slithering my tongue back down his shaft and savouring each ball as I nestled it in my mouth, trying to get his load all warmed up for myself.\n\nI then returned back up top and resumed sucking.\n\n\"My turn,\" the last guy on the couch said a couple of minutes later.\n\nSo I moved to him, his cock seven inches and also already hard.\n\nAgain I replicated the worshipping from the top of his cock, down his shaft to his hairless balls (I wondered how he did that). I licked, I sucked... I worshipped.\n\nAnd then for the next fifteen minutes I rotated between all three cocks in complete cock-sucking heaven.\n\nThen all three stood up and were joined by three more cocks, and I began rotating around, sucking all six cocks in a circle while they ignored me, watching porn and talking sports.\n\nIt was surreal and amazing.\n\nEach cock had a different length.\n\nEach cock had a different girth.\n\nEach cock was slightly different in shape.\n\nEach cock had a different scent.\n\nThen I got more ambitious. I sucked one while I stroked the two on either side of me, becoming completely consumed by the cocks all around me.\n\nI don't know how long I sucked cock, but eventually one of the guys declared, \"Circle jerk baptism.\"\n\nI wasn't sure what that meant, but caught on quickly as all six men started stroking their cocks and one of them removed my mask.\n\n\"A young one,\" one of them said... but I was so hungry for cum, so desperate to serve, I didn't care if they saw my face or even put my picture in the newspaper.\n\nI was desperately craving cum... I'd been sucking cock for over an hour I would later learn... and I needed it bad.\n\nYet, I didn't know which way to turn. The phrase 'embarrassment of wealth' was making perfect sense.\n\nI was surrounded by cock.\n\nHard juicy cocks.\n\n\"Open, cock sucker,\" one guy called out, and I instantly obeyed, turning to him and opening my mouth wide.\n\n\"Oh yeah,\" he grunted a few strokes later, as the first of six straight loads shot into my open mouth and splattered my face.\n\nHe wasn't even finished, when I felt my head grabbed and turned, and another cock coated my face.\n\nAnd then time stood still as I remained on my knees until four more loads had sprayed all over me.\n\nSome landing in my mouth, some in my hair, but mostly on my face.\n\nIt felt so good.\n\nIt felt so natural.\n\nIt felt so slutty.\n\nI felt like I was in my true home... on my knees... serving cock... being used... I had become the very embodiment of the cock sucker Rose had envisioned.\n\nAfter all six loads, my eyes closed and coated in cum, I suddenly had a cock shoved in my mouth... and unlike the worshipping I'd lavished on the first six, this time I was helplessly face fucked.\n\nI just remained on my knees and allowed my mouth to be used for the pleasure of whoever was using me... although his cock was the smallest of the seven... and easy to suck even as he forced it in my mouth all the way in so his balls bounced off my chin.\n\nHe only lasted a couple minutes before I finally got my first full load of my addiction satisfied (although I'd just enjoyed half a dozen partials), as he deposited his cum in my mouth.\n\nOnce he pulled out, someone handed me a wet cloth and I wiped the cum from my eyes as I said, \"Thanks,\" to whoever had been so thoughtful.\n\nI finally stood up, my knees sore, and I stretched... finally opening my eyes.\n\nAnd even after sucking seven cocks, I was surprised by the fact that I still wanted more. I was also shocked to see a fair amount of gay sex going on around me.\n\nGuys were getting ass fucked.\n\nGuys were sucking cock.\n\nGuys were getting head while chatting casually with other guys getting head.\n\nYet, right now no cock was free and available for me to suck.\n\nI watched for a few minutes... suddenly feeling awkward and out of place without a cock in my mouth, and uncomfortable seeing guys fucking guys. That was still weird to me... somehow a lot gayer than just sucking cock.\n\nI decided to go back upstairs.\n\nI was heading back to the main area when I walked past a room with the door open. I stopped and watched as a big black guy who looked like a linebacker was on all fours getting furiously fucked by a petite older woman with a strap-on.\n\nI, of course, stared in awe of something that until I saw it with my own eyes had never occurred to me.\n\nAfter a couple of minutes, while she rode him vigorously and he whimpered like a girl, she turned to me and smiled, \"Want to be next?\"\n\nI stammered, \"N-n-no, thank you, m-ma'am,\" and quickly scurried away.\n\nI heard moaning as I passed another room, but didn't stop until I arrived back in the living room.\n\nOnstage was a girl, naked except for a tight black choker around her neck, hanging upside down from a trapeze of all things, and managing to suck a cock.\n\nI stared in fascination.\n\nI watched until the guy grunted and deposited his load in her mouth, the cum then spewing back out of her and onto the guy's legs when her choker made it impossible to swallow.\n\nShe was then assisted down by the two body builders in tuxes, as Rose came up behind me and asked, \"Having fun?\"\n\nI turned to her and reported, \"It's been a learning experience.\"\n\n\"A good one?\" she queried.\n\n\"A very good one,\" I nodded, as I looked down and saw she was holding a leash that was connected to an older woman.\n\n\"Well, that's great to hear,\" she smiled.\n\nAs I glanced back down at the older woman, on all fours, with a tail sticking out of her ass held in place by a butt plug, Rose shrugged, \"I wanted to have a literal pet.\"\n\n\"So I see,\" I laughed.\n\n\"Give me half an hour,\" she requested.\n\n\"Take as long as you want,\" I said, as I saw two women going onstage.\n\n\"Oh, you won't want to miss this show. It's a burlesque number with anal sex and other fucked-up shit,\" Rose said.\n\n\"Words I never imagined cooperating together in one sentence,\" I laughed.\n\n\"Oh, I'm just beginning to show you the world,\" she said, as she leaned in and kissed me, licked her lips appraisingly and said, \"I see you lost your mask.\"\n\n\"They took it off so they could come all over me.\"\n\n\"You got a little something, right in... well, all over your face, all right,\" she smiled.\n\n\"Circle jerk baptism, they called it,\" I explained.\n\n\"Fucking hot,\" she smiled, before she turned and led her pet person away.\n\nI got a drink and watched the strangest show ever. It first included dancing... then stripping... it turned out all their clothing was edible... then strap-on anal sex. It then returned to dancing, followed by a 69 with both girls fisting each other. It finally went back to dancing, this time in a children's plastic wading pool, and then a climactic golden shower, which explained why the fully dressed people close to the stage were sitting behind transparent plastic sheeting.\n\nOne it was done, I looked around and when I didn't see Rose, I decided to go and try to find one more cock to suck.\n\nI was walking back to the basement, when I saw a guy in a doorway watching the strap-on fucking happening in a bedroom. I moved to him and wordlessly dropped to my knees, his cock dangling flaccidly between his legs.\n\nHe gave a nod of approval and I took his cock in my mouth.\n\nI'd been sucking him for a couple of minutes before I heard Rose say, \"There you are, cock sucker.\"\n\nI waved while I kept sucking, thinking she'd be impressed by such dedication.\n\n\"I see you wanted a load to go,\" Rose teased, as I began bobbing faster. \"Shall I get you a plastic cup?\" she asked rhetorically.\n\n\"Is this one yours?\" the guy I was sucking asked.\n\n\"He is,\" Rose answered, as if I were property.\n\n\"I think you've got a keeper,\" he said.\n\n\"Me too,\" Rose agreed. \"Although he's still in early training. I've only had him for a couple of weeks.\"\n\n\"No way,\" he said, surprised.\n\n\"Oh yeah, a couple of weeks ago he was straight as an arrow,\" Rose bragged.\n\n\"Well, now he's more like a corkscrew... a natural fucking cock sucker,\" the guy groaned, as he grabbed my head and began face fucking me.\n\nA couple dozen strokes, and I indeed received my load to go as he spewed in my mouth.\n\nOnce done, he pulled out and said, \"I like you.\"\n\n\"Uh, thanks,\" I said.\n\nHe pulled a card out of the unbuttoned dress shirt he was wearing and handed it to me. \"I'm looking for someone to do some work at my office... and some more work in my office.\"\n\nI took the card and said, \"Thank you.\"\n\n\"I expect you to text me tomorrow,\" he said, before sliding his cock back in my mouth for a few seconds and a nice cleaning before pulling out and asking, \"is that clear?\"\n\n\"Yes, sir,\" I nodded.\n\n\"It's been a pleasure,\" he smiled and sauntered off.\n\nRose helped me to my feet said, \"Well, that was interesting.\"\n\n\"Every time I'm with you it gets interesting,\" I countered.\n\n\"Do you know who he is?\" she asked, as she took my hand and began to lead me out of the house.\n\n\"No idea,\" I answered.\n\n\"Oh, are you in for a treat!\" she smiled.\n\n\"Really?\" I asked. \"Who is he?\"\n\n\"I'll let him tell you himself,\" she said, as we went outside.\n\n\"Okay,\" I nodded, curious, but not pushing it.\n\n\"So did you restrain yourself from coming these last few days?\" she asked, once we were in the car.\n\n\"Yes, I'm an obedient boy,\" I answered truthfully.\n\n\"Well, obedient boys get rewarded,\" she smiled, as she reached over and fished out my cock.\n\n\"Oh,\" I groaned, \"that's really nice,\" as her hand stroked me.\n\n\"I've been thinking of fucking you all night,\" she purred, and she surprised me by climbing past the steering wheel over to me and lowering her pussy on my cock.\n\n\"Oh God,\" I groaned, \"even as you were having lesbian adventures?\"\n\n\"Not terribly adventurous, I only had three girls get me off,\" she said, as she began riding me.\n\n\"Oh, well, I guess I win,\" I shrugged, as I bragged, \"I had eight. Except of course I got them off.\"\n\n\"Only eight?\" she questioned, teasingly.\n\n\"I didn't want to look like too much of a cock hound,\" I joked, \"plus, there was a lot of competition in there.\"\n\nShe laughed, \"Yeah, believe it or not, there are almost always more cocksuckers or ass-takers than Alpha Males.\"\n\n\"Really?\" I asked.\n\n\"Yeah, you'd be surprised at how many men have a secret cock-sucking side,\" she said.\n\n\"I would have been very surprised before I met you,\" I pointed out.\n\nShe laughed, \"Fair enough.\"\n\nUnfortunately for me, a few days of cock busting videos, plus today's cock buffet and lesbian action had my balls boiling, and in under two minutes I was coming in Rose's pussy.",
        "\"Am I that good?\" she smiled, as she kept riding me.\n\n\"Definitely,\" I nodded, as she leaned in and kissed me.\n\nWhen she broke the kiss, she got off me and returned to the driver's seat... my cum dripping onto the gear shift.\n\nShe pointed to it. \"Clean up your mess.\"\n\n\"Yes, Mistress,\" I obeyed, as I scooped up my cum and put it in my mouth.\n\n\"Good boy,\" she said, as she began to drive. As she drove me home, she said, \"Congratulations, you're definitely ready for the next level of training.\"\n\n\"And what is that?\" I asked.\n\n\"Ohhhhh,\" she purred, as she reached over and stroked my cock, still at full mast, \"you'll find out when the time is right.\"\n\n\"Okay,\" I said, always hating not knowing, but knowing that I'd loved everything she'd had in store for me so far.\n\n\"But trust me, you'll fucking love it,\" she said.\n\n\"I can't wait,\" I said... as I wondered what else she had planned for me and knowing that whatever it was... well... I would do it without hesitation.\n\nThe end of Part 4\n\nComing next:\n\nHypnoSissy: Getting Pegged\n\nBrian learns that cock suckers have more than one 'In Box'."
    ],
    "authorname": "silkstockingslover",
    "tags": [
        "gay",
        "cocksucking",
        "oral",
        "orgy",
        "submissive",
        "hypnosis",
        "sissy",
        "sissy videos",
        "straight",
        "mind control"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/hypnosissy-cum-cravings"
}