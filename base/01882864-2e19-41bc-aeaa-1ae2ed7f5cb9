{
    "title": "Snowy's Visit Ch. 01",
    "pages": [
        "Author's note:\n\n<br >This story is just an introduction to the sequel that should be published shortly. It contains segments of exhibitionism, lesbian and threesome, but is set in exhibitionism &amp; voyeur category mostly due to the fact that the upcoming sequel will be a true e&amp;v story.\n\nAlso, it is worth noting that this story is actually based on true events. Some dialogue and non-sexual events of the evening may be changed and shortened to avoid unnecessary clutter, and the names of the protagonists have also been changed, but it is a relatively accurate description of the author's own threesome experience.\n\n*\n\n\"Do we need something from the store?\" I asked Lydia while standing on the doorstep.\n\n\"Sure. Get some bread. Oh, and get a bottle of coke,\" she answered while approaching me. She kissed and hugged me, then continued: \"When will you be coming back?\"\n\n\"I dunno... Around eight, maybe? Let's say eight-ish,\" I answered, already closing the door.\n\n\"Cool. Oh, and I forgot to tell you -- Snowy's coming over sometime before eight o'clock,\" Lydia announced casually. Snowy -- or Snoween (yeah, really) by her full first name -- was Lydia's friend. She used to date Lydia's brother, but that ended a long time ago, and the girls' friendship stuck.\n\n\"Cool. See ya!\" I replied indifferently and closed the door. I had to do some stuff at the college, get a bag of ganja and -- obviously -- buy some bread and a bottle of coke. It was late spring going into early summer outside, depending on how one would experience the end of May. It was still not too hot, but warm enough so that the choice of clothes was not something to worry about. It was my favorite time of year.\n\nHowever, it is important to track back a bit to explain the background of the story. At the time of this event, I was a junior in college. Lydia was my girlfriend at the time. We met in our freshman year. The chemistry between us was awesome, but she had a boyfriend at the time. Still, that relationship was apparently not really emotional, since it took 48 hours from our first encounter for her to break up with him and for us to end up screwing our brains out.\n\nAfter a year or so, a combination of our desire to be together as much as possible (ok, to fuck as often as possible) and Lydia's bad financial situation brought us to the situation where she moved into my tiny student apartment. So, two of us, two young lovebirds, started living in my studio loft, spending most of our time fucking, partying and occasionally even studying.\n\nShe was, to put it mildly, a fox. Almost six feet tall, thin, long-legged -- all in all, built like a model. She had the perfect C-cup perky tits and a small firm ass. She was blonde and, in hindsight, not the perfect choice for me. But she was an animal in the sack -- open for anything and really eager for my cock.\n\nNot that I tried to be overly kinky -- at least not publicly. But in 1-on-1 situations, there was not a thing we both wanted to try that was left untried. Anal, toys, bondage, sex in public places (both daytime and nighttime) -- It was impossible to say that I wasn't satisfied with my sex life. But, being a man, and an extremely potent 21-year old at that, I was always up for and lusting for more. I didn't cheat; it was always one too low for me. But I did jerk off to all of her good looking or at least fuckable friends -- more than once, there's no denial.\n\nSnowy was one of those friends. We were always cool, but I was careful not to cross any boundaries in words or actions. She was on the short side, some 5ft5in at most, but very voluptuous. Not fat or even chubby, just extremely curvy. She had enormous tits -- definite DD's -- and a more beautiful and tighter version of the Kim Kardashian's ass. On top of that, she had that type of full lips that you can immediately imagine being wrapped around your dick.\n\nUnfortunately, she wasn't really open to show herself. Always in jeans and high-cut t-shirts or vests, there was not even a remote chance to get a peek of what's hidden underneath. On top of that, she was shy -- not the quiet type, but one of those people that weren't able to talk about sex or anything related to it. Even when I opened the subject jokingly, she would immediately blush and begin to act like a little girl caught shoplifting. Of course, that didn't really matter to me. My imagination developed all kinds of scenarios that included Snowy, which had enabled me to get myself off to some fantasy situation whenever Lydia wasn't available, or sex wasn't an option for any reason. All in all, nothing unusual for a healthy male of that age.\n\nAnyway, after I did what had to be done around the town, I got home exactly as I planned, a couple of minutes after eight o'clock. Even before I opened the door, I heard female voices and giggling coming from the apartment. Girls were in the middle of a gossip-run. Oh well, I endured such evenings before... I opened the door and entered the apartment.\n\n\"Woohoo, there he is!\" Snowy exclaimed while Lydia laughed.\n\n\"Hello to you to! I like the optimistic welcoming,\" I answered. I scanned the table in front of the sofa on which they were sitting and noticed a bottle of vodka and a bottle of bitter lemon, both missing some content. Not bad.\n\n\"Snowy just passed one of her finals, so she brought a little something to celebrate it,\" said Lydia. \"Won't you congratulate her?\"\n\n\"All right! Well done babe, get over here so I can smooch you!\" I approached her, grabbed her hand for a hearty handshake and kissed her on both of her cheeks.\n\n\"Thanks! It's just the one, but it was the hardest this year,\" she said smilingly, \"Come on, pour yourself a glass, so I can toast with you too.\"\n\nI didn't have to be told twice. I quickly took a glass from the kitchen and mixed myself a drink, and we clinked our glasses.\n\n\"To Snowy, a major in... What's your major, anyway?\" I asked jokingly, and she replied by punching me in the thigh and shortly exclaiming: \"You idiot!\"\n\nThe evening was unexpectedly becoming amusing. Since the girls were a couple of rounds ahead of me, they quickly began to talk louder, giggle without any reason and were getting really relaxed. After I had done a couple of quick shots, the effects took me over as well, so I started slowly changing the subject to Snowy's nemesis -- sex. I knew she would start to blush, but this time it seemed that her happiness and the amount of drink would get her to open up a bit.\n\nAnd it did. She actually admitted not having a boyfriend for a while and that she was on a dry spell for a few months -- which, incidentally, helped her to focus on her academic duties. Of course, Lydia digressed into more girly parts of the subject which I couldn't care less about, so I rolled a joint.\n\nAfter a really good spliff and a couple more drinks, we were getting seriously dazed. Snowy was on a roll, being visibly high and drunk, and it was apparent that she was inadvertently getting more opened up. So I took that as a cue to steer the conversation back to sex.\n\n\"So, Snowy, it's been a drought, ey? I bet both of your hands are operating at full capacity?\" I asked directly, half-expecting her sudden withdrawal and some muttering -- or at least being declared a pervert.\n\n\"Every day. I don't get out of bed without it,\" she answered without any hesitation. Alcohol lowered her guard. \"But I bet you still jerk off more often than me.\"\n\n\"Heeey... We have sex almost every day, he couldn't possibly do more,\" Lydia interrupted our little exchange, \"I wear him out enough so that he doesn't have to do it himself.\"\n\nBoth Snowy and I burst out laughing. I turned toward Lydia, put my hand on her thigh and said pitifully: \"Of course, darling, I never masturbate.\" And then I continued to laugh my ass off. Sometimes she really seemed too naive not to be considered a bit dumb.\n\n\"Oh come on, you pig... Admit it, how many times?\" Now Lydia suddenly became curious.\n\nI raised my hand showing a victory sign.\n\n\"Twice? A week?\" Lydia's questions were led by some common female logic. However, I shook my head.\n\n\"Daily?\"\n\nThis time I nodded.\n\n\"Even if we fuck at least half an hour a day?\" Lydia was in disbelief, but Snowy looked at me approvingly.\n\n\"Yep... Oh, come on! It's not as if I'm hiding that from you. And, like, you don't play with yourself?\" As they say, the attack is the best form of defense -- if there was any reason to defend at that moment.\n\n\"Well, yeah, true. But not more than a few times a week, not as much as you do. Still, I cum many times more than you when we fuck,\" said Lydia praising me inadvertently, causing Snowy to nod approvingly again -- and to even wink at me this time.\n\n\"Oi! He's mine; I'm not giving him to you that cheaply,\" hissed Lydia at Snowy jokingly, while instinctively grabbing my hand. Then she turned around towards me again and continued: \"When do you find the time? I only caught you a couple of times...\"\n\n\"When? Whenever. You know how it goes with us men -- I get an itch on my balls, I start scratching, one thing leads to the other and... Well, there we go.\" My answer got them both laughing.\n\n\"Damn, I envy you both. I really miss a dick,\" complained Snowy. \"And I mean any kind of a dick, just as long as it can do something.\"\n\nSnowy's complaint was just what I needed: \"Look, I can jump in if you're in that kind of trouble. Just schedule in advance so I can plan my calendar.\" I was joking, but my intoxicated brain immediately created that mental image.\n\n\"Oh really? You're offering yourself so shamelessly? Are you trying to say that I'm not good enough for you?\" Lydia asked me, her voice something in between being jumpy and teasing even though she could see and hear that I wasn't seriously offering myself.\n\n\"Honey, you know you're more than enough for me. This would just be a favor to your tormented friend. You know, so she can give her hands some rest.\" This made Snowy and me laugh again.\n\n\"Yeah, sure. It would just give me a new incentive. I'd probably also start to show the peace sign for a while,\" Snowy said through her laughter. And then she suddenly got serious and conspiratorially leaned towards us: \"So, you two... You've never thought about, you know, doing some kinky stuff?\"\n\n\"What do you mean, kinky?\" Lydia replied with a counter-question.\n\n\"I don't know... Like anal, or S&amp;M, or... You know, group sex,\" answered Snowy, and even as tipsy as she was, she was still blushing.\n\nOk, to be honest -- we even opened a profile on one of the websites used to find various sex partners. We talked about trying something if we found someone interesting. But since the vast majority of the users were solo men that didn't interest us, and the 'bisexual girls' turned out to be either fakes or not our type, we gave up on it. Well, I didn't give up on it in my imagination, of course.\n\n\"Anal? Honey, that's not kinky, that's foreplay,\" replied Lydia proudly, making Snowy open her mouth in amazement a bit. But Lydia continued calmly: \"We're not into S&amp;M -- maybe some light bondage and stuff -- and we actually were browsing online for a... An opportunity, so to say, but nothing turned up.\"\n\n\"Wow, you lucky bastards! Oh my, It's gotten hot in here,\" said Snowy snorting, and suddenly she was taking off a thin vest she had on her. That left her in a tight t-shirt with a considerable v-line, releasing a substantial amount of her humongous bosom out in the open. I didn't even try to avert my eyes away. She continued: \"I'm jealous of you and your sex life... Hey! My eyes are up here!\" She noticed my stare, which I moved up to her eyes for a second, and then immediately turned back to her tits.\n\n\"Yeah, I know, but I'm currently staring at your boobs,\" I replied nonchalantly. I looked at Lydia, but she was staring in the same direction as I was. \"They're really amazing, there's no doubt,\" I complimented her honestly.\n\n\"Oh come on, they're so big I don't know where to put them.\"\n\n\"Give me some,\" replied Lydia and instinctively grabbed one of Snowy's knockers. \"Man, they're firm!\"\n\nLydia's casual feeling of Snowy's boobs turned on the machinery in my pants. I had only a thin pair of pants and light boxers on, so I was hoping it wasn't noticeable.\n\nThe discussion briefly turned away from Snowy's boobs, but as the evening progressed we were coming back to sex issues repeatedly, this way or another. Concurrently, as the amounts of alcohol drank got higher, an idea was forming in my head. I shortly weighed whether to go with it or not, until the drink decided I have nothing to lose. At the moment when the discussion was about groin trimming (Lydia and I were completely smooth, Snowy was sometimes trimmed almost to nothing, and sometimes shaven with a thin landing strip above), I decided it was time.\n\n\"Girls, I have an idea. Let's play a game.\"\n\n\"What game?\" Asked Lydia.\n\n\"How about a game of poker?\"\n\n\"Do you by any chance mean strip-poker?\" Snowy asked.\n\n\"Well... Sure, why not!\" This turned out even better since it seemed as if that wasn't my original idea.\n\n\"No way! I'm not gonna...\" Snowy became defensive as expected, her face almost cherry-red.\n\n\"Why not, Snowy?\" To my amazement, that was Lydia. I honestly thought it would be two of them against me, but this was now unexpectedly great turn of events. So I let Lydia continue: \"Look, honey, he's gonna lose anyway, so he'll have to dance around with his dick bouncing when we start ordering him around.\"\n\n\"Ah... Nooo...\" Snowy was still on the defense, but the alcohol was preventing her from being her stubborn, shy self.\n\n\"No, really, as Lydia says, I have the worst of luck in these games. Come on; you only live once! When was the last time you played?\" I decided to go with \"wild youth\" tactics.\n\n\"I've never played.\"\n\n\"Never? Oh, you've gotta play it at least once in your life. At least you're among friends here, nothing to be ashamed of. We're...\" I looked at Lydia, who winked at me and took over: \"We can stop whenever you feel bad about it.\"\n\n\"Ahem... OK, let's play. But if I want to stop, I'm out.\"\n\n\"Deal.\" I shook her hand and got up to get a deck of cards. I came back and briefly explained the game. Since they both knew the rules, it was as easy as pie.\n\n\"So, we'll play regular, nothing fancy. Five cards each, one switch up to three cards, no folding. OK?\" I asked, and they both nodded.\n\n\"Wait! Hold on! How many pieces of clothing you two have on yourselves?\" Asked Snowy, probably in fear that we each have three pairs of socks and seven types of underwear.\n\n\"I have a t-shirt, pants, socks, and boxers,\" I answered. Lydia had a bra, but no socks.\n\n\"Socks are counted as two items?\" Snowy asked again. I nodded. Just to make the decision a bit easier for her. So, she had 6 items of clothing on her; I had five, Lydia four. No complaints there.\n\nI dealt a hand. First up, I had two pairs, and Snowy had three of a kind. Lydia ended up with nothing, so she stripped out of her t-shirt and was left in a nice sports bra. She had a perfectly flat tummy, which always made me horny.\n\nI lost the next hand with a pair of tens, so I took one sock off.\n\nThe losses were spread evenly in the next few hands, so Snowy was left in her bra, pants, and panties, I had my pants and boxers, and Lydia was in her lingerie -- OK, a sports' set of underwear. Only now was it clearly visible how big were the Snowy's tits. Her bra was definitely a DD, and it was filled up to the brim. I could hardly wait to see those knockers out in the open finally.\n\nNew hand. I had a straight. Snowy got three of a kind. Lydia got nothing. So she just got up casually and lifted her bra over her head. She had the amazing pair of tits -- C cup. Since she was pale-skinned, her nipples were light-pink, but they would soon get the reddish fill when they were warmed up. Even though I've seen them every day, on this occasion, they aroused me even more than usual. I was nursing at least a semi.\n\n\"Wow baby, these are something,\" Snowy blabbed instinctively.\n\n\"Well, I definitely love them,\" replied Lydia and proudly squeezed them both with her hands. OK, now I was much closer to a full erection than before.\n\n\"Let's move on!\" I said without hesitation and continued to deal, already all worked up because of impending removal of Snowy's bra. But, it was necessary to remove her jeans before that.\n\nI got four queens. Lydia had a pair of eights. I was already at peace with Lydia getting naked when Snowy threw her cards on the table. She had nothing. She slowly got up from the sofa, took a deep breath and lowered her pants, flashing white thongs at us. As she pulled her legs out, she quickly moved to sit back down, but Lydia stopped her mid-descent: \"Hey, hey, hey! Wait a minute. Spin around first!\"\n\n\"Yeah, right! I'm already uncomfortable,\" said Snowy, lowering her ass back on the couch. \"So much about him getting naked first. Look at him, still with his pants on.\"\n\n\"What can I say, I'm on a roll today,\" I replied smugly.\n\nI lost my next hand on purpose, leaving me in boxers only. It was clear now that someone will stay naked -- or at least topless -- after the next hand.\n\nI dealt the cards and -- oh, boy, was I in luck. No card higher than nine, and no chance for a straight. I made a three-card switch, ending up with a pair of eights. So I threw them down, expecting a certain loss and removal of my last cover when Snowy blurted out: \"Ah, fuck it\" How do you get eights on top of my sevens...\"\n\nLydia and I exchanged meaningful glances. Finally, the glorious bosom will be appearing in front of us. Snowy was so shy that even Lydia never got a glimpse of her boobs. We even placed a bet a long time ago on the shape of her nipples. I went with big, round and pink; Lydia claimed they were oval and in a darker tone. The winner will be doing the dishes for three days.\n\nSnowy looked like she might pull out of the game for a moment or two, but then she downed her drink and quickly, as if she was afraid of a sudden change of heart, unhooked her bra and set her magnificent globes free. And they were phenomenal. Even though she tried to hide them with her elbows and any other part of her body, it was simply impossible. They were amazing, really firm considering their size, with almost no sag whatsoever. And her nipples were rather small and perfectly round. So, no dishes duty for either of us. But a definite hard-on in my boxers rose, making me fold down a bit to hide the excitement which was soon to be uncovered.\n\n\"Oh, Snowy, you're not gonna hide those spectacular domes now?\" I asked, teasing her gently.\n\n\"Ah... Ok, here you go!\" She rose her arms up and proudly stuck her chest out, even though her face was in shade of 'embarrassment red, ' and her eyes were looking at some distant point on the ceiling. \"You happy now?\"\n\n\"Wow! OK, I'll hold out with my comments for now, but you'll be getting a compliment really soon,\" I said, pretty much stating the obvious, but Lydia looked at me confusedly as if she didn't get my hint. So I continued: \"Let's go! There's some underwear to take off! After next hand, someone's getting nude, heh heh.\"\n\nAnd we got going. Cards were immediately kind to me -- I got a pair of aces, a king, and two minor digits. I switched the digits and got another ace and a king -- giving me a perfect full-house. So I was pretty sure that I wasn't going to be the first bare-ass. Girls switched three cards each. Snowy ended up with a pair of queens, and Lydia with nothing.\n\n\"Woohoo, love, let's see your naked tush!\" Snowy giggled ungracefully, while Lydia got up and pulled down her panties as if she was alone and getting ready for a shower. Her shaved little pussy appeared in all her beauty. She crumpled the panties in her hands and threw them at me, and I instinctively grabbed them, put them on my face and took a deep breath. They were moist. Lydia was aroused by the situation. I looked at her, and she sat down, without a care in the world, folding her legs in a butterfly pose so that her entire slit was clearly visible from my position. As her outer lips parted, I could see that she was getting wet, and my erection got even harder.",
        "\"Wow, girlfriend. You're really something to look at. Jesus...\" Snowy was also staring. And as much as she tried to hide it, she liked what she saw. And then she straightened herself out and looked at me quizzically: \"So, what if she loses again now?\" That was a pretty logical question. And, to be honest, one that I've not given much thought before since my only goal was to get Snowy to take off her clothes.\n\n\"Hmmm, let's see... OK, it'll be like this: if Lydia gets the weakest hand, she'll have to do what we order her to. Us two will strip down, of course.\"\n\n\"Sure. And I'm not losing the next hand, that's certain,\" said Snowy with false confidence.\n\nAnd, indeed, she didn't lose. Neither did Lydia. It was me, with a feeble pair of nines. My erection subsided a notch, but it was clear that I was neither flaccid nor relaxed. Still, it didn't worry me too much. I got up and pulled down my boxers in a swift movement. I was neither too big, nor small. Above average and, in Lydia's own words, perfectly shaped. And it was obviously more than enough for Snowy to inhale loudly and spread her eyes vividly.\n\n\"So, guess you're on an upwards trajectory, darling,\" said Lydia and snorted. \"There you go, Snowy, that thing goes inside me on a daily basis.\"\n\n\"Aha... Sure... Nice one,\" muttered Snowy, while I sat down and decided to act cool.\n\n\"What's up Snowy? Haven't seen a live dick in a while?\" I poked her a bit, pulling her back to reality.\n\n\"No, not really. Sorry about the staring. Let's keep going.\" She was all in a hurry now. \"Sooo, like, I have the first assignment for you naked ones: the one with the weakest hand must play with their nipples until they get hard.\n\nLydia and I looked at each other and laughed. \"Sure!\" We answered in unison.\n\nLydia lost. Snowy was relieved since she knew she still had her panties on, and I was pleased to watch my girl play with her boobs.\n\n\"Come on, Lyd... And don't you be holding back on me, do it like you'd do it for real.\" Snowy was all courageous now.\n\n\"Don't worry Snowy, that's the only way I know how,\" answered Lydia with a velvety tone of voice. Then she put two fingers of each hand in her mouth and slowly licked them around. As she gently squeezed her tits with her palms, she gently pinched the tips of her nipples just like she loved me to do it. While she did it, she alternately stared into mine, then Snowy's eyes.\n\nSuffice to say, I was as hard ever, which Snowy noticed as soon as Lydia finished her performance. Not that I even attempted to hide it. On the contrary, I sat with my legs spread wide, fully opened towards both of them.\n\n\"Damn, girl, that was sexy... And I see that you got you man excited, heh heh.\"\n\nLydia looked at my cock and smiled. \"It gets like that really easily, and I never mind. Do you mind, Snowy?\" She asked the question with the same velvety tone as before her tit play.\n\n\"No. Not me. I love dick, especially hard one.\"\n\n\"Yeah yeah... It's time to strip you bare, Snowy dear,\" I said, cooing at her, while already shuffling the deck.\n\n\"Wait a minute! Your assignment: the loser must suck the nipples of the other one for twenty seconds.\"\n\n\"No problem, dear. But you'll be the loser.\"\n\nI got a three of a kind -- kings. Lydia got three tens. Snowy stared at us, and then she slowly lowered her cards. A pair of queens.\n\n\"Fuck! And I was certain I was on a winning streak!\"\n\n\"Well, what goes around... Let's go Snowy, take 'em off!\" Lydia ordered, smirking.\n\n\"Can I give up now?\" Snowy's asked, without any conviction in her voice.\n\n\"Not now. You should've said it before the hand was dealt. You can't chicken out now. Let's go, its' time to see what's hiding in those thongs of yours.\" Lydia had no intention to let her off the hook. Fortunately, Snowy was drunk enough, as well as encouraged with Lydia's and mine casualness, so she rapidly removed her thongs. But she was extremely careful we don't see the most important bit.\n\n\"Booooo! That's indecent hiding, right there!\" I tried to tempt her a bit.\n\n\"Come on! This is much more than I ever did. I'm kinda embarrassed...\"\n\n\"OK, but this is it. No pulling out of the game anymore. OK?\"\n\n\"What do you mean?\"\n\n\"OK, now the rules are the following: we're all naked, but the game continues. Before each hand is dealt, one of us orders a task. Either the person with the weakest hand must do something alone, or the person holding the weakest hand must do something to the one holding the winning hand. If anyone refuses to do the task, the penalty is one shot of vodka. As we are all pretty drunk already, I would advise against opting for the penalty -- unless you prefer making love to a toilet bowl, that is...\"\n\n\"Wow, that's cruel,\" cried out Snowy.\n\n\"Are you in or out?\" Lidya asked Snowy. \"When you weren't naked you were handing out tasks like a drill sergeant.\"\n\n\"You know what? You only live once. Let's go! High fives!\" So we all high-fived each other -- Snowy without lifting far from the sofa.\n\n\"OK, since I was the first one to lose the panties, I suggest that I'm the first one to issue a task,\" proposed Lydia. It was a sound proposal. She continued without even waiting for Snowy or me to reply: \"So I suggest the same thing that Snowy suggested before.\"\n\nThat was also more than a sound proposal.\n\nNext hand saw Snowy win, and Lydia lose. Which meant that Lydia was going to suck on Snowy's boobs for 20 seconds. Not bad.\n\nLydia jumped up: \"Well, honey, if it needs to be done...\" I loved her enthusiasm.\n\n\"Oh. Well... I've never had my nipples sucked by a woman. Who knows, I just might like it, right?\"\n\nLydia got up and approached Snowy, who stuck her chest out. They were both giggling and awkwardly closing in on each other for a couple of seconds, and then Lydia decided to dive in. She grabbed each boob in one hand -- meaning as much of each boob she could fit in her hands -- and started to lick each of her nipples slowly. Snowy first laughed, then slowly stopped laughing, then closed her eyes and let herself enjoy the unexpected comfort she began to feel. Although I was supposed to count seconds, I forgot to do it somewhere between '2' and '3' and just enjoyed the view. Snowy's right nipple was hard, visibly erect and two shades darker than before, while the left one was in Lydia's mouth. I don't even need to mention that my cock was as hard as steel. It was a sight to remember, and I was hoping that it was just the beginning rather than closure of the evening. Still, as the game was still on, it was my duty as supervisor to interrupt them.\n\n\"OK, time's up.\"\n\nLydia slowly released Snowy's left nipple out of her gentle tooth grip, while staring me right in the eyes and smiling all the while. I never imagined my girlfriend would be so interested in girl's tits. Snowy's eyes slowly opened, and girls looked at each other.\n\nFinally, after a couple of seconds of intense eye-to-eye stare between them, Snowy spoke: \"This... This was really good. When did you learn how to handle boobs, love?\"\n\n\"Let's just say that I finally tried something that I was truly interested in. I practiced in my imagination,\" answered Lydia with a noticeable grin on her face. She slowly moved away from Snowy and sat down on the floor, on a soft carpet that covered the whole area in front of the sofa and the coffee table. She sat in a butterfly pose again, shamelessly exposing her visibly wet pussy. She had a really handsome snatch, and she was freshly shaven. Outer lips were just appropriately covering the upper part and the clit, and her inner labia were gently protruding between them. She loved to spread them when she played with herself or when she was inviting me into her.\n\nIt was my turn to set a task. And I had a cunning plan -- that is, a cunning plan that could have backfired, but I was counting on the stars to be on my side.\n\n\"So, the loser... Must jump up and down -- and I mean really jump -- for twenty seconds, in the middle of the room. And the hands can't cover or hold anything up.\"\n\nGirls immediately burst out laughing. \"You rotten bastard,\" hissed Snowy through her laughter, \"it must have not been with me in mind, right?\"\n\n\"Of course you were, this is the golden opportunity. No objections now, let's play!\"\n\n\"Oh, man! You're gonna lose; karma's going to get you. I then I will be laughing at your sausage flapping around.\" She was still laughing, but at the same time, she was examining my sausage which varied between really hard and unbelievably hard.\n\nThe hand didn't end up well -- for Snowy. She got nothing. So she got up slowly, primarily oriented on hiding her pussy from our view. But it couldn't last for long. She was almost completely shaven (bar the thin landing strip) and top notch. My dick was stuck in 'unbelievably hard.'\n\n\"Come on Snowy, hop hop!\" Lydia cheered and clapped her hands.\n\n\"Fuck off!\" replied Snowy. \"But someone better be counting. I'm not gonna jump around until next week.\"\n\nShe began to hop, slowly, and her tits expectedly caught the momentum. She attempted to grab them with her hands, but Lydia and I immediately raised complaints.\n\n\"Come on, baby. Olimpic mode -- faster, higher, stronger! This is nothing. You either jump as much as you can, or I'll stop counting,\" I cheered, laughing. She looked at me like she was about to knock me out with her boob. But, she knew we would raise hell if she would start to boycott now, so she sighed loudly and begun to really jump. The sight was amazing. Her tits flew up and down, her ass vibrated, and with each jump she spread her legs just enough for me to get a glimpse of her entire pussy. We all laughed, and I tried to intake the sight of everything there was to see. She looked like Salma Hayek on a serotonin high. Even though I really wanted her to continue, realizing it wouldn't be fair, I stopped her by loudly counting 'twenty.'\n\n\"Oh, man. This was exhausting.\" As she sat down on the sofa, this time she cared a lot less about hiding herself. She sat down with one leg bent under her other knee, so the top of her pussy was in my clear view. \"You two had your fun?\"\n\n\"Yes!\" We answered in unison and laughed.\n\n\"And now,\" Snowy looked at us with malice, \"I will be the one laughing since I am giving out the assignment. Which will be as follows...\" She paused for a bit of drama. \"Loser must play with himself -- or herself -- for half a minute.\"\n\nWell, well... It seemed that Snowy decided to start playing for real. Lydia looked at me and winked. I liked Lydia liking where the things were heading.\n\n\"All right...\" I didn't even notice that I said it out loud, thinking how one of the girls will be the loser i.e. the performer. Still...\n\n\"So, you like beating off in front of other people, eh? Want a raincoat so you can flash us, old-school style?\" Snowy was suddenly all over me.\n\n\"Well, you can already see everything, raincoat or no. And I prefer to watch. I believe I'll be the spectator in this case.\"\n\n\"Yeah... I love it when they get cocky. Remember, no hiding, you'll set yourself up so that we can see everything,\" replied Snowy, and winked at me. Someone seemed to be really looking forward to this task.\n\nI shuffled the deck and dealt the cards. And, in accordance with the classic storytelling sequence of events, I lost. I was full of myself while throwing my three kings on the table when suddenly Lydia and Snowy downed me with their straights.\n\nSnowy reclined victoriously and looked directly at my dick: \"OK, let's see how you do it since you brag about all the practice you have.\"\n\nI briefly glanced at Lydia, but she just looked at me with intent. When she noticed I was looking at her, she just issued a brief order: \"You lost. Get going.\"\n\nSo, I decided, if things were as they were, to do it properly. I spread my legs a bit and turned around so that my groin was directed straight at Snowy. I grabbed my almost completely hard cock in my hand and slowly pulled my foreskin over its head. It was shiny and lubed with precum, gleaming under the room's artificial lights. I began to jerk it off slowly, but just fast enough to make it fully hard, grabbing my balls in my other hand and gently squeezing them the way I enjoyed the most. All the while I was staring directly into Snowy's eyes. She tried to look simply amused, but she was devouring my cock with her eyes and following the motion of my hand. This made me even more aroused, so I upped the tempo. Unconsciously, she put her hand on her right tit and slightly spread her legs, giving me an unobstructed view of her crotch. Her pussy was really beautiful, freshly shaven, with just a thin black landing strip stretching up from the end of her slit. Its outer lips closed it in a perfect shell, so I immediately started to imagine what the pink insides look like.\n\n\"OK, that's enough,\" Lydia suddenly broke the spell. \"You,\" she pointed at me, \"really took that seriously. You can't cum -- yet.\" My cock was rock hard in my hand. I slowly released it but left the foreskin unrolled so that the shiny lubed knob was exposed for their pleasure. Lydia then turned to Snowy: \"And I see that you got bedazzled with the view, eh? You can let your tit go now.\"\n\nSnowy snapped out of it and looked down, only then noticing that she was fondling her right breast.\n\n\"Oops! Heh heh,\" giggled drunkenly Snowy, and then replaced her tit with her glass, taking a few gulps. \"Sorry, Lyd, didn't want it to look wrong but... Ah, fuck it, this was sexy. Your man knows how to handle his tool.\"\n\nThis made me laugh, feeling my pride going up a level. I looked down and mentally high-fived myself.\n\n\"Don't worry girl; I don't mind. It would feel much worse if you didn't like it, if you know what I mean,\" answered Lydia and winked at Snowy, continuing: \"So it's my turn now. OK. Two people with weakest hands get to kiss each other for half a minute. But no pecks, it has to be with tongue and everything.\"\n\nI thought this was a bit of a step back -- perhaps Lydia minded the previous scene a bit, so she tried to lower the tension. Still, it was going to be good because I was either to be kissed or to watch two naked girls french-kissing. I dealt the cards, and Snowy ran us into the ground with four of jacks. This didn't make Lydia sad a bit -- actually, she grinned and quickly got up on her feet: \"Come on darling, get up. You're not expecting me to kiss you across the table?\"\n\nI obeyed without objecting and approached her. Even though we kissed thousands of times, this was our first time doing it naked in front of someone else. My cock immediately twitched a couple of times, as if it wanted to show that it can grow some more and get even harder. Our lips touched, and our tongues began to intertwine, and soon we pulled ourselves completely onto each other. As Lydia had really long legs, my dick and her pussy were directly aligned. As soon as she felt my knob poking her crotch, she raised her heels and spread her thighs, just enough so my manhood would slide directly between her legs. Then she lowered herself back, leaning her cunt onto my shaft. Our kissing got more passionate, and we both began to rub on each other. I immediately noticed that Lydia was soaking wet. Not 'foreplay' wet, but 'waterfalls' wet. She slid over my cock as if it was a perfectly lubed rail. We completely forgot ourselves and started to squeeze each other's butts, kissing as if the World around us didn't exist. I was so horny that I was ready to adjust myself just enough to insert my cock in Lydia steaming insides when suddenly Snowy raised her voice: \"Oi, oi! Pleeease stop, right now. You'll start fucking right here in front of me! God, this was some kissing. Come on, move apart, let's play on. Now I feel all warmed up.\"\n\nLydia slowly moved away from me, whispering into my ear: \"Be tough. I think it's her turn to lose one now.\" She smiled and winked at me. We both sat down -- she on the floor, I on the chair. My dick was all shiny from Lydia's juices, and Snowy didn't miss that, slightly shifting her position to get a bit more comfortable. She appeared to be more and more akin to her nudity.\n\nI thought for a bit and came up with a perfect task: \"Sooo, it'll go like this: the loser must give the winner a lap dance. And I mean, the real strip-club version -- the dancer is the master, and the receiver can't use the hands.\"\n\n\"Ah shit. No way. I can't do that. How do I...\" Snowy began to complain immediately.\n\nLydia got up and put Isaac Hayes on -- followed by instructions to Snowy: \"Honey, you'll just follow this rhythm. By the way, how can you be so sure that you'll lose?\"\n\n\"It's not that. It's that... I don't know... Maybe a bit over the line?\" Snowy stuttered, suddenly feeling insecure and shy again.\n\n\"I think that we've already crossed that line we were supposed to stop at so this evening would remain normal. So there's nothing to worry about, is there, dear?\"\n\nAs Lydia said that, I felt relieved because it was finally out in the open. As much as the stuff was taking it's 'natural' course (helped a lot with alcohol and weed), there was much more going on than in some usual evening hangout. To Lydia and me, and especially to Snowy, this was a kind of full disclosure. And I was delighted that Lydia found all of this to be cool -- if not more than that. On the contrary, Lydia enticed the further play (together with me, of course). And even when Snowy complained, it didn't appear too convincing. There was obviously a small part of her attempting to maintain a \"good girl\" appearance, but the desire to do something naughty and fun seemed to seep out of her on all sides.\n\nAfter few seconds of intense silence, Snowy looked at Lydia, frowned and smiled simultaneously, and just said: \"Deal!\"\n\nI got a full house, jacks over queens, so I was almost certain that I was getting the lap dance. The only question was who will be the dancer. Lydia had two pairs -- aces and deuces. With her head down, Snowy slowly lowered the cards on the table. She had a pair of kings. Even Jack Nicholson would be envious of my smile if he saw it. I immediately checked Lydia, who winked at me and nodded. And then she spoke: \"C'mon Snowy, let's he how much you can make this boy crazy. Not as if it'll take a lot of effort. I think thirty seconds will be more than enough.\" After that, she got up and turned up the volume of the music.\n\nI set myself up on the chair, and Snowy meekly got up from the couch, fighting herself again. She was sexy as hell, and her ass was simply perfect.\n\n\"So, I just start dancing?\" Her eyes had a begging look in them, but that didn't stop her to glance multiple times at my hardened member, still glistening from Lydia's juices.\n\nI spread my legs slowly, just enough so that my cock sprung completely free and aimed directly towards Snowy's face. \"Yep, just do it.\"\n\nShe began slowly, gently swaying her hips to the rhythm. She turned her back towards me and started to jiggle it somewhere in level with my knees. She kept her distance just enough so no accidental contact with my crotch could happen. It was visible that she put more effort into avoiding touching me than in following the music, not to even mention any sensuality. Even though she had a divine, perky and firm ass, currently bobbing in front of my eyes, her excessive shame and lack of enthusiasm had an adverse effect on me -- instead of getting more aroused by the lap dance, I was beginning to cool down.\n\n\"Heeey!\". It was Lydia. Her tone feigned anger, but it still contained a genuine commandeering note. \"What kind of dance is this? I mean, his dick is getting softer. Get it back up -- all the way!\"\n\nSnowy looked me in the eyes, then at my dick, and then at Lydia. \"You want that?\" Snowy asked Lydia provocatively. Lydia just smiled and nodded. \"OK. Yeah, OK... Now it's gonna be... And I ain't gonna be guilty of his, um, explosion.\"",
        "\"Honey, if you get to be that good, I'll make notes of everything so I can repeat it later.\"\n\n\"Crank up the music!\" It was an order. From Snowy. Who turned back to me. She stared directly into my eyes and stopped blinking. Her gaze was insanely intensive. I never saw her like that. Hell, I couldn't even imagine her staring at someone like that. She licked her lips, very slowly. All the blood that left my cock suddenly began to gush back.\n\nShe swayed her hips gently as she leaned over me, putting her hands on my thighs. In a swift move, completely in sync with the rhythm of the tune playing, she put the fingers of her hand on my lips and began sliding them slowly downward, across my neck and chest. Her digits were slightly flexed, just enough for me to feel her fingernails scratching my nipples and my stomach. Then she lowered her head and began twirling it around, tips of her hair brushing the head of my dick with every circle she made. Without me even noticing, her fingers were already on my pubic bone, and just as I was expecting them to touch my ever-hardening cock, she bypassed it by a fraction of an inch, sliding her fingertips over my groin. All this was making me unbelievably horny, realizing that Lydia and I have just awoken a dormant sexual predator and were releasing her off the chain.\n\nAfter a few moments where it felt like she was about to go down on me, Snowy suddenly straightened up and grabbed my shoulders with her hands. Her boobs were no more than a couple of inches from my face -- beautiful, magnificent and with nipples as hard as my cock, they were effortlessly gliding through the air directly in front of my eyes. I constrained myself harder than ever before not to actively engage by extending my arms and grabbing those two perfect melons into my hands. Her thighs squeezed my legs together as she slid up and down my thighs, just so that her pussy brushed against one of my legs at a time. She was wet, and she was leaving shiny traces of her juices on my upper legs. I looked up at her face for a moment, just as she slowly opened her eyes and gave me a look that would have not much lesser men than me spurt in an instant. She smiled at me and bit her upper lip.\n\nSnowy turned around, giving me the view of her back and her ass, just the way she started the show. However, she didn't hesitate one moment this time. She twerked her buttocks in just the right rhythm, occasionally touching my crotch while my cock was twinging as if it wanted to shed its own skin. In a few moments, both of her hands were on my knees, and her ass went down, precisely inserting my dick in between her ass cheeks. And then she squeezed and began to shuffle. Needless to say, it was out of this world. She had an amazing control over her muscles, choosing exactly which part of which muscle to contract, and which to relax. My hands cramped around the hind legs of the chair as I burned out of a desire to simply grab Snowy's hips and ram her onto my spear -- balls deep.\n\nI turned my gaze towards Lydia for a moment. Not only had she shown none of the expected jealousy, but she actually gently rubbed her clit while watching the show. That fact alone brought me to the brink of the orgasm, and I moaned loudly just as I would every time I felt it coming. Fortunately, Lydia noticed that and quickly acted to prevent my ejaculation. \"Wow, how the time flies. Snowy, love, time's up. I wish it hadn't, but rules are rules...\" As she said it, she got up to turn down the volume.\n\nSnowy slowed down, taking her time to do it, and raised her ass up, letting my cock spring out from her crack just like a veiny jack-in-the-box. She got upright and slowly walked back to the sofa, sitting down with all the measure of one who knows and enjoys being the center of attention. She looked at me first -- all of me, definitely -- and gave me a wicked smile before turning to Lydia. \"You asked for it -- you got it.\"\n\n\"Snowy, dear, this was... Oh... I can only say that I have been soaking up your moves with my full attention,\" said Lydia, taking in a deep breath. She was still sitting in a lotus position, her pussy spread and gleaming from all the juices. \"How about you, darling? You still breathing?\" she asked me with a noticeable arousal in her eyes.\n\n\"My love... Don't get me wrong, but I feel really, really great,\" I replied, feeling like a stud in heat.\n\n\"Honey... I get you completely. If I feel this good, I can only guess how great you are feeling,\" Lydia said. I thought I knew rather well what her levels of sexual curiosity were, but this exceeded all of my expectations. Imagination was one thing, but this was something completely different. Not only was she not jealous, but she was also actually enjoying this foreplay between Snowy, her and me.\n\nThere was a definite sexual vibe in the air now. I knew I was fully up and running without any doubt, since my erection was now permanent, and I could see that Lydia was also experiencing similar sensations. I glanced at Snowy, who sat on the sofa in a way that her feet were on the couch and her knees were against her tits, while her beautiful innie was slightly ajar. Her eyes were wild, her pupils dilated, and her mouth stretched into a grin that said everything about how this last assignment affected her. She looked at me, then at Lydia, then back at me, and slowly started to talk. \"OK. It's my turn now to give out the quest... Umph... The winner gets from the loser...\" she stuttered, taking a deep breath in between every few words \"...half a minute... of handiwork,\" she barely pronounced, strongly exhaling as she said it, covering her mouth with her hands.\n\nLydia and I gave each other the looks. Now we were past innocent plays. Snowy's assignment gave two-to-three odds that one of us was going to end up in a very, very personal contact with Snowy. As I stared at Lydia, I was again waiting for that moment when her mind would simply switch to the naturally expected protectiveness. Due to that, I was sure that I was keeping a deadpan face. Instead, I was grinning around my head with excitement. And Lydia sent me a kiss and winked at me.\n\n\"Snowy, dear, my hat's off to you,\" Lyda said to her, then turning to me. \"And you deal the cards, so we'll see who's doing whom.\"\n\nI dealt the cards, ending up with nothing, even after we switched the cards. That meant that my fingers were going to end up in someone's pussy, and now it was just a question in which one. Lydia had two pairs -- tens and kings. Snowy gripped her cards tightly.\n\n\"I don't know,\" she began, hiding her face behind the cards. \"I don't know if I can-\"\n\n\"Darling, you chose the assignment,\" Lydia interrupted her with 'stern' voice. \"It would really be fucked up if you folded or even quit right now. Not to mention you'd have to down a glass of neat vodka. Look, if you won -- you won. You got nothing to complain about. I'm not complaining, and it's my boyfriend who's gonna give you half a minute of pleasure. And trust me, he knows how to do it.\"\n\nSnowy slowly lowered her cards down. She had three aces. \"So, if I feel bad about it, can I stop it?\" she asked.\n\nDear God, she was able to go from the sexy vixen down to insecure teenager in just a few minutes. OK, it was funny, but also a bit tenuous, especially since I was sprung up like a damn crossbow. So I couldn't take it anymore. \"Jesus Christ, Snowy! Two minutes ago you were squeezing my dick with your ass, where's the problem now? It will be your pleasure, trust me.\"\n\nAs I said that, I got up and sat next to her, putting my hand on her knee and pulling it gently towards me, spreading her legs slightly. \"Look, we're all adults, and no one minds it...\" I said, staring directly into her eyes as my hand was slowly ascending up her thigh. She wasn't trying to stop me.\n\n\"But go slowly, I'm really sensitive,\" she pleaded, turning her gaze towards Lydia the next moment. \"Lyd, you OK with this?\"\n\n\"Of course I am,\" replied Lydia. \"If I weren't, I'd have already stopped the game. Now stop talking and just relax.\"\n\nHearing Lydia say those words gave me even more incentive to give my best in the next thirty seconds. My hand was gliding towards the inside of Snowy's thighs until I reached her crotch. I stared directly into Snowy's eyes all the time, but her gaze constantly shifted between my eyes, my hand approaching her pussy and, occasionally, my hard, veiny cock covered with a combination of Lydia's juices and precum. I gently brushed over her landing strip with my finger, and she inhaled sharply, her pupils dilating some more. I grabbed her tit with my other hand, placing her erect nipple between my fingers. She closed her eyes for a moment and licked her lips. No doubt, she enjoyed the touch intensely.\n\nI slid two of my fingers across her wet slit, widening it gently. There was another sharp intake of breath from Snowy, followed by her biting her lower lip. She relaxed her legs and opened up for me. I looked down and saw one of the most beautiful pussies I ever had the fortune to witness in person. Inner lips were thin and gentle, with such delicate, pink cover protecting the slightly protruding clit. I caressed her opening and then circled my finger around her button, using my other hand to squeeze her tit.\n\nSnowy looked at me, releasing a breath \"Mhmm... Harder...\"\n\nI smiled at her and obeyed her order. I began rubbing her clit with my thumb and inserted my index finger into her. That made Snowy's next moan much louder.\n\n\"Uuuuh-huh!\"\n\nI started to fuck her gently with my finger while I circled my thumb around her now exposed clitoris, working to relax her completely, but the reaction I got was way stronger and louder than that. She began to moan as if we were mid-fucking. Her pussy released a waterfall, and her pelvis began moving like she was riding my palm.\n\nI squeezed her boob harder, making her nipple even more erect -- which convinced me I was doing a perfect job -- but she suddenly grabbed my hand and pushed it hard onto her tit. \"Squeeze me harder. Rougher! Oh yeah!\" Half for show, and half for her own pleasure, she grabbed her other tit and pulled on her nipple really hard. As I copied the move, she yelped with pleasure and rammed herself hard on my finger.\n\nI turned my gaze towards Lydia, who was playing with her own tits and devouring every moment of Snowy's loud enjoyment. She saw me looking at her and smiled. I gave her a telepathic question, and she nodded. 'Go for it' was her silent, but unmistakable answer. Knowing full well where I wanted to go, she approved me doing it to Snowy.\n\nI spread Snowy's pussy lips even wider with my middle finger and then joined that digit to the index finger inside her pussy. Her whole body shook. OK, I knew I was good at it, but this felt as if I have pulled a pin from a sexual grenade. I began finger-fucking her hard, locating her g-spot in the process.\n\n\"Oooh yeah! Yes! More! More!\" Snowy yelled out in those brief moment she managed to intake enough air between loud 'Oohs' and \"Mmmm hmmms.' She was mashing her tit and pulling on her nipple so hard that it looked painful, but it was obviously getting her off immensely.\n\nI managed to locate that hard, spongy knob in her cunt and began to work it. I circled around it, then went quickly back and forth, ramming my fingers deep into her occasionally. That threw her over the edge as she began to moan so loudly that my ears stung. She arched her back, almost bending her head backward all the way to the seat.\n\n\"OOOOH! Fuckmefuckmefuckmefuckme!\" screamed Snowy uncontrollably. Even though I was pleasuring her for less than a minute, she was as ecstatic as if she was being fucked for hours. For a fraction of a second, I began having second thoughts, overthinking it as only a stupid man would do. She noticed immediately and grabbed my hand as I slowly began to pull my fingers out of her pussy, yelling at me with her deep, throaty voice: \"Don't you dare stopping now! Finish it!\"\n\nEven though I was momentarily startled by her reaction, she didn't have to say it twice. I doubled my tempo, with one hand working on her clit, and three fingers of the other hand in her pussy. She was on the brink of explosion, pulling on both of her tits as far as her skin would allow her, throwing her head back and forth uncontrollably, all accompanied by throaty moans and yells consisting of 'Yeeeeeah!' and \"Moooore!'. I glanced at Lydia for a second, noticing she was staring at the scene wide-eyed and unconsciously rubbing her clit.\n\nAnd then, out of the blue, despite all of my manual busting of her cunt, Snowy quieted down and relaxed completely. She wasn't even breathing. It lasted for a few seconds, but it seemed an eternity to me, not knowing if she was losing it or if she maybe even had some health problem. Until she exploded. I'd love to say it was a strong orgasm, but it wouldn't do it any justice. It was a meteor crash. Her body shook and contracted as if she was being electrocuted. Her pussy squeezed my fingers so hard that I feared it might break them. Her screams would wake up the dead. Anyone who was present in our building at that moment presumed it was either sex or murder happening.\n\n\"JEEEEESUUUS! OOOOOOOH! I'm cooooomiiiiiiiing!\" Snowy felt the need to clarify for anyone in half-a-mile radius. I kept on rubbing while she, after clearly too much time, perceived again the feeling of being sexually satisfied by another person. Even though she hadn't laid a touch on me, the act made me so horny that I was feeling on the brink of an orgasm myself, taking extra caution not to let her grab my cock and make me cum in a millisecond.\n\nAfter some time had passed -- hard to say how much, but it seemed really long -- Snowy's twitching and moaning withered down, and she settled back deep into the sofa, satisfied and relaxed. The biggest difference was that she was now sitting with her legs fully opened, while her pussy, groin and lower part of her belly were shiny from gallons of juices that flew out of her. I move away from her slowly, but she hadn't even flinched, remaining frozen and staring at some indistinct point of space with a smile going around her head.\n\n\"Oh, right. Your time's up, heh heh,\" Lydia suddenly interrupted the silence. All of us laughed, with me sitting down on the floor somewhat clumsily.\n\n\"Yeah... Definitely, time's up... Jesus... Dear...God,\" Snowy spoke out, chopping the sentence with her grins. Then she paused, looked at me, and threw a sock into my face. \"I told you I was sensitive!\" This made all of us roll down laughing.\n\n\"And Lydia told you I was good,\" I replied through the laughs. \"You knew it was coming and didn't stop, so- \"\n\n\"Yeah, right, as if I'd stop that,\" Snowy interrupted me. \"Oh my, it was so good. Can we have one more go, I think I missed some parts?\" she asked half-jokingly, pouring herself another drink and downing it in one go. This broke any remaining tension (if there even were any from the moment my hands touched Snowy's pussy), and stopping the game was not an option anymore. Also, Snowy's orgasm definitely killed any stage fright she might have had, as well as any shame she was feeling before. She sat in front of us, naked and fully spread, as if it was the most common thing in the world.\n\nBoth Lydia and I came to a conclusion that anything can go from that moment, and that any rebellion was out of the question now. This made Lydia rub her hands in pleasure since it was her turn to set the task. She took a sip of her drink and gleamingly said: \"OK. A simple one. Loser licks or blows the winner for thirty seconds. And, if there is any justice, it would be my turn to win, heh heh.\"\n\n\"But if I win, I can't guarantee there won't be another badaboom badabang!\" Snowy exclaimed, laughing at herself.\n\n\"That's it, Snowy, that's the spirit! You just keep cumming as much as you like,\" I replied and began to deal the cards.\n\nThis time the cards weren't to Snowy's delight, granting her with only two jacks. I had a bit more luck, getting a pair of kings, and Lydia began to celebrate with a winner's jig. She threw three aces on the table and downed her drink.\n\n\"C'mon baby girl, you're gonna give some smooch to my pussyyyy,\" she said to Snowy in delight, dropping to the floor, bending backward, spreading her legs and leaning on her elbows in one swift move. Her pussy was spread and covered in juices.\n\n\"Shiiiit...\" Snowy replied, but with audible pleasure. \"I never ate anyone's pussy, so... If I'm not doing it right, just tell me and show me how,\" she pleaded Lydia as she was already dislodging from the sofa towards her. Then she turned towards me: \"And you -- don't you laugh if I don't do it right, I'd manage you without thinking.\"\n\nThat made me laugh, and my cock twitch.\n\n\"Don't you worry, darling, there'll be time for that,\" Lydia commented what Snowy said to me. Then she turned toward me and winked before concentrating back on Snowy, who was on all fours and staring at Lydia's crotch. \"Just slow and steady, do me the way you'd want to be handled,\" Lydia reassured Snowy.\n\nSnowy lowered her head further down and approached Lydia's half-spread pussy lips with her mouth and nose: \"Smells lovely... Let's see what it tastes.\" Very slowly, as if she was trying to taste the hot soup without burning herself, she pouted her lips and kissed the top of Lydia's slit, which caused Lydia to snap her head backward and sigh in enjoyment. Snowy immediately looked upwards, and on seeing Lydia nodding in approval, brushed her tongue over the full length of Lydia's pussy, all the way down to the cleft.\n\n\"Mmmm... Lyd, this is very tasty,\" Snowy complimented Lydia's pussy. \"I think I need to try some more.\" And she dove down, causing Lydia to begin breathing more intensely and moan gently.\n\n\"Yep, Snowy, doing really well,\" Lydia said, visibly enjoying. \"Oh god, your lips are so soft.\"\n\nI settled myself in a position that guaranteed the best possible view. I avoided touching my cock as I was convinced that I would explode in a matter of seconds. Instead, I gently squeezed my balls simply to have something to do with my hands.\n\nLydia looked at me at one moment, probably to see if I was stupid enough to actually count those thirty seconds. Even if I really was that dumb, Lydia's look full of elation and arousal would convince me otherwise. She squeezed both of her tits and said to me: \"Honey, Snowy's amazing at this... Mhmm yeah.\"\n\n\"I can see, love,\" I replied. \"You have tons of time, no worries,\" I lied.\n\nSnowy accepted her task with a tenacity I would never imagine possible -- until this evening. She took the initiative and raised Lydia's ass from the floor with her hands to reach all the parts of Lydia's wet pussy with her tongue. She slowly circled with her tongue around Lydia's clitoris, then went lower and stuck it in Lydia's opened gap. Snowy had a rather long tongue, and she obviously knew how to use it, as Lydia was already far up on the arousal scale.\n\n\"Ohhh Snowy... Just like that, amazing!\" Lydia kept encouraging Snowy, and then she grabbed Snowy by the hair to press Snowy's face onto her pulsating cunt. At the same time, she began to twist her hips and moan louder and louder, which meant that she was at the point where she simply needed to have an orgasm. I definitely decided that thirty seconds would last as long as it takes.\n\n\"Love, finger me, come on, please,\" Lydia begged Snowy, who didn't hesitate for a moment and inserted one, quickly followed by the second finger into Lydia. Lydia screamed from pleasure, raised her ass off the floor and began to ram herself onto Snowy's fingers.\n\nSnowy was now doing to Lydia precisely what I was doing to Snowy no more than ten minutes ago. And that was a certain route to-\n\n\"OOOOOOOH! AAAAAAAH!\"\n\nThe orgasm hit Lydia like a thunderbolt. That was quicker than all of my expectations. According to my inner clock, it couldn't have been more than two or three minutes since Snowy began to do her. Lydia's back arched high, she squeezed her own tits hard and continued screaming in pleasure: \"YEEEEEES!\"",
        "Snowy became startled for a moment and almost stopped in mid-action, but Lydia quickly grabbed her hand and rammed her fingers back into the wet sex. \"Don't stop! Go Hardeeer!\" Lydia ordered in between orgasmic moans. Snowy quickly obeyed and began to finger-duck Lydia with impressive speed, and the moans, screams and panting kept on as Snowy proudly made her first lesbian encounter a commendable success.\n\nLydia's orgasms were always short and very intense, so she wanted to use them to the full extent. Because of that, Lydia's climax quickly began to subside, her body relaxing and collapsing on the floor. She calmed down completely, just breathing deeply with her eyes closed. Snowy gently pulled her fingers out of Lydia's pussy, which made Lydia flinch and giggle.\n\n\"It tickles!\" Lydia grabbed Snowy's hand instinctively and pressed her legs together. Her pussy was always extremely sensitive after a good orgasm. Still, she didn't push Snowy's had away, but rather pulled it (together with the rest of Snowy) towards her face. She first licked the fingers that were inside her until a few moments ago, and then pulled Snowy even closer, leaning onto her lips and giving her a firm kiss.\n\n\"Snowy, love... This was phenomenal,\" Lydia said, caressing Snowy's cheek.\n\n\"Oh yeah. You were super-quick.\"\n\n\"You know, I was horny all day today. Not to mention after we started to play this game.\"\n\n\"And I really enjoyed doing this. I had no idea I loved eating pussy.\"\n\n\"Now you know. And by god, you'll be repeating this soon,\" Lydia said.\n\n\"You know what, I just might, mhmm...\" They kissed again. And then started to whisper something to each other's ears, laughed, whispered again, and finally Snowy got off Lydia and sat on the floor across from me.\n\n\"What's up dude, kinda quiet?\" Snowy asked.\n\nHonestly, I was simply dumbstruck from the whole scene, with only two thoughts going through my head: a) 'don't touch yourself/don't come' and 'do not interfere, this is their task and their moment.' Snowy's question woke me up from the daydream. \"Oh? Well, look, you were really good -- amazing, actually. Snowy, you should do this more often, what do you say?\"\n\n\"Which one? Eat Lydia's pussy or play this game with you?\" she countered while her expression implied 'both.'\n\n\"Snowy, but the game isn't over yet,\" Lydia engaged before I managed to reply, just as she sat back up. She was glowing, and if it was possible, her smile would stretch a few feet off each side of her head. \"Come on, let's play. Honey, the assignment, please.\"\n\n\"I was in doubts now. I was the only one who didn't have an orgasm yet. Stil, there was no way to know how the cards would play out. I was adamant in not being a spectator again, even if it meant climaxing without being on the receiving end of the assignment. I grinned nastily.\n\n\"Come on! Spit it out!\" Snowy hurried me as if I was handing out prizes.\n\n\"OK. Since we got to the present point in time, it will go like this: two losers have to make the winner climax. They have to do it in a joint effort, and they may use any part of their body they want,\" I said, my grin not subsiding.\n\n\"Wow, Lyd... I think your mister is setting up something for himself, eh?\" Snowy asked Lydia, and winked at her, hardly trying to be conspicuous.\n\n\"I don't know -- why wouldn't one of us get some seconds?\" Lydia replied, also winking at Snowy.\n\nI dealt the cards. We were all lousy, switching three cards, and the girls were giggling and winking at each other constantly. I had a distinct feeling that there was some framing happening -- to my benefit, hopefully. I got three jacks, and threw them down not caring what would happen next -- I wasn't going to mind giving some more of my love to either of the girls. However, Lydia had a pair of tens, and Snowy got -- nothing.\n\n\"Well, well, my ladies...\" I inflated my chest proudly and laid down on my back. My cock was still at full mast and was constantly getting fresh lubrication from my precum. The girls laughed out loud and shared some more winks. So, it was pretty obvious that this was about to happen whatever task I gave out and however the hand turned out. It was my turn to cum, and they were both ready to help me with that. Together, nonetheless.\n\n\"Honey, I'm scared of touching you. You might explode immediately,\" Lydia said, giving me a gentle rub on the thigh.\n\n\"Lyd, that's why we'll take it slowly... If I can, I mean?\" Snowy asked, looking intensely at Lydia and waiting for the ultimate 'Go' signal.\n\n\"Of course you can,\" Lydia replied, smiling and biting her lip gently, \"but do take it slowly.\"\n\nOn cue, Snowy got on all fours and leaned over me. She gave me a gentle kiss on the lips. And her lips were incredibly soft and full; it was like kissing a soft pillow enveloped in moist, velvety skin. I kissed her back but left her completely in control. At the same time, Lydia took my big toe into her mouth and started to suck on it. An electric shock burst through me, going straight from Snowy's to Lydia's mouth, via my body and especially my already bursting dick.\n\nSnowy began to lower her lips and her tongue toward my neck. She had an incredible feeling for hitting all the right spots on my body, especially the most sensitive ones. At the same time, Lydia was gently rubbing her fingers up my calves, giving me a wet kiss here and there. It felt as phenomenal as it could ever get.\n\nSnowy's descent got her mouth down to my nipples, and she gently bit on one and pulled it. I groaned with pleasure, already feeling that any sense of control was leaving me. The fact that Lydia's fingers were already on my thighs added some more to the overall sense of near ecstasy.\n\n\"Oh, he's vocal... I find that so sexy on men,\" Snowy confessed staring directly into my eyes. I felt her hard nipples on my stomach, brushing against my skin and giving me the jitters, almost forgetting about the fact that Lydia was also there -- until the moment that Lydia's fingers touched my balls.\n\n\"Yeeeeeeah!\" I yelled out, making both of them laugh. Lydia knew that she could easily get me to the finish line in a few seconds, but that was not her intention. As it seemed, she wanted Snowy to have enough time to explore me properly.\n\nAnd Snowy's lips were already on my stomach, and her hair was getting tangled around my knob. I twitched my cock to give her a knock on the head, causing a devilish smile on her lips.\n\n\"Slow-ly. As I said, we'll get there,\" Snoy said, and then stopped. \"We'll get there, Lyd, or?\" she asked again, showing that she was still, even after all that happened, not feeling hundred percent confident that she could act as she pleased.\n\nInstead of replying immediately, Lydia grabbed my cock and pulled my foreskin all the way down. \"Snowy, love, turn your head around,\" she invited her.\n\nSnowy did exactly that, and my bulging, red lower head appeared just in front of her eyes. Lydia guided it with her hand directly onto Snowy's lips, who kissed it without thinking and opened her mouth to let it slide inside. Lydia was simultaneously jerking me off, kissing my groin and nutsack.\n\n\"Jesus!\" I muttered through my teeth. The feeling was -- well, it was exactly what every man would imagine in his threesome fantasy -- only infinitely better. Waves of pure pleasure were streaming through my body as further inches of my cock were disappearing in Snowy's mouth. She was good -- no, correction, she was fucking awesome. Her soft lips were seamlessly gliding over my shaft as her tongue was expertly working all around it, and the next moment she had almost all of it inside her mouth, sliding up and down the length of it with the exquisite touch. At the same time, Lydia was alternately sucking on my balls and jerking the part of my cock that was not currently occupied by Snowy.\n\nI knew I wasn't going to last long. My hips were already jerking, and I was letting out raspy involuntary moans and groans. Both of the girls seemed to get extra motivation out of it. Lydia also began to lick and kiss the base of my dick, massaging my balls just the way I liked the most. The girl quickly got in sync, jointly sucking my cock along its whole length, kissing each other as they got to the tip, and then one of them would simply swallow it.\n\nMy orgasm was now unstoppable. I began to pant in a quick rhythm, and Lydia, knowing exactly what was happening, grabbed my member and showed it quickly into Snowy's mouth. Snowy began to suck on my knob while Lydia was practically milking me directly into Snowy's mouth. I blew up. With one loud \"AAAAAARGH!\" I shot my first jet of semen directly into Snowy's mouth. She didn't even flinch, and I just felt her tongue collecting my cum. I ejected spurt after spurt of my sperm directly into Snowy's throat, yelling loudly and shaking from the strength of my climax. Lydia kept on jerking me off and squeezing every drop of my cum straight into her friend's mouth.\n\nAll of what was happening until that moment made me have one of the longest and strongest orgasms of my life. I felt like it lasted for minutes, and girls were draining me of all the juices I could possibly have given them. As long as my cock was hard, they had no intention of stopping. Even though I was evidently subsiding in every sense, and the last drops were dripping out of me, they simply couldn't have enough.\n\nOnly when I got past semi-hard towards flaccid, Snowy released my cock out of her mouth and Lydia released her grip on it. I saw the two of them smiling at each other and kissing each other passionately, and then I let my eyes close, taking in deep breaths.\n\n\"Yummm, your boy is tasty... I swallowed almost all of it, sorry,\" I heard Snowy apologizing to Lydia through a chuckle.\n\n\"Don't worry, I get some of that almost every day, so just enjoy the dessert.\"\n\nGirls lowered their heads on my belly. One of them was gently grazing her fingers over my completely flaccid dick. I was in heaven, or at least imagined this must have been what heaven felt like, and had no desire to move an inch for any reason whatsoever. We lay there for a long while, motionless and only occasionally giggling and caressing each other. The buzz from the drinks and the weed was still there, but the pure post-orgasmic calm was holding the torch and was in control of our mental states.\n\n\"We drained him good, eh?\" Snowy asked Lydia finally, breaking the silence.\n\n\"You scared he might have no strength for the next round?\" Lydia replied with another question, making both of them laugh.\n\nAnd, just like that, I dropped from heaven and into a place where the angels of the month probably go for a reward trip. \"The next round?\" I asked innocently.\n\n\"Honey... You don't expect us to stop now? I mean, we just got warmed up, but if you're done...\" Lydia didn't finish her sentence, but the implied was unmistakable. \"Am I right, Snowy?\"\n\n\"Darling, since we got to here, I ain't crazy to pack up and leave now. I can think of a lot of interesting tasks to perform,\" Snowy said, tapping my stomach with my cock.\n\n\"Yeah, but,\" Lydia raised her head and looked at both of us, \"I see no point in playing the game anymore.\"\n\nThis made Snowy a bit sad, as if she was being told that the party was coming to an end. \"Come on, Lyd, the game was totally awesome,\" she whined a bit.\n\n\"Oh, no, Snowy, that's not what I meant. I think we need something proactive. The game will slow us down. We're already naked, we had a go at each other, so there's no more point in testing ourselves out, right?\" Lydia comforted Snowy and gave her another kiss.\n\n\"So, how about we simply get on with fucking?\" I asked, almost rhetorically. The cat was out of the box; there was no point in even closing the empty box, let alone trying to put the cat back in.\n\nWithout a sound, the girls looked at each other, smiled, looked at me, and began to kiss again, this time very intensely. Lydia's hand was already on Snowy's tit, groping her with full force. I put my hands behind my head, leaned on them, and simply decided to enjoy the view. It was an extraordinary thing, watching two friends, none of them showing any bisexual tendencies before, getting it on like experienced lesbians and enjoying it without any prejudice. They were exploring every nook and cranny of each other's bodies, kissing lips, necks, shoulders -- and all of that directly above my slowly awakening cock. I fought my desire to join in immediately, knowing this was their moment.\n\nWithout any warning, Snowy pulled Lydia over me and got on top of her, creating a mesh of intertwined female limbs, tits, and hair. After a minute or so of super-intense mouth-to-mouth action spiced with Lydia's hands groping every inch of Snowy's ass, Snowy began to descend down Lydia's sweaty, sweet-tasting body, over her neck and onto her tits.\n\n\"Girl, I still haven't tried your titties, and they look so hot. You like it gentle or rough? I never played with someone else's tits, so I'd better ask,\" Snowy blurted out in one breath, making all of us laugh.\n\n\"Just be a bit gentler, they are really sensitive. You can suck, but don't bite,\" Lydia gave precise instructions. \"Oooh, just like that...\" she moaned as soon as Snowy put one of her nipples into her mouth.\n\nI took the liberty to move onto the sofa, giving myself a direct view of Snowy's round, plump ass and magnificent cameltoe that opened a tiny bit every time she would move her hips. My dick was almost fully hard again -- I mean, only the gayest of gay men or a complete misogynist would be able to watch this scene and not get aroused, no matter that he came only minutes ago.\n\n\"Wait a minute, dear,\" Lydia interrupted Snowy. \"It's time for you to go down on the floor. I really need to taste you finally.\"\n\nSnowy wordlessly turned on her back and spread her legs, presenting her cunt to me in full glory. She even gave herself a gentle rub and then spread it with her fingers. Just before Lydia placed her hand on that glorious innie pussy, Snowy winked at me with a devilish grin.\n\nLydia gently spread Snowy's full outer lips and kissed her clit, immediately making Snowy twitch.\n\n\"Oooh, yessss,\" Snowy moaned through her teeth as Lydia tongue began to work on her wet cunt.\n\n\"Snowy, I really... love doing this...I mean... this is... awesome... You taste... amazing,\" Lydia spoke in syllables in between kisses and licks she devoted to every inch of Snowy's pussy.\n\n\"Oh yeah?! Jesus! Put your finger inside\" Snowy sobbed, already halfway to ecstasy. Lydia readily obeyed and stuck her middle finger into Snowy's tight entrance. That made Snowy arch her back and release one really loud \"YESSSS!\", giving Lydia even more encouragement to begin finger-fucking her.\n\nI was staring in amazement, unconsciously pulling my foreskin down from the tip of my still heavily lubricated dick.\n\nIt didn't take much time for Lydia to shove a second finger into Snowy's pussy, making Snowy moan so loudly that it startled me. Talking about vocality in sex, Snowy was an absolute champion.\n\n\"Girrrrrl! Turn around....OOOH! And give yourself to me, NOW!\" Snowy bossed Lydia like some cadet.\n\nLydia, obviously surprised by the decisiveness of her usually shy friend, just laughed out quickly and made a hundred-eighty degrees spin into a sixty-nine position, placing her pussy directly above Snowy's pouted lips. Without hesitation, Snowy drove her tongue into Lydia, which was greeted by Lydia's sharp exhale full of sheer pleasure.\n\nI got up and began a tour around the girls to take in the view from all the angles, stopping on the side where Snowy was eating Lydia's pussy and fucking her pretty expertly for a beginner with her long, thick tongue.\n\nThe view and the sound of the two girls, whom I could hardly imagine doing something like this before this night, got me back into the state of full arousal. My cock was as hard as if I haven't come for days, and I started to squeeze my balls to pump the blood up some more. From my current perspective, I had the perfect view of Lydia's small, tight asshole, which I loved to work on and which Lydia loved to have licked, fingered and fucked. I wanted nothing more than to jump in, so I used the last atoms of my strength not to interrupt and to let the girl have their own fun as long as they felt like it.\n\nHowever, Lydia had a different idea. Obviously looking for me, she turned her head around and saw me standing behind her, devouring the scene with my eyes and slowly stroking my cock. She showed me to approach and then pointed behind her.\n\n\"Come here and fuck me, my love.\"\n\nOf course, I didn't need to have that said twice. I got down on my knees, placing them each side of Snowy's head and gently setting the tip of my dick onto the wet, burning entrance to Lydia's pussy. Just the slight brush made Lydia twist in pleasure. I looked down and saw Snowy grinning. My balls were just an inch from her face, and she immediately took the opportunity to lick them expertly all around. Then she grabbed my cock and began to rub it around Lydia's pussy.\n\n\"Put it inside me, please!\" Lydia cried out, and Snowy put her other hand on my ass, pushing me slowly into Lydia's pussy, but not letting more than the head to enter before pulling me out again.\n\n\"You want it, girl? Do you?!\" Snowy began to tease Lydia, sounding more and more like a fully dominant figure in this sexual encounter. She rubbed my cock against Lydia's swollen clit, causing my girl, her friend, to scream with a desire to be fucked.\n\n\"You put that thing inside me right now, or I'll bite your pussy off!\"\n\n\"OK. There you go then since you asked so nicely,\" Snowy said, adjusting my knob directly into Lydia's flooding sex, and pushing my ass roughly. I slid into Lydia without any resistance, which was not something that happened often, even when we were really horny.\n\n\"Oh, Jesus Fuck Damn!\" Lydia exclaimed as my whole length filled up her cunt. I began thrusting into her with long, slow thrusts, giving all of my inches full tour of Lydia's pussy, while my balls were being brushed against Snowy's out-sticking tongue.\n\n\"Hard, baby, fuck me hard!\" Lydia ordered, which meant she was ready for full throttle. And I gave it to her hard. I began ramming into her with all my strength, and Snowy quickly grabbed Lydia's thighs to settle her in one spot and try to work on Lydia's clit at the same time.\n\nEach collision of my hips with Lydia's ass was accompanied by a loud slap, and since Snowy was the one gripping her tightly, I had both of my hands loose. I immediately began spanking Lydia's ass and set the thumb of my other hand on her asshole.\n\n\"Oooh! Yes yes! Yeeees!\" Lydia yelled out as soon as my thumb broke the barrier and entered her ass. She was being worked to the max from all angles, and I was sure that she was unable to comprehend everything that was currently happening to her. Beneath me, I felt Snowy eating Lydia's clit with the vigor of a proper sex maniac, not caring one bit that my balls smashed her nose each time I rammed into my girl's cunt.\n\nThe harder I pumped into Lydia, the harder she moaned and shuddered every time my pubic bone hit her. When she began to twerk with her ass violently, I knew she was approaching the inevitable and that it was probably only a matter of seconds before her explosion. Snowy also probably noticed, as I looked down and noticed she was now rubbing Lydia's clit vigorously with her fingers, unable to steady Lydia in fixed position.\n\n\"OH SHIT!!! AAAAAAARGH!\" Lydia released a primal scream, pressing out all air deep from the bottom of her lungs like some animal in heat, as her pussy began to squeeze violently around my cock. This was probably one of the biggest, best orgasms I ever saw her have. Even Snowy was taken aback for a second, before realizing she should keep on rubbing that clit as fast as possible.\n\nShe came. And came, and came some more, to the point where I was amazed, taking into consideration what I said earlier about her relatively short orgasms. In comparison to that, this one seemed to take forever. I made the correction -- this was, without any doubt, the biggest and the best orgasm Lydia ever had with me present.",
        "Naturally, all good things come to an end, and so did Lydia's climax. I felt her pussy muscles relax and her knees beginning to buckle. I pulled out slowly, to which she giggled loudly. I knew there was no point in trying to fuck her some more after that since she definitely needed a break. Just as I pulled out completely, she got up unsteadily and half-walked, half-crawled to the sofa. She turned around and smiled at me, unable to utter a sound. I approached her and gave her a deep, sensual kiss.\n\n\"Oh my god, you're still that hard?\" Lydia asked, noticing my raging hard-on covered with fifty layers of her juices.\n\n\"Sure. It didn't take you long, and I came no more than half an hour ago,\" I shrugged.\n\n\"Snowy...\" Lydia called her, leaning her head to look at her friend who was laying on her side and playing casually with her pussy as if she was alone in the world.\n\n\"Yeah, girl?\" Snowy replied.\n\n\"I will give you a final task now.\"\n\n\"You want me to make your man come?\" Snowy asked, jumping up on her feet in a second.\n\n\"No...,\" said Lydia, making Snowy frown. \"I want you to fuck his brains out until both of you come. You two have my permission to do whatever the fuck you want after what you did to me just now.\"\n\nIn no more than two steps, Snowy was behind me, reaching around my waist and grabbing my cock in her hands. \"Hmmm... I just might do that.\"\n\nI turned around and kissed Snowy on the lips. I simply needed to taste them and feel them. They felt gentle, soft and wet. And tasted of both my cock and Lydia's pussy.\n\n\"Let's not waste any more time,\" Snowy pushed me off after no more than half a minute, continuing with her assertive attitude, and she laid down on her back on the sofa, just next to Lydia, spreading her legs wide in front of me. I glanced at Lydia for a second, only to get 'what are you waiting for' look from her. I got down on my knees again and leaned down. Snowy's pussy was right there in front of my face, slightly spread and absolutely glistening with all the wetness. I gently kissed the spot where her outer labia began to divide into the magnificent, gentle, pink crevice, and immediately got the response in the form of a loud moan.\n\nFor the first fifteen seconds, I was actually second-guessing what I was doing, all the time expecting Lydia to lose it and to call the night. Instead, as I glanced up, I saw my girl leaned towards Snowy's ear, whispering to her: \"He's gonna do you good, trust me. You are going to get fucked like you deserve.\"\n\nOnce I heard that I took it as a cue to forget anything else but Snowy's beautiful sex. To the point that I might sound boring - I never saw or touched a pussy more perfect than hers. I saw my share of pussies, before and after the events of that night, but Snowy's sex was simply a masterpiece. Moreover, she was as wet as an ocean and smelled of an incredible mixture of pussy juice and jasmine. I gently spread her outer labia and let my tongue loose on her small but fully engorged clitoris. She released a loud 'Oh yes!' and grabbed my hair with her hand, giving me a clear signal to keep on going.\n\nI twisted and twirled my tongue, snapping it directly over her clit, then around it, going down lower and tasting her all the way to her asshole. She didn't mind one bit and seemed to love whatever I was doing.\n\n\"Jesus, sis,\" Snowy spoke to Lydia, \"No wonder you let him do you all the time. This is... Aaaah!... Absolutely... Ooooh!\"\n\nI grabbed her voluptuous ass with both of my hands and raised it a bit, giving myself a better angle to explore every nook and cranny of that perfect cunt. Snowy was fully spread by now, each of her hands pulling hard on her nipples -- something that obviously turned her on immensely since she moaned with almost every breath now. Lydia, still spent up from her last orgasm, was giving Snowy a gentle treatment, kissing her neck and shoulders and caressing her thigh.\n\n\"Honey, I think you should give her the dick,\" Lydia said to me in a tone that sounded almost pleading but was at the same time resolute. Then she turned to Snowy: \"Snowy, you want his dick in you, don't you?\"\n\n\"Oh, fuck yes!\" Snowy exclaimed, a new flood suddenly gushing from her pussy.\n\nI got up and gave Snowy a wet kiss, which she returned with enormous zest as the tip of my cock nestled in her slit. Her gentle pink inner lips parted, and I entered her. What I hadn't expected was the tightness. Even though she was as wet as humanly possible, I had to inch my way inside her, and my every push was accompanied with an ever louder moan from Snowy.\n\n\"Oh my god, I missed this so much!\" yelled out Snowy as I finally made my way completely inside her and began to fuck her. \"Oh yes! Yes! Yes! YES!\" she moaned loudly with each of my thrusts, her decibels growing louder proportionally. Lydia slowly moved her hand down Snowy's belly, until she finally reached her swollen clit. I began pumping harder, seeing as Snowy was starting to lose her grip on reality really fast.\n\n\"Oh JEEESUS! This is SOOO GOOD! Fuckmefuckmefuckmeeeeee!\" Snowy screamed as I rammed her tight, gentle cunt with all the power I had in me, and with Lydia giving a perfect helping hand by rubbing Snowy ever closer to the climax. I held her legs up high and spread, enjoying the view of her huge tits bobbing and dancing up, down, left and right in the rhythm of my thrusts.\n\nI pulled out of her for just a second, mostly to catch my breath, and Snowy suddenly got up as if she was shot out of a catapult.\n\n\"Sit down. I wanna ride you until I cum,\" Snowy ordered, obviously regaining herself just long enough to get back into her dominant mode. As I was already panting slightly from continuous fucking, I didn't complain one bit.\n\nA soon as I was settled on the sofa, Snowy climbed onto me and expertly guided my dick back to the entrance of her pussy, sitting down on it balls deep as soon as the target was acquired.\n\n\"This is how I love to cum,\" she said to me and began to alternate between grinding her clit on my pubic bone and impaling herself fast and hard on my cock. She was very close now, and she was releasing one continuous moan of pure ecstasy. I took over pulling on her nipples and realized that she really loves it hard. The more I pulled, the more she enjoyed it and the more she pulled back, to the point where I feared I'd rip them off of her.\n\n\"That's it! Pull on them, hardeeeer!\" she commanded, making it certain I wouldn' mistake her pleasure for discomfort. \"I'm gonna..... AAAAAAAAH! FUCK YEEEEES!\" AAAAAH!\"\n\nFor the lack of a better word, Snowy blew up. Her movements became completely erratic, her voice turned to a deep, throaty baritone, and her whole body began to shake uncontrollably. She was jumping up and down on my cock, rubbing her clit with her fingers at an incredible frequency. As on cue, I felt myself losing it, and without any possibility of pulling out or even announcing what was going to happen, I began to cum deep inside Snowy with incredible power.\n\n\"Oooooh, fuuuuuck!\" I yelled out as my semen was filling up Snowy's orgasmic cunt. Jets of hot sperm shot int o Snowy's pussy obviously gave her another burst of energy, because she began to ride me even harder and faster, working at a pace that would make diesel engines envious. It was so powerful that I felt I was going to black out at one moment, feeling only my crotch still being ridden by the shy girl-turned-sex maniac and swaying of two big, firm tits right in front of my face. Both of us clenched, pushed, twitched and generally acted out of control as our joint orgasms created a small earthquake.\n\nSnowy rode me for as long as my cock was able to remain hard, and once my erection subsided enough to become impossible to continue, she leaned forward and crashed onto my shoulder. Lydia came nearer and kissed her deeply. Then she turned to me, gave me a look full of approval and love and caressed my hair gently as I slowly came back from another dimension.\n\nIt took Snowy a few minutes before she regained any sense of place or time and said softly: \"Guys, I can't thank you enough for this evening.\"\n\nBoth Lydia and I smiled and kissed her, then kissed each other some more, before I finally said: \"Next time, we play Scrabble.\""
    ],
    "authorname": "nad3536",
    "tags": [
        "exhibitionism",
        "strip poker",
        "threesome",
        "big tits",
        "lesbian",
        "voyeur"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/snowys-visit-ch-01"
}