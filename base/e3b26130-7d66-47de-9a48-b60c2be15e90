{
    "title": "Alex and Emma Pt. 06",
    "pages": [
        "===========================\n\nPART 6: BLAME IT ON POETRY\n\n===========================\n\nSaturday evening after I'd cleaned up, I insisted we order a pizza. There was a short discussion about why I refused to kiss a guy who ate onions, and Alex's insistence that he could eat a whole large on his own. Then we settled in on either side of the couch and had a heart-to-heart about absolutely nothing important over slices of a fresh, hot XL pie.\n\n\"What's your favorite thing to do when you're not in class and fucking subs?\"\n\n\"Who says I'm not always fucking subs for class?\" He picked up a piece of stray pepperoni from his plate, held it above his extended tongue, and flicked at the red circle.\n\nIt made me think of him teasing my clit, and I tried not to squirm. Somehow keeping my face straight, I said, \"Sex Ed really has changed since I was in school.\"\n\n\"Like you wouldn't believe.\" He winked at me. \"Open mic night.\"\n\nI raised an eyebrow and finished my slice. \"What's your favorite song?\"\n\n\"Nada.\"\n\n\"Nada? Who sings\u2014 Oh, you do stand-up comedy?\"\n\nHis grin widened. \"I'm a reciter, not a crooner or a clown.\"\n\nBoth eyebrows went up this time. \"Poetry? Impressive.\"\n\nHe raised his soda can high, his left hand fisted at his chest. \"'Where virtue is, these are more virtuous. Nor from mine own weak merits will I draw, the smallest fear or doubt of her revolt. For she had eyes and chose me. No, Iago, I'll see before I doubt, when I doubt, prove. And on this proof there is no more but this: Away at once with love or jealousy!' \"\n\n\"'Othello.' Nice. The only Shakespeare I actually liked and understood.\"\n\nHe tipped his chin to me. \"Very good, milady. And you? Care to impress me?\"\n\nI made a show of clearing my throat and sitting up straighter. Then I clasped my hands together below my breasts. \"''Twas brillig, and the slithy toves did gyre and gimble in the wabe: all mimsy were the borogoves, and the mome raths outgrabe.' \"\n\n\"Bravo!\" Alex clapped his hands. \"Not many can quote the 'Jabberwocky.' \"\n\n\"Thank you, kind Sir. I've always had a soft spot for anything in Wonderland. So, do you prefer the classics like Poe and Dickinson, or more modern verse?\"\n\nHis eyes shone brighter. \"You're looking at the artistic director for a very prestigious group of slam poets.\"\n\n\"Slam poets?\" I waved my hand when he motioned to the last piece of pizza. He had proven he could wolf down a large all by his lonesome...not that I had doubted him.\n\n\"Yes, it's quite popular for those who like poetry. Competitive, even, especially at universities. It's a lot of fun. Maybe you'd like to go sometime.\" He took a sip of soda then tilted the can and pointed his index finger at me. \"I have a meet next week. You're welcome to join me.\"\n\n\"You know what?\" I stood and stretched. \"I think I might just take you up on that invitation.\"\n\n\"Good. It'll give an old timer like you a good introduction to the new world of poetry.\"\n\nMy back was to him with the empty pizza box in hand. I paused and glanced over my shoulder. \"Maybe I should consider tying you up for once.\"\n\nHis eyes widened. \"Oh yeah? Why is that?\"\n\n\"Teach you to respect your elders.\"\n\nI left him to ponder that while I disposed of our garbage. When I turned around, he was leaning against the fridge, his hands in the front pockets of his jeans. I hadn't heard him follow me. Very sneaky.\n\nHe had put the same T-shirt from this morning back on after my disciplinary lesson. It hugged his upper body nicely. Very nicely. And you couldn't miss the mischievous look in his eyes...his smile. \"Mmm. Oh? How? How do you want me tied?\"\n\nLeaning my hips against the counter, I crossed my arms and thought for a moment. \"I'd tie you spread eagle on the bed. A blindfold and ball gag so you could only hear and feel me.\"\n\nDid I just see his shoulders shake?\n\n\"God knows, I'd be struggling just a bit. Arching and pulling on the ropes.\" He licked his lips, his voice a little lower when he continued. \"Mostly, just so you could watch me though.\"\n\nMy grin matched his now. \"And I'd be enjoying it the whole while, leaning over you with my breast against your hand. My pussy against your cock. My mouth against your chest. My fingers on your arms and legs. Sometimes pulling away, making you wonder if I'm going to actually touch you or not. Then dangling my nipple over you mouth, whispering for you to lick me. Intentionally pulling away to make you strain for it.\"\n\n\"Every touch would just make me shiver and moan, my cock throbbing at the feel of your skin on mine.\" His Adam's apple slowly bobbed, and I heard his quick inhale. \"I would arch hard for those nipples, yanking against the ropes. Tongue finally brushing over them, making me groan. My cock dripping for you.\"\n\n\"Then I'd lay between your spread legs, breathing on your cock. Letting my breasts and hair brush against it. Not touching with my hands or mouth.\"\n\nHe sucked his lower lip into his mouth for a moment. \"Mmmfff. I'd be trying to beg through the gag, nothing but moans coming out as my cock throbbed desperately in need of your touch.\"\n\nI mimicked him by putting my hands in the pockets of my sleep pants. The cool air of the room had helped, but my words...his words...our words...they all made my nipples pucker. Now that my arms weren't covering them, I was certain he could see evidence of my arousal through my thin tank top. Especially since I had foregone a bra after my shower, though I'd pulled on a thong. \"I want to leave the bed for a bit. Watch you writhing. Your cock bobbing. Your hands clutching at the air.\"\n\nHis gaze dropped, and one hand moved, adjusting himself through his jeans. He didn't even try to hide it. \"Mmm. God, I would be thrashing wildly. Swollen cock bouncing with every pull on the ropes. Moaning desperately into the gag, drool leaking from my mouth.\"\n\n\"Smiling, I would remove your blindfold. Clean up your mouth.\" I stood upright and took a tiny step toward him. Spoke a few more words, another step closer. And again. Slowly. Methodically. A cougar stalking her prey. \"And then sit on the end of the bed against a pile of pillows between where your ankles are bound to the footboard. Spreading my own legs, I would slowly stroke my fingers over my breasts. Twist and pull my nipples. Glide my hands down to my pussy, pulling my lips open for you to see how wet I am. Then I would rub my clit while you watched. Circle my entrance. Dip in and spread my essence around. My eyes on yours while I dip in again and bring my finger to my mouth, sucking on my sweetness.\"\n\nBy the time that I was done speaking, my breasts were grazing his chest and his back was pressed against the fridge.\n\n\"Fuck. Now I'd be flailing like mad.\" His voice was hoarse, and he visibly swallowed again. \"Moaning desperately into the gag, begging you to let me free with my eyes. Cock throbbing and dripping.\"\n\nI matched his tone, not backing away as I felt my hard nipples poke him. Close enough that I felt his hand tremble, his fingers brushing my thigh. I cocked the side of my mouth, knowing he was fighting wanting to touch me. Which I'd never said it was forbidden.\n\n\"And while you watch, I would come undone for you. My body shaking as my moans and cries overpower your muffled grunts.\"\n\nAlex closed his eyes, his head leaning back against the fridge now, too. \"Mmm. God, I would go a little mad myself as you did.\"\n\n\"Lying there, panting and jerking from aftershocks,\" I whispered in his ear when he turned his face away from me. I almost rebuked him for not looking at me, but I considered it would be fun to see how he'd react when all he had was his imagination.\n\n\"Writhing madly in the ropes. Barely aware of what's happening in my need,\" he continued.\n\nIt amazed me that he was able to retain such a lucid thought process. I, myself, was struggling not to kiss him senseless. Or yank his pants down and swallow his cock. I simply nodded then stroked a fingertip across his jaw. Noticed how his eyes squeezed tight for a moment.\n\n\"Mmm. My eyes would devour you desperately the whole time, my struggles frantic.\" He was whispering now, too. Licking his lips more often.\n\n\"When I recover,\" I said, trekking my finger to his neck, \"I would climb off the bed and turn my back on you to get something out of the dresser. Swaying my ass. Giving you a little dance.\"\n\nHe gasped loudly. I wasn't sure if it was from my words or where my finger was stroking. I had remembered our conversation last night. His revelation of his most sensitive spots. Like petting a kitty, I smoothed my fingertips down his neck over his carotid artery. So very close to one of his other erogenous zones that was hidden by the collar of his T-shirt.\n\n\"I tell you I promise not to hurt you. I just want to test your boundaries. Then I turn for you to see the flogger in my hand.\"\n\nAlex's whole body flinched then, trying to press away from me. But he had nowhere to go. And as he spoke, he kept pausing to swallow and lick his lips, his voice getting lower...quieter. \"I'd be growling like mad now, straining toward that ass, glued to it. The moment you turn, I'd shiver. A moan escaping the gag as I watched the flogger swing, my cock twitching with desire at the sight of it.\"\n\nI had only intended on teasing him with words. But an idea popped into my head. Along with the memories of something he'd said when we first met...and from earlier while he watched me shower. He liked to switch. And he had a treasure trove of toys in his dresser that were at my disposal.\n\nI stepped back and heard him moan. Then I laughed lowly. Payback was a bitch.\n\n\"Open your eyes, Sir.\"\n\nAlex blinked then slowly turned his head to face me. \"Yes, Little One?\"\n\nThe words he said were familiar to me, but not in the curious or dominating way I'd grown used to in such a short time. Instead, they were... cautious. As they should be.\n\nStroking my hand across his cheek again, I pursed my lips for a moment, his eyes searching mine almost desperately. \"I want to play.\"\n\nHe gulped. \"Play?\"\n\nI waggled both eyebrows. Was that sweat I saw on his forehead? \"Yes. With you.\"\n\n\"Me? Oh...okay.\"\n\n\"Come.\" I grabbed his left hand and started to walk away with him in tow. But I stopped, turned back to giggle at him, and said, \"I mean, walk with me. You won't be coming for quite a while.\"\n\nI didn't wait to see his expression. Though I was glad he obliged and followed down the hall.\n\nBack in his bedroom, I ordered him to strip and get on the bed in the way we had discussed. Then I turned my back on him and stripped. I knew he was watching because of his deep moan the moment I revealed my ass. I just smirked. This was going to be fun.\n\nI had success on the third try to find the toy drawer. When I did, the contents made me pause. The assortment included floggers, crops, blindfolds, ball gags, butt plugs, vibrators, different types of cuffs, and several bottles of lube and cleaner. There was even a metal hook with a ball on the curved end and an open ring on the other. The only thing missing was the rope he so fondly talked about.\n\nThe search continued through other drawers until I found a couple of neckties and two belts. With a deep breath, I selected a few items from the former drawer and turned to deposit them on the bed. But I stumbled back into the dresser, hugging the sex toys to my naked chest with a gasp.\n\nOn the bed, Alex had his limbs stretched out in the spread-eagle position. Just as I'd asked. And at the very center, his cock rose tall and proud. Higher up on the mattress, his head was propped on a pillow...and he was watching me intently.\n\nThe longer I stared, the more I realized my pussy was wet. That if I didn't pull myself together right now, I'd be a puddle on the floor. In more ways than one. I needed to be strong. So I threw back my shoulders, took a deep breath, and proceeded to prepare to seduce my new lover.\n\nFirst things first, I had to bind him. The ties worked on his wrists, and the belts on his ankles. Not as secure as rope would be, but maybe he'd solve that problem before our next encounter. Making sure they would hold at least temporarily, I moved on.\n\nPlacing the strap of the blindfold over his head but leaving the mask on his forehead, I reconsidered my decision not to gag him. No, I would save that for a time when he wasn't expecting it. Besides, I had other ideas for his mouth.\n\n\"Speak only when spoken to,\" I said, and he turned his head, following me as I approached the foot of the bed again. \"But feel free to make noises. No other rules. For right now.\"\n\nHe nodded and licked his lips. His cock even jerked like it was bobbing its understanding, as well.\n\nWalking slowly up the side of the bed, I dragged the falls of the rabbit skin flogger I'd chosen against the top of his foot. One side was blackish-gray fur; the other, light and thin like cloth. Together? I knew personally that the sensation was irresistibly stimulating. \"See? It's very soft. No pain, only pleasure.\"\n\nHis leg jerked, and he arched his hips the further up I went. The look in his eyes while he stared up at me...I could only describe it as blazing desire. Expressing his want. His need. Basically begging for it.\n\nI raised my leg and propped it on the side of the bed. His eyes dropped then widened when I swiped a finger through my pussy. Then I placed it in his mouth.\n\nAlex gasped, his lips and tongue eagerly wrapping around my digit. Sucking it as though he were trying to get to the bone. His moan sounded like he said, \"Thank you.\"\n\nI moaned as well and licked my lips. \"Do you like that?\"\n\nHe nodded, taking my finger all the way to the knuckle now. His eyelids flickered, and then he stared up at me. Waiting.\n\nIt was a bit of a struggle to free myself. Damn, he had good suction. I noticed my skin was red and had little indentations from his teeth when I finally had my finger back. I cocked an eyebrow at him, and he merely grinned innocently. As if.\n\nI pulled the blindfold over his eyes, making sure it fit snugly and yet wasn't too tight. I leaned down and whispered in his ear, \"Do you have a safeword, Sir?\"\n\nWhat I observed next made me shudder.\n\nAlex's jaw dropped with a gasp, and then a second later, his whole body seemed to relax. His head lolled to the side, his feet turned out. Even his fingers uncurled and hung limply from his restrained hands. As though I'd pulled a string and released all of the tension I'd been building up in him.\n\nI likened it all to sinking into a submissive mindset. I'd experienced it many times myself but had never seen it in another. Then again, I'd never switched and had always been on the receiving end.\n\nFinally, he gave a slight nod and tilted his head back toward me, whispering, \"It's 'percussive,'...uh...Little One.\"\n\nI grinned, noticing his hesitation on what to call me. Our titles weren't exactly conducive for our upside-down roles. But we could discuss alternate titles later if it came to that. For now, he wasn't to be talking much, anyway.\n\n\"Very well, Sir. Shall we begin?\"\n\nHe nodded again, pressing his lips together as though to tamper down something he was afraid to say.\n\nKnowing he couldn't see me, I walked back and forth around the bed. Watching how his head turned, trying to determine where I was. After several passes, I continued my path but occasionally dragged the flogger over his skin. An arm. A nipple. That V cut into his abs. One thigh. The opposite foot. Sometimes on the right. Sometimes on the left. Never in order. Never where he would suspect.\n\nAnd all the while, his cock swayed, the tip becoming shiny with precum.\n\nWith every touch of the falls to his skin, he moaned. The longer I did it, the louder he got until he was panting heavily, his tongue almost hanging out of his open mouth like a dog. I could see the raw need etched on his forehead...the parts of his face not beneath the mask.\n\nEach time I swept up his arm, his fingers grasped for the ends of the falls. On his leg and down to his ankle, his foot twitched. I continued for several minutes. Slowly, methodically, repeating the circuit. Mixing it up.\n\nAnd then I stopped to observe the results of my play thus far. I stroked the falls through my fingers, biting my lip to muffle my own whimpers at the glorious softness. God, how that must feel on someone who was used to being strong and manly. How it must break him down and strip away any veneer he'd built up to show any sensitive and emotional side hidden beneath.\n\nHis moans had changed to whimpers. His chest rose and fell so quickly. His hips were humping the air every few seconds. And his cock. My goodness. It was so hard the veins stood out.\n\nI decided to switch it up and dangled the flogger straight down over his cock, which moved with a life of its own. Lowering the falls just enough that the furred strands brushed against the tip of his erection. I was intrigued as his cock twitched, stirring the falls, which caused his cock to twitch again. First one then the other in an erotic, mesmerizing game like Newton's cradle.\n\nHe whimpered louder when I started to pull the flogger away.\n\n\"Yes? Do you have something to say, Sir?\"\n\nHis teeth clenched, and then he said huskily, \"Please. Please more.\"\n\nGrinning, I lowered the hilt inch by inch so that the falls surrounded his cock until the furry tips barely grazed his groin, apparently tickling his skin by the way I could see him shiver and gasp.\n\n\"Is that what you wanted, Sir?\"\n\nHe bit his lip, his hips humping faster, as though fucking the flogger.\n\nI twisted the hilt, letting the falls swirl around his cock. \"I asked you a question.\"\n\n\"Y-yes! This and more! Please, Little One!\" His voice hitched on the last two words.\n\nSmirking, I removed the flogger completely. Enjoying how he struggled before me. Imagining his internal fight against the control he was used to wielding. The restraint he'd held so far at calling me whatever it was at the forefront of his brain...the tip of his tongue.\n\nAfter a moment, he started to relax. I heard his deep inhale. And that's when I struck with the other flogger I'd chosen from the drawer.\n\nWith a flick of my wrist, the suede falls slipped through the air, striking his groin next to his cock.\n\nAlex arched at the contact, hissing and fists clenching as the thicker leather would have stung a little.\n\nEven I flinched at the sound of the slap against his skin. Rounding the bed, I repeated the action. Flick, slip, strike.\n\nHe yelped this time between his moans. His level of arousal had to be through the roof.\n\nI could feel my own dripping between my legs. Fuck. I so wanted to ride that cock. To feel him pushing up inside me like the hilt of the flogger in my fist\u2014hardness within tightness. But first, I wanted to play a little longer.\n\nA loud whimper brought me back to my victim, who was arching his back. Reminding me of the canvas on display, ready for the artist to continue creating something spectacular. His lips moved again, but no real words came out.\n\nStarting at his groin and working down to his feet, I flicked my wrist right-left-right-left against his leg. The sounds of suede hitting skin filled the room. Slap, slap, slap, slap. Drowning out his sounds.\n\nAgain on the other side from groin to foot, I repeated the process. Back to the left side. Another pass on the right.\n\nMy eyes constantly paid attention to the reddening of his skin as well as the bindings at his wrists and ankles. I wanted to ensure I wasn't harming him. Sometimes when a sub was in subspace, it was hard to articulate a safeword or even a signal, especially if they were under enough to not feel anything but pleasure. It then fell into the Dominant's hands to know when it was too much and back off.\n\nAt present, Alex still appeared to be lucid. Not \"in the throws of passion,\" but quite delicious all the same with his panting and squirming...the desperation in both acts making my own breathing hitch for a moment. I had never personally witnessed a resilient, naked man writhing helplessly on a bed while being flogged. I highly recommend it.",
        "When I'd collected my thoughts and refocused, I dragged the flogger from his left hip up his side, across his armpit, and up his outstretched arm. Once more, I pulled back before his fingers could grab the falls. Moving quickly back around the bed, I repeated the drag up his right side.\n\nAlex's body rippled with more and more shivers. It was a sensual dance against the sheets accentuated with the occasional gasp or moan. A delightful sight indeed.\n\nI stopped at the end of the bed, watching again. \"Have you had enough, Sir?\"\n\nAt my words, his head lifted up, turning, trying to find me. Then he shook it.\n\n\"Tell me. Tell me what you want, Sir,\" I threw his own words back at him, sidling up along his left side.\n\nHe struggled both against the restraints and apparently to speak because he kept wetting his lips and swallowing. All that managed to come out was a weak whimper.\n\nI snapped my wrist, letting the flogger strike his cock. \"I gave you a command.\"\n\nHis whimper was more of a shriek this time. His limbs relaxed again. When he finally spoke, I could hear the defeat in his voice. But also the relief. \"More, Mistress! I want more!\"\n\nI blinked. Was that what he'd been trying to say all along? Mistress? I'd never thought of myself that way, but it fit. And it was apparently a fantasy of his. I wouldn't deny him.\n\nGrinning widely, I snapped my wrist again at his cock. \"Very good, Sir.\"\n\nJust like on his legs, I repeatedly flicked back and forth, connecting with his cock and groin. He yelped each time. And I noticed after the first two swats that his hands were fisted in the sheets. That he was apparently using it as leverage because he had arched his back...and held himself bowed that way, which kept his cock as the highest point. Offering himself to me. Telling me he wanted more.\n\nI licked my lips at his submission. At how his cock looked like it was glowing. Red from the flogging. Shiny from his dripping precum. I could almost see the blood pumping through the extended veins.\n\nMy gaze lifted, and I took in the sweat glistening on his chest. His forehead. How he licked his lips, apparently trying to get moisture into his mouth. I wanted to continue flogging him. It raised my heartrate to see him so excited to be my sub. Yet I wanted something else... something for me.\n\nTossing the flogger to the end of the bed, I quickly straddled his chest and scooted up so my pussy hit his chin. \"Drink, Sir. Quench your thirst.\"\n\nAlex utterly devoured me with a ravenous passion I'd not felt in a very long time. A barrage of tongue and teeth and lips attacked my pussy. All that was missing was his hands on my ass, holding me close to his mouth. I would have done it myself, but I was hanging onto the wooden headboard so I didn't fall over. Behind me, I could feel him humping the air, his body coming alive again as though the taste of me fed him. And when anyone else would have given up from exhaustion, he continued.\n\nHe seemed desperate for more. Would he do anything for his Mistress?\n\nGasping and arching myself, I used my grip above as leverage to grind my hips against his face. Moaning at the feel of his tongue delving inside of me now. But it was momentary and he returned to sliding his tongue back across my clit, sucking it into his mouth. Lavishing it. Servicing me.\n\nUnable to resist any longer, I scuttled around and leaned forward until my breasts pressed to his groin. In one fell swoop, I engulfed his cock. He made no audible sound, though I felt his body lurch up. And teeth scraped my pussy for a moment when he released me. I prepared to take his cum into my mouth, but he somehow held back.\n\nThe heat of the stings from the flogger lingered. I felt it under my palms when I pressed them to his hips and thighs. Just as I felt the ridges of his cock on my tongue. The pulsing of his blood, feeding his erection, keeping him hard.\n\nI wanted to suck him with reckless abandon, but I didn't want to cause him any pain. I'd tortured him plenty already. Wrapping my hands around the base of his cock, I slowly withdrew, my tongue stroking the red marks the flogger had left behind.\n\nAlex appeared to want none of that has he began humping into my mouth, whimpering with raw, naked desire, mumbling \"more\" before he returned to worshipping my clit again.\n\nWith a growl, I ground back against him and took his cock back into my mouth. Easing it now a little at a time. Humming around it as his tongue danced over me. And his hips kept up their bouncing, as though urging me to go faster and deeper.\n\nI grabbed the flogger from between his feet and pulled back, flicking it at his cock. \"Be still, Sir.\"\n\nHe froze, whimpering.\n\nOnce he settled his hips, I resumed using my tongue as a salve to the fresh marks. My hand cupped and stroked his balls. Taking just the crown into my mouth and running my tongue along the ridge just as he circled my entrance with his tongue.\n\nNeed...desire...was driving me now. Soon, tasting him was no longer enough. I wanted more.\n\nAfter a few quick strokes with my hand on his cock, I swung my legs around and laid over him. He was so hard, his cock sat at an unmoving, upward angle. The tip slid easily into me. Stretching me as I wiggled backwards, my fluids lubricating the way.\n\nEyes closed, just like him, I focused on my sense of touch. A gasp as the crown pushed in further. Deeper. A growl when he throbbed after I squeezed around him. Every shallow breath I took had a responsive gasp and twitch from him.\n\nWhen I was fully seated, I bit my lip and wiggled my hips, enjoying how he filled me completely. His heart thumped under my palms braced on his chest. Fingers splayed out, I rocked gently over him. Felt a deep shudder in his hips. A small jerk away. Both telling me he was restraining his own desires.\n\nI rose up and swiped two fingers from my right hand between my legs. Then I pressed my breasts to his chest, my left hand on the bed in the curve of his armpit. Placing my fingers at his mouth, tracing his lips, I whispered, \"Do you want to fuck me, Sir?\"\n\nIn my current position crouched over him, I knew he had ample room to slide in and out of me with just a thrust of his hips. So I waited, holding my body still.\n\nHe didn't respond. Not even to lick my fingers. But because he was still heaving, his body still moved. Especially his cock.\n\nThey were the tiniest of shaking movements, but I still felt them. Teasing. Reminding me we were still connected in the most intimate way.\n\nAfter a full minute per the alarm clock, I leaned up to his ear, which lifted my pussy a little more up his shaft. I stuck my sticky fingers in his mouth, not giving him a choice about tasting them now. \"Make your Mistress come. Come inside me.\"\n\nAlex groaned at that. And like a bullet released from a gun\u2014my words the trigger\u2014his cock shot up into me so hard I lurched forward.\n\nCatching my balance by gripping the pillow beside his head and the sheet beneath his right arm, I growled, \"Is this what you wanted, Sir? You may speak.\"\n\n\"Oh fuck! Already... so... close!\" He ground out the words as he ground up into me.\n\nOver and over. Not able to withdraw completely but creating the most wonderful sensations in me.\n\nHe whimpered, mumbling something about being submissive...domesticated.\n\nI rolled my head against his chest. Bucking my hips when he hit my sweet spot. \"There, Sir! Don't stop. Faster. Harder. Please.\"\n\nHe obeyed, though I knew it had to be hard for him in his physical position...his predicament.\n\nStroking his cheek, I felt him press into my palm. My other hand slipped up his arm, and his fingers laced through mine. It was the two of us again, skin on skin with nothing but sweat in between.\n\nHis hand gripped mine tighter, and that tingling inside grew. I knew it wouldn't take long for me. I kissed him, tasting salt on his lips. Some of his precum. My own arousal.\n\n\"Please, Sir.\" I managed to get my other hand up to his, my arms spread eagle now, too. Our lips locked again, my breasts smashed to his chest, his cock ramming me below. I arched up, feeling it right there in my core. A little more... \"Don't hold back, Sir. I want you to come in me.\"\n\nI felt him nod just before he plowed into me hard.\n\n\"Oh, God...fuck...Mmm!\" And then I screamed as the fire slowly exploded, reaching its tendrils out across my pussy. My back. Making my hips rock against him. Struggling to speak, I demanded he obey. \"Come now, Sir!\"\n\nHe moved his head below me, his kiss hard just like his cock stabbing me.\n\nAnd then I collapsed on him. Spent. Shaking. Struggling to breathe.\n\nSlowly, one thought became clear in my haze: he had shaken his head.\n\nAfter that session just hours ago where he'd disciplined me with orgasm denial because I had glanced away in the heat of the moment? After encouraging me to switch roles with him and enter a domain I was unfamiliar with? After driving me to do more and more to him despite my fears I might harm him?\n\nAfter all that, the fucking bastard had the audacity to defy me by refusing to come himself?\n\n###"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "bdsm",
        "bondage",
        "flogging",
        "seduction",
        "switching"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/alex-and-emma-pt-06"
}