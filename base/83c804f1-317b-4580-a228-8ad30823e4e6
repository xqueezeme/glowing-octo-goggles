{
    "title": "Who Knew?",
    "pages": [
        "It was Sunday November 22th, 2015 and I had taken my nine-year-old son to Disneyland to celebrate my birthday. He had finally reached the age where got excited instead of whiny when we had to stand in line for a ride. I was really enjoying the day when my phone buzzed in my pocket and, half annoyed, I pulled it out. As the next few minutes went by waiting for the Pirates of the Caribbean, I stared at the text messages on my phone in complete and utter disbelief. They were between me and my son's twenty-one year old babysitter Lindsay. \n\n\"Just wanted to say Happy Birthday. Hope it is a good 1 4 U.\"\n\nI had responded back with \"Thanks! It is shaping up that way.\" \n\n\"Well, it is your special day so what Daddy wants, Daddy should be able to get.\" \n\n\"What the fuck? Daddy?\" I thought as I typed my reply, \"You would think so huh?\"\n\n\"Aww does Daddy need some help today?\" came an almost instant response.\n\n\"Daddy can always use help.\"\n\n\"Really?\" She replied with a winking icon.\n\n\"Yep.\" I smirked as I hit Send.\n\n\"If I knew where you where maybe I could come by and give you some. Help that is.\"\n\n\"Disneyland, there will be ticket waiting at Will Call for you, if you want it.\"\n\n\"I'll be on Main Street in an hour.\"\n\nWhat the hell is going on here? \"Daddy?\" Really? I thought as I placed my phone back in my pocket. A minute went by and then the phone vibrated again. I almost dropped my phone because when I slid the screen over, I was greeted with a bathroom selfie of my son's babysitter in a matching red bra and thong set. Beneath the picture it said \"Seriously Mitch, here's a little birthday present for you. This is what I will be wearing all day today. Think about this while you are waiting for me to show up.\"\n\nBy way of introduction, my name is Mitch and as of today, I am 36 years old. I'm a Service Manager for a high-end car dealership in Orange County, California. Most of the people that walk into my service department would never believe that I have a six-figure income and I'm okay with that. I spend most of the day dealing with whinny, privileged soccer moms, trophy wives or their egotistical husbands and occasionally the guy who made it the hard way like I did. Truthfully, my job sucks in ways that people can't imagine but it more than pays the bills and honestly, I do enjoy it. \n\nThe main reason I put up with my customer's crap is my son David. At nine he is a bright, articulate and intelligent kid and I'm more than willing to sacrifice a small bit of my pride to make sure that he doesn't end up turning wrenches to make a living like his old man had to. He has my brown hair and his mother's green eyes. There are still days that I miss her so bad I ache when he looks at me with them. \n\nLindsay is the only babysitter that he has ever had. She is basically a member of the family now because she spends as much time taking care of David as she does at school or at her parents' home. It was going to be hell explaining to David that she wouldn't be able to babysit anymore after she graduated from Cal State Fullerton in the spring and had to get a real job.\n\nI've canceled dates because Lindsay called and said she was sick and couldn't make it over to sit with him. I've also changed my clothes going out because she gave me 'the look' when I came downstairs wearing something. She started babysitting before his second birthday; she was barely fourteen herself and thankfully she stayed on through the death of his mother from cervical cancer five years ago. Aside from my older sister Stephanie; Lindsay is really the only female influence he has ever had in his life and I can't complain about that at all because they both love the boy and dote on him endlessly. \n\nLindsay is a beast when it comes to caring for and protecting David. Last year I got held up at work and she took him to the Parent/Teacher meet and greet at school. When I got home, I had a complete schedule and a run-down of which classes he would excel in and which classes he would need help in; both were spot on accurate. I couldn't imagine what David's life, or mine for that matter, was going to be like without her in it. \n\nShe was taking such good care of him that I leased her a 3 Series BMW through work last year, so she would have reliable transportation to and from her classes and to cart David around in. Her parents objected to it at first, but I sat down and explained that I my priority was my son's safety and well-being and that Lindsay was putting hundreds of miles a month on her car taking care of him. It was cheaper for me to lease her a car than to reimburse her for the mileage. Besides, I thought to myself, she looked cute as hell driving it.\n\nAt 5'8\" tall, with jet black hair and grey-blue eyes she is absolutely striking. She has an athlete's body that was toned to perfection by her being both a cheerleader and playing on the girls' volleyball team in high school. David and I went to a couple of her games in her senior year and even back then I had to admit that the sight of her bending over in volleyball shorts was probably the reason a guy created girls' volleyball shorts; it was nothing short of spectacular. It was also embarrassing trying to hide a hard-on with my son and her mother and father sitting right beside me and I felt like a total perv for days afterwards. \n\nSo, back to my current situation, my son's babysitter was either drunk, or she was really drunk. Either way, I decided to play along just to see what she was up to. \"Young lady, you are not wearing that out in public!\" I responded back. \n\nDavid and I climbed on the boat and headed into the darkness of the Caribbean and out of cell phone coverage for the next seven minutes or so. As soon as we exited the ride my cell phone went off and I looked down to the new messages. \n\n\"LOL!\"\n\n\"Fine! Is this okay?\"\n\nThere was another selfie of her. Her hair was pulled back in a pony-tail and she was wearing a pair of black shorts and a mid-riff tee-shirt that said, 'Costa Mesa Cheer' on it with a mega-phone. She had lifted the left side of the shirt and I could see just enough under-boob to make it obvious that she wasn't wearing a bra. Why the hell was she teasing me like this? \n\n\"Barely! We are headed to Will Call now, let me know when you get here. See you soon Lindsay.\"\n\n\"See you soon Mitch.\"\n\nSnapping back to reality, I looked down at David and said, \"Hey Buddy, would you mind if Lindsay showed up and crashed our party?\"\n\n\"HECK NO! That would be awesome!\" he shouted. \n\nI tussled his hair and said, \"Yeah I thought you might like that.\"\n\n\"I think she kind of likes you Dad.\" David said innocently.\n\n\"Why is that?\" I responded.\n\n\"Because when we are in the pool in the back yard, she always wears one your tee-shirts over her bathing suit. She says they smell like you.\" \n\n\"Really?\"\n\n\"Yep.\"\n\nI instantly decided to drop the subject. I had no idea what had set her on the path she was walking down but I did know that whatever she had in mind, it did not need to include my son at this point. Kids are a lot more perceptive than most adults give them credit for and I did not want to have David getting involved in this in any way if I could help it. If I had only known what would transpire over the next month. \n\nWe walked to the front of the park and I bought her ticket. Then I suggested that we hang out on Main Street until she showed up. He was all for it when I said that we could buy ice-cream now and go on Thunder Mountain as soon as she showed up. About forty-five minutes later my phone buzzed again. \n\n\"Here!\"\n\n\"Where?\" \n\n\"At the entrance. Where are you?\"\n\n\"Be right there.\"\n\n\"K\"\n\nShe was standing by the entrance to the park dressed exactly as she had been in her last picture. When David saw her, he jerked his hand from mine, screamed her name and ran toward her. She scooped him up, gave him a kiss on the cheek then they walked toward me smiling. I couldn't help but notice the way her breasts jiggled when she walked, telling me that she hadn't put a bra on. \n\nShe gave me a hug and then surprised me by giving me a quick kiss on the lips. Smiling up at me she said, \"Thanks for inviting me Mitch. Happy Birthday\" \n\n\"You're welcome and thank you.\" I said, sort of stunned by the show of affection and trying to figure out how to explain it to my son. \n\n\"So, where to first?\" she said looking down at David.\n\n\"Did you just kiss my dad?\" David asked grinning up at her. \n\n\"That wasn't a kiss Silly, that was a friendly peck on the lips; there's a difference. Where to?\" she asked him eagerly. \n\n\"Thunder Mountain! Dad said so!\" he replied instantly. \n\nShe reached out and took his hand in hers and then grabbing mine she said, \"Thunder Mountain it is then. Let's go!\"\n\nMy feet were sore, as my Georgia born grandfather would have said \"My dawgs were barkin'.\" So, Lindsay and I sat down for a few minutes as David stood in line to meet Mickey and Minnie. I was dividing my time between staring at her and looking at David. She on the other hand never took her eyes off him; it was like watching a momma bear looking after her cub.\n\n\"You do a great job with him Lindsay.\" I said truthfully. \n\n\"Thank you.\" she said never taking her eyes off him.\n\n\"So?\" I said and then left it hanging. \n\n\"So.\"\n\n\"Are we going to talk about what happened earlier?\" I added.\n\n\"Eventually, but I don't think it would be appropriate for David to hear his babysitter discussing her plans to make love to his father later tonight.\" she responded with a smile on her lips. \n\n\"Uh.\" I mumbled, flabbergasted by what she had just said. \n\n\"You don't want to?\" she asked softly, turning her head and glancing at me.\n\n\"Um.\" I said, still to stunned to put together a coherent sentence. God, she was stunning.\n\nShe stood up and fishing her phone out of her back pocket began to take pictures of David as he stood next to Mickey and then Minnie. I hadn't even thought of pictures of them together, but she had. I was being out-parented by my babysitter! After a dozen pictures or so pictures, she stopped and then motioned to David who came running back to us. They began to breathlessly plan out the next hour or so of activity. \n\nAs we headed toward It's a Small World, Lindsay looked over at me and said, \"You never answered my question Mitch. Do you want to or not?\"\n\n\"Can we talk about that first?\"\n\n\"After you answer my question.\" She said flatly. \n\n\"I would have to unequivocally say; maybe.\"\n\nDavid was walking between us and kept looking up at the exchange. \"What are you guys talking about?\" he asked innocently.\n\n\"Nothing Sweetie, your dad and I are just making some plans for later tonight.\" \n\n\"Oh.\" then he added, \"I need to go to the bathroom.\"\n\nI was standing in the bathroom when my phone buzzed in my pocket. I looked down at the screen and saw it was a text from Lindsay. When I opened it, I was treated to a picture of her in her bathroom, wearing the same black shorts but no top! Her breasts looked to be perfect D-cups and she was winking at the mirror. Beneath it was written \"Tonight?\" Then suddenly another text popped up saying \"I'm sorry Mitch, are my boobs starring at your eyes?\" \n\nI almost dropped the damn phone. I had seen her in the pool before wearing a bikini, but this was totally different. I was becoming more than a little nervous and trying desperately to figure out why she was coming on so strong. I wasn't Quasimodo, but I wasn't Sam Elliott or Matt Damon either and a young, attractive woman like her had plenty of options when it came to sex. \n\nWhen we got back to her she was smiling at the look on my face and holding three drinks for us and a churro for David. As he munched on it while we walked to the next ride, Lindsay and I resumed our back and forth banter with each other. \n\n\"You certainly brought up two big points for your plan.\"\n\n\"I thought you would start seeing things my way.\" She said glancing at me with a grin on her face. \n\n\"But we really need to talk.\"\n\n\"We will, I promise.\" She said earnestly. \"I don't make decisions like this on a whim.\"\n\nI felt a serious sense of relief when she said that. As much as the pictures and flirting had stroked my ego, she was, literally young enough to be my daughter. As hot as she was, I didn't want to risk losing her, sooner than I had to as David's sitter, over a situation that I could have and probably should have, avoided. \n\nBy seven that night David was exhausted, and he was the one that suggested that we leave. As we walked toward the exit Lindsay was walking beside me and David was to her left. Glancing back toward the park entrance, she sighed and then said, \"This was really fun. I had a blast.\"\n\n\"I'm glad you enjoyed it.\" I said.\n\n\"Me too!\" David piped up. \"I like it when you're with us Lindsay! It's funner when you're with us.\"\n\n\"More fun. It's more fun when I'm with you.\" She said, correcting him gently.\n\n\"Yes, it is!\" he added, smiling up at her and causing both of us to laugh.\n\n\"I had fun too Mitch.\" she said looking me directly in the eyes. \"It was a beautiful day, I was at Disneyland, I had two good looking guys with me and we have some great pictures to remember today by.\" \n\n\"Yes, we do.\" I replied honestly. \n\nClimbing on the trolley to go back to the parking garage Lindsay said, \"Thank you again for inviting me.\" She was sitting so close to me than I could feel the heat radiating off of her body and smell the perfume she was wearing. Both of those sensations were really pleasant.\n\n\"Lindsay?\" David asked.\n\n\"Yes Honey?\"\n\n\"Can you spend Thanksgiving Day with us this year?\" he inquired. \n\nI started to tell him that she probably wanted to spend the day with her family, but Lindsay stopped me before I could get started. \n\n\"Well,\" she began and then glancing over at me said, \"I could; my parents left to go on a cruise this morning and they will be gone for eight days. So, I could spend the day with you guys.\"\n\n\"Wow! They will be gone for eight days? Even Thanksgiving? Won't you get lonely with them being gone that long?\" David asked innocently.\n\n\"Not really, that's why your dad and I were making plans earlier, so I won't be lonely.\"\n\n\"Oh. Cool.\" he said sounding really sleepy.\n\nWe got off the trolley and Lindsay walked with us to my car. \n\n\"Where is your car at?\" David asked with a confused look on his face, his look mirroring mine. \n\n\"I had a girlfriend bring me here. I'm going to go home with you guys and spend the night in the guest room. Your dad can take me home on his way to work tomorrow after we drop you off at school. Is that okay?\" she said to him. \n\n\"I don't have school. We are off all week for Thanksgiving.\" David said.\n\n\"Well, since you are out of school, I guess you need a sitter, so I will have to spend all week with you.\" she said and then locked eyes with me as if she was challenging me to a contest of wills. I lost and glanced down at the ground as David responded with an enthusiastic \"Cool!\" \n\nThe excitement of her announcement lasted all of five minutes and before we got to the 5 Freeway, David was zonked out in the back seat with his Mickey Mouse ears on the seat beside him. I was finally starting to accept that she really was planning on sleeping with me. We drove in silence for several minutes and then I cleared my throat.\n\n\"Yes?\" she responded looking over at me with a small smile on her face. \n\n\"You do remember me telling you that I was taking the week off, right?\"\n\n\"Uh huh.\" \n\n\"So, David doesn't need a sitter this week.\"\n\n\"I've seen your idea of a balanced diet and I've sampled your cooking Mitch. You boys won't last the week eating peanut butter and jelly sandwiches and Fruit Loops. What did you have planned for Thanksgiving? Popcorn, pretzels, toast and jelly-beans?\"\n\n\"Hey! It worked for Snoopy!\" I said laughing. \n\n\"Maybe, but I'm not going to risk it, so you're stuck with me for the week. Look on the bright side, if you play the right cards it will be a week full of nights that you will ever forget.\" she whispered. \n\n\"This is a first.\" I replied. \n\n\"What?\"\n\n\"I'm not use to being hit on by a woman who is young enough to be my daughter.\" \n\nShe reached across and lightly scrapped her fingernails across the stubble of my chin and then replied, \"You might want to start coming to grips with it.\"\n\n\"I don't suppose it matters that we have to pass right by your home to get to mine?\"\n\n\"Nope!\"\n\n\"Not even a little bit?\"\n\n\"Not even a smidge. I stashed a toothbrush, make-up and a suitcase full of clothes in your guest room closet on Friday, so I would have them there for tonight and the rest of the week.\" she stated in a manner of fact tone. \n\n\"Really? You've been planning this since Friday?\"\n\n\"Mitch I've been planning this since my mother told me about the cruise in September. The best seductions are planned, not a spur of the moment thing. Hasn't anyone ever told you that before?\"\n\n\"Not in recent memory, no.\" I said as we pulled into my driveway. \"By the way,\" I said over the top of the car as we shut the doors, \"your body is amazing.\"\n\n\"I'm giving you ten minutes to get David to bed and ten minutes to make sure he stays there, then you can see it up close.\" she purred. \n\nScooping David up out of the backseat I carried him up to his room. I got him changed into his PJs and in bed. I gave him a kiss on the forehead and as I started to close the door he mumbled \"Can Lindsay come in and say good night?\"\n\n\"Sure, Buddy, let me go get her.\" I said smiling. \n\n\"He wants you to tell you good night.\" I said as I walked into the den.\n\nLindsay smiled and then handed me a drink, sat hers on the bar and padded barefoot out of the room heading upstairs. I couldn't help but stare at her as she left. If I had to describe her movements, I would use the words lithe, elegant and graceful; she didn't walk, she glided, and her ass was spectacular when she did. \n\nI guess I had been too focused on my job to notice the attractive woman she had become. That or maybe it was the age difference or the close proximity that we had been in over the years. Whatever the reason, I certainly admired it now, I thought to myself as I sank into my recliner. \n\nLindsay walked back into the den, picked up her glass and after taking a sip said, \"He's out like a light.\" Smiling at me she walked over to the couch and sat down, leaned back and crossed her long legs. \n\n\"So.\" she began.\n\n\"So?\" I countered.\n\n\"You're not going to make this easy for me, are you?\" she said giggling.\n\n\"Why should I? You've been making it hard on me all day.\"\n\n\"Pun intended?\"\n\n\"Absolutely.\"\n\n\"Well, that was a part of my evil plan. Catch you off guard and tease you relentlessly.\"\n\n\"Mission accomplished.\"\n\n\"No. Not really, not all of it.\"\n\n\"What's left?\"\n\n\"You, taking me to your bedroom, undressing me and making love to me until we pass out from exhaustion.\"\n\n\"Not so fast.\" I said polishing off my bourbon and sitting the empty glass on the table beside me. \n\n\"Huh?\" she responded with a confused look on her face. \n\n\"Why?\"\n\n\"Huh?\" she repeated, staring at me. \n\n\"Why? It's a simple question. Answer it.\" I said more sternly than I wanted to. \"Why now? Why, suddenly, do you want to sleep with me? I've been beating my head against a wall all day long and I cannot figure out why you want to do this. So, until I can wrap my head around it, it's not going to happen.\"\n\n\"Why suddenly? Suddenly?\" She threw her head back almost cackling with laughter. Setting her drink down on the coffee table, her eyes went flat, and she turned stone cold serious in the blink of an eye. \n\n\"How long have I been working for you Mitch?\"\n\n\"A long time.\" I said.\n\n\"How long?\" she demanded. \n\n\"Almost eight years.\"\n\n\"New Year's Eve, 2008 was my first night in this home. You, Kim, Stephanie, James and my mom and dad went out and I stayed here with David. I turned fourteen at midnight and Kim kept calling the house every fifteen minutes to make sure it was still standing. Stop acting like you don't remember.\" ",
        "She was right, that had been her first night and Kim had called the house so often to check on David that we all started joking about it. She responded by saying that she didn't think a fourteen-year old girl could handle the responsibility of an infant. God in Heaven, was she ever wrong about that. \n\n\"Here we are, almost eight years later and I'm still here. Yes, I'll admit that I had a crush on you for a long, long time but then I also realized that when you looked at me you didn't see a potential girlfriend; even though I tried my best to make you. Do you have any idea how many times I threw myself at guys your age just to try and scratch the 'Mitch Itch'?\" \n\nShe paused and before I could respond to any of it, she started in again.\n\n\"Do you have any idea how many dates and plans I've broken off, so I could babysit David while you went out? Do you realize how excited I got during the summer because it meant I could practically live here with you and try to become a part of your life? Do you know how many times I sat at home or in some stupid damn classroom praying that my phone would ring just so I could come over here to be around you, even for a little while? Do you understand what it was like for me to have you look right through me like I didn't exist? No? Try this; it crushed my soul each time you did it damn you!\" \n\nShe had started making sniffing sounds as she was talking, and I was afraid she would start crying at any moment. Then she reached out, picked up her glass and downed it in one swig. \n\nSitting the empty glass down on the table, she continued, \"Do you have any idea how hard it was for me to smile and laugh and act like I was happy to be here knowing full well that the reason I was here was because you were out and getting laid later that night by a thirty-something, bleach-blonde, OC beach slut with fake tits? Do you?\"\n\nI sat there stunned and speechless listening to her pour out her soul and realizing the amount of emotions that had built up inside her over the years. \n\n\"Damn it Mitch! Answer me! Do you?\" she said slapping the coffee table with the palm of her right hand. \n\n\"No.\" I said softly.\n\n\"I was in Hell, absolute Hell. I finally caught a break in September when my mom told me that they were taking that damn cruise my father has been wanting to go on since like, for-fucking-ever, and I saw an opportunity to spend eight days getting what I've wanted for so long. You.\"\n\nShe stood up, wiped her eyes with the back of her hand and stripped off her shirt and then her shorts and stood there staring at me both confidently and defiantly with her entire body on full display for me. She walked around the coffee table and took three steps forward and leaned down in front of me with her hands on the arm rest of the recliner with her breasts inches away from my face. Then she lowered her face to mine and kissed me, hard. \n\nHer tongue slipped between my lips, into my mouth, and as it did she groaned, then she broke away and looking me in the eyes she said, \"I'm going to bed Mitch, in your bed. I'm going to your bedroom, I'm taking a quick shower in your shower and then I am climbing into your bed and I am giving you my body to play with until you can't get it up anymore. You can make love to me or you can just fuck me like you own me. Either way, I don't care, because by the time I am done with you, you won't remember the names of any of those whores you were fucking while I sat here, waiting for you to come back home to me.\" \n\nShe was almost hissing when she added angrily, \"Maybe you don't understand Mitch, but I'm done! I'm done with you looking through me like I don't exist. I'm done acting like I don't care who you are screwing, and I am most certainly done sitting here alone so you can go out and get some bitch to put out for you. The only pussy you will be getting from now on is mine or so help me God, I am out of here. So, like I said in the car, you had better start coming to grips with it!\"\n\nShe wheeled around and walked out of the room leaving me sitting in my recliner wondering if I had always been this dense or was it something that had happened to me slowly over the years. I sat there for a solid five minutes thinking about all of it and then realized that I was in way over my head. Her parents were friends of mine and my sister. If they found out, when they found out, that I had slept with their daughter, there would be hell to pay. Stephanie would probably disown me, and I didn't even want to begin to think of David's reaction to it. \n\nDetermined to be the adult in this situation I stood up and resolutely walked to my bedroom with the intention of telling Lindsay that nothing was going to happen between us. That's what I was going to do; end this now and be done with it. That is exactly what I had planned, right up until I walked into my darkened bedroom and saw her laying in my bed, propped up on the pillows, illuminated by the moonlight streaming through the windows; playing with her pussy. \n\n\"It took you long enough. I was beginning to think you had fallen asleep on me.\" she whispered as I stood there looking down at her.\n\n\"I uh, Lindsay, um, look.\"\n\n\"Do you like what you see?\" she asked me, lifting her hand to her mouth and licking the juices off her fingertips. \"I'm really wet and it tastes wonderful.\"\n\n\"Linds,\" I tried to say her name, but my voice cracked, and I couldn't finish it.\n\n\"I'm not fourteen anymore Mitch and you're not the first man that I've slept with. You didn't decide to do this, I did. I'm begging you Mitch, please just give me this one night. Please?\" she whispered, laying back and spreading her legs wider. \n\nI caved. \n\nI walked back and closed the bedroom door and making sure I locked it behind me then I turned back toward her. I stripped my clothes off and walking to the bed I eased myself down gently beside her form on the bed. I had reached the point where I didn't give a damn anymore; she had given me her body and I was going to claim what was mine. \n\nI reached out and touched the side of her face and looking in her eyes I asked her, for the only time, \"Are you sure about this?\" \n\nShe nodded, silently smiling at me and then she took my hand and brought my fingertips to her lips, kissing them softly. \n\nShe sighed as I slowly traced my fingers across her lips and cheek and then down her neck, across her chest to her breasts and gently squeezed the left one. It was so firm and warm, and her nipple popped up immediately begging to be played with. I lowered my mouth to it and bit it softly listening to her beginning to moan and feeling her hips shifting side to side, further down on the mattress. \n\nI ran my hand down her taunt stomach and paused as I came to the curve of her hips. Her legs parted further, and I deliberately hesitated before I moved my hand to her pussy and brushed my fingertips across her clit. Her back arched and she hissed \"Yes!\" into the darkness of the bedroom. \n\nI slowly spread the lips of her pussy apart and inserted my index finger into her and began to rub her swollen clit with my thumb. She was dripping wet and began to moan as I shifted my body around and lowered my mouth to her pussy. As my tongue slipped between her lips I felt hers begin to slowly lick the shaft of my cock and then she engulfed it, taking half the length in her mouth. \n\nWe stayed locked together like that for what seemed like an eternity, slowly and gently licking, sucking and nibbling on each other until she stopped and whispered \"I need you inside me. I need to feel you inside me. Please?\" \n\nI shifted around and kneeling between her legs I lowered myself onto her and placed the head of my dick against the folds of her pussy. \"How badly do you want it Lindsay?\" I asked teasing her and pulling back each time she tried to thrust upward. \"How badly do you need it?\" \n\n\"Oh God Mitch! Please! Please don't do this now. Don't tease me. Please!\" she moaned, as she sank her nails into my back and raked them down until I was gasping from the pleasure the pain brought. \n\nI slipped the head of my dick past her lips and heard her gasp \"Please Baby! Please! Don't make love to me, just fuck me hard! Use me, I'm yours, use me!\"\n\nI drove into her as hard as I could, sinking all six and a half inches of my dick into her in two strokes and listening to her gasp hard with each one. Then moving my hips as fast as I could move them I did exactly as she asked and fucked her as fast and as hard as I could. She was gasping \"Yes! God yes, just give it to me. Don't stop, don't ever stop Baby.\"\n\nI was on the verge of my orgasm when she locked her legs around my waist, pulling me in deeper, and moaned loudly, \"Do it!\"\n\nThat was all it took. I exploded, groaning as I came deep inside her, feeling her hips bucking underneath me like she was trying to claim every inch of me while she could. As I collapsed on top of her I couldn't help but wonder if she'd even had an orgasm. \n\n\"Wow!\" I said as I rolled over onto my side and kissed the side of her face. \"That was,\"\n\n\"Everything I've wanted for years.\" she said looking over at me and gasping for air.\n\nI groaned as I realized what I had just done and before I could say a word she said, \"No. Don't say it. My parents and your sister will just have to get over it.\"\n\n\"How did you know what I was thinking?\" I asked laughing lightly. \n\n\"You couldn't have made it more obvious if you had set off a siren and bells.\" smiling at me she added, in a conspiratorial tone, \"Oh God, I just fucked my babysitter, what-ever will the neighbors and my family think?\"\n\n\"Yeah, that covers it pretty well. Seriously Lindsay,\" I said rolling over on my side to look at her, \"I did just fuck my babysitter, that wasn't making love to you, that was me fucking you.\"\n\n\"This might surprise you Mitch, but I know the difference and I was the one asking, no, I was shamelessly begging you for it.\" She said as she began stroking my now flaccid dick. \"And guess what Stud? You're going to do it again. You're going to keep doing it until I'm so sore I can't walk tomorrow morning without wincing.\" \n\n\"Lindsay, this is insane.\" I whispered as I lay there feeling her warm hand milking my dick and somehow bringing it back to life after only a few minutes. \n\n\"No, it isn't. My dad is thirteen years older than my mom.\" she stated solemnly. \n\n\"Really?\" I said, surprised by that.\n\n\"Yep, they met at his office. She was a new administrative assistant, fresh out of college and he was a junior partner in the law firm. To hear him tell the story he didn't stand a chance in hell of getting out of her clutches and to hear her tell it, he got her drunk and then took her to bed. I think the truth is somewhere in the middle. So, I come by the Older Man Syndrome honestly; it's genetics and you can't argue with science.\" she said playfully.\n\n\"Maybe not, but I'll be the one sleeping with their daughter and I'm pretty certain that they will have an argument or two about it.\"\n\n\"Possibly.\" Then looking down at my slowly hardening dick she giggled and said, \"Oh look, someone is starting to act like he wants to play again.\" Then she lowered her head to my cock and took me in her mouth for the second time that night. After ten seconds or so she stopped and then looked up at me and smacking her lips said, \"Ya know what? We taste great together.\" \n\nI groaned loudly as I laid my head back on the pillows and she dropped her head back down and went to work on me again. \n\nI hadn't had sex three times in one night since I was in my early twenties but somehow, she managed to get me up and keep me there two more times that night. By midnight I thought she was going to blow through the entire Karma Sutra before she let me get some sleep. When we finally did go to sleep I didn't move until nine in the morning.\n\nLindsay wasn't in the bedroom as I stumbled to the shower, wincing at the hot water and the effect it had at the scratch marks on my back. I stood there letting the water run over me and wondered what the rest of the week was going to bring. I eventually dried off, got dressed and went downstairs to see about breakfast. \n\nShe was standing at the stove, dressed in tan shorts and a black tee-shirt and David was sitting at the breakfast bar eating a short stack of pancakes and laughing at something Lindsay had just said. I stood there leaning against the kitchen door, looking at them for a moment silently before I cleared my throat and got their attention. \n\n\"Good morning Dad.\" David said looking up at me. \"Lindsay made us pancakes and bacon.\"\n\n\"I see that.\" I said smiling as I walked to the coffee pot poured a cup of coffee and then sat down beside him. \n\nLindsay walked over to me with a plate full of pancakes and bacon and glass of milk. Setting them on the bar in front of me she leaned in and gave me a quick kiss. \n\n\"Good morning.\" she said as she turned back toward the stove. \n\n\"Good morning.\" I said smiling back at her.\n\n\"I KNEW IT!\" David yelling out so loudly that both of us jumped a little. \n\n\"Knew what?\" Lindsay said with an innocent tone in her voice.\n\n\"I knew you kissed Dad at Disneyland yesterday!\"\n\n\"Nope, and that was just another peck on the lips. I've never kissed your dad in front of you.\" she said winking at him. \n\n\"Oh.\" He said a little dejectedly.\n\n\"Buddy, that just means you've never seen her kiss me.\" I said grinning. \n\n\"Oh.\" then pausing he said \"OH!\" with a huge smile coming over his face and his eyes widening as it dawned on him what I had just said. \n\n\"So, you wouldn't mind if Lindsay and I started spending some more time together?\" I asked broaching the subject as delicately as I knew how, given the circumstances. \n\n\"Heck no! I love her, and she is a lot cooler and prettier than most of the other women you've dated.\" David responded with the innocence that only a child could have in a situation like this. \n\nLindsay moved the pan off the burner and turned to look at David.\n\n\"Most of?\" she asked arching an eyebrow and staring at him with a look of amusement on her face. \n\n\"Um, all of?\" David said smiling back at her with maple syrup dripping down his chin.\n\n\"He's yours alright.\" she said laughing and turning back to the stove. \n\nI held up my left hand and David slapped it giving me a big high-five and smiling up at me.\n\n\"I heard that.\" Lindsay said with her back still turned to us. \n\nMy phone rang at around eleven that morning and looking at the caller ID I saw \"Shelby\". Shelby was the last woman I had gone out with, over a month ago now, and Lindsay had made it clear on our last date that she didn't like her in the least bit. She was a thirty-two year old real-estate agent that fit Lindsay's description of my previous girlfriends to a tee. \n\nPutting the phone on speaker I answered, \"Hello.\"\n\n\"Mitch, it's Shelby, how are you doing Sweetie?\" I saw Lindsay tense up at the sound of her voice and freeze at the mention of her name. \n\n\"I'm doing great how are you?\" I said looking over at Lindsay whose facial expression was screaming \"Hang up now and you get to live.\" \n\n\"I'm doing good, listen I was wondering if you have any plans for Thanksgiving? I am having a small get together and I thought you and your son might like to show up.\"\n\n\"My son?\"\n\n\"Davie.\" She said quickly.\n\n\"David.\" I responded flatly while Lindsay rolled her eyes.\n\n\"Oops! Sorry!\"\n\n\"Shelby, I'd love to, but I've already made plans and in all honesty, I am kind of dating someone exclusively now, so I'm going to have to pass.\"\n\n\"Oh! Well, I just thought I would ask. Good luck with her, you really didn't strike me as the type that would exclusively date anyone. She must be special.\"\n\n\"She is and thank you. Good bye Hun.\"\n\nI heard the call disconnect and my screen went dark.\n\n\"Hun?\" she asked quietly with her head cocked to the side.\n\n\"Figure of speech.\" I replied, wincing at my own stupidity.\n\n\"Do yourself a favor Mitch.\"\n\n\"What?\"\n\n\"Never, ever refer to me as Hun. Ever.\" \n\n\"Noted.\"\n\n\"Exclusively huh?\" Lindsay asked looking at me with a smile on her face.\n\n\"Uh huh.\"\n\n\"I kind of like the sound of that.\" she said smiling at me.\n\n\"Kind of?\"\n\n\"I guess this mean I have to quit flashing my boobs at mom's pool boy.\"\n\n\"Cut it down to twice a week okay?\"\n\n\"Aww!\" she said laughing at the look on my face. \n\nThe next few days were fun. On Wednesday I loaded everyone up early in the morning and surprised them with a trip to Sea World in San Diego. We called it a day very early though because the traffic would be horrendous by three pm and Lindsay wanted to get back to the house to get a jump on Thanksgiving dinner. I promised David that we would be back soon and with that we headed to the car. As I held the door open for Lindsay to get in, she paused for a moment and then grabbing the front of my shirt, she kissed me holding it for at least five seconds. She looked over at David, winked and said, \"That was a kiss.\"\n\n\"Okay.\" He replied with a grin on his face almost as big as the one I had. \n\n\"Get in the car goofballs.\" she said laughing at us as she sat down. \n\n\"You heard the lady Son, get in the car.\"\n\n\"Yes sir.\" He said smiling up at me.\n\nThanksgiving was, with one huge glitch, a blast. \n\nStephanie, her husband and kids came over and they were pleasantly surprised to see Lindsay there. I think they were more pleasantly surprised that the meal wasn't catered in and that I wasn't the cook but who was I to ask? Before they showed up Lindsay and I had a sit down talk with David. We explained to him that mentioning what was happening between us wasn't a secret, but it didn't need to be shared either. He seemed to be a little depressed by the news, but he took it as well as a nine-year old can. \n\n\"Honey, we aren't asking you to keep anything a secret. If it were a secret, you wouldn't know about it. We just need to be the ones to let the other adults in our lives know about it. Do you understand that?\" Lindsay asked him as he sat on the couch.\n\n\"Yes. It's kind of like you wearing dad's shirts because they smell like him.\"\n\nLindsay blushed furiously and then recovering quickly she said, \"Just like that you little snitch!\"\n\n\"See? I do understand!\" he said as he bolted from the room laughing.\n\n\"How long have you been doing that? I asked inquisitively as David's laughter faded down the hallway\n\n\"I've had a crush on you since I was jailbait Mitch. Do you really want to know?\"\n\n\"No, I'm good.\" I replied honestly. \n\n\"Good, because I've been stealing them from you and sleeping in them at home, since I was sixteen.\" she said sweetly as she winked at me and turned to head back to the kitchen and check on the turkey. \n\nAfter that little revelation, I went to the bar to make myself a very stiff drink. Fortunately for me, Steph and crew knocked on the door a few minutes later and I was saved by my brother-in-law James, who insisted that we watch the Lions beat up on the Eagles. As David and his cousins ripped through the den to play in the back yard, James and I took over the TV. I took the Eagles and what I thought was a sure fifteen points and James took my twenty dollars at the end of the game. \n\nBy the time dinner was over I was feeling very relaxed. For the first time in five years I had a complete family around me for the holidays. Looking around the table I saw a group of people who were laughing and telling stories and it felt good. A piece of this had been missing for years and that missing piece sat to my immediate left. We glanced at each other and smiling, she winked at me then she quickly turned her attention back to my niece. \n\nLooking up I saw my sister staring at me with a strange look on her face. I knew right then that she knew, or thought she knew and if my sister thought she knew, she knew. We were busted and there would be no getting away with saying it was just a friendly wink. \"Oh well,\" I thought to myself, \"they were going to figure it out by Christmas anyway. Why not get a jump on all the holiday madness?\"",
        "After dinner I had stepped onto the patio to grab some fresh air. I heard the sliding door open and my sister appeared out of nowhere beside me. She opened the conversation as subtly as a bull in a china shop,\n\n\"So, imagine my shock this afternoon when I realized that my baby brother was sleeping with his babysitter.\"\n\n\"Yeah, so I guess it means I have a lot more to be thankful for.\"\n\n\"Really Mitch? I mean I should have figured it out when you leased her the car last year, but really?\"\n\n\"Yes, really, but this didn't start until a week or so ago. The car had nothing to do with it and this is neither the time nor place to have this conversation Steph, so for now, drop it.\"\n\n\"Fine! But we will discuss this soon Mitch.\" She replied with a tone of finality that told me it wouldn't be a normal family chat. \n\n\"Until then Steph, what you will do is go back in the house and treat Lindsay with the same respect that you treated her with before you figured this out. I'm serious about that, do not mention this to her or embarrass her in any way. She means a lot to me and David absolutely adores her.\"\n\n\"Mitch?\"\n\n\"Yes?\"\n\n\"I love you Little Brother.\" \n\n\"I love you too Old Lady.\" I said, kissing the top of her head. \"Now let's get inside so I can watch some more football.\"\n\n\"Men!\" she responded with exasperation in her voice. \"It's always football and booze!\"\n\n\"Nah,\" I said sliding the door open for her, \"You left out rare steaks and hot sex.\"\n\n\"God!\" she said laughing at me and swatting my arm. \"I'm going to help Lindsay with the dishes. I promise, I won't mention it.\"\n\n\"Thank you.\"\n\nI thought I handled it rather well, all things considered. \n\nStephanie and her family had been gone for about ten minutes and I had just settled in to watch the Bears and Packers game when Lindsay walked into the den and dropped a bombshell in my lap. \n\n\"Stephanie knows.\" Lindsay said as she plopped down on the couch and snuggled up next to me. \n\n\"Huh? Did she say something to you?\" I asked, with my temper starting to build.\n\n\"No.\"\n\n\"Did you tell her?\" I asked becoming a bit confused. \n\n\"No, but she knows. Call it a woman's intuition for both of us. I know that she knows, and she knows that I know she knows; let it go at that.\" she said giggling. \n\n\"Okay and you're right, she knows. She confronted me on the patio this afternoon and I fessed up to banging the babysitter.\" I said, surrendering to the logic of it and praying I didn't get a headache from thinking about it.\n\n\"She! You! What?\" Lindsay gasped, pulling away from me and looking up with a surprised look on her face.\n\n\"I told her that you and I were a couple and that David adores you and that she was going to treat you with the same respect that she would give any woman in my life.\"\n\n\"Really?\" she said, with a look of shock and adoration combined. \n\n\"Pretty much. I mean it's not like you are some deep dark secret that I need to keep locked in the attic. Actually, I'm really a little relieved that she figured it out.\"\n\n\"So that just leaves my mom and dad.\" she said quietly.\n\n\"Apparently.\" I replied.\n\n\"Oh joy.\" she whispered. \n\n\"Afraid of them finding out?\" I asked looking at her.\n\n\"No. I'm think it will be easier for them once they understand that I started this. I just have to figure out when to tell them.\"\n\nWe sat there quietly absorbed in our separate thoughts for a few minutes and then Lindsay softly chuckled. \n\n\"What?\" I asked.\n\n\"Banging the babysitter. That sounds like a fun game; we should play it tonight. I've got a cute little tartan skirt, white blouse and knee-highs in the dresser and a pair of black pumps in the closet.\" \n\n\"I'll keep that in mind.\" I said grinning.\n\n\"You do that.\" she said smiling up at me. \n\nDavid bound into the room and jumping up on the couch beside us, snuggled in beside Lindsay and started watching the game. He had recently started watching football with me and was just starting to learn the basics of it. He started asking questions immediately and as I was explaining the rules to him he started yawning. \n\n\"Thirty minutes until bedtime Bud.\" Lindsay said.\n\n\"Aww. I can't stay up a little later?\" David responded.\n\n\"It's already your bedtime Tiger; thirty minutes.\" She said firmly.\n\n\"You were a lot funner when you were just my babysitter instead of dad's girlfriend.\"\n\n\"More fun, she was a lot more fun when she was just your babysitter, instead of my girlfriend.\" I corrected him. \n\n\"That too.\" David said laughing.\n\n\"Really! REALLY!\" Lindsay responded slapping playfully at both of us and her grey-blue eyes flashing with the peals of laughter coming from David and me. \n\n\"You two are so going to pay for this!\" she said as we settled back down.\n\nLater that night Lindsay headed for bed and I puttered around sitting up the coffee pot, arming the alarm and making sure the lights were off. I walked toward the bedroom thinking that this had been one hell of a week and I would be very disappointed when her parents returned, and things had to go back to normal around here. As I walked into the room Lindsay was already in bed.\n\n\"Aww. I thought we were playing Banging the Babysitter.\" I said laughing and half disappointed that she wasn't wearing the skirt.\n\n\"Nope! I told you that you would pay. The babysitter is the funner one, you get stuck with dad's girlfriend tonight.\"\n\n\"Cool! She's the sexy one.\" I said, winking as I climbed in bed. \n\n\"Aww that is so sweet, you're still in trouble, but that was sweet.\" she replied kissing me softly. \n\nOne thing led to another and before I knew what had happened Lindsay was setting on top of me and I was holding her hips as she ground her clit against my body. I was watching her breasts heave up and down with her breathing and thinking that my life couldn't get any better than it was right now when the bedroom door flew open. David stood there looking at us for a split second and then turned and fled back up the hallway to his room. \n\n\"Oh crap!\" Lindsay whispered as she dove under the covers. \n\n\"Yeah.\" I said chuckling as I climbed out of bed and threw on my pants. \"I need to remember to lock the door.\"\n\n\"Yes, you do. Are you going in there or do you want me to?\" she asked.\n\n\"I got it.\"\n\n\"Okay.\" she whispered, still blushing and smiling up at me.\n\nI walked down the hallway and pausing at his door, I knocked softly and then opened it slightly. Poking my head inside I saw him under the blankets, he had pulled them up over his head and I could hear him lightly sobbing underneath. I walked over and sat down beside him placing my hand on his shoulder.\n\n\"Hey Buddy. Is everything okay?\"\n\n\"I'm sorry Dad! I should have knocked first.\"\n\n\"That's okay, what's wrong, why were you out of bed?\"\n\n\"Had a bad dream.\" he sat up sniffling and wiping tears from his eyes.\n\n\"About?\"\n\n\"Lindsay. I dreamed that she was gone, and we couldn't find her. We were looking everywhere but she was gone.\"\n\nI leaned over and kissed his forehead then told him that it would be a long time before Lindsay went anywhere. He sniffled again and then asked, \"Did you ever say that about mom?\"\n\nMy blood ran cold for a split second and then I said \"Yes, but that was then, and this is now, and Lindsay isn't going anywhere. She will be here tomorrow morning when you wake up. Okay?\"\n\n\"Dad?\"\n\n\"Yes son?\"\n\n\"Did mom love me?\"\n\n\"More than anything.\"\n\n\"More than Lindsay does?\"\n\n\"Yes and no. It's a little hard to explain right now.\"\n\n\"Dad?\"\n\n\"Yes.\" \n\n\"If you two got married, would Lindsay be my mom?\"\n\n\"If we got married then yes, but that is a long time away partner. We've only been together for a few days.\"\n\n\"You've been together a lot longer than that.\" he said innocently and then he threw his arms around my neck and gave me a hug. \"Good night Dad. I love you.\"\n\n\"I love you too Son.\" I said softly as I stood up and left the room. \n\nAs I turned around to walk back to my room; Lindsay was standing just outside his bedroom door with tears streaming down her cheeks. I put my arm over her shoulder and led her back to the bedroom. I got in bed and as I lay down I propped myself up on my pillows and folded my arms behind my head. Slipping off her robe, Lindsay lay down beside me and rested her head on my chest. We stayed that way for a while, each of us lost in our own thoughts about what David had said. Lindsay was the first to break the silence. \n\n\"When did he get so smart?\"\n\n\"I haven't got a clue.\" I said honestly.\n\n\"I thought my heart was going to break when he asked if his mom loved him more than I do.\" \n\n\"Yeah, mine too; the boy adores you Lindsay.\"\n\n\"I know. I am not looking forward to June.\"\n\n\"Me either. Telling him that you won't be around all the time is a conversation I don't want to have.\"\n\n\"We will have to eventually because I am going to have to get a job after I graduate and that will mean no more me all the time.\"\n\n\"I know, but today isn't that day so we will cross that bridge when we come to it. He was spot on about one thing though.\"\n\n\"What?\"\n\n\"You really have been a part of my life for a lot longer than a few days, I was just too stupid to see that. We have raised him together and you know what?\"\n\n\"What?\"\n\n\"We've done a pretty good job so far Kiddo.\" I responded, kissing the top of her head. \n\n\"Yes, we have.\"\n\n\"Honey,\" she asked a moment later, \"why did you forget to lock the door?\"\n\n\"I'm not use to locking it. Honestly, you are the first woman who has been in this bed in over five years.\"\n\nShe sat up and looking me in the eyes, \"Really?\"\n\n\"Yes.\"\n\n\"I didn't realize that.\" Then she slid her hand down my stomach whispering with a husky voice, \"Now, where were we?\"\n\nI suppose the fight was inevitable. I knew it was coming even though Lindsay had remained optimistic about it. I was a dad and I knew it would happen sooner rather than later. Her parents were livid when she sat them down on the Friday afternoon before Christmas and told them that we had been dating and sleeping together for more than a month. I was on the way home when my phone rang, and I saw Lindsay's number on the caller ID. \n\n\"Hey!\" \n\n\"Mitch, I told them, and my mom went nuts! Dad is so mad he isn't speaking right now. I am at your house. I told them before I left to pick up David from school. My mom was screaming all sorts of obscenities at Stephanie on the phone when I walked out, and I am humiliated beyond belief at what she was saying. Please get here soon.\" she said breathlessly, her sentences running together like she had panicked. \n\n\"I'll be there in fifteen minutes Honey. Just stay calm and don't open the door for any of them until I show up.\"\n\n\"Okay.\" she said softly.\n\n\"Hey Lady,\"\n\n\"Yes?\"\n\n\"I love you.\" I said for the first time.\n\n\"I love you too Mitch.\" she replied softly before she hung up.\n\nOkay, I'll be the first to admit it, maybe beginning a relationship with a woman who is fifteen years younger than me wasn't my smartest move and beginning one with the daughter of two of my oldest friends was even dumber. But things had been going well between us for the past month and honestly, I had never seen David happier. At twenty-one, Lindsay wasn't as worldly as she would like to believe she was. Right now, she was terrified of the confrontation that was coming once I got home and was doing her best to protect David from it. When her mother went off on her and then on my sister; Courtney had managed to do something that few people rarely do, and walk away from it unscathed. She had truly pissed off a Momma Bear. \n\nI pulled into a driveway that had a Jag, a Lexus and a BMW in it and thought to myself, \"I need a newer car. Maybe a pick-up, and a ranch; a nice one in Montana. Hell no, it gets cold in Montana. No, what you need to do is go and face the music.\" I climbed out of my car and muttering \"Well shit!\" under my breath as I walked toward the porch under the glare of Stephanie, James and Lindsay's parents Bill and Courtney. \n\n\"You son of a,\" Courtney started to say.\n\n\"Stop right there. We can go inside and discuss this like civilized people but I'm not going to let you cause a scene on my front lawn.\" I said firmly, then walking to the door I unlocked it and stepped inside.\n\n\"Lindsay, David, I'm home.\" I shouted.\n\nLindsay appeared at the top of the stairs, obviously shaken, and said, \"I'll be right down.\" as the crowd outside filed in past me. She appeared in the den a minute later and said \"David is in his room. I told him to let the adults handle this and that he would be okay.\" Then she stood up on her tiptoes and gave me a quick kiss on the cheek. \n\n\"Have a seat Honey.\" I said softly to her. \n\nBoth the couch and love-seat were taken up by the others, so she slid into my recliner and looked over at her mother. \n\n\"Have you calmed down any Mom?\" she asked.\n\nCourtney ignored her and looking me in the eyes said, \"I'm going to sue you for every dime you are worth you damned pervert.\"\n\n\"No, you're not.\" I said flatly, \"You can scream about a lawsuit all you want but it is an empty threat; I know it and more importantly, Bill knows it. What has happened between Lindsay and I happened between two consenting adults. If you file a suit the judge will dismiss it and the only thing it will do is drag our names through the mud of social media and the court of public opinion. Bill's firm won't allow that to happen and he damn well knows it. The only reason he hasn't told you that is because he is either letting you vent or he is too terrified of you to say anything right now and I don't know which it is.\" \n\nI watched her deflate instantly and Bill, bless his heart, looked down at the tops of his shoes and didn't say a word. \n\n\"Next!\" I said looking at Stephanie.\n\n\"Mitch, all I have to say is that I'm so very sorry that I suggested to Courtney that Lindsay be allowed to babysit all those years ago. I never thought that you would betray her trust or mine and it is killing me.\"\n\n\"Sis, you can go fuck yourself. You've known about this since Thanksgiving and if you had meant a word of what you just said you would have talked to Courtney sooner or had that chat you spoke about with me on the patio when you found out.\"\n\nI had never taken that tone of voice with my sister before and she sat there silently in shock. Her husband was looking at me like he had just realized that his wife's baby brother was a grown man. Courtney's head had popped up and she was glaring at Stephanie when she screamed, \"YOU KNEW! YOU BITCH! YOU KNEW?\"\n\nSpringing to her feet Lindsay said, \"Oh, for the love of God, Mother, stop with the damn Momma Drama! Dad is thirteen years older than you are and Mitch is fifteen years older than me. You are nothing but a hypocrite! If you are trying to call Mitch a pervert, what does that make Dad? Huh?\" \n\n\"LINDSAY!\" her mother gasped sinking back into her seat. \n\n\"And you!\" Lindsay said wheeling around on Stephanie. \"You're sorry that you suggested I babysit all those years ago? I'm not! It was the best thing that has ever happened to me. The only thing you should be ashamed of is the way you've walked away from Mitch and David over the past two years. You use to come over once or twice a month. How many times have you been here this year?\"\n\nStephanie started to answer and then Lindsay interrupted her, \"No, wait! Let me answer that for you. Three. Easter, Thanksgiving and today! You didn't even bring his cousins over for his birthday party this year! David loves you more than you can possibly imagine, and you are too damned busy to drive for ten minutes to spend some time with him each month? Please! You are a worse hypocrite than my mother is.\"\n\nI stood there fully understanding why Bill and James had remained silent; it was pure Fight or Flight instinct. Get small, stay small and stay still; maybe the Momma Bear will think you are dead and leave you alone. \n\nLindsay continued, \"Ladies, you both need to listen to me because I am going to say this one time and one time only. I am not going to stop seeing Mitch and I am certainly not going to stop taking care of David. There is not one valid reason that I should and if either of you can come up with one, I will be more than happy to ignore it!\" \n\nThe \"talk\" had almost turned into a shouting match and we had forgotten that David was just upstairs, and that he could probably hear every word that was being said. \n\nThat is why it stunned us all into silence when he walked into the room, stood beside Lindsay and asked, \"Can I say something please?\"\n\n\"Go back to your room young man!\" Stephanie almost screamed at David. Lindsay instinctively moved between the two of them, but David side-stepped around her and shouted back at his aunt, \"No!\"\n\nThen much more softly he said, \"Lindsay has raised me since I was a baby. She taught me how to tie my shoes, and she taught me how to write my name. She is the one who puts me to bed at night and she takes care of me when I'm sick when Dad isn't here. She is the one my teacher calls when something is wrong at school.\" \n\nHe paused to catch his breath and then continued, \"They don't call you Aunt Steph and they never call Dad; they always call her, and you know what? She is always here for me. I don't remember my mother, but Lindsay loves me just like she is my mother. Why are you trying to keep her away from me by keeping her away from Dad? They haven't done anything except fall in love with each other. I've already lost one mom, why are you trying to take Lindsay away too?\"\n\nLindsay's hands flew to her mouth and she sobbed as the tears began streaming down her cheeks. Pulling David in close to her she looked up at the ceiling, trying to calm herself enough to speak, then looking back down at him, she lost it again and the tears kept flowing. \n\nI had never been so proud of my son as I was at that moment. In less than ten seconds he had silenced every heated exchange that had happened or was about to happen. Words that might have irreparably broken two families apart had been stopped with the honesty and innocence of a child's love for his, well, for his mom. \n\nOnce he finished speaking, David paused for a moment and then he turned and fled the room crying; with Lyndsay right on his heels. \n\nI paused for a split second and then turned to her parents and my sister and brother-in-law and said, \"I don't often lose my temper because what is said in anger is impossible to take back. So, I am asking as nicely as I can; do the four of you want to stay long enough to apologize to her or do I start tossing you out of my home now? I can live without any one of you, but I am not, and I can't stress this enough; I am not going to live my life any longer without Lindsay as a part of it. End. Of. Discussion.\" \n\nShe stormed back into the room a few minutes later and pointing toward the second floor said, \"There is a very scared, very confused, very upset little boy up there.\" Then with her eyes turning as cold as ice she added, \"I'm not going to allow any of you to terrify that child any more than he already is; I don't care who you are.\"\n\n\"Linds.\" her father said quietly, \"I owe you, Mitch and David an apology. Your mother and I both do. It's just really difficult to watch your little girl go from being a little girl to a grown woman overnight and all of this is going to take some adjustment time for everyone.\" Courtney nodded but remained silent. \n\n\"Thank you, Daddy.\" she said softly. \n\nStephane spoke next. \"Look, I don't know how this got so out of hand, but I want you both to know that I am sorry for some of the things I said earlier. I do think that Mitch,\"\n\n\"Oh, for Christ's sake Steph, shut up!\" James interrupted her, causing Stephanie to sit back in her seat in shock. \"Mitch, Lindsay, I'm happy for both of you. Seriously, I really am. I've been setting here thinking that between the two of you, you have both managed to raise a well-adjusted little boy who isn't afraid to stand up for himself or for the people he loves. I promise you both that we will start becoming a bigger part of his life again.\"",
        "\"Thanks James.\" I said smiling at him and feeling sorry for him at the same time. When Steph got him alone there would be Hell to pay, yet a small part of me also admired him because they had been married for twelve years now and this was the first time I had ever seen him step up like that. \n\nCourtney stood to leave and quietly said, \"We can discuss this more tonight when you come home Lindsay.\" \n\n\"I'm not coming home tonight Mom; I'm staying here for a few days. I think we all need some time away from each other to get through the raw emotions of all of this.\"\n\n\"That might be a good idea Honey.\" Bill said, kissing her on the cheek and reaching out to shake my hand. \n\nWe said goodbye to Stephanie and James as well, and then we stood beside the Christmas tree in the front window and watched them get into their cars and drive away. \n\nTurning to look at me Lindsay asked softly \"Did you mean what you said on the phone?\"\n\n\"What? When I said that I love you?\"\n\n\"Yes.\"\n\n\"Every word of it Lindsay.\"\n\nShe smiled and then stood up on her tip-toes and kissed me; then settling back down on her heels she slapped my chest and smiling said \"It took you long enough.\" \n\nShe took my hand then we turned and together we went upstairs to check on David.\n\nNovember 11th, 2017\n\nIt was 8:30 pm when I took all seven pounds and six ounces of Julia Renee McLaren out of her big brother's arms and handed her to her mom. She was an hour and a half old and her tiny fists were clinched next to her perfect little face. Her jet-black hair was a small, soft powderpuff on the top of her head and she was starting to fuss because she was probably getting hungry.\n\nLeaning over Lindsay I kissed her forehead and whispered \"I love you Baby.\"\n\nShe smiled tiredly and whispered back \"I love you too Sweetheart.\"\n\n\"We will be back tomorrow morning to bring you two back home. Try to get some sleep okay?\"\n\n\"I don't think I get to decide that anymore.\" she said laughing.\n\n\"Nope.\" I responded knowing that, barring a business trip, tonight would be my last night of full sleep for a long time. \n\nDavid walked over and looked down at the two of them smiled and then kissed Lindsay on the cheek. \n\n\"Good night Mom. I'll see you tomorrow morning.\"\n\n\"Good night David. No junk food and make sure you take the trash to the curb tonight, tomorrow is trash day.\"\n\n\"Yes ma'am.\" he said sighing as he turned for the door of her room. \n\nI closed the door softly and we walked down the hallway. Standing by the elevator I said, \"So, Five Guys or In-N-Out?\"\n\n\"Mom said no junk food.\"\n\n\"Yeah well, Mom's not here.\" I let it drop, winking at him.\n\n\"In-N-Out.\" he responded grinning up at me.\n\nOn the way across the hospital parking lot David looked at me and said, \"Can I tell you something Dad?\"\n\n\"Sure.\"\n\n\"Do you remember the day that Mom showed up at Disneyland?\"\n\n\"Vividly.\" I said honestly.\n\n\"I told her that Friday that we were going for your birthday and said that she should text you to ask if she could come too.\" \n\nI stopped in my tracks and just shook my head laughing, then still laughing, I gave the kid a five dollar a week raise in his allowance. \n\n**********\n\nAuthor's Note: \n\nI honestly debated as to whether I should put this under the Mature or Romance category. I ended up choosing Romance over Mature because I felt that the full story was more of a long-term relationship rather than being solely focused on the differences in Mitch and Lindsay's age. \n\nAs always, I hope you've enjoyed it.\n\nYDW"
    ],
    "authorname": "YouDidWhut",
    "tags": [
        "older male",
        "younger female",
        "romance",
        "oral",
        "romantic",
        "mature"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/who-knew-16"
}