{
    "title": "Efrain and Cory Ch. 25",
    "pages": [
        "Author's Note \u2013 I apologize for not posting here sooner. Some interesting things coming up. There are three more chapters and an epilogue left in this book, but Efrain, Cory, Indie, and Preston will be back in Wild Card. I'm having too much fun with them to stop. \n\nThank you putting up with the name change, and if it makes you feel any better, I changed the title (again) elsewhere. Efrain and Cory now goes by Wolf Like Me (after the TV on the Radio song). For all the inspiration I have for my chapter titles, I'm absolutely terrible at coming up with good book titles. Efrain and Cory was too bland and clich\u00e9, Wolfie Kitten Iceman Maddog was too cringe-worthy. I no longer trust my own judgement on titles and vetted Wild Card and Wolf Like Me with both my husband AND my editor (and then ran it by a couple friends) before I went public. \n\nThank you for reading! ~Dayne \n\n~*~*~*~ \n\nChapter 25 \u2013 This Little Kitten Went to Market \n\nSixteen days. \n\nMy first months at VT had breezed right past me, leaving me with just sixteen days before I had to drive back home for Christmas. In eight days, I would be handing in my final term papers and attending my last lecture. Indie's presentation to the department heads would be around that time. Preston would start working on the annual Pride conference set for the spring on top of studying for all his exams. In ten days, I would sit for my first exam. The oral exam for my advanced Spanish class would be in fourteen days, Efrain's oral exam would be two days before that. On the fifteenth day, I'd have my very last written exam. \n\nSixteen days. \n\nIn sixteen days, I would have to pack everything I had in my dorm into my truck and spend one last night with Efrain before I returned to my parents. Sixteen days felt like it would slip through my fingers, while the ten days I'd be without him would drag on forever. I knew a few months of dating didn't really warrant this level of attachment, but I'd gotten used to being with him. We woke up together, went to school together, practiced together, played together. We spent more time in each other's company than not. I knew we'd stay in contact \u2013 Skype, text, phone calls, whatever \u2013 but it wouldn't be enough if I couldn't touch him. I was not looking forward to sleeping alone. \n\nSixteen days to get my fill of Efrain, and then ten days to be alone before I saw him again. I could make sixteen days last, and ten days breeze by. Right? \n\n~*~*~*~ \n\nEfrain tossed a handful of chopped yellow onions over the minced garlic he'd already saut\u00e9ed in olive oil and rendered bacon fat. With a neat flick of his wrist, the ingredients flipped over in the skillet. I imagined what he must have looked like as a boy when Lena would let him practice flipping with a skillet and some hard candies. He'd perfected the technique well enough that he could do it without watching the pan, which allowed him to stare daggers at Preston. My bestie was currently leaning on my shoulder with his arms wrapped around my left bicep while we looked at music on Efrain's laptop. \n\nWe'd already discussed my friendship with Preston, even the fact that I'd slept with him all those months ago, and while my boyfriend understood that my best friend was just one of those touchy-feely types, small hints of jealousy still popped up every once in a while. I fully expected Efrain to waltz up at any moment and do something to remind everyone that I belonged to him and him alone. \n\nHe finished with the onions and poured in some chicken stock to deglaze the pan. Sure enough, between deglazing one pan and setting up the other, he stalked over and laid a rather possessive kiss on me. Preston sat up with a small smirk and stole a sip of the beer Indie had been drinking. \n\n\"You occupy my guy, I occupy yours,\" he said, waving over at Indie, who had been innocently chopping bell pepper and jalapeno for some saut\u00e9ed corn dish with a fancy name the whole time. \n\nEfrain patted Preston on the head, his urge to mark his territory sated for the time being, and returned to the stove. In a heavy frying pan, he arranged chicken thighs and with herbs, spices and the bacon pieces he'd fried up before the garlic and onions. The onions and chicken stock were poured over and the whole thing brought to a boil before he covered the pan with a lid and set it to simmer. \n\nIndie dumped the peppers in a small bowl then got to work on a red onion. Preston had been amused that they kept four types of onion on hand, and knew which ones to use for which purposes (or at least 'Rain knew). I didn't see anything odd with it myself until I realized my mom only used two types \u2013 yellow onions and the canned onions you put on green bean casserole. \n\nOkay, so we were dating with unapologetic foodies. \n\nAlright, I was dating a foodie. Preston was doing something with his foodie, but kept insisting that they were just fucking. Considering the times we'd overheard them when they thought we weren't in the house and the written noise complaints Preston received from management at his apartment complex (proudly displayed on his fridge, natch), it was obvious that they were fucking. But, it was also obvious to anyone with eyes that they weren't just fucking. \n\nPainfully obvious. \n\nWe're just friends who fuck. \n\nMy ass. \n\nWith the main dish simmering, and all the prep done on the rest, Efrain decided that he'd had enough Oh Wonder and Florence + the Machine and took back over the music. However, standing behind me, with one arm around my waist and the other reaching around to mess with the laptop, seemed to be his way of reclaiming me, if not dislodging Preston all together. Indie added insult to injury by taking back his beer with a comment that Preston was still technically underage. \n\n\"Until next month,\" he protested and sidled over to Indie, intent on using his masculine wiles to get some booze before January. \n\nIt was on the tip of my tongue to remind him that trading sex for beer wouldn't work since he was probably going to put out anyway, but my phone signaled an incoming text. \n\n\"Well, that sucks. Two new roommates, now.\" \n\n\"Romero and his girlfriend settled on an apartment, I take it,\" Efrain said. \n\nI nodded my head. \"Gio says he'd rather move into my room than have to share with someone he doesn't know.\" \n\n\"Doesn't hurt that you're always over here, either.\" \n\n\"Might as well just move in here,\" Preston said. \"Don't give me that look. Half of your clothes are here anyway.\" \n\n\"And all of your shoes,\" Efrain added. \n\n\"Dude,\" I said, \"there's at least one pair in my dorm.\" \n\n\"Not like I don't have that fourth room,\" Indie shrugged. \"You're here enough that I should be charging you rent.\" \n\n\"How much is rent?\" Preston asked. Indie quoted a figure that even I thought was low. \n\n\"I'd be crowding 'Rain.\" \n\n\"You wouldn't be crowding me,\" he said without even having to think about it. \n\n\"Not having to haul all my stuff back to Texas over the break would be cool. But, I can't leave Gio with three new roommates.\" \n\n\"Laurel is moving in with Mike before the break,\" Preston continued. \"He could take that room.\" \n\nAnd before I could argue any further, he dragged me off to take pictures to text to Gio, who was sold on the words cheap rent and your own bedroom. In less time than it had taken to make dinner, I'd been strong-armed into moving in with my boyfriend. \n\nWe'll just pretend I wasn't camped outside the campus housing office the following morning so I could cancel my lease as soon as they opened. \n\n~*~*~*~ \n\n\"But this is my jam,\" Cory protested over the music. \n\n\"You said that shit about the last five songs,\" I shot back. MIA's Bring the Noize thrummed in my ears and even I couldn't help wanting to move. Of course, that didn't mean I was going to make it easy on him. \n\n\"Don't care. You're still dancing with me,\" he said and dragged me back on the dance floor. \n\n\"Dude, you just want to grind your ass on my dick.\" I knew he'd start doing cute shit if he thought I needed to be persuaded. I was quite willing to let him grind his ass on my dick, but making him work for the privilege of doing it again was much more rewarding. \n\n\"So?\" He grinned and tugged at my hand. I rolled my eyes, but followed him anyway onto to the dancefloor at Market. I'd managed to avoid the gay bar scene so far, and wasn't too keen on being here in the first place. However, there was something to be said for being able to feel up on my boyfriend in public. \n\nI wasn't as dressed up as I would for the straight nightclubs \u2013 just my Doc Martens, black slim-fit jeans, and an impossibly soft olive green v neck t-shirt that Cory kept feeling up on. Everything clung to me, showing off the definition of my chest and arms, and he couldn't keep his hands off me. Of course, I couldn't keep my hands off him either. Cory's body had been hot to begin with, but had attained a new level of scorching over the football season. The clothes that had been a loose on him when he came to VT were now tight, showcasing exactly where he'd gained his \"freshman 20.\" \n\nI admired the way his thighs and ass bulged under the denim as we wound through the throng, our sizes just enough to get the other dancers out of our way. Cory found a likely spot just the right distance from the speakers and lights and pulled me to him. We'd danced together in clubs before (if you considered dancing with female partners while out with the guys \"dancing together\"), so we knew each other's moves well enough that we easily fell into sync. Cory knew how to keep his body loose, knew how to dance with more than just his feet, knew which beats to dance on. Some of the girls I'd seen in clubs would try to dance to MIA's rapid fire vocalizations instead of the beats in the background, which sadly meant some kind of jerky hip movement that was less twerking and more rapidly bashing my junk with their bony asses. \n\nCory's movements hurt in a different kind of way. \n\nHis insanely hot hips whined, popped, and rolled through the song while I fought the overwhelming need to rapidly bash his ass with my junk. At the chorus, he turned around and rolled his body down on me like a fucking Labare dancer, dropping it low and bringing it back up with a satisfied smirk over his shoulder when his ass glanced over a certain length of flesh. The next time around, I followed him to the floor and tried to not give into my dick's demands that I throw him down on it. \n\n\"Ten bucks says Blondie's a power bottom.\" I heard over my shoulder, but I wasn't going to take my eyes off Cory long enough to find out who, let alone tell them they could find their own damn power bottom because the one writhing against my erection was M-I-N-E. \n\nWhen the DJ lowered the tempo with the next song, I spun Cory back around and shifted my leg between his, bringing him close. We danced even tighter together, touching from our hips on up. He draped his arms over my shoulders and my hands gripped his ass to press his hips in tighter still. His glutes were solid and firm under my hands, and I liked that only I knew his ass still had that gratifying jiggle when I bounced it off my groin. \n\nGoddamn. \n\nWe'd been at Market for less than half an hour and I was already primed for dipping out and going back to my place. Forget that Indie and Preston rode with us, I needed to swallow him whole right then and there. Maybe get him to do some of his moves with considerably less clothing. \n\nThe lack of space between us limited our ability to do more than sway, but I seriously ran out of fucks to give. His thigh, whether on purpose or not, brushed against me in those small movements. Our eyes met under the pulsing lights and my mouth pulled up into a predatory grin. He recognized the signal that I was already making a list of the things I wanted to do to him once I got him alone. His own grin signaled that he'd be more than compliant and willing. Oh, fuck yes. I slanted my lips over his and fed my tongue into his mouth. I couldn't care less that we'd stopped moving, as long as he kept kissing me. \n\nAnd then, some patrons near us started cheering. \n\nCory pulled away, probably thinking the show was starting, but everyone seemed to be staring at us and I realized we were being that couple. You know, that one couple at every bar who are so fucking into each other that they can't stop publicly dry humping? He was embarrassed for all of two seconds before I growled in his ear, \"Fuck it, let 'em watch.\" \n\nChills radiated out from where my teeth bit into his neck. He pretended like his knees got weak and several catcalls, encouraging me to \"get 'im\", rang out from the crowd around us. But, then another song started and we were soon forgotten. We went back and forth between dancing and being \"that couple\" while dancing until the club's owner and emcee, Elle Porcine, an old-school queen who looked like she'd be as big as Cory was when not in drag, started clearing the floor for the next round of performances. \n\nI pulled Cory back to our spot at the bar. Someone had taken all but one of the barstools, but it didn't look like Preston and Indie would be coming back here for the performance. They'd been on the dance floor the whole time. It turned out that, once Indie got a couple drinks down, he wasn't that bad of a dancer and could manage a passable white boy two-step (which had most likely been Laurel's doing). Although, having a hyperactive twink wiggling all over you would do wonders for your perceived dance skills. \n\nCory hopped up on the remaining stool while I stood between his thighs and leaned back into his chest. His fingers crept around my sides, with his hands eventually coming to rest on my stomach. The positioning seemed innocent enough, but I doubted it would last. I could already feel him pawing at my t-shirt as Elle began joking with the crowd. \n\n\"Damn, you's some freaky bitches,\" she said to cheers and catcalls. Her voice was seriously fucking deep, and made for an interesting contrast with her face, which, as Preston had put it, had been \"beaten the house down.\" Not sure what that was supposed to mean exactly, but Elle's makeup was so believable that I doubted her Adam's apple and not her tits. At least, until she spoke. \"I can't leave you fuckers alone for five minutes before you start pulling shit. Seriously, a girl can't get a moment to adjust her tuck,\" the audience laughed at that, \"without someone trying to fuck on her dance floor.\" \n\nWarm fingers had slipped under the hem of my shirt and began lightly caressing my stomach, dipping just barely past the waistband of my boxer briefs. I shifted a little, rubbing myself against his hard-on, and heard a low moan. His fingers dipped just a fraction lower, and I turned my head to get at his lips. \n\n\"Damn, Lothario and White Bread are still going at it,\" she dead-panned. I had my tongue shoved halfway into his mouth before I got the impression that we were being watched. The emcee, along with most of the audience, eyed Cory and me. \"Oh, no, don't stop on our account.\" \n\nI looked back at Cory. \"You're paying for that later,\" I said, but he just grinned. \n\n\"Don't know what he told Blondie, but it must have been good,\" Elle heckled. \"Mind if we watch?\" \n\n~*~*~*~ \n\nPreston and Cory chatted animatedly two steps ahead of us as we made our way back to Cory's truck. \n\n\"So, that was different,\" Indie said. \n\nI shrugged. I was fucking impressed as hell with some of the performers, and I knew Indie enjoyed himself enough, but admitting it was hard. \n\n\"Mae Tricks was good,\" I said off-handedly. \n\nCorrection: Mae Tricks was unreal, otherworldly. \n\nThe pint-sized Latina lip-synced to Wondaland by Janelle Monae, which blew my mind anyway. If you're performing Janelle Monae, I'd expected something like Dance Apocalyptic or Q.U.E.E.N from The Electric Lady, or at least Tightrope if you really had to do something off The ArchAndroid. I doubted anyone even recognized the song at all, but it didn't matter, she fucking sold it. \n\nHer costuming was on point; instead of playing on Monae's gender ambiguity, she came out looking like an android, a living doll. She fucking wore this black doll dress trimmed in bows and ribbons that was barely long enough to cover her panties. Mae had to have dyed everything since the trim matched the panties that matched her wig and mile-high heels. Her makeup went from head to toe, with mechanical joints, silicone-looking skin, and small panels of exposed wiring randomly placed on her legs, arms, chest, and back. Mae worked in small movements \u2013 isolations, ticks, pops, locks \u2013 to her performance, creating this illusion of a malfunctioning misfit toy in a last-ditch effort to avoid the scrap heap. \n\nMae wasn't the most elaborate performance of the night, but every other performer paled in comparison and even Elle Porcine complained about being upstaged by the reject Real Doll (a name which soon became Mae's tagline). \n\nHoly fuck. \n\n\"I wanted to touch her wires,\" Preston giggled up ahead, referring to one of the lines in the song. \n\n\"But, dude, fucking JoeD!\" Cory enthused and Preston began squealing about the drag king. \n\nJoeD was pretty fucking cool. He did Money Makes Her Smile by Bruno Mars and was by far the best at affecting a masculine swagger. And his B Boy stylings were insane. \n\n\"I know us drag virgins aren't supposed to have opinions,\" Indie said confidentially. \"But, the fake facial hair killed it for me.\" \n\nI nodded in agreement. \n\n\"The packing,\" I added. \n\n\"The packing,\" he agreed. \n\nThere were some packs that just killed it for me, including one king that looked like he'd stuffed two pairs of tube socks down his pants. JoeD, however, made it work. He had all the right moves, and a thankfully modest pack that complimented the illusion. Like Mae and Elle, he knew makeup, or knew people who knew makeup, and knew how to draw attention where he wanted it. \n\n\"But, there are worse ways to spend an evening.\" \n\n\"Must have been horrible for you,\" I said. \"You actually looked like you were enjoying yourself.\" \n\n\"You looked like you were dying,\" he said. \"By the way, how's that marathon erection?\" \n\n\"Like you didn't have your little squeak toy bouncing all over you.\" \n\nHe narrowed his eyes. \"Lothario and White Bread.\" \n\nI narrowed mine back. \"Jack and Beanstalk.\" (Once Elle Porcine had grown bored with teasing Cory and me, the tall as fuck guy with the pretty boy wiggling in his lap became the next target.) \n\n\"Get a room, already,\" Preston said and turned back to Cory. \"Do they always bicker like that?\" \n\nCory shrugged and flashed me one of those cute as fuck grins with the fucking dimples 'n shit and I found myself smiling back like a fucking idiot. I heard Indie chuckle the moment Cory turned back and continued to the truck. \n\n\"JJ was right,\" he smirked at me. \n\n\"About what?\" \n\n\"It's fucking hilarious watching you pretend that you're not in love with him.\" \n\nHe patted my back and left me frozen in the parking lot with a short-circuiting brain. \n\n~*~*~*~ \n\nSomething was off. \n\nEfrain danced all night, and not even Elle Porcine's repeated taunts could stop us from getting all over each other on the dance floor. I think he had more fun than he wanted to, or wanted to admit. Market was good for him as I doubted he'd been in a public space in which it was okay, even encouraged, to be openly gay. He'd even shoved some dollar bills into Elle's breastplate and went nuts about Mae's performance. \n\nBut it was obvious that he had something weighing on his mind by the time he'd climbed into the truck. We still held hands over the center console, though he shot Indie a warning look and told him to shut up for some reason. ",
        "Once we got back home, I took his hand and led him to what was now our bedroom, resolving to get it out of him. My plan, however, was shot the moment the door closed. \n\nBefore I could get a word in, Efrain pulled me into one of those indescribable kisses, a sort of open-mouth peck that straddled the line between sweet and scorching. Full lips teased mine open with only occasional licks of his tongue, while his hands framed my face, holding me in place for the ongoing torment. \n\nWhen he pulled back, it took serious mental effort to remember that my body was supposed to exist in a solid state. Or to remember that I was supposed to ask him something. I would have been totally fucked if he'd decided to really use his tongue. \n\n\"Vato,\" I said when I finally came to my senses, \"something bothering you?\" \n\n\"No, just thinking through something,\" he said and kissed the corner of my mouth. \n\n\"Want to tell me about it?\" \n\n\"Soon.\" \n\n\"But, not now?\" \n\nAs our eyes met, I could still see thoughts whirling behind his green-gold gaze. He kissed me again. \"I think I...\" he began, but then returned to kissing me. This time his tongue swept in and if I had any sanity left, I would have recognized that Efrain was stalling. He waited until I whimpered in surrender before he spoke again. \"I think I want you to take me.\" \n\n\"Take you where?\" He nibbled across my chin and toward my ear, which I fully blamed for my sudden bout of stupidity. His tongue flicked out to tease my earlobe. \n\n\"Fuck me,\" he breathed against my ear. Despite his low voice, the hard \"k\" emphasized the sharp tug of his hand in my hair. My eyes rolled back. \n\n\"You sure?\" \n\n\"You don't want to fuck my ass?\" His fingers tightened, pulling my head back. \n\n\"No, I want to, but\u2013\" I cut off in a whimper when he slid his other hand down and firmly gripped my cock through my jeans. \n\n\"So, do it.\" I skimmed my palms over his lean flanks and down to his ass, curling my fingers forward to knead the firm cheeks. Efrain's hips arched back into my hands and his voice became breathier. \"I need to feel you cum.\" \n\nOh yeah, that did it. \n\nI backed him toward the bed, ripping off our clothes as we went, and didn't even wait for his ass to hit the sheets before working my mouth over his body. \n\nIt had been a joke when I mentioned topping him, and I knew he was being polite when he offered to try it, but once the idea had been planted, thoughts of feeling him lose control, of cumming deep within him, refused to be rooted out. But, if I only got one chance to wrap his ass around my cock, I wanted to make it good for both of us. I had done my research, found ways to ease him into bottoming for me. Mutual fingering and rimming had become a part of our routine, and he liked that enough that I was sure he'd still want anal play regardless of how this night ended, but I'd still been patiently waiting for his signal that he was ready for more. \n\nEfrain cradled me between his legs as I sucked and bit from lips, to neck, to nipples, to hips, to tight thighs lifted and spread open for my use. I stopped just long enough to get a pillow under his hips then pushed his knees apart and toward his shoulders. A short pause to admire the view before I dove into his hole and ate him like a starved animal. He gripped the sheets and nearly ripped them off the mattress. The only other time I heard him pant this hard was during endurance drills. \n\n\"Lube?\" I asked and he passed me the bottle that we kept tucked behind the bedside lamp. I continued licking and probing while coating my fingers. My mouth moved up to suckle his balls as I pressed against his ass without entering, massaging until he all but begged me to slide in my fingers. I fed my middle finger into him and he demanded the second. His breath caught as I slowly worked in and out of him. \n\nToes curled, back arched, fingers clenched in my hair, Efrain's breathed rapidly through clenched teeth. When my mouth closed over his head and my lips began a slow descent down his shaft, he groaned. The sound reverberated through me, twitching my cock and pearling a bead of pre-cum on my head. I sucked firmly on his dick and felt him tightening in answer to my fingers' stringendo thrusts. \n\n\"Now,\" he moaned, fighting to exert control over me while simultaneously losing it over himself. \n\nI swallowed him deeply then popped his cock out of my mouth. \"Sure you're ready for this?\" \n\n\"Fuck. Me. Now.\" His growls cut off sharply and his eyes rolled back when I slipped my fingers from him so I could reposition myself. \n\nOn my knees, with my slicked-up cock rubbing his almost feverishly hot ass, I paused to give him a chance to back out, but his heels dug into my ass, motioning me forward. He opened under the pressure, allowing my head to pop in past his inner-ring. Efrain hissed, and I worried that I'd hurt him, but he pulled me forward again. I rocked my hips and slid home, a slow journey that left us both breathless and shaking by the time I was fully sheathed in him. \n\nEfrain laced his fingers between mine and pulled me down to him. My tongue plowed into his mouth, as I fought to stay still until he could adjust to me. As desperately as I wanted to thrust into him, I wanted him to enjoy this as much as possible. I started small, rocking my hips back and forth, gradually building movement and tempo, until my thrusts were just shy of heavy pounding and his groans took on a desperate edge. \n\nAnd still he begged for more. \n\nI wrapped an arm around him and reached between us to grab his dick. His mouth returned fire, plowing into mine as I had done to him earlier as tension built. I knew what was coming next. It only took one orgasm with my fingers inside him for us to learn that his ass was incredibly sensitive right after he came. Sure enough, the moment his dick unloaded onto his stomach and chest, he started trying to pull his ass off my cock. I held onto him tighter and continued thrusting while he thrashed under me. If I had any concerns that this hurt, Efrain moaning \"fuck yeah\" and \"fuck my ass\" over and over in my ear soon dispelled them. I fucked on as he gripped me harder and dragged me over the edge. \n\nI fell apart at the molecular level, unloading deep within him, whimpering into his mouth, while he wrapped his arms and legs around me hard enough to make me sore the next day. \n\nI collapsed on top of him, but somewhere between blacking out and coming back to my senses, we'd cleaned up with the washcloth he'd left on the nightstand earlier. It was another used jizz-rag he'd most likely planned to shove in my mouth, but I was more surprised that I had been conscious enough to assist with the clean-up. \n\n\"You doing alright?\" I asked. We snuggled up and he slid his knee between my legs and pulled my top leg over his hip. \n\n\"Better than alright,\" he murmured against my neck. His lips teased over me, moving up to my lips. \"It's not my preferred role, but we're definitely doing that again.\" \n\n\"I wouldn't say no to that,\" I said. \n\n\"Good.\" \n\n\"So, was that what made you all quiet?\" \n\n\"No,\" he said. \n\n\"And you used sex to buy yourself some time,\" I joked, but then sobered up. \"Was it that bad?\" \n\nEfrain paused, seeming to weigh his next words while his hands stroked over my back. \"Just something Indie said.\" \n\n\"Oh? What was that?\" I closed my eyes with a contented sigh. His hands always felt good, but felt even better after we'd fucked. \n\nEfrain pulled me closer and I nuzzled his neck so that his next words hummed against my mouth. \"That it's obvious I'm in love with you,\" he said quietly. \n\nI lifted my head and looked at him. The \"L\" word hung between us. \n\n\"Are you?\" I asked cautiously. \n\nHe propped himself up on his elbow, looking as if he was trying to find the right words, before he finally answered. \"I don't know.\" \n\n\"Oh.\" I looked away. \n\n\"But, I'm getting there.\" A smile had lifted the corners of his mouth by the time I looked back at him. \"I know that might not be the answer you want, but\u2013\" \n\nI wrapped myself around him and attacked his mouth before he could finish. He chuckled when I finally let him go. \n\n\"I take it we're on the same page,\" he said and I kissed him even more fiercely. \n\n\"Yeah,\" I said. His forehead rested on mine. \"The same page.\" \n\n~*~*~*~ \n\nPS \u2013 Like hell I'm going to put them in a foursome! \n\nOkay, so maybe I've plotted out an alt scene. And maybe I started writing it. And maybe I'll post it. And maybe I won't. \n\nBUT, there's no fucking way it would be canon. Nope, not for my guys."
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "twink",
        "interacial couple",
        "comedy",
        "anal sex",
        "fingering"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-25"
}