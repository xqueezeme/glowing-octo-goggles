{
    "title": "Arcanum - Of Steamwork and Magic Ch. 23",
    "pages": [
        "May 23<sup>rd</sup>, 1886 \n\nI had seen many things in my times on Arcanum -- but few struck me as uniquely beautiful and melancholy as the sight of dawn over Tulla, the city of mages. The entire edifice felt isolate and venerable, with an ancient sense seeping from every humble sandstone and brick building. The palm trees that grew around several magickally sustained oasis waved in the morning breeze, and the distant, eerie sound of song echoed from tall minarets that were situated at each corner of the perfectly rectangular wall that surrounded the city. Robes men and women of all races went to pray at their alters, to commune with the universe, to meditate. The scent of magic was so strong in the air that I could practically feel it, and my pocket watch had seized up and almost immediately upon our arrival and I had given up even trying to wind it. \n\nI watched all of this from the patio on the roof of the humble home that Simeon Tor had graciously given over to me and my companions. From the kitchen, I could hear Beatrice instructing Gillian on how to cook without servants, while Sally stolidly listened to Maggie grumble about how the magick was giving her a headache. I felt a twinge of guilt for keeping Maggie from her promised homeland -- the Iron Clan of the dwarves -- for so very long. But with Beatrice once more among the living, we could easily dart around Arcanum, teleporting from place to place as many times as Beatrice's endurance could allow. \n\nAnd considering last night, her endurance had not suffered any degradation for her time in the strange river that she described as the afterlife. The faintly wistful tones she had used filled me with a sense of disquiet. I had not fought my entire life to choose my own way to want to have my agency stripped from me so effortlessly. I stood, stretching my arms behind my back as the sun finally escaped from behind the curve of the cliff, spilling across the city directly. It swiftly banished the night chill that swept across deserts, and brought with it my desire to see through the clues of Pelojian. And I knew exactly where to start, after all. \n\nBee and I came to the Mural of Enlightenment after a simple but sumptuous breakfast. We cut an odd pairing in Tulla as we walked through the groves and gardens, past the homes and libraries. Me, a half-orc in a fine three piece suit that I had only just now gotten a chance to launder and iron properly, with Beatrice in her chainmail armor and gambeson, which she had spent some time deying to have the symbol of the Panarii faith -- an unbroken golden ring. It was like modernity and the early middle ages had decided to stride through antiquity, while thumbing its nose at mores towards race and relationships. To the credit of the mages of Tulla, they took no mind of our holding hands, nor the times that Beatrice stopped me, claiming an incredibly important thing required my attention, only to instead kiss me upon the lips, then laugh. \n\nThe Mural itself looked exactly as I had described it previously: The robed man (Pelojian) standing between the desert and the city of Tulla, and the entire scene was banded about by five symbols -- corresponding to the five symbols that ringed around Pelojian's pool out by the front. And four of those five symbols -- in order from left to right: a star, a crossed circle, the glaive symbol, a sticklike figure, and finally a spiral -- was themselves ringed by four more symbols. The only symbol that lacked four minor symbols was the glaive symbol, which sat at the apex of the banding's central arc. \n\nI rubbed my chin as I observed this -- and started when I heard a footstep beside me. I turned and saw Simeon Tor. He smiled, politely, at me while I nodded to him. \"Mr. Tor,\" I said, bowing my head. \n\n\"Dr. Cog,\" he returned. \"I see you have come to examine the Mural of Enlightenment.\" He shook his head. \"We have used this for centuries.\" \n\n\"How?\" I asked -- supposing that might itself be a clue. \n\n\"Well,\" he said. \"A mage looks at the world rather differently than a scientist. We take in the totality of the image -- the color, the light, the sensation it evokes.\" He gestured to the image. \"We reflect on how all the parts work in synthesis. So too, does magick work. One does not picture each individual step upon the route of casting a spell. One simply wills...\" His brow furrowed and a green glow shrouded his palm. A moment later, it had faded, revealing a rose. \"...and it is so.\" \n\nI tapped my chin. \"Well, Mr. Tor,\" I said. \"As you say, scientists do look at the world differently. We believe you can only understand something by knowing how each component functions. And so, we begin by taking apart a thing to the basic, most fundamental parts of its construction.\" I grinned. \"This is how we've finally learned the reason behind cancers and how they spread, via the vivisection of chimney sweeps in Tarant who dropped dead of cancer in the lung.\" I turned back to face the mural. I noticed Beatrice leaning close to the star symbol, as it was the most easily observed from her perspective, being so near to the ground. \n\n\"What is it, Bee?\" I asked. \n\n\"Oh, it's just I know these symbols,\" she said, nodded. If one could picture the star as a compass rose, then know that she pointed first to the northern most symbol, then to the eastern, southern and western -- her finger moving in a clockwise circle. \"This is the symbol for magickal college of Divination, Metaphysical, Mental and Temporal.\" \n\nMy brow furrowed, while Mr. Tor shook his head -- and I saw a wry look of amusement flit across his face. For a moment, I felt a sense irritation flare within me. I could see Mr. Tor thought we were going about this meditation business in a backwards way. I could imagine him telling a student becoming overly fascinated by the individual symbols and their placement that they were missing the point of the Mural. Well. Let him do as he would -- I would do as I would. And I was putting some pieces together. My fingers caressed my mustache. \"There seems to be a relationship in those colleges, no?\" \n\nBee shrugged as she stood, her armor clinking softly. \"I suppose...the four schools are all somewhat introspective and inward looking, handling concepts that are a bit, you know...\" She wiggled her fingers and giggled. \"Airy?\" \n\nI chuckled. \"Though, what is exactly the school of the metaphysical? I've never heard of it.\" \n\n\"Well, mages hate to talk about it,\" Bee said. \"Meta handles spells that prevent spells from functioning. With so many technologists about, I can see why.\" \n\nI nodded, then pointed to the crossed circle. \"And those symbols?\" \n\nBee counted them off on her fingers: \"Starting from the top? Earth, Air, Water...Fire...\" She trailed off. \n\n\"Again, quite the correlation,\" I said, nodding. \"And that?\" \n\nLooking upon the stick-like figure, Bee frowned. \"Good heavens, those are the symbols for White Necromancy, Black Necromancy, Summoning and Nature.\" \n\nI nodded. \"That figure could be taken as a crude symbol of a humanoid. Or, maybe, a symbol for all kinds of life. Can Summoning...well, summon a humanoid?\" \n\n\"Several of the spells do involve the summoning of sentient beings, yes,\" Beatrice said, nodding. \"And for the last, the spiral? Those deal with space-\" \n\n\"That one is the symbol of Conveyance is it not?\" I asked, pointing at the top of the star symbol. \n\nBeatrice punched my shoulder lightly. \"Resh! Knowing this is my job! How did you know the symbol for Conveyance anyway?\" \n\n\"It was on that strange...\" I paused. \"That strange...tile...near our home!\" \n\nBeatrice gasped as I got out one of my many pieces of paper, scribbling down the exact notes of which colleges were dedicated to which symbol. Then we both hurried to one of the minarets -- they clearly had the best view of Tulla. Once there, we were allowed up by a bemused looking man whose job it was to sound the call for the monastic orders of Tulla. Once there, we had a view of the entire city from on high, and there, we could see that there were symbols scattered about it. The bemused man, upon seeing our reaction, chuckled. \"Ah, the symbols of the colleges?\" he asked. \"Sometimes, when they are touched, they light up, but no one has ever made them light up twice in a row.\" \n\nI nodded, slowly. \"A pattern...\" I rubbed my chin. \"And the symbols of Pelojian's pool, do they repeat elsewhere?\" \n\n\"There are four doors,\" the man said. \"In the temple's crypts. But they are sealed by the most powerful magicks that we've ever seen -- and each has one of those symbols. Not the bladed one, though.\" \n\n\"Clockwise, I'm thinking, starting from the north,\" I said, softly. \n\nBeatrice chuckled. \"Why from there?\" \n\n\"Well, we'll have to try every order if that doesn't work,\" I said. \"But fortunately, there are only twenty four permutations. It shouldn't take us more than a day to try each one -- and I bet once we find the permutation that works for one, it'll work for all. But even if each has a unique permutation of symbols, it's only ninety six different permutations -- twenty four for each.\" I grinned. \"If we didn't know which symbol went with which door, we'd be looking at...\" I paused, then started to scribble down some back of the calculations. \"Roughly? ...twenty trillion possible combinations.\" \n\n\"Good heavens!\" Beatrice exclaimed. \n\nI grinned. \"The wonders of patterned mathematics,\" I said, showing her the equation I had used. Beatrice looked like she was trying very hard to be impressed -- but utter incomprehension showed on her face. \n\nThe first set of symbols we attempted was the elemental set. The two of us came upon the symbol for the college of Earth. I knelt down to examine the plate, and saw that it did not recess, nor show any sign that it could be moved. However, simply stepping upon it caused the symbol to flare with a brown, earthy light. I nodded and together we set off for the far end of the city, hustling under the balmy desert sun. Coming upon the symbol for the college of Air, I stepped on it and it shone with a brilliant blue light. Beatrice, being a dear, immediately teleported herself to the roof of the nearest building. By shading her eyes and leaning forward, she was able to catch a glimpse of the Earth symbol -- and called to me: \"It's still lit up! I think that means this is working!\" \n\nMaggie found us as we had just found and pressed the symbol for Fire, looking quite grouchy at being forced to stay in Tulla -- it seemed the magick did not agree with her dwarven sensibilities one iota. However, seeing our progress, she came with us to witness the opening of the first door of Pelojian's vault. I laughed when we came into the crypt itself -- a vast warren of narrow tunnels dug into deep rock, with covered niches for the generations of mages who had been interred here for their final repose. The actual door itself was open before we even arrived, unlocked by the final button in the elemental cycle. Stepping in with Beatrice's cantrip glowing over our heads, we three saw what no one but Pelojian had seen for nearly a thousand years: A sparse, empty room containing a single plith that itself had a small scroll situated upon it and a glittering amulet that itself had a single gemstone set in a golden ring. I lifted the amulet, then placed it about my neck, reasoning aloud: \"Surely, it'll have some such to do with a future clue!\" \n\nThe rest of the day was spent darting about the city of Tulla, finding the symbols and depressing them in the right order while collecting my companions as they wandered from their contemplation of Tulla to find what exactly it was that I and Beatrice were doing. As evening fell, the whole lot of us returned to the home to peruse what we had found: Four scrolls, each one as untouched by time as St. Mannox's journal. However, unlike the ancient saint, these journals were written in crisp, clear, Tarantian quality common, as easily read as the morning paper. \n\n\"Quite unsettling, if I do say so myself,\" Gillian remarked, even as I read, in their collected form, the Cantos of Pelojian. \n\nAll that comes before \n\nIs rooted in this earth \n\nIn this water \n\nIn this fireworks \n\nIn the air that surrounds us \n\nNot thought of \n\nAs last \n\nBut what came first \n\nAnd the final step \n\nBefore you come to Me \n\nThere is only one step \n\nWhich begins a journey. \n\nWise, are they \n\nWho wear the cloak of Truth \n\nClear is their way \n\nClear is their vision \n\nAnd clear will be \n\nThat which they seek \n\nPower \n\nStands strong \n\nNot first above \n\nbut just underneath \n\nAs all that is raised \n\nNeeds the Power \n\nTo raise it. \n\nThe tie that binds \n\nThe first to the last \n\nThe first to its child \n\nIs the Spirit of all \n\nThe Spirit that calls \n\nAnd the way \n\nMuch brighter \n\nBefore you. \n\nUpon finishing the first read through, my companions looked to me. Sally was the first to speak: \"What the bloody -hic- does all tha' mean?\" \n\nI sighed, slowly and pinched the bridge of my nose. \"I haven't the foggiest,\" I said, then set the scrolls down -- making a note of which ones I had found in which doors. The first verse had been found behind the Elemental door. The second had been found behind the Star door. The third had been behind the Humanoid Manipulation door (as I termed the collection of colleges comprised of summoning, nature, and the two necromantic arts.) And, lastly, the fourth verse had been behind the Mind door -- the spiral symbol. \n\n\"Come on!\" I said. \"Let us go to the pool.\" \n\n\"But it's dark out,\" Gillian, frowning. \n\n\"Yes, yes, but Pelojian's ghost comes at midnight. I want to see this done before too long -- for Maggie's sake if nothing else,\" I said, flashing a grin at our beautiful dwarfess. The lot of us trooped to the pool, arriving a good time before midnight. The stars slowly wheeled overhead -- utterly visible in the near pitch blackness of the deep deserts. I had no time for stargazing though: I looked down at the moonlit tiles surrounding the shimmering reflecting pool, and pursed my lips. First, I experimented by stepping upon the elemental circle symbol -- it depressed and glowed with a mixed light of red, blue, white and brown. \n\n\"Ah!\" I exclaimed. \"So, there must be some clue as to which buttons to press in that Cantos.\" I rubbed my chin. \"Not thought of as last but what came first -- and the final step before you come to me. If the you in this case refers to me...then that means the circle comes last before I come to him...\" My finger stroked my mustache. \"The only symbol that is not on any of the doors is this one...\" I stepped upon the glaive shape that served as the apex to the Mural of Enlightenment. Depressing it caused both it and the elemental circle to flash, then shut down with a sizzling crackling noise -- a clear sign that that was not the right pattern. But I had reset the symbols -- none glowed now. \"There is only one step which begins a journey...\" I said, recalling the cantos. \"Second verse. The star!\" \n\nI sprang onto the star, which glowed purple. \"The next verse, how did it go...\" I muttered. \n\nA cantrip flared, brilliant in the darkness of the night, and Gillian's clear diction rang out: \"Power. Stands strong, not first above, but just underneath-\" \n\n\"Aha!\" I exclaimed. \"Just underneath, eh?\" I stepped onto the spiral symbol, which glowed white. Neither it nor the star symbol faded. \"And I don't need to remember the verse for the stick figure, because I know the elemental circle goes last.\" I stepped on them as I spoke, causing more lights to flare, leaving the glaive symbol as last. I chuckled, then stepped upon it -- and nothing happened. I felt a moment of disappointment explode inside of me. Then I snapped my fingers. \n\n\"Ah!\" I said. \"it's not midnight, is it?\" \n\n\"No, sir,\" Beatrice said. \n\nI shrugged, slowly. \"Well, then. I suppose we must wait.\" \n\nI sat down upon the symbol and waited. The time passed in slow contemplation -- though I was sure that the Tulla mages would not be very happy had they known I was mentally designing such technological devices. I had nearly lapsed into sleep when the pool rippled. I started fully awake and watched as a humanoid, robed figure slid from the silvery reflecting pool to hover before me, glowing in the pale moonlight. I could not see their face, but I did not need to see them to know they were Pelojian. I stood, my throat quite dry in the excitement of the moment. \n\n\"Pelojian?\" I asked, quietly. \n\n\"The signs were left,\" Pelojian said, his voice sounding as if he was speaking from a deep, deep well -- echoing and rebounding off distant walls. \"They were left for you and for me -- so that you would know to find me, and so that I would know to come to you...\" His arms spread, slowly and he bowed his head. \"My visions foretold that the Living One would need me. And so, I am here. What questions do you have of me, oh Living One?\" \n\nI wet my lips. \"What is my role in all of this?\" I asked, the question springing unbidden to my lips. I knew I needed to find the Vendigroth device, but...if this master prophet could speak more plainly to me than the Silver Lady... \n\nPelojian chuckled. \"You can be one of two things, Living One,\" he said, his voice kind. \"You can either be one directed and puppeteered by fate, with no choice at all, simply playing a role selected for you by the Gods. Or you can be the only one free to make any choice at all -- and the rest of us are merely dancing to your tune. It really is merely a matter of perspective.\" \n\nI frowned. \"I like neither of them,\" I said. \"I suppose, then, I must get to the brass tacks. I need to find the location of Vendigroth, to find the Vendigroth Device.\" \n\nPelojian nodded, his voice growing somber as a map of the Vendigroth wastes appeared in the air beside him, a glowing dot transfixing a single location. I drew out my atlas and sketched down the location immediately, even as Pelojian spoke. \"The lands of Vendigroth are now drenched in the blood of a million innocents and the land is twisted by their sorrow, their hate, their fear. The innocent can do terrible harm, given centuries to fester in anger. But there is worse, there. The Vendigroth Device...it is, in so far as any tool can be, evil. Its use harms not only the target, but those who wield it.\" \n\nI shook my head. \"I fear I have little choice, Pelojian.\" \n\n\"You always have a choice, Living One,\" he said, quietly. \"Or...none at all...\" \n\nHis body began to fade and I pursed my lips -- a grim mood settling about my shoulders like a heavy weight. It only lifted when Beatrice stepped to my side, pressing her palm to my shoulder, while Raven slid against my back to hug me from behind. I smiled at them, and allowed them to draw me away, for another tiring session of attempting to please five increasingly voracious women. \n\nThe next day at the break of dawn, we set out for the ruins of Vendigroth. \n\n*** \n\nMay 24<sup>th</sup>, 1886 \n\nWe arrived at the site of Vendigroth in a crackle of purple energies and were struck dumb by the sight that stretched out before us. We stood not in a wasteland, as I had expected -- but in a ruin more vast and terrible than I could easily comprehend. Vendigroth had been a city on the scale of Tarant, and in some ways, it had been preserved like a fly in amber. Buildings that easily had been double the height of Tarant's tallest apartment buildings stretched outwards in an even grid of broad streets. However, the buildings and the streets had been cracked, shattered, and then struck down by what must have been a heat to rival the most furious blast furnace or smith's forge. That heat had twisted lamp posts like putty, and clearly, it had flashed brightly enough to scorch every building's face. ",
        "Haunting inverse shadows were cast upon the sidewalks and the streets -- humanoid figures, painted onto walls and stretched along the ground. It looked almost as if I should be able to see the men and women and children who had cast those shadows, but there was nothing there but the whistling wind of the wastes and a taste of grit, of grime, and a feeling of despair. I slowly looked around myself, shaking my head slowly. \n\n\"Dear gods,\" I whispered. \"I...\" I trailed off. \"Technology could never do something like this...\" \n\n\"I doubt magick could these days,\" Beatrice said, her voice echoing in the ruins. \"The Age of Legends has ended...\" \n\nGillian shuddered. \"T-Tarant might end this way, if that beast comes back to Arcanum...\" She whispered, horror in her voice. \n\n\"We shant let that happen,\" I said, nodding. \"Now, come. Lets start searching -- the device has to be here. Somewhere.\" I pursed my lips as we began to walk forward. The city was truly silent and dead -- other than the whistling wind and the faint rasp and crunch of our own footsteps, there was no noise at all, and that lack of sound began to tell upon me almost instantly. Lacking anything to hear save those sounds, my ears began to listen for noises that weren't there. Was that a distant sound of ghostly laughter on the wind, or the shriek of the dying and dead, or were my ears simply playing tricks on me? I didn't know -- but I did keep my pistol drawn and ready, just in case. After an hour of picking through the streets, we finally came to a building that had not simply been bowled over by whatever great force Arronax had cast upon the city. Walking inside, we found it akin to a Tarantian apartment, though there were technological scraps that, even broken and rusted, looked remarkable. If even a lowly apartment could have so many different pieces of technology, it said much about Vendigroth's ability to produce. \n\nThe most remarkable discovery, though, came in the third floor. Walking carefully, the floor creaking under my feet, I found a machine that had not completely broken. It was a rectangular metal box, about the height of a human male, and when I opened the front door, a gasping sound emerged and a wind ruffled my face and a faint humming, electrical sensation reached me. Inside, I saw that several packages of meat and vegetables sat, as preserved as if they had been placed there yesterday, while a roll of newspaper was located on the lower shelf, wrapped around what seemed to be fish. \n\nBy closing the door and opening it again, I was able to determine that somehow, the Vendigrothians had used some kind of vacuum and electrical field combined to preserve their foods! Remarkable! However, the food was not what interested us -- though it was fascinating to learn that they had eaten the same salmon we did today. Rather, what I was interested in was the newspaper. Unrolling it from the fish, I had Raven cast her translation spell upon it and we all craned over to read. \n\nPROFESSOR HUNLEY TO TEST SUBMERSIBLE \n\nLeague of Scientists Dispute his Theories \n\nProfessor Aldous Hunley is scheduled to finally launch his fully submersible watercraft tomorrow at noon, but his colleagues in the League of Scientists claim his theories are wrong and that he is placing himself in great mortal danger. \n\n\"His theories on buoyancy and air recycling are based on sound principles, but he h as come to at best questionable conclusions regarding his ability to control these important factors,\" stated his colleague, Professor Jonathan Frink. He continued, \"I fear his plan for reestablishing buoyancy by meaning of pressurized air is doomed to failure. When that monstrosity submerges, I fear it will never rise again! I have implored him to do more tests before conducting field studies, but he is determined to prove his theories right at any cost!\" \n\nProfessor Hunley's craft, which resembles a large sea creature, can be seen at Dixon's Landing on the South Port before its inaugural run tomorrow. \n\n\"Good god!\" I exclaimed. \"The crashed submersible on the Isle of Despair!\" \n\nThe others cried out in shock as well -- and I rolled up the newspaper. While it might not be of immediate use, I knew it would be utterly invaluable to the Tarantian Zoological society as well as the Technical Journals. We traveled on. The next place we explored in the vast, wilds of Vendigroth was some kind of technologists office, filled with shattered beakers in vast networks of cabinets that themselves had been flung open -- and the ground was covered with strange tracks. Raven attempted to decipher exactly how the tracks shook out, while I found a faded schematic for some kind of chemical augmentation system -- a set of drugs and chemicals that would assist with the movement of the body and the activity of the mind. I took it, planning to study it for later, when Raven said: \"These seem to be the tracks of several extremely large spiders.\" \n\n\"Spiders?\" Beatrice muttered. \"I hate giant spiders.\" \n\n\"I haven't seen any -hic- webs,\" Sally muttered. \n\n\"I don't like this place,\" Maggie murmured back. \n\nI shook my head. \"Ah. Ah! What's this?\" \n\nThis transpired to be another newspaper -- a scrap that I was able to carefully extricate from what seemed to be a rotting, leather book full of other newspaper clippings. As this was the last one that had been placed within, it had been most protected from the ravages of time by its placement and protecting material. The newspaper, when I unfurled it, was translated by a quick casting from Raven. \n\nPROF. HUNLY MISSING, PRESUMED DEAD! \n\nExperimental Submersible Fails to Return! \n\nProfessor Aldous Hunley of the League of Scientists has been listed as missing and presumed dead after his experimental craft failed to return to port at its previously scheduled time. \n\n\"This is a sad day for all science,\" Commented his sometimes adversary on the council, Professor Jonathan Frink. \"We may have disagreed on quite a few matters, but we respected each other's opinions. He will be missed.\" \n\nProfessor Hunley launched his experimental seven days past, and was scheduled to return two days ago. Professor Frink predicted this as a likely outcome, and tried to dissuade Hunley from proceeding with the test, to no avail. \"I imagine my colleague is resting somewhere on the ocean floor about now,\" he was heard to say as he walked away from the press conference where Hunley's disappearance was made public. \n\n\"Well, we could have answered that,\" Gillian remarked, shaking her head slightly. I nodded and together, we emerged from the former pharmacy or chemist shop or whatever it had been in the days gone by. I slowly scanned the horizon of this vast, blasted city, shaking my head -- I was almost positive that the Vendigroth device could be found in this terrible ruin. I was growing increasingly certain that it was somewhere beneath our feet. I drew my pistol, then, an instinct sizzling through me. I swore I had seen a shadow, moving in that alleyway there! \n\n\"I see it too,\" Beatrice whispered, then lifted her palm -- her fingers glowing. She threw out her hand and a small dart of shimmering, magickal light into the alleyway. As it landed, the light shone outwards like a star, and it cast dark shadows and patterns along the walls, thrown into jagged, insane relief by the sudden movement of whatever was within. I saw chiten and limbs and glowing red eyes -- and then they came boiling out of the alleyway: Massive spiders with chittering, clicking legs and humanoid torsos emerging from them, like hideous centaurs from legend. Their faces were clad in mandible armor and dripped with oozing green venom, and they carried weapons, explaining the enigmatic warnings of the halfling from before. \n\n\"Behind us!\" Sally bellowed -- and I glanced back and saw Sally swinging her battle ax in a curving arc. The beast's head went flying and my hand tugged out one of my grenades. I yanked the pin from my grenade and slung it underhanded. The spider-centaurs charged over it and the grenade exploded with a fierce whump, no time to try and intimidate them. The shrapnel tore into their bellies and only one emerged with enough control to skitter forward, hissing and chittering. They lifted their sword above their head, only to bring it down. It struck Beatrice's blade with a shower of sparks. She vanished, appearing behind the creature, standing upon its back. It reared, screeching, and I saw another coming from my left. \n\nI snapped up my accelerator pistol and the bullet took the creature in the face and the head vanished entirely. As the body slumped, Beatrice landed beside me, leaping over her corpse. Then a screech caused both of us to turn -- and I saw that two more were charging. Both suddenly fell, their heads knocked backwards, arrows sprouting from their two largest eyes. They sprawled on the ground and silence rang out. \n\n\"It seems that the Vendigrothians have adapted admirably to their new condition,\" I said, quietly, stepping away from the cooling bodies. \"Come! Lets get out of here before more show up.\" \n\n*** \n\nThe discovery of a faded map for some kind of above ground, fully automated, self propelled stagecoaches the size of small subway cars provided the transportation in this city, before it had fallen, provided us some measure of direction towards the more militarized portions of the city. We were attacked thrice more on the way by scattered gangs of spider-centaurs, but each was seen off without us taking any damage, and without the spiders being more than lightly injured by shot and warnings. But when we did arrive at the militarized section of the city, we found that the Vendigrothian military had built large, ostentatious and to last -- even with the wrath of Arronax befalling upon the city, the fortress remained entirely intact. \n\nAlbeit a touch... \n\nMelted. \n\nBy the front door, we found a large container that served to be some kind of automated newsboy -- doing away with an entire profession in a single moment. Seeing this, I contrived to open it with the pillock known formerly as the heel of my boot. Swinging it open, I found one of the newspapers in was in enough repair to be read, with some more translation magick. \n\nMAGE THREATENS VENDIGROTH!! \n\nCrazed Wizard Warns against Technology \n\nAn uninvited mage burst into the Governor's office yesterday and warned him severely of repercussions if Vendigroth did not stop developing technology. This mage, who identified himself as \"Arronax\" and claimed to be a member of the \"Elven Council\", demanded we observe the decisions of said council. \n\nGovernor Nikolai informed \"Arronax\" that Vendigroth is a wholly independent country. We have never asked for, nor accepted, help from the Elven Council, nor do we recognize its authority. \"Arronax\" launched into a prolonged lecture o the right of the elves to rule, after which the Governor asked him to leave. Before departing, \"Arronax\" said we would do well to heed his warnings. \n\nWe of the Vendigroth Times would like to applaud the actions of the Governor, who we have been critical of in the past, and we also like to call the citizenry for possible conflict with this crazed mage. \n\nLocal scientists have begun work on a device that will hopefully make any mage thik twice about attacking us. After yesterday's encounter with \"Arronax\", the Governor allocated the needed funds for t he device, which scientists have been proposing for months. We at the Vendigroth Times have been able to get a rough idea of the working of the device, even though, understandably, its innermost workings are a government secret. The device is meant to somehow drain the very life force from a mage! \n\nOnly through the wonders of science is such a thing possible! \n\nI nodded. \"Well, they were fairly confident,\" I said. \"Now. To open this door.\" I eyed it. \"It seems that this door has several heavy duty hinges. I believe that maybe I could use a bit of dynamite placed here and here and here.\" I pointed out the places. \"Then the detonations should successfully...Sally, what is this about?\" I asked, frowning as Sally blocked my way -- and then she stepped forward, worked the edge of the ax between the hinges and the doors, and levered them off. Rusted, decayed metal squealed and popped and the hinges went flying. Then Sally stepped backwards, casually moving out of the way as the door smashed down upon the ground and cast up a vast pal of dust. \n\nI coughed, heavily. \"Yes, very good, Sally.\" \n\nDogmeat barked. \n\nStepping into the fortress proper, we swung around our lights and saw that the interior had been designed with mechanized guns in mind -- weaponry aimed into the central area to create a kill field for any who entered. But the guards, if there had been any assigned, were either off their posts or long, long dead. I whistled softly, and my voice echoed along the wrought iron walls -- and I saw a makers mark, similar to the design that Gilbert Bates used on his steam engines, a set of Vendigroth letters that, when translated by Raven, proved to proclaim this to be the creation of Vault-Tech. We began to fan out, investigating the interior chambers. We found rack upon rack of Vendigroth weapons -- rifles that had rifling and chambering and firing mechanisms that were clearly merely extrapolations of the gunsmithing in Tarant. \n\nI took one, without pausing, and began to think of how to combine this technology with my own. An idea was forming when Beatrice called out: \"I found a bigger door!\" \n\nWe all clustered about her and the door itself opened when Beatrice worked her magick upon it -- undoing the latch that kept it closed, followed by Sally's magick of her foot. The door swung inwards and we headed down into an ancient laboratory, which had been secured by several automatons -- large, spidery constructs that ticked nearly silently, like vast, deadly clocks. As we stepped inside,t he automatons began to rise -- but I gave them no chance to fully spring to their feet. My accelerator pistol roared and roared again, spreading clockwork and gearing along the floor, like the viscera of more living creatures. \n\nAnd in the center of the laboratory, perched in a spiderweb network of cables and electronic containment units, and glass boxes, was the Device. It had the appearance of a large, bronze colored egg, made of segmented petals that looked as if they could spread and open like a flower. A green light emanated from the center, throbbing and dull. Looking upon it made me feel as if I was looking at death itself. The device would easily fit inside my backpack, and when we took apart the containment unit, I found that the device barely weighed one stone. It seemed incongruous, that such a vastly dangerous item could be so very light. \n\nWith the item in hand, we turned to Beatrice. And, like thieves in the night, we transported ourselves from Vendigroth, leaving the blasted ruin of a city behind us -- full of its ghosts and its anger. We had what we needed. \n\nAnd the endgame was upon us. \n\n*** \n\nJune 1<sup>st</sup>, 1886 \n\nThe weeks between our emergence from the ruins of Vendigroth and our arrival at the Ring of Brodgar was spent in furious work. I sent Gillian and Sally together to the capital of Cumbria, the city of Dernholm, to bring a message I had been meaning to deliver for several months now. When we had been trapped together on the Isle of Despair, I had met the true queen of Cumbria, Maxine, and she had needed us to bring a message to her allies in the court of Cumbria for some time. Gillian, when she returned, also returned with the news that she had dropped off the funds I had allocated for Sarah Toonie. \n\nLiterally a year before, I had traveled into the silver mine in Shrouded Hills -- and, oh, what an innocent time that seemed to be now -- and found that it had been haunted by the owner, Bessie Toonie, who had wished her daughter to own the mine, but had been overridden by her greedy son. Well, with a thousand gold coins in her bank account, I was sure that Sarah could get the mine under her control, putting her mother's spirit to rest. \n\nNow, I simply had to insure that there was an Arcanum in the weeks to come. And to do that, I had worked with Maggie to purify steel, creating plates as tough as could be found while remaining quite thin. I called upon Mr. Bates to donate some of his finest steamworks and then used what I had gleaned from examining Vendigroth automatons and other journals on automation to miniaturize them even more. I used watch gears as bases for the molds, then purified steel to create gearing of sufficient strength to serve the purposes. Next, I used rubberized tubes and whale oil -- the cheapest kind -- to serve as hydraulic pressure conduits. It took three days to hook them into the articulated frame, then two more days to affix the plates to the frame. The final touch, though, was the integrated capacitors and magnetic coils, designed to form a sheath of charged energies -- which would repulse magick and metal alike. Only someone of great strength in either would be able to bypass the field to then strike enough metal to armor a railroad carriage against artillery -- armor that was supported by the hardened struts, and moved via a battery powered micro-boiler and pressure system. \n\nAnd to go with this suit of armor -- which I submitted to the Technical Journals as T-51b (short for Type 51b, as I had sketched a great deal of preliminary designs before settling on this one) - I crafted a weapon that would suit entering into the Void itself. The design began by taking apart the Vendigrothian rifle and combing it with the mechanized systems I had seen in the minaturized weapon that the bartender at the Sobbing Onion had used so effectively. The automatic loading was based on the Maxim gun, but shrunk down, and with the expanded room provided to me by the Vendigrothian machinery, I was able to fit inside my accelerator coils. They would charge my bullets with electrical power and additional energy, to combine with the rapidity of the fire. \n\nI emerged from the arming room, clad not in a suit, but in steel -- the whirr and hiss and click of the mechanized armor filling my ear as the pistol, which I had termed the warbringer -- clasped in my right hand, my left having an electrical lamp built into it to provide illumination when we were in the Void. \n\n\"Remarkable!\" Gillian exclaimed. \n\n\"Jolly good!\" Maggie chimed in. \n\nSally belched. \n\n\"A mite technological, but quite effectively looking,\" Raven said, quietly. \n\n\"I prefer the old suit,\" Beatrice said, at last, shaking her head. \"I can't see your beautiful mustache in this.\" \n\nI chuckled, my voice echoing from inside of my helmet. \n\nThus attired, we teleported, at long last, to the home of the Iron Dwarves. Maggie stepped away from our arrival point, with clear trepidation in her eyes, while I took in the surroundings -- we were standing at the base of a vast mountain range, the Stonewall Mountains that spanned the distance between the western coast of Arcanum and the eastern expanses. But the entrance to the Iron Dwarves' home was easily observed: A massive, circular metal door that bore the exact same symbol as the symbol upon Maggie's bracers. As we both looked at the doorway, Maggie whispered. \n\n\"I...I can hardly believe I am here,\" she said, her voice husky, almost as manly as her normal false tones. \"I've hunted for a place like this for...for so long. I've dreamed of it. Now...now I'm here. But...but what if what I find is terrible? What if it is bad?\" She gulped. ",
        "I placed my hand upon her shoulder. \"You'll go on, Maggie. Your place was to sit upstairs, in the second story of your family home, to just watch the world go on by. You shook that off and kept walking.\" I grinned at her. \"If you can do that, you can do anything -- no matter what this place says about you.\" \n\nMaggie drew in a slow, shuddering breath, then let it slowly out. Her shoulders tightened underneath my grip and she lifted her head, her eyes growing proud as she looked at the door. She walked forward and drew out the glass key we had been given from the Panarii Temple, and found the lock in the center of the door. The key slid in smooth as butter, clicking and whirring, and the door itself opened with a rasp and clatter, revealing a tunnel leading straight into the mountain, as circular and perfectly straight as if it had bored into the mountain by an immense drill press. We stepped forward together, my light shining from my wrist as my armor whirred and click. \n\nWe came into a circular chamber containing a single throne, sized for a dwarf and made of pure, wrought iron. There were three circular glass tubes, each one containing a different object. The first contained a suit of plate armor, constructed for a dwarven warrior -- and sized perfectly for, if I did not miss my guess, Maggie. The next contained a stone of rock covered with dwarven runes. The final contained a kite shaped shield of metal, decorated with the symbol of the Iron Clan. \n\nMaggie walked forward slowly, her feet rasping softly on the floor, carrying Harrower in her hands, the ax crackling and humming with lightning. She reached out, touching the glass tube containing the stone -- which had to be the Stone of Durin. The glass retracted into the ground with a hiss and a chunk and Maggie squeaked, almost leaping backwards. I walked over, smiling at her. \"What does it say?\" \n\nMaggie gulped, then leaned forward. She read slowly. \"Here, upon the Durin Stone, we list the future of the Iron Clan. The time of dwarves is changing -- what once worked will be no more...\" She frowned. \"The least of us must lead. The secrets of the past must champion the future. A woman's place...can no more be behind her husband.\" Her eyes widened. \"The Iron Clan will be reborn -- not beneath a king...but a queen.\" \n\n\"Queen Margaret Shalefist,\" I said, dryly. \"Sounds intimidating.\" \n\n\"B-By Alberich's sweaty balls!\" Maggie exclaimed. \"I can't do this!\" \n\nI clasped my hands to her shoulder. \"You can, Maggie.\" \n\nMaggie breathed in. Then out. \"Well,\" she said. \"We're bloody well going to die in the Void, aren't we?\" \n\n\"Now, now,\" I said. \"Don't be so pessimistic.\" \n\n\"Who bloody well said anything about pessimism!?\" she asked. \"That's the best outcome! I don't bloody well want to be a godsdamned King!\" \n\n\"Queen,\" I said, cheerfully. \n\n\"Ugh.\" \n\n*** \n\nThe Ring of Brodgar loomed before us in an incongruously sunny and cheerful June day -- not that a bright and cheerful day in the midst of Summer was particularly odd. But the arrival in Roseborough and the coming entrance into the depths of the Void struck me as a day best suited to the gloomy and the weather beaten. Nasrudin waited for us there, standing beside the ring, his palm resting on the stone. His face was ashen, and he looked as if death itself was standing behind him, a shadow on his shadow. He watched us through sunken eyes, and nodded. \n\n\"Are you ready?\" he asked -- and he asked, I knew that there was but one thing left to do. I took this journal, the journal you have been reading, filled with my thoughts, with my memories of what had been written, with my time shared among my friends and lovers. I was honest as I could be as I wrote her -- and you must forgive the narrative styling. Not entirely scientific, but I found it easier to scribe it down as a story, to tell it all as I hoped future generations would remember it. It helped me sort out my thoughts, my feelings, and finally assure me of my own truth. \n\nI, Dr. Resh Craig, known publicly as Dr. Rayburn Cog, commit to paper that I truly love Beatrice Brummund. My most steadfast companions were Margret Shalefist and Sally Mead-Mug, Gillian Thelonius Remington the Third, Raven the Elf, and of course, my beloved dog, Dogmeat. All of my schematics and designs are bequeathed to the Half-Orcish Workers Union, headed by Daniel Thresh (also known as Don Throgg.) \n\nIf I return from the Void and my battle with Arronax, I will amend these papers. \n\nIf not farewell. \n\n-Dr. Resh Craig \n\nTearing. \n\nRipping. \n\nTumbling. \n\nResh Craig sprawled upon his back, gasping as he skidded a good five yards before coming to a rest against something hard, angular, and deeply cold. He gasped as he looked through the thin stilted visor of his mechanized armor and saw his breath emerging as fog. He sat up, grabbing onto the bascinet helmet he had fashioned and pushed it upwards, allowing him to look upwards into the sky above him. The first image he had in his mind was of the night sky above Tarant, with the electric lights drowning out the heavens. But that paled as he began to realize the depth and blackness of the sky was deeper than even that. \n\nHis breath fogged as he pushed himself to his feet and saw that he stood upon what seemed to be an island -- lit by a colorless illumination that came from everywhere and nowhere at once. A single metal pylon sat behind him, curving upwards and ending in a brass sphere of roughly the size of a human head. The pylon hummed faintly and Resh placed his gauntleted hand upon it, feeling it vibrate. He tapped on his light, shining it over the pole as he called out: \"Beatrice? Maggie? Anyone?\" \n\nHis voice did not echo. It simply vanished into the darkness. Unable to determine anything about the make and function of the pylon, he swung the lamp past it and yelped, despite himself. It was an unmanly sound, and he might have noted it in his journal, if he had brought it with him. But he had no journal here -- and his heart hammered as he realized that the land he stood upon terminated five feet away from where he had landed. If the pylon had not terminated his progress, he would have fallen over the edge. \n\nFinding a rock -- made of the same brown-gray material that the floating island was made of -- Resh tossed the rock over the edge and watched as it fell into the same inky blackness that spread above him. He shook his head. \"Good heavens,\" he whispered. Swinging his lamp around, he did get some measure of bounce back from other places -- distant, floating islands in this vast, endless Void. Resh felt a crawling, prickling fear. Had any of his companions arrived? Had they struck islands, or had they fallen infinitely? He shook his head, slowly, then investigated the rest of the island. On closer inspection, he found that there was a flat, bronze platform in the shape of a gear. Tossing a rock on it caused the rock to vanish. \n\n\"Either,\" Resh said, his voice swallowed by the void. \"This platform takes me somewhere else via some kind of magick or technological teleportation...\" He paused, then drew out his pocketwatch. Holding it near the platform, he found it ticked normally. \"A technological transportation, or some kind of disintegration field.\" He shook his head. \"It is either risk that or die slowly here on this island.\" \n\nWith such a choice, Resh easily stepped onto the platform. \n\nWhen he appeared once more, it was on another island. This one was larger and had life -- but not as Resh knew it. They appeared like mushroom shaped, transparent membranes floating in the air, trailing glowing tendrils that brushed along the ground -- trailing and twitching. They immediately turned a brilliant red and started to float towards Resh, pulsating as they approached. \"I come in peace!\" Resh said. \"I have come to stop the evil Arronax and-\" \n\nThe closest lashed out with one such tendril. It struck against the electromagnetic field shrouding his body and jerked away. \"Very well then!\" Resh snarled, his voice tight behind his helmet as he swung his warbringer around. The roaring, ripping sound of the weapon firing dozens of magnetically accelerated bullets -- each charged with a short lived electrical field -- filled the air, swallowed shortly by the Void's oppressive silence. The impact of each bullet caused the electric field to discharge into the target, filling the air with flashes of golden light and causing the strange beasts to jerk backwards, twitch, writhe and fall. Once silence reigned, Resh snapped bullets into his weapon and strode forward -- to find that the creatures had clustered around a narrow stairwell leading into an underground chamber. Resh shone the light and strode down -- finding himself facing two skeletal warriors, clad in shimmering armor made of phantasmal energies in the shape of plate armor. Their swords were massive, serrated, and the hilts were decorated with leering skulls. Wriggling along the corridor in a slithering, curving arc, was a kind of half-transparent snake with a shimmering gemstone planted in the center of its forehead. The gemstone pulsed and with every pulse, a bead of light emerged from the gemstone and shot through the circular doorway that the two skeletal figures guarded. \n\n\"Hello,\" Resh said. \"I come seeking Arronax...\" \n\nThe two skeletal figures regarded him with cold indifference. \n\nResh stepped down the stairs, his warbringer at the ready. \n\nThe skeletal figures did nothing. The snake writhed, but it did not turn its head towards him. Resh ducked, to avoid being struck by the bead of light going through the door. When he entered through the door, he saw that the lights were flowing into a cone of golden white light, surrounding an earthen circle, which itself was banded by a rectangular wall, with a set of stone stairs leading back up out of this place. Seated within the center of the glowing cone of golden white light was a female elf. Her hair reached to her ankles and was colored a brilliant red, complimenting her pale skin. Her eyes were cat-green, and her face showed the epitome of boredom -- a mask of boredom so intense, so all pervasive that it nearly disguised the breathtaking beauty of her face, and the faint echo of familiarity. \n\nWas she related to Raven? No...that was not it, Resh thought. \n\n\"Oh, come to gloat?\" the girl asked, her voice filled with ennui. \"One would think you'd get tired of it.\" \n\n\"No,\" Resh said. \"I've...come seeking Arronax.\" \n\nThe girl-elf looked to him. \"Oh?\" she asked. \"And why is that?\" \n\n\"I'm here to stop him from-\" \n\n\"Oh good gods!\" The woman flung her head back, cracking it against the crackling, golden field. \"That goddamn Tesla couldn't tell a male elf from a female elf if his bloody life depended upon it!\" \n\nResh paused. Then holstered his warbringer in a single jerky movement, the weapon rasping into the leather of the holster. \"You are...are...\" \n\nThe elf stood. Her arms spread, revealing she was clad in a robe of blue and white and black, with a shimmering amulet around her pale neck. She attempted a bow, despite the confined space in which she stood. \"Yes, daring adventurer -- before you stands Arronax. Daughter of Nasrudin, destroyer of Vendigroth, and prisoner for these past two thousand years.\" She sighed, crossing her arms over her petite chest. \"I'd apologize, but the very idea chokes in my throat...how could a single word, a dozen words, a library of words even possibly begin to encompass the weight of my guilt.\" She put her hand over her face, then ducked her head forward. \"Gods!\" \n\nResh gaped at her. \n\n\"You're Arronax!?\" He exclaimed. \n\nArronax slid her hand away from her face. \"Aye! Yes! I said that!\" She groaned. \"You're not going to begin gibbering about some chauvinist claptrap now, are you?\" She groaned. \n\n\"But the Panarii-\" \n\n\"The who?\" Arronax asked. \n\n\"And the Vendigroth Times!\" Resh exclaimed. \"They said you were a...and your father-\" He stopped, his brow furrowing. \"Never...actually specified...\" \n\n\"Why would he, it's irrelevant...to elves,\" Arronax said, her voice bitter. \"It wasn't until I met a human being that I thought anyone would be so ridiculous as to assume that a wizard and a woman couldn't be the same bloody thing!\" \n\nResh put his hand to his forehead, the metal of his gauntlet pinching against his skin. \"I may need to sit down for a moment.\" He stepped away from the cone, then back towards it. \"You're preparing to invade the whole of Arcanum! You have a cult of Dark Elves, seeking to bring you back! There's been a whole...ever...assassins have been trying to murder me! The Molochean Hand! I...that...\" he flung up his arms. \"If you are not behind this entire mess, the who the bloody hell is!?\" \n\nArronax hung her head forward, then lifted it. Her eyes were dark and her voice dripped with a dramatic, ominous tones -- it seemed that two millennia trapped in this conical prison had not sapped her of her sense of the dramatic. Resh might have been amused, even charmed, had he not been still reeling utterly from the revelation that for the past year and a half, his assumptions of what his enemy was had been totally, completely false. He felt like he had been drawing to a double bluff, played for a fool, and left utterly naked in the gutter beside the casino. But then Arronax's words reached his ears and he realized... \n\nDespite having never known it... \n\nHe had still studied for this moment. \n\nHe knew his enemy. \n\n\"Kerghan,\" Arronax said. \"Kerghan the Necromancer. Kerghan the Terrible. Kerghan the Black. He never ceased his experimentation, Mr. Adventurer. And if he is not stopped, then we will all die.\" \n\nResh's mind reeled as he recalled every passing reference he had seen to Kerghan. An ancient human necromancer, the first human and the last human to be allowed into the Elven Council. Banished, by Arronax's order, on the discovery of his terrible, terrible experiments. The founder of the Derian Ka, the Order of the Dead, the organization that had sprouted the Molochean Hand, the order that the Molochean Hand had turned upon when they had discovered Kerghan's terrible purpose. Resh shook his head. \"B-But...but how...\" he whispered. \"How can he still be alive?\" \n\n\"This place is different,\" Arronax said. \"What matters here is not mind, not sense, but will.\" She touched her temple. \"A place of pure magick. For two thousand years, Kerghan has stayed here -- drawing on the power, exploring, charting his dark paths.\" She shook her head. \"He defeated me the instant I arrived, and imprisoned me here. He says he has imprisoned the others -- the others my father banished here.\" Her head shook. \"He tricked the Dark Elves into bringing some clan of dwarves here...he...he wants to return to Arcanum.\" \n\nResh drew up his chin. \"Very well then. It seems...\" He smirked at her, drawing his faceplate backwards, revealing himself to Arronax. \"That we are to work together.\" \n\nArronax gaped at him. \"Y-You're handsome!\" she exclaimed. \"And a half-orc!\" \n\nResh blinked slowly, then chuckled. \"Handsome, you say?\" \n\nArronax blushed. \"I-I did not say that! Y-You're...I...\" She spluttered. \"I...silence!\" She thrust her finger imperiously at me. \n\nResh grinned, shaking his head. \"Now. Lets see about getting you out of here...and finding my friends...\" He frowned. \"The power source seems evidence.\" \n\n\"Ah, yes, the spirit worm. It is a kind of pseudo-spiritual creature,\" Arronax said, her voice soft. \"I've been studying it for years -- but it is utterly immune to any weapon made by mortal hands. Swords. Spears. Arrows.\" She shook her head. \"Even a bullet reflects away -- the only spell I can think that might work would be a lightning bolt, but I am trapped in, uh, what are you do-\" She stopped with the roaring sound of the warbringer and the sound of bones scattering on the ground, the clatter and clunk of dropped swords, the screech and shattering sound of more tearing flesh. The beads of light ceased flowing into the shield, which crackled, whirred, and shrank down to nothingness. \n\nResh stepped back into the room. He grinned, then slid his faceplate down. \"Shall we?\" \n\nArronax reached out, touched the air about her. She burst into tears, collapsing to the ground, rolling from side to side in the newfound freedom that surrounded her. Resh sighed, then reached backwards. He began by undoing the catches on the rear of his armor, then wriggling his hands to draw them back from the armored gauntlets. He slipped from the harness of the T-51b armor and stepped free, dressed in only a loincloth as he knelt beside Arronax. He drew her into his arms, hugging her gently. \"There there, there there,' he whispered, quietly. \"it's all right.\" \n\nShe clung to him, trembling. \"I do not deserve this!\" She said, her voice thick with sorrow. \"A-All those people I killed, all that arrogance...\" She pressed her face to his chest, then drew her head back, her eyes wide as saucers. She opened her mouth. Closed it. Opened it once more. Closed it. Resh's hand cupped her cheek, tilting her head back. He smiled at her. \n\n\"Deserve?\" he asked. \"I...I don't know. There's no way to undo what has been done, no real way for me to...say whether you deserve forgiveness. But you seek it. You want it. And now, you are about to throw yourself at one of the most dangerous villains that Arcanum has ever made -- Kerghan the Terrible.\" Resh's voice was soft. \"I was a bandit. Beatrice, my lover, was a criminal and thug as well. If we can hope for redemption after our paltry single score of years?\" He shook his head. \"Then why not you with hundred?\" \n\nArronax breathed in. \"I-I cannot tell if it is the isolation or...a-are you really quite beautiful?\" \n\nResh chuckled. \"Did you listen to a word I said, you silly girl?\" \n\n\"N-no,\" Arronax admitted, her cheeks flushed. \"Your mustaches are quite handsome.\" \n\n\"Oh, now, you are merely fishing for compliments,\" Resh scoffed. He smiled. \"Were this any other time, I would take you in a manly fashion. But time is of the utter essence.\" He caressed her cheek. \"But ...maybe once this is all over?\" He grinned at her -- but despite his words, his rather impressive, nearly equestrian, endowments were proving some lie to his words. Arronax squirmed, and drew in a quiet breath as she felt what she had not for a hundred score years: The hardness of a male member. Arronax looked aside, then forced herself to her feet, her cheeks as red as the trim of her robes. \n\n\"Y-Yes! After!\" She proclaimed. \"But for now, we have a bloody necromancer to deal with, what what!\" \n\nResh chuckled. \"Your vernacular is remarkably Tarantian, old girl,\" he said, standing, stretching as he took some pleasure in showing off his own muscular body to the clearly quite affection-starved elf. Merely walking across the room to his armor nearly reduced her to drooling, and Resh smirked as he drew himself back into the armor. Closing the hatch behind himself, he reactivated the armor's musculature. Steam chuffed from his back as if he was his own locomotive. Arronax, meanwhile, was blushing. \n\n\"Well, the translation cantrip is quite simple,\" she said. \"A mere application of the Mental School.\" \n\nResh laughed. \"Well, then. Let us go.\" \n\nTogether, the two of them set up the stairs. \n\nEmerging into the dubious light of the Void, Resh and Arronax looked about, Arronax pointing with one pale finger, her hair brushing along the ground behind her. The object she pointed at was a narrow bridge of black stone, reaching from the edge of this part of the island towards a castle that Resh had not see before: A stone and skull edifice, emerging from the darkness like some primeval terror. There were no windows, only the black stone and leering skulls. Resh began towards it, followed by Arronax, his warbringer at the ready. The front door was open and led within -- towards a abattoir. Resh stepped over the bridge and shone his light within and wished he had never seen -- it would be better to have not witnessed such a sight. ",
        "The castle's main chamber was stacked, piled, with corpses. \n\nThe dwarves of the Black Mountain Clan -- hundreds of them. They were flayed. They were skinned. They were crucified and disemboweled They were stacked like cord-wood, their brilliant blood spilling across the ground. Due to the timeless nature of the Void, there was no rot, no decay. They simply sprawled in eternal, unlovely death. The stink reached Resh through his visor, and he shook his head slowly. \n\n\"They must have tried to rebel,\" Arronax whispered as they walked past the bodies. \n\n\"They sent Stennar through,\" Resh murmured as they came to a set of stairs. Walking up them, a distant, throbbing feeling began to ache through both of their bones. The ache grew more and more intense, and the stairs wound around and around and around. It seemed almost like an eternity of walking -- the stairs stretched onward and onward and onward, the echoing sound of their footsteps ringing off the black stone. The throbbing sensation began to emanate from their deepest organs, and Resh grew particularly aware of every throb of his heart, the squirm of his stomach, the feel of his roping intestines. \n\nIt became impossible to ignore he was merely a bag of flesh and bone and skin and lumping matter -- wrapped in flimsy steel. The decay and the sense of inevitability sank into his mind. But Resh gritted his teeth and thought instead of the simplest thing. \n\nThe very thing that began this adventure -- once more, his mind returned to it. He calculated, within his mind, the hydrogen carrying capacity of the long destroyed IFS Zephyr. And merely thinking of the mathematics -- the numbers that always came out exactly the way that they were supposed to do. And merely coming to the answer he had a year before here, in this hideous place, filled him with comfort. The math did not come out different. And so too, a certainty settled in him: Beatrice would be there for him, when he needed her most, emerging from the rubble in robes, with a staff, and excitedly blathering to him about some inane prophecy. \n\nAt last, he stepped off the last of the stairs and into a large room. Perched like a vast mechanical spider in the center of the room was a portal. Rings of metal formed from segmented metal, gleaming crystal spheres, hissing steam-pumps, boilers that burned gods knows what for power. All of it focused upon a singular point, creating a slowly growing bubble of white light. And standing beside the machine, his palm resting on the curved, spider-limb of the side...was Kerghan. \n\nIf he had been human once...that day was long receded into the past. \n\nClad in robes of blood red that seemed to be almost a part of his elongated, twisted body, Kerghan's face was snake-like in formation and marble pale in complexion. His eyes were nearly vertical and yellowy. His lips were thin as stencil drawn, ruler-sharp lines. His hood concealed whether or not he had hair, but from what Resh could see, the robe itself seemed to have begun to fuse with his very skin. \n\n\"Mr. Kerghan, I presume,\" Resh said, trying to sound dry. \n\nKerghan chuckled. His voice rang in Resh's memory -- the self same image proclaiming itself to be none other than Arronax. \"Welcome,\" he said, his voice echoing faintly. \"I see you have come -- but you seem to have left your companions behind.\" \n\nResh snapped his pistol up. Kerghan waved his hand and a wall of force smashed into Resh and Arronax, flinging them both backwards. Arronax slammed onto the ground, skidding and coming to a halt. She gasped out in shock and pain -- but when she flung out her arm, she threw up a shimmering purple field. It rippled as a salvo of red lights smashed into the energies and Resh stood, snapping up his pistol -- but Kerghan laughed, dropping his arms slowly. \"Ah, but before we dance...\" he said. \"Let us speak, Living One...\" \n\n\"You could have said that before blasting us,\" Resh said, shaking his head. \n\n\"You drew on me, oh Living One,\" Kerghan said, his voice amused. Then, softly. \"But surely, you wonder...where have your companions gone?\" \n\nResh felt tension grip him. He stepped forward, his armor hissing. \"What have you done to them, Kerghan?\" \n\n\"I?\" he asked. \"Nothing.\" \n\nKerghan turned and pressed his palm to the wall beside him. A glowing, purple rectangle appeared upon it -- and when it resolved, it showed an image...an image of another island. Kerghan's voice dripped with amusement as he spoke: \"Let us see what the others have done, Living One.\" \n\nAnd Resh watched -- unable to do a thing -- as Beatrice stood in mortal peril: A man, mostly nude, advancing towards her, sword humming with red light. The image shimmered and twisted, then showed Sally, facing a massive pile of green muscle and flesh, thundering towards her, mouth open, jaw drooling with spittle. The image shimmered once more, and showed Maggie in her armor, with Gillian and Raven standing behind her, while a towering fusion of man and dragon advanced towards them. Flames exploded from his maw and Maggie brought her shield up, but the flames consumed the image - which shattered. \n\nKerghan turned to face Resh. \"It seems you were most fortunate, Living One.\" He shook his head. \"I have awaited your arrival for so very long. And while you know my name, I still owe you a proper introduction.\" His arm swept to his belly and he bowed to Resh - who kept his face impassive and poker still behind the faceplate of his armor, despite his guts roiling with tension. Arronax, her fingers flexed, her forehead beaded with sweat as she focused upon maintaining the magick shield. Resh lifted his hand, then shook his head to her. She looked to him, then lowered the shield. \n\nKerghan chuckled. \"I am Kerghan. First of the Necromancers, voyager in the lands of the dead. And I see you are a more clever man than I thought.\" \n\n\"He attacked us to force you to shield us,\" Resh said, quietly. \"To waste your magick energies upon that, while he spoke with me - but I can tell, Kerghan. You want to talk. So...\" He spread his hands. \"Talk.\" \n\n\"I see that, with Arronax at your side, she has told you enough of my story to bring you into her confidences, to bring this fight to me,\" Kerghan said, quietly. \"But as a clever man, surely you wish to hear my side of the story.\" \n\nResh nodded, his face still. Masklike. Arronax looked to him - confusion on her face, writ clear and loud. What is he doing? she thought. The longer Kerghan speaks, the more power he can draw. And the more deadly danger his friends are in. That was the Bane of Kree! Gorgoth! Kraka-Tur! The worst monsters of Arcanum, all poised to slay his friends! \n\n\"My life,\" Kerghan said, a chair sliding silently from the ground behind him - a chair of bone and steel that formed from the raw stuff of the void, shimmering as it moved. He sat in it and Resh sat as well, a chair formed for him by Kerghan's might. \"My life in the world you call Arcanum seems so very distant now. Like that of a child. And a child I was then, probing the darker magicks, given glimpses of the truth yet to come.\" \n\n\"As I have read,\" Resh said. \"And, well, the Council and the Molochean Hand seem to be quite right. Look at you.\" He gestured to Kerghan, who shook his head mutely. \n\n\"Yes. Look at me. And what do you see?\" He gestured to himself. \"A monster? An abomination? You've no idea what I have discovered. You see with eyes tainted by life, and all which that accursed state embodies. My vision is clear because of those magicks you hold in disdain. And for the Council? For Nasrudin? It is they I have to thank for it.\" \n\nResh frowned. \"They banished you to the Void, Kerghan.\" \n\nKerghan laughed. A deep, echoing laugh, a laugh that sounded like a rock dropped down an infinite and yet narrow well. His eyes closed and his needle sharp teeth glinted in the growing light of the machine that sat behind him. \"In your world, in Arcanum, I was powerful. I was, perhaps, the most powerful human magician to walk the lands. But to humans, what is that? A single instant, a spark of a life. Nothing can be learned in such an infinitesimal time. But here? In the Void? I would not die so long as I did not will myself to die. I could go on. I could learn. There are no limits here...\" \n\nResh shook his head. \"And then the Dark Elves called to you. K'an Hua - and you let him think you were Arronax...\" He frowned. \"You convinced him to manipulate the Panarii, into weakening the wards on Arcanum. You used the Dark Elves to send you the Black Mountain Clan - you...you did all of this to return to a world where you would be mortal again? Why? You could stay here, with your studies, forever!\" \n\nKerghan's eyes closed. And, in so much as his face could show it, sorrow filled him. Resh drew back in his seat, stunned to see a single tear etching its way along his cheek. HIs hand went to his face and he said. \"Truly...I truly wish that I could stay. My reasons for returning...\" He drew in a breath, shuddering and deep, and composed himself. \"My reasons are not as you may imagine, Resh. Do you see me, conquering the lands? Laying siege to Tulla? Dueling Simeon Tor and laying waste to Tarant as your foolish companion laid waste to Vendigroth, to lord over the survivors, to chain all that is good in the world?\" He shook his head. \"No. Those are motivations of the living. I no longer place myself among them.\" \n\n\"Then what?\" Resh asked. \"What is it that you want, Kerghan?\" \n\nKerghan stood. He looked away and started to speak - and the words flowed like a dark river, sweeping Resh and Arronax away. \n\n\"If only I could show you the places I have seen, you might understand the things I say. I have been to the Desolate Lands, wandered by those souls who still see the lands of the living but wear the cloak of the dead. Blind to their own ends, they cry, passing through one another like shadows in the dying light of day. I have traveled to where souls rot in torment, pierced with the jagged shards of life and vision, clinging to memory - regrets of the flesh. I saw that this prison was of their own making, and that the key was in unknowing, in release... and still, I traveled on. And finally, I came to the place where souls go to die. Where the mirrored and worn spirits fall into an endless sea of gray, mirrored glass... and I lowered myself within... and lay among them... and I almost did not return.\" \n\nHis eyes closed and he turned back to Resh. They opened and glowed. \"And do you know what I found there? There, among the silent and battered shells of the innumerable? Peace. Enlightenment. Truth. Only then I realized that this place, this \"Life\", is an abomination, a horrible distortion of the natural order. This \"Life\", who mothered Pain, and Fear, and Envy - these twisted children who exist only because we are here to feed them, to nourish them. This \"Life\", this... afterthought - a disturbance, a mere ripple in that great, dead sea, not even the cause, but merely an effect, sending these souls upwards, screaming for release from the day they are torn from their waters! The effect of what? I do not know. Nor do I care.\" \n\nHe shook his head. \"Have you ever spoken with the dead? Called to them from this side, pulled them from their silent rest? Do you know what it is that they feel? Pain. Pain, when torn into this wakefulness, this reminder of the chaos from which they had escaped. Pain, at having to live. There will be no more pain. There will be no more chaos. \" \n\nResh sat in stunned silence - remembering the agonized wails of the spirits he had met, the pain of the undead as they were dragged into the world of the living. But more...every factory slave, limping home after being mangled, every destitute beggar waiting for the cold embrace of a winters death, every vicious brute and cruel, callous man, every conniving trickster, every manipulator and abuser. All of them paraded through his head. And more, he could see the terrible point that Kerghan made: If time went on, never ending, then life merely was a momentary flare, a flash that would fade into eternity, and become only the more insignificant as the uncounted eons passed and passed and passed. \n\n\"Well,\" a voice spoke into the room - and bringing with it light and a racing heart, banishing the image from Resh's mind. \"It's not quite as bad as all that sir.\" \n\n*** \n\nBeatrice stood upon an island of rock, a chill wind blowing against her chain mail. Her sword -- the magick sword that had been given to her by her love so long before -- hummed against her palm, the hilt pressed to her fingers, the scabbard feeling heavy and ready. Standing across from her on the island was a man. His face was brutal and angular, his hair brilliant blond, his eyes a piercing blue. He was shirtless, and he wore a furred loincloth. A broadsword was strapped to his back, swept into a baldric of leather and bone. \n\nHe regarded her with cold, pitiless eyes. \n\n\"Are you Arro, oh, no, never mind,\" Beatrice faded, seeing that the man was human. \n\nThe man sneered at her. \"Pathetic,\" he said, his voice dripping with scorn. \"This is what Kerghan sends me to whet my appetite.\" He started to swagger forward, a cold light gleaming in his eyes. Beatrice wasted no time. She drew her sword with a rasp and crackle with magick. \n\n\"Oh...\" the man chuckled. \"You do not know me, do you?\" \n\n\"I believe not,\" Beatrice snarled. \"Where is Resh?\" \n\n\"I do not know,\" he said, shrugging. \"And you do not recognize your better, woman.\" \n\nBeatrice chuckled, her voice quiet. \"Ah. One of those. You know, sufferage is right around the corner, Mr...\" \n\nThe man drew his own sword -- it shone and rippled with a glowing, brilliant red light. The edge seemed to be preternaturally sharp, and he held it with the grace and the poise of a master swordsman. The man spoke, drawling the words with lazy confidence: \"My name is of no consequence. A birth name was a title given to a babe by a mewling woman. The true name I have earned, the title I deserve...is the Bane of Kree.\" His eyes glowed with a fanatics delight. \n\n\"The...Bane of Kree,\" Beatrice whispered. \"The man who butchered the city of Kree, who led ten thousand barbarians to ravage the whole of Arcanum!?\" \n\nThe Bane of Kree spread his hands. \"And now, if you wish to surrender to me, I will be sure to make your end painless. Once I am finished with you.\" His lips skinned back in a shark smile as he advanced, sword at the ready. Beatrice watched him advance, lifting up her sword. The Bane of Kree snorted, lugubriously, and continued his monomaniacal ranting: \"No man -- and no woman -- has ever been able to best me in a sword fight.\" \n\nBeatrice nodded. \n\n\"Good thing this isn't a sword fight,\" she said, then snapped out her palm -- and a wave of concussive force flew out and struck the Bane of Kree's wrist. His sword flipped away from him and he reached for it, his fingers almost catching on the trailing tuft at the base of his hilt. But then another concussive blast struck it and it flipped into the darkness of the void, vanishing forever. Beatrice leaped forward and swept her blade around, and the shocked Bane of Kree watched as the sword finished its arc and came to rest beside her shoulder. \n\nThe destroyer of Kree, the greatest city of the Age of Legends, clutched to his throat as red sheeted between his fingers, spilling and bubbling forth, blood emerging from his mouth as his lips opened in a silent scream -- and then toppled backwards, over the edge of the island of the void. \n\n\"Pha!\" Beatrice spat over the side after him. \n\n*** \n\nSally Mead Mug rubbed her head as she sat up. She had never felt an ache quite like this! She'd been drunk before, but this was something else -- this was drunk. This was druuuuuuuuuuuuuuuuunk, in fact. She wobbled as she started to stand up, her head shaking from side to side. She blinked, blearily, seeing the vast strangeness around her. She was standing beside a collection of piled up bones -- picked clean, crunched in half, and sucked clean of their marrow. There was a broad expanse of brown-gray earth, floating in blackness. And at the far end, there was a massive, quadrupedal, bullet shaped hideous green mass of muscle. The maw that gaped at the front of its muzzle opened and shut with a snapping, gurgling sound. Baleful red eyes glowed -- huge and angry. \n\nSally rubbed her palms together. \n\nSally had lived her whole life never thinking about the future, never worrying about the past. She had followed Resh cause he was hot and he had a dick that was big enough to get her bits tingly. She didn't really follow the whole...Void thing. But she figured, hey. \n\nBig guy? \n\nShe'd hit it really really really hard. \n\nShe didn't recognize it was Gorgoth. She didn't recognize it was Gorgoth the unkillable. Gorgoth the insatiable. Gorgoth, who had devoured ten thousand thousand souls in his rampage across Arcanum, devouring halfling villages, human hamlets, dwarven clans, all without care, without stopping. Gorgoth's maw opened and it bellowed. A single, wordless exclamation -- one that needed no translation. \n\nFood. \n\nSally rolled her shoulder. \"All right, all right!\" she said, cheerfully, and waited as Gorgoth ran forward. And, without knowing it, Sally had already figured out the nature of the Void. She knew, with utter certainty, that she could beat anything. She could handle anything. She knew it, to the depths of her stolid bones. And so, as Gorgoth thundered forward, sending up clods of dirt and chunks of dirt. Drool dripped from his muzzle and his head shook as he sprinted forward, his muscles bunching and clenching as he moved faster and faster. His tusks gleamed -- looking brilliant white. \n\nPerfect! \n\nSally grinned, then reached out and grabbed Gorgoth. \n\nOn Arcanum, this would have ended with her rapidly sailing down his gullet. Here? \n\nSally hefted Gorgoth up and over her head, twisted, and released -- and sent him sailing over the edge of the void with a cheerful bellow of: \"What do ya do with a drunken sailor! Ho!\" She burst out laughing as Gorgoth flailed -- and fell. And fell. And fell. And...was gone. \n\n*** \n\nFlames exploded around Maggie's shield, the armor and the craftsmanship of the Iron Dwarves remarkable to behold. As she stepped backwards before the roiling flames of Kraka-Tur, she shouted to Raven. \"Do something, you daft elven lassie!\" \n\nRaven sprang from around Maggie's defense, sprinting lightly on her feet. Her bow was in her hand and the string twanged again and again and again - arrows thudding into the side of Kraka-Tur's body. His scales, as thick as the armoring on a steamship, sent the arrows rebounding, save those that by sheer good luck or good aim managed to stick into the soft flesh between the scales. But that was far from enough to actually do damage, and it only provoked a great roar from the one eyed dragon. Maggie stepped forward and brought Harrower smashing into Kraka-Tur's knee, then rolled forward to avoid the counter-strike, his claws sending up a furrow of dirt and dust. \n\nShe came to her feet, the armor she wore remarkably light. Her shield lifted as Kraka-Tur backhanded, the impact knocking her backwards, rolling away. When she came back to her feet, her head was ringing and she saw that Kraka-Tur was advancing towards Gillian, who was rummaging around in the backpack that she had been carrying. \"Lassie!\" Maggie shouted. \"Look out!\" \n\nKraka-Tur lifted his claw, screeching. \"I'll kill you! I'll kill every last one of you! I'm the strongest! I can do it!\" His voice was remarkably high and nasal, not exactly the frightening voice out of legends that she had expected. Still, Maggie could not let Gillian - even if she was somewhat stuck up - get herself torn in half. She hurled Harrower and as it flew, it gathered electric energy, crackling and popping, and struck the massive dragon-human hybrid in the shoulder. Kraka-Tur screamed. ",
        "And Gillian sprang up, laughing. \"Ha ha!\" \n\nShe held up Kraka-Tur's eye in her hand - the very item gleaned from the Panarii Temple in Arcanum. Kraka-Tur shirked. \"That's mine!\" he exclaimed. \"Give it ba-ahhh!\" He yelped, for Gillian had immediately thrust her arm over the edge of the Void's floating island. She made as if to drop it. Kraka-Tur made a whining, wailing noise. \"Give it back! Give it back!\" \n\n\"I will,\" Gillian said, her voice stern. \"But only if you do something for us.\" She grinned. \"You have wings. Do you not?\" \n\n*** \n\nDogmeat sniffed. He sniffed and padded along black corridors, his tail wagging. He didn't know where master was, but he could smell something like master's friend. And so, he followed the scent with his nose - padding past door after door of empty cells. His nose flared as the scent grew stronger still. Then a voice! A gruff, male voice, calling out: \"Eh! Eh! Eh poochie! Poochie poochie!\" \n\nDogmeat turned. He saw a great many dwarves - about fifty, maybe sixty in all, crammed into a single cell. They looked haggard and warn, their beards untrimmed, their hair wild, their bellies nearly flat, their ribs clearly visible. The one that had spoken was thrusting his arm through the bars of the cell, his fingers drooping. He said: \"Heyyy poochie. Me name is Geldar Shaleshaper - I'm tha' head of the Black Mountain Clan's engineering guild.\" \n\n\"Geldar,\" another dwarf hissed. \"That mutt nay cares what yer qualifications are!\" \n\nDogmeat padded forward and started to lick at Geldar's fingers. Geldar did his best to pet Dogmeat. Dogmeat licked him more. But then Geldar whispered. \"Okay, poochie. We need ya ta do sommit fer us. Tha' mad bugger, Kerghan, he's kilt half of us fer sneakin' Stennar through. Since yer here, sommit come 'ere too. And we gots ta help.\" He pointed. \"We just need tha key over there!\" \n\nDogmeat turned to see that the nice dwarf was pointing at...oh! There was an adjoining place like where master worked. A laboratory, with many tools and bits and bobs \n\nDogmeat padded over, picked up the wrench on the table with his teeth, then walked back, setting it down, panting happily as his tail wagged and he sat on his haunches. Geldar sighed, softly. \"Nay, poochie. The keys. Get the keys.\" \n\nDogmeat woofed softly. \n\nHe returned with one of the mallets from the workbench. \n\n*** \n\nResh watched as Beatrice, Maggie, Gillian, Sally, and Raven entered the room, each looking a bit battered, but no the worse for wear. He smiled, cheerfully, then put his feet up on the side of the gate machine, looking at Kerghan. \"Thanks for providing the monologue for me,\" he said, his voice as cocky as if he had just laid a straight flush of cards down on the table. \"It provided more than enough time for my companions to extricate themselves.\" He shrugged. \"I had faith in their abilities.\" \n\nKerghan shook his head slowly. \"I see your soul, Living One. As much as you wish to deny it. It screams. Tatters.\" Resh felt a faint tug at his heart. \"Do you feel its pull? Do you hear its wailing? I have the power to calm these waters. That is what i shall do. One man could not stop me. Five cannot. An army cannot.\" \n\nResh sighed, but Beatrice stepped forward. \"What Kerghan is saying isn't completely untrue. I told you of it - of the silver river. Of the peace.\" \n\nResh paused. He looked upon Beatrice - but he knew no fear. He smiled. \"So, you think he is right?\" \n\nBeatrice smirked at him. \"No,\" she said - knowing it both needed to be said and never needed to be uttered once. She took Resh's hand, squeezing. \"No.\" She said it again, forcefully, looking square at Kerghan. \"There is pain in life. Pain and loss and sorrow. But there's joy: Joy in growing, joy in learning, joy in others. Joy in love, in laughter.\" She shook her head. \"You cannot have one without the other and merely being short does not give one the right to trample it into the dirt.\" \n\nResh nodded. Kerghan, though, frowned. \"I cannot tolerate the atrocities of life. I cannot bear to see more dragged, screaming, through it. I will bring peace. I will bring quiet. I will go...\" He pointed at the portal. \"I will go to Arcanum and I will end it all, and I will, at last, join the souls of the Dead.\" \n\nResh regarded Kerghan the Terrible, Kerghan the First Necromancer. Kerghan, the voyager among the dead. The man who hated every instant of his being for more than a thousand years, who longed inwardly to die, and yet could not bear to see the suffering of the world. Resh smirked, slightly. \"I am quite sorry, old boy. But I'm afraid that we shall have to agree to disagree.\" And without missing a beat, he charged forward. His electric field crackled to life, roaring with energy, dispersing the first wave of raw, necromantic magick that Kerghan flung upon him. Hard, dwarven crafted steel powered by Resh's own design and enhanced musculature smashed into one another and both he and Kerghan struck the wall of the castle, exploding through brickwork as if it was nothing more than flimsy wood. \n\nKerghan screeched and his robes exploded apart, revealing terrible batlike wings. His legs were no legs at all, but a vast tail, segmented and bony. Jaws clamped onto Resh's arm and Resh grinned as they fell into the Void, together. They plunged over the edge of the castle, and Kerghan beat his wings - but Resh lifted the warbringer and triggered a burst, blowing the wing off in a shower of torn muscle and shattered bones. Kerghan shrieked, and yet more necromantic energy hammered into Resh. A purple flash appeared beside him and he saw Beatrice, falling after him, her arm reaching out - the Vendigroth Device in her hands. \n\n\"Resh!\" She screamed over the howling wind, over the growing chill as they fell further and further from the islands of the Void. \n\n\"Beatrice!\" Resh shouted, then cried out as Kerghan's jaws clamped onto his shoulder and worried. Metal plates squealed and blood spurted. He clenched his jaw, then looked back to Beatrice. In a few moments, it would be further away from the islands than she could teleport without needing a ritual - a ritual requiring firm ground on which she could cast in. And the Device. It would utterly annihilate this man. And even as his teeth sank into his shoulder, and even as Resh knew that the Kerghan hoped for universal annihilation of all life... \n\nHe knew he could not destroy him so utterly. Something deep inside Resh called out to him to bring Kerghan to the silver sea. To lay him to rest. For he had never truly been evil, had he? Merely curious. Merely worrying at the world, picking it apart to discover its secrets. \n\nResh looked back at Beatrice - to Virginia. The woman he loved. She held the Vendigroth Device to him and it throbbed with power. A wicked, terrible power. \n\nResh lifted his pistol and shot the Device. It exploded apart and he called out to her. \"Go back!\" He grinned at her. his eyes glinted through the faceplate, and she could see that, despite the pain, that confident gleam she had grown to love shone towards her, like the lighthouse on the end of a foggy voyage. \"Trust me, Beatrice. Trust me.\" \n\nBeatrice cried out - and screaming in frustration, sobbing and furious - she vanished from the killing cold. \n\nShe appeared shuddering and frost bitten, beside the gaping hole in the wall. The castle, though, was beginning to shake itself apart. Rumbling cracks sounded and the islands, held into being for so long by will and by attention, were tumbling apart. Boulders flung off into the Void, lost in the endless blackness, while Dogmeat came charging into the room, woofing and barking, followed by the surviving dwarves of the Black Mountain Clan. \n\n\"Come on boys!\" Geldar shouted. \"We have only one chance at this!\" \n\nThe portal device thrummed all the brighter. The ground shook. The ceiling began to cave in. Sally grabbed Beatrice by the scruff of her neck, dragging the limp girl away from the hole gaping in the wall. The portal flared to a brilliant gold - and they plunged through. \n\n*** \n\nFrom an issue of The Tarantian - June 20<sup>th</sup> 1886 \n\nREMARKABLE ARRIVAL AT THE RING OF BRODGAR \n\nWoman Rescues Dwarves! Saves all of Arcanum? \n\nOn the morning of June the 2nd the world famous tourist attraction in Roseborough, the Ring of Brodgar, was the site of a most remarkable magickal event. A portal opened and disgorged not a demon or some terrible monstrosity, but rather an entire clan of dwarves (the long missing Black Mountain Clan) and a party of adventurers: A human woman, two elven women, a dwaf, and two manservants. Questioned as they recovered from their terrifying ordeal in a dimensional region that was termed \"The Void\" by the adventurers, several divulged that they had entered due to the vagaries of a prophecy promoted by the popular religious sect known as the Panarii. The Panarii who, as readers of our fine newspaper may be aware, have recently undergone a change in leadership, were approached for contact and had this to say. \n\n\"Well, while we don't exactly what to alarm your readers,\" claims Professor Gunther Wilhelm, head of historical research in the Panarii Temple. \"But it seems that the prophecy of the return of Arronax, while incorrect in several details, did in fact point the adventurers towards an even greater threat! But as that threat seems handily dealt with, we need not worry about it. We at the Panarii are seeking to renforce the wards at the Ring, so that nothing like this may happen again.\" \n\nWhen questioned, the leader of the group -- Beatrice Burmmund, a 28 year old Panarii Priestess -- had this to say: \"I am very tired and I wish to just sleep for a week.\" \n\nRumors persist that the Adventuring Party was lead by none other than Tarants own most remarkable technologist, the enigmatic and controversial Dr. Rayburn Cog -- survivor of the terrible IFS Zephyr blimp explosion last year. However, no signs of Dr. Cog have been seen, though his inventions and patents are now being produced by the first ever Half-Orc owned factory in Tarant. We here at the Tarantian believe, based off rumors and conjectures, that he was slain in the encounter with whatever evil existed beyond the Ring. \n\nStill, if it is true and all Arcanum was saved by his quick wits and steady hands, then we at the Tarantian wish to doff our caps. Good show, old boy. \n\n*** \n\nDecember 19<sup>th</sup>, 1962 \n\nProfessor Cartwright tapped his stylus against his green palm, smiling up at the panoramic view of students that clustered in his class. \"Now, as this is the last day of the semester before winter break,\" he said. \"I believe that I owe it to you to at least wrap up this lecture on this most curious stage in Arcanum's history.\" He shook his head. \"The ripple on effect of Resh Craig's adventures can be easily seen by the fact we're all here, and that you're listening to me, a half-orc, lecture you in the history building of Vendigroth University.\" \n\nA chuckle rippled through the class as pencils and pens scritched. Outside, the sky was shading towards black as the sun set -- and the desert chill of Vendigroth would be settling. Coats and hats and gloves would be needed, even if Tarantian visitors always seemed to expect the evenings to be as balmy as the days. Professor Cartwright drew down the large map of Arcanum he had been using to teach the class ever since the start of the school year. He whipped out his stylus. \"Let us begin with Shrouded Hills. A simple thing, one would think, dispelling a ghost from a mine.\" He chuckled. \"But who here knows what they found, once the mine was reopened under the leadership of Sarah Toonie?\" \n\nA student raised his hand. Professor Cartwright pointed at the elf. \n\n\"Toonite?\" he asked. \"The material that was causing all the iron to go sour in the first place.\" \n\n\"Correct. And now, T-Reactors provide nearly limitless power to our cities,\" Professor Cartwright said, sounding amused. \"A high sight better than those petrol designs that the Bates Industries keeps floating about, eh?\" \n\nA soft chuckle came from the audience. \"Next, in Tarant, with Dr. Craig interfering in the strike led by Don Throgg...well, we all know how that ended up.\" He grinned, tugging out one of the Tarantian bills that remained commonly circulated, even in Vendigroth. He waggled it around, letting everyone see the picture on the single dollar pound: Don Throgg, first half-orc Prime Minister of the United Kingdom. Still handsome, even eighty years or so after the image had been taken. \"The other interactions are easy to see -- Dr. Craig provided the needed information to return Queen Maxine to Dernholm, which led to their golden age. His council to Caladon during the negotiations sealed the entrance of Arland into the United Kingdom. He revitalized the Panarii faith, and their steadfast dedication to justice and equality remains a vital force for good today. He convinced King Longhaire to return to the Wheel Clan...so when the Second Clan Wars began and Queen Margret Shalefist of the Iron Clan revealed herself to the world, her marriage to Randvir ended the war before it started, and has led to the new golden age of the dwarves.\" \n\nHe slapped his palm against his knuckles, turning to face the class. \"The ramification goes on and on and on like this. The Bedokaan, convinced to align with the elves by his council, enter the world, and we have some in our class this very day! Arronax returned, and her magicks allowed us to rebuild this very city.\" He shook his head. \"Think on this, my students, when you go home to your families and thank the gods for another year...and remember: Whenever you think that you alone cannot make a difference, see what a single person can do when given the opportunity. And then act accordingly.\" \n\nAs the class started to leave, the arachnid students making out first, as their larger bodies required them to stay near the front row, Professor Cartwright started to pack up his belongings, humming cheerfully. When he looked up, he saw that one of his human students had edged closer. Melissa, he thought her name was. She was adorable: Blond, bubbly, blue eyed. She beamed at him, clasping her book close to his chest. \n\n\"Y-You made it all sound so real, so exciting,\" she said, her eyes shining. \n\n\"Oh, I just reported what was in his journals,\" Professor Cartwright said, cheerfully. \n\n\"Is it true, though?\" \n\n\"Is it true?\" Professor Cartwright turned to face her. \n\n\"What he did. I mean.\" Melissa gulped. \"S-Some people say that we can't really trust everything he wrote down. And there are rumors about the other-\" \n\n\"The journal with all the sex in it?\" Professor Cartwright asked, his eyes glinting playfully. Melissa turned nearly beat red. Her hands clenched even tighter to her books. Professor Cartwright sighed, shaking his head as he realized how trivial it would be to get this girl into bed with him -- he could already see her eyeing him eagerly. \n\n\"I've read the supposed true journal,\" Professor Cartwright said, cheerfully. \"And while it is, ah, entertaining, it seems like most of it was fabricated to sell more books.\" He smiled. \"The real, verified journal? That has historical evidence backing it up. And has produced far fewer people claiming to be related to Resh Craig. If I never have to see another Resh Craig impersonator in some revival fair...\" \n\nMelissa giggled. \"You'd make a pretty good one, you know?\" she asked. \n\n\"I do hope you're not saying that because I am half orc,\" Professor Cartwright said, picking up his bag, fully packed with papers to grade. \n\n\"Oh, no!\" Melissa said, horrified, blushing furiously as Professor Cartwright winked at her and turned to go. The professor walked through the campus, past the garden, past the dormitories, where a drunk elf was being led along by a sober lizardman. He stepped out of the front gate and strode along the sidewalk, hearing the faint humming sounds of the automobiles that filled the streets of Vendigroth -- most of them using batteries, though several were also based in magick. The new mithril based insulators were definitely a thing he'd want to get his hands on. He tipped his cap to ladies and gentlemen, ducked past children who were racing to get home now that they were freed from school, and came at last to his home -- a modest little house, tucked between two apartments. \n\nHe opened the door, then called out. \"Oh, honey!\" he grinned. \"I think we might need to move.\" \n\n\"Really?\" A woman called from the back. \n\nProfessor Cartwright rolled his shoulder. A pale glow suffused his body. He walked around the corner -- and emerged in a shining meadow. A naked woman sprawled on the grass, looking at the infinite blue sky as he sprawled next to her, grinning as he did so. \"Yeah,\" the half-orc said -- though he was not entirely a half-orc anymore. His body glowed from within, shimmering and crackling with raw magickal energies. The energies of two thousand years of knowledge and power, contained within a shell of technological knowledge and the will to do good. His glowing hand caressed along the woman's belly. \"I think that some people are beginning to suspect.\" \n\n\"You just are worried you'll fuck your cuter students,\" she said, playfully. \n\n\"Well, there is that,\" he said. \n\n\"You're just vain,\" she said, shaking her head. \n\n\"Vain?\" the man gasped, drawing back. \"You're the one who immediately made yourself look eighteen again!\" \n\nThe woman sniffed, primly. \"I have no idea what you are talking about, Dr. Craig.\" \n\nThe man rolled the girl onto her belly, then slapped her ass. \"You call yourself a goddess! Lying to my face like that!\" He smacked her rump again and the girl bit her lip, hard. Her eyes closed and she wriggled happily in the grassy field that existed beyond the edge of Arcanum, bounded by magick and sustained by will. \n\n\"I do not!\" She moaned, then gasped as he spanked her again. Then, quietly, she whispered. \"Maybe we can check on our children? Resh Junior's grandson is just out of college. I've heard rumblings he wants to explore the Glimmering Forest, to see if he can find Raven.\" \n\n\"More like to see if he can sleep with her,\" the man said, dryly. \"I swear, every male descended from me has the same urge to screw that elf. And she never stops allowing it.\" \n\n\"Will we ever tell them what you did?\" The woman asked. \"How you took the Kerghan's energies. How you wandered the worlds beyond and mastered those powers -- and returned to Arcanum?\" \n\nThis was a question that had been asked many times -- between the two godlings. For gods they were. Mastery of magick, mastery of science, bounded within two forms shaped in a world beyond the limitations of this one. While the male might have become a god first, the woman had waited for him -- waited and raised their son. And only once their son had grown and found his own life, and his own way, did she leave with her man. Only then did he show her the secret ways, the true names. The science beyond science and the magick above magick. And now they watched. They gently encouraged. They intervened when things grew tense. \n\nThat spot of bother in 1914, with the assassination of Maximilian II. That could have flared up nastily. And again, in 1934, if the election in Caladon had swung towards the Golden Boughs party, the whole of Arcanum might have gone up in smoke. It had never taken much. Just a prophecy here. A quiet whisper there. \n\nSlowly, the male drew his finger along the grass and he nodded. \"How about we become this ones friends.\" He grinned. \"We could lock our memories away, hide our powers unless they're needed. Make it fair. See what he can do with steadfast comrades.\" ",
        "\"Oh, that does sound fun,\" the woman said, giggling. \n\nThe two stood, their glowing forms meeting as they embraced. They held one another, caressing, kissing. Unbounded by prophecy, they stepped away from one another and away from the meadow. Emerging through the door, their forms faded and they stepped out -- not out of the small house in Vendigroth, but instead, into the snow swept streets of Tarant. \n\n\"Ready for another round, Bee?\" Resh Craig asked, doffing his cap. \n\n\"Always, Resh,\" Beatrice Brummund said. \"Though, he lives in Caladon, not Tarant, you know.\" \n\nResh grinned. \"Oh, yes. Of course. But today, I want in on something.\" \n\n\"On what?\" Beatrice asked. \n\nResh chuckled, then pointed. They stood before the Tarantian areoport -- and there, in bright lights, were the words: LAST FLIGHT OF THE ISF ZEPHYR -- RETIRING SOON! \n\nBeatrice laughed. And, arm in arm, the gods walked aboard the airship for one last time. \n\nTHE END"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "apotheosis",
        "climax",
        "god",
        "human",
        "orc",
        "steampunk",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/arcanum-of-steamwork-and-magic-ch-23"
}