{
    "title": "Tom Billionaire Ch. 07",
    "pages": [
        "****\n\n-- CHAPTER 7: Montauk II --\n\n****\n\n*-- JULY, MARSEILLE, FRANCE --*\n\nGingerly, I lay back against the plush pillows of the king-sized bed, getting myself comfortable before extending my right arm out into a curve, creating an inviting spot for Cassandra to recline against me. She accepted, pillowing her head against my chest before reaching back to pull my arm around her in a tighter hug. And together, we exhaled in welcome relief.\n\nAll was quiet in our spacious room. I'd gotten the Prestige Suite at the Sofitel Marseille Vieux-Port. And within five minutes of entering, I'd banished Captain Leclerq and all of his staff to get the hell out of the entire suite. I wanted nothing more to do with this whole mess.\n\nAlthough the French officers shadowing me had been neutralized at Gare de Lyon, analysis of the security camera footage had eventually shown my unconscious body being dumped onto a TGV express train bound for Marseille. Captain Leclerq and his officers had immediately come after me, taking up positions in key areas and using their informant network to try and zero in on my location.\n\nThe French police had gotten a partial trace during Sharpley's first ransom demand call to Taylor, while Cassandra and I were still holed up in our little closet. They narrowed our location down to the Vieux Port area. And the next time Sharpley called, Taylor had been instructed to keep him on the line for as long as possible to complete the trace.\n\nSo Taylor had first demanded evidence that we were still alive. And when that didn't take long enough, she'd launched into her derisive comments, claiming not to care whether or not we were returned and instead asking Sharpley to just kill us so she could collect the entire fortune. She'd kept Sharpley on the line, the cops completed their trace, and then they busted in with guns at the ready.\n\nThe FBI agents, Taylor, Vivienne, and Evania were now flying down in the private jet and would be arriving shortly. They had stayed in Paris, holed up in their hotel suite, watching things unfold from there. But as soon as they had evidence that we were okay, they'd packed up immediately to come join us. The plan was to fly home to New York from Marseille.\n\nBut until they arrived, it was just me... and Cassandra.\n\n\"I love you...\" I stated softly, leaning down to kiss the top of her head while running my fingers through her freshly-washed blonde hair.\n\n\"Love you...\" she mumbled, snuggling her face deeper against my chest. Wanting to feel the touch of my skin, she reached up and dragged the collar of my T-shirt down. But it wasn't enough, and she wound up pushing the hem of my shirt upwards until my entire chest was exposed and she could lay her cheek against my right pec.\n\nI chuckled, her eyelashes tickling me as she blinked. And I felt an old stirring as Cassandra and I lay in bed together, me half-naked.\n\nIt had been a very long time since we'd been like this, excepting that one night in our closet prison. But we weren't trapped any longer, and I could feel my body flushing as my warm affection for this gorgeous creature flooded through my veins.\n\nI wasn't the only one to notice. Cassandra hummed, idly kissing my chest, perhaps out of habit from the many times she'd lain on it over the years. Her hand roamed up and down my abs, my muscles taught and semi-defined after years of Rebecca working me into six-pack shape. And then her hand drifted a little lower, gliding over the bulge in my cotton lounge pants.\n\nI groaned softly, feeling the rush of blood going south into my loins. But the instant I groaned, Cassandra's hand went tense, and she pulled it away from my crotch.\n\nI knew immediately that something was wrong. And I was already sitting up as Cassandra quickly rolled herself away from me, curling herself into a ball.\n\n\"Cassandra...\" I said softly, wincing as I remembered what had happened to her scarcely an hour ago.\n\nAs much as she loved me, and as much as she enjoyed the feel of my touch, Cassandra had been raped. There had been no time for her to recover from that yet, and I knew I had to be very careful with her.\n\n\"I'm sorry,\" I murmured, as if that would do any good. \"I'm... I'm here...\"\n\nWithout looking, she reached a hand back, seeking out mine. Instinctively, I offered her my left hand, and she grabbed it, pulling my arm around her. \"Just hold me,\" she whimpered very softly, so softly that I barely heard her.\n\n\"Okay,\" I said, nodding even though she couldn't see me. I slid down the bed, moving myself into a spooning position. Moving slowly, I let my legs come up behind hers, ensuring that I could touch her without making it seem like I was coming on top of her, like I was trapping her. And once I settled in behind her, I wrapped my left arm around her a little more tightly while adding again, \"I'm here.\"\n\n\"Just hold me,\" she repeated.\n\nSo I did.\n\n****\n\nEven though it was only mid-day, Cassandra and I still fell asleep. Our exhaustion had nothing to do with the time zone or number of hours we'd been awake. The sheer ordeal of being kidnapped, held at gunpoint, and then caught in the middle of a firefight had taken its toll on us. And I didn't want to even think about where Cassandra's psyche was at after the rape.\n\nBy the time we awoke, everyone else had arrived and was waiting for us in the suite's living room. While we'd slept, someone had brought in both my suitcase and the one Taylor had thoughtfully packed for Cassandra before leaving Montauk. The sight of her own clothes put a smile on Cassandra's face, and she went into the bathroom to change and freshen up. Ten minutes later, the two of us emerged.\n\n\"Ohhh...\" Taylor sighed and smiled, immediately jumping out of her chair and coming over to Cassandra. The two women hugged fiercely, rocking together while Taylor blubbered apologies for what had happened, saying it was all her fault. And Cassandra just patted her back, reassuring the brunette that it was okay and that things _weren't_ her fault.\n\nVivienne, expectedly, came straight to me. She leaped into my arms, wrapping her legs around my waist with all the exuberance of a 23-year-old girl who thought her boyfriend had been *this* close to death. And Evania was immediately by our sides, hugging us together.\n\nTaylor then released Cassandra. Vivienne saw my wife coming over to us, and immediately dropped her feet onto the ground. Almost embarrassed, she backed away, sliding her hand into Evania's as the pair of them gave me and Taylor some room.\n\nMy wife simply stepped up to me, taking my face in her hands and giving me an intense look before sliding her hands around the back of my head and giving me a firm kiss. Wordlessly, she then slid her face down so that she could rest her cheek against my shoulder. And she hugged herself against me while crying ever so softly.\n\n\"Don't you ever do that to me again,\" Taylor whimpered.\n\n\"What?\"\n\n\"Get yourself kidnapped,\" she sniffled before pulling her head back and pouting. \"You do, and I will *seriously* just let them kill you so I can take all your money, got it?\"\n\nI barked a short laugh, and soon Taylor and Cassandra were chuckling along with me. It was then that I saw there was one more person in the room, and Special Agent Farnsworth stepped forward.\n\n\"Hi, Barry,\" Cassandra sighed, opening her arms for a hug.\n\nRather stiffly, the dour agent moved forward and let Cassandra hug him. But he stepped back almost immediately, looking decidedly uncomfortable. \"I'm glad you're safe,\" he said, the catch in his voice betraying his emotions despite his attempts to appear stoic.\n\nCassandra beamed, her smile lighting up the room. \"Thanks to you and your team.\"\n\nHe nodded and then looked ready to bolt.\n\nBut before he could, Cassandra asked, \"Where is everyone else? Jonathan told me Agent Reddick and a few other field techs were with you.\"\n\nFarnsworth shrugged. \"Agent Reddick is at the local prison keeping an eye on Mr. Sharpley. His associates were French nationals, so they're under Captain Leclerq's jurisdiction now. But we're working out the paperwork to extradite Sharpley to the U.S., and that'll take a little time.\"\n\nCassandra blinked. \"So you won't be returning with us?\"\n\nFarnsworth shook his head. \"We'll have to arrange a later transport. So this is goodbye for now. I'll stop by the house to brief you once we've gotten all the legal matters sorted out.\"\n\nCassandra smiled and then stepped forward, enveloping the agent in a warm hug that he wasn't expecting. But this time, instead of just stoically taking it, he actually smiled and patted her back. And he blushed when the gorgeous blonde turned her head and kissed his cheek, letting her lips linger for a few extra seconds. \"Thanks, Barry. For everything.\"\n\n\"Just doing my job, Ma'am.\" Farnsworth touched his forehead in a casual salute/hat tip, and then came over to me to shake my hand.\n\n\"Thank you, Special Agent Farnsworth,\" I stated firmly, emphasizing his full title.\n\n\"Take care of yourself,\" he replied before glancing at both Taylor and Cassandra. And then he added, \"And them.\"\n\nI watched his lingering looks and grinned. \"Sure thing.\"\n\n****\n\nAs picturesque as Marseille was, both Cassandra and I really wanted to get the hell out of there. So after a quick catered lunch on the balcony overlooking the harbor, we took limos to the airport and boarded the Gulfstream jet. And soon we were in the air heading for America.\n\nI'd taken two transatlantic plane rides in the past month or so. The first one had been from Athens to New York, when Cassandra had first come to fetch me home. And the second had been just days ago, flying off to Paris to rescue Cassandra.\n\nBoth times, I'd been conscious of the unspoken pecking order that had developed among the girls accompanying me. Through veiled looks or merely confident movements, these women self-organized who was sitting where, and it was no different for this flight home.\n\nI had a regular seat on the plane. It had been my seat for both the previous trips, with Cassandra by my side for the Athens-return and Taylor with me for destination-Paris. But Cassandra didn't lead me to it this time. Instead, she pulled me directly over to one of the long sofas built lengthwise along the side wall, one that sat three people with recessed seatbelts in the cushions. Cassandra put me in the middle, and then dropped herself into the spot on my right. Taylor followed, sitting down on my left.\n\nThere was an identical sofa facing the first one across the aisle, so that six people could comfortably have a conversation. But rather than sit down there, Vivienne pulled Evania with her to the table towards the aft part of the cabin. She sat down in my regular seat, immediately buckling herself in. And then she sighed and stared out the window.\n\nI sat there and pondered the way my life had turned out. In many ways, it was just the way I had once hoped for... desperately... after my world had fallen apart. After everything we'd been through, here I was back on my private jet with Taylor under one arm and Cassandra the other. Taylor's scar would never fade -- and I was sure the memories of what had happened to Cassandra wouldn't either -- but we were together again.\n\nAt the same time, I'd picked up two new important people in my life along the way. They'd played an important role in getting me back to this point, and I couldn't discount the contributions they'd already made. And with them on my mind, I flicked my eyes over to Evania and Vivienne.\n\nBoth women were watching me intently. Evania had a patient expression. She actually seemed energized by all the zipping around we'd been doing lately. She'd handled all the arrangements of going back and forth to Europe, completely in her element. And the look in her eyes told me she looked forward to serving me in any way I deemed fit for the foreseeable future.\n\nBut Vivienne gave me a pained look. I saw the longing in her eyes, the desire to be beside me, cuddling up next to me. I had to be killing her inside not to be with me, and yet she knew that it wasn't her place.\n\nI felt for her. I felt guilty for uprooting her from her home, taking her away from her friends, and dragging her back and forth across the globe. We'd become as intimately close as any two people could become in... what... five weeks? And to go so suddenly from being my clear #1 to a distant... what... third? Fourth? It had to hurt.\n\nIf we were to continue with our relationship, we would have to work things out. I still owed Cassandra much more love and attention, especially after what she'd just been through. But I also owed it to Vivienne to make the effort to keep our relationship intact.\n\nI knew I was going to have a problem very soon. Three days ago, I was all set to abandon the Jonathan Kwong life, to live as Tom Eriksen with Vivienne and Evania. All three of us believed our world together would be happily ever after.\n\nBut then everything imploded. Reality had forced its ugly head into the mix, and I'd jetted away to rescue Cassandra. Now I had to deal with both lives. I couldn't keep BOTH of them; there was a simply too great a divide between my Tom Eriksen life and my Jonathan Kwong one. But it was a problem I couldn't deal with right now. Cassandra needed me, and indeed she was pulling my right arm around her shoulders and cuddling herself into the crook of my shoulder.\n\nI would have to make a decision about my Tom Eriksen life very soon. _I'll get it worked out,_ I told myself. _I've still got some time._\n\nBut I was wrong. Time was up.\n\n****\n\n*-- MONTAUK, NEW YORK --*\n\n\"Mr. Kwong, sir?\"\n\nI was startled from my reverie by the voice of Matthew, my limo driver, coming over the intercom. After landing in the afternoon at the airfield and transferring to the stretch limo with tinted windows within the privacy of an enclosed hangar, we'd emerged to find scores of paparazzi lining the fences as we tried to drive out.\n\nI'd sighed in resignation at the flashbulbs popping en masse as they tried to penetrate the car windows. The special tint I'd gotten was reflective, so the photogs weren't doing anything but blinding themselves, not that they would stop or anything. And I was staring out at them when Matthew called for my attention.\n\n\"Yes, Matthew?\"\n\n\"Miss Ashlyn just called. She says you should turn on the TV.\"\n\nBoth Cassandra and Taylor looked over at me. They were seated to either side of me in the back of the limo. And Evania and Vivienne ahead of us also turned around to look at me. Shrugging, I motioned for Taylor to push the entertainment system controls on her side of the car, and she turned on the 30-inch monitor on the wall separating us from the driver.\n\n\"The blogosphere is buzzing with new reports coming from both our European sources and key personnel *inside* the FBI investigative unit. We've confirmed that in the past 48 hours, an absolute whirlwind of events have taken place involving the now infamous Jonathan Kwong and his longtime personal assistant Cassandra Cooper.\n\n\"A few days ago, TMZ released startling footage revealing that a disguised Jonathan had paid a visit to his estranged wife, ex-supermodel Taylor Brynn, at a Malibu rehab center. Shortly after, it was announced that Taylor had _left_ the clinic, and was presumed to have returned to the Kwong's private estate in Montauk, New York.\n\n\"But contrary to what we believed then, Montauk was not Taylor's final stop. Our FBI sources have confirmed that just before Taylor was released, Jonathan's assistant Cassandra Cooper was *kidnapped* by none other than the fugitive executive Robert Sharpley, who just last year stole over four *billion* dollars from the company. Miss Cooper was presumably held for ransom, and our European sources now tell us that when Jonathan's private jet flew away two nights ago, both Jonathan and Taylor were aboard as they headed for Paris to mount a rescue attempt.\n\n\"What followed is a story that you won't believe, with a standoff that ended in bloody gunfire. So don't go away. We'll have the juicy details after the break!\"\n\nThe screen cut to commercial, and Taylor put the sound on mute. I simply buried my face in my hands and muttered, \"You've GOT to be kidding me.\"\n\n\"How could they know?\" Taylor sighed.\n\n\"The FBI is a big, BIG government entity,\" Cassandra sighed, her Aussie drawl making her seem even more jaded. \"National secrets are one thing. I'm sure you could get *executed* for divulging that stuff. But protecting the privacy of the rich and famous?\" \n\nThe three of us griped about that for a few minutes until the Celebrity Sightings broadcast came back. Unfortunately, the French police wasn't much more airtight. The breathy reporter announced that *I'd* been kidnapped, and then the both Cassandra and I were rescued in a firefight that wounded several French police and claimed the lives of three kidnappers. It had all happened only a few hours ago. But word could shoot across the Atlantic Ocean much faster than even the fastest private jet could fly.\n\n\"Matthew, get us home,\" I barked, jabbing the intercom.\n\n\"Sir, we're in front of the gates now,\" he said. But then he explained apologetically, \"And so are they.\"\n\nI looked up. In the intervening ten minutes of broadcast, we'd driven to the front gates of the Mansion estate. But just like at the airfield, there was a horde of paparazzi blocking our way.\n\n\"'Encourage' them to move,\" I growled.\n\n\"Yes, sir,\" Matthew replied. He promptly honked the horn, a special one I'd installed that was *deafeningly* loud. And then stepping gently on the accelerator, he nudged the front bumper forward and into the crowd. At the first touch of knees buckling, the crazed photogs began to move out of the way.\n\nWith travel and the time zone change, it was about 5pm. Security radioed to tell me they'd caught two trespassers with bigass zoom lenses jumping the fence. I rubbed my forehead again, thinking that after everything I'd been through, couldn't I please just have some peace and quiet for a little while? I'd nearly died a few hours ago... Cassandra had nearly died. Why wouldn't these people just leave me alone?\n\nBut of course they wouldn't leave me alone. It was their job to hound me. And whether I'd agreed to be hounded or not, my fame had been the price to pay for my inheritance. Plus, it was like Taylor had once told me: \"You don't want paparazzi stalking you? Stop fucking supermodels.\"\n\nShe'd said it in jest at the time, but there was more than a grain of truth in her words. If I'd just settled into a quiet life with Taylor in some rural destination, my life would have been far less complicated. Bill Gates and Warren Buffet had gazillions more money than me, but then they didn't go around to high society parties and leave with a couple of extra hot women under their arms. No, I had to go jet-setting to exotic locales with Taylor, Cassandra, Ashlyn, Charlotte, and a half-dozen of their friends. I had to get photographed in compromising positions with many different women who weren't my wife. And that kind of lifestyle was of somewhat high interest to the people who enjoyed watching Celebrity Sightings. It was my fault. It was the lifestyle Jonathan Kwong had chosen, believing that the rewards (and pleasures) were worth it.\n\nAnd even though I'd run away from that lifestyle, it would forever haunt my past.\n\nTime was up. And now I had to make a new decision: After everything that had happened, what did I want to do with my life now?\n\n****\n\nEven though I'd slept quite a bit during and immediately after the kidnapping, I hadn't slept on the plane ride home. So I was feeling pretty tired when we finally got to the house and went inside. As expected, the whole household was there to greet us.\n\nMy mom was the first to grab me and hold onto me, complaining in Cantonese about heart attacks and making her worry while simultaneously professing her relief that I was alright. To my right, Cassandra's mother was doing the exact same thing to her daughter.",
        "Edward actually hugged me, and so did Dorothy. Ashlyn, Charlotte, and even Karl were quite excited to see us safe and sound. Kaitlyn cried. And Jeff gave me a \"manly\" pat on the back. Plus, in general, *everyone* circled around Cassandra to tell her how happy they were that she was okay.\n\nAnd then I got to scoop up Joey as my little girl sprinted from her mother's arms over to me for a big hug.\n\nBut the rounds of \"welcome backs\" faded. As terrifying as the situation had been, we'd only been gone for a couple of days. And the impromptu party started to break up.\n\nI'd been carrying Joey on my left hip for a while, and she got antsy to be put down and go in search of other things to entertain her. I let her go, and Evelyn quickly took the almost 2-year-old over to the family room and her toys.\n\nAfter waving goodbye, I headed for the stairs, fully expecting Cassandra and Taylor to come with me. I was tired, and so were they. And I already had visions of the three of us taking a big shower to clean up and then falling into bed.\n\nBut it was not to be. Taylor waved me on, saying, \"Go ahead, Johnny. We girls need to talk first.\"\n\n\"Huh?\" I frowned, giving my wife big puppy dog eyes.\n\nShe chuckled and shooed me away, huddling together with Cassandra and Ashlyn. \"It's barely 5. Don't worry; we'll both be up there soon. Take a shower and relax or something.\"\n\nBad memories of the last time Taylor had come home popped into mind. I'd wanted her to come to my bed, but she'd chosen to bunk with Ashlyn instead. \"Do you promise you're coming?\" I asked with worry. I still remembered not only how she wouldn't come to my room the night before flying off to Paris, but how she wouldn't let me touch her even during the four-way on the plane.\n\nTaylor's eyes twinkled and a knowing grin spread across her face. \"Yes, I promise. Now go!\"\n\nI pouted, but nodded. And in the end I went upstairs alone.\n\nI entered the Master Suite alone. I stripped and went into the bathroom alone. And I went and took a shower alone.\n\nFor all the reports of me collecting a \"harem\" around me, I most certainly was not a harem-master. It wasn't in my nature to dominate the women around me, as much as we might enjoy some role-playing from time to time. Tom Eriksen had been a little more demanding, never forgetting that HE was the billionaire and all the girls around him either employees or \"guests\" whose price for going on the joyride was being at his sexual beck and call.\n\nBut I wasn't Tom Eriksen anymore. I was Jonathan Kwong again, and I didn't have that kind of dominant relationship over Taylor, Cassandra, or any of the other girls from my past. I might've been able to fetch Evania or Vivienne to come to me for company, but at the same time, I didn't want to. Taylor had promised me she would be coming soon. As intimately comfortable as she'd been with me ever since reuniting in Marseille, we hadn't ACTUALLY gotten back together. And I didn't want to do anything to screw that up.\n\nFortunately for me, Evania didn't share that same concern.\n\nI emerged from the bathroom completely naked, as was my custom. I'd dried off completely, but didn't need the veil of modesty that a towel around my waist would have provided; not in the comfort of my own home. It was habit. I didn't even bother to really look ahead of me as I meandered over to my walk-in closet, looking for something comfortable to lounge in until my ladies returned. So it was a great shock to me when I found a gorgeous, stacked Greek brunette standing in my way.\n\n\"The green? Or the blue, sir?\" my valet inquired, casually oblivious to my nudity. She held up a clothing ensemble on hangars in each hand, a cotton button down in a greenish plaid with matching pants in her left hand, and a short-sleeved blue shirt in an ash pattern with coordinating blue-gray pants in her right. \"Or something else entirely?\"\n\n\"What are you doing here?\" I asked in surprise.\n\nShe arched an eyebrow and looked down, as if she'd somehow disappointed me. \"My job, sir.\"\n\nFor four months, Evania had helped me dress. Scratch that, for three and a half months, she'd helped me dress. The first two weeks, she was really more travel agent/assistant. But after I'd started calling her my valet, she'd looked up the term and gotten a serious kick out of the traditional \"dressing assistant\" definition of the role. And it didn't hurt that dressing me usually involved copping some feels or tumbling into bed before I got fully dressed.\n\nI exhaled, feeling bad. \"I know. I'm sorry,\" I apologized.\n\nShe looked up at me with big, liquid dark brown eyes. \"You have no need to apologize to me, sir. I am here to serve you.\" And without another word, she dropped both outfits onto the floor and knelt at my feet. Reaching her hands up, she grasped my naked buttocks, and exhaled a hot steam of breath against my semi-rigid cock. \"You're exhausted. And I don't believe you've had relief in *days*.\"\n\n\"Ungh,\" I groaned, feeling my balls twitch. She was right. With the kidnapping and all, I hadn't gotten off since Taylor's impromptu foursome on the flight to Paris. And as my valet took my cock in hand, I felt myself growing rapidly.\n\n\"Evania...\" I breathed, worried about Taylor.\n\n\"Shh...\" she soothed. \"This won't take long. I am only here to assist you.\" And then she slurped my cock into her warm mouth.\n\n\"Unnnghhh,\" I groaned again, this time far more gutturally. I could feel my dick had completely rigidified, fully elongating inside her mouth with a few inches sticking out.\n\nEvania rolled her eyes up, staring adoringly up at me while she began to bob her head back and forth, taking more and more of me into her with each breath. I felt my cockhead nudging against her throat. And just before I got in, she pulled off me completely and asked, \"Please tell me... please, sir?\"\n\nI knew what she wanted. Feeling a little of Tom Eriksen coming back to me, I grinned and ordered, \"Pare mou mia pipa.\"\n\nHer teeth shone bright white, and then were quickly tucked away as she sucked me in all the way to the root, taking my cock deep in her throat until her lips were sealed up around the base of my shaft. And still staring right into my eyes, she hummed, letting her throat muscles vibrate exquisitely around my sensitive glans.\n\n\"Oh... FUCK, Evania,\" I growled. I slid my hands into her hair, feeling her thick curls flowing through my fingers. I held her head in place and thrust a couple of times, fucking her face for my pleasure and knowing she enjoyed it just as much as me.\n\n\"Mmm...\" she mumbled for the few moments when my dick was NOT in her throat, catching her breath and letting her eyes sparkle to express her delight. Pulling back, she let her lips and tongue dance around my head, lavishing attention on its sensitive nerves while her right hand clenched around the rod, jacking me with my favorite corkscrewing motion.\n\n\"Efharisto...\" I moaned, thanking her for this brief respite after all my anguish. \"Efharisto...\"\n\n\"No... thank you,\" she moaned, staring up at me. \"Just let it go. You know I want it. Let it go for me.\"\n\nShe'd promised it wouldn't take long, and she was right. After only a few short minutes, I felt my balls begin to boil. And with her fingertips caressing them, Evania felt it too.\n\n\"Give it to me,\" she moaned, parking her face just beneath my cockhead while she continued to stroke my shaft. \"Let it go.\"\n\nI groaned, seeing her pretty face in prime explosion distance. So often, Evania sucked me to completion inside her mouth, swallowing every drop I had to give. Now, she was presenting herself for a facial, eagerly anticipating my creamy load to splatter all over her skin. And knowing how much spunk I'd probably built up over the past couple of days, I breathed deeply and got ready to let fly.\n\n\"Fuuuuuck!\" I roared as I felt the first contractions begin. My dick retracted backwards, like a pirate-ship cannon blasting away. And from the tip of my cock came a jet of semen that spurted out as if from a fire hydrant.\n\n\"Gahhh!\" Evania gasped as she was coated from forehead to right cheek, a thick line of cream settling onto her face.\n\n\"Ungh!\" I grunted as the second jet took off, aimed by her still-stroking hand.\n\n\"Yes!\" she squealed, another line splashing diagonally across her nose.\n\n\"Ngh! Ngh! Ngh!\" A third, then fourth, and fifth spray launched out of me, a little bit even going into her gaping mouth. But most of my cum wound up on Evania's face, a few strings in her hair, even. And with gleeful abandon, she stroked me with both hands, pulling more and more cum out until she was absolutely covered from hairline to chin.\n\nAnd then with my legs buckling, I actually fell flat on my ass to the floor.\n\nGiggling, Evania clapped her hands and tried to blink to make sure she could still see. Her left eye was painted shut, and she had to drag a finger across the lid to clear it enough to open. She popped the finger glob of jizz into her mouth, humming as happily as when she had my cock in her mouth. And then she sat back on her heels, catching her breath from the momentary exertion.\n\n\"You are a mess,\" I chuckled, surveying my Jackson Pollock painting across her face.\n\n\"Then I am perfect. Efharisto.\"\n\n\"You don't need to thank ME,\" I chuckled.\n\n\"But I do. You have given me what I wanted for myself, and also to make my friend happy.\"\n\n\"Huh?\"\n\nEvania grinned, then stood up gingerly, tilting her head back so that my thick, stringy cum didn't fall off her face. She also held an open palm beneath her chin, waiting to catch anything that did fall. \"I am going to go visit Vivienne now. I know that having your cum on my face for her to lick off will cheer her up. It is temporary, I know. But it's the least I can do for her.\"\n\nI arched an eyebrow. \"You're going to walk like that from here, downstairs, and over to the guest wing?\"\n\nEvania just smiled, not wanting to nod her head and further dislodge my spunk. \"Efharisto.\"\n\nI sighed. Well, even if Taylor saw, I at least knew my wife wouldn't care. So I merely bowed my head to her. \"Parakalo.\"\n\nEvania smiled and then left.\n\n****\n\nI'd learned over the years that I could think much more clearly after an orgasm, and tonight was no different. I'd been pushed into a pretty tense situation with the kidnapping and all, and even rescue hadn't managed to completely relieve me. But now that I lay back across the big bed in my own home, luxuriating in the wonderful, empty-balls feeling post-ejaculation, I found that I'd reached a new level of relaxation. And as my head cleared, so did the decision in my mind: the one between John Kwong and Tom Eriksen.\n\nIt wasn't a choice for me any longer: Jonathan Kwong was back. The press knew it. My family knew it. And now I knew it. I was here. I was in my bedroom. And my name was John. Period.\n\nSure, I could try to run and hide again, to become Tom Eriksen once more. But to what end? Burying my head in the sand and pretending the outside world didn't know who I was would be pointless. The only way I could actually do it would be to disappear completely, to cut off ties with everyone from my past, and not even draw money from my accounts.\n\nBut to do so would be completely ridiculous. For one thing, I'd become far too accustomed to my way of life. Even though I hadn't lived TOO outlandishly as Tom Eriksen, especially with the modest apartment in Manhattan, I still wouldn't cut myself off from Jonathan Kwong's billions. And quite simply, there was no way I would once again leave behind those people who were special to me.\n\nI wouldn't leave Cassandra again. Not ever. Plus, given her behavior over the past couple of days, it looked like Taylor was coming back to me as well. I still didn't know where I stood with Ashlyn, but I wouldn't be leaving Joey again. And of course, there was my mom. I couldn't abandon her.\n\nSo it was decided: Tom Eriksen was dead.\n\nStanding up, I walked to one of the inland-facing windows. Jeff Lee had built this place so that the Master Suite straddled the house, with windows pointing off in three directions. I could see up the front driveway and on to the front gate. There were spotlights there, no doubt illuminating breathy reporters giving the latest speculations into cameras connected to throngs of inquisitive viewers.\n\nSurprisingly, I felt a wave of relief wash over me as I pictured the stalkerazzi hovering at my front gates. I never would have thought I'd be *relieved* to think of the limo's horn honking and excruciatingly slow crawl forward as we tried to get onto private property without running anybody over (well... without running them over TOO hard).\n\nThe fact was: I was used to the camera flashes and tabloid gossip. I knew how to deal with those annoyances. And the idea that I no longer had to really think about the John vs. Tom identity crisis far outweighed the minor nuisances of a few unsavory media types slowing my entry onto the mansion's grounds, or of my travel anywhere else I wanted to go. My mind was free. The decision was final. And I was Jonathan Kwong once again.\n\nJust then, I felt a pair of hands sliding around my chest, and a warm body dominated by two large breasts pressing against my back.\n\n\"Doing your introspection thing again?\" Taylor asked softly.\n\nI reached my hand up to cover my wife's as she interlaced her fingers over my breastbone. \"Do you know how long it's been since I felt you touch me like this?\"\n\nShe sighed and lay her cheek against my shoulder from behind. \"I'm sorry. I thought I was doing what was best for you.\"\n\n\"For me?\"\n\nShe exhaled slowly. \"In Malibu, I was convinced that you were better off without me. Even when you brought me here, or when we were together on the plane, I... I didn't want to touch you, so then it wouldn't hurt so much when I left to go back to rehab again. I thought you'd be happier with Vivienne and Evania, living a brand new life with a fresh start.\"\n\nMy hands tightened their grip, and then I spun in place, making sure not to dislodge Taylor's hands so that we wouldn't break the hug even as I turned to face her. \"I don't want a fresh start. I want *you*... here... with me.\"\n\nTaylor's deep blue eyes flashed as she blinked. \"And I want to stay here, with you. I never should have left you.\"\n\nGently, I held her cheeks so that I could kiss her. \"I'm sorry,\" I said sincerely. \"*I* never should have left *you*.\"\n\n\"NEITHER of you should have left ME,\" Cassandra added, drawing my attention to where she was standing just a few feet away.\n\nI smiled at the sight of my gorgeous blonde bombshell. I extended an arm to her, and she eagerly came forward, with Taylor opening up as well so the three of us could share a group hug.\n\nCassandra and I kissed. Then Cassandra turned her attention to Taylor, pressing their cheeks against one another while tightening their grip on each other's waist before looking back at me. I just stared back and forth at the pair of them, both tall, statuesque beauties: Taylor with edgy, raven-black short hair and dark blue eyes, Cassandra the flowing blonde with sky blue eyes. And I grinned happily.\n\nFor everything else going on in my life, these two were my core. They were all I really needed. And now that I had them both back, I couldn't help but grin goofily.\n\n\"You okay?\" Taylor asked, reaching up and rubbing my forehead. \"You look a little crazy.\"\n\nI smiled, a genuine, honest-to-goodness smile. \"Crazy happy.\"\n\nTaylor beamed right back at me, and I noticed something different in her eyes as well. Her old blue sparkle was back, and I stood up straight to give her the same evaluative look she was giving me. \"Are YOU okay?\"\n\nShe bit her lower lip, looking thoughtful for a moment. Absentmindedly, she briefly reached up and traced the scar on her cheek, and I was reminded of why Taylor had not originally been willing to come home from Malibu: because she had still been a broken woman. But a second later, those brilliant blue eyes came right back to focus on me. \"Yeah... I am...\"\n\nTaylor may have still been broken. Cassandra had more recently been broken. And I was starting to understand that despite my little vacation from reality, living another man's life, I wasn't exactly fully put back together either.\n\nWe wouldn't be fixed in the course of a single conversation. We wouldn't get over all our past traumas with the snap of our fingers. But we would work at it. Together, one step at a time, we would begin again.\n\nThe three of us had been shifting a little as we hugged and then separated to really look at each other. I looked at Cassandra, she looked at me. She looked at Taylor, Taylor looked back. Etc. The room's lights were only half-on. It was \"mood lighting\" for lack of a better term; Evania had set it that way before I'd emerged from the bathroom. There were several overhead recessed lights above us, casting columns of illumination down to the floor. And the whole point of this description is: when Taylor canted her head to the side to smile at me, she was bathed in one of these overhead lights, like they did in that old Touched by an Angel TV show.\n\nFor a second, Taylor looked like my angel. Even though we were still broken people, she was with me again. I knew it.\n\n\"*We're* back, aren't we?\" I asked.\n\nTaylor thought about that for a moment. And then with a little shrug, she nodded. \"I guess we are.\"\n\n\"So you're staying? You don't want to go back to Malibu or anything?\"\n\nShe shook her head slowly. \"I'm home. I'm with you.\"\n\n\"What happened to sitting down and having a big talk about starting again?\"\n\nTaylor smiled mirthfully. \"Ugh... _talk_.\" She leaned in and tapped the tip of my nose before moving in closer and readying herself for a kiss. \"What do you say we just skip the talk and get the three of us into bed, hmm?\"\n\nI have the greatest wife in the world.\n\n****\n\nDespite Taylor's words to get us into bed, my ladies still wanted to shower away all their travel grime. And even though I'd already taken a shower, Taylor pulled me into the large enclosure after them, saying, \"Fine, you can spend all your time soaping us.\"\n\nWorked for me.\n\nFor the next fifteen minutes, I was like a kid in a candy store, not sure where to go first. Even though Taylor and I had some minor contact during the little foursome on the plane ride to Paris, she'd made it clear I wasn't allowed to deliberately touch her. That wasn't the case now, and I delighted to hear the pleased hum in my wife's voice as I let my hands roam all over her fantastic body for the first time in _months_.\n\nEven though it hadn't been as long of an absence, I similarly delighted in embracing Cassandra. My love for her was augmented by our time apart, along with a very special concern of mine to shower her with affection after what Sharpley had done to her. Indeed, I started to focus rather exclusively on her once I started on that line of thinking, until she giggled and pushed me back toward Taylor.\n\n\"But after...\" I protested. \"I know you need me...\"\n\nEven though my words didn't explain much, Cassandra's eyes softened as she realized what I was getting at. She did know me very well. And shaking her head with a smile, she grabbed my hands and put me back onto Taylor. \"She needs you, too.\"\n\n\"It's okay,\" Taylor insisted, pushing me back to the blonde. \"After what you've been through, you deserve more of Johnny's focus. Besides, I owe you. When I had my own... incident... with Martin Dean, you were there for me.\"\n\n\"Just like you're here for me now,\" Cassandra smiled gratefully. And with that, she merely threw herself between us, holding us tightly so that all three of us were hugging together again.\n\nHugs turned into kisses. Kisses turned into petting. And petting turned into fondling. It was a damn good thing Evania had gotten my rocks off recently. After the long drought without an orgasm, I would have popped off pretty quickly right there in the shower.",
        "But I didn't pop off, and eventually my ladies got cleaned up. We dried off, but didn't bother with clothing. And in the end, the three of us finally made it back to the bed.\n\nEven then, the girls wanted to argue about who went first. \"I couldn't wait to get Johnny in me after Dean,\" Taylor argued.\n\n\"Well I CAN wait,\" Cassandra insisted. \"I don't want to think about what happened in Marseille. It DIDN'T happen for me. So I'm not going to change my decision making now because of it. What I would normally decide in this situation is that *you* have been stuck out at that rehab center for _four months_ without your husband. And we're going to rectify that *right now*.\"\n\nTaylor had no argument against that, and soon she was flat on her back while both Cassandra and I worked her over. She'd gotten pretty revved up in the shower, but the striking brunette was getting seriously heated while Cassandra got between her thighs to lick her slit and I showed her the meaning of French kissing while fondling her big tits.\n\nAnd then it was time.\n\n\"I need you in me, Johnny,\" Taylor whispered, holding my head in her palm while staring up at me with big, luminescent blue eyes. \"Quite literally, there's a void inside me that only you can fill. Make me feel whole again.\"\n\nCassandra guided my dick, and then we were there. I watched the hitch in my wife's eyes at the moment of penetration. And then my mouth was on hers as we resumed the ferocity of our earlier kissing.\n\nShe was tight. She was really, really tight. I knew my wife was a nymphomaniac, and that she had a penchant for seducing other men. But somehow she'd gone completely abstinent during her rehab stint. From how tight she was, I wasn't sure she'd even put her own fingers in here. Taylor groaned into our kiss, thrusting her hips up, trying to get more of me inside her. And in the end, she simply wrapped her legs around my lower back and dug in with her heels, pulling until her own tightness gave way and we both felt my shaft sinking deep into her body.\n\nOnce we were fully joined, Taylor dropped her head back against the mattress and gasped from her exertion. Beads of sweat were forming on her forehead, and she panted with a goofy expression of glee. \"Mmm... forgot how big you are.\"\n\n\"Really?\"\n\nShe giggled. \"No. Actually, I may have even exaggerated your girth in my mind for the past few months. But believe me, feeling this is far from a disappointment.\"\n\nI grinned. \"Glad to hear that.\"\n\n\"You're next,\" Taylor chuckled, glancing over at Cassandra and beckoning the blonde over for a kiss.\n\n\"I can wait.\"\n\n\"Mmm... I love you guys,\" Taylor moaned, feeling Cassandra's hand slip under to play with one of her sensitive nipples. I felt my assistant's other hand reaching back to tickle my balls.\n\n\"We love you, too,\" I answered for both of us.\n\nTaylor sighed. \"All that talk about Dean reminded me of a few things.\"\n\nCassandra frowned. \"We never meant-\"\n\n\"Oh, no. It's nothing bad, actually. I got over him a long time ago. No, it just reminded me of that night we spent together after that party, just the three of us. We were all each other needed. It was a special night, just like tonight.\" And Taylor grinned while rolling her hips, meeting me as I continued to slowly pump in and out of her body. She kissed me, and then kissed Cassandra again. And then she lay back, holding the blonde's head against her shoulder while luxuriating in the feel of our sexual act.\n\n\"You're special, Jonathan Kwong,\" Taylor then said to me, clenching her inner muscles. \"You're my man. I've had others; Lord knows I've had lots of others. But you're my one and only. You were the sweet one in college. You were Mr. Dependable when we got to New York. And you've been the most patient and understanding man in the world ever since we got married. You've accepted me, ambitions and frustrations and foibles around. We've gone off course a few times, you and me. I know I let you down way back in the beginning with the magazine leaks. And no matter how much you blame yourself, *I* walked away from *you* after JJ.\"\n\nWe both went quiet, and I paused to stretch a little higher and peck Taylor's forehead. \"It's okay.\"\n\nTaylor closed her eyes for a moment and nodded before opening them back up. \"I know it is. I'm back now. And I believe that you'll accept me for anything. Even with this...\" she reached up and traced her scar.\n\nI didn't immediately answer except to bend down and kiss her ruined flesh. She winced at my touch, but I patiently kept my lips there. I wanted to communicate that I DID accept her for anything, scars and all. Her face might not have the unblemished perfection it once had, but it was still _her_ face, and I loved it.\n\nI thought she would relax, but instead she just got more and more tense. Taylor's eyes tightened, and her lips were pressed tightly together. I started to worry that I'd done the wrong thing, but then incredibly, Taylor shivered and squeaked as an orgasm passed through her. And I continued my kisses over to her ear and then down her neck while continuing to pump in and out of her. \n\nEventually, Taylor's shudders subsided. She was breathing heavily, and she wrapped her arms around my head to hold me tightly against her. I felt the wetness of her tears against my cheek.\n\n\"I love you, Johnny,\" she whimpered.\n\n\"I love you, too,\" I hummed right back.\n\nWe held each other for a long while, neither of us moving. And then after a few moments of just holding each other, Taylor turned her head and looked over to Cassandra. \"Your turn.\"\n\n\"No, it's alright,\" Cassandra said gently.\n\n\"Really. This is another special night, and I seem to remember us switching back and forth quite a bit last time.\"\n\nCassandra smiled and bent down. Taylor met her in a sweet kiss, one of affection more than anything else. And I felt my heart melting to see the looks in their eyes as they nuzzled noses.\n\nTaylor and Cassandra were bisexual, but only physically. They loved each other, but never in a romantic way. For years, there had been a balance between the two: Taylor as the acknowledged wife and Cassandra as my devoted assistant. Both realized that the other gave me something they didn't: Taylor the romance and wifely partnership that Cassandra couldn't bring herself to do, and Cassandra giving me the near-constant attention and patient support that allowed the more flighty Taylor to go off and do her own thing.\n\nBut those roles were changing. Taylor wasn't modeling anymore, and I'd seen her lose a lot of her old confidence in the past year after the car crash. Self-conscious of her physical scars, she'd stopped flirting with every cute guy she met. And though she was drowning herself in coke and sex before checking into rehab, she did so only at model parties with people she'd known and was comfortable around. She still did her own thing then, leaving Cassandra to be the attentive one, but I got the distinct impression now that Taylor wasn't planning on hopping from place to place without me anymore.\n\nAnd Cassandra wasn't limiting herself to her assistant's role anymore. For so long, she'd been intimately close to me while we were alone, but always melted into the background whenever I had others around me. She rarely participated in our playroom orgies, leaving me to frolic with the nubile models and friends who came to visit while she either hung in the background or left the room entirely. And she never asserted herself for attention whenever some other woman wanted me instead. But that was changing now, and she was finally taking the place in my heart she knew she could have at any time.\n\nI didn't know how much Cassandra had told Taylor about her recent decision. I didn't even know if Cassandra still meant what she'd told me in our closet prison only last night, about giving up the job and being with me as a wife, and about having my children. But from the way the two looked at each other, I figured that she HAD told Taylor. And that now they saw each other as sister-wives.\n\nGrinning, Taylor turned away from Cassandra and focused on me. Her smile widened, and then grabbing my shoulders, she rolled us over so that she was on top, although my still-hard dick was dislodged from her soaked pussy. My wife bent her head down to kiss me, closing her eyes and driving her tongue into my throat. I closed my eyes as well, and felt the warm fuzziness of love spreading throughout my body.\n\nA second pair of lips were then on my cheek. I didn't open my eyes as Taylor's lips slid to the right and Cassandra's moved over my mouth. I felt the girls shifting above me, four firm tits pressing against my chest. I gasped when I felt a warm pussy open up and begin to surround my upright cock. And by the time I blinked my eyes open, I found that my gorgeous blonde assistant had fully seated herself upon me.\n\n\"Hello, Jonathan.\"\n\n\"Hi, Cassandra,\" I said reverently, in awe of her beauty. I'd seen her in this position a thousand times. But there was something different this time. Her eyes were more... open. Her face was more relaxed. This was Cassandra letting herself go, not holding that last bit of her soul away from me. And she was all the more radiant for it.\n\nTaylor was then next to us, kissing her way up Cassandra's torso before opening her mouth and sucking in an erect nipple. I watched Cassandra let her head roll back, sighing rapturously and cradling Taylor's head to her breast. The blonde began undulating her hips, rocking in my lap with my dick carving out her insides. And the sound of Taylor moaning around a mouthful of flesh mingling with Cassandra's pleasured gasps was music to my ears.\n\n\"You two are so fucking hot...\" I groaned, simply in disbelief that the three of us were coming together like this. It was the culmination of a dream I'd had for years, a dream I'd thought wasn't possible after all the tragedy we'd recently faced.\n\nTaylor smiled, pleased to be turning me on. And she moved higher, taking Cassandra's face in her hands so that the two could exchange wet, sloppy kisses that were more about my entertainment than their own lust. As my two beauties swapped spit in an increasingly erotic liplock, I responded by driving my hips off the bed a little harder, thrusting deeply into Cassandra, and the girls giggled happily at my response.\n\n\"That all you got?\" Taylor asked with a saucy grin.\n\nI arched an eyebrow, and then without warning, I toppled Cassandra off me, grabbed my wife's shoulders, and flung her onto her back. I covered her in a second, split her thighs to the sides, and immediately rammed my cock deep into her cunt.\n\n\"Oh... Fuck me, Johnny...\" she crooned, rolling her hips a little harder. \n\nSo I pushed a little harder.\n\n\"Deeper, honey... deeper...\"\n\nSo I pressed a little deeper.\n\n\"Oh, fuck me. Push that big, fat dick into my body! I've needed this... I've dreamed of this. Fuck me. Fuck me so that I can feel it in my toes!\"\n\nI could do that, too.\n\n\"Kiss me, Cassandra!\"\n\nThe two gorgeous women made love with their mouths just inches from my nose.\n\n\"Pinch my nipples!\"\n\nCassandra did so, and I felt the reflexive jerks of Taylor's inner muscles against my pumping shaft.\n\n\"Oh, gawd... This is gonna be a big one...\" Taylor groaned.\n\n\"Harder, Jonathan,\" Cassandra urged me, staring hungrily at Taylor.\n\nI put my force into my thrusts.\n\n\"Really pound her!\" Cassandra ordered more strongly.\n\nI moved my hands down to my wife's hips, using them for leverage to really pound my wife.\n\n\"She's almost there...\" Cassandra reached up, brushing Taylor's bangs back up her forehead while the brunette stared at her with a gaping mouth, moaning non-stop.\n\n\"Cuh... cumming...\" Taylor croaked, her eyes tensing.\n\n\"Ungh, ungh!\" I grunted from my exertion.\n\n\"OHH, OHH!\"\n\n\"UNGH!\"\n\n*\"OHHH!!!\"*\n\n\"UNGH!\" I groaned, at the edge of my own eruption, spurred on by the rapid clenching and unclenching of her cunt muscles.\n\n*\"OHHH!!!\"* Taylor thrashed beneath me, spastically clutching at my arms and letting go as her head jerked left and right. To me it looked like she was completely lost to her orgasm, but then just as I was about to blow, her eyes snapped open. \"Cassandra! Get in Cassandra!\"\n\n\"Wha-?\" My eyes flew open in surprise at her words and I remained right where I was, but Taylor was already pushing me off her.\n\nImmediately, Cassandra took over, grabbing my hips as she flopped onto her back. With her strong arms, she guided me over her body while Taylor reached down and notched my cock. And a second later I was balls deep inside the busty blonde bombshell and rutting with the uncontrollable thrusts of a man at his last limits.\n\n\"Cum in her!\" Taylor ordered. \"Cum in her!\"\n\n\"UNGH!\" I groaned, unable to think of anything but my explosion.\n\n\"Jonathan!\" Cassandra howled, holding me tightly.\n\n\"UNGH!\"\n\n*\"JONATHAN!\"*\n\n*\"UNNGHH!!!\"*\n\nAnd then we were there. I don't know how Cassandra was so primed to blow. Maybe she'd been fingering herself while watching me pound Taylor. Maybe all she needed was the visual and mental stimulation. But when the first jet of my spunk splattered against her innards, Cassandra's back launched off the bed so violently that we were both bucked into the air. Her legs were scissored around my waist, keeping my cock inside her. But I definitely felt the sudden force pushing me up, as if a bomb had exploded beneath me. And all the while my fire hose of an overstimulated prick kept spraying out the torrential blast of hot semen straight into the back of my devoted love's womb.\n\n\"Cum in meeee!\" Cassandra, every muscle in her body shaking spasmodically as her arms lost their grip on my neck and started flailing about. Taylor was laughing, just trying to keep her friend from smacking her in the face while she shuddered. As for me, I was groaning my own roaring \"Ungh!\" while feeling the orgasmic spasms deep within Cassandra's pussy as well.\n\n\"Jonathan!\" Cassandra howled, her climax building and growing, her body jerking as if in response to each splatter of cum impacting her inner walls. Or maybe it was my body jerking hers, as I felt my hips retracting with each explosive firing of my hot, creamy spunk. Either way, I couldn't remember ever having such a powerful mutual orgasm.\n\nAnd then we were done. Cassandra was limp on the bed, comfortably holding up my weight since I'd collapsed like a limp noodle myself atop her. She cradled my head, happily stroking her hands through my hair. And beside us, Taylor smiled while kissing Cassandra's forehead and stroking my spine.\n\n\"Given that you're still blocked up from that RISUG injection, I know it's impossible for you to knock her up just yet,\" Taylor sighed. \"But that was good practice. And once we get both of you off your birth control, we'll just have to keep trying.\"\n\nCassandra giggled, nuzzling her nose against my shoulder and tightening her legs to hold my cock... and spunk... inside her for a little longer.\n\nI exhaled and sighed happily as well. I was in heaven. Everything around me just felt... right.\n\nAfter all, it was just me, Taylor, and Cassandra. Hadn't I told myself long ago that they were all I needed?\n\n****\n\n*[thunk]*\n\n\"Daaa-daaa...\"\n\nGrimacing, I cracked my eyelids open to find that it was morning. Light poured into the room, although a singular object directly in front of me blocked most of it from my vision.\n\n\"Daaa-daaa...\"\n\nI blinked and realized that there was a human head perched atop my forehead. It was a miniature human head, belonging to a little girl not quite 2 years old. Her dark brown hair fell to her shoulders, although her long bangs were pulled straight back and gathered together in a topknot ponytail that boosted her height by about 3 inches. Her big blue eyes... her mother's eyes... stared right into mine. And she giggled and sat up when she realized I was awake.\n\nBlinking, I mumbled, \"Uh, hi Joey.\"\n\nShe grinned and didn't respond. Instead, she turned and immediately crawled off my chest, awkwardly losing her balance when her left hand fell down to the mattress, and her knee accidentally banged into my crotch.\n\nI grimaced and sat up. Joey turned around, confused by my pained grunt. But then Ashlyn, standing at the foot of the bed, opened her arms and said, \"Come to Mommy!\" And Joey immediately turned and continued on her way, toddling up onto her feet and then walking the last bit across the bed and into her mother's waiting hug.\n\nBeside me, Taylor groaned and stirred, awoken by Joey's giggles. She smiled at Ashlyn and sat up, oblivious to her nudity as her big tits came into view above the covers. \"Mmm... morning.\"\n\n\"You guys slept _forever_,\" Ashlyn commented, then looked to my right side where Cassandra was still out cold. \"Have a good reconciliation?\"\n\nTaylor smiled beatifically and nodded.\n\n\"Good.\" Ashlyn nodded and then ran her fingers through her copper red hair, jutting out her hip to better hold Joey up. \"Dorothy's got breakfast ready. And then it's my turn.\"\n\n****\n\nWith a full stomach, and a long night's rest behind me, I was feeling pretty good when Ashlyn took me by the hand and led me up to her bedroom. At the stairs, I let go of her and told her I wanted to watch her walk up. She gave me a teasing smile and put an extra sway in her hips as she ascended each step.\n\nAshlyn Scott had a *great* ass. I had some very fond memories of her and Taylor lying naked and facedown on my bed, giggling while I fingered them from behind and took little love bites out of their perky buttcheeks. Ashlyn wasn't naked now, but she was wearing a rather loose pair of cotton shorts that was also very, very short. And as she moved higher and higher, I got a great view of her freakishly long legs leading up to those perky buttcheeks that were being revealed.\n\nEven dressed so casually, she was a goddess. Just a few months past her 27th birthday, Ashlyn had the height and curves and jaw-dropping facial beauty that still had her as one of the most in-demand supermodels in the world despite being a mother. I looked up at her, imagining what it would be like to run my hands down those flanks, grip her tight, and grunt with powerful force as I plowed my cock deep into her acquiescent body. It was a fantasy I was sure a million men worldwide had, only I had the memory of making that fantasy a reality.\n\nWhen she got near the top, I took off at a full sprint to catch up to her. She heard me and sped up herself. And with both of us laughing, I chased her all the way up the stairs, down the hall, and over to her bedroom door.\n\n\"Gotcha!\" I howled triumphantly when I caught her right in front of the open door. She squealed as I wrapped my arms around hers, trapping them against her sides as I lifted her into the air. And then a few seconds later, I dropped us both crashing down onto her bed.\n\nMy blood was pumping from the brief chase, and I was sure hers was too. She was breathing heavily, and as we stared into each other's eyes, the old fiery lust simply took hold. I grabbed her jaw, she tilted her head, and then our mouths met in a ferocious kiss of long pent-up passion. We kissed forcefully, hard enough to make our lips bruise. And all of my senses were filled with her.\n\nAshlyn always had a way of intoxicating me without a drop of alcohol. The smell of her, the taste of her, and the sounds of her aroused breathing only added to the exquisite feel of her beneath me, and I could feel the animal lust inside me rising to a boil.\n\n\"I got you,\" I growled during a break to breathe.\n\n\"Never let me go,\" she whimpered and returned to kissing me.\n\nBut a second later, she abruptly tore her mouth away from mine and rolled over.\n\n\"Wha-?\" I gasped in confusion, finding myself on all fours on the mattress without a hot redhead beneath me.\n\nAshlyn was panting as she sat up straight, her left leg dangling off the bed. She brushed her long locks back behind her head and tucked behind her left ear. Grimacing, she pinched her eyes shut and exhaled heavily. And gritting her teeth, she sighed, \"Oh, it's *so* hard to do this!\"",
        "\"Do what?\"\n\nAshlyn sighed and shook her head. She took another deep breath to calm herself, giving me enough time to push myself up into a sitting position as well. And then after exhaling and leaning back, she said, \"Joey and I are moving back out.\"\n\nI blinked in surprise. \"Huh?\"\n\nAshlyn sighed and got off the bed, pacing around the room while scratching her head. Not looking at me, she shook her head and groaned, \"Johnny, I love you.\"\n\nIt wasn't exactly the most reassuring of endearments.\n\nStill pacing, she shook her head and groaned, \"You really, really know how to turn me on. Gawd... the sex we've had has been so... so...\"\n\n\"Incredible?\" I volunteered.\n\n\"_Otherworldly_.\" She sighed and looked over at me wistfully. \"You remember that time you wouldn't come home from the office? I kept calling you, telling you all the nasty things I was going to do to you if you came home, until Cassandra said you whipped out your dick in your office and started jerking off?\"\n\nI chuckled. \"I remember.\"\n\n\"Gawd... I think we broke every piece of furniture in my room that night.\"\n\n\"We did.\"\n\n\"And there were more nights like that.\"\n\nI nodded. \"I smell a 'but' coming.\"\n\nShe sighed. \"Do you even realize that just now was our first real kiss since I moved out six months ago?\"\n\nI blinked. Actually, I'd been so caught up in the moment that I *hadn't* remembered. But now that I thought about it, she was right.\n\n\"Things can't just go right back to the way they were. Too much has happened since then.\"\n\nI exhaled, my shoulders drooping. My dick, which had gotten hard during our impromptu makeout session, started to deflate as it realized it wasn't getting any action anytime soon. And I nodded my understanding. \"So let's talk about it.\"\n\nAshlyn shook her head. \"My decision is really made. I'm moving back to the 5th Avenue Penthouse, unless you're going to try and block me from doing so. Even if you did, I'd just go somewhere else.\"\n\n\"Ashlyn!\" I protested. \"You know I'd never put you and Joey on the street. Ever.\"\n\nShe sighed, and gave me a weak smile. \"Okay... I know. I just didn't want to presume.\"\n\nI just raised my eyebrows at her. I took a breath of my own, now that I was getting over my initial surprise. And I asked, \"But why? You moved out before because it was a poisonous atmosphere here. Taylor was off the deep end and all that. That's not the case anymore.\"\n\n\"I know. We girls spent a lot of time talking last night.\"\n\nI arched an eyebrow. I remembered Taylor sending me away to huddle up with Cassandra and Ashlyn. And scowling, I asked, \"The three of you planning my future for me?\"\n\n\"It wasn't like that.\"\n\n\"But you did discuss this with them.\"\n\n\"Of course. They're my best friends.\"\n\nI nodded. \"Your best friends will be living here.\"\n\nAshlyn sighed, pinching her lips. The sparkle in her blue eyes had gone dull, and she looked so infinitely sad that I immediately got up to go hug her.\n\nBut Ashlyn shook her head and blinked away a forming tear, holding a hand up to keep me at arm's length. \"No, Johnny.\"\n\n\"Ash... what's wrong?\"\n\nShe exhaled again. \"My best friends *will* be living here. They belong here. I don't.\"\n\n\"Why the hell not?\"\n\n\"Because...\" Ashlyn winced, obviously hurting deep inside. \"Because they're your wives... both of them now. And... and I can't be.\"\n\n\"Why not?\"\n\nThe redhead's shoulders sank. She bit her lower lip and shook her head slowly. \"Johnny... look at me. Tell me you love me.\"\n\n\"I love you.\"\n\n\"Tell me you love me like you love them.\"\n\nI winced. \"It's different. I don't even love Taylor and Cassandra in the same way.\"\n\n\"Tell me you love me *as much* as them.\"\n\nI raised my eyebrows, opening my mouth... but nothing came out. I couldn't. It wasn't the truth. While Ashlyn and I had indeed formed a very close bond over the last couple of years, especially as Joey's parents, it wasn't the same strength of love as I'd had for Taylor and Cassandra. It wasn't that Ashlyn was any less deserving; if anything, as the mother of my daughter she *deserved* more. But the emotional bond just wasn't there. We had always been madly in lust. She'd just pointed out how crazy some of our sexual encounters had been. But love? Taylor had always been Number 1. Cassandra hadn't necessarily been Number 2, nor a 1A, really; it was more that Cassandra wasn't part of the rankings, period. The bottom line is that everyone knew Ashlyn came after those two.\n\nIt wasn't that I'd treated her any more poorly from the others. I just treated them all differently, period. Taylor was my wife. Cassandra was my assistant. And Ashlyn was my girlfriend. Even at the peak of our relationship, even though we'd talked about having more kids and becoming a wife to me, we hadn't *quite* gotten there.\n\nAnd when I'd lost Taylor, when she'd left me to go to rehab, instead of going to be with Ashlyn, I'd jetted off to Europe, leaving her behind. That was my opportunity to prove how much I wanted to be with her, but I'd chosen to leave.\n\nTHAT was the problem. She wanted ME to want HER. And despite all the chances I'd had, I'd never shown that enough. If I wanted her to stay, I'd have to step up and make sure she knew it.\n\n\"I don't want you to leave. I want you here,\" I stated emphatically.\n\n\"Of course you do.\"\n\n\"I WANT you, Ashlyn.\" I was standing right in front of her, keeping myself at arm's length up until this point. But now I closed the gap, reached my hand out, and grabbed her ass. \"This is MY ass.\"\n\nShe stared at me, on the verge of tears. For a second, I felt like I'd gotten through to her, as a smile tugged at the corners of her lips. But then a second later, she shook her head in the negative. And grimacing, she reached back and pulled my hand away. \"Not anymore.\"\n\n\"Ash...\" I pleaded.\n\nShe sighed and gave me one more chance. \"Tell me you'll love me as much as them.\"\n\nI opened my mouth, ready to promise anything... but again I couldn't do it. I wanted her. Selfishly, I really WANTED her. She was gorgeous, she inspired me, and I seriously enjoyed her presence in my home. Even removing Joey from the equation, we'd spent a lot of good time together, enough that I missed her presence when she was traveling for work and I looked forward to her quick and safe return. I cared about her wellbeing, and I wanted what was best for her, even if it meant sacrificing myself. I loved her.\n\nBut I couldn't love her the way I did Taylor and Cassandra. I couldn't force that emotion. We just didn't have it... not in that way.\n\nMy jaw quivering, I groaned, \"I thought we were going to raise a family together.\"\n\nNow Ashlyn did start crying, and she wrapped her skinny arms around herself. Looking like frail twig being buffetted by a hurricane, she looked so pitiful that I immediately stepped up to her, and she let me hug her this time. And I rocked her gently, trying my best to reassure her with my strength as I kissed her neck.\n\nAshlyn let me rock her, but pulled her neck away and sniffled. \"You don't need me for that anymore.\"\n\n\"What are you talking about?\"\n\n\"I'm talking about Cassandra. She's finally ready to take that place in your life. She'll make a wonderful mother for your children.\"\n\n\"Ash...\"\n\n\"We have Joey. She was an accident, there's no getting around that; but I'm happy we have her.\"\n\n\"I don't want to lose her, either.\"\n\n\"You won't be losing her. Manhattan isn't far away.\" She took a deep breath and started to calm down. \"It's just... I don't want to be one of those couples that only stays together for their children.\"\n\n\"It wouldn't be just for her. I still want you. I don't want you dating... what's his name... Fabrizio?\"\n\nAshlyn barked a short laugh and nodded, the first smile in a long while spreading across her face. \"Yes, Fabrizio.\"\n\n\"Fucker better not lay a hand on you, or I swear I'll find some contract assassin to-\"\n\n\"Johnny, Johnny,\" she cut me off. \"This isn't about him. This is about you and me. And the fact is... as great as we are together... we aren't meant to be together forever.\"\n\nI winced, feeling horrible. All Ashlyn had wanted from me was love, love like I gave to Taylor and Cassandra, and I couldn't give it to her. My face was ashen, and I whimpered apologetically.\n\n\"Now, now... Don't beat yourself up.\"\n\n\"I'm sorry.\"\n\n\"No, I mean it. Don't.\" She took a deep breath and stepped away from me, still hugging herself. She got a few feet away, looked out the window and across the ocean. And then after taking a deep breath, she turned and looked back to me. \"The fact is... I don't have that kind of 'forever' love for you either.\"\n\nI blinked. \"You don't?\"\n\nShe shook her head. \"I wanted to. For a while, I thought it was possible, like when we were in Tahiti talking about raising that family together. I love you. You're a great guy. And you're rich and a great provider and I thought that everything... fit. We already had Joey and more kids would just build upon what we'd started and...\"\n\nShe trailed off, looking out the window again. Then she chuckled, shaking her head. \"And of course, the sex was-\"\n\n\"Otherworldly,\" I finished.\n\n\"Gawd... you got me so turned on just with that little chase up the stairs.\"\n\nI grinned goofily.\n\n\"But that's not enough. You're Taylor's. You're Cassandra's. It's an unusual relationship, but it works. And the three of you are perfect together. I'm just the odd girl out.\"\n\n\"Ash...\"\n\n\"No, no. I told you not to beat yourself up over this. We can't *force* love. It just is what it is.\"\n\n\"So where does that leave us?\"\n\nShe sighed. \"Broken up, I guess. If we hadn't broken up before.\"\n\nI blinked a few times. I still didn't like the idea of losing her, but the rational part of me realized that Ashlyn was worthy of better than what I could give her. \"You deserve to find the right man for you.\"\n\nShe nodded. \"Maybe. Maybe I'll go through life on my own. I've said it before, I don't *need* anyone to take care of me.\"\n\n\"*I* will. For as long as you need it, that Penthouse is yours... or anywhere else you want to go.\"\n\n\"Thanks.\" Ashlyn stepped up and pecked my cheek.\n\n\"And Evelyn, too. Or any other staff you need. At the very least, I owe that to Joey.\"\n\nAshlyn nodded. \"I'm not taking Joey away from you. You're her father. I want you in her life.\"\n\n\"And I will be.\"\n\nWe both nodded, and then we fell into silence. Both of us were lost in our thoughts for a while, thinking of what else needed to be said.\n\nAnd then something popped into my head, and smirking I said, \"About the Fabrizio thing... I wouldn't *actually* hire some contract assassin to-\"\n\nAshlyn cracked up, her laugh relieving a lot of tension from the room. \"I know... I know.\"\n\n\"So you WILL give him a call?\"\n\nShe shrugged. \"I'm Ashlyn Scott. _*I*_ don't call men; _they_ call me.\"\n\nI grinned at that. And then sighing, I asked, \"So when are you leaving?\"\n\n\"This afternoon, probably. I told Charlotte to make plans last night.\"\n\nI nodded, and then it really sunk in that I was losing Ashlyn. I'd wanted her from the moment I saw her, years ago at the Vanderbilt party. I'd gotten her... but now I was losing her. And glumly, I felt my whole being crumbling as that sobering thought sunk in.\n\n\"Hey, hey...\" Ashlyn stepped up to me, touching my arm. \"This isn't goodbye. It's just... until next time.\" And she kissed me on the cheek.\n\nTechnically, she was right. But it sure felt like goodbye.\n\n****\n\nAt first, I just wanted to stay behind in Ashlyn's room and pout. But as she got up to leave, I realized that I'd done more than enough brooding in the past year to last me the rest of my life.\n\nYes, I was upset that Ashlyn and Joey were moving out, but I understood her decision. I hadn't been a very good boyfriend to her for months now. And if I was going to be truly honest with myself, I hadn't been a very good father, either. Both of them deserved better, and while I would do my best to do right by both of them, I also loved them enough to let them go. It wasn't like I would be unable to visit my daughter with some frequency. And the future was always fluid. Maybe they'd come back when I had a few half-siblings for Joey to play with.\n\nI got up with Ashlyn, and we wrapped our arms around each other's waists while heading out the door. We kept that embrace all the way back downstairs, and after heading to the family room, found that both Taylor and Cassandra were there with Joey and Evelyn.\n\nJoey was a little scared of Taylor's face, and I could see that my wife was having some difficulty with it. But when I tried to comfort her, she wouldn't have it.\n\n\"I'm fine,\" she insisted. \"She's getting used to me already. You still remember Auntie Taylor, don't you?\"\n\nJoey looked up at us, and nodded that she did. Or maybe she was just miming Taylor's up and down head motions. That's a 2-year-old for you.\n\nAnd that reminded me. \"Hey, Joey's birthday is coming up soon,\" I started. \"Have you already made plans for her party?\"\n\nAshlyn nodded. \"Of course. But it's going to be at my place, not here. Joey's got a lot of friends in the building.\"\n\n\"Which should remind you that *your* birthday is coming up soon, too.\" Cassandra nudged me in the ribs.\n\nI winced at the momentary pain. Indeed, my birthday was exactly a week after Joey's. I'd be 33... an old man. I sighed and shook my head. \"I'd honestly forgotten. What am I going to do if you stop being my assistant? I'll be lost!\"\n\nCassandra grinned, wrapping her arms around me. \"Relax. No matter what we decide my official title is, I'll always be looking out for you.\"\n\nI smiled and wrapped my arm around her back. I took a deep breath and looked around the room, watching Joey building a tower out of multicolored pre-Legos, with Taylor, Cassandra, and Ashlyn around me. And I thought about what to do with myself now.\n\nI was retired. No more JKE. I had more than enough money as it was, and after everything I'd been through, I just couldn't imagine putting myself through the stress again. The company would run just fine without me, and probably without Cassandra, too, unless she decided she wanted to remain involved. We'd have to work that out pretty soon. Taylor wasn't going back to work, and she wasn't going back into rehab, either. So I reached my arm out to my wife while still holding onto Cassandra and asked, \"So what do we do now?\"\n\nTaylor looked at me, then pecked me on the lips. And after giving me a sly smile, she pointed at herself and Cassandra. \"_We_ are going to sort out the details of our lives. I'm going to have to find something to do with myself now that I'm not modeling anymore, and I'm certain I would drive the staff batty if I tried to take over. And Cassandra needs to work out her own assistant roles, including those at the company.\"\n\n\"My thoughts exactly,\" I nodded. My wife had read my mind. \"So what do you say the three of us head-\"\n\n\"Nuh-uh,\" Taylor cut me off.\n\n\"Not this time, Jonathan,\" Cassandra shook her head.\n\nI just arched an eyebrow in confusion.\n\n\"You...\" Taylor grinned and started pulling me up to my feet. \"You need to go spend time with your girlfriend.\"\n\n\"Excuse me?\"\n\nShe smirked at me. \"Vivienne? Forget her already?\"\n\nI frowned. \"No, of course not.\" I hadn't *forgotten* her. But as I'd settled into my old routines as Jonathan Kwong, routines that hadn't included Vivienne before, I did realize she'd gotten a bit lost in the shuffle.\n\n\"We're gonna get all serious for a bit,\" Cassandra intoned behind me, reaching up to massage my shoulders. \"You've been under a lot of pressure and stress these past few days, and you need to relax.\"\n\n\"I've *been* relaxing. Getting things worked out for all of us has been great!\"\n\n\"Well, you've got to work things out with her as well,\" Cassandra advised. \"We mean it. Go on.\"\n\nI turned and arched an eyebrow at my assistant (ex-assistant?) She just smiled at me, and as I looked around, Taylor and even Ashlyn were nodding.\n\nReally... my wife, about-to-become-a-wife, and ex-girlfriend were all telling me to go hang out with a nubile, 23-year-old French girl who was madly in love with me and wanted to fuck my brains out every time she saw me. \"Why does this feel like a trap?\"\n\nTaylor cracked up. \"A trap? Johnny, if this is about getting things back to the way they were, then remember the way they were. We're not jealous. You've always had girlfriends. They've always been useful to us. Whenever you needed something light, something enjoyable, you had others around. Kaitlyn, Lindsay, Rebecca, Mia, Kate, even Ashlyn here initially.\"\n\n\"And this isn't some short-term fling with one of Taylor's friends,\" Cassandra added. \"Vivienne and you already have a deep relationship, and maintaining that is important for your emotional health. We know she's dearly attached to you, and you haven't spent any time with her since... I don't even know when.\"\n\n\"The flight to Paris,\" Taylor explained.\n\nCassandra shrugged. \"She deserves more than that. So go.\"\n\nSomething still felt off about the whole thing. To me, this recently after everything that had gone down in Marseille, plus the ache I was feeling at Ashlyn's imminent departure, told me that this was a time to be spending with Taylor and Cassandra.\n\nBut on the surface, what they were saying was accurate. And Vivienne DID deserve better from me than what I'd been giving her over the past couple of days. Since we'd met, my French girlfriend had only been separated from me when I flew to Malibu for two nights. Now that we were back here, in this house, with all of my past life around me once again, she HAD to be freaking out a little. And if I wanted Vivienne to remain a part of my life, I knew I would have to be doing some damage control.\n\nThe question was: Now that I was Jonathan Kwong again, did I still WANT Vivienne in my life?\n\n****\n\nI found myself looking around as I walked from the family room across to the other side of the house, and on to the guest wing. Sometimes I forgot just how *vast* this place really was, with the high ceilings, big windows, and open architecture. Every additional square foot cost money, but money I had. And no expense had been spared in making the mansion one of the most technologically advanced and luxurious places in the world.\n\nAs I passed through the Grand Foyer, I remembered years ago when Mia Cheng had been doing the interior decoration. She'd sat me on the staircase, pressing her cheek against mine as she directed my view across a big wall she planned to put a series of paintings on.\n\nThinking of Mia brought to mind the first time we'd had sex, right on top of the billiards table that hadn't even been unwrapped from its plastic just yet. And I remembered how Cassandra had handpicked the young Chinese girl for me, not only because of her design aesthetic, but also because she figured to be a firecracker of a sex partner.\n\nThe private gym reminded me of Rebecca, recently married. I thought of the busty brunette's \"extra-special\" rewards, which usually meant me bending her over some piece of exercise equipment and blasting her glutes with my pelvic bone while my dick sawed in and out of her clenching asshole. Taylor had been the one to find her, and also to start inviting her to our little parties with Kaitlyn and Charlotte at the old 5th Avenue Penthouse.\n\nAnd the guest rooms themselves reminded me of exactly who had occupied them. There were, of course, the various fashion models that would stay with us for a few nights here and there. They came to hang out with Taylor and Ashlyn, but they also came to join in our Playroom orgies and make themselves available in my personal feeding tank. Kate and Ashlyn had both become official \"girlfriends\", sharing my bed and pieces of my heart. And there had even been a three-month period two years ago, when Taylor and Ashlyn were hitting their third trimesters, that Stephanie Selsett (Ashlyn's tall brunette model friend) became my girlfriend for a little while.",
        "Extra-marital relationships were just part of Jonathan Kwong's life. Sure, I enjoyed some strange every once in a while, and fulfilled those urges at our Playroom parties. But for the most part, I liked my sex to come with some emotional connections. I liked to see the same girls again and again. And even though many of those relationships had run their course, I still had a lot of fond memories.\n\nSo as I passed through the guest wing and on to the far end, where the Common Room was, I let my guilt slide away. Taylor and Cassandra truly didn't mind my relationship with Vivienne. And I still had a very soft spot in my heart for the youthful, energetic French babe who had literally left her entire life behind to follow me.\n\nSo I had the answer the question I'd asked myself only minutes before. Yes, I still wanted Vivienne in my life. She was sweet. She adored me. And over the past several weeks, she had given me so much happiness. \n\nI hadn't been able to give her very much attention these past couple of days, but I knew she would understand given the kidnapping and all. And I would make it up to her, starting right now.\n\n****\n\n\"Hello.\"\n\n\"Tohm!\" Vivienne immediately jumped up from her seat in the Common Room. She ran barefoot across the rug and onto the hardwood, her feet thumping rapidly on the floor. And just like in Marseille, she launched herself at me, forcing me to catch her as she wrapped her legs around my waist and grabbed my head to begin raining kisses down all over my face.\n\n\"Whoa! Whoa! Whoa!\" I laughed, constantly opening my eyes and then shutting them against the woodpecker banging against my nose and forehead. At the same time, this woodpecker had a great ass that was only concealed by thin cotton shorts that had \"juteux\" written across the butt cheeks (\"juicy\" in French), and I didn't really mind holding her up as long as I got to keep fondling those half-globes. The cropped T-shirt she wore (apparently without a bra beneath), also had some pretty hard nipples poking through and into my chest.\n\nBut eventually, Vivienne set her feet down, standing with her torso against me and positively buzzing with excitement. \"Oh, Tohm! I've missed you!\"\n\nSomeone cleared their throat behind her. Kaitlyn and Jeff were seated on the next couch, with Evania next to the spot Vivienne had just vacated. I wasn't surprised to find the three of them with her, as they were her closest friends on this side of the Atlantic.\n\nBoth Vivienne and I looked over, and Kaitlyn gave Vivienne a significant look. My French girlfriend blushed and looked down before enunciating with some difficulty, \"John. I know your name is 'John'. I'm sorry.\"\n\n\"Don't be,\" I chuckled. \"I know my name is John Kwong, and I know that *you* know what it really is. But after all this time, I've kinda gotten to like you calling me 'Tohm'. So really, I don't mind.\"\n\nVivienne's eyes positively glowed at my words, and she smiled, rubbing her thumb across my lower lip before sighing dreamily, \"Tohm...\"\n\nHer smile was infectious, and I smiled right back before kissing her quickly. \"Mon cheri...\" I hummed right back.\n\nShe giggled cutely.\n\nFeeling much better about all this, I turned and looked at the others. \"My apologies if I'm interrupting something.\"\n\nKaitlyn shook her head. \"Not at all. We were just finishing up the conversation.\"\n\nJeff's stomach grumbled. He blushed and patted his tummy. \"Besides, I think we all missed breakfast. You think Dorothy will mind?\"\n\nI shook my head. \"Of course not. She always makes too much, and she said she'd keep things ready for whenever you guys showed up.\" Then I turned to my girlfriend. \"Hmm, guess we should get some food in you first.\"\n\n\"Did you already eat?\" she asked.\n\nI nodded.\n\nVivienne shook her head. \"Then I am not hungry. Please, I just want to stay with you.\"\n\nI bit my lip, debating whether or not I should just go hang out with this group for breakfast again. But Vivienne was holding my hand pretty tightly, and she had that pent-up horny look in her eyes that told me her greatest desire at this moment was to get me somewhere she could ravage me. So I shrugged and said, \"Fine with me.\"\n\nVivienne beamed and wrapped herself around my left arm.\n\nI looked at Jeff and Kaitlyn, who were getting up. \"You guys go on ahead.\"\n\nBoth nodded.\n\nThen I turned to Evania. \"What about you? Would you like to come with us? You know, even though this is your second time here, I don't think I ever gave you girls the grand tour of the house.\"\n\nEvania smiled and glanced at Vivienne for a moment before shaking her head. \"Actually, I have already had the tour. I wanted to be prepared for you; so on the first night when we came from Greece, I asked one of the maids to show me around. Plus, I spoke with Cassandra last night. She said she will need to teach me a few things about taking over some of her responsibilities.\"\n\nMy eyebrows rose in surprise, but I smiled happily at that news. It was confirmation that Cassandra was going to calm down a bit from her previously hyper-efficient control freak manner, and let other people handle some of those things. So I nodded approvingly.\n\nJust then, Evania's stomach rumbled. She looked down, rubbed her stomach, and blushed before adding, \"And I am hungry as well.\"\n\nI chuckled and waved her along. The three of them said their goodbyes and then walked off, leaving me alone with a horny 23-year-old bombshell.\n\n\"Are you sure you're not hungry?\" I asked in concern.\n\n\"Mmm... I suppose some protein would be good for me, no?\" Vivienne asked coquettishly, reaching for the waistband of my pants.\n\nI chuckled and moved her hand away. \"Later. I promise. Right now, I owe you a tour. And we really need to talk.\"\n\n\"We will talk,\" she agreed before moving in really close to me, putting her nose an inch from mine. Her hands were on my chest, and she breathed with a low panting husk that showed just how incredibly horny she really was. \"But not now. Please, mon amour. Don't make me wait any longer.\"\n\nI found that *I* was breathing hard as I looked into the fire in her eyes. The light brown of her irises had gone golden again. And then without really moving away from me, she reached down and yanked her cropped T-shirt up and over her head.\n\nI was right; Vivienne wasn't wearing a bra beneath. As her big tits spilled out and banged against my chest, I found myself helpless to resist as my determined young girlfriend propelled me backwards until I literally fell down onto the couch she was steering me towards.\n\nOnly then did Vivienne back away. Standing up straight, she tossed her head back, sending her long dirty-blonde locks flying. She jutted a hip out and posed for a second, letting me drink in her awesomely topless body. And then she promptly bent at the waist, dragging her gray \"juteux\" shorts and black thong panties to the floor.\n\nMy eyes traced up her body as she stood upright again. Bare feet with pink painted toenails, delicate ankles, smooth calves, and toned thighs led up to her bare-shaven pussy, already pink with lips parting open in preparation for sex. She had curvy hips, perfect for gripping in my hands, and a taut tummy with a hint of musculature and not a single ounce of fat. There were a couple of indentations of her ribs showing, nothing skeletal but enough to show that she was trim and in shape. Then there were those pendulous breasts, making her look so top-heavy, which led the way to a delicate collarbone and shoulders that matched her hips. And of course, Vivienne's perfectly seductive face, with pouty lips and a sizzlingly hot expression.\n\nWell, after the long time spent apart, I HAD promised myself I would make it up to her. We still had to talk, but it would be mean of me to make her wait any longer, right?\n\nSo I grinned, accepting what was about to happen. And I opened my arms to my beautiful, adoring girlfriend.\n\n****\n\n\"Mon Dieu... Sacr\u00e9... Oh, mi amour... Putain!...\" Vivienne's words devolved from there in to unintelligible French, although I thought I caught the word \"foutre\" in there somewhere.\n\nNot helping matters was that I couldn't try to read her lips or anything. For one thing, she was shaking her head around so much I wouldn't have been able to focus on her mouth anyways. For another, her dirty-blonde hair was flying into my face so much that I simply had to close my eyes and hang on for the ride.\n\nAnd what a ride it was.\n\nWe'd started with Vivienne kneeling on the rug and giving me a lovingly adoring blowjob. She put her heart and soul into her sucking, staring up at me rapturously and trying to will me to understand with her expression and actions just how much she was in love with me.\n\nAfter that, she climbed aboard, straddling me on the couch and kissing me passionately while my dick twitched deep inside her. I got to play with her juteux ass while she slowly gyrated on me, giving me a lapdance that was a little closer than your typical strip club. I certainly didn't mind her using my face as a resting spot for her big tits as she did her bump and grind thing. Her nipples were especially raw by the end from my aggressive suckling.\n\nShe came and then dismounted, kneeling on the cushions while urging me to fuck her from behind. I mentioned before how great her hips were as handholds, and I used them to really hammer her poor body until I was about to blow.\n\nBut just before I did, Vivienne reminded me that she still needed her protein breakfast, and I yanked out just in time for her to spin around and swallow my explosion. I filled her tummy with all my creamy spending, and she made playfully delighted eating noises as she sucked down every drop.\n\nI fell to the floor and my girlfriend climbed atop me in a sixty-nine position. I ate her out to two more climaxes while she worked me back to hardness. Once I was ready, without bothering to turn around, she scrambled forward and mounted me in a reverse cowgirl, holding onto the edge of the couch in front of her. And she proceeded to use my dick as a living dildo as she humped herself to another screaming orgasm.\n\nIt was my turn then, as I grabbed her from behind and pulled her onto her back. I quickly spun over her body missionary-style, slamming my cock home and pounding away at her until my knees were getting bad rug burn. The chafing was enough to make me slow down, but my sex-crazed girlfriend wasn't having any of it by then, so she grabbed me and rolled us over so that she was on top, pounding herself upon me so hard I was surprised that *she* wasn't getting rug burn.\n\nWhether she was or wasn't getting burned, she didn't show it. Vivienne was in another world, after so many orgasms I'd lost count. And she was a veritable fucking machine as she humped and groaned and thrashed above me.\n\nI was flat on my back, with my arms trapped above me since she was gripping my forearms. I probably could have fought her off, but why would I want to do that? She was on all fours, braying like a crazed donkey, fucking me with an energy I didn't know was possible. My ears were ringing from her high-pitched screams. My eyes were lacerated from her flying hair the few times I did try to crack them open. And I figured my cheeks would be bruised from the number of times her heavy tits had slammed into them.\n\nBut I didn't mind. My cock was encased in a warm, wet vise that clenched me so tightly I could have died at that moment and known that I'd died in the best way imaginable. And I was sooo close to cumming.\n\n\"Se sent si bien...\" she moaned before groaning, \"Tohm...\"\n\n\"Vivienne...\" I moaned right back.\n\n\"Oh, Tohm!\" she crowed a little louder.\n\n\"Vivienne!\" I cheered back.\n\nShe blubbered in French before correcting herself and crying, \"Cum, Tohm! Cum inside me! Please!\"\n\nI gritted my teeth, focusing on my cock. Her rapid-fire fucking felt so good that I was about to do what she wanted anyways. But at the sound of her voice, I found myself straining to do it faster.\n\nOf course, straining to go faster doesn't really work that way, and I found myself teetering on the edge of ejaculation, unable to go over.\n\n\"Cum, Tohm!\" she screamed, her voice hoarse. \"Cum! Cum in me!\"\n\n\"I'm gonna cum!\" I roared. \"Gonna cum!\"\n\n\"Cum! In me s'il vous plait! Please! Mon Dieu! Oh... Oh!... AHHHHHH!!!\"\n\nToo late, she beat me to it. Vivienne started shaking above me, spazzing out like she was having an epileptic seizure. Of course, this was doing *incredible* things to my cock imbedded in her pussy, and once her inner muscles went to work, not even \"over-trying\" was going to stop my explosion.\n\n\"CUMMING!\" I yelled in her ear as I felt the dam burst. In her flailing, she'd let go of my arms. I reached up and grabbed onto her ass, pinning her body hard against my pelvis. And as the first wave shot out of me, I automatically bucked my hips, sending the both of our bodies briefly into the air.\n\n\"AHHHHH!!!\" Vivienne screamed again, even louder this time, perhaps because she could feel my jets of spunk inside her.\n\n\"CUMMING!\" I repeated, firing two more shots away.\n\n\"AHHHHH!!!\" she yelled again, her body coming to a sudden rigid stop.\n\n\"ARRGH!\" I yelled one more time, blasting away my last bursts of jizz. And then I was finally able to set my head back and brush Vivienne's hair out of her eyes, just in time for her orgasm to pass as she suddenly went limp and collapsed down on top of me.\n\n\"Mon Dieu...\" she moaned, shaking lightly.\n\nI just chuckled, the both of us covered in sweat. And then I set my head back on the floor, letting my neck muscles relax. As I did so, I found myself looking backwards and upside-down out of the Common Room, staring right down the main hallway of the guest wing. And only then did I remember that we were in a very public place.\n\nBoth of us were hot, sweaty, and sticky. And both of us were fully naked. Given the potential for an awkwardly timed meeting, I half-expected Melissa the maid to step around the corner and try to run away in embarrassment. But there wasn't anyone around.\n\nStill, I chuckled and commented, \"Maybe we should have gone back into your bedroom.\"\n\n\"Mmm, I don't care Tohm,\" Vivienne moaned, turning her head so that she could kiss my cheek. \"I will fuck you anywhere, in front of anyone.\"\n\nI kissed her back and then held her face in my hands. \"In front of anyone?\"\n\n\"Of course.\"\n\nI arched an eyebrow and asked, \"If you are willing to fuck me in front of anyone, then why are you scared to just BE around me in front of everyone?\"\n\nShe furrowed her eyebrows in confusion. \"What do you mean?\"\n\nI sighed. \"Ever since we got here, you've been keeping yourself apart from everyone else. Even last night, when everyone was welcoming us home, you slipped away and hid in your bedroom, didn't you?\"\n\nVivienne blushed and looked away from me. I already knew it was true. That was why Evania had come to me for a sperm facial. But Vivienne didn't look at me, busying herself with extracting her sticky body off mine and pulling up so that my semi-limp noodle came out of her pussy, followed by a trail of creamy cum. She giggled and immediately bent down, tonguing up the spending like a cat. And at the touch of her wet appendage, I felt my dick begin to stir again.\n\nShe noticed and then licked my cock again, getting another twitch out of it before looking up at me and grinning. But after two orgasms, I was satisfied enough with sex. What I wasn't satisfied with yet was her interaction with the others, so I just gave her a negative look and started sitting up.\n\n\"You can't keep isolating yourself,\" I sighed. \"I *told* you, back in Athens, that I had Taylor and Cassandra and Ashlyn back here. You knew you would have to learn to play along with them.\"\n\n\"And I have, haven't I?\" she answered without much conviction. She fumbled for a moment before adding, \"I was with your wife for you, on the plane. And I have become friends with Kaitlyn.\"\n\n\"Now I'm asking you to get to _know_ Taylor and Cassandra, too.\"\n\n\"It is not easy for me,\" she complained. \"I like girls... You have seen me with Evie and Aveline and everyone else. But I do not know these other women.\"\n\n\"I'm not asking you to have sex with them, just get to know them. You're right, my other girlfriends knew Taylor beforehand. You come from a different country, and I know English isn't the easiest thing for you. But I just don't want you to hide out in your room and avoid even talking to them.\"\n\n\"I'm scared,\" she whimpered. \"I was so used to things just being you and me and Evie in our apartment. This place is so... *big*... And it is THEIR home; it belongs to Taylor and Cassandra.\"\n\n\"This is MY home,\" I insisted. \"And I want you in MY life. Okay?\"\n\n\"But they are so comfortable and used to being here. I am afraid I would just be in the way. And I don't know what to do.\"\n\nI sighed. \"That's my fault. I'm sorry. We've only been here a couple of days, and I was very busy doing other things. I never got the chance to take you around and really help you meet everyone. It hasn't been fair to you.\"\n\nVivienne bit her lip and looked down, nodding.\n\n\"But that's going to change. I want you here with me. And I'm going to do whatever it takes to make you comfortable here.\"\n\nShe looked up at me, giving me an uncertain smile. But as she stared into my eyes, I saw her confidence building. And at last she took my hands and nodded. \"For you, Tohm, I will do anything.\"\n\n****\n\nIn the old days, whenever I wanted to get away from it all, I literally got away. My 30th birthday party was in Vegas. I'd taken Taylor to Paris more times than I could count. And then of course, there were all the impromptu beach vacations to the Bahamas, Tahiti, and Fiji.\n\nThis time? I got away by staying home.\n\nI cracked a joke about wanting to take a staycation because of the economy, but Cassandra just rolled her eyes knowing full well how many zeroes I had in my bank account. Everyone understood that I'd had enough of traveling for a little while, and more importantly, I didn't want to go anyplace a paparazzi camera might find me.\n\nAnd so it was that I found myself reclining on a plush chaise in a darkly-lit room, wearing absolutely nothing but a thick bathrobe, and sipping a martini while staring out the only window.\n\nTechnically, I don't think it was called a \"window\", but it was the most appropriate way I could describe the twenty-foot aquarium-grade glass panel that separated the pool from this Underground Bar. Light from the pool came through, casting a cool blue hue throughout the room. And right on the other side was a sight that would stir up the arousal of a dead man.\n\nSix girls frolicked in the four-foot deep water, swimming around and tossing a beach ball back and forth at each other. Though I could hear their cheers echoing down the stairwell leading up to the deck level, I couldn't see the ball itself, since it was above water and therefore beyond my line of sight. Not that I would have been looking at said ball.\n\nYou see, all six of those girls were bare buck naked.\n\nTwelve breasts, ranging from Milena Kvitiva's small B's to Cassandra's huge knockers, bobbed and weaved as they moved, carried along by the water's natural buoyancy. Sometimes their upper bodies moved above the waterline and out of sight. But then they would plunge back in, accompanied by a flurry of bubbles, some of which stuck to their skin. And of course there were the pussies and asses of all of them that moved to and fro excitedly in their game play.\n\nFurther distracting me away from any possible beach ball watching were two simply comic book fantastic bodies pressed right up against the viewing window. They were intertwined, legs wrapped around each other and pussies with someone else's finger pushed inside. Even without being able to see their heads I knew who they were. And I felt my pulse racing as I watched Taylor and Vivienne grinding their tits together in a water-slowed dance of lust.",
        "Of course, my pulse might have been racing because of what Evania was doing to me. My valet knelt on the floor beside my chaise, with my robe open just enough for her to suck me and stroke my shaft. I fondled her right breast with my left hand as Vivienne did the same to Taylor, momentarily fantasizing that I was the one feeling up my wife.\n\nA moment later, Taylor and Vivienne separated. They let their knees bend to sink down a little further, the water supporting their bodies while keeping only their heads above. It looked like the two were talking at this point, instead of kissing. A moment later, I saw Kaitlyn's skinny body squirt up behind Taylor, her legs wrapping around my wife's thighs. And then Vivienne's body started vibrating as if she were laughing at something being said.\n\nI sighed and backed away from the orgasm that had been building inside me. I didn't mind. I wasn't in any hurry to cum, and I'd been hard for the last twenty minutes while watching the girls play around in the nude. Still, I didn't want Evania's jaw to get too sore, so I reached down and directed her to climb aboard. And after kneeling astride my hips, the Greek girl did just that, sitting down with my cock spearing up into her body as she faced away from me, staring out into the pool herself.\n\nMaile Lindqvist, the stacked half-Swedish, half-Chinese lingerie model, ducked down into the water to look into the room. The glass panel had been specially treated so that even though the Underground Bar was a darkened room, people in the pool would have an unobstructed view inside. Maile saw Evania riding me, my valet's robe parting to the sides to reveal her own nakedness. The exotic looking model grinned and flashed me a thumbs up, getting one back from me in return. And then she popped back above water, perhaps to let the other girls know that I was being taken care of.\n\nOf course, just because Evania was already at work fucking me didn't mean they couldn't have any fun. I watched Milena's slender form walk up to the group. Some more things were said, and then a moment later, the Czech high fashion model was inverted in the water, literally upside-down with her face in Vivienne's crotch. She quickly grabbed onto my girlfriend's ass, holding on tight while she moved her head in to take several long licks at Vivienne's bare-shaven slit. And though it couldn't have been more than two minutes, the skinny blonde seemed to stay down there, eating out my girlfriend, for a long, long time.\n\nCassandra then joined the other five, and the group of them milled about in conversation for a moment. Someone must have said something funny, because suddenly all six of them were shaking with laughter. Arms were moving and water bubbles were coming down from the surface. And then a moment later, the six of them were lining up side by side by side along the viewing panel.\n\nNow lined up, each of them turned around, presenting me with six glorious asses in varying shapes and sizes. They each dropped both their hands, reaching out to grab the buttcheek of the girls adjacent to them. And then together, they bent forward and began wiggling those asses, although not quite in unison.\n\nI laughed, enjoying their antics. At the same time, I imagined going up and down that line, plunging my cock into each and every one of them from behind, and my arousal level amped up once again. I held Evania around her waist and started guiding her up and down me more forcefully. She took my cue and started humping me harder, moaning in heat and reaching down to finger her own clit at the same time.\n\nThe six girls then turned around to face the window. This time, they each sunk low enough to press their entire torsos against the glass, their tits flattening and their pussies actually leaving imprints on the otherwise spotless surface. Of course, it was hard to maintain that position with the buoyancy of the water, but their point was made. And all of a sudden, I didn't feel like holding out on my orgasm any longer.\n\nI stared at each pair of tits, imagining I could suckle each and every nipple at the same time. I imagined holding each of their hips, pretending Evania's were theirs, as I plunged my cock in and out of them one-by-one.\n\nAnd I knew I could. All I had to do was go upstairs and tell the girls to line up, and every single one of them would do so. I could take any of them almost anytime I wanted.\n\nBut not right now. Right now I just wanted to hurry up and cum. So yanking my valet's body up and down my body so fast that all she could do was yelp, I fucked her with increasing force until I felt my nuts compress and begin erupting big gobs of cum up and into her body.\n\n\"Aiiiiyaaaah!\" Evania shrieked as she felt me hosing down her innards. She rubbed her clit for just a few seconds longer before shuddering and coming to a climax herself. And together we thrashed and bucked until our sexual energies had found momentary satisfaction.\n\nI was sure the girls outside in the pool had heard Evania's final shriek. They were milling about now, ducking one by one to check and see that yes, we'd stopped fucking. Vivienne actually scrambled up onto the deck. And a few seconds later, I heard her coming down the stairs.\n\n\"Do not move, Evie!\" she called excitedly.\n\nEvania wasn't about to move, hunched over and still astride my dick, panting to catch her breath. But once Vivienne arrived, she gingerly pushed herself up and off me. And my French girlfriend knelt down just in time to begin slurping my spending out of her dear friend's box.\n\nWhen she finished, Vivienne got back up and sealed her mouth over Evania's, sharing my cumload between them. My girlfriend even dropped down to take me in her mouth, sucking off what remnants she could to share. But eventually, there was nothing left, and Vivienne sat back with a satisfied grin.\n\n\"Making friends?\" I asked her.\n\nShe nodded. \"Oui! I am still a little nervous with Taylor and Cassandra. But Milen-... ah... 'M&M'... are very much fun!\"\n\nI grinned, thinking of how the pair had come to my bedroom last night to extend a very personal apology for hooking up with Sharpley that one night. \"Yes they are.\"\n\nVivienne grinned, and then pointed at my limp dick. \"Would you like me to stay down here with you?\"\n\nI sighed, thinking about it for a moment. But then I shook my head. \"You know I want you interacting more with the other girls.\"\n\nShe nodded. \"I know, I know. But even after only a few minutes away, I begin to miss you.\"\n\nI smirked. \"Fine then. For *you*, I suppose, I'll come jump in the pool with everyone.\"\n\nEvania and Vivienne both grinned. Both of them knew that all seven girls would immediately swarm me upon arrival, sandwiching me amongst a mass of titflesh while constantly grabbing at my hands so they could stick my fingers into their twats.\n\n\"Okay,\" Vivienne agreed, standing up and reaching for my hands. \"If you're doing it for *me*,\" she laughed, knowing full well the orgy that was to come.\n\nI grinned. Life was good. And I wish I could say that this was the end.\n\nBut my story isn't over just yet. "
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "billionaire",
        "mff",
        "threesome",
        "anal"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/tom-billionaire-ch-07"
}