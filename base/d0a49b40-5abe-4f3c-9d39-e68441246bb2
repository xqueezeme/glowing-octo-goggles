{
    "title": "Mira Ch. 09",
    "pages": [
        "Hi guys:\n\nSorry this took so long. I know everyone's been waiting. I'm currently working on the next chapter and I promise it won't be nearly so long in coming. I'm going to remind everyone that the stuff happening in this chapter involved a previous revision that never made it to Lit. I changed some chapters around so you might get some repetition from the posted ch. 8 in this. It will all be coherent in the published version, so bear with me on this. Remember everything you see on Lit is a rough draft and the little and big things that need work will be ironed out in the published version available at excessica. But as always I welcome comments and feedback! I use more of your suggestions than you realize!\n\nPS. Chapter 10 is finished and I'm uploading it at the same time. So check back tomorrow or so and you might see the next chapter up already\u2026 :p\n\n*****************************\n\nRillan woke to the distinct odor of rotting flesh. It wasn't quite strong enough that a human would catch it, but it was more than enough to turn his stomach. Scowling and holding his breath, he sat up on his bed. Did some animal fall down the shaft and die on my floor? \n\nHis eyes took longer than usual to adjust to the pitch black around him. Where am I?  Lifting his hands from the bug infested mattress he was sitting on, Rillan slowly took in his unfamiliar surroundings. I must be on assignment, he thought calmly. It wasn't the first time he had been wounded and lost some of his recent memory. It would all come back to him. That small reassurance wasn't must consolation to his conscience when he saw the crumpled form in the corner. Horror like nothing he'd ever felt before crept beneath his skin and crawled through his body as he stared at the form. \n\n\"Mira?\" The whisper sounded like a scream in his mind. In a flash, Rillan was next to the dead girl on the floor and lifting her to see her face. \"Arial,\" Rillan breathed in relief, as he dropped the cold desiccated corpse to the filthy floor.\n\nMemories flooded Rillan's mind, as he knew they would. Closing his eyes, Rillan slumped against the wall and let the torrent overcome him. He remembered assassinating his target, the boy in the woods, and killing Arial. \"You should have listened to me girl,\" he said to the air.\n\nIt was taking more effort than usual for him to turn the guilt off. This is what I am. \n\nRillan heard the shuffling footsteps coming before the heavy knock on the door echoed off the walls. It could have been the inn keeper looking for money or the girl. Rillan didn't stick around to find out. Before the door opened, he was out the window and vanishing into the darkness of an overcast moonless night. Whether it was the missing moon or his mood, the shadows seemed deeper than usual. \n\nWith the sounds, smells, and lights of Noviodunum far behind him, Rillan slowed his pace. He took his time finding a shelter for the day. The events surrounding this assignment weighed on him more than he was willing to consciously think about. He found himself finding ways to delay his journey home. Rillan's dreams and thoughts were plagued by vision of a lifeless form lying in his arms, staring up at him with Mira's eyes. \n\n* * * *\n\nDestructive crashing and the sound of splintering wood stopped Mira from opening the library door. Holding the lantern high in the air and staring off down the endless hallway, she called out weakly, \"Hello?\" \n\nFear balled in the pit of her stomach. Logically Mira knew that no one else was in the catacomb of tunnels that had come to be her home. Somehow with Rillan gone, her mind ran wild with every odd sound. At least she had known what the monster in the shadows was with Rillan. Now that he was on his assignment the unknown was somehow more frightening than he ever was. Not to mention there was the possibility of his return and what that might bring.\n\nI never realized how scary this place could be, she thought. An amused grin split her face, momentarily defeating her fears. I wouldn't have thought I'd come to be that comfortable here. Just then the scratching sounds returned and her grin faded. Maybe Rillan's back, she reassured herself, somehow knowing that he wasn't.\n\nMira tiptoed down the hall toward the noise. Just go see that it's nothing so that you'll be able to sleep tonight, she told herself. She wasn't positive where the sound had come from. Walking down the hall she shortly found herself at an unfamiliar t-section.  I guess I didn't realize how much of the cavern there was beyond the small area that I tend to stay in. I suppose there have to be quite a few things going on in this place that I really don't know much about. It's not as if Rillan and I ever talk about anything important.\n\nLetting her mind wander a bit, so that she would stop thinking so hard about what could have made the sound Mira peered down one dark hallway and then the other, trying to decide which way she should go. Suddenly another crash from nearby and off to her right made her jump out of her skin.\n\nDropping the lantern Mira nearly ran back the way she had come. Light spilled across the floor and down the hallway. \"Hello,\" she whispered into the black and was answered with another crash. Gathering all her courage Mira strode in mock determination toward the sound. \n\nWhen a gentle breeze lifted her hair, Mira stopped dead. The only way a breeze can get in here is through another shaft or maybe the cave entrance. That's back the other way, I think.  Suddenly more curious than frightened, Mira followed the breeze. As she reached the perimeter of the fading lantern light another crashing sound assaulted her senses, and she fell back a couple steps.\n\nShe could barely make out the shape of a door along the cave wall. As she stood frozen in place and watching for any sign of movement soft yellow light began to peek around the edges of the door. Shifting and faltering as if someone was moving it, the light slowly became brighter. Mira unconsciously stepped back into the protective shadows, mesmerized by the prospect that someone was breaking in to a vampire's lair. Who could possibly be that foolish?\n\nSlowly the door began to creak open and Mira stared wide eyed at the figure appearing, poking his head out into the hallway. All of Mira's fear and anxiety melted and was quickly replaced by pleased uncertainty. \"Liam?\"\n\nThe blonde man jumped as if he had been ambushed by a ghost and he drew a short blade from his belt, jerked the lantern up over his head, throwing light across the hall and brandished the weapon.\n\n\"Liam,\" Mira insisted accusingly. \"What are you doing here?\" Without another thought she rushed across the hall and threw her arms around the man's neck, hugging him warmly. \"How did you get in?\"\n\nBreathing a long sigh of obvious relief Liam hugged her back, burying his head in her hair briefly, before pushing her away. \"There really isn't time. I should have gotten here sooner. But it took too much work to arrange things, and then it was a lot harder to find a connecting tunnel than I thought I would be.\" Liam seemed to be talking more to himself than Mira and glancing nervously one way and then the other around the tunnels. \"Come on, he could be back any time now.\" Liam grabbed Mira's hand and started to pull her into the room he had just emerged from. \n\nShock and confusion allowed Liam to guide Mira into the room and up to the debris he had created, before she gripped his hand more tightly and stopped him. \"Liam, what's going on?\"\n\nMira gazed around the room in astonishment. It looked as though it was some kind of store room. The stone wall at the back of the room had a heavy wooden door. Carved symbols of the dead had been splintered and mutilated during Liam's forced entry. \"Liam? What is this?\"\n\nHe was staring at her face and neck with a grimace of concern. \"I've come to take you out of here.\"\n\n\"You can't.\" Mira pulled her hand out of his and started to back away from Liam.\n\n\"Mira, they know. Tiberius found out about us, about what the elders have been doing, about the vampire. It shouldn't be coming back. If it does come back, do you really want to still be here?\" Liam couldn't believe how pale she was, even in lantern light, or how thin. It certainly doesn't take him long to destroy them, he thought in disgust. \"I'll take care of you Mira. Come with me.\" He held out his hand to her.\n\nMira shied away and shook her head. \"Liam I can't. You know I can't. How did you get in here? Where does that lead?\" She pointed to the hole in the wall. \n\nLiam looked back over his shoulder at the hole in the wall, a guilty and pained expression contorting his face. \"The tombs,\" he almost whispered.\n\nMira's eyes opened wide in horror. \"You disturb the dead. What will the elders think of that?\"\n\"They don't need to know,\" he snapped. \"No one ever ventures that deeply into the tombs.\" Liam stared fearfully into the darkness of a nearby shadow that seemed to be moving.\n\nThen no one should ever discover your body, Rillan thought. He wasn't entirely sure why he hadn't attacked the fool already. Somewhere in the back of his mind, tearing him apart, a voice was saying, Just go with him Mira. Rillan held himself to the shadows, waiting to see how the situation would play out, indecision virtually splitting him in two. \n\n\"Mira, please,\" Liam begged, never tearing his eyes from the darkness surrounding them. He half expected the black to come to life and swallow him whole. \"If you could see how you look,\" he whispered.\n\nA tear formed in Mira's eye. \"I know how I look. I've buried enough of my predecessors. You don't need to remind me of it. Go home Liam. I have my duty here.\" Mira turned away from him and started to walk down the tunnel in the direction she had come from.\n\n\"I'm sorry,\" Liam called after her as he followed. \"Mira I can't go without you. Please understand. This era is over. I\u2014\" Liam swallowed hard. \"Please Mira I love you.\"\n\nShe stopped in the hall and turned to face him. \"Liam, you never said.\"\n\n\"We always knew what you were destined for. There was never a point before now.\"\n\nMira shook her head. \"You can't love me. It's impossible. This is how my life was meant to be.\"\n\n\"No,\" Liam insisted, \"it isn't. No one has to die for this. We can resolve our wars with words. We don't need assassins. At least that's what the elders are considering.\"\n\nThere was a long moment as Mira considered everything she had just learned. \"We'll see. I can't leave here. Not now. I'll wait for my orders from the elders. Go home Liam. I'm sorry you love me.\"\n\nLiam felt as though his entire world was collapsing around his feet. Mira took a couple steps back from him and then turned to run down the hall and return to her rooms. Liam watched her go as long as he could still see her form moving in the darkness. Then she was gone. From somewhere in the moving black Liam could have sworn he heard raspy breathing, or maybe a growl.\n\nDevastated, he turned away from the tunnels and walked out the hold in the wall he had created. He stared weakly at the destructive mess he and his brother had made of the tomb. Something in him didn't care any longer. \n\nCompletely forgetting the original reason she left her rooms, Mira sat down on her bed. Tears rolled down her face. She couldn't decide if she was proud of herself for staying or if she thought that she was stupid. I couldn't do that to Rillan, she thought. I just couldn't. I'll keep my word.  She lay down across her bed and cried. Why didn't I ever realize that about Liam before?\n\nRillan sneered. Visions ran through his mind of ripping the man's tongue out and using it to write a bloody warning on the wall for all other would be rescuers. Instead Rillan allowed the broken man to leave. More than anything he envied the life that the man was able to offer Mira. She should have gone with him.\n\nWalking through the gloom of the tunnels toward his rooms, Rillan considered the things that Mira's would-be suitor said. I don't know whether I'm happy about becoming unnecessary or not. I can't believe she chose to stay.\n\nUpon entering his rooms, he went straight to his bed and lie down. Rillan didn't bother removing clothing, he was too exhausted. Closing his eyes all he could see were visions of his past. But the worst of the visions were the ones involving Mira.\n\nStanding over Mira's bed Rillan stared down at her withered naked body. He parted her legs and stepped up to her. Claws dug into her hips as he gripped her and thrust deeply into her. Drops of blood formed at his fingertip as he fucked her lifeless form. She barely managed to squeak out a soft protest. Her body was too far gone to handle much more. \n\nAs Rillan plunged into her tiny frame he watched her body disintegrating in his hands, her pale skin graying and turning to dust. She lay there beneath him moaning softly with his movements, loving him through the pain and death.\n\nA soft breeze filtered through the room from the shaft and slowly skimmed the layer of dust that was her skin. Horror sifted through Rillan's body as Mira's body eroded before his eyes and was gone, leaving a gray silt to cover everything in the room. \n\nSitting bolt upright in bed Rillan took a moment to register the feelings that were surging through him. It had been at least a century since the last time he felt fear, dread, or guilt.\n\nRillan stood and began pacing, the cold sweat on his clammy skin drying with the movement. What am I supposed to do? I've spent the whole of my life as a martyr. Why the hell should I do it again? Haven't I earned some happiness after all I've done?\n\nA vision of Arial crumpled against the wall of that dirty room in Noviodunum propelled him to his desk. Spreading parchment out in front of him and putting pen to the paper he wrote out instructions for the elders, in detail, berating them for the poor preparation of the girls who had been sent to him over the years. \n\nI hope that this seems a viable reason to send her back to them. A teary glaze coated his eyes, but he blinked it away and sealed the letter in an envelope. Forcing himself to action before his resolve broke, he charged down the hall toward Mira's room. I knew it would end like this.\n\nMira woke to noisy shuffling about her room. Sudden fear shot through her. Either Rillan is home or Liam has returned. The fool is persistent enough.\n\n\"Get up,\" Rillan growled. \"I know you're awake.\"\n\nRelief flooded Mira's body, once she heard what sounded to be the normal abrasive Rillan \"I'm sorry. I didn't realize you were home.\"\n\n\"Just get up,\" he responded and grabbed her arm, dragging her to a standing position. Then he shoved a bag into her hands.\n\n\"What's this?\" Mira opened the large bag and looked in. \n\n\"The things you can take with you,\" he said angrily.\n\n\"I don't understand.\" \n\n\"You're leaving. Come with me.\"\n\n\"What do you mean?\" By the fates, I hope he didn't find out about Liam.\n\n\"I'm done with you. I have a letter for the elders. You're returning to the village. Deliver it,\" Rillan said shortly. He was afraid he may break down and cry. He didn't want her to attempt to stay behind. I had to fall in love with her\u2026\n\nMira stared at him in shock and dismay. \"Did I do something wrong?\"\n\nThe pitiful tone in her voice almost broke his resolve. \"Be glad that I'm not draining you dry and leaving you for dead. I need someone younger. You're more work than I care to deal with girl.\"\n\nA knot began to form in her stomach. \"What's wrong? Are you hungry?\" Assuming that his strange behavior had to do with his assignment, Mira began to undress.\n\nKnowing that he wouldn't be able to go through with forcing her out if he made love to her, or even touched her again, Rillan grabbed Mira by the arm and began to pull her bodily from the room, before she could get out of any of her clothes. \"I told you that I'm done with you,\" he spat at her. \"Have them send someone else. That's all\"\n\n\"You're hurting,\" Mira whimpered as she tried to pry his hand off her arm. \"You're not making sense.\"\n\nHe dragged her, amidst numerous protests to the cave mouth. \"You have a new purpose Mira. Correct your elder's teachings. I expect the girls sent to me in future to be better prepared for what they will face at my hands. You return here, I'll kill you,\" was the last thing he said to her, before leaving her confused and bruised form on the ground at the cave mouth.\n\nLetter in hand Mira watched Rillan disappear into the bleak darkness that was his home. Soft blue light kissed the sky above the trees. Dawn. Near awe, Mira watched the sky slowly lighten, no cave walls, no cave ceiling separating her from the sight. The tears in her eyes took on a new meaning as she felt the morning creep into the clearing around her. Creaking of the rusted iron gate drew her attention from the beauty of the coming morning.\n\nMira looked toward the gate to see a young girl staring at her, mouth agape, wide-eyed. When she saw Mira turn toward her, she flinched, dropped the armful of supplies she had been bringing to the cave, then turned and ran back out the gate. \n\n\"I wonder how I would have reacted if I had found one of the sacrifices outside the cave when I was a novice,\" Mira asked herself. Standing, Mira brushed herself off as she watched the darkness in the cave. Tears started again, she felt as though her heart had been ripped out. I wonder what I did wrong. This can't be right. He'll come back. He needs me.\n\nClutching the letter in one hand Mira stood at the cave mouth waiting. She wasn't sure how long she had been there, when a hand on her shoulder drew her attention. Dazed, Mira turned to see an elderly woman's kind eyes bearing down on her. Nothing seemed to be making sense. Somewhere in the back of her mind Mira recognized the woman as Lilith. She was the oldest of the elders and a kind soul. \n\nFirst Liam breaks into the tombs and then Rillan throws me out. The sacrifices don't work like this. Mira was tired. She didn't know what to think about any of it. Slowly she lifted the paper up for Lilith to take. Rillan hadn't said who to give it to, but Lilith seemed to be an intelligent option. \n\nTaking the letter from Mira, Lilith ran concerned eyes over Mira. She had the look of all the sacrifices, withered and pale. Dark circles sharply contrasted her pallor, around sunken eyes that were far too bright with understanding things no one should ever have to know. \n\nLilith unceremoniously broke the seal on the letter and unfolded the parchment. She read slowly and carefully, seeing more in Rillan's writing than he truly intended to be understood about his motivations for sending Mira back to them. \n\nClearing her voice, Lilith refolded the paper and looked sympathetically to Mira. \"So it seems you are to be our new teacher, in the wake of our inadequacies in dealing with our guardian.\"\n\n\"I guess,\" Mira responded meekly, a small quake in her voice. Tears still wet on her face, Mira looked back to the darkness of the cave, but Rillan was gone. Strange that the darkness should almost seem more welcoming than the light and the pitying stares, she thought bitterly.\n\nNodding Lilith turned to a couple of the young onlookers and gave instructions that didn't quite register in Mira's mind as she gazed longingly into the cave mouth, wishing Rillan would change his mind and come back for her. Finally she allowed herself to be guided away from the cave and taken to the village.\n\nBy the time they reached the round houses, people had gathered to see the living sacrifice. No one had ever walked out of that cave alive and there was concern that something was wrong. Wild speculation whispered from one ear to the next.",
        "\"Maybe she ran away.\"\n\n\"Well if she did, does that mean he'll come out here hunting her down?\"\n\n\"Do you think we're in danger?\"\n\"No one could run away from that. She must have done something to anger him and he got rid of her.\"\n\n\"No he would have just killed her.\"\n\n\"Well there's no way he would have let her leave.\"\n\n\"She doesn't even look happy to have survived.\"\n\n\"She looks like walking death.\"\n\n\"I wonder what it was like in there.\"\n\n\"Judging from her appearance, there's no way it could have been good.\"\n\n\"What do you think we're going to do now? Send another sacrifice?\"\n\n\"Lilith will know.\"\n\n\"She always knows.\"\n\"I thought we were getting rid of him anyway.\"\n\n\"Don't believe all the rumors.\""
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "druid",
        "sacrifice",
        "conspiracy"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-09"
}