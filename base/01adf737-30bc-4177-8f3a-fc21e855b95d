{
    "title": "The Chronicles: Three Sisters 05",
    "pages": [
        "THREE SISTERS Chapter 5\n\nGuengerthlon Nadesti looked much the same as she had six years earlier. More lined, perhaps - and a little more bent over, but her eyes were alert as ever, and she had all her wits about her.\n\nThe woman beside her was in her late 20s or early 30s, if I had to guess. She had dark brown hair, and light blue eyes. Her face was broad. At some point, her nose had been badly broken, and had not set correctly.\n\nI didn't know her, but she was the first attractive woman I had seen in six years, so I may have stared a moment longer than I should have, before returning my attention to the mother of the men I had killed.\n\n- \"Veran Hammerfist.\" she said, softly.\n\nI shook my head. \"No longer. It's Veran One-Eye, now.\"\n\n- \"So I see.\"\n\nShe fell silent. As for me, I had nothing to say. Nothing useful, that is. 'May we hide here? There are bad men pursuing us.' That was hardly likely to win her over.\n\nI'm sorry I killed your sons. Not the best opener, either - especially because it wasn't true. Lanko deserved his fate. Dengel chose to fight me. My only regret about their deaths was that they led to the disaster which engulfed my family as well as theirs.\n\n- \"Where did you go, these past years?\" she said. \"Why are you here, now?\"\n\n- \"We've been north of the Three Sisters.\" I said. \"We lived with Moruith and her son, Inisian. But a few days ago, a band of warriors came into the area.\"\n\n\"They were led by Kestutis. Bacho's son.\"\n\n- \"Ah.\"\n\nThat word hung between us for a time. I didn't know how to answer it. This conversation - this silence, rather - had the feel of a twig floating downstream. It was slipping away from me.\n\n- \"May we have a word, Mother Nadesti?\" said Tanguiste.\n\nThe old lady raised an already-high eyebrow. It was not customary - or polite - for a 14 year-old to interrupt her elders. In my daughter's defence, I suppose, those elders weren't doing much talking.\n\nGuen Nadesti must have come to the same conclusion. She studied Tan's face for a moment, and then nodded.\n\n- \"Why not? These are unusual circumstances. Unusual times. Go ahead, girl.\"\n\n- \"Could we speak without our father present?\" asked Tanguiste.\n\nI turned my head to look at her. What was this? I frowned at her, but Tan ignored me.\n\n- \"Hmm.\" said the old lady. She looked at me once more. I'm quite sure she could tell, from the expression on my face, that this hadn't been rehearsed between us.\n\n\"Do you have anything else to say, Veran?\" she asked.\n\n- \"No - not at the moment.\" I said.\n\n- \"Then ... if you will ... your daughters wish to speak with me. You can wait outside.\"\n\nThere was nothing for it, but to get up and leave.\n\nA dozen people were there, waiting outside the house. Most quickly found something to do, to show that they hadn't been simply waiting to see what would happen.\n\nMost of them were women. There was an old man, and two adolescents. Only one of the women held a baby.\n\nMoruith and Inisian were there, too. Someone had provided them with food and drink. I walked over to stand beside them.\n\n- \"What happened?\" asked Moruith.\n\n- \"I don't rightly know.\" I said. \"Tanguiste asked to speak with the old woman.\"\n\n- \"Ah.\" she said.\n\nAt that point, the young redhead - the male - approached.\n\n- \"Are you hungry? Thirsty?\" he asked.\n\n- \"I am.\" I admitted.\n\nHe brought me a bowl of stew - mutton, from the look of it - and a cup of water from a bucket next to their well. I wasn't sure how the water would taste, after the mountain springs I had become accustomed to at Moruith's place. If these people drank water so close to a swamp, and to the river, they must be prone to fluxes.\n\n- \"Thank you, ...\"\n\n- \"Weyl.\" said the young man.\n\n- \"My name is Veran.\" I said, automatically.\n\n- \"I know.\" he said. Then he walked away.\n\n- \"Your name isn't exactly opening doors here, One-Eye.\" said Moruith.\n\n- \"You know why.\" I said.\n\n- \"I know, too.\" said Inisian. \"But ... surely they could use our help.\"\n\n- \"Our help?\" said his mother.\n\n- \"There aren't many men about. If those reivers find this place ... \"\n\n- \"That's a good point, lad.\" I said. And if I had been thinking properly, I could have said as much to Guen Nadesti when I had the chance. Would that have swayed her?\n\nIf she had her heart set on vengeance, or if she had sworn an oath ... then there was nothing I could say or do to change her mind - just as I couldn't imagine a world in which I would give up my vengeance against Bacho and his son.\n\n- \"I'll stand with you, Veran.\" said Inisian. \"No matter what the old woman decides.\"\n\nI put my good hand on the lad's shoulder, and squeezed. I would have been proud if my son Iarn had turned out like this young man - but I couldn't tell Inisian now, because it would only make him feel even more obligated. That was not my intent.\n\nWe waited for quite a while. Moruith had the good sense to keep her peace, and leave me to my thoughts.\n\nYevna and Guenna came out of the house, followed by Tanguiste. They came over to join us. I was too impatient - and when they didn't immediately say anything, I had to ask.\n\n- \"Well?\"\n\n- \"Well what?\" said Guenna.\n\n- \"What happened? What did you say to her? What did she say?\"\n\nTanguiste just laughed. \"What would be the point of asking to speak to her alone, and then rushing out to tell you everything that was said?\"\n\n- \"The point?\" I said. \"The point is that I would know what's going on!\"\n\n- \"She said she'll talk to you tomorrow.\" said Guenna.\n\n- \"But she gave you a gift, in the meantime.\" said Tanguiste. And she told me what it was.\n\n\"Excuse me.\" she said, to Weyl, who was observing us from the shade of a house just across the way. \"Could you tell me where the fallen tree is?\"\n\nThe redhead stood up a bit straighter. \"I can take you there.\" he said.\n\nTanguiste smiled at him. I saw, again, that quality in her that Moruith had described. Had I been the one to ask for directions, the young man might have spit on the ground. Or, if he was feeling particularly courteous, he might have pointed the direction. But Weyl was willing to go out of his way for my daughter - whom he had just met.\n\nIt wasn't beauty alone, though Tanguiste promised to be as lovely as her mother, one day. She was still more child than young woman. There was just something about her - something I didn't understand.\n\nWeyl led us to the south-eastern side of the hill, towards the river. He stopped, and pointed. He let us go ahead on our own, showing respect for our privacy.\n\nOn the edge of the tree line, a big, burly man, naked to the waist, was shearing branches from a fallen tree with an axe. Though it was still high summer, there was always a need for firewood and kindling, for cooking and for the cooler nights.\n\nMy daughters had good sense, too. They stopped short, and let me go on alone.\n\nThe big man lifted an arm, to wipe the sweat from his brow. Then, somehow, he sensed our presence. He turned to face us. I stopped, perhaps twenty feet away.\n\n- \"Hedyn.\" I said.\n\nHis mouth dropped open. \"Veran?\" he said.\n\nThe last time I had seen Hedyn had been at the Battle against the Nadestis. When Stoneface slammed me to the ground, Hedyn had stepped in, and stabbed Dengel with his spear. I was able to scramble to my feet, and drive my sword's point into Dengel's groin.\n\nThe other lads had always called him 'Chubby' - though I did not. And here he was, a man grown. Big, burly and powerful - but no longer fat. He had trimmed his beard, and shaved his hair ridiculously short.\n\nI stepped closer, another few feet.\n\n- \"Your eye ...\" he said. \"It's true?\"\n\n- \"How are you, Hedyn?\" I asked. Trite words, I know - but how else to bridge the gap of six years ... and everything else that had happened since we last saw each other?\n\nBig Hedyn closed the distance between us, and wrapped his powerful arms around me. He was several inches taller, but he bent over, and buried his head on the top of my shoulder.\n\n- \"I'm so sorry ...\" he mumbled.\n\n- \"Why are you sorry?\" I asked. \"Last time I saw you, you saved my life.\"\n\n- \"But ... but I ran.\" he said. \"I left you alone. They took ... they took your wife, Veran. Your son. Your eye.\"\n\nI pushed Hedyn back a little, with a hand on each of his broad shoulders - a little too conscious of the weakness of my right hand.\n\n- \"You saved my life.\" I repeated. \"If you had stayed, you'd be dead ... like Putrael and Vidlo - may they rest easy. Hedyn: you couldn't have prevented what happened. You could only have shared in it. And that would've served no purpose.\"\n\n- \"I thought about it, so often.\" he said. His voice was still trembling.\n\n- \"Here -\" I said. \"Look who's with me.\"\n\nHedyn hadn't seen my daughters in six years. He remembered them as children - they remembered him as a chubby, good-natured adolescent. Now he was a man - a big man.\n\nHe wanted to know where we'd been, and what we'd done, these past six years. We had similar questions. But as he watched and listened to my daughters, Hedyn began to cry.\n\n- \"I'm ... so sorry.\" he said, again.\n\nTanguiste stepped forward, and hugged him.\n\n- \"You have nothing to be sorry about. You should be proud.\" she said to him. \"Papa has told us - many times - that you saved his life. That means that you saved us as well, Hedyn, because we could never have survived without him.\"\n\n- \"But ...\"\n\nI don't know how she did it, exactly. But Tanguiste worked her magic. She didn't spare Hedyn - she told him what had happened after the battle, what Bacho and his minions had done to us. To Meonwe. To Iarn. To me. She left nothing out.\n\nIt was difficult for him. Povilas and Guithrit were childhood friends of his. He couldn't understand their betrayal, their cruelty, any more than we had.\n\n- \"I ... I should have told you.\" he said. Hedyn had trouble getting the words out.\n\n- \"Told me what?\"\n\n- \"Bacho was working on Povilas and Guithrit. He even approached Vidlo, Putrael and me. He was ... well, at the time, we thought he was just being friendly.\"\n\n\"But he came back to talk to Povilas and Guithrit again. I don't know what he said, but ... I should have told you about it. Except ...\"\n\n- \"Except that Bacho was my friend. We were married to sisters.\"\n\n- \"I should have told you.\"\n\n- \"I don't blame you, Hedyn.\"\n\n- \"But I ran, Veran.\"\n\nHe couldn't deny that if he had been captured with us, he would have been killed out of hand. That didn't make the hearing any easier for Hedyn. He just couldn't accept that he had done the right thing - the only thing he could have done.\n\n- \"How did you come to be here?\" asked Guenna.\n\n- \"I fled south, first. Found some folk who'd let me work for food. But it was odd, that: ev'ry night, I couldn't hardly sleep, imaginin' they were goin' to slit my throat, just for my spear and my boots.\"\n\n- \"They probably feared that you'd do the same to them.\" I said. It was an old story, in the Uplands, oft repeated: offering hospitality to a stranger could prove fatal. Likewise, accepting hospitality from strangers could be equally dangerous.\n\n- \"I'm sure they did.\" said Hedyn. \"I moved on, further south. Heard strange talk, people talkin' bout the fight at the Bend. They said Bacho'd won, 'gainst you and the Nadestis together. That he'd killed Dengel Nadesti in single combat, and that he'd taken your eye, and your woman.\"\n\n\"Well, I knew better,\" he continued, \"but it din't seem like a good idea to tell them the truth of it. One old fellow din't believe it, either. 'Din't those two marry sisters?' he said - meaning you and Bacho. 'So wouldn't they be on the same side?'\"\n\n\"The others din't like that, much, and they shushed him. Seems they preferred their own version of the story.\"\n\n\"After that, I noticed them lookin' at me - odd looks, you know? So I left a little after dusk. I was tempted to go even farther south, but I din't.\"\n\n- \"Why not?\" asked Guenna.\n\n- \"Don't know anyone down that way.\" he said. \"Besides - I got to thinkin'. Maybe I wasn't the only one got away. In the story they heard, Dengel was dead - but your Da only lost an eye. I thought ... maybe I'd meet up with someone.\"\n\n\"So I came north. I watched the Nadestis' place for a day. Saw some of Bacho's people there, which pretty much told me how things were goin', south of the lake.\"\n\n- \"He moved quickly.\" I said.\n\n- \"That he did. Like he'd planned it all along.\" said Hedyn. \"Anyway, I followed the river north - and ran into the redheads.\"\n\n- \"Weyl?\"\n\n- \"And Seva. Brother and sister. They brought me up here. Mother Nadesti said I could stay, and I've been with them since. Got married ...\" he blushed. \"And I have a son. He's two, now.\"\n\n- \"That's wonderful!\" said Tanguiste. We all congratulated him.\n\n- \"What is this place, Hedyn?\" I asked.\n\n- \"It's called Prospal Hill. Nobody seems to know why. The Nadestis used to come up here and hunt, every now and again. There's only a few ways up the slope, and none of 'em are easy. A handful of warriors can hold it. I do hope you'll stay, 'cause we can surely use the help.\"\n\n- \"That depends on what Guen Nadesti decides.\" I told him.\n\n- \"She din't say, yet?\" said Hedyn. \"Oh ...\".\n\n- \"She'll talk to us tomorrow, she said. Tell me more, Hedyn. Who's the fellow with the helmet?\"\n\n- \"Vingoldas? Good man. He was at the Bend, that day. Only 16, at the time. Run away, like I did - and it still seems to stick in his craw. There were two others who survived that fight, but they've since passed. Rige got the cough, one winter ... an' Laspo drowned in the river.\"\n\nHedyn shook his head. \"Listen to me, runnin' on. D'you eat yet?\"\n\n- \"I have - but I'm not sure about the girls.\"\n\n- \"Sorry - sorry.\" said Hedyn. He spread out his own lunch, and offered it to my daughters. They agreed to share it with him.\n\nI managed to ask Hedyn one more question, just out of earshot of the girls.\n\n- \"Hedyn - there was a woman with Guen Nadesti. Younger. She had a broken nose ...?\"\n\n- \"Oh.\" he said. \"You mean Sulcen?\"\n\n***\n\nSulcen Nadesti.\n\nThere was a story.\n\nIt never occurred to me, at the time, that the Nadestis might sit up and take notice when my father befriended Bacho's sire. Branhucar and Cenmin, between them, controlled half of the south side of the lake. Had they wanted to, they could have taken much more.\n\nBacho and I fought, for Meonwe - but to an outsider, it must have seemed that we had forged an alliance, afterwards, when Bacho married Meonwe's sister.\n\nPut yourself in their shoes, if you want to understand them, my father used to say. If I imagined myself a Nadesti, twenty years ago, I could feel the wind whistling up my ass. Bentwood and Asphodels, allied? That couldn't be good for the Nadestis.\n\nBranhucar and Cenmin - friends. Bacho and me - our differences resolved, now married to sisters. The Nadestis had to have seen us as a threat.\n\nSo they tried to forge an alliance of their own. Guengerthlon's daughter - Dengel's sister - was betrothed to a fighter from the edge of the eastern forest, one Duenerth.\n\nThis man had a reputation as a warrior - as a killer. I remembered hearing about it. But we didn't consider it important. See, my father never had any ambition to control the whole lake. Neither did Bacho's father.\n\nBut the story didn't end there.\n\nDuenerth was a savage. We heard tales of the indignities he heaped on his young wife. It was probably only a tenth of what he actually did. According to travellers, Duenerth was in the habit of beating - and flogging - his bride, because she displeased him.\n\nHe broke her nose, more than once, and caused her to miscarry their first two children when he beat her - badly - while she was pregnant.\n\nThe Nadestis didn't dare to intervene. For one thing, what passed between a husband and a wife was considered no one's business but their own. On top of that, Guen Nadesti must have felt that she needed Duenerth, to counter the Bentwood-Asphodels alliance.\n\nSulcen Nadesti was certainly not the only woman to be abused by her husband. Not in the Uplands, for certain. Branhucar had never told me the personal histories of his grandmother Payl's friends: Meeli Deadeyes and the archer Irija.\n\nBut it didn't take a genius to guess why Meeli would collect the penises of the men she killed, or why Irija would mark herself with a tattoo recording all of the members of her own family that she'd killed.\n\nIt was probably the same all over Hvad, for all I knew. But Sulcen Nadesti's plight was well-known, because her husband seemed to enjoy flaunting her cuts and bruises. It was hardly a secret.\n\nTheir marriage became especially notorious when Sulcen Nadesti slit her husband's throat, one winter evening.\n\nFrom what I heard, none of Duenerth's kin seemed to be particularly upset by his sudden demise. But they were none too keen to shelter his widow - his murderer - any longer.\n\nSulcen Nadesti returned to her kin - and disappeared from view.\n\nI thought of the woman I had seen - her broken nose, her broad face, and the brief glance I had had of her pale blue eyes. What must it be like, I wondered, to be Sulcen Nadesti?\n\n***\n\nThe next day, Guengerthlon Nadesti spoke to Inisian and Moruith.\n\n- \"She said we could stay.\" said Inisian.\n\n- \"Well, that's good.\" I said.\n\n- \"I asked about you - and the girls.\" he said. \"But she wouldn't say.\"\n\n- \"It's ... complicated.\"\n\n- \"I know that.\" said Inisian. \"But I'm not going to stay, if she intends to cast you out.\"\n\nI noticed that Moruith remained silent, and avoided meeting my eye. I couldn't blame her. We had helped each other, in many ways, these past years. But there was no way that she would want to spend a winter in the wilds, hunted by reivers.\n\nWe were close friends, after all that had passed between us. But we weren't family.\n\n- \"We don't know what's going to happen, yet.\" I told Inisian, with a clap on the shoulder.\n\nLater, though, I had a word with his mother, in private.\n\n\"If worst comes to worst, I'll speak to him, Moruith. His first loyalty has to be to you. And this would be a good place for the two of you.\"\n\n- \"Thank you.\" she mumbled. She still couldn't meet my eye.\n\nMother Nadesti kept us waiting until dusk, and then sent Weyl.\n\n- \"She'll speak to you tomorrow.\" he said.\n\nIt was on the tip of my tongue to say 'That's what she said yesterday'. But that wouldn't do any good.\n\n- \"Don't worry.\" said Tanguiste. \"You can't change it, so there's no point in worrying about it.\"\n\n- \"Wise words.\" I said. \"Where did you get those?\"\n\n- \"From you.\" she said, with a bright smile.\n\nIt was advice that I gave each of my girls - and repeated whenever necessary. My father had done the same for me. Some things will be, and some will not come to pass, no matter how much time and energy people spend fretting over them. Better to concentrate on the things you can change.\n\nOf course, it's much easier to give advice than to take it. I didn't sleep particularly well that night.\n\nGuen Nadesti didn't send for me until well past midday. I called the girls over.\n\n- \"Just you.\" said the redhead, Weyl.\n\n- \"Alright.\" I would have preferred to have Tanguiste with me, at least. She had a knack for knowing the right thing to say - it had to have come from her mother.\n\nThe old woman received me alone, except for the young warrior in the helmet - Vingoldas. There was no sign of the young woman, the one I thought might be her daughter, Sulcen.\n\nThe Nadesti matriarch went straight to the point.\n\n- \"Tell me why we should allow you to stay.\" she said.\n\n- \"You already know.\" I answered.\n\n- \"I'd like to hear it from you.\"\n\nI had no choice but to play her game. \"Two reasons.\" I said. \"The first is that I'm not really your enemy. There's blood between us - and I don't know what to do about that. You didn't want it to happen, but you know damn well that I didn't either.\"",
        "\"Lanko deserved a beating, and he should have paid compensation. No one needed to die. I had nothing but respect for Dengel, and I never bore your family any ill-will - except for Lanko.\"\n\n\"We do have an enemy in common. Bacho stole your land - and he's at least partly responsible for the death of your sons.\"\n\n\"I suspect that my daughter already told you what he and his men - and Kestutis - did to my wife, and my son.\"\n\nGuen Nadesti only nodded. Her expression hadn't changed, though.\n\n- \"There's a second reason you should let us stay.\" I continued. \"You have only three fighters - four, if you count Seva. Weyl is untested, from what I can see - and so is his sister.\"\n\n\"You need all the help you can get.\" I said.\n\n- \"Inisian will be very useful.\" said Vingoldas. He had the same level stare, the same expressionless face as Mother Nadesti. \"That is, if you don't talk him into leaving with you.\"\n\n- \"I wouldn't.\" I said. \"They aren't bound to us, and Moruith has had a hard enough life, without tramping through the wilds in winter. Prospal Hill is the best place for the two of them. You did the right thing ... inviting them to stay with you.\"\n\nGuen Nadesti raised an eyebrow.\n\n- \"You'd leave without them?\" she said. \"You'd let them stay here?'\n\nI met her stare. \"I just said so.\"\n\n- \"Then why do we need you, if we can have Inisian?\"\n\n- \"Seriously? Because your most experienced fighters are babes in arms, compared to me. I mean no offence, Vingoldas - but both you and Hedyn still have a lot to learn. And even with one eye and half a hand, I don't think that either one of you would want to face me in a serious fight.\"\n\nVingoldas didn't reply - but I hadn't expected him to. Smart young man. Had he been hot-tempered, or overly proud, we could have had that fight right away.\n\n\"You would gain my girl Yevna, too.\" I said. \"Seva may be older, but my daughter is a good archer, a better forester, and has more grit. Have you seen her teeth?\"\n\n- \"Yes.\" said the old woman.\n\n- \"And you know how they got that way?\"\n\nGuen Nadesti nodded.\n\n\"Then you know that if you let us stay, you get much more than just me. And my two youngest girls have skills of their own. I wager that within a year or two, you'll be very glad to have them on your side.\"\n\nThe old woman glanced at the young man in the helmet. Vingoldas didn't move, nor did his expression change. From that, I guessed that nothing I had said so far came as a surprise to either of them.\n\n- \"I swore, years ago,\" said Guen Nadesti, \"that I would never make peace with Veran Hammerfist.\"\n\n\"One should never make such an oath lightly. But it seems that I've been released from my vow. Hammerfist is gone. And it just may be that I can work with Veran One-Eye.\"\n\nI didn't react. She wasn't finished.\n\n\"But I have a few conditions, if you are to stay here, with us.\"\n\n- \"Name them.\"\n\n- \"First, I am the headwoman of Prospal Hill. These are my folk.\"\n\n- \"Understood.\" I said.\n\n- \"So you will obey me, as my people do.\"\n\n- \"No.\"\n\nShe frowned.\n\n\"I will respect you, as your people do.\" I said. \"I will not challenge you publicly. I will do nothing to undermine your position - or your authority. But I'm not your servant, or your bondsman.\"\n\n- \"Fair enough.\" she said.\n\n- \"You said 'conditions'. What else?\"\n\n- \"I will choose husbands for your daughters.\" said Mother Nadesti.\n\n- \"No.\"\n\n- \"You're making this more difficult, One-Eye. Are you trying to make me reconsider my decision?\"\n\n- \"No, Guen. I want my daughters to grow up safe. But you can't choose their husbands.\"\n\n- \"Why not?\"\n\nI wasn't about to say anything about her disastrous choice of a husband for her own daughter - I wonder if she expected me to.\n\n- \"Because my daughters will choose their own husbands, when the time comes. I expect that they'll consult me, and I hope they'll take my advice. But the decision will be theirs.\"\n\n- \"What makes you think they'll choose wisely?\" said Guen Nadesti.\n\n- \"What makes you think they won't?\"\n\nShe thought about that in silence for a time. Vingoldas didn't move. The man's ability to sit still was impressive. I tried to look impassive. I wasn't at all sure yet that she was going to let us stay.\n\nThen the old woman looked me in the eye.\n\n- \"I asked your daughters a question, the other day.\" she said. \"The middle girl - Tanguiste - she told me that if I invited you to stay, I would never have cause to regret it.\"\n\n\"I asked, in return, if she knew what had passed between us. The history of our families.\"\n\nI nodded.\n\n- \"We didn't hide anything from our children.\" I said.\n\n- \"Oh yes - she knew.\" said Mother Nadesti. \"So I asked her: after all of that, how could I trust you? How could I ever trust you?\"\n\n\"And do you know what the girl said to me?\"\n\n\"That's entirely up to you, Mother Nadesti. There's nothing my Father can do to change your mind. Trust is something you have to give.\"\n\n\"Most people think that trust is earned - it's not. You have to grant someone your trust. You extend it. It's a reach - a leap of faith. You can never know for certain if your faith is justified. Until it's tested - that's when you find out if a person is trustworthy.\"\n\n\"I was shocked, Veran. That girl is wise beyond her years. But I said to her: 'What are you on about, girl?\"\n\n\"She said: If I was your daughter, and you told me not to do something ... how could you be sure that I wouldn't? Even if you put temptation in my path, and I passed your test - how could you know that I would pass a second test ... or a third?\"\n\n\"That's what betrayal is, Mother Nadesti. That's why it hurts so much.\"\n\nGuen Nadesti sighed, deeply. I saw her bright eyes, and the craggy, wrinkled ruins of her sagging face. For a strange moment, I felt the weight of her years, and her losses, and her many heartbreaks.\n\n- \"She's ... she's a bright girl.\" I said. \"And to make matters worse, she's the spitting image of her mother.\"\n\nGuen nodded. Vingoldas had the good sense not to say anything. He didn't move.\n\n- \"I've thought about little else, for the past two days.\" said the old woman. \"She's clever, alright - I'll grant her that. She planted a seed in my head, and I couldn't get it out.\"\n\nI was about to say 'I'm sorry' - but I wasn't.\n\n\"I'm impressed by your daughters, One-Eye. And it occurred to me that the man who helped raise such fine girls might have some similar qualities himself.\"\n\n\"I've told you two of my conditions, and you've rejected them both.\" she said. \"Now I'm about to tell you my third - my final condition. But there's no give on this one, Veran. You agree ... or you leave. Is that understood?\"\n\nI couldn't even begin to guess what she was going to say. Did I have a choice, though?\n\n- \"Say it.\"\n\n- \"Do you understand?\" she repeated. \"You agree to my last condition, or you leave.\"\n\nNow I was even more confused. How bad could it be? At the worst, I would still have a choice - though a winter in the wilds, with three young girls, was not be taken lightly.\n\n- \"I understand.\"\n\nMother Nadesti sighed again.\n\n- \"You have to marry my daughter.\"\n\n*****\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "combat",
        "dark ages",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-05"
}