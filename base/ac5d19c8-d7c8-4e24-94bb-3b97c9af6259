{
    "title": "Charlie & Miley Ch. 06",
    "pages": [
        "At three and a half feet tall she wasn't tall enough to reach the back of the counter, even while standing on tippy-toes and stretching her arm as far as it would go. A frustrated scowl marked her adorable, olive-skinned features and she absently pushed a wave of long brown hair behind an ear in a way that perfectly mirrored her mother. While seeking a solution she spotted a folding stool collapsed between the refrigerator and a garbage basket; the girl suddenly smiled with the innocent mischievousness only a four year-old can obtain. \n\nMoments later she was able to slide a blue porcelain container shaped like her favorite Sesame Street character to the edge of a stainless steel kitchen counter. Carefully removing its lid, she began digging for the tasty treasures contained within. \n\nMiley suddenly appeared from a hallway to catch the girl with her hand literally in the cookie jar. \"Gwendolyn Taylor,\" she admonished, using her daughter's full name in the exact same way Miley's own mother used to do when Miley was misbehaving, \"Just what do you think you're doing?\" \n\nStanding on the stool with half her arm buried into Cookie Monster's neck, Gwen froze and shot a surprised look towards Miley that betrayed her guilt, \"Nuthin.\" \n\n\"Nothing?\" Miley's brow rose, \"That's not what it looks like to me.\" \n\nGwen looked to the jar and then back to her mother, \"Can I have a cookie?\" \n\n\"Of course not. You know the rules, no sweets before bed; it's not good for you.\" Miley hoisted Gwen up by her armpits and set her down on the floor. \n\n\"But mommy, I'm hungry!\" \n\n\"How about I slice up an apple for you?\" \n\nGwen stuck her tongue out and shook her head. \n\n\"Do want some banana?\" \n\nGwen seemed adamant, \"No, I wanna cookie.\" \n\nMiley knelt to fold the illegally obtained stool and replace it next to the fridge, \"Then you can't be that hungry.\" She patted Gwen's rump, \"Now go get your pee-jays on. It's time to get ready for bed.\" \n\n\"Can I play Cap'n Darkness before bed?\" \n\n\"No more PlayStation, tonight. C'mon, sweetheart... chop-chop!\" Miley clapped her hands together, \"Daddy'll be there in a few minutes to read to you.\" \n\n\"Okay,\" Gwen relented before dashing off. \n\n\"Don't forget to brush your teeth!\" Miley called after her. \n\nCharlie appeared from the opposite direction that Gwen vanished towards. \"There's no way,\" he was saying to a cell phone, \"I'm not leaving Marvel to write for DC, even if they are offering me Superman.\" He absently reached into the open cookie jar but had his hand slapped away by his wife. \n\n\"No sweets before bed,\" Miley chastised him, putting the lid back on the jar and lifting it towards a higher cupboard. \n\n\"No, I don't care about Batman either,\" Charlie sighed at his phone, \"Sam, I'm the monthly writer on Captain Darkness as well as Amazing Spider-Man. Those are the books I've dreamed of writing since I was a kid. There's nothing DC can offer me that will lure me away. Yeah. Yeah. Okay... yeah. All right, I'll talk to you tomorrow.\" \n\n\"How's Sam?\" Miley asked, wiping the kitchen counter as Charlie hung up. \n\n\"She's fine,\" Charlie set his phone down, \"She thinks I should take on another monthly book. I swear, living in New York City has put the zap on her head if she thinks I have the time to take on another comic.\" \n\n\"Sam and her husband don't have any kids,\" Miley reminded him, \"They're more career-focused, him at HBO and her with her rep agency. They don't understand how much time you give your family.\" \n\n\"Brian and I haven't even finished scripting season three of Captain Darkness yet,\" Charlie further complained, \"Does she think I don't need sleep?\" \n\nMiley placed a hand on Charlie's chest, \"Quit stressing and go read to your daughter while I finish cleaning up. But no more Spider-Man; I swear that kid thinks she can stick to walls the way she climbs all over this house.\" \n\n\"All right,\" Charlie grinned, kissing the top of Miley's head before wandering towards his daughter's room. \n\nHe found Gwen lying on her stomach in the middle of her bedroom floor, working on a coloring book with Crayons scattered all around her. \"What are you doing?\" \n\n\"Colorin,\" she looked up at him. \n\n\"Coloring?\" Charlie feigned shock, \"But it's bedtime!\" \n\n\"I wuz waitin' for you, daddy!\" \n\n\"Did you brush your teeth?\" \n\nGwen bobbed her head in an affirmative. \n\n\"Let's see,\" Charlie crouched beside her. \n\nGwen proudly opened her mouth wide. \n\nCharlie leaned in real close before widening his eyes, \"Holy cow, what's that?\" \n\nGwen gave him a quizzical look but continued to hold her mouth open. \n\nReaching between her lips Charlie snatched the tip of her tongue between two fingers, \"There's a big worm in here!\" \n\nGwen giggled loudly. \n\n\"Let me see if I can get it out of there,\" Charlie tugged playfully. \"Uh-oh, it seems stuck!\" \n\n\"Thas mah tugue...\" \n\n\"What?\" Charlie kept hold of her wriggling tongue, \"I can't understand you with this big worm in your mouth...\" \n\n\"Thas mah togue!\" she continued to giggle. \n\nCharlie finally let go, \"Oh, that's your tongue? It looks like a big worm.\" \n\n\"No it don't,\" Gwen grinned broadly, \"You're so silly, Daddy.\" \n\n\"Yeah, that's what your mom says, too.\" Charlie scooped his daughter up and carried her towards the bed, \"What should we read tonight?\" \n\nTen minutes later, once finished with her cleaning, Miley arrived and leaned on the door jamb to Gwendolyn's room. She smiled warmly at the vision of her daughter curled up next to Charlie in bed as he read a comic book to her. Gwen kept interrupting him and asking what different words meant. \"Daddy, what's 'invulnabilty' mean?\" she would wonder and Charlie would patiently pause to explain the words to her every time. It warmed her heart so much that Miley didn't know whether to laugh or cry. \n\nWhen she was obviously growing drowsy, Charlie closed the comic book and told Gwen they'd finish the next night and kissed her on the forehead. \n\nMiley approached and kissed her as well, \"Good night, sweetheart. I love you.\" \n\n\"I love you too, Mommy,\" Gwen murmured as Miley tucked her in. \n\nSwitching off the lights and leaving the door cracked open, Charlie and Miley retired to their own bedroom down the hall. \n\n\"Are you okay?\" Charlie worried, seeing a hint of moisture gathering at the bottom of Miley's eyes. \n\nMiley bit her lip and nodded with a smile. \n\n\"Then why do you look like you're crying?\" \n\n\"Because, silly, I am.\" Miley wiped at her cheek, \"I just love her so much, you know? And you're so good with her; I sometimes wonder if I'm half the parent you are.\" \n\nCharlie chuckled at her insecurities and wrapped Miley in his arms, \"Are you kidding me? You're the most incredible mother in history. Gwen worships you; she acts like you; she talks like you; she always wants to dress like you. Miley, you're our daughter's hero.\" \n\nClutching her husband, Miley sniffled happily against his chest, \"I know, I'm just so proud of how good a father you are. I love you, Charlie.\" \n\n\"I love you too,\" Charlie kissed her. \n\nThe exchange between their mouths rapidly intensified. After nearly five years of marriage their libidos and attraction for one another had held strong. Miley in specific seemed to want sex more than ever and she began unbuttoning Charlie's jeans as they kissed. \n\n\"Let me relieve some of that stress, baby,\" Miley murmured against his lips, her hand slipping beneath Charlie's pants to close around the shaft of his cock. \n\n\"Hell yeah,\" Charlie whispered eagerly between more kissing, \"I've wanted to make love to you all day.\" \n\nMiley gave him a flattered smile, \"Oh yeah?\" \n\n\"Yeah, you've been prancing around in that sexy sundress, driving me nuts.\" \n\nCharlie worked from home, in the house he and Miley purchased a year after their daughter was born. It was in the suburbs of Tallahassee, only a few short miles from where they grew up and where Charlie's parents still lived. It was a modest but sizable four-bedroom home, with one of the bedrooms converted into an office for Charlie to write, and a large yard for Gwen to play in. Miley stayed home as well, happily assuming her role as a housewife and providing a strong maternal influence for Gwen.  \n\nMiley reached to her back and unzipped the dress while Charlie pulled the thin straps off her shoulders. It fell to the carpeted floor of their bedroom, revealing Miley's excruciatingly sexy body clad only in a pair of thong panties. Her perfectly petite frame was bronzed from head to toe in a natural tan, though bikini lines kept the skin of her plump C-cup breasts milky white. Dark curly ringlets framed her twenty-five year-old face which was as beautiful as ever. A small patch of barely visible stretch marks on the lowest portion of her tummy remained from the pregnancy with Gwen, which Charlie proudly referred to as Miley's 'mommy scars'. \n\nShe tugged his tee shirt off after Charlie laid her back on their bed, curling a hand around the back of his head as he began kissing her neck. \"Do you want to feed from me before we make love,\" Miley asked in a warm tone, \"...or after?\" \n\nCharlie drew back to slide Miley's panties off her legs. \"Before,\" he decided, staring at her breasts and the way they hung toward the sides of her sternum. \n\nMiley nodded and opened her arms to him, letting Charlie lie between her legs, hugging his slender frame as he took one of her breasts. Miley's fingers slid through his hair and she caressed the back of his head as Charlie began suckling on her engorged nipple. \"That's it, baby,\" she encouraged him lovingly. \n\nMiley had breastfed her daughter for nearly a year until Gwen began eating solid foods only, but Charlie never stopped and Miley's body continued to produce milk. Every night for four years, before they went to bed, Charlie drank from his wife. It had become a ritual between the two that tied into their lovemaking, which also occurred on a daily basis. Miley loved the fact that she was providing nourishment for her husband and it provided a constant turn-on to have Charlie sucking and licking her breasts every night. \n\n\"Feed from my tits,\" Miley said, rubbing her ankle between Charlie's thighs and feeling his erection grow against her leg, \"Drink mama's milk.\" \n\nCharlie suckled until her nipple gave a hairpin stream of milk. He clamped his lips onto her breast and drank, savoring the slightly bitter flavor. He had grown accustomed to its taste even before their daughter was born and often found himself craving it. Charlie associated Miley's milk with sex and it had become an aphrodisiac for him; whenever he fed Charlie would develop an almost instant erection. \n\nMiley sighed contentedly at the release of pressure that had built up in her breasts. Charlie hadn't fed from her that morning, which he often would do to help stimulate her production. \"Baby, you're making me so wet... I love it when you suck on my tits like this.\" \n\nWhen her left breast went dry Charlie switched to the right. \"Me too, I'm so fucking hard right now,\" he whispered before beginning to coax the second nipple. \n\nMiley kept sliding her ankle against Charlie's erection, \"You love Mommy's milk, don't you... you love sucking on mommy's tits every night.\" \n\nCharlie nodded and voiced a muffled affirmative as he sucked her milk. His hips began thrusting lightly, dry humping his erection against Miley's leg. \n\n\"Damn, baby. You're big dick is like a rock against my leg. Let me feel it. Let me feel how hard it is before you stick it in me.\" \n\nCharlie pulled away from her nipple, which dribbled out a few more drops that slid down the curve of Miley's breast. Licking his lips, he slid his body next to hers so that his bobbing erection was within Miley's reach. She clutched for it, trying to wrap her fingers around its girth. The throbbing shaft felt like steel in her grip; like ten inches of indestructible sex. \n\nMiley moved her hand to pump him with masturbating strokes. \"Are you going to fuck me with this big thing?\" she asked in a teasing tone. \n\nCharlie nodded and kissed at Miley, sucking on her lower lip. \n\nShe smiled and could taste the flavor of her milk on Charlie's lips. Miley kissed him back and tilted her head when Charlie's lips moved towards her neck. \"You're such a naughty boy, sticking your gigantic cock into me every night. I bet you want to fuck me really good, don't you? Do you want to feel your cock penetrate my womb, Charlie? Huh? Do you want to fuck me so deep you can feel my cervix?\" \n\nCharlie groaned with desire as he kissed at Miley's neck and nibbled on her earlobe. His cock pulsed in her hand with every word of dirty-talk. \"I need to be inside you,\" he whispered against her ear, \"I want to be inside you right now.\" \n\nMiley squeezed his shaft tightly, right beneath the head, forcing a dollop of clear pre-cum to ooze from the tip. \"Not yet,\" she said, using a fingertip to gather up Charlie's fluid and lift it to her mouth. She licked his essence and sucked on her own finger, resuming her slow stroking motions. \"Such a dirty boy,\" she teased with a coy grin, \"Humping into me, making me take your huge cock. Are you going to cum inside me, too? Huh, Charlie? Are you going to pump me full of all your nasty goo?\" \n\n\"Oh god,\" Charlie moaned and began rolling over, unable to take any more of Miley's teasing, erotic talk, \"I fucking need you, right now.\" \n\nMiley didn't resist. Her legs parted and her arms curled around Charlie's neck. A whimpering gasp escaped her lips when she felt the presence of his erection push into her sex, a feeling she never grew tired of. Droplets of milk occasionally leaked from her and Miley hefted her breasts to lap at them, stretching her tongue out to lick one nipple and then the other. Charlie's humping pace quickly intensified as he watched Miley clean her own breasts. \n\n\"That's so fucking hot,\" Charlie gasped, working his cock deeper with every thrust, \"Suck on your own tits for me, Miley.\" \n\nEager to please, Miley pushed one of her breasts up and dipped her chin in order to get the nipple between her lips. She sucked and licked on it until her stream began anew and began decorating her mouth, droplets of it falling from the corners of her lips and dribbling down her chin. \n\n\"Oh fuck yeah,\" Charlie loved it, humping himself into her with a grunt. \n\nMiley felt him penetrate her depths and gasped at the sensation, letting go of her breast in order to reach out and clutch at the plush comforter beneath her, needing the support of anything to ground her against the immeasurable pleasure. Charlie's hands had slid beneath her and were grasping her ass with kneading fingers, lifting her pelvis onto his crotch in order to achieve maximum penetration. Her spread legs were bent at the knee, her ankles dangling and bobbing at Charlie's sides. \n\n\"Your cock is so fucking big,\" she moaned, \"Fuck, Charlie... oh fuck. Charlie... I can feel you in my tummy, oh my god, fuck me, fuck your big cock into me harder... oh fuck!\" \n\nMiley's fingers squeezed and clawed at the bed covers. Her eyes clenched shut and her jaw fell open. \n\n\"...gonna cum...!\" she squeaked, \"...make mommy cum...\" \n\n\"Cum on my cock,\" Charlie instructed her, \"I want to feel your cunt cumming all over my cock.\" \n\nMiley squirmed and writhed at the deep penetrating thrusts, \"Oh Jesus, Charlie!\" \n\nWith a gasping, labored breath Miley began to orgasm. Her entire body tensed as the waves of pleasure roared through her body, causing her ankles to lock around the small of Charlie's back. One of her arms remained outstretched on the bed, clutching, but the other went to Charlie's smooth chest and her fingers splayed against his skin. \n\nCharlie was fucking her with such a furious intensity that his cock sprang free from Miley's sheath during the chaos. The hand on his chest immediately dropped and Miley grabbed his shaft, pressing it against her slit to generate friction on the clitoris. \n\n\"Oh god,\" she moaned, humping herself against the underside of Charlie's cock, right at the base of the shaft above his hanging scrotum, grinding her cunt and extending her orgasmic bliss. \n\nCharlie kept thrusting too, sliding his cock against Miley's dripping slit. He grabbed at her breasts, squeezing them and kneading his fingers into their milk-soaked skin. \n\n\"Cum on me,\" Miley whimpered. \n\n\"...so close!\" Charlie gasped. \n\nMiley pumped her fist, masturbating him against her sex, \"Cum on me, Charlie. Shoot your filthy goo all over me.\" \n\n\"Fuck,\" Charlie grunted, \"Oh fuck, Miley... jerk me off. Jerk me off, baby...\" \n\nHis cock seemed to inflate in Miley's hand, turning into a rod of granite, just as it always did when Charlie was near orgasm. Miley squeezed her fist as tight as she could near the top of his shaft, halting the flow of semen halfway up. \n\n\"OH GOD,\" Charlie nearly yelled at the unimaginable pleasure, the boiling heat of his cum filling his cock with pressure. \n\nMiley held him there, as close to the edge of shooting that Charlie could possibly be. His body shook with a massive spasm and he nearly collapsed on top of her. Unable to contain it, Miley released her grip and let loose an eruption unlike any other. \n\nSemen flew through the air to land on Miley's face, hot cum splattering across her nose and cheeks. Her fist began stroking him rapidly and ropes of the steaming white fluid ejected over and over, landing across her breasts and tummy. Charlie's hips were bucking uncontrollably into Miley's hand as she jerked him off, coating her naked body with his pleasure. \n\n\"Oh fuck,\" Miley marveled at it all, \"Charlie, you're fucking cumming all over me.\" \n\nCharlie bucked and gasped until his semen slowed to a thick ooze dripping from the tip of his cock, falling as clumps into Miley's trimmed patch of pubic hair. She slid her grip up Charlie's shaft, coaxing the last of it out of him and letting it hang from her fingers. \n\n\"God damn,\" Charlie breathed. \n\nMiley giggled at the wads of cum stretched across her torso and face, \"Look at what you did to me.\" \n\n\"That was so fucking intense, the way you squeezed my cock like that. It made my orgasm... I don't know how to describe it. It almost burned in me, like a volcano.\" \n\n\"I read about it in Cosmo,\" Miley informed him. \"There was this article... '14 Ways to Give Your Man a Better Orgasm'... I had already done the other thirteen, so I figured I'd try this one.\" \n\nCharlie laughed, \"You're so amazing, God I love you.\" \n\nMiley grinned, \"I know you do, baby. I love you too. Now be a sweetheart and get me something to clean up with?\" \n\n======= \n\nSitting at a small round breakfast table on the far side of the kitchen, Gwen was in her pajamas playing with letter blocks. She had successfully spelled her name G-W-E-N and beamed with delight, \"Look, mommy!\" \n\nMiley, dressed in a long fluffy robe with her messy waves tied back into a pony tail, was standing by the long kitchen counter near a toaster. She glanced over to the table and smiled, \"Did you spell your name, honey?\" \n\n\"Daddy showed me how,\" Gwen informed proudly. She started grabbing more blocks and her cute features narrowed with concentration, \"Mommy? How do you spell 'invulnabilty'?\" \n\n\"Invulnerability,\" Miley corrected her pronunciation. Her own face scrunched as she tried to picture the word, \"Um... I'm not sure. I had no idea that word even existed until I started dating daddy. It starts with I-N-V...\" \n\nFrozen waffles popping out of the toaster distracted Miley and she plucked them out onto a plate, spreading some peanut butter onto them. \n\nGwen stared at her collection of letters, \"Which one is vee?\" \n\n\"The one that looks like a triangle,\" Miley said, reaching for a bottle of syrup. \n\nA voice suddenly called from the front door, \"Hey, is anyone home?\" \n\n\"In here,\" Miley called back. ",
        "Brian appeared, dressed in a pair of jeans and a tee-shirt emblazoned with the Avengers insignia. \"Hey beautiful,\" he smiled. \n\nMiley grinned at him and leaned into a kiss on her cheek, \"Hey, neighbor.\" \n\n\"Unca Brian!\" Gwen beamed. \n\n\"There's my girl,\" Brian moved from mother to daughter, kissing Gwen on her cheek as well. \"What are you doing?\" \n\n\"Tryin' to spell 'invulnabilty',\" Gwen told him. \n\n\"Whoa, that's a big word for such a small girl.\" \n\n\"I'm not small,\" Gwen frowned, \"I'm four!\" \n\n\"My mistake,\" Brian sat to help with the letter blocks. \n\n\"Charlie's in the shower but he'll be ready in a bit.\" Miley delivered Gwen's breakfast to the table, \"You want some waffles?\" \n\n\"Nah,\" Brian shook his head, \"My gorgeous bride made me some eggs just a few minutes ago. Thanks, though.\" \n\nMiley nodded, caressing Brian's shoulder, \"She's still coming over to go shopping with Gwen and I, right?\" \n\n\"Yeah, she'll be ready in a bit.\" \n\nGwen stabbed at a bite of waffle with her fork, \"Mommy are we going to the mall?\" \n\n\"Yes, honey. We need to get you some new clothes before you start pre-school.\" \n\nGwen chewed, \"Can I get a new toy?\" \n\n\"We'll see,\" Miley smiled at the fact that Gwen already had peanut butter on her chin. \n\nBrian gave up on trying to spell invulnerability, \"You're going to be starting school already?\" \n\nGwen bobbed her head, taking another bite. \n\n\"I bet you'll be the smartest one there. None of the other kids will even know what invulnerability means. Hell, I'm not sure I even know what it means.\" \n\nMiley slapped Brian's shoulder, \"Language.\" \n\n\"It means you can't get an owie,\" Gwen informed him knowingly. \n\nCharlie walked into the kitchen pulling a tee shirt over his head; his had the X-Men insignia. He walked to Miley and kissed her on the same cheek Brian did, \"Hey guys.\" \n\n\"Morning, Daddy,\" Gwen ate. \n\n\"What's up, dude,\" Brian greeted. \n\n\"Hey, baby,\" Miley kissed him back, \"You want some breakfast?\" \n\n\"Nah, I'll eat later,\" Charlie sat next to Gwen, seeing what she had been trying to spell and finishing her work with the required blocks. \n\n\"Look at you two,\" Miley smirked at her husband and Brian in their comic book tee-shirts, \"Neither of you have changed an ounce since high school.\" \n\nBrian cast a concerned looked down at himself, \"Do I look like I'm gaining weight?\" \n\n\"Relax,\" Charlie told him, \"I think she means our fashion sense. By the way, Sam called last night. HBO says they need the season three scripts by next Friday.\" \n\n\"We better get to work then,\" Brian nodded. \n\n\"Go ahead,\" Miley encouraged them, \"I'll bring some sandwiches and sodas up later.\" \n\n\"You're the best,\" Brian kissed Miley again as he and Charlie rose to head upstairs to Charlie's office. \n\n\"And us girls better get dressed,\" Miley told Gwen, wiping her daughter's chin with a paper towel. \n\n\"Mommy? Can Gramma come to the mall with us?\" \n\n\"I don't see why not,\" Miley kissed her forehead, \"Do you want to call her after breakfast?\" \n\nGwen bobbed her head excitedly. \n\nAn hour later, after some turkey sandwiches and Mountain Dews were delivered to the boys, and a call was made to Grandma, mother and daughter walked out of the house together. Miley was dressed in a pink track outfit that seemed a size too small the way it bared the tops of her sexy hips and mid-riff. Gwen was wearing a blue floral sundress with a white ribbon in her hair, the color and waves matching Miley's curly tresses like a mirror image. \n\nHand-in-hand they walked towards the house next door, where another twenty-five year-old woman was coming out the front. \n\n\"I'm coming,\" she called, her voluptuous form six months pregnant and clad in a simple pair of jeans and a stylish blouse. \"Sorry I'm running late... I was on the phone with my doctor setting up an appointment for later this week.\" \n\nGwen skipped towards her excitedly. \n\nStacy scooped Gwen up into her arms, \"Oh my gosh you're such a big girl! Did you grow again last night?\" \n\nGwen giggled, \"I dunno.\" \n\nStacy smooched her and held Gwen on her arm. \n\n\"Hey, Stace,\" Miley smiled, \"You look glowing this morning.\" \n\n\"I feel like a stuffed pig, I'm getting so fat.\" \n\n\"You're pregnant,\" Miley reminded her, \"You look beautiful.\" \n\nThe two women kissed each other's cheeks in greeting, Gwen between them. \n\n\"Who's driving?\" Stacy asked. \n\n\"I wanna drive!\" Gwen proclaimed. \n\n\"Not until you're thirty,\" Miley declared, digging in her purse for keys, \"We can take my car.\" \n\nStacy carried Gwen towards an SUV parked in Miley's driveway, \"What are our husbands up to?\" \n\n\"They're supposed to be plotting for the show but when I went upstairs they were in the middle of an argument about who would win in a fight between Iron Man and somebody called Rocket Raccoon.\" \n\nStacy rolled her eyes. \n\nMiley opened the car door for them, \"We need to stop by Charlie's parent's on the way; Gwen invited Olivia to come with.\" \n\n======= \n\nCharlie's upstairs office was a converted bedroom filled with movie and comic book posters, a large computer desk, a couch, two chairs, and a coffee table full of empty soda cans. One entire wall was filled with story boards, featuring Brian's artwork and visualizing the stories they were plotting. As writers and producers of their own television show, Charlie and Brian had spent many long days in the room working together. \n\nThough, at times they could become distracted. \n\n\"...but he's just a raccoon. No super powers or anything like that.\" Brian threw his arms up, \"There's no way he could defeat Iron Man!\" \n\n\"But he's really smart,\" Charlie argued, \"I mean, Rocket is a wiz with technological gizmos and stuff. Don't you think he could come up with a device to disable Iron Man's armor? He's got, like, space tech and stuff.\" \n\n\"Rocket is smart,\" Brian conceded, \"But do you really think he's smarter than Tony Stark?\" \n\nCharlie considered that, \"No, I suppose not.\" \n\n\"Ha!\" Brian grinned in victory. \n\n\"Okay, okay, what about Groot? Groot could totally take out -\" \n\nThe doorbell rang, interrupting the argument Charlie was about to make. \n\n\"Who's that?\" Brian wondered. \n\n\"I don't know,\" Charlie rose. \n\nBrian followed him out of the bedroom to answer the door. \"I need a break anyway,\" he said, even though they hadn't accomplished a thing other than eating Miley's sandwiches and determining Rocket Raccoon could not defeat Iron Man in a fight. \n\nCharlie opened the door to a portly-looking young man in a beard and an untucked tee-shirt with a jelly stain on it. The source of the stain, a half-eaten donut, was in one hand; a Styrofoam cup of coffee was in the other. \n\n\"Hey guys,\" Theo greeted jovially. \n\n\"Hey Theo,\" Brian lifted his chin, \"What's up?\" \n\n\"Come on in,\" Charlie invited. \n\n\"Did you guys see last night's episode of Star Trek the Third Generation?\" Theo asked as he stepped into the house. \n\nCharlie shook his head. \n\n\"I did,\" Brian grinned, \"That Klingon invasion was cool.\" \n\n\"I know,\" Theo beamed, \"Right?\" \n\n\"I've never watched that show,\" Charlie commented, \"I just can't buy Christian Slater as a Starfleet Captain.\" \n\n\"Oh he totally kills it, dude. He's awesome.\" \n\nTheo's head bobbed in agreement. \n\nCharlie shrugged, \"I guess I'll always be a Shatner guy.\" \n\n\"So look,\" Theo licked his fingers after finishing his donut, \"I know you guys are super busy, but I wanted to ask if you'd come to the Magic: the Gathering tournament we're having at the House of Spandex on Saturday night. If people knew either of you were going to be there we'd have a packed house.\" \n\n\"Can I bring Gwen?\" Charlie wondered. \n\n\"Sure, man, it's a family-friendly event.\" \n\n\"I love Magic: the Gathering,\" Brian agreed. \n\n\"Awesome,\" Theo gestured, nearly spilling some coffee. \n\n\"Chip won't be there, will he?\" Brian asked. Brian and Chip had remained at odds over the years, as Chip had never quite gotten over his infatuation with Stacy - even after she had married Brian. \n\n\"Nah,\" Theo shook his head, \"He's still in rehab.\" \n\n\"Again?\" Charlie sounded surprised. \n\n\"Third time's the charm I guess,\" Theo sighed. \"Well, I gotta get going and open up the comic shop. I'll see you guys Saturday!\" \n\n======= \n\nOlivia took a moment to sit down on a bench near the young girls department at Macy's. \"I think I need a nap,\" she declared. \n\nMiley stood a few feet away looking at clothes for Gwen and grinned, \"Giving up already?\" \n\n\"I don't know how you do it,\" Olivia marveled, watching her granddaughter scurry around the store with Stacy in tow, \"I don't remember Edward or Charlie being such a handful. Where do you get the energy?\" \n\n\"I do a lot of cardio,\" Miley remarked, holding up a little yellow dress, \"What do you think of this one?\" \n\n\"Oh that's cute,\" Olivia liked it. \n\nMiley trusted her mother-in-law's opinion and put the dress in her shopping basket. \n\n\"How's your father doing?\" Olivia suddenly asked. \n\n\"He's fine,\" Miley joined her on the bench, setting her basket on the floor next to her feet. \"I miss him. Ever since he and Haley moved back to Miami I don't get to see them as much as I'd like, but they come up at least once a month to spoil Gwen rotten.\" \n\n\"Those two are such an odd pairing,\" Olivia mused, \"I'm surprised they've managed to stay together this long.\" \n\nMiley let out a quick laugh, \"Tell me about it. They've surprised everyone. I mean, they've split up about a dozen different times but they always seem to gravitate back to one another.\" \n\nOlivia asked delicately, \"What about Victoria?\" \n\n\"She sends a card every year for Gwen's birthday,\" Miley replied indifferently, \"But I haven't seen her since before Gwen was born. It was that day you and I came here, to the mall, remember?\" \n\n\"Don't you think Gwen should get to know her other grandmother?\" Olivia suggested, \"Before it's too late? When Gwen gets older she may resent you for keeping her from Victoria.\" \n\nMiley trusted Olivia completely and often relied on her mother-in-laws sagely wisdom. She considered Olivia's advice but decided to trust her own judgment when it came to her mother, \"It's my job to protect Gwen from the evils of this world.\" \n\nOlivia chuckled at Miley's choice of words, \"Aren't you being a little over-dramatic? She can't be completely bad, she raised you after all?\" \n\nMiley freely admitted, \"I was a spoiled brat before Charlie and I started dating.\" \n\nOlivia agreed, \"You were... willful. But there was a strength in you, Miley, even as a teenager. I remember you showing up at my door when your mother was trying to keep you and Charlie apart. I saw then that nothing could deter you when your mind was set. I admired that about you. I believe you got that from Victoria.\" \n\n\"Maybe,\" Miley remained adamant, \"But Victoria has different values. Money and reputation are more important to her than things like love and compassion. She was willing to destroy the love Charlie and I share because he didn't fit within her social ideals. I don't want someone like that having a significant influence on Gwen, I won't. I want Gwen to grow up to be a kind person, like her father and Grandma White.\" \n\nJust then, like a ball of limitless energy, Gwen came tearing towards the women. \"Mommy!\" she squealed excitedly, \"Mommy! Look!\" She was waving a packaged toy in the air. \"Can we get this?\" \n\nStacy came trotting after looking out of breath. \"I'm too pregnant to be chasing after this little girl, can someone else take over?\" \n\nOlivia grinned and scooped Gwen into her lap. \n\nMiley looked to Gwen's toy and saw a Captain Darkness action figure, \"Another Captain Darkness toy? Honey, I just bought you one last week.\" \n\n\"But this one's for Daddy,\" Gwen complained, \"He doesn't have a Cap'n Darkness toy and I wanna give it to him as a present but I can't because I don't got no money.\" \n\nMiley and Stacy both looked as though their hearts melted from Gwen sentiment. \n\n\"You don't have any money,\" Olivia corrected her granddaughter's grammar, smiling at Miley to let her know she had already succeeded in raising a kind-hearted daughter. \n\nGwen nodded in agreement, \"I don't have any money.\" \n\n\"Well,\" Miley pushed a tear from her eye before opening her purse, \"How about I give you some money and you can buy whatever you want with it? You can give it to the cashier and everything.\" \n\nGwen squirmed out of her grandmother's lap, \"Really? Then I can be just like you, mommy.\" \n\nStacy stifled a laugh by covering her mouth, \"Yeah, she's been good at giving cashiers money since we were about twelve.\" \n\n======= \n\n\"... and then he can be fingering her and sucking on her tits when Captain Darkness bursts through the door.\" \n\nCharlie offered Brian a dubious look, \"I don't know man, that's pretty pornographic.\" \n\n\"It's not porn,\" Brian argued, \"It's HBO.\" \n\nCharlie thought back to some of the other shows and the graphic content he had seen on the network, \"Yeah I guess you're right. Besides, Miley keeps telling me the show needs more sex. I'll fit into my re-write of episode ten's script. Can you storyboard it?\" \n\n\"Yeah I should have time tomorrow. I love drawing naked chicks.\" \n\nCharlie grinned. \n\nBrian glanced at the face of his cell phone which displayed a clock, \"Speaking of time, I better go. The girls will be back any minute and I promised Stace I'd make dinner tonight.\" \n\n\"Yeah, all right, brother,\" Charlie rose so the two could man-clasp, \"I guess I'll see you Saturday night at the comic shop.\" \n\nAfter Brian left Charlie returned to typing out a script at his computer, but he quickly noticed the silence. He had grown accustomed to being surrounded by family at all times, which included Brian and Stacy. He smiled, reflecting on what he once was - the hopeless high school geek who wondered if he'd ever have a girlfriend. But Charlie had married to the most beautiful girl from school, he had a daughter that was the light of his life, and he was a millionaire doing a job he had always dreamed of. \n\nThe drama of his teen years were long gone. He no longer worried about bullies like Brock, or crazy psychos like Darla. He didn't stress out about his parents (or hers!) catching him and Miley having sex. Miley was completely devoted to him and she no longer needed to make him jealous by dating guys like Adrian or Brett. Stacy and Brian were happily married, expecting a child, and no longer broke up every two weeks. Charlie didn't miss any of it. He was happy. \n\nAnd then the silence was broken by the adoring voice of a four-year old girl who loved her father, \"Daddy! Daddy! We're home! Come look at what I got you!\" \n\nCharlie smiled, saved the document he was working on, and rose to meet the rest of his perfect life. \n\n======= Epilogue ======= \n\nStaring at herself in the bathroom mirror, Miley pulled a brush through her dark curls. Gwen was beside her, kneeling on the sink counter, mirroring Miley's every move with a small brush of her own. \n\n\"Mommy?\" the four year-old asked. \n\n\"Yes, sweetheart?\" \n\n\"How did you and daddy meet?\" \n\n\"Um,\" Miley blinked, recalling events that took place in a high school bathroom, \"We went to school together.\" \n\n\"Was I there?\" Gwen wondered. \n\nMiley smiled, \"No, you came along later.\" \n\n\"Where was I?\" Gwen seemed confused. \n\n\"You weren't born yet. You didn't start growing inside me until we were all done with school.\" \n\nGwen seemed astonished, \"I grew inside you?\" \n\n\"Yep, right after Daddy put you in me. I looked like Aunt Stacy, with a big round tummy cause you were crawling around in there.\" \n\nGwen beamed a grin, \"Daddy put me inside you?\" \n\n\"Mm-hmm,\" Miley set her brush down and reached for some moisturizer to rub into her cheeks. Of course, Gwen wanted some too and Miley squirted a little into her palm. \"That's why I'm always going to love your father, forever and ever, because he gave me you - and I love you more than anything else in the world.\" \n\n\"Daddy sure is nice,\" Gwen remarked. \n\nMiley laughed, \"He sure is.\" \n\n\"I hope Aunt Stacy and Unca Brian have a boy.\" \n\n\"Why is that, honey?\" \n\n\"So I can get married and have babies too,\" Gwen reasoned. \n\nAll of Miley's teenaged sexual adventures suddenly flashed before her eyes, \"Forget it, young lady. You can't date any boys until you're thirty.\""
    ],
    "authorname": "frozenhero1",
    "tags": [
        "cum play",
        "dirty talk",
        "breast feeding"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/charlie-and-miley-ch-06"
}