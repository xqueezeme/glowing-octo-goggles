{
    "title": "Play Testers Wanted Pt. 13",
    "pages": [
        "Amethyst Sunset:\n\nThe world took nearly seventy-two hours for a full rotation. I sat on the beach alone watching the sun slowly sink below the horizon. Because of the leisurely pace I was able to observe the sunset through my mask in various spectra. It was my latest way of distracting myself from the growing negativity between the two princesses. My playtime with Ariel and Elsa was short lived and I did not mind it at all. They were attempting to repair the damage between themselves and I gave them all the space and time they required. I spent my time in meditation and while they were occupied, I explored the planet and star system via astral projection. \n\nI found the ruins of the people that once inhabited this place. They were a cunning lot with a highly evolved understanding of engineering and stonework. This world was much different than many I had seen so far. The Heart of Fire as the former natives called their parent star was the same size as Sol the yellow star Earth orbited so serenely. But it burned with a bloody scarlet illumination and gave off strange radiation that may or may not have led to the extinction of sentient life in this system. I did not know the effect of long-term exposure, but I was not about to push my luck.\n\n\"We must not tarry in this place much longer,\" I said as Ariel cooked fish she had caught over a fire I had conjured. \"This sun is none too good for the likes of us.\"\n\n\"Where are we going next?\" Ariel asked and I had no answer for her. \"You aren't going to leave us here?\"\n\n\"No. I will open a portal to Earth for you. We part company here. I have something I need to attend to before I return home. What is it?\" I turned to face Elsa. Her rage flared to the surface and she laid out a litany of vitriolic curses at me having slept with Ariel and her. She put more emphasis on Ariel though. Her possessiveness took over once more. Sharing was not caring it was taking advantage. \"Hey, all of those were instigated by your girlfriend.\" I said emphasizing the word 'your' to mark her overly possessive nature.\n\n\"You don't take responsibility for any of the women you've fucked, do you?\" Elsa asked.\n\n\"I do indeed. I have made you climax a dozen times. I think Ariel came at least twice that.\" I said and Ariel giggled just adding fuel to the flames of jealousy. The temperature plummeted and Left threw up a defensive shield instantly.\n\n\"Stop this!\" Ariel screamed tears streaming down her cheeks before freezing there. \"I'm done! Go!\"\n\n\"You heard her,\" Elsa snarled. \"Leave!\"\n\n\"I wasn't talking to him.\" Ariel continued. \"This jealousy is impossible! I am not a child. I am not a prize to be owned. I am my own person and I have made my decision. Until you master yourself or find some measure of inner peace, I don't want to see you anymore.\" Elsa glared at me and I kept a neutral expression on my face. \"No! Do not blame him, if you want someone to blame it is me or yourself. Ghost has no bearing on my decision. You did this. You drove a wedge between us! I love you and I always will... but... while I am with you, I feel like I am suffocating!\"\n\n\"I... I am sorry. I didn't mean to...\" She said as I conjured a portal back to Earth. Elsa stumbled to her feet and with a single backward glance walked through it. Ariel let out a sigh of relief as I closed the gate.\n\n\"We better hurry and get whatever needs doing done.\" Ariel suggested and I smiled. \"You lied!\"\n\n\"I might have stretched the truth. Traci just finished a full analysis on the solar radiation. My first assumptions were wrong. The sunlight is not dangerous. I've explored several population centers, but I haven't had a chance to investigate close up, yet.\" I explained and she took my arm and hugged it.\n\n\"Can I cum?\" Ariel asked batting her eyes at me.\n\n\"Like gang busters, and sure you can accompany me if you want.\" I chuckled. \"You tell me if you start feeling strange in case, we were wrong.\"\n\nWe left our camp after dinner. I created a levitation disk and we used that to fly to the nearest abandoned settlement. We sat on the flat surface and circled the strange towering structures letting Ariel make her own guesses.\n\n\"They don't look damaged, were they built like that?\" She asked and I shrugged.\n\n\"I have no idea.\" I replied as we made one last circuit of the largest of this town's structures. It stood five hundred feet high and divided into three separate sections. All three parts were formed of the same materials, but each had its own architectural style. The same was true of the other tower like buildings in the town. The lower portions were the widest and appeared sturdier than the other two. The middle section hovered twenty feet or so above the base. The gap was highlighted in the lowest floor of the middle with a gently angled landing area or ramp. The mid portion was enclosed like the lower and was taller yet thinner. The upper portion was the strangest of all. It hovered above the middle and was open to weather and sun. The few exterior walls were decorated with horizontal bars and ledges. \"Weird.\"\n\n\"It looks like red granite,\" Ariel remarked. \"What is that shiny stuff?\"\n\n\"I don't know. That was one of the reasons I wanted a closer look. I think it has to do with the gravity defying effects of the hovering sections.\" I stated as we landed on one of the uppermost ledges in the top of the tower. \"Careful, it is slick as shit!\"\n\n\"This material is hydrophobic,\" Ariel said as she ran a hand against it. \"Water would roll off it like a duck's back and look at those channels. You think it is for collecting rainwater?\"\n\n\"Makes sense to me. A society needs fresh water. Why is it open like this?\"\n\n\"It serves the Hah-Wah Master Svartalfar!\" A voice speaking the dark elf language said a moment before a holographic image appeared in the air before us. I could not see what was projecting it and the quality of the hologram was extremely lifelike. The figure was roughly humanoid with elongated limbs and digits. Its arms were crossed in front of it exposing its thick transparent wing membranes. The membranes ran from wrist to ankle and were flexible enough for it to move its arms with little limitations. \"My form is that of the Hah-Wah Master. How may I be of service?\"\n\n\"Why do you call him Master and Svartalfar?\" Ariel asked and I removed my mask. I had reverted to my dark elf form unconsciously. \"Oh! Why Master then?\"\n\n\"This world was part of the dark elf protectorate.\" The hologram explained. \"We owed everything to the great and all powerful Svartalfar!\"\n\n\"Propaganda. Tell me about this place. Why are the buildings constructed like this?\" I asked.\n\n\"Simplicity itself. There were three sentient species that coexisted here. The Hah-Wah, the Kreffa, and Sash-Sish lived in harmony.\" It explained and displayed two other holograms. One was of a bipedal creature whose closest relative that I could recognize was a flying squirrel. It stood upright and possessed wicked hand and foot claws. They were cute with their large eyes for nocturnal activity and chubby cheeks but there was also a keen intelligence in their eyes. When they looked at you, they were appraising you with a grim determination. They had glide wings like their Terran cousins and perhaps that was why there was that gap between the middle and lower sections. They could make their way to the top of the base and then glide up to the mid-section. The other image was serpentine with a heavily armored dorsal side and a gleaming yellow ventral belly. They possessed two sets of three eyes on either side of their heads. Like most snakes their lower jaws could extend and allowed them to eat larger prey whole.\n\n\"Tell me about them,\" I asked fascinated how three such distinct races could live in peace.\n\n\"The Sash-Sish were a powerful psychic race. Their main abilities were telekinesis, pyrokinesis, and telepathy. Though individual gifts varied most possessed those three talents at least. They were builders, architects, and scientists. The Kreffa were by far the most intelligent of the three races. Their intellect was superior, and they were scientists, mathematicians, and doctors. They discovered the secrets of the unique elements and alloys abundant upon this world. Chief among them was scarlet shalk and the silver blue Xenium.\"\n\n\"Xenium! Holy shit!\" I exclaimed while Ariel looked at me confused. \"Xenium possesses anti-gravity qualities. That is how their buildings float.\"\n\n\"I've never heard of it.\" Ariel admitted. \"They seem to have it and to spare.\"\n\n\"There is a storeroom of unprocessed Xenium below your feet.\" The hologram declared and I felt my jaw drop. \"You'd better hurry. I have alerted your kinsmen. They should be here in a few hours.\"\n\n\"Kinsmen! Why the fuck did you do that?\" I snapped. \"God damn it all to hell! Display location of storeroom now!\"\n\n\"Access granted. Marking your HUD with location. I am sorry if I failed you.\" The hologram said as I touched Ariel's shoulder and teleported to the ground. The iris shaped main door opened and we raced inside. If I knew the dark elves, they would show up sooner than later. We dashed into the bowels of the structure as I followed the arrow. The damn hologram followed us asking how it had malfunctioned.\n\n\"What happened to the people here?\" Ariel asked and the hologram answered with grim solemnity.\n\n\"They bombed the planet with a virus that wiped out all intelligent life. All we wanted was independence.\" It said. \"Your Master doesn't sound like a typical dark elf.\" It said addressing Ariel.\n\n\"He isn't. He is kind and gentle.\" She replied.\n\n\"No wonder he fears the others.\" The A.I. stated. \"I am sorry.\"\n\n\"Did any of the people here survive?\" Ariel asked and saw its expression. \"Did any of the three races survive off world?\"\n\n\"Yes. I will not reveal their location for fear of retribution.\" It replied.\n\n\"I understand.\" Ariel said her voice losing volume and intensity. \"Your people are monsters.\"\n\n\"I know.\" I said as the massive door slowly opened revealing the warehouse sized storeroom. \"I sense a racing yacht in my future.\"\n\nI grabbed as much as my inventory allowed. Two thirds of the space went to the Xenium and the rest went to the scarlet shalk. Its natural hydrophobic properties made it perfect for the exterior of a ship. The planetary sensors picked up a single craft leaving a dark nebula in system that I had not noticed before. Fuck! \n\n\"Time to go!\" I growled as I used the stone on the mask to locate and teleport to this world's nearest short cut. \"Still want to come with me?\"\n\n\"Where does it lead?\" Ariel asked.\n\n\"I have no clue.\" I admitted. \"I don't care.\"\n\nBlind Leap:\n\nThe transition between worlds was interrupted with a flickering message in bright blue letters.\n\n'Player Character Redirect - Home Base Prior to Mandatory Exit.'\n\nIt was time to leave the game and face reality. Where was my body? I would be finding out whether I liked it or not. Had the trio from the Order told the truth? Or was my body where I had left it in the champion suite on Numenor property? The interior of Snow's former tower was drastically changed. It was larger and crowded with NPC's. Yautja patrolled the corridor armed to the teeth. Where the hell did, they come from? One of them had an Exomorph companion. Had my Exomorph had a litter or two? I walked along the corridor and the doors were all customized to their occupants. The occupants were every female character I had slept with. So, now I could come to my tower and spend time with any or all of them if I chose. I could lean into that.\n\n\"Master of the Tower!\" One of the predators called out in broken English. \"Attention!\" The other Yautja stopped, assumed a ready position, and placed a hand over their hearts. His name and titled hung over his head when I focused on him. When I translated his title it roughly came out protector of the harem. Sweet! \n\n\"You honor our tribe,\" I said, and I sensed a flash of pride from him as well as the other predators. \"Show me to my room,\" I requested, and he gave me a tour of this level ending in the master's sleeping chamber. He opened the double doors and the room was one-part bedroom one-part dungeon. Mystique appeared out of a hidden door and sat on the foot of the bed.\n\n\"Let me explain,\" she said as she patted the spot next to her. I closed the doors behind me and joined her on the bed. Once I sat, I triggered the narrative. \"Welcome back to your tower Ghost Fire.\" She said her voice sounding hollow and emotionless. This was not Mystique. It was just a bot to explain changes in the game. \"Unlike most other players you as... Ghost Fire... have unique characteristics. The first is that you captured Snow White's Tower earlier than any other player. Congratulations! You have earned the title of... Primal Tower... add to that your defeat of... Chthon and his Seneschal... you hold the prestigious title of Prime Mover.\" She paused so I could enjoy the moment. \"You are the first and currently only player to hold that title. Actually, you hold many unique titles.\" She said displaying her first sign of frustration.\n\n\"That's a good thing, right?\" I asked and she visibly flinched.\n\n\"Follow me,\" she said as she stood and opened the secret passage. I loved shit like this. We crept along hidden halls until the sound of hammering grew louder and louder. A short flight of stairs later and we entered a smithy through another secret door. \"Your master blacksmith, Sardior.\" Mystique declared as I watched the tall elf/dragon hybrid breath fire into a crucible.\n\n\"What is he... um she making?\" I asked noting subtle shifts as the smith shifted to adjust to the situation.\n\n\"Trophies for players that make it this far,\" Mystique said as she lifted a lift sheet revealing gorgeous gold rings. \"These require your touch.\"\n\n\"Why?\" I asked and she laughed.\n\n\"You are the only player character that possesses the 'Double Dragon' technique. If a male character wins through to collect their treasure token they can claim a Ring of the Double Dragon. If a female character gets here it acts as a Ring of Futakind.\" She giggled. \"Touch them and the enchantment will be placed upon them.\"\n\n\"Why am I the only one?\" I asked as I touched the rings one at a time.\n\n\"It was Kat's idea. She wanted to reward players for exceptional roleplaying.\" She said. \"If there is any simple object you might require, or a piece of equipment repaired Sardior is your being.\"\n\n\"I can mass produce simple objects or process raw materials into ingots as well.\" Sardior whispered in her sensuous soft style. I touched the bin marked raw materials. The raw Xenium I had recently collected filled the bin and Sardior grinned. \"Gorgeous.\" \n\n\"I'll finish the tour later unless something critical needs attending to. I have unfinished business elsewhere.\" I said my voice cracking and panic creeping in. \"Save game. Exit.\"\n\nA brief flash of white and I opened my eyes. I stared up at a familiar ceiling. I was still in my bed at the Numenor complex. I flew to my feet, raced to the bathroom, and hurled into the toilet. I emptied my bladder before I pissed myself. A moment later I was leaning heavily against the wall as I tripped every monitor observing my vital signs. Three on site doctors raced into my room a minute later one of them carrying a kit. Kat arrived thirty seconds later.\n\n\"What the hell is going on?!\" She yelled. \"Booker?\"\n\n\"He is having a massive panic attack. His hearts are out of rhythm and his blood pressure is in the red. Administrating...\" Was the last coherent thing I heard. I did not dream. I woke in my bed. I was not alone. Teri was manifested in her hard-light form and lay next to me. She looked terrified but her expression changed when I slowly sat up. My throat burned from losing my stomach contents and my chest ached from them stabilizing my hearts.\n\n\"Welcome back,\" Teri declared as she hugged me. \"What happened?\"\n\n\"I was told by what I believed was a reliable source that my body had been moved from here to Eastern Europe.\" I said fighting the tears. \"I was so scared.\"\n\n\"As you can see you are fine.\" She assured me. \"Do you want another dose to calm you? I have been programmed to administer medication or would you prefer a hand job?\" She offered and I laughed despite the stress I was under. \"Ms. Shaw is at the door. She is requesting admittance.\"\n\n\"Come in Kat.\" I called out. The door opened and Kat was not the only one waiting to see me. The rush of bodies poured into the room and half the play testers surrounded my bed. \n\n\"I guess that hand job will have to wait,\" Teri said before vanishing. The roar of laughter filled the room and lightened the mood.\n\n\"Listen, I am touched that everyone showed up, but really I am better.\" I stated but they were having none of that. \"Fine, ask away.\"\n\n\"What happened? Why did you have a meltdown?\" One of the newer play testers asked.\n\n\"How many of you got a chance to play in the cross over event? I asked first. They all had. \"Okay. Since there will be no spoilers,\" I declared with one last look at Kat who nodded that it was okay to continue. \"During my playthrough I ran into three executives that told me some disturbing information. I guess I gave it too much credit. It haunted me until I woke up and found myself here.\" I waited for that to sink in. \"Yeah, they said my body had been taken to Eastern Europe. I freaked. What reason would they have for saying something like that?\" I watched Kat's reaction and I was disappointed in what I saw. Instead of flying off the handle and telling me it was all bullshit she did not show any reaction one way or another. \n\n\"Execs?\" Another face I did not recognize jumped into the conversation. \"How did you know they were big wigs?\" \n\n\"The way they talked and acted. You can add language and how one of them commented on how they didn't hurt while in game.\" I explained and watched them process that. \"The strange thing is that the guys I talked to had bland avatars. I mean brown hair, brown eyes, just plain mundane. That stood out to me.\" I continued and they seemed perplexed. \"When you make an avatar in a game you want something special, right. The other players were gorgeous, handsome whatever, these guys were all plain janes. When they said my body had been moved, I believed them. If it was a sick joke, then they got one up on me.\"\n\n\"Why would they do that?\" Someone else asked.\n\n\"That is what has been bothering me,\" I admitted. \"I'll chalk it up to a prank for now.\"\n\n\"So, tell us, what was your crossover event like?\" Kyanna asked with a curious smile.\n\n\"Well... there were the Three Fords.\" I began and they all looked confused. \"There were three classic Ford automobiles parked in front of the coffee house. Inside were the other three fords, Han Solo, Rick Deckard, and Indiana Jones.\" I stated and they all frowned. I paused and they all urged me to continue. I launched into the three side quests and they hung on every word. I was revealing many of my abilities and I did my best to downplay them. I failed. By the end of it their own experiences were clearly less exciting. \"In the end, I was haunted when I thought of my unconscious body being shuttled halfway across the planet for nefarious reasons.\"\n\n\"You left out saving the lives of those newbie players. The damage could have been anywhere from life altering to life threatening.\" Kat added. \"There are going to be more crossovers. Those will be purely Numenor created events with input from those who wish to use our technology to bring their own legends to life.\"\n\n\"Why does he keep doing that?\" Someone asked and she continued. \"Is your left arm bothering you?\"\n\n\"Oh!\" I gasped and looked down. I was absently stroking the lower portion of my left arm. \"I got something in game.\" I said and looked at Kat and to my surprise she nodded. \"I got an object that replaced my lower left arm and hand. I guess I am still getting used to it.\"",
        "My stomach rumbling ended the question portion of the morning. The others left and I took a quick shower, dressed, and joined them in the cafeteria. I made a note to do more listening than sharing. I was happy to hear there would be more crossovers. I wanted a chance at spending quality time with characters like the Witchblade and other independent creations. \n\n\"One last question,\" Aoki pleaded, and I acquiesced. \"Did you really pickpocket the Batman?\" \n\n\"Sort of,\" I replied. \"I got a batarang off him, but it had a tracker in it. He showed up later not amused to say the least. He removed the tracker and let me keep my trophy.\" Their looks were that of awe but now that I had food in my stomach there were questions from Kat that needed answering in private. Why had Surfer broken off contact? Did she know about the Order? Were a good beginning. Once the meal was over, I asked Kat for some quiet time. She followed me outside to the garden. \n\n\"What is bothering you? Anyone can see something else is going on.\" Kat went right to the point.\n\n\"I can't contact Surfer.\" I stated watching her reaction closely.\n\n\"I know.\" She said. \"I made an executive decision and severed your connection. There are so many of Numenor secrets in her head. I hope you understand.\"\n\n\"Why did you let her and the others bond with me?\" I snapped angry that she would not trust me.\n\n\"Others! What others?\" She asked clearly upset.\n\n\"Wraith for one.\" I informed her and she looked genuinely concerned. \"I guess my other question should remain unasked.\"\n\n\"Ask!\" Kat shouted her patience at an end.\n\n\"Fine, the three guys said they were from...\" I began when the blinding pain robbed me of consciousness.\n\nI woke in game. I was in my bed inside the tower. My HUD informed me where I was and how much time had passed. Two hours since my talk with Kat. \n\n\"Wonderful, just fucking wonderful.\" I snapped. I got out of bed, dressed in only a simple loincloth, and walked around the tower. I visited my private smithy and next to it one of the tower's armories. I looked at the weapons and armors available and those I had not unlocked yet. There were dressing dummies wearing each of my various armor combinations and armed with random weapons. The silver needler caught my eye. I bet I could improve on that. I spent the coin and bought the blueprints for it. Traci displayed it and since I had been wearing a variation of Yautja armor for a while now I thought I would adapt it to that. \"Open up a new file for me.\"\n\n\"Yes boss,\" Traci cheerfully replied. \"What's the plan?\"\n\n\"I am thinking a forearm version of the needler to fit with the predator theme.\" I said as I yanked the holographic parts of the weapon across my virtual workbench. \"Hmm, let's see, pull up the schematics for the forearm blades.\" I directed and spent more coin to access that. The basic blades were simple razor-sharp implements to slice and dice foes. I kept the main housing, slimmed it down for a smaller profile and began seeing what would and would not fit initially. My anger faded as I focused on the task at hand. Soon I had a test model to run through its virtual gauntlet. When it failed, I tweaked until it worked and then looked for any area, I could improve upon it. Damn it, I wanted this fucker to punch a hole in anything I ran up against. \n\n\"Suggestions for ammunition,\" I asked, and Traci listed several options of alloys for various situations. While the prototype needler was being built we tested out her proposals. Along with the crystal and silver ammunition, we produced armor piercing, flechette, and incendiary for a start. All of them possessed the homing technology. Just squeeze off a shot and move along. The projectile is self-guiding and will most likely hit its target and can fire up to 500 rounds per minute. Two hours later I was on the shooting range and practicing. I tied the weapon to my mask and its targeting system. One last tweak and weapon, ammunition, and mask were in perfect symmetry. I set it for single fire and fired off a few rounds. I adjusted the targeting system and repeated the process until I was happy.\n\n\"How many blooded Yautja are in the tower?\" I asked Traci.\n\n\"Twenty blooded and twenty young bloods,\" she stated. \"I even have a side quest if you want to advance some of those young bloods to blooded status.\"\n\n\"Perfect! I really need to fuck some shit up.\" I snapped. \"What is traditional?\"\n\n\"Three. Though rarely does a clan chief stoop to such duties.\" Traci informed me.\n\n\"Clan chief... me?\" \n\n\"The Shadow Fang Clan,\" Traci stated. \"You are in possession of the...\" the last few syllables were unintelligible and unpronounceable by human vocal cords. \"Otherwise known as the staff of god by the Yautja. You brought it back from the Negative Zone.\"\n\n\"Blastaar's Boom Stick,\" I stated. \"It would be fun giving it another run. Pick the best three to come with me. We go a hunting.\" I finished fabricating ammunition, loaded the flechette rounds, and put on the rest of my armor. I felt the rush to purge the anger and fear coursing through my veins. I followed Traci to one of the larger chambers where the off duty Yautja were gathered. At the center of the room stood the three choices for those to join me and be blooded if they survived. The sense of tension was intense, and it was directed at me. The Yautja I had resurrected stood by my side and explained the situation.\n\n\"Clan leader, your troops stand before you.\" He paused and I nodded for him to continue. \"One of your young blood is... displeased with you being in charge. He has issued a challenge.\"\n\n\"I see. I have given him the opportunity to join me for the chance at honor and glory and this is how he repays me.\" I said letting my mask translate for me. The verbal barb struck deep and the blooded among the predators agreed with me. \n\n\"You aren't even one of us,\" the youth stood forth and growled.\n\n\"Motherfucker, I will wreck your shit without the use of weapons.\" I issued the challenge and he flinched. He got what he wanted and had to accept or be cast out by law, Yautja law. He accepted. \"Give us some fucking room!\" I yelled and the others moved to the walls of chamber. I deactivated my weapons but to tip things in my favor I kept on my Asgardian gloves and tripled my dexterity score. I knew that I was already stronger than him. As I formed my strategy three Yautja drones hovered in and took up positions to observe the challenge.\n\n\"The other Clans are watching.\" My second in command declared.\n\n\"I love an audience.\" I replied. So, if this youth managed to beat me, I would lose my title of clan leader, my tower, and likely my life. Shit just got as real as it got. \"Sorry kid, your life just became forfeit. No banishment for you.\"\n\nStealth was discouraged in this sort of challenge but not forbidden. I chose to stand my ground, he did not. He was not stupid. The moment the signal was given he vanished from sight. I closed my eyes and reached out with my other senses. My strategy was simple, work the youth into a fit and he would reveal himself. If I were him, I would go for head or back attacks. He went for the head. The punch made me see stars but nothing serious so far. I still stood and I am sure that pissed him off. The next was a lower back shot that spun me around.\n\n\"Come on kid my little sister hits harder than that.\" I said and laughed. Laughter was a clear sign of disdain and he redoubled his efforts. I watched my stamina bar carefully. I did not want to get staggered or stunned. He struck repeatedly and with each one his scent grew stronger and easier to track. I had what I needed and waited. I dropped into a deeper crouch, wiggled my fingers, and sniffed the air. Here he comes. I felt my body tense in anticipation. He was going for my back this time. I timed my leap perfectly. My wall crawler training made this situation easier. I could have easily reached the ceiling but that would not help me. I hopped over him and as he passed beneath me, I grappled with him. I snagged him by his shoulders, latched on, and body slammed him.\n\nThe floor cracked when he impacted it. I kept a grip on him until I was able to disable his stealth field. His outline flickered but he remained invisible. Fine by me motherfucker, hold onto your lunch I thought as I drove my knee into his lower back with bone breaking force. Everyone heard his cry of pain as his stealth field fluttered and collapsed.\n\n\"Got you!\" I snarled. I tossed him into the air, clasped both hands together, and as he fell to the floor, I slammed them against his upper back. I halted and stepped back as I triggered my own stealth field. It was his turn to worry. He slowly got to his feet. His head swung around as he tried and failed to stand upright completely. He swung his arms blindly around trying to make contact with me and grapple. I used my shapeshifting skill, not listed as forbidden tactics in the Yautja code, and healed most of the bruise damage. My stamina bar went from yellow to green. \"I won't make you suffer.\" I whispered using Kaia-Jutsu to send my voice in all directions. The young blood drew his dagger and a collective growl came from the assembled predators. \"No more fucking around.\"\n\nI tripled my strength using the Asgardian gloves, took careful aim, and slammed my fist into his head. The youth flew back as his body was suddenly imparted with multiple tons of force into maybe four to six square inches of space. He was dead before he hit the ground. The audience gasped and then roared as I dropped my invisibility and thrust my bloody fist skyward. As badly as I wanted to utter some smart ass comment I remained silent. The drones departed as the corpse was removed from the chamber.\n\n\"Well?\" I asked my second in command.\n\n\"They will follow you to hell and back after that display.\" He paused and then added. \"How did you track him while he was cloaked?\"\n\n\"I just followed my nose,\" I replied and told him to have a recruit to fill out the three-man team. \"I need to look over mission parameters and make sure my load out fits the criteria.\"\n\nJerull was a small earth type world orbiting a gas giant. Records show that Jerull was a rogue planet that was captured by its much larger planet millions of years ago. Once it warmed up its ecological cycle began all over again. Jerull acts as a waystation for ships of many different worlds and served them as a neutral party even though it narrowly falls into the border of the Skrull Empire. Jerull has some mineral wealth but nothing unique and the flora and fauna have been carefully maintained by the planet's caretakers. The file hints at the ruins of a previous sentient race but none of those have been confirmed.\n\n\"Your ship and crew are ready Clan Leader.\" One of the other predators informed me. \"The four-man drop pod has been loaded aboard and checks out across the board.\" He stated and I noticed he was young blood.\n\n\"Next time you will accompany me into battle,\" I promised. \"I can see you have a stout heart and a cunning mind.\"\n\n\"I will not dishonor the clan.\" He promised.\n\nI went to the girls before I left and promised them a huge celebration when I returned. They asked what they could do for me until then. I asked them to keep an eye out on the place. It was their home as well after all. I teleported up to my ship and its interior was identical save the sentient tree that was unique to the Star Wars universe. I altered the environment to match the comfort level for the Yautja. My three young bloods arrived and took up their positions. We set coarse for Jerull and activated the Bifrost drive. We would reach our destination after a short jaunt in that space between spaces. We exited and cloaked immediately and set out for Jerull. We were three hours via sublight speed. I did not want to come out too close and give our position away. \n\n\"I am picking up some strange energy readings.\" Traci informed us and displayed the fading power signature. \"It's gone. There are no ships in orbit currently as well as a lack of any artificial satellites. That's odd.\"\n\n\"Inform me when reach orbit, I want to meditate.\" I informed the crew.\n\nI went to the ship's dojo and retrieved the god's staff from my inventory. It seemed only fitting that I utilize it during the hunt. I wanted to get a feel for it and its balance now instead of in the middle of conflict with one or more Xenomorphs. I had never fought one before, this was going to be epic! I spun the staff in my left hand and found the sweet spot. I launched into the eighth style and slipped into a moving meditation. I finished and found all three young bloods watching me.\n\n\"That alone shows your dedication and mastery,\" Kyrense stated his awe clear in his voice.\n\n\"I concur,\" Therente agreed. \"I hope we survive to be further trained by you Clan Leader.\"\n\n\"I will survive if only for that honor.\" Nekende stated quite confidently. \"First blood will be mine.\"\n\n\"Let me see what you can do,\" I said and one by one tapped them for a quick training to pick out anything I could address in one session. \n\n\"We are in orbit.\" Traci announced and like that the training ended. \"No sign of that strange energy signature but uh you'd better come up here.\"\n\nThe four of us rushed to the command deck. Traci pointed and displayed a hologram of the planet beneath us. She displayed a second hologram and held up a hand until her scan of Jerull was complete. Once it was done, she compiled it and showed us the before and after images.\n\n\"Jerull has been subjected to orbital bombardment. There are no surviving cities, towns, or processing plants. The devastation is complete. I get no power readings from the surface but residual radiation from the attack. I can't be positive of course, there is heavy ionization in the upper atmosphere making scans hit or miss.\"\n\n\"Was there a Xeno nest detected before the bombardment?\" I asked.\n\n\"Marking potential drop site,\" Traci said as a green X showed up on both maps.\n\n\"Prep the drop pod, alright heroes it is time to fuck some shit up.\" I stated. \"Let's go.\"\n\n\"Activating sword class drop pod,\" Traci said as she went down the check list. \"I am activating the pod's active armor to keep it from acting up when it passes through that ionized layer. Otherwise you should be good to go. I will not be able to guarantee constant communications. The pod is fitted with a shielded teleport transponder. When you are done activate it and I'll pull the survivors back.\"\n\n\"Don't risk the ship. Stay the fuck in orbit in case whatever did this comes back.\" I ordered her.\n\n\"Order received and acknowledged.\" She stated reluctantly.\n\nThe drop pod was eighteen feet in length and in shape a blend of weapon and flower. The folded petals opened midflight to fire repulsor engines to slow the pod to give us a smooth insertion. The interior of the pod was snug with an advanced deceleration couch to keep us intact when the pod contacted the ground. The four of us entered and the hatches dropped down and sealed. I selected my combat music on the way down. I barely felt anything until the pod struck the ground. There was a slight jarring sensation and the hatch lifted. Outside was the remnants of a one-sided battle. The cratered landscape looked more like the surface of Earth's moon than a waystation. No building or structure survived the bombardment. This was a systematic elimination of all sentient life on this world.\n\n\"Clan chief,\" Therente called out. \"Boot prints.\"\n\nI joined the others by the tracks and examined them. \"Deep. Heavy. Five-man team, see?\" I said pointing out the V-shaped formation. \"These guys are huge! What do think?\"\n\n\"Nine to ten feet tall,\" Therente guesstimated. \n\n\"Is this their ammunition?\" Nekende asked holding up a large caliber casing. \"Jet propelled?\"\n\n\"Who are these guys?\" I asked seeing dozens of casings all over the area.\n\nWe continued as the drop pod closed and camouflaged itself. I set my vision to thermal to see if anyone survived this massacre. So far nothing. Signs of heavy weapons fire were everywhere along with remnants of grenade explosions. Civilian casualties were piled up and burned. Kyrense dashed off and the keen-sighted youth spotted splashes of stonework burned by acid. The soldiers had run into at least one Xenomorph. No sign of the corpse though, had they taken it with them to examine? I would have if I were them. We activated our camouflage and continued. Twenty minutes later we reached the center of town. I spotted a faint blue blip in my vision. Was it a Xenomorph? I pointed and we spread out and approached from different directions. This setting allowed me to see the cloaked youths so that we did not unleash a deadly friendly fire situation. We entered what was left of the building. The figure was trapped beneath a mix of fallen masonry and alloy supports. It was a miracle they had not been crushed under the tons of material. While the crisscrossing beams and portions of walls had not completely collapsed yet, it appeared it was just a matter of time. The question was who or what was trapped.\n\n\"There is a Yautja energy signature. It is one of us, from another tribe no doubt.\" Kyrense suggested.\n\n\"Stand behind me,\" I ordered as I took out the god staff. \"Don't move.\" I called out to the trapped predator. I pumped energy into the staff, and it multiplied it. I focused the area of effect around the trapped figure but directed the shockwave upwards and outwards. If it worked, it would launch the debris away from him in a rather energetic fashion. I put up a force wall in front of me to protect us from the explosion and potential shrapnel. \"In three, two, one...\"\n\nBoom!\n\nThe pressure wave pulverized stone, shredded metal, and if not for the shield we would have been killed outright. A cloud of dust filled the area and out if walked a tall thin figure. I was eager to speak to the lone survivor of the previous Yautja hunting party. The dust settled and there stood an impressively fit, heavily armored female predator. This was no Vanir wearing Yautja equipment, no this was a proper female of the species. She was over six feet in height and yet moved with surprising grace.\n\n\"You are the one they call Ghost Fire,\" she said in greeting. \"I owe you my life.\"\n\n\"Witch!\" Therente hissed but did not attack.\n\n\"Ha, your young blood fears my clan and well he should,\" she laughed. I was in over my head. While my tower was protected by males of the species, I knew nothing about the other side of the coin. Why was he reacting like this? I was afraid to bring it up and reduce my standing with my own clan. \"My name is Isolenti, and I belong to the Astral Hand clan. That fine weapon you used to free me was designed, crafted, and enchanted by our sisters the Moon Blades. Females of our species can use magic and we long ago mastered the blending of technology and magic.\"\n\n\"Oh. Interesting.\" I exclaimed in shock.\n\n\"The fact that you can use that artifact makes you a mage of some caliber, my lord.\" She said the last two words by bowing her head.\n\n\"Well, what happened here? Who bombed this place to rubble?\" I asked ignoring her potential oath of fealty.\n\n\"My team and I were underground when the ground shook, that was two days ago. It took nearly a day to find a way back to the surface after several structural collapses. We had already wiped out the hive here.\" She emphasized that by pointing to runic mark on her mask. \"When we reached the surface, the orbital bombardment had stopped and the aliens that lived here were being hunted and cut down by bipeds in heavy armor.\"\n\n\"Any idea as to their species?\" I asked and she shook her head. \"That strange energy signature must have been them leaving the system.\"\n\n\"Their tech was extremely impressive.\" She said and that struck a chord in me. If a Yautja thought their equipment was noteworthy, then we needed to take heed. \"Grab your stuff, we need to make sure you wiped out that nest. Someone is going to come and find out why this world went dark. We need to make sure no one encountered the Xenomorph prematurely.\" I stated and I was genuinely surprised when she did not take offense. \"Lead the way.\"",
        "We activated our camouflage and entered the heart of the town. There were more corpses stacked like wood and set ablaze. They were efficient I will give them that. One skull stood out from the others. It looked humanoid and had been modified with obvious cybernetic attachments. There was a smoking hole in the side of its head. I picked it up and examined it. There was a brain inside the skull and the cybernetic implants were invasive and extensive. \n\n\"What the actual fuck?!\" I exclaimed. \"Traci, scan and analyze.\" A soft blue beam passed over the thing several times at different angles. \n\n\"It is equipped with a sophisticated power plant, antigravity device, and a myriad of scanners and detection devices. The Yautja could not hide from one of these. Can we keep it?\" She asked. \"I could adapt much of this tech for you.\" I agreed and added one Servo Skull to my inventory.\n\n\"They took them... they stole the bodies of my clan mates.\" She growled.\n\n\"...assault squad... two clicks...\" Traci's communication from the ship came through the heavily ionized atmosphere in bursts of static and interference.\n\n\"Time to clear up the static.\" I growled eager to clear up the upper atmosphere. \"Take cover over there.\" I said as I pointed to one of the few structures still semi intact. The three young bloods entered the structure, what was probably someone's home before the bombing. Isolenti stood by my side curious and eager to see the god staff in action. I pumped the artifact full of my own personal energy. A meter appeared displayed on my HUD and filled slowly. The weapon bristled with cerulean energy as I pushed it and myself to the straining point. \"Show time!\"\n\nI drew upon the staff's multiplying factor and began manipulating the weather. I reach up into the upper atmosphere where the residual of the orbital bombardment had been lifted by an updraft created by hundreds of explosions. It was easier than I expected. The clouds formed and a cascade effect soon enveloped the sky from horizon to horizon. The temperature plummeted and the rain fell like a hammer. I laughed thinking of Thor or Storm flying overhead. I conjured the lightning and howled as the thunder filled the air. Such exultation filled me body and soul.\n\n\"Master!\" Isolenti hissed. I looked at her and then the direction she was facing. Thirty feet away and poised atop a pile of rubble was the Xenomorph. Its armored exoskeleton was bright green, the color of spring grass, and it lifted its head, opened its mouth, and extended its internal jaws. \"Some escaped the hive.\" She growled as I directed a massive bolt of lightning at the alien. The body exploded sending bits all over. The rain and acid mixed sending up tendrils of dark smoke.\n\n\"Fuck you too.\" I snapped. \"Young bloods we hunt!\"\n\n\"Hey boss, I am picking up a vehicle in your general vicinity,\" Traci declared. \"Can you hear me? The upper atmosphere suddenly changed. Was that you?\"\n\n\"Yeah. Keep an eye on them we have Xenomorphs in the area. Going silent. Contact me via my HUD.\" I say as I look to the young bloods and Isolenti. \"Join us?\"\n\n\"Yes.\" Isolenti growled. \"Vengeance and glory.\"\n\nA Hunting We Will Go:\n\nThe five of us split up almost immediately. The cold rain blending with the hot ground and soon I was once more lost in thick pervasive fog. The last time this happened I was the hunted now I was the hunter. I was not kidding myself there was no telling how many of Xenomorph had survived. I scanned through the mask's options and settled on one marked LNDN. It did not eliminate the low-lying cloud entirely, but it helped greatly. Alone and my mind free of distractions I wondered about the sudden transition into the game. I was about to mention the Order of Chthon to Kat when I triggered some sort of built in security protocol. If that were true, then either Nick or Surfer had a hand in it. But if Kat had erased Surfer and Nick was dead who or what was maintaining it? \n\nMy mask's built in motion detector informed me I had company, a lot of company. I switched to the Xeno frequency and the strangest damned thing happened. One moment I had clear reading of multiple aliens and a few seconds later they simply vanished. I trusted Yautja technology too much to accept it as a glitch something else was going on. I would have to be cautious. I moved as stealthily as I was able. They were clustered in the remains of one of the buildings. The roof was gone, the interior exposed, but the walls gave the survivors a small measure of defense. I climbed the remnants of a high-rise structure and looked down on the group. I counted them, ten in all, something was not right. I got comfortable and observed. \n\nThey did not move. They did not fidget. Something was seriously wrong. I zoomed in and I could barely see them breathing. It was not until I had zoomed in that the last piece fell into place. Why the fuck was Skrull, Kree, and Shi'Ar chilling out together? I used my targeting system and painted each one of them for lethal force. I picked the biggest meanest looking motherfucker and unleashed hell. The flechette round from the needler struck true. It broke up just before impact slamming seven shards into the thing's head exploding it. The corpse tumbled forward spraying not blood, but vitriolic acid to any close enough. The ground bubbled and melted but the things companions did not. They changed even as they leapt over the walls and split up.\n\n\"Holy fuck shit!\" I cursed as I warned the others. The Xenomorphs can shapeshift! I sent the message even as the aliens went on the offensive. I was too busy shooting to concern myself with how this was a thing but more content on destroying it. \n\nI teleported, fired, and teleported again. If I maintained eye contact my targeting markers were good to go. Shapeshifting Xenomorphs... really! Who the fuck dreamt this shit up?! I took out the ten, but I knew better. This town alone must have had a population of twenty thousand what percentage had been compromised. Whoever performed the orbital bombardment were not necessarily the bad guys. If these aliens got off world the galaxy was wholly and truly fucked. I looted the corpses of the Xenomorphs. There were three resources to gather but I could not identify them on the run. I needed a workstation to discover their secrets. \n\n\"Time to clear the area and see if my young bloods have survived.\" I thought aloud.\n\nI went back to stealth mode, switched out the type of ammo for my needler to explosive, and looked for any hint of remaining aliens. Ten minutes later the sound of automatic fire drew me to an ongoing firefight. I teleported to the top of a metal girder sticking out of the charred earth. There were five of them in black armor. The tallest was over eight feet and the shortest seven. Their armor was heavy duty with a white pauldron protecting their left shoulder. Decorating it and the white tabard across their chests a black Maltese cross. They were armed with swords and impressive looking hand cannon. I assumed those spent rounds we found earlier came from those weapons. Scattered around the small squad were dead Xenomorphs. A massive explosion rocked the area as a mushroom cloud rose above the tallest debris.\n\n\"They got our transport!\" One of the armored figures growled. \"How can mindless Xenos attack a vehicle?\"\n\n\"Clearly it wasn't one of these things,\" the sergeant declared. \"It was one of those other Xenos. The ones with optical camouflage. They avenge their fallen. You could almost respect that if they weren't pitiful.\"\n\nI drew on Shatterpoint, found the weakness in his armor, and took careful aim. I took my time for the perfect shot and never hesitated. The round struck the side of his head, pierced his skull, and effectively decapitated him by plastering skull and brain matter inside of his helmet. He dropped and his crew stared as if the hand of god just struck him down.\n\n\"Sniper!\" One of them hollered as I repeated the process. While I sought out the corporal's weak spot multiple plasma bolts hit the group. Well, my newly blooded clan members had my back. I went from single short to full auto on my own plasma caster. Soon we regrouped over the corpses of the warriors. I let the blooded take their trophies while I examined the rest of what remained. They were human but highly augmented. I took the sergeant's black 'power' sword for my own. Etched onto the flat of the dark blade were the words 'Rex Imperator'. I placed it in my inventory before examining one of their firearms.\n\n\"Damn, I bet this bitch kicks like a mule!\" I commented as my HUD showed me the label of heavy bolter. \"Bolter? Hmm. I glanced at my active quests. Two were currently in the green and showed a visible link. \"The Trouble with Templars and These Aren't the Xenos You Are Looking For.\" To finish the Templar quest, I need to challenge one to personal combat and win. The Xeno was worded strangely. First things first, we needed to return to the ship and savor the moment. We returned to the drop pod and teleported back to the Ghostdancer.\n\nYautja alcohol is not for the faint of heart. It has no name human vocal cords can utter. As with everything about the predator culture I learned that young bloods could not take a mate. Only the blooded were worthy of such honors. I was surprised when they did not pile onto Isolenti and then it hit me, I was a clan chief so why would she lower her standards. I was about to send the drunk home and get ready to fulfill my main quest when the ship's internal alarms sounded. I used the gloves to triple my stamina and shook off the effects of the booze. \n\n\"That strange energy signature is back. Putting it on screen.\" Traci informed us as the holographic display came to life. We stared at the swirling miasma that crackled with unnatural colors and I felt it as it manifested. I felt Time/Space tear and gasped at the phantom pain. The bow of the ship protruded followed by the rest of the unusual craft. It had a definite gothic look to it. It was hard to judge scale from here, but it looked damn big. \n\n\"They are transmitting,\" Traci said as she patched through the message over the speakers.\n\n\"Cruiser Dauntless to Sergeant Eversharp. Respond.\" There was no one left on the surface to reply.\n\n\"They are launching drop pods and aircraft. They have not detected us yet. The portal is closed behind them.\" She continued. \"Orders?\"\n\n\"I need to return to the surface alone.\" I informed everyone. \"You can return to the... what is that look for?\" I asked seeing their expressions.\n\n\"They wish to see their clan chief in battle.\" Isolenti explained with a hint of humor in her voice. \"How are you going to return without revealing the Dancer's position?\" \n\n\"If I tell you, you won't believe me.\" I laughed even as the plan formed in my head. \"Orbital insertion.\"\n\n\"If you launch a drop pod... no drop pod but how... No! There is no fucking way even you can possibly survive falling from that height.\" She cursed.\n\n'Yes. You can!' Left declared as my HUD dinged.\n\n'Title Earned: The Emperor's Champion. Left Approves - new level achieved. God's Staff Attuned.'\n\n\"Come with me,\" Isolenti urged and I followed her to the closest airlock out of line of sight from the others. \"It is you, isn't it?\" She asked looked me in the face. \"Hold up the staff and claim it for your own.\" She whispered. I held up the Yautja relic and made it my own. A flash of energy swirled over its entire length and it changed from staff to serpent. \"Excellent! Let go of it.\" She urged and I did. It slithered up my arm, over my shoulder, and down my back.\n\n\"If it goes anywhere near my ass this is a done deal.\" I growled and Isolenti took a step back. \"What?\" I asked as the relic changed course. I felt the serpent's head settle on the back of my neck.\n\n\"Look! It is opening!\" She described as my organic armor split open and the body of the serpent settled into the slot created. The flaps of armor closed over it and relic and symbiote joined seamlessly. \"If I didn't know it was there you would never know.\"\n\n\"Left?\" I asked and felt the rush of power the symbiote enjoyed.\n\n'I needed that.' Left purred. 'I can buff your energy manipulation talents now with greater efficiency. Your armor can absorb more energy whether it is kinetic attacks or raw energy weapons. You can store it and release it either by spell or ability.' It explained. \n\n\"Time to go... wish me luck!\" I said as Traci plotted my insertion point. \"I always wanted to be a star.\"\n\n\"You are such an ass.\" Isolenti laughed. \"Don't make me come down and get you.\"\n\nShe opened the airlock. I stepped inside. I crouched and faced outer door. Traci gave me a countdown. It is true. In space no one can hear you scream like a little girl. I followed the path laid out in front of me and that was the only reason I did not bounce off the atmosphere and burn like a match and go out. My scream shifted from fear to sheer adrenaline. I got into the groove and the circuit between the thermal energy collected by the relic and directly fed back into my force field. The silence of space fell away as a high pitch keening sound surrounded me as I entered the upper atmosphere. It still took several minutes for me strike the ground. My forcefield kept me from being burned by the crater filled with molten rock at its base. \n\n\"By the Emperor!\" Someone cried as I climbed out of the crater. I absorbed the ambient heat I was radiating and stored it in the relic. More of the black and white armored figures appeared staring at the smoldering footprints I left behind me. \"What is it?\" One of them asked as a hooded figure strode up with spine ramrod straight, and a critical eye. I felt him reaching out to determine my nature with subtle psychic fingers. I withdrew using Force cloak and he raised a well-manicured eyebrow in surprise.\n\n\"Why are you here?\" The figure asked pondering my existence no doubt.\n\n\"I found this,\" I said as I placed the black sword on my back from my inventory. \n\n\"The Rex Imperitor! Where did you come by that?\" He snapped angrily.\n\n\"I lopped off the head of the previous owner.\" I said as the ground trembled. \"What the holy hell was that?\" I asked as the towering figure in heavy power armor topped the hill. \"Ooh pretty! I bet Toni would do some seriously nasty things if I brought that back.\"\n\n\"Yield the black blade!\" The mechanical voice roared at me.\n\n\"Um... no. You don't look as if you have what it takes to carry this fine bitch into battle.\" I replied and got the reaction I expected. They all took aim at me. \"Fine. Go ahead and taint the weapon by shooting me down like cowards!\" The words hit like a splash of acid in their faces. \"Who has the balls to challenge me to single combat?\" I emphasized by freeing it from its scabbard.\n\n\"I will,\" snarled the monstrously huge guy hefting a massive Warhammer.\n\n\"What's in it for me?\" I asked and I do not think the thought of loss ever occurred to him.\n\n\"I don't understand,\" the warrior growled.\n\n\"If, you defeat me then you get this nifty sword. When I kick your ass, what do I get?\" I laughed and he looked at the hooded figure. \"I got it. I really like that armor you are wearing. I win and you hand it over.\"\n\n\"We could just kill you.\" The ornery man in the robes snarled.\n\n\"We are transmitting live.\" Traci's voice boomed over the battlefield. \n\n\"If you think you can take on a champion in tactical dreadnaught armor good luck.\" The leader declared for me and the audience.\n\n\"For the record. If the walking tank can beat me, he gains possession of the black sword. If I win, I get his armor.\" I said and we picked out a spot to fight. It was not until we reached the designated area that I could see names and titles of the Black Templars and Inquisitor Tyrex that led them. We faced off, saluted each other, and my boss battle music filled my ears. \n\nMy foe was not fast, but he was relentless. I could easily dodge his attacks and that annoyed the shit out of him. The sound of a built-in weapon powering up alarmed me. I recognized rotating barrels and spied the glitter of the heavy weapon beneath his right arm.\n\n\"Dakka-dakka!!\" Went the assault cannon. Left threw up my shield as hundreds of explosive rounds bounced against it. I watch the relic bar fill up but instead of feeding the shield I went on the offensive. I did a mental countdown and leapt straight up out of his firing line. I wrapped half the energy around the blade and as I fell, I went for that damn assault cannon. \n\n\"Let's see how sharp you are!\" I shouted as I used my gloves to triple my strength. The blade sheared through the rotating barrels. My opponent lost his shit. He took a double handed grip on his hammer and shit got real. I was constantly alternating between improving my strength when I attacked, my stamina when he drove through my defenses, and agility when I dodged or repositioned. The hammer augmented by the armor and his own formidable strength dropped my stamina in a steady trickle. He was equally cut and bleeding freely. \n\nHe did not show any signs of slowing or even feeling his wounds. Maybe I should have used Deathkiss instead, nah, they would take it for dark magic and would have attacked on sight. All was well until the damn hammer hit me from an unexpected angle. I staggered back my right shoulder taking the worst of it. He did not gloat he went for the kill, prematurely. Perhaps in his experience that was a crippling blow, it was not. It was time to quit fucking around. I had learned all I could from his combat style. I adjusted my grip on the black blade and went on the offensive and stayed there. I continued to boost my stats on the fly for maximum effect. They sensed it but he refused to surrender.\n\n\"For the Emperor!\" He roared as he charged. I feared the sword may not have what it took to penetrate but he might be strong enough to do the task himself. Instead of dodging I braced myself and brought the blade up with the tip aimed at my foe. His rush drove the point through armor, bone, and flesh. The stubborn bastard would not die. The redundant organs kept him going. Laughing he spun his body ripping the sword from my grasp. \"Now you die!\" \n\n\"You first!\" I screamed as I cupped my hands. The Force burst manifest faster than it ever had before. I thrust my hands forward aiming for the hilt of the sword. The compression wave struck and flung him, tactical dreadnaught armor and all backward. He ended impaled upon a newly created pile of rubble. I felt their shock. The hooded figure raised his arms and I warned him not to do anything stupid. \"Don't be a fool.\"\n\n\"Heresy!\" He shrieked as the others raised their weapons.\n\n\"I tried to warn you, remember that!\" I said as I used telekinesis to reclaim the black sword and then teleported out of line of sight. Their cries of alarm were just the beginning. I was satisfied with winning my heavy armor but no they had to go stupid on me. I activated my stealth, loaded my needler with explosive rounds, and went to war. I returned to them in vengeance mode. I rose from the high ground just like Obi Wan would have wanted me to and sprayed them with explosive death. \n\n\"Soften 'em up,\" I muttered to myself. \"Then lay down the boom.\" I had to move fast before they signaled for reinforcements. I did not know until afterwards that they never even considered it. Fourteen against one were acceptable odds. Instead of relying solely on my mask to locate targets I reached out with my other senses to get a complete picture of the battlefield. They had split up to flank me from two sides. The annoying fucker in the robes did not feel he was part of this conflict. It was time to change that. I teleported to the tallest pile of debris in the area. I took aim at Inquisitor Tyrex and used Shatterpoint to find his weakness. My attention did not go unnoticed. He threw up some sort of defense. Fine. Time to change the battlefield to my favor. I sat and touched the atmosphere let it rain. ",
        "'Your audience wants to know what mischief you are up to.' A virtual reporter asked appearing in my HUD. \n\n'Wait, this is going out live?' I asked and she nodded. 'Watch and see.' That is strange. Time to entertain my fans. The clouds were ready and down came the torrent. I was thinking that mud and heavy armor do not blend too well. It was time to hunt. If I took out the leader it might impact the other's morale. The craters soon filled to overflowing creating even more difficult terrain. I watched the squads converge on my former position. \n\n\"He's not here!\" One of the soldiers called out.\n\n\"Of course, he isn't,\" the leader cursed his voice low and annoyed. \"The weather turns against us.\"\n\nI nudged the temperature down to not quite freezing. I saw the steam roll off the armored figures as their battle suits compensated. The leader was not so well insulated. He looked miserable. I fought the urge to laugh. It felt like I was directing an orchestra. Freezing rain pelted the robed figure and I took a dark joy from it I will not lie. I hesitated not knowing if I should rely solely on Yautja weapons for this contest or just enjoy myself and wreck them with the Darksaber. The decision was taken out of my hand. Was it planned perhaps it was as the first notes of Blue Oyster Cult's 'Dancing in the Ruins' filled my consciousness?\n\n\"Let's do this!\" I laughed startling the Inquisitor by my proximity. The Darksaber was in my hand and activated as I surrendered to the will of the Dark Side. I danced across the battlefield so lightly my feet barely caused a ripple in the overflowing pools. The mud carried no mark of my passing. And death followed where I trod. The blade spun and struck out slicing adamantium and layered ceramics with ease. The marines knew no fear. They died all the same. It felt amazing to be freed from the constraints of the duel. They were amazingly resilient with redundant organs, decades of experience, and determined to manifest the will of their undying emperor.\n\n\"It is hard to follow his weapon. He is so damn fast!\" The reporter explained to the unseen audience. I fought the urge to trigger the ghost fire blade since potential rivals were watching. I took out the marines eventually leaving only the Inquisitor, and two men in that tactical dreadnaught armor. One wore the familiar black color scheme while the other was clad in gray.\n\n\"Librarian?\" The Inquisitor seemed to defer to the dude in gunmetal gray. \"Your will?\"\n\nI was preparing for another drawn out fight when my HUD alerted me to motion around us. I cycled through the spectra and there they were twenty Xenomorphs circling the field. I was torn. My blood was pumping, and a knock down drag out with a pack of aliens would be epic. I cursed and teleported outside the ring of hidden terrors. \n\n'What are you doing?' The reporter asked via my mask.\n\n'I need to know if a queen alien is on this world. If I kill them, I will never find out where their nest is. Twenty is a lot to not have one.' I explained to her and the audience.\n\n\"Ha, coward!\" Laughed the one called Librarian. \"He has fled the field of... what in the Emperor's name is that?!\" His voice lost its humor as the Xenomorphs revealed themselves. They swarmed them and I almost believed they might pull it off until the Librarian destroyed an alien nearly on top of him. The splash of acid shredded his armor. They took the Inquisitor alive. That screamed eggs and if they were eggs there must be a queen. My choice had paid off. The surviving Xenomorphs and their prisoner left. I looted as fast as I could. I was not passing up on three sets of dreadnaught armor, that was not happening! \n\nThe mud made tracking the aliens easy. I was confident I could find their nest but then what. It was just me against who knew how many Xenos. I could not save during a live feed, so I had to move cautiously. My confidence became overconfident as the prints left behind by the aliens vanished. The mud was smoothed over, and I froze in my tracks. Someone or something had done this. Fuck! I cursed as I examined my surroundings and fought down the confusion. Had the marines called in stealth units for some reason? No, that made no sense. I reached out and felt the residual psychic footprint. Someone had used telekinesis to smooth out the mud. Why? Were they protecting the aliens? A flood of ideas traced back to Weyland Yutani and their desire to acquire the Xenomorph. I did not remember them having psychics. I was off my map and clueless. I could not track the aliens since they were exomorphic and their body temperature matches their environment. \n\nMy Spidey sense tingled and felt like I was being watched. My motion sensor did not show any movement nor did my mask reveal any hidden enemies. Still. A moment later I was alone. Could my masked be defeated? Could the Yautja technology be overwhelmed? \n\n\"There is always a bigger fish.\" I stated channeling Qui Gon Jinn. \"Isolenti, can you send me the coordinates of the nest you attacked?\" I asked transmitting to the ship.\n\n\"For a moment there just a moment mind you, I thought you had given up.\" Isolenti chuckled.\n\n\"Nope. Work smart not hard was my father's motto.\" I shared and felt a small twinge of loss. He had died in the car crash that had landed me in the hospital. Funny how he and Nick Shaw had died on the same day. Hell, a lot of people had died on that day. I pushed out the bad memories and focused on the holographic display. Two icons marked the immediate area. The first was the you are here icon and the twirling marker the entrance into the tunnel. I used FarSight and teleported to the cave entrance. Raw stone and processed materials littered the front of the tunnel. The interior of the cave showed that it was artificial. The space looked like it was used for storage at one time but had been abandoned. \n\nIsolenti directed me via my HUD to a damaged elevator shaft. This was my way down to the nest or what was left of it. She pointed out on an outcropping of wall that had been pushed into the shaft by the bombing. She had hopped down to the small ledge and then down the last thirty or so feet which was the floor of the elevator shaft. I felt like I was being watched again. I glanced around but neither scanner nor senses picked out an observer. I shrugged and hopped down the fifty-foot drop and landed lightly using levitation to cushion my landing.\n\n\"Show off,\" Isolenti snickered before continuing giving directions.\n\nThe narrow hallway was carved from the living rock and felt much older than anything on the surface or any architecture I had seen so far. Had they dug too deep? Had the Xenomorphs been here that long? My mind went back to a certain derelict ship and a smoke covered cargo hold filled with hell incarnate. The tunnel ended and opened onto a temple like chamber. None of it matched Skrull, Kree, or Shi'Ar technology or culture. This was far grander and elegant than those three societies. The alien hieroglyphs did not match those races either. That sense of being watched became undeniable. I reached out seeking out enemies. \"Nothing. I thought... aw shit.\" I cursed as I felt the weapon pressed against the back of my head. \"Who are you?\"\n\n\"Scout.\" She said lowering her pistol. I turned my head and got my first look at her. The features of her mask reminded me a Japanese Oni demon. \"What is down here? What are you?\"\n\n\"I am making sure that the colony of parasites has been wiped out.\" I stated looking at the style of her armor and equipment. \"What the fuck are you?\"\n\n\"I am one of the Dancers of Death,\" she giggled. \"Let's make sure those pesky parasites are gone.\"\n\nShe holstered her unusual pistol and moved to stand next to me. She was tall, thin, and had an almost elfin build. I loved her armored long coat and beneath that an armored hoodie layering her protection and not relying on a single type of defense. I liked her thought process. Why was she here? Something got her attention, was it the creators of that strange energy? Was she in fact tracking them? First things first we needed to eyeball the Xeno nest and if it were destroyed then we could address her presence. We entered the entry hall. Ten stylized pillars supported the ceiling. Each represented a different possibly divine figure. Some looked animalistic while others had clearly sharp humanoid features.\n\nI was drawn to one of the pillars more than any of the others. The figure wore feathered armor along with a hawk-like helm that kept his handsome features revealed. Emblazed upon his chest was a symbol I knew all too well the Yin Yang. Was this another manifestation of Anackire? Perhaps it was one of her earlier champions? Near the double doors that led deeper into the temple complex was a deep cratered hole that looked to be the site of a Xenomorph death. I gestured and we went into stealth mode and high alert. If one of them got this far there could be more.\n\nI took the lead at this point. I examined the pillared hall first making sure we did not leave enemies at our back or any free to flee to the surface. It was free of foes. One of the massive double doors was open enough for us to slip in without opening it any further. No need to alert potential enemies to our arrival. I set my mask on the Xeno wavelength for now. My nameless ally moved with a stealth and grace I envied. She did not step exactly it was more like she floated across the ground barely touching it. I savored the gorgeous artwork decorating the walls. It reminded me of a blend of Japanese, Egyptian, and Svartalfar cultures all rolled up into one. Could she be an offshoot of the dark elves? \n\nThe wide hallway broke off into many side chambers, we had to check them all. The nameless stranger followed me. I went to the room marked with the most complex symbol. The base of its design was an inverted triangle with its point facing down. Two arched 'legs' supported the triangle giving it a stable base. A line protruded from the flat 'top' of the triangle. Two horizontal lines crossed the vertical. The first of the two was longer and at each terminus was a short-angled extension that framed the triangular base. The second horizontal line also had angled extensions that ended at the same point as the vertical giving it an almost trident shape. \n\n\"The aspect of the spider,\" she intoned with clear reverence. In the chamber were nine suits of heavy armor and upon each helmet was the same runic insignia that was above the doorway. Their weapons were sealed behind a complex rune structure. It would take time to unlock even one of them. The armors themselves gave off a bad vibe. I left them alone. \"You are wiser than you look. The war god doesn't take kindly to thieves.\"\n\nWe exited and went to the next chamber. Another stylized rune was emblazed upon the lintel. More armor and weapons were to be found here. Like the spiders these had the rune on the forehead of their helmets. \n\n\"Dragon aspect,\" she explained.\n\n\"Just how many damn war gods do you have?\" I asked looking over a formidable energy rifle, though it looked more like a lance than a traditional rifle.\n\n\"One. The key word is aspect. One god with many aspects.\" She explained with a smirk in her voice.\n\n\"Huh, spider, dragon, and all those others are parts of his personality or the aspects of conflict.\" I stated and I felt her approval of my assessment. \"How long has this place been abandoned?\"\n\n\"Too long,\" she fired back bitter, but her anger was not aimed at me. \"NO!\" She screamed as we reached the end of the hall and the collapsed floor and utter devastation below. \"Why?!\"\n\n\"To stop the death of millions perhaps even billions of lives.\" I said as I summoned one of the M3 droids from my inventory. I chose the one with the best sensory package. \"Make sure nothing is alive down there.\" I ordered and imputed the data for the Xenomorph lifeform. \"Make daddy proud.\"\n\nThe droid vanished from sight and drifted down through the tens of thousands of tons of debris. If there was a way in, we would follow. If not, we would leave them buried for all eternity. It was a waiting game now. \n\n\"Why are you really here?\" I asked the nameless stranger. \"I am Ghost Fire, Leader of the Shadow Fang Clan.\"\n\n\"I am Ynariel, a simple wanderer without family or home.\" She replied and while technically true she was far more than that. A nobody does not simply stealth up on me. \"I received a request to make sure this holy place was left untouched.\"\n\n\"You use words the way a warrior uses their weapon.\" I told her and she laughed. \"Do your people have a connection to the Svartalfar... the Morasir?\"\n\n\"And you are as blunt as a Warhammer.\" She said her voice cold and menacing now.\n\n\"Vanir? Or are you a branch I haven't heard of before?\" I plowed on through. I felt the psychic tendril and sealed off my thoughts behind a barrier Strange had taught me. It had an aggressive side if she tried too hard. When she yelped and grabbed her head, I knew she had lost her patience. \"Let's not try that again shall we.\"\n\n\"Impressive but enlightening as well... cousin.\" She laughed and left it at that.\n\nThe droid returned and I watched its data stream. The lower levels were completely buried. I informed her it was time to depart. Her emotional anguish was clear. This place meant the world to her. I got it. Something this beautiful being destroyed is soul crushing. I reached out and felt hundreds if not thousands of minds. There were people down there! \n\n\"Change of plans! Stay behind me.\" I ordered and chuckling she pressed her body against mine. \n\n\"What mischief are you up to Ghost?\" She asked as I tapped into the relic and powered it up. Once its meter was full, I used that energy to restore the fallen structure. She was speaking but I could not hear her. The ground shook as I rebuilt it even as my mind threatened to snap. The vibrations slowed and eventually all was still. I opened my eyes and gasped at the beauty before me.\n\n\"Gorgeous!\" I whispered as Ynariel strode towards the celestial temple. She stopped, turned, and faced me. She removed her mask and she was related to the Vanir and Svartalfar but from a separate branch altogether. I felt my knees give out and I knelt hard drained utterly by the strain. \n\n\"You just redefined the impossible for me.\" She purred. \"Rest. When you are restored, I will share with you secrets few outside my people ever witness.\" I shifted to a meditative position, closed my eyes, and reflected on today's events. This place coursed with power. I felt it race into me while thousands of voices sang their thanks for my actions. As my mind embraced the song, I picked out the alien syllables and found correlations between the languages I knew, and a sense of understanding built quickly. I began singing the song and felt Ynariel's surprise. \n\n\"Let's get going,\" I said in my first attempt at her native language. She corrected me with a smile on her lips.\n\n\"Come on, welcome to the celestial temple.\" She said as she offered me a hand up. She was stronger than she looked. At the heart of the restored temple was the Flame Imperishable and I recognized the power behind it.\n\n\"Phoenix!\" I gasped and dropped my head. \n\n\"Coin return to me my coin,\" a voice called out from the heart of the inferno. I had two with the image of the phoenix. I removed both. A force tugged the grey coin from my grasp, and it tumbled into the pillar of fire.\n\n\"What was that?\" Ynariel asked witnessing it.\n\n\"An icon given to me by the Phoenix's avatar,\" I explained as a brilliant flash of light drew our attention to the center of the temple. The coin returned but it was once more a deep golden hue. \"Oh my...\"\n\n\"You have restored my temple. So, I have restored my token. Use it wisely.\" The voice offered as Ynariel gazed at the coin in awe.\n\n\"Below, we must go down.\" She urged and took my hand. The spiral staircase appeared to be carved from a scintillating white marble. Where had they quarried this? None of the native stone was marble or even similar. I was about to ask her when we reached the next level. \"Behold! The Pride of Iyanden the sleeping city!\" The streets and avenues spread out in all directions. The architecture was as elegant as anything the dark elves or Asgardians could fashion. I tried to identify the stonework but failed. My crafting skill was damn high and yet here was a million tons of material I could not identify.\n\n\"Color my intrigued, what is this city made of?\" I asked my guide.\n\n\"It is extradimensional in origin. My people draw it from that other plane and shape it to serve our needs. It can take on a variety of shapes, textures, and states of matter.\" She explained and it sure sounded like magic to me, but it was too sophisticated for that. \"It has lain here hidden for countless centuries.\"\n\n\"Your people called this place home once.\" I stated.\n\n\"We called them the maiden worlds and were our colonies before... before pride and worse reduced us to wanderers.\" She said and the pain came in waves.\n\n\"Show me.\" I asked and she removed her mask and wiped away the tears. I disabled my mask and reverted to my Svartalfar shape.\n\n\"Better,\" she chuckled. \"This is the grand causeway and it was here that the high holidays were celebrated, and the people gathered to sing and dance.\" \n\n\"You say that like you were at the heart of things. Musician?\" I asked and she shook her head. \"I was hoping that fine ass was from dancing.\" I joked and she slapped her left cheek and we went deeper into the city. There were towers, spires, gravity defying minarets, and things I had no proper names for. It did not reduce their beauty one wit and I liked the fact my vocabulary lacked the words. The universe still had mysteries and I embraced that. I felt the psychic pull and she followed me as instinct took over. It was the grandest of an entire city full of wonders. The Tower of Souls she called it. I heard their voices singing to me. A chorus of angelic voices weaving an eternal music that kept this place alive.\n\nMy HUD dinged as my quest updated. 'Raise the Dead City.'\n\nAre you kidding me?! Fine! I followed the voices into the tower. Ynariel strode beside me and let the beauty her people crafted speak for itself. Her silence was a testimony to the ancient architects that were long dead but not forgotten. Curves woven intricately into stunning arches, walkways, and ramps. Linear aspects fashioned into pillars, buttresses, and slotted windows that only let the darkness in. I was going to change that if I could. The psychic pull increased until I found myself levitating with Ynariel running alongside. \n\nMy mind was flooded with the light of millennia as I came into the presence of the Heart of Souls. I wept at the ethereal glory before me. The interior of the tower was adorned with hundreds of thousands of jewels. Each gem held the essence of a fallen member of her people. Untold wisdom scintillating and here at Ynariel's fingers. \n\n\"Restore us to the stars!\" They sang.\n\n\"It'll kill you,\" Ynariel declared. \"Why are you doing this?\"\n\n\"I have to try. Such beauty has remained in darkness for too long!\" I replied. \"I supplicate myself to your will.\" I intoned as the power of the elders lifted me and placed me in the slowly growing shaft of light. The song grew in strength and I added my voice to it. When she said I would perish I thought it was simply a physical death, it was not. I was losing my individuality to the potency of the collective. I was a diminishing light fading into the eternal illumination that was the well of souls. I fought to maintain myself. Three million years of history threatened to wash me away and I called out for aid. She heard me. The living embodiment of opposites cradled me in her strength allowing me to access the living network and do the impossible. The Pride of Iyanden did not suddenly fire off engines deep beneath her. The city did not suddenly teleport into orbit. Oh no, the city, with my help of course, folded Time/Space and entered the domain of Istus and vanished from the world of Jerull and appeared in a forgotten corner of her web. The weight of my body hung heavy upon me as my spirit reentered it.",
        "\"You... how the hell did you do that?\" Ynariel demanded with an expression of utter shock.\n\n\"I didn't. She did.\" I said gesturing to the shimmering figure of Istus. \"I can't take credit for this miracle.\"\n\n\"So humble,\" Istus whispered. \"I have brought your ship safely here as well. Rest champion. Walk these ancient streets and take in their shadows and when you are ready take up arms once more.\"\n\nShe faded from view with a sly smile on her face. I turned to Ynariel. She agreed to be my guide and companion for a time at least. \n\nEchoes of Shadow and Silence:\n\nA week had passed since the city had been successfully translated to the web. I had seen many of its wonders both with and without Ynariel's company. One of those sights was the main causeway that bisected the city in half. Strange how the strand of the web and the causeway merged so seamlessly together. Surely there had to be a connection between Ynariel's people and the creators of the Web. While that was a mystery for another day, I stumbled upon what could only be described as a garage. The first thing that caught my eye were a series of jet bikes. I walked down the line seeing a definite evolution from where the pilot sat upright to the last where they were driven with a nearly horizontal rider. \n\n\"Got to drive one of these bad boys,\" I commented. \n\n'May I be of aid sir?' A mind brushed mine gently. 'I might pass as the keeper of this place.'\n\n\"Fantastic! Where are you?\" I asked as a gleam of a jewel caught my attention. \"You are very kind.\"\n\n'Remove me and place me in the open slot on your mask so that we can communicate better.'\n\nI plucked the deep violet gem and it fit perfectly into the open sconce. She manifested in my mind and projected as a tall slim elf wearing an intricate body stocking. She showed me the basics of how the jet bike worked and how rider and machine joined. The bike became an extension of the rider. Her experience touched my thoughts so that I got a crash course in not just the controls but the feel of driving. It took razor sharp reflexes to properly pilot a jet bike at full speed. After the virtual tutorial I went straight to the crotch rocket and slid into it. Once my armor tied into the bike, I could feel it like it was part of my own body. \n\n\"Once slowly around the city,\" I giggled. I started off slow so I could get used the feel of the city street below me and the caress of the air over the surface of the bike. It was stop and start at first but soon I was moving with more and more confidence. A few hours later I was speeding laps around the city outskirts. I leaned into tight turns and felt the bike's shields kick in protecting me as much as the surface of the street.\n\n\"Care for some target practice?\" The pilot offered.\n\n\"Target?\" I asked as I felt a panel on the underside of the vehicle split open allowing a weapon to deploy. \"Oh!\"\n\n\"Worry not, the projectiles and targets are virtual.\" She indicated. \"Relax and let the vehicle guide you.\"\n\nThe mounted weapon was fixed and so to aim I had to maneuver the vehicle in line with the target. My HUD meshed seamlessly and while the first few shots went wild, I soon got the hand of driving and firing accurately. I spent days honing my skill until I felt that itch to move on. I returned the gem to its rightful place in the garage and sought out Ynariel. She was not in the city but aboard the Ghostdancer. She was on her back with her head inside the open base of my workstation. She wore loose-fitting coveralls and a set of tools radiating around her for easy reach. I found a place on a nearby wall and sat down watching her work.\n\n\"Jet bike fan now?\" She chuckled. \"I don't blame you they are a beast.\"\n\n\"Yes, they are. Um...?\"\n\n\"I am tweaking your station here. It will be able to do some serious precision work when I am done.\" She promised. \"Just a bit more... you wouldn't believe how many volunteers you had.\"\n\n\"Volunteers? I do not understand.\" I admitted.\n\n\"You encountered the keeper at the garage.\" She replied. \"When my people end their corporeal existence if we are lucky, we are wearing a specialized stone to house our souls. Our technology is maintained and improved by those very souls. Tinuviel, one of the brightest technicians offered up herself in your service. Once the interface is complete her jewel will inhabit the station and help you with design and better use of materials.\"\n\nI watched her work and once the soul stone was placed, I got an update via my HUD. \n\nDing!\n\n'Workstation upgraded to smart-station.' 'Inventory updated: Combat jet bike added.'\n\nYnariel was on her hands and knees as she closed the workstation. I let out a moan of appreciation. \n\n\"About damn time,\" she purred. \"I'm all sweaty, does this thing have a shower?\"\n\nIt was an awkward mix of attempting to undress, kiss, and move toward the ship's showering facilities. Her sweat was deliciously intoxicating. It was less stink and more pheromones. We stood beneath the falling water simply kissing. Her hunger for me was addictive and contagious. She felt things far more intently than I was used to. As our hands roamed over the other her mind touched mine lightly but soon, we shared a deeper and deeper connection. Her thoughts turned to my erection and she dropped down to inspect it for the first time.\n\n\"By Eldanesh! What a specimen!\" She said as she went through what she called the seven stages of facing a huge cock. The first was shock or awe. She was well into this phase. Next was the confusion stage or will that thing even fit in me. Ynariel pushed passed that into evidence gathering. This involved wrapping both hands around the shaft and giving it a few tentative strokes. Bargaining was next as she made promises to herself and me. This is also the point where she opened wide and slowly let the entire length slide between her lips. I groaned as her tongue swirled and lashed the sensitive head. She was more than halfway there now. Anxiety took over as she doubted her ability to cope with it inside of her. She found her resolve as she stood, bent over, and pulled her ass cheeks apart. I slid inside of her and she let out a gasp of relief as she reached acceptance at last. \"You keep thinking about fucking my ass.\"\n\n\"It is a weakness of mine,\" I said as I caressed her firm plump cheeks. \"Besides, you have such a perfect specimen.\" \n\n\"I feel like you are holding back.\" She purred as I slowly moved my hips. \"Please Carreckiam, don't hold back.\" She begged as she thrust backward. I summoned the Double Dragon and when the upper cock settled between her ass cheeks, she let out a new sound. \"You devil you! I comprehend your hunger. Well? I am no pale maiden to be... IRK!!\" She fell silent as I pushed forward and slowly impaled her ass. \"I am skewered!\" She declared as I leisurely picked up speed. Her stamina was nearly as high as mine. In game terms she could really take a pounding before climaxing. When she did, she leaned against me to catch her breath. \"You are still hard... my hero.\"\n\nI lifted her off her feet, pressed her back against the wall of the shower, and she surrendered completely. After ten days of being so close to such a beautiful woman I gave into my hunger. We lost count soon enough to our climaxes both individual and mutual. Was it the intimacy of telepathy but I fell for her hard, much harder than most of the others? We slept in the captain's bedroom. I dreamt of a world with three moons. One was white, another red, and the last a vibrant green. I awoke alone in that huge bed. I was covered in a delightful blend of sweat and funk. A quick cat bath later and I sought out Ynariel. She was in the Ghostdancer's garage. She was prone under one of the two jet bikes. \n\nI lie down next to her and skootched close to see what she was doing. Instead of getting annoyed she began explaining the mechanics behind the engine and how she was tweaking its driver-machine interface. Once she explained that she informed me that she moved the primary weapon from beneath the bike to a spot in front of the driver. It made for more natural targeting for me. She had watched me out on the street and promised when I got into a fight it would be easier to hit. She explained the dual shielding the bike possessed.\n\n\"This vehicle was built for hit and run style tactics. The primary defenses are its blistering speed and holographic field that makes it damn near impossible to target directly. Weapons that unleash area of effect damage ignore that if they hit close enough.\" She paused when she saw me thinking. \"The secondary shield is a midline force screen. The pair are connected to the bike's power core via a dual pulse unity interface. It keeps most of the power for speed and maneuverability.\" She finished her work and we knelt on either side of the bike. She touched a hidden catch and the diamond shaped scoop split open revealing the top of the engine and the power core. She continued to explain all the components that made up the jet bike. \"So?\"\n\n\"I got an idea,\" I said as I went to the workstation, purchased the plans to the bikes holographic and force field, along with the schematics to a Yautja stealth and force field. \"Time to see if these two are compatible.\"\n\nI displayed all of them holographically and took them apart. Ynariel looked horrified that I dared to even contemplate combining the two technologies. The time blurred as she hit the ship's cafeteria and cooked a meal for us all the while the word blasphemy was never far from her lips. I tried dozens of configurations before I had a single success. Each small triumph built on the next. I was forced to purchase the plans to the bike's power plant to complete things. I had to test the design with energy coursing through it. It worked! It was ugly but with Ynariel's expertise she tweaked it without meaning to I am sure.\n\n\"Damn you,\" she laughed. \"It is beautiful!\"\n\nI fashioned the parts and installed the hybrid shield with her help of course. I tied it to Left and activated it and watched the bike vanish from sight. I took out a water hose to test how it worked under adverse weather conditions. The water rolled off without revealing the bike. Perfection! I made a second set of parts and we modified her bike as well. I registered the design and wondered if anyone would ever use them. \n\n\"Massive power spike Boss!\" Traci informed us. \"It is coming from the center of the city.\"\n\nYnariel and I left the hanger where the Ghostdancer was being temporarily housed. The elegant structure at the heart of the city was splitting in half as slender stalk shaped structures climbed skyward. The center took on a guardian aspect facing outward while the space between began to warp and distort. \n\n\"Put on your mask, quickly!\" Ynariel urged. \"You don't want to startle them.\" Left did the honors and activated it. The first few figures appeared out of the gateway. Then they appeared by the dozens and then by the hundreds. The outpouring of wanderers, nomads, and homeless poured into the city. Once galactic vagabonds now they had a home. The children of Eldanesh had returned. \"Welcome home!\"\n\nThe gate remained open for days before it finally shut down. The corpse city was now bustling with life as the various castes of this tribe of elven kind returned to their old lives. The priest caste took up their duties in the temples. The warrior caste began their training and took up arms to protect the city. The craftsman flooded the workshops, garages, and hangers. The various subcastes began raising crops, repairing damage within the city, and filling up the schools for training in whatever path called to them. \n\n\"Thank Istus,\" I whispered seeing the once empty spaces now filled with people, and the silence replaced with the sound of voices raised in song or simple conversation. \"Time to go.\"\n\n\"Where are we going?\" Ynariel asked.\n\n\"I have business back at Jerull.\" I stated not wanting to break character and say I have an unfinished quest involving that planet. The word must have spread for as we prepped the ship for flight the members of the ruling council appeared.\n\n\"You cannot leave without accepting a token of our thanks.\" The high priest declared with great solemnity. \n\n\"Take your pick of a stone to aid you in your current path.\" The exarch of the war god offered.\n\n\"Yes, let your wisdom guide your hand,\" a colorfully dressed figure said with a smile on her lips. She extended a small box that held three identical gems. They were cut in the same way, their color appeared indistinguishable, and their weight matched down to the microgram. I let the mask scan the spectra and found that when they hit the deep ultraviolet, they each had a different glow. One shifted to a dark purple, another shone with an inner radiance, and the last pulsed like a living heart. I removed one of my gloves and touched them. Two of them remained inert while the left stone became suddenly more vibrant and taking on a wet almost bloody quality. I chose that one.\n\n\"The blood red one,\" I said, and they all reacted differently.\n\n\"I do not understand,\" the high priest stammered clearly in shock.\n\n\"The war god will not be pleased,\" the exarch snapped angrily.\n\n\"I will be damned! Excellent! Here... let me.\" The brightly colored figure plucked the stone and settled it into the empty socket on my mask. The rush of power was exhilarating. When I looked for a name or its abilities everything was under question marks for now. I was used to it. Over time they would be revealed. I tried to thank the trio but two of them had already left with only the female that had placed the stone on my mask still there.\n\n\"Thanks, I umm is there something wrong?\" I faltered.\n\n\"She has sided with you. I envy you.\" She said. \n\n\"Well, if I am welcomed back here... what is so damn funny?\" I asked when she began laughing.\n\n\"You are being silly,\" Ynariel explained. \"You saved the city and through it these people, my people.\"\n\n\"We'll be back at some point,\" I promised. I whistled and Traci fired up the Dancer's engines and prepped her for flight. Ynariel and I left the colorfully clad female behind and I sensed a connection between her and Ynariel. I did not ask but when she was ready, she would tell me or not. Left let out a yelp of surprise. \"What?\"\n\n\"I just got one serious download of data. They are gate coordinates. It is the Web and every strand attached to it.\" Left laughed. \"Who needs a ship when we have this?\"\n\n\"Later, I'm not ready to lose the Ghostdancer just yet if ever.\" I said. \"Let's go see what we need to do on Jerull.\"\n\nSpace Station Blues:\n\nWe boarded the ship, used the coordinates, and aimed the Dancer at the large gate at the center of the city. Left powered it up by transmitting the code for Jerull. The gate fired off a plume of energy and the gate formed between the watchers. Traci took aim and with a whoop of delight we flew into the gate and a heartbeat later we were above the crater left behind by the removal of the elven city. My HUD chimed and updated my quests. \n\n'Ding! Follow the Ion Trail! Destroy the Xeno-Skrulls or the Galaxy will fall.'\n\n'Title Earned: Heir of Eldanesh. Gear Upgrade: Holo-Suit. Gear Upgrade: Kiss of Death.'\n\n\"Ion trail detected,\" Traci informed us through the ship's speakers. \"They must have made an in-atmosphere jump to leave behind a trail like this. Course plotted to follow the ion trail. A hidden vessel has left orbit and vanished from my sensors... after a tight beamed pulse transmission was sent from this ship.\"\n\n\"Make the jump and modulate shields to keep that shit to a minimum.\" I ordered. Since the other ship had been cloaked it could have been another Yautja vessel, but my gut told me it was Ynariel's friends. \n\n\"Initiating first jump,\" Traci declared as the area beyond the cockpit glowed with a riot of prismatic radiance. The world outside returned to the normal depths of space. \"Scanning. The ion trail continues from this point. Calculating second jump.\"\n\nAnd so, it went for four more small leaps until we reached the ship's destination. A space station out in the middle of nowhere. It did not orbit anything. This solitary structure just hung in the middle of empty space. Suddenly my HUD chimed and offered me an invitation.\n\n'Invitation: Join multiplayer event? Y/N?'\n\nYes. I agreed and now I had to select up to two NPC's or nonplayer characters to join me. I was about to pick from my list of available NPCs when Isolenti stepped out of the ship's dojo. She was clad in only a loincloth, a matching tube top, and covered in sweat and ready for war by the look of her. Ynariel smiled at her approach.\n\n\"I observed her on the surface before you arrived. She was part of a troop of three.\" Ynariel declared and continued. \"She and her compatriots displayed great courage and likely, if given the opportunity, would do so again.\"\n\n\"Clan chief, is this your woman?\" Isolenti asked her voice aquiver with humor and curiosity.\n\n\"Clan chief?\" I muttered when she removed her mask and I saw the skillfully altered brand she had burned on her cheek originally with Xenomorph blood. The artful modification showed a clear desire to bond to my banner. \"I will let her answer that question.\"\n\n\"Damn straight,\" Ynariel declared her smile wider than ever before. \n\n\"She appears sturdy enough, I suppose.\" Isolenti snickered as she tugged her top off and let the loin cloth join it on the floor. \"I'll be in the shower.\" She declared as she slapped her left ass cheek.\n\n\"If you don't shift and break her I will.\" Ynariel stated.\n\n\"I... hold our present position.\" I ordered as I stripped down. \"I've never... a Yautja before.\"\n\n\"She is a female in heat. Do me proud.\" The she elf urged with a narrowing of her eyes and a naughty smile.\n\n\"Well shit, I dropped my sponge!\" Isolenti cursed. Twenty seconds later I was standing behind her. \"Two! By the gods... Irk!!\"\n\nThe Dancer hung in space for an hour before we ran out of water for the shower. I strode out wearing only a smile when my HUD chimed.\n\n'Ding! Trophy Earned: Predator Dominated! Trophy Earned: She Dropped the Soap.'\n\n\"Damn boss, that was epic!\" Left declared proudly.\n\n\"Thanks, Left, Traci display our current location.\" I ordered as I approached the holographic display.\n\nThe image flickered to life and I recognized the shape of the space station instantly.\n\n\"No fucking way! I have seen this place before. I think. I was locked in a small asteroid and when I broke out this station, or one just like it was nearby. I couldn't get in though.\" I ranted as Traci brought the Ghostdancer into dock. There were a dozen or so small ships and one midsized transport taking up the main bay. The ship shuddered as clamps gripped it and held her fast. \"Let's go.\"\n\nI removed my more obvious weapons with the single exception of the Darksaber. I carried that with pride. Isolenti, Ynariel, and I entered the space station and found a party going on. Several other players and their guests were in full swing with the food and drink. The conversations died and everyone watched as my little troop joined them.\n\n\"Holy shit it is Ghost Fire!\" A few people exclaimed and then I was swept up, offered snacks and booze, and a seat on one of the couches. I introduced my guests as did the other players. All the guests were from crossover events. The other players had clearly put time and effort into their characters, and they ranged from a tanky paragon to an ethereal blue haired mage. The NPCs were from a popular war game and they ranged from an Imperial Assassin, a Sister of Silence, to an Adeptus Mechanicus. Yes, the Tech Priest with his hovering skull, just like the servo skull I had found on blasted Jerull. And the others were a Psyker, the dreaded Inquisitor, and the hulking behemoth of a Marine. I bet Thor and him would get along.\n\nThe lowest level of the station, and the largest, was a series of entertainment units of varying size and functionality. There were bedrooms for all of us and even those each had a style or uh a flavor to them. None of them were assigned but I took a fancy to the largest of them with a huge bed and plenty of maneuvering room. ",
        "\"I watched your live feed,\" Augury, the blue-haired woman, informed me. \"I thought that guy in armor was going to wreck you but good.\"\n\n\"That makes two of us. I believed I was done for when that hammer slammed into me.\" I admitted with a laugh. \"How long have you been here?\"\n\n\"About an hour, I came here in the Kree scout ship.\" She stated as she went to one of the windows facing the docking ring. Augury bent over at the waist and pointed.\n\n\"Oh, damn Aug, that is one fine ass!\" Disperse, the billionaire inventor and Toni Stark clone, cried out spoiling the moment.\n\n\"Sorry.\" I apologized and she shook her head. Suddenly I felt like I had just contracted the flu or worse. A tall athletic blonde woman dressed in black coveralls walked up and asked if Augury was okay.\n\n\"I'm fine.\" Augury replied while I stumbled away from the woman. Once I was ten feet away, I felt better.\n\n\"What the fuck?!\" I cursed and it was Ynariel that explained as she handed me a bottle of tequila.\n\n\"The fair-haired human is a Sister of Silence.\" She began as I cracked the seal on the liquor and poured shots for all of those that placed a glass within easy reach. \"Sisters of Silence are psychic nulls. They create an aura of anti-magic and nullify psychic abilities. Your adverse reaction is normal, and I urge you to stay well clear of her as will I.\"\n\n\"We have an accord on that one,\" I said. \"Did anyone see the large Shi'Ar cruiser arrive?\" I asked the gathered players. The consensus was that it had been here when they got here. I cursed before taking a generous swig of the tequila. \n\n\"What is up with that ship?\" Gimmick, the gadgeteer, asked as I poured a second round of shots.\n\n\"It could be a problem if left alone,\" I replied as a fresh bottle was handed to me by Isolenti. I opened it and took a drink. \"I tracked it from Jerull, the planet where I had my live streaming event. I wonder if it did well?\" I asked and Void, the pale skinned girl, showed me the numbers from her wrist device. \"Two million views and counting. Dang.\"\n\n\"Why are you really here Ghost?\" Augury asked with the Sister of Silence behind her a bit so as not to affect anyone.\n\n\"What do you get when you blend a Skrull with a Xenomorph?\" I replied with a question of my own. The expressions around me soured. \"Drink?\"\n\nI tipped back the bottle and chugged a good portion of it. I explained what I believed happened to those not familiar with either the Skrulls or Xenomorphs. The heroes and their companions split up and settled into different corners of the main chamber. Being the paranoid fellow that I was I conjured six shadow imps and had them search the entirety of this level. I directed them specifically to inspect the air ducts or any other crawlspaces. They silently went about my instructions as Ynariel sat in my lap as we waited.\n\n\"Your cock is poking my ass,\" Ynariel declared loud enough for anyone to hear.\n\n\"Are you two going to breed in front of all of these beings?\" Isolenti asked with the same volume.\n\n\"I guess sneaky sex is no longer an option,\" I added seeing everyone staring at us.\n\n\"Aw come on Ghost, let me suck you off.\" Ynariel purred. \"I don't mind if they watch.\"\n\n\"I've never witnessed humanoid breeding practices,\" Isolenti added with an uncharacteristic chuckle. \"Is oral sex that important to you?\"\n\n\"Let me show her how he'll react.\" The she elf begged as the shadow imps returned from their scavenging mission. They whispered from the shadow beneath the chair I was sitting in. \n\n\"We found strange things. We've stowed them on the Dancer.\" The lead imp informed us. \"We didn't want to show them to the others.\" I thanked them and dismissed them for now. I would reward the imps when I got the chance. \n\n\"I wonder what they found,\" I whispered in Ynariel's ear just as the entire level went dark. The whole station shook as red emergency lights came on illuminating the area. \n\n\"The ships!\" Augury hollered. \"The docking ring is moving!\" She screamed which explained the vibration shaking the space station. The players rushed to the windows and watched as the ships were lifted out of our line of sight. I tried to hack the station's security to get a real time security feed of the interior and exterior of the station. I was unsuccessful.\n\n\"I can't get access!\" Gimmick declared genuinely surprised.\n\n\"Neither can I,\" Disperse, the Toni Stark clone, snarled.\n\nSentinel, a female member of the golden skinned Sovereign race, went on the offensive and popped dark metallic claws. Like Disperse she was a clone of a more famous character and in the case Wolverine. Unlike Logan her claws were not adamantium they must be vibranium. I found that interesting. How had an alien gotten the Weapon X treatment? I would ask her when the opportunity revealed itself. She caught me looking and smiled nervously. She sheathed her claws before anyone else spied her secret. I touched a finger to my lips, and she nodded.\n\nI walked around and found an access port. I opened the panel and tied directly into it via Left. The system was staggeringly complex. I projected a hologram for the others to see and interact with. The overall shape of the hologram was hexagonal. The six sides were in three different languages Kree, Skrull, and Shi'Ar. Each of the six sides of the larger hexagon were made up of hexagonal icons interlinked in a honeycomb pattern. Gimmick found a way of exploding the view of the hexagon and the hologram went from a small two foot across display to one that filled the entire central chamber.\n\n\"Way to go slick!\" Void snarled. \"You broke it.\"\n\n\"I didn't break it. I showed the interior of it.\" Gimmick explained. \"Aw shit, this is bad.\" He cursed as someone stated our chief concern.\n\n\"Is it me,\" Augury commented. \"Or is it getting stuffy in here?\"\n\n\"The life support is off,\" Gimmick explained. I did not have issues with that. I put on my mask and it supplied me with fresh clean air. Like myself certain PCs and NPCs did not have problems with either lack of air, but with that came the deep cold of interstellar space, and potential radiation poisoning depending on if we were close to a source of said radiation. \n\n\"Search for radiation sources,\" I requested. \n\n\"I never thought... shielding is still up, I guess they want to preserve any electronics from getting fried.\" Gimmick mumbled as he ran the gambit of how fucked we were. \"It is going to get really fucking cold, and no air for now. I am working on those two for now.\"\n\nEveryone that could suit up did so which was most of those here though not all. The two that did not possess armor or environmental suits were Augury and the not so talkative Void. Augury however was a gifted enough mage to be able to create a big enough environmental sphere for now. I guesstimated her mana would run out in two hours if we did not run into combat. She and Void were fucked unless one or more of the upper floors had heat and oxygen. \n\n\"Someone or something is fighting me,\" Gimmick cried out as more and more of the icons went dark. \n\n\"We need to find our ships and call this a done deal,\" I said.\n\n\"What about those Xenomorphs you mentioned?\" Augury snapped in a mix of anger and fear.\n\n\"I didn't want you to panic,\" I replied even as she panicked.\n\n\"Track the drain Gimmick, I know you can do it.\" I urged as the windows began to frost over. The dominant metallic construction did not hold in the heat very well. As the gadgeteer worked hard the frost spread until by the time he was able to produce a real time image of the space station the entire level was engulfed in deep cold. I was fine as were Isolenti and Ynariel.\n\n\"I guess a blowjob is out of the question for now?\" Ynariel joked behind her mask. The others giggled but the tension was building.\n\n\"Xenos and the void of space what could be better.\" Particle tried and failed to joke.\n\n\"I got it,\" Gimmicked whooped. \"The station's main power is supplied here, by a power core that runs from the top here,\" he said pointing to where the docking ring now resided. \"It runs halfway down to the level here. Someone is tied directly to the core and manipulating things from there. If we can get to the ass end of the core I can physically tie in and turn shit back on.\"\n\n\"We have a goal.\" I said. \"Let us go. We don't have all day.\"\n\n\"What?\" Augury cried out her lips moving and that is when I realized that without oxygen normal communication is a bust. I touched all their thoughts except the Sister of Silence, she was on her own. I created a psychic hub and we coordinated that way for now. Gimmick produced commlinks for those that did not have them. Soon we were all up and running. With his map we were able to head for the freight elevator. It was the fastest and likely the most guarded route. If it were just me, I would seek out an airshaft to access the upper levels. There was no way we could do that with so many.\n\nGimmick brought the elevator down and not without some difficulty. I had my needler aimed at the double doors as they opened. Nothing sprung out and that worried the shit out of me. If we bunched up all of us could fit but that would mean suffering through exposure of the Sister's anti-magic field. I was not going through that. I strongly suggested those who did not use magic or psychic abilities traveling with her in the first trip up to the sixth floor. They agreed and took the elevator up.\n\n\"I feel deaf,\" Augury stammered her fear palatable. \"Anything could sneak up and we'd never hear it coming.\" She stated and she was right. I switched on my mask's motion sensor. We were surrounded! Stupid! I mentally chastised myself for being sloppy. I warned the others and took aim. Isolenti had my back and Ynariel covered the girls trapped in the mage's bubble. I pushed down my fear as the ceiling ruptured in three spots. The Xenomorphs broke through the thin metal construction of the overhead air duct. I opened fire. My first round struck the head of the bright green alien and it exploded in a shower of molecular acid. The floor melted where the blood struck and thanks to a lack of atmosphere we need not worry about explosive decompression. \n\nI saw Ynariel's formidable forearm mounted weapon in action for the first time. It fired off a cloud of glittering mesh that enveloped one of the Xenomorphs and sliced it to ribbons. She dodged the cloud of acid with ease forcing the Psyker that had been standing next to her to fashion a telekinetic shield to keep from being melted into nothing. Unfortunately, the floor around her vanished and took her with it into open space. I used my web shooter without thinking and thanks to Shuri's foresight it worked in the vacuum. The line struck her on the interior of her lower leg. I tugged her back in and she braced herself against an intact wall.\n\nParticle was firing off blasts of scintillating energy from the palms of his hands and eyes. Sentinel was slashing aliens and healing the burn damage with the aid of her incredible healing factor. While she was fine her poor costume was soon in tatters except the intricate belt around her waist. It appeared resistant to acid and provided her with heat and oxygen. Was it a kind of life support device? I admired her body for a moment before returning to combat. Isolent's plasma caster was busy as the rush of aliens threatened to overwhelm us. Void gripped Augury's shoulders and when one of the Xenomorphs leapt at them it passed through both, the floor and out into space. \n\n\"Void... ha, I get it now!\" I managed a laugh as I fired both plasma and crystalline shards at our enemies. The structural soundness of the hallway was quickly collapsing. I used FarSight and looked up to the next floor. It was swarming with Xenos. But the floor above that was empty for now. \"Hold on and don't move!\" I demanded as I teleported us up to the third level. \"Don't move... don't even think about it for now. Catch your breath and let them puzzle it out.\"\n\nWe stood silent and still as our meters recharged. \n\n\"How the fuck did you pull off a blind teleport?\" Void asked.\n\n\"Who said it was blind?\" I said and saw a strange hungry expression on Augury's lovely features. \"I just saved your ass remember that.\" I said the words directed at the blue haired mage. I felt the white-hot rage radiate from Ynariel directed at Augury. I touched her on the shoulder and sent her a sensual image to sooth her.\n\n\"The directing mind is above us,\" the Psyker informed us. \"I cannot interfere, but the source is clear. I believe Gimmick was correct. They are located at the top of the station.\" She paused and turned to face me. \"Friend Ghost, if we get to the sixth floor and he isn't there can you access the machine spirit of this place?\"\n\n\"Machine spirit, I've never heard it called that before, but yeah I should be able to.\" I replied.\n\n\"Excellent!\" She exclaimed gleefully. \"If we remain close, I can cloud the Xenos ability to detect our presence. That doesn't stop them from using the station's security devices.\"\n\n\"Great, let's keep our head's focused and get this done.\" I urged. \"Sorry, do any of you have any suggestions? I didn't mean to step over anyone.\"\n\n\"Not at the moment,\" Particle replied. \"If I think of something you will all know.\"\n\nI took the lead and we kept the Psyker in the middle. I tried to recall the map of this level to remember where the stairwell was. I did my best to navigate us. The Psyker called a halt. She informed us that a growing sense of frustration was building within the hive. Our sudden departure and their inability to find us was pissing off the queen mother. We heard the skittering as scouts were sent out to find us. I switched back to the spectrum for tracking the Xenomorphs and we prepared for a fight. On the bright side we knew where the stairs were, and we were closer than I liked to be honest. \n\n\"Ghost,\" Augury chimed in as I spied an alien crouching near a junction in two hallways. \"Why don't we just teleport to the sixth level?\" She asked and when I did not reply right away, she mistook my silence for bad news. \"Never mind.\"\n\n\"Follow me, I'll get us up there.\" I promised.\n\nIt took time and patience to evade the Xeno patrols. Patrols? When the hell did Xenos start acting like this? Was it the introduction of the Skrull? Had it raised their overall intelligence? That was a terrifying thought. I jumped in my skin when the emergency lights came to life flashing a warning, and the station shook. The vibration was followed up with a sudden lurching motion that nearly threw me off my feet. The tremor of grinding metal drowned out my curse. I received a burst transmission from Traci aboard the Ghostdancer.\n\n'Docking ring has been ejected from the station. The Dancer is still held by the grapples. Awaiting orders.'\n\n'Shift the wing configuration to free the Dancer. Report success or failure.' I sent back.\n\n'The Dancer is free. Reading a power build up inside the station.' She replied.\n\n'Free the other ships if you can. Destroy the colony ship if possible. We need to rescue the other players.' I transmitted and then informed the others watching their reactions carefully. \n\n\"What the hell was that noise?\" Void asked.\n\n\"I believe that Gimmick detached the docking ring.\" I explained as the station shook again but this time it was far less intense. \"That would be the engines of the colonist vessel exploding.\"\n\n\"Why?\" Augury asked clearly shocked.\n\n\"That was the ship the Xenomorphs arrived in.\" I conjectured. \"We have two options as I see it and you can disagree all you want but here it is in a nutshell. One, we continue like this and amass as many Xeno kills as we can. Two, I open a portal to level six and we jump into whatever slugfest is going on up there. I am okay either way.\" I paused to let them think about it. \"Oh, Augury you can drop your shield. Air and temperature have been restored. Take what little comfort there is from that.\"\n\nWe discussed several things one of them being the disconcerting way the aliens were behaving. A part of me was curious to why they were acting like security instead of ambush predators. Isolenti remarked at this oddity and felt like I did that something bad was in front of us. She welcomed it though as a greater challenge and chance to prove her skills as a hunter. \n\n\"If anyone wants to bail, now is the time.\" I added and none of them wanted to end the quest prematurely. Gamers to the end. \"Get ready for one hell of a fight.\" We dodged the last Xeno patrol and moved to the middle of the fourth level. We were directly beneath the power core when the strangest thing happened. My motion detector triggered for just a moment. The thud of a body hitting the floor caused me to turn and see Void prone with a lime green facehugger attached to her head. I scanned the hallway and sure enough there was an Ovamorph attached to the wall about seven feet up. My motion tracker must have picked up on the top of it opening. I felt a rush of anger as a transparent wraith rose from her body. The figure reached into the body and removed something. The facehugger shuddered and dropped off. The ghostly figure dropped the embryonic Xenomorph egg and returned to her body. She coughed twice before sitting up and cursing a blue streak.\n\n\"Motherfucker!\" Void snarled. \"I feel like I've been face fucked by a linebacker and not in a good way.\" I chuckled despite how serious the situation was.\n\n\"Their eggs can camouflage themselves! Is that typical?\" Augury asked and Isolenti shook her head. \"Wonderful, just wonder... did you hear that?\" She commented as a soft wet sound caught her attention. The cloaked facehugger slammed against the protective shield she had just erected. Isolenti beat me to the punch and impaled the squirming beastie with the point of her combi-stick. That did the trick. The Xenomorphs rushed in from both ends of the hall. More entered as the Xeno body count quickly rose. I relied mainly on missile fire for now and sent out lethal projectiles from my shoulder cannon and forearm mounted needler. Left started my combat music and I sunk into the aspect of destroyer. \n\nThe occasional fiery dart whizzed by my head as Augury took her allotted number of kills. I laughed as I brought out the Darksaber and waded into melee range. The black blade cut and cauterized as the flooring had become decidedly unstable from all the acid melting away not just the flooring but portions of the supporting structure as well. I was forced to use my wall clinging power when there was no longer enough floor to duel upon. The Xenos were equally equipped to fight on floor, wall, or ceiling with ease. I lost track of the others since the press of aliens was steady as if the queen had sent the entire nest against us. She might have seeing the steady decline in structural capacity. \n\n\"Time to go up,\" I sent and opened a portal to the sixth level. The players and companions stormed the gate and I held off the Xeno onslaught with fire and lightning. I was the last through and closed it as the aliens made one last mad dash for the opening. I stood, looked around, and cursed. \"Well fuck me sideways!\" The power core was revealed in all its former glory. The other half of our group had put up one hell of a fight. The Xenos had made the mistake of climbing and attacking from the core itself. Their acidic blood had eaten through the outer protective casing and nothing was going to stop it from going critical. I had figured that all of them would be cocooned and have facehuggers on them but that was not true. The marine in his resplendent navy-blue armor and the Sister of Silence clad in equally impressive black stood over their fallen comrades.\n\n'Traci, how far along are they?' I asked as she scanned the prone figures.\n\n'Only ten percent through the process. What are you thinking boss?' She inquired.\n\n'It is dangerous, but after seeing Void pluck out her own parasite I got a crazy idea.' I replied as I touched Gimmick's mind. 'Hey bud, are you in there?'",
        "'Ghost? Hey. Am I fucked? I got a countdown bar in my screen.' He sent back.\n\n'You got a facehugger on you. Listen. This could just as easily kill you as put you back in the game...'\n\n'Do it! I know the odds, just fucking do it!' He begged as did the others when I touched their thoughts. 'Here goes nothing.' \n\nThose still standing watched over me as the Xenomorphs positioned themselves for the last stand. I reached out using the Force and isolated the invading lifeforms inside the fallen. I held them in my mind and then using teleportation sent them into the heart of the power core. They were annihilated instantly. The facehuggers fell off since they had no embryo to maintain and the sleepers awoke. The queen, who sat astride the top of the core, lost her collective shit. The last stand was on. Left reached into my favorite folder of songs and picked the best heart thumping battle music for me.\n\n\"Bitch! It is you and me!\" I howled as I teleported to the top of the core with both blades ignited. She was still attached to the egg laying apparatus but was tearing herself free of it. To facilitate this, she shapeshifted to her Skrull form. She was heavily armored and carrying an ancient sword that might have belonged to nobility a thousand years ago. Whatever it was made of it resisted the Darksaber and the duel began. She was a mistress with the blade. This was not going to be a hit and run, no, she held her own quite easily. It unfolded like something out of the Princess Bride. I examined her metamorphic style as we fought. It was as mercurial as she was. She did not remain in her Skrull form. She shifted constantly altering her race as often as her height to throw off my angle of attack. \n\n\"The height of genetic memory,\" I commented when we locked blades. \"Your ship is destroyed. You have no way of escape.\"\n\n\"You would end my legacy?\" She spoke which almost allowed her to land a grave wound.\n\n\"Absolutely,\" I replied as her mind lashed out. I staggered back as her blade cut me across my diaphragm. \"Bitch!\" I retaliated with my own psychic attack. It was not just the queen that felt it but her entire brood. She desperately went on the offensive as I prepared to wreck her. How long had we been fighting? I had lost track of time. As I riposted one of her stronger strikes, I felt the teleport beams from the player's ships. They were abandoning ship. I lashed out with a devastating psychic blast staggering queen and nest. \"Boss chest, there has to one around here... ugh...figures.\" I cursed as I spied it under the wet mess of the remains of the egg laying apparatus. I latched onto it and ordered Traci to teleport me home. The last thing I heard were the following, the queen screeching in unbridled rage, the deafening 'whoomph' as the last of the containment seals ruptured, and the roar of matter and antimatter mixing.\n\nThe Ghostdancer joined the other ships a parsec away and watched the light show as the newborn nebula took form. Void was the first to register the brand-new stellar object. \n\n\"I've transmitted the sighting to the Astronomica Galactica. Unless someone else beat me to it, it will be known now and forever more as the Ghost Fire Nebula! Best session ever!\" She shouted.\n\n\"I agree,\" Gimmick added. \"If you ever need players for another crossover here's my info.\" I received friend requests from everyone but Augury. She had already logged off. When I asked what her problem was, I learned about not just the character but the player as well.\n\n\"You have not heard,\" Sentinel explained. \"She was only there in hopes of targeting you.\"\n\n\"Targeting me, why?\" I asked knowing my gut instinct about her had been right.\n\n\"Her main power is stealing other's abilities. She is like Rogue from Xmen and a vampire. She feeds off others and that is how she has gotten so powerful so quick. Most players see the name Augury and quit quests because of her. I hate to say it, but her track record speaks for itself. I'm not trying to be a dick about it, but it is the truth.\" Sentinel said her voice soft and contemplative. \"You got lucky.\"\n\n\"Since we are all still here where is the nearest place, we can divvy up the boss chest?\" I asked feeling strangely generous.\n\n\"Contraxia!\" Several voices called out at the same time.\n\n\"I'll meet you guys there.\" I said as Traci plotted a course and fired up the Bifrost drive in front of the others. \"Why did you do that?\"\n\n\"Aw come on, you are a legend act like it.\" Left and Traci agreed. \"You'll be feeling no pain by the time they arrive.\"\n\nYnariel slid into my arms, pushed up my mask, and kissed me. \n\n\"I hear the Iron Lotus has some unique entertainment options.\" She purred in my ear.\n\nLeft was correct. I was on my second bottle of Kree Ambrosia when the others arrived. They were delayed even more when they spotted the Dancer and ogled it for a few minutes. I had set up a tab and treated them to food and drink. The famed Love-Bots were on display outside the galaxy's most well-known brothel, the Iron Lotus. The robots declared among their amenities were such features as self-cleaning, self-lubricating, built-in vibrators, and lack of gag reflex. The bright yellow skin was so that you knew you were renting the absolute best an hour at a time. If you wanted them to whisper sweet nothings in your ear that was extra.\n\nWe spent an hour going over the happenings during the quest aboard the space station. I could feel their desire to see what was in the boss chest. I activated three heavily armored M3 droids to carry and escort the unopened container to our table. The six barrels of the auto-laser discouraged any shenanigans from onlookers. I opened the chest and an option I had never encountered before popped up.\n\n'Do you wish to share the contents with other players?' Y/N?\n\nI selected yes of course. There was a short pause as it divided the treasure amongst us. My share was modestly larger and still substantial. The others each received an item suited for their occupation or to boost one of their powers/abilities. I received two hand carved figurines, one a raven or crow, the other a coyote or a wild dog. I did not know their significance, but Void did. She commented when I let her handle them.\n\n\"Trickster gods,\" She declared. \"You know like...\" She continued before I could stop her. \"...Loki.\"\n\nThe popping sound and gleeful cry drew everyone's attention to the air above me. Loki, clad in only a minimalist's idea of lingerie, fell into my lap, and held me close to her ample bosom.\n\n\"Ghost man!\" She declared to anyone nearby. \"Your child grows inside of me a bit more every day. Do the right thing would you.\" She cackled with laughter. \"I missed you, both of them.\"\n\n\"What does she mean by both?\" Void stammered afraid of the answer.\n\n\"I want to introduce you to the sole master of the most ancient and sensual art,\" Loki paused for dramatic effect. \"The Double Dragon... duh-duh-duhhhhh!\" Void's expression was still uncomprehending. \"He can summon a second cock silly girl.\" \n\n\"No shit!\" She exclaimed and I saw her working it out. Then she turned to grin at Ynariel. \"You lucky little shit.\"\n\n\"Indeed.\" The she elf smiled back. \"I'm sure he would not mind me telling you that he fucks like a machine. He wore me out and that is saying something I assure you.\"\n\n\"Come on Ghost, there's enough of you for me and your little she elf.\" Loki purred as she ground against me. \"I'll pay for the room.\"\n\n\"Fine, you talked me into it.\" I conceded. \"Just don't tell you know who.\"\n\n\"Now who could that be?\" Loki giggled mischievously. \"Does it begin with an A?\" She growled as she continued. \"Does she have red hair? Need I continue?\"\n\n\"Hold the fuck on!\" Gimmick exclaimed in understanding. \"Are you telling me that you...\"\n\n\"Say it,\" Urged Loki like an addict looking for her next fix. \n\n\"Not only have you made love to this gorgeous woman but Angela of Asgard too!\" He said and barely had the name been uttered than Thor's sister appeared via the Bifrost. Very showy entrance and it just got better.\n\n\"Release your talons on him foul one!\" Angela ordered Loki. \"If anyone is going to bed him, it will be me!\"\n\n\"Shit is about to get real,\" Void laughed nervously.\n\n\"I don't suppose I have any say in this.\" I said knowing better.\n\n\"Hush man flesh,\" Angela growled playfully. \"Women are talking. Don't fret, I'll save you.\"\n\n\"Save him you Teutonic tart,\" Loki fired across her bow. \"After a night in my bed he will forget your name.\"\n\n\"After a night with you he would need a long hot shower and a weekend with me to drown his sorrows.\" Angela replied. \n\n\"If I may,\" Ynariel chimed in smoothly. \"Why not put it to the test as it were. Has he bedded both of you at the same time? No. I can see that has never occurred.\" She plowed ahead without waiting for an answer. \"I would be honored to offer up myself as referee and bedroom arbiter.\"\n\n\"I like her.\" Loki stated as she gave Angela a sidelong glance. \"Well? Or are you afraid?\"\n\n\"Strike the colors of Asgard!\" Angela roared. \"Heimdall... mead enough for say three days!\" The Bifrost manifested once more but only several large oaken casks, called tuns, appeared. I was told each held 303 gallons of aged golden mead. I remembered the last time I entertained Angela of Asgard. My stamina bar turned orange showing alcohol poisoning. I helped her carry the casks into the brothel and up to the emperor's suite. It was garishly painted in the erotic colors of sunshine yellow and electric pink in honor of the one time the Shi'Ar Emperor supposedly visited and bedded every Love-Bot the madame had available. \n\nOne cask was left outside where the festivities began. Everyone there was invited to celebrate with us. The ravagers, intergalactic brigands, hit it hard and quickly learned the lesson to pace yourself with Asgardian booze. I took my time and savored the build up to what was likely going to be a most entertaining three days that I may or may not remember. While the ravagers were splayed out on furniture, the ground, and even ornamental plant life one of them began singing a raunchy spacing song. I conjured a guitar from the stuff of shadows and slowly plucked out the music.\n\n\"...a talented girl from Kree, so gifted she could stand up and pee. A Shi'Ar called foul while a Skrull girl grew a zowell and pissed all over her knee. Oh! I have fucked every kind of girl that is out there. Some dressed, some slinky, or plain bare. Some don't swallow, when I slide in their hollow, and bitch when I don't pay them to follow.\"\n\nIt was a terrible song but catchy. Once the booze ran out the party moved inside. I joined the ladies in the Emperor's Suite via Angela's shoulder. It did give me an amazing view of her naked ass while she staggered up the steps. I had a sudden image of T'Challa, the Black Panther, and King of Wakanda being hoisted over the gorgeous redhead's shoulder like a sack of grain. I giggled and the Asgardian asked me what was so damn funny.\n\n\"Just this,\" I snorted uncontrollably. \"Quit squirming my princely kitty cat, men should be ridden not...\"\n\n\"I didn't say that,\" she roared interrupting me. \"It was more like... purr for me baby...\" She giggled while I burst out in uncontainable laughter.\n\nThat was the beginning of what the madame of the Iron Lotus chronicled as the loudest, most drunken tri-dakka of sex, nudity, and wanton debauchery she had ever witnessed. I only learned later that the term tri-dakka was the native's term for weekend or in this case three days of uninterrupted pleasure. After I had slept nearly twelve hours, I woke to find I had been made an honorary member of the Ravagers, from the flame shaped patch left on the nightstand. How was I to know the cute Asian woman that wandered into my room was in fact none other than Aleta, a captain among the organization and a talented and creative lover. \n\n\"She tore that off her jacket by the way,\" Ynariel whispered in my ear. \"I think you impressed her boss.\" A short pause before she continued. \"Oh hey, Void sends her thanks for the gifts.\"\n\n\"Oh yeah, I remember now.\" I said as it took a moment to recall what had transpired. \"I bought her basic shapeshifting after she curled my toes.\"\n\n\"You were damned impressed by her enthusiasm.\" She laughed. \"I promise to be that enthusiastic in the future.\"\n\n\"No need, you knocked me for a loop the moment you kissed me.\" I told her and she knew it was the truth. The low-level telepathic link we shared told her that. She had asked before establishing it. It was a sign of respect and intimacy. There were no secrets or lies between us. If I found another woman attractive, she knew it. The same was true if she found a male or female attractive. There was no jealousy only truth. \n\n\"Ghost Ravager, has a nice ring to it.\" She stated with a kiss to my neck. \"We could repaint the Dancer if you want. I always wanted to live a life of piracy. And think of it, a crew of blooded Yautja to back you up. Aw, come on captain, let us fuck some shit up!\"\n\nNaked I conjured a guitar from the stuff of shadows, walked to the balcony attached to the emperor's suite, and began playing. I serenaded some of the Love-Bots below who were attempting to drum up business. I glanced at the guitar and I realized I had forgotten to pay the shadow imps that I had conjured on the space station. I called their leader back. He appeared as Ynariel pressed her body against my back. \n\n\"I am so sorry little dude,\" I apologized to the toothy beastie. \"I got so caught up and lost track.\"\n\n\"S'okay boss man, we understand,\" he said smiling and eyeing the naked she elf. \"Hello sister, long time no see.\"\n\n\"How is it hanging Grit?\" She giggled. \"It has been what, three hundred years?\"\n\n\"Yeah, about that. Perfect hook up the two of you. An elfin she mage and the Champion of Anackire make a great couple.\"\n\n\"Will this cover it?\" I asked tossing him a huge chunk of blue vorpalite. \n\n\"More than generous as always champion.\" Grit the imp said with a smile and a bow. \"Anything else I can do for ya?\"\n\n\"I'm good for now.\" I said and with another bow the imp faded away. \"So, you and Grit eh? Should I be jealous?\"\n\n\"No, just an old friend when I walked the path of the mage.\" She explained. \"My people walk one path at a time for a century of so. Of course, sometimes we get trapped and lose ourselves on a path.\"\n\n\"Is it time for a change for you?\" I asked.\n\n\"Hm, good question... I have been on this one for a long time. Perhaps it is time for the path of the corsair.\" She paused for a moment before continuing. \"How do you do it? So much at the same time?\"\n\n\"It is about balance. I try to keep combat, magic, and music all in the air at the same time.\" I replied. \"I collect a lot to keep me amused and busy.\"\n\n\"You collected me,\" She purred in my ear as her hands wrapped around my waist. I felt her head on my shoulder. \"I have never felt more loved.\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "anal",
        "dp",
        "group sex",
        "harem",
        "oral",
        "anal sex",
        "group"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-13"
}