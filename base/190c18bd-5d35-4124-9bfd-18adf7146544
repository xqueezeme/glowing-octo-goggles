{
    "title": "Isolated Property - Bonus Scene 05",
    "pages": [
        "Avery swam back to consciousness reluctantly. The gnawing in her stomach was constant and it flared from time to time to remind her just how miserable she really was. It was nothing compared to the dryness of her mouth and the weakness in her body. The chain he'd used this time was too short to let her reach the bathroom or even get up into the bed so there had been no access to the sink or toilet after he'd left. Her hands were behind her but she'd managed to pull the blankets off the bed to make a small nest for herself on the floor as far from the smell of her excrement as possible. It didn't help much.\n\nIf he didn't come back soon she was not going to make it. She knew at least two days had passed. Despite the constant fading in and out, she felt time crawl to a standstill. Dehydration confused her, sent her mind down long corridors of thought before she turned around and realized she had no sense of how she'd gotten there, having forgotten all the thoughts that preceded it. Her heart beat felt sluggish and too loud in her ears; her bony joints dug into the hardwood below the blankets. She didn't even have the energy to wish for salvation, just the thought running desperately through her head.\n\nHe'd come back and fuck her, and make the world right again.\n\nIt might have been minutes or hours later that she felt his footsteps thudding towards her through the hardwood floors. She didn't have the energy to respond to him calling her name. He sounded scared, out of control. It would have frightened her if her relief wasn't so overwhelming. She didn't want to die.\n\nThe door to the bedroom burst open with a bang.\n\n\"Holy shit, Avery.\"\n\nShe felt his hands on her neck, feeling for her pulse. His hands were cold from outside but his fingers didn't shake.\n\n\"Shit, shit, shit\"\n\nShe cracked her eyes, opening her dry lips. Keys jingled, the cuffs fell open and he lifted her off the floor. She felt his body, clothed but warm as a welcome balm as he carried her out of the room. Then water, cold and unpleasant on her skin, rushed at her from the shower head above. He tilted her face upwards and she let the stream between her lips, washing away the days of starvation. Her whole being focused down to the sensation of the cool liquid running over her tongue. She'd never tasted anything better. His hand cradled her head, holding her up against his body as his clothes were soaked. When her stomach protested the onslaught she leaned forward, resting her forehead against his chest. His hands ran over her body, the smell of soap soon banishing the stench of neglect.\n\n\"I almost had them. I didn't mean to be gone so long.\"\n\nShe didn't have a response for that.\n\nHe kept her anchored to him with one hand as he washed her thoroughly. She was limp, unable to hold any of her own weight. He helped her to drink more. The shower ran hot then cold again as he touched her, checking every inch of her skin. It wasn't in itself a sexual act, more like repossession.\n\nWhen she was clean enough he transferred her to the couch. She felt a band squeezing her arm and a sharp pinch at the inside of her elbow. If she'd had the energy to move she might have reacted but the most she could muster was a frown. The lingering ache under her skin where he'd jabbed her got her to open her eyes. There was a saline bag dangling from one of the embedded rings in the ceiling on a rope he typically used restraining her. He was connecting the fluids to the IV line in her arm.\n\n\"It's okay, Angel. Sleep. I've got you.\"\n\nBut he didn't have her, he'd left her alone for too long. He was breaking his promise. Her throat was too dry to say anything and she was too tired to fight. The door slammed shut on consciousness and she was gone.\n\n*\n\nHer dream was so vivid, a memory more than a fantasy. One she could not turn away from though she felt the dread pit in her stomach.\n\nShe was bound in place in the rocking chair, stuffed full with toys, ropes crisscrossing her body in an unyielding embrace. Harrison was fishing down at the lake and she could see him through the trees from time to time. She didn't know if he'd set the toys on a timer or he was manipulating them from where he was but either way she had precious few faculties left to contemplate it. Her hips pushed forward as the vibrations faded, leaving her on the edge. The movement made the chain that attached her nipple clamps to the one on her clit sway with the weight and she moaned into her gag.\n\nHe might be gone for an hour, he could be gone for three. There was no way to know how long he'd keep her there, stuffed and desperate. This was nothing new, another day in a long chain of days where she existed as herself only in times between his final violation of the evening and sleep. He had been more stable of late, which meant far too much of his attention was directed towards her. She had begun to lean into her role, allowing herself to revel in the fact that she was his anchor in the storm of his mind, finding some amount of power in it, however misguided it might be.\n\nShe squirmed again, the vibrations began a slow, tortuous increase in intensity. Behind closed lids she imagined him returning, the wild look in his eye. He'd fall on her, bring her to rapturous climax as she brought him back down to earth. He revolved around her as she existed for him.\n\nHer dream-self heard the call, and the creaking of the deck. In reality that day, she had been too lost in her fantasy, too distracted to hear the alien sound of another person's voice.\n\nIn the dream his face crystal clear, the black beard streaked with white down from the corners of his lips, his worried expression and shocked blue eyes. Even the hand he reached out to release her gag-- the scars on his fingers and the smell of cigarettes from his skin.\n\n\"Dear lord, are you okay?\"\n\nShe hadn't heard another person in almost a year, not a song, not a movie, not even a radio. She wept in her dream because she knew how it would end; her true tears had been from the reckless reappearance of hope.\n\nShe shook her head violently. \"No. Please, help me.\" She sobbed, chest heaving as he moved to try and unbind her. Look up you idiot! Her lucid mind shouted. But because she hadn't that day she did not see him charging up the bank from the water, still naked from his swim.\n\n\"It's alright, miss. I'm going to get you out of here.\" The man's voice was low, gravely from age and too many cigarettes. Her right wrist came free from the arm rest. She turned to work on the left while he went to her feet. Finally she raised her eyes and saw Harrison leaping up the rise towards the porch. Her scream did not warn the man of his impending death, it simply caused him to jerk back from her so that Harrison could get a clean shot off. She was staring into those blue eyes, full of pain and shock as the bullet travelled through his neck, crimson ribbons of blood exploding outwards in its wake. He had only enough time to raise his hand to the wound before falling at her feet, crumpled on his side, empty face staring past the chair at nothing.\n\nHarrison rushed at her, pistol clutched in both hands. He confirmed his kill and began to sweep the area. \"How many?\" he hissed at her.\n\nShe didn't respond. She kept staring into those empty eyes.\n\n\"Avery!\" Harrison snapped. He took her chin in one crushing grip and turned her face towards his. \"How many?\"\n\nShe stared blankly at him. He cursed in frustration and took off, clearing the house of any more intruders. Avery hoped desperately that no one had accompanied the man at her feet.\n\nShe looked back at the body. The denim over his upper thigh was faded in the shape of a rectangle, most likely from a wallet he always put in the same pocket. His leather coat was well-loved but of good quality over a flannel shirt in deep red and orange. He'd put those on this morning, put his things in his pockets, sliding his arms into the sleeves, never once suspecting that would be the last time.\n\nShe'd considered trying to untie herself, but as soon as she'd tugged at the ropes she'd realized she would never get far with Harrison on his vigilant prowl. In her dream, the long hours she'd sat there compressed themselves down to seconds as the body grew cold in front of her. By the time Harrison finally declared the property secured and came back to release her, she was unresponsive despite his aggressive attempts to get her to debrief him on the incident.\n\n*\n\nShe woke up slowly, almost crawling out from the dream. Her cheeks were wet, her body still felt heavy. It didn't take much for the screaming to start, the nightmare of blood and death was right within her grasp. Harrison appeared by her side, controlling her flailing and trying to soothe her awake.\n\nWhen her eyes met his, her tears spilled over again. She reached for him, wrapping her arms around his neck and weeping into his shoulder. He rubbed her back, his large fingers running along her spine, much more prominent of late. In the two weeks since his neighbor had unexpectedly shown up without somehow tripping any of Harrison's security alarms, he'd been completely consumed with an incursion he felt was imminent and had largely left off caring for her. She'd been living off water from the tap and meals he remembered to feed her since that day.\n\n\"I've got you, Angel.\" Perhaps he meant it to be comforting. It was not. She simply nodded and released him, lying back on the couch.\n\nHe needed her now, even if it wasn't as effective during this acute crisis, she still felt like fucking her made him feel better on some level. She had precious little energy but she used it to spread her legs around him, lifting her arms over the back of the arm rest by her head. He observed her offer, his eyes rimmed in red and dark shadows beneath them, his face gaunt with exhaustion and manic energy at its limit. She kept still, completely complacent, steady when he could not be--until she saw the rope in his hand. If he tied her, he might leave again. If she fought him, he would bind her more. She needed to deter him without a show a resistance.\n\nShe didn't move, but her entire body tensed, her eyes locked on the restraint in his hand. Her breathing picked up and she began to shake. Tears spilled over as he reached for her hands, her face rigid with panic. And still she didn't fight. It wasn't until the rope tugged on the cuff's ring that she began hyperventilating in earnest, twisting her body in fear.\n\n\"Fuck it.\" He muttered, and the weight on her wrist was gone. She settled again, as fast as she could, lingering tremors running through her, limbs blessedly free. He was on her, crushing her into the couch, grabbing at her body possessively. It didn't feel good. When he penetrated her she was dry and unstimulated. It hurt but she didn't make a sound. He didn't look at her as he rutted, grimacing with effort. She could see it wasn't working. She debated being more actively engaged but she feared any change in her behavior would make him more suspicious.\n\nShe began to lubricate, the act became incrementally more tolerable though not quite pleasurable. It hadn't been for weeks now so she expected very little at this point.\n\nHarrison had been looking around while he fucked her, barely focused on the act that was supposed to bring him out of the paranoia. Helplessness pitted Avery's chest. It wasn't helping. She didn't know how much longer they could go on like this. Her eyes closed, her weakness irritating her as she turned inwards, feeling her body as he battered her. The fluids had helped, she felt like she had to pee again finally. Her muscles were shaky but some food would help with that. She could bounce back if he'd remember to feed her.\n\nSince she'd been trapped he had never let her feed herself. She could hold a cup, but any sustenance came from his hand. It was so ingrained at this point that when she imagined eating she envisioned being fed.\n\nThe assault ebbed, his pace stuttering to a halt and she felt his hand brush her cheek, wiping away new tears she hadn't felt leak from her eyes.\n\n\"Hey, Angel.\" His voice was rough, tired. The jovial twang that rose with his moods was subdued into the simple syllables of his accent. Her eyes flickered open to meet his. He was looking at her, for the first time in weeks, truly looking at her. There was the lost look in his glassy eyes, his pupils wide and expression tight. His hair was months out from his last buzz cut and starting to reveal a soft curl she'd never known he had. He was ragged, and she imagined she looked much the same.\n\n\"I got lost again, Babe. I thought they were...\" he trailed off, his uncertainty shaking her foundation more than anything else. She waited for a beat, not knowing the next move forward. Should she speak? Would that make it worse? Was she allowed to soothe him? Confusion froze her in place, keeping her open to him at all costs.\n\nHe stroked her hair, tracing her cheek from temple to chin with gentle fingers. He took his time, sitting up and working his way down her body without ever pulling out of her. She could feel his cock, hard and heavy inside her. \"I haven't been taking care of you how I should.\" His hand clasped her rib cage just below her breast. He kissed her collar bone. \"That's gonna change, Angel. I promise.\"\n\n\"Harrison?\" There were too many questions in his name, spoken softly as ever.\n\n\"Yeah baby, I'm gonna make it better.\" His eyes were more focused than they had been, his face looked less drawn, even his voice had some lift to it. She watched the change come over him until he dove in, lips slanting over hers, coaxing and gentle. She responded, opening up to him, eager sounds from her throat as he kissed her.\n\nHe released her mouth, kissing down her body sweetly, none of the domineering assaults of before. It felt like an apology, though he would never say it. She moaned for him, signing happily as he settled between her legs. When his tongue found her slit she practically purred, her hips rising to his eager mouth.\n\n\"Oh, yes, please.\" She begged, pleading for release, for pleasure, anything to wash away the fear and desperation of the last few days. She needed him to know she would be with him, completely, dedicated and obedient. All he had to do was stay with her. He groaned into her pussy, encouraging her arousal. She curved her spine, pressing her feet into the couch and lifted herself more firmly against his mouth. His hands slid up under and around her thighs, pulling her back down and locking her in place while he laved her pussy with attention. She panted, getting closer, feeling the ribbons of sensation start to unfurl from her groin. \"Oh please, Harrison, oh please.\" Her words strung together, a mantra of affirmation. She would be so good for him, there would never be a reason to leave.\n\nEven in his firm grip her body rose as her climax hit her. She called his name, basking in the waves of pleasure he sent up her body with the flick of his tongue. He kept at it, drawing it out, keeping her writhing body in place while he drew out every last tremor she could manage.\n\nWhen he sat up again, sliding home into her slick cunt immediately, she welcomed him in, drawing him deeper as her legs wrapped around him. She froze for a second, unsure how he would respond. To her surprise he ran his hands along her thighs and hiked her legs up on his hips.\n\n\"Oh yeah, Angel,\" he groaned as he pressed against her, locking their hips against each other and grinding her sensitive flesh under his pubic bone. She wanted to sink her fingers into his hair, to draw him in, but she kept them above her, grasping the arm of the couch instead. \"This is it, touch me Avery.\" It was hard to follow a command that so contradicted everything she knew up until this point. He took her hand and guided it to his cheek. She brought the other on up, fingers running through his soft hair.\n\n\"Harrison?\" she gasped the question as he responded to her touch by fucking her harder, deeper.\n\n\"It's okay Avery, touch me. I want to feel you.\"\n\nShe ran her hand softly down his arms, feeling the muscles bunch and flex as he fucked her. She traced the tail of a comet on his left bicep up to a blooming rose and skull in his shoulder like she'd fantasized doing so many times before. She ran her finger along the skull's teeth, the skin the smooth despite the illusion of the patterns etched underneath it. Her left hand rested on the side of his neck, fingers behind his ear, thumb stroking the muscle that held his head up. She looked up at him, watching how her touch pleased him and smiled.\n\nShe ignored her weakness to lift her head up, pulling him into her. Her lips met his for the first time, soft, caring. She took her time, bringing him back down with her as she rested her head again. She molded her lips to his, kissing him over and over before slipping her tongue out and running it along his bottom lip before his mouth opened in response. It was an unhurried introduction to how Avery kissed. His pace had slowed and it seemed he was as consumed as she was in their locked lips. She ran her hands down his back, along his sides, shifting her thigh so she could grasp his waist as she tilted her hips, bringing him snuggly up against her and as deep as he could go inside her.\n\nHe started again, rolling his hips into hers as her hand gripped his back, her legs wrapped around him, encouraging him with whatever strength she had. She kissed his neck, cradling his head. When he ground down on her clit she gasped next to his ear, feeling the tremor it sent down his body.\n\n\"Oh yes,\" she whispered.\n\nHe pulled back, looking down at her, enthralled but still wary. She smiled at him without a moment's hesitation, her eyes hooded and relaxed. Whatever he saw led him back to her, kissing her firmly as he moved against her in just the right way. She grasped the back of his neck, fingers twining around each other. \"Oh please, Harrison.\"\n\n\"Yes, Avery, come for me baby. Show me how good it is.\"\n\n\"It's so good, it's so good,\" she gasped over and over as her orgasm hit, rolling through her in languid waves. She held him to her as he came deep inside her as well. \"It's so good.\"\n\nWhen she woke up again she was back in his bed. The room smelled freshly cleaned but there was a lingering odor underneath the chemical smell that was unpleasant. She pushed away the fear that rose up. He was back, she was safe and clean. Her bladder felt like it was filled to bursting and it took her a moment to realize there was no bondage holding her to the bed, not even a chain attached to the collar.\n\n\"Harrison?\" She called out. Unease settled in her chest. She needed to get to the bathroom but could she walk there? No reply. She called again but couldn't bring herself to raise her voice too high. Whatever the price, she would not soil herself when she could avoid it. Shaky legs brought her to the bathroom and she was able to attend to herself.\n\nHe was waiting in the bathroom when she stepped back towards the bed. She faltered, scared. He quickly stepped towards her, catching her around her back and pulling her into him. She rested her hands on his arms, looking up at his serious face.\n\n\"I'm sorry I didn't wait,\" she said in a rushed, low murmur. \"I called for you but you didn't--\" he cut her off with a soft kiss. Her hands traveled up his arms and around his shoulders as she rose to his lips and returned it.\n\nHe broke the kiss, resting his forehead against hers. \"Avery, you could have died.\" He kissed her forehead, pulling her head to his shoulder. She hugged him tighter around his neck. \"I won't leave you again. I won't leave you like that ever.\" He pulled away looking into her eyes, \"I can't lose you.\"\n\nShe smiled up at him. \"I'm right here.\"\n\nFor a moment he held her there, pressed against him as he searched her face for any trace of anger or malice and found none, she had none left. Until her stomach gurgled loudly and she giggled softly.",
        "He smiled too, not his cocky smile, but some broken thing that was still learning how to use those muscles again. He took her hand and led her to the kitchen, stopping for a moment when she swayed as dark spots danced in her vision, and scooping her up to carry her the rest of the way.\n\nHe put a plate of rice and eggs in front of her, a spoon stuck into the rice for her. She waited, her hands crossed in her lap until he came back with coffee. He smiled again, more confident this time when he saw she wasn't feeding herself. He took up the spoon and gave her a small mouthful.\n\nTaste exploded on her tongue, as if every grain of salt and every ounce of fat was making itself known to her for the first time ever. She moaned with pleasure and swallowed it quickly, opening her mouth for more.\n\n\"Go easy, Angel.\" His voice sounded more normal now, a brightness in his vowels returned that dulled when he was too far down a dark place. \"You gotta let your stomach adjust.\"\n\nShe nodded obediently and let him set the pace.\n\n\"Things are going to change, Angel,\" he waited to speak until after the first few mouthfuls so she was able to focus on more than just food. He was right, her stomach was filling rapidly. \"I don't want to leave you in that position ever again, so we're gonna get you back on your feet and then you'll start coming with me on patrols.\" She nodded, eager to accommodate him. \"You're good now, you know how to behave and I think you're ready.\"\n\nAvery smiled, swallowing another bite. \"I'll come with you anywhere.\" She did not want to be left alone again.\n\n\"I know, Angel. You're my good girl.\"\n\n\"Thank you.\"\n\nThe smile on his face was pure now, he beamed at her as she did him. \"That's right.\"\n\nShe couldn't make it more than halfway through the food. The joy of the first taste settled back to blandness quickly, the pace still not slow enough to accommodate her shrunken stomach and she felt the food like a weight just under her ribcage. \"Harrison,\" she started to say but the food was already coming back up. She turned and hurried back to the bathroom, holding her vomit in her hand and praying she made it to the toilet before the next wave came.\n\nHe followed her more slowly, walking in on her hunched over the bowl as she lost most of what he'd fed her. One large hand soothed her, pulling her hair back and running down her back. It was no use though, the smelly stuff was already matting the dull blond strands. He reached over and turned on the shower, letting it run hot until she'd finished heaving.\n\n\"Wash up, take your time. I'll clean the kitchen and make you something easier on the stomach.\"\n\nHe left her then and she crawled into the shower, letting the hot water run over her, reviving her a bit. She stood, embracing the steaming spray on her body, feeling more human again. She drank deeply again and cleaned the taste of vomit away. It was the first shower she'd taken alone in what must have been a year at this point. She turned the temperature up, enjoying how it turned her skin pink.\n\nAvery was washing shampoo out of her hair when she heard the thud of his ax outside. If he was chopping wood it was a good sign, it helped bring him back down to earth. She listened further, waiting until he hit the rhythm she was looking for, the one that had been the soundtrack to many of her hours spent waiting for his mind to settle.\n\nMaybe things would change.\n\nHe'd put a smoothie for her on the kitchen table. She left it there on her way to the back porch. She needed both hands anyway. She left white plaster marks on the door as she pushed it open but quickly returned her grip. The wood pile was off to the left and the support beam to the porch room partially hid him from her view.\n\nShe took one step to the side and swung the pistol up.\n\nMuscle memory was an amazing thing. Despite the weakness she felt, and the weight both physical and emotional of the cuffs on her wrist, or the cool spring evening air on her wet skin, she knew exactly when she had her shot lined up. It was the same feeling she'd had when she was 10 and she had hit her dad's furthest target for the first time, the same as the test for her instructor license at the shooting range, the same as in basic training. Her arms complied, her eyes lined up the shot, her muscles tensed to hold her steady and she pulled the trigger.\n\nThe first two shots hit him in the upper left chest and shoulder. The third went over him as he fell. The fourth took out his right arm at the bicep that was still clutching the ax. She paused, listening to his wheezing breath before she stepped down off the porch. She walked over slowly, gun aimed at his chest as he struggled to make it rise. She saw the left side wasn't heaving like the right. The bullet missed his heart but got his lung. Her suspicions were confirmed when she came up next to him and his mouth was full of blood. He coughed wetly and sent it spraying into the air. For a moment she stood there, watching the dark liquid pour out of his wounds and onto the grass, his face turned towards her in shock and pain. She saw it there, the lost man who had so desperately sought sanctuary, his eye pleading to make her violence towards him untrue, the true fear of finally losing.\n\n\"A-Angel,\" he gasped, the blood pouring over his chin as he lifted his head and tried to reach for her.\n\n\"Fuck you, Harrison.\" She raised the gun again and put the fifth one in his right cheek and out the top of his head.\n\n\"I win.\"\n\nHis face was still, completely. The mark below his right eye might have been a trick of the light in the evening, though the blood streaked from his mouth was harder to explain. She crouched where she was, the pistol balanced on her right knee, finger still on the trigger in case he rose again. Her eyes locked on his chest. No movement.\n\nThe plaster under her fingernails irritated her. Her left thumb picked absently at the other fingers before a sharp pain under her nail drew her attention. A small ribbon of red wove itself through the white.\n\n\"Fuck.\" she muttered. Cuts under the nail were the worst.\n\nShe'd been careful when she'd taken the mirror off the wall so it couldn't be glass, more likely some splinter from the wall got caught. The water had been running, and the regular thunk of his ax helped her time her movements between logs. The mirror had been painted in so it took force she didn't deserve to have in her state to wedge the small nail file from the medicine cabinet between the frame and the wall. Once the crack had started though, the mirror came away easily.\n\nThe steam from the shower was filling the room as she felt along the wall for the square she'd hollowed out so many months ago. Pure plaster felt different than the painted plastered wall and it gave a little when she pressed on it. The steam helped. Nail file and fingers dug in, the softening white crumbling as she clawed at it. Would it still be there? Had he found this one too? Maybe he'd known about it all along and just let her believe there was one last tiny shred of hope? Was this was all part of his plan? She was failing his test, there was no way to hide what she was doing now.\n\nThe ax was still falling outside.\n\nWhatever thoughts had entered her head, somehow her body knew to keep moving; some part of her that had held out against everything he'd done was in charge even as the panicked, beaten part of her sobbed for their rebellion. When the plastic of the moisture barrier bag came into view it didn't matter. She crushed the weeping girl in her head. Weakness and hunger were forgotten. A strong surge of hope, something so visceral it almost felt like a blow to her chest from the inside, carried her to the floor as her fingers worked to open the seal.\n\nIt wasn't until the layers of vapor paper were gone and she'd slid the clip into the gun smoothly, a testament to her thorough care before she'd sealed it away, that reality set in. This was it. She had him. Hatred, fury and delight swirled inside her. He was never going to touch her again. She'd never cared for anything as much as she did for the weapon in her hand. Deliverance. Revenge. Fucking victory.\n\nAnd it had delivered her, effortlessly loading the bullet, not one particle of rust to slow the hammer or to obstruct the path of the bullet through the barrel. It gave her his death, her freedom, when nothing and no one else had been able to.\n\nHis face hadn't changed, even as the evening moved to night. The rest of his head on the ground behind him glistened softly in the porch light. Her heart slowed as she took in his death, and the full weight of her weakened state began making itself known again. She stood up slowly, her eyes still on his body. He looked so scared, his eyes wide, mouth open in shock. Good.\n\nThe smoothie was still cool when she got back inside, he'd made her his favorite with blueberries and banana. The sugar helped steady her. She put the handgun on the table and sat, shivering. Her fingers went to the buckles on her wrist cuffs and she quickly dislodged them, tossing the heavy things on the table, followed by the ankle cuffs. She struggled with the collar, the buckle was stiff and she couldn't see it well. She walked back to the bathroom, stepping on the mess of plaster dust and chunks on the floor so she could use the mirror propped against the mutilated wall. Finally her thumbnail slid under the tight strap so she could ease the prong out of the hole. When she got it off she threw it into the mess on the floor and didn't look back.\n\nHis clothes were in the closet, neat little rectangles; she chose a long flannel and a pair of boxers, leaving a pile of discarded options on the floor. She passed the forbidden door down to the basement on her way back to the kitchen. There was a padlock. She wasn't interested in going back to the body outside to find his keys just yet.\n\nEverything felt unfamiliar now that she could simply reach out and touch it, walk where and when she wanted. The only thing she'd been allowed to do was make coffee and tea so she did that first, but hunger won out before the kettle boiled. The fridge was stocked and overwhelming with options. She hadn't decided what she got to put in her mouth in so long. She grabbed an apple, and then a block of cheese and sat down with a sharp knife, eating slices of both directly from the blade. Her toes ran over the bolts that held the kitchen table in place when he'd been using her on it. She ducked her head to get a look at them. A wrench would do to get those out. She needed to find his tools.\n\nThe kettle started shrieking and she jumped a bit, hitting her head on the underside of the table. The embedded rings would come out quickly with pliers, but she needed to find a ladder for the ones in the ceiling. The pulley system on the porch could wait for tomorrow. She could have the cabin back to livable fairly quickly. The rocking chair and the couch would make a great bonfire.\n\nShe left the apple core and cheese crumbs on the table and walked into the living room, glancing at the furniture. The coffee table would also have to go, she'd been tied to it too many times. The armchair could maybe stay, though he had sat in it with her at his feet so many times. No, it would also burn. The bed certainly. It was going to be a pain to drag all this outside. But she could just pile it all on top of him and watch them all disappear into ash.\n\nMaybe that's what he did with the body of the man who had almost saved her. Knowing Harrison no one would find it. Avery paused, her eyes going back to the padlock on the door to the basement. There was almost surely a phone down there. Did she owe it to that man to reveal herself to the world again? The world that had continued to turn, continued its onward march while she was imprisoned, used and tormented. The same place that had ignored her when she called out for help, that ran on systems that crushed people like her under their heels without so much as a backwards glance.\n\nShe could get used to eating at the kitchen table, once she removed all the restraints. Even the bed might survive her purge.\n\nHer body sagged a bit, overwhelmed again. She needed to find a place she hadn't been fucked to sleep. She stopped at the basement door on her way to the bedroom, examining the padlock. The iron skillet in the kitchen made short work of it and she stepped over its twisted remains and down the steps.\n\nThere was a large wall of monitors showing night vision scenes from around the property. Avery was impressed. He'd wired the whole woods from the looks of things. His desk was military neat like the rest of the house, except for what she kept leaving behind her. She smiled a little. He'd have hated that. The rest of the desk was bare except for a pad and pen to the right of the keyboard. If her guess was right, anything he thought was worth keeping was in the safe next to the chair. The phone was red, snuggly fit into its cradle on the other side of the keyboard; the coiled cord hung over the edge of the desk, the two sides wrapping around each other to form a lovely spiral.\n\nShe sat on the bottom step, dizzy from the light exertion. The cut under her nail bothered her. She hadn't washed her hands from the plaster yet. She didn't mind leaving her fingerprints everywhere. She leaned her head against the wooden banister, closing her eyes. The smell was different down here. Damp but kept, and despite his mania there was no trash or rotting food. She took a deep breath. It didn't even really smell like him, not like the rest of the house. She could sleep down here for tonight. Decide who to call in the morning, she'd waited this long. What was one more day?\n\nHer eyes flew open. What day was it? What time was it? The need to know seized her, pulled her up and through the black spots in her vision. She rushed to the monitor, her eyes seeking out the time stamp.\n\nApril 25th, 20:30.\n\nTears fell before she knew she was crying. 13 months. Almost to the day.\n\nHer hand was on the phone, the number dialed. They'd already be asleep back East but her mom would know what to do, who to call.\n\n\"Hello?\" a woman's sleep graveled voice answered.\n\n\"Mom?\"\n\n*****\n\nIt has been a rough road for all of us. It's been pretty epic starting my career in medicine just as the pandemic hit. Things started to ease up around May, which gave me space to think about something beyond when I was going to be able to sleep next but didn't quite crack the really entrenched writer's block that set in around 2018. Then, just when I took on a train commute (who doesn't love public transport?) I had the unique joy of learning what it was like to live under rocket fire. The suppressed trauma of a year in the hospital and the corona wards, and the fresh horror of running to bomb shelters and watching rockets streak towards me and my family kind of burst through the barriers in my head so I could torture Avery again and put a bullet in Harrison. Writing bondage scenes is a great distraction from staring out the train window and looking for rocket trails in the sky.\n\nIs this the end? Who knows? If Marvel can make a Black Widow movie I can certainly revive these characters for any number of romps in the future. But for now, this is as much of them as I want to tell, as much as I have left in me.\n\nAlso, if you need a palate cleanser, I've updated the Siren epilogue and it's a bit sweeter than this outing.\n\nThank you to the readers who have written to me over the past few years. I am currently going through all the comments left since I was last on this site and I truly appreciate every one of you. And special thanks to Nora who has never given up on me."
    ],
    "authorname": "AmoryParks",
    "tags": [],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/isolated-property-bonus-scene-05"
}