{
    "title": "Bimbo Builder Academy Ch. 13",
    "pages": [
        "\"Julia?\" I pushed open the door to the bathroom. It opened smoothly and the warm glow of light hit my face, bouncing off the cool, marble tiles.\n\nI wasn't sure what to expect, but what I saw stopped me midstride.\n\nThe response I got was a purr from the dark-haired woman laying in the middle of the space. \"Hello, Master...\" My girlfriend was on her back, wrists and feet bound together with towels. It looked like Raven had tied her and left her there before arriving in the living room to save the day.\n\n\"Jules...\" I felt a lurch in my chest and stomach. Guilt. Uncertainty. This was my girlfriend, the woman I loved, entranced by a sex-trafficking businessman and used as a playing piece, a pawn... A toy. My girlfriend, the sextoy...\n\nDon't you mean ex-girlfriend? part of me thought, staring at her. But I didn't even know what to say to her, let alone how to describe our relationship. Does a breakup count if it's done under duress? How do extenuating circumstances factor in?\n\nThe lithe brunette wriggled seductively, and my eyes were drawn to the tight curves of her body. Her nipples were hard, I could already tell, and the glistening between her thighs indicated that she was beyond horny. \"Mistress Raven said that if I stayed put, Master would come and reward me...\" Julia grinned. Her eyes were bright but glazed, like she was aware of me only as a vivid dream. \"Are you here to reward me, Sir...?\"\n\nI swallowed. \"Jules...\" I said again. For maybe the first time, I wasn't turned on by being called Master. I didn't want to be that guy. I wanted to be the guy who I really was \u2014 the one who had messed up with the woman he loved and was finally trying to make it right. It was time to be him.\n\nThe brunette bit her lip, a small turn of confusion at the corner of her mouth, a little furrow between her brows. \"Is something wrong, Master?\" she asked quietly, slowly.\n\n\"Please come back.\" I said it simply. \"I need to talk to you about what happened.\"\n\nI don't know what it was that broke the trance. We could pretend it was true love, or something silly, right out of a fairy tale. More likely, because Clayton had only had a short amount of time with Julia, the conditioning couldn't hold up under true emotional stress. Or, maybe, Julia had been fighting and fighting internally against his commands, and finally broke through. All I know is that at my words Julia blinked several times, like she was coming awake from a dream. She looked down at herself. Then, her eyes widened with fear as she realized she was bound. Her head snapped up, and I hated to see the uncertainty in her gaze.\n\n\"Mitch, please...\" she begged. \"What's going on?\"\n\n* * *\n\nShe was seated on the bed, wrapped in a bathrobe. It had been the closest thing on hand, and I didn't want to wait for her to struggle back into those yoga pants. We needed to talk, and as soon as I'd put my unresisting girlfriend on the bed I stuck my head out the door into the living room.\n\nLena immediately headed toward me, a concerned look on her face.\n\nBut I didn't let her say anything. \"Watch Clayton,\" I ordered, my expression brooking no argument. I glanced to Harrison, then Raven, to include them in the instruction. \"If he wakes up, make sure he can't speak and doesn't say anything. I'll be out in a bit.\" Then, I closed the door.\n\nI know I should have been more careful, but Julia was on my mind. Nothing was more important, in that moment.\n\n\"Mitch...\"\n\nHer voice was numb, quiet. She was leaning back against the pillows in her fluffy white robe, knees curled up to her chest. Her eyes were wide and wet, and I could tell she was on the verge of crying with frustration and stress. \"Please help me... I don't understand what's happening.\"\n\nI moved quickly, kneeling beside her on the mattress. I would have reached out and taken her hand, but it was firmly grasping her opposite wrist and pulling her legs tighter to her body. I tried not to take that as a silent rejection. As it was, I contented myself with patting her arm gently and nodding. \"I will. I promise. I'll tell you everything...\"\n\nSo I did.\n\nI told Julia about the first day, when I'd been seduced by Natalie. I told her about slowly uncovering the Academy's secrets, and being drawn tighter and tighter into their web. I didn't hold anything back, didn't try to hide what I'd done with Lena and with Natalie, but I also explained the post-hypnotic suggestions that lowered my inhibitions and left me defenseless against temptation. I told her everything I knew, and everything I suspected. I told her, finally, about this weekend, about the party and Lena's arrival, our escape to the hotel and our con to take down Harrison St. John.\n\nI wasn't surprised at my revelations until I was almost done, because I had totally forgotten that I should have been unable to confide in her about any of it. I could only suspect that, as with Lena and Harrison, watching Clayton be brought low had shattered my utter obedience to his posthypnotic suggestions. I'd built him up in my mind as the ultimate authority figure, unquestionable and always in control. Seeing someone get tazed really screws with that all-powerful image.\n\n\"I felt so confused and lost, Jules...\" I finally told her. I couldn't meet her eyes. \"I didn't want to bring any more of this shit into your life, and I knew that what I did was wrong.\" I clenched my jaw. \"I cheated on you. And once again, my work was interfering with our lives. That's why I left the other night with Lena. Because I couldn't handle hiding it from you anymore, and I wasn't able to get it off my chest.\" My hand kneaded the comforter and I let out a long, slow sigh.\n\nEverything was quiet for a minute.\n\nI was waiting for Julia to get mad, or sad, or something. But, when she spoke, her voice was just tired. Somehow, that was worse.\n\n\"I want to be mad at you, Mitch,\" she muttered. \"I want to blame you. It would make it all easier. Simpler. No one should have to go through what I went through today. Or what those girls were going through. But I can't be mad...\" Her dark eyes were troubled when I looked up into her face. \"It's not your fault. Not really. You just got unlucky as hell. And I get that you couldn't tell me any more than you did. I know that you weren't completely in control of yourself... I mean, I guess I know what that's like. I literally just...\" Her breathing sped up for a couple seconds. Then, she regained control. \"I just blew your boss. Not a thought in my head. Not an ounce of resistance...\"\n\nThis was worse than being under Clayton's power. Then, at least, my feelings had been dulled. I'd had no hope, and no worries. Now, though, it felt as if my chest was being twisted around and around like the double loop of an infinity sign.\n\n\"After Denton, I stuck by you. Even when everyone else told me that it was a mistake. Because I know you, Mitch. You'd never do what they claimed. You're a good man, deep down under that wacky academic's mask you wear.\" She laughed softly at that, and I couldn't help but twitch a small, sad smile.\n\nI could feel Julia building up to an inevitable conclusion, and I wanted to protest, or to say that I would protect her better in the future, or something. But there was nothing more to protect her from. Just me, and the things I'd done. Because I knew, now, where she was going with this. Because I knew her, too.\n\n\"But that doesn't make it hurt any less. That doesn't mean I like the idea of what you did with those girls, or... what you'll end up doing when you go back to that place.\"\n\n\"I'm not...\" I started to protest, but then subsided as she gave me a frank look.\n\n\"If you were about to say I'm not planning on going back, then don't. We both know that's a lie. You're going to go back and help those young women. You care about your students. Deeply. That's why you're good at your job. And that's why they love you.\"\n\nI squirmed a little at this last, but Julia didn't seem to mean anything by it. \"And that's what keeps causing all these problems, too, huh?\" I tried to chuckle but just kind of snuffed a laugh.\n\nJulia shook her head. \"I don't know, Mitch. Maybe?\" She seemed drained, suddenly. \"You're a huge part of me. And I love you. But,\" she paused, took a deep breath, and had the courage to look me in the eyes as she said it. \"I just think we both need some space. I'm... I'm going to leave the City for a while. There's too much to process here, and too many crazy things that are going to need to be figured out. And I know you'll need to solve it. Because that's your thing. You solve shit...\" She trailed off and looked away. Then, she slowly slid her way across the mattress. She reached down for the crumpled pile of her discarded clothes.\n\n\"Where will you go?\" I asked slowly. I watched, but didn't try and stop her.\n\nThe black yoga pants slid up her long, lithe legs. She peaked over her shoulder at me, through a mane of tousled hair, and gave a little teasing smile that turned sad at the end. \"We can't be together right now,\" she said slowly, not answering the question. She turned, hugging the oversized grey tee to her chest. \"It won't work. Too many secrets have been kept. Too many lines crossed, intentionally or otherwise.\"\n\nI had the sudden awkward realization that she wanted me to look away while she got dressed. Or, rather, that she needed me to. Because this was as hard for her as it was for me.\n\nSo I did, because I knew it was the only thing I could do for her right now. \"Will you let me know that you arrive safely, at least? Wherever you're going?\" For the guy who'd already broken up with her, I certainly didn't feel any better about it when she broke up with me back. But I kept my voice steady and calm. I heard a rustle of cloth, and looked up as Julia wiped the back of her hand across one cheek.\n\nShe sniffed, but I didn't see any tears. Maybe we were both numb. \"Reach out when you think things have changed. If they do.\" She gave me a look, then, and it was sad but determined. \"Can I trust you to wait until then?\"\n\nI nodded. Yes, I thought. She could. But I couldn't say anything out loud just at that moment. I could see in her face how much she wanted to believe me. I could see common sense going to war with her feelings and coming out on top. I was a romantic hazard right now. And Julia had already been hurt bad enough in the past.\n\n\"I trust you,\" she said.\n\n\"Thank you.\" My voice was low, rough with emotion.\n\nI caught her as she flung herself across the bed at me, wrapping my arms around her body as she buried her face in my shoulder.\n\nHer hands twisted in my shirt and pulled her closer. I heard her sniff, without looking up, \"I miss you already.\" Her voice was muffled against my chest.\n\nI held her in my arms for a long moment of silence. My feelings were churning around and around, but I knew that I couldn't ask Julia to go through any more for me. \"You're right,\" I told her. My hand stroked gently up her back. \"We need to get you away from me for a while.\"\n\nShe glanced up. There was surprise in her dark eyes, and a hint of gratitude in her expression.\n\nI realized she'd probably expected me to fight her on it, even though that would only drive her further away. That was her experience with men. Hell, the last guy she'd broken up with had stalked her for months. But I knew her well enough to know better.\n\n\"Damn it,\" she muttered, half joking. \"Why do you have to be so damn cute? And hot and sexy and... arghhh...\" She leaned up and kissed me.\n\nIt wasn't the kind of searing, lustful kiss I'd been experiencing more and more lately. This one was sweet, grateful, loving and I could feel the damp of her cheek where she'd wiped away several tears. Her lips were gentle on mine, but she pressed them there for a moment that seemed long and too, too short at the same time.\n\nI kissed her back, and didn't ask for anything more than what she gave. I just pressed my hands into her back and held her to me as long as she wanted to be held.\n\n* * *\n\n\"Jules?\"\n\nShe looked back from the door to the suite.\n\nI stood at the end of the short entry hallway. I couldn't walk her all the way to the door. That, somehow, was too final.\n\nJulia had gathered her purse while Lena and Danielle and Harrison had watched silently. Clayton had been tied and gagged even more thoroughly while we were in the bedroom, to the point where I hardly noticed the man laying still and silent on the couch. The others could tell that something had happened. And they knew, in that unspoken way people have, that we wanted them to fade into the background.\n\nI could have said a lot of things in that moment. I could have used her trigger phrase, to make her stay. I could have used my own trigger phrase, to make her going less painful.\n\nBut I did neither of those things.\n\n\"I love you,\" I said quietly.\n\nShe had said it earlier, and I hadn't gotten the chance to respond. Now, I saw the slightest amount of tension leave her body. Like she'd been tensed up, waiting this whole time for me to explain how I had already moved on with my new lovers.\n\nJulia swallowed. She bobbed her head in a nod. Dark chestnut waves framed her face, and I saw her take a slow breath. She met my gaze one more time. Then, she opened the door and stepped out into the hallway. The door swung shut behind her. She didn't say goodbye.\n\nClick.\n\nI took a slow, steadying breath. Ah... There was the dullness I'd felt before. Only now, it wasn't from Clayton's trigger words. It was my own mind numbing my emotions. To protect me.\n\nI turned back to face the room.\n\nLena was watching me with an expression of concern.\n\nHarrison's eyes were also fixed on me, but his face looked open and almost cheerful.\n\nDanielle \u2014 or, maybe, Raven \u2014 was watching Clayton, who I couldn't see on the far side of the couch.\n\nI squared my shoulders. \"Alright, team,\" I said, and I flexed my hands into fists before releasing the tension. There was only one thing left to do. \"Let's deal with the fucking principal.\"\n\n* * *\n\nInitially, Clayton had clenched his eyes closed and thrashed against us when we tried to force him to watch Lena's online course videos. He grunted through his gag and strained against the rope the others had used to bind him. Luckily, the Regent seemed to use high-quality curtain cords. They held. Eventually, I wrapped him up in a bear hug, pointed him at the screen of Harrison's laptop, and promised to tape his eyelids up with duct tape if he didn't open the goddamn things.\n\nPerhaps realizing the inevitability of his position, Clayton slowly obeyed. The others had all moved behind us, but I could see his eyes darting left and right desperately as I twisted earbuds into his ears, one at a time. He was looking for any way out, any tool. But there was no one left for him to manipulate.\n\nI could tell that the man was trying to keep his eyes out of focus, to not fall into the trap of the swirling constellations on the screen before him. But he couldn't block out the relaxing, subliminal programming that came in through the earbuds. As I gripped him tightly, watching his face instead of the screen, I slowly felt his tensed muscles relax. Wary, I kept hold of him until the first video was complete and the next loaded automatically. By then, though, the man was well and truly enthralled. He sat loosely, his tall frame slouched over the computer.\n\nAfter that, all we had to do was wait.\n\n* * *\n\nFive Weeks Later...\n\nThe sky patio at the Brighton Barnsworth Academy was stunning after dark.\n\nOn the night of the Academy party, just over a month ago, it had been overrun with guests, flickering fires, caterers and glowing lights like will-o'-the-wisps strung along the railing. Now, it was just the one fire pit, glowing warmly and illuminating my face. And it was just a few of us, not the throng of that fateful evening.\n\nLena's head was on my shoulder and Natalie's was resting against my thigh. Ava, the statuesque redhead who had once been promised to Indian businessman Aarav Khatri, stood leaning forward over the railing, silhouetted against the cityglow. She made for a good view, but I think I was the only one taking advantage of it. Natalie was staring thoughtfully into the fire, her knees up over the arm of the couch and her curvaceous body reclined on the cushions. Lena dozed, her eyes shut and her breath slow and steady against my opposite side. I reflected, as I admired Ava's outline, on all that had happened in the past month. All I'd learned.\n\nThe women around me were perfect case studies.\n\nAfter I'd ordered Clayton to shut down the background subliminals that played on loop like mind control muzak, the young women at the Academy slowly began to exhibit their real personalities. Lena, as I spent more time with her, continued to prove that her originally abrasive behavior had been nothing more than a mask. To the contrary, I was shown over and over how thoughtful and caring she could be. The slim blonde had the same elegance as always, but without the frigidity.\n\nNatalie, too, had practically become a different person. To begin with, the bright-eyed, all-American bombshell had been furious to discover that her naturally dark hair had been dyed cheerleader blonde. In protest, in fact, she'd immediately recolored it violet. With lavender highlights. I couldn't lie \u2014 it was a hot look. Her clich\u00e9 schoolgirl outfits were replaced by thick sweaters that draped over her shoulders but still managed to accentuate her round, full breasts and loose jeans that did the same to her perky ass. She even revealed that she'd been using contacts for weeks, and she replaced them with round, clear-framed glasses that were oddly reminiscent of the LucidSpecs I kept on my person at all times. It was like she'd gone from sexy cheerleader to hot hipster coed. The busty beauty's attitude of cheerful, innocent submission had also changed. She had a rebellious spirit, and she displayed a determined energy as she helped me to go through Clayton's files, searching for clues about the students' pasts. I recognized the attitude from the way she'd always focused in the classroom, but now it was obvious she had a deeper drive. I felt like I'd only seen glimpses of these young women before, fragments of who they really were, and now I was watching as they put themselves back together.\n\nUnfortunately, some changes were permanent. None of the young women Clayton brainwashed could remember their pasts. That part of their programming, it seemed, was so deeply embedded that it was unassailable. Our only clues were in Clayton's files, and my self-appointed task had been to help each and every student return home. Originally I had been almost frantic about it. Then, one of the first afternoons, Lena reached over the paper-scattered table to rub my shoulder encouragingly. She'd told me not to worry so much. It wasn't like they especially missed their homes. It's hard to miss something you don't even remember.\n\nSome nights, I wondered if forgetting would help me deal with my own heartache.\n\nIn going through the files, we used Clayton as much as we could. He knew his system, recalled more details than he'd put into writing, even. But there was a limit to his usefulness. And, I suppose, that was my fault. When we first got the man under control, I'd had him watch four or five hours of Lena's course materials before we even risked moving him out of the hotel. Then, whenever we didn't need them, I left Harrison and Clayton in a room together and pressed Play. One of the girls stood guard to begin with, but eventually we realized that they didn't have the will to get up and go anywhere when their videos were playing. I gave Harrison some time off, but I didn't trust Clayton. Whenever we didn't need the man he was pretty much just watching the videos on loop.",
        "I suppose part of Clayton's system was the time factor, so that programming could take place over months and slowly seep into the subject's subconscious. That was how he'd done it to Natalie and Lena and Ava, and that's what he'd been trying to do with me. I took that system and threw it in his face all at once. I guessed it was like having his mind smashed repeatedly by a robot with a sledgehammer. It kind of... well, it stopped working perfectly. He could obey simple instructions, or playact the role of his old self if I needed him to go to the bank or deflect client questions about why their \"product\" was delayed, but it was like trying to do linear algebra with no knowledge of matrices. We couldn't solve the problem at hand because our tools were faulty.\n\nI tried, unsuccessfully, to resist feeling a tiny sliver of relief, but I knew that every day we spent going through his meticulous notes was a day I wouldn't have to say goodbye to my lovely young companions.\n\nFor certain, things might have gone faster if we had more people on hand. Like, say, the police. Or whatever government agency deals with mind control sex traffickers. But I knew what happened when the authorities got involved. Almost immediately, the media was breathing down your neck, too. I'd gotten lucky at Denton, but there had still been a few local outlets sniffing around the abrupt dismissal of a promising young professor on the tenure track. I knew how much worse it would have been if any of it had gotten out. And the Brighton Barnsworth Academy scoop would be a thousand times worse.\n\nNo, if any of these young women wanted to return to some semblance of a normal life they would need anonymity.\n\nIn any event, going through Clayton's files ourselves was what gave me the solution we'd needed. The principal, it turned out, had been even more careful than I gave him credit for. He'd saved every bit of communication he could, every scrap of evidence, in scattered bits and pieces like a squirrel's winter horde. No client, had they been suspicious enough to hack into his material, would have found anything so obvious as a folder titled 'BLACKMAIL.' However, combing through his work, day after day, I began to piece together the principal's backup plan. The information had been well-hidden, and some of it encrypted to boot. But password protection means nothing when you have complete control over the man who knows the code.\n\nJoseph Clayton's clients were captains of industry and society, wealthy 1-percenters who stood at the pinnacle of the world. Up that high, though, they had a vulnerability to spotlights. If I was afraid of the media, they were even more afraid. Harrison and Clayton, working together, went down the Academy's list of patrons. And, I have to say, I got a certain satisfaction watching Harrison explain to Aarav Khatri that he would be paying us six figures a year in hush money for the indefinite future.\n\nThere was usually some resistance, but showing a few email transcripts and phone call recordings was always enough to quell them. What were they going to do? As far as they knew, Clayton had them by the balls.\n\nI was still mulling everything over when Ava turned from the railing and stretched, her movement breaking the tableau before me and snapping me back to reality. Then, the leggy beauty sashayed toward the rest of us and into the warm orange glow of the fire pit. The crimson-haired woman, alluring even in red and blue flannel pajama pants and a grey sports bra, knelt gracefully at my feet and rested her chin on my knee.\n\nIn the past month, chats with the woman \u2014 as well as going through Academy files on personality testing \u2014 had revealed that Ava, several years older than Lena and Natalie, was a natural submissive. This came to mind frequently, because she had the habit of casually acting in ways that I couldn't help seeing as sexual. I couldn't tell if it was intended to drive me crazy but now, at least, I could see the teasing tilt of her head as she looked up at me.\n\n\"Hey there,\" the woman murmured softly. \"Thinking too much again, are we?\" Her voice had a low, musical quality that warmed my core and sent shivers of heat out through the rest of me.\n\nOf course, I hadn't done anything about the embers of desire that these women fed constantly. I'd been completely celibate ever since that weekend.\n\nNatalie stirred from her own daydreams and sat up, using her legs to pull herself into a seated position then tucking them underneath her. \"He's always thinking too much,\" she commented dryly. She pushed her some stray hair behind one ear. The purple-haired girl was wearing one of those brown, open-front cardigans that are longer than the jean shorts underneath them. Beneath the cardigan, a clingy top with black-and-white stripes hugged her perky breasts. \"The real question is whether he's moping or planning something.\"\n\n\"Hey,\" I protested weakly. \"I don't mope.\"\n\n\"Yesyoudo...\" Lena mumbled, stirring awake on my other side. I was hyper aware of her hair as it brushed across my neck, and of her breath as she hesitated for a fraction of a second before leaning away from me.\n\nI was attacked on three sides, and could do nothing but chuckle softly and glance back into Ava's hazel eyes. \"I guess I was,\" I sighed. \"Thinking too much, I mean.\"\n\n\"Well, snap out of it, silly.\" Natalie's voice was light, but firm. \"We've gotten a lot done the past few weeks. Almost all of the girls have been placed and sent home. Let yourself relax a little, professor.\"\n\n\"Thanks,\" I grunted, faking a scowl. For more than a month, I'd been trying my best to be a friend to these women \u2014 to be the kind of man that they could trust after everything they'd been through. But the way Natalie said the word professor still sent a surge of blood south and made me struggle not to pitch a tent in my pants. \"Hard to relax, though, when you're covered in napping women.\"\n\n\"Are you complaining?\" Natalie asked, arcing an eyebrow at me. She really did do a good aloof hipster girl look.\n\nMy scowl crumbled. \"No,\" I laughed softly. My eyes went back to Ava's. \"Thanks for saving me from my own brain.\"\n\nThe woman's full smile was bright, and the firelight played off her dark red hair as she shook her head. She pushed herself up to her feet. \"I'll save you anytime. You're my hero, after all.\" Then, before I could do more than blink in astonishment at the sincerity in her words, she switched topics. \"Besides, I was really coming over here because I wanted to check in on dinner arrangements. Anyone else getting hungry?\"\n\nThere was a chorus of yeses from Lena and Natalie, and I nodded along. A smile turned up my mouth. \"So,\" I asked. \"What will it be today?\"\n\nAfter living a carefully ordered life for months on end\u2014 along with a mandatory diet and exercise regimen to shape them into the perfect pleasure toys \u2014 these young women loved to order takeout. Usually there was some good natured banter back and forth, but tonight Lena's suggestion met with universal approval.\n\n\"Friday night,\" Lena said, and she tucked the hood of her sweatshirt back, spilling her light blonde hair around her face and shoulders. \"What's better than pizza and a movie?\"\n\n* * 8\n\nJoseph Clayton had a fantastic penthouse apartment atop one of the Academy buildings. So, while the principal had moved into one of the dorm rooms left empty by a departing student, I had taken up residence in what was definitely the most expensive home of my life. Having the sky patio in the same building was just one of the many benefits of living here. I also had a wraparound balcony overlooking a beautiful cityscape, a kitchen full of the latest appliances (espresso was now a daily indulgence rather than an infrequent treat), a King-sized bed in a stylish bedroom, and a massive bathroom tiled in warm, gold and white stone. If I had designed it, it couldn't have been any more ideal.\n\nAnd the greatest benefit of all was that I hadn't needed to spend a single night at my own apartment since the night I broke up with Julia. I know that I could have gone back for clothes and some essentials. Honestly, though, Clayton and I had approximately the same dimensions, and he had a more-than-ample wardrobe that I readily co-opted for my personal use. Odd as it may seem, I felt comfortable in the other man's outfits. After, of course, they all went through extensive dry cleaning.\n\nThe long and short of it, in the end, was that the living room at my place had a massive television and several comfy couches and reading chairs. And it was close. So the three younger women and I crowded into the elevator and headed up to the penthouse. The sun was down now, behind the buildings and the horizon beyond them, and the only illumination was from the pale moon and the glowing blue-and-orange lights of a modern city. While Lena and Natalie started browsing their phones for movie ideas, Ava looked for pizza places and I slipped into my bedroom to get changed.\n\nOut of habit, I dressed in a business style when I left to work with the girls every morning. Slacks and a jacket, usually a button down shirt. I looked sharp, and beneath the short, dark beard that had found its way onto my jawline, my face was leaner and more defined than ever. I had been eating sparingly, even when Lena or one of the others ordered out, and despite distracting myself with my new responsibilities, I still managed to throw around some heavy weights a couple times a week. In fact, those workouts were pretty much the only time I got to be alone.\n\nIt should not have come as a surprise to me that the rest of the Academy buildings weren't, as it turned out, the academic homes of various other departments. Instead, they housed all the facilities Joseph Clayton might need to take a woman off the street and turn her into a plaything for his wealthy clients. This one, of course, was housing for the head of the school and all of the students. Others had rooms full of medical equipment and diagrams that seemed to be for cosmetic surgeries. One facility had comfortable lounge chairs and several rows of VR headsets. I could only assume that those were for even more intensive programming. One building, though, had a functional gym full of shiny, polished equipment. That was where I went to blow off steam. Everything, in the entire school, was run either by a computer or by controls that could be managed by a single person. Everything was precise, balanced and, dare I say, impressive. Joseph Clayton, more than I'd known, was a man who knew how to solve problems. He had built the Academy and, as far as I could tell, he ran it all by himself.\n\nAs I hung my button-down back in the closet and slipped out of my undershirt, I wondered if I should feel any amount of guilt about having turned a man who probably had a genius level IQ into a cardboard cutout of his former self. Then, I thought of Julia's tears when she remembered what Clayton had forced her to do. That hardened my heart right up. I slipped on a pair of lightweight lounge pants and a dark v-neck top, then stared at myself in the full-length mirror.\n\nI hadn't turned on a light, so it was dark in the room. Mostly shadows and shafts of moonlight. Clayton's taste in colors was mostly muted lights and darks, which I appreciated, and I saw myself in shades of dark in that reflection. My hair had gotten a little longer, thick and dark, and my though my cheeks were mostly bare the lighter shade of my face was outlined on the bottom by the dark edge of a beard. Dark shirt, clinging to muscles that were obviously hard and defined. My bottoms, a lighter grey color, hung from my hips like an actor or model. I looked good. And, for a second, it made me wonder why I felt so out of sorts.\n\nI was living it up. Dressed to the nines every day, spending time with beautiful women, absolutely no money troubles. I was in an apartment easily worth several million, had turned my enemy into my puppet and could use a pair of glasses or a trigger phrase to turn my companions into wanton, willing sextoys at any time of day or night. Was this not a perfect existence?\n\nI stared into my face in the mirror. A shaft of moonlight lit the corner of a mouth that was pressed together in a firm line.\n\nJulia.\n\nThe thought seemed to echo around in my head. I had cheated on the woman I loved, and she'd gone. And now, I was in the unenviable position of constantly wondering if I was ready to go back to her. If we had both had enough space, or if we still needed some time. Was I punishing myself, not letting myself enjoy life to its fullest extent?\n\nI shrugged, and my shadowy reflection followed suit. No, I thought. I was doing the right thing \u2014 not forcing myself on women who only wanted me because of a messed up fluke of mind control. And I was doing the right thing waiting. Waiting to know what I should do about Julia. I was doing the right\u2014\n\n\"Mitch?\"\n\nI started, catching my breath as I turned and snapped away from my thoughts.\n\nNatalie was standing in the doorway, leaning a shoulder against the frame with her head cocked to one side. The sleeves of her cardigan were too long, and the way her fingers curled around the cuffs was cute.\n\nI sighed out slowly, and chuckled sheepishly. \"You startled me,\" I said. \"What's up?\"\n\nI heard Natalie snort, and I knew that the girl was rolling her eyes teasingly. \"These jeans are uncomfortable,\" she complained. \"Can I borrow some sweats?\"\n\nI smiled. \"Yeah. Of course.\" I tried to sound accommodating, and walked toward her. \"I'll get out of your way.\"\n\nNatalie paused as she passed me in the doorway. Not long, but just enough for her hand to half raise, like she was going to touch my chest and stop me. But then she lowered it again and continued on. I shut the door behind me. Natalie had hung out here enough to know where my relaxing clothes were folded in the closet.\n\nChill out, Mitch, I ordered as I walked out into the living room. You're making yourself crazy. \n\nA light was on in the kitchen at the far end of the living room, where Ava was chatting on her phone, and Lena had flipped open my laptop so we could stream whatever film she and Natalie chosen. She had logged in using my password, was figuring out which of our subscription sites had the movie. And the strangest thing was how normal this all felt. It was weird, to have placed myself in the friend zone with these absolute babes.\n\nBut that's exactly what I'd done.\n\nLena glanced up. \"We decided we wanted to see a rom com,\" she announced. The penthouse was air conditioned, and she had pulled up her hood again. The glow of the laptop screen cast shadows on her face.\n\n\"Sounds good.\" I shrugged, wending my way around in front of her. Avoiding the power cord, I dropped down beside her on the couch. She had my laptop balanced on the wide, leather arm of the sofa, and I could see several tabs were open to different movie options. \"Do you have a clear winner?\" I asked, but Ava interrupted from the kitchen before Lena could answer.\n\n\"I'm getting an extra-large cheese pizza from Enzo's!\" she called. \"Topping requests?\" The days of spending twenty minutes trying to figure out which restaurant to call were behind us. With Ava in charge, we just picked a cuisine and she handled the rest.\n\n\"Pepperoni!\" I answered immediately. The Italian place actually did some of my favorite pizzas. They baked them in a clay, artisanal pizza oven and their ingredients were all top of the line. Added bonus, Enzo's meat selection came from their own deli of perfectly-aged Italian meats.\n\n\"Sausage!\" Natalie's voice bounced in, muffled, from the bedroom. \"Are we saying toppings?\"\n\n\"Bacon!\" Lena piped up, but softer. She was still swiping across the track pad and looking for streaming availability.\n\n\"Bacon and sausage?\" I teased her. \"You're making this into a breakfast pizza.\"\n\nThe young woman ducked her head, and I think she might have blushed. \"I like bacon, okay?\" she joked. \"Don't be a hater.\"\n\nIt was such a youthful thing to say that it made me snuff a laugh and remember that I was bantering with a 20-something college student. I leaned in, bumping her with my shoulder and grinning.\n\nShe stuck her tongue out in my direction, then turned and started logging in to my Netflix.\n\nI ignored the dull, throbbing heat that pulsed in my stomach when I watched the playful movement of her sculpted mouth, and tuned back in to Ava across the room as she laughed softly, then said, \"And I think I'm going to be the adult and add mushrooms to that pizza, just so everyone can pretend we ate a vegetable... Yeah... Uh-huh, we got votes for pepperoni, bacon, sausage and mushroom... Perfect, we'll pay cash when your driver arrives... Have a good night.\"\n\nAva lowered the phone and gave me a thumbs up.\n\n\"Natalie!\" I called. \"Get in here if you want to start the movie before the food arrives, and bring the robe!\"\n\nLena and I had a quick discussion about the last few movie options, while Ava set out plates and poured herself a glass of wine. Overboard \u2014 the old romantic comedy about a rich heiress who loses her memory and the carpenter who tries to convince her that she's really his wife \u2014 was quickly discarded for obvious reasons, so we settled on the classic When Harry Met Sally... and loaded it up onto the big TV screen.\n\n\"Ooh! I love this one!\" Natalie bounced down on the couch next to me. She had gone for a complete outfit change, opting out of her jean shorts and cardigan in favor of a pair of thick sweatpants and a grey v-neck that was too big but fit perfectly across her round breasts. She tucked her feet up and I hissed as her cold soles pressed against my warm calf.\n\n\"Hey!\" I protested, \"Cold feet!\"\n\nBut she just laughed softly and wiggled her toes.\n\n\"Do you have the robe, at least?\" I sighed.\n\nThe girl's teeth glinted in the dark as she grinned, dangling a bundle of cloth in her hands.\n\nIt was a tradition we'd started on a previous movie night. Natalie invented the game, or at least knew it from some past life as a party-hard sorority chick. It was like Hot Potato, but instead using a silk kimono that Natalie had nabbed from Lena's closet. As the movie went on, we passed the robe around and around the group, and when the delivery man arrived, whoever was holding it had to go down to the bottom of the building to pick up the order. Taking the elevator all the way to the lobby was a cold and unexciting journey, so naturally, in order to spice things up, the stipulated rule was that whoever received the delivery was also forced to strip down and wear nothing but the robe and their underwear. Each of us had to hold onto the robe for at least a minute before we could Hot Potato it to the next person, and often we got distracted by the movie while the thing was in our lap.\n\nOverall, the game led to a much more entertaining delivery experience. And, unintentional bonus, I swear our takeout orders arrived at least 75% faster once the deliverymen realized that they would be getting a giant tip and the opportunity to ogle a gorgeous babe.\n\n\"Good,\" I smiled back. \"Ava?\"\n\n\"Coming!\" The redhead flicked off the kitchen light, carried her glass and wine bottle to the far end of the couch, and settled in next to Natalie. The wine bottle clunked softly on the coffee table.\n\n\"And... Play.\" Lena's voice was pleased as she pressed the space bar, music running through the speakers. The movie began. Just like there was no more pizza bickering, there was no more waiting while people did half a dozen different tasks to prepare for the show. By now, we had movie nights down to a science.\n\nI had seen this film before. When Harry Met Sally... was about two people who, over the years, kept bumping into each other by accident. Eventually they became friends. And then more. And then they weren't sure how to handle it. It was a sweet, funny story, and I'd probably watched it with every one of my girlfriends over the years.",
        "My mind almost started to drift to Julia, but then there was a rustle and a soft, floppy bundle of silk bounced off my cheek. \"Hey!\" I growled with a snort of laughter, scowling playfully at Natalie. I kept my voice low, not interrupting the opening credits.\n\nThe gorgeous coed blinked up at me innocently, blue eyes wide. \"What're ya gonna do about it?\" she taunted, pouting at me.\n\nAbruptly, the image of what I'd love to do about it flashed across my mind, and I turned away with a blush. That's not the relationship you have with her, I reminded myself. I checked the digital clock by the TV, waiting for a minute to pass so I could toss the kimono along to Lena or Ava.\n\nI got wrapped up in the first scene, and it wasn't until the second that I remembered the game. With a soft laugh, I passed the robe off quickly, dropping it in Lena's lap. The blonde glanced up, startled, and then squinted in mock irritation.\n\nA few minutes later, a bundle of silk arced over my head, bounced neatly off Ava's chest and into her lap. The redhead turned her head to see Lena's triumphant grin, then rolled her eyes. Ava was a strategic player, and she held on to it.\n\nWe came to the classic dialogue between the titular characters, and I found myself glancing sideways out the corner of my eye at my companions as I listened.\n\n\"What I'm saying is,\" Billy Crystal's character explained onscreen, \"is that men and women can't be friends because the sex part always gets in the way...\"\n\nLena was there, curled up next to me under a blanket. She was still bundled up in the hoodie, and despite the heavy folds of fabric I could still imagine the lithe, slender body beneath it. More than imagine, I could practically feel her body between my hands.\n\n\"That's not true,\" Meg Ryan's character responded indignantly. \"I have a number of men friends and there is no sex involved.\"\n\nI didn't look the other way, but I knew that seeing Natalie would make me react the same way. Could we be friends? I wondered, watching Lena, forcing myself to clasp my fingers together in my lap. I had thrown myself into my mission of taking apart the Academy to get away from questions like this, to avoid having to face the repercussions of what had happened between me and the women here. Maybe, even, to try and make up for it. But no matter how much I tried to redeem myself, the feelings remained. Did I even want us to be friends?\n\n\"You only think you do,\" Billy Crystal corrected. \"What I'm saying is that they all want to have sex with you.\"\n\nAnd that was the crux of the matter. I couldn't lie to myself. Even if I didn't act on it, I did find each of these women incredibly attractive. I sighed, glanced away and watched as the characters on screen wrapped up their debate. And, of course, at that moment Ava casually flicked the robe over into Natalie's lap.\n\nThe blonde batted playfully at it, then sat upright abruptly ten seconds later when the sound of the front doorbell sounded quietly in the penthouse. \"You're psychic,\" she exclaimed, whirling on Ava.\n\nI raised my eyebrows. Enzo's was only a couple blocks away, but this felt like a new delivery speed record. Ava just sipped her wine and looked pleased with herself, so Natalie stood as Lena paused the film. I pushed myself up with a grunt and walked over to the security panel by the door. I pressed the intercom.\n\n\"Hello?\" I said. Outside the lobby, my voice greeted the delivery person.\n\n\"... your pizza...\" The voice was a little muffled and crackly from the mic, but I got the gist.\n\n\"I'll be down in a minute,\" I answered, then glanced over at the girls. I released the intercom button.\n\n\"I think you cheated,\" Natalie was in the middle of joking, shucking the sweatpants. \"I'll bet you were getting delivery time notifications on your phone.\"\n\nI swallowed. In the glow of the large TV screen, I could see her legs were athletic, muscular with all the right curves. I couldn't help myself. Her borrowed tee shirt was already on the floor, and the light of the screen created shadows in the hollow of her cleavage and along the curve of her smooth stomach. Her ponytail tumbled over her shoulder, and now she was standing in nothing but a heavy-duty sports bra and lacy panties. It was hard to tell what color the panties were in the half-light, and I scolded myself immediately for checking.\n\nAva just smiled innocently and shook her head. \"Nope,\" she said. \"I haven't checked on the pizza since I made the order.\"\n\n\"Hmmm...\" Natalie murmured at the redhead, obviously not buying it, but she was unfurling the robe now and wrapping it around herself. \"Well, you win this time.\"\n\nI feel like I won, I thought, blinking and then realizing how blatantly I'd been staring at the athletically-proportioned body of my ex-student.\n\n\"Mitch,\" Natalie widened her eyes at me as she tightened the silk belt and walked toward the front door. \"Are you checking me out?\"\n\nI snorted, ignored the clench in my stomach, and rolled my eyes like I couldn't believe the idea.\n\nNatalie winked, reached out past me and plucked a $50 bill from the basket by the door. Clayton made weekly bank runs to our overflowing accounts, and we kept a healthy cash stash for quick payments. I could smell her perfume as she pulled back.\n\n\"We going down?\" she asked.\n\nI blinked, surprised. Usually the kimono-wearer went down solo and then narrated back to us the surprised reaction of the delivery person. \"Um, yeah?\" I agreed, uncertain why she was inviting me.\n\n\"Cool,\" she nodded, smiling as she tucked back a free strand of purple hair. \"Let's get this pizza. I'm starving!\"\n\n* * *\n\nIn the light of the elevator, I could see Natalie much more clearly.\n\nThe kimono was white with stylized watercolor designs, birds and trees in bright blue and red. Her skin was a healthy tan beneath it, and her heavy breasts and the curve of her waist made the robe ride up, skimming the tops of her thighs. Her purple mane was dark against the white silk, and the lighter highlights in her hair gave the whole outfit a stylish pop. She looked less like someone who'd lost a silly game and more like someone who would rock a catwalk in front of dozens of high-end fashion designers.\n\nI tried not to look, though, keeping my eyes anywhere else. \"Down we go,\" I said, reaching past her to press the button for the lobby. I couldn't meet her eyes. She's your friend, I ordered myself sternly. A young woman under your protection.\n\nIt was a quiet ride.\n\nI thought of asking why she'd invited me along, but didn't want to call attention to it. She probably did it without thinking, I told myself.\n\nWe arrived in the lobby and walked toward the front door. On the other side, through the thick glass, I could see the hoodie-wrapped figure of a young woman. She was wearing a baseball cap, and her head was bent over the screen of a phone.\n\nHuh, I thought. I was surprised. Given our reputation, we usually had whichever male deliveryman had managed to snag up our order. I tapped the glass. The young woman raised her head, and I could see her face for the first time. Oh!\n\n\"You're not our usually delivery girl,\" I joked as I let Danielle inside.\n\nThe young brunette smiled, stepping through the open door. I scooted sideways to avoid the cardboard pizza box she balanced on one hand, and immediately the delicious aroma filled my nose.\n\n\"I was just hanging out, and Lena invited me over. She said I'd be welcome as long as I picked up your pizza on the way.\" Danielle huffed a laugh and raised her eyebrows playfully. \"She really does like telling me what to do.\"\n\nI leaned in to give her a brief hug before pulling back. \"It's always nice to see you,\" I told her with a grin. \"You're even in time for most of a movie!\"\n\n\"And don't you look gorgeous?\" Danielle declared, flashing me a smile before stepping past and giving Natalie a frank up and down. \"I was about to be one lucky delivery guy.\"\n\nNatalie cocked her hip theatrically, then threw an arm around Danielle's shoulders and led her back toward the elevator. \"So nice to see you!\" she exclaimed enthusiastically. The purple-haired young woman shot me a glance over her shoulder. \"Coming?\" she asked me.\n\nI'd been frozen, watching two pert, round asses sashay away. \"Yeah!\" I said hastily. \"Just locking up!\" I made sure the lobby door was securely closed before hurrying to the elevator.\n\nThe girls chatted as the elevator doors slid closed.\n\nDanielle swung by the Academy with relative frequency, so she and Natalie had met several times before. The ex-salesgirl said it was because she wanted to know right away if we had any new insights about Joseph Clayton's mind control techniques, but I also knew she and Lena had been hanging out when they had free time. Fortunately or unfortunately, Danielle had a lot of it. She'd been fired from the Regent when the security team realized that she had used their network and equipment. Luckily, she'd wiped our tracks cleanly, so the company had no idea what we'd done and she got off with nothing more than a stern talking to.\n\nI was pleased for Lena and Danielle's growing bond. Even though they'd met under crazy circumstances, they seemed to be developing a strong friendship. Sometimes, I would remember watching Lena dominate and seduce the pretty brunette salesgirl, and the idea of the two of them spending time alone together suddenly became a lot more exciting.\n\n\"Danielle,\" I asked, suddenly thoughtful. \"Did you text Lena when you arrived?\"\n\n\"Uh-huh,\" the woman nodded, glancing over. \"She said to wait a minute for her let Ava know\u2014 not sure why \u2014 and then she told me to wait thirty seconds and ring the doorbell.\"\n\nI grinned, then watched as Natalie's face twisted into righteous indignation as she understood. \"So Ava did cheat!\" she huffed, then threw me a bright-eyed glance and laughed easily. She narrowed her eyes. \"Oh, it's on next time. No mercy.\"\n\nI just grinned at the banter and felt a warmth flow through me. Truth be told, I'd really never had any great female friends. Maybe that was something I'd been missing out on.\n\nAs the elevator slowed to the top floor, Danielle shifted the pizza box to the other hand. Ding.\n\nThe doors slid open and I began to step through, but Natalie abruptly had me by the corner of my shirt. Danielle took several steps down the hall before she threw back a confused glance.\n\n\"The front door is open,\" Natalie said, smiling at her and not releasing my shirt. \"I just wanted to talk to Mitch for a second.\"\n\nOh, I thought. This is it. This was the reason that Natalie had invited me to collect the pizza. She wanted to talk to me about something. Was it about my checking her out earlier? In the robe? Surely she couldn't fault me for that. And she enjoyed teasing me, anyway. But suddenly I wasn't sure.\n\nThe brunette hesitated, then shrugged. \"I've been dying to steal a slice of this pizza for the past fifteen minutes,\" she said. \"So I'm going to go do that.\" Then, giving us a nod, she turned and headed down the hallway.\n\nI threw Natalie a confused look as she waited, but she didn't respond. She just watched Danielle open the door, call \"Special delivery!\" and then hook the door closed behind her with one heel as a chorus of greetings echoed out from my living room.\n\nA dozen feet down the hall, the door thudded shut. Then, Natalie finally released my shirt. My expression was uncertain, but I'm sure it registered only surprise when she turned to me and demanded, with irritation in her voice, \"What the hell is wrong with you?!\"\n\n* * *\n\nMy face must have been a picture of bewilderment, because Natalie paused and seemed to hesitate an instant. My mind, meanwhile, was reeling. I had been trying so hard to do the right thing, but had I still fucked up?\n\nHow? I thought, brain scrambling. I've been doing my best to help her out. I've kept our relationship platonic. I've been faithful to Julia...\n\n\"Earth to Mitch! Are you listening?\"\n\nI could see the flare in Natalie's blue eyes, and I realized, all of a sudden, that the tension in her voice wasn't irritation. It was nervousness. And the gleam in her baby blues was uncertainty. I shook my head, my hands instinctively going to her shoulders so I could make her look me in the eye. \"What are you talking about?\" I asked. \"What did I do?\" I felt the smooth silk under my palms and firmly resisted the urge to just tug the cloth free and away from her body.\n\nNatalie's lips pressed together into a firm line, her eyes darted to my mouth, and I saw the flash of a decision in their depths. Before I could stop her, she was kissing me.\n\nI could not have been more surprised as she came up on her toes and pressed her lips to mine. I froze up for a moment, resisting, but then, rather than shove her away, I found myself struggling not to ball the silk up in my fist and pull her closer, harder, turning her gentle kiss into something far more intense. The kiss was quick, and ended abruptly when she pulled back and put her hands softly on either side of my neck.\n\n\"We have a problem!\" But now, her voice came with the pant of someone who had nervous energy racing through their system and there was a surprising note of amusement in it. \"I've been trying to have sex with you for weeks, and you've been ignoring all of my signals.\"\n\nThe wires in my brain all sizzled and fizzled and went dark as my mind short circuited. I shook my head, frowning in confusion. \"What?\"\n\nNatalie pulled me closer, and then we were staring into each other's eyes. She spoke slowly, like I was obtuse. \"You, Mitch Sands, are incredibly hot, a goddamn hero, and I want to fuck you until neither of us can stand. Is that a clear enough signal for you?\"\n\nMy mind was still racing, trying to find a logical place for that statement in the reality I'd been building up for more than a month. You can't want that. The first thought rejected her words. It didn't make sense. Then, though, I wondered. Really? Have I actually been misreading her? How had that happened?\n\nI swallowed, then nodded. \"Yeah, clear enough.\" My voice was rough, uncertain, and Natalie's eyes flashed.\n\n\"You need to stop fighting yourself, Mitch.\" Her blue eyes were bright, burning into my dark ones. \"I can see it happening. I know that what happened to all of us was messed the hell up... but I also know the way you look at me. I want you to look at me like that. And I can see you stopping yourself. If you keep on punishing yourself for what Clayton did to us, you're never going to be happy.\" Then, she hesitated and looked away. \"And neither will I,\" she said, much more softly.\n\n\"Natalie...\" I wanted to hug her close and reassure her, but I had to keep her at arm's length. Otherwise my will power would probably shatter. I spoke slowly, trying to convince her. \"I know it probably feels like you have some sort of feelings for me. But it's not real. It's just the result of Clayton's programming and everything that happened between us when we were both... not ourselves. Your subconscious was primed to imprint itself on a person who wore a particular pair of glasses. That just happened to be me at the wrong time and place...\"\n\nBut I trailed off because she was shaking her head at me. \"It doesn't matter!\" And now she grabbed me by the biceps and squeezed my arms for emphasis. \"The feelings I'm having are now and they are true. I don't remember anything from before. Why do I have to wait around to figure out what me from the past wanted, when everything I want right now is here in front of me? I could lose it, chasing after something that's probably already gone.\"\n\nI felt the words follow her others through the hole in my logical defenses. They struck home. I could see she was telling the truth, but I still clung to my argument. I opened my mouth to protest again, but Natalie gave me such a determined look that I stopped before I could get out a single syllable.\n\n\"I am sure,\" she told me, and one of her hands slid from my arm and pressed firmly to my chest, \"that I have never met anyone more brave, self-sacrificing or devoted to the people he cares about, in all of my life. You could have ignored what was going on here, or tried to profit from it, but you found a way to stand up for what you believed in. You gave up your own chance to run, and instead you put everything on the line to save us.\" She grimaced. \"It's not like I can say the same about anyone from my past. Someone would have showed up looking for me by now.\" But she shook her head and moved on, fixing me with an irritated look. \"Now, when you could have left us to our own devices, you're the one who's coming up with the plans to provide for us. And you even have enough goddamn honor to try and resist your true feelings for more than a month.\" She turned it into a bit of a smile. \"Which has been driving me crazy.\" Her fingers raked gently down my chest, letting me know exactly what kind of crazy she'd been feeling. \"We might have met under strange circumstances. But I don't want that to get in the way of something awesome.\"\n\nThe conviction in her eyes gave me more pause than I'd expected. It forced me to understand that Natalie wasn't the thoughtless bimbo babe Clayton had tried to turn her into. She was smart, and determined as hell to go after what mattered. Which is me, I realized, and felt a gentle glow of pride at the thought. If only it wasn't for Julia... I started to think, but then I grabbed the thought and forced myself to look at it head on. It was the same reason I'd been using for weeks, and as I looked at it completely I realized how flimsy it was. The insight happened in an instant. A light bulb moment. Fast as the realization \u2014 \"Damn I've been an idiot.\"\n\nI had fought so hard to figure things out, to solve the mystery of the Academy and, then, to take things back to the way they were. But things could never go back to the way they'd been before. What had happened at the Academy couldn't be undone, and yet I had kept on punishing myself for it. I'd been using Julia as an excuse to ignore the future, even though it kept on knocking.\n\nI looked at the woman in front of me.\n\nShe was staring at me with deep conviction, trying to win me over with the weight of her full attention.\n\nI couldn't go back. It was time to answer future's knock.\n\nMy fingers tangled in Natalie's violet hair, the force of my kiss pushing her against the wall of the elevator. Her back was pressed tight to the metal, her curves against the lean lines of my body. I heard her moan softly into the kiss, and her full lips moved hungrily against mine. It was like a dam had been broken, and suddenly a month or more of pent up magnetic attraction was ripping through me.\n\nFor her part, Natalie gripped me like someone grabbing for a scrap of wood in a stormy sea. Her fingers clawed at my back, ran up my neck and through my hair, bunched in the fabric of my shirt like she wanted to tear it off of me right then and there. The sheer heat of her need for me was palpable, and when her bare leg rose and hooked around my waist, it was all I could do not to lift her up and fuck her against the wall.\n\nI pulled back, panting, looking into bright blue eyes through lavender hair that had freed itself from her ponytail. My body was full of heat and crackling energy, and I knew she felt the same. This was desire, pure and simple, no complicated equations to solve, no dynamic variables to handle. \"We going to do this?\" I asked. My doubts from before had been smothered. This time, though, it wasn't because someone had used my trigger phrase. It was because I stopped overanalyzing, worrying about every other moment than this one.",
        "Julia... a faint sliver of my mind protested. I ignored it. I still loved her, but she wasn't part of my life right now. Even if she had a place in my future, she didn't have one in my present. We would see each other again when the time was right. And for now...\n\n\"Yes,\" Natalie answered, nodding firmly and giving me a charming, sexually-charged grin. \"We are definitely doing this.\"\n\n* * *\n\nI opened the door to the penthouse with a strange trepidation. What will everyone be thinking?\n\nI wasn't quite sure how long Natalie and I had been out in the hallway. It felt like it had only been a few minutes, but time flies when you're making out like a teenager. Additionally, there's always a sort of silent tension in a group, when several people enter a room after staying outside for \"a talk.\"\n\nThe room was still mostly dark. The television emitted a soft glow that illuminated the three women, sitting on the couch. There was a half-opened pizza box on the coffee table, and Danielle was most of the way through devouring a slice, but other than that the women were sitting calmly.\n\nWaiting, I could immediately tell. The door closed behind me. A pause. I let go of the handle, and realized that my other hand was clasped in Natalie's.\n\n\"So,\" Lena said, a quiet laugh in her voice as she addressed my companion. She raised her eyebrows. \"Did you convince him?\"\n\nNatalie glanced at me, smirked, and nodded. \"He's seen reason,\" she answered.\n\nMy brain was still processing the fact that Lena and Ava were already in the know \u2014 which mean that they had intentionally given Natalie and me delivery duty as a chance to talk? \u2014 when Natalie tugged me by the arm and I followed after her.\n\n\"Now if you ladies will excuse us,\" the young woman grinned at her friends. \"I'm going to capitalize on this opportunity.\"\n\nI managed to walk with a cool, calm confidence that I didn't really feel as I was guided by the kimono-clad coed around the couch and directly into the master bedroom. Then, when this second door closed behind me, I felt my uncertainty drain away.\n\nNatalie was in front of me, turning around, shaking her hair free from its ponytail. The bed was large, and only a few steps behind her as she faced me head on. The big windows allowed silver and blue-orange light to fly into the room, only to shatter on the pale kimono that hardly covered her curves. She tilted her head back and watched me.\n\nI stepped forward.\n\nThe young woman stopped, her body growing still. She could feel it, the power shift in the room as I took control. I knew what I wanted. And, thanks to her prompting, I was finally man enough to do it without guilt. \"Natalie...\" my voice was a rough murmur, warmed around the edges by the heat in my chest. \"You perfect, sexy little minx... Thank you.\"\n\nHer mouth glinted with a soft grin. \"I think I've always had a way of getting you out of you own head,\" the girl teased. Her voice was light, but I could hear something deeper in it. She was loving me in control, loving my voice and the way it rumbled with dominance.\n\n\"Oh, you have.\" I took another step forward. \"Do you remember the first time we really met?\" I certainly remembered it. The way she'd looked in that tight, sexy schoolgirl uniform. Her dark hair, with its blonde highlights, falling around her face as her eyes went wide and she stared into my face. The way those eyes glazed over as the LucidSpecs did their work, and then filled up with heat and desire. I was committed to this, now, committed to this moment, and I was going all the way.\n\nNatalie paused, and her lashes fluttered. For an instant, I worried that the reference had upset her, but then she pressed her thighs together with a soft, suppressed moan. \"Yes, Professor...\" she purred.\n\nMy conviction soared.\n\n\"You got me right out of my head,\" I murmured, and then I tugged the dark tee shirt off and away. It hit the floor softly.\n\n\"Yes, Sir...\" Natalie took a slow step back, her fingers easing open the knot of the kimono. It fell, parting to reveal a slice of her bare stomach.\n\n\"You made me realize that all I wanted to do,\" I stepped closer and Natalie backed up against the bed, \"was bend this gorgeous woman over and fuck her on my desk.\"\n\n\"Ohfuck...\" she whimpered, looking up into my face as my hands slipped under the silk robe and brushed against her skin. I pulled her close to me, close enough to feel the throbbing bulge between my legs, the taut energy of my entire body.\n\nI bent my head, my voice a sexy rumble in her ear. \"Now... do you want to fuck me, Natalie?\"\n\nHer eyelashes kissed my cheek as she replied. \"Yes, Master...\"\n\nI kissed her again, and this time there was no hesitation. Her arms shrugged out of the kimono. It fluttered to the ground and I felt her hard nipples through the bra as her tits flattened against my chest. Her mouth was hot and soft, her tongue slipping between my lips. I lifted her by the waist and then lowered her down onto the bed, on her back, her legs wrapped around my hips and her lips locked to mine. My body surged, full of primal heat, and I devoured her mouth, kissed those soft lips and down her jaw and throat.\n\n\"Yesss...\" Natalie hissed in my ear, her hands sliding down my chest and stroking my abs. Her eyes were bright stars in the shadows of her face.\n\nI could smell whatever perfume she'd used, a light, sweet scent on her skin as I kissed her collarbone. My hands were on either side of her, then at my waist, hooking under my waistband and shucking my pants and boxers in a practiced instant.\n\n\"Fuck me, Master...\" she whispered, a sigh of bliss. Her hands slid further down my taut, ridged stomach until several slender fingers brushed against the head of my pulsating rod.\n\nI groaned, leaning forward into her grip. My hands fell to the mattress on either side of her shoulders so I could stare down into her eyes as her fingers circled and stroked my thick manhood. A shaft of moonlight lit her face, and I could see the flash of satisfaction in her eyes with my every shuddering breath. \"Are you ready for me?\" I asked. I raised myself on one hand and let the other quest down her body, stroking her smooth stomach and then gently brushing across her panties.\n\nThey were soaked.\n\nI could feel the heat of her arousal through the lacy cloth, and before I could stop myself my hand was underneath. Two of my fingers slid easily inside her, and her hips bucked up towards mine.\n\n\"Ohmygawdyesss...\" Her eyes rolled back, her body tensing around my fingers, and I knew she was just as turned on as I was. It wouldn't take much to set either of us off.\n\n\"Get rid of those panties for me,\" I murmured, my lips caressing her ear as I knelt back on my heels. I could have done it myself, but I felt a surge of power as she desperately wiggled her hips and tucked her knees, dragging the lingerie away and reaching out for me, silently begging me closer.\n\n\"Please, Mitch,\" she murmured. \"I'm so ready. I'm so hot and tight and wet and ready for you...\"\n\nLetting her hands guide me, I nudged the head of my length along her slit, feeling her desire and knowing she wanted nothing more than for me to take her. Natalie's lips quivered with a groan of need. Then, with long, slow thrust, I smoothly slid all the way to the hilt in her core.\n\nAfter more than a month without attention, my body exploded with sensations. I felt like I was a dying machine that had been plugged back into a power source as my nerves lit up and my mouth parted in a gasp. \"Ohfuck...\" I groaned. Then, I was pulling out and sinking into her again.\n\nNatalie just bit her lip and whimpered with lust as I pounded inside of her over and over. Her fingers tightened on my shoulders, her nails a welcome shard of pressure against my skin. I felt like a coil of energy, building up more and more power as her body squeezed and writhed around me. I lowered my head and kissed her, hard, and I could feel the heat of her panting breath against my mouth. One of my hands rose and cupped her round tits, squeezing through the sports bra and making her gasp as I tweaked a nipple.\n\n\"Ohmygawd Professor...\" she murmured into the kiss. \"Fuck me harder... Fuck me with that thick, manly cock...\"\n\nI sped up, lifting my head as my hips moved faster and faster. The tightness stretched between us, pulled in both directions as we each grew closer to climax. Natalie's back arched, her legs squeezing my waist. My core tightened, my balls heavy and full and aching for release.\n\n\"Show me who I belong to...\" she gasped.  \"Take me like I'm yours!\"\n\nI grunted, and with the sound something hot and hard and strong unleashed itself inside of me. All of the doubts that had plagued me were blown away. Now, I could finally give myself over to the powerful, primal man I had been holding back for too long. My senses felt heightened, like I'd removed a blanket of fog, and my rod was clenched in Natalie's body's volcanic embrace like a sword in its furnace. I felt like a hero, and I was being fairly rewarded. Her hips moved with mine, matching me thrust for thrust, until all I could think about was burying myself in her pussy and\u2014\n\nSomeone was standing in the doorway.\n\nThere was no light in the other room, but my ears picked up the soft sound of the door swinging quietly open. Normally, I would have frozen. My mind would have spun out into embarrassment and fear and guilt. But, instead, all I felt as I lifted my head was confidence.\n\nIt was a tall silhouette. The figure of a woman with lush, pinup curves.\n\nAva, I thought. Somehow, I wasn't surprised by her arrival. Instead I simply waited, slowing my movements, my cock sliding in and out of Natalie's lithe body as I watched the statuesque redhead. Her hand rested on the frame. Then, her shadowy shape detached itself from the doorway.\n\nShe disrobed as she came, kicking off her flannel bottoms and tugging the sports bra over her head with a cascade of dark crimson hair. Her breasts bounced free, high and firm on her chest. There was something about the way the woman carried herself that was different from Lena and Natalie. Ava was only a few years older, but her bearing had a calm maturity rather than an excited energy.\n\nShe paused, just out of arm's reach. Watching. Quiet. Her hazel eyes were still and deep.\n\nI knew she wanted me. I knew, abruptly, that she had wanted me ever since I'd returned from the Regent and freed her from Clayton's power. That she saw me like Natalie did \u2014 as her hero. And that, just like Natalie, she had been sending me signals for weeks. I'd just been too wrapped up in my own head to see any of it.\n\n\"OhmygodMaster...\" Natalie whimpered. One hand played with her tits, desperately tugging at her nipples and kneading her breasts as my slow, steady rhythm kept her right on the edge. Her eyelids were squeezed shut, her mind overwhelmed.\n\nAva's gaze flickered to the busty young woman on the bed, legs spread wantonly. Then, back to mine.\n\nMy eyes flared with heat. \"Want to join her?\" I invited.\n\nA pause that was probably only an instant but felt far longer. Then, Ava slowly bent at the waist and slid her panties down long, smooth thighs. Her eyes stayed locked on my face, and I let my lips curl in slow, lazy smile. Good girl, I was telling her. Master approves. And I knew that her inner submissive was practically glowing at my silent praise.\n\nShe straightened. Her entire body was on display before me, all long lines and mouthwatering curves, and I knew I wasn't going to stop until I'd sampled all of it. My voice had the low resonance of command when I spoke. \"Come here.\"\n\nAva's stance shifted slightly, readying, and then she quietly sidled sideways. My eyes followed her as she circled around the mattress, never more than a few feet away. Her expression captured mine. It was intense, yet calm. Then, as the woman knelt on the bed and crawled towards me, I was the one hypnotized by her fluid grace. She looked like a lioness, stalking her prey, slinking past Natalie and rising up on her knees beside the younger woman. Ava's back arched gently, like she was offering up her body for my inspection, and her hands traced up her flat stomach and caressed between her breasts. In the gentle glow of light through the window, I could see that the woman's skin had a warm, golden undertone that I'd never appreciated.\n\n\"Natalie,\" I ordered, not looking away from Ava's face.\n\n\"Yesss...?\" The purple-haired beauty's voice was a hiss of ecstasy as I ground myself deeper inside of her.\n\n\"Give Ava some attention.\"\n\nI'm not even sure if Natalie was aware of the other woman before that moment \u2014 she was so focused on the bliss coursing through her own body \u2014 but her blue eyes flickered open. \"Oh...\" she murmured. One of her hands rose. It stroked up Ava's slender thigh.\n\nThe redhead blinked, then her lips turned up into a smile for the first time and she slowly lifted one knee, swinging it over the younger woman's body. Straddling Natalie and facing me, Ava lowered herself toward the gorgeous hipster goddess and leaned in toward me. Her hand rested softly on my shoulder for balance. It was the first time we touched, and I felt it like a shock of cold, fast lightning.\n\nMy heart thumped louder with anticipation and my cock throbbed as I pushed into Natalie's womb. My fingers gently caught Ava's chin and tilted her face toward mine. The woman's breath caught as Natalie's tongue flickered across her clit, and then she was kissing me and I took the rest of her breath away.\n\nMy hands were suddenly all over her, caressing, brushing, teasing gently, even as my hips thrust powerfully and my cock slammed into Natalie's dripping pussy. The sensations that had frozen in time upon Ava's surprising entrance returned with full force, and with interest. My body was supercharged with heat and lust, primal sources of energy that made me feel like I could lift both women up in my arms without batting an eye.\n\n\"Ohfuckkk...\"\n\nNatalie came, her tits bouncing and her thighs clamping tight around my waist as she fell over the edge. She spasmed, her inner muscles massaged my cock, begging me to cum, begging me to empty myself inside her.\n\nBut I was in control, and I clamped down on my own body. Instead, I focused on the redhaired beauty kneeling before me. I pulled her lips to mine with a passion. Her mouth moved differently from Natalie's: soft and willing, almost sweet despite the heat of the moment. She gave me everything, let me take control, trusted me with her pleasure. And I multiplied it back to her.\n\n\"Oh my god Mitch...\" Ava's voice was a husky moan against my mouth. It was her first sound, and hearing my name gasped in pleasure was like a drug. My hand slid over her collarbone, squeezing one perky breast. She trembled, and I could tell that Natalie's tongue was doing good work.\n\n\"Are you nice and hot and ready for me?\" I asked, slowly pulling back from Natalie's core. My rod was pulsating with pent up need, and I could scarcely keep my voice steady. My balls ached to spill, and I knew that my ex-student was more than willing to take it. But I had another prize to claim.\n\nAva's eyes were large and deep, sighs of pleasure escaping her lips. Her gaze traced down my chest, across my taut abs. Her eyes widened even larger at the sight of my throbbing manhood as I came free from Natalie's entrance with a low moan. They darted back up to mine, and then she nodded slowly.\n\n\"Please fuck me...\" she said, her voice right on the edge of desperate need. Natalie's tongue flickered and Ava gasped. \"Holy fuck please fuck me right now...\"\n\nIn a single movement, I stepped back and deftly unhooked Natalie's knees from my hips. The young woman shuddered with an aftershock, and then my arms were around Ava's waist and I was lifting her off of Natalie, into the air.\n\n\"Oh!\" Ava cried out softly in surprise, and then I was letting her down. Her feet hit the floor, but only for an instant before I spun her around with my hands on her waist. Her hands hit the mattress, and her back arched as she threw a look over her shoulder.\n\nOne of my hands was on her hip, steadying her, and the other was wrapped around the base of my shaft, readying me. My stiff rod was hard as steel and my body thrummed with power and lust. I didn't hesitate, staring into the woman's soul as I slid into her molten tunnel for the first time. Her entrance was already wet from Natalie's tongue and sheened with liquid arousal.\n\n\"Holyfuckkk...\" Ava's voice was a strangled moan. Her head fell forward and I felt her legs tense as her toes curled into the floor. A shudder of pleasure rippled down her spine.\n\nI paused, buried to the hilt in her tight, hot interior. And then I moved again. Faster. And Faster. I hadn't realized, until now, how much I wanted this gorgeous woman. Despite her age, she had an air of experience about her that was beyond sexy. And, she knew what she wanted.\n\n\"Yes Master...\" Ava's low murmur was heavy with desire and arousal as she pushed back against me. \"Thank you for fucking me, Master...\"\n\nI recognized what she was doing, knew she was slipping into her role as a submissive. My submissive. I felt my cock pulse with pleasure, with power, and my body trembled as lust poured through me. Her ass was firm and bouncy against my thrusting hips, and I let one hand come down in an easy slap.\n\n\"Ohyesss!\" Her voice trembled, and I could see her fingers clench into the sheets. \"You feel so good inside me, Master... Dominating me... Controlling me, inside and out...\"\n\nInteresting, I thought. My muscles were all tense, flexed, my body ready to explode as I leaned forward and gathered up a handful of thick, crimson hair. So she likes it a little harder... Then I pulled her head up, forcing her to look into my eyes. I was thrusting into her faster now, my manhood fitting perfectly inside her like she was custom-built for my pleasure.\n\nAva's eyes were wide and wild, glinting in the moonlight. Her lips were open in a wordless gasp of desire and deepest satisfaction. Her back was arched like a bow and her round tits swayed under her supple body. My length was penetrating all the way to her center, pushing against her deepest walls, and I could see the impact of my every pistoning movement as a ripple of bliss up her body.\n\nMy voice was low, almost harsh. \"I want you to cum for me,\" I told her, my girth splitting the beautiful woman in half. \"I want you to cum for your Master. I want you to know that no matter how hard you try to stop yourself, you can't. Because I control your pleasure.\"\n\nThe woman's mouth dropped open in a moan at my words, her gaze unable to escape mine. It was like my eyes had captured her mind, and my words had a direct line to her pussy.\n\n\"Cum for me,\" I commanded. My pulsating length slid deep into her body, clenched in a velvet grip.\n\n\"Thank you Master...\" Ava managed, and then her eyes rolled back and she came. Her body pitched forward into the bed, all her muscles tightening and releasing. Her voice became a cry of ecstasy, muffled in the sheets. On her knees, face buried in the mattress, fingers making fists in the cloth.\n\nIt was too much, the sight and sound and feeling of complete domination and power. It felt so right as I tipped over the edge, letting myself go deep in the redhead's body and unleashing my seed. My balls tightened and sprayed themselves empty, strand after strand of spunk spattering across her inner walls. The feeling of my essence made Ava groan and cum again, trembling as another wave of bliss rocked her world. I fell forward onto one hand, panting, body arced protectively around Ava's.",
        "A long, quiet moment later, I pulled back and free from her body with a groan, allowing her to collapse into a limp, well-fucked pile next to Natalie. The younger woman murmured, pushing herself up as her sex-glazed eyes began to refocus. Natalie's gaze met Ava's, and then the purple-haired woman leaned over and gave her a gentle kiss.\n\nAva blinked slowly, then smiled.\n\nI was surprised. A warm glow of affection and desire wound its way like a hot chocolate glow up my body. I knew I could have stayed in bed with them for hours, exploring their bodies as I explored the boundaries of my new freedom. I could have forgotten about anything else.\n\nOnly... I couldn't.\n\nSuddenly, I felt almost awkward. \"That was amazing,\" I said, looking both of them in the eye. \"But... ahem, I need to...\" I bent, grabbing my lounge pants. I slid them up my legs, and jerked my thumb at the bedroom door.\n\nNatalie smiled in a worn out kind of way. \"You think we don't know that?\" she snorted playfully.\n\nI snuffed a laugh, nodded, and then didn't bother to put my shirt back on as I strode out into the living room.\n\nI still had another companion I needed to talk to.\n\n* * *\n\nThe pizza box was still half-open on the coffee table, but it was being completely ignored by the two young women making out on the sofa.\n\nThe sight was so abrupt that I pulled up, stopping and watching with growing appreciation. Maybe I should have been more surprised, but my body was in a different mode. My primal brain liked what it saw, and I shifted as I felt my length begin to swell.\n\nLena was kneeling across Danielle's lap, hood down but thick sleeves bunched up around her elbows as she cupped the brunette's face in her hands. Her shoulder-length hair was in mussed up disarray, but it was the kind of mess that just makes you think about sex. The darker-haired woman, meanwhile, was pushing her hands slowly up Lena's back, dragging up the hoodie. Danielle's body was pressed down against sofa with the intensity of their kiss, but her body arched up into Lena's, hands pulling at the blonde like she was bringing the other woman as close as she could.\n\nI must have made an involuntary sound when I entered, because Lena pulled back abruptly, whirling around. Her green eyes were wide, startled. Then, when she recognized me, something flashed that looked almost like guilt. But I didn't have time to wonder, because I had arrived with something to say. The words were coming out before I was ready, but I couldn't stop them.\n\n\"Lena,\" I said.\n\nHer expression was slowly changing from surprise to concern.\n\n\"I know that you know I talked with Natalie, but I needed to talk to you, too.\" I hesitated only a second before continuing. I didn't look at Danielle. She could hear it, too. I wasn't ashamed to admit I messed up. \"Ever since we stopped Clayton, I've been keeping you at arm's length. You and Ava and Natalie. But I can't do that anymore. It's not right. And it's not what I want.\" I probably sounded crazy, but I bulldozed ahead. \"I don't know how it works out, but I know that this is where things are right now. I want to be with you. And Ava, and Natalie. You're so amazing, Lena. Ever since we've met, you've been there with me to solve every one of our problems. I want to stop holding back, and ...\" The realization that she was in the middle of kissing someone else suddenly hit me, a dozen seconds too late. \"If you... ahem,\" I stumbled over my words, and rubbed the back of my neck sheepishly. \"If you want to, as well.\"\n\nLena glanced between me and Danielle, then slowly extricated herself from the brunette's lap. She pushed several strands of hair from her face, and quirked her lips up a little. It was a smile, but I couldn't tell whether it was the good type or the bad one. It was too dark in the room, and the look had been too quick.\n\nThe blonde took several slow, cautious steps toward me. Cleared her throat uncomfortably, then said. \"Hey, Mitch.\" The words were a bad start, but her tone was decidedly neutral. \"So, do you remember that night when you asked me and Natalie to kiss?\"\n\nI nodded. Of course I did. The night of the Academy party, when I'd finally learned what was going on.\n\n\"And do you remember how I responded?\"\n\nI nodded again, slowly.\n\n\"I resisted.\" She paused, then said, \"Because even under your control I had strict programming against it.\"\n\nI frowned. \"What do you mean?\"\n\nDanielle rustled into a sitting position behind her, adjusting her hoodie self-consciously.\n\n\"I didn't realize it at first, but then cracks started to appear in the armor. First it was fooling around with Natalie, and then you asked for my help with getting Danielle...\" she paused, glanced at her friend, then said, \"involved with our plan. And then afterwards, getting to know Danielle...\" Lena trailed off and shrugged. \"Clayton had given me a large amount of programming to make me forget a core part of my identity. I'm actually a lesbian.\"\n\nYou could have heard a pin drop in the silence of my mind. She had said it so calmly and directly. Then, Holy crap.\n\nThere was a long, awkward pause.\n\nI couldn't think of an appropriate reaction. I swallowed. Well... I thought. So, she and I will never be together... That could have gone better.\n\nThen, all of a sudden, Lena's face cracked into a grin and a laugh exploded out of her. Behind her, Danielle doubled over, the lithe brunette pulling her hood up as she rolled with soft chuckles.\n\nI froze, glancing between them. What the hell?\n\n\"Oh, I got you so good...\" Lena was in the middle of a giggle fit, but she reigned it in and covered her mouth with her hand. Her eyes shone with mirth.\n\nI blinked. \"What?\"\n\nLena just shook her head, her slim shoulders shaking under the thick hoodie. A gasp for air, and then she seemed to have calmed herself. \"I'm screwing with you,\" her voice had a tremble of humor in it.\n\nI frowned deeper, feeling a little put out. \"What are you saying?\"\n\nLena gave me a look. It was simultaneously frank and yet, somehow, apologetic, and I felt the frown smooth out. \"You've just been so uptight lately,\" she shrugged. \"Like you said. Giving me the cold shoulder. Giving it to all of us. And then you just want us to jump right back in bed with you. I wanted to give you a little jolt of worry that it might not be so simple.\"\n\nI winced. \"That's pretty harsh, Lena.\"\n\nThe blonde snorted. \"So is pretty much ghosting me for a month.\"\n\nI hesitated. She has a point. I nodded, letting the tension ease out of me. Lena was a stern opponent. Wow, I thought, impressed. I said, \"Thanks for calling me on it,\" then winked at her. \"After Natalie did the hard part of actually calling me out.\"\n\nLena rolled her eyes. \"Whatever,\" she muttered, pushing me with one small hand.\n\nI caught it gently, and pulled her closer.\n\nShe only pretended to resist.\n\nI squeezed hand and examined her face. \"So...?\" I prodded.\n\nShe gave me a questioning look.\n\n\"You're not actually a lesbian?\" I asked.\n\nLena's lips made a charming grin. \"Oh, I definitely like girls,\" she said it matter-of-factly. Then, her free hand pressed to my bare chest. One finger trailed down until it reached the bulge that still remained in the front of my pants. She squeezed gently, staring into my eyes, and I groaned. \"But do you think I could forget this amazing cock?\"\n\nAll the blood that remained in my brain rushed south. She said it sensually, lips framing the word cock as she stroked up my length. My mouth was dry.\n\n\"I definitely didn't forget about it.\" Danielle had risen from the couch and was sashaying up behind Lena. She traced one hand along the back of Lena's shoulders. But there was something about her voice...\n\nI hesitated. \"Raven?\" I asked.\n\nThe brunette flashed a grin. \"That's right, handsome.\"\n\nI glanced back at Lena. She was still waiting, so close. Close enough to kiss, if I wanted. \"Are we doing this?\" I asked. It seemed only polite to ask, since I was the one who'd interrupted.\n\nRaven slid gracefully to her knees, caressing the thick bulge of my cock with her lips as Lena wrapped her hands around the back of my neck and pulled me into a long, slow kiss. I could taste Danielle's mouth on hers, and it turned the fire up a notch in my core.\n\nMy body was responding to these two women, and I knew that this time I wouldn't be holding myself back. I wouldn't be resisting my desires, trying to stay pure for the woman of my past. I knew there would be a place for Julia in my future. But it was time for me to live the reality that was in front of me. A twist of fate had thrown us all together. Pushing my companions away now would be like trying to solve a problem by ignoring variables I didn't like. Besides, it was like Natalie said. I was the person who took care of them now. It wasn't like anyone from their old lives had come after them.\n\nFor tonight, it was just us. And that was all we needed.\n\n<h1>\n\n</h1>\n\n* * *\n\nANNOUNCEMENTS:\n\nThis is it!\n\nThank you so much for reading Chapter 13 in this series \u2014 Bimbo Builder Academy. We've come to the end of the first arc, so now I'll be taking a break from BBA to work on other projects. Hopefully the ending satisfied you, and if you still have questions you can send me a message through Literotica or reach out to me elsewhere online. There are plenty of threads that I want to pick up when I come back, and plenty of questions left to answer.\n\nAbove all, I really do hope you enjoyed the story, and if you did then please rate and comment. It means the world to me and even if I don't respond to all my comments, please know that I read every one. When I feel like my work doesn't matter, I come back and am reminded that wonderful people out there really are reading what I publish.\n\nI'm trying to get this story into the Hall of Fame, so if you enjoyed BBA then consider giving this story 5 stars.\n\nYou can find me elsewhere online if you want to get early access to future stories (multiple weeks ahead of Literotica). If you're going to be spending a lot of time alone this coming month (what with the virus and all) I hope that reading my work gives you a little entertainment during long, boring stretches of time.\n\nLots of love, and I'll see you soon for my next publication!!!\n\nJC\n\n \n"
    ],
    "authorname": "JCBeleren",
    "tags": [
        "bimbo",
        "blonde",
        "blowjob",
        "brunette",
        "female submissive",
        "hypnosis",
        "male dominant",
        "mind control",
        "oral sex",
        "redhead"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/bimbo-builder-academy-ch-13"
}