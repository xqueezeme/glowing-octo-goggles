{
    "title": "Big Flipping Deal Ch. 07",
    "pages": [
        "[The story so far: Nick and Lindsey have inherited a house they must remodel together according to her aunt's will. As their DIY renovation proceeds, Nick falls hard for Lindsey even though he soon learns she's transgender and has a cock. Despite Nick's enthusiasm, Lindsey is dubious about getting involved with a guy who has previously been entirely straight, but she agrees to go bowling with him, and then to his cousin's wedding, and then on a date to the art museum. At each point, things go a little further, and the museum date ends in mind-blowing sex at her place. \n\nObligatory note: This chapter contains some brief references to the characters' teenage years, but at no point are any sexual activities described involving anyone under eighteen.] \n\nA while later, even though things hadn't gotten as messy as they might have, we went in and cleaned up in the shower. Her bathroom surprised me by being ritzy but not amazing. \n\n\"Well, this is nice,\" I said as she ran the water in the glass-enclosed shower stall. \"But after your sketches and the photos on your website, is it okay if I admit to being a little disappointed?\" \n\nShe just laughed. \"If you're going by the stuff on my site, you'll be disappointed with how Neena's turns out too. Those shots are from twenty- and thirty-grand bathrooms, Nick! I got the complex to let me recarpet the upstairs here - you should have seen the eye-stabbing shit they had in this place - but no way am I spending that kind of money on a bathroom someone else owns!\" \n\nSatisfied with the temperature, she got a scrunchie and put her hair up. \"Come on, let's get sudsy.\" \n\nThe shower could have done with some more artistic tile than the polished brown granite they'd used on it, but it had plenty of room for us both. I barely even got splashed as Lindsey turned herself in the spray. But once she'd thoroughly and glisteningly soaked herself, she angled the showerhead at me and wetted me down with a grin. Then she glopped way more body wash across my chest than necessary, so that it ran and dripped down my abdomen and legs. \n\n\"Whoa, that's kind of a lot, isn't it?\" \n\n\"No,\" she said, smearing the thick green gel around. \"It's just the right amount for two.\" \n\nHer soaped-up hands went around my back, and she flattened herself against me to rub us together in full-body contact. We kissed and slid chest-to-chest, belly-to-belly. Almost immediately, I felt her erection swell along my inner thigh and then bump into my own rapidly hardening prick. She got a hand between us and soaped me, tugging a moan from my throat and bringing me to full arousal. As my absolutely thrilled cock kept one hand busy, she used the other to glide body wash up from my chest around my shoulders, onto my back, down my ribs, under my arms. But she kept her hip against mine so that her dick tucked itself into my crotch by my balls, where I couldn't easily get a hand down to it. I took that to mean she had things where she wanted them, and I concentrated on kissing her and lathering her breasts and then shoulders and then ass with both hands. As we got well-soaped, she continued stroking my rod and also lightly fucked her cockhead down into my groin. \n\n\"Here,\" she said, swirling her hand to signal a change, \"this is fun - watch.\" \n\nShe stepped back an inch or two, which let her cock spring up from between my legs, then lifted mine into a vertical position and caught them both in the same hand. Instead of her fingers, palm, and thumb completely sheathing me, I now had fingers around the top side of my shaft and the belly of her erection against the bottom. \n\nFascinated, I watched her jack her hand up and down us both, feeling the stroke with half my cock while her hot, hard flesh nestled almost motionless against the other half. Then she thrust with her hips, making the swollen pink tip of her dick rise up out of her grasp higher than mine, while the shaft worked itself slickly along the sensitive underside of my own. \n\n\"Wow,\" I said, my throat tight. The unexpected blend of sensations all around my manhood took me completely off-guard. \n\nLindsey grinned. \"I know, right? This is why I love to shower with a guy who's the same height. Well, one reason.\" \n\nShe alternated fucking herself against me and masturbating us both with her slippery hand ... watching me as I stared, then watching our dicks slide together, then watching my face again. \n\n\"You can join in anytime you want,\" she prodded. \n\nI looked up to find her smirking, which brought a rush of blood to my face. \"Oh, right, sorry. I'm just kind of stunned by you, Lindsey.\" \n\nThe smirk turned to a smile. \"Well, I won't hold that against you, then. I'll hold this against you instead.\" \n\nBobbing her hand up and down our trapped erections, she came in for a kiss, and the next time her grip went still, I tried a thrust up into it and was rewarded with a soft, \"Mm-hmm,\" from her throat. \n\nWith the spray falling all around us, I let my hands wander behind her, feeling the slick muscles of her back, shoulders, and especially her ass. We found a rhythm together, a pattern of hip thrusts and hand strokes that swept our pleasure-engorged flesh through cycles of slide and stillness. Hot fog rose to fill the glass enclosure as water hissed from the showerhead and lapped its way down our bodies, bound together in gleaming wet passion. Periodically, the flow would wash too much of our foamy lubricant away and Lindsey would scrape more gel from the excess that still clung to my upper chest. \n\n\"Mmm,\" I groaned against her lips as the furnace in my deepest plumbing caught fire. \"Mmm, Lindsey ...\" \n\n\"Mm-hmm.\" Her tongue flickered into my mouth and she thrust faster against me. \"Mmm! Mmmmm-hmm.\" \n\nThe steam around us seemed to thicken and rise almost to scalding heat . I found it harder and harder to keep a steady pace as something spastic and uncontrollable took hold of my spine. \n\n\"Hh-mm, Nick -\" Lindsey's beat wavered too, groans and moans making her hand falter and then speed up. \"Ah ... ah ...\" \n\nI came before she did - just barely. The rush fountained up out of me with no warning at all. \n\n\"Mmmnnnghhh -\" \n\nHer hand squeezed tight around my pulsating cock, and she thrust hard and fast as my cum spurted in throbs and blurts and dwindling splashes between us. \n\n\"Uh ... uh-uh ... Nick ... UH!\" \n\nAnd then I felt my orgasm joined by a seesawing gush, me then her then me then her. \n\n\"Fuck, Lindsey, ah -\" \n\n\"Mm, Nnn ...\" She hooked her chin over my shoulder and crushed against me, her gripping hand and both our ecstatic eruptions squashed between us. \"Uhhhhh ...\" \n\nPanting and groaning, we held each other until the reflexive clutch of climax let us go and our bodies could relax. \n\n\"Whoo. Ah,\" she said, putting her forehead to mine. \n\n\"Best shower ever,\" I said, still out of breath. \n\nShe laughed and let go of us to free up her hand and loosely encircle me with her arms. Then she kissed me and sighed contentedly and said, \"Best first date ever, too. For me, at least.\" \n\n\"Really?\" \n\n\"Yeah.\" \n\n\"Me too.\" \n\nWe watched each other's eyes as the water continued to fall around us. \n\n\"I don't want you to go. Can you stay the night?\" \n\n\"Yes,\" I said without hesitation. \"But you have to promise not to have any more sex with me, because I'll need to get up at the fucking crack of dawn to get back to my place, change, and pick up Sam so he can have his car back.\" \n\nShe looked away and up and to one side, a picture of innocent uncertainty. \"Not sure I can promise that ...\" \n\n\"Grr,\" I said, squeezing her. \n\n\"Oh, okay,\" she gave in. \"But if this is how it works, you're never borrowing Sam's car again. Deal?\" \n\n\"Sure.\" \n\nWe held each other then, finished washing up, dried off with big, fluffy white towels from Lindsey's linen closet, and ended the night snuggling to sleep in her bed. \n\n* * * \n\nLindsey turned out to be a surprisingly heavy sleeper, considering how prompt she seemed to be about everything else. When the alarm on my phone went off the next morning, she mumbled and tossed a few times before settling into a restless, cute snore as I threw on my clothes. Once I got dressed, I leaned over her and whispered that I had to go, and she made little kissy movements with her lips until I touched mine to them. Then she said something incoherent that ended with \"good day,\" so I called her a sleepyhead and told her to have a good day too and that I'd see her that night. \n\n\"Mmm-hm,\" she said without ever opening her eyes. \"G'night ...\" \n\nBy the time I picked up Sam at his house, I'd had almost an hour of driving, changing, shaving, cleaning Mister Whiskerdoodle's catbox, and driving again to wake me up. The catbox alone was pretty eye-opening. \n\nSo I arrived at Sam's fully alert and aware of where I was, what I was doing, where I'd been the night before - and how I felt. \n\nGood. \n\nExcited. \n\nSurreal, maybe a little high. \n\nA fraction anxious that I'd had a mental break of some kind and everything would crash apart. \n\nBut mostly good. \n\nI focused on that to prepare myself for however the conversation might go. We'd spoken very little when he handed the car over to me the day before - he apologized about being untalkative, but said he still had some baby steps to take to get his head around the situation. \n\nThis morning, though, it turned out he had more to say. \n\n\"So ...\" He fastened his seatbelt and I reversed out of his driveway. \"I guess I'd be a real jerk if I didn't ask how the date went.\" \n\n\"It went well.\" I kept my tone easygoing, not wanting to put too much enthusiasm into the statement and end up making him uncomfortable. \n\n\"Good,\" he said. \"Glad to hear it.\" \n\nHeading out of his subdivision, I said, \"The exhibit was pretty cool, and we both had a great time talking about it. I did have to rescue her from this vegetable lasagna she ordered, but it was worth the sacrifice.\" \n\n\"Hmm. Bad sign she ordered vegetable lasagna, but I guess a better sign that she didn't want to finish it.\" \n\nTraffic started to pick up around us. Sam broke a brief silence by saying, \"All right, so when you said it went well, do you mean it went well? Or do you mean it went ... you know, well?\" \n\nI glanced over and saw a sincere attempt at looking interested in a buddy's masculine conquests. \n\n\"Let's just say it went really, really well, and leave it at that,\" I said. \"I know it kind of freaks you out, so I won't give any details except that she's a great kisser.\" \n\n\"Well, uh, that's definitely a mark in her favor.\" He went quiet again, like he had to work his way up to something. A couple of blocks went by, and then he launched into it. \"Look,\" he said, \"I remember playing over at Elise's when we were kids, choking down that terrible lemonade she used to make and running around her yard. And I remember it hit you pretty hard when she died.\" \n\nI nodded, but didn't say anything. \n\n\"I mean, it hit me too,\" he added quickly. \"But my folks had spilled the beans about her to me way before, so I was ... a little weirded out by her even though she'd moved to Maryland by then. And they badmouthed her a lot, especially after she killed herself. On and on about how she always did these selfish things that were against God.\" \n\nNow I really didn't say anything, because I'd heard my share of those conversations at family gatherings over the years, and I'd always had to bite my tongue against saying anything to one of the grey-haired elders I'd been raised to be respectful of. Being reminded of incidents like that steamed me seriously up. \n\nSam's voice took on a tone of regret. \"I bought into it some too - they were my folks, after all. But the subject always made me uneasy. I couldn't help remembering how much more fun she was to visit than all the churchy aunts and uncles, how she never had anything bad or critical to say to anybody.\" \n\n\"Even when you broke her window with that terrible pass.\" \n\n\"It was an okay pass, you just didn't go up high enough to catch it.\" We'd had the same argument twenty years earlier as we waited for Elise to come out and yell at us for smashing the glass. But she just brought us the football back, gave us some tips on throwing it, and went back in to sweep her kitchen up. \"I think I felt about ten times worse about breaking that window because she didn't yell at us than I would have if she'd wigged out.\" \n\n\"Me too,\" I said. \n\nHe took a deep breath and pushed on. \"Anyway, after that call where you said I should broaden my mind, I got a little pissy. I didn't think I'd been nasty to you or to your, uh, date, and I thought it was awfully nervy of you to be lecturing me. And I wanted to bitch to somebody about it. But the first three people I thought of calling all happened to be from the Bible-thumper side of the family. It didn't take more than a second to realize that if I said anything, they'd circle back to Elise and shake their heads over her. And the more I thought about it, the more I picked through the list of people I might tell, the more I realized that the people who were going to take my side were all the people I didn't want to be like. And about then, I realized you were right, and I needed to broaden my mind.\" \n\n\"That's pretty big of you, Sam,\" I said, meaning it and giving him a glance of respect. \n\n\"She was a great person, you know?\" He sounded a little choked up. \n\n\"Yeah,\" I agreed. \"I remember.\" \n\n* * * \n\nThursday night, the appliances came. \n\nAnd the pre-industrial age AC unit broke. \n\nLindsey oversaw the installation of the new stove, fridge, and dishwasher while I tore up carpet in the guest bedroom. By the time I finished, the job had turned me into a sweaty mess, while Lindsey just looked a little glowy. My fantasy from the first day I'd met her came back to me - the house without air-conditioning, both of us damp with sweat, the blow-job leading to sex in the same room I'd just denuded of carpeting. But even if I hadn't been wiped out from the heat and exertion, her reaction when she saw me would have kept me from suggesting we give the fantasy a try. \n\n\"Whew!\" she said, waving a hand. \"You need a shower!\" \n\n\"Yeah,\" I admitted. \"If I was slightly less exhausted, I'd ask if you want to join me for one.\" \n\n\"Ohh,\" she said. \"That sounds nice, and I've been watching muscular delivery men working with tools all evening. But I thought you said last night that you've got a lot of freelance assignments to do.\" \n\nCrap. Not only had I said that, but tomorrow was Friday, so if I didn't finish my allotment of work, it would be a whole week before I could invoice the client for it. \n\n\"You're a lot less fun tonight than you were last night,\" I grumbled, crossing my arms. \n\nShe leaned in and kissed me. \"I'll make up for it by being even more fun tomorrow night.\" \n\nAnd she did: after Friday's task of reflooring the guest bedroom, we cleaned up in the considerably less spacious shower at my place, had more dick-to-dick whack-off sex before rinsing off, and then went out to this Korean restaurant where a whole section of the menu didn't even have English translations. I'm not a big fan of kim-chee, but whatever we ordered came with about a dozen other tiny appetizers that were amazing - seaweed salad, several different pancake dishes made of unidentifiable vegetables, a highly spiced heap of what tasted like dried anchovies, and some other stuff I wasn't sure I wanted to figure out. Then an amazing seafood soup in a dangerously hot tureen, followed by three smallish entrees that we shared between us. Lindsey went on a couple of times about how much she liked all of colors in Korean food, and she knew what she was talking about - the dishes had the look and presentation of fine art. \n\n\"Although art doesn't make me feel like I'm about to explode,\" I said when I'd reached the absolute maximum capacity of my stomach. \n\n\"Yeah, I can never get out of this place before I'm waddling and groaning.\" \n\n\"So do you want to waddle to my place and do your groaning there?\" \n\n\"Oh god, no.\" She quickly put a hand over her mouth and another gingerly across her belly. \"I would rupture something if we went to bed right now. Plus, they're delivering the rolloff first thing tomorrow morning, so we wouldn't even be able to sleep in.\" \n\n\"I was mostly kidding,\" I said, puffing my cheeks out to show how bloated I felt. \n\nWith the arrival of the rolloff (I would have called it a dumpster) the next morning, we could clear some of the accumulated trash out of the garage - the old cabinet doors, the original kitchen countertops, the sliced up carpet from the front half of the house. A hell of a lot had piled up in three weeks, actually, and we worked like dogs the whole weekend shifting it to the rolloff, stripping the fixtures and tile from the master bathroom, and starting the replacement tile work. The new AC unit wasn't scheduled to come until Monday, so all of this had to get done in sweltering heat. I don't think I drank enough water Saturday, because I ended up with an icepick-through-the-eyes headache by the end of the day. \n\n\"Why didn't you say something?\" she asked. \"I could have kept prying the tile loose while you took a break and got some ibuprofen from home.\" \n\n\"I kept telling myself I would after the next row of tile,\" I said. Also, we'd been working together on our hands and knees, sometimes shoulder-to-shoulder, sometimes on different sides of the room, and I'd enjoyed being close to her in the first case and checking out her ass and legs in the second case. \"It snuck up on me and got really bad before I realized it.\" \n\n\"Well, let's get you home and I'll give you one of my headache-slaying massages.\" \n\nAt my place, I went for the pain reliever in my medicine cabinet while she petted Mister Whiskerdoodle. \n\n\"And bring some lotion when you come back,\" she called to me from the bedroom. I did, and she made me lie down with my shirt off while she worked the hell out of my neck and back with those long, strong fingers of hers, squirting cold lotion down my spine before she got started and then rubbing it in with magnificent pressure. \n\n\"Uhhh, where did you learn to do this?\" I asked. \n\n\"I had a friend in high school with terrible posture. He'd get these tension headaches all the time, and I figured this out as an excuse to get my hands on him.\" \n\n\"Devious,\" I mumbled into the pillow I had my head leaned against. \n\n\"You don't know the half of it,\" she said. \"After a while, I could get him practically comatose face-down on my bed, and then I'd go to massaging him one-handed with the other one stuck down my pants. Closest thing I got to sex until college.\" \n\nMy brain somehow created a picture of beautiful, feminine Lindsey kneeling beside her friend with one hand smearing lotion across his back and the other jammed in her panties. But of course, that wasn't what it would have looked like at all. \n\n\"And he never figured out what was up?\" \n\nHer hands stopped for a second, then started again. \"No, because my dad came in and caught me at it one day and proceeded to beat the crap out of James, who had no clue at all what was going on. No more massages after that - it was weeks before I could even get James to talk to me.\" \n\n\"Wow. That sucks.\" \n\nI felt her shrug in the movement of her hands. \n\n\"Did he ever ... beat you up too?\" \n\n\"No, but he got into fights with people all the time. I knew what he was capable of from a really young age and made sure I kept out of his way.\" \n\n\"That's good,\" I said. \"I guess something about the way you said you knew he could hit ... I thought you meant you'd been on the receiving end of one of those punches.\" \n\n\"Nope,\" she said. \"He managed to save the physical stuff for people outside the family.\" ",
        "With that she went quiet and focused on digging her thumbs into the tight spots between my shoulder blades. Great, I thought. Way to go completely morbid. She probably thinks I pegged her as a serial victim after the black eye from Max and then her dad punching me. \n\n\"How's your head doing?\" she asked. Her hands slowed in their movements at my back. \n\n\"Better. It still hurts, but I feel like my skull's about to explode anymore.\" \n\nShe kept massaging, but more softly, slowly. \n\nAfter a few quiet minutes, she said, \"Nick?\" \n\n\"Yeah?\" \n\nI waited to see what she'd say, and just before the silence got awkward, she spoke up again. \n\n\"I'm really glad I met you. You're a good guy.\" \n\n\"Thanks,\" I said. \"You too.\" \n\nOh shit, what the hell did I just say? I rolled over half panicked. \"I mean I'm glad I met you too. I wasn't saying you're -\" \n\nBut she laughed and patted my cheek. \"I knew what you meant. Look, I'm going to head home and try to get some extra sleep. See you in the morning?\" \n\nAn invitation for her to stay over flashed into my head - where it bounced off my still-aching eye-sockets and fell apart well before it could reach my mouth. She looked tired, I felt tired, and my head still hurt, even if not as badly. \n\nSo I nodded and said, \"Sure, see you tomorrow.\" \n\nSomething about the smile she gave me kept me from feeling too abandoned or disappointed. \n\nSunday we got a good chunk of the new tile put in. As with our tile job on the kitchen counter, I got mortar all over my hands and clothes by the end of the day. \n\n\"I am not cut out for tiling,\" I said, trying to wipe the stuff off with a cloth. \"It looks nice when it's done, but getting there is like torture.\" \n\n\"Oh, it's not that bad,\" she said, from the vantage point of someone who'd managed to stay spick and span all day. Well, except for the way the heat pulled the sweat out of her, which she couldn't avoid any more than I could. \n\n\"Sure it is,\" I said. \"Even the words are unpleasant. 'Mortar' - that's like a deadly artillery weapon, right? And 'grout' ... I don't know what that sounds like, but it doesn't sound good.\" \n\n\"Hmm,\" she said, putting a hand on one hip and leaning against the doorframe. \"And what does 'caulk' sound like? Because I'm thinking it sounds pretty good right now.\" \n\nI coughed a little. \"Well, uh, I have done more caulking than tiling.\" \n\n\"Uh-huh. I bet you're really handy with caulk.\" \n\nThe playful edge to her smirk made it clear she was totally kidding. But my cock did not quite get the joke and started swelling up in my pants. \n\n\"It can get a little sticky,\" I said, my mind flashing back to those first few fantasies I had of her. \"You can't just go squirting it around all over the place or you'll get in real trouble.\" \n\nShe laughed and swatted me on the shoulder. \"Come on. Let's go to the bathroom that works and wash up and I'll take you to dinner.\" \n\nIn the little guest bathroom, I got my hands mostly clean, watching Lindsey in the mirror as I scrubbed and soaped and scrubbed some more. She seemed to enjoy watching me too, and instead of subsiding, my hard-on grew dangerously insistent. As I shook my hands over the sink and reached for the hand towel, my brain said, What the hell ... just go for it. \n\n\"Hey, Lindsey,\" I said, drying my hands, \"you know what?\" \n\n\"What?\" she asked, smiling. \n\n\"I would really like to fuck you in this bathroom, right now.\" \n\nHer eyes flared and she straightened up. \"Damn, I really scored with those caulk puns, didn't I?\" \n\n\"That, and you're really sexy when you sweat.\" \n\n\"Hah!\" \n\n\"And,\" I went on, deciding to confess, \"I've been having this fantasy about doing it with you here basically since the first day we met.\" \n\nHer head turned half away and down, shyly, though she kept her eyes on mine. \"Me too. Not quite from the first day, but it's definitely occurred to me. In fact, I, um, even brought a little thing of lube in my purse. Only ...\" \n\nMy pulse had lurched into high gear when she said she'd brought lube. But the tone of that 'Only' told it to slow down. \n\n\"What?\" I asked. \n\nShe twisted her foot in frustration and laughed. \"I'm really, really hungry right now! And I feel super gross. Like, caked-with-filth gross! Can we go to a drive-through and eat in my car and maybe do the work-site sex tomorrow?\" \n\n\"The AC's supposed to be fixed tomorrow, though,\" I grumbled. \"That was a pretty big part of my fantasy ...\" \n\n\"I'll have them leave it off after they test it,\" she said with a grin. \"Promise.\" \n\n* * * \n\nBut we didn't have sweaty worksite sex in the guest bathroom the next day. Lindsey called me at work to let me know the AC guys were done and then apologized and said she needed to head home for the evening because she didn't feel well. \n\nThen, around 7:30, she called me again at home while I was messing around on my keyboard. \n\n\"Hey, Linds,\" I said, pleasantly surprised to see her name on my phone's display. \"Are you feeling any better?\" \n\n\"Hi, Nick.\" Her tone had a tense quality to it that I didn't like. \"Listen, can I come over?\" \n\n\"Sure, of course. Is something the matter?\" \n\n\"I'm kind of freaking out.\" \n\nI paused before answering, \"Like, freaking out about us? Or freaking out that we picked the wrong tiles for the bathroom?\" \n\nHer laugh sounded weak, but at least she managed one. \"Yeah, those colors are so last month. So it's okay for me to come?\" \n\n\"Hell, yes. At this point I'll be a neurotic mess about the tile color if we don't figure it out tonight.\" \n\nShe laughed again, stronger by a smidgen this time. \n\n\"Good,\" she said, \"because I'm sitting in the quick-mart parking lot, and I'll be there in a couple of minutes.\" \n\n\"Oh,\" I said, blinking and looking around. Thankfully, I hadn't been home enough the last few days to make much of a mess. \"I'll see you in a second, then.\" \n\n\"Okay.\" \n\nI made sure to save the song file I had open, even though I'd barely gotten started on it. Then I took a quick walk through the house to see if anything needed tidying. All I found was a glass on the end table by the couch, and before I'd gotten all the way to the kitchen with it, I heard Lindsey's BMW pull up outside. Setting the glass in the sink, I headed for the door and opened it just as she slammed her car door and turned toward the porch. \n\n\"Hey,\" I said. Her expression had a conflicted look, but she smiled when she saw me. Holding the door wide, I tried to ignore the way she filled out her t-shirt and denim skirt. \"What's up? Are you okay?\" \n\nInstead of walking past and into the house, she put her arms around me for a chin-over-the-shoulder hug. I held her tight, not sure whether to worry or be relieved by the feel of her in my arms. \n\n\"I'm okay,\" she said, letting go and then twitching her nose with a hint of rue. \"I warned you I'm a relationship mess. Can we go in and talk?\" \n\n\"Yeah, I'd love to,\" I said, gesturing her through the door with one arm. \"Even if it's a mess, I don't care. Let's talk. Can I get you something to drink?\" \n\n\"A glass of water, I guess.\" \n\nShe walked to the couch as I returned to the kitchen and filled a couple of glasses with ice cubes and water. When I got back, she'd taken one end of the sofa, with her sandals kicked off and her legs folded up under her. She ran a hand through her hair as I approached, then reached out for the glass I handed her. \n\n\"Thanks.\" \n\nI sat down. She sipped her water and watched me. The angle of her knees and body kept me from sitting right next to her, something I took as a signal. To avoid intruding on her space, I settled into the other corner of the couch facing her. \n\n\"So what's up? You said you were freaking out, but you look pretty stable to me.\" \n\n\"I'm better, now that I'm here,\" she said. She tipped her water glass up again and looked around the room as she drank. \n\n\"Well, I'm better now that you're here too, even though I wasn't freaking out before.\" \n\nThat brought out a smile. She twisted a finger in her hair, not saying anything, just fixing those blue eyes on me. \n\n\"What?\" \n\n\"Now that I'm here, I feel dumb,\" she said. \"Maybe we should just hang out. I don't know if I want to talk about it.\" \n\n\"You're weird, Lindsey,\" I said, taking a drink of my own water. \"Obviously, I'd sell my own grandmother to hang out with you - but if something's making you feel uncomfortable or unhappy, that's not dumb. If you needed to come over here to talk about something, we should talk.\" \n\nShe turned and put her glass down on the end table at her side, then unlimbered those long smooth legs and scooted to my end of the couch, where she put her head on my shoulder. I let my arm relax around her and waited. \n\nA deep breath expanded her chest and then sighed out of her. \n\n\"I guess ... I keep getting scared because I'm a novelty to you, Nick.\" \n\nThat caught me off-guard, and if we hadn't been snuggled together, it might even have offended me. \n\n\"That's way off,\" I said. \"You're not just a -\" \n\n\"No,\" she jumped in, putting a hand to my chest and lifting her head to make eye contact. \"No, I don't mean I'm just a novelty ... you're better than that, I know. But I'm still something new and exciting and fascinating to you, and when you're not around, when I'm by myself, I start wondering how long it's going to take before that wears off. And even when we're together, I get worried that we'll go too fast or too far and cross some line you're not ready for. Or if we don't go too fast, I worry what lines you might never be ready to cross.\" \n\nAs much as I wanted to, I couldn't argue against those possibilities. It's not like you haven't worried about some of the same things, I told myself. But ... \n\n\"You know you'd be new and exciting and fascinating to me even if you had a vagina, right?\" \n\nShe laughed and squeezed me. \"I do now that I'm here, where I can feel you and hear your voice and see it in your eyes. It just needs to sink in some more so I know it when you're not around. Do you think you can deal with me getting nervous and freaked out and needing to be reassured once in a while?\" \n\n\"Is it going to mean you coming over unexpectedly all the time and cuddling up on my couch with me? Because there's only so much of that a guy can take, you know.\" \n\nShe hit me lightly on the chest and sat up, rolling her eyes - but smiling. \n\n\"I'm done talking to you,\" she said, twisting to reach for her water glass. \"What were you doing before I called and brought all my hysterics over?\" \n\n\"Eh. Messing around with my keyboard. Nothing important.\" \n\nLindsey stood up, drinking from her glass and looking at me and reaching for my hand all at once. \n\n\"Come on,\" she said, with a tug to get me out of my seat. \"Show me. I want to hear some of this music you write.\" \n\n\"Okay. But don't expect too much ...\" \n\nI stood and headed for the bedroom. Her hand didn't release mine until I sat down at the computer, where she transferred her touch to my shoulder and leaned across me to watch as I explained the software I used and how I worked with it to make up for my lack of musical proficiency. \n\n\"Blah-blah,\" she said after a bit. \"So you're a terrible keyboardist and you use the computer to cheat. Let's hear something.\" \n\n\"Sure,\" I said, painfully aware that I'd been caught stalling. \"There's not much to this one yet, so ...\" \n\n\"Oh, just play it already.\" \n\n\"Right. Yeah.\" Resetting the tempo from the glacial crawl I used to record things, I moused my cursor up to the play button and started it. Right away, the intro sounded trite to me, a high twinkling on synthesized bells. \"I may change this -\" \n\n\"Shut up, I can't hear.\" \n\nThe way her hand squeezed my shoulder said she meant it playfully and seriously at the same time, and I kept quiet and watched her. The reflected computer display made tiny gleams in each of her blue irises, moving and adjusting minutely as she followed the scrolling musical staves onscreen. All the song really had so far was a simple arpeggio bass-line under some synth wash chords. After a few bars, it modulated from the bright major key of the bells to a moodier minor one, then cut off abruptly at the thirty-six-second mark. \n\n\"Mostly, I just fart around until I have a structure that I like,\" I explained once the music stopped. \"Then I improvise over that to get the melody.\" \n\n\"It's pretty,\" she said. \"Play it again.\" \n\nI did, and this time she reached over a few measures in and hit some keys on the synthesizer. But I still had it set on the synth wash, which swelled too slowly in volume to carry a quick tune. \n\n\"Is there, like, a piano sound?\" she asked, pulling her hand back. \n\n\"About twenty of them,\" I said, clicking buttons on the Yamaha. It cost me a pretty penny, and came with a huge bank of instruments. Resetting the song to the beginning, I said, \"Try now,\" and clicked the play button. \n\nThis time when she started to play at the fourth bar, what came out made me more ashamed of my feeble playing skills than ever. Her piano line danced effortlessly above the existing tracks, in step and on-key at a tempo about three times as fast as I could play. It wasn't at all what I would have added as a melody, but it flowed perfectly and it fit. \n\n\"Wow ... this is really cool,\" she said when the song cut off again. Her finger ran gently along the synthesizer's black casing. \"I'm impressed.\" \n\n\"Do you want to record that?\" \n\n\"Pff. I don't want to mess up your song.\" \n\n\"It's not really a song yet, and that sounded good. Here, play it again.\" \n\nI ran the sequence over again, this time in recording mode. Lindsey played more or less the same melody she'd improvised before, maybe not quite so fluidly. When she finished and straightened up from the keyboard, I put the song on loop and let it run through a couple of times so we could listen. She nodded thoughtfully, as if appraising her own work. \n\n\"Okay,\" she said, \"let me hear some stuff you've gotten more done than that.\" \n\nI saved the file and then loaded and played a handful of my better songs - well, the ones I considered better. I hadn't had a chance to play them for much of anyone else, so for all I knew, every one of them sounded like crap. Lindsey seemed genuinely appreciative, though, and kept asking to hear more after each one finished. A few she even asked me to play again. \n\nAt some point my bladder alerted me that it needed emptying, so I excused myself to the bathroom. \n\n\"Can I sit and play with your stuff while you're gone?\" she asked. \n\n\"Sure,\" I said. \"Knock yourself out.\" \n\nThrough the bathroom door, over the sound of my own pee, I heard her doing a few scales, then hitting chords up and down the keyboard, then noodling a bit. I flushed and went to the sink to wash my hands, where I heard her start into an actual song. My brain had distracted itself with the awkwardness of urinating where a woman could hear me, the added awkwardness of comparing the noise of piss to the glittering sound of Lindsey's piano warm-ups, and the excitement of sharing something that we both seemed to enjoy. So I vaguely knew that the piece she'd chosen was Beethoven, but I didn't register the specific song until halfway through drying my hands. \n\nThen I stopped still and just listened. \n\nShe'd reached the second or third recurrence of those high, alternating half-steps - a signature of Beethoven's timeless genius, the ability to take two notes and create something people would marvel at centuries later - then the three-note downward sway and the rising sweeps of eight-notes simple enough for even a novice pianist to make beautiful. And Lindsey was much more than a novice pianist. \n\nI stood inside the bathroom door with a knot in my throat, blinking at the emotional tides of the music, until she reached the first of the fast, quick passages that get skipped or dumbed-down in beginner's arrangements. But she kept going straight into the concert version, and I heard a wrong note and a low \"damnit\" from her, but I could only think, Oh my god, she can play. \n\nOpening the door as quietly as I could, I let myself out of the bathroom to watch her where she sat absolutely intent on the keyboard as her fingers glided and leapt across it. The focus and intensity of her eyes amazed me. I could only stare. \n\nThen that first bravura section closed out, and she returned to those two high notes, up and down and up and down, repeating themselves longer this time. And I sniffed or something, and she stopped and turned. \n\n\"Jesus, Nick,\" she said, putting a hand to her chest when she saw me. \"I didn't think my playing was that bad.\" \n\n\"No, no,\" I said, wiping my eyes. \"It was beautiful. It's just ... that particular song.\" \n\nF\u00fcr Elise. \n\n\"Oh, shit.\" She jumped up with apology written all over her face. \"I'm so sorry, I didn't even think -\" \n\n\"No, really, it's fine,\" I said, trying to get my emotions under control \"In fact, I'd really like you to finish. God, Lindsey, you're so good.\" \n\nShe looked hesitant. \"Are you sure?\" \n\nSitting on the corner of the bed nearest the computer station, I nodded. \"Really. Please.\" \n\nShe returned to the keyboard, glancing over her shoulder before lifting her hands to the keys. \"I'm probably going to fuck it up. Back in the day, I practiced this damn thing so many times I could play it in my sleep, but it's been forever ...\" \n\n\"I don't care. You can make all the mistakes in the world.\" \n\nShe started again from the top, and I just sat there and let everything wash over me: the music, memories of learning the student version myself years ago, a few flashing images of Elise, her face and smile hazy across the decades - but most of all, the fact of this unbelievably talented, intelligent, sensitive woman sitting in my bedroom and filling it up with her presence and with the beauty of ages. \n\nBy the time she finished, I was completely streaming, and when she saw, she stepped over and sat down to put her arms around me. \n\n\"I am so incredibly lucky I met you, Lindsey,\" I said over her shoulder as we held each other. \"You can get as nervous or scared or worried as you want. It won't make any difference to me.\" \n\nShe nodded against me. Then she said, \"I hope you're right, Nick. Because I'm kind of terrified that I'm falling in love with you.\" \n\nI breathed in the smell of her hair for a minute. \n\n\"Well,\" I said, \"I would have expected to be terrified too. But I'm starting to get my head around the idea that I could go head-over-heels for the right pianist.\" \n\n\"Stop it,\" she laughed, pulling back and swatting me on the arm for the pun. \"I'm being serious.\" \n\n\"I am too,\" I said, buoyed up by a cloud of relief as I tugged her in for a kiss. \"I'm crazy about you. And I want to take what you've got under that skirt and make you feel the way you deserve to feel - joyful and happy and safe and ...\" \n\n\"And?\" \n\nI met her waiting gaze with mine and let myself become entirely serious. \n\n\"Complete,\" I said. \"And loved. I want you to feel loved, Lindsey.\" \n\nHer eyes sparkled wetly. Then they closed as I drew her to me and put my lips to hers and kissed her. A tremor passed through her just before she kissed back in earnest, and I wondered how the hell I'd ended up here, on the corner of my bed, so overwhelmed with emotion for this person that I was ready to let her do things to me that a month ago I'd never have considered. I didn't have any answer, but from some back corner of my mind, Mrs. P's voice said, You're welcome! \n\nLindsey removed her tongue from my mouth to raise an eyebrow and ask, \"What?\" \n\n\"What, what?\" \n\n\"You laughed.\" \n\n\"Did I?\" I brushed a strand of hair from her forehead. \"Sorry. I was just thinking about your aunt, wondering what she'd think if she could see this.\" ",
        "\"I think she'd be happy.\" Lindsey's eyes searched mine thoughtfully - then took on a mischievous look. \"But let's hope she's not watching now, or she'll get a real shock when you peel me out of my clothes here in a minute. \n\nI laughed and kissed her again and eased us both to the waiting softness of the comforter atop my mattress. Her lips toyed and tussled with mine as I ran a hand down her taut stomach to the buttons of her skirt. \n\nLacing both hands in my hair, she moaned at each fastener I undid, until I had the buttons all open and slid down the short zipper underneath them. Then she reached down to the skirt and lifted her hips and shimmied out of it, leaving her in just panties and a t-shirt. \n\n\"We should get further up on the bed,\" I said, teasing the waistband of her panties with my fingers. \n\n\"You should get further out of your clothes.\" \n\nWe didn't move just yet, though. Her hand tugged my shirt up out of my pants. Mine worked its way down the front panel of her underwear. She bit her lip as my middle finger arrived at her pubic arch and brushed the swelling, firm flesh beyond it.  \n\nTracing the upper circumference of her cock-root, I said, \"I want to cross some lines with you, Lindsey Moss. That way we'll both have less to freak out about. What do you think?\" \n\nShe nodded. \n\n\"Plus,\" I continued, \"I'm pretty sure it'll be fun.\" \n\nShe grinned, then gasped as I let my hand slide farther down to fully cup her engorged rod through the panties' silky fabric. After so much kissing and unbuttoning, I was already seriously hard, and the sound and feel of her excitement threatened to make me burst my pants. I gripped her with just my fingertips and stroked them up and down along her length, making her pulse and strain against the cloth. \n\n\"That feels goood,\" she breathed. \"Oh, it feels so good ...\" \n\n\"It feels good to me, too,\" I said, rubbing and then squeezing and then rubbing some more. \n\n\"Ohh, Nick ...\" She writhed the rest of the way onto the bed, coaxing me with her as she went. \"You're not just saying that, are you?\" \n\n\"Huh-uh.\" I shook my head. The heat and rigidity of her erection in my hand had sparks tickling down my backbone. \"It seems kind of stupid that I didn't realize this before, but I've enjoyed stroking a cock almost every day since I was a teenager, and it's really pretty neat even when it's not mine.\" \n\n\"Mmmm.\" She let her eyes close and ground herself up into my palm. \n\n\"And do you know what I tried several times and could never quite manage, back in my teens?\" \n\nHer hips moved rhythmically in response to my touch. \"What's that?\" \n\n\"Sucking my own dick.\" \n\n\"Ha!\" She stopped and her eyes came open and she grinned. \"You naughty boy!\" \n\n\"Yeah,\" I said, continuing to massage her through her panties. \"I was paranoid it would make me gay, but I realized when I was sitting masturbating one day that it wasn't that far from my mouth to my tip, and every once in a while for the next year or two, I'd try to bend and strain and get down there. The closest I ever got was being able to stick my tongue out and lick the head, or barely brush it with my lips. And fuck, did that ever give me a sore neck and back the next day.\" \n\n\"You should have kept trying,\" she said, letting her hips roll again. \"If you stretch and limber yourself up long enough, it works. I used to be able to get a couple of inches in my mouth. It was heaven. You're right about the neck strain, though.\" \n\n\"Anyway, now I could find out what it's like without straining.\" \n\n\"Oh god, really? Are you sure?\" \n\n\"Yeah.\" In fact, my chest filled up with carnal heat at the thought of it. \n\n\"Well, you can't find out in those clothes. Let's get naked.\" \n\nI sat up and pulled my polo shirt over my head, then undid my belt and pants and slipped them off, underwear along with them, socks following the rest about two seconds later. Lindsey just lay on her back and watched, smiling, one arm casually draped in an arc across the comforter over her head. \n\n\"Better?\" I asked, settling beside her again with my hard-on out and alert. She ran a hand down my chest and stomach and past my pubic curls to take hold of me. \n\n\"Yes,\" she said, lazily pumping my shaft. \"But now you need to get me out of mine too.\" \n\nSince she made no move to sit up, I put my hand on her stomach and slowly gathered the cloth there in my grip, moving it toward her sternum, then tugging with a bit more force to get it past her bra and breasts. As I held it bunched together above her cleavage, she rolled onto her side to face me, then farther to press against me until I moved with her, onto my back, letting her straddle my thighs, still milking me one-handed as she leaned down for a kiss. I ran my hands up and around the soft musculature of her back, finding the catch of her bra and unhooking it. She sat up enough and I followed her enough to maneuver her sleeve and free arm out of her bra-strap. Then she switched hands to keep working my erection while I got her other arm loose. Ducking her head, she let me pull the shirt up and over it, her long, blond hair gliding free of the neck to dangle down all around her face and her shoulders and then my face and shoulders as she leaned her torso forward, bare and lovely, to let her breasts swing low against my chest. \n\n\"I'm having a hard time letting go of this,\" she said with her nose touching mine and her hand tight and sensual around my cock. \"Is it okay if I slide down and give you a few pointers before we take my panties off and show you what you missed by not being a more persistent teenager?\" \n\nI gave her a quick smooch and said, \"Sure.\" \n\n\"Good.\" \n\nAs she crept backward, her breasts and hair trailed silkily down my body, leaving my skin tingling in their wake. She kept her grip securely around my shaft, and when her chest drew even with my crotch, she tipped my cockhead back and forth so that it parted and slipped between her swaying breasts. \n\n\"Mmm,\" I said. \"I like these pointers so far. But I think you'll have to keep demonstrating that one for a bit, because I haven't quite figured out how to manage it.\" \n\nLindsey laughed, flicked my tip several more times between her tits, and then crawled farther down. With a lick to the underbelly of my dick, she said, \"Pointer number one is, don't try to deep-throat the first cock you suck. Having a partner gag or barf on your shlong is highly unromantic. Well, it is for me. I'm sure there's someone who's into that.\" \n\nI doubted this was the time to mention practicing on bratwursts the week before. \"No deep-throating. Check. What's pointer number two?\" \n\nGrinning, she gave me another lick. \"Well, you're a guy, so pointer number two is easy. If you think you'd like someone to do it to you, give it a whirl. Like this.\" \n\nShe dropped her mouth down around my crown, lips coming to rest on her own encircling fingers. Keeping her eyes on mine, she flicked her tongue up and down, right where the glans and shaft met. To start with, the pressure stayed light and the movements slow. But as she watched me, each slide of her tongue tip grew bolder, and then quicker, and quicker still. Her wrist gently bent and unbent at its own pace, tick-tocking the skin of my shaft one direction and then the other, lavishing sensation on the erectile flesh within. \n\n\"Holy cow, Lindsey,\" I said. She lifted off and smiled, then went back to work on my already-hyperstimulated dick. \"Fuck, that's fantastic.\" \n\nClosing her eyes, she bobbed down, mouth trailing her hand, then leading it back up. With each trip, she dove farther and I breathed faster. Then, just as that glandular sizzle began in my nuts, she pulled up and off. \n\n\"Pointer number three is to give yourself an occasional break so you don't wear out your jaw.\" She tilted her head and puckered her lips to glide them high and low along my ready-to-burst hard-on, the pressure just too light to put me over the edge. Even so, each trip of her lips moved me closer by the width of a single nerve ending. \n\nJust as I started to moan, she pulled away and waggled my cock in her grasp. \n\n\"So ... ready to give it a try?\" \n\nI groaned, panting as orgasm floated to a halt with its toes right at the line of explosion. Lindsey's playful expression said all I had to do was ask, and she'd stop teasing and finish me off. But she also looked hungry, and hopeful. \n\nI remembered the thrill and taboo of those youthful attempts I'd made to get my mouth all the way down to my cock. Something in Lindsey's eyes made me think of that tense, urgent, excited struggle - and the tantalizing electricity of near success the times I'd managed to lick the tip or brush my lips against it. \n\n\"Okay,\" I said, sitting up. \"Let's switch around.\" \n\n\"Really?\" She beamed up at me, her chin propped on one hand and my dick still grasped in the other. From my new angle, I had a terrific view of her naked back and panty-clad bottom, then her long legs, bent at the knees and crossed at the ankles, toes pointed skyward. \n\n\"Yeah, really,\" I said. \"But you'd better hurry before your ass distracts me.\" \n\nShe grinned and wiggled it, then snaked her way up beside me and rolled onto her back, slipping her thumbs into the elastic of her panties and stripping them off over her tucked-up legs in one quick motion. When she stretched back out, I put a hand on her tummy and let it rise and fall with her breathing. One of her pinkies went between her teeth, just the tip. Then she raised the hand to my shoulder and grazed her nails down my arm. \n\n\"I'm feeling super-shy about this right now,\" she said. She'd left one knee up so that the thigh partly blocked my view of her semi-erect cock. \"So promise me ... if you think it's gross, don't feel like you have to keep going. We can fuck or frot or something and I'll be fine.\" \n\nI leaned down and kissed her, rubbing her belly with the hand I still had there. \n\n\"You think you're shy about it,\" I said, eyebrow up. \"I guarantee you, you've got nothing on me. But unless I suck at sucking and can't get you there, I'm going to keep going until you squirt. That's the only promise I'll make.\" \n\n\"Well ... okay,\" she said. She lowered her leg and I looked at her fully-revealed and rising, swelling erection, pale and clean and asserting itself there at the low, soft, feminine end of her abdomen. \n\nI swallowed - noticeably, I'm sure - then eased myself lower along her form. As I went, Lindsey crawled backward to nestle into the pillows at the head of the bed, peering at me through narrowed eyes with one lip sucked between her teeth. \n\nLying there beside her, up on one elbow, my hand still on the near side of her stomach, I watched her arousal proceed without any direct stimulation on my part. Higher and stiffer she rose, heartbeat by heartbeat. Something about the process fascinated me and also sparked my ego with a sense of being wanted - desired. I moved over between her legs so I could see her face, her eyes. They looked as excited as the pinkish monolith that now stood full-height mere inches in front of my lips. My cock straightened potently against the mattress, turned on by the fact that I turned her on - and by the anticipation of what she would look and sound like in a moment when I got things started. \n\nI moved my hand to gently encircle her root with a thumb and forefinger. \n\n\"Hnnn ...\" she said, lip still tucked between her teeth. When I shifted the hand up to surround her with my grip, her teeth parted and the lip popped out and she let it hang low and sensually loose, as if forgotten in the vaporous heat of the moment. \n\nI moved forward and in, forward and in, until my own lower lip contacted my thumb, millimeters from her engorged flesh, which I felt swell even harder in my grasp at the same time I saw the tip expand. I let my breath flow out through my open mouth until she gasped. \n\n\"Oh god, Nick, that's so hot.\" \n\nI grinned and tilted her between my lips. Something wet and thick rolled onto my lower lip. I swiped it with my tongue, hitting her tiny, sensitive slit in the process. \n\n\"Oh ...\" \n\nThe taste of precum drifted up into my mouth, salty and subtle and shocking at the same time because it wasn't my own. But it was good, and I sealed my lips to the very end of her and squeezed with my hand and was rewarded with another thick bead disgorged from her cock and sipped in and across my tongue. \n\n\"Hhohhh fuuuck ...\" Lindsey squirmed so that her tip pressed into the embrace of my lips and bumped the teeth beyond them. I didn't think it was voluntary or that she meant to thrust her way in, but I opened my jaw up wide anyway and let her whole head slip into my mouth. \n\n\"Ah. Ahh ...\" \n\nIf I hadn't been watching the blue bliss in her eyes and the trembling of her parted lips, a second or even third thought might have stampeded through my brain right then. I'm pretty orally fixated, and I get off on sucking a woman's tongue or nipple or clit between my lips. But this thing was huge in comparison, and the feel and taste of it left no doubt what I had in my mouth. \n\nHow I might have reacted under any other circumstances, though, I'll never know ... because Lindsey's expression made it one of the most amazing things I'd ever done. \n\nHungry to make that look last, I eased my hand down along her rigidity and followed it with my lips - first a centimeter, then an inch. As more of her cock joined the soft, full bulb inside my mouth, awareness filtered into my brain through every one of my senses. Intimately and vividly, I felt how thin and mobile the skin of her shaft was and how differently the flesh within it compared to anything I'd had in my mouth before - hard without being boney, textured despite the smoothness of the skin that surrounded it. At the same time, the musky scent of her crotch and the sweaty, salty, preseminal flavors of her dick and its slick leakage mixed together and invaded my head. Faint, breathy gasps seduced my ears, and the brilliant beauty of her face and form left me dazzled. \n\n\"More,\" she whispered. \"Oh, Nick, please ... more ...\" \n\nA smile tried its best to ruin the seal my lips had around her as I went another inch down, halfway to her root and with my mouth now almost entirely full of cock. The tactile complexity blew my mind: her skin and vascular flesh within the ring of my lips; the helmet and rim of her glans against my tight-sucked inner cheeks; the two kinds of curves nestled in the valley I made of my tongue, u-shaped along her shaft and rising at the back to embrace the bulge of her tip. Every part of my mouth sensed her in its own way, and every part of her cock had its own distinctive feel. \n\nFuck, this is really a charge. \n\n\"More,\" she repeated, head tilted down to let her eyes flash at me. Her hands reached up to caress her nipples, stroking them, circling the areolas with a fingertip, trapping them for gentle, teasing tugs. \n\nI made it another inch down before I felt her reaching no-no territory at the back of my throat. Anything further would strike my gag reflex. Having my nose so close to her belly and my lips so close to her root put a burn of frustration into me.  \n\nReally need to make her teach me how to deep-throat, I thought. But that would have to wait for some other night. \n\nStill going slow, still keeping my cheeks sucked in, I pulled back with my neck and let her slide out until I felt the heel of her mushroom top hit the inside of my lips. I followed my mouth with my hand, letting the damp slickness of spit coat my grip as I went. \n\nLindsey stuck a finger in her mouth and then returned it to her nipple as I inched my way forward again. \n\n\"Yes ... so hot. Oh, that's good.\" \n\nAll the way down again, I feathered my tongue beneath her. \n\n\"Yes, mmm ...\" \n\nAs if her vocal encouragement and the look in her eyes weren't enough, the surging response of her dick within my mouth told me I must be doing pretty well so far. Inundated with the sensory clues of her pleasure, something inside me switched from the total absorption of this crazy new experience to a driving desire to hear her moan louder, see her eyes roll up in her head, and feel her engorge and explode in my mouth. \n\nI gave a slow, steady bob that made her shiver. Then I followed it with another, and then another, and faster. \n\n\"Oh, yes - that's it, baby. Oh - oh, yes ...\" \n\nHer hand came around to the back of my neck and her hips rolled - languidly fucking my mouth as it slipped its way along her. So far, I didn't feel any need for pointer number three, so I stayed wrapped around her, working my neck in time with her thrusts, snaking my tongue side-to-side every trip or two she made over its surface. As we accelerated, the sloshing noise of oral sex vibrated its way louder and louder from my mouth straight through flesh and bone to my ears until it roared and sloshed directly into my brain. \n\n\"Damn, Nick,\" Lindsey gasped. \"It's so good ... uhh, so good ... do you - want to - turn around so I can - get you too?\" \n\n\"Nn-nh,\" I hummed around her with a light shake of my head. I could see in her face and hear in her voice and even feel in her dick that orgasm wasn't far off for her - and I wanted it. \n\nShe didn't argue. Instead, she pressed her lips together and made a high-pitched \"hmmm\" and then clenched her jaw and let her breath hiss through her teeth. \n\nThat's it, I thought as she clutched the back of my head and thrust up from the mattress harder and faster. Come on. \n\nThe familiar ache of too-long-in-the-dentist's-chair appeared at the hinge of my jaw - not bad yet, but growing. I sucked harder and lashed my tongue, getting a flow of precum as my reward on her next stroke out. \n\n\"Nh - nh - \" \n\nYes, Linds, come on ... \n\n\"Nh - hn - ah ...\" She hammered my mouth with every sound she made. \"Ohh ... mmmm ...\" \n\nMy jaw hurt in earnest now, but I concentrated on the feel of her pumping in and out through my circled fingers and past my lips, and on the telltale tremble in the muscles of her face. \n\n\"Ah ... ah ...\" \n\nHer lips gaped and I saw her eyes turn upward. \n\n\"UHHH!\" \n\nCum flooded my mouth. \n\n\"Nng - oh - ooh - \" \n\nI clamped down tight with my hand and mouth both, swallowing to move her bitter, silky spatterings from my tongue as quickly as I could. It surprised me how feather-light each gush of semen felt against the sensitive flesh of my mouth, and also how subtly each swell and throb of her cock moved my lips and tongue. The powerful jolts I knew from my own orgasms didn't transfer at all to my receptive mouth, which got only a quick, modest pulsing. \n\nThe taste was awful. \n\nBut the look on Lindsey's face and the sound she let out and the grip of her hand in my hair made a little acrid flavor more than bearable. \n\n\"Oaah - Nick - fuck - \" \n\nWith a shuddering, slackening tempo, her dick spouted and then spilled and then trickled its load of fluid ecstasy across my tongue and down my throat - until, with a panting gasp, she collapsed into the pillows behind her, loose and limp. Her hand went from clutching to caressing my hair, then fell to her side palm up and gave a little twitch. \n\n\"Whoo,\" she said, eyes closed. I pulled off of her dwindling erection and massaged my jaw. \n\n\"Okay for a first time?\" I asked. \n\nHer lids swung open to hit me with pure blue adoration. \"Oh my god, yes.\" \n\nGrabbing my shoulders, she pulled me toward her for an emphatic kiss, open-mouthed and heavy on the tongue. I felt as flooded with appreciation and affection as my mouth had felt moments before, receiving her fountain of delighted ejaculate. Something in the way she probed past my lips told me she could taste her own sexual release and wanted to share my experience of it. I kissed her back with as much of the same fervor as I could manage. ",
        "\"Mmmmwah!\" she said, breaking the kiss at last to open her eyes and smile at me. \n\n\"So it wasn't gross, then?\" she asked. Her face shone with hope. \n\nI kissed her again. \"It was terrific. Except for the taste at the end. The taste was pretty bad.\" \n\nLindsey gave a pout of disappointment. \n\n\"But hey,\" I went on, \"I didn't much like the taste of pussy or beer the first time I tried either of those, so you're in good company.\" \n\nShe stuck her tongue out, but the pout disappeared. \"Tell me about the terrific part.\" \n\n\"The most terrific part was you enjoying it. But if you want me to describe all the ways it was terrific, we'll be here the whole night.\" \n\n\"Oh!\" She jolted upright. \"And you still haven't had your turn! I'm sorry!\" \n\nHer hand reached for my cock, but I intercepted it and laced my fingers through hers. \n\n\"Let's let that wait just a bit.\" \n\nPuzzlement lowered her eyebrows. \"Oh? Why?\" \n\nI took a deep breath. My lungs felt swollen with my hunger to say the next words. \n\n\"I'm thinking about crossing another line.\" \n\nFor a moment, she just blinked at me. \n\n\"You mean ...?\" \n\nI leaned down and kissed one of her nipples, then the other. \"I mean, I'm really, really enjoying being with you. Everything feels right, Lindsey. Nothing's scaring me, and every new step just makes me feel closer to you.\" \n\nI kissed her lips again. \n\n\"I want to feel as close to you as I can get, Lindsey.\" \n\nIn a small voice, she asked, \"But what if you don't like it?\" \n\n\"You like having it done to you, don't you?\" \n\n\"Yeah, but I'm -\" \n\n\"What you are,\" I said, \"is the person I want to wake up next to tomorrow morning. The person I want to see with a smile of complete satisfaction on her face in the sunlight coming through the windows.\" \n\nShe smiled and put a hand to my cheek. \"Well, you could get that just by saying what you just said. And you could certainly get it from that fantastic blow-job you just gave me. But if you're serious ...\" \n\n\"I'm ninety-eight percent serious and two percent 'wouldn't it be hilarious to fool her into ass-fucking me.'\" \n\n\"Stop that.\" \n\n\"Okay, then I'm a hundred percent serious.\" \n\nShe watched my eyes carefully. \n\n\"You really want me to fuck you.\" \n\n\"I'm thinking how far you squirted the other night with me inside you, and I'm betting that must have felt really good.\" \n\nThe grin she gave me came with flaring eyes and a squeeze of her fingers threaded through mine. \n\n\"It did.\" \n\n\"So ...?\" \n\n\"You have lube in here? I can get my purse from the front room if you don't.\" \n\n\"There's a brand-new bottle in my nightstand.\" \n\n\"Pooped recently?\" \n\nI blinked. \"Uh ... a little after dinner. Maybe -\" a glance at the clock \"- two hours ago?\" \n\n\"Condoms?\" \n\n\"You didn't make me use one.\" \n\n\"Just checking. I'm going to get up and pee, okay? You pull the sheets back and find that lube.\" Slipping her hand free of mine, she climbed off the bed, cock dangling but not quite as limp as it had been a minute ago. I watched her ass swing as she made her way into the bathroom, then I crawled over to fetch the lube from its drawer and throw the sheets off like she'd asked. \n\nLying on my back in the middle of the bed, I had an out-of-body flash - a sense of disembodiment with the noise of Lindsey pissing for its soundtrack. \n\nWhat are you doing? I asked the figure spread-eagled in my bed. \n\nI'm waiting for my girlfriend to come back and fuck me up the ass. \n\nGirlfriend? Really? \n\nYeah, I think so. I guess maybe I should ask her, but she said she might be falling in love with me. And have you seen that look in her eyes? \n\nLindsey opened the bathroom door before the other me could answer. \n\n\"Well, somebody's really looking forward to this, I guess,\" she said. \n\nPropping myself up with both elbows, I found a fully upright erection that explained her meaning from its place between my legs. \n\n\"Huh,\" I said. \"Imagine that. So ... what do you want me to do?\" \n\nShe came over carrying a damp washcloth in hand and crawled into the bed. \n\n\"Just move your knees up and open and think relaxing thoughts.\" \n\n\"Like what?\" \n\nFrom between my legs, she raised an eyebrow and dabbed at me with the washcloth, making my asshole shrink and tingle and then warm. \"Like, 'Look how pretty my girlfriend is,' as opposed to, 'In a minute something's going to get jammed through my sphincters.'\" \n\nA twist of excitement hit me at that word in the middle. \n\n\"I was just wondering a second ago if it was okay to think of you as my girlfriend.\" \n\n\"Uh - you'd better. I mean, I hope you wouldn't let just anybody do what I'm about to do to you.\" \n\n\"Definitely not.\" \n\n\"Good. Then hand me that lube.\" \n\nI did, and she popped the cap and poured herself a handful, her left. Making a little sluice with her fingers, she lowered the hand in under my balls to make contact with my crack, just below the tense knot that needed lubing. \n\n\"So. Ever had anything in here?\" \n\nI shook my head. \n\n\"Really? You've never even had a girl finger you while you were doing her?\" \n\n\"A couple felt around down there, but I always put the brakes on.\" \n\n\"So sad! Let's show you what you were missing.\" \n\nShe tipped her hand so that the slippery fluid in her palm ran along the valley of her fingers and surged up against my anus, which had tightened at her finger's nearness, and now clenched again at the wet, cool contact of the lube. Before any could spill around her fingers, Lindsey swiped her hand upward, carrying lubricant across my asshole and rubbing it into the whole area, all the way to the base of my scrotum. Circling strokes of her fingertip tickled and wetted and soothed the wary, tight-squeezed opening her hand focused on, while her eyes stayed on mine. \n\n\"It doesn't have to hurt at all, if you're relaxed enough,\" she said, turning her hand to massage more lube from her palm against my perineum and then slowly grind the heel of her thumb into my anus, now practically spasming between the tension of instinct and a slackness of anticipation. \"But just for fair warning, it's really hard to stay relaxed enough the first time. So we just have to be slow and patient, all right?\" \n\n\"All right,\" I said. \"That actually feels really good, what you're doing right there.\" \n\nHer smile felt just as good as the movement of her hand against my twitching, stimulated anal flesh. \n\n\"It gets even better,\" she promised. Moving her palm upward again to slickly brush my balls, she made a circling spiral around my asshole with her middle fingertip. Around. Around. Closer. \n\nContact. The sphincter pulled tight and then released. \n\nPressure. \n\nI swallowed as my butt instinctively opposed Lindsey's steady, gentle push. \n\nRelax, I told myself. Just go with it. Float. \n\nShe went back to circling the puckered knot - but in smaller orbits this time, never quite leaving contact with the rim. \n\nPressure. \n\n\"Ah ...\" \n\nThe way she smiled at my sound - and went right back to circling my asshole - drowned me in arousal. My cock stiffened into immobile verticality. \n\nPressure. \n\nPenetration. \n\n\"Oh god,\" I said at the entry of her fingertip. My sphincter clenched and unclenched around it. \n\n\"How's that?\" \n\n\"Very strange.\" \n\n\"Strange bad?\" \n\n\"No,\" I said, getting used to the sensation of her finger resting one knuckle deep inside me. \"Just strange to be on this end of the finger. It's ... not as big a deal as I thought.\" \n\n\"No, you've had bigger stuff pass through here almost every day of your life. But it'll be a bigger deal here in a minute.\" \n\nShe slid another knuckle in, then back out. \n\n\"That actually feels pretty good.\" \n\n\"Mm-hmm.\" \n\nSlowly, Lindsey fucked the first two segments of that finger in and out of me. The fire in her eyes distracted me from the oddity of the sensation, until the gentle, rhythmic motion felt natural and pleasant. \n\nThen the bulb of that second knuckle popped all the way through, and her fingertip slid deeper, and deeper, and curved and pressed against the wall of my rectum as if reaching for my cock from inside. My inner muscles instinctively tried to expel her, tightening uncomfortably but not painfully ... \n\nAnd then an enormous pressure inside my ass flowed directly up into my cock, which lurched and straightened and leaked more precum than I'd ever seen at once. \n\n\"Holy shit!\" \n\nLindsey grinned. \"That's your prostate.\" \n\n\"Fucking hell, it's incredible!\" \n\nShe pushed again and got the same response from my dick, which had drooped while I was relaxing down there, but now returned to firm attention. Clear fluid ran freely down its dorsal surface, and before I knew what was happening, Lindsey bent, took me fully inside her mouth, and swiped back off, cleaning the precum away. With her finger now gliding freely in and out, she came forward to give me a savory, sticky kiss that tasted and felt of the liquid she'd just sucked off my rod. \n\n\"Fuck, Linds ... ohh ...\" \n\nKissing from my mouth down my throat, down my sternum, down my belly, she swallowed my cock to the root again, then proceeded to give me a seesawing blow-job/finger-fuck: mouth up, finger in, mouth down, finger out. \n\n\"If you keep that up, I'm totally going to blow ...\" \n\nShe smacked her lips free of me and looked up, hand still. \n\n\"Do you want to?\" \n\n\"Ngnnh ... that's such a trick question ...\" \n\nHer finger went out and in once, inquiringly. \n\nWillpower! \n\n\"I'm tempted ... but I think let's stick to the original plan.\" \n\n\"Sure,\" she said, pulling her finger almost all the way out - and then joining it with a second one on the way in. \n\nI groaned. For a second, I stayed relaxed enough to accept both fingers and have my mind blown by the fatness of them stretching me open. But some unbidden reflex kicked in and clamped down hard on her fingers and spiraled up from fullness to discomfort to pain. \n\n\"Guh ...\" I fought against the urge to squirm away, and then the pain receded as Lindsey pulled her fingers back. \"Hoo ... uh ...\" \n\n\"You okay?\" Concern and reassurance blended on her face and in her voice, a perfect pairing that said she was a little worried but that I shouldn't be. \n\n\"Yeah, that part was great until I flinched.\" \n\nHer one fingertip rotated just inside the ring of my ass. \"Let me know when you're ready to try again.\" \n\nI took a few breaths, then nodded. \"Go ahead.\" \n\nShe stroked the one finger in and out. In. Out. Then I felt the second fingertip make a slow entrance alongside it. I let my head tilt back, trying to breathe evenly as her two digits crept inside together. \n\n\"Nnnnn ...\" \n\nShe filled me as full as she could go, withdrew, repeated. \n\n\"Nick,\" she whispered. I tipped my head down to meet her eyes. \"If this is working okay, then you're almost ready.\" \n\nI shivered as her fingers continued to pump in and out of my ass. \n\n\"Fuck, Lindsey ...\" \n\nA wicked smile glowed in her eyes and on her lips. \"Is that a request?\" \n\n\"Uh-huh.\" \n\nI couldn't stop trembling as her fingers repeated and repeated their pattern and her other hand reached for the lube bottle. \n\nThe cap clicked open. She turned the bottle up over my cock and let out a silky drizzle, streaking me with slippery runnels - more than I expected or thought necessary. But then she recapped the container and gripped me, milked me, coated me, coated her hand in the process, and finally reached between her legs to wet her own erection from base to crown, polishing the knob briefly and scooting forward on her knees. \n\nThe anticipation and happiness on her face, the fullness of her breasts, the red of her lips - and yes, the stiff pole of her hard-on - all combined into a vision I could only call angelic. \n\n\"Good god, you're beautiful, Lindsey.\" \n\nShe laughed and got herself in position, her legs wide, thighs up under mine. Her fingers kept working, working, working. \n\n\"I'm about to switch over here,\" she said. \n\nI nodded. \n\nAs her one hand pulled away and its fingers slipped out of me, her other held and maneuvered her dick, mostly out of my sight, but quickly engaging another of my senses. A warm, soft tumescence touched down where I still gaped a little from her departing fingers. I bit my lip as it pressed inward with a twist of her hips. \n\nStay relaxed, stay relaxed, stay relaxed. Christ almighty, she's about to fuck me ... \n\nThe head popped in with surprisingly little difficulty, and even though the girth wasn't that far off from her fingers, the difference stunned me. Smooth and even and regular, her shaft might as well have been made for my ass. \n\n\"Wow.\" \n\n\"Mmm, Nick, that feels really good. Does it feel good to you?\" \n\n\"Yes.\" The word came almost straight out of my throat. \"Go further ...\" \n\nShe grinned and eased her hips forward, inflating me with her slick, symmetrical, cylindrical flesh. \n\n\"Uhhh ...\" \n\n\"Uh-huh ... ah, Nick, baby ...\" Her eyelids fluttered involuntarily. She leaned forward and down to kiss me. \n\n\"It feels so fucking big,\" I gasped. \"How much is in?\" \n\nWith more kisses, she said, \"About half.\" \n\n\"Oh god.\" \n\nThen her lubed-up hand reached between us and gripped my dick. \n\n\"Oh god!\" \n\nShe slid what felt like another foot of cock into me, gliding in against what I now knew was my prostate as her hand began to stroke my erection sweetly and steadily. \n\n\"Fuck, Lindsey, I'm going to come so fast ...\" \n\n\"Mmm-hmm,\" she said. A leisurely withdrawal preceded another gentle thrust of her cock, this time penetrating even deeper. Her pubic arch landed against my perineum and left again, her long lovely shaft flowing through my opening like an Olympic diver hitting water. Rhythmically, insistently, her hand swept up and down my hard-on, its pace unchanging as her hips gradually worked up speed. \n\nEach push of her cockhead against my prostate goaded it toward viscous explosion, a steady series of coital compressions through the wall of my rectum that drove me up to the precipice of orgasm while her hand tugged me in the same direction from outside. As her lips kissed and hips pumped and hands pumped and breasts swayed against my chest, a sense of total, dreamy merging swelled within me. I felt permeated by her vitality. \n\n\"Uh, Nick, yeahhh ... uh - ah - nnh ...\" \n\n\"Lindsey, I'm so close - oh my god, fuck me - fuck me hard -\" \n\n\"Ah!\" she gasped, panting as she did what I asked, working her hips like mad to hump into me with all her power and speed. \"Uhn, nh - Nick - nf, huhh, ah -\" \n\nIn about a half-dozen strokes of being totally plowed, I reached my limit and burst. \n\n\"Uhhhfuuck -\" \n\nA hydraulic ram went off inside my gonads, a constricting, squeezing blast beyond any sexual peak I'd ever known. My head went back on my neck. With every seismic contraction, I had a vague awareness of wet heat splashing out of Lindsey's grasp and up across my chest, but it didn't even occur to me to look. \n\n\"Nnghhuhh -\" \n\nSeemingly inside my gouting, spouting tremors, Lindsey's penis thrust its way toward her own climax. \n\n\"Yes - Nick - oh fuck - uh ... uh ... NGH -!\" \n\nFor an instant, I thought I was having a second orgasm as a beautiful, rhythmic throbbing filled my pelvic depths. Then I realized it was her, going off inside me in time with her gasps. \n\n\"ooh, ooh, hnnh, oooh ...\" \n\nI wrapped my arms around her and kissed her throat as she strained above me and finished unloading. \n\nWhen she relaxed into my arms and found my mouth to kiss me back, I thought, out of nowhere, Wow. My ass is full of semen right now. \n\nIt made me giggle, which for some reason made her giggle too. \n\n\"What are we laughing at?\" she asked, nose-to-nose with me. \n\n\"I'm laughing at ever being worried over letting you fuck me. Holy crap, that was fantastic.\" \n\n\"Good,\" she said, kissing me. \"I thought so too.\" \n\nWe kissed some more, and after a bit she shifted and her softening cock slipped out of me. It left behind a familiar urgency. \n\n\"Uh ... I kind of feel like I need to go in the bathroom and, uh ...\" \n\nShe patted my cheek and rolled off me. \"Go on. Tell me when you're done and I'll come in and wash up with you.\" \n\n\"Okay.\" \n\nIn the can, I dumped a mixture of lube and semen and poo that should have been a real romance-killer but wasn't. My whole lower body had a sense of clean, purified emptiness. Even my asshole somehow told me it was sleepy and content - purged of weight. \n\nI wiped and flushed, poked my head out the door. \"All done. We going to shower?\" \n\n\"Yes!\" Lindsey bounced off the bed and hurried to join me. \n\nUnder the showerhead, as we soaped each other up and enjoyed our wet, slippery sleekness, I asked if her if she could stay over. \n\n\"Sure. I can give you a ride to work, even, so you don't have to take the bus.\" \n\n\"Actually, I was thinking about calling in to take a personal day ... if you don't have any client appointments you need to go to.\" \n\n\"Mm,\" she said, pulling close and rubbing her body against mine. \"What did you have in mind?\" \n\n\"Well,\" I said, \"we didn't get anything done on the house at all today. So I thought we might, you know, take care of that bathroom stuff that needs doing.\" \n\nShe grinned. \"You mean the caulking? I can definitely stay over if it means I get to see you work your magic with that caulk.\" \n\nFor emphasis, she ground her crotch against mine, long enough that I felt both our dangling cock fatten. I kissed her, then shifted some of her damp hair back from her face. \n\nWatching her blue eyes more seriously, I asked, \"So are you still terrified you might be falling in love with me?\" \n\nShe shook her head. \"No. Not terrified.\" \n\n\"Great,\" I said. \"Because I'm not terrified of falling in love with you either.\" \n\nWe kissed again, and stayed in the shower a long time. \n\n* * * \n\nWhen we woke up the next morning, Mister Whiskerdoodle had cozied himself into the narrow gap between us and gargled in complaint when we made him move. The sun had already risen, and we lazed in bed a little, not messing around or anything, just holding each other. Then I made omelets. They weren't all that good, but Lindsey complimented me on my cooking anyway and then added, \"But I'll agree that you're not as good with eggs as you are with caulk.\" \n\n\"Ha, ha. How long do you figure it's going to take for that joke to get old?\" \n\nWith a knowing shake of her head, she said, \"You're still new to this, obviously. Trust me, caulk never gets old.\" \n\nWe cleaned up breakfast, got dressed, and walked over to Mrs. P's under a pretty Sunday-morning sky. As we passed the rollaway in the drive, Lindsey ran her hand along it. \n\n\"It's going to be weird in a month when we're done with this place.\" \n\n\"Yeah ... but a month's a long time,\" I said, stopping because she'd stopped, facing the house in thought. \"Who knows what might happen. We might run into a hiccup that takes longer, or ...\" \n\n\"Or what?\" \n\n\"Or things might go even better than we expect. With us. You know, nothing in the will said we have to sell the place when we're done.\" \n\nShe looked at me a moment, there in the shade of the big sycamore tree. Then she slipped her arm around my waist and tugged me toward the house. \n\n\"Come on. We've got a lot of work to do.\""
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "frotting in shower",
        "straight guy blows t-girl",
        "anal sex",
        "transsexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/big-flipping-deal-ch-07"
}