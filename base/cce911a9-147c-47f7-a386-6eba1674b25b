{
    "title": "The Waiting Game",
    "pages": [
        "(this is an entry in the \"Summer Lovin'\" story contest for 2013. It takes a bit before the \"good stuff,\" but I hope you'll enjoy it if you stick with it until the end. Thanks!) \n\n*\n\nIf you didn't know her, your first impression of Sonya would be that she'd descended from a long and particularly prestigious line of varsity cheerleaders. Tanned, blonde, and sporty\u2014she struck that perfect balance between fit and curvy. But she didn't get her figure from shaking pom-poms at some football game, no sir. She got it from fencing. From stabbing people, competitively. She had a gift for it.\n\nThat's how we first met, actually\u2014she joined the university fencing team with me during our second year of college after transferring from overseas. The guys and the girls competed separately but trained together, and I'm happy to say that I fell in love the very first time Sonya jabbed her foil into my breastbone. She beat me without giving up a single point, then tore off her mask and shook out her long, wavy hair.\n\n\"You're really good,\" she said, further charming me with her adorable Australian accent.\n\nI was still trying to figure out how I'd been so thoroughly bested by an opponent six inches shorter than me. \"I know I'm good. You're just much, much better.\"\n\nSonya scrunched up her face into a guilty smile.\n\n\"I'm Michael,\" I said, extending my hand. But instead of accepting the handshake, Sonya raised her blade, taunting me:\n\n\"You wanna try again? Who knows, you might get lucky.\"\n\nI DID get lucky. Not in the next match, mind you (she kicked my ass again, just as thoroughly as she had before), no, I got lucky later that night, after she invited me back to her dorm room to watch the big swordfight from Scaramouche.\n\nWe hit it off so well, we wound up hardly paying any attention to the movie. I couldn't believe how compatible we were. We could practically finish each other's sentences.\n\nShe was like a wild, glowing ball of light. Feisty and earnest. Bouncy, flouncy fun. Filled to the brim with art and ideas and an endless supply of energy. And for whatever reason, she was every bit as smitten with me as I was with her. I had never been so happy to lose a fencing match.\n\nBy two in the morning, Sonya and I were busy practicing a very different type of thrusting. She was moaning incoherently while I plunged into her from behind, sheathing myself to the hilt inside her warm body. I scooped up those deliciously soft tits in my hands and squeezed...\n\nSonya cried out in sharp ecstasy\u2014her voice so fucking sexy\u2014that boiling hot body, trembling in my arms\u2014\n\nI pulled out, roaring like an animal as I erupted all over her perfectly formed ass.\n\nWhen Sonya and I both drifted back down to earth, we turned and saw her roommate standing awkwardly in the doorway, still clutching her keys. Eyes wide open...\n\nAt that moment, something snapped inside of us. Suddenly, having somebody else to watch became the biggest aphrodisiac imaginable. The following evening, right after fencing practice, Sonya dragged me into the girls' shower room, plopped me down on the bench inside, and promptly straddled my cock with her beautiful, naked body. Not a second later, all the other girls on the team strolled innocently inside and found Sonya riding me. Most of them ran off, giggling and shrieking, but two of the girls got such a kick out of our little exhibitionist display, they actually stayed to watch us finish. \n\nAfter that, our little \"shows\" became commonplace around campus. We became minor celebrities at school, even had a few jokes written about us in the school newspaper.\n\nSonya was the love of my life, and we were inseparable for the remainder of our college years. We studied together, we ate together, we even tried to survive that awful P90X workout thing together\u2014so it went without saying that we were gonna move in together after graduating.\n\nBut then, at the last minute, the school randomly changed its mind and determined that two of Sonya's transfer credits would no longer count towards her degree. Apparently \"Semantic Linguistics\" wasn't \"real\" science. Try taking THAT awesome little piece of irony out for a test drive.\n\nWe were kind of fucked. The news came so late in the semester, Sonya and I had already signed the year-long lease on our new apartment\u2014across the country in CALIFORNIA. I had a job there, waiting for me to start in a matter of weeks.\n\nSo, much as it sucked, our only option was to date long-distance for the summer. Actually, it wasn't even the whole summer, just eight weeks. It was far from ideal, but we'd survive. How hard could it be?\n\nVery, as it turns out. VERY hard. Like, throbbing, engorged, non-stop Viagra-type hard. I found that out on my very first day on the job.\n\nCHAPTER 1 -- MY VERY FIRST DAY ON THE JOB\n\nThey called me the \"Inter-Departmental Liaison,\" but really, my responsibilities were basically limited to hauling shit up and down the stairs and driving it back and forth across town, because the two guys who owned the company refused to work in the same building as one another. \n\nStill, I couldn't complain. The pay was absurdly high for what I was doing, and for a guy just out of college it was a great entry-level opportunity to learn the business; meet the vendors, get the lay of the land, and get a sense for how things worked in the real world.\n\nLike I said, I had two bosses, in two different offices, on opposite sides of town. My boss at Site A was Jerry\u2014an older guy who actually made the effort to personally introduce me to everybody. Most of them acknowledged me with little more than a meager, monotone, \"Hey.\" I wasn't particularly taken with any of them.\n\nAt least, that's how I felt until Jerry introduced me to\u2014\n\n\"Mike, this is Claire, my assistant. She'll be your primary contact here at Site A.\"\n\nHoly shit.\n\nI tried to play it cool as the most beautiful woman I'd ever seen in my life rose from her desk to greet me. She swept back a few strands of short, copper-colored hair and smiled thinly, giving me a quick once-over with her piercing, ice-blue eyes. Maybe five or six years older than me, Claire had a cool sophistication that would have looked right at home on the cover of a Paris fashion magazine.\n\n\"Nice to meet you, Michael.\"\n\nThere was something cold about the way she smiled at me. Sure, it was polite\u2014but it felt deliberately polite. As if she wanted me to know that it required actual effort for her to be nice to me.\n\nRegardless of her frosty personality, there was no denying that the woman was a knockout. Tall, slim, immaculately dressed in a tight pencil skirt that showed off long, exquisitely toned legs. And\u2014because Claire had apparently won the proverbial Puberty Super Lotto\u2014she was top-heavy as well, filling out her designer blouse with a set of big, succulent tits, wholly undeserved on such an otherwise slender body.\n\nThe more I thought about it, I decided maybe it was a good thing Claire wasn't warmer towards me. Given that my girlfriend would be out of town for the next two months, the last thing I needed was some gorgeous woman flirting with me for four hours a day. \n\nWhich, of course, is exactly what I got with Tami.\n\nShe was my contact across town at Site B. \n\nHaving grown up in Seattle, Tami brought with her a fun-loving, rock and roll sense of style. She was about 22 years old and at least partially Japanese-American, but she was about as far from the clich\u00e9 \"demure, petite Asian flower\" as you could possibly imagine: wild, friendly, and incorrigibly flirtatious.\n\nShe also had curves like you wouldn't believe. A soft, voluptuous body with a nicely plump ass and\u2014\n\nAnd... and...\n\nDamn.\n\nHer tits were huge. Like, same-size-as-her-entire-head huge. Tami had the sort of breasts that invited comparisons to the largest available items at your local produce department.\n\nI silently reminded myself not to drool. \n\n\"Hi, I'm\u2014\"\n\n\"Mike, right?\"\n\nShe jumped up from her desk and bounced across the room to meet me. I extended a hand to greet her, but Tami just swatted it aside and instead gave me a full-on hug\u2014crushing the entirety of those unbearably soft tits against my body.\n\nAs she hugged me, Tami whispered, \"I can't tell you how great it is to finally meet you! There are NO people my age at Site B, they're all like fifty or sixty. I have nobody to talk to. Imagine how stoked I was when I found out the new IDL was gonna be some cute, young guy!\"\n\nAw crap. Did she really just say \"cute?\"\n\nBy the time I got home from that first day of work, I knew I was in trouble. My muscles ached from carrying boxes up stairs all day, and yet I was still sporting an erection that wouldn't go away. I couldn't believe my situation. Eight hours of each day\u2014half my waking life\u2014I was gonna be working alongside the two sexiest women I had ever laid eyes on.\n\nAnd here I was, without my girlfriend for another TWO MONTHS. The sexual frustration was gonna be intolerable.\n\nAs I staggered up to my front door and fumbled to get my key in the lock, I consoled myself with the knowledge that I would only have to deal with Tami and Claire while I was at work. At least once I was off the clock, I wouldn't have to\u2014\n\n\"Mike?\"\n\nIt was Tami's voice. I looked up to see her and Claire standing in the hall, three doors down from my apartment.\n\n\"What are you guys doing here?\" I asked.\n\n\"We live here,\" Claire curtly replied. \"We're roommates.\"\n\nTami shook her head in disbelief, laughing, \"Is that really your apartment?\"\n\n\"Yeah, I moved in last night...\"\n\n\"I can't believe it! What are the odds? We're gonna be neighbors!\"\n\nOh, great.\n\nAn hour later, I finally reconnected with Sonya via webcam, and even over the computer she could see how flustered I was.\n\n\"What's wrong, honey?\"\n\n\"I just... I just REALLY wish you were here.\"\n\nShe grinned and told me how sweet I was. God, she was beautiful. I reminded myself that I really was a lucky bastard to have a woman like her in my life.\n\nThen the building's electricity went out. \n\nNo lights, no computer, and no way to charge my cell phone's dead battery. But worst of all? No air-conditioning. It was the middle of summer, and the temperature in my apartment quickly rose to over 100 degrees.\n\nLuckily\u2014or unluckily, depending on how you look at it\u2014our apartment complex had a pool. My swim trunks were still packed away god knows where, but I figured the black boxer-briefs I had on were modest enough to go out in public. So I stripped to my undies, headed down to the pool, and dove into the cool blue water as fast as I could.\n\nIt wasn't as crowded as you'd think, given the insane heat. All told, there were only six other people in the water when I went down there. There were two little kids wearing floaties, their parents, an eighty-year-old woman in a mumu who just wanted to get her feet wet, and some creepy-looking older guy with a burgundy speedo and a big gold chain around his neck.\n\nI tried my best not to think about the contributions those two little kids were making to the chemical composition of the water as I floated on my back, enjoying the sensation of weightlessness. At last, a bit of relaxation after a long day of carrying heavy shit up and down flights of stairs.\n\nOne by one, the others got up and left the pool area, until only me and the old woman remained. Unbidden, my mind started conjuring up some predictably racy thoughts about my two beautiful coworkers/neighbors. Tami and Claire... I idly wondered what Sonya would think of the pair of them when she finally moved out here in a couple months. Would she be weirded-out when she realized I'd been in such close, constant proximity to two world-class specimens of sexy? Or even jealous?\n\nNo, that would be silly. Sonya wasn't the jealous type, anyway, and it's not like she expected me to spend the rest of my life with blinders on, not even noticing when another attractive women crossed my path. Hell, there's no crime in just LOOKING at the two of them, is there? Course not! Just so long as looking was all I did, and nothing else.\n\nNOTHING else.\n\nNo matter how badly I wanted to.\n\nClang! The pool gate slammed shut. I lazily spun my head to see who was joining me at the pool\u2014\n\nAnd there they were, strolling towards me. My two gorgeous tormentors, their delicious bodies wrapped up in beach towels. I threw them a friendly smile and a casual wave of my hand, trying to play it cool and not let on that my heart was already doing somersaults in my chest in anticipation of what I was going to see when those towels came off.\n\nPlease be bikinis, please be bikinis, please be bikinis... \n\nDon't be weird, brain.\n\n\"How's the water?\" Claire asked politely.\n\n\"Wet,\" I grinned.\n\n\"Works for me!\" Tami cheered, and she promptly dropped her towel.\n\nHer suit wasn't a bikini, but I wasn't gonna complain about the view. Hot damn, those curves of hers were fantastic. She had on a blinding white one-piece that stretched across her luscious body like a second skin.\n\nShe took a running leap into the water, and my cock was already granite hard by the time she popped up for air and swiped the long, wet strands of hair off her smiling face.\n\n\"Whoo!\" Tami cheered, then spun to face her still-dry friend. \"Get in, it feels great!\"\n\nBut Claire just circled along the edge of the pool, over to the shallow end, and dipped in her toe to test the temperature.\n\nTami turned to me with a conspiring grin, \"She's kind of a chicken.\"\n\n\"I am not a chicken,\" Claire huffed impatiently. \"I just don't like diving into ice cold water without checking the temperature first.\"\n\nTami burst out laughing, \"How could the water be ice cold, girl? It's a million bajillion degrees in the shade. We're lucky this pool isn't boiling our pretty asses like lobsters.\"\n\nClaire ignored her and went to strip off her beach towel\u2014but she stopped at the last second, quickly giving me an appraising glance. From the look in her eyes, it was obvious why she was hesitant: Claire was wondering if it would make things awkward at work if I saw her in whatever skimpy outfit she had decided to wear to the pool.\n\nI decided to make things easy on her and looked away, diving for fun down to the bottom of the pool and paddling around, hoping the exercise might do something to bring down my outrageous erection. No luck.\n\nAs I popped back up to the surface, I saw Claire's towel strewn across the side of the pool, and reflexively spun to catch a quick glimpse of her glorious, fair-skinned body as it slipped gracefully beneath the water.\n\nUnlike Tami, Claire had decided to wear a two-piece; an itty-bitty little nothing of a suit. The top was gold, just a bit of string and a pair of positively immodest triangles to support the soft flesh of her tits. I didn't get a great look at the bottoms, but they were pink and pearlescent, and the way they were cut really did a great job of showing off Claire's incredibly tight ass and long, lithe legs.\n\nAs I tried to start a conversation with them, I silently wondered what they thought of me thus far. I consider myself a decently good-looking guy, and between the fencing team and my fairly active lifestyle, I've always kept in pretty good shape. Still, I didn't begin to approach these girls on the hotness scale, and I seriously doubted they'd been fantasizing about me all day the way I'd been fantasizing about them.\n\nStill, what if one of them was interested in me? Okay, yeah, Claire definitely wasn't, with her icy smile and curt handshake\u2014but what about Tami? She had called me \"cute\" at the office, and there was no mistaking all that flirting (and no way in hell was that girl unaware of the effect her \"friendly\" hugs had on me, rubbing those great big titties of hers all over my chest).\n\nMaybe she was just a tease, but I figured it would probably be a good idea if I found a way to subtly drop the fact that I was in a serious relationship sooner rather than later. Who knows? It might even make Claire loosen up around me. Yeah. I should definitely slip my girlfriend's existence into the conversation.\n\n\"Does the power go out here often?\" I asked instead.\n\n\"Oh my god, lately it's been happening all the time!\" Tami answered.\n\nClaire added, \"Too many people running their air conditioners at once, we think. But we've only got one building manager who can fix stuff and he's only here in the morning.\"\n\nTami caught me checking her out, and shot me a naughty smile. \"Good thing we have this pool to keep cool in the heat. I bet we'll be bumping into you down here a lot this summer.\"\n\nShe emphasized \"bumping into\" by literally bumping her body against mine.\n\nYeah, okay, she's definitely hitting on you, Mike. Better mention your girlfriend.\n\nTami continued treading water beside me, and I did my best to ignore the way her breasts were swaying beneath the water.\n\nHer name's Sonya, remember? You've been dating for three years. Love of your life? Tell these girls you're off the market!\n\nWas it just me, or had Tami's swimsuit turned just a touch more transparent than it had been before, when it was dry? In retrospect, I really wasn't doing a very good job of maintaining eye-contact.\n\nActually, I thought to myself, what's the hurry? So this girl is flirting with you, there's no harm in that. She's super hot and it's not every day a girl who looks like this makes a pass at you. Maybe you should just leave it be, for the moment. Tami's having fun, why put a damper on it? And Sonya's not even in the same state as you, she wouldn't get hurt if you flirted back a little, would she? It's not like you're gonna let anything ACTUALLY happen here.\n\nYou're not gonna ACTUALLY bring Tami back to your apartment and strip that wet bathing suit off of her body with your teeth. You're not gonna ACTUALLY slip a finger between her legs just so you can hear her moan while you spend hours licking and sucking on her heaving breasts. You're not gonna ACTUALLY fuck her senseless, in every possible position and on every available surface in your home.\n\nSure, you probably COULD do all that. If you really wanted to. I mean, she is clearly hitting on you...\n\n\"My girlfriend's gonna be so pissed when she finds out about these power outages,\" I hurriedly blurted out. The words sounded more forced and desperate than they probably should have. \"She and I already signed a year lease.\"\n\nTami kept smiling, but I saw a bit of the wind go out of her sails. She quietly let herself drift a few feet further from me in the pool, for propriety's sake.\n\nClaire, on the other hand, suddenly looked like a completely different person. She hadn't shown me a genuine smile even once, all day\u2014but as soon as she heard me say the words \"my girlfriend,\" she instantly relaxed. She started acting friendly\u2014even silly. It made me wonder if her whole icy persona wasn't just some sort of subconscious defense mechanism she'd evolved to defend against constantly getting hit on at work.\n\nThe girls insisted I tell them about Sonya\u2014she was going to be their neighbor too, after all\u2014and so I laid out the facts of our whole frustrating, long-distance situation.\n\n\"Eight weeks without seeing each other? That's awful!\" Tami said.\n\n\"Tell me about it.\"\n\n\"Do you even know anybody else out here?\" Claire asked, frowning. \"Or are you all by yourself until then?\"\n\n\"Well, I don't exactly plan to spend the summer holed-up in my apartment with the curtains drawn\u2014but no, I don't really know anybody out here. Not yet, anyway. Haven't quite figured out what I'm gonna do for a social life now that I'm officially a Californian.\"\n\nMy eyes travelled back and forth between the two women in the pool with me: Tami\u2014short, curvy, and cute. Claire\u2014tall, slender, and striking. Each of them ridiculously, impossibly beautiful in her own way. \n\nI laughed, \"Although, I suppose I could have had a worse first night here than meeting the two of you.\"",
        "\"Aww!\" Tami giggled. \"Don't worry, we'll be your friends. We might as well get to know each other, if we're all gonna be working together, right?\"\n\nAnd with that, she surprised me with another of her big-breasted hugs. The soft curve of her hip rubbed up against my still-raging erection, and Tami's eyes widened at the sensation. Then, with her back to Claire, Tami gave me a brief, secretive wink.\n\n\"Anyway, it's getting late, we've gotta make dinner soon,\" Claire sighed, pointing up at the now inky black sky above us.\n\nThey both headed off and I stayed behind in the pool for a few minutes, waiting for my penis to calm down before I hopped back on dry land with a boner in full view of my neighbors. When I finally did emerge from the water, I realized that the 80-year-old woman was still sitting at the side of the pool, serenely poking at the water with her toes.\n\nShe looked a bit lost, so I walked over to her and asked, \"How are you doing? Everything okay?\"\n\n\"Oh, I'm just thinking,\" she said.\n\n\"Thinking about what?\"\n\nShe turned to me, her eyes glinting with knowing mischief: \"Thinking about how nice it would be if I could still fill out a bathing suit as well as those two friends of yours. Once upon a time, you know.\"\n\nI just nodded, having no idea how in hell I was gonna respond to that. She saw my discomfort and chuckled genially. \"Well, well, well. Mister big handsome man spends all evening flirting with two beautiful girls, but he gets all tongue-tied trying to talk to an old woman.\"\n\n\"Seems to be the case,\" I smirked.\n\n\"Did I overhear you say you're girlfriend is out of town for a few weeks?\"\n\n\"Yeah.\"\n\n\"Well then, son, I suggest you hurry home and rub one out before you do something incredibly stupid. I know how a young man's mind works, believe me.\"\n\nBlushing all the way down to my most vestigial internal organs, I nodded my thanks and, still naked except for my wet boxer briefs, I hurried back to my apartment, fully intending to do just as she suggested. Thank god for jacking off; the world's single greatest vaccination against infidelity\u2014\n\nI'd locked myself out.\n\nIn my hurry to get downstairs to the pool, I had left my keys inside, with the doorknob bolt locked out of habit. Now I was stuck out here, in the dark, with no phone, no keys, no wallet, and no clothes.\n\nWith a sigh, I realized there was only one thing to do...\n\n...\n\n\"Michael?\" Claire greeted me at the door to her apartment, now dressed in a pair of tiny cotton shorts and a simple grey camisole with no bra. She reflexively draped an arm across her swinging tits, soon as she saw me. Regardless, she was more covered-up at the moment than I was.\n\nThe girls had set up a few dozen candles around their apartment to combat the power outage, giving the space a soft, romantic feel. I heard the shower running and could only assume Tami was rinsing all the chlorine out of her hair.\n\nBlushing, I said, \"Hi, Claire. So, I'm really sorry about this, but it turns out I'm actually a huge idiot and... I locked myself out of my apartment.\"\n\nWay to score points with your new coworkers, genius.\n\nClaire moved aside and gestured for me to come in.\n\n\"Don't worry about it, it's happened to all of us at some point or another.\" She glanced down at my nearly naked body, and then added, \"Albeit not in quite such a vulnerable state, I would imagine. Let me get you a towel or something to cover up.\"\n\nShe turned away and headed towards the bathroom, giving me a frustrating eye-full of her long legs and drum-tight butt. Just as she reached for the knob, the bathroom door swung open and, totally oblivious to my presence, Tami stepped out into the hallway, toweling off her long, black hair.\n\nShe was beautifully, utterly, naked.\n\nFor a split second, time froze. My jaw dropped open as I drank in the sight of her: Warm, smooth skin. Full, proud hips framing a tiny patch of pubic hair she had shaved into the shape of a heart. Her breasts\u2014well, I almost fainted. I'd spent the better part of the past eight hours fantasizing about what Tami would look like topless, and I gotta admit my imagination didn't begin to do her justice. \n\nAs she toweled off her hair, the motion caused her entire chest to shake back and forth.\n\n\"Tami!\" Claire shouted. \n\nThe beautiful, naked girl suddenly realized I was standing in her living room, gawking at her stupendous tits, and we both spun away at the same time, mortified.\n\nThere was nothing for it but to laugh. After I heard the door slam shut again, I called out, \"Can I turn around now?\"\n\n\"Yes, coast is clear!\"\n\nClaire was on-hand to pass me a large towel, which I gratefully accepted. As I went to cover myself up, I noticed her icy blue eyes dip south\u2014just for an instant\u2014checking out the way my cock was straining against the clinging damp fabric of my briefs.\n\nTami came out to join us a minute later, red in the face and fully dressed. She made a beeline for the freezer.\n\n\"Tamm, the power's out!\" Claire cried. \"You're gonna let out all the cold air.\"\n\n\"Would you please relax? I for one think we've all earned a sip or two of this.\"\n\nShe retrieved an ice-cold bottle of vodka from the freezer. \"How about you, Michael? You look like you need a drink as badly as I do.\"\n\nBad idea, I told myself. Don't get drunk, not when your girlfriend's on the other side of the country and the only thing standing between you and the two hottest women on earth is a pair of boxer-briefs. DO NOT DRINK.\n\nBefore I could answer, Tami thrust a coffee mug into my hands, half-filled with neat, chilled vodka. The cold rush of air when she'd opened the freezer had perked up her nipples, which were now staring me in the face. \n\nYes, I should have politely declined the drink, but I was only 22 years old and the idea of turning down free booze was completely alien to me. Instead, I just thanked her and immediately downed about three shots of the stuff.\n\nTami plopped down beside me on the sofa and took a long sip from her own cup. \"Sorry for, like, accidentally flashing you just now.\"\n\n\"I'm sorry for looking.\"\n\n\"Well then, here's to being sorry!\" Tami raised her glass, and we both drowned the awkwardness with another swig of vodka.\n\nThe girls let me use their phones, but as expected the building manager couldn't be reached and wouldn't be on-site until the morning. I considered calling a locksmith, but Tami absolutely forbade me on the grounds that it was way too expensive.\n\n\"You can just crash here tonight,\" she said, earning a wary look from Claire.\n\n\"I can't impose on you guys that much, I only just met you.\"\n\nTami squinted comically at me, tapping her chin in thought. \"Then we'll just have to find some way for you to make it up to us. You look like you're pretty strong, I'll bet you could barter a night on our couch in return for giving us back rubs.\"\n\nClaire practically spat out her drink. \"Tami! Come on, we work with him! Try to be a little more professional, would you?\"\n\n\"He's seen my boobs, girl. I think it's a bit late for that. Besides, if you were really so concerned with being 'professional,' you would have gone into your room and put on a bra the second he walked in the door. Don't even pretend like you didn't realize.\"\n\nClaire reflexively covered her chest and took a deep drink from her cup. \"I guess a back rub would be okay,\" she said, meekly.\n\nOkay, Mike. This is your brain. You've had a fun evening ogling and flirting with these two women, but I'm finally drawing a line in the fucking sand. You are not, under any circumstances, going to get drunk and spend the night giving Tami and Claire back massages. You are gonna pick up that phone, call a locksmith, and when he arrives you are gonna go inside your apartment, jerk off, and go to sleep. Okay?\n\nWait\u2014is that lasagna I smell cooking?\n\nTurns out, Claire could cook a mean lasagna. They offered me a piece if, in return, I agreed to throw in a foot massage for each of them before we all went to bed.\n\nSo we drank, and ate, and generally had a very nice evening cracking jokes about what had transpired.\n\n\"So Mike, has that ever happened to you?\" Tami asked. \"Like, a member of the opposite sex unexpectedly walks in on you naked?\"\n\n\"Well... I probably shouldn't say.\"\n\nThey both egged me on to tell them the story, so, with the courage of alcohol flowing through my veins, I recounted for them my first time with Sonya, and how hot it had been when her roommate had accidentally walked in on us.\n\n\"Oh my god, how embarrassing!\" Claire cried out.\n\n\"Actually, that's the weird part\u2014it really wasn't. Sonya and I have no shame when it comes to that stuff. It just got us more excited than ever.\"\n\n\"Really?\" Tami asked.\n\n\"Absolutely. I mean, think about it\u2014obviously it was pretty awkward earlier today when I saw you walk out of the shower. But didn't it also give you like, at least a little bit of a charge? I mean it's not like you've got anything to be ashamed of.\"\n\nTami blushed an even deeper red, but she nodded. \n\n\"I guess... it was kind of fun.\"\n\nShe glanced nervously at Claire, then turned back to face me, her cheeks flushed with excitement.\n\n\"Michael, Claire and I need to discuss something in private for a moment, if you don't mind.\"\n\nI nodded dumbly as the two of them got up and silently walked into one of the bedrooms. I heard urgent muffled whispers coming through the door, but I couldn't make out a single word.\n\nFinally, after what felt like an eternity, Claire emerged, alone. Her blue eyes met mine, and with the same cold, detached expression she'd worn when we'd first met, she whispered, \"I'd like to have my backrub now.\"\n\nWithout further explanation, Claire stretched out facedown across the couch cushions, her long legs and swimsuit-model butt just begging to be looked at.\n\n\"Where's Tami?\" I asked.\n\n\"She's changing into her pajamas.\"\n\nCasually as I could manage, I knelt beside her and slowly pressed my fingers into the muscles on Claire's back, rubbing through her camisole. I tried to convince myself that what I was doing wouldn't upset Sonya. It was just a back massage, after all. This was perfectly innocent. True, I was enjoying myself\u2014growing more than a little excited at the feel of Claire's beautiful body in my hands\u2014but what harm was there in enjoying myself?\n\nHer muscles felt unbelievably tense beneath my touch, and I told her as much.\n\n\"Stress,\" she explained. \"Had a lot on my mind lately.\"\n\n\"Like what?\"\n\nInstead of answering me, she just asked me to focus more on her shoulders. I silently obliged, wondering why Tami was taking such long time to put on those pajamas.\n\n\"I think she likes you,\" she said at last. The dejected tone in her voice was unmistakable.\n\n\"Who?\"\n\n\"You know who. Tami. I think she's gonna try to make a move on you tonight.\"\n\nMy hands froze in the middle of her back.\n\nSuddenly, my head was spinning, and not just from all the vodka I'd consumed. Since I'd started dating Sonya, I'd been hit on by other women plenty of times\u2014but this was the first case where I felt like something might actually happen; the first time I actually, genuinely felt tempted to go for it. The memory of Tami's naked body flashed through my mind and I felt my gut tighten.\n\nI honestly didn't know what I was going to do.\n\nClaire rolled onto her side, her blue eyes imploring, \"Listen, your personal life and what you choose to do are none of my business, but please just do me a favor.\"\n\n\"Sure.\"\n\n\"You wouldn't know it to look at her, but Tami just got through a really awkward breakup with her last boyfiend, and she's going through a pretty rough time right now. If you DO wind up like, doing stuff with her\u2014please treat her well. Treat her like a princess. She deserves it, she's...\" Claire looked away from me, her voice breaking as she finished her thought. \"She's a special girl.\"\n\nI nodded in agreement, and went back to kneading Claire's back. So Tami's on the rebound, I thought to myself. That explains why she's been so flirty and aggressive all day. \n\n\"Nothing's gonna happen between us,\" I assured Claire, though the words didn't sound particularly confident.\n\nA huge sigh of relief poured out of Claire, and she finally let herself enjoy the massage. The soft moans of pleasure she kept making as I rubbed her body did nothing to slow my racing pulse.\n\n\"I'm sorry to get all serious on you like that, Michael. Please don't be offended, I just can't stand the thought of seeing her hurt anymore.\"\n\nI decided to change the subject:\n\n\"So Tami's newly single, but how about you? What's your relationship status?\"\n\nClaire frowned, considering for a moment how best to phrase her answer. \"Unrequited,\" she sighed at last.\n\n\"What, is he married or something?\"\n\n\"No, there's nobody else in the picture right now.\"\n\n\"You mean, you've got feelings for some guy, but he's not interested in you? I have trouble believing that, Claire. You're about the most beautiful woman I've met in my entire life. Not to mention, you're smart, a good friend, and a good Samaritan to stupid people who lock themselves out of their apartments.\"\n\n\"Ha! Thank you, Michael. You're sweet. But sadly it is the way it is.\"\n\nI looked at her in the candlelight, our eyes meeting for an instant.\n\n\"If it was me,\" I whispered, \"and I was single, there's no way I would ever be able to turn you down.\"\n\nShe smiled, kissed me quickly on the cheek, and then got to her feet.\n\n\"I'm off to bed, see you in the morning. We'll have the building manager let you back into your apartment. Thanks for the back rub.\"\n\nShe strolled over to Tami's bedroom and opened the door:\n\n\"Okay, honey. He's all yours.\"\n\nShe threw me a final, inscrutable look, and disappeared into her own room, closing the door behind her.\n\nFor sixty unbearably long seconds, nothing happened. I just sat there on the floor, alone in the dim, flickering light, breathing nervously. Then Tami opened her bedroom door and walked into view.\n\nMy heart jumped into my throat. She had changed into her \"pajamas\" alright\u2014though that word typically conjures up images of long-sleeved, button-down flannel tops\u2014not the tiny, pink satin camisole she wore stretched over those massive tits. The scooping neckline was trimmed with white lace, and the whole affair hung limply from a pair of the dinkiest little spaghetti straps I'd ever seen. No support to speak of; her soft, round breasts bounced and swayed totally unsupported beneath the material. \n\nHer bottoms looked like nothing more than a delicate ribbon of pink lace, doing nothing to deter my imagination.\n\n\"Wow,\" I moaned, provoking a big, self-satisfied smile on her adorable face.\n\n\"Just the sort of reaction a girl likes to get from a handsome man.\"\n\n\"You look... amazing.\"\n\nMy mouth hung open with arousal as she confidently crossed the room, closing the distance between us. Soon as she reached me, she leaned forward\u2014giving me a torturous eyeful of her heavy, hanging cleavage\u2014and yanked the towel off from around my waist.\n\nI was too dumbstruck to move. We both looked down at my iron bar of a cock, jutting angrily out through the waistband of my boxers.\n\nHer voice was sweet and sexy: \"I think I'd like to take you up on that back rub now, if you don't mind.\"\n\nI gestured for her to lay across the couch, as Claire had, but instead the voluptuous goddess just spun around and settled herself down on my lap. My cock was instantly squeezed between the warmth of her barely-covered asscheeks, which she wiggled for good measure.\n\nUm, gulp? I'd expected her to be a bit forward, but I never in a billion years expected it to be like this. Keep it in your pants. Keep it in your pants. Keep it in your\u2014crap, you're not wearing pants. Keep it in your underwear.\n\nWith every fiber of my being just aching to fuck this woman, I gently placed my hands on her shoulders and started the massage. Tami's head lolled to the side, revealing the feminine curve of her neck and giving me an unobstructed view down her shirt. She felt amazing in my hands, so smooth and yielding.\n\nAbsentmindedly, Tami dropped her fingernails to my naked thigh and began tracing random patterns in the skin.\n\n\"Just like that,\" she moaned. She closed her eyes, panting. A faint flush of color made its way down the swell of her bosom. \n\nI honestly don't know if I did it intentionally or not, but as I rubbed her shoulders, the two spaghetti straps holding up her top gradually slipped down over the sides of her arms, taking Tami's neckline down with them.\n\nMillimeter by millimeter, that lace neckline travelled down the slope of her breasts, revealing more and more skin until it finally came to an infuriating stop\u2014held up by nothing more than the plumpness of her aroused nipples. If either of us had shifted even slightly, Tami's top would have fallen to her waist and those huge, naked tits would have swung free.\n\nI couldn't help myself: Slowly but deliberately, I worked Tami's massage from the back of her shoulders to the top of her chest, just below her throat. Daringly, I reached forward, my heart racing from the naughty thrill as my fingertips brushed up against the upper curve of her breasts.\n\nTami leaned back against my chest, forcing my hands a few inches further in the process. Her head fell onto my shoulder and she moaned, encouragingly, into the side of my neck:\n\n\"That feels nice, too.\"\n\nIt was like I was in a trance, watching as another man's hands eagerly slid their way over the tops of Tami's breasts and SQUEEZED. The motion finally made her camisole slide all the way down, revealing her full, beautiful chest in all its glory.\n\nMy palms slid down, gently grazing across her erect nipples\u2014\n\n\"Oh yeah...\" Tami groaned.\n\nWhat the hell am I doing?! The voice inside my head screamed. This isn't you! This is wrong!\n\nTami slid her ass off my lap and walked her fingertips up my bare thigh, slowing as she tentatively approached my crotch. I looked down at her, panting huskily, her eyes filled with desire\u2014\n\nOur mouths crashed hungrily together.\n\nThe second our lips touched, Tami's hand closed the final centimeter to my cock and gripped it hard, sending shockwaves of pleasure through my body. Our tongues teased along each other's lips\u2014moaning, shaking in each other's embrace\u2014\n\nI was as horny as I'd ever been in my life. That nagging voice in my head sounded like he was shouting at me from the bottom of the ocean.\n\nBut nonetheless, I could still hear him.\n\n\"Tami, I'm sorry,\" I said, gently releasing her from my arms. \"I can't do this. I've got a girlfriend.\"\n\nTami forced herself against me, kissing desperately.\n\n\"I won't tell her,\" she said.\n\n\"It's not that it's just\u2014that's not the sort of relationship I want to have. That's not the sort of man I want to be.\"\n\nGod, she was so fucking gorgeous, looking at me wide-eyed like that. Her nude skin almost glowing in the soft, flickering light.\n\nTears welled-up in Tami's eyes. She quietly pulled her camisole back on and modestly crossed her arms in front of her braless chest.\n\nI tried to place a reassuring arm around her shoulders, but she angrily shrugged me away.\n\n\"I'm sorry, I\u2014\"\n\n\"Don't fucking talk to me,\" she whispered. Before I could respond, Tami ran back into her bedroom and locked the door.\n\nFuck! I collapsed down onto the sofa, my cock still angrily throbbing against the fabric of my underwear. How the hell was I gonna fix this? What was I gonna tell Sonya? What was gonna happen at work tomorrow?\n\nI still had eight weeks to go until Sonya moved out West. Fifty five more days of being around Tami and Claire. So far I'd only made it through one day\u2014twenty four stinking hours! \n\nThis was going to be the longest summer of my life.\n\nCHAPTER 2 - WHOOPS\n\nWhen the sun came up, Claire shook me awake and curtly informed me that it was time I got the hell out of their apartment. I stumbled around my new apartment complex\u2014still in my underwear\u2014until I finally tracked down the building manager and got him to open my front door.",
        "The power was back on and my cell phone was charged and staring right at me. Three missed calls from Sonya. I felt awful. For a moment, I considered picking it up and calling her back right then and there, but she was probably asleep and I still hadn't figured out how on earth I was going to explain things to her.\n\nI hadn't let things go THAT far with Tami, but I had still betrayed my girlfriend's trust. I had, to whatever degree, been unfaithful for the first time in my life, and it was killing me inside.\n\nI knew I needed to tell Sonya. No twisting things around to make me sound like the victim, either. But that would come later, when we could actually have a conversation. For the time being, I sent her a quick text explaining about the power outage and promised to call her after work.\n\nWhich sucked.\n\nFor the first half of the day, Claire barely acknowledged my existence, always finding something incredibly pressing to busy herself with whenever I tried to explain what had happened. She was professional, but dismissive.\n\nTami, on the other hand, just tried to avoid me altogether. I had hurt her more than I'd realized, and she seemed too embarrassed to even look me in the eye. Since I couldn't exactly talk to her with all the other people around the office, I had the bright idea of writing her a discreet letter of apology, explaining that I thought she was great, and I was so sorry that I had hurt her feelings.\n\nShe tossed it in the waste basket without even reading the thing.\n\nI spent about 10 hours at the office that day, and every second of it was so awkward it felt more like 10 weeks. When I finally made it back home for the evening, I got out my phone and called Sonya.\n\n\"I love you,\" I started simply. Right off the bat, my tone of voice told her something was very wrong.\n\n\"Are you okay?\" she asked.\n\n\"No, I'm not. I... let something happen. Something really stupid. And I need to tell you about it.\"\n\n\"What are you talking about?\"\n\nEvery word took tremendous effort for me to force out, like I was pushing a boulder up a mountain. \"There's... these two women at my new job. Last night, I\u2014\"\n\n\"Last night you WHAT?\"\n\n\"One of them kind of had a thing for me and\u2014I didn't push her away when I should have.\"\n\nThere was a long, painful pause while Sonya gathered her thoughts. \n\nOur relationship had been going great. She was supposed to move in with me in a couple months. A year from now, we both knew I was probably gonna start shopping for a ring. What if my behavior last night had put a wrench in all that?\n\n\"How far did things go?\" Sonya finally asked.\n\n\"Second base.\"\n\n\"What the fuck is 'second base'? Is that like a blowjob or something?\" she snapped.\n\n\"What? No! It's, you know, second base. First base is kissing, second base is feeling a girl up, third base is\u2014\"\n\n\"So you spent all night making out with some random girl and grabbing her boobs?\"\n\n\"No, it was just for a couple of seconds, then I stopped it. I swear.\"\n\nShe made me sit through another of those horrible pauses.\n\n\"You promise that's all?\"\n\n\"I promise. And I promise it will never happen again.\"\n\n\"This is so fucking lame, Michael.\"\n\n\"I know, babe, I'm so\u2014\"\n\nShe hung up.\n\n\"Sorry.\"\n\nThe rest of the week creaked by in pretty much the same miserable way, with Claire and Tami refusing to talk to me, and Sonya refusing to answer her phone or return any of my emails. I was so scared of losing her, I even considered flying back out east to see her in person\u2014but ultimately accepted that she wasn't talking to me because she didn't want to. Maxing out my pathetic little credit limit to buy a plane ticket wasn't gonna change that.\n\nI should have spent that first week going out, trying to get a feel for the city, making new friends and building a new life. But frankly, things were so weird I never felt like leaving my apartment. So instead, I cleaned and unpacked, organized all my shit, and then cleaned everything all over again. I filled what free time I did have discovering just how terrible most television shows really are when you watch them all by yourself.\n\nWhen Saturday rolled around and I carted my dirty clothes downstairs to the community Laundromat, I stumbled upon Claire, just as she was cramming a load of wet clothes into the dryer. We both froze awkwardly at the sight of one another.\n\nWe were all alone. After four days of getting the brush-off from this woman, I finally had her cornered. Finally had an opportunity to explain myself:\n\n\"Claire, please just hear me out.\"\n\n\"No need, Tami told me what happened. Honestly, I kind of expected more from you.\"\n\n\"I know, I know, I'm so sorry things got out of hand. But I had to stop it before we went any further. I didn't want anybody getting hurt.\"\n\nShe frowned at me and shook her head. \"No, you just didn't want YOU to get hurt. Look, I respect that you're not the kind of person who fucks around behind his girlfriend's back, but I told you\u2014I TOLD YOU\u2014that Tami was in a vulnerable place and you still took advantage of her.\"\n\n\"Whoa, whoa\u2014I never took advantage of her! She was the one seducing me! I never did anything to lead her on!\"\n\n\"You knew exactly what she wanted and you did nothing to discourage her. You let her keep coming onto you all night because it was stroking your ego to have some hot chick batting her eyelashes at you.\"\n\nClaire walked right up to me, her icy blue eyes flashing with anger:\n\n\"And then, at the worst possible moment\u2014when she was all excited and happy to have someone being affectionate with her for the first time since her breakup\u2014you pushed her away. Do you have any idea how that feels?\"\n\nI looked down at my shoes. \"I guess not,\" I sighed.\n\n\"And there are other people out there,\" she choked, fighting back tears. \"People who would treat her so much better than you did. People who would love her and cherish her\u2014but instead she set her sights on you.\"\n\nAnd then it hit me, all of a sudden. Everything about Claire clicked into place. She wasn't just mad at me for hurting her friend\u2014she was jealous of me. I looked into her eyes, realizing that Claire was hurting, too. Maybe worse than any of us.\n\n\"It's Tami, isn't it? That big, unrequited love you were telling me about the other night. It's your roommate.\"\n\n\"You don't know what you're talking about,\" she snapped.\n\nBut I did. There was a sudden, desperate fear in her eyes now that I'd brought it up. Fear of being found out.\n\n\"Claire, I'm so sorry. I didn't realize. Does she know?\"\n\nShe continued to glare at me, furious. But then, ever so slightly, her shoulders slumped, and all at once the steam went out of her. Claire's face fell and she just shook her head. She'd been holding back a tidal wave of a secret for god knows how long, and the pressure finally overwhelmed her.\n\nThe tears came back, more freely this time, and Claire slumped against one of the unused washing machines, trying desperately to force her sobbing under control. I sat down beside her, and when I went to wrap a reassuring arm across her shoulders, she didn't move away.\n\nHalting words spilled out of her between breaths of air: \"She's the best thing to ever happen to me. She's the best thing in my whole life. We do everything together! If I told her it would just scare her off.\"\n\n\"How long have you two been friends?\"\n\n\"Less than a year, but\u2014but I've never felt like this about anyone before. It's so great, but it hurts SO MUCH.\"\n\nI hugged her, firmly as I could, trapping her inside the warmth of my arms.\n\n\"Does she even know you're gay?\"\n\nAgain Claire shook her head.\n\n\"Look,\" I whispered soothingly, \"under the circumstances I know I'm probably the last person in the world you'd even think about taking relationship advice from\u2014but you need to tell her. If she's really your friend, she won't push you away. You need to trust her to do the right thing.\"\n\n\"What if everything changes?\"\n\n\"Of course everything will change. There's no going back from an 'I love you.' But look at what's happening to you\u2014This is tearing you up on the inside, and it's only gonna get worse.\"\n\nAfter a few more deep breaths, Claire finally got herself together and withdrew from my arms, apologizing for the wet spots her tears had left on my shirt. She looked hard into my eyes and managed to quirk her lips up into a bittersweet, twisted smile.\n\n\"I don't get you, Michael. You're, like, a stupid asshole and a really nice guy all at the same time.\"\n\n\"I really am sorry I hurt her. And I'd really, REALLY like to be friends with you two.\"\n\n\"Please don't say anything to Tami.\"\n\n\"Hey, it wouldn't be my place.\"\n\nThat seemed to reassure her, and for the next forty five minutes the two of us waited for our laundry quite amicably. We chatted about nothing particularly important, just being friendly with each other. Neither of us mentioned Tami.\n\nWhen Claire went about folding her clothes from the dryer, I caught an eyeful of several pairs of skimpy little thongs and panties, in all shapes and sizes.\n\n\"You have some sort of fascination with my underwear?\" she teased.\n\nI just shrugged my shoulders, caught:\n\n\"Honestly, I'm trying not to think about how they look when you're wearing them.\"\n\nShe rolled her eyes.\n\n...\n\nWhen I got back to my apartment, I saw that I'd missed a v-chat invitation from Sonya. She wanted to talk to me! Praying that it was good news that awaited me and not bad, I clicked respond and waited for her face to appear on my computer monitor. When it finally did, oh man did she look beautiful. She had just gotten back from a run was still all disheveled. A tiny band of sunburn ran across her cute little nose. Sonya was a knockout when she got all dressed-up, but there was something adorable about the way she looked when she was a sweaty mess that just melted my heart.\n\n\"You're a sight for sore eyes,\" I said.\n\n\"You're an idiot,\" she answered.\n\n\"I am, it's true.\"\n\nThen, ever so slightly, she smiled at me, and my whole world lit up like a Christmas tree.\n\n\"I miss talking to you,\" she sighed.\n\nI poured out my heart to her, telling her all the million things I'd wanted to over the past five days. Made sure she knew that she was the absolute, uncontested love of my life.\n\n\"Alright, alright!\" she finally laughed, putting a stop to my gushy ramblings. \"Listen, as long as it really was just a little harmless fooling around, and as long as you don't go making a habit of kissing other girls behind my back, then I forgive you.\"\n\n\"Thank you! When you get here I promise I am gonna make it up to you by sitting down with you and watching a dozen of those shitty old romantic comedies you love. In a row.\"\n\nSonya's beautiful lips curled up into a sinister smile.\n\n\"Actually, if you really want to make it up to me\u2014take of your pants.\"\n\n\"Yeah?\"\n\n\"Just shut up and do it,\" she ordered, \"I've been super horny all week.\"\n\nI was only too happy to oblige. Positioning myself in front of the camera to give her the best view possible, I slowly unbuckled my belt and unzipped my jeans. Then, without needing to be prompted, I teasingly slid my boxers down and stroked my cock until it was nice and hard for her. \n\nWe both did love to put on a show.\n\nSonya clapped in appreciation, her cheeks turning pink with desire at the sight of my exposed penis. \"Aww, I missed him, too,\" she giggled.\n\n\"Wouldn't you be more comfortable without all those sweaty workout clothes?\" I asked.\n\nIn response, Sonya quickly stripped off her shirt and her horribly constrictive jogging bra, letting her big, soft tits bounce free. My cock gave a little lurch at the sight.\n\n\"Oh yeah, we're gonna have to do this more often,\" I moaned, clicking the \"record\" button on the video player. \n\nThe image on the screen only showed Sonya from the chest up, but from the motion of her arm it was clear that she was already starting to play with herself down below. She bit her lip and let out a little sigh of pleasure.\n\n\"Are you recording this?\" she asked.\n\n\"Of course, are you?\"\n\n\"Of course!\"\n\nMy cock flexed even harder in my hand.\n\n\"I want\u2014I want you to tell me what she looks like,\" she moaned.\n\n\"Who?\"\n\n\"The girl you made out with. I bet she was really sexy.\"\n\nSonya was rubbing herself harder now, her breathing heavy and aroused. It was kind of an awkward question, and I honestly couldn't fathom what was going through her mind, but I decided to humor her, anyway:\n\n\"She's one of the hottest chicks I've ever seen. Adorable face, long black hair, tits out to here...\"\n\n\"Even bigger than mine?\"\n\n\"Way bigger.\"\n\n\"Oh, I'll bet she was all over you. Kissing you, groping you, rubbing those great big boobs in your face. I bet you loved every second of it.\n\n\"No, it wasn't like that\u2014\"\n\n\"Shut up,\" Sonya panted, continuing her story. \"I bet you pulled her shirt off and sucked on her nipples like your life depended on it. Then she reached inside your underwear and stroked your cock until you were so hard you couldn't stand it anymore.\"\n\nThe dirty talk was really getting Sonya going. I watched the image on my computer as she raised her free hand to her beautifully aroused nipples and gave them a tug. My fist eagerly closed around my cock and kept stroking as she continued:\n\n\"Then I bet you bent her over the sofa, ripped off whatever slutty underwear she was wearing, and slowly buried every inch of yourself into her slit. How did it feel? How wet was she? What was it like feeling her ass bump up against you as you bottomed out? Did you grab her tits while you fucked her? Did you reach around and grab hold of those big boobs? Did you squeeze them as hard as you could? Did she moan for you? Did she shriek with pleasure?\"\n\nI grunted with arousal, my head spinning from the mental image my girlfriend was painting for me. Over my computer speakers, I heard the wet sounds as Sonya frantically rubbed her pussy offscreen. The motion vibrated her tits like crazy. Her words became practically incoherent with pleasure:\n\n\"I'll bet she\u2014ooh\u2014she came so hard with you inside her. I bet she woke the fucking neighbors with all her screaming. And then\u2014oh my god\u2014\"\n\n\"Keep talking,\" I moaned, already feeling my climax approaching.\n\n\"Then I'll bet you pulled out and came all over her tits. Just everywhere. I bet you made a fucking mess of those things. And then\u2014and then\u2014\"\n\nI was boiling with arousal. Every muscle tightened, preparing for release\u2014\n\n\"And then her sexy friend came over and licked it all off.\"\n\n\"Aah!\" I screamed, spurting into the air in full view of the camera.\n\nThe visual of my orgasm finally pushed Sonya over the edge into her own euphoric oblivion. She sucked in powerful mouthfuls of air, shaking all over before finally\u2014blissfully\u2014collapsing in her desk chair.\n\n\"Sonya, holy shit!\" I smiled, shaking my head in disbelief. \"Where did that come from?\"\n\n\"I don't know, I just\u2014all week I've had this image in my head of you with that other girl, and as much as I hate to say it, it's been making me really horny! I've actually been fantasizing about it, can you believe that? It's crazy. Fantasizing about being there, I mean. About watching. Is that weird?\"\n\n\"I don't know about 'weird,' but when you started talking about it\u2014that was so damn sexy, honey. You saw me, I came in like thirty seconds.\"\n\n\"Come on, that wasn't all me. I'll bet you've been thinking about fucking those two ever since you met them.\"\n\n\"Well, yeah, but\u2014just daydreaming. You know.\"\n\nSonya smiled, now more adorably disheveled than ever. \"Mikey? How about next time you start daydreaming about those girls, you give me a call and... maybe we can daydream about it together.\"\n\nWhen I woke up at 10AM the next day, I was already sweating from the intense heat. The weather forecast was predicting one of the hottest summers on record, and I believed it. I made a beeline for the swimming pool downstairs\u2014this time remembering my keys and swimsuit.\n\nHalfway inside the gate, I stopped in my tracks, utterly bowled over by the view of Tami climbing out of the pool. She'd worn a bikini this time\u2014a skimpy one. Flimsy strips of dark blue fabric struggled to cover her bodacious body. Rivulets of water dripped down her curves as she crossed the patio area and took a seat next to Claire, who was soaking up the morning sun in yet another of the tiniest bikinis I'd ever seen. \n\nI wasn't sure where I stood with them, at the moment. Things seemed to have chilled out between me and Claire, but would Tami still give me the evil eye if I said hi? Or would it be even worse if I ignored them?\n\nClaire saw me first, and the fact that she actually smiled at the sight of me was a huge relief. I strolled over\u2014\n\nTami was not so friendly. Her dark, lovely eyes met mine, silently ordering me to stay away. I stopped in my tracks, held up my hands in surrender, and simply told her, \"You deserve someone better than me.\"\n\nShe looked down questioningly at Claire, who mouthed the words, \"Talk to him.\"\n\nTami nodded, grabbed her towel, and grudgingly jogged over to me\u2014throwing an inadvertent bounce into her steps.\n\n\"Tami, I just want to say I'm sorry for\u2014\"\n\n\"The pool's kind of a public place to have this conversation, don't you think? Mind if we go somewhere else?\"\n\nThat little voice in the back of my head warned me that going someplace alone with this girl might, once again, not be the brightest idea. But we needed to mend things and I figured the odds of anything EVER happening between us was about as likely as me ever getting into a real life swordfight.\n\nI opened the door to my apartment and led her inside.\n\n\"Geez, you settled in fast,\" she said. \"The last time I moved, I took like four months to get everything unpacked.\"\n\n\"Yeah, well, I've had a lot on my mind the past few days and it's helped me think.\"\n\nShe sat down at my breakfast table, now wrapped in a fluffy beach towel that did nothing to disguise the shape of her chest... Focus, Michael! I distracted myself by pouring my guest a glass of orange juice. I spoke quietly:\n\n\"Look, what happened the other night\u2014I handled that in pretty much the worst way possible. I swear I never meant to lead you on, it's just\u2014I wasn't expecting you to look the way you did when you walked out in those 'pajamas.' Sorry, I'm making excuses again.\"\n\nTami looked down at her glass of juice, thinking.\n\n\"How long have you and Sonya been together?\" she said at last.\n\n\"Three years, almost.\"\n\n\"Tom and I were together for four. I thought he was the one, you know? We were each others' first.\"\n\nShe looked up at me, her lip twitching down into a frown. \"It wasn't all your fault, what happened the other night. You told me you had a girlfriend. You dropped it into the conversation a propos of nothing. That should have clued me in right there that you weren't interested, but I just\u2014I just needed\u2014\"\n\n\"You don't have to explain,\" I said.\n\n\"Have you ever been dumped?\"\n\n\"No.\"\n\n\"It fucks with your head! Things between me and Tom weren't even BAD. They were going well. Too well, it turns out. It started to feel inevitable that we were going to wind up together. Get married, kids, happily ever after. And all of a sudden he started freaking out that he'd only ever had sex with one girl. Like he was entitled to some macho right of passage, fucking all kinds of women before he was forced to settle down.\"\n\n\"This guy dumped you because he liked you too much?\"\n\n\"I know! What kind of sense does that make? And ever since then I've been going crazy trying to figure out what the hell is going on with me. I'm not even acting like myself! I mean, look at you\u2014I was throwing myself at you, even after you said you were in a relationship. What kind of trampy bitch does that? I've never done that ever in my life.\"\n\n\"Hey, I wasn't exactly complaining.\"\n\nFifteen minutes later, we'd finished making our amends and were back at the pool with Claire, cooling down in the chlorinated water. Claire had forgiven me, Sonya had forgiven me, and now Tami had forgiven me. Everything was finally right in the world.",
        "Well, everything except the fact that I couldn't take my eyes off those two girls as they splashed around in their itty-bitty bikinis.\n\n\"So, did you tell your girlfriend about it?\" Claire asked.\n\nI nodded, \"Yeah, but\u2014actually, could you guys do me a favor? Would you mind meeting her? Like on webcam?\"\n\n\"Why?\" Tami joked, \"so she can hire an assassin to hunt me down?\"\n\n\"Look, I know it's a weird request, but if she just saw how sexy the two of you are, I think it'd score me a lot of points in the forgiveness department. Let her know just what kind of temptation I was up against.\"\n\nBoth women rolled their eyes. They exchanged some sort of psychic communication between themselves, and then Claire turned to me and said, \"Might be awkward, but why not? She's gonna be our neighbor in a few weeks, anyway. We may as well get this out of the way before we have to see her in the flesh.\"\n\nThat evening, I brought my laptop over to their apartment and set it down on the coffee table, so that Sonya could see all three of us sitting on the couch. We waited nervously while the computer started up, and then suddenly Sonya's beautiful face was filling the screen, her eyes bugging out in surprise. I quickly made the introductions:\n\n\"Hi Sonya. This is Tami and Claire, your future neighbors. Ladies\u2014this is Sonya, my girlfriend.\"\n\nThe three women self-consciously waved at one another.\n\n\"You are REALLY pretty,\" Tami said at last, breaking the ice.\n\n\"Me?\" Sonya cried, \"You two are like, I mean damn. Michael's description did not do you guys justice.\"\n\nLuckily, Sonya was so funny and energetic, she put the other girls quickly at ease. By the time we disconnected the session, everybody almost seemed like old friends. I guess it shouldn't have been that surprising\u2014they were all terrific people, after all\u2014but still, under the admittedly unusual circumstances...\n\n\"Fuck, Michael!\" Tami elbowed me in the ribs. \"That chick is, like, a world-class hottie! Last week I was all jealous of her, but now I'm more jealous of YOU.\"\n\nClaire nodded in agreement, \"Yeah, she seems\u2014wait, Tami, what do you mean 'jealous?'\"\n\n\"Oh, just ignore me. I'm lonely and horny and frustrated. I don't know what I'm saying.\"\n\nI had to fight the urge to laugh at the absurdity of it all\u2014there was genuine lust in Tami's eyes! Some part of her actually found my girlfriend attractive, which meant that she probably found other women attractive, as well...\n\nI secretly gave Claire a look that urged, \"tell her!\" but all I got in response was a quick shake of the head. That girl was never going to come out to her roommate, not until she knew beyond the shadow of a doubt that Tami might be interested.\n\nWell, fine, I thought, I can help in that regard. \n\nAs I went to pick up my laptop, I \"accidentally\" clicked open my video player, bringing up a window with a frozen image from my previous chat with Sonya. I'd re-watched it at least three times since then, and it was currently paused at my favorite part, just as Sonya's face was twisting with rapture, mid-orgasm. Her hand was frozen, tugging fiercely at her beautiful naked breasts.\n\nI made sure that both Tami and Claire got a chance to see it before shouting, \"Whoops!\" and slamming the laptop closed.\n\n\"Sorry ladies, that's personal.\"\n\nTami looked at me wide-eyed. \"Thanks a lot, Michael. Like I wasn't horny enough before.\"\n\nI looked over at Claire, who was blushing self-consciously.\n\n\"Wait\u2014Tami, are you bi?\" I asked, feigning surprise.\n\n\"No, it's just\u2014\" She looked back and forth from Claire to me, then shrugged her shoulders in frustration. \"Fine, yes, I think girls are hot, too, okay?\"\n\nClaire went pale, quietly asking, \"Really?\"\n\n\"Yes, really. And frankly, you haven't exactly been helping me get over this breakup, always looking so hot every time we go out. Seriously, if you weren't straight, it would have been you I was coming onto last week and not Michael. We could have avoided all this mess. No offense, Michael.\"\n\n\"Hey, no need to apologize,\" I joked. \"I think she's hotter than me, too.\"\n\nClaire couldn't believe her ears. \"But, you never told me.\"\n\n\"You never asked! Besides, you always acted all weird and uptight whenever I'd point out that another girl looked hot around you. Like you thought it was gross or something.\"\n\n\"No, that's not\u2014that's not why I acted like that.\"\n\nTami put her hands on her hips, getting annoyed at her friend's cryptic behavior. \n\n\"Well then, why?\"\n\nI decided it would be best to let the two of them finish this discussion in private. They were so caught up in the moment, I don't even think they noticed me leave.\n\nOnce I was back home, I immediately opened my laptop and chatted up Sonya again.\n\n\"Jesus, Michael, you could have warned me!\" she laughed.\n\n\"Yeah, I probably should have. But now you see what I've had to deal with ever since I got here.\"\n\n\"I probably shouldn't say this, but honestly? If I was you, and either one of them was coming onto me, I probably wouldn't have been able to stop myself the way you did.\"\n\n\"You should have seen the bikinis they were wearing at the pool this afternoon.\"\n\nI heard a muted snap over the speakers as Sonya discreetly unbuttoned her pants.\n\n\"I want you to tell me all about it,\" she whispered...\n\nCHAPTER 3 -- THE WAITING GAME\n\nFor the record, I am not a morning person. Never have been. For me, the challenge of overcoming the inertia of my groggy sleep state conjurs mental images of Houdini, breaking free of a straight jacket and fifty iron chains while under twenty feet of water. Yet somehow, I always manage. And as I was stumbling though the garage, groggily searching for my car to go to work, I bumped into Claire.\n\nNormally the sharpest, most together person at the office, today she looked every bit as exhausted as I was.\n\n\"Long night?\" I asked.\n\n\"Didn't get a single minute of sleep.\" A huge, shit-eating grin spread across her face, \"But I'm not complaining.\"\n\n\"So, you and Tami?\"\n\nShe nodded ecstatically, \"Turns out there was a lot of pent-up tension between us.\"\n\n\"Damn, I only wish I could have seen it.\"\n\nI finally found my car climbed inside.\n\n\"Hey Michael?\"\n\n\"Yeah?\"\n\n\"That naked picture of your girlfriend\u2014showing us that wasn't an accident, was it?\"\n\nI gave her my most innocent expression. \"What do you think?\"\n\n\"I think I owe you one. I think we both do.\"\n\nShe glanced quickly around, checking to make sure there was nobody else in the parking garage with us.\n\n\"Speaking of which,\" she said, and then she quickly yanked up her blouse, flashing me a glimpse of her perfect, creamy breasts encased in a virtually transparent lace bra.\n\n\"See you at work,\" she smirked.\n\nFrom then on, Claire did that every single morning. Always giving me a quick flash of her absolutely delicious\u2014albeit totally unattainable\u2014bosom. Her little way of thanking me for helping to bring her and Tami together. It quickly got much easier for me to wake up in the morning, knowing what was waiting for me downstairs. \n\nIf my first week working around Claire and Tami had been sexually frustrating, my second week was sexually excruciating. Since I had been the catalyst of them coming together, I also suddenly became their new mutual best friend, constantly on the receiving end of hugs and smiles and a mountain of affectionate attention.\n\nAnd Tami\u2014because she was Tami\u2014went back to flirting shamelessly with me. Not with the goal of seducing me this time, just with the goal of making me feel like a stud. Still, it's hard to spend four hours a day hearing a hot, big-breasted girl tell you how good you look without your imagination running wild. And it didn't help that, ever since the night I'd given her that first back massage, there still remained an ever-present, unconsummated sexual tension between Tami and I. I couldn't stop dreaming about what would have happened if I hadn't pushed her away.\n\nAs predicted, the summer only got warmer, and as a result I spent most evenings and weekends in the pool at my apartment complex, splashing around with my two lovely coworkers and their increasingly sexy bikinis. Once the sun went down, we'd drift freely between each other's apartments, just enjoying each other's company.\n\nAt least once per day, they'd get turned on and start making out, right in front of me. But just as things started to get steamy, the girls always politely asked me to leave so they could have some privacy.\n\nSometimes\u2014and I'm not proud of this\u2014I'd stand just outside the door after I left, straining to listen through the wood as they moaned orgasmically in each other's embrace.\n\nTo combat all the sexual frustration, Sonya and I invented what we called \"The Waiting Game\"\u2014waiting until she finished her summer school class so that she could get her degree, move out west, and we could go back to fucking like rabbits. \n\nThe Waiting Game worked like this:\n\nVirtually every night (excepting when the power went out), I'd webcam Sonya before I went to bed and we'd masturbate furiously while she and I took turns telling steamy stories about Tami and Claire. I'd make up some scenario about an after-hours office-rendezvous with Claire, where I'd sit her down on the office copier, hiking up her skirt over that nice, tight ass, and fucking her\u2014hard and rough\u2014until she came so many times she couldn't see straight. \n\nOr Sonya would narrate a fictional evening I spent dancing with Tami at a club, watching those enormous, round tits bouncing gloriously to the music as I ground my cock up against her soft, sexy body. I wouldn't be able to wait to get her back to my bed. I'd yank her clothes off right then and there, and screw her brains out against the wall, furiously suckling at her big, naked boobs.\n\nEventually, we started including Sonya as a participant in these stories, not just a voyeur, a development which drove her wild with lust. We'd discuss how she and the girls would all take turns fucking me and riding my mouth to endless, earth-shattering orgasms. Sonya particularly liked to fantasize about what she called \"three-girl blowjobs.\"\n\nBut the despite the nightly cyber-sex, Sonya and I were frustrated beyond belief. In our three years of dating, we'd never gone more than a week without having sex. Now, neither of us had gotten laid in MONTHS. As the date of her move to California grew closer, the days just started to drag on and on. I couldn't stand it. Couldn't endure waiting for her to get here so I could finally fuck away all the hormones that had built up.\n\nAnd yet, endure it I did. Filling my days hanging out with Tami and Claire, and filling my nights listening to my girlfriend describe how she wanted to watch me screw their brains out. \n\nThen, after months of waiting, on the night before Sonya's flight out west\u2014\n\n\"Ungh!\" Sonya moaned, tilting the webcam down to show me that she had, in fact, inserted a third finger into her drenched blonde pussy. I continued my story where I'd left off:\n\n\"Then, with you and Claire sitting there watching, I pin Tami to the bed and straddle her chest\u2014squeezing my long, aching cock between her humongous tits...\"\n\n\"And then I throw Claire down on the bed right next to you!\" Sonya blurted out.\n\nThe hand on my penis froze, mid-stroke. This was a new development.\n\n\"And what do you do to her?\" I asked.\n\n\"I climb on top of her beautiful, gorgeous face and I\u2014I\u2014Oh god, I can't believe I'm saying this...\" Sonya's face had turned bright red with arousal. She was fighting to breath as the fantasy overwhelmed her.\n\n\"What happens?\" I pleaded.\n\n\"I drop myself onto her mouth and she\u2014oh fuck! She licks me until I'm screaming\u2014screaming\u2014\"\n\nSonya promptly started screaming, coming harder than I'd ever seen before.\n\n\"Wow,\" I smiled. I was already anxious to re-watch the video of Sonya's orgasm. Sonya shook herself back to reality.\n\n\"Is that really something you want to do?\" I asked.\n\n\"I don't know. But it sure is hot to think about.\"\n\n\"Yeah.\"\n\nSonya and I both said our nightly \"I love yous,\" and went to sleep.\n\n...\n\nI spent the entirety of the next day preparing the apartment for Sonya's arrival. Scrubbed everything top-to-bottom, stocked the fridge with all manner of yummy foods, and finally got around to putting away the absurd treasure trove of Xbox games I'd offhandedly left scattered all over the living room carpet.\n\nTami and Claire went a little out of their way too, baking cupcakes and purchasing a nice vase of flowers to greet their new neighbor.\n\nFinally, after all those weeks of waiting, at 4:55 pm I got the call from Sonya saying that her flight had landed safely. I ran down to my car as fast as my legs would take me and broke one or two minor traffic laws getting my ass to the airport.\n\nShe was waiting for me, my oasis in the desert, standing at the curb outside the airport with a trio of suitcases that each looked bigger than her entire body. Considering that Sonya had been crammed in coach for the past six hours, I couldn't believe just how fantastic she looked. Loose-fitting clothes, no makeup, hair in a simple ponytail\u2014none of it made a difference. She was a goddamn goddess. I parked the car at the yellow curb, hopped out, and\u2014\n\n\"Hey you.\"\n\n\"Hey yourself.\"\n\nI grabbed her and we kissed until airport security literally started screaming for us to move along.\n\nTraffic getting out of the airport was a nightmare, but I hardly cared. I had Sonya back. Just feeling her presence next to me was enough to make me happy.\n\n\"So, how long until we get back to the apartment?\" \n\n\"Depending on traffic, maybe a couple of hours.\"\n\n\"I don't think I can wait that long,\" she whispered, raising a naughty eyebrow. Her hand slowly moved into my lap.\n\n\"I missed you,\" I sighed, stiffening as she unzipped my fly.\n\n\"Mmm, been a hard couple of months, hasn't it?\"\n\n\"You can say that again.\"\n\nI forced all my concentration on the road in front of me as Sonya lowered her devilishly plump lips over my cock.\n\nYes... I could not believe how amazing her blowjob felt. It had been so long since I'd felt any real sexual contact from another human being, I'd have sworn Sonya's lips had suddenly developed magical powers.\n\nShe made me come twice in her mouth on that drive home, and by the time we finally reached our apartment she was positively dripping with arousal. For fun, I carried Sonya over the threshold and tossed her playfully on the bed. \n\n\"There! Now get naked while I go and get your bags from the hallway. I'll give you the tour later.\"\n\nSonya giggled and hurriedly climbed under the covers as I ducked back outside for the luggage. Tami and Claire were standing in the hallway. \n\n\"Is she inside?\" Claire asked, excited.\n\n\"Can we meet her?\" Tami smiled.\n\nFor a split-second, I almost said, \"Actually guys, I think she and I would like a little alone time, if you don't mind. I'm sure she'd love to meet you later tonight, though.\"\n\nBut then I thought about all those endless weeks Sonya and I had spent fantasizing about these two girls, and all the sexual frustration they had inadvertently built up in us along the way. So, instead of being polite, I decided to be diabolical.\n\n\"Yeah, of course,\" I said. \"Come on inside.\"\n\nSoon as the girls were inside, I promptly stripped off my shirt and kicked off my shoes.\n\n\"Michael?\" Claire looked at me, confused.\n\n\"She's just through here,\" I explained. By the time we reached the bedroom, my pants were a puddle on the floor.\n\n\"What are you doing?\" Tami whispered.\n\nWith a shrug, I opened the door and walked inside to find Sonya laying across the bed, naked as the day she was born. Her eyes flashed with excitement when she saw the two beautiful girls standing in the doorway behind me. I tugged my tight-fitting boxer-briefs down over my ass and let them slip away, giving Tami and Claire their first ever view of my naked butt\u2014then I finally climbed into bed beside my girlfriend.\n\nSonya and I kissed hungrily, moaning into each other's mouths. I rolled onto my back beside her, making sure Tami and Claire got an unobstructed view of the action. Sonya gingerly cupped my balls as I slowly walked my fingers up her stomach, to the sweet softness of her breasts. With my other hand, I walked the fingers downwards, across the trimmed patch of blonde fuzz between her legs, and slowly began stroking the slippery outside of her cunt.\n\n\"Holy shit,\" Tami groaned, and both Sonya and I looked back over our shoulders, locking eyes with the two beautiful, slack-jawed voyeurs standing in our doorway. Their hands were clasped together in a vice-like grip and they were breathing fast\u2014either terrified or totally turned on by what they were seeing.\n\nWe said nothing to them\u2014talking always breaks the spell.\n\nSonya gently clasped my shaft, loosely sliding her grip up and down just tightly enough to make grazing contact. As she rolled onto her side, both of Sonya's beautiful breasts toppled into my face and my lips captured a plump pink nipple.\n\nOut of the corner of my eye, I saw one of Tami's hands drop between Claire's legs, anxiously squeezing the girl through her pants.\n\nAwesome, so they like the show.\n\nSonya and I rocked back and forth on the bed, gently teasing each other until we were both at peak arousal. Sonya's warmth flooded across my fingers. She swung herself around and maneuvered over me\u2014reverse cowgirl\u2014so that we could both have a clear view of our audience in the doorway.\n\nTaking hold of my length, Sonya carefully positioned her hot, boiling cunt right over the tip\u2014generously lubricating me with her arousal.\n\n\"I can't\u2014I mean, we shouldn't be\u2014\" Claire stammered.\n\nThen I grabbed hard onto Sonya's hips and pulled her down onto my cock.\n\n\"Oh fuck yes! Finally!\" Sonya screamed, screwing her hips around to take me even deeper. Her head fell forward, limp, dropping wavy curtains of blonde hair across her tits.\n\nIt was one step too wild for poor Tami and Claire. They self-consciously backed away and we heard the door shut as they let themselves out of our apartment.\n\n\"Aww, looks like we lost our audience,\" Sonya pouted.\n\n\"For now, maybe. But they were getting into it, I could tell.\" \n\nI dropped one hand to strum her clit while Sonya bounced up and down in my lap. I surprised her by pounded my hips up into her, throwing off her rhythm and provoking a sudden, unexpected shriek of delight.\n\nShe twisted her head back, whispering in my ear as we fucked:\n\n\"I can't believe it, those two are so much hotter in person than they were on the computer!\"\n\nShe gave my earlobe a quick lick and pulled off of me, rolling onto her back and spreading her legs invitingly. With a big, dopey smile on my face, I crawled atop her body and plunged inside.\n\nSonya and I fucked ALL night. Moaning and groaning without a care in the world. Coming more times than either of us could count. Kissing and crying and laughing as our bodies exhausted themselves making up for all that lost time.\n\nWe slept in until two in the afternoon the next day.\n\nOnce again, it was over a hundred degrees out and, once again, I woke up already sweating.\n\n\"Where's our bloody air conditioning?!\" Sonya whined.\n\n\"Power's out again. They're supposed to have it finally fixed by next week.\"\n\n\"Just in time for summer to come to an end?\"\n\n\"It's California, Honey. Summer never really comes to an end.\"\n\nWe took a speedy shower to rinse the night's lovemaking off our bodies, and then it was time to show Sonya where I'd been spending all my time the past few months: the pool.\n\nI insisted she descend the stairs first, so I could check out her spectacularly tight fencer's ass in her new bathing suit\u2014the first g-string Sonya had ever bought. It didn't disappoint.\n\nNeither did Tami and Claire. After their self-conscious exodus from our apartment last night, I'd wondered if we'd find them at the pool today dressed more modestly than usual. Not so. ",
        "Claire emerged from the water wearing an old-fashioned string bikini, emblazoned with the American flag. She'd worn it once before, on the day of our 4th of July BBQ, and that suit had held a special place in my heart ever since.\n\nTami's polka-dot bikini covered up a bit more, but then, she had a bit more to cover. Wide triangular cups with no underwire did little to support her massive breasts, and the suit's distinctive cantaloupe color couldn't help but remind me of\u2014well, you know. Best of all, the material was stretched so thin it was impossible not to see the shape of Tami's prominent nipples, proudly perked-up thanks to the cold water.\n\nThey greeted us eagerly enough, but there still seemed to be a bit of lingering awkwardness after last night.\n\n\"Hey, sorry if we went too far,\" Sonya said. \"We just thought it might be a good bit of fun.\"\n\nDamn, four seconds after getting in the pool and I'm already hard again...\n\n\"It's okay, we're all grown-ups,\" Claire said.\n\n\"We just weren't expecting, you know,\" Tami giggled. \"Although, after all the wicked tales Michael told us about what you two got up to in college, I suppose we really should have been more prepared.\"\n\nI gave Sonya a wink.\n\n\"How much have you told these two about our sex life?\" Sonya exclaimed, feigning outrage.\n\n\"Oh, he told us everything,\" Tami laughed.\n\n\"Really? Has he told you about the Waiting Game?\"\n\nI discreetly shook my head at her. Sure, the exhibitionist part of me had been tempted to tell the girls how prominently they had featured into our fantasy lives, but it had always seemed just a bit too inappropriate to ever actually bring up.\n\n\"Ooh, what's that?\" Tami asked.\n\nI cut Sonya off before she could say anything else. \"We tell each other sexy stories when we're using the webcams, that's all.\"\n\nClaire and Tami could sense that I was hiding something, but they let the matter drop. We spent the next hour splashing around the pool just as we had all summer, though this time I had the added pleasure of Sonya's wet, dripping body prancing around in my field of vision. When Claire reminded us that they had actually baked Sonya a \"welcome to the neighborhood\" cake yesterday, we all decided it was time to dry off and head over to their apartment for some afternoon dessert.\n\nSoon as we got inside, Tami turned to face us, shifting slightly from one foot to the other.\n\n\"So, I've got a question about all that sex in public stuff you guys used to do.\"\n\n\"Used to?\" Sonya smirked.\n\nTami ignored her, \"Don't you ever get, like, nervous?\"\n\nI took Sonya's hand in mine. \"Of course we get nervous. But it's like a first kiss\u2014the nervousness just makes everything that much more satisfying.\"\n\n\"Does it make the sex better?\" Claire asked.\n\n\"Oh god, yes,\" Sonya laughed.\n\n\"Now where's this cake?\" I asked.\n\nTami looked questioningly at Claire, and the redhead gave her an excited nod in return.\n\n\"It's in the kitchen,\" Claire said, speaking quickly. \"But first I'd like to wash off the chlorine, if you don't mind. I'll only be a second.\"\n\n\"Yeah, we'll only be a second,\" Tami giggled, then followed Claire into the bathroom and locked the door behind them. A second later the shower turned on and Sonya and I both burst out laughing.\n\n\"Well, I at least THEY'RE having fun,\" Sonya grinned.\n\n\"I gotta say, I'm a little disappointed. With the way Tami was talking to us just now, I kind of thought that those two were gonna\u2014\"\n\nClick.\n\nThe bathroom door unlocked. Sonya and I turned towards it, wondering if we'd really heard what we thought we had. A second later, the doorknob turned and the door swung open, just a crack.\n\nOh my god.\n\nWith bated breath, I took Sonya by the hand and walked across the girls' apartment, standing nervously outside the unlocked bathroom door. Were these girls doing what I thought they were doing? Were they really inviting us to\u2014?\n\nSonya opened the door before I could finish thinking.\n\nI almost lost it when that door opened. I almost came, just from the sight of what awaited us on the other side of that door.\n\nTami and Claire were PAWING at each other behind the glass shower door. Smooth thighs, rubbing together. Slender fingers, gripping soft skin. Lips and tongues, eagerly exploring. \n\nEvery inch of their hot, soapy bodies was on full display for Sonya and I.\n\nAt first, they were too lost in each other to pay us much attention. But eventually Tami's nervous eyes swiveled in our direction and saw the lust on my face.\n\nShe immediately turned her attention back to Claire and gave the girl a ferocious kiss, moaning:\n\n\"Oh god, Claire, they're right there! They're really looking at us!\"\n\nWe really were.\n\nAs they kissed, their glorious tits mashed together\u2014slipping and sliding all over the place from the soapy water.\n\nClaire hazarded an amorous glance in our direction, then gasped in surprise as Tami urgently dropped her mouth to the girl's wet nipple and started sucking. \n\nNever taking her mouth away from Claire's perfect tit, Tami deftly reached a hand down between her lover's legs and started rubbing\u2014\n\n\"Mmm...\" Claire moaned, her fingers grabbing a handful of Tami's long black hair.\n\nI took a moment to appreciate how beautiful Claire's tall, graceful body really was. Though I'd briefly glimpsed Tami naked all those months ago, I had never once seen her beautiful copper-haired girlfriend in the buff. \n\n\"I had no idea Claire was completely clean-shaven down there,\" I whispered to Sonya.\n\n\"Eight weeks of fantasies, and we've been getting it wrong!\" she whispered back.\n\nClaire's cry of pleasure brought us back to attention. She was getting close to her limit, but she wasn't going down without a fight. Suddenly dominant, Claire pulled Tami's mouth off her breast and pushed the girl back against the wall of the shower. Then she grabbed the detachable shower nozzle off the wall and slid it down along Tami's body\u2014over the shape of her enormous breasts and wide, healthy hips\u2014until it was pressed firmly against her clit.\n\nTheir mouths crashed together once again as the rubbing resumed, Tami with her fingers and Claire with the showerhead. Steam filled the bathroom, giving the whole scene a hazy, almost unreal atmosphere.\n\nThe moaning and groaning in the shower intensified, until both lesbian lovers were teetering on the brink. They turned towards Sonya and I\u2014looked at us, looking at them\u2014and then they climaxed together in a beautiful harmony of sexy screams.\n\nWe both applauded their performance.\n\n\"That was like, the sexiest thing I've ever seen,\" Sonya breathed.\n\nThe duo of naked girls stumbled out of the shower, still embracing one another in post-coital bliss.\n\n\"That was like the sexiest thing I've ever DONE,\" Tami laughed.\n\n\"Now it's your guys' turn,\" Claire insisted. \"You two need to rinse off all that icky chlorinated water, too.\"\n\nShe was looking at Sonya as she said it, plainly ogling my girlfriend's skimpy g-string bikini.\n\n\"Of course we do,\" Sonya said, releasing my hand and walking over to Claire. \"But first, could you help me take off my bathing suit?\"\n\nClaire looked to Tami for approval, and quickly got it. Then we all watched as Claire's trembling fingers pulled loose the catch on Sonya's strapless bikini bra and let it fall to the ground. My girlfriend's full, round breasts popped free right in front of Claire's face, and it looked for a second like she was actually going to give them a lick\u2014\n\nBut she chickened out, and instead she circled around behind Sonya and loosed the skimpy piece of string holding up her bottoms. For good measure, Claire gave Sonya's tight butt an appreciative little squeeze as she lowered the g-string down her legs.\n\n\"Now you,\" Tami said playfully, turning her attention to my hilariously tented swim trunks. I couldn't stop staring at her naked body, now only inches away from me. Weeks ago, I had been so close\u2014SO FUCKING CLOSE\u2014to having Tami all to myself. I knew I'd made the right choice by being faithful to Sonya, but fantasies of Tami had caused me so many sleepless nights since then. I wanted her so badly, I didn't trust myself. So I just stood there like a statue and let her decide how she wanted to disrobe me.\n\n\"Do you still think about that night? About what might have happened?\" Tami asked, sidling up to me.\n\n\"You have no idea,\" I answered, prompting Sonya to laugh.\n\n\"So do I,\" Tami whispered. The longing in her eyes spoke volumes. Was it possible? Had she been fantasizing about me just as feverishly as I had her?\n\nThen my inner monologue turned into drunken gibberish as Tami closed the distance between us and pressed the thick tips of her nipples against the smooth muscles of my chest. She slowly dropped to her knees, dragging those nipples down along the entire length of my body as she went. I almost came as I felt the weight of her tits sliding along the length of my erection.\n\nWhen she was mouth-level with my trunks, Tami leaned in and grabbed the waistband with her teeth, then gave the whole suit an exaggerated tug to get it over my turgid cock. With my erection now millimeters from her lips, Tami gave me one final, appraising smile, and returned to her feet.\n\nSonya grabbed me by the hand and pulled me impatiently into the shower.\n\n\"You need to fuck me right the fuck now,\" she panted.\n\nWe didn't waste any time as Sonya hiked up one of her athletic legs over my hip and used it as leverage to stuff my cock into her pussy. We kissed beneath the spray of the water, fucking impatiently while Tami and Claire watched from the sidelines. I gently pressed my thumb against Sonya's clit, and felt feminine fingers clawing into my back in gratitude.\n\nHer wet breasts slapped against me with every urgent thrust, splashing droplets of water up under my chin.\n\n\"Oh yes\u2014oh yes\u2014oh FUCK YES!\" Sonya came, arching her back and thrusting her tits up into the air.\n\nMy stomach tightened, my cock pulsed, and a monstrous climax rose up, ready to destroy me\u2014\n\nI looked lovingly into Sonya's eyes, but then she touched a finger to my chin and turned me to face our audience.\n\nThey were fingering each other again!\n\nI exploded inside of Sonya, my excess cum pouring down her inner thigh to be washed away by the shower. She and I collapsed against one another in the shower, struggling to stand up straight. Sonya turned and smiled at the other girls\u2014the objects of so many of our fantasies.\n\n\"Now, who wants to have cake?\" Claire asked.\n\nCHAPTER 4 -- AND EAT IT, TOO\n\nNobody bothered to get dressed as we all sat down around the coffee table to finally get a taste of that long-promised dessert. The cake wasn't anything fancy\u2014lemon sponge cake with buttercream frosting\u2014but Claire was an excellent baker and whatever secret ingredients she snuck into that recipe made it easily the best piece of cake I'd ever eaten in my life.\n\nAs Claire went to cut us all a second slice, Tami casually turned to Sonya and me and asked, \"So, what was all that about a 'Waiting Game?' Sonya was gonna say something but you stopped her, Michael!\"\n\n\"Come on, Michael,\" Claire called out from the kitchen. \"What was it you told me about always being honest with people?\"\n\nSonya looked at me for permission, excited to spill the beans.\n\n\"Fine,\" I shrugged. After all that just transpired, I figured we may as well.\n\nThis was gonna be interesting.\n\n\"It's easier if I show you,\" Sonya explained, then she daringly darted out the front door\u2014still buck naked\u2014and returned a few moments later with my laptop in her arms.\n\nShe plunked the computer down on the table, opened my \"videos\" folder, and\u2014\n\n\"Is this the most recent one, Michael?\"\n\nI nodded, nervous. Sonya played the file, and Tami and Claire watched, transfixed, at the recorded video of Sonya, tilting the camera down to show us all that she had, in fact, inserted a third finger into her drenched blonde pussy. \n\n\"Whoa, hard core,\" Tami giggled.\n\nI heard my own voice, coming through the speakers:\n\n\"Then, with you and Claire sitting there watching, I pin Tami to the bed and straddle her chest\u2014squeezing my long, aching cock between her humongous tits...\"\n\nClaire and Tami looked over at me in surprise\u2014\n\n\"And then I throw Claire down on the bed right next to you!\" It was Sonya's voice, this time, and it got even more of their attention.\n\n\"And what do you do to her?\" my voice asked.\n\n\"I climb on top of her beautiful, gorgeous face and I\u2014I\u2014Oh god, I can't believe I'm saying this...\"\n\n\"What happens?\"\n\n\"I drop myself onto her mouth and she\u2014oh fuck! She licks me until I'm screaming\u2014screaming\u2014\"\n\nClaire instinctively reached out and paused the video, blushing deeply. She looked at Sonya in a whole new light.\n\n\"So, this Waiting Game you two play\u2014these dirty stories\u2014sometimes they're about us?\" Tami asked.\n\n\"Actually,\" I said, \"They're always about you.\"\n\nClaire couldn't stop looking at Sonya. \"And you were okay with this? You didn't get jealous of him fantasizing about me and Tami?\"\n\n\"I started it,\" she answered bluntly.\n\nI decided it was time to come clean:\n\n\"Fact is, you guys are the most gorgeous, sexy women I've ever laid eyes on, and I've been around you almost 24-7 for the entire summer. At first, this game was just a way for Sonya and I to let off some steam, but then it sort of became...\"\n\n\"It sort of became our entire fantasy life,\" Sonya finished.\n\nNobody knew what to say, so Claire just decided to serve us all our second helping of cake.\n\nI was grateful for the distraction, but before I could consume even one bite of it, Sonya picked the cake up off my plate and childishly smeared it all over my face.\n\n\"Aw, I'm sorry, let me clean that up for you,\" she laughed. Then she straddled my lap with her nude body and began licking the cake off my face.\n\nIt was hilarious, sure, but by the time she was done, I could already feel my cock coming back to life.\n\n\"Payback time,\" I laughed. I picked up Sonya's slice of cake, aimed it at her face\u2014but at the last second I let it drop, splattering all that delicious buttercream across her cleavage.\n\n\"Hey!\" she cried, but a second later I was already licking the stuff off her nipples and Sonya decided she wasn't mad at me anymore.\n\nAcross the table from us, Tami decided to get in on the fun, as well. She grabbed a slice of cake, turned around, and smeared it deliberately across her own butt\u2014shrieking with laughter as Claire bent down and teasingly started licking it off.\n\nFinally ready for some real action, I planted Sonya's bare butt on the edge of the coffee table and smeared more cake all over her cunt.\n\n\"Oh yeah, I've been waiting for this,\" she cooed.\n\n\"So have I, sweetie,\" I said, and then I happily let my mouth enjoy the blissful flavor of Sonya's adorable wet pussy.\n\n\"We need to try some of that,\" Claire laughed, sitting herself down on the coffee table right next to my girlfriend. Out of the corner of my eye, I spotted Tami swirling a liberal amount of frosting across her lover's most intimate regions.\n\nSeconds later, Sonya and Claire were both moaning at the ceiling, gripping the edge of the table with white knuckles as Tami and I licked the cake from between their legs. Approaching orgasm and intoxicated by arousal, their eyes met\u2014timid at first, but then\u2014\n\n\"Kiss her,\" Tami urged, every bit as turned on as I was.\n\nSonya and Claire timidly locked lips, moaning with unbridled delight at the taste of a new lover.\n\n\"Oh yes,\" Sonya mumbled, totally losing her mind.\n\nUnable to hold herself back any longer, Claire let go of the table and reached out to grope at my girlfriend's body. Sonya followed suit, squeezing Claire's big, perfect tits. \n\nThe sight made my dick grow hard enough to cut steel.\n\n\"I think we should move this into the bedroom,\" Claire panted. Sonya nodded in agreement. Tami and I reluctantly pulled our mouths off our lovers' pussies and turned instead to one another.\n\n\"You guys go ahead,\" Tami whispered, looking hungrily at my body. \"We'll join you in a minute.\"\n\nClaire got up, but Sonya looked back to me at the last second. \"Are we really doing this?\" she asked, uncertain.\n\n\"Only if you want to,\" I answered. \n\nSonya took one last look back at Claire, who disappeared into the bedroom offering one final glimpse of her long, slender legs and that absurdly incredible ass.\n\n\"I want to,\" Sonya grinned, and chased afterwards. They actually had the nerve to close the door behind them.\n\nBut, much as I might have enjoyed seeing what Claire was getting up to with my girlfriend in there, my attention was, at that moment, entirely focused on Tami. She crawled towards me on all fours, her heavy breasts swinging back and forth.\n\n\"That first night\u2014where did we leave off?\" she asked.\n\n\"Back rub?\"\n\n\"I think we can skip past that part, don't you?\"\n\n\"Hell yes.\"\n\nJust as she had before, Tami threw herself at me\u2014but this time I didn't pull away. I fell onto my back with her on top of me, all those delightful curves squashed against the shape of my body. My unruly erection pressed rudely against her soft thigh.\n\nOur lips collided with a ferver, and before I knew it both my hands had dropped south to grab hold of Tami's ass. I pushed her hips up and to the side, until we could both feel the hot tip of my cock bumping up against the slippery entrance to her pussy.\n\nI hovered there, luxuriating in the moment, but we both knew it was still too soon to go quite that far\u2014we hadn't had enough of a chance to enjoy each other's bodies just yet. Tami closed her eyes and moaned at the sensation as my cockhead grazed back and forth across the outside of her slippery folds, refusing to go in.\n\nHer lips travelled down, kissing my chin, my jaw, my throat, and finally my chest and nipples. Her hand reached between our two bodies, seeking out my cock and gently gripping it between her fingers to test its girth.\n\nI let out an \"Mmm,\" of approval, and watched, elated, as Tami continued to kiss her way down my body: past my stomach, sliding her wet tongue through the soft tuft of my pubic hair, finally coming to a stop with the side of my cock laying against her cheek.\n\n\"I think we need some more cake,\" I breathed.\n\nStroking my shaft with one hand, Tami reached up and grabbed the last slice of cake off the table\u2014then she rubbed it liberally up and down the length of my erection.\n\n\"I think I need some more cock,\" she joked.\n\nShe turned her head to the side and planted a series of soft, wet kisses up and down my penis. Her tongue flicked out\u2014teasing me\u2014delicately licking off the frosting one drop at a time, until my entire shaft was clean of cake and dripping with her saliva.\n\n\"God, you're good at that,\" I moaned appreciatively.\n\nShe looked into my eyes, her lips still pressing up against the underside of my cock. \n\n\"You just wait,\" she breathed. Then she lowered her mouth around my shaft, taking me deeper and deeper down her throat, until she had swallowed every inch of me.\n\nMy head slammed back against the carpet in ecstasy. I couldn't believe what she was doing. No girl had ever done that to me before\u2014taken me all the way inside her mouth. Not even Sonya. What the hell was wrong with this ex-boyfriend who had dumped Tami?\n\nAs slowly as she had sucked me in, Tami let me slip back out\u2014then she dropped her head again, bobbing up and down to give me a wonderful, slow-paced blowjob. \n\nIt felt great, but I didn't want to come just yet\u2014and if I let her keep this up, that was gonna be unavoidable. I delicately extricated myself from her throat and sat up, whispering, \"I want to have some more cake, too. Come here.\"\n\nI crooked my finger and she happily climbed into my lap, her scalding cunt rubbing against the side of my cock and her titanic cleavage bulging up inches below my chin.\n\nWe kissed again, more sweetly this time, letting our lips linger. Tami handed me what was left of that last slice of cake, and I carefully swirled the frosting around her engorged nipples. She helpfully leaned backwards and thrust out her chest, offering up the entirety of her bosom as a culinary delight.",
        "Unable to restrain myself a moment longer, I dove in, exploring the shape of her nipples with my tongue. \n\nHer fingers grabbed hold of my hair and she pulled me in tighter, forcing my face against her breasts. It only took a second for me to lick off all the frosting, but instead of pulling away, I kept going\u2014licking and kissing all over Tami's curves. Burying my face in her cleavage. Groping and squeezing with my hands, letting my fingertips flutter teasingly across her nipples.\n\nI had dreamed about this girl's tits a lot over the past months, and I fully intended to enjoy the moment. Tami seemed content to just let me play. She kept moaning in my ear, and her breathing quickened as I lifted up her left breast and ran my tongue up along its curved underside.\n\n\"I'm ready to go into the bedroom, if you are,\" she whispered.\n\nIn response, I hopped to my feet and tossed her body over my shoulder in a fireman's carry. I took Tami across the apartment, to the closed bedroom door, where the sounds of blissful female moans were clearly audible coming through the wood.\n\n\"I wonder what they're up to in there,\" I grinned.\n\n\"Let's find out,\" Tami laughed.\n\nWe walked inside to find the toned, tanned bodies of our two lovers splayed across the bed, scissoring one another. Their legs intertwined and their pussies rubbed together with hot, wet friction. Both Claire and Sonya's breasts were swinging crazily from all the motion. They glanced up when they saw us, but neither girl made any move to stop.\n\nI can't begin to tell you how strange it was to see Sonya with another woman. Fantasizing about it had been one thing. Seeing them kiss had been another. But now? Watching as my girlfriend writhed her naked body against Claire's? Listening her mews of Sapphic pleasure? It didn't even feel real. Part of me wanted to pull her away and keep her all to myself.\n\n-But only part of me. And a small part, at that. Most of me was way too fucking horny to care.\n\nI dropped Tami onto the mattress beside them and kneeled down, lowering my face to her crotch, admiring the adorable little heart-shapped patch of trimmed hair she had down there. I lapped gently at the slick pink flesh of her pussy...\n\n\"Oh, forget the foreplay. Just fuck me now!\" Tami whined, and rolled over onto her chest, swinging her legs over the side of the bed to present me with her delicious ass.\n\n\"Whatever you say,\" I answered, placing my hands on her hips and lining myself up with her entrance. Sonya looked over at me, eager to watch.\n\n\"Do it,\" she ordered.\n\nI pushed the head of my cock inside and roared with pleasure.\n\nTami's body was like heaven. So wet and warm and tight. She whimpered with pleasure, grabbing handfuls of the bed sheets as I slid smoothly inside her sheath, all the way to the root. Her soft buttocks pressed against my pelvis.\n\nIt blew my mind. Months of flirting and fantasies all building to this moment: Me, pleasuring Tami with my cock while Sonya watched. \n\nI withdrew, and then slowly pushed back into her, gradually upping the pace with each thrust. Tami shuddered around me, and we both kept our eyes on Sonya and Claire as they fucked beside us. With one hand squeezing Tami's ass, I reached around with my other and wedged it beneath her until I felt her clit against my palm.\n\n\"Urr, yes!\" She shivered, writhing her body against my hand as I thrust into her harder and harder\u2014until her ass was clapping loudly against me.\n\nCarefully, I lifted one of Tami's legs up over my shoulder\u2014rolling her onto her side with me still inside of her\u2014and proceeded to saw in and out of her cunt.\n\nThe sight was too much for Claire. With a fierce, full-body spasm, she climaxed against my girlfriend's body, then collapsed limp onto the bed, still watching with disbelief as I fucked her woman.\n\nMomentarily relieved of duty, Sonya crawled over towards us to get a closer view of the action, until her face was right next to where my cock was dipping in and out of Tami.\n\n\"This is so crazy,\" she laughed.\n\nWith a glint of naughtiness in her eyes, Sonya extended her tongue and leaned forwards, between us. She licked along my cock\u2014slick with Tami's juices\u2014and when I plunged back inside the girl, Sonya's tongue followed suit, playfully swirling around Tami's clit.\n\nTami's eyes bugged out with pleasure, and she promptly reached out and grabbed Sonya's ass\u2014pulling the lovely blonde's crotch towards her face.\n\n\"Come here,\" she moaned.\n\nSonya spread her legs and cooed as Tami craned her head down and planted a big, sloppy kiss on her steaming core.\n\nFor about the millionth time that day, I couldn't believe my eyes. As I continued to fuck Tami, she was 69'ing my girlfriend. I dropped one hand to Sonya's hair, the other hand to Tami's ass, and just went for it. Thrusting as fast as I could\u2014\n\n\"Mmm!\" Sonya moaned, her thighs clenching\u2014\n\n\"Aah!\" Tami screamed, her breasts bouncing\u2014\n\n\"Fuck!\" I shouted, and the three of us climaxed together in a huge explosion of bliss.\n\nI pulled out, still spurting\u2014and Sonya and Tami dutifully spun around to catch the last of my cum across their tongues.\n\n\"I think we all could use another shower,\" Claire observed.\n\nNobody disagreed.\n\n...\n\nAfter the shower, things calmed back down a little bit. We got dressed, went out for pizza, and returned home after nightfall, hoping the power would be back on. \n\nIt wasn't.\n\nBut things could have been worse. Sonya and I brought over a bottle of nice red wine, Tami and Claire lit the candles all over their apartment, and the space was bathed once again in that soft, romantic glow.\n\n\"What an amazing day,\" Sonya sighed, relishing a sip of wine.\n\n\"Are we gonna do this all the time, now that we're neighbors?\" Tami asked.\n\nI looked around the room at the three girls, each of them beautiful beyond belief. How lucky can one guy get?\n\n\"I don't see why not,\" I grinned.\n\nClaire set down her glass and turned towards Sonya and I\u2014\n\n\"I know it's getting late, and we should probably all turn in soon, but before we do...\"\n\n\"Yes?\" Sonya asked.\n\n\"Am I right in assuming that we're all up for one more round of fun? Now, amongst all those fantasies you two had about us, over all those weeks apart, was there anything in particular you've been dying to try?\"\n\nMy pulse quickened. Sonya took my hand and said, \"You go first, honey.\"\n\nI stammered, \"Well, Claire, you have been flashing those tits in my face every day for the past two months. I'd be lying if I said I wasn't dying for a taste.\"\n\n\"I think I can arrange that,\" Claire laughed. She stood and circled the coffee table, looking absolutely stunning in her little sundress. She straddled my lap, squeezing her arms together to accentuate her cleavage, and bit her lip.\n\nNot needing a further invitation, I slipped my fingers beneath the straps holding up her dress and slid them off her shoulders, letting the neckline drop down to reveal a sexy strapless bra. I bathed the swelling tops of her breasts in gentle kisses as my hands reached around Claire's back to find the clasp\u2014\n\nGot it.\n\nI groaned as her proud pink boobs popped into view. \n\n\"Careful, they're kind of sensitive,\" Claire whispered.\n\nShe placed a hand on the back of my head and tilted my face down\u2014slowly\u2014until my nose pressed into the top of her breast and my tongue found her nipple.\n\n\"Oh yes...\" she moaned.\n\n\"I didn't even know you were interested in guys,\" Tami said.\n\n\"You never asked,\" Claire laughed.\n\nI continued to suckle Claire's perfect breasts for a few minutes, but then a new urge overtook me and I suddenly kissed her on the lips. Claire pulled away, but only for a moment\u2014just long enough for her to pull my shirt off over my head.\n\nBeside us, I heard the sound of more kissing as Sonya climbed into Tami's lap and they began a steamy, sensual make-out session of their very own.\n\nMy hands hiked up Claire's dress and I dipped a few fingers inside her already soaking-wet underwear. She unzipped my jeans and reached inside\u2014\n\n\"Back to the bedroom?\" she pleaded.\n\n\"But all of us together this time,\" I answered.\n\nOur clothes were gone before we even made it through the door. We fell onto Claire's queen-size bed as a group\u2014kissing, licking, and fondling. Everywhere I looked\u2014everywhere I touched\u2014there was always another beautiful female body to enjoy.\n\n\"Okay, now it's my turn to call out a fantasy,\" Sonya exclaimed. \"Three-girl blowjob!\"\n\nThat's the girl I love, alright.\n\nI leaned against the headboard and watched in amazement as all three ladies\u2014Tami, Claire, and Sonya\u2014crowded around and worshipped my cock. I thanked god I was big enough down there that they could all get a seat at the table. \n\nIt was sensory overload; too many tongues and too many beautiful faces. The girls made it even worse by constantly kissing one another with my shaft trapped between their lips.\n\nThen, all of a sudden, Sonya went totally rigid. I looked down to see that Tami had discreetly snuck her fingers up my girlfriend's snatch. With my cock all but forgotten, Sonya grabbed Tami by the shoulders and pulled her aside, all to herself. She practically inhaled Tami's breasts.\n\nNow alone with Claire, I pulled her mouth off my glistening cock and took her in my arms\u2014sitting her back on my lap and again kissing her on the lips. Softly, she stroked my penis where it lay trapped against her bare-shaven pubic mound.\n\n\"Do you want me?\" she whispered.\n\nIn response, I grabbed hold of Claire's perfect ass, lifted her up into the air, and then gently lowered her body onto my cock.\n\nShe shivered at the sensation, and her arms wrapped tightly around my back, holding on for dear life.\n\n\"I can feel your heart,\" she whimpered. \"I can feel it beating though your chest.\"\n\n\"I can feel yours, too.\"\n\nThen the moaning started. Sonya and Tami took turns licking at each other's breasts while their fingers feverishly went to work down below. Claire fought to keep breathing, her torso draped limply across mine as her ass clenched again and again with each thrust of my hips.\n\n\"Oh yeah...\" she sighed, her teeth grazing my earlobe.\n\nI ground my pelvis against her clit, rolling my hips\u2014\n\nBeside us, Tami screamed, \"Oh!\" and erupted into orgasm, shaking like a leaf. She fell onto her back, gasping for air.\n\nClaire went crazy at the sight of her girlfriend coming like that. With renewed vigor, she planted her hands on my shoulders and took control, bouncing up and down. Once more unattended, Sonya snuck up behind poor Claire and reached around, pulling at her sensitive pink nipples with one hand and strumming the girl's clit with the other\u2014\n\n\"YES!\"\n\nI almost lost it as Claire's hips shook and shuddered around my cock.\n\nStill at maximum hardness, I withdrew from Claire's spent body and reached for Sonya, herself still in need of a good climax\u2014\n\n\"Wait,\" Tami whimpered, \"I want to do it like\u2014like you talked about doing in the Waiting Game. How did it start? First Michael gets on top of me.\"\n\nShe rolled onto her back, squeezing her humongous, juicy tits together in invitation.\n\nI straddled her chest, my rigid penis already slippery with Claire's arousal. Tami spread her boobs apart, letting me lower myself down into her pillowy cleavage.\n\nShe looked up at my face, beaming with pride at how impossibly turned-on I was. \"I want you to enjoy yourself,\" she said. Then she mashed her boobs back together with me trapped between them. My hands fell onto her melons and held on for dear life as I pounded away, fucking the greatest pair of tits the world had ever seen. The head of my cock speared out the top of Tami's cleavage and she craned her neck so that with each thrust my tip bumped up against her tongue... \n\nWow. Now THERE was a mental image I'd never forget. \n\nClaire seductively cuddled up to Sonya, and asked \"What happens next? I forgot.\"\n\n\"I throw you down onto the bed beside them,\" Sonya answered huskily. She playfully threw Claire down onto the bed beside us.\n\n\"And then what?\" Claire asked.\n\n\"Then I climb on top of your beautiful, gorgeous face\u2014\" Sonya continued, straddling one leg on either side of Claire's head. \"And then I\u2014I\u2014\"\n\nClaire finished the story herself. She reached up both hands to grab Sonya by the hips, and pulled the girl's cunt down onto her talented tongue.\n\n\"Oh! Oh!\" Sonya screamed. She and I looked at each other in disbelief. She was fucking Claire's face. I was fucking Tami's tits. Our wildest fantasies, playing out before our very eyes.\n\nSonya and I leaned towards each other, our lips colliding for a passionate kiss. Her arms folded behind my back and pulled me close, pressing her chest against mine.\n\nThe air was pungent with the smell of sex. The bed shook below us and Sonya screamed in happiness. My cock became a blur on Tami's chest, thrusting back and forth through the smooth, slippery tunnel between her tits... \n\n\"I love you,\" Sonya panted.\n\n\"I love you, too.\"\n\nWe both came within seconds of one another. Sonya's hips writhed uncontrollably around Claire's mouth while I went off like a canon, coming again and again across Tami's cleavage.\n\nFinally expended, the four of us collapsed onto the mattress in a heap, catching our collective breaths.\n\n\"So, this is the Waiting Game, huh?\" Tami asked. \"I kind of like it.\"\n\n\"I'm done waiting,\" I laughed. \"From this day forward, I just want to PLAY.\" "
    ],
    "authorname": "bosombuddies",
    "tags": [
        "big tits",
        "mfff",
        "asian",
        "redhead",
        "bikinis",
        "big breasts",
        "titty fuck",
        "scissoring",
        "lesbians",
        "webcam"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-waiting-game-5"
}