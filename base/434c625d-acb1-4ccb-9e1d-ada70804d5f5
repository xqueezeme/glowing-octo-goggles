{
    "title": "Acting 101 Ch. 02: The Friend Zone",
    "pages": [
        "This is the second chapter in a series of so far indeterminate length. While it begins with something of a TLDR, I'd fully recommend that you read Chapter One first to really understand what is happening.\n\nThanks for the views and ratings on Chapter One. Based on them, you liked it.\n\nAs with all my stories, should you be looking for 'Realism', just move on. I aim for 'Ridiculously Plausible'.\n\n----------------\n\nFriday morning, I awoke relaxed and happy.\n\nI was relaxed, because I had had the best orgasm in my life the night before. Furthermore, it was the first in a long time when I wasn't alone for any orgasm, of whatever quality.\n\nI was happy because I had a date that night-- a first date with my very good friend Steff, who had helped out with that awesome orgasm the night before.\n\nMy mind also spun with confusion and uncertainty, on a host of issues, all of which, in one way or another, involved Steff.\n\nTo start with, you may have noticed the order of things. Spectacular ejaculation first, first date second is not a natural progression, at least not with anyone I've ever known. Steff had become one of my best, if not my best friend over the course of the last semester in which we shared Acting 101 as a class, but our relationship had from the very start been unspokenly but quite firmly as buddies... with no benefits. Well, no benefits other than a neck rub here and there from me to Steff while we were in class. Lots of people confidently assumed that we had been dating all semester, but we were both exasperatedly firm that we were not dating in any way whenever anyone suggested that we were. And now suddenly we actually were going on a date. What the hell did that all mean? Much of my body was primarily concerned with speculating about that spectacular orgasm and when more might be in the offing. Tonight? Some time later than that? Gulp, never, if things didn't go well? My relationship and dating record was not spectacular, though through no fault of my own... I thought. I hoped.\n\nThe rest of me had a bunch of other issues that kept intruding into my speculations about Steff and my penis. The central focus of these further issues was Meredith, whom I'd only met that Sunday. Remember I said that Steff had 'helped' with that amazing orgasm? Yeah, Meredith had been the other helper, and moreover, had really been the instigator. See, I also had an upcoming date with Meredith, a first date as well, on Saturday--as in the day after my first date with Steff. Both of those dates had been made Tuesday, two days before the amazing orgasm. Meredith had asked me out with Steff right there in the room, and Steff had immediately asked me out as well, in response. The two, I discovered, are very good-naturedly competitive. Thursday, that competition got deliciously out of hand and resulted in Meredith alternating between demonstrating oral skills miles beyond anything in my limited twenty-three year-old experience with teaching Steff a wonderful selection of those same skills, using me as the teaching aid. It was the best... God, I don't know how many... minutes of my life.\n\nMeredith is utterly beautiful: taller than Steff, much older than Steff, bigger-breasted than Steff, and otherwise nearly as spectacularly hot as Steff. And oh wait, here's the topper: Did I mention that Meredith is Steff's fucking step-mother? Oh, and she's twelve years older than me, too.\n\nSo as far as I was concerned, I clearly was in the best situation in the history of guys, but it is easy to see why I was also nervous as a double-espresso about the myriad of ways I, or possibly forces beyond my control, could make everything blow up like the Hindenburg.\n\nI popped out of bed and put my nervous energy into a good breakfast. I constructed one of my favorite protein fruit smoothies, but used double the normal pineapple. It had been suggested that I ought to eat even more pineapple, and... it's not important. Gulping down the new concoction, I resolved to focus all my mental energies on tonight's date, and ignore any Meredith-related complications. Multi-threading my analysis of the entire situation all at once was more likely to make me lock up than be insightful. And I needed to concentrate on Steff because she was today... and because she was Steff. If you have an awesome friend, who is also stupidly hot, and you suddenly see light at the end of the Friend Zone, you would be crazy to think about much else until you had to.\n\nSteff had to be my ultimate priority.\n\nFor today, at least....\n\nThat was a dangerous proviso. Nevertheless, I couldn't help making it, even if I then immediately tried to suppress it.\n\nI only had two classes on Fridays. At 10:30, I had Astronomy. It was a course that I was taking for my science distribution requirement. The professor was just awful, but I was getting an A anyway. For me, the material was easy to self-teach, though I did feel really sorry for those kids who needed some actual instruction. For most of the quarter up until now, I had occupied my mind during class checking out the copious number of Freshman and Sophomore girls who made up a majority of the small auditorium, many of whom were reasonably to quite attractive. That day, however, I focused my thoughts on plans for that night, and on Steff... and occasionally about Meredith, damnit.\n\nSteff had been the one to ask me out, but she at least was letting me choose where to eat, within certain parameters. What we were doing afterward, she was keeping on a Need To Know basis. And as long as my dinner choice was within specified bounds, I apparently did not need to know. It seemed a little crazy, but I genuinely trusted Steff in general, so I rolled with it and tried not to let my mind speculate too much about extreme possibilities like wild, underground, live sex shows, or after-dinner petit fours at the Junior League Tea Room.\n\nAbout half-way through class, I decided on a bistro kind of place in the required Midtown area for dinner. I knew it had good food, and was always crowded and loud. I chose it because it offered the kind of subtle privacy you get from lots of two-person booths and a crowd that is there to hang with their friends, no See And Be Seen. I slipped my phone onto the desk in front of me and opened OpenTable to make a reservation. I was almost done when my fucking professor took notice of me in class for the first time all semester.\n\n\"Mr. Talbott,\" he called out, interrupting his own convoluted and slightly wrong description of the phenomenon at issue that morning. \"Have you just received some particularly important meme on your phone? Perhaps it is Astronomy-related and you'd like to share it with the class?\"\n\nI'd never spoken to the guy. Not once. But of course he knew who I was. I hadn't missed a point on a test all semester. And now he had a chance to ruffle my feathers. His face wore a shit-eating grin.\n\nMy face showed my confusion, and embarrassment. \"Oh, no sir! I'm... I'm just making a reservation on Open Table,\" I replied before I realized that was the Wrong Answer.\n\n\"I see,\" he said, with mock seriousness and the rest of the class looked on with glee at something interesting happening in this class for the first time in memory. \"A Hot Date tonight?\" That got a laugh. And a rise out of me.\n\n\"Yes, sir,\" I said, probably too smugly for my own good. \"A neutron star hot date,\" I added, going for the Astronomy joke. Because he is a shitty professor, less than half the class got my joke.\n\nMy second class was supposed to be Shakespeare, but I decided to cut. I loved my professor in that class. She was this dear little old lady who knew the Bard like the back of her hand. She was brilliant but totally shy, and the class had taken to dragging her off to a nearby bar on Fridays instead of sitting in the classroom. Get a glass of sherry into the woman and she starts talking in a voice you don't have to strain to hear. But she never took attendance on Fridays, and I was behind in my reading, so I cut for the first time. I wanted the time for more important things.\n\nInstead of making fun of Malvolio and his crossed garters, I took a shower and scrubbed myself almost raw. I spent forever shaving, making sure I didn't cut myself, but leaving my jaw smooth as calve's leather. I fretted for a good while over which shirt to wear, finally settling on one of my more exuberantly colored and patterned ones. My best jeans completed the ensemble.\n\nThen I changed out of the jeans. They were pretty tight, and the chances of a boner or two that evening were good. If I popped a full erection, it would look like I was wearing a codpiece in those jeans, not to mention how uncomfortable it would feel. I settled instead on my dark gray slacks. They were probably too tight as well, but at least I'd have a chance to hide things.\n\nAt long last, I managed to hurriedly complete my preparations for this all-important date... and discovered it was not yet four. I was picking up Steff at seven, and even with Atlanta traffic, I was an hour or more from needing to leave to get her. To while away the time productively, I practiced my part of the scene she and I were performing together soon for our final in Acting 101.\n\nIt is a sexually suggestive scene, and I enjoyed imagining Steff in my arms as I recited much of the dialog. Then I added in my newly acquired knowledge of what Steff looked like topless and really went to town practicing those lines. Then I realized I had gotten all sweaty merely rehearsing and ran to take yet another shower. By the time I had redressed in a different, non-sweaty shirt, I was later than I wanted to be to get to Steff's on time.\n\nFortunately I have a Tesla, and used its speed and acceleration a lot more aggressively that I usually did to get to her house in the suburbs on time.\n\nI swung into the front driveway with barely minutes to spare and sprang out. A knock on the door was answered by Steff surprisingly quickly. Steff continued to live with Meredith after her father died and had that woman been home as well, instead of pulling an all-nighter at the office that night, Meredith would likely have enjoyed answering the door herself and making me wait for Steff to get ready... probably while bending over a lot in front of me while I waited. Quit wandering off-topic on the fantasies tonight, Scott! Fortunately, Steff was, as always, an amazing babe and did not try to play any damned Make Him Wait games.\n\nAll she did as she opened the door was smile, waggle her eyebrows, and exclaim, \"Are you ready for this? We are going on a date!\"\n\n\"Your chariot awaits,\" I said sweeping my arm toward the car and bowing low. I had been mildly heartened by the tiny waver I caught in her voice. I needed somebody besides me to be nervous about all this!\n\nWe slid into my car and headed toward the restaurant. On the way down, our conversation was smooth and normal, the easy chatter of good friends. Far less awkward than any first date I'd ever had, but a lot less charged too. That was weird.\n\nDinner was similarly a hangout between friends. We each nursed a single large beer, and had fun making fun of how bad the onion rings were that night. It was fun at first, but the fact started to hang over our conversation that we were acting and feeling more like two buddies hanging out for chow than two people on a first date who were both attracted to each other. Both of us were attracted to the other, right? It wasn't just me, right?\n\nOur conversation began to wane as I fretted. It was ridiculous to be doubting like this, right? I mean, this girl had quite gleefully and energetically sucked my cock almost exactly 24 hours earlier. She had to be into me. But that whole blowjob had been part of Steff and Meredith's apparently long history of gleefully competing about everything. It might have been their first time competing around a guy, but still, it had been Meredith egging her on.\n\nSteff suddenly took a long sip of beer and a deep breath. She leaned forward, her hands on the table in front of me. She looked me in the eye and said, \"Look, I'm glad we are finally out on a date. I... I want to thank you for finally letting me out of the Friend Zone.\" She saw my eyes widen at that, and she went on in an almost panicked voice, \"You are letting me out of the Friend Zone, right?\"\n\nFor once, I didn't do or say anything stupid when the bolt came from the blue. Instead, I lifted my hands and laid them on the table as well, letting my fingertips rest on hers. It was the first time I think I'd ever touched her hands with mine, aside from a few fist bumps. I leaned forward and stared into her deep blue, magnetic eyes and said with soft sincerity, \"What the everliving fuck are you taking about? I'm the one who has been jammed into the Friend Zone the whole time I've known you!\"\n\nWe stared at each other for a long moment, then both burst into deep, enjoyable, but slightly hysterical laughter. My fingertips never left hers. As our peals of laughter, which had been loud enough to draw a few looks, even in the crowded anonymity of this place, died out, I went on. \"Look, you are easily my best friend I've yet made at this university. You are probably my best friend in the world right now. And you are definitely, by a country mile, my best female friend ever. And we've been friends almost since the moment we met. But you are also, in my opinion, the hottest girl in this university. I'd have asked you out a hundred times already if it had not been so plain to me that you totally wanted to be 'just friends'. I even convinced myself that you were right.\" I left my fingertip on hers, but that was all I did.\n\nSteff just stared at me, her expression warring between flushing at my flattery and irritation at my words. \"Listen, asshole, you treated me like I was just one of the guys from day one. I love that you are my friend. But it has been a weird friendship. We never hang out as just the two of us. And you never seem the least bit dissatisfied with that. Meanwhile, you would regularly, without meaning to, do things that left me positively thirsty over how hot you are. I'd say my predicament is the fucking definition of the Friend Zone.\"\n\nWe stared at each other a little resentfully for a moment. Then we both smiled ruefully. \"I don't know how this date is going to go tonight,\" I said, \"but how'd you like to go out again next Friday?\"\n\nSteff chuckled and said, \"Sure, what do we have to lose, except the last two and a half months.\"\n\nI slid my hands forward and Steff flipped hers over beneath mine. We held hands and just looked at each other for a bit. But the moment did not hold for long, as our sense of humor took over again. In minutes, the intensity of our conversation was entirely gone and we are arguing about baseball and the Braves.\n\nAs I was paying the check, I begged again, \"Okay, how are we doing on time, and what are we going to do next? I've been dying to know.\" I even threw in a leer for good measure, since I half-hoped (half?) that the answer would be that we were going to go back to Steff's house and fuck like bunnies.\n\nAlas, she laughed and replied, \"We are good on time. The JokeDome is only a couple of blocks from here.\"\n\n\"The JokeDome?\" I asked, aghast. \"You did not agree to join Tony and Kimmie on their improv team, did you?\"\n\n\"Fuck, no,\" laughed Steff, who didn't want to get up in front of strangers without written material any more than I did. \"But they are competing tonight and they are our friends. Kimmie got us a front-row table, so we are going to go support them,\" she added firmly.\n\n\"And laugh our asses off at them if they suck, come Tuesday in class,\" I added.\n\n\"Absolutely.\"\n\nThe JokeDome was a shoe-string little space that used to be a large Gymboree. You could still see some of the childish decorations on the walls. The 'stage' was a platform raised barely half a foot, and seating was little tables and motley chairs from thrift shops and garage sales. Worse, they only sold beer and wine. But the place was rapidly becoming a success. It was sold out that night, so getting a prime table had been a demonstration of the value of having connections. Three teams were competing that evening, and only Tony and Kimmie were a duo, The others were foursomes.\n\nAs the teams went back and forth, trying their hands at improv games with direction from the judges and the audience, it was clear why Tony had been so whiny lately about wanting Steff and me to join their team. Two players, no matter how talented, were at a distinct disadvantage to four. Still, our friends gave it a good show, and kept barely within striking distance of the other teams as things went on. \"I hate to admit it, but they are both pretty good,\" whispered Steff to me at one point, and I had to agree.\n\nThings reached a point where I was pretty sure that Tony and Kimmie had been finally, mathematically eliminated. The next round, the two of them were assigned a crime scene scenario. Tony naturally assumed the role of a cop interviewing a victim. Kimmie rapidly scored some points by deciding that the crime she was a victim of was someone chaining a dildo to her bicycle while she was in class! It got a good laugh, but I could tell they were struggling with where to go next, beyond the lock being a Kryptonite and well-nigh unbreakable. I was just feeling sorry for Tony when the fucker struck.\n\n\"I'll need to canvas for witnesses, ma'am,\" he said officiously, then peered into the crowd as if searching for a victim. But he knew right where we were sitting... \"You there, lady!\" He called out, stepping up right in front of Steff, who looked at him like she'd like to feed him his dog's entrails. Unfazed, he went on, \"A crime has been committed, and I'd like to ask if you saw anything.\" Steff looked at me for rescue.\n\nHey.\n\nShe was the one who brought us here. I grinned widely and broadly gestured that she should respond. The crowd that was close enough to see the byplay (which was most of the people) laughed at Steff's irritation and booed me for my betrayal. She slowly stood and moved into the lights. There were a few low whistles when people got a look at... my date.\n\n\"Ma'am,\" Tony began, but Steff interrupted him, demanding to know the nature of the crime. When he answered, she started torturing Tony by making him describe the imaginary dildo in more and more excruciating detail. Kimmie, who might not be as funny as Tony (or me, or Steff), but who possessed zero shame, jumped in with various graphic details. Once Steff recognized that they had exhausted the bit and had thoroughly punished Tony for dragging her up there by making him talk about fake veins on fake dicks, she ended it by saying, \"Okay, I get it now. Sorry, but no. I didn't see anything.\"\n\nThen the jerk turned on me and said, \"But that guy was looking the other way from you. He probably saw everything then!\" Every boo I had heard for hanging Steff out to dry was now a laugh at my trapped ass.\n\nBut I think four moves ahead, and had time to think about this inevitable outcome, so I was ready. I trudged up onto the platform, and delivered my bland setup. It went over like a lead ballon, and Tony vamped to try to cover my boring sally. I tried a sudden second idea, and it went okay, but you could feel the audience feeling like we were failing. I waited as long as I could, then got ready to circle back to my initial setup.\n\nThen Steff paid off my setup for me. She had recognized the opportunity I'd provided, and delivered an even better version of my intended follow through than I'd planned of myself. And because it wasn't me who paid off the joke, it looked a whole lot more 'improv-y'. The audience lost it. I saw two of the judges lose it. Kimmie lost it. Tony deadpanned a perfect topper, and ended the sketch on a perfect high note, proving he was a lot better at this than the crew in that viral video he showed me the week before. Tony and Kimmie bowed. Steff and I did not. We weren't the players, after all. Tony waved at us to bow as well, and when we still didn't, he slapped Steff on her perfect ass and shouted, \"Bow!\" Steff glared at him, I glared at him, but we bowed... to loud applause.",
        "We sat down as quickly as we could, well before the judges could issue a score. I looked at Steff with a smile that I saw reflected on her own face--her own, deeply flushed face. Tony had told me that hitting a really big improv laugh was a rush, and he was very, very right. The judges awarded that round to Tony and Kimmie, along with \"their ringers in the front row!\" There was another round to go, but Steff leaned over to me and whispered, \"Let's get out of here now. Better safe than sorry!\"\n\nThe way I was feeling right then, dosed with adrenaline and dopamine, and staring into Steff's flushed, excited face, I wanted to get out too, regardless of what Tony might try in the last round. We rose and slipped out quickly, receiving a few congratulatory pats on the back from the audience as we snaked our way out.\n\nWe practically ran to my car and took off back north toward Steff's house.We babbled happily about how fun it was to watch, how well Tony and Kimmie did, and (insincerely) how much we did not want do it again. I was vaguely aware that we just might be hooked.\n\nBut we were also on the way home. The date was nearing its end. And I was getting nervous again. I was certain I was going to try to at least kiss my friend for the first time. Beyond that, how slow and careful were we going to take things?\n\nI mean, sure. I wanted to return the favor of her spectacular oral efforts the night before. I wanted to bone her brains out, of course. But I was going to be tread lightly, no matter how reckless I felt right then.\n\nIt was pitch black out as I pulled off the interstate and turned toward the small road to Steff's house.\n\n\"You know, Tony and Kimmie were right,\" Steff said quietly.\n\n\"Hmm?\" I asked.\n\n\"Getting those laughs really is a serious rush,\" she said, a tremor in her voice, placing her hand gently on my knee.\n\n\"Oh yeah,\" I replied, both to the placement of her hand and the comment. But mostly the hand.\n\nAs we passed thru a brightly lit area around a shopping center, Steff's hand slid inexorably up my thigh, much to my delight. When she reached the top, she idly stroked my suddenly hard cock through my pants. To be fair, I had been halfway hard before she even touched me, I was feeling the rush from the performance too.\n\nI may have had my foot on the accelerator a bit hard and we shot away from the commercial area and back into the darkness of the night. As soon as we did so, Steff leaned across and began to tug open my fly! In moments, she had my cock out in her hand and slid her mouth over it, demonstrating that she had forgotten nothing about the value of tongue that Meredith had taught her the night before.\n\n\"Uh, road head?\" I gasped, scandalized, terrified, and enthralled in the literal sense of that word. \"This is a public road, Steff.\"\n\n\"It's a two-lane road with no sidewalks for the next couple of miles,\" gasped Steff, pulling off my cock. \"Tell me when we make the turn to go up the hill,\" she instructed, and bent to once more torture me wonderfully.\n\nAny excessive pressure on the accelerator had disappeared. It wasn't because I didn't want to be stopped for speeding, I just wanted this dark, concealing stretch of road to last as long as possible! If anything, I probably risked getting pulled over for going too slow.\n\nSon of a bitch, Steff was amazing. Her head rose up and down, sliding my cock in and out of her mouth, caressed by her embracing tongue, in slow, smooth, luxurious movements. Her hand massaged my shaft, but mostly fondled my balls. Up and down. Up and down. It felt amazing, but she clearly wasn't trying to be energetic enough to get me off, just making me practically cry with pleasure.\n\n\"Here comes the hill,\" I sighed sadly, and Steff slid sinuously upright in her seat, delicately wiping her lips with her fingertips. She make a point of not fixing my fly, just tugging my shirt tail over my lap. I turned and looked at her with a look of wonder on my face, and just said, \"Holy shit!\"\n\n\"I just want to eliminate any chance you get all timid and worried about 'taking care of our friendship first' when we get to my house,\" Steff said with a grin. \"I've been pretty horny all day, even before that rush of public laughter.\"\n\nI passed the little gas station and turned into her neighborhood. \"Meredith isn't home, remember,\" she added. \"Don't bother to zip up or anything when we get there.\"\n\nMy lead foot was back.\n\nI had barely put my car in Park when Steff was out and I followed her to the door. I was literally holding up my slacks with one hand as I dashed after her. She slid through the front door and practically slammed it after me. I turned to her and she to me.\n\nAnd finally, finally, I kissed Steff. I reached both hands out to her waist and pulled her to me and our lips met with a wave of heat. I am shocked that it took us as many seconds as it did once we began before our tongues started invading each other's mouths, fencing eagerly. My arms slid around her now and pulled her hard against me. The pressure between us kept my slacks from collapsing to my ankles.\n\nAnd then, at last, I let my hands... touch Steff. To this point, Steff had had my cock in her mouth on two separate occasions, but I had yet, in the space of months, to touch any part of her but the back of her neck.\n\nMy hands slid down and clutched at her amazing, tight little ass through the soft fabric of her short, denim skirt. She wriggled in my grasp and I felt that yes, her butt was as firm and lithe as I had imagined. I got a little lost massaging her glutes, but her responding movements reduced the pressure between our hips and my trousers slid suddenly to my ankles. Steff immediately began unbuttoning my shirt completely. She slid it off my shoulders to the floor and sank to her ankles before my essentially naked form, reaching for my desperately eager cock.\n\nBut I was having none of that... yet. I leaned down and pulled her to her feet. I kicked first one foot free of both shoe and pants, then the other, and lifted Steff in my arms to an answering squeal. \"No, no, No!\" I said, kissing her deeply, then continued as I carried her over to the big, soft couch in the great room. \"It is now your turn,\" I growled.\n\nIt was my turn to sink to my knees between her legs, and I ran my hands up along her sleek calves. God, they were so firm and smooth. Her thighs flexed and quivered under my rising touch and I could just barely feel the outlines of her taut muscles beneath the skin. I didn't know what Steff's workout regime was, but I applauded it. She was a natural beauty of course, but no one gets that kind of muscle tone without some serious hard work.\n\nHer skirt was already hiked up a little, but I rotated my hands down between her thighs and eagerly slipped beneath what little the hem still covered. I wanted to move upward very slowly, teasing Steff with caresses as I went, getting closer but making her wait. I wanted to do that, but I'd been horny all day too. My fingers slid north with increasing speed and soon encountered a delicate layer of lace that seemed to struggle (and fail) to entirely cover my intended target. My fingertips had barely brushed between her legs when I swept my hands out and around her hips. I reached under Steff and squeezed her ass once more before I grasped her underwear (she was wearing a thong!) and tugged it downward. Steff lifted her hips just barely and I smoothly slid the little black satin piece of fabric off of her. I twirled it around a finger and tossed it away, and Steff giggled. Then she gasped as I dove my face up under her skirt.\n\nHer aroma was incredible. Just incredible and intoxicating. I wanted to see what I was doing, however, so I pushed up the hem to her waist as I beheld her glory. Steff had obviously spent as much time fussing in the bathroom as I had that day, probably more. What little dark pubic hair she had not shaved away was shorn close and neatly trimmed into a neat, deep triangle, painting the way. The. Way.\n\nI like to follow directions.\n\nI bent again and licked my way up her inner thigh until my tongue tasted heaven. Her nether lips were swollen and moist in anticipation. I reached up and parted them gently with two fingers and dipped my tongue inside, running it up and down, pressing her outer lips further apart. She shivered as the tip of my tongue ran back and forth over her delicately swollen clit, and she groaned loudly when I slid back down and plunged my tongue as deeply inside her as I could.\n\nHer hands found the back of my head and her fingers tangled themselves in my hair, pulling me happily against her crotch. I slid my hands underneath her to massage her perfect ass some more, and started to tease her little bud in earnest. In moments she was bucking and squirming against my tongue. It was not much longer before Steff demonstrated that she was, in fact, a screamer.\n\nStarting with a guttural moan, her voice rose to an ear-splitting shriek of ecstasy and I felt a rolling series of spasms explode through her body from where my tongue attacked her. I kept flicking her clit with my tongue, drawing more shrieks until she collapsed, only half conscious, on the couch. I sat up, straightening my back, which had become a little stiff bending over like that, and gleefully wiped my mouth with the back of my hand. I looked down at this wondrous creature, splayed out a little comically before me and I was filled with delight that I had given her such an orgasm, a whole raft of them in fact.\n\nI had made Steff come!\n\nShe suddenly heaved a deep breath as if regaining thought and looked down at me. \"Wow, Mr. I've Only Had Sex a Few Times!\" she gasped. \"You are pretty good at that for an amateur.\" I just grinned. I'd actually said I'd only had a few blowjobs. In fact, I had always given a lot more than I'd received, but Steff was rolling, and didn't need to know all the details of my sexual history right then anyway. \"Jesus,\" she went on, \"if Meredith teaches you as much about eating pussy as she taught me about sucking cock, I may not survive our next date!\"\n\nI looked at her, slack-jawed. My face was not yet dry from being buried between her legs and she was talking about Meredith?\n\nSteff giggled. \"It occurred to me, sorry,\" she shrugged. Then she sat up and began to unbutton her blouse. \"Allow me to distract you from my faux pas....\"\n\nThe moment she had her blouse open, I could not help but reach out trembling fingers and clasp her delicate, lace clad breasts. They were so firm and warm in my grasp I let out an involuntary sigh of delight. That pleased Steff and she giggled as she let her blouse slip off her shoulders. My fingers eagerly moved to where the thin black cups of her bra joined between her breasts, feeling for the clasp. Steff's giggle turned to a laugh and she said, \"This one hooks in back!\" Obligingly, she reached behind herself and I immediately felt the bra go slack in my hands. I tugged on it and it slid off her shoulders and released her delicate bounty. I tossed it over my shoulder in the general direction of where her thong had flown, and with a shudder of pleasure took her bare breasts into my hands. At last.\n\nSo firm. So elastic. So warm.... So. Fucking. Perfect.\n\nI just held them for an embarrassingly infantile stretch of time, before my hunger took me and I leaned down to take one demandingly pert nipple into my mouth, my fingertips pinching and teasing its mate. I opened my lips wide and sucked hard, drawing her supple flesh into my mouth. Steff hummed in approval.\n\nI was still kneeling on the floor before her and my knees were getting stiff. Without fully releasing my grasp on her breasts, I rose to my feet and slid onto the couch beside her. I bent my head to suckle now on her other breast, my fingers eagerly, aggressively burying themselves into the curves of the first. Steff demonstrated how good an idea this change of position was by taking hold of my cock, which she could now reach, and massaging it, first idly, but then with increasing eagerness.\n\nI didn't feel like I was done playing with those wondrous breasts that I had dreamed of for so long, but when I came up briefly for air, Steff informed me that I was, for the moment at least. She pushed me back against the cushions of the couch and took my cock now firmly in her grasp. The idle strokes and caresses were gone now, replaced by a firm but easy rhythm. \"My turn,\" she said very firmly.\n\nSteff bent and once again I felt the amazing sensation of my cock sliding between her lips. At first, she only took in my head, giving her room to circle it round and round inside with her tongue. After a core-quaking response from me, Steff looked up at me. \"I ran out of time in the car. Then you insisted on blowing my mind when we got inside here. But you have no escape now. I am going to suck this cock. I'm going to take my time. And I am going to enjoy it.\" It was left unsaid that I was certainly going to enjoy it too as Steff took me back between her lips. Her head bobbed a few times on my lap, more of my penis sliding into her mouth with each bob. She slid to a stop with as much of me buried between her lips as she'd managed to take into her mouth thus far and swirled her head a little, rubbing my cock around inside her eager mouth. Then she lifted her head again, gasping for air and massaging my shaft as she breathed.\n\nWhen she had caught her breath, Steff slid off the couch to now kneel between my legs. She jacked me swiftly as she looked up at me. \"One more thing,\" she instructed me, \"you are going to come in my mouth this time. I don't need to be made a mess of tonight, and besides, I want every drop of that weirdly delicious cum of yours.\" With that, she pulled my cock toward her, and bent to slide me again between her lips, never letting her gaze stray from my eyes. Between the dopamine rush from earlier, the brief tease of road head, burying my face between Steff's thighs, and then finally playing with her delicious tits, I was way over-revved. Hearing those words and staring into her eyes as my cock disappeared between her lips in that current condition had me on the very edge of exploding into her mouth immediately.\n\nI held back, but just. \"I know you want to take your time with this,\" I gasped, caressing her bare shoulder, \"but I don't think that's going to be possible right now....\" Steff seemed to recognize that I wasn't kidding. She merely shrugged a little and just sucked harder on me, pressing her tongue even more firmly along my shaft as she took me in and out of her agile mouth.\n\n\"Yep,\" I gasped in less than a minute. \"I... uh, yeah... told you... uhhhhnnn...\" I burbled incoherently and kind of lost track of reality for a moment, I was staring right at Steff's beautiful face and her cock-filled mouth when some kind of biological grenade went off between my legs, yet I cannot tell you one thing about her expression in response. The only aspect of my senses that was working was whatever felt my release.\n\nI actually don't think I came as hard, or at least in as much volume, as I'd done the night before, honestly. But that one had come at then end of a long, leisurely, playful event, albeit a tremendously weird one. I was ready when it came, prepared, and eager for it.\n\nThis orgasm was literally involuntary. I had fought it, wanting the intensity to last longer. But my hunger, compounded by Steff's, was too much and it just... took me. This was Steff and me, using our bodies to make each other happy. This was my most prominent fantasy come true, and I was simply overwhelmed.\n\nWhen my vision started tracking again, Steff was licking my cock for any stray jizz. She had taken my whole load, however large it had ended up being, in her mouth and indeed swallowed it. The only traces were a little foam on her lips and a final drop her hands milked from my shaft, which she immediately licked clean. I watched her lips move as she sucked the foamy residue from them, wearing a smile the whole time.\n\nA single, huge aftershock shuddered through my body, and then I reached out and pulled Steff up and into my lap.\n\nHer lithe form was surprisingly heavy on my legs. I'd always imagined that she'd float in my lap, but that was pure fantasy, and I should have realized otherwise. Steff wasn't thin. I didn't worship thin. She was lean. She had just the right amount of firm muscle in all the exact right places, along with some enchanting softer tissue in mesmerizing shapes. It gave her that tight, shapely ass that currently pressed against my wet, softening cock, those gently swelling hips, her firm waist, her broad shoulders and those enchanting tits, which I resumed playing with.\n\nWe both cuddled on the couch, in companionable silence, idly toying with each other's bodies for a long time. There was kissing, too, but not constant. It was more like part and parcel of the idle way we were feeling each other up. Finally, Steff buried her face in the crook of my neck and stopped moving.\n\n\"Are we going to fuck each other now?\" she asked quietly, softly, uncertainly.\n\nMy body attempted to order my mouth to exclaim, 'Hell yes! Right now! Please and thank you!' but my mind was fortunately in control. \"I don't know,\" I replied, just as softly. \"And I don't know why that is. Why haven't I already gone on and jumped your bones?\"\n\n\"And why haven't I?\" answered Steff. \"It's weird isn't it? I'm on the pill. Neither of us is a virgin or anything. What is holding us back?\" She wasn't upset, just puzzled at what was going on between us, and kind of good-naturedly so. Her lack of distress, and mine, let me relax enough not to panic.\n\n\"I think...\" I started, then stopped and thought a few more moments. \"No, wait... Um, I think this is all like Christmas morning. Maybe I just don't want to open all the presents all at once.\"\n\n\"I like that,\" replied Steff thoughtfully. \"Yeah, that metaphor works. But, um, how long?\" I just looked at her, utterly unsure myself. \"I mean,\" Steff went on, \"we already are going out again next Friday. Do we build our first bone-jumping into our plans for next week?\" We looked at each other. No. It was clear in both our eyes that that was way longer a time frame than either of us wanted. The silence dragged on.\n\n\"Look,\" said Steff at last. \"Stay here tonight. Sleep here, with me, in my bed. Naked, preferably.\" She pulled me closer to her. \"In the morning, well, what's your line from our scene? 'Trains driving into tunnels'?\"\n\nWe didn't actually go to bed immediately. Steff and Meredith had a Nintendo in their home theater (oh yeah, Steff had a home theater and a pool, and had told me, her good friend, about neither) and we played naked Mario Cart for almost an hour before we finally went up to her bedroom. We did indeed go to bed naked, as Steff had asked, because I'm a good friend like that. Once in bed, we cuddled and fondled and spooned and even kissed some more, but neither of us was used to sleeping in a bed with another person and we separated a little so we would actually be able to fall asleep. Fortunately, Steff has a big bed.\n\nIn the morning, I woke groggily, not quite realizing I was actually awake at first because the bed and surroundings were unfamiliar. I realized what was going on and where I was when I realized that the dreamy ecstasy I was feeling was not a dream, but Steff languorously playing with my morning wood.\n\n\"Good morning, sleepy head,\" purred Steff as my eyes slid open to take in her naked breasts, positioned carefully right in front of my face. As images upon wakening go, I highly recommend that one. \"Your big friend here and I have been playing for almost ten minutes now,\" she purred, still stroking my cock. \"I guess you slept as soundly as I did.\"\n\nI thought back to about four in the morning. I had woken then. The full moon had risen overnight and its silver light was streaming through Steff's gauzy sheer curtains, bathing her body in its light. The sheet had come off of her and her naked torso had gleamed in the moon's shine. I had reached out delicately to caress a nipple and it had quivered under my touch. I hadn't wanted to wake her.",
        "I had just wanted her to shift enough for her godawful loud snoring to stop.\n\n\"Slept like a rock,\" I smiled, leaning forward to kiss that same nipple.\n\n\"Well, you are hard as one, too,\" replied Steff, pulling the sheet off of me to expose said rock hardness. She pushed me flat on my back and climbed astride me. \"And after a night of pleasant dreams and fifteen minutes of playing with your cock while you slept, I am flowing with the need to Finish. Opening. Presents,\" she said firmly, slowly lowering herself onto me so I could feel her steaming wetness against my shaft.\n\n\"Oh God, please,\" I breathed, putting my hands on her bare knees, then sliding them up her legs with my thumbs trailing up the inner curves of her thighs. When my thumbs came together, I let them sink down and into her wetness, each thumb giving her eagerly pert clitoris a stroke.\n\nSteff pushed herself up again onto her knees, gasping at my caress. She reached to lift my cock, nestling its head in her folds. Then she began to sink back down with the most amazingly deliberate slowness I could imagine. Fraction by fraction, I felt her envelop me. Her steaming, sodden insides eagerly resisted my advance, muscles pressing back against my intruder at first, then lasciviously embracing it once it passed. The penetration took forever, and it wasn't nearly long enough.\n\nAt last, Steff rested on me, my cock as deep in her as I had length to reach. She leaned forward and kissed me.\n\nSitting back up, she looked at me and sighed. \"Christ, you feel better inside me than I ever dreamed. And I've been dreaming of this for months.\" I could only groan in total agreement. We lay there like that for a while. Steff was not humping up and down at all, just rocking her hips softly around my nestling cock, I contented myself with idly trailing my fingers over her hips and up to brush her delicious tits.\n\nAnd we talked--I can't remember about what, but it was completely unrelated to sex, and was instead centered on some other of our many shared interests. At last that conversation petered out and there was only my cock, buried in her snatch. It and I were getting impatient.\n\nI reached up and pulled Steff down into a tight embrace and kissed her hard. In mid-kiss, I lifted up and rolled over on top of her, struggling to not let my cock withdraw in the process. With Steff on her back and me atop her, my dick had managed to almost come free, but the head was still in her. I broke off the kiss and looked down at her. \"Time to rock and roll,\" I said intently. Her eyes glittered and she nodded fervently. I smoothly slid myself back into her depths, not fast, but not with anything approaching her initial excruciating slowness either. I slid out just as slowly, and then back in. Each stroke was as long and deep as I could make it, but I also moved faster with each penetration, until I was pistoning in and out of Steff so hard I was breaking a sweat.\n\nSuddenly, I stopped, my glans barely still contained inside her and began a slow series of tiny thrusts, barely more than wiggles, each just barely penetrating her burning entrance. That revved her up to a new level and she struggled back and forth beneath me. \"Oh fuck that's good,\" she grunted, \"but...\" Her hands grasped my ass and sank into my glutes almost painfully deep, and then tugged hard, driving me back, deep inside her. I could not restrain myself from just fucking her hard then, driving my cock in and out of her as hard and deep as I could while she whipped her head back and forth on the bed beneath me.\n\nNeeding more power, I pulled up my knees under me and lifted my hips. Steff grunted, but arched slightly to accommodate my new angle of approach and the new way my dick was stroking her insides met with immediate, voluble approval. She braced herself and groaned, pushing back against my thrusts.\n\nWe both found we loved this juxtaposition, and ground against each other, moaning in concert. I felt a surging in my loins, and since I clearly felt a reciprocal wind up in Steff's, I just rode the wave. Thrust followed thrust, and I let my ecstasy surge upward. A gasp ripped from my lips as I unloaded inside her. I felt the blast of cum rip outward and into her, and her own release surged in answer. She bucked against me and thrashed back and forth, gasping in orgasmic response. We both ultimately froze in an awkward, suspended position as our passion spent itself against one another... and we collapsed, my face smashing down between her breasts.\n\nWe both just lay there, gasping for breath. I took a minute to register that my face was buried between Steff's breasts, but when I did, I rallied enough to open my lips, and take a gleeful suckle. She giggled in response.\n\n\"Ho. Lee. Shit!\" she laughed. She drew a deep, long breath. \"I have fucked before, but you sir, have fucked me more thoroughly than I have ever been fucked before.\"\n\n\"I'm honored,\" I murmured around her pokey nipple between my lips.\n\nThe afterglow was long and pleasant. We lay there and reveled in each other's naked form pressed against the other. At some point, I rolled off Steff and sank into the mattress beside her. Eventually, I summoned the energy somehow to observe, \"I'm glad we waited to open presents until the morning. If I'd been sleepy and drunk, I might not be able to remember the last hour for the rest of my life.\"\n\n\"That's a good point,\" muttered Steff, and I swear she snored again, just little bit."
    ],
    "authorname": "Publius68",
    "tags": [
        "date",
        "improv",
        "friends",
        "road head",
        "blowjob",
        "cunnilingus",
        "friend zone",
        "confusion",
        "college",
        "acting"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/acting-101-ch-01-the-friend-zone"
}