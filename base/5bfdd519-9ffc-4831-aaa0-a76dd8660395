{
    "title": "How I Married a Porn Star Pt. 02",
    "pages": [
        "Author's Note:\n\nThank you to everyone for the kind words and comments you've shown for Part 1 of this story. What follows is Part 2 of what will be a 4-part story. The story is fully written and going through edits now, so it will probably not be too long before the rest is released.\n\nThis part will concern Sean's first day at the convention and the events of that evening. \n\nPlease enjoy!\n\nThursday Morning\n\nI woke up trying to figure out how much of last night had actually happened. I was alone in the bed which initially led me to thinking it was all a dream. I got up to use the bathroom when I saw a note on the hotel stationary.\n\n\"Sean, \n\nI didn't want to wake you while you were sleeping. Last night was awesome and I had such a great time with you! I'll be looking out for you at the booths.\n\nXOXOXOX,\n\nSunny\"\n\nSo much for it being a dream.\n\nI went to the bathroom and took a quick shower. I could actually smell the sex on me and needed to get it off before I saw Chet. Those were not questions I wanted to answer. I dried off and got dressed. Grabbing my wristband, I left and headed across the hall.\n\nIt took a few minutes for me to coax Chet from his room. He was definitely riding a hangover from the looks of him.\n\n\"Dude, I think I drank the world last night,\" he lightly and almost contritely.\n\n\"Hit it a bit hard there?\" I asked knowing the answer.\n\n\"I just downed half a bottle of aspirin. Ugh. But it was awesome!\" Chet said starting to perk up a bit.\n\nWe walked down and got a quick breakfast from the caf\u00e9. We were technically allowed to be at the convention already, but we decided food was more important. That's right, Chet actually gave up porn for food.\n\n\"You should've been there dude, we had so much fuckin' fun. We must've hit up 5 different clubs. Girls were flocking to these guys!\"\n\nThat told me two things: he didn't get laid and I probably shouldn't share too much about my night, especially Sunny.\n\n\"How bout you, man?\" Chet asked, \"what did you get into last night?\"\n\nI had to tell him something but didn't want to share too much.\n\n\"Hung out by the pool mostly,\" I said truthfully.\n\n\"That's cool,\" he said trying to subtly hide the fact he thought it was kinda lame. He looked at his watch and jumped up.\n\n\"Holy shit!\" Chet said louder then he should have, \"we gotta get over there. There's porn in them there hills!!\"\n\nI rolled my eyes and stood up. It wasn't too far really to get to the convention center, easy walking distance. Security quickly saw our credentials and let us in.\n\nThey were still setting some things up and getting people into position. It really was an overwhelming sight. Posters and banners everywhere with people in passionate embrace or women wearing as little as possible, if anything. Chet clapped my shoulders and started jumping up and down.\n\n\"This is the best day of my life!\" he proclaimed still hopping like a monkey.\n\n\"Take it easy, will ya?\" I cautioned, \"you'll get a damn aneurism.\"\n\nIt was no use; his excitement had gotten the better of him. Before I could even say anything more, he was off like a rocket. At that same moment, I got a clap on the back.\n\nI turned and saw Kevin there, smiling.\n\n\"How's it going Sean, my boy?\" grinning wildly.\n\n\"Going good, thanks,\" I answered, \"just got here.\"\n\n\"Well, be sure to look around at everything. Had a couple of people already asking after you. Let me know if you need anything, I'll be around.\" And with a friendly smile, he was off.\n\nI guess the girls last night didn't get so blotto last night that they didn't remember anything at all.\n\nI started walking around slowly, trying to take everything in. With just a casual glance, I could see sex toys, production companies, lube options, Fuck a Fan booths, you name it.\n\nIt was like a giant sea of naughtiness stretched out to oblivion. I could see someone advertising a chair with a dildo that would come through a hole to insert inside someone. The bondage starter kits with dog collars were interesting as were the people modeling them. They invited me to try them out and I politely declined. \n\n\"Sean!\" \n\nI turned and saw Cassandra barreling toward me. She was wearing an almost shirt with hooks straining to keep her tits in there, a skirt that hid nothing and high heels. She gave me a hug and a kiss on the cheek.\n\n\"I looked for you everywhere last night, you just took off,\" she said sadly.\n\n\"I actually had to get Gianna upstairs with Hannah, Nautica & Sunny,\" I explained. \"They were getting ready to kick her out and Nautica stayed with her to make sure she was alright.\"\n\n\"That girl really should be able to hold her liquor better as big as she is,\" Cassandra said rolling her eyes. I laughed, agreeing with her.\n\n\"Last time I saw you, you were making out with someone, so I didn't really wanna bother you.\"\n\n\"Oh!\" Cassandra said seeming to remember what I was talking about, \"that was my friend Ashley,\" she explained. \"We're always doing shit like that.\"\n\nI nodded now understanding.\n\n\"But yeah, I was definitely trying to find you last night. I had a good time with you.\"\n\n\"Me too,\" I concurred.\n\n\"We should definitely do something later,\" she suggested.\n\n\"Yeah, that'd be cool,\" I said with a smile.\n\n\"Give me your phone real quick.\"\n\nI gave my phone and she used it to call herself. She handed it back smiling.\n\n\"See you around. I'll call you when I'm done for the day.\" She gave me another hug, thrusting those jugs toward me and she walked off. I noticed though that she did look back and smile at me as she left. I smiled back and continued on.\n\nPeople were starting to come in now and the place was starting to buzz. Some were just spectators and fans; others were vendors trying to push whatever product. Some were other stars and producers in the industry trying to get noticed. Good rule of thumb was if it was a girl, she did porn of some kind.\n\nBetween the VIP tags I had and the platinum bracelet from the night before, I became a bit popular. Some thought I was a bigwig in the industry who they could suck up to. Some just thought I was a rich guy who had cash to burn. Whichever it really was, I had more than a couple of girls offer to \"show\" me why they should be the next Jenna Jameson. I politely declined their offers.\n\nI continued on my trek, one person showing me a VR headset that made POV porn really POV. It was interesting and a bit freaky. Seemed like in the wrong hands, you could really lose yourself in it. He wanted to sell me the system, but I again politely declined.\n\nI kept walking and suddenly I heard someone shouting my name.\n\n\"SEAN!\" came the voice while I was trying to place it. I turned to find the source and it didn't take long.\n\n\"Come over here, fucker!\" came the booming voice of Gianna, clearly over her drinking adventure from yesterday. I waved at her and headed over to her. She was wearing a tight, barely-there white t-shirt and short shorts that did very little to hide anything.\n\nI noticed a very sudden change from when I first met her yesterday when she was standoffish a bit and not very effusive. She immediately grabbed and pulled me into a hug, sinking her curves into my body.\n\n\"I see you're feeling better?\" noticing that she didn't even seem to have a fraction of a hangover.\n\n\"Fuck, yeah,\" she said proudly, \"Ain't gonna get this bitch down,\" she said almost giggling. I smiled and nodded knowing she was probably right. \"Nautica told me you got me outta there last night when security was coming for me,\" she said.\n\n\"We all helped,\" I admitted, \"Hannah, Sunny, Nautica & Roxy all pitched in.\"\n\n\"Still, thank you. That was really looking out,\" she said earnestly. So earnestly it almost took my breath away.\n\n\"Anytime,\" I told her, \"partiers gotta stick together.\"\n\n\"Goddamn right!\" Gianna declared. \"What are you getting into later?\"\n\n\"Don't know yet really,\" I told her honestly, \"I saw Cassandra before, and she said she would be down for something later.\"\n\n\"Perfect!\" Gianna proclaimed. \"That's my boo! Here, give me your phone.\"\n\nI gave her my phone and she called herself.\n\n\"Hit me up when you know what's going down,\" she asked.\n\n\"You got it,\" I told her. \"Bring you're A-game, your liver, and of course...\" clearly indicating her breasts. She laughed out loud at that.\n\n\"Always, brother, always!\"\n\nShe gave me a high-five and headed off again to her adoring fans.\n\nShe didn't do the look back like Cassandra did, just declared to anyone who was listening... \"That's my boy over there!\"\n\nI threw a wave and was on my way again. \n\nI found a beer vendor and decided I was thirsty. I went over and got a Bud. I tried to pay for it, but apparently one of the VIP things or the bracelet gave me free beer. I thanked the vendor and moved on beer in hand.\n\nI kept making my way through the growing crowds, trying to get a look at some of the more vacant booths and not the ones with heavy traffic. However, people saw my VIP tags and had to drag me over. Movies, photos, novelty items. I stated getting bags of freebies, wanted and unwanted. It was getting slightly embarrassing.\n\nThat was until I got sight of Chet. He had so many bags, you'd think he'd raided every booth twice. He got sight of me and just waved them in the air.\n\n\"Putting these in my room, dude!\" he shouted at me. \"Need to hit up more places!!\" With that, he was off. I rolled my eyes and continued on my trek.\n\nI eventually saw Tera's booth. It was big and ornate, I had to admit. Evan was there, looking like he had all the attention to himself. Tera looked bored and almost fed up. That's when she got sight of me. She crooked her head and suddenly recognized me.\n\n\"Hey,\" she called over to me, using her arms asking me to come closer. She ushered me to behind the booth. \"You're Sara's friend from last night, right?\" Tera asked.\n\n\"Yeah,\" I admitted, \"nice to see you again.\" She smiled.\n\n\"You, too. Sean, right?\" she asked. I nodded in reply. We shook hands, seeming a lot friendlier than last night. \"I'm so sorry about last night,\" she pressed, \"I bet I seemed kinda bitchy, huh?\" I shook my head, politely.\n\n\"No, not at all,\" I said, trying to sound convincing.\n\n\"No, I was,\" Tera admitted. \"I was in a really bad mood and seeing Gianna normally doesn't help. I'm also sorry about pulling Sara away. Evan insisted we talk to her about a shoot he wants to do.\" It seemed like there was more to the story, but she didn't share.\n\n\"Sara must've spent most of the rest of the party looking for you,\" she added. That made me feel horrible.\n\n\"I'm sorry about that. I was helping Gianna get back to the room with others and I wanted to make sure she was ok before security got her.\"\n\n\"I can understand that,\" Tera said with a smile. \"It was a sweet thing to do, even if it was for her. I can see why Sara likes you.\" Nice thing to say, but what was this thing with Gianna?\n\n\"Thanks for that,\" I said. \"If it's not too personal,\" I began softly, \"what's the deal between you and Gianna?\"\n\nShe took a deep breath and took a seat on a pile of boxes.\n\n\"She spread rumors after she did a shoot for our company,\" she explained. \"She said that Evan was drugging women during shoots to make them more compliant. Its complete bullshit! I would never do anything like that to anyone and anyone who thinks I would can lick my ass!\"\n\nI took this in and came up with the only response I had.\n\n\"She'd probably do it too.\" She burst out laughing at this. She was a beautiful woman already but laughing always helps.\n\n\"God, that's so true,\" she said wiping tears from her laughter.\n\n\"Nice to see you smiling,\" I retorted. She smiled again.\n\n\"Yeah, I haven't done that too often lately,\" she admitted. \"Stress tends to do that.\"\n\n\"It can, yeah,\" I said trying to be soothing. I also felt I was intruding. I was about to do my goodbyes, but she kept going.\n\n\"It's not easy being married to someone who every time you have a fight feels obligated to remind you that you fuck people for a living,\" she said seeming sadder. \n\n\"But doesn't Evan do the same thing?\" I asked. I figured she'd shared so I was in it now. She just shrugged.\n\n\"Yeah,\" she admitted, \"but he thinks it's different. He thinks when he does it, it's for 'building the company', but come on,\" she added rolling her eyes. \"He really is an asshole sometimes,\" she added rolling her eyes. It was pretty clear this was a major source of friction between them.\n\n\"Doesn't sound like it makes for a very healthy relationship,\" I replied.\n\n\"No, but those aren't easy in this business anyway. Insecurities fly all over the place, jealousy, whatever. Evan's just...\"\n\n\"An asshole?\" I added softly. She burst out laughing again. This time getting the attention of Evan.\n\n\"Babe, get out here,\" he said, \"got people waiting!\"\n\n\"I better go,\" she said as I helped her up. She turned back and looked at me.\n\n\"Thanks for the talk, Sean. Most people just stare at my tits.\" I smiled at that.\n\n\"Who says you can't do both?\" I added with a wink as I left. I could hear her snort again.\n\nI continued walking around as I left Tera's back area. I could see Chet in line to get his stuff signed. He looked at me and smiled.\n\n\"Tera fucking Patrick, man!\" he said excitedly. \"Want me to get her to sign anything?\"\n\n\"No, I'm good,\" I replied not letting on about my previous encounters.\n\n\"Hey, the boys wanna head out later. It's gonna be epic! You in?\" I remembered that Cassandra and Gianna wanted to do something later and probably would be pissed if Chet got involved.\n\n\"I'll let you know,\" I said with a smile. \"Got some irons in the fire.\"\n\n\"Your loss, dude!\" as he returned to the line.\n\nI went on my merry way. As long as Chet was occupied by the male stars, why let him know what I was up to and creep out the women?\n\nI continued on my way through the sea of sex. You could hear orgasms on video, whips being tested everywhere. The overload was starting up again, so I made my way to the food area.\n\nAs I entered, a gentleman in a suit gestured for my attention.\n\n\"Sir, the VIP lounge is actually over there,\" pointing to another tented area inside the massive center. I thanked him and headed over there. The security guy there only needed the smallest glance at my bracelet or tags and immediately let me in.\n\nIt certainly was swankier than the food court. Free drinks and way better food. I smiled knowing that I found my new spot. Whenever it got to be too much out there, this was my new home base.\n\nI smiled and went over to the bar.\n\n\"How can I help you, sir?\" the bartender asked.\n\n\"Whisky and ginger, thank you,\" I ordered. He made it very quick. \"Any chance I could order some food from you, sir?\" I asked him. He looked at me strangely for a second, but then smiled.\n\n\"Absolutely sir, what can I get you?\"\n\nI ordered a steak sandwich with fries, and he took the order dutifully. He was still looking at me a bit funny.\n\n\"Anything wrong?\" I asked him.\n\n\"No,\" he said smiling, \"your just one of the only people that was actually polite. Most of these guys are too stuck up to use words like \"please\" and \"thank you,\"\" he offered quietly. I smiled at that.\n\n\"I can imagine,\" I said nodding at him.\n\n\"Oh we're not all so bad,\" a man said coming up behind me. The bartender smiled at him and nodded.\n\n\"That's true, Mr. Sims,\" the bartender said laughing. \"Another?\"\n\n\"Thanks, Petey and another for this gentleman,\" he said extending his hand to me. \"Arthur Sims.\"\n\n\"Sean Cohan,\" I greeted the gentleman warmly.\n\n\"You one of the bigwigs of the business here?\" he asked in a surprising tone. \"You seem a bit young, unless you're a performer.\"\n\nI smirked at the comment, knowing it was probably true.\n\n\"I got VIP access with a friend of mine in some contest he won,\" I explained.\n\n\"And the bracelet?\" he said pointing at my wrist.\n\n\"Oh, a man with the convention gave me this last night. Kevin Snyder.\"\n\nAs soon as I said Kevin's name, his eyes got wide.\n\n\"You know Kevin?\" he said happily. I nodded as I was taking a sip of my drink. \"Well, then welcome to my hotel and convention center!\"\n\n\"You're the owner?\" I asked dumbly.\n\n\"Chairman and CEO,\" he said in confirmation.\n\n\"Well, thank you very much, sir. The hotel is wonderful. You should be very proud.\"\n\n\"Thank you,\" he replied, \"I and many others worked hard to make it so.\"\n\n\"It shows,\" I replied.\n\nAt that moment, our food arrived. Mr. Sims invited me to sit with him, which I did.\n\n\"So what do you do, Mr. Cohan?\" Mr. Sims asked.\n\n\"I'm a senior at NAU graduating soon.\"\n\n\"Oh, really?\" he said in surprise, \"I went there myself.\"\n\n\"Oh wow,\" I said in surprise.\n\nWe talked a bit about the campus, asking if some things were still there. Comparing notes about various hangouts, sororities, and whatnot.\n\n\"So what are you graduating in?\" Arthur asked, after insisting I call him that.\n\n\"Computer Science,\" I answered having a bite of my delicious sandwich.\n\nI noticed his interest actually went up when I said this, unlike when I told most people.\n\n\"Really?\" he said almost gleefully, \"what are your specialties?\"\n\nI ran Arthur through the list that I had given the girls last night largely. I also mentioned cybersecurity.\n\n\"You do cybersecurity too?\" he asked. I told him yes. \"Wow, that's pretty impressive,\" he said admiringly. \"What kind of GPA do you pull?\"\n\n\"I'll graduate Summa Cum Laude,\" I said with as little ego as possible. I could tell just by the look on his face, he was doing some thinking.\n\n\"I'll tell you what,\" he said digging into his pocket and getting a piece of paper, \"are you available for lunch tomorrow?\"\n\n\"I don't have any plans,\" I told him honestly. He started writing down on the paper.\n\n\"Let's have lunch together,\" handing me the paper, \"at one o'clock tomorrow. Just meet me here,\" indicating the location on the paper.\n\n\"I'd be honored, sir,\" I replied.\n\n\"Well as much as I'd stay to enjoy the scenery,\" he said as he stood. I stood and shook his hand.\n\n\"Well, it was a pleasure to meet you,\" I told him smiling.\n\n\"You too, Sean,\" he said as he turned to leave. He then spun around back to me.\n\n\"You should try the Italian restaurant at the hotel tonight. Just give 'em your name when you get there.\"\n\n\"I will, thank you,\" I said earnestly.\n\nHe smiled and immediately started talking into his cell. I could've sworn I heard my name in his call but dismissed it.\n\nI finished my sandwich and ordered a drink for the road. I wasn't sure they'd let me, but Petey had my back. Plastic cups are amazing things. I left him a healthy tip, at least healthy for my budget since he said he was working every day of the convention.\n\nI headed back out onto the main floor again, feeling reinvigorated. It was still crazy out there, but a full stomach and a few drinks definitely helped. It certainly let me handle a bondage couple dressed head to toe in black vinyl with a leash and collar. For the life of me, I couldn't tell the gender of either party. I quietly walked as far as possible as quickly as possible.\n\nI then saw a friendly face in Hannah. She was at the Girls Gone Wild booth, and she smiled and waved. I could tell she couldn't talk then so I let her be.\n\nI kept walking and found the Naughty America table. There was a very big crowd around it, and I could see several stars that I actually recognized. Among them was Sara.\n\nI really didn't know if she would be pissed at me for seeming to leave her last night. I had my answer quickly cause she saw me. The look on her face was certainly not one of anger.\n\nShe jumped up really quick, her boobs flying as she did in her Naughty America wife beater t-shirt. She then flung her arms around me. I returned the hug somewhat surprised.\n\n\"I was wondering where you got to,\" Sara said, \"I had so much fun with you and the girls last night!\"\n\n\"Me too,\" I told her letting her go from the hug. \"I'm really sorry I lost track of you last night. Gianna got trashed and I had to help get her outta there.\"",
        "She just kept smiling.\n\n\"I heard about that from Nautica,\" pointing over to her at the booth. Nautica was swamped with people but did look over and wave 'hi', smiling. \"It was really cool of you guys to do that for her.\"\n\n\"I was just sorry I left you hanging with Tera and Evan,\" I admitted.\n\nSara kinda rolled her eyes.\n\n\"Yeah, they can be a lot,\" she admitted. \"But it was honestly fine. They wanted to talk to me about some shoots and Evan wanted a 'private' shoot,\" she said using her fingers for the air quotes. I raised an eyebrow at that, and Sara could tell I wasn't sure what she meant.\n\n\"He wanted a threesome with me and Tera,\" she explained.\n\n\"He really is a creep, isn't he?\" I ventured.\n\n\"Oh, yeah,\" Sara replied, \"you have no idea.\"\n\nI shrugged a little.\n\n\"Some,\" I admitted, \"I ran into Tera before, and we talked.\" Her eyes betrayed the fact that she was clearly surprised at that. \"Yeah, I bumped into her, and we talked for a bit,\" I told her. \"She told me a bit about Evan and her beef with Gianna.\"\n\nSara nodded, clearly knowing what I was talking about.\n\n\"I've talked to both of them about that. It wouldn't surprise me if that was true that Evan did that, but I have a hard time believing that Tera knew. She's too fuckin smart for that.\"\n\nThe logic was undeniable and probably made the most sense. Sara got me back to into focus.\n\n\"So what are you up to later?\" she asked.\n\n\"Not sure,\" I told her, \"Cassandra and Gianna both said they wanted to do something later and I have a line on the Italian restaurant in the hotel.\"\n\nHer eyes lit up at that.\n\n\"I love Italian!\" Sara exclaimed. \"We should totally go. I'll let Nautica know and see if anyone else is in. You hit up Cass and Gianna, ok?\"\n\nWe agreed on 7:30 meet up there and we exchanged numbers. She gave me another hug as she went back to her booth waiving at me as I left. \n\nI passed a booth with a jungle vibe next. Tarzan and Jane type stuff. Lots of swinging and vine shaped dildos. To each their own, I guess. I then passed by some more booths and noticed some of the brothels were also doing booths. I guess they figure they could do some recruitment. I came saw the \"world\" famous Bunny Ranch booth with a few girls there including a familiar face. She instantly came bouncing up to me.\n\n\"Hey, you,\" Sunny said seductively giving me a hug and a kiss.\n\n\"Hey, how's it going?\" I asked.\n\n\"Great so far,\" she said. \"I've gone to a few different booths to help out and now I'm pitching in for Dennis.\"\n\n\"Cool,\" was about the only thing I could think to say.\n\n\"I had a really good time last night,\" she made clear with a smile. I returned it.\n\n\"Me too.\"\n\n\"Have you seen anyone else today?\" she asked. I ran through who I'd seen today and where I'd been.\n\n\"Did you tell anyone about last night?\" Sunny asked clearly referring to the bedroom activities.\n\n\"A gentleman doesn't tell,\" I said confidently. Her face sank a bit which is what I wasn't expecting.\n\n\"Fuck!\" she said a little louder than maybe she should've. \"I kinda wanted to make 'em jealous.\"\n\nI just kinda shrugged my shoulders at her which made her grin.\n\n\"I always err on the side of discretion.\"\n\nShe nodded her head at that.\n\n\"I get it,\" she admitted. \"I'll drop it on 'em and see their faces!\"\n\nI probably could've objected, but I figured it really wasn't my place. A big burly man now approached us. I could take a couple of guesses as to who this was.\n\n\"What's going on over here?\" he asked with a smile toward everyone.\n\n\"Dennis, this is my friend Sean. Sean, Dennis Hof.\"\n\nThe famous owner of the Bunny Ranch. I had seen some of his reality show \"Cathouse\" on HBO.\n\n\"Very nice to meet you,\" I said taking his hand.\n\n\"You as well, Sean,\" he replied giving me a firm handshake. \"How do you know our favorite Sunny here? Made a visit to the ranch?\"\n\nI had known before all this that Sunny had done work there, so this didn't throw me. Before I could answer, Sunny did.\n\n\"No, he's a friend of Kevin's and we met through him.\"\n\n\"Oh, wonderful,\" Dennis said with a smile. You could tell he was a salesman from his approach. \"Enjoying the convention?\"\n\n\"I am, thank you. It can get a little overwhelming at times though,\" I told him honestly.\n\n\"I can see that,\" Dennis admitted, \"that's why when we have guests come to the ranch, we get them over to the bar so they can get their senses before making any decisions.\"\n\n\"Wise move,\" was the only response I could offer.\n\n\"You should see some people vapor lock when they come in and see all the beautiful ladies,\" he said with pride. I nodded in response.\n\n\"Seems like a pretty natural reaction,\" I told him. \"Doubt I'd be any different.\"\n\nDennis smiled at that. It was the hook he was looking for.\n\n\"Well you should come see us sometime!\" he said while handling me some promos, freebies, etc. \"I'll promise you it'll be an experience you'll never forget!\"\n\n\"I agree,\" Sunny said, \"but mostly because Sean will show the girls a real good time!\" she added with a wink. Dennis looked at me with a fair share of surprise and admiration.\n\n\"I have no doubt,\" Dennis added. \"Nice meeting you, Sean,\" he said with a smile and another handshake.\n\n\"You as well, sir.\" Dennis then went back to his booth and his girls.\n\n\"He can be a lot,\" Sunny said after Dennis was out of earshot, \"but he's really a good guy.\" I nodded again at the comment.\n\n\"I talked with some of the girls and were gonna hit up the Italian restaurant in the hotel tonight if you wanna go.\"\n\n\"Ooh, that sounds really good,\" she said. I gave her the time we were meeting, and she said she would see us there. I gave her a kiss on the cheek and went on my way.\n\nI took a look at my watch and saw it was already 5:30. I made my way out of the convention area and back over to the hotel. I grabbed a free drink at the bar with my bracelet and headed upstairs, sending messages to Gianna and Cassandra en-route. Both replied that they would be there.\n\nI grabbed a shower, shaved up, and relaxed a bit. It'd had been a fun day but tiring. I suddenly got a knock on the door.\n\n\"Bro!\" was the welcome I got from Chet when I opened the door. \"This was epic! I got so much free shit.\"\n\nHe then came in and saw my haul.\n\n\"Dude, you got nice stuff too! Well done!\"\n\n\"Thanks,\" was my only reply.\n\n\"Me and the guys are gonna hit up a few bangin' clubs and grab some sushi. You in?\"\n\nChet knew I hated sushi, so this was a clear indication to me that he really didn't want me to join him. As I really didn't want him to join me, I really didn't take any offence to it.\n\n\"Nah, I got my own thing tonight, so you have fun, man.\" He did not seem hurt.\n\n\"Alright, brother. You go out and get some!!\" he said fist pumping his way out the door.\n\nI rolled my eyes again as I went back to rest. I set an alarm for 7 just in case I fell asleep. I beat the alarm by a few minutes and started getting dressed. I tried to look nice and casual all at once with a sport coat. I gave myself a once over and approved. I put a few condoms in my wallet just in case and headed out.\n\nI got down to the main floor and headed over to the restaurant. I really don't know what it was, if it was my clothes or my demeanor, but more women were starting to look my way then I had ever encountered before.\n\nI arrived at the restaurant and found Cassandra already there. Man, was she dressed to kill. It was elegant & sexy; showing enough cleavage to be alluring, but just shy of slutty. She smiled instantly when she saw me.\n\n\"You look good,\" was Cassandra's only comment to me when I arrived. She was smiling pretty wide.\n\n\"I have to keep up with you,\" I said both flirtatiously and honestly. She giggled and grinned and hooked herself under my arm.\n\n\"Hey guys,\" was Nautica's greeting upon seeing us. She was dressed sexy as well and gave us both a kiss on the cheek.\n\n\"You look great!\" Cassandra ventured. I just nodded in concordance. She smiled and flaunted a bit causing us both to smile.\n\n\"There's my bitches!\" was Gianna's reaction to seeing us there. As per usual, her fashion was a bit bolder. Not exactly inappropriate, but her tits were out for all to see in that top. We all gave her a hug as she settled in with us.\n\nI was about to go to the host, when Sara showed up. My jaw was on the floor. She was gorgeous. Showing off what she had, but with absolute class. She was dressed to impress and succeeded. She said hi to everyone and gave me a tight hug.\n\n\"You look great,\" she told me after the hug. \"I invited a couple of friends if that's ok.\" I nodded not thinking much of it. I decided I should now get a table and went to the host.\n\n\"Hello, can we get a table?\" I asked.\n\n\"We're very busy, sir,\" the host answered dismissively. \"I'll put you on the list, what's your name?\"\n\n\"Sean Cohen.\"\n\nThe host immediately looked up at me, almost frightened. He looked down at his papers and then looked even more freaked out.\n\n\"Mr. Cohen!\" he said apologetically and quickly. \"I'm so sorry, sir. We have a room we can put your party in right away. Service!!\"\n\nA woman then came up to the stand fast.\n\n\"Take Mr. Cohen's party to their dining area as soon as possible,\" the host said trying not to sound panicked and failing. I gathered everyone together to head in.\n\n\"Oh,\" I told the host, \"we have a few more people who will be joining us? If it's not any trouble, could you make sure they find us?\"\n\n\"Of course, sir!\" he said quick and resolutely. \"I will ensure they join you.\"\n\n\"Thank you, sir,\" I answered while escorting Cassandra & Sara on each arm and everyone else following behind. We made quite a convoy heading into the restaurant, me with a girl on each arm and beautiful women following suit. It may have been one of the most badass moments in my life.\n\nWe were taken into our own dining room with a server just for us. It felt pretty swanky.\n\n\"This is awesome!\" Cassandra exclaimed taking a seat next to me.\n\n\"Fuckin' right!\" Gianna added, \"who'd you have to blow to get this shit?\"\n\n\"No one yet,\" I answered, \"I met a guy earlier today who offered to set me up tonight.\"\n\n\"Nice friend,\" Sara said, taking the seat next to me.\n\n\"Hey everybody!\" was Sunny's reaction to entering the room. She gave me a kiss on the cheek and sat down. She kept smiling and looking at me. Roxy, having heard from Gianna about the evening, was right behind her and she was wearing a dress that was barely there. The pieces of fabric that were covering her naughty bits were threadbare.\n\n\"Hey, the gang's all here,\" was Roxy's response to the gathering. She kissed up with everyone and took a seat. I suddenly was very aware of the fact that I was alone with a table of beautiful adult entertainers by myself. If Chet was there, it would've been nonstop pussy and ass talk. But here, they all seemed to feel safe with me.\n\n\"What's up?\" said another girl peeking her head in. Nautica jumped up to greet her.\n\n\"Hey!\" Nautica said embracing the other girl. I thought I recognized her, but it was hard to tell.\n\n\"You guys all know Sasha, right?\" Nautica said as people started greeting her. Cassandra also jumped up to greet her.\n\n\"Have you met our friend, Sean?\" Cassandra said introducing me.\n\n\"No, it's nice to meet you,\" she said as I rose to greet her. \"Nautica told me nice things about you coming to drunk-ass's rescue last night,\" clearly indicating Gianna.\n\n\"Hey! Fuck off!\" Gianna said both laughingly and mockingly hurt.\n\nSasha smiled nicely at me. I now recognized her as Sasha Knox. She was known for her pretty face, perky C-cups and an onion booty that would make any man cry. She took a seat over near Nautica.\n\nThe server was about to take our orders and Sunny spoke up.\n\n\"I invited the Kline's. Should we wait to order?\"\n\nI wasn't sure who the Kline's were, but everyone agreed we could get some wine for the table and wait. We ordered some red and white wine for the table and started to peruse the menu. Suddenly a couple came into our dining room.\n\nThe man looked a bit older that the woman. As soon as I saw the woman, I instantly recognized her as Kelly Kline. She was known for her beyond tight body and performing with her husband. I now realized that was the other gentleman. Sunny got up and greeted them and a few others did as well.\n\n\"You must be Sean,\" the gentleman said presenting his hand to mine. \"I'm Richard and this is my wife Kelly.\"\n\n\"Pleasure to meet you both,\" I greeted them warmly. They took seats over near Sunny.\n\n\"So is this the guy you hooked up with last night?\" Kelly asked Sunny loud enough so everyone could hear.\n\nShit!\n\nSudden oohs and looks came from all sides. The cat was out of the bag now. Sunny raised her arms sort of in victory. I noticed that Cassandra and Sara both turned to look at me pretty quick.\n\n\"Baller!\" was Gianna's reaction laughing as I comically adjusted my collar. I could feel my face getting flush at this. Cassandra leaned into me to whisper in my ear.\n\n\"I knew I shouldn't've lost sight of you last night.\"\n\nMy eyebrows raised and my dick stirred. Sara then asked a question I would've expected from Gianna.\n\n\"So, how was he?\" she asked Sunny while putting her hand softly on my thigh.\n\n\"I gotta say,\" Sunny said smiling while seeming to be replaying last night in her head, \"it was fuckin' good!\" \n\nGianna just looked at me with an eyebrow raised, seeming to be impressed. Nautica just gave me a sly grin as she stared at me with those dark eyes. Sara squeezed my thigh a little more as if to say, \"well done or hey there\". I looked over at Cassandra expecting to see disappointment or something along those lines.\n\nCassandra was definitely looking at me, but with what looked like pure lust. Apparently, having sex with Sunny and showing her a \"good time\" had upped my dick stock.\n\nWe all settled down to order. I ordered a lasagna as others ordered a variety of things. Once the orders were in, Kelly looked over at me.\n\n\"So, you're not in the industry?\" she asked probably already knowing the answer.\n\n\"Nope, just a simple college student,\" I answered honestly.\n\n\"Yeah,\" Gianna said, \"that can apparently pound like a rock star!\"\n\nEveryone giggled and laughed as I tried to appear as humble as I could.\n\n\"Maybe you should give the business a try,\" Richard said smiling at me.\n\n\"It's good to have a backup plan,\" I said smiling as everyone seemed to laugh.\n\n\"It's worked for us,\" Kelly said rubbing her husband's shoulders. It seemed weird to me that a married couple was happy to be in this business, but to each their own.\n\n\"So, I heard you met Dennis today,\" Sasha said to me. I nodded in response. \"What did you think?\"\n\n\"He seemed nice,\" I said honestly. \"You could also tell he was a consummate salesman.\"\n\nSunny just nodded in response hearing this.\n\n\"That is definitely true. Guess you have to be in his place.\"\n\nMy mind went to just one place.\n\nGlorified pimp.\n\n\"He's been trying to get me to go to the ranch,\" Sasha admitted.\n\n\"Fuck that noise!\" Gianna said. \"You can get more money doing featured dancing at a club then that fuck offers.\" Sasha nodded taking that in the advice. It seemed like most of the rest of the table agreed. Sunny just stayed very silent.\n\n\"You've doing some feature dancing?\" Sara asked Gianna.\n\n\"Off and on,\" she said. \"Gets me a little vacation money if I need it.\"\n\n\"I dunno,\" Sara said. \"Not really sure it's my thing.\"\n\n\"Yeah,\" Cassandra admitted. \"Not sure it's really my thing either.\"\n\n\"Whatever,\" Gianna said shrugging, \"more money for moi!\"\n\nAbout that time, food arrived. It all looked and smelled great. Another gentleman came in as I and the others started taking our first bite. He came over straight to me.\n\n\"Mr. Cohen?\" he asked. I nodded as my mouth was still full.\n\n\"I'm Andre, the manager,\" he said introducing himself. \n\n\"Oh, hello,\" I said standing up to greet him.\n\n\"Mr. Sims wanted me to make sure that your party was happy with the meal.\" This got the attention of a few people around the table who recognized the name.\n\n\"Everything is wonderful, thank you,\" I answered. \"The food and service have been excellent!\"\n\n\"I'm glad to hear it!\" Andre answered happily. \"Mr. Sims wanted to make sure you enjoyed yourself. The meal for your group is on us tonight. I hope you all enjoy yourselves!\" He shook my hand again and left. I sat back down and noticed more than a few people looking at me.\n\n\"You know Arthur Sims?\" Richard asked.\n\n\"Who's he?\" Sasha asked.\n\n\"He owns the hotel,\" Sara explained. Everyone else suddenly had their attention now squarely on me.\n\n\"How the fuck do you know him?\" Gianna asked louder maybe then she should've.\n\n\"We met earlier and talked a bit,\" I said trying not to tell too much.\n\n\"Must've been some talk,\" Kelly said continuing to eat. I kept quiet.\n\n\"You're getting to be quite popular in this town,\" Cassandra said sweetly and cutely. She grinned and kept eating.\n\nThe food was phenomenal, and everyone seemed to be enjoying it. The vibe seemed very friendly all around. It was weird the think these were all strangers 24 hours ago.\n\n\"So, what are we doing tonight?\" Nautica asked after finishing up her meal.\n\n\"Oh, I know!\" Gianna said which made all of turn. \"Kelly's got a thing going at Rhino. Let me call her and see if we can get a hookup.\"\n\nI was certainly confused as I quickly realized he wasn't talking about the Kelly that was sitting there with us.\n\n\"What do you think, Sean?\" Sara asked getting closer to me. \"Wanna come to the club with us?\"\n\n\"Sure,\" I answered, \"sounds like fun.\" A party at a club with adult stars? I'm not an idiot. In all honesty I wasn't really a \"club\" guy, but if I got to hang with sexy women, why not?\n\n\"Fuck yeah!\" Gianna said into her phone. \"Have it pick us up in twenty. You're the best, bitch!\" she proclaimed as she hung up the phone.\n\n\"Good news?\" Cassandra asked.\n\n\"Hell yeah!\" Gianna answered. \"Were getting a limo ride there, comps, and funny money all around. Just mentioning we were all here together was enough. This is gonna be the shit!\"\n\n\"Wanna go, babe?\" I heard Richard ask Kelly.\n\n\"Yeah, it sounds fun,\" Kelly replied with a big smile.\n\n\"All right, let's hit it!\" Gianna said as we were getting ready to leave. I then put a fat tip on the table to thank everyone for the service.\n\n\"That's really nice,\" Cassandra mentioned, apparently seeing what I'd done.\n\n\"Well we are getting the food for free,\" I mentioned, \"seemed like good form.\"\n\n\"That's a good idea,\" Richard said and also threw down some money. Then everyone else seemed to follow suit. Even Gianna which surprised me. We then proceeded out. It still felt pretty good walking out of the restaurant with all of these beautiful women. I found that Cassandra and Sara got back on my arms pretty quick. And I noticed that Nautica and Sasha were staying pretty close to me too.\n\nWe headed into the lobby area and people were definitely looking our way. It's not that the girls looked skanky or slutty. Well, maybe Roxy to an extent, but everyone else looked clean cut enough. Just the amount of beautiful women all in one place. Me walking with them with two on my arm certainly didn't hurt my reputation any.\n\nWe made it to the front and a valet asked us if we had a car waiting. I told him that we had a limo coming and the guy immediately backed off. I also saw that he had seen the bracelet.\n\nA big, oversized limo with Spearmint Rhino emblazoned on it pulled up. Two women who looked like strippers then stepped out and escorted us into the car. It suddenly hit me what kind of club it was we were going to. I suddenly felt very devoid of singles.\n\nThere was champagne on ice in the limo waiting. Party music thumping. We all grabbed a seat as able. For a second, I thought some of the girls were all trying to sit closer to me, but I tried to ignore it. Once everyone was in the two girls both tried to sit near Richard and me. The other girls in the car weren't having it and we took off.",
        "The screens were all showing scantily clad women dancing on the screen. Clearly this limo was a promo for people. This time it was Gianna's intervention that led to this treatment.\n\n\"Hey, let's have a toast to Gianna for arranging this,\" I declared. Everyone agreed and raised a glass\n\n\"To Gianna,\" came from all around the car. Gianna for her part just raised her glass and giggled a bit.\n\n\"All hail me, motherfuckers!\" Gianna shouted out as she chugged her glass. I noticed Sara rubbing my leg a bit. I looked up at her smiling at me.\n\n\"This is nice, huh?\" she asked.\n\n\"Quite a ride,\" I said taking another sip of champagne. She just kept smiling as we rode along.\n\n\"I've never been in a limo before,\" was Sasha's reaction to the ride. She looked over at me. \"Have you?\"\n\n\"Once or twice,\" I admitted with prom, weddings, and other things. Sasha just smiled at me. All this female attention was starting to screw with my head a bit. I knew it wouldn't last much longer, only a couple of days, but man it really felt overwhelming.\n\nThe limo eventually pulled up to the Spearmint Rhino and as I had come to suspect, it was a strip club. It looked like the place had been rented out for a private party, but I guess that's where Gianna's connection came in. We all filtered out of the limo and were ushered inside. \n\nThe lobby area at least seemed pretty classy. No velvet or anything like that. One of the girls that was in the car with us then turned to another gentleman to get his attention. I was a little surprised when I saw who it was, and he saw me.\n\n\"Sean!\" was Kevin's immediate reaction to seeing me. I quickly shook his hand, greeting him.\n\n\"Good to see you,\" I said smiling.\n\n\"You too!\" he said smiling. \"I was just talking to someone about you. I'm glad everyone was able to make it. Brandi, would you set all them up for whatever they need please?\"\n\nOne of the female escorts, who I now assumed was named Brandi, began to do just that.\n\n\"Sean, let me borrow you for a minute. There's someone I want you to meet,\" he said with his arm outstretched to indicate direction.\n\n\"I'll see you guys in a bit,\" I said to really anyone who was listening.\n\n\"Don't leave us hanging,\" Cassandra said somewhat sultry as she planted a kiss on my cheek. I nodded at her in an assuring way. The group was ushered inside, and I went with Kevin.\n\nKevin and I went into what looked like a business office around the back of the place. We went into an office where there was a gentleman sitting.\n\n\"Allen?\" Kevin said.\n\nThe gentleman turned to look at us smiling.\n\n\"Hey Kev!\" he said in response.\n\n\"This is the guy I was telling you about,\" indicating me. \"Sean Cohen, meet Allen Testaverde, owner of this fine establishment.\"\n\n\"Nice to meet you, Sean,\" the man said extending his hand warmly.\n\n\"You as well, sir,\" I said returning his greeting.\n\n\"What do you think of my club?\" Allen asked in a friendly manner. Kevin stepped into this one.\n\n\"I actually grabbed him in the lobby, so he hasn't been inside yet.\"\n\n\"Oh Jesus,\" he said with a surprised. \"Kevin was eager, wasn't he?\" he said laughingly.\n\n\"It happens to all of us,\" I said with a smile. The other two gentleman laughed.\n\n\"Well I'm sure you'll love it,\" Allen said confidently. He then went into his drawer and pulled out a rubber wristband.\n\n\"Here, you take that,\" Allen said pushing it toward me smiling.\n\n\"Oh, thank you sir,\" I said taking it not knowing what it was for.\n\n\"No problem,\" Allen said almost dismissively as if it meant nothing to him. \"How are you enjoying Vegas?\"\n\n\"Well, I'd have a hard time complaining about the wonderful experience, people, and sights I've been exposed to so far. But I'm sure I could come up with something if you were to push me.\"\n\nAllen laughed so hard at that I thought he was gonna have snot shooting out of his nose.\n\n\"Damn!\" he exclaimed looking at Kevin, \"you told me he was funny!\"\n\nI just kinda shrugged my shoulders humbly.\n\n\"On occasion and usually when I shouldn't be,\" I answered pretty honestly.\n\n\"Well, it's been great meeting you,\" Allen said shaking my hand to bring the meeting to an end. \"Be sure to swing by anytime.\"\n\n\"Thank you, sir,\" I said in return, \"it's been a pleasure.\" With that, Kevin and I both left Allen's office.\n\nKevin stopped for a second as we were walking.\n\n\"He normally doesn't take to new people very much,\" Kevin admitted. \"Takes quite a bit.\"\n\nI just sort of nodded at the comment, not really knowing what I could add to the subject.\n\n\"I heard you met a friend of mine earlier, Arthur?\" Kevin asked.\n\n\"Yeah I did,\" I told him. \"We met at the VIP tent at the convention.\"\n\n\"Nice,\" he said softly, \"he's a smart damn guy. I hope you took any thoughts or comments he had to heart.\"\n\n\"I did,\" telling him as I nodded my head. \"We apparently both went to the same school, and we talked for a bit. We're actually supposed to have lunch tomorrow.\"\n\nKevin's eyes got wide hearing that.\n\n\"No shit!\" he said seeming impressed. \"Well whatever you do, don't be late. He hates tardiness.\"\n\nI nodded in response. I hate it when people are late too, so I was planning on being early in any case.\n\n\"You certainly are becoming a big man in town!\" he said laughingly, almost mockingly. \"Come on,\" he said urgingly, \"lets head in and grab a drink.\"\n\nI followed him into the main part of the club, and it was a sight. You'd think with the overwhelming displays I'd seen all day on the convention floor, that this would be nothing to me at this point. Not so much.\n\nBeautiful women were everywhere. On poles, serving cocktails, giving mini lap dances everywhere. The music was blaring, and people were alternately sitting or dancing wherever they were. Kevin guided me through the sea, and we made it to the bar.\n\nApparently, the wristband meant something, cause as soon as the attractive bartender saw it, she came right over.\n\n\"Yes sir,\" she said looking directly at me with a big smile, \"what can I get for you?\"\n\n\"Scotch for me and whatever he'd like,\" indicating toward Kevin. He ordered and gin and tonic.\n\n\"I'll be right back,\" she said with a wink. People sure were friendly around here.\n\n\"Pretty amazing scene, huh?\" Kevin said while nudging me.\n\n\"It's something,\" I said looking out over the insanity.\n\n\"Here you are, gentleman,\" the waitress said with the same smile. I went to get my card out.\n\n\"I got you,\" Kevin said smiling and making eyes at the bartender as he reached for his wallet.\n\n\"Actually,\" the bartender interjected, \"your drinks are on the house,\" pointing to the wristband that Allen had given me in his office.\n\n\"Well,\" Kevin said smiling and grabbing a $50, \"then this is all yours,\" adding a wink to the end of it. She smiled at him.\n\n\"You gentleman enjoy,\" she said walking away. I noticed that she gave me a wink before she walked away. Damn! And I wasn't even the one who tipped her. Kevin was oblivious to it, and we toasted our drinks.\n\n\"It was great that Kelly and Ryan could arrange all this,\" Kevin said taking a sip on his drink, \"they've known Allen longer then even me.\"\n\n\"They certainly know how to advertise,\" I said looking at all the Kelly Madison production things all around the bar.\n\n\"Exactly,\" Kevin said, \"most people would look at this and just see a party. But then you realize they are trying to build on their brand and entice. Very, very smart.\"\n\nI just nodded knowing that all the business aspects of all this were way over my head.\n\n\"When did you meet Ryan and Kelly?\" Kevin asked me, \"at the convention?\"\n\n\"I haven't,\" I said somewhat sheepishly, \"Gianna arranged to get us all in.\"\n\n\"Oh, you gotta meet them!\" he said urging me into the sea of boobs, booze, and singles. So much activity all around with women high up, dancing and titillating. We came upon a big gathering near the center of the club. In the midst of it all, I could see the people being described.\n\nI had seen some of their videos before. Ryan was a pretty average looking dude who seemed to know how to use his penis. Kelly was a tall, blonde with ginormous natural tits. Those tits were powerful enough to create their company and led to this party. Kelly turned and saw Kevin.\n\n\"Kevin!\" Kelly exclaimed out to the world rushing over to him. Her tits were going crazy in her skintight dress. She immediately gave him a hug. \"I've been looking for you, where did you get to?\"\n\n\"I was talking with Allen for a bit, making sure everything was ok,\" Kevin said giving her a peck on the cheek.\n\n\"Good,\" she said, \"hopefully he thinks this party is worth it and will do it again!\"\n\n\"I think so,\" Kevin said, he then turned to me, \"I want you to meet a friend of mine. Sean, this is Kelly.\"\n\n\"Very nice to meet you,\" I said extending my hand to her. She was polite and formal about it.\n\n\"You too,\" she said still holding onto my hand when suddenly she had a flash on her face. \"Wait, are you Gianna and Cassandra's Sean?\" Apparently, word was getting around.\n\n\"I don't quite have a tattoo as their property...\" I said jokingly. Suddenly her whole demeaner changed.\n\n\"Oh shit!\" Kelly said quickly pulling me into a hug. Her tits were squashing my chest. Jesus, they were like heavy beach balls bombarding me. \"They were just talking about you. I feel like I heard your name all over the place today.\"\n\n\"I guess I get around a bit,\" I said sheepishly. She smiled than started looking around.\n\n\"Ryan!\" Kelly said calling out to her husband. He had been talking to another porn star, but quickly came over.\n\n\"What's up, babe?\" he asked joining us. \"Hey, what's up Kevin?\" he said taking Kevin's hand.\n\n\"This is Sean,\" she said indicating toward me, \"the guy we kept hearing about.\" \n\n\"Oh, hey!\" Ryan said extending his hand to me, \"nice to meet you!\"\n\n\"You as well,\" I replied taking his hand.\n\n\"I'd thought that Gianna said you were coming,\" Kelly said smiling while sidling up to Ryan. \"I set the girls up in the VIP lounge over there,\" pointing to another area of the club. \"Let's all go over and say hi to them,\" she suggested as we began to walk over.\n\n\"I'm gonna talk to some other people around here,\" Kevin said retreating, \"drum up some business. I'll see you guys later.\"\n\nWe saw him leave and I followed Kelly & Ryan to the area. There was a security guy there, but he quickly got out of the way. We went in and found a very different vibe. Still lots of music, breasts, and booze; but there seemed to be a sultriness to it. Somehow more erotic, almost. Intimate.\n\nIt didn't take long to find the troupe. I was kinda surprised to see that Gianna actually still had her clothes on.\n\n\"Hey, look who we found!\" Kelly said revealing me. Some cheers started coming from them.\n\n\"Dude!\" Gianna said throwing her arm around my neck, \"we were just talking about you! Trying to decide how many lap dances we're getting you tonight!\"\n\nThe girls all laughed as I eased myself into a seat near Cassandra and Sasha. Cassandra quickly got herself closer to me.\n\n\"You a big lap dance guy?\" Cassandra asked with a smile.\n\n\"I was up until my last one. Bruno just wasn't my type.\"\n\nKelly had just taken a drink and it now came flying out of her nose. Everyone else was crying laughing. No one more so than Gianna.\n\n\"Shit! That was good!\" she said as she settled back into a chair as well. Ryan and Kelly joined us as a bottle of champagne arrived to us from a cocktail waitress who looked like she could've easily been on the pole.\n\n\"Mr. Cohen?\" she said looking at me, \"this is courtesy of Mr. Testaverde.\"\n\n\"Fuck!\" Sara said, \"you really do know everybody!\"\n\nI just shrugged while telling the hostess to get glasses for all of us to enjoy. She filled up our glasses and passed them out to us all. No one spoke, so I figured they were waiting for me.\n\n\"Well,\" I said raising my glass and seeing the couple in front of me, \"here's to Madison Productions!\"\n\n\"Here, here,\" Richard added as we all put our glasses in to toast. I took a sip and settled back into my seat. Sasha was looking at me.\n\n\"That was very sweet,\" she said trying to get closer to me like Cassandra was.\n\n\"Very nice,\" Kelly added, \"have you seen a lot of our movies?\"\n\n\"A few,\" I admitted somewhat sheepishly, \"when you show up on a caption, it does tend to stand out.\"\n\nRyan laughed a bit at that.\n\n\"What?\" he asked indicating toward his wife's more than ample bosom, \"these old things?\" He finished it with a wink.\n\n\"Old?!\" Kelly shouted at her husband. \"Sean!\"\n\nI looked at her as she suddenly freed her large orbs.\n\n\"Do these seem old to you?\"\n\nI was amazed that they were right there. You think in the movies that you can guess at what they would look like in real life. This was so much better.\n\n\"If they are,\" I said trying to tread lightly, \"may everyone age so well!\" as I raised my glass again. Everyone laughed and cheered. Kelly was smiling as she sat back down. She didn't bother putting her tits back in. Ryan was smiling as well.\n\n\"Well hell, woman,\" Ryan said continuing to prod his wife, \"you might as well finish the boy's lap dance you started!\"\n\nUh, what?!\n\nKelly than stood up and walked over to me. Cassandra and Sasha retreated a bit as Kelly went to work. She was gyrating and moving with the music as she started really getting into the routine. She came and leaned over me so that her breasts were dangling on my face.\n\nThey felt amazing and my dick shot up quick. She then turned and removed the rest of her dress seductively, leaving only her thin g-sting remaining as a garment. She than started shaking her ass in front of my face and she took her hands and shoved my head into her cheeks. While certainly not as meaty as her chest, still quite pleasant.\n\n\"You're gonna give him pink eye!\" Gianna said laughing at the display. Kelly shot up after that.\n\n\"Can you do better?\" she asked the younger star. I knew that Gianna wasn't going to back off a challenge and my suspicions were correct. Before I knew it, Gianna was up off the sofa and moving over toward me. She did that thing girls do with Kelly that said, \"step aside\" with her hand.\n\nShe was than directly in front of me and started smiling. She started moving her hips, swaying to the music. She turned around and bent over, making sure that I had spectacular view of her ass. Kelly had the boobs, but Gianna certainly had an ass to match her rack. I almost felt the need to sit on my hands to keep from touching it.\n\nShe turned back around, grazing me with her enclosed breasts and getting her mouth close to my ear.\n\n\"I'm so fuckin' wet right now,\" she whispered into my ear before pulling back and continuing her dance, smiling. She began to slowly undo her top, trying to make sure it was as seductive as possible. She than got onto my lap and continued her clothing removal. Slowly but surely, her orbs were free.\n\nSure, I'd seen them before in videos, not to mention last night; but seeing them this close and right in front was a different story. My dick shot up to attention quick. Apparently, this did not go unnoticed. Gianna's eyes shot up and looked at me. She did a quick feel.\n\n\"Damn, son!\" she said to the group. \"Sunny, nice job girl!\"\n\nShe than started grinding on me, making sure she was keeping contact with my dick. Her tits were flying all over the place as she seemed to be both writhing and riding all at the same time. She than got up and started grinding her crotch into my face, my nose grazing the area every time she did it. Not that I was sniffing, but it seemed there was some moisture.\n\nShe than stood up and bent over, leaving only her thong and her shoes still on. She wiggled her ass a bit in my face before thrusting back and burying it. She than seemed to twerk on top of my lap for a bit before she came back to straddle me again. She had her arms around my back and was straight humping me, grunting with every stroke it seemed.\n\nI could tell by this point she was trying to get me to cum in my pants. Luckily, my determination not to let her win eclipsed her efforts. She then shoved her tits in my face to the point of near suffocation. Not that this would've been the worst way to go, but she released me soon after and I gasped for air. She than looked into my eyes with determination and gave me a kiss. Her tongue plunged into me with the vigor that she had rode me. I answered back, almost dueling with her tongue rather than caressing it. She than released and looked at me.\n\nShe seemed almost bewildered at first, but soon came back into focus.\n\n\"Now how was that shit?\" she asked while still on top of me, seeming to be almost exhausted. I looked around her to see Kelly, who seemed impressed and resigned all at the same time.\n\n\"Sorry, Kelly,\" I said almost shrugging.\n\n\"YES!\" Gianna said arms raised in victory, her tits responding to her motions. She got off of me and started razzing Kelly playfully.\n\n\"Whatever,\" Kelly said playfully dismissive. She then turned and looked at Ryan smiling. \"I guess I just love you too much to please another man, babe,\" she said kissing him. A polite \"aww\" came from all corners at this. I saw Richard and Kelly kiss as well. Cassandra now leaned over to me.\n\n\"She was really going for it, huh?\"\n\n\"She is definitely not one to shrink from a challenge,\" I answered.\n\n\"You're goddamn right!\" Gianna answered, not bothering to put any of her clothes back on.\n\n\"Some women are such showoffs,\" Sara answered leaning over across Sasha.\n\n\"That's true,\" I answered, \"and most of them are here.\"\n\nBoth Richard and Ryan were laughing pretty hard now. A few of the women were too and a few were not. Before anyone could answer someone started chanting.\n\n\"Shots! Shots!\"\n\nI have no idea who it was, but it was pretty quickly that an array of shots arrived. They looked like vodka, but it was hard to tell. Being my stereotypical college self, I slammed it down.\n\nVodka, definitely vodka.\n\n\"Fuck yeah!\" erupted from Gianna, still in just her thong as I returned to my seat. I took a sip of my drink to use as a chaser. I found Sara now sitting next to me.\n\n\"Having fun?\" she asked with a smile in her eyes and on her face.\n\n\"Yeah,\" I answered, \"but will I remember any of it?\"\n\nShe giggled and leaned back, moving herself closer to me. Cassandra came up on the other side.\n\n\"Vodka shots are not fun,\" she declared.\n\n\"Agreed!\" I replied.\n\n\"Gianna just can't do anything half-assed,\" Sara declared, gesturing to her practically nude form, \"clearly!\"\n\nCassandra and I just busted out laughing, knowing how true the statement was. Richard and Kelly were close enough to hear as well and started laughing. Unsurprisingly, this got Gianna's attention.\n\n\"What the fuck are y'all laughing at?\" she said with a half-smile.\n\n\"Your naked ass,\" Kelly Kline said honestly, which just got us laughing more. Gianna didn't seem to understand clearly. She just shook it off.\n\n\"I'm proud of my shit!\" she made clear. \"I don't see you bitches flaunting what you got!\" adding more than a couple jiggles.\n\n\"Oh yeah?\" came Sasha out of nowhere as she just took off all her clothes. No striptease or pageantry, just straight to naked. She started flaunting her onion booty to anyone looking. Gianna smiled, giving her a few playful smacks.\n\n\"Not that we don't love the show,\" Kelly Madison said standing up, \"but we have to get back to business.\"\n\n\"It was nice meeting you,\" I said standing up to wish them off.\n\n\"You too!\" she said giving me a hug. Ryan shook my hand.\n\n\"Be gentile with him, girls,\" Kelly said leaving.\n\n\"Fuck that!\" Gianna said shoving my face into her boobs. It certainly wasn't the worst experience of my life.\n\n\"Oh shit!\" Ryan said turning around, \"Richard, could we talk about some ideas with you and Kelly?\"\n\n\"Sure,\" they both said, standing up and blowing kisses to everyone. Everyone started to sit and chill a bit now, except for Sasha who was still grooving, moving closer to me.",
        "\"What do you think, Sean?\" she asked with a smile clearly asking me to rate her nude form.\n\n\"You look beautiful,\" I told her honestly. I noticed that Cassandra and Sara both moved a bit closer to me after I said that. Sasha smiled and looked for a close place to sit. Cassandra and Sara seemed to not want that to happen, so she plopped down next to Sara, sipping on her drink. This was probably the first time I noticed that they were being protective of me. At least, that's what I thought.\n\n\"We should check out the action downstairs,\" Roxy suggested making her way open to the opening that looked down onto the club. We all got up and looked over. It still looked nuts down there. Topless women were everywhere, poles, tables, you name it. I saw Allen down there as well. He glanced up at us, smiling. He gave a small wave which I returned. He then spoke to a few of the girls around him.\n\n\"I'm gonna get another drink, anyone want anything?\" I asked. Sunny asked for another vodka soda and I headed over to the bar area in the VIP lounge.\n\nI ordered the drinks and tried to pay.\n\n\"There's no charge for you, sir,\" she said pointing at my wristband.\n\n\"Oh,\" I said innocently. \"Right.\" I left her some cash as a tip, thanking her.\n\n\"Thank you, sir,\" she said seductively as she shoved the cash into her cleavage. I took the drinks and headed back over to the group. I handed Sunny her drink and took a sip of mine. Suddenly I felt a tap on my shoulder. I turned around and saw the two women who had been talking to Allen down below. One was taller with clearly fake tits and a thin build. The other was shorter with natural smaller tits and a cute physique.\n\n\"Mr. Cohen?\" the taller one asked.\n\n\"Yes?\" \n\n\"Mr. Testaverde wanted us to make sure you were having a good time and see if you needed anything.\"\n\n\"Oh,\" came out of me before anything else, \"I'm doing fine thank you.\"\n\n\"Are you sure there's nothing we can do for you?\" the shorter one asked with a grin. I started feeling a bit uncomfortable about the whole situation. Gianna was nearby and \"saved\" me.\n\n\"You guys here to take our boy?\" she asked while putting her arm up on my shoulder, leaning over a bit. It wasn't so much of a mark your territory situation, but just letting them know who was with me.\n\n\"Mr. Testaverde just wanted to make sure Sean had everything he needed,\" the taller one answered.\n\n\"Or wanted,\" the shorter one added.\n\n\"Well, I think the boy needs a double lap dance,\" Gianna proclaimed. \"We've gotten him worked up here.\"\n\nBoth smiled at this and reached for my hands.\n\n\"Come with us, then,\" the shorter one said. Without another word, they lead me over to a curtained area off to the side. There was a bouncer there, but he just opened the curtain for all of us.\n\nThe girls took me to a private area with a lounge and sat me down on it. Once I was down, they went to work. They grabbed onto each other and started moving to the music. Hands on each other's hips as they were falling into a routine. I had been at strip clubs before and put my hands under my legs, removing any temptation. The taller one spun around and started grinding her ass into the shorter one. With her teeth, the shorter one undid the bikini strap that held the breasts of the other.\n\nHer top was off, and she started showing them off. They were DDD's at least, and for my opinion 3 cup sizes larger than she really needed for her frame. Her friend started feeling up her breasts ensuring to capture her nipples between her fingers. She grabbed them and started kneading them, making a show of it.\n\nThe shorter woman now removed her top, slowly and seductively. She seemed to have C cups herself, similar to Sasha's. While normally I was a fan of larger breasts, I was more a fan of natural ones. The taller one bent over and took one of the shorter girls' nipples into her mouth, keeping eye contact with my while she was doing it.\n\nThis got my dick stirring pretty good as I watched the show. They clearly knew what they were doing. The shorter one than took a suck of the taller girl's breast, licking her nipple with no pretense.\n\n\"Tastes good,\" she said as they now turned their attention toward me. Each one sat on one of my legs grinding into me. They fondled themselves a bit, but also started touching me more, putting their hands on my chest and rubbing.\n\nThey were both grinding into me, ensuring they had my full attention which wouldn't've been hard. Soon they both thrust their tits toward me, ensuring I was swarmed by them. I could feel soft flesh all around me, as they also began groping at my crotch. My dick was pretty hard in my pants at this point, and they were now both fully aware of it.\n\nThe shorter one now fully took over being on my lap while the taller one moved behind her creating a show of her own. The shorter one was humping me a bit and the taller one was facilitating it. It seemed like they were trying to get me to spray in my pants, but I was able to hold one. She kept getting close to me and moaning in my ear while slamming her ass down on my crotch. She started sucking her teeth it seemed as she leaned back, with the taller girl supporting her.\n\nShe looked around the area and at the taller girl who just nodded at her. She then leaned in close to me, whispering in my ear.\n\n\"We could use our other skills on you, if you'd like,\" she said seductively and clearly. This clearly was not in the bounds of what they were supposed to do, and I started feeling uncomfortable about the whole thing.\n\n\"Thank you,\" I said loud enough for both to hear, \"but I'm good.\" Both seemed a little shocked and I swear a little disappointed. \"Can't let you girls get in trouble,\" I said with a wink. Apparently, that was enough for them to not pursue further. They let me stand up and started gathering their clothes.\n\n\"Thank you for the dance,\" I said to both of them. They smiled politely and both gave me a kiss on the cheek. The smaller one leaned in a bit.\n\n\"Anytime,\" she whispered into my ear as we all began to leave the area. They nodded at the bouncer who also nodded at me. We made our way back to the VIP area. The girls each gave me a kiss on the cheek, and they headed back to the main part of the club.\n\nI could see Gianna and Sasha were still in their undressed state as they were dancing and drinking. Roxy and Sunny were talking amongst themselves it seemed like. Cassandra and Sara saw me emerge and smiled. I then saw them doing rock, paper, scissors. Cassandra lost and seemed very unhappy. I walked over to them.\n\n\"Everything ok?\" I asked.\n\n\"Everything is great,\" Sara answered with a big smile on her face. Cassandra was clearly less happy.\n\n\"Fuckin' fantastic,\" she said not even trying to hide the sarcasm. I sat down next to her.\n\n\"What's up?\" I asked clearly having no idea what just transpired.\n\n\"Just a little wager we had,\" Sara said with a smile. She hooked her arm into mine and smiled. Before any other questions could be asked, Gianna came over.\n\n\"How was the dance?\" she asked.\n\n\"More than adequate,\" I shot back.\n\n\"Still not as good as mine than?\" she said with a smile and a bit of a shake.\n\n\"You have some natural advantages,\" I added truthfully. She grabbed her jugs and bounced them around.\n\n\"Fuckin' right!\" she said with glee.\n\nWe than saw Kevin enter the VIP lounge with 2 different women and head to the back. Gianna couldn't resist.\n\n\"Yeah boy!\" she shouted after him, \"get some!!\"\n\n\"I gotta use the bathroom,\" I said excusing myself from the couch. The VIP area had its own bathroom and I headed over to it. Suddenly, someone tapped my shoulder and saw Cassandra standing there clearly having followed me.\n\n\"Hey, I had a question for you,\" she said. I nodded my head indicating to her I was all ears. \"I was wondering if you wanted to have dinner tomorrow night,\" she asked looking up deep into my eyes. \"Just us?\"\n\n\"Sure,\" I answered quickly. Beautiful woman, no other plans, no brainer. \"What were you thinking?\" She was already smiling at the answer.\n\n\"I'll think of something,\" she said slyly, \"let you know tomorrow?\"\n\n\"Sounds good!\" I answered. Her face lit up and she gave me a kiss on the cheek.\n\n\"I can't wait,\" she said sauntering back over to the couch. I returned to the bathroom. Before I entered, I heard Sara very faintly say \"that's fair.\"\n\nI took care of my business and came back out. Gianna and Sasha slammed down some shots as the rest looked on. Someone than saddled next to me, wrapping her arm around my waist.\n\n\"Quite a sight, aren't they?\" Nautica said smiling. I returned the gesture.\n\n\"That's putting it mildly.\"\n\n\"Having fun?\" she asked me.\n\n\"I'd say so,\" smiling at her. I than finished the rest of my drink.\n\n\"Let's get another,\" she said smiling up at me.\n\n\"Ok,\" I told her tentatively, \"but I think I'm done after this.\"\n\n\"Same,\" she answered, \"I have a meet and greet early.\" With that we went over to the bar and ordered.\n\n\"What kind of meet and greet you have tomorrow?\" I asked waiting for the drinks.\n\n\"\"Breakfast with a porn star\" thing,\" she said shrugging, \"promos for the fans.\"\n\n\"Gotta keep 'em happy,\" I retorted. She smiled.\n\n\"You'd think me agreeing to be naked and fuck on camera would be enough.\"\n\n\"Can't please everybody,\" I said shrugging. She just laughed.\n\n\"Clearly you've never had sex with me then,\" she said with an alluring gaze. I just nodded my head. The bartender delivered our drinks and she picked hers up and began to walk away.\n\n\"Yet...\" she said walking away. I took a big gulp off the drink returning back to the group. By now, Sasha and Gianna had gotten the attention of strippers all around the place attracting loads of attention. At first, I wasn't even sure I could get to the group. Then Sasha saw me.\n\n\"There you are!\" she said grabbing hold of my arm and pulling me forward. \"Dance with me!\"\n\nI started moving with her to the music, keeping my hands to myself. She the thrust her ass back at me, ensuring that it made contact with my crotch. It really was a spectacular ass! She then turned around, dancing as close to me as she could. I was still keeping my hands to myself, but Sasha wasn't a fan of that. She grabbed both my hands and put them on her hips, still moving to the music.\n\n\"Don't you love the song?\" she asked getting even closer to me. Honestly, I didn't even know what song was playing. Before I could even answer, Gianna pulled me away and started dancing around with me. Sasha didn't seem happy.\n\n\"Boy loves boobies!\" she declared before she put my hands right on the subjects of the matter. I had to admit, the feeling of her boobs certainly didn't make her previous statement a lie. I emerged from my trip to the mountains and saw Gianna and Sasha dancing with me. I tried my best to dance with each of them, not trying to show favor really to either. Then I felt someone come up behind.\n\n\"Quite a show, huh?\" Sara said, putting her arms around my waist from behind.\n\n\"They are consummate showmen,\" I said in acknowledgement. She squeezed me a bit tighter.\n\n\"Sara!\" Gianna said seeing her behind me. Sara came around and started dancing with her as well. Sasha moved closer to me at the same time, bouncing her booty in my face to keep my attention. It was working pretty well. Gianna and Sara than began dancing closer to us, bringing Nautica with them.\n\n\"All of us are certainly a big attraction,\" Nautica noted seeing everybody watching us. While this was probably perfectly normal for all of them, it made me a bit uneasy. As deftly as I could, I made my way back over to the couches. I saw Cassandra sitting there and sat next to her.\n\n\"A bit much, huh?\" she asked me with a slight grin.\n\n\"I can only be at the center of a spectacle for so long.\"\n\n\"Clearly you've never been a gangbang,\" Cassandra said wryly with a smile.\n\n\"I have not,\" I said a bit wide-eyed, but still trying to maintain a degree of cool. \n\n\"It can be fun a few times,\" Cassandra admitted, \"but you get over it eventually.\"\n\n\"Get over what?\" Sara said now joining us on the couch, having extricated herself from the dance party.\n\n\"I was saying that gangbangs get old after a few times,\" Cassandra explained. Sara nodded her head.\n\n\"True,\" she admitted. \"Sometimes you just need the attention of one person.\" I noticed she was looking directly at me when she said that.\n\n\"Sean, could you do me a favor?\" Sara asked.\n\n\"Sure, what?\"\n\n\"Could you get me a cab and walk with me outside?\" Sara asked. \"I'm a bit tired and it's getting kinda crazy here.\"\n\n\"Sure,\" I told her. \"I'm kinda tired too,\" I admitted. She smiled a lot at that as she pulled me off the couch. Cassandra looked unhappy to see me go.\n\n\"Did you wanna share a cab with us?\" I asked her. She seemed to look at Sara as she answered.\n\n\"I'm gonna hang for a bit,\" she told me. She than got up and kissed me on the cheek.\n\n\"I can't wait for our dinner tomorrow,\" she said as she went back over to the main group. I threw the rest of the group a wave as we left. Only Sunny seemed to see me and waved back. \n\nSara and I left the VIP area and were back in the main club. We saw Kelly and Ryan and gave them a wave as well. Kelly came over to us.\n\n\"You guys heading out?\" she asked.\n\n\"Tired,\" Sara admitted. I nodded in agreement.\n\n\"Well, thanks for coming!\" she said giving Sara a hug. \"Really nice to meet you, Sean,\" as she than gave me a hug, \"be sure to swing by our booth tomorrow!\"\n\n\"Absolutely,\" I told her as we left. We reached the lobby and one of the doormen stopped me.\n\n\"Do you need a car, sir?\" he asked.\n\n\"That would be great thanks,\" I told him. He said something into his walkie talkie and the turned back to me.\n\n\"Where to, sir?\" he asked.\n\n\"The Venetian.\"\n\n\"No problem,\" he said talking more into the walkie talkie. He then opened the door and ushered us out of the club. There was a Lincoln Towncar waiting. The doorman opened the door and Sara and I got in. \n\nWe headed back to the hotel, Sara and I making small talk all the way there. She kept a hand on my knee the whole time. The driver largely ignored us, maybe thinking I'd propositioned her. None of his business anyway.\n\nThe car pulled up to the hotel and the valet let us out. I thanked the driver, and we went inside. Sara had her arm hooked into mine as we went across the lobby, she kept rubbing my arm as well. We got to the elevator, and she started looking in her purse. I noticed that she was really searching.\n\n\"What's wrong?\" I asked her.\n\n\"Trying to find my key card,\" she said.\n\n\"Is it in your wallet?\"\n\n\"No, I checked it,\" she said still going through her purse.\n\n\"Well, we can go to the front desk,\" I suggested, \"get you a new one.\"\n\n\"That's true,\" she said making no move to head over there. \"I'm sure it's in my purse though. Do you mind if I come up to your room and look a bit harder?\"\n\nI'm not an idiot. I knew it was a ploy. The look in her eyes alone was more than enough to show that. And I really didn't care.\n\n\"Sure,\" I told her as the elevator doors opened up. We got in and I punched in my floor. She was still making a show of looking for her room key, but she really wasn't trying that hard. We got off the elevator and I walked down the hall. I stopped in front of Chet's room and could hear plenty of activity.\n\n\"Beautiful tits!!\" I heard out of him as I shook my head and went to my room. I opened the door and Sara came in with me.\n\n\"Wow!\" she said looking around it. \"This is really nice!\"\n\n\"Thanks,\" I told her, wondering how long this ploy was gonna go on. She saw the mini bar and opened it up.\n\n\"Want a drink?\" I asked her. She demurred a bit.\n\n\"And make you pay those prices? Fuck that!\"\n\n\"The room was part of the prize package,\" I told her. \"As long as I don't abuse the bar...\" I trailed off from there.\n\n\"Oh,\" she said with a smile and turned back to it. \"Vodka it is then.\"\n\nShe grabbed two of the mini bottles from it offering one to me.\n\n\"I'll grab a scotch,\" I told her going over and grabbing one of the Johnny Walker bottles. I held it up in a bit of a lame toast. I than saw the glasses on the small table. \"Guess I should be classy,\" I said pouring the scotch into the glass and offering her the other glass.\n\n\"I'll be unclassy,\" she said taking a swig from the bottle.\n\n\"You want some help finding the key card?\" I said to ensure I was right about the ploy.\n\n\"Purses are always such a mess,\" Sara said taking another sip, keeping eye contact with me.\n\n\"I'll take your word for it,\" I said taking another sip. She still made no real attempt to search.\n\n\"I guess,\" she said coming closer to me, \"if worse came to worse. Maybe you'd put me up for the night.\"\n\nI raised my eyebrow and decided to play her game at her level.\n\n\"I suppose you could sleep on the couch...\"\n\n\"Shut up!\" she said smiling and pushing me onto the bed. Her lips found mine quickly as she began her game of tonsil hockey. I retuned the kiss and began rubbing her back. She was mauling me like some sort of animal.\n\nOr Gianna.\n\nIt was a good five minutes of making out, Sara seeming to love the feeling of being on top of me. I than took the initiative of turning her onto her back. She gave no resistance as I began to work my way down, kissing her neck as I showed affection.\n\nShe responded by removing her top as much as she could, allowing her legendary breasts to come free. The DD wonders had been the dream of many men while she'd been in the industry. I sucked on them, eliciting a moan from Sara.\n\nShe began rubbing onto me, my chest and my legs eventually working her way to my crotch.\n\n\"Ooh,\" she said feeling my dick in my pants. She managed to get my shirt off while I managed to get her dress on the floor. Laying on me with just her thong on, she started undoing my buckle. Using her legs, she kicked my pants onto the floor.\n\nHer grinding only increased until she decided it was time to slide down my body. She wound up on her knees on the floor, where my legs were hanging over the side. She parted them and began again caressing my crotch. She took her tongue and glided it over the top of my underwear.\n\nShe then yanked my underwear off, almost ripping them from my body. Sara wasted no time.\n\n\"Goddamn!\" she declared after seeing my rod. Her eyes dilated instantly as she saw her new friend sprung from its confines. Her hand moved to it instinctively as she started pumping it. Her hands were soft and warm as she stroked me. It didn't last long as she seemed to need a tasted of it.\n\nTo say that she was an expert at oral would've been a gross understatement. She kept her mouth perfectly moist, and the suction was perfect. It felt like having a wet-dry vac on me. Her eyes were looking straight into mine as she kept her assault going. My cock was rock hard from the attention and then she decided to answer all my prayers.\n\nSara popped my cock out of her mouth and quickly snuggled it in-between her perfect 32DD tits. They felt like heaven as she worked me up and down with her globes, flicking the tip of my dick with her tongue every so often. I knew that if she kept up this attention much longer that I wouldn't be able to last, so I managed to flip us around so that her back was now on the bed. I made my decent slowly, but with purpose; leaving no doubt as to what my destination was.\n\nSara popped her eyes open and seemed almost surprised. I eventually made my way to her pussy and began licking all around it. Her folds opened up to me as began my work. She was clearly appreciative, showing so with her moans and groans.\n\n\"Oh fuck, baby!\" Sara managed to get out while playing with her massive tits. She was bucking hard against his face as he started paying more attention to her clit. It didn't take long for her to orgasm, clamping down ever so slightly on my invading tongue.\n\nSara saw the condoms from the still open drawer from last night and grabbed one. I stood up and she rolled the condom onto my cock. She then looked deep in my eyes and said two words only.",
        "\"Come on.\"\n\nShe laid down on the bed as I climbed on top of her. The heat from her pussy soon found its mate as my cock entered her. I began humping, noting that her pussy was tighter than Sunny's had been. She was writing on the bed, clearly happy with my work. It only took a few minutes before those famous short pants of hers became louder and faster as she exploded.\n\n\"Fuck, fuck fuck!!\" as she reached her peak. \"Fuck me, baby! YESSSS!!\" as I felt her muscles tighten around my cock. She was squeezing the life out of it, riding every pulse. When she was out of her orgasmic haze, she looked at him with renewed vigor.\n\n\"Take it, Sean,\" she said with both a cute and aggressive stare. \"Claim my pussy!\" I needed no further prodding as I started laying into her. Her tits were bouncing with perfect rhythm with my thrusts. She moaned, panted, and smiled all the while I was laying into her. \n\nShe eventually decided to take matters in her own hands and maneuvered me down to the bed while she impaled herself on me, riding me like she was being chased in a western. Her heavenly tits went in every direction as I met her moves with my thrusts. Soon enough, she went over again.\n\n\"Fuck, YESSSSS!!\" as she erupted on my cock. I thought of anything I could to keep from popping and somehow, I held on. My hands were locked on her ass as she continued her promenade on my dick. \n\nNow what came over me next, to this day I really don't know. Maybe I was more inebriated then I'd thought. Maybe I had a renewed sense of confidence having a gorgeous porn star worshiping my cock. Maybe I was just stupid. But, for whatever reason I had in my mind; I did it. I slipped one of my fingers into her ass.\n\nThe look on her face clearly told me that she wasn't expecting it. I figured the next move would be for her to get off me, call me a bastard and storm off. Sara Stone was not exactly known for doing anal, anywhere. But she soon had a huge grin on her face as she leaned toward me.\n\n\"How'd you know I liked it in the ass?\" \n\nI was stunned. What was a bold and dumb move on my part, she took as a sign not only of confidence; but that I could read what her body wanted. She gave me a deep kiss as my cock and finger probed her holes. After she broke the kiss, she whispered in my ear.\n\n\"If you're going to put something in my ass, I'd rather it be your dick.\" \n\nI certainly didn't need to be told twice. We changed positions on the bed, and I was poking on her backdoor. My dick was plenty slick from her pussy juice, so I saw no reason to hesitate. I started pushing in when she stopped me. Now, I was really confused. She looked over her shoulder at me and smiled.\n\n\"I don't think you need that for your new destination,\" she said with a wink clearly meaning the condom. I ran the numbers quickly in my head and figured with all the STD testing they have to undergo, that this was probably a pretty safe move. I whipped off the condom and started lubing my dick with both my spit and her cunt juice.\n\nIt wasn't that long before I was confident in the lubrication. I eased my way inside her ass, and I heard her yelp.\n\n\"OOH!\" she said as I stopped, frozen in my tracks. She wiggled her ass a bit, like she was getting accustomed to the invasion. She then looked back and smiled at me.\n\n\"Had to get used to your cock, baby,\" she said with a wink. \"Keep going...\"\n\nI then started pushing my cock deeper in her ass. She was playing w/ her pussy furiously as I went deeper and deeper in. I was doing my best to take my time, so I didn't hurt her. She really wasn't known for doing anal after all, but once I was bottomed out in her; it didn't take long to figure out that it wasn't because she didn't like it.\n\n\"Fuck yeah, Sean!\" she said as she started pushing herself into me. \"Take that ass!\" I took that as encouragement and slowly started humping away. Not as fast as before, but eventually I got a steady pace going. She was still working on her pussy and her breathy pants had gotten more intense.\n\n\"Faster baby, faster!\"\n\nI obeyed and started sawing away. She was panting like a mad woman and soon she clamped down.\n\n\"FUCK YEAH, SEAN!!\" she said orgasaming, \"SHIT!!\" Her pussy leaked fluid and her ass gripped me like she had 2 hands on it. I shut my eyes to ride it out and kept going.\n\nShe was rubbing her pussy hard as she took my pole in her rectum. I gave her a smack on the ass which only made her thrust herself toward me more. Soon, it got to be too much, and I needed to let her know.\n\n\"I'm gonna cum, Sara,\" I managed to get out through the hard work I was doing. She didn't miss a beat, even with all the panting.\n\n\"In my ass, baby,\" she said making her wants clear. \"Claim me!!\"\n\nThat was it. My balls exploded in her ass, and she clearly felt every spurt from my cock, because she bellowed out in another orgasm.\n\n\"GOD!! SEAN!!\" as we collapsed together onto the bed. My cock was still in her ass as we panted and collected ourselves. My hand moved to one of her large breasts and squeezed it. That was apparently enough to get her out of her orgasmic haze as she turned her head and pulled me into a deep kiss. Our tongues were exploring each other as my dick was still in her asshole. She made no moved to get it out and I certainly wasn't. She broke the kiss after about a minute.\n\n\"That was amazing, Sean,\" she said in still a somewhat dreamlike state. \"You feel so good in me.\" \n\nI still made no move to retract out of her. We were really just spooning while I was copping a feel of her magnificent tits. Eventually, my dick slid out of her on its own. She then turned and faced me, taking me in for another deep kiss.\n\n\"Mind I stay here tonight?\" she asked innocently enough, \"just in case I get a craving for a late-night snack?\"\n\nI nodded my agreement and we drifted off to sleep in each other's arms."
    ],
    "authorname": "rumpleminty",
    "tags": [],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/how-i-married-a-porn-star-pt-02"
}