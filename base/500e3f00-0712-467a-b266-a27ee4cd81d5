{
    "title": "Sholan Alliance Ch. 05",
    "pages": [
        "For those who are waiting on chapter 2 of second series of The World of Ranike I am having a bit of a brain lock on how they are going to be dealing with being back on earth. As far as the last chapter of the Silver Moon series it is with an editor and as soon as she proof's it I will make changes I feel needed and repost.\n\nI also had a volunteer editor, Captain Siren, review the first chapter in the Silver Moon series and she made some very good suggestions. With her help I am going to be revising all the chapters to remove some glaring inconsistencies. They will be posted as we smooth each chapter out.\n\nThe last thing I have to say is that there are only a few detailed sex scenes in this series as with my other stories. I find, this is a personal opinion that having a sex scene in every chapter of a story gets boring after a while. I have come across some very good stories that keep getting broken up by one sex scene after another. That makes it hard for me to follow the plot line. \n\n*\n\nThe next morning he awoke and was curled up facing her. She was still asleep and with her face relaxed she did look young. He slowly stroked one of her cheeks and quietly sighed. \"How did this old dog get so lucky a second time?\" From what he had seen and heard Sholans did tend to live longer than human's though they might have a way to extend human lives as well.\n\nSatasha hadn't really been asleep and was enjoying his touch. When he asked how he had gotten so lucky she opened her eyes and smiled at him. \"Have you considered how this young little kitty feels? Maybe I am the one who got lucky. I found a wonderful man who is smart as a whip and gives people headaches when he tries to explain what he is doing. A loving man who took care of me, fed me, and didn't turn me in to be experimented on or held hostage for some nefarious scheme.\"\n\nTo break up the moment she leaned forward and licked his nose and then proceeded to give his face a good bath. It had become a joke between them and she laughed when he started commenting on kitty germs and all that. She finally rolled out of the bed and quickly moved away so he couldn't tickle her or tug on her tail. \"Get up lazy bones. I am hungry and want another shower.\"\n\nHe laughed and rolled off the bed and lunged at her which she avoided and the two of them dashed into the shower area only to stop. Vangie was working on Sally's hair and when they barged in he looked over his shoulder and looked a little nervous. \"Good morning sir. I hope you slept well.\"\n\nBilly grumbled at him a bit. \"Call me sir again and I might change my mind on letting you see my daughter. My name is Billy and you will use it unless you have to address me differently.\" The two of them stepped into the other shower section and started getting wet. \"So you spent the night huh? Hope that the two of you slept well.\" He still had the necklace on as did Tasha.\n\nSally almost groaned. \"Pappa he did but nothing happened other than some more talking and getting used to each other's body.\" She leaned against him. \"It was enjoyable getting some cuddling in and he was very understanding about a few things. I really hope that we can get some treaties going with the Sholan's so we can keep seeing each other.\" She rather liked him so far though time would really tell.\n\nBilly was starting to work the shampoo into Satasha's hair as he listened to what she had to say. \"I am glad you enjoying getting to know him. The one thing I am worried about is if the two of you get as close as Tasha and I that you will be hurt if and when we have to leave. I know it is going to hurt both Satasha and I and don't want you to have to feel that pain.\"\n\nThe rest of the shower was quiet as all of them were contemplating what might be happening in the near future. As they were drying off Sally finally noticed the necklace and made a pleased sound. \"That is lovely Pappa. I take it Satasha gave it to you?\" She had a towel around her so she stepped closer and took a good look. \"That is a wonderful engraving of the two of you.\"\n\nHe smiled and gave her a quick hug before heading back into their room to get dressed. Food had been delivered again and they all sat down to eat and there was some casual conversation but again for the most part it was quiet. Once they were done the door opened and the engineer from the day before walked in.\n\n\"Good morning and I hope I am not disturbing anyone but if you have time in about an hour I have a tele-conference setup. I tried to describe the equations but since I didn't have them handy there wasn't much I could really tell them.\" He stood there sort of nervously because he didn't know what the aliens view on sharing this type of information was like.\n\nBilly waved him further in. \"If you want some c'shar please get a cup and have a seat. I actually had been intending to talk to you about that. Since my VR glasses aren't compatible with yours I was thinking about printing everything out. With that they can be scanned into your version of VR glasses since otherwise they wouldn't be able to see the equations. I will say that I don't mind sharing them but if they decide that some of the equations might be of use I will expect some sort of compensation.\"\n\nThe Engineer nodded. \"That would be very reasonable to expect and I assume that you would need to go to your Ship to print them out?\"\n\nBilly scratched his chin for a moment as he contemplated a few things. \"Actually there might be an easier way. I have a flexible viewing screen that can connect to the glasses and that way I don't have to kill a few trees. If we can run down to the Ship I can grab the screen and then we can come back here and start scanning them in.\" He was sipping on a cup of coffee as he was talking. One thing he had found was that if you added the instant coffee to the c'shar it gave it an interesting taste.\n\nThe engineer asked the warrior at the door for an escort to the ship and Vangie stood up. \"I can do that since I go on duty shortly. I have been tasked with being a sort of liaison between you and the rest of the people who are going to want to talk to you. That and to make sure you are as comfortable as possible as we learn about you.\"\n\nBilly snorted. \"Well in that case being moved to regular quarters where we aren't being taped and listened to would be nice. Neither of us are a threat unless you count causing people headaches as a problem.\" Being locked up was starting to get annoying. \"I would like out of this cage and maybe actually see non-sensitive parts of the Ship.\"\n\nVangie nodded when he said that. \"I will pass that on and see what I can do.\" With another nod he left the room to go and change.\n\nSally looked sort of upset and once Vangie left she looked at her father. \"Do you think that is why he stayed? To learn more about us and to keep me comfortable?\" She really didn't like that idea.\n\nBilly shook his head. \"No I don't. I honestly think that he does like you and he wants to get to know you better. Since he has shown an interest in you as well as having a positive attitude towards us I think that is why he was assigned to us. I suppose in a way you could say he is helping to keep you content but I do not think he was ordered to. He likes you and seems to be a nice male so looking at it that way it is going to make you more content.\" He gave Sally a good hug and a peck on the end of her nose just because.\n\nIt was about 15 minutes later Vangie came back into the room dressed in his uniform. \"They would prefer if your daughter went and got the view screen. That is because presumably she doesn't have access to the weapons locker you showed the last warrior. If you need anything else from the ship she can get it as well.\"\n\nBilly rolled his eyes at that. \"Oh brother that is stupid. If I tried to open it you could have shot me half a dozen times before I got it open.\" He threw his hands up in disgust. \"Sally get the view screen and the micro computer that can be connected to it. I think I have everything I need but if you think of anything grab it after checking. I will be waiting for you.\" He pulled out his glasses again and after giving Satasha a good kiss and lick he pulled out one of the screens he thought he was close to finishing and started working on it.\n\nSatasha looked at the engineer. \"When he gets annoyed or grumpy he designs things. It helps him deal with what is bothering him.\" She settled down on the couch the engineer was on and gave him a polite smile. \"I have to admit even though we have VR glasses it is still weird watching him drawing in what appears to be just air.\"\n\nThe two of them chatted while Billy was working his annoyance out. Sally was back shortly and she had what he requested and a few items in a bag which went into her room. \"Thanks Sally. Do you have a second pair of Sholan VR glasses? I will let you do the scanning while I watch and check to make sure it is being copied correctly.\" He set up the screen on the table and made sure that it was synched with his glasses. For this he didn't have to wear the glasses.\n\n\"I did bring a second pair just in case you wanted them.\" He handed the glasses over and Billy put them on. \"That sounds like a good idea since I wouldn't have any idea if this equation came before another.\" He shook his head when he said that. \"I almost wish I could show you our engines but someone mentioned that you are itching to pull things apart and see how they work.\" He glanced at Vangie who was trying to look completely innocent.\n\nBilly snorted as he pulled up the first screen. \"I would steal the technology for your beds before anything else. I have resisted the urge to figure it out so far. If I am stuck in here for much longer I might have to disassemble something just to keep me from going nuts.\" He gave Vangie a look and then started pulling up the equations he had worked out.\n\nAs he was doing that the engineer was scanning them into the glasses and Billy was checking to make sure that things were in the right order as well as were showing correctly. He hadn't had a look at any of their math so he wasn't sure what symbology they used for things like the constant for the speed of light or imaginary numbers. It was probably going to be several days of working with the design engineers to figure all that out.\n\nIt took longer than he expected but he had been working on some of the changes since Satasha showed up. Then there were the expanded changes he was thinking of as well as partial designs for a new hyper engine. \"Okay that is the full extent of what I have created. Shall we go to wherever this tele-conference is?\" That was another technology he would love to steal. Currently they didn't have any sort of long distance communications except by ship.\n\nHe stood up and looked at Vangie. \"Why don't you call for another warrior to escort me and you can stay with my daughter and talk and all that good stuff.\" He gave him a warm smile when he said that. It would give them time to work a few things out such as Sally worrying about his being with her just to keep her content.\n\nVangie did exactly that and a few moments later the door opened and they were waved out. \"We are going to the same room you were in yesterday since it can take the call from Shola and has a large screen.\" He escorted them to the room and let them in. \"Just call when you are done or for something to eat if it takes that long.\" He had no idea how much data Billy had gathered and created as he was working on the various items.\n\nThe engineer looked at him. \"Thank you warrior and please do have lunch delivered since I have a feeling this is going to take a while.\" Once they were in the room he activated the screen and Billy found that he was staring at four Sholans and they all looked older since they had gray in their hair.\n\n\"Good morning gentlemen and lady. As I am sure you know I was asked to meet with you and try and explain the equations and engine modifications I created. Since I don't know the Sholan symbology for higher level math I am going to explain in detail what each equation means and how it works. I will say if I could get my hands on some of your college text books for physics, geometry, and trigonometry after a bit of studying I could probably start converting the equations using your math symbols.\"\n\nOne of the Sholans raised an eyebrow at his comment. \"Do you really think you could learn that in a short time? It might just be easier for you to describe them and we can record it and work out the conversions.\" She obviously though he was exaggerating his skills.\n\nBilly sighed. \"Ma'am I earned my doctorate in theoretical and practical physics in hyper drives in four years. That is normally an eight plus years to do. On the human Intelligence Quotient the norm is roughly 90-120. I scored well over 160 on it. I am classified as a genius which means I am really smart.\" He tried to avoid any sarcasm. \"Now if you don't mind I am pulling up the first screen and this relates to re-crystallization of the tubes. Starting at the top...\"\n\nHe did end up in the room for a bit over 8 hours before he called it quits. \"I am starting to get tired and it is about time for food. Take a look at what I explained to you and I assume we can continue this tomorrow.\" He could tell that the four weren't sure what to make of him and his equations and figured they needed time to digest what he had told them.\n\nWhen they called for the warrior to escort him back to the quarters they were in he was sort of startled when he was led out of the secured area. It took about fifteen minutes to make it to some different quarters. \"All of your belongings have been moved to this room. The door will be unlocked but we ask that you have a warrior with you when you leave. This is for your security and nothing else.\"\n\nBilly was rather startled by that. \"Um, thanks and most definitely since I am pretty sure I will get lost if I didn't have an escort who knows their way around.\" \n\nThe warrior slipped a card into the hand reader. \"Please press your hand against the reader and it will register your palm print so you can access the quarters.\" Once Billy had done that the warrior pulled the card out and indicated for him to touch the access panel. The door slid open and with a nod the warrior left.\n\nBilly walked into the room and gave a low whistle. They were much nicer than the ones they had been in. Sally came out and grinned at him and he gave her a big hug and held her for a few moments. \"I take it you like our new quarters?\" He had to wonder which complaint had earned them this upgrade.\n\nShe laughed. \"Oh yes I like them and the beds are far better than the others were. We even have a food dispenser as well.\" She leaned into the hug and rested her head on his shoulder. \"If it is alright with you Vangie would like to visit and spend the night again.\"\n\nBilly snorted at her. \"Just don't do anything I wouldn't do.\" It was rather hard to think of her as an adult and able to make her choices about her partners. He didn't have much room to speak since he was in a very intimate relationship with a Sholan. He had to admit there was something drawing them together but he wasn't sure what it was.\n\nSally giggled at his response. \"I will abide by your request as a good daughter should.\" They were still hugging when Satasha walked in. \"Can you believe these quarters? I might not want to go home since I would feel like I was slumming it.\"\n\nSatasha snickered at her. \"Eventually you will have to return to earth since if you don't it could be considered kidnapping.\" She had been impressed with the quarters as well since they were actually unused leska quarters. Satasha had to grin at Billy. \"I understand you gave out a few more headaches today. I am beginning to wonder if that is a talent of yours.\" \n\nHe snorted at her. \"If the darn fool idiots hadn't tried to treat me like an ignorant barbarian from a backwater world I might not have caused the headaches.\" He growled that out and looked rather annoyed. \"I admit that I did go a bit overboard when I was describing the equations and tossed in some modifications I am thinking about.\"\n\nShe rolled her eyes at him. \"Billy from their point of view you are from a backwater planet since your engines are considered rather primitive to ours. I have a feeling if the mods you are considering it will be a quantum leap for your people and narrow the gap.\" When Sally moved away she moved into his arms and gave him a good kiss. \"You did impress one of the Design Engineers; it was the female on the board. I have a feeling you are going to be busy for the next few days.\" As he stroked her fur she leaned into his arms.\n\n\"Good since she managed to get under my skin before we even started. All I did was ask for some college level books in math and she almost sneered at me.\" He returned the kiss and licked her nose and just for good measure he lightly licked the closest ear. \"I plan on making you test the sound proofing tonight.\" He whispered into her ear after he had licked it. It wasn't normal for him to lick her ear like that but she tended to do it to him and it really tickled.\n\n\"Pappa take it to the bedroom if you are going to be flirting like that. I am sure you have missed the fun bed play but I don't need to see you teasing her like that.\" She was giving him a disapproving frown as she said that.\n\nHe laughed at her when she said that. \"Yes ma'am we will be good till bed time or try to.\" Billy let Satasha go and had to grin when he looked at her eyes. She was definitely looking forward to this evening. \"Would it be possible to go to a dining hall? I am sure the food from the dispenser is good but I want out of the rooms. Oh and if there is a bar here I would love to have a beer or two.\"\n\nRight about then Vangie walked in and overheard what Billy had to say and nodded. \"It is possible and I can act as your escort to there and back.\" He was still dressed in his warrior uniform. \"I think it would be good for both of you to see more of the Ship and Sholan's that aren't warriors. Mind you that you might get a bigger bite of Sholans than you expect simply because most of them have never seen your species before.\"\n\nSally winced slightly at that. \"I hadn't really thought of it that way since to us you are the aliens.\" She moved over to Vangie and pulled his arms around her. \"Furry and sexy aliens but still alien to us.\" She didn't greet him anything like Billy had greeted Satasha.\n\nHe laughed at her comment. \"Sometimes I think you like me just for my fur, I think it is something along the lines of an over sized cat that you can cuddle with.\" He had to tease her before he opened the door and waved them out.\n\n~~~\n\nBilly was still snickering as they approached the recreational section and as soon as they walked in he saw the view port. Actually calling it a view port was wrong since it was either a long screen showing an exterior view or a massive window. The view was beautiful and he slowly moved towards it and ignored the stares he was getting. He knew the majority was because they had never seen a human before. Rumor had probably spread like a wild fire that they had found another race with hyper technology but not necessarily what they looked like.\n\nWhen he finally reached the view port he pressed a hand against it and had to gasp in wonder. \"Oh God that is a wonderful view of space.\" At the moment the Ship wasn't in hyper and the stars were bright and steady. They appeared to be in orbit around a planet which was very green and had more land than water.\n\nSatasha came over and wrapped an arm around him. Vangie did much the same with Sally as she stared as well. \"It is beautiful and thank you for sharing your wonder with me. I guess you could say we tend to get rather jaded when it comes to this since we have been in space for a long time.\"\n\nHe wrapped an arm around her and rested his head on her shoulder. \"I can see space in my ship but it is on a small view screen.\" His actions got some additional stares and he could feel the back of his neck itching. \"Well shall we go and get something to eat? We can come back and look later.\" As he moved away his hand slid down her arm and took her hand in his. As far as what the other Sholans felt he didn't really care. They could think what they wanted but if any said anything then he would take exception to it.",
        "Vangie led them to one of the restaurants. \"This is actually a pay for what you eat place. For the moment you have a small account that will cover the basics such as the occasional meal. It will cover cloths and toiletries if you need them. It is in thanks for bringing Satasha back to the ship.\" It was actually a fairly sizable sum but he didn't want them going nuts and spending it all. \"Tonight I am going to pay for the meal so order what you would like.\"\n\nSince Vangie was on duty Sally walked next to him but other than their arms occasionally brushing she was avoiding anything intimate. She would really love to hold his hand or even wrap her arms around him and relax as they walked but wasn't sure if it was appropriate. Eventually they made it to the restaurant and were seated. That gathered even more stares and a slight murmuring spread through the place.\n\nBilly frowned at the chair since it was designed for the much larger Sholans. \"Man now I feel like a child again.\" Satasha laughed at him and he growled at her. \"I will show you just how adult I am later woman.\"\n\nSatasha snickered and showed him how to pile up the pillows in the chairs so he could reach the table. Once he was seated she curled up in the chair next to him and leaned forward to look at the menu. It tended to change depending on what had come in on one of the supply runs. \n\nBilly leaned over and quietly asked her to read the menu to him. He had the language but not the written aspect. He was going to need to see about that. Billy had learned a bit of it from Satasha teaching him but it was very hit or miss and most of it was related to the engines.\n\nAs she was reading the selections off he noticed that Sally was pretty much doing the same thing he was. He finally gave up since he simply wasn't familiar with their food. \"Go ahead and order whatever you think I will enjoy. A dark beer would be nice if you have such a thing.\" He leaned back in the chair and rolled his head around since he was starting to get a headache. It seemed to be mostly from the stares they were getting.\n\nSatasha looked at him as he was stretching his neck and could see and sort of feel a slight bit of pain from him. \"Are you okay Yilly? You feel like you have a headache.\"\n\nHe sighed. \"I do but it is mostly due to everyone staring at us. I can feel it and it is making the back of my neck itch.\" \n\nSatasha leaned over and touched his hand and focused her limited talents and was rather shocked that his mental feel had changed. She could feel that his talent had expanded which probably explained the headache. He simply didn't know how to shield. She created a shield around him and then spoke into her wrist com. \"Please connect me to one of the telepath tutors. I think we have a developing talent and he needs to be checked out.\" She turned to him. \"The alcohol will help since it sort of numbs that part of the brain. That is one reason most telepaths don't drink a great deal.\"\n\nMoments later one of the servers walked up and Billy had to blink since she had fur that was almost the color of the hairs on a ripe cob of corn. She was rather attractive as well. When that thought went through his mind he felt slightly guilty. Yes Satasha had said that they were not monogamous but it was an idea he wasn't comfortable with.\n\nOnce Satasha ordered food for the two of them then Vangie did much the same for him and Sally. Once the lady had left she turned to Billy and grinned. \"Oh my is someone interested in that very attractive server? I would be a bit jealous if you went to her rooms tonight but tomorrow would be fine if she is interested.\" When Billy flushed a deep red she smiled at him and squeezed his hand.\n\nHe coughed a bit and glared at her. It was mostly because Sally was there and he knew that Satasha was both teasing him and being serious. \"I was just thinking that she has a lovely color of fur you evil woman...\" Damn it he had to admit that he was a bit interested in what she would be like though.\n\nSally ignored the two and was talking quietly with Vangie. Most of it was general conversation but occasionally she would ask a pointed question about why someone was doing something. She was mentally making notes of what she was seeing and would jot them down either before she went to bed or in the morning. It depended on how late they were out.\n\nSatasha snickered at him when he tried to blow it off as just noticing the color of her fur. \"It is a rare color and draws a great deal of attention.\" She squeezed his hand. \"I was being serious though. By Sholan standards you have the right to have a few partners. It is what I grew up with and no it doesn't bother me. Well actually it really depends on the person you might choose to spend time with. There are some that I would be rather annoyed if you went with them. Her though, she is a really nice person and I sort of know her.\"\n\nHe sighed at her. \"You might have grown up with it but I didn't and would feel awkward doing something like that.\" The thought was there but it was something he would have to think about. \n\nThe drinks came out first and a few minutes later the food. Satasha couldn't help but talk to Z'Marl for a moment. \"Hey, it is good to see you again. I want to introduce you to my companion Yilly. The lady over there is his oldest girl and her name is Sally. When I crash landed on his land he helped me get back to the ship. We had to finish repairing his ship first but once done he brought me straight here.\" \n\nZ'Marl looked as startled as most of the others when Satasha introduce him as her companion and had to turn a curious look at him. \"That was very nice of him to help you back. I have to admit I was starting to worry when you didn't come back on time.\" She gave him another appraising look and then smiled at him. \"Can I invite him to dinner?\"\n\nBilly turned red again and for a very brief moment he had the urge to strangle Satasha. He knew what she was doing by introducing the two and he knew what the invitation meant. *I am going to get you back.* He tried thinking that to her and was surprised when she looked startled. \"A meal would be nice but beyond that I don't know. I would have to really think about it. It isn't that you aren't attractive but due to cultural differences. You do have lovely fur though.\"\n\n\"Well in that case why don't you have Satasha bring you here tomorrow for dinner. I will meet you about 7ish.\" She smiled at him and then gestured at the drinks of the two humans. \"Since you helped Satasha back your drinks are on the house.\" With a smile she left the table.\n\n\"Satasha you might be sleeping on the couch tonight.\" He wasn't sure how he felt about her setting him up with another female and was going to have to really think about it. \"Thank goodness I am going to be talking to the engineers tomorrow. That will calm my nerves and I hope I don't give them any more headaches.\" He was still holding her hand and gave it a gentle squeeze before he let go and took a sip of the beer. It was interesting but very different from what he had ever had before.\n\nSatasha snickered at him and his threat. \"Relax Yilly, even if it is simply dinner it will help you to get to know other Sholans both male and female.\" She returned the squeeze and then took a sip of her wine. \"Dinner smells wonderful doesn't it? Better than that generic crap they have been serving to us.\" She leaned forward and started nibbling on something that looked like a salad.\n\nBilly sort of grunted. \"I have gotten used to packaged meals since I can't cook so to me it wasn't that bad. I have to admit that the food smells interesting.\" He took a small bite and munched on it and actually smiled. \"Not bad at all. I don't know what is in here but I like the taste.\" He started seriously munching down though he was paying attention to the bites she seemed to really like. \n\nBilly speared what looked like a purple beet but tasted sort of like a radish. He held the fork out and when she turned to take the bite he slowly moved the fork away from her and snickered when she realized what he was doing and she lunged forward. Satasha snatched the bite but before she started eating he leaned over and since she was close gave her a kiss.\n\nShe was a bit startled but returned the kiss and munched on the veggie. \"I do love those things. Mom swore that I lived on them for several years when I was a little.\" Once she was done eating it she leaned over and wrapped a hand around the back of his neck and pulled him into a more intimate kiss and then nipped the end of his nose. \"That is for being a stinker.\"\n\nBilly grinned and returned to the salad. The rest of the meal was very enjoyable as well though one thing he noticed was that they had several courses and it was a slow meal. It actually felt rather good to sit back and relax with a meal and have small talk while they were eating. They traded bites of food which got even more attention. He knew it was something Sholans did mostly with someone they were very close too and intimate with.\n\nPart way through the meal her comm beeped and when she answered it she was told to report to the quarters of one of the telepaths aboard the ship. She acknowledged the order and sighed. \"Well we are going to have to eat a bit faster since we don't want to keep him waiting.\n\nAs they were eating the waitress stopped at his end of the table and smiled at him. \"Would you mind if I felt your hand? I would like to see what your skin feels like.\" When Billy held his hand out she took it and lightly stroked it. \"Wow, it is so soft.\" She let go of his hand and with another smile continued on with her work.\n\nBilly frowned at Satasha when she snickered at him. They had just finished eating and he sighed. \"Well we are going to need to get going and Vangie you can escort us there and then go back to our quarters. I will have a different warrior come and get us since I have no idea how long this will take. I am sure you have other things you want or need to do.\" He gave him a slight grin.\n\nVangie pretended to be serious when he responded. \"I am simply following orders to make sure that you are safe. I will ensure your daughter is very safe till the morning.\" Sally choked on the last sip of wine and glared at both Vangie and her father and Vangie started grinning. \"Can you think of a safer place than sleeping next to a warrior?\"\n\nBilly laughed as all of them stood up after he was shown how to pay for the meal. Vangie was still grinning when they left the restaurant. Well till Sally punched his arm. \"Buster you might end up on a couch as well. That way you would be closer to the door if it opens and it isn't one of us four.\"\n\nBilly traded looks with Satasha but remained silent as they were shown to the quarters of the telepath. \"Thank you Vangie and like I said I will call for a different warrior to bring us back. Enjoy your evening.\" He gave the male a good slap on his back and walked into the quarters when the door was opened and they were waved in.\n\n\"So what can I do for you Satasha?\" He asked once they were seated. There were several cups of c'shar on the table and with a nod Billy picked on up and took a sip as the two talked shop for a few minutes. \"So you think he is starting to show some new powers correct? It might be that linking with you and even me has catalyzed a dormant ability and that is a known happening.\" He looked at Billy and waved him over to the chair he was in. \"I need to touch your temples to check. This is a bit more invasive than what I was doing the other day since I will be checking the section of the brain that deals with talents.\"\n\nBilly stood and walked over to him and when he indicated for him to sit on the floor in front of him he frowned slightly but did as requested. \"Just do me a favor and don't fry my brain. I have a few more headaches to cause tomorrow. Well that and I like my brain the way it is.\"\n\nG'Houl laughed lightly. \"You do seem good at doing that. Maybe if you stopped thinking so much that might help the problem.\" He touched Billy's temples with his hands and slowly synched his mind with Billy's and then slowly probed his mind. It was different from a Sholan mind but not nearly as much as he expected. Eventually he pulled back and contemplated what he had felt. \"He does have a talent and it has gotten stronger than when I first worked with him.\"\n\nG'Houl stood up and walked to a cabinet and pulled out what looked like an oversized watch. He strapped it to Billy's wrist and adjusted it. \"This is a personal damper that will shield you from feeling or sensing others. You are going to need training on shielding and the use of your talent as does your daughter.\"\n\nBilly was rubbing his forehead but he did feel better once the damper was wrapped around his wrist. \"I don't know how feasible that is since when I am listed as lost or had an engine malfunction they will start a search for me. I have to admit I would like to stay here with my companion and learn more about your society and technology.\" He rolled his head on his neck again which helped.\n\nHe considered it. \"Since we have now encountered your species we will be sending a first contact team. I will speak with the senior officers on the ship and recommend that you either take or lead the first contact team. I will probably be included and I can give you training while we are dealing with that. I am going to have purple added to you and your daughters clothing.\" He indicated they could leave which they did.\n\nSatasha called for the warrior escort back to their rooms. Shortly he arrived and indicated they were to follow him which they did. A few minutes later they were at their quarters and the warrior gave them a nod and left as they walked in.\n\nBilly sighed and started towards the bedroom. \"I am tired and think I need some sleep. Do you want to crawl in with me or stay up for a while?\" He figured he had enough energy for a bit of fun and he gave her a rather sensuous smile.\n\nShe shook her head at him as he smiled at her. \"Not sure you have enough energy for anything other than some cuddling and then sleep.\" Satasha walked over to him and the two of them walked into the bedroom. A few moments later they had stripped off their clothing.\n\nBilly sat on the edge of the bed and rolled his neck again. When Satasha crawled into bed and moved over and started massaging his neck and upper back all he could do was groan. Unfortunately by the time she was done he was beat. He leaned back against her. \"That was lovely but I am about ready to pass out. Sorry about that since I really wanted to make love to you.\"\n\nShe wrapped her arms around him and gave him a good hug. \"I understand. You will find at first using your powers will tire you out. Lay down in my arms and in the morning we can have some fun.\" She urged him down into the bed and pulled the covers up and curled closely around him. Satasha simply held him and was purring which usually helped him go to sleep fairly quickly.\n\nHe pulled her arm a bit tighter around him and snuggled into her warmth and was quickly asleep. Both the feel of her fur and the purring helped him go to sleep most all the time. When he awoke the next morning he was now facing Satasha and had to smile since she looked peaceful. That and when she was asleep she looked young. It was something he hadn't really noticed before she had mentioned her age.\n\nWith an evil grin he licked her nose and then started giving her face a tongue bath. His tongue wasn't nearly as long as hers was but he decided turn about was fair play. She didn't really wake till he started licking her ears and then started nibbling them.\n\nSatasha woke with a start as he started working on an ear and tried to lean away from him but his arms were firmly around her head. It took her a moment to realize that part of her face was damp from his licking as well and she muttered at him. \"Yilly you stinker I was still asleep.\" She tried moving away from him only to find she was now on her back and he was straddling her.\n\n\"Well you are awake now so there.\" He continued his nibbling and worked his way down her ear and then started on the jaw. Eventually he reached her mouth and gave her a good kiss. \"Not a bad way to wake up I hope.\" He slid his tongue into her mouth and let it wander around her teeth. They still fascinated him and he was having fun.\n\n\"Grrr you evil man.\" As he was nibbling on her she started running her hands up his back and let her claws come out just enough to give some additional sensations. Satasha let him explore her mouth for a few moments and then grinned.\n\nWith a shift of her hips she rolled them over so he was on the bottom. \"There is one thing I have been meaning to do and it is time.\" One of her hands slid down the back of his neck and grasped the back of it. When he tilted his head back she smiled and leaned down and grasped his neck in her teeth and pressed them against his neck till his body relaxed and then she let go. \"Now you are my companion as well I yours.\"\n\nHe hadn't expected that but by the time she let go he was definitely nice and hard and he was going to make the best of it. \"I was wondering when you would get around to it.\" He slid his hands down her back and stroked the base of her tail. \"We are going to have fun this morning and as hard as I am right now it might take some time.\" His mouth worked down her neck and chest and found a nipple and lightly nibbled it.\n\nShe was definitely enjoying their love making and though it was sort of rushed she felt very content. \"Meow baby meow...\" She was teasing him a bit with that and he snickered. \"Well time for a shower and to get ready for the day.\" Satasha would have loved to spend a bit more time in bed but her comm had alerted her to an appointment with a tutor for Billy.\n\nWhen she rolled off him and headed towards the shower he rolled off the bed and followed her. Vangie and Sally were already in there and she was leaning against the wall as Vangie worked his way down her back and legs. \n\n\"Morning all.\" Billy said as he climbed into the other side of the shower and let the hot water flow over his head and down his back. Eventually he turned and started working on Satasha's hair and back.\n\nOnce they were clean they met up in the living area and settled for something from the dispenser though Billy went with some of the instant coffee he had brought over. When Vangie sniffed at it Billy grinned. \"Not unless you want to be drunk on duty. It has an effect like alcohol on you. I can make you some this evening.\"\n\nVangie sniffed again and sighed. \"That smells really good and I think I will take you up on the offer tonight.\" He returned to the food and started eating.\n\nBilly smiled at Sally. \"So did you have an enjoyable evening last night?\" He assumed they had gone all the way and was sort of curious as to what she had to say about it.\n\n\"We did Pappa and yes we had fun but that is all I am going to say about it.\" She was lightly leaning against Vangie. \"I will say that he was very gentle and caring. I like him and what I know of him so far. Can we take him back with when we leave?\"\n\nBoth Vangie and Billy choked on that. Billy had to cough a time or two before he could speak. \"I don't think so since the captain of this Ship might object to you stealing members of his crew.\"\n\nBoth males sort of glared at Sally for a moment and then went back to eating. Eventually they finished and they stood up. \"Sally you have an appointment with the tutor after your father is done. Till then would you like to see more of the ship? I can take you to the nature reserve and show you around if you want.\n\nShe nodded. \"That sounds like a fun and relaxing way to get ready for the tutor.\" He was in his uniform again so she resisted the urge to take his hand as they left. She did give him a good kiss before leaving though.\n\nHe showed them to the tutor's office and told them to call for a warrior since after the session he was going to speak to the Design Group again. \"Yilly try not to give them any more headaches. One or two mentioned you had done that and they had to go to medical for meds to kill the pain.\" He smirked at him when he said that.",
        "\"I can't guarantee that Vangie but will do my best.\" He didn't say his best at not giving them headaches. He was still a bit annoyed with the backwater treatment they had given him at the beginning. Eventually they made it to the tutor's office and he waved at them as he and Satasha walked in. \"Good morning Sir. I think I am here to learn how to shield.\"\n\nThe Sholan waved the two of them over to some comfortable chairs. \"Turn off the damper and we will get started.\" \n\nBilly did that and by the time they were done he had the basics down. He had been taking notes on a VR screen which got him a strange look.\n\nSatasha sort of grinned. \"Don't ask unless you want a headache. Yilly thinks and occasionally speaks in math so far above me I just sort of nod and let him talk.\" She shook her head since once in a blue moon she almost felt like an idiot next to him.\n\nHe raised his eyebrows. \"Well when you have your shielding down I would like to see what you did with the notes.\"\n\nBilly nodded as he made a few more notations and saved them. \"Thank you for the start on the training and your help but I need to get going since I have an appointment. I am probably going to give your Design Engineers more headaches today.\" \n\nThe rest of the day went much like the day before with the exception that they didn't treat him as an idiot. There was a definite sense of they were going to be careful with him and not give him any more information than needed. By the end of the day he had covered several more screens and all four were frowning. \"Sorry if I gave you another headache but I am not sure how not to do that. This is simply how my brain works.\"\n\nOnce he was back in the suite he flopped in a chair and sort of stretched and yawned. \"Vangie I am sorry but I gave most of them another headache. I have a feeling that they reviewed my work last night and came to the conclusion that I actually know what I am talking about.\"\n\nSatasha came out of the bedroom. \"Don't forget you are having dinner with Z'Marl this evening and you should dress up a bit.\" She had purchased a few things for him to wear though he was going to feel a bit silly since they were Sholan cloths.\n\nHe grumbled at her and walked into their room and stared at the clothing. \"What the heck is that? Why are you putting me into a tabard and an over robe? I am going to look utterly silly meeting her dressed like that.\"\n\nSatasha laughed at him. \"I am sure you will look very nice in them. You really don't have any dressy clothing so I figured you could wear some of ours.\" He was still grumbling as he stripped down though he left his under wear on. She helped him with the tabard which hung down to about his knees. The over robe was a bit longer and covered the open sides of the tabard. She worked his hair into a tidy braid and finished it off with a silver looking ponytail holder. \"You look wonderful Yilly.\"\n\nHe looked in the mirror and shook his head. \"I feel really silly with my legs showing. The colors are nice and the purple trimming sort of stands out.\" He moved around and decided that he wasn't going to show too much skin as long as he was careful. Billy walked into the living area and both Vangie and Sally smiled.\n\n\"You look good Pappa. Different but good, the colors look good on you and I hope you have an enjoyable evening.\" Her smile widened and he grumbled at her and she simply leaned against Vangie. \"See you later this evening or tomorrow morning.\"\n\nVangie spoke. \"Oh, Satasha you can escort him around as well. This evening if he does choose to go to her quarters he will have to call for a warrior since only the two of us are allowed to escort him. Either that or you stay sort of close to them and escort them around as needed.\"\n\nSatasha nodded. \"I think I can handle that. It does make it more flexible for all of us if I can escort them around.\" She led Billy out of the rooms and tucked her arm around his and they slowly walked down to the rec level. By the time they arrived Z'Marl was already seated and there were three seats at the table.\n\n\"Good evening to both of you. Vangie contacted me and let me know that Satasha needs to stay close so you have your escort to keep all of your admirers away from you.\" She grinned at him when she said that and he almost choked.\n\n\"God you Sholans might be the death of me.\" He rolled his eyes as he settled down in the chair next to Z'Marl as Satasha took the seat across from them. Billy was feeling really odd at the moment. His companion was sitting with them. There was a sort of expectation of sex later in the evening and heaven only knew what else. Since she looked like she had dressed up he gave her a warm smile. \"You look very nice this evening.\"\n\nShe lowered her ears a bit and gave him a shy smile. \"Thank you and you look really nice as well.\" She tilted her head as she looked at him. \"You have purple on. Does that mean you are a telepath?\" They hadn't met any other telepathic species in their travels.\n\n\"I guess I could be a telepath but I am just starting to learn about my abilities. Satasha thinks I have an affinity for engines and electronics which might be possible.\" He grinned at her. \"Just don't ask to see my work. It seems to give everyone headaches.\"\n\nZ'Marl raised an eyebrow at him and then glanced at Satasha who nodded. \"So why would it give others a headache?\" That seemed rather odd to hear about. As she was talking drinks were delivered. \"I hope you don't mind but I already placed the order and I hope you like the choices.\"\n\nBilly shrugged. \"Not really sure but every time I start explaining my theories and equations half the time they tell me to stop talking. The Design Board I have been talking to have been getting headaches as well.\" He casually shrugged again. \"That is fine and since you are buying me dinner I can't complain. Is there somewhere to dance around here? I don't know how you dance but I used to be pretty good.\"\n\nHe took a sip of the wine and had to lift the glass and look at the color and then sniffed it and smiled. \"Not sure what this is made of but it has a nice bouquet and a very interesting taste.\" He took another sip and then put the glass down. Since their chairs were close he leaned over and lightly rubbed his cheek with hers. \"I really don't know what might happen tonight but thank you for offering me dinner. I am pleased and honored that you would even consider it.\"\n\nWhen he did that he smiled and could feel a sense of amusement from Satasha and he mentally growled at her. \"Satasha how old is she? If she is younger than Sally I am not going to be pleased.\" That was asked in English. \"Sorry Z'Marl but some concepts I still have a problem phrasing in Sholan. So how long have you been working aboard the ship?\"\n\nSatasha simply smiled at him. \"She is an adult and that is all that matters and I am not going to tell you her age. Simply relax and enjoy the meal and maybe some time with her.\" She replied in English as well. Satasha even went as far as to take a sip of her drink and pulled out what looked like an e-reader and ignored the two of them. *Kitty skin rug for my Captains quarters.* He sent to her.\n\nShe leaned close to him, or as close as the chairs would allow, and smiled. \"Satasha told me not to answer certain question though I am not sure why.\" Z'Marl gave Satasha a questioning look and Billy had to roll his eyes. \"I have been working as a server for several years. First on Shola and then aboard this ship and I enjoy it. I get to meet a number of fascinating people while I am serving them.\" She smiled a happy smile. \"I even got to serve the Legien and Legiena of one of the sixteen telepathic clans. That was very enjoyable and they were very polite to me.\"\n\nBilly had to smile at her enthusiasm and he could feel the enjoyment of the job she did. \"I am glad you enjoy your work. I enjoy being the Captain of a small ship. Satasha described me as having travelling feet and a different Sholan asked me why I wasn't still designing ships and engines.\" He shrugged and grinned. \"I enjoy both but thanks to that furry kitty across from us managed to kick start my brain and all sort of interesting things fell out.\"\n\nSatasha snorted at him. \"Yes and now you are having a great deal of fun giving us normal folks headaches.\" She looked up at Z'Marl and shook her head. \"Don't bother as you will probably end up with a headache as well.\"\n\nBilly snickered at her. \"I haven't given everyone a headache. The tutor this morning seemed content with how I was doing with the basic shielding.\" He took another sip of the wine and had to appreciate it again. \"This is an excellent vintage. I don't know if you have actually tried it but would you like a sip?\"\n\nShe lowered her ears and gently took the glass from him and took a small sip. \"It is very good. I think this is from the Valsgarth estate since they grow a variety of fruits for wines.\" Z'Marl returned it and tilted her head. \"Even if it is way above my head I wouldn't mind seeing some of what you have designed.\" As she was talking she handed her glass to him and after taking a sip he handed it back.\n\n\"Fascinating taste, most of the wines we have are from a variety of a fruit we call grapes. There are some specialty wines that are made with different fruits but they tend to be more expensive.\" The salads were delivered and the server winked at them and he had to roll his eyes. \"I can show you but if you end up with a headache it is on your shoulders.\"\n\nSatasha growled at him. \"I am going to put my earbuds in and ignore you two. Remember I don't want to hear any complaints from you Z'Marl.\" She stuck them in as Billy was pulling out his glasses.\n\nZ'Marl pulled hers out and linked them together. \"This is the equation I started with to re-crystallize the hyper tubes and...\" He went on to describe how the equation worked and was startled when she started running her finger along the lines. She was also nodding as she was going along.\n\n\"Wow that is fascinating. You said you created this by yourself?\" Z'Marl ran her fingers over the equations again and gave him an excited smile. \"That is a very elegant equation you created. I would love to see more of your work later. Right now the salad is calling my name.\"\n\nSatasha looked up at Z'Marl and gave her a hard look. \"How much of that did you really understand? Were you just nodding at all the right times like I tend to do?\" She had a feeling the answer was going to upset her.\n\nZ'Marl twitched her ears at Satasha and grinned. \"Some of it was above me but Yilly did an excellent job of explaining it. It was simply fascinating and I would love to see more of it.\" She leaned over and rubbed Billy's cheek with hers. \"Smart people are so attractive and fun to talk to.\"\n\nSatasha glared at the two of them and then covered her face. \"Vartra's bones I am not sure I can handle a meal of geek speak flirting. As Vangie said my poor widdle brain might just melt down.\" She was peaking between her fingers and both were snickering at her.\n\nBilly snickered at her. \"I seem to remember your brain having a meltdown this morning and it didn't have anything to do with geek speak.\" He sent her a few images from that morning before turning to the salad and started munching. It was a different type than last night and one bite managed to make his mouth pucker. \"Okay, something in here has serious pucker power.\"\n\nSatasha growled at him as he teased her and then sent her the imagines. \"Yilly you are going to so get it later...\" She sent him an image of a human skin rug in her living quarters in revenge.\n\n\"But I am not furry Tasha so it just wouldn't be the same.\" He said to her and grinned at Z'Marl. \"Just trading jokes with Tasha. I am still getting used to talk to her with my mind and send images. I will try not to do that again since it is impolite.\" He lightly licked her muzzle and went back to eating.\n\nAs the meal progressed Billy was becoming fairly impressed with Z'Marl since she was very smart and it showed in little ways. It might be a simple turn of words, a nod if he slipped and mentioned and equations, and what seemed to be a vast knowledge of her world. He loved Satasha and was going to bond with her when possible but Z'Marl fascinated him since she was obviously far more intelligent than she came across as when she was serving last night. Satasha joined in occasionally as well and all told it was an enjoyable evening.\n\nOnce they had finished eating all three stood up and Z'Marl smiled. \"The dancing club I normally prefer is this way.\" She started down the concourse.\n\nBilly took Satasha's hand and gave it a squeeze before giving her a good kiss. He also offered his arm to Z'Marl and they started walking. Eventually he ended up with his arm around Satasha since he wanted to ensure that she knew he loved her and didn't get jealous of him and Z'Marl talking shop. When they did reach the dance area he had to smile at the looks they were getting. \"I might be able to get used to having a lovely lady on each side of me. We are getting some serious stares aren't we?\"\n\nSatasha appreciated his gesture though he didn't really need to. They were companions and both wanted a bonding contract. She could feel his love for her and it was a small warm glow in her mind and made her want to melt. Satasha could also feel his curiosity about Z'Marl and how smart she actually was. There was a faint concern that she was a plant to see if he was really telling them about his equations.\n\n\"We are Yilly and you are such a flirt. I might have to set up appointments to share you with the other women who find you interesting.\" She grinned when he blushed. \"Believe me Yilly I have had a number of questions about you and what you are like. The majority is females but there were one or two males that were interested as well.\" She knew he didn't swing that way but had to tease him.\n\nHis face froze for a moment and then he growled at her. \"I don't think so unless you get a good return on my evenings and I want half of what you make.\" Billy listened to Z'Marl almost choke as she was trying not to laugh and he grinned at her. \"Well if she is going to pimp me out I want a portion of what she is making.\"\n\nZ'Marl started laughing at the two of them. \"God both of you are made for each other. I knew Satasha had a semi-warped sense of humor but I didn't know it was that bad.\" She was giggling as they walked into the club and just for good measure ran her tail up his leg and just under his tabard.\n\nBilly almost glowered at her. \"Excuse me that is my leg for the moment and no tickling it with your tail.\" The music was reasonably mellow but it had a nice beat to it. What the band or group who made it was really singing about he had no clue but it didn't matter. Billy turned towards Z'Marl and rested his hands on her waist and started dancing with her. Behind him he could feel Satasha dancing close and he started blushing.\n\nThey danced for a while and by the time they were done he was feeling relaxed though a bit sweaty. \"Man I need to sit down and have a long tall cool drink.\" Satasha was panting a bit as well and Z'Marl was looking quite pleased.\n\n\"Well if you would like to come to my cabin and relax and talk for a while I would enjoy that. I understand what you were saying about cultural differences and will respect that.\" She nuzzled his cheek and leaned against him. \"I have to admit I am a bit tired as well.\"\n\nBilly contemplated that as they slowly walked down the concourse and finally nodded. \"That sounds very enjoyable. I have gotten to know my companion and some about her family. The male who is sort of seeing my daughter I have talked to as well and he seems like a good male. I would love to spend some time getting to know you.\" He smiled at Satasha and gave her a kiss. \"A very pretty lady told me I have wandering feet and getting to know people on our colony worlds is something I greatly enjoy.\"\n\nSatasha returned the kiss and then snickered. \"I can see where Sally got her urges for her degree though in her case the traveling would be to learn about the planets. She would settle in one place for a year or two before moving on. I have to wonder if your youngest girl got your curiosity as well.\"\n\nHe shook his head. \"No, she got my brains but is seeing a nice young man at her college. Both are looking to go into medicine and then assuming they still feel the same settle down and produce a number of grandchildren for me.\"\n\nZ'Marl gave him an evaluating look. \"How old are your children?\" From the sounds of it they were mostly grown. He might be older than he looked not that it bothered her.\n\nBilly frowned slightly. \"Sholans and human's age and mature differently so trying to give their ages in the Sholan equivalent is difficult. Sally would be about 20 or 21 in Sholan estimates and Danielle would be a bit over 15. Mind you she doesn't want kids till after she has her degree so she would be 23 or so at that point.\"\n\nZ'Marl contemplated that and shook her head. \"I can understand the trouble matching age equivalencies but your youngest sounds simply too young to be contemplating having a baby.\" It sounded so odd based on what he said.\n\nSatasha sort of shrugged. \"We just mature differently and I doubt Yilly wants to get into any psycho-sexual differences right now. He is probably itching to pull his equations out and see if you get a headache.\" She lightly poked him in the ribs. \"No getting out of fun that way. You can just say no if you want.\"\n\nHe laughed at her and changed the subject as they slowly walked towards Z'Marl's quarters. Eventually they reached them and he gave Satasha a good kiss and just for good measure gave one ear a good lick. When she said 'Gah' and then 'human germs' he snickered and walked into the room with Z'Marl. It wasn't nearly as large as the rooms they were staying in but they were nicely decorated and he had to appreciate some of the paintings on the wall.\n\nShe took her over robe off and got two drinks from the dispenser and settled down on the couch. \"That is a painting done by one of my relatives and shows the Vegan mountain range after a rain storm. I love looking at it as well since it reminds me of home.\"\n\nBilly finally moved over to the couch and curled up next to her and wrapped an arm around her shoulders. He let out a contented sigh as they both looked at the painting. \"Makes me think of the Smokey Mountains near where I live. The fog will come down and you can barely see the mountain tops. It is almost like they are in a fantasy land and only show at certain times.\"\n\nWhen he wrapped an arm around her she leaned into him and rested her head on his shoulder. \"Ours look like that at times as well. I will sit in back of the house with a jacket on and a hot cup of c'shar. I will stare at the mountains and imagine what that other world looks like.\" She relaxed even further against him and closed her eyes and relaxed.\n\nBilly had to smile since she seemed content to just sit there and relax. It actually felt nice to get away from everyone and sort of in his own way have some him time. Looking back from the moment Satasha had crashed they seemed to have been thrown together. Add Sandi, Jenna, and Sally he really hadn't had much alone time. That was one thing he loved about owning his own ship. Between worlds he had time to think and relax. \n\n\"Thank you for inviting me out for dinner. I greatly enjoyed it and the dancing. Since Tasha crash landed I haven't had much time to just get out and relax. I had been working on my ship for a good month and a half before that and another two months or so after she landed.\" He rested his head on the top of hers and closed his eyes and enjoyed the warmth and the soft fur. \"I hate to sound bad but did you really understand the equations?\"\n\nZ'Marl lightly rubbed her head against his shoulder as he spoke. \"That sounds like a grueling few months and I don't blame you for needing to blow off some steam.\" When he asked her if she had really understood him she nodded. \"I don't like to show how smart I am. It tended to get me stared at in school so I sort of hid it.\"",
        "Billy laughed quietly. \"You should listen to my two closest friends not to mention my girls. They keep telling me I gave them an inferiority complex growing up. I think I gave some of my teacher's headaches since they all looked peptic while I was in their classes. One teacher was overheard saying that I was driving him to drinking.\"\n\nAs he was talking he started running his hand along her arm. \"I never really thought about it till I was older since when I was a kid I just wanted to learn as much as possible. That is one reason I ended up working for the Naval Design department. I love trying to stretch my mind and designing new things. I hated having to leave the service since they let me play with all kinds of fascinating toys.\"\n\nShe rested her hand on his leg as he was talking and had to shake her head. \"That sounds so strange since it would draw attention to you.\" Z'Marl was a rather private person and preferred not to have that type of attention drawn to her. Out of nowhere a sneeze caught her by surprise and she barely managed to catch it with a tissue. \"Excuse me. I have been sneezing a bit though I am not sure why.\" She settled back down next to him. \"So why did you get out of the military if you enjoyed it so much?\"\n\nBilly tensed up slightly before he answered. \"My wife died delivering my second child. I got out so I could be the one to raise them. That is one reason I purchased my ship. It gave me something to do while trying to deal with my grief.\" He gave her a slight hug after saying that to let her know he didn't mind answering.\n\n\"Oh I am so sorry to hear that.\" She gave him a hug and then curled up in his lap and gave him another hug and light kiss. \"Would you mind showing me more of your work? And just so you know I am not asking for that for any other purpose than it was fun stretching my brain.\" She licked his neck and tucked her nose into the side of his neck as well. \"If you don't feel like it we can talk family and travels and places we have seen as well.\"\n\nBilly snorted. \"If you asked Satasha or my oldest girl I tend to use stretching my mind to get out of a grumpy mood. Mind you I am not in a grumpy mood but I am very pleased to meet someone I didn't manage to give a headache to.\" He pulled out a Sholan set of VR glasses and waited for her to pull hers out.\n\nOnce she did he took a drink and pulled up some additional equations and they curled up and started talking about them. They talked for a fair amount of time and Billy oddly enough was having a very enjoyable evening. Before he realized it the hour had gotten late and he yawned. \"I would enjoy spending the night with you but for right now I think just a bit of cuddling in bed and then sleep.\" He leaned over and kissed her after saying that.\n\nShe yawned as well and pulled her glasses off. \"You have a very interesting mind Yilly and thank you for being willing to share that with me. It was very nice to actually stretch my brain.\" She leaned into the kiss and hugged him. \"I understand and had actually expected you to go back to your rooms.\" She slid off his lap and pulled him to his feet. \"My quarters are probably much smaller than yours but the beds and showers will be pretty much the same.\"\n\nBilly let her pull him up off the couch and curled an arm around her and let her show him towards the bed room. \"They might be small but I have been admiring the pictures and decorations all evening.\" One finger was run across a statue, or just over the statue since he didn't want to just touch without permission. \"Thank you for understanding. I would like to spend more time with you and not just because I don't give you headaches.\"\n\nShe returned the kiss he had given her and snickered a bit. \"I don't know why but that is amusing to me.\" Z'Marl watched him appreciate the statue of the Green Goddess. It showed an adult female Sholan with a baby in her arms, a young child leaning against her and some animals gathered around her. \"That is the Green Goddess and is one of the primary deities for Sholan females.\" After a few minutes she gave him a gentle tug into her bedroom.\n\n\"Well it is a lovely statue and you can almost feel the caring for the young cubs.\" He had to smile at it and then let her pull him into her room. It was most definitely smaller than the rooms the four of them lived in currently but again they were nicely decorated. As he was looking around she pulled her over robe and tabard off and draped them across a chair. When he noticed he didn't really think and stripped down as well and rolled into the bed. \"God I want to steal the technology behind the beds.\"\n\nShe snickered at his comment and rolled into bed as well and scooted over next to him. \"What? You don't want to steal engine technology? I am shocked and horrified.\" As she moved towards him he rolled on his side and wrapped an arm around her. She lightly ran a hand up and down his arm. \"It feels odd not to feel fur. Your skin is pretty soft as well.\"\n\nBilly snorted. \"Nah though I would love to study them but with our current tech level it would be too hard to try and incorporate the two technologies. If the changes I am contemplating work it will be a massive leap forward for us.\" He moved closer to her and stroked her back and sides to feel the differences between her and Satasha. \n\nAfter cuddling and talking for a while they ended up falling asleep curled up together. Billy slept almost as well as he did with Satasha though Z'Marl had a different mental feel to her. Satasha came across as career oriented and goal oriented. Z'Marl came across as comfortable and content with what she was doing. He might have to convince her to help him with his equations. She could definitely help him with the Sholan math symbols. \n\n~~~\n\nThe next morning he was awakened by her stretching next to him. He couldn't resist and reached over and tried one of the spots Tasha was ticklish and got a squeak back from her. \"That is for being a tease and stretching that way.\" There was a hint of a smile on his face and a twinkle in his eyes when he said that.\n\nShe hissed at him before finishing the stretch. Before he could really move she rolled over so she was straddling him. Z'Marl curled her hands around his and leaned over and gave him a slow kiss before starting to nip at his lips. \"I would enjoy some fun this morning if you are interested. It is usually a good way to wake up.\"\n\nAt first Billy was a bit startled and then he closed his eyes and leaned into the kiss and then the nibbling. \"mmmm, don't stop. That feels really good.\" He shifted his head to one side and she started working along his jaw and neck. Billy didn't really notice that he was responding as a Sholan would and simply enjoyed the feelings.\n\nShe sat up for a moment and looked down at him. \"Do you realize you are reacting as a Sholan would? Satasha has taught you a great deal.\" She leaned back down and continued nipping. They played for a while before they finished the bed play and collapsed on their side for a few minutes to catch their breath. \n\nHe hadn't thought about that and was too busy enjoying the feelings she was causing. Once they were done he gave her a hug and a light kiss. \"That was quite enjoyable but no telling anyone how much fun we had. Having two ladies that I want to spend time with is more than enough.\" He pulled her head down and rubbed her cheek with his. \"I do need to grab a shower and get back to my rooms. I get to cause more headaches today.\"\n\n~~~\n\nSatasha showed up at Z'Marl's rooms shortly after they had showered and had a warm smile on her face. \"I am glad you had an enjoyable evening and night.\" She pulled him into a hug and good kiss which was returned. \"Thank you for showing my companion an enjoyable evening. I could feel his contentment and relaxation.\" She gave the other woman a good hug. \"Oh here are some clean clothes for you and from here we go to the tutor.\" She paused. \"Okay, after we grab a quick meal in the chow hall.\"\n\nBilly grabbed the cloths and pulled them on and had to grin when it was some coveralls and a plaid shirt. \"Satasha you are a stinker. Now all I need is a stalk of hay sticking out one corner of my mouth and I would look like a real redneck.\" He turned and gave Z'Marl a good hug. \"Don't be a stranger and later Satasha can give you our comm number.\" With a wave both left the room.\n\nThey quickly headed to the chow hall and got something to eat. They were getting stared at but it didn't bother him nearly as much now that he had the damper and was learning to shield. He could feel Satasha's curiosity and he simply smiled as they ate. Once they were done she led them to the tutor and let the assistant know they were there.\n\nMoments later they were invited in and the tutor smiled at them. \"So are you going to break out your glasses today?\" There was a gentle humor when he spoke. Billy rather fascinated him and there was definitely more activity in his brain than normal. \"I have also scheduled both of you for some additional scan in medical to see what if any changes there are since your talent is getting stronger.\" He looked at Satasha. \"Yours seems to be getting a bit stronger as well.\"\n\nBilly grinned at the male. \"Most definitely, I am trying to see if I can define at least some basic equation that will create a general boundary for my talent. I also want to run it through some set theory to see if there is a reasonable possibility of my talents also being related to how my mind works.\" When Satasha rolled her eyes at him he simply squeezed her hand.\n\nThe tutor shook his head. \"Good luck and now start with what you learned yesterday...\" They were there for an hour like the day before. \n\nBilly had a bit of a headache and decided it was just stretching his talents as Satasha had mentioned the other night. He chose to ignore it and a few minutes later he was back in the room he had been in for the last couple of days. When the screen activated he nodded towards them. \"Shall we start where we left off or do you have questions for me?\"\n\nThe female on the board cleared her throat. \"I do have some questions but first I wanted to apologize for how I treated you the first day. It was just hard to believe someone from such a young world could have come up with these equations. That isn't even taking into consideration the few modifications to the engines you have shown us. I can tell from the schematics and equations there is a large amount of additional information. I have cleared you to have access to selected math books. I would really like to see this converted to our math since we aren't totally positive that we are changing it correctly.\"\n\nBilly bowed slightly to her. \"Thank you for the apology and I have to apologize for the way I acted that day. It has been a very long time since anyone questioned my talents, I mean skills with working with hyper engines and shielding. Thank you also for allowing me access to the books. I will need either the engineer or Satasha to help me read them for a while till I really start learning your written language.\"\n\nHe smiled at all four. \"Now to get started we left off at...\" He actually spent a decent portion of the morning answering questions and reviewing what he had shown them over the last two days. When lunch was delivered his stomach did a sort of flip flop and didn't smell good.\n\n\"I think I am going to skip lunch. It feels like my stomach has had enough alien food and needs to settle down. I will see about getting some of the food from my ship later.\" The engineer looked at him. \"Do you need to go to medical? We really don't want you to get sick while you are here.\"\n\nBilly contemplated it and shook his head. \"Satasha and I have an appointment this evening at medical and if I need to I will mention it.\" Thankfully they had a box of tissues since his nose was a bit runny. He figured that was simply a side effect of being on an alien ship and blew it off as well as blowing his nose. \"Well let's start again and continuing from page...\"\n\nPart way through the afternoon he had to ask to have the heat turned up since it was a bit chilly in the room. His headache was getting a bit worse as well. Billy was starting to wonder if he was coming down with something and would ask when they went to medical. By the time they were done he was feeling pretty beat.\n\n\"I think I am going to need to take a day off tomorrow. It has been a rough three or so months. My body is feeling a bit worn down and some extra sleep would be nice as well as simply lounging around and maybe watching some of the storyteller movies and shows.\" Billy's muscles were starting to ache as well. When he went to stand up he staggered some.\n\nThe engineer managed to catch him and keep him from falling over. \"Yilly I am taking you to medical and am going to have the other three report as well. Your face is flushed and I can tell you are not feeling well.\" He wrapped an arm around Billy and called ahead to let medical know as well as having the other three report as well to ensure they weren't sick as well.\n\nWhen they arrived they were taken straight to the lab. \"We need to get him stripped and in the scanner. I want you to go and have a seat outside in case what he has might be infectious.\" The engineer nodded and stepped out of the room as an assistant came in and helped strip Billy down. \"Let us do the work of getting you on the table.\" She told him and once he was situated she strapped the diagnostic unit around his arm and took blood samples as well as his vitals.\n\nShe closed the lid over him and started a complete scan on him. It was something she had been intending to do anyways but in this case she added a few more tests as well. Once done she inserted the small vial of blood into the analyzer and started it working. As she was doing that the other three came in and both Sally and Satasha hurried over to where Billy was.\n\n\"What is wrong with him ma'am?\" Sally asked and she looked very worried as she asked. Her father was normally healthy as a horse. Looking at him now he was flushed and starting to sweat and was moaning as well.\n\n\"I am not sure quite yet but the diagnostics is going to take a bit of time. While it is processing I want you to settle into the other bed so I can check you to ensure that you aren't infected with what he might have.\" \n\nOnce Sally settled down the physician closed the lid and set it to run the same scans she was doing on Billy. The doctor had drawn blood on her as well and set it to be analyzed next. \"Once Billy's scan is completed you will be next Lt. Verzilon and lastly you warrior Vangie. As of now all four of you are going to be in isolation till we are sure that you are not infectious.\" Since they were simply sitting there she gathered the blood as well and placed them in the analyzer.\n\nSatasha was looking pretty worried as well. The sensations she was getting from Billy were confusing. She could tell he was feverish and was having fever dreams. If they were going to be in isolation for a few days she was going to insist that she be allowed to stay with him. The environment was different enough he would probably have problems dealing unless she was there.\n\nHis scan was finally done and Billy was definitely out of it. His eyes were closed and he was shivering and moaning some. Much of what he had to say was nonsensical. One thing that was clear was when he cried out, he was begging his wife Danielle not to leave them. He was moved to a floater and moved out of the room.\n\nSatasha looked at the doctor. \"He is going to need a familiar face in the room. Unless what he has is horribly infectious I want to be there for him.\" As she was stripping down she was saying that and carefully climbed on the bed. To be honest she was feeling a bit under the weather as well. As the bed fitted itself to her and warmed up she started to relax.\n\nThe doctor closed the cover and started the scans. Moments later Sally's scan was finished and Vangie helped her out. Since he knew what was coming next he stripped down as Sally was getting dressed. He hopped up and lay back. \"Just so you know I feel fine doctor. No fever, no chills, and no aching muscles.\" She closed the cover and started the scan.\n\nIt was a short while after the scans were done that the blood analysis came back and the doctor reviewed them and frowned slightly. \"Interesting, it appears that you and Yilly have the ni'uzu virus. How you got it I am not sure since you were inoculated against it. With Yilly I can understand since my tests haven't completed to see what I might be able to immunize him against. Go through that door and you will be shown to his room.\" She pointed at a door and Satasha hurried away.\n\nThe doctor double checked the results of the other two. \"So far neither of you appear to be infected by this but I am still putting you in isolation for a day or two. I am going to run some checks to see if you can be immunized against it Sally.\" She pointed at the same door. \"Go through there and you will be in the room next to your father and Lt. Verzilon.\n\nOnce they had left she settled down and contacted the Ship's Commander's adjutant. \"Good evening this is Doctor Jusdean. The terran male has somehow caught the ni'uzu virus as well as Lt. Verzilon. His daughter Sally and her companion of the moment appear not to be infected but I am keeping them isolated for a day or maybe two. Can you please patch me through to the Commander so I can update him?\"\n\n\"Hold a moment doctor and I will be right back.\" The screen showed the Sholan Alliance symbol for a few moments before the adjutant came back. \"He is coming down to see you and will be there shortly.\" He nodded at her and then terminated the connection.\n\nShe raised an eyebrow and left a message at the front desk to have him brought to the isolation rooms. Doctor Jusdean headed over to the isolation rooms and was pleased that the sick bay attendants were dressed in gowns and masks. One was affixing a drip to the terran male and started it flowing. He then turned to Satasha and did much the same after shaving a bit of her fur off to get to the vein. \n\nSince the doctor was satisfied with what he was doing she moved to the other room and looked in. In this case they didn't need IV's but did have diagnostic monitors strapped to their wrists. They would alert her if there were any major changes in their vital signs. She returned to the other room and mentally nodded as an antifebrile and mild analgesic was injected in both. \n\nAs she was watching through the window the Commander arrived. \"Damn, we were going to talk to him tomorrow about taking the first contact team to earth.\" He sighed slightly. \"I know they were just diagnosed but do you have any estimate on how long they might be in here?\"\n\nThe doctor looked slightly startled but it did make sense since Billy and Satasha had a reasonable understanding of each other's cultures. \"I really am not sure Commander but if it follows the normal course it will be somewhere between 3-5 days. What concerns me is that Lt. Verzilon caught it and she was inoculated against it. I am going to have a DNA break down done on the virus they caught and compare it to the standard virus.\"\n\nHe nodded. \"Tell me what you find and keep me updated as often as needed on their status.\" He turned and walked away. This was going to throw a wrench in the plans they had. As soon as Billy was feeling better he needed to talk to him about taking the first contact team back and maybe a few upgrades to the living quarters and sensors.\n\n~~~\n\nThe next morning Billy woke up and was confused for a few minutes since this most definitely wasn't his room. Satasha was next to him and the room definitely had a medical feel to it with the white tiles and observation windows. He ran through his memories of the day before and realized that he had been brought to medical since he was feeling like crap. Beyond that he didn't remember much. When he moved his arm to move some hair out of his eyes it felt heavy and both his muscles and joints ached. The worst part was he needed the bathroom.",
        "As he was struggling to get out of bed an orderly came in. \"Relax sir and I will help you. You are probably feeling like death warmed over and that is to be expected.\" He helped Billy sit up and to the bathroom. Billy was holding onto the IV pole for dear life as they walked to the bathroom. Once seated the orderly spoke again. \"I am going to close the door most of the way. When you are done call and I will help you back to the bed.\"\n\nWhile Billy was taking care of his business the sick bay attendant checked on Lt. Verzilon and strapped the diagnostic unit to her arm and waited till it was done. The small vials went into a pocket and then he went back and helped Billy back to bed. Satasha woke up as he was helping Billy back in bed and he turned to help her to the bathroom and repeated everything.\n\nEventually they were both back in bed and Billy appeared to be panting from the exertion. \"How are you feeling sir and if you can describe what is aching I have some meds that have been tested against your system.\" As he was talking he walked over to the medicine cabinet and unlocked it.\n\nBilly had to close his eyes. \"Um, I feel like crap but I don't think you have anything specific for that.\" When the SBA chuckled Billy gave him a wan smile. \"I have a splitting headache, my muscles and joints ache.\" Before he could finish his stomach twitched and he had to take a few slow breaths. \"And I feel like I am going to vomit if I move wrong.\"\n\nThe SBA pulled several hypoderms out and walked over to the bed and settled on the edge. \"I have a med for the fever, an analgesic for your muscles and joints, and a third for the nausea.\" He injected the nausea med first before administering the other two. \"They will start working in just a few minutes. The doctor will be in to see you shortly.\" He swapped the IV bags out before going over to Satasha.\n\nShe grimaced at him. \"Same answers for the same questions. Oh and when you are done can you turn the lights down low? They are making the headache worse for both of us.\" She had her eyes closed as well.\n\n\"Not a problem and here are your meds as well.\" He injected all three and made some notes on both patients. \"Before you start worrying sir your daughter doesn't appear to have caught this as of yet and neither had Warrior Vangie.\" He stood up and on his way out the door he turned the lights down. He also darkened the window to keep excess light out. They could still see in without a problem but inside it would be dark and easier on their eyes.\n\nBilly worked his way into Satasha's arms and rested his head on her chest and closed his eyes. To the sound of her heart beating he slipped into sleep. How long he was down he wasn't sure but hearing the door open jolted him and he twitched really hard since it had scared him. Why it had he wasn't sure but then again he wasn't all there. \"Um hi there.\" He lowered his head back to the pillow. \"So what the hell is wrong with me? I haven't felt this bad for years.\"\n\nShe settled on the edge of the bed. \"Just relax Yilly and I am going to examine you and answer your questions as best possible.\" The doctor took a few minutes to listen to his lungs and heart before giving him a fairly through exam for the rest of his body. Once she was done she made a few notes. \"Well you have the ni'uzu virus. Not sure why it infected you but I have some tests running. When they are done I think we are going to find that our blood chemistry is close enough for it to infect you. Satasha has it as well which is rather odd since she was inoculated against it when she was younger.\"\n\nAs Billy was contemplating that the doctor moved around to Satasha's side of the bed and repeated her exam. \"Well you don't have it as bad as Yilly does so you will probably recover before he does. You can stay here till we have decided that he isn't infectious anymore.\"\n\nSatasha nodded and curled up next to Billy and pulled him closer to him so that his head was resting on her chest again. \"Go to sleep my love. I will be here when you wake up.\" She would have purred if it didn't hurt so much. Shortly both were asleep.\n\n~~~\n\nIt took both of them several miserable days before they started recovering. Once they were no longer infectious the Commander came down to talk to both of them. \"Captain Madlax do you feel up to talking for a few minutes?\" The last thing he wanted to do was to over tax him and cause him to relapse.\n\nBilly elevated the head of his side of the bed since at the moment Satasha was deeply asleep. \"For a short time I can talk to you but I am still feeling rather used. I think I was run over by a star ship.\" He was finally in a position that was comfortable and he could see the Commander. \"So what can I do for you?\"\n\nThe commander gave him a slow nod. \"I understand and I will make this as short as possible but if you have questions don't hesitate to ask.\" He pulled one of their electronic note pads from his pocket and quickly reviewed it before speaking again.\n\n\"Starting with the first item we would like you to consider taking the first contact team to your planet. Second with your permission we would like to do a few upgrades to your ship. These would include installing Sholan style beds in the rooms, and finally upgrading your sensors and communications. This would allow you to take full advantage of the modifications to your engines. The communications would allow you to contact one of our stealth fighters as needed.\" He looked up at Billy to see what he thought.\n\nBilly looked more than slightly startled when the Commander spoke. \"Um, well I assume you will want warriors as guards as well as the first contact team. As I am sure you know I have limited cabin space and the max I can carry at one time is about 16 or so.\" He scratched his chin. \"What we can do is possibly place much of the guard aboard my ship and have a transport for the rest. They could stay in hyper till I call and give them the all safe.\"\n\nThe upgrades sounded really nice but having alien technology on his ship bothered him. \"Um, the beds I don't mind but I am not sure about the upgrades to the sensors and communications. I would want to be involved with that simply to ensure that what is done won't impact on the actual operations.\" He had to take a moment and close his eyes since he was starting to feel tired again.\n\n\"Having said that I would be more than happy to take the first contact team to earth. I would ask that Tasha and Vangie be allowed to come with. They are learning or familiar with at least some of our culture where I come from.\" Billy held his hand out and when the Commander tried to just touch fingertips Billy took his hand and gave it a good shake. \"It is a deal though I do want to be paid in Gold plated Latinum.\"\n\nThe end\n\n~~~\n\nPlease remember to vote and leave a comment. I value the feedback of my readers and the comments help me to improve my stories."
    ],
    "authorname": "maxd01",
    "tags": [
        "feline aliens",
        "space travel"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-ch-05"
}