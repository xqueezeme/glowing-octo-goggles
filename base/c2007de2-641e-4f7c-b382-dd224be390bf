{
    "title": "Savage Desire Ch. 10",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nJeremy Stanton vs. Ryan Hicks \n\nDedicated to Caty P and all fans of J&R. Thanks for coming on this journey with me. Cheers!\n\nPerfect New Life!\n\n***\n\n'Oh my god...' Jeremy's wolf panted as he crawled over Ryan's wolf. 'Ryan?' The alpha wolf tried to catch his breath as he nuzzled his mate's face. The wolf gave a tiny growl when he realized that his mate was actually fast asleep. 'You must be shitting me.' Jeremy muttered as he slumped beside his passed out mate and snuggled closer, his body still quivering from delicious aftershocks.\n\nThey were in the forest on the beautiful Quain Islands. They'd gone for a run after Jeremy had finally managed to convince his mate to leave their bed. For the five days that they'd been on the Island, they were virtually always in bed with Jeremy deep inside Ryan. Ryan wouldn't have it any other way. Even when they went for walks, they didn't explore as much as Jeremy would have expected a zoology professor to because they always ended up fucking like bunnies. It was almost as if the Island and especially its forest, brought out the savage lust within them. Sometimes they would fuck against a tree, or on the ground, at times in the beautiful lake, and other times under the cascading waterfall. His mate didn't seem to want anything else apart from his cock. Ryan was insatiable. \n\nAlthough Jeremy was used to his mate's excessive sexual demands, he'd still been caught off guard that day. They'd been running in their wolf form, happily forging through the foliage, loving the smell of nature all around them. Then the beautiful white wolf had suddenly turned in the direction of the big red alpha wolf and tackled him to the ground. \n\n'Cut it out Ryan.' The alpha had laughed delightedly, rolling around with his mate. Then suddenly, Ryan's wolf had let out a lustful howl. The delicious pheromones that suddenly sprung from his mate was not something Jeremy could fight or ignore. It was like a force, filling Jeremy with an intense carnal lust that was too powerful for him to contain. 'Ryan...'\n\n'I want you.' Ryan had whimpered. 'Now...'\n\nAnd Jeremy hadn't been able to control himself. If had felt as if he would combust if he didn't take his mate right that very instant. Neither wolf bothered changing form. And for the very first time, Jeremy had taken his mate in their most animalistic form. He'd fucked his beautiful white wolf with a violent, primal hunger that only an animal possessed. The savagery, intensity and pure pleasure had been so overwhelming the alpha and his mate had gone at it for hours. They just couldn't get enough of each other. Their lustful growls and howls carried throughout the forest and even as far as the chalets where the few werewolves on the Island were. Jeremy couldn't think of any other word to describe their raw encounter besides, phenomenal. The alpha wolf had never experienced anything so wild and wonderful in his life. He felt so contented but understandably drained. Jeremy wasn't surprised that Ryan had dropped off. That had been off the fucking charts.\n\nBut Jeremy was confused. He didn't know what to think. Yes, he knew he was a great fuck. Women had been telling him just how amazing he was in bed, since he was just a teen. He knew how his mate enjoyed their sexual encounters. Yes, their very first time had been terrible, thanks to him but he'd redeemed himself impressively if Ryan's reaction to their sexcapades was anything to go by. What Jeremy couldn't understand, however, was the almost crazed craving his mate suddenly seemed to have for sex. Jeremy believed it had started on the ride to the alphas' meeting five days earlier. But he blamed that initial craving on the butt plug...and himself. It was understandable for Ryan to be horny with all those sensations brought on by the vibrating motorbike against his plug-filled arse. What surprised Jeremy was that although the plug had been out during their flight to the Island...and he'd fucked Ryan before they'd taken off, his mate had still been so aroused, he'd had to engage the cruise control at a point during their short flight, to fuck Ryan hard and fast to a quick climax before they'd gotten to the Island. \n\nAs if that wasn't strange enough, when they'd finally gotten to the Island, Ryan had neither expressed any excitement for finally being on the famous Island he'd heard so much about, nor had he expressed interest in exploring the place as Jeremy thought he would. His mate just wanted to have sex. He hadn't even been patient long enough for Jeremy to greet the staff. Ryan just wanted him in bed. Jeremy had only managed to call Phillip to inform him that they'd gotten to the Island safely, and to instruct him to get ready for the search for his mate as soon as they got back home, before he was dragged into bed. Jeremy enjoyed all the sexy time. Hell, who wouldn't? Ryan was dynamite in bed. But he couldn't help but be worried that something was not right. For one, he couldn't help but rise up to the occasion no matter where they were, or how many times Ryan demanded sex. Sometimes he felt drained and tired but all he had to do was get a whiff of that unique scent on Ryan that seemed to be getting more and more potent by the day. Then almost as if he was being controlled by a wireless remote, he was ready to go. He'd always gotten off on his mate's unique scent. But that particular scent that had started to emanate from Ryan in the past few days, never failed to make Jeremy's mouth water and cock harden to the point of pain. The feeling was just insanely mind-boggling. Jeremy couldn't say no to Ryan even if he wanted to. He remembered the strange event that had occurred two days earlier...\n\nJeremy had been in the shed, talking to the Nash, the werewolf who managed the Island. He was a tall, muscular man whose pleasant and friendly nature belied his intimidating appearance. Nash was one of the nicest and principled people that Jeremy knew. He'd wanted to speak with Jeremy about a weird situation that seemed to have cropped up on the Island. To enable Jeremy and Ryan have some freedom on the Island, the human staff had been given two weeks off, leaving about twenty staff who were all werewolves. But suddenly, the males amongst the remaining staff seemed to be coming down with an ailment of sorts. Out of the eight males, six had to be given some time off. Nash told Jeremy with an amused look that the ailment seemed almost sexual in nature. He'd added that surprisingly, the affected guys seemed alright once they left the Island. Nash told Jeremy that he suspected that something in the atmosphere on the Island was causing it because even he felt it sometimes. He said it had started around the time his AA and his mate had arrived. He believed he was probably not too affected because he'd been very busy. \n\nAs Nash was talking, Ryan had entered the shed and headed straight for Jeremy. Nash had his back to Ryan but he'd paused midsentence to sniff the air. Then he'd suddenly let out a lustful growl, his eye turning amber instantly. Jeremy had been surprised at the manager's reaction but had turned to focus on his sexy mate as he drew closer to them. And that was when Nash turned to look behind him. The next thing Jeremy knew, the manager had shifted into his wolf and had begun to howl at Ryan in a way that a male would howl to make their sexual interest known to a female. \n\n\"What the fuck?\" Jeremy had growled as his claws had instantly extended. He was ready to kill the man who dared lust after his mate right in front of him. \n\nBut Ryan had calmly reached out and touched Nash's head, and then muttered softly, \"sleep\". The wolf had instantly flopped down in a deep sleep. \"Your manager is gay.\" Ryan had murmured as he went on his toes before Jeremy and began to lick at his lips.\n\n\"No, he's not.\" Jeremy had growled against Ryan's nibbling mouth. \"He's mated with kids.\" \n\n\"Really?\" Ryan's eyebrow had shot up in surprise. He'd seen the manager only once. And that was the first day they'd landed on the Island. Besides the fact that he and Jeremy occupied the Villa, which stood apart from the chalets, he'd spent almost all his time in their room getting cocked by Jeremy. He therefore didn't know much about the staff. \"Forget about him.\" Ryan had purred, his fingers busy at Jeremy's zipper. \"I need you.\"\n\n\"Ryan...\" \n\n\"Please...\"\n\n\"Baby...\" Jeremy had breathed, melting inside at how sweetly his mate pleaded. He always loved it whenever Ryan pleaded so sexily. That time was no different. Even though he'd still been confused and more than a little angry at Nash's behaviour, he'd succumbed to his mate's demand. After all, he couldn't have possibly ignored the fact that his cock had thickened and lengthened in anticipation of plunging into that sweet heaven only he could enjoy. And somehow, a part of him wanted desperately to claim Ryan...show Nash that he was his and unavailable. \"Get me ready.\" He'd instructed huskily.\n\nAnd right there beside the sleeping wolf, Ryan had gone down on his knees, taken Jeremy into his mouth and sucked him till he was slick and ready. Then Ryan had stripped as if they were alone, bent over the huge mahogany table in the shed, and allowed Jeremy to fuck him till their cries of pleasure filled the shed. That had been one of Jeremy's most enjoyable fucks. Afterwards, he'd thought that he'd probably enjoyed it so much because unconsciously, he was staking his claim on his mate in front of the male who had dared shown interest in him. The fact that the male in question was fast asleep didn't really matter.\n\nThe huge, red, alpha wolf shook his head at the memory. He couldn't help but wonder about his mate's odd behaviour. That was so unlike Ryan. The Ryan he knew would never have nonchalantly initiated sex in the presence of another. What the fuck was going on? Jeremy made a mental note to call Dr. Sanders immediately after they got back to their Villa. Maybe his resident sorcerer or even Deloris could fly out to the Island with Dr. Sanders and check Ryan out. Content with the resolution made, Jeremy's wolf cuddled closer to his beautiful white wolf with the intention of going to sleep too. God knew he needed it. But just as he got comfortable, he heard the unmistakable rumble of thunder, a signal that it was about to rain. They had to get back to the Villa before the rains started.\n\n'Ryan?' The alpha wolf shook his mate gently. 'Wake up baby. We have to go.'\n\nThe white wolf stretched and opened his eyes slightly. 'How long was I asleep?' Ryan murmured, cuddling closer to Jeremy.\n\n'Not long.' Jeremy's long tongue flicked across his mate's face. 'But it's going to rain so we have to go.' Jeremy stood up.\n\n'Hmmm...I love it here.' Ryan groaned. 'Didn't you say something about a cave?'\n\n'Now he wants to see the cave.' Jeremy muttered. 'Thought you weren't interested in exploring the Island.'\n\n'I never said that.' Ryan countered. 'I'm just more interested in exploring you, that's all. And can you please do your arguing from down here?' Ryan said with a naughty come-hither look, tapping his shoulder.\n\n'We have to get to the cave before the rains start, Ryan.' \n\n'In a moment darling.' And at Jeremy's exasperated groan he added, 'Hey you just destroyed my arse with all that knotting. I need to feel my legs before I move.'\n\n'Oh baby...' Jeremy flopped down beside Ryan with eyes filled with worry. 'Did I hurt...' \n\n'In the very best way possible.' Ryan cuddled closer to his mate. 'Jesus, you know how to work that cock in whatever form.' He moaned, making Jeremy huff out a laugh despite himself. \n\n'We need to talk Ryan.' Jeremy said quietly when he quieted down. \n\n'Sounds serious.' Ryan said, letting out a noisy yawn. 'Alright let's go to the cave.' \n\n'Good.' Jeremy stood and led the way. \n\nWhen they got to the entrance of the cave, the big red wolf pressed his paw into the imprint of a paw in the stone wall. The metal door at the entrance opened to reveal a big but very cozy cave. The lights came on automatically.\n\n'Wow...' Ryan's wolf breathed, gobsmacked at the sheer elegance of the cave. He'd definitely not expected a cave in a forest to be that posh.\n\nEverything in the room was designed in a cool green, red and grey. The thick, plush, green rug covering the floor was obviously to give wolves that entered the cave a comfortable place to relax. There was a beautifully dressed bed and a comfortable looking red couch that were obviously to give comfort to those in human form. The red duvet over a soft green quilted bedspread on the bed was absolutely lovely. The natural plants and flowers in the cave gave it an outdoor feel, with the contrasting grey stone walls bringing all the colours together beautifully. The kicker for Ryan, was the cute red fridge and the small bar area. It was just fantastic. \n\nOn one side of the walls were paintings of nature, and on the other side, a collage of pictures. Ryan rightly guessed that those were pictures of Jeremy and his family. Even as the white wolf moved closer to the pictures, he shifted into his human form. He couldn't help the smile that tugged at his lips when he saw pictures of a young Jeremy.\n\n\"Even as a kid, you were fine. Damn.\" Ryan muttered, making Jeremy laugh. \"Is that your dad?\" Ryan asked, staring at the picture of a blue-eyed blonde hunk of a man. \n\n\"Yep.\" Jeremy answered as he lighted the fire in the fireplace. \"He was one fun-loving guy.\" A very naked Jeremy slipped his arms around Ryan from behind. \n\n\"Nothing like you.\" Ryan muttered.\n\n\"Really?\" Jeremy sounded surprised.\n\n\"You're too serious baby. But I love you just the way you are.\" He patted Jeremy's hand patronizingly with mock innocence. \n\n\"I can't believe this.\" Jeremy gushed.\n\n\"Try and believe it. Mum hasn't changed.\" Ryan observed. \"Still as beautiful as ever. Is that your...\"\n\n\"Kid brother.\" Jeremy said quietly. \n\n\"He was a handsome little boy. How old was he?\"\n\n\"He was only five when they...\" Jeremy trailed off.\n\n\"Sorry.\" Ryan said softly, still staring at the picture of Jeremy's brother. There was something familiar about the boy. But then he knew his mother and brother so it wasn't strange to feel that way.\n\n\"Mum and dad used to fight over us all the time.\" Jeremy said quietly. \"I had more of mum's colour but dad's blue eyes.\"\n\n\"Which I absolutely love.\" Ryan said, drawing a chuckle from Jeremy.\n\n\"And Travis looked more like dad. He had the blonde hair, blue eyes, and a lovely colour that someone who didn't know his mother was black, would think was a tan. Dad called him his twin.\"\n\n\"Were you close in age?\" Ryan kept staring at the boy. He couldn't shake off the niggling feeling that he'd seen the boy before.\n\n\"No, I wouldn't say that.\" Jeremy chuckled. \"I was ten years older than him. But I adored him. We were always together, playing, being naughty... I was his hero. But that day...\"\n\n\"How did it happen?\" Ryan asked quietly.\n\n\"The hunters ambushed them. Dad didn't show any signs of struggle. He wasn't given the chance to fight for his life like the true alpha he was. It was almost as if he didn't even see or sense the enemy at all. Which is very strange. But for the silver bullets that were found inside him...which hunters usually use, we wouldn't have even known they were killed by hunters. There were no traces, no footprints, nothing.\"\n\n\"Shit.\" Ryan breathed.\n\n\"We were to go for a walk that evening like we always did when dad wasn't busy.\" Jeremy swallowed hard. \"Just the two of us and Dad. Travis loved sitting on dad's shoulder for those walks. He said he could see further than dad and I because from his perch, he was the tallest.\" Jeremy gave a wistful laugh. \"We would sing on top of our voices and pretend to be soldiers marching through the woods. That day I didn't go with them because Paige broke her arm. She wouldn't allow the doctors to touch her. After a lot of talk, she had demanded that Phillip, Stan and I sit by her whilst the doctor set her arm or she wouldn't allow it. She's always been feisty and bossy?\" Jeremy said to create humour but neither of them even cracked a smile. It had started pouring outside. \"Dad said I should stay with my friend. Travis insisted I come along but dad explained to both of us that, when a friend needed you, you had to be there for them. He said there would be lots of walks. But I would never be able to make it up to Paige if I didn't show I cared for her when she needed me.\"\n\n\"She saved your life.\" Ryan whispered, and felt Jeremy shrug.\n\n\"Depends on how you look at it. I could have helped my dad and brother if I'd been with them.\"\n\n\"How old were you then? Fifteen, right?\" Ryan shook his head slowly. \"What could you have possibly done? Those murdering hunters obviously knew your routine. They laid in wait and attacked. Even your dad couldn't escape or defeat them. What makes you think you could have?\"\n\n\"I'm an Ojah, remember?\" Jeremy growled. \"I would have saved them or died trying.\"\n\n\"Whoever planned it was meticulous, Jer. You would have died too because like your dad, you wouldn't have known what was about to happen.\"\n\n\"I would have gladly died with them.\" Jeremy whispered.\n\n\"Don't say that.\" Ryan couldn't stop the shiver of terror that passed through him at Jeremy's words. He couldn't even stand the thought of Jeremy dying. \"That would have killed mum for sure. Everything happens for a reason.\"\n\n\"I just want to scream and destroy something whenever I think of the pain that little boy must have gone through. When they found dad, Travis wasn't with him. His tattered clothes, soaked with his blood were found beside dad. It was believed that a wild animal must have fed on his body. God...\"\n\nRyan turned within Jeremy's arms and hugged him tightly. He could feel Jeremy trembling with emotion in his arms and felt like crying for those lives. Especially the life of that innocent boy. He would have been twenty-one if he had been alive. Now he understood why Jeremy hated hunters so much. \n\n\"Come on.\" Ryan drew Jeremy to the inviting bed and urged him into it. \"Are you okay?\" He asked as he pulled the covers over their bodies.\n\n\"I'm good. I can rave and rant till the end of time, they're not going to come back.\" Jeremy sighed. \"Thanks for listening.\" He closed the distance between them and softly kissed Ryan. They would be better off dwelling on the present because the thought of what he'd lost was still too bitter a pill to swallow, Jeremy thought sadly. \"Ready for what I wanted to talk to you about?\" He murmured against Ryan's lips and then moaned when Ryan captured his mouth for a deeper, hotter, spine-tingling kiss.\n\n\"Can it wait?\" Ryan breathed in between kisses. \"I want you, Jeremy.\" A longer kiss. \"We can have that talk after.\" He whimpered, rubbing his leaking, rock hard cocks against Jeremy. \"Right now, I need this...\"\n\n\"We really need to talk, Ryan...\" But even as Jeremy groaned in protest, he was moving to cover Ryan's body with his.\n\nThe two didn't speak again till morning.\n\n***\n\nRyan stared at his mate, the expression on his face a cross between amusement, confusion and the usual lust. \n\n\"You really think there's something wrong with me?\" Ryan asked, rolling to lie on top of Jeremy. \n\n\"Don't you?\" Jeremy's arms automatically moved up to wrap around Ryan's waist as he stared up at his gorgeous face through the sexy, mirrored, aviator shades covering his eyes.\n\nThey were lying by the pool, enjoying the sun after the heavy downpour that had lasted throughout the night. Both men were in swim trunks, which were so wet the outline of the cocks would have been seen by anyone close enough.\n\n\"So now there's something wrong with me because I lust after my mate. Interesting.\" Ryan said as he slid down till his cocks rubbed against Jeremy's through their wet trunks, and then began a slow grind.",
        "\"See what you're doing right now?\" Jeremy groaned, almost drooling from the pleasure that shot through his body. \"We've been out here swimming for just about thirty minutes. We made love just before we came out. But you're hard again. Does that look normal to you?\"\n\n\"You told me on the aircraft that it was normal to want you when I asked you whether how I felt was normal.\" Ryan increased the tempo of the movement of his hips. \"What changed?\" He breathed as he dipped his head and hid his face against Jeremy's neck.\n\n\"You're horny all the time.\" Jeremy's breath quickened. \"You're not able to control yourself. Remember how many times I've had to heal you? But even then, I have to force you because you don't seem to care at all when you're sore. You still want me inside you.\"\n\n\"Because you feel amazing inside me.\" Ryan moaned.\n\n\"You don't care where we are...you just want to get down and dirty. Hell, if I asked you to strip right here right now for a fuck, you'd do it without blinking an eye. Looks like you don't even care anymore that people might see you naked and notice your...condition.\"\n\nRyan's head shot up so fast Jeremy gasped. He reached up and yanked off the shades covering Jeremy's eyes and threw them down. Then he just started into Jeremy's eyes. But not even once did he stop thrusting against his sexy alpha.\n\n\"Know what? Maybe you're right.\" Ryan rasped. \"I should probably take offence at what you just said but...somehow getting you inside me is more important.\" With that, he leaned down and latched onto Jeremy's mark. Then he sucked hard.\n\n\"Fuuuuck!\" Jeremy cried out, moving a hand to Ryan's arse to press him harder against him. \n\n\"Is something wrong with you too by any chance?\" Ryan raised his head and asked sweetly, his eyes dilated with lust. \"'Cause you're hard. And we fucked just before we came...\"\n\n\"Shut up Ryan.\" Jeremy growled as he stood up in one fluid, graceful move and jumped into the pool with Ryan tucked securely in his arms.\n\nBy the time the two heads broke the surface, the alpha was already deep inside his mate. And even as their trunks floated away from them, Jeremy pinned Ryan to the pool wall and fucked the shit out of him. Ryan's cries of pleasure could be heard by everyone on the Island. And like a typical werewolf, he didn't look like he cared. \n\n\"Oh shit...just like that...fuck me...\" Ryan cried incoherently as Jeremy pounded into him. \"Harder, Jeremy... Harder...\" His legs, which were locked around Jeremy's waist tightened even more as the alpha slammed into his prostate again and again. \"Fuck...\" His nails clawed at Jeremy's back, drawing blood. \"Bite me...please...\" A desperate whisper. Ryan's head was thrown back in ecstasy, baring his graceful neck to his mate. \"Please Jeremy... bite...\" \n\nJeremy didn't wait for Ryan to complete his request. A savage need to claim Ryan...taste that creamy neck, barreled through Jeremy. Even if his mate hadn't made the request, he would have bitten him. He bared his fangs and struck hard and fast, sinking deep into Ryan's mark. But unlike the other times he'd bitten Ryan, Jeremy stayed in for mere seconds, and then retracted his fangs and began to suck on the fresh mark. That was a new one, Ryan thought even as with a scream, he shot his load between them. Jeremy moaned ecstatically against Ryan's neck as he rutted furiously against him. The raw tangy taste of his mate was driving him wild. He could feel himself losing control. The alpha threw his head back and let out a lustful howl.\n\n\"Hope you're ready for this...\" Jeremy rasped as he gracefully leaped out of the pool, onto the lush grass with Ryan still in his arms. And even before Ryan's orgasmic tremors ceased, Jeremy had him on his back, with his legs pushed back onto his shoulders as if he'd been folded into two, and was relentlessly fucking deep into him. Jeremy definitely didn't care at all that his staff...all female, thanks to whatever ailment had befallen the males, could see them if they bothered to look. And he certainly didn't think his exhibitionist of a mate would mind either. He fucked Ryan into oblivion.\n\n\"Holy shit.\" A dizzy, whirling sensation fogged Ryan's brain as he gazed up at Jeremy with unfocused eyes. He could feel his blood oozing out of his neck since Jeremy hadn't sealed the wound yet. His scent and heat surrounded them even as Jeremy pistoned into him, the sound of his gorgeous mate's huge balls slapping against his arse obscenely loud in the quietness surrounding the pool area. Every thrust was punctuated with a loud grunt from Jeremy, more animal than human and yet so unexpectedly, erotic. Ryan knew he was being ravished by his mate. And he loved it.\n\nJeremy's eyes were glued on where his cock slid in and out of his mate's beautiful arse. It was almost as if he was trying to imprint that image in his mind. In that position, Ryan couldn't move. And that was exactly how Jeremy wanted him. He wanted his alluring mate to just stay put and take what he was giving him. If Ryan's ecstatic cries were any indication, he was loving every minute. Well, time to up the stakes, Jeremy thought mischievously as he moved his hand between them to tightly grip the insatiable cocks which hadn't gone back soft after Ryan's orgasm in the pool. Jeremy stroked those cocks hard and fast, squeezing the heads on each upstroke. \n\nRyan's eyes rolled into his head as irrepressible sounds fell out of his parted lips. He felt utterly possessed and totally defenseless. Jeremy had taken complete control of every nerve ending in his body. The sensations assailing him were so overwhelming Ryan's mind and body couldn't keep up. Jeremy jerked his cocks and ploughed into him with such speed and skill he didn't have time to delight in his build-up toward release. One moment his body was stiffening, the next, he was erupting between them with a startled cry. \n\n\"Oh my god, Jeremy...\" Ryan gasped, trembling uncontrollably. When he felt Jeremy pulsing inside him, he opened his eyes and saw his mate's face contorted with sheer ecstasy. Then he felt his scorching cum begin to fill his contracting channel. And through it all, Jeremy's hips rolled, stroking deep, not pausing for even a second. He rode out the contractions of Ryan's tight heat like a magnificent stallion, his hips thrusting relentlessly as if he couldn't stop.\n\n\"Want more?\" Jeremy growled as he suddenly changed his angle, nailing that cum-inducing button head on, screwing so deep Ryan wouldn't have been surprised if Jeremy's cock had popped into his throat.\n\n\"Yes.\" Ryan sobbed, feeling his pleasure button getting battered like it never had before. \"More...give me everything. I want it all.\"\n\nJeremy leaned down and began to suck on Ryan's mark even as he took both nipples between his fingers to twist and pull. Ryan came completely unglued. He was shuddering and coming before he knew what was happening, and that was mere seconds after his last orgasm. He didn't even have the strength to cry out. His mouth opened in a scream but no sound came out. The feeling inside was agonizingly rapturous. And it wouldn't stop. It was too much. \n\n\"Jeremy...please...\" Ryan gasped as powerful spasms continued to wrack his body with violent shudders. His fingers curled in the grass as his head thrashed from side to side as if he was in pain. \"Please...\" Tears leaked out of the corners of his eyes, slid down his temples and disappeared into his hair. \"Oh god, what are you doing to me? I can't stop coming.\" Ryan literally sobbed as his channel rippled along Jeremy's plunging cock. He couldn't breathe, think or move. He wanted the sensations to stop but at the same time, didn't want them to ever stop. \"Jeremy...\" He opened his eyes to look at his merciless mate but his vision had gone black with the intensity of sensation roiling through him so he couldn't even focus on Jeremy. Ryan was reduced to a whimpering mess.\n\n\"Ryan...\" Seeing the tears and vulnerability on his mate's face instantly gentled Jeremy. He could tell he'd pushed Ryan to his limits. Ryan had ordered him to give it to him hard and he'd done exactly that. But Jeremy suddenly felt like giving his mate some...tenderness. He released Ryan's legs and took his lips in the most sensual kiss. That gentle kiss was definitely nothing like the intense dicking he'd unleashed on his mate. \"Now I'm going to make love to you.\" Jeremy whispered against Ryan's kiss-swollen lips. \"Ready for another orgasm?\"\n\n\"Please, Jer.\" Ryan whimpered, feeling his whole body tremble with aftershocks. Even those were intense. \"No more...\"\n\n\"One more.\" Jeremy murmured as he leaned down to lick Ryan's wound close. \"I want you to come one more time.\" He took Ryan's lips again in a tender kiss. Then he raised his head to look down into Ryan's pleasure-ravaged face. Damn he loved watching Ryan lose it. \"Wrap your legs around me baby.\" The alpha of alphas' voice oozed so much sexiness Ryan moaned and did as instructed, giving himself over to the pleasure that he was already feeling along his spine.\n\nThis time, Jeremy made mad, slow, passionate, sweet love to his mate. He expertly stroked his cock inside him, rubbing over and over that tender bundle of nerves that pulsed with so much sensation Ryan drooled. They moved in unison, so in tune to each other's needs. Each gave exactly what the other craved. They were totally in sync with each other, making their love-making intense, erotic, and breathtakingly sensational. Even the beating of their hearts seemed synchronized. At a point, their mouths moved as one, each seeking the other's mark. And as they both latched onto each other's marks and sucked on that evidence of their ownership of the other, they each orgasmed hard... Jeremy for the second time and Ryan, multiples of that. Their ecstatic moans were muffled against each other's necks but it reverberated through their bodies. The sensations blazing through them were so unbelievably amazing neither was going to forget that encounter ever. \n\nBoth clung to each other till their tremors ceased and their breathing evened out. Their lips finally met. Jeremy's hand moved to the back of Ryan's head to hold him still as he kissed him with loving reverence. He sucked and licked at Ryan's lips passionately but leisurely, erotic moans escaping his throat. Anyone watching would see how much he loved and adored his mate. When the kiss ended, Jeremy maneuvered till they lay side by side, and then bumped their foreheads together. His fingers stroked Ryan's lovely white hair with such tenderness as pleasure-heavy blue eyes locked with adoring green ones. \n\n\"Are you okay?\" Jeremy's shaky voice made Ryan smile. It felt good to know that he wasn't the only one affected by what had happened.\n\n\"I...\" Ryan took a deep breath and shook his head. \"Damn, I can't even think straight. Do you have any idea how fucking amazing you are?\" He whispered. \"That was...was...I don't have the words.\"\n\n\"Tell me you're okay.\" Jeremy muttered urgently against Ryan's lips.\n\n\"I'm more than okay.\" Ryan breathed, cupping Jeremy's cheek with one hand. \"But I'm suddenly feeling guilty. Those ladies in there aren't getting some right now and yet here we are, flaunting our bliss for them to see. Not cool.\"\n\nJeremy chuckled. \"And there I was thinking he'd finally embraced his beasty side.\" He murmured, biting Ryan's nose gently. \"Why don't we go inside then?\" Jeremy kissed Ryan languidly. \"Want to do the honours?\" He deepened the kiss. And even when he felt the cool comfortable sheets against his skin, he didn't end the kiss. His mate had the sweetest mouth ever. \"Deloris, Dr. Sanders and Mama Cora will be here in the morning.\" Jeremy muttered when he broke off the kiss. \"Called them this morning when we got back from the cave.\"\n\n\"You called them to come check me out.\" It wasn't a question.\n\n\"I'd rather waste everyone's time to check you for a nonexistent problem than not do anything at all only to find out later that I should have.\" Jeremy said, rolling out of bed. \"But you know within you that there's something weird going on.\" He threw over his shoulders as he entered the elegant en suite bathroom.\n\nRyan groaned. \"I just don't see the big deal about wanting you all the time.\" He grumbled. \"I do give you time to eat don't I?\"\n\n\"Not really.\" Jeremy chuckled as he entered the room with a washcloth. \"Remember what happened yesterday?\" A gloriously naked Jeremy asked as he climbed back into their bed.\n\nHe'd been in the kitchen the day before, stuffing himself with the delicious club sandwich he'd asked the cook to leave inside the oven for him. His appetite had been over the top since they landed on the Island. But then who wouldn't need to replenish their strength if they were subjected to all the sexual demands Ryan threw at him? Well, there he was, in the kitchen, with a mouthful of sandwich and who walks in with...those sexy lust-heavy eyes and mouthwateringly arousing scent? A very naked Ryan. The alpha of alphas hadn't been given the chance to utter a word. Ryan had pushed him onto his back on the kitchen floor, muttering an insincere apology when Jeremy's head hit the floor with a thud. Then with an inhuman speed, Ryan had pulled Jeremy's shorts down, jacked him for some seconds, and then sank onto his hard cock, taking him to the root in one smooth, slick glide. \n\nAnd with his bottom lip caught sexily between his teeth, his lust-glazed eyes locked on Jeremy's, and his fingers rolling his nipples between his fingers, Ryan had ridden Jeremy to a record-breaking, mind-blowing release. Jeremy couldn't remember ever coming that fast. But then, with that visual of his stunningly sexy mate...coupled with the skillful manner in which Ryan had bounced, gyrated and squeezed him inside, that quick explosive release hadn't surprised Jeremy. Ryan hadn't even come. It seemed as if all he'd wanted was Jeremy's cum inside him because immediately Jeremy was done painting his channel with his essence, Ryan had gotten up and gone back to bed as if he hadn't just fucked Jeremy's brains out. He'd left a completely floored Jeremy...pun totally intended...on his back, on the floor of the kitchen, with his semi-erect cock shiny and wet from their juices. Jeremy had burst into breathless laughter after he'd finally gotten his breathing under control. He'd wondered how it was even possible to feel used and loved at the same time. But that was exactly how he'd felt. Only his mate could arouse such crazy feelings inside him.\n\n\"I'd gone an hour without, Jeremy.\" Ryan groaned as he turned onto his stomach to give Jeremy better access to his arse. \"Surely that was only to be expected.\"\n\n\"Did you just hear yourself?\" Jeremy couldn't help the incredulous look that appeared on his face. \"You were able to go for over three months without getting your rocks off. What's an hour?\" He lightly slapped Ryan on the arse before turning him onto his back. \n\n\"The more I have you, the more I hunger for you.\" Ryan sighed. \"I can't stop it. I don't want to stop it. Sue me.\" He wriggled his eyebrows at Jeremy, making the alpha chuckle.\n\n\"Something is very wrong and I'm going to find out even if it kills me, darling.\" Jeremy said, drawing the covers over his grinning mate. Then shaking his head in amusement, he took the washcloth back to the bathroom and then got back into bed to spoon against Ryan.\n\n\"What time exactly are you expecting your 'medical team'?\" Ryan asked, giving the phrase air quotes. \"Or should I say, shrinks?\"\n\nJeremy chuckled. \"Call them whatever you want. They'll be here by six a.m.\" He pressed a kiss against the back of Ryan's head. \"Stan might fly them in because my pilot's mate gave birth yesterday.\"\n\n\"Oh I want Stan to come.\" Ryan muttered. \"I've missed his crazy self. But couldn't Deloris blink them here?\" Ryan wriggled against a groaning Jeremy, trying to get comfortable.\n\n\"It's safer that way.\" Jeremy murmured, gripping Ryan's hip to stop his movement. \"As much as possible, we try not to use magic unless it's very necessary. It shouldn't be misused. Like blinking past a police checkpoint just so that you won't be caught jacking off your mate.\" He drawled, drawing a soft laughter from Ryan.\n\n\"How about fucking your mate on a moving motorbike on a highway.\" Ryan retorted.\n\n\"That was no magic.\" Jeremy breathed, feeling himself go hard at the mere thought of their hot encounter on his motorbike. \"That was good old cruise control.\" He groaned, tightening his arm around Ryan.\n\nRyan didn't miss the feel of his mate's hardness, poking him. \"Any chance you're thinking about that fuck on the bike?\" Ryan murmured, rubbing his arse against Jeremy's full-blown erection.\n\n\"What do you think?\" Jeremy's words were muffled against Ryan's head where he'd buried his face. \"Fuck, that was damn hot.\" His hips began to move of their own volition.\n\nThe smile on Ryan's face as he reached for the tube of lube on the bedside table was downright roguish and feral. He couldn't suppress his thrill as he squeezed a generous amount of slick into his hand and sought out the hard cock that was poking him in the butt. Jeremy's groans of pleasure as Ryan slicked him up were so erotic they made Ryan's toes curl. One would have thought the number of times they'd fucked that day would have taken its toll on their libido but...that was obviously not the case. Ryan raised his leg onto Jeremy's hip, and then pushed that slick cock he loved so much into his waiting hole, in a long, slow glide. He moaned his pleasure as he once again, gave himself up to the delicious penetration. \n\n\"Fuck me baby.\" Ryan breathed as his fingers entwined with Jeremy's. \"Give me that cum.\" He moaned as they established a slow, mind-blowing rhythm that rocked them to their very souls. \n\nAnd after a long, languid, incredibly enjoyable fuck and mind-blowing orgasms, the gorgeous AA and his sexy insatiable mate drifted off into a much needed sleep. After all, they'd had no sleep at all the night before in the cave.\n\n***\n\nJeremy smirked as he watched the chopper land in the clearing. Trust Stan to go for the chopper he thought, amused. Ryan was still asleep after keeping him awake throughout the night. He hoped the three experts who were getting out of the chopper would help him understand what was happening with his mate.\n\n\"What the fuck happened to you?\" Stan shouted with a concerned look as he jumped out of the chopper whose blades were still whirling. \n\n\"What do you mean what happened to me?\" Jeremy frowned with confusion.\n\n\"You look sick, man.\" Stan stated bluntly as he strolled towards Jeremy. \"You look like you haven't had any food or any sleep in weeks. What the fuck is going on?\" He asked, giving Jeremy a one-armed hug.\n\n\"I feel fine, asshole.\" Jeremy growled, extending his hand to shake Dr. Sanders'. \"How are you doc?\" He smiled at the head physician of Stanwood pack. \n\n\"I'm good, Alpha.\" The elderly doctor responded, observing Jeremy warily. \n\n\"See the way he's looking at you?\" Stan rasped. \"You look sick. Tell him doc.\"\n\n\"Give Jeremy a break, Stan.\" Deloris chuckled as she hugged Jeremy. \"He doesn't look so bad.\"\n\n\"Meaning I do look bad.\" Jeremy drawled with a resigned look on his face.\n\n\"You look...drained.\" The old woman with them, their resident sorcerer observed with a frown. \"What's this I'm hearing about an insatiable mate?\" Her shrewd eyes flickered around. \n\n\"Ahh... I'm hoping the three of you can help me figure out what's going on.\" Jeremy said. \"Hello Michelle.\" He smiled at Dr. Sander's nurse who'd come with them. \"How are you?\"\n\n\"I'm very well, Alpha. Thanks.\" The pretty nurse said shyly with a blush. Mated or not, her AA was hot as fuck, she couldn't help but think. \n\n\"Mich, I told you, no eye-fucking Alpha Jeremy.\" Stan said dryly. \"His mate loses his shit when the alpha is eye-fucked.\"\n\nJeremy chuckled. \"Leave her alone, Stan.\" He was used to being lusted after. Even as a preteen, he'd received irrepressible sexual interest from the opposite sex to his mother's annoyance and his father's amusement. \"I need to wake Ryan up so he can get ready for you.\" Jeremy addressed the elderly folks. \"In the meantime why don't you head over to the restaurant for some breakfast?\" With that, he turned towards the Villa.",
        "\"I'll join you guys later.\" Stan told the other four as he fell into step beside Jeremy. \"God, this Island never loses her magic.\" He muttered.\n\n\"I know right.\" Jeremy chuckled.\n\n\"Now what exactly is the problem, Jer?\" He asked his friend. \"What's wrong with Ryan?\"\n\nJeremy sighed. \"I'm just concerned about him, Stan.\" He groaned. \"He constantly wants sex.\"\n\n\"Dude, who wouldn't want a mate who constantly wants to be dicked?\" Stan snorted. \"Are you shitting me right now?\"\n\n\"You know me, fool.\" Jeremy rasped as he opened the door to the luxurious villa. \"I'd be even more thrilled than you to have...\"\n\n\"Stan!\" The two friends heard Ryan's shout from the top of the stairs as soon as they stepped into the elegantly decorated living room. Then Ryan was running down the stairs with an infectious laughter that made the two friends laugh. \n\n\"Why is it that you're looking all rested and fresh when your mate is looking as if he's just returned from a war-torn country?\" Stan asked with surprise, drawing laughter from Ryan and a cuss from Jeremy.\n\n\"I guess I'm having more fun.\" Ryan responded laughingly, getting to the foot of the stairs in no time. Then he began the short run towards the two standing by the door, the joy in his eyes at seeing Stan obvious for both men to see. Then... \n\nJeremy heard it before Ryan did. The quickened breath, the low growl, that pained sound...\n\n\"Are you alright, Stan?\" Jeremy turned his head to look at his friend. Perspiration had suddenly burst across Stan's skin. His eyes had shifted. \"Stan?\"\n\n\"Back off Ryan...\" Stan growled, stretching forth his hand as if to ward off an attack. \"I need to get out of here.\" Then with a loud anguished growl, he turned around and made a mad dash for the door.\n\n\"What's wrong with...\" But before Jeremy could complete his question, Stan was rushing out of the door as if the hounds of hell were at his heals. \"What the fuck?\" Jeremy muttered, staring at where Stan had disappeared to.\n\n\"He wanted me, Jer.\" Ryan gasped, the look on his face a cross between incredulity, hurt and alarm. \n\nJeremy turned to look at his mate. He was thinking so hard he felt dizzy. First Nash, now Stan. Although one was mated and the other wasn't, they'd both been obviously affected by Ryan. Could it be the same thing that had affected his staff? His mate? How about the alphas? He remembered how they'd all seem to be drawn to Ryan. Jeremy remembered thinking that Ryan's lust for him was so strong he was probably unknowingly affecting the alphas as he'd done in the arena some months earlier. That could however not be the case now because the females seemed not to be affected by whatever was affecting the males. What in blazes was going on?\n\n\"Jeremy...\" Ryan whispered, staring back at his mate with pained eye. \"What's wrong with me?\" There was so much distress in that question Jeremy quickly closed the distance between them and crushed his mate to his chest. \"What is happening?\" He asked in a small voice. \"I only wanted to hug him.\" He added in an anguished whisper.\n\nJeremy tilted Ryan's head back with a finger under his chin and looked down into the face of the man he loved more than anything in the world.\n\n\"I know. Don't beat yourself up.\" Jeremy said quietly, pushing Ryan's hair back from his face. \"Go take a shower and eat your breakfast.\" The calmness in Jeremy's voice soothed his mate. \"The table has been set in the dining room. I'll bring them in about an hour to see you, okay.\" Ryan nodded. \"Are you okay?\"\n\n\"No.\" Ryan whispered.\n\n\"Hey... I'm sure there's an explanation for all this.\" Jeremy growled softly. \"Everything will be fine.\" He closed the gap between their lips and kissed Ryan softly. \"Better?\" \n\n\"If you want to make it better, you know what to do.\" Ryan breathed, drawing a soft laughter from Jeremy.\n\n\"Let's wait for them to finish checking you out.\" Jeremy pressed a kiss against Ryan's forehead. \"Whatever it is we're dealing with is serious, baby. I promise you can have me as many times as you want after they finish whatever.\"\n\n\"Promise?\"\n\n\"Promise. Now go on. Delia baked some croissants for you. They look scrumptious.\" Jeremy turned Ryan around to face the stairs. \"Let me know when you're done.\" He lightly slapped Ryan on the arse. \"Go on.\"\n\nJeremy waited till Ryan disappeared up the stairs before leaving their villa. He was more curious than ever to know what was going on with Ryan. \n\n***\n\n\"Well, well, well. Look who decided to join us?\" Deloris grinned as she looked at Stan. \"Never thought I'd see the day Stanley Peters would run in the face of lust.\" She laughed.\n\nStan sat at the table with a grunt. \"Wanna save today's date somewhere?\" Phillip's head beta growled as he signaled the lady at the bar to bring him some alcohol. \n\n\"You okay, buddy?\" Jeremy asked quietly.\n\n\"Nothing a shot of whisky won't fix.\" He rasped, filling his glass to the brim with some Jack Daniels. He downed it at a go and refilled his glass.\n\n\"Trying to get drunk are we?\" Jeremy muttered, sipping his coffee.\n\n\"I need it.\" Stan muttered. \"Never been so scared in my life, Jer. I can't tell you what happened.\" He took a large sip. \"Just know that you would have killed me if you'd known.\"\n\n\"What? That you wanted to fuck my mate?\"\n\n\"Oh shit. You knew?\" Stan asked with widened eyes.\n\nJeremy nodded. \"Now you understand my problem?\"\n\n\"Shit.\" Stan whispered. \"Who else...\"\n\n\"Let's just say, every male who comes near him...\"\n\n\"Fuck! Almost as if he's a female in heat.\" Stan muttered.\n\nEveryone froze. One would have heard a pin drop. Stan had voiced out something that had already crossed the minds of the AA, the doctor and the warlock but none had been bold enough to voice it out. Every eye was on Jeremy. He stared wide-eyed at Stan. \n\n\"He's a man, Stanley.\" Mama Cora said with an incredulous look. \"That's the most ridiculous analogy ever.\"\n\n\"Just saying.\" Stan murmured with a shrug.\n\n\"Actually, I've thought of it.\" Dr. Sanders muttered.\n\n\"Me too.\" Jeremy grumbled. \"I mean there was what happened with Nash. Then the guys on the Island. Then the alphas...\"\n\n\"The alphas?\" Both Stan and Deloris asked with a shocked look.\n\n\"Uh-huh.\" Jeremy nodded. \"That day we went to meet the alphas...they were all drawn to Ryan. Wanted to be around him...talk to him... It was almost as if there was a force that was...\"\n\n\"How many days ago was that?\" Dr. Sanders asked with a frown.\n\n\"Six days ago.\" Jeremy answered.\n\n\"Any peculiar irresistible scent...odour?\"\n\n\"Yes actually.\" Jeremy groaned. \"All I need to do is get a whiff of that mouthwatering scent. Then I'm ready to go no matter the time or place or how exhausted I am.\"\n\n\"Can you remember when you started smelling it?\" The doctor pulled out a tablet from his bag and began to scribble away. \n\nDr. Sanders looked fascinated by what he was hearing. He suspected that the scent that according to the alpha his mate released, was sex pheromones. It was usually released by an individual, to attract another individual usually of the opposite sex, to encourage them to mate with them or to perform some other function closely related with sexual reproduction. Usually, females released it in spades when they were ready for breeding. The strange thing was that from how the alpha was describing it, his mate seemed to be releasing even more sex pheromones than the average female.\n\n\"That same day.\" Jeremy shrugged. \"That day we met the alphas.\"\n\n\"Does he still have the...urge for sex?\" The doctor asked.\n\n\"Oh yeah.\" Jeremy chuckled. \"It's almost as if he craves my cum. He insists he doesn't want to waste even a drop so...he wouldn't even blow me to completion. He always wants that cum inside him. Sorry ladies.\" Jeremy gave a quick insincere apology to Deloris and Mama Cora. Neither was a werewolf so they did not see sexual talk as normal as the rest of them. \n\n\"If it is really the heat, then that day of the meeting was when it started.\" The doctor said with some relief. \"You were very lucky Alpha. Because if it had been any other day but the first, I shudder to think what would have happened.\"\n\nJeremy looked confused for a moment. Then his eyes widened when the full import of what the doctor had said hit him like a ton of bricks.\n\n\"Oh fuck!\" He gasped. \"I would have killed them all...\" \n\nThe estrous cycle, which was also known as heat, was a time of fertility that generally lasted between five and seven days for female werewolves. It was always accompanied by intense sexual cravings. During that time, the female released powerful sex hormones which every male in the pack reacted to, even the male pups. It could usually be a dangerous time, particularly if the female was not mated, because conflicts and fights could break out between males as each would be drawn to the female in heat. Sometimes females in heat would either keep to themselves or move out of the pack house temporarily to prevent conflicts. Males who had to be around a female in heat for one reason or the other, but didn't want to or weren't supposed to have sex with them could be given a shot of zilka, which usually suppressed the urge for sex. \n\nFrom what the doctor was saying, if they'd met the alphas on any other day apart from the first day of estrous, which was usually the mildest, each alpha would have wanted a piece of Ryan. And since no mate would be okay with other males trying to fuck his mate...definitely not an Ojah, Jeremy would have fought with the alphas. And that battle would have ended in only one way for the bloodthirsty Ojah... The death of each alpha who was in that meeting. \n\n\"Shit!\" Stan growled. \"It would have been a massacre.\" \n\n\"If you think your mate would have stood by and allowed you to murder all those alphas, then you don't know him very well.\" Deloris said with a proud smile, her eyes sharp with intelligence.\n\n\"I repeat, the alpha's mate is a man.\" Mama Cora said curtly. \"He can't possibly be in heat.\"\n\n\"What other reason is there?\" Stan asked with a groan. \"I know what I felt. It's staring us in the face.\" \n\n\"Let's not jump to conclusions.\" Dr. Sanders cleared his throat. \"We have to be very sure. We can only be certain after the tests I'm going to run. In the meantime...\" The doctor opened his bag and took out a syringe. \"I have some...zilka on me.\" He looked at Stan. \"When the Alpha told me what happened to you when you saw Ryan, I gave myself a shot because I really don't want to die today.\" He held out the syringe to Stan. \"No offence, Alpha.\"\n\n\"None taken.\" Jeremy chuckled.\n\nStan took the syringe the doctor held out to him and without blinking an eye, quickly injected himself. \n\n\"Done.\" Stan gave the empty syringe back to the doctor and then turned his eyes onto his AA and best friend. \"Want a shot, Alpha?\"\n\n\"He's my mate, asshole.\" Jeremy murmured gruffly. \"I want to fuck him just as much as he wants me to. Care to tell me where zilka fits into the equation?\"\n\n\"Now I understand why you look so malnourished.\" Stan muttered, running his hand through his hair in a clear sign of worry. With a groan, he moved to the edge of his seat. \"Listen Jer, I'm sorry about what happened back there. You know there's no way I would go after what's yours if I was in the right frame of mind.\"\n\n\"I do.\" Jeremy murmured, slapping his friend on the back. \"Why else do you think your dick is still attached to your body? Better apologize when you see him again. He was hurt by your behaviour.\" \n\n\"Oh boy.\" Stan groaned.\n\n\"There's one more thing Alpha.\" Dr. Sanders said. \"If he's in heat, and all that you've told me is accurate, then today is the seventh day and also the most...desperate. His need for sex will be most intense today. Should I still go ahead with the tests?\"\n\n\"He's agreed to do it so don't worry Doc.\" Jeremy nodded.\n\n\"Very well, Alpha.\" Dr. Sanders said as he got to his feet. \"If you don't mind, I'd like to go and set up my stuff now.\" He said as he signaled Michelle who was having a laugh with two of the staff at another table. \n\n\"I'd better come with you just in case...\" Jeremy got to his feet and drew Stan out of his chair.\n\n\"I'd rather the good doctor went first.\" Stan grumbled.\n\n\"Aw don't be a baby Stanislav.\" Jeremy drawled. \"My mate doesn't bite.\"\n\n\"Suck my dick, asshat.\" Stan muttered.\n\n\"No thanks, twerp.\"\n\nAnd even as they left the restaurant, the two friends kept throwing insults back and forth to the amusement of Deloris and disapproval of Mama Cora.\n\n***\n\nRyan heard them before they entered the chalet. He heard Deloris' laughter and wanted to go meet her but didn't want a repeat of what had transpired with Stan so he stayed put. When the door eventually swung open, Jeremy entered first, followed by Deloris, and then the rest. Ryan simply stared from his perch on the windowsill. He noticed that Dr. Sanders sniffed the air tentatively before stepping fully inside. \n\n\"Ryan...\" The Deloris opened her arms with a delighted grin. \"Come here baby. We won't bite.\"\n\n\"Speak for yourself.\" Stan drawled, earning himself an elbow from Jeremy. \"Ouch.\" But he didn't even flinch. His amused gaze remained on Ryan.\n\n\"You must be enjoying it here.\" Deloris drew a grinning Ryan into a warm motherly hug. \"You look great.\"\n\n\"I'm enjoying it very much.\" Ryan sighed, hugging her back. \"I've missed you.\"\n\n\"Same darling. Same.\" She gushed. \"Everyone says hi. Your mother says to tell you she's missed you and needs to hear your voice more.\" Deloris added with a frown and then laughed at the guilty look that passed across Ryan's face.\n\n\"I'll call her.\" Ryan promised as he stepped back to shake Dr. Sanders' outstretched hand. He dipped his head respectfully at Mama Cora and said hello to Michelle. \"Please use the room to the left.\" Ryan directed. \n\nAs the doctor and his nurse moved to the designated room and everyone else made themselves comfortable in the plush couches, Stan approached Ryan.\n\n\"Hey.\" He said softly.\n\n\"Hey.\" Ryan looked wary.\n\n\"I'm sorry about earlier.\" Stan said quietly. \"Can I please get that hug now?\" \n\n\"Sure you're not going to freak out?\" Ryan muttered.\n\n\"Trust me...you would have known by now if I was going to.\" Stan gave the most roughish grin and then reached out to draw Ryan into his arms. \"I'm sorry.\" He whispered. Then he was picking Ryan off his feet and swinging him around to delighted laughter from his friend's mate.\n\n\"Hey dickhead, put him down before you make him dizzy.\" Jeremy gave a mock growl which got drowned in Ryan's laughter. \n\n\"You have the most jealous mate.\" Stan chuckled as he finally set Ryan down and flopped into the seat beside Jeremy. \n\n\"Here...\" Jeremy patted his thigh, indicating that Ryan come sit on his lap. But his mate shook his head.\n\n\"I don't think that's a good idea.\" Ryan said but the longing in his eyes showed how badly he wanted to do exactly what his mate had asked. \"I'll sit right here.\" He sighed, sitting beside Deloris. The way Jeremy looked insanely hot in those jeans and clingy V-neck t-shirt, Ryan didn't think he could get that close to him and not jump his bones.\n\n\"So...tell me what's been going on here Ryan?\" Stan asked but then quickly shook his head vigorously. \"No, no, no don't. I don't wanna know. Why don't I rather tell you guys what's been going on back home since y'all left on that motor...\" Ryan's face heated up so fast Stan trailed off. \"Well, well, well...pretty telling colouring I must say...\"\n\n\"Stan...\" Jeremy growled warningly but couldn't suppress his own telling smile. His eyes locked with Ryan's. And the heat in Ryan's eyes as he watched him watching him sent a delicious tingle up the alpha's spine.\n\nStan didn't miss the heated look that passed between his friend and his mate. With a smirk, he changed the subject. \"Okay, so I've finally decided to grant Admiral Mathias his wish. The man has been bugging me for years. I've agreed to train his new recruits. I'm to train them with one Lieutenant Commander Ty Wesley, who is the youngest Lieutenant Commander in the history of this country.\"\n\n\"The youngest huh?\" Jeremy chuckled. \"He must be badass.\"\n\n\"Oh he is.\" Stan grinned, deliberately flashing his unnaturally long canine teeth. \"I asked for a dossier on him so I've read all about him. He's good. He had better not show me attitude though. 'Cause if he does, I'm going to have a great time breaking every bone in his body and ending his career.\" \n\n\"Aw come on, you two are supposed to be working together as trainers not enemies.\" Jeremy laughed. \"I don't think he'll give you attitude.\"\n\n\"Just saying.\" Stan chuckled. \"Phillip and I met with...\"\n\n**\n\nRyan tuned out Stan's voice. He was sitting beside Deloris who was listening to what Stan was saying. Ryan watched as his hands, which were in his lap, shook. It was almost as if he was an addict having withdrawal symptoms. Jeremy was right...something was definitely not right. He'd told himself whilst he showered and ate that he was going to exercise some control and endure whatever examination that Dr. Sanders wanted to conduct. Jeremy had explained that he'd only asked Mama Cora and Deloris to be around as backup because of the nature of his powers. If during the examination, things overwhelmed Sanders, the other two could step in and hopefully save the day. That was thoughtful of his mate, Ryan couldn't help but think. His only problem was that he wanted his mate like never before. He needed to have sex. And the urge was getting stronger by the minute. Maybe it was because they hadn't had sex since he'd woken up that morning. Ryan tried to distract himself with other thoughts but he just couldn't seem to reel himself in. What made it even more difficult was the fact that Deloris, who he respected massively, was sitting right beside him. Mama Cora was also a respected old lady in the Pack. Ryan really couldn't go getting all slutty with his mate as he was dying to, in the presence of those two.\n\n\"Hey, are you okay?\" Deloris reached out to cover Ryan's trembling hands with hers.\n\n\"Want the truth?\" A soft whimper escaped Ryan as need slithered through his veins.\n\n\"Nothing but.\" Deloris looked closely at Ryan and gasped at the clear struggle going on inside those intense green eyes. Ryan was definitely not alright. Even his skin felt hot to the touch, almost as if he had a fever. \"Ryan?\"\n\n\"I'm...\" Ryan took deep breaths and leaned the back of his head against the headrest of the couch. \"I'm not okay.\" He whispered shakily.\n\n\"We're ready, Alpha.\" Dr. Sanders said from the doorway to the room the examination was to be conducted. \n\n\"Look at me Ryan.\" Deloris demanded, ignoring Jeremy who had moved to where they sat to crouch before Ryan. She waited till Ryan opened eyes glazed with hunger to focus on her. \"Now breathe.\" The warlock held Ryan's hands between hers and began to recite some words silently.\n\nIn no time at all, Ryan began to feel some warmth spreading through him. With it came a sense of calm. Suddenly the urge to have sex wasn't so bad. He still wanted Jeremy but it didn't feel as if he'd die if he didn't have him right then as it had felt like earlier.\n\n\"Better?\" Deloris asked when she felt Ryan's erratic breathing even out.\n\n\"Yes. Thanks.\" He grinned and leaned forward to kiss her on the cheek. Then he stood up and turned to Jeremy who'd also gotten to his feet. \"Coming?\"\n\n\"No.\" Dr. Sanders said quickly. \"I'd rather the alpha stays here. I'll let you know if I need you.\" He told a scowling Jeremy.\n\nJeremy couldn't stifle his growl. \"If you think I'm staying away from my mate, you have another thinking coming, Sanders.\"\n\n\"It's not the best time to be by his side Jeremy.\" Deloris said softly. \"Sanders won't get an accurate reading. I'll be with him. And I'll call you when it's necessary.\"\n\n\"And at what point would you say it's necessary?\" Jeremy rasped, wrapping his arms around an amused Ryan.",
        "\"I will know when it is.\" Deloris smiled as she watched Jeremy kiss Ryan right in front of them. \"In fact why don't the two of you go somewhere and leave us to work?\" She looked at Stan conspiratorially.\n\n\"Go where?\" Stan asked with mock innocence, making Deloris roll her eyes.\n\n\"Anywhere but here.\" She responded dryly. \"Go for a walk, a run, or better still, take the chopper for a spin or something.\"\n\n\"Go.\" Ryan whispered to Jeremy amidst kisses. \"I'll be fine.\"\n\n\"Call me when you need me.\" Jeremy whispered against Ryan's moist lips.\n\n\"Come on Alpha.\" Mama Cora grunted. \"With the way we all know he's feeling, he'll be summoning you in the next sixty seconds.\" She drawled, making Ryan blush. \"Wait for Deloris' signal and not your mate's. The doctor can only do his job if you cooperate.\" \n\n\"Alright.\" Jeremy agreed reluctantly, kissing Ryan one last time. He waited till Ryan and Deloris entered the room where the examination was to take place before turning to Stan. \"Come on buddy.\" It was obvious the alpha was glad to have his friend around. \"So what is it going to be?\"\n\n\"How about a walk?\"\n\n***\n\n\"Okay, that's it.\" Ryan growled. \"I need to... Call him Deloris.\" He swung his feet off the bed and sat up. The monitor went crazy.\n\n\"Alpha Ryan, please.\" Dr. Sanders quickly attached one of the electrodes that had fallen off Ryan's chest.\n\n\"Ryan you have to fight it.\" Deloris ran her hands through the hair of the agitated werewolf.\n\n\"I can't anymore.\" He grunted. \"I don't want to. It's becoming too painful to ignore. Please Deloris. I need him.\"\n\nDeloris turned to look at Mama Cora with desperate eyes. They had been in the room for a little over an hour. Between Deloris and Mama Cora, they'd had to constantly calm Ryan down. Unfortunately their spells were no longer working on the nerves of the alpha's mate. Dr. Sanders claimed he needed just about forty-five minutes more to complete the whole test.\n\n\"Call him.\" Mama Cora said quietly. They could all see how aroused Ryan was. No one could miss that obscenely blatant bulge in his shorts. \"Maybe he can calm him down enough for us to continue.\"\n\n\"Call Alpha Jeremy?\" Dr. Sanders asked with an incredulous look. \"They will be going at it like bunnies immediately he shows up.\"\n\n\"Watch it Doc.\" Ryan snapped as he shoved a hand through his hair, a sure sign of his increasing impatience. \"I wish you could feel what I'm going through for even a second. You would be humping anything that moves if you felt even a fraction of what I'm feeling. Trust me. I'm going insane. Call him please.\"\n\n\"I'll do even better.\" Deloris said with a sympathetic smile. \"I'm going to bring him. Give me five seconds.\"\n\n\"Thanks.\" Ryan sounded as if he was being strangled. \n\nDeloris delivered the alpha in less than the promised five seconds. And even that seemed like hours to Ryan.\n\n\"Ryan?\" Jeremy pried Ryan's hand from his hair and tilted his head back. \"Hey...\" He whispered, feeling himself go rapidly hard from the tantalizing scent emanating from Ryan and the unadulterated hunger in his eyes. He was instantly desperate for his mate. But he'd assured Deloris of his cooperation. \"I'm here.\"\n\n\"I need you inside me, Jer.\" Ryan whimpered. \"I need you now. Please don't make me beg.\" His eyes were dark and glassy with lust, his body hot but at the same time wracked with hard shivers as if he was cold.\n\nJeremy turned to look at Deloris, the lust and helplessness in his eyes clear for the warlock to see. With a groan, he toed off his loafers and climbed into the bed. Deloris had already pleaded with him to simply try and calm Ryan down. He'd promised to do his best so at least had to try. Jeremy moved back till his back was to the headboard. Then he beckoned Ryan to come closer. Ryan hastily moved to straddle Jeremy. He was in only shorts with part of his back and his entire chest area covered with electrodes, through which he was being monitored.\n\nWithout a word, Jeremy closed the gap between their mouths and began to kiss Ryan languidly. His intention was to calm his mate with tender kisses. But soon they were devouring each other right there in front of Dr. Sanders, Deloris and Mama Cora. The nurse had been excused earlier, immediately after Ryan's blood samples had been taken and he'd been attached with all the electrodes. Whilst the doctor busily made his notes, the two women discreetly averted their eyes. \n\nThe kiss got hot and desperate. Ryan's moans and whimpers were music to Jeremy's ears. Before long, Jeremy's began to trail hot openmouthed kisses down the creamy column of Ryan's throat, lapping at the sweat there. He loved Ryan's scent and taste. Jeremy felt himself being sucked into the vortex of lust. He knew that he was losing control but couldn't help himself. \n\n\"Need more...\" Ryan whimpered as he began to thrust uncontrollably against Jeremy. The feel of their hardened cocks rubbing together even through their clothes, was divine. \"Please Jeremy...please...\" \n\n\"Al...alpha...\" Dr. Sanders stuttered as he stared at the monitor. Ryan's heart rate was way above acceptable. \"Jeremy!\" The doctor said sharply, the desperation in his voice alarming the women and penetrating the fog of lust surrounding Jeremy.\n\n\"Ryan...baby... we have to...oh fuck!\" Jeremy cried out in pleasure as Ryan latched onto his mark and began to suck. \"Oh shit...oh shit...oh...\"\n\n\"Alpha you really need to stop...\"\n\n\"Jeremy!\" Deloris' desperate cry drowned out the doctor's words. \"You're...\"\n\nRyan turned eye that had gone completely white on the three in the room and waved his hand. All three instantly went absolutely still...almost as if they were statues.\n\n\"Ryan, what the hell...\" Jeremy started but...\n\n\"Shut up Jeremy.\" Ryan turned those eerie eyes on Jeremy. \"I told you not to make me beg but...you love hearing me beg don't you?\" His eyes turned back to their intense green. \"They're frozen.\" He moved off Jeremy and stripped out of his shorts and boxers. Then he reached for Jeremy's buckle.\n\nThe alpha finally found his voice. \"Ryan...\"\n\n\"They can't hear or see us.\" He pulled down Jeremy's jeans together with his boxers and swallowed audibly when that big, hard, wet-tipped, pulsing cock bounced out. The sight stirred everything primitive inside Ryan, making him weak in the knees. He wanted to taste Jeremy so bad but even more than that, he wanted him deep inside him. \"God, I've missed you.\" Ryan moaned, licking his lips longingly. \n\n\"I don't think this is a good idea baby.\" Jeremy mumbled halfheartedly. All he wanted was to sink inside his mate but he knew that he had to act responsible. If only his alpha command could work on Ryan. \"We can't fuck up Sanders' work.\"\n\n\"Why do you think I didn't blink us away?\" Ryan moaned, lining Jeremy's throbbing cock with his twitching hole. \"This way, I get my fuck and he gets his tests. Everyone gets what they want...right?\"\n\n\"Ryan, you need lube.\" Jeremy couldn't help the smile that tagged at his lips. His mate was so sexy when he took charge as he was doing right then.\n\nRyan reached for the tube of gel the doctor used to attach the electrodes to his body. He squeezed some onto Jeremy's leaking cock and into his own hand. Then as he rubbed the gel onto Jeremy with one hand, he got himself ready with the other.\n\n\"Damn.\" Jeremy gasped, his breath coming out fast as he watched his beautiful mate finger-fuck himself. For as long as he lived, that erotic sight was forever etched into his memory. \"You're so fucking beautiful.\" He whispered with glazed eyes. \n\n\"Ready for me?\" Ryan whispered as he began to slowly sink down onto Jeremy's mammoth cock. He whimpered as he felt his muscles stretch to take his mate. Shattering pleasure engulfed his entire body as he impaled himself, his eyes going dim with the intensity of thrill he felt. \"So good.\" Ryan moaned as his lashes lowered and his kiss-swollen lips parted sensually. A sigh of ecstasy escaped those lips when he finally took Jeremy to the hilt. \n\n\"Fuck...\" Jeremy groaned, his eyes becoming heavy with pleasure. \"You feel amazing, baby.\" He gasped, moistening his suddenly dry lips with his tongue. \"Come here.\"\n\nRyan didn't need to be asked twice. He knew what Jeremy wanted. He needed it even more. He leaned in and captured Jeremy's mouth in a toe-curling kiss that left both of them wanting more. When Ryan began that ancient dance of ecstasy, they both knew they weren't going to last. Ryan rode Jeremy hard, loving the feel of that cock moving inside him. It was deliriously amazing. \n\n\"My god.\" Ryan gasped against Jeremy's moist lips as he touched his forehead to Jeremy's. \"It's been so fucking long.\" He whispered breathlessly.\n\nJeremy couldn't tear his eyes off Ryan. He loved fucking his sexy mate. At a point, Jeremy heard the front door open and knew that Stan was in. He'd asked Deloris to blink Jeremy to his mate and leave him to complete his walk. Jeremy's upward thrusts didn't falter. Since, the door to the room in which they were was at the foot of the bed, his friend would only be able to see Ryan's back and not his dicks. And that was okay with Jeremy. He gripped Ryan's hips and moved him up and down the rigid length of his erection with full, deep strokes, loving the ecstatic cries that tore out of Ryan.\n\n\"You must be fucking kidding me.\" They both heard Stan but neither spared him a glance. Whilst Jeremy didn't care that his friend could see him fucking his mate, Ryan was too far gone to be bothered. Nothing else mattered at that moment except the pleasure Jeremy was giving him. He didn't ever want him to stop. Ryan ached for the pleasure to go on and on.\n\n\"Oh god, not gonna last...\" Ryan gasped, his body writhing as he wantonly rode Jeremy with abandon, pounding his arse down on that massive cock in shallow, fast strokes. That angle got his button nailed so satisfyingly he was on cloud nine. \"Oh yes, right there\" He mewled, feeling his thighs quiver against Jeremy's ribs. \"Damn, I love the way you feel inside me.\" Ryan moaned as blinding pleasure raced through him. \"Give me your cum baby.\" He cried as he felt his orgasm crawl from his toes, up his legs, and race up his spine. \"Going to come...\" Throwing his head back, he gasped Jeremy's name as his back arched with the intensity of the pleasure rolling through him. \"Come with me Jer...give me that cum...\" Ryan moaned as he began to shoot ropes of pearly cum between them, his sweet contractions rocking his body and causing him to tighten like a vise around the cock inside him. And with that cum-inducing, rhythmic grip on his cock, Jeremy didn't have any choice but to follow his mate into bliss.\n\nThe alpha roared his completion as his entire body convulsed with an explosive orgasm. With his mouth opened, eyes reduced to slits and muscles tensed with release, he stared at his writhing mate with adoration even as he filled him with his essence. Their mouths found each other's even before their orgasms subsided. The sweet, soft tease of Jeremy's firm lips was so spine-tingling Ryan closed his eyes and just enjoyed it. The applause from the one-man spectator standing in the doorway brought Jeremy out of his orgasmic stupor. \n\n\"Get the fuck out of here, Stan.\" Jeremy said lazily as his fingertips tenderly stroked Ryan's, cheeks and jawline. \"Better now?\" Jeremy's voice dropped to the sexy bass rumble that never ceased to melt Ryan.\n\nHe nodded. \"I needed that.\" \n\n\"I know.\" Jeremy's eyes shone with so much love. \n\n\"Can you unfreeze these old folks now?\" Stan stood staring at the monitor, his hands on his lean hips. \"Damn, this is one interesting read.\" He muttered. \"Even to my unprofessional eyes.\"\n\nJeremy laughed when Ryan buried his face against his neck with a groan. Now that he was down from his high, he was suddenly mortified he'd acted so shamelessly. \n\n\"You can always freeze his arse, you know.\" Jeremy drawled.\n\n\"Oh hell, no.\" Stan growled, making at dash for the door. That got him raucous laughter from both Jeremy and Ryan.\n\nThe satiated couple got themselves presentable after Jeremy cleaned them with his boxers. Then they got back into the position they'd been in before Ryan froze the three. Unlike before, however, they were not humping and kissing. Ryan still straddled Jeremy, but this time, the side of his sated face rested against Jeremy's chest. With a wave of his hand, the three unfroze.\n\n\"...not helping matters here.\" Deloris continued speaking as if she hadn't been stiff for the past thirty minutes. \"Oh...\"\n\n\"How come he's suddenly so calm?\" Mama Cora asked with a surprised look.\n\n\"Something's not right...\" Dr. Sanders stared at the monitor, perplexed. \n\n\"Y'all moving and talking now, I see?\" Stan's amused face appeared at the door.\n\n\"What do you mean moving and talking now?\" Deloris asked but her eyes were on the doctor's monitor.\n\n\"Ryan froze ya.\" The grin on Stan's face was downright wicked.\n\n\"He did what?\" Deloris gasped.\n\nStan stepped fully into the room with an amused look on his face. \"When you gotta fuck, you gotta fuck. You old folks were being enemies of progress. So he froze...\"\n\n\"They get it Stan. Jeez.\" Jeremy finally growled, making Ryan burst into laughter. \n\n\"Wait...\" Dr. Sanders sniffed the air. \"So you two actually... Interesting!\" Dr. Sanders gushed, still staring at the monitor. The look on his face could only be described as amazed and excited. He looked like a kid who'd just seen Santa for the first time. \"I got more than I bargained for.\" He began to scribble on the screen of his tablet.\n\n\"Care to explain to the rest of us, Sanders?\" Mama Cora asked, moving closer to the monitor too.\n\n\"Patience. Just two more minutes, then this is done.\" The people in the room had never seen the elderly doctor so excited. \"This is just... Wow!\"\n\n\"Yeah, yeah, yeah, is he in heat or what?\" Stan growled, causing the flush-faced doctor to turn to stare at the three standing behind him.\n\n\"Oh, I thought we were already past that.\" He said in a surprised tone. \"Of course he's in heat. In fact, see these bars?\" He pointed at the yellow bars which had begun to move waveringly on the screen.\n\n\"What of it?\" Mama Cora looked and sounded impatient.\n\n\"Wait for it...\" The doctor breathed. The colour of the bars soon changed to orange, then to red, and then began to move erratically on the screen. And then as if on cue, they heard heavy breathing coming from the bed.\n\n\"Aw come on.\" Stan growled. \"Y'all just fucked.\"\n\nThere was a loud beep from the monitor, signaling the end of the reading and the examination as a whole. \n\n\"Done.\" The delighted doctor rubbed his hands together excitedly. It was obvious he thought he'd gotten the research of the century. \"Oh boy...\"\n\n\"Let's get outta here.\" Jeremy breathed, ripping off the electrodes from Ryan's body. And in the next second, the alpha and his mate were no longer on the bed.\n\n\"Talk about bunnies.\" Stan drawled, pulling a chair to sit and listen to Dr. Sanders' lecture on the very first male to ever be in heat.\n\nAnd upstairs, Alpha Jeremy and his mate fucked each other to an orgasmic bliss that obliterated every coherent thought. They completely tuned out the world and screwed till neither knew where he ended and the other began. \n\n***\n\n\"I'm sorry for what I did.\" Ryan apologized for the umpteenth time, hugging Deloris. \n\nThey were standing beside the chopper that brought the five people earlier that morning. Their work was done and it was time to go home. The nurse and Mama Cora were already on board. Dr. Sanders was talking to some of the male staff. They were all back to work with no threat of any sexual craving thanks to the shots of zilka the good doctor had given them.\n\n\"I've told you not to worry about it.\" The warlock laughed, hugging Ryan back. \"The doctor says your...actions rather enabled him get the best outcome. Besides, it could have been worse.\" She drawled, making Ryan laugh too. \"Listen Ryan...\" The laughter left her face, as she looked up at Ryan with solemn eyes. \"I remember something your fath...Reynard said when we were at the fortress. Something about your siblings.\"\n\n\"He said a lot of things.\" Ryan said quietly. \"Which one are you referring to?\"\n\n\"How they kept leaving one organ or the other behind. And how the wrong people kept bringing back the organ that was left behind.\"\n\nRyan nodded. \"I'm listening.\" He gave the warlock his complete attention.\n\n\"If I remember correctly, he told us that one of your sisters left her womb behind.\" She said quietly.\n\n\"And you think I...\"\n\n\"I'm just saying don't get freaked out if anything like that happens.\" Deloris said quietly but firmly.\n\n\"Well, I hope I didn't bring back any womb 'cause really, what am I going to do with it?\" Ryan chuckled. Then his eyes widened. \"Oh god, oh god, oh...\"\n\n\"Hey, hey, look at me...\" Deloris cupped the agitated man's cheeks and forced him to look at her. \n\n\"Are you alright, baby?\" Jeremy called out, somehow feeling the change in his mate's mood.\n\n\"He's fine Jeremy.\" Deloris called back, hoping the alpha stayed away so she could psych Ryan up for what she strongly suspected was about to happen. \"I'm not saying you have it. All I'm saying is don't be surprised if you do. I mean no one thought a male could ever go into heat but you did. It doesn't necessarily mean you're going to...\" She tenderly reached up and pushed back the hair that had fallen over Ryan's eye. \"Even if you get pregnant... big deal.\" She shrugged. \"We are supernatural beings. Nothing shocks us...much. Just don't panic if it happens okay? Hey, do you hear what I'm saying?\"\n\n\"I do.\" Ryan answered in a shaky voice. \"Oh my god, Deloris what am I going to do if...\" He couldn't bring himself to say the words.\n\n\"We'll cross that bridge when we get to it. In the meantime, don't panic if anything like that should happen. Promise me.\"\n\nRyan sighed heavily. \"I promise.\"\n\n\"Good. And there's no need to worry Jeremy with this because it might not even happen.\"\n\n\"Okay.\"\n\n\"If it happens, know that your baby would be the most beautiful baby. I mean look at you and Jeremy.\" She grinned, trying to lighten the mood but Ryan didn't crack a smile. \"Come here.\" Deloris hugged Ryan fiercely. \"Hey snap out of it. I only wanted to give you a heads-up in case it happens. It hasn't so don't dwell on it. Okay?\" She waited till Ryan nodded. \"Good. Call me whenever you need me. I'm just a blink away.\"\n\n\"Okay. Thanks Deloris.\" Ryan kissed her on both cheeks. \"And tell mum I miss her.\"\n\n\"You sure you miss her?\" The warlock asked dryly. \"With all that you two have been up to on this Island...\" She wiggled her eyebrows teasingly.\n\n\"Aw come on...\" Ryan laughed softly even as his cheeks reddened. \"I miss her every day. Please tell her.\"\n\n\"Will do honey. Take care.\" She stepped out of Ryan's embrace and moved towards Jeremy's opened arms as Stan moved to Ryan.\n\n\"So you two ready for a baby?\" Stan drawled as he hugged Ryan. Ryan froze. \"Hey, come on...relax.\" Stan chided, not missing how tensed Ryan had gotten at his words. \"It was only a joke.\" \n\n\"Ryan?\" Jeremy sounded concerned. \n\n\"I'm fine.\" Ryan smiled at an obviously worried Jeremy when he was released by Stan. He stretched out his hand to Jeremy, who took it and drew him to his side. \"Have a safe flight Stan. Regards to everyone.\"\n\n\"Yeah, yeah, yeah, listen.\" Stan gripped his chin between his thumb and forefinger in a thoughtful posture. \"I was thinking...\" He ignored Jeremy's groan. \"If I could magically bottle all the pheromones around you two, I could sell it as aphrodis...\"\n\n\"Get the fuck outta here, Stan.\" Jeremy growled even as Ryan laughed.\n\n\"Laters.\" Stan laughed as he ran to the chopper. Deloris and Dr. Sanders were already on board. \"Go continue doing what you do best.\" He shouted as he climbed in. Of course he couldn't resist giving a final dig. Everyone who heard him laughed.",
        "And as they watched the chopper soar up into the sky, all Ryan could think of was how truly freaky he was. Knowing that his mate wasn't disgusted with him was all that was stopping him from breaking down and bawling his eyes out. He felt Jeremy's unconditional love. And that gave him strength. \n\n\"Hey...\" Jeremy turned to face Ryan and touched his forehead to his. \"You're not okay. What is it?\"\n\n\"Nothing. I just want you to hold me and never let me go.\" He whispered.\n\nJeremy tightened his arms around Ryan's waist as his adorable mate reached up to wrap his arms around his neck. And they just stood there, breathing each other in and drawing strength from each other's bodies. Ryan basked in the joyful feeling of being held and loved by Jeremy. Before long, Jeremy felt the subtle movement and wet glide of Ryan's tongue against his neck and shivered. \n\n\"Ryan...\" Jeremy felt his heart rate pick up as his cock began to harden between them. One hand came up to cup Ryan's cheek. \"Let's get out of here.\" He murmured huskily.\n\n\"Can we go to the cave?\" Ryan asked, drawing one of Jeremy's fingers into his mouth to suck on it. The act was so unexpectedly erotic Jeremy threw his head back and let out a guttural moan. His cock went from interested to fully erect in seconds.\n\n'The cave. Now!' Jeremy instructed on their mind-link. \n\nThe alpha and his mate were there in the open one moment. In the next, they were gone.\n\n***\n\nAlpha Jeremy Stanton shot out of bed. He turned his head to make sure that his mate was beside him in bed. Ryan was sleeping peacefully on his back with his face turned towards Jeremy. The alpha got out of the bed but didn't move away from it. Something had woken him up. Better still, someone had. Someone was in the room with them. But who would risk being caught snooping in none other's room than his, Jeremy wondered. He could hear a heartbeat besides that of his mate. It was faint but it was there. Apart from the heartbeat, he could smell whoever it was. It was a sweet scent, almost like Ryan's. Maybe whoever was in the room with them wasn't a threat. But what did the person want in the first place? Jeremy moved away from the bed but stopped when he noticed that the further he moved away from the bed, the fainter the heartbeat got. He crouched down and looked under the bed but there was no one there. He looked down at Ryan's face, angelic in repose, and listened to his heartbeat. It was strong and steady as it always was but strangely, it seemed to beat faster. With a slight frown, Jeremy sat down beside Ryan and laid a hand on his chest, feeling the rhythmic rise and fall of his chest. Why was Ryan's heart beating so fast? He hoped it was nothing serious.  \n\nThen Jeremy heard it again. The other heartbeat. It was still faint, but it was steady. The surprising thing was that it seemed to be coming from Ryan. But how? And that scent...it seemed stronger the closer he got to Ryan. It dawned on Jeremy that the scent seemed to be emanating from his mate. Why had Ryan's scent changed, Jeremy wondered. Could it have something to do with the heat?\n\nRyan's seventh and last day of heat had been two days earlier. His abnormal craze for sex had diminished to normal on the eight day. Ryan still wanted him but it was not with the intensity and desperation with which he had demanded sex on those seven days. That strong mating scent had ceased abruptly on the eighth day. His mate still smelt wonderful but that particular scent...the one that Jeremy just couldn't resist, was no longer there. This new odour, although sweet, seemed rather strange.\n\nJeremy stretched out beside Ryan. Then he placed his head on his chest, trying to listen to his heartbeat closely. He realized that the second heartbeat was coming from below where his head rested on his mate. Jeremy moved his head slowly down Ryan's body, feeling the sound get stronger as he moved down. He couldn't suppress the gasp that tore out of his throat when he got to Ryan's stomach. The alpha just knew what had happened when he realized that the second heartbeat was coming from his mate's belly. He didn't have to be a genius to know what that sound he was hearing signified. There was a new life inside Ryan.\n\n\"Luna...\" Jeremy breathed as his entire body went taut with shock. He couldn't move or make a sound. He just stared at Ryan's flat tummy. \"Oh. My. God.\" Jeremy gasped, his entire body going weak. Ryan was pregnant. A myriad of emotion which the alpha couldn't decipher, filled him. He went from shock to emotional within minutes. His chest felt constricted. The lump in his throat felt like a boulder. Jeremy suddenly found it difficult to breathe. He felt his vision blur as all the strength completely left him. \n\nJeremy didn't miss the struggle that suddenly began within him. But he was too disoriented to even comprehend what exactly was going on inside him. He gasped when he felt fiery heat sizzle through his body. He suddenly had no control of his body. He felt as if he was falling. Jeremy knew he had to rein in some control but he was too overwhelmed with emotions he just didn't have the strength. The last thing he heard as he took the plunge into nothingness, was his wolf's exasperated howl inside him. The beast seemed desperate to come out. But something stronger overpowered the wolf. Jeremy's eyes turned bloody red. \n\n***\n\nRyan stirred and stretched. He felt eyes on him even before he opened his eyes. When he saw Jeremy leaning over him and staring at his tummy, Ryan reached out to tenderly run his knuckles against his mate's cheeks. From the clock on the wall, it was a quarter after six a.m.\n\n\"Hey, what are you doing up?\" Ryan whispered. They always slept in. \"Couldn't sleep?\" He watched as Jeremy slowly turned his head to look at him. Ryan's brows raised in surprise at the red eyes staring at him. The last time he'd seen the Ojah, his mate was back from purgatory and was dying. He had no fear for Jeremy's Ojah at all. But he didn't know why he was there that morning either. \"To what do I owe this...visit?\" Ryan asked quietly.\n\n\"I'm sorry for what I did to you, Ryan.\" The red-eyed Jeremy said shakily. \n\nRyan's eyes widened in surprised. He didn't need to ask the Ojah what he was talking about. There was a saying that no one ever forgot their first time. Well...even if it was meant to be forgotten, his first time could definitely be easily remembered. \n\n\"I know you are.\" Ryan moved to sit up. \"And I accept your apology. But why now?\" He leaned his back against the headboard and watched the Ojah intently.\n\n\"I've wanted to come out and apologize but Jeremy and the wolf wouldn't allow me anywhere near you.\" \n\n\"But I thought you were stronger than either of them.\" Ryan pointed out.\n\n\"I am. But when they join forces, they are a formidable force.\"\n\n\"That day I was attacked on campus, you came.\" Ryan pointed out.\n\n\"They didn't have a choice then.\" He shrugged. \"I was your only hope. It was either they allowed me out or Camilla hurt you real bad.\" The Ojah watched as Ryan nodded. \"I wanted to apologize then but before I could speak, you asked for...him. So I gave you him.\"\n\n\"I see. You honestly expect me to believe that was the only time you've gotten out?\" Ryan watched the Ojah squirm. He didn't know why he felt like drilling the creature who had tortured him when he'd first landed in Stanwood Pack. But he was enjoying himself.\n\n\"I...I was there during your marking.\" He lowered his eyes. \"Both times.\"\n\n\"Really?\" A faint smile touched Ryan's mouth when the Ojah nodded. \"Did you enjoy it?\" He smirked when the Ojah's head shot up and blood-red eyes stared into his.\n\n\"I've never enjoyed anything more.\" He rasped. \"Again, those two didn't have a choice. It wouldn't have been a marking without me.\"\n\n\"So...why did they allow you out this time? How did you get out if you claim they don't want you anywhere around me?\"\n\nThe Ojah swallowed hard. \"Jeremy...Jeremy...\"\n\n\"Jeremy did what?\" Ryan asked gently, noticing how much the Ojah seemed to be struggling. \"Tell me.\" He whispered.\n\n\"He...he lost control of his body after what he saw.\" He said quietly. \"You know...that will make the toughest of men weak.\"\n\n\"What did he...\"\n\n\"Still talking.\"\n\nRyan's eyes widened. \"Sorry.\" He murmured, but that faint smile touched his mouth again. Despite all that the red-eyed alpha had done to him in the past, he admired the hell out of his blunt, unrestrained nature. He found it damn hot.\n\n\"I took advantage when I felt him lose control. I fought the wolf and got out. Well, I didn't really fight him...\" At this point Ryan couldn't help but feel the Ojah seemed to be talking to himself. \"I just bulldozed my way out. He wanted to get out too by the way. I just thought this was my only chance. My chance to sincerely apologize for what I did to you. I know you see me as a monster. I am. But I want you to know that I will never ever harm you or our baby. Ever!\"\n\n\"What baby?\" Ryan frowned as his head began to pound.\n\n\"The one in here.\" He said softly, reaching out to gently rub Ryan's belly. \n\n\"Oh...\" Ryan gave a short laughter which sounded strained even to his own ears. \"There's no baby. It was just the heat that...\"\n\n\"Close your eyes.\" The Ojah whispered. \"Concentrate...listen and feel.\" He instructed quietly and watched as Ryan did as he'd been told.\n\nA loud gasp tore out of Ryan as his eyes shot open. \"Oh my god...\" A shocked whisper. He suddenly felt light-headed. \"I feel it.\" His hands went to his belly. \"Oh my god...\"\n\n\"You've already said that.\" The Ojah muttered. \"Listen Ryan, it would kill me if you kept the baby away from me for fear that I might harm it.\" The Ojah went on quietly. \"'Cause I will protect it with my life. I will protect both of you with my life. I'm nothing without you, Ryan. It will take time but eventually, you will come to know that I live for you.\" The Ojah finally took a closer look at Ryan's ashen face. \"Ryan?\"\n\n\"Why did Jeremy...\" Ryan began shakily but trailed off. \n\n\"Uh-huh?\" The Ojah prompted. \"Why do you look like that? Don't you want our baby?\" He asked sharply.\n\n\"Why did he lose control?\" Ryan's voice shook. The last time Jeremy lost control and allowed his Ojah to take over, he hated what he'd been given. Him. \"Why?\" A tear escaped his eye and slid down his cheek.\n\n\"Too much emotion can bring a warrior to his knees. What Jeremy felt when he felt the presence of that baby...I've never felt before.\" He rasped. \"That intense, unconditional love... It was shocking, it was unexpected, it was overwhelming, and it reduced him to a position of complete submission. If he gets the slightest feeling that you don't want the baby, it will destroy him. So I ask again; don't you want the baby?\" \n\nThe relief that washed over Ryan was instant. He'd heard all that he needed to. \"I want it.\" And Ryan realized he'd meant nothing more. That baby growing inside him was part of him and he loved it already.\n\n\"Good.\" The Ojah looked relieved. \n\n\"So he's okay with it?\" Ryan asked in a small shaky voice. \"He's not freaked out by my abnormality?\"\n\n\"Your...\" The Ojah growled low in his throat. \"You really need to stop thinking that way about yourself. Remember that very first hand-job he gave you? In the hospital, after I'd...\" He trailed off. At Ryan's nod, he continued. \"Did you see or feel any disgust from him even then?\" Ryan slowly shook his head. Jeremy had simply wanted to give him relief. \"He loved you even then. He just didn't know it. He loves everything about you Ryan. You could turn into a cockroach right now, and we...yes, we...would love you till we draw our final breath. Never doubt that. I think that you're an amazing guy and anyone would be lucky to have you.\" He murmured.\n\n\"Thanks.\" Ryan smiled through his tears.\n\nThe Ojah groaned, reaching out to wipe the tears off Ryan's cheeks. \"Seeing you in tears is killing me.\" He growled, moving closer to Ryan. \"And to think I pride myself on not feeling.\"\n\n\"But you do.\" Ryan gave a tremulous smile. \n\n\"Yeah, thanks to you.\" He grunted irritably. \"Can I please hug you?\" He asked softly. \n\n\"You don't have to ask.\" Ryan moved into the Ojah's arms and melted against him. \"Thank you.\" He whispered.\n\n\"No. Thank you.\" \n\nWhen Ryan moved out of the Ojah's arms, he couldn't help but notice the wetness in those red eyes. He reached up tentatively to swipe his thumb across one eye and looked at his wet thumb. \n\n\"It's water, not blood.\" Ryan gushed with mock surprise.\n\n\"Oh you're mean.\" The Ojah chuckled. \"Can I ask as favour?\" \n\n\"Anything.\" Ryan smiled. \n\n\"Give him some time. Jeremy I mean.\" He grimaced. \"His mood is affecting me. That's the first time ever that I've... teared up. You're a bad influence.\" He gently brushed Ryan's hair back. \"If he comes out now, he'll just bawl his eyes out. I can feel the intensity of the emotions running through me right now. Give him time.\" He said softly and waited till Ryan nodded his understanding. \"Good. In the meantime, the beast is dying to come out. Cuddle with him for a while. No shifting. At least not until that baby drops.\"\n\n\"Seriously?\" Ryan gasped. \"I love going for runs.\" He whimpered.\n\n\"Well, I'm no expert but from the little I know, shifting can harm the baby. You have to sacrifice some of your comfort for it.\"\n\nRyan smiled despite himself. \"You're going to be an amazing father.\" Ryan whispered, cupping the Ojah's cheek. \n\n\"We're going to be the very best.\" A promise. \"Now, I don't want that beast scratching you mistakenly with his claws. Go get something to wear before he shows up.\"\n\nLaughing at the scowl on the Ojah's face, a naked Ryan got out of bed and made his way to the bathroom to pee and brush his teeth.\n\n\"God, I'm hungry.\" Ryan groaned when he came back into the room and headed for the closet, still stark naked. He pulled on boxers, grey sweatpants and a white long sleeved t-shirt and then headed back to the bed.\n\nBut the Ojah grabbed three pillows and steered Ryan towards the plush rug in the room. He arranged the pillows on the rug and gestured for Ryan to get comfortable. Then he grabbed the receiver. \"What do you feel like eating this morning?\"\n\n\"Would it sound strange if I say I feel like pizza?\" Ryan moaned.\n\n\"This early morning?\" The Ojah turned his head to give Ryan an incredulous look.\n\n\"Yep. With milkshake.\" \n\nThe Ojah chuckled. \"What type of pizza and what flavour milkshake?\"\n\n\"I want their Fully Loaded pizza...family size please.\" Ryan switched on the huge LED TV on the wall. \"For the milkshake, I want coconut.\"\n\nThe Ojah called the restaurant and placed the order in a curt voice that made Ryan laugh as he gazed at his mate's naked butt. He was sure the staff would wonder what had crawled up Jeremy's arse and died. After placing the order and commanding that they bring it to the bedroom in the shortest possible time, he hung up and went back to where Ryan lay, relaxed against the pillows. Then he got on all fours beside Ryan and gave him a slow wink.\n\n\"Take care.\"\n\n\"Fuck, you're hot.\" Ryan grinned. \"Pun absolutely intended. Come here.\" He breathed.\n\nThen Ryan cupped the back of his mate's ruthless counterpart's head and leaned up to capture his mouth in an openmouthed kiss. The Ojah was shocked initially and didn't kiss Ryan back. But after some coaxing, he allowed himself to kiss Ryan back. It was gentle, slow and hot as fuck. When they parted, they were both breathing hard.\n\n\"I enjoyed chatting with you.\" Ryan breathed. \n\n\"Call and hang out with me sometime.\" The Ojah said with pleading eyes.\n\n\"You can count on it.\" Ryan grinned. \"We're definitely doing this again...soon.\"\n\n\"Just ask for me whenever you want. And I'll be with you.\" And with a final kiss and a hug, the red-eyed alpha shifted into the big, red wolf.\n\n'Hey...' Ryan said on their mind-link with a delighted grin.\n\n'Thought he'd never leave.' The wolf growled as he flopped down beside Ryan and began to lick at his face.\n\n'Aw Jeremy cut it out.' Ryan giggled as he cuddled deeper into the side of the huge wolf. It felt absolutely wonderful, snuggling against all that soft fur. He felt so pampered and cherished. \n\n'Are you okay?' The wolf asked after a while.\n\n'I'm scared.' Ryan's voice on their mind-link was barely above a whisper.\n\nThe alpha wolf drew him even closer to him. 'Don't be.' He said softly. 'I'm here. You'll be fine. We will take care of you. Protect you...just like he said. Don't worry about anything.'\n\nRyan nodded, knowing without a doubt that his mate would make sure that everything went well. He could also tell that the wolf knew how shaken he was by the revelation. Who wouldn't be? Ryan was sure that shock was definitely going to set in at some point. He'd been too worried about Jeremy's initial reaction to think about the implication of being pregnant. For now, he would just enjoy the attention from his mate's other forms and wait till Jeremy finally showed up. \n\n'I know you'll take care of me.' He said softly, running his fingers through the alpha wolf's fur. 'Is he okay?'\n\n'I put him to sleep. He's a wreck. A wuss if you ask me.'\n\n'Aw come on...' Ryan laughed softly.\n\n'Drunk on love, awe and joy. Terrible combination.'\n\nRyan chuckled. 'You forgot to mention shock.' He murmured. 'Too bad I can't shift and have fun with you.' He groaned.\n\n'Seeing you swell with our pup will be fun enough.' The wolf assured Ryan. 'At least for the next few months you can wear your ring with no fear of losing it as a result of shifting.' He chuckled.\n\nA shiver of apprehension slithered down Ryan's spine. 'How many months?' He gulped. \n\n'Five.'\n\n'Twenty weeks?' Ryan screeched, tipping his head back to stare at Jeremy's wolf with wide eyes. 'The gestation period for wolves is sixty-three days, Jeremy. I should know. I'm a professor of...'\n\n'Zoology, I know.' The wolf's amused chuckle brought a frown to Ryan's face. 'You're part human Ryan. And humans carry their young for forty weeks. You should be grateful you don't have to go that long. I can't wait to see you all swollen up and waddling about.'\n\n'Oh god, shut up.' Ryan groaned, burying his face against the wolf. 'I guess it's time to apply for that sabbatical. Damn, you smell divine.' He murmured softly, nuzzling against the soft fur. \n\n'You'll look absolutely stunning and enthralling.' He chuckled, his tongue coming out to lick at Ryan's face till he dissolved into a fit of giggles. \n\nThe alpha wolf gloried in his mate's obvious delight. Hearing those sounds of happiness from his mate completely melted him inside. He said a silent thanks to Luna for giving him the most amazing treasure. His mate! Ryan had changed his life. No one ever thought his Ojah could be subdued and made to feel. Not even him. But Ryan had accomplished the impossible. Oh, he was still a bloodthirsty monster. But with Ryan beside him, that Ojah would always be in check. The alpha vowed in his heart to show Ryan every second of their lives, just how much he cherished him.\n\nRyan's food was delivered in record time. The werewolf who brought it smiled admiringly when she saw Ryan cuddling against the huge alpha wolf. That was a sight one didn't get to see often, she thought as she placed the bed tray beside Ryan on the rug. And as if he'd gone without food for days, Ryan ate every bit of the large pizza, to his own surprised. He was however not surprised when he felt sleepy afterwards. After putting away that large yummy pizza and that tall glass of delicious, chilled, coconut milkshake, sleep was only to be expected. He snuggled into the wolf's warmth and allowed himself to drift off.\n\n***\n\nRyan's eyes went to the clock on the wall immediately his eyes opened. It was already past noon. He noticed immediately how different he felt. His senses were heightened...sharper. Although he was lying down, he felt energized. He felt as if he could do anything. For a moment he closed his eyes, allowing the energy to flow though him. Ryan couldn't help but wonder where all that vitality was coming from. When he opened his eyes again, he looked down to see what was causing the slight weight on his stomach. A smile lit up his face when his eyes met the beautiful blue ones of his mate. They were slightly reddened but the blue still stood out. Ryan didn't have to be a genius to know the cause of his mate's reddened eyes. Hell, he could feel the wetness on his stomach where Jeremy's head lay. He'd pushed Ryan's t-shirt up to enable him have contact with the flesh. He was no longer naked as he'd been in his Ojah state, earlier. He'd pulled on black sweats and a black t-shirt. Jeremy looked strikingly captivating in black, Ryan couldn't help but think. ",
        "\"Hey...\" Ryan reached out to touch Jeremy's head, running his hand over the short-cropped hair.\n\n\"I love you, Ryan.\" Jeremy said in a hoarse voice. \"I love you so much.\"\n\n\"Well, you should.\" Ryan murmured with a teasing smile. \"I'm giving you a baby.\"\n\nJeremy's eyes instantly welled up again. \"You're taking it so well. I thought you would be upset.\"\n\n\"Oh, I'll freak out later.\" Ryan gave an uneasy laugh. \"I have a lot of questions. There's so much I need to understand.\"\n\n\"Same here.\" Jeremy sighed. \"Let's hope the experts...\" he gave the word air quotes, \"or should I say the more experienced, would know what to do.\"\n\n\"They had better.\" Ryan murmured. \"For now, I'm okay thanks to Deloris and...you.\" He touched Jeremy's face, tracing his brow and his jaw with his fingertips. \"Are you happy?\" He asked in a small voice.\n\nJeremy gave a tremulous smile. \"Happy doesn't even begin to cover it.\" He grabbed Ryan's wandering fingers and kissed them. \"I don't know how to describe the feeling inside.\" He said softly. \"No words come close to how I feel.\"\n\n\"Give me the simplest description.\" Ryan whispered as the tension in his shoulders visibly eased. \"'Cause I really want to have an idea of what's going through that gorgeous body of yours.\" \n\n\"I'm in seventh heaven, on cloud nine, over the moon, walking on air, beside myself with joy... I feel blessed Ryan. I feel favoured. I feel as if I was born under a lucky star.\"\n\n\"Well, you are highly favoured.\" Ryan drawled. \"After all, you got me for a mate.\" He purred, making Jeremy laugh through his tears.\n\n\"I know I'm not the best person.\" Jeremy said shakily. \n\n\"To me, you are.\" Ryan said softly, wiping at Jeremy's eyes.\n\n\"You're my mate. You have to say that to make me feel good.\" Jeremy gave a sad smile. \"But we both know that I'm not the best person to have as a parent.\" He reached out to place a finger on Ryan's lips when he made to interrupt. \"Notwithstanding that fact, I promise you, Ryan; to instill in this child the appropriate values that will help him grow to become a better person than I am. Not only is our child going to be loved, he or she will be raised well.\" Jeremy spoke softly, almost as if he was talking to the life growing inside his mate. His hand gently and slowly rubbed Ryan's belly as he spoke. \"He will be taught to love...be generous with his affection. We will teach him to be considerate when dealing with others...he has to think about how others feel. We will teach him to be determined in all he does...he shouldn't be afraid to take on a challenge. We will encourage him to allow justice to rule in everything...he must know how to make amends. The importance of treating people fairly cannot be overemphasized. He will be taught to be honest in everything he does...he needs to always be truthful. Our child will not only become our pride and joy, or the pride of our pack, but he will also be the pride of every werewolf and warlock on this planet. I promise.\"\n\n\"He's a lucky child to have us as parents, Jeremy.\" Ryan didn't bother wiping at his own tears. He could see just how much his mate wanted that baby. \"He has the most amazing grandma, aunties and uncles to help raise him right. I didn't know you wanted a child.\" He added softly.\n\nJeremy shrugged. \"I'm an alpha. I grew up knowing I had to have an heir. When you came along, I banished that desire from my thoughts because I knew we couldn't... then you...\" He shook his head as he started tearing up again. \"I got the full package.\" Jeremy whispered as Ryan tenderly wiped at his wet eyes. \"You're the full package Ryan.\" \n\n\"Yeah, you're not the one going to be looked at strangely so...\" Ryan gave a mock scowl and then laughed softly. \"Right back at you, Gorgeous. You're my full package.\"\n\nJeremy huffed out a short laugh, filled with wonderment. \"I've always wanted to give mum a child...my child, to dote on. Losing Travis was...\" \n\n\"Travis!\" Ryan suddenly gasped as he shot up into a sitting position. \"Oh my god, it was him...\" \n\n\"Baby?\" Jeremy moved off Ryan to allow his suddenly agitated mate to stand.\n\n\"Now I remember where I saw him.\" Ryan was pacing like a mad person. \"Jeremy, your brother... He was the one who was throwing the fireballs...\"\n\n\"Calm down Ryan.\" Jeremy grabbed Ryan's hands and forced him to stop pacing. \"Now breathe. Breathe baby.\" He encouraged softly. \"Yes that's it... deep bre...\"\n\n\"Just listen to me Jeremy.\" Ryan breathed. \"Phillip's mate. He's your brother.\" \n\n\"Travis is dead, Ryan.\" Jeremy's voice was scarcely a whisper. He didn't know what was happening to Ryan. Maybe it was because of the pregnancy... \"Travis died sixteen years ago with my father. They were killed by hunt...\"\n\n\"Shut up and listen to me Jeremy.\" Ryan suddenly growled. \"Phillip's mate is the same person whose pictures are on the walls in the cave, who you called Travis.\" Ryan rasped. \"When I saw the pictures, I knew I'd seen him somewhere but I couldn't place him. And then you said he died at age five so I forgot about it. But it just clicked. I feel as if someone has turned up the volume of my senses. I don't know what caused it. My brain feels...sharper. I noticed that when I woke up not too long ago... Jeremy, are you okay?\" Ryan gasped when he took in Jeremy's suddenly pale face.\n\n\"Are you sure?\" The alpha asked gruffly. \n\n\"Positive.\"\n\n\"What do you say we cut this vacation short?\" Jeremy asked roughly, suddenly looking very much in control. \n\nGone was the sniveling, emotional alpha. In his place was the take-charge, confident, dangerous and commanding Jeremy that Ryan was used to. But inside Ryan was a thrill that just wouldn't go away. The fact that Jeremy felt comfortable enough around him to completely let his guard down and show that soft, vulnerable side of him, thrilled Ryan to no end. \n\n\"I'm ready to leave.\" A ghost of a smile curved Ryan's lips.\n\n\"Good. Come here.\" Jeremy drew Ryan into a fierce hug. \"Thank you. I'll make it up to you. And I can bet my left testicle that this heightened senses of yours is being caused by my child.\" He murmured in a voice filled with pride. \"Better get used to it mate. That's one powerful baby you're carrying in there.\"\n\n\"You would know, won't you?\" Ryan smirked. \"How are we going to find him?\" Ryan frowned. \"Travis.\"\n\nJeremy leaned down and kissed the worry lines on Ryan's forehead. \"We have the best weapon. His mother and brother. Deloris will use either mum's or my blood to locate Travis. Piece of cake.\"\n\n\"Are you saying you never tried to locate him when...\"\n\n\"They did but couldn't locate him so we assumed a wild animal had...\"\n\nRyan shook his head in amazement. \"He obviously blocked whatever locator spell you guys used. There are no words for Reynard Wyatt. And all these years, you've blamed hunters.\"\n\n\"I'm sorry.\" Jeremy grimaced, his face suffused with guilt. \n\n\"Hey, don't.\" Ryan said softly. \"I wasn't even thinking about that.\" And it was the truth. When he made that statement, he hadn't been thinking about how he'd been mistaken for a hunter and tortured by Jeremy. \"Now that the clan is no more, Travis can easily be located using yours or mum's blood. I can't wait to see the look on mum's face when we tell her.\"\n\n\"Me neither. I'm never going to forget this day. The day I got to know that not only am I having a baby, but my brother is alive.\" Jeremy looked overwhelmed. \n\n\"Like you said; blessed and highly favoured.\" Ryan grinned.\n\n\"You're the best thing that ever happened to me, baby.\" Jeremy's breath hitched with emotion. \n\n\"Right back at you.\" Ryan breathed, going up on his toes to press a kiss against Jeremy's mouth. \n\n\"I swear I couldn't love you more than I do right now.\" Jeremy whispered. \"And yet I know I will tomorrow.\" He rolled his eyes. That got him a laugh.\n\n\"Feeling is mutual, gorgeous.\" Ryan murmured in between kisses. \"You are my life. And I don't even want to think about what life would be like without you.\" He said, looking up at Jeremy with eyes brimming with reverence and love. \n\n\"Don't bother imagining because you're stuck with me.\" Jeremy growled and then proceeded to give his pregnant mate a heart-melting kiss which left both of them breathless. \"What do you say we go get Phillip's mate.\" He murmured against Ryan's kiss-swollen lips when the kiss ended.\n\n\"Let's.\" Ryan grinned.\n\nAnd as their aircraft sored into the sky an hour later, Jeremy reached out to interlace his fingers with Ryan's. Both the alpha and his mate were beside themselves with excitement. Ryan knew that his life was about to be altered drastically. After all, he'd never seen a man with a baby bump. But he knew that with the love and support of his amazing mate and doting family, everything would work out just fine. \n\nJeremy couldn't help but think about all that had happened to him since laying eyes on his mate for the first time. He'd been at his lowest at some points and at his highest, at others. He was definitely at his highest that particular moment. The feeling inside was so unbelievably exhilarating, it was euphoric. He knew that he owed everything to his beautiful, sexy, adorable mate. To love was nothing. To be loved was something. But to love and be loved, was everything. Jeremy Stanton didn't know what he did to deserve what he had. But he sure as hell had everything and he was grateful.\n\nBoth Ryan and Jeremy basked in the knowledge that together, they would overcome any obstacles they encountered in life. They were not merely a part of each other's lives. They WERE each other's lives. Without pause, without a doubt, in a heartbeat, they would choose each other over and over and over.\n\nTHE END!\n\n\"THE GREATEST HAPPINESS OF LIFE IS THE CONVICTION THAT WE ARE LOVED; LOVED FOR OURSELVES, OR RATHER, LOVED IN SPITE OF OURSELVES.\"\n\n~~Victor Hugo\n\nWatch out for Book 2 (Phillip & Troy's story and of course, Ryan's pregnancy). Thanks for reading.\n\nAdjoaq"
    ],
    "authorname": "adjoaq",
    "tags": [
        "hea",
        "ryan",
        "jeremy",
        "mpreg",
        "heat",
        "vacation",
        "island"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/savage-desire-ch-10"
}