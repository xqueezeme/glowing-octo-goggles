{
    "title": "I Know What I'm Doing Ch. 04",
    "pages": [
        "###########\n~Dark Dawn~\n########### \n\nI woke up with a headache. Daily. I didn't even have the energy to go running or surfing. Each morning it felt as if thick shards of glass were lodged in my skull. I was grateful, though. It was the perfect distraction from the heavy pain in my chest.\n\nHow had everything fallen apart so fast?\n\nA few weeks ago I'd faced my biggest epiphany ever when I opened my door to find Ethan smiling at me. I was a new man, different yet the same. Ethan had helped me uncover something deep and valuable within me; he'd shown me what fulfillment felt like. \n\nAnd now he was gone.\n\nI saw little of Carolynn and wasn't sure if that was by luck or design on her part. Either way I didn't care. Finding out she was pregnant would've made me the happiest man breathing... a year ago.\n\nI'd always known I wanted to be a father one day. But any conscious thought of children had been buried when the problems between Carolynn and I had started. I couldn't look her in the eyes without seeing the demon she truly was, slithering beneath her polished veneer. And now I had to face a future tied to her forever? \n\nThe part of me that wanted kids was the same part that wanted Ethan. It's the same part that's protective of my parents and the rest of my family. Carolynn had no place in that.\n\nBut our child did.\n\nCarolynn had every reason to gloat. She had me exactly where she wanted me and she knew that. There was no way I could ever turn my back on my own child and deny him or her a chance at the type of childhood I'd had. My child's happiness had to come first. \n\nSo Carolynn stayed. I went out for the day when she called Dan to help her unpack her stored things. I simply couldn't watch that. The only line I still drew was at allowing her into the master suite. I'd share parenting with her, but not my bed.\n\n#~#~#~#~#~#~#~#~#~#\n\n\"Eat something, Ethan.\"\n\nI remembered to take another bite every time Dan passed a gentle order my way. Halfway through my meal my mind switched off again and I didn't notice Peter taking my plate away. \n\nDan's instructions have gotten me through the days since... since. I'd been going from Dan's couch to the bathroom and back again. Peter fed me and Dan flicked through the tv channels when we all sat together in the evenings. I did nothing, said nothing, saw nothing.\n\nI could feel Dan and Peter's concern like a thick blanket around me. I knew my withdrawal had to be scaring them but still couldn't muster the energy to tell them I was fine. I'd spent my whole life cutting myself off from others as a defense mechanism. Going back to that place was like revisiting an old fear: repulsive but familiar.\n\nMy dark pit wasn't entirely the same, though. I'd ventured out and connected with more people than I'd ever allowed in before. I'd fallen in love. Creeping back into my cave and trying to pretend sunlight doesn't exist was proving impossible with the beach just outside my window.\n\n#~#~#~#~#~#~#~#~#~#~#~#~#~#~#\n\n~Aiden~\n\nI found Carolynn leafing through a baby magazine in the back garden. She was stretched out on a sun lounger in a one-piece swimsuit and a see-through kaftan. She looked like a model in a perfume ad, not a mother-to-be.\n\nI stood over her, scowling down at her flawless nails and waxed legs. \"Aren't you supposed to see a doctor for a check-up or something?\"\n\nShe pushed her oversized sunglasses up into her hair and leaned forward, \"Yes, tomorrow. Did you know that it's possible to find out the baby's sex after the first trimester? How exciting. What do you think? Would you like to know or would you prefer a surprise?\"\n\nI shrugged, \"Whatever you want is fine. I just wanted to let you know that I'll take you myself.\"\n\n\"Why?\"\n\n\"No matter how we feel about each other, our child will always be my first priority. So, what time is your appointment? I'll take you, to this one and every appointment after.\"\n\nShe squinted up at me a few seconds longer before leaning back again, \"No, I don't think so.\"\n\n\"Why the hell not?\"\n\nShe frowned back at me, \"Look at you, Aiden. You're walking around with so much resentment and pent-up anger and, for some reason, you're directing it all at me. I want you to be a part of our baby's life more than anything, but I cannot allow you to stress me out right now.\" She stood up, re-cinching the wide belt of her kaftan, \"I'm doing this to protect myself and my child. Until I feel I can trust you around me and the baby, I will not have you at these appointments.\"\n\nShe brushed past me, heading into the house. I simply stood there, trembling tensely and staring down at the pages of the forgotten magazine as they flapped in the breeze.\n\n*\n\nMelanie and Kyle phoned me about five times the next morning during their trip back to Plettenberg Bay. Each time they reported how much closer they were and what naughty jokes Gram-Gram was telling them to keep them occupied. \n\nThey arrived around lunchtime, laughing and tossing their bags about the foyer. My parents asked for iced tea over Melanie excitedly describing the elephants and rhino at the game park. Chris kept correcting her whenever her recollections bordered on the fantastical; while my granddad did his best to censor the jokes Gram was still telling Kyle.\n\nWithin minutes of their arrival, it struck me how quiet and lonely the house had been. There'd been no laughter or easy conversation in here for days. Most of all, the place felt cold without Ethan in it.\n\nI missed him.\n\nHis constant clacking on that laptop of his and the quiet conversations with advertisers; his sceptical questions about the food I was cooking; his long list of reasons why it wasn't the best time for him to attempt surfing. We'd spent enough time together for me to know it was nowhere near enough. I wanted him back in my house and my arms \u2013 but I also knew that he deserved a far better life than the mess I currently had to offer him.\n\nA year ago I would've been thrilled at the thought of a baby on the way. Now it felt like it was the one thing keeping me from being happy. I gave myself a mental shake, feeling guilty. Not the baby. Carolynn.\n\nShe chose that moment to come downstairs, instantly killing the happy mood.\n\n/Speak of the devil.../\n\nAll strands of conversation froze in mid air and dropped to the floor, shattering into surprise and confusion. Everybody was looking at me with questions in their eyes. Even the kids seemed surprised to see her.\n\n\"Kyle,\" Mike's radar was flashing code red, \"why don't you take your sister down to the guesthouse for lunch today?\"\n\n\"Why?\"\n\n\"Because my word is law in your universe.\"\n\n\"Can we sit in the restaurant and order from a waiter and everything?\" Melanie asked.\n\n\"Sure, why not.\"\n\n\"Yes!\" She started shoving her brother out the door, \"Let's go tell Rachel!\"\n\nOnce the door slammed behind them, I decided to dive straight into the muck. In the lounge I waited till everyone was seated and got straight to the news of the baby. I gave it to them without frills, aware that they could clearly see how unhappy I was with every word I shared.\n\n\"...and, for the time being, I've allowed Carolynn to move back into one of the guestrooms. Of course, that will just be until-\"\n\n\"What Aiden is trying to say, in his stuffy old way, is Christmas is a time for family to share love \u2013 and what better way of doing so, than by celebrating this precious gift we're about to receive? Isn't that so, darling?\" Beside me, Carolynn tried to take my hand, but quickly gave up when she noted my glare.\n\n\"Not even close,\" my distaste was rising to meet my anger.\n\nMy family, through our stilted announcement, remained frozen. They were all shocked and noticeably awkward. My dad and brother eventually murmured their congratulations, but my grandparents couldn't find much to say. Mike just gaped at Carolynn.\n\nI could see why. \n\nToday Carolynn had picked a tiny pink sundress and high-heeled sandals for the day. The outfit was more straps along the back than dress and that, along with the make-up she'd piled on, made her look anything but motherly.\n\nCarolynn was the only one in the room showing little unease. She sneered triumphantly but made damned sure to keep her distance from the dark tension rolling off me. When no one else had anything to add she mentioned her appointment then went looking for her designer bag.\n\nI followed her.\n\n\"You can't keep me out of this pregnancy, Carolynn.\"\n\nShe grabbed her bag in the kitchen and spun around, \"Is that what you think I want? There's nothing I want more than for us to be together, but you need to work through all this aggression of yours and show me that you as committed to this family as I am. It's the only way I'll be able to trust you with my heart and child.\"\n\nMy laugh was bitter, \"I need to earn your trust? You really are insane. And what more could I possibly do to show that I'll be here for my child? I've allowed you to move back in here, haven't I?\"\n\nShe reached out and touched her fingertips to my chest, \"It's a good start, darling, but nothing says 'committed' like a marriage proposal and that's what I want.\"\n\nI slapped her hand away sharply, \"Never.\"\n\n\"Come now, darling. I'm only thinking of our child's wellbeing. We need to provide a secure and loving home for our precious little gift. The sooner you start acting like a committed father, the sooner we can move on with our life together.\"\n\nShe slung her bag over her shoulder and walked out.\n\nI gripped the edge of the cooking island and hung my head.\n\n\"You not seriously reconsidering marrying her, are you?\" Mike came to stand beside me.\n\n\"Well, what do you suggest I do? Everything has changed.\"\n\n\"What about Ethan?\"\n\n\"What about him?\" I threw back.\n\n\"Aiden, you don't love Carolynn.\"\n\n\"I have a child to think of, Michaela!\"\n\nShe placed a hand on my back and stroked in slow circles.\n\n*\n\n~Ethan~\n\nI was focusing all my energy, silently willing my phone to ring. \n\nAiden hadn't once tried to contact me since I'd left his house two days ago and, quite frankly, I didn't blame him. It's a wonder that he hadn't tired sooner of my flightiness. Since rediscovering him I'd spent priceless time playing devil's advocate, uncovering and proclaiming reasons why we shouldn't be together. And now Carolynn had arrived with the one reason why he should be with her, a reason I had no way of beating.\n\nHaving said that, I still couldn't help missing him. I missed his arms around me and the way he'd do little things for me before I even realised I needed them done. I'd never had that before. And just as I was getting accustomed to the idea of deserving a love that wonderful, it was all taken from me.\n\nDan snuck up on me, \"Out with it.\"\n\nI jumped, \"What? Out with what?\"\n\n\"Anything,\" he replied. \"You need to talk and I'm here to listen. So start at the beginning and don't skip the juicy bits.\"\n\nI hadn't thought that I was ready to talk about it but I started with the easy parts and once they were out it was like floodgates had been opened. I told him everything, almost as surprised as he was by chapters of it. How was this my story?\n\nDan could have been a therapist, he took my crazy story that well. It was mainly the parts to do with Carolynn that made him raise his eyebrow with a look of disbelief. I answered the questions that I could and frowned at the ones that I couldn't. I reconfirmed my feelings for Aiden and tried to look stern when he kept asking me about our sexual encounters. I shrugged when he asked me about Aiden's feelings for me and again when he wanted to know what would happen next.\n\n\"And therein lies the problem,\" he announced.\n\n\"Huh?\"\n\n\"You two need to get back to basics. Sit down with him and talk through everything. You've never really done that and no progress can ever come of avoiding it. Things may look bloody complicated right now, but they can only get worse if you never find out how he feels or tell him what you need.\"\n\n\"Damn...\" I whispered.\n\nDan grinned on his way out, \"I know, right? And to think, I've always been this brilliant.\"\n\nMy phone rang at the very moment I cursed it and decided to unearth my yoga mat. I froze and stared at it. Peter stuck his head through the door to find me wide-eyed. He looked at me then the ringing phone before shrugging and returning to the kitchen. I grabbed it with clammy hands.\n\nThe name flashing on the screen was not the one I'd hoped for. \"Sam, I've been meaning to call you.\"\n\n\"Right,\" came my friend's snippy response. \"Well, try harder from now on, sugar. There's a psycho baboon on the loose somewhere and I like knowing he hasn't gotten his hands on you yet.\"\n\n\"Sorry, Sam.\"\n\n\"You sound funny.\"\n\n\"Thanks for the heads-up,\" I flopped back down onto the couch. \"I'll be sure to sign up for amateur night at the first comedy club I find.\"\n\nA heavy sigh, \"You know what I mean.\"\n\n\"I do. Sorry.\"\n\n\"Are you sure you're still doing okay out there, sugar? I worry about you. No man is worth all this drama, no matter how hot he is. And no straight man is worth any drama.\"\n\n\"He's not straight.\"\n\n\"What?!\"\n\nIt's always the shortest statements that stir up the most chaos, the ones difficult to whisper even in the dark. Tiny bombs like: 'I'm gay'... 'I love you'... 'I'm pregnant'...\n\n\"He's not straight,\" I repeated, noting how much stronger my voice sounded the second time. Trust me to start believing in Aiden and me when it was too late to do anything about it. \"And he's not the reason I'm upset. No, I lie; he is part of the reason. But it's mostly Mark this time.\"\n\nI shut the door on talking about Aiden and... Instead I told Sam about Mark's latest insanity. A ripple of anger flowed through me at the thought of pain he'd caused me in the years I'd known him - and the pain he'd narrowly avoided causing others with his latest stunt. I was startled by Sam's reaction.\n\n\"Shit.\" Sam almost never cursed. \"I'd been trying to reach you because I thought I had a way of helping you but, from the sound of things, you're definitely better off where you are.\"\n\n\"Help me how?\" I asked.\n\nHe mentioned a professor of ours that we'd remained in touch with since varsity. He was going on sabbatical and looking for someone to sign a six-month lease on his house in Rosebank. I hadn't seriously weighed up returning to Cape Town, but knowing I'd have a place to go to made me feel positive. Once Mark was arrested I'd need a place to stay until I knew where I'd be moving. There was no way I would ever feel at home in my old place again.\n\n\"Stay where you are for as long as it takes,\" Sam ordered, as if reading me. \"Going back to the city right now would just be tempting fate.\"\n\n\"Weren't you the one trying to get me away from Aiden at all costs?\"\n\n\"I'd rather see you in his clutches than that maniac's any day, sugar. Or with me. What are the chances of you coming up to spend Christmas with me?\"\n\n\"So, you think Aiden's hot, huh?\" I teased with a smile, purposefully avoiding his question.\n\nAnother sigh, \"Anyone with a functioning eyeball or two would come to that conclusion. Happy? Now, how about Christmas together?\"\n\n\"I don't know, maybe. I'll have to get back to you.\"\n\nBy the time we hung up, I felt a little more myself. I was hurting but I wasn't out for the count.\n\n\"See, I told you he still remembers how to work a cell phone,\" Dan announced from behind me. He and Peter were watching me carefully. \"He answered it and had an entire conversation and everything.\"\n\nI smiled. I had friends, more than I'd ever had and that alone was a reason to kick back when Life tries to trip me up.\n\nDan grinned back, \"We're going out.\"\n\n\"Okay, have fun.\"\n\n\"No, bright spark, we're taking You out. You need to have a little fun.\"\n\nI was shaking my head when I looked up to see Peter nodding, \"You need some sun, Ethan. You're starting to look as bad as Dan's peacock.\"\n\nDan swatted him, \"Hey!\"\n\n*\n\nWe made the mistake of leaving the choice of outdoor activity up to Peter. That is how we found ourselves trudging through the park on our way to the putt-putt course. Dan was trying to talk Peter out of his choice but he was having none of it.\n\nI was watching the two of them argue - which was how I didn't see Melanie until she collided with me, wrapping skinny arms around my waist. Kyle was with her and he hugged me too, albeit with slightly more control.\n\n\"You're here!\" Melanie squealed. \"I asked my uncle if you were coming to our picnic and he said you couldn't make it. But I hoped you would anyway. This is the best surprise!\"\n\nVery true. I'd spent so little time with her when we'd met the last thing I expected was to be greeted like I was Santa in the flesh. Kyle was eying Peter, Dan and I and had clearly figured out I'd had no intention of coming to their picnic.\n\nThen Dan opened his big mouth, \"Yeah, Ethan, great surprise. Now go enjoy the picnic and I'll give you a call later.\"\n\nI gaped at him as he walked away, pulling a grinning Peter along behind him.\n\nMelanie grabbed my hand, directing me towards the large trees at the far end of the park and telling me muddled versions of jokes no seven-year-old should know. \n\n\"You're better than her, you know,\" Kyle said solemnly from my other side.\n\n\"Better than whom?\"\n\nHe looked up patiently, \"Carolynn. When she says she loves my uncle she looks like she's putting on a show. You don't even have to say it and I already know you love him more.\"\n\nI froze in my tracks, \"No. No, uh... Huh? How do you know that I uh..?\"\n\nHe huffed, \"It's so obvious, dude. Man, it's gross.\"\n\nAwesome. I'd stumbled into a conversation with an anti-gay eleven-year-old, \"Gross, huh?\"\n\n\"Totally. You're two are as bad as my parents, always looking at each other funny and trying to get close so you can touch. Man, I'm never falling in love.\"\n\nMelanie tugged at my hand and we resumed our walk. I aimed for confident denial but my laugh came out shaky, \"No, we don't.\"\n\nHe looked up at me like arguing with me would be no more than a waste of his energy, \"You should see the house now; it's like one giant booby trap. Everywhere I go I find someone looking at someone else with googly eyes, even Gram-Gram and Pops. The same way my uncle looks at you. I had no clue he's gay, hey. That was hectic.\" \n\nMelanie bounced in front of us, \"Which uncle? Uncle Aiden? You and uncle Aiden are GAY?\"\n\nShit.\n\nKyle, showing considerably less concern, continued kicking pebbles as he walked, \"You knew about it, Melon. That's what mom and dad were going on and on about when they had that talk with us.\"\n\n\"Uh uh,\" she denied, wagging a finger with a Goofy bandaid on it at him, \"Mommy said all love is beautiful and... and stuff. No one said Ethan and uncle Aiden are-\"\n\nMy heart was going to explode.\n\n\"You don't even know what 'gay' means, Melon.\" Kyle cut in. \n\n\"Yes, I do. My friend, Zoe, from school has two mommies \u2013 Mrs and Mrs Louw!\" she giggled. \"And there are two other kids who each have two daddies. They're gay! Is that what everyone was talking about in the study? You said you'd tell me if I didn't tell Mommy you were listening at the door.\"\n\nKyle looked away, \"I wasn't spying.\"\n\n\"Oh, yes you were! So that's what Daddy was going on about when he was jumbling up his words during our talk? Why didn't he just say so? All that stuff about our uncle is still our uncle was silly. Of course he's our uncle! Are you going to be like my new uncle, Ethan?\"\n\n\"Huh?\"\n\nI spotted Aiden and his family in the shade of some of the larger trees. The conversation would be over soon, thank goodness.\n\n\"Are you going to marry my uncle Aiden?\"\n\nShe said it just as we reached the others and they all gawked at us. Double shit.\n\n\"Hi,\" I lifted a hand in awkward greeting.\n\n\"Hey,\" they responded in unison, waving back.\n\nChris, the master of distraction, gave the kids money and set them loose. They vanished in a puff of dust and reappeared seconds later at a nearby snack stand. Aiden shifted so I could sit beside him. He looked at me like he hadn't seen me in years, making me look away self-consciously. No wonder Kyle had figured us out so quickly. ",
        "Mike's face was lit up by her smile and Greg looked like he knew a secret he couldn't wait to share. I didn't understand what was going on with them so I trained my eyes on Aiden's grandparents taking a walk down by the pond.\n\n\"So, Ethan, Aiden tells me you live in Cape Town,\" Greg said in a way that told me he wanted to know more.\n\nSo I told him about my family, skipping the nasty bits about my father. I spoke about my studies at varsity and the website. Gwen's eyes went huge at that. I don't know why she was so impressed; having money hadn't solved many of my problems. It had only helped ensure I could take care of myself once my last family member turned his back on me.\n\nAiden's family asked me many questions about myself and I wondered at the unexpected attention but I shared nonetheless. Then Gwen insisted on divulging stories from her sons' childhood, ignoring their protests. I ended up enjoying the time I spent with all of them but did find myself occasionally wondering what had become of Carolynn. Did Aiden's family know about the baby? And why weren't they acknowledging his fianc\u00e9e's return?\n\nAiden's arm kept brushing against mine, sending an unsettling heat through me. He said little but watched me intensely. Looking directly at him was almost too much to take, so I fidgeted and inhaled sharply every time we touched. It got to the point where holding up my end of the conversation with Gwen became near impossible.\n\nThe breeze suddenly switched direction and whipped my hair into my eyes. Aiden brushed it back before I could react. I froze, my eyes immediately flitting to his parents. Gwen was staring at us. When she realised I was looking back at her, she smiled and offered me something to drink. Greg didn't blow up. Instead he grinned at us before strolling down to the pond to call his parents up for lunch. When they all returned, Karin sat down next to her daughter-in-law and, again, I marveled at how alike they looked.\n\n\"It's just in the way they look, you know,\" Shaun said beside me. \"They're personalities are as different as night and day. It's amazing that they get along so well.\"\n\nI was surprised that he'd read my mind so easily and he smiled at my expression, \"We lost our own daughter when she was just seventeen \u2013 Natasha. Gaining Gwen a few years later was like a second chance. Another daughter. We might not know a lot and be too old to learn much more, but one thing I'm certain of is that joy was made to be grabbed with both hands.\"\n\nHe didn't say much after that, but the little he had shared made me really like him and set me at ease with the rest of his family. The Montgomerys were never hesitant when it came to sharing love. I stifled the silent wish for them to be my family.\n\nGwen unpacked the food while Greg set off one more time to fetch the kids. When Mike asked me what I'd like for lunch, Aiden took the empty plate from her and loaded it with food before handing it to me and then getting one for himself. I focused on my potato salad to avoid Mike's knowing smugness.\n\nLunch passed in an energised blur. I'd never known family life could be like this, with all the laughing and hugging and running around. My home had been much quieter, even when my mother had still been alive. It made me envy all the fun and attention Aiden must have gotten growing up. \n\nAfter lunch Kyle called me join him in tossing a Frisbee along with his father and grandparents. I think Melanie joined the game, but couldn't be sure since she spent as much time chasing butterflies as she did the Frisbee. Gwen and Greg soon blew me away with their agility. It wasn't the most taxing match, yet I still managed to embarrass myself somehow. Kyle and his dad laughed good-naturedly at my hopeless fumbling. I gave it twenty minute before admitting defeat and slinking back to Aiden and Mike. They didn't notice my approach, so engrossed were they in their discussion.\n\n\"Why won't you let this go?\" Aiden hissed at his sister-in-law.\n\n\"Because you're pushing him away and I can see that it's killing you.\"\n\n\"You make it sound like keeping him is an option, Michaela.\"\n\n\"It is if you make it one. You won't find this feeling with anyone else, bro. Be sure that you make the right decision for You; forever is a long time to carry regret.\"\n\n\"I know. That is why I can never let anything - or anyone - take precedence over my child. I could never live with being anything less than the best father I can be.\"\n\nI cleared my throat behind them, \"I'll just... Thanks for having me over; and tell the kids I said bye.\"\n\nAiden's head dropped when he realised I'd heard every word he'd said. I could see him trying to find the words \u2013 to make me stay, or feel better, I don't know \u2013 so I walked away before he could say anything. I was in the way; I'd gathered that much from what I'd heard him telling Mike. There was nothing else I needed to hear.\n\n\"Ethan!\" \n\nI was thankful that it was Michaela's voice and not Aiden's. I couldn't trust myself not to stop if he asked me to. Moments later I allowed myself to wordlessly admit that I wished it had been his voice instead.\n\n*\n\n~Aiden~\n\nI was glaring at the decorated tree that was mocking me from the corner of my living room. Two days till Christmas and I felt like crap.\n\n\"That wall would look incredible with a big mirror on it,\" my granddad was beside me pointing at the wall next to the fireplace.\n\nI frowned, \"How big exactly?\"\n\nHe paused thoughtfully, \"You're right. Medium-sized ones would be better; nine of them should cover that area nicely. And a few more for the other walls would create a sense of flow.\"\n\n\"No, Gramps.\"\n\n\"I'm telling you it'll make this room look bigger.\"\n\n\"This room is enormous, Gramps. The mirrors would do no more than turn it into an inverted disco ball.\"\n\nHe eyed me sharply, dropping his tone a notch, \"What you waiting around for? Why haven't you gone to get him yet?\"\n\nI felt lightning stab through my chest, \"What are you talking about?\"\n\nHe shook his head, \"Don't play dumb with me, boy. Blind bats could see what's going on here. All the happiness you've ever wanted is yours for the taking and you're wasting time here with me. You've had it too easy, boy. Your whole life, things always just fell into place for you. So you don't know how to push back now that you need to.\"\n\nThat irritated me, \"I would hardly call battling my way through a university course I hated easy.\"\n\n\"Architecture led you to putting this place together and I remember seeing you looking happier than Kyle on chocolate when you first opened those doors for business.\"\n\n\"Well, what about Carolynn?\" I ground out. \"She's putting me through hell.\"\n\nHe was unfazed, \"No, she's not. She's carrying your child. She can't force you to do anything else, certainly not give up that young man of yours.\"\n\n\"You just don't understand what it's like...\"\n\nHis eyes blazed into mine, as green and determined as I'd ever seen them, \"Oh, I understand. I understand what it's like to survive a war, financial ruin and the loss of a child. I understand what it's like to wake up in the middle of the night with a boulder of fear on your chest. I also understand part of being a man means digging in for that last reserve of strength for as long as there's anything worth fighting for. Anything.\" He gripped my shoulder, \"And there's always something worth fighting for, boy.\"\n\nI stared back. This was the last topic I would ever have expected my grandfather to be advising me on. Was he right? Was I giving up too easily? \n\nHow much consideration had I given to what this must be doing to Ethan? He'd tolerated my indecisiveness, letting me take what I wanted when I wanted it, without once complaining about what it had to have been costing him emotionally. My grandfather was right. I'd been selfish and had buckled at the first real obstacle that had come my way. And I was only seeing that now.\n\nI shook my head wearily, \"I think I might be too late, though, Gramps.\"\n\nHe gave me a long look before simply turning back to studying the living room, \"What do you think of an indoor fountain then, if you hate the idea of the mirrors so much?\"\n\n*\n\n\"Mmm, now rub a little lower.\"\n\nI poured more of the oil into my palm and moved down to Carolynn's lower stomach muscles. She was lying on a towel on her bed, wearing little more than skimpy pyjamas with the top pulled up. She purred a little louder the second time then cracked an eye open. \n\nI met her gaze detachedly, \"Are we done yet? What I have to say to you is important.\"\n\nHer smile wilted, \"We can talk right now, darling. You don't have to stop. I'm told the vitamin E in the oil will help prevent stretchmarks once my belly starts growing.\"\n\n\"And when will that be? You're still looking exactly the same.\"\n\n\"Oh, I don't know. Some women show early on and others barely form much of a bump in the whole nine months. We'll just have to wait and see.\"\n\nMy hands slowed, \"And how long until the baby starts moving?\"\n\n\"I don't know, Aiden,\" she snapped then quickly calmed herself. \"This is what you wanted to talk to me about? Baby's development, A to Z?\"\n\n\"No,\" I answered calmly. \"I've just been doing some thinking and have made a couple decisions.\"\n\n\"Like?\"\n\n\"You were right about me not stressing you out and needing to be committed to our child. So I want you to know I'll be working a little harder on that.\"\n\nShe relaxed deeper into the pillows, glowing with pleasure, \"Really? I'm so happy to hear that you're finally seeing sense. I knew you'd come around once I showed you how happy we could be.\"\n\nMy hands stilled, \"There's one more thing.\"\n\nCarolynn groaned, \"Don't stop, darling, this is heaven...\"\n\nI removed my hands completely, \"Then I'll be happy to book a massage therapist for you whenever you need one.\"\n\nHer eyes darkened, \"It's your touch I miss. It's been so long since you've touched me at all.\"\n\n\"And it's about to get longer still \u2013 make that never. My second decision is that I'm going to ask Ethan to move back in. And I want you out.\"\n\nShe shot into an upright position at that, \"What?! Why?\"\n\n\"I want to be with him, I always have. Of course, we'll need to work something out first. I'd be happy to find you a place to stay, somewhere nearby so I can still take care of you until our baby is born. And we'll need to discuss a shared custody plan as soon as possible so that-\"\n\n\"Are you insane?!?\" she shrieked. \"Are you completely out of your mind?!\"\n\nI held her by her arms to still her, \"Calm yourself, Carolynn. You knew how I felt-\"\n\n\"What I know is that you love me! Me, Aiden, it has always been me!\"\n\n\"No,\" I told her. \"Ethan-\"\n\nShe pulled herself free, \"Don't you say his name to me. So you think I'm just going to let you start a cosy life your little fairy princess and then what? I give birth and just hand over our child to you two? OUR child?!\"\n\nFury was rising within me and I stood up so I could put some distance between us, \"I was hoping you'd want the best for everyone involved, damn it.\"\n\n\"The best for you and your lover you mean?\" She sneered, \"And what happens when you tire of this novelty? What are you going to experiment with next? I'm supposed to welcome each new conquest you invite to your bed, is that it? I'm supposed to allow countless strangers to march in and out of my child's life?\"\n\n\"There won't be anyone else after Ethan!\" I roared back. \"I have already wasted five fucking years denying my feelings - and that is going to stop Right Now! I will not let him go! So I expect you to quit the bloody whining and help me plan an acceptable arrangement before I give in to the temptation to wring your neck \u2013 Gods!!\"\n\nCarolynn was pressed back against her pillows, eying me fearfully. I was panting heavily, glaring at her with my fists clenched. I forced the red haze to recede to that I could speak calmly again, \"The stupidest choice I made was deciding to do things your way. You want more than I could ever give you and it was wrong of me to let you think otherwise. What you want from me isn't mine to give; I gave myself to someone else a long time ago. Ethan. From now on, it's Ethan and my child in equal measures. I will fight for them, without question and without restraint. So I'd advise you to think carefully before you threaten my relationship with either one again. Understood?\"\n\nShe nodded quickly. I assessed her a moment longer before nodding back and leaving the room.\n\n*\n\nThat afternoon, Dan was standing in my foyer smiling at me.\n\n\"We need to talk,\" he stated. \n\nThose words will be the death of me.\n\n\"In private,\" he added when he noticed me casting a glance towards the kitchen where Carolynn stood studying the covers of four different birth videos. She'd come downstairs around lunch time. After a cautious smile my way she'd gone about her business as if our earlier explosion hadn't happened.\n\n\"Privately?\" I grumbled.\n\nMy niece and nephew were in the lounge, working on a large puzzle and the rest of my family were teeming around upstairs.\n\n\"Let's go down to my office,\" I offered.\n\nI grimly noted the bounce in his step as we headed to the Montgomery. Anyone else would be sceptical as to how serious Dan's news was, judging by his carefree behaviour. His head was held high and his raised eyebrow made him look like he was constantly considering mischief. But I'd known him for a long time and well enough to hear him out. We entered my office in the Montgomery and I shut the door behind me.\n\nHe barely gave me enough time to reach my chair before asking, \"What are you feelings for Ethan?\"\n\n\"Excuse me?\"\n\n\"Ethan. Do you love him?\"\n\nI schooled my features so he wouldn't know how my heart raced, \"I don't see how that's anyone's business but mine and Ethan's.\"\n\nHe wasn't shaken, \"Great theory, boss. I believed it myself until today, until the pain you two are in left me with some serious doubts. Now, how do you feel about Ethan?\"\n\n\"I don't know.\"\n\n\"Sure you do.\"\n\nI stood immediately, annoyance taking hold, \"What the hell do you know about how I feel?\"\n\nHe leaned back in his chair, calmly watching me, \"I realised I was gay after years of not seeing it, just like you. I had to come out to everyone I love, just like you. I also had to recognise the man I'd fallen in love with; offer him my heart; and hope for the best,\" his eyes narrowed at me. \"Just like you.\"\n\nI didn't know what to say to him.\n\nHis slight smile reappeared, more sympathetic this time, \"I was luckier than you, though. I didn't have to do it all at the same time the way you are. You do know the way you feel is pretty obvious, right? Not saying it doesn't make it any less real.\"\n\nAh hell. I rubbed my eyes, \"I need to see him, Dan. Can I come over to your place to talk to him?\"\n\n\"You'll have to ask Ethan that,\" he answered softly, \"once we're done talking here.\"\n\nI dropped back into my chair, \"What more could there be?\" \n\n\"A few weeks ago I was up at the house, packing some of Carolynn's things.\"\n\n\"All of Carolynn's things,\" I stressed, nodding. \"I remember.\"\n\nHe straightened in his seat, \"Well, while I was busy, I came across a stack of mail. Some of it was Carolynn's, the rest was some promotional junk addressed to the Montgomery. I sorted through it.\"\n\n\"And?\"\n\nHe pressed his lips together before continuing with caution, \"Most of Carolynn's stuff was opened receipts, mainly from shopping trips in the city. At the time I just bundled them together and locked them in the general office down here, in case she wanted them. But I recently found out something that made me think one of those receipts would interest you very much. So I fetched it this afternoon.\"\n\nHe stood to pull a piece of paper out of his back pocket and handed it to me. I studied it with a confused scowl, scanning over the details. \n\nNothing popped out at me so I looked up questioningly, \"I don't get it. She went to the pharmacy and bought three Nordettes, so what?\"\n\n\"That's a three-month supply of Nordette, actually, and that receipt is dated almost three months ago, meaning she hasn't run out yet,\" Dan replied. He noticed my silence, \"I suppose it's no surprise that the product isn't familiar. The only reason I recognised the name is because Pete's sister won't shut up about how it's the only contraceptive that hasn't made her gain weight or break out in acne.\"\n\nMy heart thudded. My brain froze but my heart was in frenzy, \"Contraceptive?\"\n\nDan nodded, \"So, you understand my confusion when Ethan told me that Carolynn is-\"\n\n\"She's pregnant,\" I shook my head. \"Carolynn is... She told me so... right before she moved back into my bloody house.\"\n\n\"You've spoken to her doctor?\" he asked. \"Or been for that scan-thing?\"\n\nShaking my head didn't make my brain catch up any faster, \"She didn't want me at the ultrasound appointment. She said... No. No, this can't be true.\"\n\nI flipped through the directory on my desk before picking up the phone and dialing.\n\nIt only rang twice, \"Doctor Carlton's office, good day.\" \n\nFive minutes later my hands were shaking so much I couldn't replace the receiver. Dan took it from me and hung up, \"Boss?\"\n\n\"I'm going to tear her throat out!\"\n\nI was out the Montgomery and racing through the enclosed garden before Dan had much time to grasp my goal. A fucking inferno pulsed in my stomach, fueling the murderous intent in my heart.\n\nI banged the front door open and headed straight for the kitchen, nearly knocking Mike over. I don't know what I looked like but judging by the shock on my sister-in-law's face I'd say brutal would be a good guess.\n\n\"Where is she?! WHERE IS SHE?!?!\"\n\n\"Who?\"\n\n\"Where the fuck is that heartless BITCH?!\" I went to check the verandah.\n\nMy mother appeared, her face matching Mike's. Mike grabbed her hands to get her attention, \"Get the ki- Mom! Get the kids and take them down to the guesthouse. I'll take care of him. Send Dad in here and go. Now!\"\n\nThe backyard was deserted so I turned back inside. The front door shut behind my mom and the kids; and just in too time because I stampeded through to the living and dining rooms next. \n\n\"Aiden, wait!\" Mike grabbed me from behind but I pushed on, barely feeling her, \"Stop! Aiden, what's going on?! Chris! Greg!\"\n\nMy father and brother came rushing down the stairs but, unfortunately for them, Carolynn was ahead of them.\n\n\"YOU!!\" I didn't get to do much more than point at her before the two men stormed forward and grabbed a firm hold of me. Mike let go then, looking a complete wreck.\n\nCarolynn took a step back, then another, \"Darling, what are you-\"\n\n\"You lying snake! How long did you think you could hide this from me?\"\n\n\"I don't- I don't know what you're-\"\n\n\"Don't even TRY that one!!\"\n\nHer face paled in the same moment her back connected with the wall, trapping her, \"Aiden, wait, just wait... Don't you see? This was for us.\"\n\n\"There is no US! When I get my hands on you...\" I lunged forward, fighting to break free, but my family held me resolutely, \"There's no us-\"\n\n\"Aiden, son, you have to-\"\n\n\"-and there's no baby! There's no baby, is there?\" I felt my brother and father halt, still gripping me, \"No baby, Carolynn! At least, according to Dr Carlton who, not only gave you a contraceptive prescription a few months ago, but also gave you a new one after your checkup THIS FUCKING WEEK!!\"\n\n\"He had no right... that's private information!\"\n\n\"I'm going to snap her neck,\" I snarled but, again, my family restrained me.\n\n\"Aiden, how can you understand if you're not thinking clearly?\" Carolynn appeared to be gathering herself, \"It was for us, for you. That... man was nothing more than a distraction and I needed you to concentrate on our relationship.\"\n\n\"You made me lose everything,\" the realisation weighed me down, sapping my strength. \"You stole it away before I ever really had it.\"",
        "\"No, darling,\" she had the gall to smile. \"I was simply showing you everything you could have with me, everything he could never give you. I know I shouldn't have hurt you like that, but it was the only way to get you to focus on where you need to be. I lied, but all is not lost. We can have a real baby together any time we want. Ethan could never have made you as happy as I can.\"\n\n\"You've seen what your return has done to Aiden and you thought that was happiness?\" Mike asked from beside me.\n\nCarolynn's eyes stayed locked on mine, \"I needed a chance to make you love me again. You loved me before, so why not again?\"\n\n\"That's just it,\" I shot back. \"I never loved you. What we had was... convenient - until you destroyed it. But Ethan... I've never felt that way for you.\"\n\n\"You don't love him.\"\n\nHer calm statement was the final offense. I wrenched free, pushing past my brother and rushing forward, but when I reached her I couldn't bring myself to touch her. I knew I'd break her in half. Instead I swiveled around and grabbed a small sculpture off a side table, throwing it with all my might. My grandparents must've been standing halfway up the stairs all along because I heard Gram let out a short scream when the sculpture crashed through a window.\n\nI faced Carolynn again, struggling to control my breathing, \"Out. I want you out - IMMEDIATELY. Right now! And I'm getting rid of EVERYTHING you leave behind.\"\n\nShe was shaking her head, \"You can't turn me away; you can't reject me. Do you have any idea how many men would kill for the love I've given you? Besides, you don't love that man. It's me; it has always been me. It's always-\"\n\n\"You stupid, little...\" Michaela strode forward with determination. All her weight was behind her fist when connected it with Carolynn's face, \"FUCK!\"\n\nCarolynn crumpled but Michaela continued ranting, \"How did no one ever tell me how much that HURTS?! Oh thunder on a stick, my hand-\"\n\nChris pulled her to him, \"You never struck us as the brawling type, sweetheart. How're you feeling?\"\n\nI reached for her too, stunned, \"How's that hand?\"\n\n\"Fantastic and fantastic,\" she half-grinned half-grimaced at both of us. She looked down at Carolynn, \"Damn, I guess I'll have to wait for her to come around before I can finish giving her a piece of my mind.\"\n\nI couldn't help my grim smile, \"I think you've been very clear, sis.\"\n\nHer grey eyes flicked up to mine earnestly, \"Aiden, you have to go find Ethan. Go.\"\n\nI looked at my father, \"Dad, I-\"\n\nHe gave me a push, \"She's right, son. Go!\"\n\n*\n\nDan's car was small but fast.\n\nThe moment we got to his place, I beat him to his own door and banged my fist against it. Dan unlocked it before Ethan had a chance to respond and I pushed in. The kitchen and living area were empty. \n\nDan rushed to the bedroom, \"Ethan?\" then the bathroom, \"Ethan??\" \n\nHe came out, shaking his head.\n\nI released a frustrated grunt, \"Where could he have gone?\"\n\nDan shrugged, \"I don't know. He never went out alone the entire time he stayed here.\"\n\nI pulled out my cell to call him, feeling excitement bubbling up under the frustration. I was so close. A moment later I was disappointed, \"Voicemail; it didn't even ring. He's turned his phone off.\"\n\n\"Boss,\" Dan called me to the kitchen.\n\nI joined him in reading the note stuck to the fridge:\n\n'Please don't be angry with me for leaving this way, I knew you wouldn't allow it otherwise. I need to take control of my life and I need the space to learn how to do that. I also need to figure out how to stop loving him. I'll be in touch. \n\nThanks for everything, E.'\n\nI kept rereading one sentence over and over again, \"He told you he loves me?\"\n\n\"You knew,\" Dan said.\n\n\"I didn't.\"\n\n\"Sure you did - you were just too freaked out to recognise it. Same with him, no doubt.\"\n\nI shoved the note in my pocket, \"I have to find him. Any ideas?\"\n\nDan shook his head, \"He doesn't want to be found. You have to let this go.\"\n\n\"No. Fucking. Way.\"\n\n###########\n\n~Dark Days~\n\n###########\n\nTurns out Christmas without the tinsel and celebrations, doesn't feel just like any other day. It's lonelier if you don't have anyone by your side. It's so quiet without the laughter; heavier without the love and gifts \u2013 and gloomy as hell, even with the sun blazing. It turns out Christmas is impossible to hide from, no matter how far you run.\n\nI'd told Aiden that I would never run from him again; I'd given him my word. And broken it. My father must've been right when he'd said people like me never got joy because we didn't deserve it. I was constantly running from mine.\n\nI'd left home when my father had forced me to choose between running from family and running from myself. I'd avoided many potential friendships, believing I had little offer because, after my mother's death, no one other than Sam had told me any different. And now Mark was painting me a coward. Not only was I running from him, but he had me running from the only man I'd ever loved.\n\nThere was that anger again. It surprised me every time it shot through me. I was angry at how much I'd allowed to slip through my fingers while I hid in fear. Time, peace of mind... love.\n\nI couldn't get the years wasted on self-doubt back, but I could deal with Mark. I could make sure he never took happiness or love from me ever again.\n\n#~#~#~#~#~#~#~#~#~#\n\nI wandered through the house for days on end, knowing it would never feel right without him in it. I looked around at my family as we sat down for Christmas lunch and couldn't shake how incomplete the picture looked.\n\nFive days later they gave up on trying to talk me into joining them and loaded their packed bags into two cars and left. I was a little glad to see them go. The exhausted desperation I carried was refusing to be disguised as equilibrium and I could see the worry in my mother's eyes. \n\nThe house was quiet without them, but it was empty without Ethan.\n\nI made a cup of coffee the way he liked it and spent the first hour alone on the back verandah watching it go cold. I emptied it impatiently and went upstairs. Instead of the master suite, I went into his room. It was a stupid idea that I further compounded by drawing back the covers on the bed and climbing into it. I closed my eyes to the sunset outside because it was the colour of lava and strawberries.\n\nThe next day was New Year's Eve. I dressed early and grabbed my surfboard before heading down to the private beach. The waves were decent enough and I spent the whole day out there.\n\nLoving Ethan was turning out to be the easiest and hardest thing I'd ever done. Easy because the feeling grew, no matter what I did. I'd loved him when I'd first seen him; and needed him more as I got to know him. But the hardest part still lay ahead: I had to make him believe in my feelings for him. I'd let him suffer under my qualms and compliance to Carolynn's games for so long, he'd probably slam the door in my face the next time he saw me.\n\nI wouldn't blame him. But I wouldn't let him keep it shut either.\n\n#~#~#~#~#~#~#~#~#~#~#~#~#~#~#\n\n~Ethan~\n\nAfter the way circumstances had come together to keep me in Plett for an entire month, I was rather depressed by how easy it had been to get back to the city. Three phone calls, in fact. The first one to the bus station to book a seat to Cape Town; the second to get a cab to fetch me from Dan's; and the final one got my former professor's housekeeper to meet me at the house to drop off the key. It occurred to me that I could've saved myself a world of trouble by making those phone calls the first day Aiden had opened his door to me. Or the day he'd kissed me. Or...\n\nThe house was in a quiet area and had a lovely view. I knew that because Professor Ngubeni had told me so, not from any explorations of my own. \n\nI kept my phone off for the most part, but made sure to check my messages each day. A few days after Christmas I turned it on again. All the messages were from Aiden. I never listened to them, I just pressed delete as soon as he identified himself.\n\nThat Monday, however, I had a little more in mind than clearing out my voicemail inbox. An idea had started forming the previous week and, as the final week of the year began, I knew I had to set it rolling.\n\nI woke up after a restless night, feeling stiff and jumpy. After staring into the fridge and cupboards for more than twenty minutes I decided the glass of juice I held would be breakfast enough. My phone glared accusingly at me from the other end of the table.\n\nI ignored it and went to the lounge for my laptop. I logged into my site and navigated straight to the search engine. Mark Reynolds' name called up quite a number of matches but I recognised the picture I was looking for instantly. It was two years old; I knew because I'd taken it on our trip to Sun City. I sent him a message and waited. \n\nI got a tentative greeting back by that evening. I asked him how he'd spent his Christmas. He asked me why the police were looking for him. I lied; I told him the other tenants must have called the police. I told him that I never wanted to see him arrested. My skin crawled as I told him I missed him.\n\nMy hands were shaking by the time we logged off an hour later. No, not just my hands, all of me, even my spirit. I was inside the shower before I realised I hadn't gotten undressed. I stripped under the hot spray, crying as my clothes hit the tiles. I just stood there until the steam started suffocating me. I got out and it was only after long moments of searching that I remembered there was no oversized robe for me to wrap myself in. I pulled on my pyjamas instead.\n\nI went to sit in the living room in the dark, thinking about the last time I'd gone to church. It had been seven years ago, while my mom was still alive. The following year my father had told me I wasn't welcome at church as God had turned his back on me. I'd believed him. Why else would my mother have died so senselessly if not to punish me?\n\nI was whispering before I even knew it had been my intention to pray. At least, I think it was a prayer, \"I was wrong, wasn't I? I'd dimmed the memories of the love she'd shown me when I shoved them to the back of my mind along with all the guilt I felt over her death. She wouldn't have loved me even harder after I came out if I hadn't deserved love. She'd called me smart and strong and I never believed her. I listened to my father instead of hearing her. Was she right? Am I strong?\" \n\nI nodded in the dark, \"Yes. Strong enough to see this through; and strong enough to move on... alone... after it's done. I'm done running. I'm here to ask for back up; please, just help me through whatever's supposed to happen. And one more thing, I need you to keep an eye on someone for me. Someone special. Please.\"\n\n*\n\nThe next day when Mark asked if he could call me, I almost smashed my laptop after writing my response, 'Yes, I'd love to hear your voice again.'\n\nMy first impulse was to call the police. But I curbed it, knowing they would end my plan before I could see it through. So I paced for ten minutes before gathering the courage to turn my phone on.\n\nI was thinking about a walk I'd taken on the beach with Aiden, when my phone rang. I stared at it, giving one last thought to backing out before it was too late. But backing out wasn't an option, not anymore.\n\nI picked it up, \"Hello?\"\n\n\"Hi, angel,\" he sounded as guarded as I was feeling.\n\n\"Mark,\" something oily slithered along my belly; I hated it when he called me that, \"I've missed you.\"\n\n\"Have you? You haven't shown it,\" Mark had a mellifluous voice that perfectly matched his golden good looks. \n\n\"I was scared. You hurt me the last time so-\"\n\n\"You know that wasn't my fault,\" he bristled. \"I just wanted to talk to you and you didn't want to listen.\"\n\n\"I know; you're right. I never gave you a proper chance. I've finally realised that and that's why I had to contact you.\"\n\nOur first conversation was short. I had a hard time keeping things light to avoid triggering Mark's short temper. I took the blame for everything that had ever gone wrong between us. Describing the lonely Christmas I'd had was no lie; and when he asked me where I was I told him the truth then too.\n\n\"In Rosebank,\" sweat popped on my forehead. \"Prof Ngubeni's gone on sabbatical so I'm renting his house for a while.\"\n\n\"I don't know where it is.\"\n\n\"Not far from the university,\" I had to clear my throat when it clogged. \"I could send you directions if you'd like to visit.\"\n\n\"I don't know,\" the slight agitation again, \"we'll see.\"\n\nI knew he'd be suspicious of my motives so I made sure not to put any pressure on him. I also avoided asking him where he was. If I was going to draw Mark out, it would have to be at a pace that he set.\n\nI brought up our first few weeks of dating and heard him relax notably. He chuckled as he reminded me of how nervous I'd been the first time he'd taken me to a gay club. Not long after, I heard a male voice in the background and Mark told me he had to go. It was worrying to know that he might have a new victim lined up. I ignored the other voice and tried to sound excited when he whispered that he'd call me again that night. \n\n*\n\nFor the next three days Mark called at least twice a day.\n\nHe tossed fond memories, accusations and bouts of depression my way during every conversation we had. Keeping our talks and him stable started taking its toll on me. Each night I was kept up by the irrational fear that he'd find me and finish what he'd started that night at the club more than a year ago.\n\nHe never did sneak up on me, though. When he couldn't stand keeping away any longer, he came out and said it on New Year's Eve.\n\n\"I want to see you tomorrow.\"\n\nI nearly dropped the phone, \"Tomorrow?\"\n\nHis tone immediately turned edgy, \"Yeah, tomorrow. Is there a problem? I thought you said-\"\n\n\"Tomorrow's great,\" I said. \"I just wasn't expecting this. I was hoping, of course, but you never seemed as interested...\"\n\nHe chuckled smoothly, \"Oh, I've been aching for you, angel, but I first had to make sure that you weren't playing some game. I know how you love those games of yours, always trying to make me look bad...\"\n\n\"We should go somewhere nice,\" I interrupted, \"like a fancy restaurant where we can celebrate our reunion. We could dress up and-\"\n\n\"No, I was thinking a private party would be lots more fun.\"\n\nA chill skated down my spine, \"Alone?\"\n\n\"Naturally,\" he was smirking, I could hear it. \"We'll spend New Year's day making up, the perfect way to start the year, don't you think?\" \n\nNo more running. \n\n\"I can't wait.\"\n\n*\n\n~Aiden~\n\nI gave up on avoiding the soundless house. \n\nIt was late in the afternoon and the heat kept making me think of ice cream, which in turn only served to remind me of Ethan. I packed up my things and trudged back up the hill.\n\nIt was cool and quiet inside the house. \n\nI dumped my wetsuit in the guest bathroom then went upstairs to wash the seasalt off me, but made sure not to linger in the shower. Ethan's face had a tendency to plague me when I kept still for too long and I knew what it would look like beside me in there, the same way it had looked when I'd pulled him in from the rain. And his eyes would shine the way they had that night in the club. The night he'd knelt before me and-\n\nI went back downstairs and paced the kitchen. I slammed cupboard doors and dug around in the fridge, wondering why I had no appetite. I was normally ravenous after spending hours in the water. \n\nRick Landon's idea of a Christmas card lay on the island in the kitchen. His trip to the auction had been a successful one and he'd faxed me confirmation of the purchase. I was officially the proud owner of an upmarket townhouse complex in Johannesburg. I should have taken that trip myself and just taken Ethan with me. Then maybe we could've avoided most of the drama that had split us up.\n\nI shook the tension from my shoulders and raided the cupboards with determination. Crackers. Great. With a sigh of defeat I tossed them on a plate with cheese slices and a giant scoop of preserved figs. Might as well make it a party; I grabbed a bottle of merlot and marched to the dining table.\n\nThe wine didn't help. By the third glass I couldn't shake the thoughts of Ethan any more. I couldn't understand why his face was haunting me more strongly than usual. And it was troubling me that I kept picturing him the way he'd looked when he was hurt. And I kept wishing I could hold him protectively. When the image of him on the day I'd seen him crying in the garden lodged itself in my mind, I grabbed a fresh bottle of wine and headed upstairs.\n\nThe master suite had a king sized bed, far more comfortable than any double, yet I caught myself considering spending another night in the guest suite. I walked out onto the balcony instead. I spent an age on a chair out there, sipping wine and convincing myself that I couldn't drive to Cape Town until I had a concrete search plan. The sky slowly turned black and mocked me with a million stars that looked like sparkling fucking diamonds.\n\nHours later I watched fireworks blaze across the town below. I hadn't even noticed midnight approaching. With the last sip of wine gone, I went back inside. I brushed my teeth without once meeting my eyes in the mirror. After stripping I climbed into bed without bothering to find pyjamas. I turned out the light and lay on my back.\n\n\"Happy new year, baby.\"\n\n*\n\n\"Happy New-! Oh, it's you. Where's Ethan? I wanted to surprise him.\"\n\n\"Sam!\" I pulled him into a rough hug before I could stop myself.\n\n\"Oookay,\" he squinted at me. \"Where're Ethan and the real Aiden?\"\n\nI sat him down in the living room. He yielded hesitantly, making me nervous about what I was about to do. But I knew I had to open up to him \u2013 he was the closest link I had to Ethan and I was desperate enough to try anything. So I told him everything that had happened since he'd left. I was hoping he'd be more willing to help me if I was completely open with him.\n\n\"You love him,\" he stated that part before I could get to it.\n\nHe'd slumped back into the couch. I watched him steadily as he studied me. After some time I caught a glimpse of a smile; the smile I offered back to him was bleak.\n\n\"Can you help me find him?\" I asked.\n\n\"I know where he is.\"\n\nIt was the best answer I could have hoped for. I'd never gotten ready faster in my life. I barked orders on my way through the reception area of the Montgomery and hoped Jane had gotten them all. By the time I called Dan to tell him I was leaving town Sam and I were already in his SUV. I gripped the wheel, suddenly noting that I hadn't even asked if he was okay with letting me drive. He handed me the keys without a word.\n\nI felt a rush as we exited Plett and stepped a little harder on the accelerator. \n\n#~#~#~#~#~#~#~#~#~#~#~#~#\n\nI cut the same finger twice.\n\nMark was coming over at six and he'd told me to cook something nice. He knew that I couldn't find my way around any kitchen, that I hated cooking, but he'd told me to prepare something anyway.\n\nI tore off the first bandaid and ran some water over the blood while I used my teeth to tear open a bigger one that would cover both cuts. All I could think about was calling the police but that would have to wait. If I called them too early, they'd storm in to rescue me before I managed to trap Mark. I avoided thinking about what would happen if I didn't call them in time.\n\n\"My poor angel...\"\n\nMy heart leapt and I knocked the glass bowl beside me off the counter. I spun around and felt tiny shards spray across my ankles when the bowl hit the floor.\n\n\"How- How did you-?\"\n\nMark was leaning against the doorway between the kitchen and the lounge area, smiling at me. His dark eyes were hard, though. Calculating.",
        "\"You invited me, remember? Or have you changed your mind again?\" He straightened and slowly approached me, \"You know how much I hate it when you blow hot and cold, angel.\"\n\nI couldn't help instinctively backing up two steps, my heels crunching on broken glass. I nodded nervously, \"Of course I'm happy you're here; you just surprised me, that's all. I, uh... I didn't hear the door.\"\n\nHe stopped in front of me. For some reason I was amazed to note that he was the same height as me. Why had I always thought of him as being much bigger?\n\nHe was still smiling, \"I decided to drop in unexpectedly, to make sure you weren't playing one of your little games.\"\n\n\"No, never... I wouldn't do that, not to you.\"\n\nHe cocked a mocking eyebrow, \"But you do understand my concern, don't you? You've been up to some very naughty tricks lately, my pet; I had to make sure that you weren't trying to hurt me again.\"\n\nI managed a nod while my brain screamed in pure panic.\n\nMark opened his arms, \"Well? We're finally together again. Don't you have a warmer welcome for me?\"\n\nI dropped my gaze and went into his embrace. I tuned out the nausea that rose as he stroked my back. He still smelled the same; I recalled sitting in the hospital a year ago, blood running down into my eye, and trembling because I could still smell him on me.\n\nI needed to get help, before he made me relive that night and worse.\n\n\"As you can see, you've caught me in the middle of getting our special dinner ready. I need to finish preparing the food,\" I mumbled past his shoulder. \"I wasn't expecting you this early so I hope you don't mind waiting. Why don't you relax in the lounge and I'll pour us some drinks?\"\n\nI pulled back, trying to remember which counter I'd left my phone on. I just needed a minute alone in the kitchen \u2013 that would be more than enough time to call the police.\n\nMark stopped me, \"Nah, I don't feel like putting up my feet while you work alone. I'll stay in here and watch you. I just want to be close to you; we have so much time to make up for, so much love to catch up on.\"\n\nI swallowed, hoping my lips had curled all the way into a smile, \"Oh, but I was planning on thoroughly pampering you. Please, make yourself at home; and I'll fetch you something to nibble on; and maybe something to drink. What would you like?\"\n\n\"You,\" he pulled me back into his arms. \"To nibble and drink.\"\n\nI saw the kiss coming and knew I had to do it. I told myself to close my eyes and block out that it was Mark, but at the last second my head turned and his lips landed on my neck. When he lifted his dark gaze, something familiarly frightening was swirling within. It was like staring into midnight.\n\n\"You're nervous, angel.\"\n\nA laugh slipped out at that understatement. I did my best to make it sound casual, \"I wouldn't say nervous, just excited th-that my year is starting so amazingly.\"\n\n\"Great. Let's get to it then. What were you making?\"\n\nI quickly scanned the kitchen as I turned to the counter I'd been working on. My phone was on the table in the breakfast nook. I turned away from it and headed to the vegetables and other light foods I'd lined up for an appetiser platter. I'd had no dinner planned as I'd figured the police would take Mark away before we ever got to it. I needed a plan now.\n\n\"Shouldn't you take care of this mess first?\" Mark indicated the glass all over the floor.\n\n\"Yes, of course,\" I found a broom. \"Maybe you should step out for a sec, though, so I can clear this up before you step in any of it.\"\n\nHis cold eyes narrowed for a long time. \"Sure.\"\n\nI moved as soon as the door swung shut. I snatched up my phone, flicking a desperate glance over my shoulder. No Mark. Scrolling for the police department number was not an option \u2013 I speed-dialed 2 instead and cursed quietly when it took an eternity to connect. \n\n\"Man, what a view!\" Mark called, probably from the large windows that looked out over the back garden.\n\nI fumbled and almost dropped the damned phone. When the ringing started at the other end, I muted the volume and switched to speaker phone.\n\n\"Do you want to have our drinks out there so we can watch the sun set?\" I called back.\n\n\"Nah...\"\n\nShit, he was coming back. I dropped my phone next to the microwave where he wouldn't see it and kept my back to the doorway so I could take a moment to collect myself.\n\nI heard his shoes grind on the glass that I still hadn't swept up. \"I'm in the mood for the type of party that is best kept indoors.\"\n\nI turned to find him watching me, clearly considering using the gun he was pointing at me.\n\n#~#~#~#~#~#~#~#~#~#~#~#~#~#~#\n\n\"We need to get onto De Waal Drive; so take the next-\"\n\n\"I know how to get to Rosebank,\" I concentrated on not breaking the speed limit as we headed toward the Devil's Peak freeway. \"You snore, by the way. Really loudly.\"\n\nSam snorted, \"I do not-\" He blinked at me, \"How loud?\"\n\nI laughed but his phone rang before I could respond. I saw his eyes light up when he checked the screen; that could only be the one person we'd been trying to reach since leaving Plett.\n\n\"About damn time he called me back,\" Sam flipped his phone open and put it to his ear, \"You are so lucky I'm- Hello? Hello? Sugar, is that you?\"\n\nI glanced Sam's way as many times as I dared without driving us off the mountainside. His expression was one of worry. Ethan must be trying to talk him out of finding him.\n\nI couldn't stand it any longer, \"What's going on? What's he saying?\"\n\nSam's jaw had dropped and his face was pale. He pushed a button and the speaker clicked on. I heard a voice I didn't recognise and it wasn't sounding all too friendly.\n\nBefore my confusion could take hold however, Ethan's voice came across a lot less muffled. I was so happy to hear him I almost missed what he said, \"Mark, please... I do want to work things out, I really do. But you need to put the gun down first. Please, I-\"\n\nMy blood ran cold. The other voice barked again, still muffled but obviously upset. Reynolds? Reynolds had Ethan?\n\nI tossed my phone at Sam, finally letting my foot sink down on the accelerator the way I'd been itching to do since this morning.\n\n\"Anton Pretorius, call him now!\" I ordered as I made a sharp left, \"Give him the address and tell him about Reynolds. He'll contact the closest police station.\"\n\nThe light ahead turned orange so I sped up again. Not much farther now; that fucker had better pray I get to him before he did anything to Ethan.\n\nIt was a threat as well as my most desperate prayer and I hissed it from between clenched teeth.\n\n#~#~#~#~#~#~#~#~#~#\n\n\"Say it!\"\n\nI knew I was being stupid but I still couldn't bring myself to say what he wanted to hear.\n\nSo I told as much of the truth as I could, \"I don't have anyone, Mark; I swear, there's no one else.\"\n\nHe grabbed me by my shirt, \"No one but me?\"\n\nThe smell of his sweat was sharp and unexpected. It scared me as much as the look in his eyes because it proved his anxious instability. Everything I said to him made him more restless and that was the one thing I'd been trying to avoid.\n\n\"Only you.\"\n\nHis gun pressed into my stomach and, for a second, I thought of my mother.\n\nHe suddenly turned and pushed me through the kitchen door, in the direction of the lounge, the dining room and bedrooms beyond, \"We have some celebrating to do, angel. You still remember what I like don't you?\"\n\nI sure did remember. I remembered that the only reason he called me that was because he loved the irony of the depraved things he made me do at the same time. I remembered cutting my hair because I'd gotten tired of having him pull me by it like I was some animal. I remembered hating the bed we'd bought together.\n\nI couldn't let him take me back there.\n\nIn the dining area I pulled away from him and managed to put the table between us. He lifted his gun but didn't shoot \u2013 because we both knew I was trapped. I had a wall behind me; he had the only escape route behind him.\n\n\"When are you going to learn?\" Frustration made him wave the gun, \"I am all you have. I was there when no one else would even LOOK at you! You love me!\"\n\nI nodded because his yelling had started scaring me. His face was flushed and I was worried about him getting any more frantic than he already was.\n\n\"You haven't actually said it yet,\" he accused.\n\n\"Wh- Said what?\"\n\n\"That you love me. If you've wanted me back for so fucking long, why wasn't that the first thing out your mouth?\"\n\nI froze. I had to say it. My life depended on keeping him happy until I could find a way to get away from him, but the words refused to come. Aiden's green eyes flashed before me and I knew I was lost \u2013 there was no way I could say those words to Mark or anyone else.\n\nMark must've seen something in my eyes, \"You slut. You cheap, fucking-\"\n\nHe aimed straight at my heart and I lifted my arms to shield myself, \"NO!!!\"\n\n#~#~#~#~#~#~#~#~#~#\n\nSam was paler than I'd ever seen him. I didn't want to know what I looked like.\n\n\"Captain Pretorius said two units were in the area and should be there by the time we get there.\"\n\nSam had originally had the phone on speaker but my shouting had only confused Anton. So he'd handled everything himself.\n\nWe were on a tree lined street. Sam pointed to the right and I had to wrench the wheel as hard as I could to make the turn in time. I could hear sirens somewhere but couldn't be sure if those were the units from the Rosebank police station or other officers drawn in by our speeding.\n\nSam pointed at a neat, single-storey house near the end of a cul-de-sac. All was quiet but knowing I was this close to Ethan and that he was in trouble, made me edgy. Sam's line was still connected, but we could no longer hear them talking. The silence was terrible.\n\nSam was checking the street, \"They're not here yet. Where the hell- Aiden, no!\"\n\nI was out of the car before he could stop me. The sirens were louder but the police cars hadn't reached this street yet. I could not just sit there, hoping they'd make it in time. I vaulted the low fence, trying to keep away from areas of the garden that might be visible from indoors. \n\nI made it to the house and pressed myself against the front wall. No lights had been turned on even though the sun was just about gone, so I had no way of knowing which part of the house Ethan was in. I was considering circling around to the back when I heard him and his cry propelled me.\n\nThe front door was locked. I rammed my body against it with only one thought in mind.\n\n#~#~#~#~#~#~#~#~#~#\n\nSomething hit the front door from outside. \n\nMark and I swung around simultaneously, equally shocked that we were no longer alone. Whatever \u2013 or whoever \u2013 it was, the door was hit hard enough to make it vibrate but it did not give. The police! Sam had come through after all. \n\nThe second collision produced a large crack. That's when Mark panicked.\n\nHe turned from the door and aimed back at me, \"You! Get the hell over here!!\"\n\nI only had the dining table between us for protection but I wasn't done resisting. I pushed the large table over and hit the floor. Mark swore again, looking for me but the third crash rang out right then and I could hear the door give in. I saw Mark turn back towards the door.\n\n\"Ethan!\"\n\nAiden?! No, no, no n-!!\n\nMark fired two shots as Aiden large frame hit him. \n\n\"NOOO!!!\" I was scrambling to my feet, barely aware of the shouting and thudding boots of the policemen storming in.\n\n#~#~#~#~#~#~#~#~#~#\n\nGramps was right.\n\nFor as long as there was anything worth fighting for, every spark of energy should be dedicated to it. My dreams, my beliefs, my passions... those were shaped by no one but me \u2013 and deserved that I celebrate and protect them. My love... my Ethan. As I lost track of my breath, I could think of no single thing on earth more worthy of my dedication. I might have taken a long time to commit, but in the end I gave him everything I had, everything. And it felt good.\n\nA point came when my eyelids stopped fluttering, they simply became too heavy to lift; but that was fine. In my mind I saw Ethan stretching in the sun \u2013 skin glistening, his hair lifting in the breeze \u2013 and I let myself take him in. \n\nI'd gotten there in time to fight for the one thing worth my life. More than who I'd been or who I'd become; more than what anyone outside saw or thought of me; and more than the darkness slipping in to envelope my contentment... that was all that mattered. \n\nI'd fought for my love.\n\n#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#\n\n~Ethan~\n\n\"Someone called to see how you were; I couldn't work out if his name was Justin or Jordan.\"\n\nIt was after two in the afternoon and I'd only just showered. I was sitting at the table in Sam's kitchen with a bowl of cereal in front of me. Sam was feigning disinterest but I knew he was watching every spoonful I ate. I'd had a hard time building up an appetite in the last six weeks.\n\nThe best part of this whole mess had been not having to deal with Mark. \n\nAnton had spent a lot of time on the phone with me once Mark was taken into custody, talking me through what to expect in terms of the charges and testifying against him in court. We never got that far, though. A fortnight after Mark's arrest, a young man came forward to press charges of his own. Apparently Mark had turned on his new boyfriend once he thought he'd be getting me back in his life. He'd snapped completely. Twenty-year-old Ben Westham had been hospitalised for more than a week, receiving treatment for grievous beatings and several stab wounds. So, the good news was that Mark pleaded guilty as soon as he'd heard of Ben's involvement in the case. The other good news was that his cooperation had done little to make a dent in his sentencing; he was facing many years behind bars thanks to the list of charges against him.\n\nThe bad news... I couldn't face that yet. I let go of my spoon and it clattered to the table. Sam was still doing a poor job of pretending he wasn't keeping an eye on me.\n\nI pushed my half-eaten bowl away, \"It's Justin and Jordan. They're actually two someones who happen to sound like one nut.\"\n\n\"Oh, okay. I told them you weren't up to chatting but would call back soon.\"\n\nI stood up, \"Can we go?\"\n\nSam was careful to control his tone, \"You're not done eating.\"\n\n\"For crying out loud, Samuel, I've done every damn thing you asked!\" I was embarrassed to feel my eyes burning. \"I tried to get some sleep; I took a shower; I ate as much as I could stomach... What more-?\"\n\n\"You're right, I'm sorry,\" he swept the bowl away. \"I'm worried about you, that's all.\"\n\nI rubbed the moisture from my eyes, \"I know.\"\n\n\"You'll burn out soon if you keep this up. And the guilt you've been carrying will only hurt you that much more.\" He touched my shoulder, \"Punishing yourself won't change what happened.\"\n\nI shook his hand off, \"I know, alright? Now can we go?\"\n\nSam drove.\n\nTechnically speaking, the hospital's visiting hours wouldn't be starting for another hour, but the nurses knew me by now. After seeing me daily for a month and a half, they'd become very gracious about turning a blind eye while I slipped past at odd times. I trudged through blue and white corridors with my hands deep in my pockets. \n\nI'd come to hate these corridors. They led to beeping machines and rooms with no comfort. They led to sleepless nights. Worst of all, they led to doctors in pristine coats who spoke gutting words. Words like 'dislocated shoulder... fractured ribs... gunshot wounds... excessive blood loss... coma'. \n\nComa. \n\nI'd collapsed against these very walls the first night we'd arrived here. That was the night their neutral whiteness had highlighted my piercing anguish at having a torn and broken man taken from me \u2013 and being left with nothing but his blood soaking into my clothes. \n\nI blinked the memory away.\n\nThe fourth floor waiting area was quiet, meaning Aiden's family hadn't arrived yet. I was relieved. They'd been incredibly supportive since the day of Mark's meltdown and arrest, but I still had a hard time facing them. The more Greg treated me like the son my own father detested, the guiltier I felt for the trouble I'd caused. I'd brought Mark into Aiden's life and knew I'd never forgive myself for that.\n\nAt Aiden's door, I paused to shake the stiffness out of my shoulders, determined not to carry my guilt and gloom to his bedside. My mind flashed back to our very first kiss and when the warmth of that day soothed me, I opened the door and walked into his room.\n\nAiden was awake and smiling at me. \n\nI stared stupidly, \"Oh... my...\"\n\n\"Please don't pass out, baby. I won't be able to catch you if you do.\"\n\nFor nearly six weeks the doctors had had no answers for me. The first bullet had grazed his temple, causing no real damage. It was the second shot that had been more distressing. It had passed through his chest when he tackled Mark, fortunately passing above his heart and just below the left subclavian vein. But the bullet had torn a large hole on its exit \u2013 and that was after he'd dislocated his shoulder and cracked six ribs on his right side when he'd obliterated a solid oak door trying to get to me.\n\n\"They said they didn't know when you'd wake up,\" I whispered. I didn't tell him that they'd said 'if' not 'when'.\n\nHe lifted his left hand, \"I'd really like to touch you.\"\n\nI rushed to him. The upper portion of the bed had been elevated to prop him up. I sat beside him and wrapped my arms around him. He groaned when I touched him and I stiffened, thinking I'd hurt him. When he immediately tightened his good arm around me I recognised his contentment. I'd missed his embrace too; he was so warm.\n\n\"This is perfect,\" his chest rumbled when he spoke. \"I have so much to share with you, love. About Carolynn and-\"\n\n\"Oh, thank heavens!\" Aiden's mother hurried in, followed by the rest of the pack, minus his grandparents.\n\nThe kids were so excited that Chris had to block their way to Aiden's bed until they managed to calm themselves somewhat. Gwen and Michaela hugged us both and wouldn't let go for a long time. This time I let myself enjoy the Montgomery group hug. \n\nMelanie managed to slip past her father, \"Merry Christmas!\"\n\nShe clambered up onto the bed near Aiden's feet, wielding two brightly wrapped packages. \n\n\"Christmas in February?\" I asked. \"Surely you've celebrated already? Like, on Christmas day perhaps?\"\n\nAiden grinned, \"Not entirely. The kids refused to give me my present in Plett because \u2013 according to them \u2013 I wasn't Christmassy enough.\"\n\n\"He was so sad and grumpy, Ethan,\" Melanie complained, \"so we decided we'd wait till you came back to make him happy again.\"\n\nI gaped at her. \n\nI'd made more friends than I'd ever had before during my weeks in Plett. Now Melanie's innocent words made me feel like I was on the brink of being gifted with a whole new family as well. But there were so many issues to sort out, I was afraid of letting myself hope it could be true. \n\n\"Open it, uncle Aiden,\" Kyle ordered.\n\nMelanie handed him the red package and kissed his cheek. He tore it open in moments, grinning at the children's enthusiasm. The wrapping paper fell away to reveal a neatly folded t-shirt. Aiden shook it open and held it up for me to see. Wolverine.\n\nI laughed, \"This explains so much.\"\n\n\"We got you a present too,\" said Kyle. \"Here you go, Ethan.\"\n\nI took the package in surprise. Melanie kissed my cheek then nudged me to get me to start tearing through the green wrapping. I did so carefully. Inside was another t-shirt, a white one. I shook it open, wondering which superhero the kids had picked for me. Aiden's laugh exploded at the picture on front.\n\nI cocked my head as I studied it, \"I love it.\"\n\n\"Really?\" Melanie bounced for joy, \"'Cause I picked it. Kyle wanted us to buy a different one but Mommy said I could decide on yours since he'd already chosen our uncle's.\"",
        "I kissed her forehead, \"Your mom is brilliant, Melon. SpongeBob SquarePants was the perfect choice.\"\n\nAiden laughed even harder at that; then groaned when his stiff ribs protested.\n\n*\n\nAiden was discharged a few days later.\n\nHis bullet wound and ribs were healing well and the post-operative x-rays of his shoulder came back clear. But I still think the main reason the doctor discharged him was to curb his nagging. The grey-haired doctor winked at me as he signed the release forms, asking Aiden why he was in such a rush to get to his own bed. I dragged Aiden away before he could answer.\n\nMaybe it was embarrassment at what personal details he might share with that doctor. But it was also the fear of hearing that it wasn't me he was anxious to be with. Seeing him, awake and smiling, was awakening my hunger for him again and I didn't know if I could bear hearing that he'd gotten over me in our time apart.\n\nWe'd had painfully little privacy since he'd woken up. He managed to tell me that Carolynn had been kicked out of his house because of her lies. The baby had been nothing but a lie. I couldn't conceive of the type of psyche that spun lies and toyed with lives the way Carolynn had. Aiden looked like he wasn't at all interested in trying to understand her. I watched the outrage darken his eyes as he spoke and was torn apart by the idea of ever being rejected by him.\n\nI found that I couldn't celebrate Carolynn's departure because I still didn't know my own fate. I spent those days painfully aware that Aiden had given no indication of wanting me, despite the developments he'd shared with me. The apprehension inside me grew as my doubts multiplied and I knew Aiden had to be sensing it.\n\nHis brace and subsequent sling had been removed and all the necessary paperwork dealt with before we left the hospital. My heart had seized a little as he'd signed the release forms and I couldn't help wondering how much longer I had before I'd be expected to let him walk out of my life as well. We drove to his parents' house for a late breakfast, while talking about the friggin' cable car up friggin' Table Mountain. I gripped the steering wheel and made sure to avoid meeting his eyes in the quiet intimacy of the car. \n\nAiden directed me to his parents' home which turned out to be a sprawled out Spanish-style villa in Simonstown. He opened the front door and led me inside before I'd managed to take a good look around the lush garden. Melanie was sitting in the lounge, watching tv.\n\n\"Oh, thunder!\" that was Mike.\n\nI was startled but no one else seemed affected. Kyle calmly entered with two bowls of cereal and handed one to his sister. They both dug in, eyes zeroed in on the leopards on their favourite nature show. \n\n\"What was that?\" I asked.\n\n\"Mom,\" Kyle answered, eyes still glued to the television. \"She thinks she's making pancakes. It never works.\"\n\nMichaela appeared then with smudges of strangely yellow batter on her. She kissed Aiden and me then went to slump down on the couch next her children. \n\n\"All clear then?\" Greg missioned in, already wearing an apron, as if he'd been biding his time. \"Ah, you boys are here; good, good.\" He hugged us before heading on towards the kitchen. \n\nAiden showed me around the beautiful house, kissing his mother hello along the way. He then sat with his grandparents to tell them what the doctors had said after running their final tests. Melanie climbed into his lap and kept trying to feed him her multi-coloured cereal. Feeling a little out of place, I decided to step out onto the terrace and... uh, hide. I couldn't see the ocean from where I stood but I could smell it. I leaned on the terrace railing, taking extra deep breaths.\n\nI sensed Aiden's approach before I felt his warmth behind me. I craved him enough to feel my tongue slipping across my bottom lip the moment his scent reached me. I stood straight and still, hoping some clever line would come to mind. Anything would be more impressive than my unvoiced panic.\n\n\"Kiss me,\" his words were soft yet rough.\n\nI shook my head, at his command and at my desire to obey it, \"No.\"\n\nI felt his front caress my back and tensed up. His strong hands came down on either side of me, gripping the railing. His skin was lighter from his time spent in hospital, more honey now than bronze.\n\n\"Kiss me.\"\n\nI shook my head again, my racing heart taunting my shaky resolve, \"Aiden, stop this. You don't know what you're starting. I'm not kissing you with your family a few steps away. They might be fine with hearing that you're gay but, believe me, seeing it will be a whole other challenge. The children are in there, damn it.\"\n\n\"Kiss me.\"\n\nFrustration finally made me turn in the circle of his arms, \"Why?!\"\n\nHe studied my face for a long while before leaning down to touch his forehead to mine. His words fell on my lips as he spoke, \"Because I don't know how else to convince you that I love you. I have felt my time with you running out since we left the hospital and don't know how the hell to keep you here with me. Since the day you left me, I've been tormented by your desire to move on, your last message... I've wasted so many chances to tell you, that all I have left is showing you. Please let me show you, baby. I know that's the only shot I have at getting you to come back to Plett with me. I have to make you see that you belong with me. I love you.\"\n\nI couldn't believe it. \n\nI'd faced enough disappointments in my lifetime to have learnt that I never got gold. I had chosen to put myself under emotional quarantine all my life because I'd accumulated a string of judgments and ridicule long enough to teach me my worth. And now the most beautiful man I knew was standing in front of me, promising me everything.\n\nAiden loved me. I felt a little smile begin to show. \n\n\"No,\" I responded firmly.\n\nHis broad shoulders bunched at that small word, making the muscles in his arms tighten and brush against mine, \"'No'? I'm too late then? You're telling me you're prepared to just walk away from-\"\n\nI brushed my fingers along his stubbled jaw and rested them on his lips. I loved that I could touch him like that any time I wished. \"No. I'm telling you that your love is only part of the reason I'll be coming back home with you. The other part is that... I love you too.\"\n\nAiden's heat enveloped me the instant his lips met mine. His kiss was bruising, his tongue unapologetic. I pulled him to me, welcoming every mark. He was finally mine and I wanted all of him. The taste of him made me feel more at home than any house ever would. \n\nI held him in place and slid my tongue between his lips. He leaned into me, towering over me, wrapping his strength around me. Strength that had seeped into me over last few months. \n\nI spun us around and pushed him against the railing, smiling at his surprised exhalation. My eyes held his as my palms slid down his torso then up under his t-shirt. I watched his green orbs narrow the instant my touch skimmed across the heat of his abs. I savoured the sense of power I got from his reactions.\n\n\"I, uh, came out to, uh... Mom wants to... Breakfast is ready,\" Chris' voice froze my exploring hands, \"but I'm not so sure scrambled eggs will hold much appeal for you two right now.\"\n\nI turned my head in alarm. Chris was standing in the doorway, his neck a deep red and his eyes trained on the rosebushes growing just beyond the terrace. I suddenly remembered my hands, still beneath Aiden's t-shirt, and snatched them away.\n\n\"We'll be right there, bro,\" Aiden's tone was amused.\n\n\"Right.\"\n\nMinutes later we were all seated around a large table, digging into a hearty breakfast. I found it difficult to meet Chris' gaze, but had plenty to watch as Michaela rescued the maple syrup from Melanie who'd been about to drizzle some on her bacon. Montgomery chaos, I loved it and had years more to look forward to. Years and years with Aiden \u2013 the thought made my little smile grow.\n\nI turned to Michaela who sat to my right, \"There's something I've been wondering for a while...\"\n\n\"Shoot.\"\n\n\"Why 'Mike'? Why not something that sounds more feminine, like 'Mickey'?\"\n\n\"Kyle,\" she prompted, biting into her sausage.\n\nThe boy didn't hesitate, \"Mickey's a squeaky rodent that wears tasteless shorts and clogs.\"\n\nI looked back at Mike, \"Good point.\"\n\nMelanie grinned at me. Yes, decades more of this would be a dream come true. \n\nWe finished up fairly quickly as Dan had contacted Aiden to let him know that we had to be ready to leave by mid-morning. A few minutes before our booked transport was due to arrive, Aiden went out get his bags and Gwen hugged me, refusing to let go.\n\n\"Oh, Axe is definitely going to want that back, mom,\" Chris stated.\n\n\"No,\" she replied, clinging tighter. \"I don't understand why you boys can't just stay the weekend. Aiden, you need some rest; a six-hour drive won't do you any good after being released from hospital a few hours ago.\"\n\n\"I won't be driving,\" Aiden said behind me. \"Daniel's sending a chauffeured car. And we can't stay because I want to take Ethan down to the beach before sunset.\"\n\nEveryone went quiet at that, even Gwen eased up her grip, finally letting me inhale again. I took in their wide eyes and Aiden's smile and felt like the only person in the room who'd missed the punchline.\n\n\"The beach? Our beach?\" his father asked.\n\nMichaela shrieked and hugged him before he could answer. Soon Gwen was laughing and crying and the kids were jumping around excitedly \u2013 though I was fairly certain they were as clueless as I was.\n\n\"Wow, I thought Aiden was the only one who loved the beach that much,\" I told Chris who stood beside me. \"I guess all you Montgomerys are a little obsessed with it then?\"\n\n\"You could say so,\" he smiled, hugging me for the first time.\n\nThe gate's intercom buzzed before I could ask anymore and Chris nudged me towards the front door. Greg opened the automated gates while Aiden carried the bags out. A little dazed by the rising glee, I slowly followed everyone out into the summer sunshine. I could hear Michaela's laughter and the children's eager yelling and wondered what the excitement was about.\n\nA limousine. \n\nA black luxury limousine had arrived to pick us up; one Dan had commissioned to drive us all the way back to Plettenberg Bay. Aiden cursed softly in shock until I reminded him that the kids could hear him. It was unexpected, though, so I understood his reaction. I didn't even want to guess what he'd do to Dan once we got home. I laughed all the way to Sam's place where we picked up my things. By the time we were leaving the city, my stomach muscles hurt. But I still couldn't stop laughing. \n\n#################\n\n~Strawberry Sunsets~\n\n#################\n\n\"You love me?\" I had my ear pressed to Aiden's heartbeat. Despite our initial shock at its arrival, the lavish limo was turning out to be a wonderful idea.\n\nHe pulled me up till I was looking into his eyes, \"More than I could ever express to you.\"\n\n\"Oh, I don't know, taking a bullet for me was pretty expressive,\" I smiled. \"You're sure, though? They have you on some powerful painkillers. Maybe we should wait until you know what you doing before jumping into anything.\"\n\nHis hand wrapped around the back of my neck and pulled me forward until the tip of my nose brushed his. The light in his eyes was so intense I almost couldn't stand it.\n\n\"I know what I'm doing,\" he said. \"I'm refusing to put off talking to you about how I feel. I'm staking my claim on forever with you. And I'm falling deeper in love with you the more time I get to spend with you. I tried to avoid my feelings in the past but that never stopped them from growing. I love you, Ethan Gray.\"\n\n#~#~#~#~#~#~#~#~#~# \n\n\"I'm so sorry,\" Ethan murmured.\n\nI had my head in his lap and he was running his fingers through my hair. I'd just started drifting off when he made his apology. I'd been thinking about how lucky I was to have the one man perfect for me coming home with me, when his words pulled my out of my bliss.\n\nI opened my eyes, \"What could you possibly have to be sorry for?\"\n\n\"All the trouble with Mark,\" he said. \"I very nearly got you killed.\"\n\n\"That was all Reynolds' doing,\" I told him, \"that's why he'll be rotting away in lock-up for the next thirty-odd years. Look, I won't have you feeling guilty over something I'd do again without thinking twice. Okay?\"\n\nHe focused on his fingers in my hair, \"The day my mom died I'd asked her if she could come home early. My father had been hassling me and I was feeling really low. So that's what she did. She left work early and stopped at the bakery for my favourite brownies. The accident happened ten minutes from our house... If I hadn't called-\"\n\n\"Her job was to love you,\" I said, \"and I'm sure it made her happy that you believed that enough to turn to her when you needed her. I know I'd go wherever my love for you led me and be grateful for the opportunity to show it. Don't dwell on the end of your mom's story, baby; savour the joy and love in all of it instead.\"\n\nHis lips pursed thoughtfully, \"You're right. I haven't had the best luck in any kind of love and it's made me bury myself in pessimism. Meeting you and Dan and everyone else in the last few months has been such a new experience to me... I want to learn how to let more good feelings in.\"\n\n\"We all have our obstacles to overcome, babe,\" I told him. \"I couldn't even see mine for the longest time. I nearly let love pass me by simply because it came wrapped up in a man. For years I've wanted you more than I was willing to confess and it scared me. And even when I did start exploring my feelings for you, the fear remained \u2013 a new fear.\"\n\nHe snorted down at me, \"You've never been scared a day in your life.\"\n\n\"I was,\" I insisted. \"I faced the very real possibility that you wouldn't be interested in anything I had to offer. You're intelligent and kind, and people love being around you. I started worrying about long it would take for you to find a man who had no emotional baggage, no sexual identity issues.\"\n\n\"And no crazy fianc\u00e9e,\" he added.\n\nI laughed, \"Gods, definitely no crazy fianc\u00e9e... And you make more money than me. I'd fallen in love with someone who didn't need me to take care of him \u2013 all I had to offer was myself and I didn't know if that would be enough. Life had never been that complicated for me, so I guess I didn't know how to handle it. I didn't know how to be good enough for you.\"\n\nEthan silver eyes were serious, \"You love me. That makes you perfect for me.\"\n\n#~#~#~#~#~#~#~#~#~#\n\n\"I'd always been a shy boy,\" I told Aiden. \n\nI was sitting up and looking straight at him. If I was going to share my inner most self with him, I had to do it as directly as possible. He watched me tenderly as I sorted through my childhood and tried to present him with a collage he'd understand.\n\n\"The other kids were all so interesting and they had such fantastic stories about the exciting things they did with their dads. My father never spent much time with me, so I figured something had to be wrong with me.\"\n\nHe kissed my lips, \"Not a chance.\"\n\n\"Tell that to ten-year-old me, please,\" I said. \"I guess he just wasn't the fun-and-active kind of dad, but I didn't know that then. I took his distance as rejection and blamed myself. And then my feelings for other boys were growing and overwhelming me. That just made it all worse.\"\n\n\"Worse?\"\n\nI nodded, \"I couldn't understand what was happening. The boys my age were all chasing girls and I couldn't stand them. I thought there had to be something really wrong with me for me to be the only one who liked the kids who looked more like me. I was the only one who had crushes on other boys... Then, when I was thirteen, I met Sam and he was fun and confident \u2013 and out. I was astounded.\"\n\nAiden brushed my hair out of my eyes, \"He's the one that gave you the courage to come out to your parents?\"\n\nI chuckled, \"Yeah. But he it took him two years to convince me to do it. In the end I did it because I was tired of being afraid of what the world thought, I was tired of hiding and stressing and wishing... So I just blurted it out to my parents one day. My mom asked me why I didn't want to watch Casablanca with her later that night and I said 'I'm gay'. I remember she had just come in from doing some gardening. She hugged me so tight she got mud all over my school blazer. I was all wrapped up in her scent of leaves and sunshine. And her love.\"\n\n\"What did your father say?\" he asked cautiously.\n\n\"Nothing. He just walked out.\"\n\nAiden tried to pull me close, but I wouldn't let him. Not yet. I maintained eye contact with him, looking for signs of rejection but finding in none.\n\nSo I pushed on, \"He didn't speak to me for weeks, wouldn't even eat at the same table at mealtimes. Sometimes, late at night, I'd hear my mom pleading with him but he never came around. I'd thought his silent treatment was awful, but that was only until he started talking to me again. He told me I was sick \u2013 and weak for not being able to fight my feelings. I told him I didn't want to fight them. That was the first and last time I defended my identity to him.\"\n\n\"How come?\"\n\n\"He slapped me, again and again. He'd never raised his hand to me before that \u2013 then suddenly the blows wouldn't stop. I took it to mean he hated me. So I backed off. But he didn't. He'd... corner me. Whenever my mom wasn't around, there he'd be, taunting and condemning me. I never told her the things he said to me, I didn't want to worry her. But I think a part of her had suspicions. \"\n\nAiden clasped my hands between his reassuring ones, \"I am so sorry, baby.\"\n\n\"I'd spent my entire childhood yearning for my father's attention and when I finally got it, life at home turned into a nightmare. When my mom died I wished I'd gone with her. My father kicked me out at the end of my first university year. I spent that summer at Sam's then moved back into varsity res. I tried to contact my father a few times. I phoned home but he made it clear that I was no longer welcome in his house. I haven't had a home since, not a real one.\"\n\nAiden kissed me again, less gently than before, \"Until now.\"\n\nHis statement filled my heart. I would have to warn him soon that all this love would eventually make it burst. I'd always had money, but had never felt this rich before. I was certain my heart couldn't take much more. One of these days it would just explode in a joyous display of fireworks. I would definitely have to warn him of that before it happened. But for now...\n\nI agreed wholeheartedly with him, \"Until now.\"\n\n#~#~#~#~#~#~#~#~#~#\n\n~Aiden~\n\nThe sky looked bluer as the limo made its way up the hill towards The Montgomery. To me it did. \n\nI'd spent the last few minutes on the phone, speaking softly to keep from waking Ethan who dozed lightly beside me. By the end of our conversation, Dan was chuckling and I was more nervous than I'd ever been. He assured me that everything would be fine before hanging up. I looked over at Ethan. His hair was getting long again, covering his eyes as he slept. I brushed it back and kissed his cheek.\n\nHe turned to me, still half asleep, and sought my lips. I'd tried so hard to keep some distance until we got home because I knew I'd never be able to stop anything we started. But the moment his slumberous gaze met mine I knew I was lost. Our lips connected and I slowly leaned back against the extra-wide seat, pulling him with me, inviting him to explore me. We sank into the plush leather together. Gods, it felt good.\n\nHe lay across me, dipping his tongue between my lips, tasting me till my groin tightened. I licked him back, giving in to the needs my body had been screaming at me since leaving the hospital. My hands slid smoothly down his back and tightened on his hips when they started a slow gyration. He was getting me hard in the back of a damn car. I knew we should wait until we got to the house but every time I tasted him I didn't want to stop.",
        "His skin was hot. I slipped my hands beneath his t-shirt and ran my palms along his back and sides. He moaned into my mouth, planting his hands on either side of my head. I stretched out completely and squeezed his hips again. He pressed his pelvis into mine, deepening the kiss even more.\n\nI came up for air, \"Ethan... Baby, we need to stop.\"\n\nHis lips roamed along my jaw before dipping down to my throat. I felt his teeth clamp down on the base of my neck and it was like a shot of energy directly to my cock. Shit, I was harder than I'd ever been. I'd told myself I would behave until we got home, but fuck...\n\nI shoved my hands down the back of his cargo pants and pulled him to me as I thrust forward, \"Do you have any idea what you're doing to me?\"\n\nHe lifted his face to mine, \"Show me.\"\n\nI captured his lips again, losing my last grip on sanity. I shifted to my side, roughly rolling him beneath me. He looked up at me in surprise, then smiled at the burning need he saw in my eyes. I pulled his t-shirt over his head and off him. There he was, all mine. I dipped my head and enclosed one of his nipples with my lips, immediately sucking hard. His hips bucked, then again when I stroked the nub with my tongue.\n\nHe was moaning so sweetly by the time I moved to the other one that my sole goal became making him scream my name. He sank his fingers into my hair and held on tightly; my baby was soaring, so free. I growled in approval. But then my hand faltered on its way down to unbutton his pants \u2013 the limo had come to a stop. I looked out the window, chest heaving. We were home.\n\nI looked back down at Ethan's pleading grey eyes, \"Fuck.\"\n\nThe driver climbed out and came to tap on our window, \"Mr Montgomery?\"\n\n\"Yeah, hang on,\" I responded, grimly passing Ethan his t-shirt.\n\nHis cheeks had gone pink and he looked so cute I had to turn away while he pulled his t-shirt back on. I got my breathing under control before turning back to him. His cheeks were rosier. Fuck it. I grabbed him and kissed him again.\n\n\"Aiden,\" he pulled back, \"we should really go. The driver-\"\n\n\"Can wait a damn minute,\" I barked emphatically.\n\n\"There's a bed inside,\" he pointed out rationally.\n\n\"Right,\" I opened the door and hopped out.\n\nThe driver tipped his cap lightly as I tugged a disheveled Ethan out after me, \"Hope the trip was to your satisfaction, sir.\"\n\nI grinned at him, \"Not yet, but it's about to be.\"\n\n\"Of course, sir.\"\n\n\"Aiden!\" Ethan was the colour of a ripe strawberry and gawking at me.\n\nI unlocked the front door and let the unfazed chauffeur deposit our bags in the foyer. After one more tip of the hat, he left, softly shutting the door behind him. Ethan was looking around as if he was seeing the house for the first time. His cheeks were still pink.\n\nHe turned to me, \"It feels different. I actually feel like I belong here.\"\n\n\"You've always belonged here with me.\"\n\nHe reached up and pressed a soft kiss to my lips. I learned a crucial lesson in that moment: I was in love with a man who could get me to do absolutely anything for another one of those kisses. I cherished our nascent commitment, our emotional connection. \n\nAgain I pulled back before we could get carried away, \"We need to go upstairs and freshen up. I have a surprise for you.\"\n\n\"Can't it wait?\" he complained.\n\n\"It can \u2013 but I can't. Go on, we only have about three hours before the sun sets.\"\n\nI was trying to be casual but I think my newly mounting nervousness revealed itself anyway. He scrutinized my face for a minute before relenting. I picked up our bags and led him up the stairs. In the master suite I dropped our bags on my leather couch and turned to him. Ethan was standing in the doorway, inspecting the room. I looked around at what he saw: king-sized bed, thick carpeting, burgundy drapes, leather couch, dark mahogany furniture, light walls and sunlight filling the large space.\n\nI went to him pulled him inside. A tall, narrow bookcase stood behind the couch, flanked by a plant and floor lamp. He started there, running his fingers along the rich wood, down to the couch. After that he walked around touching everything before coming to stand in front of me once more.\n\n\"During my first week here,\" he started, \"I fell in love with your house because I could see how much of yourself was invested in it. It made me wonder what your bedroom looked like, what you looked like in it, in bed.\"\n\n\"Our bedroom,\" I corrected softly. \"And I'd love nothing more than to spend the next few days showing you what we could both get up to in that bed.\"\n\nI kissed him then. Because I could; because I wanted him to know he was welcome in all my most intimate spaces; because he tasted of strawberries and I was addicted... I slipped my fingers through his black hair and pressed his lips to mine when I wanted the kiss to deepen. I felt his promise to be mine in the way he clung to me as I demanded more. \n\nI pulled his t-shirt off again. Then I pulled mine off as well, because I hated having barriers between us. I watched him as his breath caught at the sight of my scars. He kissed the knot of flesh above my heart. The lighter cuts and bruises would fade, but that one was here to stay. I cupped his cheek and pressed him to my heart. I wanted him to know I wore that scar with pride and joy. Each day I wake with it would be another day I get to celebrate Ethan being here and being mine. \n\nThat's what I wanted to him to know when I kissed him again; when I undid his pants and slipped them off along with his underwear; when I lifted him and carried him to our bed. That's what I told him with my tongue, my eyes and my hands. That's what I vowed without saying a word. And I know he understood because, for once, he let me explore him to my heart's content.\n\nI lay beside him pinning his hands in one of mine while sucking on his neck. When I let go so I could crouch above him, he kept his hands there, surrendering completely. I could see that he had no idea how sexy a picture he made. I ran my hands down his chest, watching him closely. His breath caught when my fingers traced his lightly defined abs \u2013 so that's where I chose to put my tongue. His erection stood, throbbing and red, between us. I couldn't wait to get to it.\n\n\"Oh, shit...\" his hips bucked beneath me. \"Oh, shit, I need you...\"\n\n\"You have me,\" I husked before finally easing the head of his cock between my lips.\n\nHis scent drove me crazy, sweet yet raw and completely consuming. It matched the taste of him. I slid my tongue along his warm cock, sucking him further into my mouth. My lips gliding over his smooth hardness made him cry out. Or maybe it was the sensation of his penis bumping the back of my throat. I eased up a little to keep from gagging, but quickly dove back down when I felt him pull his hips back. I loved the warmth and sweetness of him in my mouth and I wasn't letting him go anywhere. He was mine.\n\n\"No, baby, baby, love... I'm gonna-\" another cry cut into his pleading.\n\nHigh on the endearments falling from his lips, I sank down further than before. Again his head stroke at my throat's entrance, but this time I concentrated on relaxing. I didn't have all of him in and probably wouldn't know how to for a while but, damn, was I going to love trying. I felt his fingers in my hair and realised he was trying to pull me off him as his hips began to buck uncontrollably.\n\nFuck me, his frenzied cries were hot.\n\nI shifted between his legs so that he was forced to widen them. Then I cupped his balls in one hand, rolling and firmly stroking them. And, once more, I lowered my mouth on his throbbing erection. My own, aching to be inside him, was pressed to the covers, pulsating in time with my pounding heart. I ignored it, wanting to focus solely on Ethan and his pleasure.\n\n\"Damn oh damn oh damn, I need you,\" his heels were braced as I let him thrust into my mouth and throat. He didn't jackhammer away as I'd expected, but he wasn't being slow about it either. \n\nDeliberate, that's the word. He was gliding in and out with the focus of one savouring every second and every sensation. He sought his pleasure, his climax, with determination. I lifted my gaze to find him watching me sucking and licking him. He tugged at my hair at the same time that his thrusts sped up, showing me the depth he liked. His lips started moving, but it was some time before tangible words came out. Pleas.\n\n\"Love, you have to let me- I can't- I need... I'm gonna, oh, I'm gonna...\" another cry escaped as his hips bucked faster.\n\nStill I sucked up and down the length of him, resolutely sinking the tip of his cock into the entrance of my throat, all the while grinding my own hardon into the bed. My eyes, still on his, picked up the exact moment he realised what I wanted, the reason why I resisted each time he tried to pull me off him. The very instant it dawned on him that I wanted him to come in my mouth. The knowledge made him lose control and I let him. He reared. Precum coated my tongue as he fucked my mouth. A sheen of sweat glistened on his skin, on his clenched abs. I inhaled through my nose and sank down one last time, taking him inside me \u2013 and, finally, he screamed my name.\n\nI reached up and pinched his nipples, twisting them hard as the first spurt of salty sweetness hit my throat \u2013 and simultaneously he pulled at my hair, driving the rest of his orgasm into me. I watched him the whole time, swallowing his essence and marveling at how uninhibited he was. I wanted him to feel this free all the time.\n\nHis thrusts slowed then stilled, but his breathing took longer to calm down. I watched his gasps burst from between his swollen lips. His hair was disheveled, some of it sticking to the sweat on his forehead. I grinned; I'd done all this to him.\n\n\"I told you, you have me,\" I said.\n\n\"No,\" he responded, breathlessly, \"I meant that I need to feel you inside me.\"\n\nI froze. He met my eyes shyly then slowly looked down to my erection. I wanted him. I'd had planned to take my time with him, not rush things. He hadn't been with anyone in a long time and I'd done enough reading over the summer to know we'd need to ease into sex to keep from hurting him. I'd decided to focus on romancing him for a while. But, fucking hell, I wanted him.\n\n\"I don't want to hurt you,\" I told him.\n\n\"I've wanted you for months now, Aiden. Making me wait would hurt me more than anything else. Besides, I might not have been with anyone in a while, but I do have-\" His eyes suddenly bulged and his lips snapped shut.\n\nMy curiosity was stirred, \"What? What do you have, baby?\"\n\nHis cheeks had to feel like they were on fire. He mumbled incoherently before rolling over and burying his blush in the pillows. I cocked my head at his back. This had to be good. I crawled up the bed and over him, supporting my weight on my forearms. My legs embraced his and my cock nestled teasingly on his firm arse.\n\nI kissed his shoulder, \"What do you have, Ethan?\"\n\nHe turned his face towards the windows, \"I can't believe I'm telling you this...\"\n\n\"You haven't told me anything yet.\"\n\n\"And I'd really like to keep it that way.\"\n\n\"What do you have?\"\n\n\"A dildo.\"\n\nI stared at the back of his head \u2013 that was not an answer I'd expected. Images flashed through my mind; sizzling, tantalising images that made my dick lurch. I brushed my nose along the length of his neck, inhaling his scent of sex and excitement.\n\n\"Where is it?\"I whispered.\n\n\"With my stuff.\"\n\n\"In your bags?\"\n\n\"Yes. Why?\"\n\n\"I want to see it.\"\n\n\"No.\"\n\n\"I want to watch you tease yourself.\"\n\n\"I couldn't.\"\n\n\"I want you to show me what turns you on so I can-\"\n\n\"God, Aiden...\"\n\n\"Tell me about the last time you used it.\"\n\n\"I can't...\"\n\n\"You were hot, weren't you, baby?\"\n\n\"Oh, God...\"\n\n\"Horny?\"\n\n\"Yes.\"\n\n\"You were naked? In bed?\"\n\n\"Yes.\"\n\n\"Tell me.\"\n\n\"I... I touched myself. My nipples are so sensitive, so I...\"\n\n\"You pinched them? You like a little pain, baby?\"\n\n\"Yes...\"\n\n\"What next? Tell me more, I want to hear it all, baby. What else did you do?\"\n\n\"I...\"\n\n\"You were hard?\"\n\n\"Yeah.\"\n\n\"And what were you thinking about? Tell me what turns you on.\"\n\n\"You...\"\n\nFuck. I buried my face in the valley between his shoulder blades. He'd brought me to the brink of coming with one fucking word. His scent enveloped me and I couldn't resist reaching my tongue out to trace a long line up his spine. The small tremor I felt increased the urge to taste him. I bit into his shoulder, aggressively, making him cry out.\n\nHe moaned while I explored his skin all the way down his back, but never once moved. I was mindless with wanting him, wanting to be buried inside him. I reached for a pillow then positioned myself between his legs. One forceful pull at his hips lifted them high enough for me to push the pillow in beneath him. And without another thought I buried my face in the tenderest part of him.\n\nEthan howled erratically then whimpered and pushed back at me as I licked him. It was the taste of earthy sensuality and dark spice that had me worshipping him till my jaw ached. I pushed my tongue inside him, teaching him a language of love that he babbled fervently back to me. When his hips began a primal dance, seeking satisfaction, I pushed a saliva-slickened finger into his glistening entrance.\n\nIt entered smoothly and soon I added another. I slid them in and out of his warmth, stimulating more thrusting. The way he moved was driving me crazy. I clamped a hand on his hip and laid my forehead against the small of his back. His heat made my dick jump again. Gods, my baby was hot.\n\nHe buried his face in his folded arms and spread his legs wide. Oh, fuck. The sight of his absolute surrender wiped out the last of my control. He growled at me when I pulled my fingers from their new favourite place. I smiled at his incoherent protest. \n\nThe moment the head of my erection pushed at his softness, he stilled. I could feel his breaths deepen and expand until it felt like he was keeping both of us alive. When his body welcomed me in, my cry drowned out his sighs. I slowly slid home.\n\nI pulled out just as slowly, only to push in again, harder, deeper... gods. I stroked at his center, steadily pushing faster and revelling in the increasing slickness. Looking down, taking in the sight of our joining was my undoing. Seeing him tightly wrapped around me and my cock totally buried in the man who was now my whole world, made me haul him back fervidly so I could reinforce our fusion. I held him securely and rotated my hips as my dick glided in one more time.\n\nEthan's head snapped up, \"Baby. Oh damn, love, yes, there! There, love, yes, oh! \n\nIntoxicated by the shredded cries filling the room, I intensified our rhythm, letting his fervour guide me. His passion fueled mine to the point where it felt like we were passing the heat back and forth between us. He begged me to take him, own him, and I struggled to find the words to tell him that he already owned me, body and soul. So I fucked him with all I had.\n\nHis back arched, \"OH!!\"\n\nI curled one arm around his chest, the other around his waist and held him close. He raised one arm and wrapped his hand around the back of my neck, gripping firmly for leverage. I pressed my cheek to his, thrusting ever faster as he nuzzled me. Ah... FUCK. His orgasm was a thing of beauty. His hair fell in his eyes and his lips formed endless vows as he shot his release onto the bed.\n\nI buried myself inside him and let go. Sweat trickled crookedly down the back of my neck. All that I was exploded and fused with him and I hugged him to me, hoping he felt it. Hoping he knew. Desperate for him to understand. I held him and filled him, handing him my heart again and again.\n\nWhen our strength left us, Ethan fell forward and stretched out languidly. I missed him the moment I was no longer inside him, but settled for lying on my side, facing him. His hair was like flowing ink on the white pillows.\n\nI kissed his flushed cheek, \"I love you.\"\n\n\"I love you, too.\"\n\n*\n\n\"Doesn't it make more sense to go tomorrow?\" Ethan, freshly showered, lay on the bed I'd just remade. \"I mean, there's only about an hour left before sunset. If we go tomorrow, we can spend the whole day down there. I know you'd love that, all day in the water and the sunshine and the... beachy stuff. And, by the way, aren't you a little overdressed?\"\n\nI finished buttoning up my shirt and tugged him up and into my arms, \"Indulge me.\"\n\nHe gulped, staring at my lips, \"Okay.\"\n\nTen minutes later, I took Ethan's hand and led him out the back door and across the garden. He grumbled something about turning into a beachbum as I unlocked the hidden gate that opened onto the beach trail. We were both barefoot. I watched him trek down ahead of me, noting what a strange-looking couple we made. Ethan was right. I was a little overdressed in the tailor-made charcoal pants and black shirt I'd chosen. It was the sort of outfit that would make my mother snap pictures. And it stood out even more because of Ethan's red board shorts and SpongeBob t-shirt. \n\nThe ten-minute walk felt shorter than usual.\n\nAll too soon we were at the bottom, working our way around the giant boulders that concealed the path from the rest of the beach and stepping onto the warm sand. I couldn't stop my fingers from tightening their grip on Ethan's. I was getting edgy again.\n\n\"Okay, I take it all back,\" he was looking around the little corner of paradise I'd brought him to. \"I can see why you love this beach so much \u2013 it's beautiful. I can't believe you own- What's that over there? Is that..?\"\n\nHis step faltered as he pointed towards the water's edge, \"Is that a picnic? You organised all this as a surprise? For me?\"\n\nI didn't say a word. I simply tugged him with me as I headed for the setup near the gently lapping waves. I was grateful to Dan for coming through for me as promised. All I'd asked for was a simple basket on a blanket. For the longest time, I've been hounded by the fantasy of feeding Ethan strawberries at sunset. The nearer we got to the picnic, the closer I watched recognition slowly dawn in Ethan's silver eyes.\n\n\"That's... my striped blanket from varsity! You kept it?\"\n\n\"You told me to,\" I replied simply.\n\nEthan stepped onto his old blanket and sank down to his knees. That day, five years ago, rose up around us. For countless blinks it was as real as the heat in my chest; then it all faded back into the present. The amazement in Ethan's eyes when he looked up at me spoke volumes. And I understood why.\n\nThe simplicity of my response was belied by the five-year gesture. Keeping the blanket revealed a whole lot that my words could never downplay. It showed I'd felt something on that day, despite my protests and denials. It showed I hadn't stopped thinking about him in five years. Mostly it was unmistakable proof of the fact that he meant more to me than anyone else ever had.\n\nI knelt before him and, because the timing felt perfect, I pulled the little black box from my pocket. Ethan gaped as I lifted the velvet lid. A platinum band with three black diamonds sat within \u2013 midnight and stormy grey, the hues of my love.\n\nStrangely, my nervousness left me then, \"Ethan, you have taught me so much about courage, freedom and love. You've given me life. And I want nothing more than to share all I've become with you. Will you marry me?\"\n\nHe flew into my arms so fast, he nearly knocked me over, \"Yes! In a heartbeat, yes!\"\n\nI hugged him, trying my best to breathe through the pounding of my heart. Ethan eventually pulled back and I held his ring up again. He demurely asked me to put it on his middle finger, promising to move it to his ring finger once we'd said our vows. I kissed his palm. When I showed him the date inscribed inside the band, his brow creased as he tried to work out its significance.",
        "Suddenly his eyes widened, \"Is this the date..? The day..?\"\n\n\"Yes. It's the day we met, unofficially. That's the day we kissed, the day my life changed.\"\n\nWe stayed out there until the blazing sun disappeared and the sky turned a deep indigo. I fed Ethan ripe strawberries while we talked. And when the sweet juice escaped his lips to trickle down his chin, I licked it up. He told me stories of carefree years, when he was young and his parents used to take him on trips. It was encouraging to hear him speak of happier times he'd had \u2013 especially with his mother.\n\nI continued to nibble at him while he tried to pour champagne in two flutes. He scowled at me when I made him spill some on my shirt, but didn't seem to mind anymore when I pulled my shirt off. I lay on my back, telling him the significance of this beach, while he lapped imaginary champagne splashes off my skin. \n\nMy grandparents had gotten married on the beach, one week after Gramps had bought the property. There'd been no house then, just them and their loved ones celebrating in the salty breeze. My dad had proposed to my mom here because it'd been the only place he could catch a few minutes alone with her. And, nearly three decades later, Chris had done the same with Mike \u2013 with hopes of having the same luck with love as our parents and grandparents.\n\n\"It's become a Montgomery tradition of sorts,\" I concluded. \"A lucky one \u2013 so you're stuck with me forever.\"\n\nA thoughtful look momentarily flashed in his eyes, one I read as clearly as script on paper. I knew we'd probably have a few more moments like this, times when I'd need to explain my past, reassure him of our future... reaffirm what we have. I also knew I'd gladly declare my love to him daily, whether asked or not. I brushed his silky hair back and tilted his chin up with a finger.\n\nWhen his eyes met mine I smiled gently, \"I've never brought her here. To be honest, I tried, but she hates the sun... I never even really asked her to marry me. One day she just pointed out an expensive ring she'd had her eye on and I bought it. Then we announced the engagement at the next family braai. I went along with it 'cause it seemed like the next logical step for us. To be honest, I never gave much thought to love the entire time we were together. I guess that's why it took me so damn long to realise I'd never loved her at all.\"\n\n\"Are you done?\"\n\n\"Uh huh.\"\n\n\"Good. Not another word about her.\"\n\nAn order I was happy to follow, \"Yes, sir.\"\n\n\"Sir... I like that,\" he smiled, his fingers brushing the fine hairs on my arms. \"And I'll call you my coffee-making, sunshine-addicted culinary king. Or my thoughtful, protective ocean-lover. Or my sweet, sexy Afrikaans-speaking surfer lord. Or-\" \n\nMy laughter cut him off. The stars started appearing, one by one, each matching his eyes exactly. Ethan kissed the scar above my heart \u2013 and I knew it was a gesture in celebration of life and love.\n\n*\n\n~Ethan~\n\nMy eyes opened slowly. For a split-second I thought it had all been a wonderful dream and a sharp frisson of alarm cut through me. But I soon noticed my surroundings and knew my dream was far from over. I was lying in a giant bed, facing a landscape painting of what appeared to be the Karoo. I smiled. Then I saw the ring on my middle finger, three little black diamonds winking at me. And my smile grew.\n\nFinally, I registered what had actually woken me. Aiden was trailing kisses down my spine, much in the way he had twice during the night when wanting to make love again. I was sore, but unable to restrain my reaction to his tempting kisses. Another minute of what he was doing and I'd pounce on him \u2013 and he didn't even know it... It was a pledge I made silently to my lengthening penis.\n\n\"Breakfast... sir,\" he told my left butt cheek. \"Croissants courtesy of Tannie Em. She sent them over as a welcome home gift; told me tell me you they're stuffed with chocolate \u2013 'cause you struck her as the sweet tooth type.\"\n\nI shot up, \"Chocolate?\"\n\nHe laughed, depositing a tray of croissants and coffee on my lap. The rich aroma of the coffee was invigorating. After a quick sip, I bit into a warm croissant and practically melted. There is a heaven \u2013 I'd discovered it in Aiden's bed. Thick, soft chocolate oozed into my mouth, nearly wiping away my grasp of English. Nearly.\n\n\"I'd guess that we have about twenty minutes before the calls start coming in. I sent Chris a message about us; I picked him because he checks his email at the same time every day and I wanted us to have breakfast in peace before they bombarded us with their chaos. But once he tells Mike we're screwed.\"\n\n\"You sent Chris a message? What did it say?\"\n\n\"Only the important bit: 'He said yes'.\"\n\nThe phone rang as I finished off the first croissant. Aiden put it on speaker, only to find out Mike had set up a three way call and everyone was shouting at once. Good shouting, though. \n\nGwen was crying again, I could just make that out above Mike's constant insistence on details. Greg applauded Aiden picking out a ring himself, then got cut off by Gwen demanding pictures when she heard her son had worn a shirt. She started crying again when she heard there were none \u2013 but her tears could just as easily have been for the joy she heard in my voice as I described the ring to them.\n\nOut of nowhere, Chris started unfolding the plans he'd drawn up to revamp Aiden's office and library into one large double office for us both to work in. The people I was accustomed to give blenders as wedding gifts, not renovations, so I was staggered by the gesture. I loved the ideas he was sharing, though, but didn't get to tell him that; Aiden was still being drilled about our picnic on the beach. Half an hour later, Mike concluded the call by telling us our news made her happier than the time she'd punched Carolynn.\n\nOnce we'd ended the call, I turned to find Aiden shedding his trackpants and vest like it was no big deal. The sight of him naked still made my heart pound tremendously. I had the sudden suspicion I'd never get over how beautiful he was. And I'd never grow tired of the way he looked at me. I stood and undressed, watching the heat in his eyes intensify. \n\nI led him to his oversized shower, immediately grateful for the extra room. Last night I'd teased him about the orgies he must have had in it, but this morning his huge frame made it look small enough to almost appear normal. We soaped each other, more dedicated to stroking each other than actually keeping track of how clean we were getting.\n\nWhen Aiden pressed me against the warm tiles and took my dick in his mouth, I lost it. I pushed my hips at him and buried myself as far as I could go. The way he just submitted to whatever gave me pleasure in moments like these, was the tripping factor for me. Looking down at him; knowing he had the strength to do what he wished with me; and yet seeing his willingness to fulfill my demands drove me insane. I thrust at his mouth all through my orgasm, grateful for his support when my knees started buckling. \n\nI switched positions with him so I could taste him too. I still took some adjusting to accommodate his length, but I was determined to take him into my throat. There was something about my man that I simply could not get enough of. I wanted him inside me nearly as much as I wanted to consume him. I wanted us to always be one.\n\nThe water had turned my skin rosy by the time we left the shower. I think it was me bending over to pull a t-shirt out of my still-packed bags that broke Aiden's flimsy willpower. The next thing I knew, we were on the bed again, kissing and tossing our towels to the floor.\n\nAiden towered over me, gently nudging my legs apart. I think I might've winced when he entered me, because he immediately slowed down. That made the torture so much worse. I felt every ridge and veined inch of him as he slid into me. The brilliant advantage, though, was that I also got to watch his every reaction to the sensations he felt inside me. \n\nThis time our lovemaking was far more tender than it had been all last night. Partly because I was a little sore, sure, but also because I could feel our mutual desire to connect. Seeing each other and simply opening up our hearts. Aiden reached down to stroke me when my breath started quickening, but he was too late. I was already coming. I was softly crying out his name and spurting on both our chests. When he came inside me, he told me he loved me. Again and again. \n\nTannie Emma called while we were preparing lunch. I knew because I couldn't understand a word Aiden said after 'hello'. He touched me every few minutes which, of course, meant our sandwiches would take twice as long to make. I tried to deter him by glowering but he ignored me, laughing with Tannie Em and pulling ingredients out of cupboards and the refrigerator. \n\n\"How do you speak Afrikaans so well?\" I asked once he'd hung up. \"Your family isn't Afrikaans.\"\n\n\"No, we aren't. And I'm the only one who speaks it fluently, thanks to Tannie Em. Give her a year or two and you'll be as clued up as I am. It's the only language she's ever spoken with me. And she made me read a lot of Afrikaans \u2013 poetry mostly because she and her husband love it so much. I soon found that I liked it too and started buying some of the works I enjoyed most.\"\n\n\"Like what? Which is your favourite?\"\n\nHe thought for a moment, \"There is a new writer I recently stumbled upon. I'm drawn to one particular poem of hers, especially the last verse.\"\n\n\"I'd love to hear it,\" I said sincerely.\n\nIn the breath before he began I was struck by the knowledge that something within him was shifting, some emotion, a realisation that he had a new understanding of every word he was about to share. I could see that he meant what he was about to say. It was an exhilarating awareness.\n\n\"Ek weet die belofte in jou o\u00eb\n\nis 'n stilte waarin ek kan glo.\n\nByt my, soen my; ek benodig dit\n\nas bewys van sugte, smag en begeertes.\n\nFluister my naam en ek sal ingee.\n\nVir ewig. Want ek ken jou. En ek ken liefde.\"\n\nHis green gaze had held mine the entire time.\n\n\"That was beautiful,\" I whispered.\n\n\"You didn't understand a word, did you?\"\n\n\"Nope,\" I grinned and he laughed. \"No, that's not true. I did grasp the very end: 'I know love'. The rest I understood through the emotion in your tone, that's what made it beautiful.\"\n\nHe wiped his hands before wrapping his arms around me, \"I'll teach you the rest of it sometime, if you'd like.\"\n\n\"Promise?\" \n\n\"Sure.\"\n\n*\n\n\"I'm actually very excited about getting back to work.\"\n\nIt was about a week later and we were in the kitchen and Aiden was preparing way too much food. I was telling him about an offer I'd received three weeks ago, an offer I'd been in no frame of mind to consider at the time. A major movie production house had approached me about creating online production studios on my site, studios I could 'rent out' so that people on the same venture could complete many of their project requirements wherever they were. It's silly but, more than the money, I was thrilled by the news that my platforms would be credited on the movies as 'virtual studios'.\n\n\"So that's what you've been so secretive about these last few days,\" he said as he laid large prawns out on a giant platter of salad and vegetables.\n\n\"I haven't been secretive, just busy. Because I've also finally figured out what I want to do with my money \u2013 well, some of it. I'm gonna help schools. Jordan's a teacher \u2013 I'm assured that his classroom is the only place he speaks in full sentences,\" I quickly added when Aiden cocked a brow at me. \"Anyway, he'd mentioned that the high school's computer lab was far from sufficient for the pupils' needs. I know computers. And I'll never forget how having that world to escape to, had helped me as a kid. So I want to build Jordan's school a decent computer lab. Other schools too... Why on earth are you making so much food?\n\n\"I love your ideas, babe,\" Aiden fed me a prawn, ignoring my question.\n\nThe doorbell rang before I could ask it again. \n\n\"You might wanna get that,\" he suggested.\n\nMy jaw nearly dropped when I opened the door, \"Sam? Aren't you supposed to be in Cape Town? You're really sucking at acting like you live there. How did you get here?\"\n\n\"Flew in with us, of course,\" Greg replied from behind Sam. \"Now give me a hug before Gwen gets you all wet \u2013 something tells me she's going to be crying on you two for the rest of the day.\"\n\nGwen appeared at the mention of her name, hugging me at the same time as Greg and Sam \u2013 and crying on all of us. Mike, Chris and the kids handed me a lopsided chocolate cake, hugged me and snapped pictures \u2013 all at the same time. I craned my neck and yelled for Aiden to come field some of the hugs. He approached moments later and plucked Melanie off my neck. \n\nKyle, who warmed up to me a little more every time I saw him, was attached to my waist and asking if Aiden and I were truly set on getting married in tuxedos or suits, because he'd seen some awesome t-shirts at one of his favourite stores. I turned to Chris for help. Chris grinned, hugged me, and carried on walking. Just when I thought there could be no more surprises, Dan, Peter and Justin entered. \n\n\"I hope you're okay with surprises,\" Aiden murmured beside me once everyone was inside. \"More specifically, a surprise engagement party.\"\n\nI felt my eyes prickle and could only nod in response.\n\n\"Baby, what wrong?\" he turned me to face him, noting the stupid tears threatening to fall.\n\nI had to clear my throat so I could speak, \"I think this is the first time I've ever known enough people to throw a party. It's a silly thing to get emotional about \u2013 but it's a big deal to me. I've never...\"\n\nHe pulled me close, \"It's not silly.\"\n\nAfter a quick kiss we turned to find Gwen snapping pictures. My cheeks burned. Instead of having mercy on me, she squealed with joy \u2013 and took more pictures. I turned to shut the door and hid behind Aiden at the same time. Aiden laughed and protected me from the flashing camera until we heard something thud against the door seconds after I'd closed it.\n\n\"What was that?\" Gwen finally lowered the camera.\n\n\"Ethan locked out our token straight guy,\" Dan answered from the dining area.\n\nAiden curiously opened the door again, to find Jordan carrying an enormous crate of wine, champagne and beer. Aiden laughed incredulously and I couldn't help but join in.\n\n\"A hand, please,\" Jordan pleaded from beyond the crate.\n\n\"Bloody hell, where did all that come from?\" Karin called from her seat near the oversized windows.\n\n\"'Mackin' Jordan',\" Jordan replied breathlessly once Aiden had relieved him of the crate. \"When they started the last round-\"\n\n\"-this shyster decides he wants to play along, claiming-\"\n\n\"-it was just unfair that they got to win drinks at my expense, but I never got a chance. So-\"\n\n\"-he demands a shot at 'Mackin' Jordan'. And-\"\n\n\"-won! I actually won! But there was no way I was going to settle for a few beers on the guys. Instead-\"\n\n\"-he demands the motherload. Expensive wines and champagne. The only reason we gave in was finding out he wanted bring them here,\" Justin grumbled at the end.\n\n\"What's a shyster?\" Kyle asked.\n\n\"Nothing you need concern yourself with,\" Chris answered. \n\n\"But you're supposed to teach me and Melon stuff \u2013 it's your job, dad.\"\n\n\"And I will. Other stuff. So ask me other questions.\"\n\n\"Okey-dokey,\" Melanie piped up. \"What's a 'token straight guy'?\"\n\n*\n\nIt took some time to finally get Aiden alone.\n\nThe first time I tried, his granddad was proposing a wedding on the beach and reception at the guesthouse. I liked his recommendations so much I forgot to snatch Aiden away. Next thing I knew, Kyle was feeding a prawn, pear and cake sandwich to him to prove to his sister that it was, in fact, gross.\n\nThe second time I tried, I found him in a quiet but serious conversation in the kitchen \u2013 with Sam. Something about their body language made me hesitate to interrupt. Just as I was wondering whether I should get someone to help me in case Aiden would need to be subdued, he suddenly smiled and stuck his hand out. Sam paused a beat, but shook it with a slightly bleak smile of his own. I couldn't help but wonder what that was about. \n\nAfter lunch, I was alone in the kitchen, unsuccessful plotting a plan to kidnap Aiden. One that would probably have to involve a disguise, a helicopter and a highly trained squad of professional stuntmen. Catching him alone was so damn difficult.\n\nThat's how Sam found me, pacing in circles and wasting time.\n\n\"Ethan? What in heaven's name is the matter with you?\"\n\nI froze, \"You called me by my name. You never call me by my name. I know 'cause I've been trying to get you to do it for years now. What happened? What's changed?\"\n\nHe scratched at his neck, giving me a sheepish grin, \"Aiden. He, uh, made it clear that petnames are officially a no-go area for me where you're concerned.\"\n\n\"Oh, for crying out loud,\" I blushed at my fianc\u00e9's possessive behaviour. \"I'm so sorry about that, Sam. He has this stupid theory that you're in love with me and he needs to 'mark his territory'. I'll talk to him about it. Again.\"\n\nI gave an exaggerated laugh, hoping Sam would join in and brush off Aiden's embarrassing claims, hoping Sam would help me alleviate any awkwardness Aiden might've initiated. Hoping Sam would, at least, meet my eyes.\n\n\"Sam?\"\n\n\"You know, it was the same year Red tried to tell you he liked you that I knew you'd never figure it out,\" he finally looked straight at me and the heat in his eyes snatched my breath away. \"You'd been through so much hardship that you didn't know how to recognise love anymore, even when it was right beside you, year after year.\"\n\n\"But... you're my friend. My best friend.\" How had I never seen this before? And how had Aiden spotted it so fast?\n\n\"I know, Ethan. That's all I've ever been. I realised it when I realised that you treated me the same way you treated Red, friendly but platonic. I knew you'd never shared my feelings \u2013 and never would. So I chose to cherish our friendship, instead of ruining everything with my... emotions and... desires. Shit, this is weird, isn't?\"\n\nI blinked a couple times, \"A little. Especially with you cursing more... I don't know what to say.\"\n\n\"Just don't go on about how much you value me as a friend.\"\n\n\"But I do, Sam.\"\n\nHe grimaced, \"I know you do, but right now that really sounds like the consolation prize that gets slapped on the loser to keep him from going home empty-handed. We'll always be friends, we've gone through too much together for this not to work. I'll just need some time to adjust, I guess. Aiden's perfect for you.\"\n\n\"He wasn't... He didn't, uh, threaten you or anything, did he?\"\n\nSam gave a low chuckle, \"In fact, he did. But not in the way you think. He just pulled me aside to tell he had my number and order me to stop any flirtation. He called it 'funny business'. Then he made me promise not to stay away just because he knew how I felt; threatened to hunt me down if I did. He doesn't want anything to mess up our ten-year friendship. You're lucky to have him, you know.\"\n\n\"I know.\"\n\n\"I hate to admit it, but it's true. He lights something up within you. I've never seen you this... whole in all the time I've known you. I told you someone as wonderful as you would end up with a knight in a Merc and a guesthouse on a hill.\"\n\nI laughed at that, thankful for the ever-so-slight ease that I felt flowing back into our bond.\n\n\"There you are,\" Aiden appeared, carrying a few empty platters. He dumped them in the sink and tugged me towards the back door. He turned just before we exited, \"Hey, Sam! Justin's been grumbling about doing horrendously in his chess match against my dad ever since his 'lucky charm' left the room.\"",
        "Sam was confused, \"What's that? I don't have anything of his with me. What's he looking for?\"\n\n\"Not 'what', 'who'... So you might wanna get back in there.\"\n\n\"But I thought he was losing 'cause he doesn't know how to play chess...\"\n\n\"Oh, he doesn't. Apparently this is only his third game. Ever. One he claims he'd be winning if his lucky charm were there.\"\n\n\"What absolute rubbish.\"\n\nI grinned at Sam's self-conscious annoyance as Aiden tugged me into the back garden. Secretly, I crossed fingers for him to go back into that living room. Aiden pulled me towards the pool before I could give Sam and Justin much more thought. It was peaceful and warm outside. We sat on the edge of the pool, dangling our legs in the water.\n\n\"So...\" I started tentatively. \"I finally understand what you meant by 'marking your territory'.\"\n\n\"Look, I didn't get rough with him or anything,\" he rushed to explain. \"I just made sure he understood that you're mine and happy; and that he'd respect that.\"\n\nI looped an arm around his neck and pulled him towards me so my lips could reach his. \"I know.\"\n\nHe recaptured my lips, deepening the light kiss till I wanted nothing more than to climb onto his lap and forget the rest of the world. His tongue coaxed my lips open, sensuously promising acts I wished he could fulfill there and then. I moaned when his fingertips lightly traced the waistband of my shorts.\n\n\"Aiden, wait,\" I clung to the glimmer of sensibility that suddenly struck.\n\n\"No.\"\n\n\"This is important.\"\n\n\"So is this,\" He kissed me again, hard. I opened up to him, gripping his shirt in two white-knuckled fists. After a few more minutes, I stopped caring about talking or who might see us. Aiden had a way of filling me from the inside out and making me forget anything else.\n\nBut what I had to share was important.\n\n\"I have been secretive, as you said earlier.\"\n\nHe stilled and I could feel him weighing up his options. I let out a relieved breath when he pulled back slightly; goodness knew how hopeless I was at focusing when he had his mind made up about making love.\n\nI took his hand, \"I've been busy with more than the production house proposal and the schools project.\"\n\nHe leaned back some more, seeming to sense something in my tone. \"Busy with what?\"\n\n\"Us,\" I announced. That was it; declaration made. I took the ringbox out of my pocket and held it up nervously. Once he recognised what it was, I handed it to him for fear of dropping it in the water. \"I've been going crazy trying to find the perfect ring for you. I even flew to Cape Town on Wednesday and spent the entire day hunting for it while Dan covered for me.\"\n\n\"He told me you'd gone for a walk. The whole day,\" Aiden scowled.\n\n\"Oh. Clearly I'm going to have to leave him with an actual cover story next time I ask him to cover for me,\" I laughed. \"Open it. I've waited so damn long for the right moment to give it to you, I don't know how to do this properly now that we're here.\"\n\nAiden lifted the lid and stared into the little box. He was so still, making me more and more anxious. I fidgeted beside him and still he continued to stare in silence.\n\nFinally, I couldn't take it any longer, \"You hate it.\"\n\n\"What is this stone?\"\n\n\"It's a sapphire. A small one. Maybe too small? I know it's probably dorky to pick something like that for a man, but I fell in love with it the moment I first saw it. It reminded me of the deepest parts of the sea. And the sky. And you love the outdoors. I just wanted something that embodied your happiness... because that's all I ever want to strive for from now on.\"\n\n\"It's beautiful.\"\n\n\"The jeweller said sapphires get a soft, red glow within when you hold them under incandescent light. He showed it to me. It looked like a sunset. I was pretty much sold after that.\"\n\n\"You're amazing.\"\n\n\"I'm so glad you like it. I've been sweating this choice for the last three days.\"\n\n\"I love everything you do for us,\" he said. He handed the ring back to me, \"You put it on.\"\n\n\"Wait, there's one more thing I need to show you first.\" I lifted the platinum band out of the velvet and held it up to his gaze, \"I also had a date inscribed... inside the band. It might be little presumptuous of me, but it felt right. I hope you-\"\n\nHis head tilted as he raised an eyebrow at the date I'd chosen, \"But this day hasn't happened yet. It's in September. You inscribed a date six months into the future?\"\n\nI nodded, \"I was hoping that could be our wedding date. I should've discussed this with you, I know, but it felt so right when I picked it. So I just went with it. Call it a moment guided by love...\"\n\n\"Put it on me.\"\n\nI did as he asked. The next moment his lips were on mine again. \n\nAiden had a way of kissing me that made me feel like who I was and all I did would always be enough. He opened up completely and let me explore his heart, let me see how I filled him. Love. It rose from the water and swirled around us in the sunshine \u2013 I could feel it. I held him close and parted my lips.\n\nOur guests inside the house were long-forgotten. The party could wait. I had the taste of my love on my tongue and his ring on my finger. I had the fire in his eyes to tell me he'd be whispering my name for countless nights to come. We were in the middle of a celebration of our own; a ball, a feast. A worshipping of joy. A banquet of fulfillment.\n\nAnd it was only just beginning.\n\n********END. Dedicated to RD, with love and admiration.******** \n\n~Author's Note~\n\n~ Ethan does not understand Afrikaans and, therefore, will need some help understanding the poem Aiden shared with him. Fortunately for him, that poem is available in its entirety \u2013 in English. And, as it's one of my own works, he'll be able to find it in my poetry submissions. You can too, if you'd like.\n\n~ I am no doctor. Nor do I have any medical background / knowledge. I fear such interests would cut into my writing time. So you can imagine for yourself how much thumb I sucked to come up with Aiden's medical ordeal. It's entertaining, I know, but please don't rely on any of it for accuracy.\n\n~ I am not a cop. Nor am I a lawyer. I think you might see where I'm going with this, but I'll say it anyway: I made up all the shenanigans with Mark, Captain Anton Pretorius and all other law-related persons / incidents. I, therefore, have no idea how far from reality my shots in the dark are. Please don't yell at me for my more bizarre fabrications. I know I have a vivid imagination. \n\n~Braai = barbeque \n\n~ And, finally, the fun bit! \n\nThank you. To everyone who gifted my story with their time, thank you. This, my first shot at writing, has been a learning experience I will cherish forever. Enough to take another shot at it soon. If you took the time to read, comment, vote, criticise, encourage, speculate, rant, chat via email, make threats on Carolynn \u2013 or me for creating her, send some light and love, share yourself with me... I appreciate it all more than you'll ever know. \n\nAnd I thank you.\n\nBlessings, \n\nAzanianHeat"
    ],
    "authorname": "AzanianHeat",
    "tags": [
        "gay romance",
        "beach",
        "christmas",
        "cape town",
        "gun",
        "police",
        "hospital",
        "dirty talk",
        "gay first time",
        "engagement"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/i-know-what-im-doing-ch-04"
}