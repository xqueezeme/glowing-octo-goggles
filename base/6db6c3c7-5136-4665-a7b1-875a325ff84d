{
    "title": "A Big Shiny Blue Marble Ch. 54",
    "pages": [
        "*** Meanwhile, out on the west coast...\n\nRemember the little \"Goldilocks\", the little blonde toy that Monnie keeps for a playmate? This is what starts to happen to her. It also starts out with sadness, but hey, ya get the bad with the good, right?\n\nThis one had to be long, just like the last one, I'm afraid. But things are beginning to move along as this picks up speed. If you've followed this, thanks, and I hope it's liked. 0_o\n\n------------------\n\nBook of the Forsaken Part 9\n\nBronn Qums sat in the 'office' that he'd been ordered to appear in -- at the appointed hour and on the appointed day. He had no idea whatsoever why he'd been summoned here, either. \n\nAt first, he'd thought that it was about his caseload and he thought that he'd be asked to summarize where he was in each case, so he'd prepared for that, bringing everything that could possibly be required in that event -- and it had been a ton of work to do that, too.\n\nBut that wasn't the purpose for this meeting at all. This was more like an interview for some unknown (to him at this point) purpose.\n\nHe flicked his long dark hair out of his eyes and sat back in the chair with his arms and ankles crossed, fuming a little at the waste of his time. Then he thought that the posture would be noticed and some inane and stupid body language rule might be applied, which likely told that his posture was indicative of some sort of psychoanalytical signpost which could be interpreted by one of the countless twerps who were employed for just that sort of nonsense - to waste more funding on nothing but the employment of those very same twerps.\n\nHe dropped his hands to his lap.\n\nHe was there alone. He was the sole living occupant of the room, and he spoke to someone somewhere else, likely right down the hall, he thought. It pissed him off to no end. He was an investigative agent, charged with keeping the peace and running down criminals -- of which there was no shortage in the larger Merren cities. And why was that?\n\nHe snorted as silently as he could. Because people like him were kept off the streets and out of their jobs , sitting in offices and answering drivel spewed at them by little boxes disguised as idols of the faith.\n\nEverything was about the faith, he thought, and almost nothing of what really went on had the slightest thing to do with that faith.\n\nHe was young and early in his career, certainly, he thought. But he was damn good at it all the same.\n\n\"We have a new assignment for you, \"the little box whirred from its place on the desk in front of him, \"Your caseload is to be transferred to others. It is noted that you brought everything along and that is an indicator that you are thorough, young Qums. You are instructed to leave it in a neat pile on this desk at the end of this meeting for redistribution.\"\n\nBronn bit down on his tongue right then, deciding that a silent nod would have to do in the place of the protest which he really wanted to throw up. Many of his cases were nearly at completion, and now some stupid and half-dead snerk was going to finish them and no doubt line his nest with the rewards as the clock ticked down to his or her retirement. Half of the ones that he shared office space with hadn't been outside and on the job in decades.\n\n\"You have been chosen for several reasons,\" he heard the tinny voice drone, \"You are very successful and accomplished in bringing results forward in a timely manner. You are young and energetic, being driven no doubt by your youthful enthusiasm and idealism. You are a shining example of what the Merren educational system and policing institutions are able to produce, given the right students at intake time. You-\"\n\n\"With respect,\" he said,\" I am able to produce the results which I do because I am a product of those systems. And as such, I was able to determine fairly early on -- right after I hit the streets and watched as my training mentor was killed in front of me while following the same procedures that I was taught. My surmisal afterward was that what I'd been taught was useless to me and so I formed my own methods, deciding to stay within the law while throwing the rest away.\"\n\nHe waited for the blast, but none came after the long moment of silence.\n\n\"We were about to commend you on your ability to reason and deduce patterns in criminal investigations which we interpret as your startling tendencies toward unconventional logic and thought processes, but no matter.\"\n\nBronn looked down as he smirked. \n\nIt didn't matter, he thought. You could call them on their ability to make fertilizer and they didn't miss a beat. They just made more to cover your arguments.\n\n\"In any event,\" the box rattled, \"there is one overriding reason why you were selected -- you have no dependents and no traceable family connections. That is necessary now because for the purpose of this assignment, you are going off-world.\"\n\nHis jaw dropped right then. \n\n\"Off-world?\" he asked incredulously, and the idol sounded a little smug in its reply.\n\n\"Yes. You are needed to find the cause of a set of troubling circumstances and expenses. This will take you far from your usual sort of investigations. We have reason to believe that there has been and continues to be criminal activity on a far-flung and unimportant world. But those activities threaten that world and it is believed that there is an attempt being made to shape that world so that we might be convinced to return there to extract resources.\n\nIt was decided some time ago that our efforts there be curtailed, since the world is inhabited. Efforts of this nature there would contravene The Balance. As well, this world has suffered for some time from the importation of Red demons from many places, so that the natural inhabitants there would be decimated eventually. This is a blatant disregard of The Laws of The Balance and cannot be tolerated. \n\nWe had a ranger there for a time, but he is lost to us and it is believed that he no longer lives, since we cannot establish thought communications with him.\n\nMost troubling of all are the expenses brought forward by a certain minister in our own government though they are well-buried to be sure. Our investigations have revealed that we are forced to pay exorbitant invoices sent by the Xer military for the lease of a sophisticated and unidentifiable war craft, weapons, and the wages of its crew, though thank The Balance that it is only one pilot. The cost for that pilot's service is high, nonetheless. The minister pays the invoices, but makes up the loss by skimming from other accounts. \n\nYou might imagine the howls that would be forthcoming were it known that part of the funding for the Friends of the Balance group is paying for the operation of a heavy warship which runs as a rogue across the empire on missions which only that minister thinks up and is not answerable for -- since he had not been seen for months now.\n\nThis activity has gone undetected and unchecked for a long period of time due in large part to the way that it was kept hidden from us by a pair of highly-placed officials believed to be in the pockets of that minister. As it happened, one of them passed from heart failure due to advanced age and when we noticed the undocumented expense being charged to other accounts, severe pressure was brought to bear on the surviving official. \n\nThe interrogation was very fruitful and now we wish to accumulate what is required to bring the rest of this to light. You will now be the agent for this.\n\nBronn was incredulous. \"Just what am I expected to do there, exactly? I can do the investigation single-handedly, I guess, though it would take longer with no help. But then what? I have no jurisdiction in that place -- wherever it is.\"\n\n\"You do now,\" the little cube rattled, \"As of this date, you are relieved of all regular activity to prepare for this. As well, you are granted broad and sweeping powers so that your efforts cannot be thwarted at any level. Some of those powers are in the form of personal abilities which we will bestow on you. More questions?\"\n\n\"Am I supposed to just step up to this wayward government minister and wave a set of wrist restraints at him and ask that he come along nicely?\"\n\nThe volume from the idol surprised him as it seemed to roar at him then, \"You are supposed to do what you are sent to do, Qums. See that you accumulate enough investigation to merit the cost of this. See to it that you lay it all out so that the prosecutors can smile at the indictment that will be handed down. The arrest and how it comes about is none of your concern at this point, understood?\"\n\nHe nodded slowly before he sat up and leaned forward, \"How long is this projected to last? Is there an end date as yet or a time limit?\"\n\n\"It is open-ended,\" the little box whirred in an airy tone.\n\n\"But I have do have a relationship,\" he said, and the idol ran his objection over instantly.\n\n\"We are aware of your relationship with the Watcher Jerrthi. It has been ongoing for four planetary cycles now and though we are cognizant of the attraction and the reasons for it, knowing that both of you are Grotto Dwellers and as such are a little rare, we have observed only stasis there, and you have been selected nonetheless. You had your chance to pair properly, Qums, but our need is great and it is for the greater good.\"\n\n\"So, because we haven't paired yet officially, you're sending me on a one-way assignment? You would have done this even if Jerrthi and I were a documented pair, wouldn't you? The greater good and all that, right?\"\n\nThe idol was silent then, waiting. \n\n\"Why me?\" he asked in annoyance, \"Surely my fine training doesn't prepare me for something of this nature. There must be others who-\"\n\n\"We require an agent who can think on his feet and you are able to do this -- as you have told us yourself a little earlier. You were selected in secret. It was thought that the activities of any of the regular investigative agents in an arena such as this would be noted and the individual or individuals would be warned and then act pre-emptively. As it happens, we were correct.\n\nWe have already lost seven regular agents to this. That is why we sought for a superlative agent from a different bureau who would not be known to whomever is acting to screen this from us.\"\n\nBronn Qums sank back into the chair, somehow already knowing the answer to his last question. \"Do I have the right to refuse the assignment?\"\n\nThere was a silence in the office then before the idol ground out its reply and prepared to shut off.\n\n\"No. You have one-quarter cycle to prepare and you may use any resources which you see fit. Your clearance is hereby elevated and you are now a High Merren agent. You answer only to us from this point forward. Your point of ingress will be the port of Lozenjellis. We suggest that you begin your preparations immediately.\n\nOh, and Agent, we do recognize your emotional investment in the Watcher Jerrthi and we regret the upheaval that we cause for you both. There will be allowances made for brief messages between you as you undertake this mission.\n\nYou are dismissed.\"\n\nWith the silence of the office and the weight of what had just been laid on him bearing heavily on his mind now, Bronn slowly sat up and got to his feet, absolutely stunned at what had transpired here. He walked out in a daze. \n\nAs he closed the door behind him, a panel on the desktop slid sideways and the files, documents, memory cartridges and everything pertaining to Bronn Qums's caseload disappeared down a chute as though it had never been there in the first place.\n\n---------------------------\n\nHe walked into his living unit three weeks later, needing a drink and a long rest. His head hurt from trying to digest everything that he and others had tried to cram it with. But the quiet rest of sitting and sipping only brought out more questions in him, so he sighed and walked to his personal terminal to begin. \n\nHe accessed everything known about the world where he was headed; sifting quickly before he bore in on Lozenjellis. He wanted to know about its inhabitants, for one thing. He started at the photos of humans of many sorts and decided that he'd better be able to fit in. Along with his 'High Agent' status, one of the powers given to him was a shape which could be changed rapidly to suit events and circumstances. He peered from one type of human to the next.\n\nSince there was a sizable population of various sorts of humans known to the Merren as Eastern Asiatic Human, that was what he selected, since their overall appearance appealed to him as well. He looked at that middle word and then re-accessed a series of maps of Earth that he'd been looking at earlier. Reading the sidebar, he determined that many of the names had been gleaned from human maps .\n\nWell Lozenjellis was situated in ... North America, he read. Why would a group of people -- a segment of the population be known as Asiatic? Then he nodded to himself. It must have been a point of prior origin.\n\nWith that decided at least, he accessed what he could find of one of that group's sub-cultures. He resumed his decision process for which group to pattern himself after. As he looked, he absorbed several of the prevalent languages in use there presently.\n\nHe rubbed his eyes after a few more minutes. This wasn't getting him the rest that he'd come home for, though it did a bit toward keeping his heart and mind away from his troubles for a while. Staying with the cultural angle and with the sub-group selected and it's prevalent languages (as was known to be in use in the greater Lozenjellis area at the time of the last Merren anthropological study which now provided him this study material), Bronn grazed over the type's history on the islands where they were from, originally.\n\nHe'd done it again, he told himself as he realized that he wasn't resting. He was still studying.\n\nHe accessed the human arts archives in the Merren systems and began to scan their sizable film catalog and the titles flashed past his tired eyes in a blur. Merren can gather visual data and process it very quickly and with his new abilities, he seemed to be able to do that even faster.\n\nThat was why his eyes shifted to the visual select icon to stop the scrolling to move back a little slower.\n\nHe's seen a word in a title which had given him an idea. Locating the particular film, he selected it for download and then got out of everything for the two minutes that it would take him to watch the film at Merren speed. Then he watched it again at a normal speed.\n\nHe got himself another drink and re-accessed the Merren anthropological systems, looking for material relating to that one word. He frowned, seeing that it would be a challenge to separate fiction from legend and legend from the very sparse list of known facts.\n\nBefore the great Merren Unification long ago, Grotto Dwellers had lived in, well, grottos situated in the steaming jungles which ran in a rough line along the planet's always-hot equatorial zone. The jungles themselves provided most of what was needed, but those demons were not the only predators there and though both genders are known for their speed and tenacity, there was always a substantial size difference between the sexes and the need to rear and protect their young had mandated that this type of demon stay near to their unique type of caverns. Most of the things and individuals which went there to hunt them never saw the light of the twin suns again. \n\nBut while a lone female could manage some rather remarkable techniques as she battled alone to protect herself and her young while her male was elsewhere hunting for them all, they worked far better as a team and on their own turf -- right in the dark grottoes where the rivers of steaming water ran to the great sea near the equator.\n\nWhen Merren was coming together on the long and bloody road to a single world government, there had been many rulers and other who'd had aspirations to power and sought to come out on top. Perhaps the single common warrior type to find some quiet and covert work were the Grotto Dwellers later on, individuals of both genders -- some of them quite legendary in their exploits.\n\nIt was one of the few things which pieces of Merren history shared with the families of a similar type of warrior on Earth, far back during the feudal period of Japan's history.\n\nWith this in his own familial lineage, though far back, Bronn had found this common element and had his way to hide in plain sight on Earth, if needed.\n\nHe was exhausted when he decided to sleep, but he felt a little better. He'd found a way to move through the seas of humans in that city in a human-like form and also a way to confuse any Merren that he might find there. For a little while, anyway.\n\nHe hoped.\n\nThe next morning, he washed his body and looked at himself in the reflective surfaces of the room. As what he was, he supposed that he was quite ordinary and probably unremarkable. Just a young Merren male of the utilitarian classes -- the 'doers' of the society. But he'd shown promise at an early age and so he'd been selected and sent for enforcement training and that had led to investigative training and now here he was, half a decade into a career as a glorified cop. \n\nHe smirked at his reflection then. He didn't consider himself remarkable to any degree whatsoever and he didn't think that he was terribly attractive as a male. But he'd made out alright, he grinned to himself.\n\nIt led him to think of Jerrthi again and that slowed him down with a sudden pang of regret. She was the one female that he could have seen himself with for the duration. But after their last evenings together, it became very strained between them and so it had ended at her request.\n\nIt all saddened them both because from his side of it, he'd wanted to do this right and pair with her officially long ago, but she'd always held back. As what they were, it was hard enough to even find a partner who was the same kind, though it had always been possible to pair with any other of the many sorts of Merren people.\n\nIt was just that they never wanted to, that was all. Grotto Dwellers were getting rare now and their numbers were dwindling, so it was a special thing to have found another to be in love with.\n\nThe end had been a tearful one for them both. He knew that he would likely never see her again, but he knew her schedule and that she'd be up and getting ready for work, so he called.\n\nShe looked at the image in her communicator and nodded a little cautiously, \"Bronn, is there an issue? I have to go to work.\"\n\n\"No issue,\" he smiled, \"and I am sorry to disturb you, Jerrthi. I wanted to express my sadness about us. It's not fair. I keep thinking that we should have become official before. It might have saved us this.\"\n\nJerrthi burst into tears then.\n\n\"It would have saved nothing,\" she sobbed, \"They'd have done this to us regardless, Bronn , even if we lived together and had young by now. They chose you and our love be dammed. I know the way that they work. My family has handed them my brothers and they died in the service of the Balance. If we had paired, they'd still take you from me and I would be a mother to young who had no father anymore. It is what I wanted to avoid.\n\nI work for them too, Bronn. I know what they do. I watch it every day.\n\nThey made you a High Demon, didn't they?\"\n\nBronn nodded, a little surprised that she knew this since he hadn't told anyone at all.\n\n\"They did that because the one that they're sending you for is a High Merren himself and cannot be touched by low lives like the rest of us.\" \n\nShe snorted angrily then, \"There are only allowed to be so many High Merrens,\" she said, \"an easily bestowed honor on one who they know can never return.\n\nI was reluctant to begin with you officially for just this possibility. I have no wish to be in a lifelong relationship with a male and make the required emotional attachments when there is a risk that he would be taken from me in the course of his employment. I recognize the need for your occupation, but we all know that the system serves itself and I will not take a male only to have to see him pass in the service of a society which does not deserve that male's sacrifice -- especially since he would be my male and it is the same as making my own sacrifice for them. I have sacrificed enough to them. Now they want you and it does not matter what we need or want. I love you, Bronn. I have loved you for a long time.",
        "In my eyes, you are the male that I have selected for me. I think that I know what is meant by 'open-ended'. To me, it means that I will likely never see you again.\"\n\nHe sighed and thought about it. This had been one of their problems and he could see it from her side. He could even agree with her on many points. But he was what they'd trained him to be and there hadn't been that many choices open to him. He couldn't tell her where he was going anyway, and it was only more proof that she'd been correct.\n\nHe looked at her and ached to be there with her, to hold her and never let her go. But there was no way that it would be permitted and they both knew that, so he tried to smile and it caused beautiful Jerrthi to almost crumble before his eyes.\n\n\"Please care for your health and your life, Jerrthi,\" he croaked, trying to hold back his own emotion. \"I treasure my memories of our time together and you know that I wish you only the best. If I ever can ...\"\n\n\"I will try to wait for you, Bronn,\" she moaned a little, desperately trying to keep it together in front of him, \"Try to complete this and come back to me somehow. If you can do that, I do not care if we have to live in a real grotto to hide from them, I want only you. I do not think that I will look for another. Communicate with me when you are able.\"\n\nShe leaned forward onto the bathroom counter and she began to sob much harder, closing the line when she couldn't stand it any longer.\n\n------------------------\n\nJayne was unhappy as she walked. She smirked bitterly and shook her head. No shit.\n\nAll that she had was her life and that was about it. But what was that? What had her choice given to her other than to remain alive? She was the pet of a large green-skinned and quite dead female known to her only as 'Monnie' and in order to remain alive; she had to do things for her keeper which disgusted her.\n\nMostly because of what Monnie was. \n\nIt wouldn't be so bad otherwise, she thought. If they were elsewhere and if the girl was like her -- living and drawing breath and NOT feeding her ego and spending a large part of her time seeking places where humans lived together in numbers so that she could feed her ever-growing horde of demons, they might have had something before. It would also help if it wasn't always made quite so clear to her that her 'cuteness' was one of the few reasons why she was kept in the first place.\n\nAnd if Monnie wasn't what she was and they'd met under other circumstances, Jayne thought that they could have had something nice back then. She hadn't started out wanting the affections -- or lust -- of a half human, half goblin whatever Monnie was, and she'd certainly never wanted to spend as much time as she now did with her face buried between a pair of thick and strong (and green) female thighs. But she might have found that she'd have wanted a relationship like this otherwise -- as much of a surprise as that had been to learn about herself. Of course the threat of her death had been a strong inducement at the time, she supposed. \n\nBut not when those thighs and what lay between them were as cold as they were. It was like licking a side of beef hanging up in a cooler and worse. And when Monnie wanted to do that to her, Jayne thought that it was killing her to have to look enthusiastic and keep up the charade.\n\nWhat human girl wants to be poked and prodded with a long, wet, cold -- and dead -- tongue in that place?\n\nAnd she hated how it was always held out to her that Monnie could fix this and turn her so that the coldness wouldn't be an issue then.\n\nGreat, Jayne thought with more disgust. It never seemed to occur to Monnie that her little pet 'Goldilocks' might have an aversion to being dead and having the thirst which Monnie had to constantly try to slake.\n\nShe'd had to remind Monnie -- yet again, that being here near a stadium packed with humans who would soon be torn apart and eaten, mostly while they were still alive and screaming, was not exactly her cup of tea. \"You suddenly remember me and then you have your demons bring me a moaning, dying human and you think I want to eat that?\" she'd say and Monnie would remind her that if she ordered it, Goldilocks would eat it and like it. \n\nThat had been almost her death on more than a few occasions, But Monnie had been contrite each time and now they had their system. Monnie would take her to where they were planning to eat and she'd give her little pet a few coins beforehand to go and buy herself some human food from a street vendor or wherever she liked. She just had to return when it was time to go or whenever Monnie needed her 'hot little mouth' again during or after the feast.\n\nJayne would nod and actually have to thank her benefactor before walking off quickly, knowing that she had little time before this began, thought the few hours of freedom felt great to her. \n\nThe sadness of this was killing her, though. She'd make the attempt as she searched for some food to buy and she'd try to warn people as she went that they'd better leave and soon if they wanted to live. She even told them why.\n\nNo one ever believed her and it was always the same.\n\nEvery human being would be killed in the stadium and in an ever-growing radius around it sometimes for a few days before they moved on. \n\nShe also knew that one day, one of Monnie's demons would kill her, a newcomer not having gotten the message clearly that the leader's pets were to be left alone and even protected. There had already been a few close calls.\n\nJayne looked up at the sun's position in the sky and knew that she had a few hours. She went to a little eatery which appealed to her on sight and she looked forward to a quite enjoyable meal there. But it was the people in there - the family who ran the place, which hurt her the most to see, knowing that they would be dead in only hours. She tried once again to warn them and the waitress, a girl near her own age had brought the owner -- her father - out of the kitchen.\n\nHe ran her out of there before her crazy talk could frighten away any customers.\n\nShe managed to find another place and she kept her mouth shut and found it equally unsatisfying, but she did it and then she went shopping for a few clothes, mostly schoolgirl stuff like Monnie wanted her 'little girls' to wear, and a few tight little skirts and a kind of footwear that she liked herself for their comfort called sneakers.\n\nShe shuddered to think of the way that she'd be forced to parade around and act wantonly, rubbing herself on things while Monnie watched until her need overcame her and she lunged, pulling Jayne down to lift one of her legs and rip off the pink underwear that she specified must be worn at these times. Jayne would then have to move her hips as though she loved having a dead goblin's face in her crotch. It had quite the opposite effect, no matter how much the dead goblin crooned to her and tried to make nice. Jayne knew the way of this 'relationship'.\n\nJayne wondered just how many pairs of pink knickers in her size there might be in the area, the way that she was going through them. To herself, she knew that she never wanted to see another pair again.\n\nJayne knew the risks, but she was getting tired of it all. There was no life for her down this road. What was the point? Monnie already had her 'training' another little toy, this one a young and very frightened female half Red demon, a girl who was a little larger than she was but every bit as frightened as she was of the slavering beasts which Monnie commanded. She also shared Jayne's loathing of what she was forced to do for Monnie.\n\nShe guessed that it marked the still-distant but now visible end of her road. But at least the pair seemed to like each other a lot, so that was something. She supposed that she'd have already tried to make a run for it otherwise. She sighed as she thought of it. A rather small woman like her trying to run from a vampire who could smell her blood. How absurd to even hold the hope of success.\n\nEven more ludicrous, she thought, her chances with a ravenous pack of demons on her tail who could run faster than horses could and who could also fly. Jayne shook her head.\n\nShe'd be dead inside of ten minutes.\n\nAs she turned back onto the main street which she'd been following, she heard Chan's voice and turned back to see the one that Monnie had dubbed 'Muffin' come running to her in her human form. She felt for Chan. Her mother had been raped out on the family farm by a flock of Red demons and she was the result. But their present set of circumstances did give them each a friend. Chan didn't want to be what she was. She wanted to be human. She ached to be just like her friend, though she never said it.\n\nAs they found each other there on the dirty street, Chan hugged her and asked if she'd eaten. Jayne lied and told her no, since she hadn't eaten a lot and the two of them walked away looking for more to buy.\n\n\"I bought you some clothes,\" Jayne said, \"but most of it won't last long. It's for Monnie to tear off you, but I did get you a couple of T-shirts and a pair of jeans, and I'm pretty sure that they'll fit you, too. I made allowances for your longer legs, Chan.\"\n\n\"Thanks, Jayne, you're the best.\" Chan stopped then and Jayne knew that she had to be careful now or Chan would fall into her sadness right here in the street.\n\n\"No,\" Jayne said, shaking her head, \"Don't you dare get all wet on me out here in the street. I don't have anything to wipe your tears with on me. Just, ... let's just try to enjoy the time that we have before the shitstorm starts and we have to go back so that we can make the ogre happy. I fucking hate the act that we have to put on, pretending to like licking each other for her.\" \n\n\"But ... \"Chan hesitated, \"but I like it when we do that. I hate that it's a show for her, but I like you, Jayne and I like what we do then.\"\n\nJayne sighed, \"I like it too, Chan. I try to do it for us. I just really hate that we have to do it and pretend like it's a show. I just wish that we were somewhere else and that we could just be fucking normal girls who have fun and not always have to be so careful over what we say and all that. One of these days, I'm not gonna go back after I buy something to eat and a few rags to wear. I'm gonna keep on going and try to run for it. I know that she'll probably catch me and kill me or turn me then, but more and more, I'm feeling that it's all I've got.\"\n\n\"Take me with you,\" Chan said excitedly as she stood in front of the only friend that she had in this fucked up world. \"I want to go with you -- wherever you go.\"\n\n\"I was hoping that you'd want to leave with me\" Jayne said. \"I'd feel a lot braver with you along.\" She sighed, \"I hate the way that she makes me stand there on my toes and lean against the wall with my ass out in the wind and pretend to like the way that you have to shove your face into my ass and lick it.\"\n\nChan smirked then, \"I don't mind that part so much. You always wash there for me first. I even like it a lot, but I never show how I like it. But I hate it when she says that I have to be a demon then and I know that you don't like that part. I hate being there as a demon in a skirt. What the fuck kind of demon girl does that?\"\n\nDon't worry about it, Chan,\" Jayne grinned, \"I'm getting used to you like that and I know that it's still the same person. I'd love for you to do that to me if we were somewhere else and on our own.\"\n\nThey turned and walked off then, holding hands a little, a pair of young females of two different kinds who needed each other as friends in their dark and grisly existence.\n\n\"And anyway,\" Chan said as an admission, \"I do love kissing you there and the way that it feels to hold onto you when I do that to you. I love the way that you squirm then and sometimes I really have to hang on. I only hate having to pretend that I'm only allowed to do it because she's forcing us with her threats. I wish we could just go away together and that somebody would just kill that fucking bitch so we could be free.\"\n\n\"We wouldn't have any money then,\" Jayne reminded her,\" we'd probably end up as waitresses or dancers and part-time hookers after that -- at best.\"\n\n\"I don't care all that much,\" Chan said quietly, as Jayne looked over at her friend's Oriental features. She was coming to like the way that Chan looked to her in either shape so much.\n\n\"As long as I've got you with me. It'd be worth it to me then. It would be a lot better than what we have to do now.\"\n\nJayne stopped suddenly, \"I've got an idea. We each save as much of what Monnie gives us over the next few times as we can and then we pick our moment, I guess. That time, we don't buy any clothes. We just have a quick bite to eat someplace. Just something light and then we run. \n\nWe go for maybe an hour and then we find a place to hide and sleep, like a place where we can rent a room for a night or two. Then we pay them to watch an hourglass for us and we'll also need to buy some muscle to watch the door so nobody tries to fuck us over.\n\nAfter that, we have a bath and go to sleep for a little while. I want to be with you and sleep. Just rest and sleep because by then we'll both likely be bags of nerves and worn out. If we do it right, we might have time to play a little all by ourselves for once. We just need to be lucky enough that Monnie doesn't find us the first night. Then we run farther the next day after another bath so that our scents will be harder for the demons to pick up. Every day that we run, we get farther from her and our chances get better. We'll have to get out of this whole area though.\n\nAfter that, I dunno, but I want to do it with you and maybe try to make our own lives. We might find a couple of guys and all, but I want to live that way with you, Chan. What do you think?\"\n\nThe two diminutive females stood there in the street hugging each other for a long minute, before they walked away again, each one cursing quietly a little at the way that their tears had caused them to look a little like a pair of raccoons.\n\n--------------------\n\nOn an intellectual level, the average Merren is a little brighter than the average human -- only one of the reasons why the Merren as a people owned a far-flung intergalactic empire and we earthlings never rose far above the technological equivalent of Huckleberry Finn drifting down the Mississippi river on a raft by comparison. A lot of Merren were brighter than the average and Bronn was one like that.\n\nHe wanted to be close to Jerrthi, but he knew that it couldn't be, so he did what he needed to do and what he knew that Jerrthi wanted him to do, and that was to give thought to getting there, doing this investigation and then see about getting home. But he also knew as well as she did that it likely wouldn't be an option that their employers were building into this for him, so he just got on with what he had to do and held his mind on the hope that they could at least communicate a few times. Without the option of returning home, Bronn had to maximize the time that he had before his vehicle went dark and lost power -- if he hadn't starved by then.\n\nJerrthi was a Watcher. It meant that she was one of the ones who monitored the millions of video streams from the thousands of communication and surveillance satellites over Merren and other worlds and who had access to the data streams of the billions of messages which flashed around their empire. He knew what she'd meant in what she'd told him. She would try now and then to search for and pick up on the data streams of his reports. She couldn't access the data itself, but after she'd pulled his system ID and set it into her pad of working memory, she hoped that she could message him now and then.\n\nIt was all that they had left.\n\nAs he prepared to depart for his assignment, he elected not to spend the time in cryogenic stasis. He chose instead to pack a little extra food which would keep well and learn several types of physical arts at an accelerated pace, plugging his head into the teaching apparatus on board his automated vessel and literally torturing himself by allowing it to fire the synaptic receptors required to be able to feel the movements in his body as his musculature was driven in rapid spasms by electrical impulses matching the movements involved -- literally a form of physical on the job training. He'd be conscious the entire time, feeling the way that his limbs and body would be thrown around so that when he sent the impulses from his mind, his body would respond accordingly. \n\nThis method would never be able to replace the years of training in the tried and true methods, but it could come a little close and might be close enough in a pinch. As well, he knew that just by doing this, the patterns and movements would likely allow him to re-learn what had come to him from his genetics, since he came from a long line of the very same sort of individuals.\n\nEvery 'day' for a couple of weeks then, Bronn worked himself to exhaustion in the human form which he'd selected, but as his ship neared Earth and began to prepare for entry into the atmosphere, he was going through the ritualized movements on his own. His means of transport wasn't large by any means. It was little more than a space for his practice, a place to wash and eat, a small 'office' if it might be called that and a couple of places for him to sleep. The rest of the space was given over to a little storage for clothes and some odd weaponry, food storage and engineering spaces -- as well as a bay holding three small surveillance satellites for his use on Earth. \n\nBut his genetic past had been taken into account, so every 'night', he dragged his bone-weary body off to the small spaces which had been built something like the warm and wet grottoes which lay in the past of his kind.\n\nHe came over the horizon in a low arc, electing to land at night off the coast not far from the old Point Mugu Naval station. It took the automated systems a little while, but he swung around in a wide turn and the three little satellites were set out in geosynchronous orbits before the stage which housed them was released to fall into Earth's atmosphere and burn up on entry.\n\nThe satellites wouldn't last there forever, their orbits decaying at some point. But it was hoped that he'd have his own eyes in the sky for maybe as long as a couple of years. As well, there were three of them and it would give him a rather precise way of locating things.\n\nHe slid past his target losing height as he came around and then, his instructions followed to the letter by the automated governance systems, he hovered in off the coast to settle in the water and submerge as soon as the satellite tests were complete. The craft surfaced before dawn long enough for Bronn to leave, flying inland with his own wings to begin his hunt.\n\nEach day for a time afterward, he'd return to his vessel which would surface to receive him and he'd move along the coast at night, following the leads, reports and rumors of a strange individual who left a trail of death and destruction as he searched for someone named Monnie for his own reasons.\n\nIt was how Bronn found himself submerged in San Pablo Bay, scouting around Oakland, California some time later.\n\n----------------------------\n\n\"Run along now, Goldilocks,\" Monnie grinned as she ran her hand over Chan's belly, some of Chan's blood trickling thickly from her lips, \"just come back when you know it's time, that's all.\"\n\nJayne looked over at her friend, who lay pale and at death's door, not seeing much at all anymore.\n\n\"What are you gonna do, Monnie?\"\n\nThe large woman smirked, \"What I should have done to you a long time ago. You see, Chan is very young and she's also a little uncertain of things -- mostly herself. I didn't do that to her. It's just something that was added to her, being what she was born and wanting to grow up in a human family. Her mother fucked her up this way, being half-torn herself between hating what had been done to her by the demons who caused her unwanted pregnancy and the love that grows naturally in most forms of females for the life that grows in them regardless. Chan hates showing her demon side because she found that she was treated better by her mother if she hid it. ",
        "She hates what she is, and will always want to belong somewhere. It makes keeping secrets very hard for her to do and I'm nosy and I know how to play her need to seek approval. I know when to feed her need to feel loved. She didn't want to tell me your secret but she had no choice because she's very weak as a person.\n\nSo I know what it was that you two planned to do one day soon. I've got her halfway to immortal here. I just need to feed her a little and it'll all be good. She'll be mine forever, just as you will be soon. \n\nDon't even think about not coming back, honey. It'll be your turn soon. Just not today. I might even let her do you so that the bond becomes bittersweet between you.\" She smiled, \"You'll never want to leave me again and all of our troubles will be over.\"\n\nYou ought to get going now, sweetcheeks. I doubt you'll want to watch this.\"\n\nJayne looked at Chan, whose head lolled over in her direction. The bright eyes that she loved were no longer that way, and her skin looked to be almost paper-white. The lips which had always shown Jayne love moved a little and in a moment of absolute horror to Jayne, she found that she knew what Chan was trying to communicate to her. Her lips were forming only a few words.\n\n\"I'm sorry. .... Ru .... Ru ...nn.\"\n\nJayne groaned in fear and ran out of the room.\n\nMonnie smiled down at Chan as she turned her face up to look at her, \"Now where were we, Muffin?\n\nOh, yeah,\" she smiled slowly as she opened one of the smaller arteries in her wrist, \"We'd better get started, baby. You need this now.\"\n\nShe allowed her blood to swell out of the tear in her own skin and then she brought her hand to Chan's mouth. \"Drink, baby. You know I'll always take care of you, don't you? I'll be your mother now and I'll be so much better than the one I took you from.\" \n\nChan parted her lips a little, feeling the fluid there that she knew would bring her back and give her life again. She felt her tears as she realized that even from this close up, she hated this. Her lips almost defied her will by themselves as they closed over the wound and she felt them working to suckle. But though she felt her mouth filling and even felt the tingling of what was in that blood, wanting it, and needing it to survive, she found that she still had control over her esophagus.\n\nMonnie smiled down benevolently as she watched, waiting for the moment when the temptation of the life that she was offering would be accepted and the girl would swallow and begin to drink deeply. It was so very close to being the same thing, after all. A lust to breed and mate was not very far at all from the lust to live. Monnie was soaking wet herself in this, loving her little toy so much for it. She just needed for the last moment to pass so that she could see Chan swallow to accept her new eternal life and remain a luscious little plaything, eighteen years old forever.\n\nHer eyebrows rose when she saw that Chan hadn't swallowed her gift yet.\n\n\"What's wrong, baby?\" she asked as she lifted her arm to see if there was some problem here. She knew that she had mere moments now and she wondered if there was anything wrong.\n\nChan knew that she was dying. All of her worthless life, she'd found herself the victim of her easily-broken will. Time and time again, she'd found her will turned aside by her need to be accepted. Anyone who knew this about her knew that they could get her to do anything at all.\n\nOnly Jayne had been different to her. Jayne hadn't used her for anything. What that had happened between them had been freely given by the little blonde. Chan closed her eyes and opened them again after squeezing the tears from them that she no longer had the ability to wipe away herself.\n\nShe was beyond feeling faint here. She was nauseous and so very weak. But there was one thing that she absolutely knew. There was no way that she would do anything to harm the only real friend that she'd ever had in her life.\n\nShe waited until she reached the point where the darkness in her vision threatened to overwhelm her. Chan wanted no automatic reactions in her body to betray her as her will had always done. She felt her stomach kick once and so she waited for the next spasm. \n\nAs it rose in her, Chan rode it, still waiting for just another instant. When it came to her, Chan Lin, the lost little half-Chinese human -- half-Red demon opened her mouth and spit Monnie's blood into her face. As she felt the vomit rising in her gorge, she inhaled at the perfect time -- the last instant when not even Monnie's blood could bring her back, filling her lungs with the burning acidic fluid so that there was no turning from this. With her last conscious act, she sucked more bile and vomit into her lungs and coughing once weakly, she felt herself passing.\n\nMonnie gaped at the girl. She knew what had been done and she was in disbelief. Who wouldn't want what she was offering? She pulled the limp body up to off the floor and shook if violently. But she knew that it was too late when she heard the girl's last urine begin to seep out of her onto the floor. Monnie roared in rage and threw Chan down then as she began to beat the dead body with her fist over and over.\n\nJayne was running now, dodging the humans who wouldn't ever listen to her when she tried to warn them. She even found a couple of Monnie's powerful demons as they crouched in a few dark corners, waiting for only the word to begin. But they hadn't been spoken to yet. Their queen always had some words for them before she turned them loose, so they waited for the feeling when they were summoned.\n\nJayne ran a little blindly, upset and crying over Chan -- horrified at what was going to be done to her friend and terrified that once turned, Chan might be used to hunt her. She went left instead of right, and up instead of down and before long, she found herself in about the last place that she wanted to be in this place where death and lust were about to be unleashed. She saw the door there in front of her, a little ajar as it was. An instant later, she burst in to the announcer's booth and the press gallery. By luck, it was unoccupied by the humans who lived there.\n\nJayne was stuck now as she watched Monnie out there on the other side of the glass, near the other side of the stadium. But she could see that something was wrong. Monnie stood already covered in blood and gore and in that second, Jayne knew that things hadn't gone Monnie's way with Chan.\n\nShe looked around a little frantically. Whenever Monnie was in one of her moods and wanted her pets near to her, she insisted on them being naked unless she told them beforehand that she wanted one of their schoolgirl dances for her. With no word from her, Jayne had gone in unclothed to avoid having to listen to Monnie's displeasure again. \n\nNow here she was naked except for a pair of sneakers and the shit was quite obviously going to hit the fan in another moment.\n\nShe could almost feel the way that Monnie stood there trembling in her rage at being thwarted as she hung there in the darkness, calling her minions to her to set them to their joyous task.\n\nBesides all of the other emotions roiling up in her young breast, Jayne knew that she was in a place where she'd never be able to get out of once this started and she also knew that even if she ran her life away now, she'd never make it. \n\nHer own fear and panic had trapped her.\n\nMonnie was plainly out of control now. Jayne doubted that she'd stop at what had happened and it was only a few words from her that would remove what protection that the little blonde had enjoyed. It had been dangerous enough before this. But if Monnie said those words, Jayne knew that there were many of those slavering beasts out there who would now seek her to tear her apart.\n\nShe looked around the room, as frightened as a hunted rabbit already. There were dark places in here, but she knew that they wouldn't hide her at all. The demons could smell her. They could feel her warmth. It was how they hunted.\n\nIn a dark corner, Bronn watched her. He'd seen her many times over the past few weeks and he knew who she was in all of this. He was looking at the terrified and shaking girl who was used by the leader for her own pleasure. He eased back farther into the corner, hidden by the darkness and safe for the moment in his disguise as one of the half-crazed lunatics who now surged form their own corners to heed their queen's call. \n\nHe hadn't come here to witness this. He'd seen enough of the carnage left afterward a few times already. He knew why this was done. The queen would summon more of them and finding themselves in a sea of their own kind, they'd calm down a little over their upset at the way that they'd been brought here and warm to the task of feeding on more human life than they'd have ever hoped to stumble across where they lived naturally -- because those humanoids in that far-off place knew that they were food and so they knew to act far more intelligently than the ones here.\n\nIt had been his search for the one that he sought to learn about that had brought him here because he felt that he was here somewhere, unknown to these ones and their vampiric leader. Bronn even knew by now at least a little of the reason why he'd been seeking for Monnie.\n\nThere was a showdown in the offing and this poor human female was about to become as fucked over and half-eaten as the rest. He knew that she didn't know the things that he knew, but he realized that she was the only human here who knew what was about to happen to her. He eased into a maintenance room silently and thought about it. \n\nThere was a window there which faced away from the stadium.\n\nJayne looked in his direction then. She didn't see anyone there, but she did catch sight of another door and being desperate, she ran through it and collided with something out of her nightmares.\n\nShe looked up, already drawing the breath to fill her lungs for her scream when he clamped his hand over her mouth. He looked lower and rolled his eyes with a quiet groan. \n\nJayne's fear had overrun a lot of her body's conscious control and left to its own devices, she was pissing herself in her terror. She hung in his strong grasp, shaking and urinating helplessly. Bronn knew that this was bad now. The smell of their prey's fear in their urine was a key marker for this kind of demon to follow when it hunted, never mind what it was for his kind -- the sub-species of High Merren demon that he was underneath all of this. He lunged for a pile of human clothing and produced a soft rag.\n\nHe didn't know its purpose, though it was for swaddling a human infant since the squatters who lived here had two of them, but he clamped it over the girl's mound and held it there as she emptied her bladder, her eyes as wide as saucers as she looked up at him.\n\nWhen he saw that she'd stopped, he threw the sodden thing through the door and closed it before reaching for another few to wipe her off with. At that moment, the outer door crashed in and one of the real demons pushed through with a second one behind him. If it hadn't already begun, Bronn knew by this that it was only moments away.\n\nBronn pushed Jayne against a dark wall and he reached into a pouch that he wore. When his hands came into view again they were as blurs and there was a buzzing sound for an instant before the first newcomer gasped loudly and groaned. The second looked around and saw Jayne then as she shook violently where she stood. He stepped forward and his body fell over to the floor in one direction and the top of his head fell off in another. The demon who had entered first straightened and inhaled to roar out his pain and rage as he tried with shaking fingers to pluck the metal pieces from where they stood embedded in his chest and face. A thin whipping sound preceded his collapse on top of the other ones' body. \n\nWith a kick, Bronn rolled the body over and he tore out the metal stars that he'd thrown. He shook them once and they went back into his pouch while he turned and reached toward the frightened human.\n\nJayne was almost catatonic in his grasp now, fearing almost to breathe and she found that she had to will herself to gulp in some air as she looked at something darker than everything else in here while he looked out through the window at the night sky and considered. \n\nThe glass seemed to glow then and in another moment, it sagged and ran like a thick liquid to lie in glowing puddles on the floor, beginning to start little fires where it touched anything combustible.\n\nLooking back at her, he spoke then, the words meaning nothing to Jayne, but she did hear a sense of quiet urgency in them. He looked around and saw that the room was often used to hang up washing and he looked along the line at what was hung there. He grabbed a knapsack which had been sewn by a mother for her young girl to resemble a happy animal with legs which would flop along behind the child as she walked. Bronn flipped it open and he stuffed as many articles belonging to an even older child into it as he could for a few seconds.\n\nThat done, he pulled Jayne to him and he shook it at her, wanting her to put it on. She reached for it with trembling hands and she did as he indicated, very confused now but wearing a knapsack over her nude body. She squeaked a little as he wrapped her in a blanket roughly and hefted her to hold her against himself with one large hand as he used the other one to grab the frame of the window and step up to squeeze them through the opening. Thankfully, it was a double-wide window and they were through the hole in a second.\n\nAll that Jayne could see around her out there was a long way down. She squeaked again as his feet and legs launched them through the last of the way. Jayne waited for the fall, but it didn't happen and they were gone in slightly bobbing flight as his large wings bore her away at dizzying speed.\n\nShe was frightened again as she hung in his tight two-handed grasp now , the wind roaring past her ears. In a few seconds, they were away from the stadium and racing low through the streets, dodging wires and clotheslines which she couldn't see though he obviously could. Every time that she opened her eyes to look, she regretted it almost instantly and she closed them again after a few seconds of more terror. She found that she preferred not seeing where they were going.\n\nBesides, it helped her to think.\n\nIn time, she began to reason a little and it surprised her, as upset as she still was. Something was very different here. She'd seen that when the demons began their feeding, there was little greed between them. If one of them was busy with one screaming human, he or she didn't try to hide the meal away at all. If a second or even a third joined in, there was no anger there. She'd often seen one of them fucking one person while a second one began to feed on the same screaming human. That was what she'd witnessed with her own eyes many times.\n\nWhat had happened back there, then? Was this demon trying to carry her away to feed in a quiet place? They never did that. And what would he want the other clothes for? Why had he held out the knapsack to her?\n\nJayne looked up then at his face. The expression was hard to read in human terms, but it looked to her like an expression of intent concentration. He looked down at her once very briefly and she whimpered in fear then, hiding her face against his chest. She thought about how she'd come to be kept by Monnie and then she thought about her young husband and the way that he'd been sucked dry of his blood by Monnie and thrown out through a window as though he was garbage to her. \n\nShe thought of what she'd had to do in exchange for her life and the way that Chan must have died. \n\nHer tears came then and she wept.\n\nBronn looked down again for a moment and saw the wet streams from her eyes. They weren't anything alike and he didn't belong here at all, but he wasn't just an unfeeling lump of flesh. He gently tried to move her forward a little and he held her face against the side of his own for a little while, wanting her to see that he didn't mean her any harm in this.\n\nJayne turned slowly in his grip, seeking a little more comfort and she looked up at him again. He didn't look quite so frightening to her now. He even seemed to have been trying to comfort her though she couldn't really be certain of it. Hanging upside down as she was, she needed to think any planned movement through beforehand , but she decided that she was held tightly enough to place her head against his chest near his collarbones.\n\nWhat she heard there against the backdrop of the wind was a sound that the attributed to his muscles as he flapped his wings. But she knew that she was wrong after a minute and she thought that it must be his heart beating.\n\nShe hazarded a look forward and she could see that they were out over water now and sinking lower. There wasn't much moonlight but it looked to her as though they were heading for a ... a frame of some sort which seemed to rise out of the waves there in the darkness ahead. There was suddenly more of the thing to be seen, though Jayne had no idea what she was looking at as he slowed and flared to land on a wet surface while still holding her. He touched a control plate and a doorway opened to a dark passageway. They stepped into that and the door closed behind them to the sound of quiet pumps and motors. The room was suddenly lit brightly and he began to speak in unintelligible words then.\n\nShe heard another voice asking questions and the way that he replied told her that he was issuing some sort of commands as he walked, still carrying Jayne deeper into whatever this was.\n\n\"Were we pursued?\" he asked the controlling systems in the High Merren tongue and he was told that there were no airborne threats noted and that nothing had followed them.\n\n\"Good,\" he replied as he walked, \"Make our depth so that we encounter no obstacles and are too deep to be reached. Take us out to sea and set us down on a stable and calm stretch of the bottom. I need to process what I've learned .This human with me was about to be killed. I do not know what to do with her as yet, but I hope that I can glean something. She will likely require food and liquid before then, so prepare two servings, please.\"\n\nThe automated controller mulled this over for a moment before asking what sort of food the creature might require and he smirked then.\n\n\"Something warm, bland and harmless. As far as I know, these creatures eat much the same things as Merren do. Prepare whatever you think best, but I think that it should be something which does not still have its legs attached.\"\n\nShe felt the change as he walked on. He was growing smaller and there were other changes to be seen when she looked up at him. Jayne only stood about five feet, two inches and as he'd been back there in the stadium, he looked to be about eight feet tall and very ... demonic to her eyes.\n\nShe gasped as she stared at him now. She was being carried in the arms of a very human-looking male, with Oriental features who looked at her from deep brown eyes out of long black hair with a lot of concern showing through.\n\nIt was all too much for Jayne. She'd been faced with a demon who'd looked as though he was one of the ones whom she was in terror of and for good reasons. Yet he'd looked a little different then all the same and he'd sure acted differently.\n\nWhat she was in fear of wasn't especially smart in any regard, being little more than highly efficient predators -- something like sharks. But this one had taken her away and brought her here -- wherever this was. She knew that he operated on a technological level far beyond her own and she struggled with it. She had no outward frame of reference, but she knew that this home that he lived in was under the water of the bay at present and she also knew that it was moving, though rather gently.",
        "She'd barely come to grips with the fact that she could allow him to hold and carry her and now he was doing this while in the shape of a human? A naked one?\n\nShe began to shake and tremble again and he set her down in a bit of a hurry in the large shower stall just as she felt her dignity leaving her again. She hadn't even had anything to drink since the last embarrassment and here she was, standing on shaking knees and pissing in fear again.\n\nHe pulled the blanket from her gently and she slowly collapsed to her knees on the smooth surface, her fear running out of her in spite of her mind's commands to her body that it stop. She fell in a heap then, bawling for several reasons, none of which made the slightest sense to her now, but shame was in there somewhere and playing a large part.\n\nBronn looked at her and spoke another word that she didn't comprehend, just like his instructions to someone as they'd walked in. She heard a word of acknowledgement and the lighting dimmed from its former brightness to something a little more comfortable.\n\nJayne didn't know it, but like this, he could see her even better without the glare and he knelt close to her as he regarded the one that he'd saved from a terrible end. \n\nAs she cried, he found that he liked her on balance, hoping that they could eventually get to some sane conversation. He hoped that she could tell him a few things about Monnie, since pretty much all that he knew about her was what she was and that she ruled the growing flock back there.\n\nHe looked down and smirked a little to himself as a thought came to him. It hadn't been intentional, other than his feeling a want to get her out of there, but as he looked at the small female, it came to him that, other than the obvious differences in her body to his, she was rather close in stature and body shape to a female Grotto Demon. She just wasn't one, that was all.\n\nIf she was one, he'd have to admit that she was strikingly lovely. But that wasn't the issue at hand, he decided.\n\nFirst, he had to get her to calm down and at the moment, she was hyperventilating. \n\nHe moved forward on his knees, smelling the warm scent of her fear as it ran toward the drain. He gave another quiet command and the water began to spray down in a warm and very gentle mist after the system acknowledged what it had heard from him. When his hands touched her very carefully, Jayne reacted and screamed, trying to fight him off desperately.\n\nHe'd guessed that this might happen, but it couldn't be helped and he strained to hear some kind of speech from her so that he might know how to respond.\n\nOh, he heard words from her alright, but it was a while as he struggled to figure it out.\n\nHe spoke to her softly in Japanese and she quite obviously didn't understand him. He tried some of the other languages that he'd learned and he failed rather spectacularly, seeing the way that she remained upset and struggling with him. As he tried to restrain her just a little, it came to him that she wasn't anything like someone who could normally belong to any of the groups which spoke those languages, so he tried others; Spanish, for example, and he saw that she understood a few words before he finally tried English.\n\nThat got him somewhere. Her small fist hit him in the eye, but he saw that she did understand him.\n\n\"Stop,\" he said to her quietly, \"I did not get you out of that place to bring you here for this.\"\n\nHe grabbed her then and he held her a little tightly, trying all the while to show her that he meant no harm to her.\n\nHe held her close to him and he kept up his gentle words into her ear. It was a long while, but he did get her to a point where she stopped struggling with him and she just cried softly.\n\n-----------------------------------\n\nThe flock was excited. It could be seen in the many pairs of gleaming eyes as they hung flapping in the air or sat perched on anything nearby to listen. There was another hundred or so of them now and those ones looked around themselves and were welcomed by the ones already here. \n\nMonnie was still supremely angry over the incident with Chan and there was a part of her that she recognized in herself which just wanted to say 'Fuck it' and be very specific in adding Goldilocks to the death toll by very pointedly omitting her usual instructions that she was be left unharmed.\n\nBut as she turned to see all of her flock, twisting slowly in the air and her mouth opened to speak, she was seized from behind in a pair of large and incredibly strong arms. She tried to fight it off, but it was plain that what held her had strength far surpassing her own.\n\n\"Hello, dearest,\" a voice grated in her ear as she felt the hot lips against her throat, \"It is good to see you once more. Shall we begin again where we left off before you left me to perish in that burning hole under the ground?\"\n\nMonnie's eyes widened and she fought harder, but she felt herself being restrained by more than only physical force and she groaned as she found herself pushed over while still being held up as he entered her roughly, right there in the air in the middle of a stadium full of humans and surrounded by all of the demons.\n\nMonnie groaned as she felt him begin and she knew that she'd tasted the last of her freedom. She called out to her minions for their help, but as soon as she saw them all clearly, she knew that she'd lost them.\n\nThey were his flock now, just from the thought that he sent them. A lot of them were even pleased at what they watched as many of them reached for others of their kind, and it didn't seem to matter to them which gender the one that they found for themselves happened to be. Excitement was what they craved and the lust which grew out of the promise of more excitement easily knocked down the barriers of sex and hunger. The feast was on and as soon as they'd gotten a little satisfaction, they'd drop out of the sky to begin on the humans who now stampeded shrieking from the dark mass writhing above them.\n\n----------------------\n\n\"What -- What are you going to do to me?\" she asked as she'd gotten a little calmer.\n\nHe tried very hard to remind himself of the prevalent speech patterns commonly used by people who spoke this language, \"To you? I won't do anything to you. I'd like it if you'd wash yourself and then we can see if any of the clothes that we took in the bag might fit you so that you feel better. Are you hungry? I'm having a meal prepared for us both.\"\n\n\"Who are you?\" she asked, \"You -- you're not a demon like I thought you were, so you're probably not a man like this now, are you?\"\n\nHe rose a little slowly then, taking her along as he stood up, the two of them under the warm mist. She began to fight him a little again, but he didn't allow it, though he wasn't especially forceful with her. He was mindful of the effect of her helpless urination on him and he knew that he didn't want her to turn toward him completely now. \n\nThere was no way that she could understand why he was hard at the moment. To what he was -- the Grotto Dweller, what she'd inadvertently done was to toss him a sign that she was receptive. He knew that she wasn't at all and he understood it all clearly, and anyway, it was only one of the signposts which a receptive female of his kind showed -- though it was a strong one.\n\nBut his body didn't think at that level, so before there was any more frightened confusion from her, he picked her up and held her as one might pick up a child, holding her head near his shoulder so that he could speak to her calmly -- hoping at the same time that his erection would subside before they ran out of things to talk about and really hoping that she didn't swing her right foot and bump it into what stood out from his body now.\n\n\"No,\" he said quietly, \"I'll tell you anything that you'd like to know and then I'd like it if you could tell me about that Monnie female and what she does. I won't hurt you and I understand how terrifying this has all been for you. I couldn't help the way that a lot of it went. I just knew that you had to get out of there.\"\n\n\"Where are we?\" she asked, pulling her head back to look at him and thinking that she liked this body or whatever it was that he was in at the moment, \"What is this place?\" She was still afraid of him, but at least what he looked like now was better than what she'd seen before.\n\n\"This is a ... \"he wondered how to say it for a moment, \"Well, call it my home for now. Right now, we're underwater and moving slowly to get out of the bay and go a little deeper. I want to get us -- you and I, out of the bay and into deeper water so we can hide better for a little while. We need to do that because there was someone else there near the place we left and I don't want him to know that I'm here right now.\n\nBut let's start somewhere, alright? How about a name? I'll tell you my name and we'll go from there. My name is Bronn Qums. What's yours?\"\n\n\"Jayne,\" she said, \"Jayne with a 'y'.\"\n\nJayne thought about his name and she thought that he'd said 'Coombs' as his surname. That's what it had sounded like to her.\n\nHe looked at her a little curiously, \"I had to study the humans around here a little, and I think that 'Withawye' is about as unusual a name as my own must be to you.\"\n\nShe looked at him, still upset to a degree, but a little intrigued and rather surprised at him and she wondered most of all perhaps why she was in this shower or whatever it was with a naked human man and why he wasn't ... \n\n\"My name isn't ... what you said. That's how it's spelled. There's a 'y' in the middle of my first name. My last name is Mazenkowski and you still haven't told me what you are yet,\" she said and he apologized.\n\n\"I am a demon,\" he said a little uncomfortably, \"I'm just not like ones back there. I can shift shapes a little. I was there like that as a disguise, you might say. Right now like this, I'm trying to keep you from being frightened and I think that I must be failing at it at least a little, but I'm afraid that if I show you how I usually look that you'll be frightened all over again -- and I don't want that. I did take you away from where we met, but I'm here to hunt for another demon. I just need to know if you can help me by telling me what you know. I wasn't there to harm you.\"\n\n\"If I help you, what will happen to me?\" Jayne asked.\n\nTo her amazement, he smiled and she had to admit that he did have an effect on her. He stepped forward with her under the stream of the water and reaching for a tub of soapish fluid, he began in an awkward way to wash her a little.\n\n\"Nothing bad, I promise you. We can eat and I hope that you like what my home prepares for you.\"\n\n\"Prepares?\" she asked as she tried to slap his hand away from her breast, \"Your home? How many of you are there here?\" She squirmed a little as he went on washing her gently, \"And why are you doing that? I can do it myself.\"\n\n\"I'm alone here,\" he said, \"this is all just ... machinery and systems to provide for my comfort and survival. I just tell it what I need and it does the rest.\" He stopped and looked at her then, \"Jayne, I don't know how to tell you this any other way. \n\nWhen you were so frightened, you did what must come naturally to someone like yourself -- humans. I mean, and you made water. I don't think I can explain it all to you, but I need for the last traces of that to be off you. We'll both feel better then.\"\n\nShe'd been looking down at his chest and throat for a few seconds, feeling shame for what had happened again, but now she looked up, \"I -- I couldn't help that.\"\n\n\"I know,\" he smiled, \"and there's no harm done. That's why we're in here.\"\n\n\"Well let me do it then,\" she said, \"I won't have to worry about you dropping me and where your hand is right now isn't even polite.\"\n\nHis eyes widened then and he gasped, \"I'm very sorry. Of course. I'll set you down, then. Please forgive me. I didn't know.\"\n\nShe found herself on her feet again, knowing that there wasn't anywhere for her to run, so she tried to concentrate on washing and reached for the tub of liquid that she'd seen him use. \"No harm done, um, Bronn. But it was way too familiar to a girl and I don't know you. I can see that you're trying to make me feel better, but that was just too much. I don't really want to feel THAT much better right now if you know what I mean.\"\n\nShe saw the look of shocked horror from him as he realized that he'd broken what must be a social barrier to her, but she smiled a little at him, \"It's ok for now, but people don't just meet and start groping each other, most of them, anyway. I understand that you didn't know.\" He turned away then and began to wash himself feeling embarrassed. She saw it and smiled as she turned away.\n\nAfter a moment, she risked a look over to him and he was still facing away from her, washing himself, so she hurried with it, though from what she saw, she didn't mind all that much as she looked.\n\n\"If we're underwater the way that you said,\" she began a little cautiously, \"then I guess that there's no way that I can run from you, is there?\"\n\n\"No,\" she heard him say over his shoulder, \"but you won't have to. After this, I'll make sure that you're warm and dry and in some clothing that might fit. I see even more reason for the clothing that humans wear. We can eat and I'd like to ask you questions. After that, if you really want to go, I'll fly you to land and you can leave. But what I'd much rather do is take you nearer to Lozenjellis, since there are less ... Monnies there, though I don't think that there will be much of a threat to you from her now or soon.\"\n\n\"What do you mean?\" she asked.\n\n\"The demon that I'm looking for. He was there at that place. I could feel him. I don't know why he wanted Monnie so much, but it was why he was there. I don't know if he knows about you and I doubt that he'd care much, but it's better for you if you're somewhere else.\" \n\nHe held up his hand and asked a question toward the ceiling. There was a pause and she heard some speech as a reply to him and he said, \"We can be there in two days. Would that be alright?\"\n\n\"I don't know,\" she said, \"I guess so. I don't have anything to my name and the clothing that I saw you grab is meant for a girl of about twelve. I'm twenty-two. I know I'm not very big, but ... well, I'm getting a little tired of always having to look cute. Clothes like that sure won't help, even if they fit me, which I sort of doubt.\"\n\nShe found that she had to explain it to him a lot better, but he did get it, becoming fascinated at the concept of fashion in the clothing which humans wore.\n\n\"Well, what do you wear where you're from?\" she asked.\n\n\"Nothing, for the most part unless the surroundings require it, such as working in an office. Why were you without clothes most of the time when I was watching you with Monnie?\"\n\nShe looked down at her sodden sneakers, kneeling suddenly to take them off and wash the insides of them before setting them aside. She drew a breath and sighed, \"That was how she wanted us to be, mostly, Chan and me.\" She looked up then with wide eyes herself a moment later. \"You saw us?\" Jayne turned away from him with a groan and she wanted to die.\n\nThe thought also caused her to remember her friend and she began to cry once again, finding that she couldn't help it.\n\nThe mist of warm water stopped and he was on his knees in front of her, wrapping her up in a large piece of fluffy fabric which she guessed was a towel of some kind. She'd just never seen or felt one this soft before. Jayne was surprised at the concern that she saw in his face, though she did like the way that he seemed to want to comfort her and even seemed to want to pamper her a little for some reason. As he worked at drying her, she admitted to herself that it felt really good and she allowed it, while sneaking little glances at his body when she could. It wasn't what she'd meant to do, but he was there, close up and she found that she couldn't help it.\n\n\"I know why you were kept near Monnie,\" he said, \"so you do not need to feel this shame that I see in you. I see that there is more that you have to feel sadness over, but you do not need to feel shame. I do not know many things about humans. I only learned what they were very recently.\n\nSo when you are ready, \"he said gently, \"Try on what clothing that you find gives you comfort and then walk that way,\" He pointed and she saw the heavy human-looking muscles in his arm, \"I will be waiting for you there and I have a hot meal for you.\"\n\nShe looked up and thanked him, \"Do you know what happened to Chan?\" she asked and he nodded slowly, \"I was there in the room when you ran out. I came to look for you later. I did not want for it to happen to you. The other human perished. I believe that it was what she wished for herself.\"\n\nJayne looked at him a little hotly, \"No it wasn't. I know -- knew Chan. She wouldn't have wanted to be what Monnie is.\"\n\nHe nodded, \"I did not mean to say that. I saw her perish, I think by choking of her own bile in order to escape the other fate. I am sorry.\"\n\nJayne nodded and looked down, grabbing the edge of the fabric to wipe the new tears which came to her eyes. Bronn stood then and walked out.\n\nHe sat thinking, lost a little in his thoughts and trying to sort out what this day had brought for him to learn when he looked up from the table and saw her.\n\nHe had to fight off the need to smile at her more than the caring expression that he wished to show for her comfort and well-being. He knew by now what she'd meant when she told him what 'cute' meant as a concept, but he almost couldn't help himself.\n\nShe was standing there with her long, light hair cascading wetly over her. He liked the soft curls that he saw in it but he knew that she wasn't comfortable that way, standing as she was with the child's knapsack held before her like a shield with its limbs hanging over her arms as though she held up a small pet of her own.\n\n\"None of it fits,\" she groaned, \"I can't get into any of it, really.\"\n\n\"No matter,\" he smiled, \"Come sit and eat.\"\n\nShe wanted to shake her head, but she knew that he'd already seen all of her long before this point and, well he'd had his hands all over her too. Besides, she was hungry now and whatever it was that she saw there smelled really good to her. She saw and guessed that it was some kind of roast along with vegetables which she couldn't identify any more than she could make out what the main course was, but it smelled a lot like roast beef to her and so she came a little closer.\n\n\"That looks and smells like roast beef, \"she said.\n\n\"Close enough,\" he nodded as he stood up to hold a seat out for her. It had no back and was only four legs and a curved, padded place to sit on, \"The animal is very much like the cows that I have seen illustrations of here.\"\n\nShe nodded and wondered about how to get her butt onto the chair while hanging on to the knapsack. Then she thought about how she could even eat like that.\n\n\"You do not need to hold that,\" he indicated with a nod, \"only move your hair to cover yourself if you wish. I will try not to look at you for the sake of your comfort and I have not harmed you yet, have I?\"\n\n\"No,\" she said as she did what he'd suggested and tried to climb up onto the seat, \"that's true, I guess.\"\n\nShe felt foolish as she sat with her feet dangling a little and she looked around the table, \"There are no forks here.\"\n\nShe had him there and had to explain what the utensils were and how they were used by humans. He thought it a little strange. \n\n\"We use two knives,\" he said, \"one shorter than the other\". She watched as he demonstrated, so she did the same. After several minutes where they ate in silence, Jayne's questions about him began to tumble out. Somewhere in his explanations of what he was and why he was here, he learned the things that he wished to know from her. ",
        "\"What's this drink?\" she asked at one point, indicating the larger cup near to her left hand.\n\n\"Water mostly,\" he said, \"though it also has flavoring in it and there is a little alcohol, though not much at all. The cup on the other side holds water. If you wish, I also have a little milk. I know what that is and we drink it as well, but what I have is powdered and must be mixed before drinking it, though it comes from the same animal as the one on your plate.\"\n\nJayne tried the water, but found it tasting flat. She nodded and lifted the other cup to her lips, smelling a little cautiously for a moment. \"This is beer -- or very close to it,\" she grinned a little.\n\n\"Ah,\" he smiled, \"Now I know what the word means. I'd read of it and assumed that our drink is a little like that, but I hadn't made the connection.\" He sighed a little, \"I was only given a little time to learn the ways of a world of people of many kinds. I see that I have much more to learn. Do you wish for something else?\"\n\nShe shook her head with a smile, \"Don't you dare. This is really nice, though it tastes a lot weaker than what they sell in the city. I do like it though, Bronn. Thank you and this meal is amazing as well.\"\n\nThey sat and ate and talked, the gates finally open between them. In that time, she'd managed to wheedle and whine at him enough to get him to show her what he really looked like and though he sat looking embarrassed himself after changing to that shape, she told him that she liked him this way best of all and she laughed at him over the way that he looked slightly confused.\n\n\"Well couldja stand up?\" she asked, feeling a little of the drink, though she was aware of it, \"I can't see all of you with the table in the way.\"\n\nHe stood up for a moment and she stared at him with a wide smile, \"Oh yeah, I definitely like this one the best.\" He turned around briefly and she giggled at his back end and the slightly shorter and much more slender tail on him then. \n\nShe was raising a knife to her lips with a piece of meat on it and she gestured with the utensil for emphasis, \"Nice ass, Bronn, \"she grinned, \"REALLY nice ass you've got there.\"\n\nHe sat down then and leaned on the table toward her, \"I do not understand. What is an ass, and why is this shape more appealing to you than the others?\"\n\nShe thought about it for a minute, \"Do you know what a horse is?\"\n\nWhen he nodded, she said, \"There are smaller kinds of the same sort of animal. A pony is smaller than a horse, and a little smaller than that is what used to be called an ass. Nowadays, we call them donkeys. The back end of a donkey looks something like a larger version of the back end of a human, so that's what we call our rear ends -- asses.\n\nI like your shapes,\" she smiled, \"They're all appealing to me, Bronn. But then, I'm a little used to being around demons. When you were in the first shape, I thought that it was all over for me. That's why I was so scared. When you make yourself look like a human, well, you're really good-looking then, but this, ... I dunno. This way is just so, ... \"\n\nShe wanted to say 'sexy', since like this; he really was to her, but she didn't want to say it that way. She was also surprised at how she was having a fair bit of fun here with him, naked as she was here and all. \"You're just really nice to look at this way to me. I like them all, but this way is the nicest to me. You can do what you want and change back, I guess, but I think I'm saying that if it was up to me, well then I think that I could just look at you like this all day.\" \n\nShe set her knives down and shrugged, holding up her palms a little helplessly, \"I guess that I mean for right now. The truth is that even when you look a little nuts - so tall and strong, I like it now and I've never seen a guy who looks as nice as you do as a human either, though you're a little tall like that. Do whatever you want. Just don't mind me if I drool a little.\"\n\nHe laughed then and suggested that it must be the drink and she nodded, adding that right then she didn't care. After the day that she'd had, it was a nice touch to feel a little relaxed. \n\nThey found that they enjoyed each other's company a lot more after that. He now knew all of the things which had happened to Jayne and he told her that he felt that it had all been unfair and unwarranted, the way that her male had been murdered.\n\n\"We were together since we were kids,\" she said, \"I just got used to him and he did take care of me, so we just kept going. He could be a bit of an ...\n\nJayne had wanted to say 'asshole' right then, but she decided not to confuse Bronn any more than he must already be, so she smiled, \"Well, he sometimes didn't think too much about what he said or did. I guess that I might have found somebody better for me, but he was there and he took care of me. I think that I'd have had to go a long way from where we lived to find somebody better.\" \n\nShe asked about what he was doing here and why -- specifically. Inside of his explanation, she saw a little of his sadness and asked about it. What she heard shocked her.\n\n\"You mean that you can't ever go home?\"\n\nHe shook his head, \"No. It's a class thing. It wasn't planned for by me, and I could not refuse or they would do things to me to make me regret my refusal for as long as they then would keep me alive and in pain. They always get what they want.\"\n\nShe shook her head at how awful it sounded, and then she had a thought. As it settled into her completely, she gasped a little, \"Oh, Jesus. Was there somebody that you loved back there? It sounds to me like they wouldn't care much about that, either.\"\n\nHe nodded slowly and looked up with a phrase. She didn't understand it, but he was commanding that the systems access the vocabulary of other languages then. When it responded, he looked down in thought for a moment.\n\n\"What it the current time of day on Merren?\" \n\nWhen he had his answer, he looked up again, \"Show me the view from the desk camera of the Watcher Jerrthi if she is on duty, please, but if she is active at her post, do not call.\"\n\n\"Our communication raft is up on the surface now and what you wish can be accessed,\" the voice said, \"but there is a delay due to the distance and there may be issues with image quality. You will not have long for this before the rotation of this planet makes the communication fail. It will be better again in ten rotational segments -- almost half of one day.\"\n\n\"I understand,\" Bronn said slowly, \"Please make the attempt for me.\"\n\nA holographic screen appeared to them at one end of the table and in a few moments, Jayne saw a female of his kind as she worked, looking at her own display before her. She was as alien to Jayne as Bronn was, but she was incredibly beautiful nonetheless.\n\n\"The Watcher Jerrthi,\" Bronn indicated with his hand, \"She and I were paired, though we never made it official. Now we are both unhappy and she looks this way whenever I look at her, as though she is ready to weep at any moment.\"\n\nJayne stared at the image, as slightly jerky as it was in the movements that the female made and she knew that the image quality was poor. As different as this was to her, Jayne could see that the person there was not large either, looking to be about the same size as she was, though there were other features there which the two of them didn't have in common. \n\nAfter a moment, Jerrthi looked up at a corner of her huge display and she moved her hand to sweep it over to the center.\n\n\"Disconnect, please,\" he said, but the system replied that it was too late. \"Watcher Jerrthi is among the very best of the watchers, \"it said, \"she is already running down our identification and it is too late. She will know in a moment and what we see is delayed.\"\n\nJerrthi stared at the screen, \"Bronn?\" She issued a series of verbal instructions and Bronn's system said, \"She has her lock and knows who we are.\"\n\nBronn nodded, \"Allow her a visual, then,\"\n\nThe short conversation that Jayne witnessed then was a little heartbreaking to watch and she heard her name in what was said as Bronn indicated Jayne with his open palm. Jerrthi looked at Jayne for a second and gave her a bit of a sad, but smiling nod. Jayne saw that Jerrthi's breasts were a little smaller than her own when she leaned closer to the screen to try to see a little better, and she also saw that she and Jerrthi looked rather similar in some respects, but at the end of it, the other person peered at her screen for a long moment and said a few more words to Bronn, ending the transmission with a brave smile and then they were out.\n\n\"She's so ... \"Jayne began but her words failed her. \n\nIt caused Bronn to smile a little weakly at Jayne and he nodded, \"She said the same of you. She is leaving to go to her home. I am sorry now that I disturbed her. She is distraught, but I managed to give her a brief version of who you are and that you are helping me.\"\n\n\"I wish that I could have told her how sorry I am for what was done to you guys,\" Jayne said, \"Such a beautiful girl, and those dark little horns that she has, like they came off a black goat, just like yours there. I wished right then -- as soon as I saw her face that I could have known her, close up, like in the same room and not I dunno how far away. \n\nHe looked a little uncomfortable then for just a moment and then he added, \"I told Jerrthi that you are intelligent and she likes this, and asked if you could read. I guessed that you could and she said that she would prepare something for you -- a presentation about what we are, her and I. She thought that if you would be here with me for a time, that you would soon become bored in this small craft and with nothing to do. She hopes to send you something to keep you entertained if you have an interest as she thinks that you might, from the way that you looked at each other. She asked for the name of the speech that you prefer and I told her so that she could use the translational filters.\"\n\nThey were a little quieter for a time, but she found that she had a really big reason to feel thankful, now that she knew Bronn. \"I want to thank you for what you did for me tonight,\" she said, \"I'm sure that by now, all of my troubles would be over.\"\n\nHe reached for what looked to be a plate of glass, but as she watched him, she saw that it was a way to enter things into his systems as he began to prepare a report on the day in his journal. \"It was what I could do for someone in a bad place,\" he said, though he didn't smile. \"I am happy to have met you through it. What will you do when you are back on land?\"\n\nShe frowned for a moment, \"I don't know. I never saw any of my family again after the night that Monnie grabbed me. I can't imagine that they'd have survived it. The demons are very thorough and they never leave anyone alive -- even if they're full. I don't really have anywhere to go, Bronn, so I can't say.\"\n\nHis long fingers flew over the glass and he spoke to her at the same time, \"I would imagine that in the very disorganized culture that I have observed here, a female has few options -- a lot fewer than she'd have where I am from. You would be best to seek for a male somewhere. Failing that, you would have to find some occupation so that you could feed yourself, I would guess.\"\n\nShe watched him for a time and then he looked up at her for a second. Both of them stared at each other and it came out of their mouths together all jumbled up, since they were saying different things.\n\n\"You could --\"\n\n\"-stay here with you?\"\n\nThey stopped then and tried again after a second.\n\n\"I'd have to be careful, to manage --\"\n\n\"I don't eat much and I'd try to be useful --\"\n\nThen they smiled at each other, \"We're both all alone here,\" Jayne smiled, \"and I find that I like being with you. I'd like to think I've made a friend.\"\n\n\"I as well,\" he smiled, \"and we have no lives to return to, do we? Please stay, and at least we will not be so lonely. You can teach me how humans are. I tried hard to learn, but there is only so much that one can absorb in so little time and I was not given anywhere near long enough to learn what I needed to know. You are very complex people.\"\n\n\"Oh, it's worse than that, Bronn,\" she laughed a little, \"I'm a girl. Humans don't come any more complex than that.\"\n\nHe grinned and nodded as he plowed through his journal.\n\nIt was a little later when he led her back to a place near the shower, since she'd told him that she had to pee again.\n\nHe pointed to a fixture roughly similar to one that she'd seen only rarely in her life and none of them worked in the way that she now understood, modern plumbing being a thing of the past now. She'd always thought that they were a curious and very hard seat to sit on.\n\n\"You just sit there and go,\" he smiled, \"then you press this and it's gone and you will find clean water over there in that receptacle there to wash your hands. I will leave you to it so that you have privacy.\"\n\n\"Wait, \"she said, grabbing his arm, \"Where does it go? I mean, we're underwater, aren't we? You can't just throw it out the window like you do back in the city.\"\n\nHe looked at her a little oddly and said, \"No. I suppose that I could request that it be pumped out, but that is not what normally happens. It would be processed and purified for re-use.\"\n\n\"For ... re-use?\" she asked and he nodded. Jayne understood then why the water had tasted so ... like nothing. Purified meant that everything was removed, no matter where it had come from. She guessed then that even water from the finest-tasting spring would taste flat after that.\n\n\"I think I'll stick to the beer,\" she said, adding that she could guess where the water for it had come from as well, \"I'll get used to it, Bronn,\" she smiled, \"I just don't have to be thrilled about it,\" she said as she began. \n\nShe didn't think much of it, since he'd seen her do this under a lot more unpleasant circumstances, but she saw the look on his face and began to apologize. \"I'm sorry. I guess I must look a lot more crude than I thought you must already see me. Give me a second, Bronn. I'm very sorry if I've offended you.\"\n\n\"I am not offended,\" he said as he turned away, \"You should not do that in my presence. I should have mentioned it before now. I will wait for you outside.\"\n\nJayne was embarrassed again, cursing her lack of manners. She had thought that if anything, what she'd done might show him that she trusted him now. She pressed the control that he'd indicated and her yellow by-product was gone a second later in what looked to be a slightly fascinating process to her. She dashed to wash her hands and almost ran out through the doorway, nearly colliding with him.\n\n\"Please explain, Bronn,\" she said looking up with her eyes pleading, \"Don't tell me that I've wrecked this so soon.\"\n\nHe shook his head and tried to smile, \"It was not wrong, the fault lies in what I am. The people where I am from are comprised of many sorts of what humans call demons. We use the word as well, though it has none of the dark overtones which it seems to carry for humans. What Jerrthi and I are is getting rare now and I guess that before too long, we will all be gone as a type. We come from caverns and jungles and used to make our homes in the darkest of places for safety. There is water everywhere in those places, rising up hot from the springs, made hot as it is by the heat from the center of the world.\"\n\nHe looked away then, not wanting this to sound any worse than he knew that it likely would to her.\n\n\"Come with me,\" he tried to smile and he led her back into the room. He asked her to sit and then he explained a few of the other features of the device, leaving to stand facing out of the doorway when she'd gasped at how pleasant the stream of warm spray felt to her now.\n\n\"Well this is nice,\" she announced brightly and he finally laughed a little.\n\n\"In those dark places, we made our homes so that they could be kept clean very easily and one of the reasons for it is because, ... well,\" he said a little uncomfortably, \"I suppose that a human female would be the same. If she had a male whom she liked and wished to mate with him, then I guess that it goes best if and when she is feeling very safe and comfortable, correct?\"\n\nJayne looked over at his back while she got down and dried her bottom end with a towel, \"Oh yeah,\" she nodded, \"if she wants to enjoy it at all and is given the chance for it. Go on, Bronn.\"\n\nHe looked down at his feet then, \"I don't know beyond the barest minimum that I read of it, but I think that a human female would exhibit signs to that male of several sorts so that he might recognize what she was hopeful for.\"\n\n\"Sure,\" she chuckled, \"Not screaming in fear and running away would be one and yeah, there are a few others.\"\n\n\"Female Grotto Dwellers in the dark exhibit likely the same signs,\" he said, \"It is astounding to me how very similar our kinds are, Jayne. But when she wishes to show that she is ready, a female such as Jerrthi does something which the male would know that she would not do otherwise.\n\nIt does not affect the cleanliness of the place, since a little more water would remove it and there is water all around there, so the female would show that she is completely relaxed by doing the same thing as you seem to do when you are frightened out of your wits.\"\n\nJayne stared at his back then, \"You mean, she pees herself?\"\n\nHe nodded, still facing the other way. When she saw it, she knew that she must have looked like an idiot right then, staring into space in shock.\n\nHer comment took Bronn a little by surprise then when she said, \"Well yeah, I guess that it would mean that she really was relaxed and feeling safe. Other than today, I'm not anything like that. Usually, I couldn't go to save my life at a time like that, looking at demons and all. Back there, I dunno, I just let go, somehow. You mean, she just gushes because she's relaxed?\"\n\n\"No,\" he said quietly as he shook his head, \"She does it much more slowly. A male Grotto Dweller interprets this behaviour as what it is; her want of him in the most pleasant way, since he knows that it is something that she would never allow him to see otherwise. She might even have a hole in the floor in her home for it. If she does, she would likely show him as she does this. \n\nThat is why I was very uncomfortable when you did that in your fear. I knew that it was not arousal, I am not stupid, but the sight affects my body and makes everything worse. I am sorry, I suppose that I must seem even more primitive to you now. That is how we are seen by the majority of the other kinds of Merren.\"\n\nHe felt her hand in his as she came to him, \"Don't worry about it. There are some things that we're different in, that's all, and I think that I kind of like primitive anyhow, not that I ever gave it much thought before now.\n\nNow that I know, I'll try to respect that about you. Let's not wreck a fine evening over something like that.\" \n\nThey were almost back at the table when she nearly floored him with her question, \"So that's why you picked me up in that shower thing? You didn't want me to see your stiffy?\"\n\nHe looked over at her, \"What is a --\"\n\nShe nodded, \"You were as hard as a stick. There wasn't any way for me to miss it. You might be a big-assed male demon in some ways, Bronn, but I'm a girl, aren't I?\n\nI've been around a lot of those big bastards that Monnie was bringing and I saw quite a few of what they have, not that I'd ever want one of them. They just fuck and gnaw, often at the same time. There's not a lot of expectation for a human girl beyond the end of her life at their hands. We would kind of like to survive it afterwards, kind of like that relaxed and comfortable thing we were speaking of earlier. Hard to relax if you know you're going to die.\"\n\n\"I have heard it said of that kind that they are all ... well, large,\" he said a little uncomfortably as he brought them each another beer.",
        "\"So what?\" Jayne asked, \"It's only nice if you can have a reasonable expectation to be alive the next day,\" she said as she nodded in thanks and picked up the full cup of beer. \n\n\"And you can't go by the size of their horns,\" she said with a definite air and she took a long swallow.\n\n\"You can't?\" he asked.\n\n\"No, I love your horns, Bronn and they're not big at all, but they sure say something to me.\n\nShe shook her head a little, \"Not an indicator at all. There's no correlation there.\"\n\nMmph!\" she exclaimed as she took the cup from her lips and wiped her mouth with the back of her hand, \"That's just a legend,\" she said, \"Probably started by their females to cover their own disappointment. Well have you ever seen one of those girls looking happy? I know that I haven't.\n\nNope,\" she said, \"what those boys all have is fat, but it's short. I've had to watch, remember? Both sexes are miserable in that bunch. Maybe that's why the males kill everybody -- out of their frustration that they can't really get far into anybody and the girls kill everybody just 'cause. The only ones who even looked a little happy were the ones who could get a male human to get hard. They liked that, but as soon as he was done and had gone soft ... WHAM! No head. \n\nNo such thing as gratitude with those girls. So just remember, it's not the size of the horns. When you're like this, your horns are like a pair on a young goat. I really like them a lot. And for what it's worth, from what I saw, you got no worries, Bronn.\"\n\nShe took another sip before what she'd said got through her own slightly fogged and happy brain and then she looked embarrassed yet again.\n\n\"Come on,\" Bronn smiled as he put his arm around her shoulder, \"It's been a long day. I'll show you where you can sleep. If you really want to stay, then we'll need to go to shore anyway somewhere tomorrow and get you a few things that will fit you.\"\n\nThey parted at the door to a very small bedroom. Jayne put her arms around Bronn's neck and she stood on her tiptoes to stretch up and kiss his cheek softly for a moment before she hugged him and stood with her cheek against his chest for a minute.\n\n\"Thank you again, Bronn,\" she smiled from behind her closed eyes, \"Our lives suck, but I'm so glad that I met you.\"\n\nShe watched as he walked away and then she repeated her appraisal of his bottom and went to bed, the bed and the whole room looking bright, clean and antiseptic. With her head on the pillow, she thought about how close she'd come to dying. \n\nShe felt sad for Bronn and Jerrthi for what they'd lost and then she thought of her husband and then eventually, her thoughts turned to Chan for a moment or two. They were two girls, but she was sure that they could have been happy. She forced her mind from her dead friend and thought of Bronn again as she felt herself starting to drift off. They'd seemed to have started to become friends, she thought and she decided that this time, she'd just concentrate on that.\n\n------------------------------\n\nJerrthi sat at her home terminal and typed through her tears. As she thought of what she wanted to say, she was poring over documents on the Merren version of the internet, grabbing files which related to Grotto Dwellers and embedding them into her presentation. She was still heartbroken over the way that Beyet had been taken from her and sentenced to death off-world by a government that didn't deserve to rule over a fungus farm, in her opinion. But now that she'd seen that there was a chance that he wouldn't be alone there, she felt at least a little better. \n\nIt would help her with her choice a little later on, when she was over the loss to her heart enough so that she could function again, and yet still not over it enough to give her pause when she disappeared to join the underground. She'd lost something so valuable to her and she knew that she'd never find another one like Bronn, but now she wanted to see the rotten government which could do things like this with impunity toppled. Without her male, this was something worth devoting her empty life toward.\n\nShe went to bed then, thinking about the lovely creature that she'd seen there with Bronn. She hoped that they'd be happy together.\n\nWhen she got to work a little early the next day, she decided to log on the system and insert the tiny memory drive that she'd bring with her. As what she was, she was one of the very few in there to have the right to use a drive such as this on the system. She'd upload her package to Bronn and it would go to the front of the buffer for rapid scan and priority transmission at the right time.\n\nThe thought crossed her mind that it might be examined in a random scan, but she smirked to herself then. If anyone asked, she'd tell them that the package was for her boyfriend -- the one they'd sent on a task and exiled for nothing but loyal service to them. \n\nShe'd tell them that she was just sending him a few pornographic videos of herself. She was the highest Watcher there in terms of her skill and what she was doing wasn't illegal, specifically. Lots of lovers did this for the ones whom they loved if they were separated for business purposes, for example.\n\nBesides, what could they do to her? They had given permission for the two of them to communicate with each other.\n\n------------------------------\n\nJayne found that sleep eluded her after the many minutes of thought. What made it worse was that she even knew what it was and she was angry with herself for feeling such foolishness. Finally, she got out of the crisp and clean-smelling sheets to pick up her knapsack. \n\nHe was nearly asleep when he felt her eyes on him. When he opened them, he saw her standing there peering in through the 'rocks' at the entrance of his sleeping area, looking a little lost again and so ... cute, now that he had a word for it.\n\n\"Is something wrong, Jayne? \"He asked her and she even looked as though she couldn't decide what the correct answer was right then.\n\n\"Yes,\" she said and he waited for her to elaborate.\n\n\"No,\" she said then and she squirmed a little visibly from behind her knapsack, holding it in front of her once again, though it hid little from him.\n\n\"How about 'sort of', \"he offered with a soft smile and she nodded a little uncertainly then.\n\n\"I can't sleep,\" she said and he could see that she felt stupid over it. \"I used to always have my husband next to me. After Monnie took me away, I didn't have anybody to sleep with because she slept in the daytime. She wasn't good to sleep with anyway, always pawing me the way she did. I was so scared every night at least sometime. I slept with Chan after Monnie took her and I liked that and I guess I got used to that, but ...\n\nI had a rotten day until you came along and since then it's been so nice and I had so much fun with you and ...\" \n\nBronn had to smile at her warmly while she chattered a little nervously at him. He knew that she wasn't a little child -- not even close. He also knew that she hated being forced to look cute on the instructions of this Monnie who had kept her, and it was something that she had to do to be able to live and eat. He got that.\n\nBut she sometimes WAS a little cute in spite of herself, and in the oddest sort of way, he found that it appealed to him more every time that he saw it in her.\n\nSo she needed someone to sleep with. He thought about his situation and he needed someone to sleep with as well. Maybe he could sleep properly then.\n\nShe bent a little so that she could see him better in the low artificial cave entrance. \"Would it be alright if I slept in there with you, Bronn? Humans always like to have somebody to sleep with, well if they have somebody they know and like them enough for that, and I think you must be the same, aren't you? I don't think I snore. Chan would have told me if I did, and she never said a word to me, ever and -- \"\n\n\"Just come here, Jayne,\" he groaned, \"and bring your ... pillow there.\"\n\nShe stopped then and blinked once. \"Can I? You mean it?\"\n\nHe nodded with a small yawn, \"Yes.\"\n\nShe was beside him like a shot, placing her knapsack down and then she was in his arms, smiling with her eyes closed. It felt a little strange to him, but he liked the way that she was against him. She moved only once to get herself settled and then she was quiet, her soft breathing having a very calming effect on him almost at once. \n\nBronn Qums had to smile as he willed his erection down. \n\nIt steadfastly refused to obey him. \n\nBefore he knew what to do or say, he felt Jayne's hand there, moving him underneath her as she carefully placed her leg over his waist and asked him if it was alright to do. He opened his eyes again and looked into hers then, liking what he saw in her shyness.\n\n\"We'll figure this out tomorrow, alright?\" she whispered, \"Just tell it to be a good boy for tonight.\" She stretched up a little and kissed him on the lips softly for a long moment. \n\n\"Thank you again, Bronn. We don't know anybody but each other and, ... well I think you're wonderful. I've been naked with you all evening and now I can't imagine us not being like this, so I kind of think we need each other.\"\n\n\"I think you're right, Jayne,\" he whispered, \"This feels better to me already and I don't mean because of --\"\n\n\"Shh,\" she whispered back, \"I know. I think we ought to try to live like this if we can and take care of each other if it works, though right now, I can't imagine it not working. Can you?\"\n\nHe shook his head a little and told her that he really wanted this to work. The look that she returned to him made him sigh and then she placed her head against his throat and listened as her soft sigh escaped her. It felt so good to him. By the time that he'd processed that, he noticed the shift in her breathing.\n\nHe had to smile at that and with a warm female in his arms, he closed his eyes and drifted off after her.\n\n--------------------------------\n\nWhen Bronn awoke, he found Jayne still with him. He was on his back and she was lying on his chest, looking down a little at him with a soft sort of smile. It had been the best that she could do, though she'd really wanted to get a little more height for comfort. But doing that would have meant having more weight on him and she didn't want to disturb him by moving at all, so she settled for what she could get.\n\n\"What are you doing?\" he asked with a smile, and she smiled a little wider, \"I'm just looking at you.\"\n\nShe reached out and he felt her hand , \"I really love your horns,\" she said slowly so that he'sd know that she'd meant it, \"To me, you're beautiful, Bronn, and I've never used that word before in describing a man. I'm trying to imagine why humans always talk about demons looking evil or vile or something. I can't see it. I think they must have been talking about the other two kinds that I've seen, the nasty ones and the bigger, REALLY nasty ones.\"\n\n\"But not me?\" he asked, his smile not wavering.\n\n\"No,\" she said, \"To me, you look just as good as a handsome human man. If it wouldn't freak everybody out, I was just thinking that, well, it's a really nice feeling if a girl is out walking with her man, especially if they've just gotten started and everything. She feels a little proud, of course, but that's not all of it. She just feels ... good then. \n\nI'm probably not saying it right, but I wouldn't mind walking with you as you are right now, even though we're not more than a couple of friends. I don't think I'd care what anybody thought. It's just that some fool would run to get a bow to try to save me or some shit like that.\"\n\n\"No, I understand,\" he said, \"We are the same under those conditions. A male feels a little pride but it is mostly that they are together and can enjoy the day.\"\n\nHe stretched a little and it suddenly came to him that he'd woken up hard and he was only just noticing it now because of course, he needed to pee, but there was something else. \n\nWhat he felt was a ... a comfortable erection, very warm and pleasant. He thought that his surprise must have shown in his face because Jayne nodded to him a little then. \"That part of you has been up for a little longer,\" she smirked, \"So when I felt that and saw that you were still sleeping, I sort of made a little room for it. I'm holding it between my legs. You don't need to worry about it at all. I'm keeping it warm until you decide to get up -- and probably pee. That's what Terry always had to do when he woke up.\"\n\n\"Terry was --\"\n\n\"My husband,\" she nodded.\n\n\"This is still the best shape for you?\" he asked.\n\nShe stared a little as she felt him shift and he was the human then. It made her laugh, \"I wasn't expecting the way that I'd move along with you when you did that. I can't decide now, and the really weird thing is that I know that it's still you. But I'm still good either way, Bronn.\"\n\nThe next thing was a little unsettling for her at first as she found herself lying on the much larger demon then. He was still under her looking up a little expectantly to hear her comment, \"And now?\"\n\nJayne really laughed then, \"You'd better stop, you know. Every time that you do that, I get moved a little and I'm really starting to like the way that this feels. I'm already doing my best not to rub on you as it is. We'd better get up and pee or I don't know what'll happen. I like you any way that you can be, I guess.\"\n\nShe rolled off him carefully and asked why the floor was so soft.\n\nHe shrugged, \"In the caverns which this space is supposed to mimic, the floors are just hard smooth stone. I don't know how it was done, but the material here is softer, yet it is still seamless and they have put a drain here where the best caves have a hole somewhere. I guess that it must be that they thought that I would have to urinate in here. I found a small control here on the wall. It causes water to run, I guess to wash the floor. \n\nIt's a nice thought that they had for my comfort, but why would I ever do that? As I said to you last night, that is a sexual aspect. To put this here for a male who is expected to be alone until he dies only shows their ignorance.\"\n\nHe watched her hips sway as she went to use the strange appliance in the bathing area and afterwards, she fished through her sack, looking for the largest clothing that had any chance at all of fitting her, since they were going to go ashore. She saw it when he urinated, and she guessed that it must not be a very private thing for his kind of people to do. \n\n\"Bronn, she said, \"Help me out a little. I understood what you said last night about, ... well, about peeing. But it's not a sexual thing for you now, is it?\"\n\n\"No,\" he said, only realizing then what he was doing, \"I've just thought of this and I'm very sorry.\"\n\nShe chuckled, \"it's ok, Bronn. I guess you're just comfortable with me. I was just asking because I saw you doing that. I'm not grossed out or anything. Besides,\" she smirked, \"I wasn't lying. I think I really could look at you all day.\n\nI have seen a man do that, you know. I always thought that it was funny when I'd hear other girls talk about a man peeing and how it turned them off.\"\n\nShe looked down then and grinned a little so he asked. \"I was just remembering myself when I was just starting out with Terry. We went to look for a quiet place because we wanted to try fucking for the first time.\" She looked up at the ceiling and laughed, \"I said two things to him that still embarrass me today to think about. We sat down on his bed side by side and I looked over and said, \"Ok, make it hard.\"\n\nBronn chuckled at that, nodding, \"What was the second thing?\"\n\n\"Oh,\" she said, grinning by then, \"I guess that I completed my display of ignorance then. As he moved to get on top of me after I was on my back, I had a worried thought and I guess my face must have shown it. He asked, and I sort of pleaded with him not to pee inside me.\"\n\nBronn laughed then, \"It cannot be done.\"\n\nShe nodded, rolling her eyes, \"Well I know that NOW...\" \n\nShe shook her head, still chuckling, \"I guess that was when Terry knew that he had a real winner there under him. Of course, a little later, I had a wiener in me, so it was all good.\"\n\nShe had to explain what that term meant and the two of them laughed together until the arrival of a message caused them to stop for a moment as Bronn went to read it. He came back then and held out one of the glass boards to Jayne.\n\n\"It wasn't much more than an acknowledgement for the receipt of what I sent to them last night,\" he said, \"and it also contained a letter to me from Jerrthi. She promises to send a few more, but she also sent something for you. \"\n\nJayne's ears perked up at that. \"What did she send?\"\n\n\"Can you write as well as read?\"\n\nWhen Jayne nodded, he passed his hand over the glass and the characters changed to English on the board, \"I've put it on this for you. Just move your fingers over the touch pad at the end here and you can read it when you want to. Touch here and the nearest display will appear to show you. If you want to reply, then just ask me and I'll show you how to do that.\"\n\nJayne nodded and tried to open the message. She found navigating this so very easy and intuitive that she was flying through in no time and had to remind herself that Jerrthi had sent her this to keep herself from boredom on a slow day. She saw that there were embedded video segments and there was also a box titled 'security'. Opening that, she found a brief message about setting a temporary password right away. With that done, Jayne opened a document titled 'personal' and after reading for a few moments, she closed it again, her eyebrows nearly up to her hairline.\n\n------------------------------\n\nThey were off the coast near a little place called Cayucos before the dawn. When the first of the sun's rays spilled over the hills to the east, they were walking down the main drag together, a young and beautiful pair of humans looking for a place to have breakfast. Jayne felt a little ridiculous in stupidly tight clothing that didn't match, but it was the best that she could do, so ...\n\nBoth of them were feeling better today, though Jayne caused a few dark clouds for a moment when she expressed her sadness for Bronn and Jerrthi again. \"I feel as though I know her now -- at least a little. I want better things for the few people that I know.\"\n\n\"I'm still sad, Jayne,\" he said, \"but there is nothing that can be done about it. I cried whenever I went to bed on the way here and my wish is that Jerrthi finds someone else for herself and stops weeping for me as though I was already dead. I have a hope that he be someone who lives outside of the ever-watchful gaze of the government.\" \n\nHe looked out to sea at nothing there as he continued, \"And I hope that he gives her young. Jerrthi always wanted to have many little ones, since there are so few of us left.\" He blinked then as though there was something in his eye, \"Even one less than before, with me here.\"\n\n\"How long will you be able to use your home before it fails?\" she asked him, \"You said that it will fail after a while, right?\"\n\n\"About two years of this time,\" he replied, \"maybe a little longer. It depends on how cheap we are with things like lights and travel. But it won't fail all at once and there will be signs and warnings beforehand. Why?\"\n\n\"I just wanted to know how long I had to teach you about living here,\" she said.\n\n\"What is this beverage?\" he asked, \"I find that I like it very much.\"\n\n\"It's coffee,\" she grinned, \"It doesn't cost much. We only need to buy a small bag of the ground kind, and we'd need a pot and a strainer to make it. Then, a little sugar and some of your powdered milk and you can have that whenever you like. I'd make it for you if you show me how to work the way that you heat food.\"\n\nThey'd been sitting very close together so that their conversation stood a better chance at not being overheard. Jayne looked over of a moment and then she kissed his cheek softly."
    ],
    "authorname": "TaLtos6",
    "tags": [
        "demon",
        "werewolf",
        "goblin",
        "vampire",
        "investigator",
        "cop",
        "watcher",
        "cavern",
        "military",
        "ninja"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-54"
}