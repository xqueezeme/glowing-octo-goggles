{
    "title": "It was a Dark and Stormy Redux",
    "pages": [
        "Apologies to Edward Bulwer-Lytton, Washington Irving and Snoopy...\n\nAuthor's note: This is my entry for the 2020 Halloween Contest, definitely written as an attempt at Humor and Satire. There's no deep, philosophical meaning... just having some fun with stereotypes. I hope you enjoy it, regardless of the contest, although voting and constructive comments are how I know how well I am pleasing you, the reader. Cheers!\n\n*~*~*~*~*\n\nIt was a dark and stormy night...\n\nWell, actually it was. But I suppose I should back up a bit.\n\nIn my defense, I didn't do it. I didn't create her and I couldn't get rid of her.\n\nI suppose I could have sold the house and land, and it would've solved my problem, or maybe it would have, but somehow that just didn't seem right.\n\nShe was Jacqueline Marie Albright Raczynski, French-English wife of Count Wilhelm Aleksander Raczynski, a Polish nobleman who had emigrated to the Americas in the 1700's and had become important in the banking and military supply trades, eventually providing horses and materiel to his countryman, Kazimierz Pulaski, among others.\n\nShe was also the victim of uxoricide.\n\nApparently, she caught her husband in the arms and other parts of one Elizabeth Adelstone. Rather than risk damage to his reputation, his wife surprisingly died in her sleep shortly after the discovery. So did Elizabeth. All from natural causes, of course, if one can call crushed cherry, peach and apricot pits mixed with crushed Nux Vomica seeds and blossoms \"natural.\"\n\nI got all this after regaining consciousness, after my first meeting with Countess Raczynski.\n\nIt was a dark and stormy night... I think I said that already. Okay, so it didn't start out as a dark and stormy night.\n\nI'd inherited the land and buildings, such as they were, from an uncle I had never met, and it would be charitable to call it a farm, although the deed referred to it as such. I had an appointment with the bank and the lawyers on the morning of November 2nd, and I was expected to be familiar with the property and ready to sign a bunch of legal waivers and such.\n\nWhen do I find out about this? Friday, October 30th, at work. So what do I do? I leave after work on the 30th, throw some clothes and sundries in the car and drive all damn night, 15 hours plus stops from Chicago, getting to the property mid-morning on the 31st. Did I check ahead to see what hotels were available? Did I think about restaurants? Or grocery stores? Did I... well, obviously not.\n\nSo I eased down the long, overgrown lane to the house -- for want of a better word -- surrounded by collapsing split rail fences. I pulled into what I supposed was the front yard and parked, getting out to take a look around. If it wasn't prime South Carolina real estate just outside Jamestown and with a lot of potential, I probably would have gotten back in the car, driven to town and sold it to the first person to make me an offer.\n\nThe operative word here was potential. The place itself was falling apart. I took my cold coffee with me as I checked out the house. It might have been nice in its day. In fact, it probably was. Classic fieldstone foundation, thick cut timbers, shake shingle roof... what was left of it. Most of the siding needed major help, and a bunch of wild animals would have to be relocated. It had the basics of a living room, dining room and kitchen, and some kind of indoor plumbing -- probably septic -- on the first floor, with a stairway that led to a second floor. That's where I found the bedrooms. A big one I presumed was the master bedroom and three smaller ones.\n\nI got intrigued by some of the furniture, I'll admit. There was a really nice old half-canopy bed in the master bedroom and some fairly solid simpler ones in the other bedrooms. There were marble-topped commodes, including washstands, highboys, lowboys and a dressing table. I was surprised nobody had looted the place. There was a really nice, huge cedar chest which, when I opened it, still had bedding in it, neatly put away. No evidence of insect or vermin damage.\n\nI decided I'd seen enough of the house and headed on out to walk the grounds. First up was a dilapidated shed which held the remains of a tractor and a bunch of tools. 1920's or so, from the looks of them. Beyond it was a much larger barn with pens and milking stalls in the foundation and a fairly hefty hayloft above. Beyond that were a pair of silos attached to the barn and two other sheds. One turned out to be a corn crib, the other an oat bin, based on what was left scattered inside. I didn't see anything for storing wheat, so they'd probably threshed and sacked it at harvest, using it year 'round.\n\nI found the small stand of sugar maples beyond the oat bin and a clear running brook beyond those. Most of the fields were overgrown at this point, although you could see the delineations from the rows of trees and low rock walls. By the time I got done walking around the property, it was getting into late afternoon and the temperature was dropping. There were storm clouds gathering to the west and I realized I'd better find a hotel or I'd be sleeping in the car. Not particularly appetizing after driving 15 hours.\n\nI pulled out my cell phone and discovered two things immediately. One, there were between zero and one bars for the phone and two, no 4G LTE for data. No anything for data, for that matter. So Google wasn't going to be helpful in finding a hotel on Saturday afternoon. That meant, get my ass back in the car and drive the half hour or whatever it was to town and try again. I was still tossing over in my mind whether I wanted to keep the place when I stuck my key in the ignition, turned it and got nothing. Not even a whimper of the starter trying to turn over.\n\nSeveral choice words escaped my lips as I tried again. And again, got nothing. Continuing to vent rather colorful profanities, I got out, opened the hood and saw absolutely nothing wrong. I walked through every troubleshooting procedure I could think of, including breaking down and actually reading the owner's manual in the glove compartment. Less than useful, that. And nothing worked. It was getting cold, it would be getting wet, and I was stuck 5 miles from where God lost his sandals.\n\nNot one to wait for disaster to strike, because I knew it would, I started figuring out what I could do. The car would keep me dry, but without the heater it was going to get cold. I could raid that cedar chest for something to bundle up in. Actually, when I thought about it, I had time to see if the fireplace worked. God knows there was enough dry, dead wood lying around. Hell, the house was made of it. All I had to do was stay warm and dry until the storm passed. Then I could see about making my way into town.\n\nI went back into the house and checked out the fireplace. It looked okay, but there might have been something living in it, for all I knew. So I went to the barn and found some old oil-soaked rags and brought them back. Ever the Boy Scout, I went and got my first aid kit out of the trunk and the butane lighter contained therein. One flaming oil-soaked rag showed me that there was a draft through the chimney and I didn't hear anything scurrying to get out, so I put some wood in and some kindling, and got a fire going. While it was building up, I went upstairs and emptied the cedar chest. Not quite a sleeping bag, but with one of the old mattresses as a base, it would do.\n\nFood was going to be rough, but again, I traveled prepared. In my emergency stuff in the trunk was a surplus canteen/cup combo that I could make a packet of dried soup in, and I had a few bottles of water. If I needed more, I figured I could go raid the stream and drop some Aquatabs in it. Or catch some of the rain runoff when the storm hit.\n\nWell, at least this isn't the camping trip from Hell, I thought as I got my impromptu nest set up. That was Governor Dodge State Park. The walk to town's gonna be a bitch, though... Someday I'm going to learn not to presume like that.\n\nThe wind was picking up to a dull roar and I could smell the rain coming. My car was stuck where it was, so I pulled out everything I thought I'd need, made sure I had a huge stack of dry firewood and settled in to have some supper and consider my fortunes, which weren't feeling all that fortunate at that moment.\n\nAll in all, though, it wasn't that bad. The old stone fireplace got up to a good even heat and the bedding was okay. A couple of big cups of soup and my hunger was sated while my insides were nice and warm. I settled down to doze and dream, listening to the storm unleash its fury outside.\n\nAnd unleash it did. Several times I was on the edge of falling out when a brilliant flash of nearby lightning and an earth-rocking boom of thunder would rip me out of my drowsiness and back to full waking. It was annoying, and yet it wasn't the worst I'd ever encountered. A couple of my camping experiences in the Boy Scouts and a few in college had much more severe weather and I'd done okay.\n\nThe problem was, after one particularly nasty and nearby strike, as the light faded, she didn't. She was standing near the stairway, translucent, white and naked. Startled the bejeezus out of me.\n\n\"Who the hell are you???\" is what came out of my mouth.\n\n\"Ooo ze 'ell are you???\" she demanded. \"And what are you doing in my 'ouse?\" She had a weird French-like accent.\n\nI'm amazed I noticed the accent. I was mostly absorbed with the rest of her. Five and a half feet tall, maybe, a top heavy hourglass, really small waist, very curvy hips and ass, long hair flowing down to said ass and a massive rack. Okay, maybe not massive, but way more than a handful each. And a really cute face, once you got past the icy glowing eyes and very pissed off look.\n\n\"I'm, um, I'm, uh... I'm Mike Edwards?,\" I stumbled. \"I'm the new owner, I guess? My Uncle Sol left the place to me... I'm um, uh... just bedding down, trying to stay sheltered from the storm?\"\n\n\"You are ze nephew of Solomon Mathias Grundy?\" she asked, almost accusatorily. I wasn't sure \"yes\" was the right answer. But it was the honest one.\n\n\"Yeah,\" I admitted. \"I never met him. Just bang, outta the blue, I get a letter telling me I have to meet with a bunch of lawyers because he left the property to me. I take it you knew him?\" I was scared shitless and the weirdest things were coming out of my mouth. I kind of watched in awe as they floated by.\n\n\"And you are oversexed, like 'e was?\" was her next question and it stopped me cold.\n\n\"I, um, uh... I, uh... what???\" I wasn't processing all this very well. I was still trying to admit to myself that I was having a conversation with a woman who was probably a ghost.\n\n\"Aimes-tu baiser?\" she asked. When I didn't respond, she added, \"Czy lubisz sie pieprzyc? Vis enim habere coitu?\" I was still quiet, just staring at her and trying not to wet myself. She looked even more irritated, if that was possible, as she asked, \"do you like to fuck?\"\n\n\"Um, yeah... I guess...\" To say I was confused and wary would have been being kind.\n\n\"You guess,\" she iterated. \"My one time of only two in ze entire year and you guess...\" She began floating over towards me. \"Do you know who I am?\" she asked as she stopped right at my feet.\n\n\"Not a clue,\" I told her, \"unless the answer is Really Scary White Lady.\"\n\n\"I am Countess Raczynski,\" she told me, \"and despite your silly laws, I am ze rightful owner of zis property.\" She moved up next to me, where I was huddled under the quilt and linens, shaking like a leaf -- and it wasn't because of the cold. \"Let us see what you have,\" she commented as she reached out and pulled the covers off me.\n\nI mean, really. Seriously. Reached out with a translucent, ghostly-like hand, grabbed the quilt and physically peeled it back. At the same time, the fire in the fireplace roared to life and the temperature in the room soared.\n\nOkay, I'm not some Hollywood hunk or Mr. Universe. But I'm not bad. I work out and watch my diet. I'm not ugly... dark hair, kept short for work, hazel eyes, around 6 feet and 175 lbs. And I'm a little above average in the hung department, if I ever got erect -- which right then was about the last thing my scared shitless body was going to do. Or at least, so I thought.\n\n\"My, you are ze 'andsome one...\" she mused as she stared at my naked body, frozen with fear. \"And young...\"\n\n\"Hey!\" That stung a bit and actually got me out of my stupor. \"I'm not that young! I'm twenty-two!\"\n\n\"Zat will do,\" she intoned and moved even closer to me. I tried to scramble back but the bedding just got tangled around me and kind of held me fast. She reached out to stroke my face with that ghostly hand and that's when I fainted.\n\nI know... not very manly-macho or whatever. Doesn't matter. That white hand I could see through reaching for my face was more than my brain was prepared to handle. When I came to, I was prone, cold and hard.\n\nProne as in lying flat on my back in front of the fireplace. Cold as in the fire didn't seem to be doing anything for my body temperature. Hard as in the ghostess lady was lying next to me -- which may have been why I was cold -- and playing with my very erect erection. I damn near fainted again, except I was outrageously horny and she had my undivided attention.\n\n\"I thought you were a ghost,\" I managed to tell her, \"but I can feel you... what are you?\"\n\n\"I am a ghost,\" she informed me, continuing to stroke me. \"Or post-mortem nebulous apparition, if you prefer. Only during Allhallowtide, and on my Death Day, can I manifest my corporeal self, alzough I do 'ave telekinetic abilities at ozzer times. Zis is my time, in my 'ouse, and I zink you owe it to me, trespasser, to take care of my very personal requirements.\"\n\n\"Uh, sure?\" I answered, completely unsure of myself. \"Like, uh, how?\"\n\nShe didn't answer. Aloud, that is. She went down on me.\n\n\"Holy Mother of God!!!\" It felt like someone had wrapped my cock in an icepack that at the same time was shooting little lightning bolts all through me. \"Holy shit... holy shit... holy shit...\" I kept mumbling as she bobbed up and down on me. I could see my cock in her throat, through her milky white skin, and she was going at me with a will. I was too scared to do anything but go along for the ride.\n\nMy cock had other ideas.\n\n\"Oooooohhhhhh, fuuuuuuuUCK!!!\" Everything pulled up, I hit that point of no return and I felt like every nerve in my body was on fire as I swelled in her mouth and erupted.\n\nI could see my cum traveling down her throat until its white blended with hers and I lost track of it. I would have been seriously freaking out if I hadn't been cumming so hard.\n\nShe slowed down as I petered off, then came off my cock and looked up at me with a very wicked grin.\n\n\"C'est bon... \u00e1 ton tour,\" she told me. To my confused look, she explained, \"your turn.\" While I was still trying to figure out what that meant, she turned, still holding my cock, straddled me and put her pussy in my face. Labia look weird when they're a translucent white. Weird. Not alien. I knew exactly what she expected me to do. So I took a deep breath, let it out, hoped I was going to get it right and tried doing it.\n\n\"MON DIEU!!!\" I must have gotten something right. I'd spread her lips and given her pussy a couple of really good clit-to-anus licks before plunging my tongue into her. It was kind of like eating pussy-flavored ice cream. Actually, not bad. Not bad at all.\n\n\"Mon Dieu... mon Dieu...\" the apparition sitting on my face moaned as I tried to do what I would for a real woman. Actually, she was a real woman, sort of. Her \"body,\" even if transparent, had mass to it and it was increasing... her weight on me was growing. And it seemed like she was becoming translucent, as opposed to transparent. Like she was developing what she called her \"corporeal self.\"\n\n\"Ah! Mon Dieu! Tu vas me faire jouir!\" she cried out and I was about to stop eating her to ask her what the hell she said when it became somewhat obvious. She came. Hard. I could feel her pulsing on my tongue. Not to mention the fact that she was shaking like crazy and moaning all kinds of animalistic gibberish as she drove down onto me, grinding her pussy into my face. My high school girlfriends had trained me well... there was no way I was going to stop until she told me to.\n\nAfter a rather amazing orgasm, she calmed down and eased up, turning to face and straddle me.\n\n\"You 'ave ze gifted tongue, M'sieur Mike Edwards,\" she told me. \"But 'ow iz your kopulacja?\"\n\n\"My what?\"\n\n\"Fucking,\" she stated, taking my now erect again cock and sitting on it. This time, though, it wasn't so much of an icepack sheathing me, but a cool, smooth... almost refreshing... feeling of being buried in her. Surprised the hell out of me... or, wait... maybe that's not such a good phrase, given the circumstances. Very surprising. That's better.\n\nShe began rocking on me and those milky white tits were dangling in my face. What else was I supposed to do? I was way past being scared... she obviously didn't want to kill me, yet, so what the fuck? Why not enjoy it? Besides, for me, horny usually beats scared. I took her tits in my hands and started suckling one while rolling her other nipple between my thumb and forefinger.\n\nOkay, so I didn't know ghosts had milk. Or that it would taste like a vanilla shake. Or that the nipple not in my mouth would spray cool white ghost-stuff all over my chest, accompanied by her guttural moans.\n\n\"Ah, oui, fais-le comme \u00e7a,\" she murmured as she rocked on me, taking me deep inside.\n\n\"I'm sorry, Countess,\" I managed to moan as the most amazing shivers ran through me, \"I don't speak whatever that is... French, I'm guessing. All I speak is American.\"\n\n\"Mais oui,\" she chuckled -- it's weird to hear a ghost chuckle, especially when she's fucking you. \"What is zat quote? Americans 'ave not spoken English in two 'undred years?\"\n\n\"What I said,\" she added as she ground down onto me even harder, \"was Yes, do it like zat.\"\n\n\"Yes, ma'am,\" I told her as I went back to suckling the other teat and rolling the first one. Her rocking sped up.\n\n\"Ah, oui! Comme \u00e7a, comme \u00e7a! Yes! Yes! Like zat! Like... mon Dieu! Je jouis! Je jouis!\"\n\nLike before, I didn't need a translator for that one. She damn near took my cock off, she pulsed so hard when she came. And she had me right back up at the edge again, too. She didn't let up and I couldn't have stopped if I'd wanted to... and I didn't want to!\n\nEverything pulled up like before and again I hit that point of no return. I felt myself swell and go over the edge, spurting shot after shot into her. And the really weird thing? When I looked down between us, I could vaguely see my cock buried in her, pulsing away. But as I watched, she seemed to solidify even more than before. It was like every time she came, she got more real!\n\nShe sighed and collapsed down on me as she finished spending, obviously pleased with getting off, and with quite a bit more mass than I was expecting. Not quite human, yet, but getting there. Maybe cumming my brains out had rendered me incapable of feeling the terror I should have, but the reality was, I was more fascinated by this creature than terrified of her.\n\n\"How is it you're getting heavier?\" I managed to pant out.\n\n\"Oh... I am zorry...\" she murmured, starting to move off me. \"I do not mean to 'urt you...\"\n\n\"No, wait, stop,\" I told her, reaching up to stop her and finding that pushing against her was like pushing against a marshmallow. \"You're not hurting me... it's just... well, I just don't get how you can be a ghost with substance.\" She smiled. She actually smiled.",
        "\"You do not mind ze 'substance'?\" she asked. When I shook my head 'no' she added, \"you are like your uncle!\" She looked thoughtful for a moment, then went on.\n\n\"Twice a year,\" she told me, \"in zis case during ze Allhallowtide triduum of All Saints Eve, All Saints Day and All Souls Day, I can become corporeal again. And experience all ze sensations, boon and bane, of my mortal life. I can feel ze pain of injury as well as ze pleasure of an orgasm or a good meal. But I must 'ave a trigger... a catalyst. Solomon was my catalyst for many years. Now, it seems, you are as well.\"\n\n\"And very good at it, by ze way,\" she chuckled. \"And you are young. You should 'ave excellent recovery time. At all ozzer times, save my Death Day, I am ze apparition you expect. Ze non-corporeal entity which can feel emotion but not physical pleasure or pain. It is part of what drives most ghosts crazy wiz 'atred for ze living. Solomon discovered zat I am not so bad when I am getting laid.\"\n\nThere was a blinding flash of lightning and an immediate boom of thunder that rocked the frail house. I'd been so enthralled with fucking this ghost, I'd completely forgotten about the storm.\n\n\"God, I hope that lets up by morning,\" I muttered. \"And I'm still alive...\"\n\n\"You will be alive, Mike Edwards,\" she smiled as she lay against my chest, becoming more and more \"real\" as we talked. \"But why must ze storm stop?\"\n\n\"Because it's going to be a long walk to town as it is,\" I told her. \"I don't fancy strolling through a thunderstorm.\"\n\n\"Why would you not use your vehicle?\" she asked as she started rocking again, massaging my semi-erect cock still sheathed in her.\n\n\"Because it's dead,\" I told her. \"No offense intended.\"\n\n\"Oh...\" If a ghost could look embarrassed, she looked embarrassed.\n\n\"Oh, what?\"\n\n\"Oh, I zink zat is my fault,\" she told me. \"I can fix zat.\"\n\n\"You can fix my car?\" This was just getting weirder and weirder. Not to mention that she had my cock back up to full erection just by milking me with her cunt.\n\n\"It is self-defense,\" she explained in an apologetic sort of tone. \"If you 'ad not been zomeone I could trust to protect me and my land, you would 'ave been left to ze elements. You have proven resourceful and a wonderful paramour... why do you need to go to town?\"\n\n\"You would have killed me?\" I was still stuck on left to the elements.\n\n\"No,\" she answered. \"But you might 'ave died from exposure before you figured out in which direction ze town lay.\" That was not comforting. \"Why do you need to go to town?\"\n\n\"I have a meeting with a bunch of lawyers on Monday to go over my inheritance and sign whatever papers I need to sign, and probably find a real estate agent...\"\n\nI suddenly felt her get a lot more solid and clamp down on my cock with pussy muscles that threatened to shear it off.\n\n\"And why would you need an agent of real estate?...\" she asked with suspicion dripping from her voice. I realized that suggesting selling the place was now off the table.\n\n\"To get an appraisal?\" I offered. \"To know what the place is worth for insurance and taxes?\" The look she was giving me said she didn't believe me and she was not letting go of my cock. \"Seriously. I was thinking of selling the place, until I found out about you.\" She eased up a little bit, but not bloody much.\n\n\"And now?...\" she drawled.\n\n\"I'm um... starting to see why Uncle Sol liked this place so much, even though it's pretty run down...\"\n\nI was hoping I had some kind of Silver-tongued Devil in me to get me out of her crosshairs. Being at the angry end of a ghost didn't seem like a good idea, at all.\n\n\"It iz only run down, az you say,\" she started in on me, almost indignantly, \"because Solomon became too frail to work ze land, and ze tenants he tried to 'ire all ran off. Anyone willing to do zome work could put it to rights in no time. And before you object, funding would not be an issue.\"\n\nI hadn't even gotten that far in my thinking, but she certainly had. My head was starting to spin with options. And with what she might have meant by funding would not be an issue.\n\n\"Uh, Countess?\" I asked, realizing she was still very solidly across and around me. \"What do I need to do to get you to let go of me?\" Her grin was unnerving.\n\n\"Fuck your way out, mon jeune baiseur,\" she told me. I kind of had to figure out what she meant on my own.\n\nOkay, so I had no idea what a ghost having an orgasm would be like. The first two had been pretty much like a human woman. A very, very intense human woman, true, but still a woman. The last three, she pulled out all the stops.\n\nShe already had me hard with her rocking pussy massage thing before she indicated I needed to fuck my way out of her. When her cunt stopped gripping me like she was going to pop a balloon with it, I was able to start stroking. She was, to put it mildly, simply awesome. Above and beyond the cool, slick, exciting feel of her more-and-more real body, she started doing something that made my body tingle all over. Literally tingle, like a mild electrical shock playing out through my muscles. I was jerking and twitching from it, but the effect it had on my cock and balls was intensely different.\n\nIt made me feel like I was swelling up, way beyond anything that would have been \"normal\" for me. When she finally went over the next time, I felt like one of those \"Bug Out Bob\" squeeze toys... you know, like when you squeeze it and the eyes and ears and mouth all pop out all googly-like? One of those, like some sort of pressure grenade had gone off inside me. And it forced an ejaculation from me. I'm not sure if it should count as an orgasm, since it felt like all of a sudden all the built up jizz in me exploded out into her. Like, gallons worth. Or at least, that's how it felt.\n\nI was just barely recovering my senses from that one when she started going into her next one. I was still hard. Rock hard. I'd take the time to be amazed at it later. It started to sink into me what she meant by fucking myself loose, so I started pounding away with all the strength I had left. That's when the \"plugged into a wall socket\" effect took over. Again.\n\nI felt like a human vibrator strapped to a fucking machine. Like a paint mixer on steroids. I swear I was buzzing as I pounded away like a jackhammer. And that was apparently exactly what she wanted. It didn't take long...\n\n\"MON DIEU! TU ME FAIS JOUIR SI FORT!!! MON DIEUUUUUUU...!!!\"\n\nWell, it sounded like I was doing something right. She sure as hell was clamped down on me hard enough. I must have been concrete, because I barely felt her massive convulsions on my cock. A cock which was not going to stop fucking her until I broke loose or she let go, or both. A cock which was headed for an amazing fourth orgasm. I would have said impossible, but I was starting to believe that this post-mortem nebulous apparition could do whatever she bloody well wanted with me, possible or not.\n\nEverything pulled up and my vision blacked out, except for a bunch of twinkling lights in my eyeballs, and then I exploded. I don't remember very well, but I think both of us were howling into the night, and the only think that kept us from sounding like a couple of animals dying a very painful death was the roar of the thunderstorm outside.\n\nWhen I did get some semblance of sanity back, I realized I had actually managed to extract my cock from her vise-like pussy, although we were very much wrapped up in each other's arms. Since I wasn't clamped to her anymore, I got a wild hair to go down on her. I figured if she liked cumming, it couldn't hurt. Much.\n\nSo I slid down her body, to between her legs, before her now very real, pale, human woman's body could react, and attached myself to her pussy like a lamprey. With about the same intent. I started sucking and licking and fingering and doing anything I could think of to drive her crazy -- admittedly without thinking about what the intersection of \"crazy\" and \"ghost\" might mean.\n\n\"OH MON DIEU! TU ME LE FAIS ENCORE! TU VAS ME FAIRE EXPLOSER!!!\"\n\nShe came on my mouth and my hands and I felt like I'd gotten sucked into a vortex. Everything was swirling and I was getting dizzy while her pussy hammered away at me. Physiology went out the window -- I felt like I was getting turned inside out... sucked into her nethers like a return to the womb.\n\nI passed out.\n\nWhen I regained consciousness, the world was significantly different.\n\nIt was still, and white, and warm, and soft... pretty much everything it hadn't been when I was dealing with the Countess and the storm. When I went to move, I felt like I'd been stuffed inside a marshmallow. That's when I realized that I sort of was. The Countess was wrapped completely around me. I have absolutely no idea how. But it was like being inside an amazingly comfortable sleeping bag.\n\nGo back to sleep, I heard her voice in my head. We will sort everything out in the morning...\n\nI let go of any idea of regaining my sanity and did as I was told.\n\n* * * * *\n\nWhen I did finally wake up again, the heavy part of the storm had passed. Jacquie, as I was coming to think of the Countess, was now lying next to me, not around me, and we were both snuggled under the bedding I'd appropriated from the cedar chest. The fire was low but not out and I could hear the slight drizzle of the remaining rain. I moved a bit and when I did, she stirred as well.\n\nI realized last night hadn't been a dream and part of me wanted to panic. I was sleeping with a ghost, for Christ's sake! She must have felt me starting to freak out. She stood up.\n\nRock solid, move the blankets out of the way, stood up. She was gorgeous! Solid white, yes, but gorgeous. Even better than the marble statue of the Callipygian Aphrodite, because this one moved in very human ways. Every curve, every feature, every everything was perfect. She stepped out of the bedding and stood beside it.\n\n\"You will probably want to use ze commode,\" she told me, and I agreed. I went to pull on some sweatpants and realized that morning wood or not, something was definitely different. As in, I was a lot longer than I remembered. I wrote it off to just being incredibly excited by a gorgeous ghost. I was standing there pissing into the bowl when my stomach rumbled and I realized I had to figure out something for breakfast. I also realized I was probably going to have to do the soup thing again, although if Jacquie would release my car she was holding hostage, I could drive into town for groceries.\n\nI went back out to find out she'd stoked up the fire.\n\n\"It is zo good to be able to feel,\" she told me as she turned to look at me. \"And I must zank you for last night... you were very, very good for me.\"\n\n\"Once I got over being scared shitless, it was definitely my pleasure,\" I told her. I moved over to sit down beside her. \"If you can physically feel, do you feel hungry?\"\n\n\"A bit,\" she acknowledged, \"but not like you. I do not require sustenance, so I do not feel hunger as deeply as you, but I do feel cravings for zings like sweets, or tea, or other foods zat were favorites in my living life.\"\n\n\"Well, I'm starving,\" I told her, \"so if you could let go of my car, I could go to town and get some groceries. And anything you would like in particular.\"\n\n\"Merci... zat is very gracious of you,\" she smiled, \"and I am certainly willing to 'release' your car. 'owever, you should know zat Solomon maintained contingency supplies in a concealed bunker which you 'ave now inherited. Zere is a cache of food and clean water, if you wish.\"\n\n\"A bunker?\" What the hell was Uncle Sol into? I thought. Some kind of Prepper left over from the Cold War?\n\n\"Oui, l'abri,\" she nodded. \"A refuge. A bunker is what 'e called it. I can show you.\"\n\n\"Please,\" I told her. \"And then I'd like to go get some breakfast.\" She just smiled and walked out the door into the drizzle, beautifully naked and white and severely distracting. And it wasn't lost on me that she was walking, not floating. The ground depressed beneath her footsteps. I grabbed my jacket and hat and followed.\n\nShe led me to the barn that had the tractor in it. When I joined her, she walked around to the back, to an old manure spreader. She gestured towards it and it rolled forward, revealing a piece of wood decking that had a big iron ring attached to it. Another gesture and the ring rose, lifting the trapdoor it was connected to. I could see a ladderwell extending down into the ground beneath the barn.\n\n\"I assure you, ze ladder is safe,\" she told me. So I decided what the hell? and started down. When I got to the bottom, there was a light switch on the wall, so I flipped it. And was amazed. Fluorescent lights flickered on in a long concrete tunnel.\n\n\"Do you remember ze time when your President confronted ze Russians and zer missiles zey put in Cuba?\" Jacquie asked as she stepped up next to me.\n\n\"Not really,\" I told her. \"My Dad might remember it, vaguely. Way before my time, though.\"\n\n\"Well, Solomon had zis place built as a retreat in case some-zing went wrong,\" she told me.\n\n\"So it's a bomb shelter.\"\n\n\"Uh... oui?\" she answered. \"And he kept it provisioned wiz all sorts of zings. But I believe you were looking for food.\"\n\n\"Yes, actually,\" I admitted, trying to get my brain focused and back on track.\n\n\"Zen follow me...\"\n\nShe led me through two heavy doors, like oversized fire doors, to a compact suite of rooms. By my quick calculations, there was sleeping space for twelve people, a kitchen and dining-room combination, a general living space, storage for food and water, a library and mini-hospital, storage for tools and such, tanks of oxygen and a bunch of other stuff. The food locker, though, is what Jacquie wanted me to look at.\n\n\"Ze sooner we are fed, ze sooner you can fuck my brains out,\" she informed me. I guess that pretty much summed up her priorities. A lot of the stuff was canned or vacuum sealed, or dried and sealed, including a bunch of surplus MRE's. I sorted through a bunch of it and came up with enough stuff for several meals, including breakfast. On the way back, she stopped us at my car.\n\n\"Try it,\" she told me and I did. It turned over easily and fired up within a couple of seconds.\n\n\"You should now be able to make your meeting,\" she informed me. \"I am 'oping you will make ze same decision Sol did and retain ze property, and consequently, me. You are a virile young man and I 'ope to have a long and pleasurable relationship wiz you.\"\n\n\"Okay, two questions,\" I told her as we went inside and I started putting breakfast together. \"You said the other time you can manifest corporeally was your Death Day. When, exactly, is that? And what do you do about your libido the rest of the year?\"\n\n\"Ironically, I was poisoned ze night of April 30<sup>th</sup> to May 1<sup>st</sup>,\" she answered. \"Walpurgisnacht, for any who care. As far as my libido...\" She paused and looked off, as if seeing something distant in her mind's eye.\n\n\"I suppose ze easiest way to put it is, I suffer,\" she finally told me.\n\n\"Suffer how?\" I admit, I was feeling nosey. Especially since I had just had one of the most awesome sexual experiences of my life.\n\n\"I mentioned before zat I can only manifest corporeally twice a year,\" she explained and she sounded sad. \"Zat does not mean ze emotions disappear. If anything, I feel lust more acutely.\" She paused and looked at me for a long moment. \"How much do you know about spirit possession?\"\n\n\"Like in The Exorcist?\"\n\nShe shook her head in disapproval and remarked, \"it is not like ze moving pictures... it is a lot more... complicated.\"\n\nI laid two plates of breakfast out and poured juice and coffee. She moved over to sit at the table and actually eat.\n\n\"Mmmm,\" she moaned in pleasure. \"C'est tr\u00e8s magnifique! Merci!\" Conversation was suspended while I watched her inhale her breakfast.\n\n\"There's more,\" I offered. I hadn't even sat down, yet.\n\n\"Je\u015bli ci si\u0119 podoba,\" she said as she offered me her plate.\n\n\"You know, you're all over the map with your language,\" I told her. \"I can follow most of it, or infer, but you really do drift in and out of languages I don't know. You can even use telepathy. You're amazing.\"\n\n\"And you are not running for ze hills, scared out of your mind,\" she answered. \"I find zat refreshingly odd. But I zuppose it could be expected of a relative of Solomon's. I am sorry to inconvenience you. After more zan two-and-a-quarter centuries, I zuppose I've become a bit unhinged.\"\n\n\"I wouldn't use the word unhinged,\" I told her. \"More like fluid.\" I turned to fill her plate and was suddenly surrounded by a cloud. A cloud of her, billowing up around me and caressing me in an incredibly sensual way. She was teasing me and I was responding.\n\n\"I meant fluid as in shifting personalities,\" I told her with a smile as I put the refilled plate down.\n\nBut is this not fun? she asked in my head.\n\n\"Of course it's fun,\" I told her. \"That's one reason I'm not running for the hills.\" I sat down to my plate and started to eat. \"Now, about this possession thing...\" I felt her withdrawing from my mind as she congealed back into her womanly form, sitting across from me. Her sigh was palpable.\n\n\"When ze emotions become too much,\" she explained slowly as she ate, \"I can possess ze bodies of living creatures, substituting my consciousness and will for zeirs, in order to 'ave ze physical release zat 'as kept me from going insane and becoming like ze ghosts of your folklore. I 'ave 'ad sex as a rabbit... as a squirrel... my favorite non-'umans are 'orses and wolves... but I 'ave also been known to possess a 'uman. In my defense, I do not force zem to do anyzing zey would not normally do, although zey have little memory of ze time when I am in control.\n\n\"Opportunities for human interactions over ze years 'ave been very limited,\" she went on, \"since I am metaphysically bound to ze land and its owner. My unavenged death 'as created a very strong bond between my essence and ze 'ome where I was murdered. Elizabeth is around 'ere somewhere, too, although she tends to stay near ze granary.\"\n\n\"Elizabeth? Granary?\" I was confused.\n\n\"Elizabeth Adelstone, my 'usband's young paramour, and ze granary where I caught my 'usband buried to ze 'ilt in 'er admittedly attractive azzets. I am surprised she 'as not shown 'erself, since zis is 'er time to be corporeal, also.\"\n\n\"There is another ghost? Your husband killed both of you?\"\n\n\"Essentially,\" Jacquie nodded and turned her attention back to her plate. \"A 'alf-year's wait... you certainly did well wiz breakfast, Mike Edwards. Longer, zince Solomon 'as not been around. Will you be 'ere Walpurgisnacht?\"\n\n\"I'm not sure,\" I told her and she looked up, studying my face. \"Not for lack of wanting to...\" I hurried to amend. \"I just don't know what all this will mean to my job and other things in my life...\"\n\n\"Is that breakfast I smell?\" Another voice, definitely not the Countess', came from the door behind me.\n\nI froze. Jacquie, on the other hand, beamed. \"Lizzie!\" she called over. \"Come in! Come share in zis scrumptious breakfast our new owner 'as made!\"\n\nOur new owner? I was the owner of a couple of ghosts? WTF? I turned to look.\n\nOh. My. God. Another beautiful, naked, white ghost, this one young, early twenties at best, and built like... well, I don't know what an appropriate simile would be. She was of medium height, like Jacquie, but she was bustier, and her hair flowed almost to her knees. She appeared shy... don't ask me how I figured that. My Inner Horndog came charging to the fore.\n\n\"Please, come in and have some breakfast,\" I told her. \"My name is Mike Edwards and I've inherited this place from my Uncle Sol. The Countess has been filling me in on the history of this place and of the two of you. Please... come on in.\"",
        "She slowly moved into the room and up next to Jacquie, looking between her plate and me.\n\n\"I am Elizabeth Adelstone, sir,\" she addressed me and tried to curtsey. It actually looked rather awesome when done naked. \"Or rather, I am the ghost of she, as I am sure m'Lady has told you.\"\n\n\"I am pleased to meet you, Elizabeth, and you do not need to be deferential to me. Please sit. I will have a plate for you momentarily.\" I turned my back on the two of them and focused on getting a plate of food for \"Lizzie\" while my heart was pounding in my ears and part of me wanted to freak out. Thank goodness Jacquie had broken me in first. I don't think I would have survived meeting both of them at the same time.\n\nI got her food to her and she got over her shyness enough to chow down, making the same satisfied sounds Jacquie had made. After that, I got her side of the story.\n\nShe was, at the time of her death, a scullery maid for the household and the Count's favorite fuck toy. Those aren't her words... I'm abbreviating here. She was 18 years old to best of her knowledge, plus or minus a year or two. She was illiterate at the time and a simple country girl. The Count liked to take her out behind the granary and pound the hell out of her. Each time he would give her a Spanish silver real, or piece of eight, which in those days was quite a lot. She had been saving the money, hoping to accumulate enough of a dowry that she could attract a successful husband.\n\nSince her death, she and the Countess had gone through several stages in their relationship, from anger and hatred, through indifference, and finally ending up friends. The Countess had helped her learn to read and to some degree to write. Since they both shared the same Death Day, they often would spend their corporeal time together. When not having a human male available for sex, they would do each other.\n\nYou cannot possibly imagine the kinds of scenarios my very fertile imagination was conjuring up. I was so fascinated with their story and my imaginings, I didn't realize how hard I was or how badly I was tenting my sweats. Elizabeth was noticing, though, and she kept nudging Jacquie and nodding towards me in a not-so-subtle attempt to point the Countess' attention towards my groin. Jacquie finally had enough.\n\n\"I know, dear,\" she told her ghostly friend. \"Yes, 'e is well endowed and knows 'ow to use it. 'e is also masterful wiz 'is tongue. If you simply asked, I am fairly certain 'e would -- what is ze phrase? -- fuck your brains out...\"\n\nDid you know a ghost could blush? I didn't. I also didn't know that for post-mortem nebulous apparitions, it meant they got whiter, not red. No blood, see? I found all that out later. Elizabeth got whiter.\n\n\"Is that what you would like, Lizzie?\" I asked, oblivious to her embarrassment. \"Do you want me to fuck your brains out?\" Elizabeth got even whiter. It was Jacquie who had to point out she was embarrassed.\n\n\"You don't need to be,\" I told her. \"From what I can tell, you got the shitty end of the stick and I'm sorry for that. I didn't do it, and I can't undo it, but I can try and help you be more comfortable. Where I'm at right now, I'll pretty much do whatever the Countess tells me to do.\"\n\n\"Come wiz me,\" Jacquie told Lizzie, standing up and offering her hand. Lizzie rose, took Jacquie's hand and let herself be drawn over to the space in front of the fireplace where the bedding was. They had both reached the stage where they were opaque but completely white. Just different shades or intensities.\n\n\"Lie down, dear,\" Jacquie told Lizzie, \"and show M'sieur Edwards your razzer attractive azzets.\"\n\nLizzie did precisely what the Countess told her to do. She lay down, leaned back and spread her legs. Jesus H. Bald-headed Frog! No wonder the Count liked boffing her! I thought. Smooth trim thighs framed an amazing pussy. I thought Jacquie was beautiful. Lizzie was perfection. Her labia were slightly swollen on either side of her vestibule, her clit standing out from under its hood about the size of the tip of my little finger, and she was glistening with whitish-clear lubrication. Below, her cute little rosebud puckered up in a most inviting way.\n\n\"M'sieur?\" Jacquie turned to me. \"Do you not think zat such beauty should be appreciated?\"\n\nThis was an open invitation and I was going to take it. This totally unreal sex was turning out to be the best I'd ever had.\n\nI sank to my knees and moved forward, between Lizzie's thighs. Not completely sure how this corporeal thing worked, I tentatively reached out a hand to try to stroke her thighs. She was human-solid, though still milky white and satiny smooth. And cool. Not cold, like Jacquie had been at first, but still cool to the touch. I took a breath, eased down, and got instantaneous feedback.\n\n\"Oh, MY!!! Sir...\" she moaned as I licked her from anus to clit. \"OH, MMMM...\" She fell quiet and grabbed my ears as I continued to lick and suck. Then she began to moan, louder and louder as she rocked me against her. She tasted sweet, and as soon as I'd started licking her, her clit ballooned up, easily twice its original size and twice as sensitive, too. I hadn't even gotten a finger into her before she went over the first time. The first of many.\n\n\"Oh, SIR!\" she virtually exploded. \"I'm fetching!... I'm fetching!... I'm... OH MY LORD!!! OHHHH MYYYY LO... OOHHHHHHHHH...\" She went off into a sort of a howl... a long, drawn out cry of pleasure that completely riveted me. She nearly drowned me in her ghostly essence as it flooded from her while she came.\n\n\"That,\" Jacquie calmly observed, \"iz how I found zem... by ze sound.\"\n\n\"Hard to miss,\" I smiled as I came up off Lizzie's cunny while she came down a little. Until I inserted a couple of fingers and started in again, that is.\n\n\"Oh, Sir! Oh!\" she sort of squealed. \"Oh!\" She didn't have much else to say, so I buried my fingers and went back down on her, sucking her engorged clit deep into my mouth and battering it with my tongue.\n\nI'm not sure how to spell all the moaning and groaning that came forth, but she was definitely vocal as she ramped back up to a couple more very intense orgasms. And almost drowned me again. She was incredibly explosive with her juices when she went over, and it was that cool, almost half-and-half kind of spray -- a massive turn-on, actually.\n\n\"Quite the wet one, iz she not?\" the Countess beamed as I took a break and lifted my face -- now drenched and dripping with Lizzie's fem-cum.\n\n\"God, I'll say!\" was my less than eloquent reply. \"Very sweet, and a hell of a lot of it!\"\n\n\"Please, sir...\" Lizzie moaned from beneath me. \"Please...\" I looked over to Jacquie to get some kind of clue what Lizzie was asking.\n\n\"La baiser, m'sieur,\" she smiled at me. To my confused look, she added, \"fuck her.\"\n\nI'm only occasionally stupid. Of course, this was one of those times. I turned my attention back to the incredibly beautiful ghost beneath me and pulled off my sweats. Lizzie's eyes went wide as I got firmly planted on my knees and drew her up to my straining erection, pulling her onto my thighs as I lined up on her amazing cunny. She was light and easy to move around and smiling as I drew her to me. The smile disappeared into an eyes-closed \"O\" face as I impaled her, as deep as I could. Which was definitely longer than normal and which I also guess was more than enough.\n\n\"Oh! Yes! Sir!... Thank you, Sir!\" she moaned as I pushed in. She wrapped those gorgeous thighs up over my back as I leaned forward onto my elbows, holding her under her shoulders. The better for pushing. I hadn't thought about what the devious Countess might be up to...\n\n\"Aieee!!!...\" That was me, discovering something being inserted in my ass.\n\n\"OH! MY LORD!!!\" That was Lizzie, going cross-eyed when most of my sizable schlong got unceremoniously buried about as deep in her cunny as it could go. And then some, trying to get away from said ass insertion. I think I might have gotten my balls in.\n\n\"What The...??? Oh, FUCK!!!\" That was me, again, as the Countess, who had manifested a fairly hefty dick, completely buried it up my ass and stroked away. And made me cum. Hard.\n\n\"Oh...\" the Countess exclaimed with a whole lot of imp thrown in. \"I am zorry... iz zat too big?\"\n\nI'm not sure how to spell the gurgle that escaped my lips as I started down from the cosmic explosion and she slowly withdrew her appendage. I'd never had a cock up my butt, let alone cum from it. And the really weird thing? It didn't burn... it felt cool and numbing, like she'd used Novocain or something.\n\n\"Oh, Countess...\" I barely heard Lizzie moan beneath me, \"you are right. He is sooo wonderful...\" I looked down between us and saw some of my jism leaking back out.\n\n\"Can you stiffen his sword, m'lady?\" she asked after a moment. \"As you did with Master Grundy?\"\n\n\"Certainly, my dear,\" the Countess smiled and suddenly my deflating cock was re-inflating. And I never get hard again that fast after cumming. It definitely had to be her Ladyship doing it. I wasn't very aware, at that moment, of exactly what that implied.\n\n\"Oh, that is so nice!\" Lizzie exclaimed as I stiffened while still in her. And damn! She felt incredible...\n\nAs a testament to how my mind was being warped in their direction, I had to wonder what all the fuss was about, regarding hot, wet pussies. Cool was turning out to be just fine, thank you very much. And maybe because of the novelty, or maybe because of something supernatural, but I was feeling tingly in every cell of my body and it was excruciatingly exciting. So much so, that I was back to fucking Lizzie in very short order. That is when the Countess did her next strange bit... she straddled Lizzie's face in front of me, offering a tit to suckle while Lizzie ate her out.\n\nRemember that ghost milk that was like a vanilla shake? Yeah, well now it was more like a pi\u00f1a colada... with the inherent high that goes with it. I was getting loopy, nursing from a ghost. Beneath me, Lizzie eased off Jacquie's cunt and sighed.\n\n\"That is one thing I regret,\" she told my quizzical look. \"I never had children and do not have milk. The Countess' is so wonderful, I wish I had my own.\"\n\n\"Are there hormones in the afterlife?\" I asked. \"Because you could induce lactation, maybe.\" I know... a really dumb question. But that was me -- I could be really obtuse sometimes.\n\n\"Non, mon amant,\" Jacquie told me softly and somewhat indulgently. \"We exist as we were when we died. It would appear zat we boz liked to sleep sans v\u00eatements. I have ze milk because I was still nursing my youngest. I take it zat you like it?\"\n\n\"Like isn't the word,\" I murmured. \"I'm getting stoned out of my gourd, but it isn't fucking up my fucking... I hope.\"\n\n\"Stoned?\" the Countess queried. \"Gourd? I assure you, M'sieur, no one is zrowing rocks at you, and you zertainly are not in zome zort of vegetable. In fact, I believe she is a razzer delightful delicacy.\"\n\n\"Inebriated,\" Lizzie spoke up. \"Master Sol would sometimes say he was 'stoned' when he was drunk.\"\n\n\"And 'gourd' is like your head, where your brain is,\" I added. \"So 'stoned out of my gourd' is drunk out of my mind.\" I was going to say more, but a certain Point of No Return showed up unexpectedly.\n\n\"Oh, Fuck!\" I managed to moan. \"Gonna... gonna... oh, fuck! Cumming!!!\" For the second time, I filled Lizzie up to overflowing.\n\n\"Oh, yes! Oh, yes! Oh...\" Lizzie crunched down on me. I guess my orgasm tripped over hers. We spent some time thrashing against each other before we were able to calm down.\n\n\"You zeem to be enjoying yourself as well as your Uncle Solomon did,\" the Countess beamed at me. \"I 'ope we are convincing you zat zere are advantages to keeping ze land and cooperating wiz us...\"\n\nI was ready to wholeheartedly capitulate... except something was nagging at me from somewhere behind the cloud of euphoria. I finally figured out what it was.\n\n\"Um...\" I managed to get out, \"uh... you feel absolutely wonderful. You both do. But, um... what happens after Allhallowtide? When you go back to being incorporeal... does that mean I'm going to have to cope with two post-mortem nebulous apparitions that are frustrated and angry? And maybe taking it out on me?...\" I paused as I watched my words sink in. \"Um... just asking...\" I ended lamely.\n\nThe Countess and Lizzie looked at each other for several moments before the Countess turned to me.\n\n\"Do you, perchance, enjoy ze sex wiz animals, M'sieur Edwards?\" she asked. \"Sheep?... Wolves?...\"\n\n\"What??? No! No, definitely not! I'm not into that bestiality stuff, at all... I definitely prefer humans...\"\n\n\"Hmmm...\" Lizzie murmured. \"That will make it more difficult.\"\n\n\"Make what more difficult?\" I was being forgetful and getting confused.\n\n\"Having sex, of course,\" Lizzie looked at me thoughtfully. And yes, ghosts can look thoughtful.\n\n\"Do you remember when I told you about ze spirit possession?\" the Countess asked. \"Zat when ze emotions become too much, I can possess ze bodies of living creatures, substituting my consciousness and will for zeirs? I told you zat I 'ave 'ad sex as a rabbit and squirrel, and my favorites are 'orses and wolves? But I also told you I 'ave been known to possess a 'uman. If you are not interested in animals, M'sieur, we would need to find a suitable human. Few venture out here, ozzer zan ze occasional hunter. Do you object to sex wiz a man?\"\n\n\"Sex with a... man?\" I managed to answer. \"Sorry... don't think I'm interested in that one, either...\"\n\n\"Beatrice?\" Lizzie asked the Countess, hopefully.\n\n\"Mais non,\" she replied, shaking her head. \"If M'sieur Edwards is not interested is ze animals, I do not zink he will be interested in a child... even if she iz a very precocious thirteen...\"\n\n\"A thirteen-year-old?\" I gulped. \"Uh...\"\n\n\"A very cute blonde thirteen-year-old, and very amorous,\" the Countess nodded. \"She lives on a farm nearby. She can be quite charming.\"\n\n\"Uh, no. No. Not interested in underage, either, thank you very much,\" I hurried to point out. \"Um... does this mean I'm screwed?\" Not the best choice of words.\n\n\"Not unless we find an acceptable companion,\" Lizzie told me. \"There are not many adult women who visit the area. Although...\" She drifted off into thought and I could almost see the wheels turning.\n\n\"Ahhh!\" the Countess nodded sagely to Lizzie then turned again to me. \"Would ze woman need to be alive, M'sieur? Could a corpse suffice?\"\n\n\"A corpse???\" This was just getting way too weird. \"Like a zombie???\"\n\n\"In a manner of speaking,\" the Countess nodded. \"Zere is a cemetery just down ze hill...\"\n\n\"No. Oh, no! No, no, no... not a corpse. Living, breathing, human female would be just fine, thank you.\"\n\nBoth nebulous post-mortem apparitions sighed and I felt a strong chill pass through me.\n\n\"I suppose we could take turns using him,\" Lizzie suggested, but without a lot of enthusiasm.\n\n\"Oui, zat could provide our outlet,\" Jacquie nodded. \"But not quite zo zatisfactory as enjoying him from ze outzide...\"\n\nSomehow, masturbating with a ghost inside didn't seem all that thrilling to me, either.\n\n\"Perhaps, M'sieur, Lizzie and I should take zome time to zink on zis...\" Jacquie decided. \"We may come up wiz ze solution which is good for all...\"\n\n\"In the meantime, Master Edwards,\" Lizzie offered very seductively, \"perhaps you would like some more 'otherworldly' pleasure?\" She was still beneath me and I was still buried in her. And amazingly, still half-hard or better. It became a lot more 'better' when she started grinding against me.\n\n\"Oh, fuuuuuuckkkk...\" I moaned as I came all the way back up again.\n\n\"Lizzie, dear,\" the Countess interjected. \"Do you not zink it may be my turn?\"\n\n\"Oh! I am so sorry, my Lady!\" Lizzie exclaimed as she pushed me up with inhuman strength and moved out from under me. The Countess was under me and I was impaled in her before I knew it.\n\n\"Zat iz much better!\" she smiled and began rocking against me. I was marginally aware of Lizzie hovering nearby, watching. Then realized she really was hovering... about two feet off the ground and watching the intersection of my cock and Jacquie's cunt as we pounded away. That was a little disconcerting!\n\n\"My lady,\" Lizzie drawled after watching for awhile, \"mayhap we could rearrange ourselves to permit more participation?\"\n\nNow, I don't know that these two had a routine worked out... but at times, it sure seemed like it.\n\n\"Mais, oui!\" the Countess agreed, and all of a sudden I was rolled over, on my back, with her astride me and we hadn't even uncoupled, as far as I could tell. She was riding me from her knees, but sitting up enough that Lizzie could move over my not-for-long unoccupied mouth. Remember those pi\u00f1a coladas? Man! was I getting stoned, and Lizzie's awesome pussy juice was cranking me out of my mind.\n\nI suddenly felt myself swelling up to another orgasm and she didn't stop. Neither one of them did. I blew my third load deep in the Countess and when I got back to rational thought, gave up questioning why I wasn't going down. Apparently, tumescent wasn't in their vocabulary.\n\nThey kept tag-teaming me like that, one fucking me, the other sitting on my face. I did the best I could, and way beyond what any mere mortal should have been able to do, but come on!... I am, really, only human. I know it was an inelegant end, but... after more than half a dozen cosmic level orgasms, I passed out.\n\n* * * * *\n\nWhen I came to, I was aware of three things: I was back in my pile of bedding, the drizzle had stopped and both Jacquie and Lizzie were sitting at the table, talking in low tones. I rolled over, stretched and moaned. The moan was because stretching made me realize I was sore in places I didn't know I had.\n\n\"Young Master Edwards is awake,\" the Countess commented, loud enough for me to hear. \"Would you invite him over, Lizzie?\"\n\nLizzie rose from the table and drifted my direction, her absolutely perfect -- albeit, white -- breasts, belly, hips, pussy... hell, all of her absolutely perfectness... drifting with her. I was hard before she got to me.\n\n\"Master Edwards,\" she smiled to me, and the parts of me that weren't outrageously hard started to melt, \"a nuncheon is prepared, if you wish. My Lady would like you to join us.\"\n\n\"Thanks, Lizzie,\" I told her. \"As soon as I remember how to move, I will.\"\n\nShe must have taken me literally, because I felt myself getting lighter, and actually floating up out of the bedding. For a guy who isn't used to floating, it was scary, believe me. I fought down the panic as I was floated in the direction of the table and then found myself deposited there, across from the Countess. I noticed there was a spread of cheese and crackers, and some kind of sausage that had been sliced, plus a carafe of clear liquid -- I presumed water -- and a bottle of wine.\n\n\"Welcome back, M'sieur Edwards,\" the Countess nodded at me with a smile. \"We 'ave prepared a zimple meal from ze fare of Solomon's. Ze sausage iz venizon, ze cheese iz a mild cheddar, and we 'ave eizer red wine or water, if you wish.\"\n\n\"Um, thank you, Countess,\" I answered as I checked out that I was, in fact, back on old terra firma and felt as heavy as I used to feel, pre-floating. I took a cup from the table and poured wine into it. I was going to need it. Cracker, cheese and venison got stacked up into snacks for munching, washed down with the wine. Both Lizzie, who sat beside me, and the Countess across from me seemed amused at my procedure.",
        "\"Lunchables,\" I told them and got blank looks. \"A simple way of making snacks,\" I tried to clarify and got indulgent smiles in return. \"Sandwiches?\" I pursued. \"From your Earl of Sandwich?\" Still no recognition.\n\n\"Must have been after your time,\" I decided. \"Didn't Uncle Sol ever mention sandwiches?\"\n\n\"Oh, yes!\" Lizzie brightened up.\n\n\"As 'e described them, 'owever,\" Jacquie explained, \"it would require two men... and we are but two women. Alzough, I zuppose we could manifest...\"\n\nI was confused for a moment, until the stupid part of me decided to get out of the way.\n\n\"Oh... um... that's a different kind of sandwich,\" I told them. \"In food, it's some kind of meat between a couple pieces of bread. It's gotten a lot fancier over the years. But, never mind. This is great, and I will be able to do even better, once I can get to town and a grocery store. I'll have to take a closer look at Uncle Sol's bunker... see what he's got for refrigeration and the like.\"\n\n\"When did you zink you would be going to town, M'sieur?\" Jacquie asked as I continued to eat.\n\n\"Mndy,\" I answered with my mouth full. Realizing my lack of etiquette, I washed it down with a slug of wine and tried again. \"Monday,\" I told her. \"Tomorrow. I have a ten o'clock meeting with the lawyers about this property. And yes, Countess, I have decided to keep it. I don't know what all that's going to entail, but believe me, I won't be trying to be rid of you.\"\n\n\"That is wonderful!\" Lizzie exclaimed. \"You will have plenty of time to fuck us senseless! Would you require any additional sustenance, Master Edwards, before we start? Again?\"\n\n\"Um, no... just a little more recuperation time,\" I answered, wondering what keeping both of them sated was going to mean. \"And if you could, it's 'Mike'... not 'Master Edwards' or 'Monsieur'. I would prefer it if you would just call me Mike.\"\n\n\"Old 'abits die hard, M'sieur Mike,\" the Countess smiled. \"But we can try.\"\n\n\"Master... um... Mike,\" Lizzie drawled coyly. \"Do you perchance enjoy navigating the windward passage?\"\n\n\"Um... what?\" I had no idea what she was talking about.\n\n\"To play backgammon?\" the Countess asked.\n\n\"Oh, yeah! I like the game,\" I told her. \"I'm not as good at it as some of my buddies at work, though.\"\n\nBoth women began giggling. I wasn't sure why, and I'm sure my confusion showed.\n\n\"Not zat kind of backgammon, M'sieur Mike,\" Jacquie tried to explain. \"Stosunek analny?\" she asked. \"Rapports sexuels anaux?\" I shook my head and shrugged. \"Anal intercourse, to be vulgar,\" she clarified.\n\n\"Oh.\" I'm not sure I blushed, but my face certainly felt like it was heating up.\n\n\"I've, uh... never tried it,\" I added. \"I mean, not counting getting it up the tuchus back there a while. But not for lack of interest, mind you... just, no girlfriend with interest. I'm not sure I'd know what I was doing.\"\n\nAgain, both women chuckled.\n\n\"You may rest assured, M'sieur Mike,\" the Countess smiled, \"that we will be more zan willing to give you any necessary instruction. Alzough, I don't believe you will need much, as talented as you are.\"\n\n* * * * *\n\nFucking a ghost senseless is not an easy task. In fact, it can be borderline lethal. To the fucker, not the fuckee. In this case, they damn near killed me.\n\nIt was after dark before they let up. They had this amazing ability to revitalize me after each time I passed out. And there were many. I think we experimented with every combination of person and orifices possible. I got an incredible education and they got sated. Almost. Apparently, a ghost's capacities are nearly limitless.\n\nThey let me sleep awhile after the last round, which was fucking and cumming in the mouth, pussy and ass of each of them. I have never had that much sex in my life, and their ability to overcome any recovery my body needed completely blew me away. When I did wake up, I was starving.\n\nThey hit me with more of their go-juice magic and got me functional enough that I could raid the bunker again, taking notes this time, and put together both a shopping list and a decent dinner. It was at dinner that they informed me that they were coming with me in the morning.\n\n\"Um... not to put too fine a point on it,\" I observed, \"but a couple of gorgeous naked white chicks are going to get noticed. And I doubt I can pass you off as co-workers.\"\n\nTime for you to learn some more, M'sieur Mike, I heard in my head as I watched the Countess fade out. I mean, literally disappear. Fade out to transparent nothing.\n\nAlthough we are still corporeal until midnight Monday night, she added, we can be invisible. You might have to hold a door open longer, but we can accompany you with no one being the wiser. And we can talk to you without them knowing. We will not be a liability.\n\nIt struck me as odd that Jacquie's accent disappeared when she was using telepathy. I was presuming that was what she was doing and not somehow possessing me. I was also presuming I would notice being possessed.\n\n\"I don't do well around lawyers,\" I told her. \"And having you there might make me really nervous. I'd really hate to blow it, whatever it is that they want me to do.\"\n\nYour Uncle Solomon inherited, as you will, a fairly large trust fund dedicated to maintaining the property, and it also provides for the living expenses of the property manager and family, if any, the Countess explained. They will want you to read the provisions of the trust, sign several documents pertaining to the transfer of the trust to you and designating you as the property manager. If it is like previous times, someone there will try to buy the property from you -- 'take it off your hands' is the mostly likely approach. We will be there to remind you not to agree.\n\nThe county will also try to overestimate the worth of the property, for tax purposes, I heard Lizzie's voice in my head. At least, that is what they have tried to do in the past. Master Grundy's lawyer did well to protect him. You will want some scrupulous person to make an honest assessment of its current condition. That will be difficult, if the assessor thinks there will be a commission involved.\n\n\"Okay, ladies, I got it,\" I told them. \"You're coming along. But please... after dinner, can I get a decent night's sleep? I'd really like to be fully functional in the morning.\"\n\n\"By all means,\" Jacquie answered me aloud. \"A bit of rantum-scantum to fall asleep by should do you well. We will make sure you are sufficiently rested.\"\n\nIt was becoming obvious that these two ladies were taking over my life. And weirdly enough, I wasn't objecting all that much.\n\n* * * * *\n\nIn the morning, my phone's alarm went off as set. That is to say, even with zero bars and no 4G, it made its very annoying bleeping at 7am. I had actually been smart to put on a shirt to sleep in and have the phone tucked into the pocket. I woke to find myself entirely encased in white. And off the ground. I would have panicked, but the Countess had already done this to me before and now it just felt comfortable.\n\nNot cold, not hot, not suffocating... just gently floating, like in the inside of a cloud. A cloud with the characteristics of a waterbed. In any case, as soon as I moved to turn off the alarm, I felt myself starting to descend, until I was gently deposited on top of the pile of bedding I'd put in front of the fireplace the first night and the white cloud began to coalesce. Into two corporeal yet nebulous post-mortem apparitions -- the Countess and Lizzie, both with huge smiles. Lizzie was the first to move away.\n\n\"I will prepare breakfast for you while you use the privy, Master M... um, I mean, Mike,\" she told me. \"Your clothes should be dry by now.\"\n\nI sat up, looked around to see everything but my shirt hanging by the fireplace, and realized she was right... I really needed to piss. The Countess simply watched with amusement as my bouncing morning wood led me to the \"indoor plumbing\"... obviously one of the more modern upgrades to the place. There was even toilet paper still on the hanger. Small blessings... but I would take them. When I got back, true to her word, Lizzie had breakfast ready.\n\nShe'd obviously gotten into a breakfast MRE -- hash-browns with bacon, peppers and onion; Zapplesauce; a brown sugar toaster pastry; crackers; peanut butter; fruit punch mix and cocoa. It definitely beat the dehydrated soup I would have been eating. The two of them split another one -- pork sausage, I think -- and all in all, it was a great start to the day. Breakfast was cleaned up via the fireplace and I got dressed. I had a couple of changes in the car, but I hadn't thought about a suit. In the end, I just didn't see it as necessary.\n\nIn addition to clothes, my backpack also had a folder with the correspondence I'd gotten from the lawyers. The Countess suggested I toss the pack in the middle of the back seat. I figured out why when, after said tossing, she and Lizzie got in the back on either side and faded to invisible. I'd have to open the back door to get the pack and they two of them could slide out. I wondered for a moment why they didn't just go ethereal and float out, but I decided it must have something to do with Quantum Ghost Mechanics or something.\n\nI had previously put the lawyer's address in my GPS and as I approached the town, I started getting details on my destination. It wasn't hard to find, nor to find a parking spot, so we were standing outside the door about fifteen minutes early.\n\n\"Are you ladies ready?\" I murmured as I reached for the knob.\n\nWe, and you, will be fine, the Countess' voice told me. But please... do not shut the door in our faces...\n\nThat got a smile from me as I opened the door and stepped in, looking around and incidentally holding the door open longer than usual.\n\nThe reception area looked typical, with a dark-haired woman seated at a good-sized desk and with chairs around the outside edges of the room, with a couple of coffee tables and magazines scattered on them. What wasn't typical was the very attractive redhead in the skirt, blazer and almost-a-blouse. She was sitting in one of the chairs, obviously a client, and in stark contrast to Miss Prim-and-Proper at the reception desk. I tucked my eyeballs back in and went up to the desk.\n\n\"Hi,\" I greeted the receptionist. \"I'm Michael Edwards, here to see a Mr. McFarland about some inheritance paperwork? It's supposed to be a ten o'clock meeting.\"\n\nMs. Snarky -- honest to God, that's what her nameplate said -- glanced up at me, consulted her desktop and motioned towards the chairs. \"Have a seat, Mr. Edwards,\" she told me. \"Mr. McFarland will be with you shortly.\" I did what I was told.\n\nI was trying to figure out how to sit close to the redhead when she stood up, walked up to me, put out her hand and said, \"Mr. Edwards? I am Bethany Franklin. I am an agent with Bulwer &amp; Lytton, local realtors. I am here at Mr. McFarland's request to help out with any issues regarding your uncle's farm.\"\n\nI took her hand while trying not to melt. Or burst my zipper. The Stacked Redhead had Green Eyes and Perfect Lips. I really had to concentrate on what she was saying. Then a cool breeze brushed her hair -- which was halfway down her back -- and mussed it.\n\nOh, shit, I thought. Please, ladies, if you can hear me, this is absolutely the wrong time to get jealous. Please...\n\nBethany Franklin ran her hand over her ear, straightening her hair, and Stacked Redhead had Perfect Hands, too, and Perfect Fingers. I was in so much trouble.\n\n\"Um... hello,\" I managed to get out. \"I'm Mike... uh, Mike Edwards... oh, but you know that, because you called me Mr. Edwards... um, glad to meet you?\" Sorry, but I'm nowhere near suave and sophisticated in the presence of galaxy-class knockouts. She smiled, and certain parts got harder.\n\n\"Nervous about your inheritance?\" she asked. She must have read my fumbling around wrong. I guess she didn't realize she was turning me into a blathering idiot.\n\n\"Uh, yeah, I guess...\" I went along with it. \"I've never inherited a farm before.\"\n\n\"I haven't seen it,\" she admitted. \"I've only read the property descriptions, tax appraisals and so forth, when Mr. Lytton gave me your account. But I understand it is a very nice piece of property. I'd love to visit it sometime, if it's okay with you.\"\n\nDo not let that hussy anywhere near our land, the Countess warned me in my head. She is one of those realtors we warned you about... only interested in turning a quick profit...\n\n\"Hussy?\" I questioned Jacquie. Actually, I didn't mean to say that out loud.\n\n\"Excuse me?\" Ms. Franklin asked, surprised.\n\n\"Oh! Um, we'll see,\" I hurried to try to cover up. \"I mean, we'll see about inviting you out to visit. I just got there Friday night and I'm still trying to get oriented. Uncle Sol never really shared much about what he had or what he was doing with them... I mean, it. Doing with it.\"\n\nMs. Franklin nodded and smiled, and damn! She had Perfect Teeth, too!\n\n\"Mr. Edwards. Ms. Franklin. Mr. McFarland will see you now,\" Snarky interrupted us.\n\nBethany Franklin turned towards the desk, but I caught her giving my tenting a second or third look. More than a glance. I probably would have been embarrassed at getting caught chubbing up, but I didn't have time. I turned towards the desk, also, just in time to see a door beyond it open and a man step into the doorway. I would characterize him as \"gentlemanly looking,\" probably in his fifties from the slight bit of grey showing.\n\n\"Charles!\" Bethany smiled as she stepped forward to take his offered hand. \"You're looking great!\"\n\n\"As are you, Bethany,\" he nodded, then turned towards me. \"Mr. Edwards?\" he asked, holding out his hand once Bethany relinquished it. I stepped forward and took it.\n\n\"Yes, sir,\" I told him. \"Here as requested to find out what the hey is going on...\" That got a smile.\n\n\"You are quite a lucky man, Mr. Edwards,\" he told me. \"Come on back to my office and we'll go over just how lucky. I have some papers for you to sign, as well.\" He let go of my hand and turned to head farther into the office. I paused and motioned Bethany to go ahead of me and with another heart-melting and cock-hardening smile, she stepped in front of me. God, what an ass!...\n\nI was smart enough to pause long enough to give Jacquie and Lizzie time to clear the door, then followed along. I followed Ms. Franklin's delectable posterior as it, and the full skirt covering it, swayed down the long corridor back to Mr. McFarland's office. I started to feel like I was following the hypnotist's watch when I got a rude awakening in the form of a slap up the back of my head. From the inside.\n\nPay attention to business, M'sieur Mike, I heard the Countess in my head.\n\n\"Remember that thing about possession?\" I mumbled as the lawyer held the door for first Bethany, and then me -- after a bit of a pause while I shook my head to clear it and let Jacquie and Lizzie slide through first. I'm sure Mr. McFarland was finding my distraction amusing, based on his condescending smile.\n\nJacquie and Lizzie shut up and left me alone to ogle Ms. Franklin's bountiful assets while Charles McFarland, Esq., went over the same information the Countess had given me before, only in more detail. Little things, like my Uncle Sol actually being my Great-Uncle Sol -- my mother's father's brother -- and big things like the size of the trust and the conditions on it. Suffice it to say that it was well into eight figures and needing to work for a living had just gone right out the window. As long as I lived there, that is. The trust would cover the taxes and other legal requirements, but I only got the \"living allowance\" if I lived on the property as caretaker. Since I'd never heard of a six-figure \"living allowance\" before, I suddenly decided the place could definitely use some fixing up and I was just the guy to oversee it.\n\nWhen I mentioned that to McFarland, Ms. Franklin jumped in to offer to introduce me to the various movers and shakers in the construction and farming communities, and so forth. My Inner Cynic had decided hers was an eight-figure kind of friendly, but I wasn't going to turn her down. Plus, it would give me a reason to spend time around her without giving Jacquie and Lizzie a reason to go ballistic. I had no idea what an angry ghost would be like, but I sure as hell didn't want to find out!\n\nMr. McFarland had a bunch of papers for me to sign, and I think he found it amusing that I took the time to actually read what I was signing. I guess most folk would jump on a chance at that kind of money without seeing what it was going to cost them, but I'd put enough years into Info Tech that I wasn't about to rush into anything. Of course, that didn't apply to redheaded perfection. If I got a chance to hit that...\n\nAlmost all of it was county, State and Federal transfer of ownership stuff. A couple of codicils caught my attention, though. The first was that I wouldn't convert it to anything other than farming or fallow. No B&amp;B's, no subdivisions, no nothing unless it was an improvement to the primary residence and outbuildings for the express purposes of farming. That did appear to permit ranching as well. The second was that I would preserve, as much as possible, the original homestead and buildings. Improvements to the interiors were permitted. Altering the exteriors except for necessary maintenance was not. The third was that the property must never be sold. It must be passed down to a blood relative. If I was childless, I would designate an heir who was somehow related. That, in fact, is how it had gotten passed from Uncle Sol to me.\n\nNothing said I couldn't put in Wi-Fi and use it to work from home, should I choose to keep working. I made sure of that with the lawyer. There was also nothing to prohibit me from traveling. Continuous occupancy was not required. So if I had to travel for my consulting job, I could, as long as it was my primary residence. I made sure of that with the lawyer, also. So as far as I could tell, I was set. I could fix the place up, live there comfortably for the rest of my life and get fucked out of my mind twice a year. I didn't comment to McFarland on that last part. He did, however, make a rather cryptic comment just before we left.\n\n\"Mr. Edwards,\" he told me as we rose and got ready to leave, \"you should know that there are some folk around here who are rather... suspicious... of anyone connected with that farm. There have been persistent... rumors... about it being haunted. They say, back to the seventeen hundreds. So if you get weird looks from townsfolk from time to time, I wouldn't pay them any mind. It will simply be country superstitions. I am sure you will be quite... comfortable... in your new lifestyle.\"\n\n\"I am sure I will, sir,\" I told him. \"And I appreciate your help in negotiating all these hoops. Are you on any kind of retainer to the Trust? If not, I'd like to offer it to you. I like the idea of someone familiar with the situation keeping an eye on it.\"\n\n\"With the transfer of ownership, Mr. Edwards, my previous relationship with the Trust and its administration ends. I would, though, be happy to continue as your attorney, if that is what you wish.\"\n\n\"It is what I wish,\" I told him. \"Draw up whatever papers I need to sign to make it official and let me know. I don't think there's a working phone at the place, and there isn't any cell service, but I remember seeing a mailbox, so you can just send them to me. Or I'll check back with you. Whatever you'd like.\"\n\n\"Oh, I'd be happy to run them out to you,\" Ms. Franklin jumped in. \"It will give me an excuse to visit.\"\n\n\"That could probably work out well,\" I told her. \"Let's do it that way.\"",
        "We were shown out, and I was careful to make sure Jacquie and Lizzie weren't caught behind. We were headed for my car when Bethany held me up by taking my arm, so I turned to face her. She leaned in with that monster rack and looked up at me with those mesmerizing eyes and my entire attention span left for the little head.\n\n\"Mr. Edwards,\" she breathed, and I managed to mumble \"Mike...\"\n\n\"Mike,\" she corrected herself. \"You should know that I've always been a big fan of ghost stories... so I'm not bothered by all those rumors of your place being haunted. I'm not one of those superstitious people Charles was alluding to. So I guess I'll be out to see you when the papers are ready. In the meantime...\"\n\nShe leaned in and kissed me on the cheek.\n\n\"You take care,\" she went on. \"Drive safely.\"\n\n\"What was that for?...\" I was understandably surprised.\n\n\"Oh, I don't know,\" she smiled that million-watt smile. \"Just my inner imp or something. I hope we'll be very good friends.\"\n\n\"Uh, yeah... so do I,\" I told her, touching my cheek. \"I have to go.\"\n\n\"See you!\" she beamed and turned to head for her car. I turned to mine and almost ended up on the pavement from the head slaps I got. Two of them. You can guess where they came from.\n\n\"Hey!\" I objected. \"What was that for?\"\n\nFor lusting after that redheaded wench who is definitely stalking you, Jacquie's voice told me.\n\nAnd for implying that she might be welcome at our home, Lizzie added. Although...\n\nLizzie left it hanging out there as I drove us first to a grocery store and then back to the farm. I figured out later that she and the Countess must have been having a major strategy meeting. Without me.\n\nUncle Sol's bunker had a pretty decent refrigerator and chest freezer. I fired them up and made sure they were working well, then stocked them with some of the stuff I'd bought. Then I started an inventory of the things I wanted to fix up first. When Jacquie and Lizzie asked what I was doing, I explained that although sleeping in them (not with them) was very comfortable, what I wanted to do was to start putting the place back into \"normal\" shape.\n\nThat meant a lot of repairs and upgrades, and was the kind of thing McFarland would have expected of me. The \"redheaded wench\" was going to be very useful in connecting me with people who would do quality work without gouging me, and although the winters here didn't get horribly cold, I wanted some basic stuff like the roof and walls fixed before December. Plus getting the kitchen and bath in order.\n\nWhen I put it like that, the two of them seemed resigned to the fact that not only would Ms. Franklin be around often, so would work crews who would need to be left alone. Jacquie and Lizzie would be back to their ghostly non-corporeal forms at that point and I needed to be sure they wouldn't scare off the help. I got their tacit agreement and went ahead with my planning.\n\nThey insisted on spending that afternoon and evening fucking and cumming in every way imaginable. They were going to go non-corporeal at midnight and they wanted to savor every last bit of carnal pleasure they could. After all, it would be Walpurgisnacht before they were \"real\" again.\n\nThey didn't kill me, but they did make me wonder if there really was death-by-fucking. They got into the same tag-team they had the previous day and kept... what? resurrecting me?... over and over and over until I was getting sore from cumming so much. Their virtually unlimited capacity for pleasure was the most intense sex I had ever had... hell, had ever imagined... in my life. And they were definitely doing something to stretch me to their desired dimensions.\n\nWhen we reached midnight, with a glorious crescendo of multiple simultaneous orgasms, they began to lighten... to lose mass. They basically did the inverse of what Jacquie had done to me that Halloween night, becoming more and more transparent and becoming more and more like the classic idea of ghosts, until at the last, two pale specters hovered over me in the air as I lay panting on my back.\n\nYou have been an admirable and accomplished lover, Master Michael Edwards, Jacquie thought to me. We will be around if you need us, and we will continue to look for ways we can enjoy each other. We are not allowed to get into details, but you will find that there is a reason your Uncle Solomon lived as long as he did. I assure you, though, his quality of life did not suffer.\n\nIt would take a tremendous effort on our part, Lizzie added, and quite a lot of energy to provide you the comfortable sleeping arrangement you have enjoyed. Unfortunately, you will do better -- and so will we -- if you resume 'normal' sleeping arrangements. You may want to figure that into your planning.\n\nSo rest easy, mon baiseur encroyable, Jacquie rejoined. We will talk to you later...\n\nAnd with that, they faded out, leaving me alone and realizing I needed to be much closer to the fire. Falling asleep was no problem. I think I was out before my head hit the pillows.\n\n* * * * *\n\nThree days later, a Jeep Wrangler bounced up the lane to the house. I was outside doing some mundane chores, like beefing up the firewood supply and clearing deadwood from the yard. I'd made a run to the local Walmart on Tuesday and secured some camping gear, like an inflatable mattress and sleeping bag, a couple of lanterns, some cooking gear and like that. I'd decided to go the camping route while I figured out what I really wanted to do. The Jeep was bringing me the first part of the plan.\n\nPerfect Legs, followed by a Perfect Ass, Perfect Boobs and a Perfect Smile oozed out of the Jeep and stood there in all her redheaded glory, holding aloft a manila envelope. I was getting hard and she hadn't even said anything yet.\n\n\"Hi, Mike!\" Ms. Bethany Franklin called out and started walking over to me. This was obviously her sprayed-on casual look... tight jeans, Nikes, a thin blouse about two sizes too small in the bust and an open sweater. And no bra that I could see. Everything jiggled as she walked and I was getting severely distracted.\n\n\"I have the retainer agreement from Charles,\" she told me as she got to me, \"and I've added a list of the various contractors I know who will do right by you. And by the way, there can be phone service, if you want. AT&amp;T used to have a line out here... I checked. You'd have to settle for DSL over copper, but I'm sure they'd set you up if you asked. I also checked about wireless and you're going to have to wait a bit for that. They've got a tower planned that will cover this area, but not until late next year. Oh, and Viasat, HughesNet and Omni-Range all have satellite services, if you'd rather have a VOIP/internet bundle.\n\n\"Plus, I checked with some of the farmers around here and several are interested in leasing land to work, if you want to go that route, depending on how much you're going to charge. I've been a bit of a busy girl and I hope you don't mind my charging in like this. I know you're new to the area and could use a friend. I'd also like to get a look... at... the...\"\n\nShe slowed to a stop as she stared at my ghost-enhanced flagpole pushing out the front of my sweatpants, which were tenting something fierce. It took me a moment to figure out what was going on, and when I did, I turned red. I also fished my shirt out and hid the hard-on as best I could.\n\n\"I'm sorry, Ms. Franklin,\" I told her. \"I don't mean to be rude or anything. Can I get you a cup of coffee or something?\" I took the envelope and turned away a little, in the general direction of the house -- and incidentally trying to hide the tenting.\n\n\"Uh, yeah... sure!\" she answered as she tore her eyes loose and shook her head to clear it. \"Oh, and it's Bethany. Or Beth...\" I headed for the house and she followed along.\n\nOoohhh, I heard Lizzie's voice. I was surprised, since they were generally leaving me alone. She is very interested in Master Edwards. Or at least, a significant part of him...\n\nOui, Jacquie answered, also in my head. Zis may be ze answer to our problem...\n\nI had a sudden, sinking feeling and knew the two nebulous post-mortem apparitions were hatching some sort of plot. Dimes to donuts it included some combination of me and Bethany. Unfortunately, I had a very good idea where they were going with this, because I'd been having the same idea since leaving the lawyer's.\n\nI walked into the main room where I was still using the fireplace for heat and a stove -- fixing up the kitchen was on my list, just after the roof and walls. I had a pot of hot water staying warm on a two burner camp stove, and it would only take a minute or so to bring it up to a boil. I was fishing out an extra cup as Ms. Franklin -- Beth -- walked in and began sizing up my setup.\n\n\"Going primitive?\" she asked as she took in the sleeping bag, the cooking gear, canvas utility washstand and so forth.\n\n\"Out of necessity,\" I told her, keeping my back to her. \"My priorities are going to have to be the roof, the walls, the kitchen and the bath, in that order. How do you take it?\"\n\n\"Ridiculously sweet,\" she told me and I could feel the smile. Figures, I thought. Then dumped in a boatload of sugar.\n\n\"I'm hoping you're going to help me connect with the right people for those,\" I told her as I turned and handed her the cup of sucre de canne avec caf\u00e9. \"I'd really like to get all that done before December. That will give me a comfortable place to live while I get the rest of it sorted.\"\n\nShe accepted the cup, pursed her lips and blew on it. I probably don't have to mention what went through my mind. She took a sip, smiled and told me, \"perfect! And thank you.\" She looked around and I realized she wanted to sit, so I pointed at one of the camp chairs folded up near low table I'd pulled down from upstairs. Then I decided to stop being stupid and unfolded it for her. She had her hands full of hot coffee. She smiled again, and moved to sit down in it while I unfolded the other, grabbed my mug and sat, facing her. At least sitting down, the hard-on didn't show as much.\n\n\"I certainly can,\" she nodded. \"Top on my list of contractors is Joe Weis. He's a general contractor who can handle everything from structural, to plumbing, to electrical, and just about anything else that comes up. He doesn't do wells, though. I've got another guy for that. Joe's father, Marty, is out of the business now, but his hobby was and is colonial architecture, from city to rural, sixteen hundreds on. I thought, after hearing some of those conditions of the will, that you might want to talk to him.\"\n\n\"I definitely do,\" I admitted, getting impressed by her energy and knowledge. She was actively pushing my naturally suspicious cynicism out of the way. \"And I'm probably going to need an Old World cabinetmaker and furniture maker. There's some beautiful antiques upstairs that need to be restored.\"\n\n\"I know a couple of those guys, too,\" she smiled. \"When the time comes.\"\n\n\"Is there anyone you don't know?\" I asked, a little facetiously. She was starting to seem like the Great and Powerful Oz.\n\n\"You,\" she told me. \"Yet.\" The look she gave me when she said it stopped me right in my tracks.\n\n\"Uh, okay...\" I drawled, feeling like I might be fresh meat for the lioness. \"Not much to know. City kid with a background in Boy Scouts and college partying. BS in Comp-Sci and a job as an IT consultant. And now, apparently, landed gentry. Who is probably going to land on his face several time, getting the hang of all this.\" I waved my hand in the general direction of the farm.\n\n\"Family?\" she asked. \"Wife? Girlfriend? Companion of Opportunity?\"\n\nHuh??? Oh. Um...\n\n\"Family is my parents, a younger sister and two younger brothers,\" I answered her. \"In Ohio. No wife, no girlfriend, and I don't even know how to start answering 'Companion of Opportunity'...\"\n\n\"A nice term for a Balling Buddy,\" she told me. \"I was trying to avoid being crude. So you're single and alone? That's going to make fixing this place up kind of rough. Although I trust the guys I've told you about to do a great job of doing what you want done. It just seems you'll be kind of... isolated.\" She, too, gestured towards the farm in general.\n\n\"No, no balling buddies,\" I admitted. \"My last one left for California to make it big in porn films.\" She started to laugh, then saw my expression.\n\n\"You're serious, aren't you?\"\n\n\"You've heard of Maitland Ward?\" I asked. When she nodded, I told her, \"Lynda thought Maitland was an awesome role model. Ballsy as all hell and good looking, to boot. Lynda decided she wanted to try it, too. I think Lynda and I are still friends, and I can tell you she will be excellent at what she does, but she's there and I'm here.\"\n\n\"That's still got to be a kick in the nuts,\" Bethany opined. \"How long have you been celibate?\"\n\nWhat was with this girl and her questions? She kept surprising the hell out of me.\n\n\"It's not that bad,\" I pointed out, somewhat defensively. \"It's been less than a year. She told me her decision at the New Year's Eve party. But I'm okay, really. I've got a lot to keep me busy, and now all this... I'm just beginning to discover how um, unique this farm is.\"\n\n\"Do you mind if I look around?\" she asked, knocking back the rest of her coffee-flavored sugar.\n\n\"As long as you don't make me an offer for the place, I'm fine,\" I told her. \"You heard the bit about passing it on to a blood relative.\"\n\n\"What about an offer in general?\" she smiled coyly and I knew it wasn't my imagination!\n\n\"That would depend on the offer,\" I sort of smiled back. To be honest, I'm not all that great around beautiful women. I prefer the ones that are assertive, but the assertive ones are usually more interested in pursuing the Jocks and Bad Boys. Not the Nerds, like me.\n\nYou see? I heard Lizzie's voice in my head. She will seduce him and we will be able to see if we are compatible...\n\nLizzie, the Countess chided her, you are not supposed to tell 'im zat...\n\nOh... Lizzie sounded chagrined.\n\n\"Don't worry,\" I told them. \"We're headed in the same direction.\"\n\n\"Excuse me?\" Beth asked and again, I realized I'd actually said it out loud. I was going to have to learn...\n\n\"The, um... the same direction,\" I fumbled. \"Your interest... um, in the farm... seems to uh, parallel mine. We're sort of thinking in the same direction.\"\n\n\"I see...\" Beth drawled. \"Okay, then... shall we?\"\n\nIt took me a second. \"Oh, yeah! Yes. Upstairs. You should come see the antiques and stuff upstairs. I've cleaned up most of the pigeon feathers, or whatever it was that was nesting up there. I've got the shutters closed, but I can open them for some light.\" I started in the direction of the stairs and she got up and followed me. Mercifully, my hard-on had gone down, mostly, and I wasn't preceded by a telephone pole.\n\nI gave her the grand tour of the house and she did seem to get into the antiques, and what would need to be restored, versus upgraded, and how... and she really was rather knowledgeable. Intelligent, competent, sexy as all hell... okay, I couldn't completely turn off the gonads.\n\n\"Who did you say you worked for?\" I asked as we came back in from a tour of the outbuildings. I had intentionally left out showing her Uncle Sol's bunker.\n\n\"Bulwer &amp; Lytton,\" she told me, \"and believe me, Mr. Lytton was apoplectic they weren't going to be able to represent the sale of this land. He would have been able to retire on the commission.\"\n\n\"So he'd get the commission, not you?\" I had figured she'd be angling for the deal.\n\n\"At the moment, I'm just a glorified gopher,\" she told me. \"An accomplished flunky with a BS in Business Admin, Real Estate. I have about 18 more months to go to be a full-fledged associate. Mr. Lytton appreciates my feminine charms, as it were, and sic'd me on you to close the deal for us. I'd get a bonus, of course, but nothing like the commission.\"\n\n\"So if you can't get the commission, or the bonus, why are you still so willing to help me out?\"\n\n\"Would you like a polite answer or the brutal truth?\" she asked in return.\n\n\"I'll go with the brutal truth,\" I told her. \"Fewer surprises that way.\"\n\n\"Okay, I was hooked by the implied size of your schlong.\"\n\n\"So... maybe not fewer surprises,\" I managed to get out. Right before, \"uh... what???\"\n\n\"When I found out what you were worth, I thought it would be great to have an obscenely rich balling buddy. Then I saw the size of the tent you were making and an entirely different set of carnal desires kicked in. If that's how big you grow when you're contained, I'm fascinated by how big that brute would be if you let him off his leash.\n\n\"Now, throwing you to the ground, ripping your clothes off, sucking you hard and jumping up and down on that monster would probably be really tacky. So I decided that since you really do have a nice place here, with a lot of potential, that helping you out might ingratiate me with you and I might be able to seduce you. One of the reasons I moved here after getting my Bachelor's in Business Admin is because my reputation was preceding me. You see, I'm kind of a nympho and I was getting in trouble for it. Purdue was not very happy with me, though a lot of the guys were, especially professors. But I can't just turn my nympho off... so, you wanted the brutal truth, that's the brutal truth.\"\n\nSee? SEE??? I told you she would be perfect for us! Lizzie virtually screamed in my head.\n\nYes, dear, you are very smart, Jacquie nudged back. Now be quiet and let Mike be seduced...\n\n\"Would you two shut up?\" I asked. \"Ms. Franklin is doing all the work...\"\n\n\"It's Beth,\" she interrupted me, then paused a moment. \"You two?... Who are you talking to?\" She started looking around, maybe looking for a hidden camera or something. I heaved a big sigh.\n\n\"Well, you're going to find out pretty soon anyway,\" I started, then moved to sit in one of the chairs. She followed as I poked the fire up a bit. \"This place is haunted.\" I looked at her for any reaction, but she was just sitting there, staring at me. \"By a couple of women from the seventeen hundreds.\"\n\n1790, I heard the Countess tell me.\n\n\"1790,\" I echoed. \"That's when they were murdered. The thing is, they're actually very fun, really randy ghosts and I've been learning a lot about them since I got here Halloween. They're part of the reason why I'm as, uh, big as I am. They can only manifest... like, become real... twice a year. Once is at Halloween and the other is Walpurgisnacht. The rest of the time, they're like, um... spirits. Like you'd think a normal ghost would be.\"\n\nShe was just sitting there, staring.\n\n\"So the thing is, they're really randy. I mean, really randy. Beyond nympho type randy. And there's two of them. And the way they keep from going insane and laying waste to everybody is by having sex. As you can imagine, when they're incorporeal, that can be a problem.\"\n\nBethany was still just sitting there, staring at me.\n\n\"So they possess animals, like wolves and rabbits and like that, and they fuck a lot. And sometimes...\" I took a deep breath and hurried through it. \"Sometimes they can inhabit humans and get to feel all the feelings they would have felt when they were alive but their victim is kind of out of it and the way I get it the person possessed doesn't necessarily remember what happened and so they just end up confused and sore and...\"\n\n\"MIKE!\" Beth interrupted me by yelling at me. I shut up. \"Take a breath!!!\" She didn't look angry though. I tried to take a breath and calm down. When I got my breathing under control, she leaned forward and took my hands.",
        "\"Mike, are you in there?\" she asked. \"Can you hear me?\" I nodded and she went on.\n\n\"Mike, I have one question for you. Okay?\" I nodded. \"Mike... are you FUCKING KIDDING ME???\"\n\nI shook my head.\n\n\"Mike...\" she started out calmly again. \"Have I got this right? You are living with two ghosts who possess people to have sex and you have been fucking them???\" She ended up a bit agitated.\n\n\"Well, sort of,\" I tried to explain. \"They haven't possessed anybody, yet. I mean, to have sex with me. Because I got here on Allhallowtide and they were able to manifest. So we were fucking in their ghost forms, but their solid ghost forms, not the usual post-mortem nebulous apparition forms.\"\n\nShe sat back on her heels. \"Yet?\" she asked quietly.\n\n\"Uh, yeah... yet,\" I told her. \"Maybe you better, like, get back in your Jeep and hightail it out of here? Nobody will believe you, so I'm pretty sure you won't tell anyone. You won't want them to think you're crazy. I'm pretty sure, though, that if you go ahead and seduce me, at some point they won't be able to keep their supercharged libidos to themselves and you probably aren't up to that level of sexual experience.\"\n\nI was trying to be honest. How was I supposed to know it was like waving a cape in front of a bull?\n\nShe didn't jump in her Jeep and hightail it. She didn't even move away from me. She stood up, moved over to where I was sitting, bent forward at the waist putting me eye-to-nipple with those humongous tatas, reached her hands out on either side of my face and drew me up into a kiss. A major kiss. A major, let's-just-suck-out-your-soul kiss. A Major, Bring It On! kiss...\n\nI can resist everything but temptation. Thank you, Oscar Wilde.\n\nI kissed her back. I put everything I had into kissing her back. We were so liplocked that I ended up tumbling out of the chair and falling to the floor with her and neither one of us was letting up. She had her tongue halfway down my throat and was rubbing up against me, hard. Hard enough that I felt the pop! pop! pop! of her buttons letting go. She obviously felt them, too, because she sat up, said \"Oh, fuck it!\" while pulling off the sweater and remains of her blouse, then hefted her tits in my face and asked, \"you like?\"\n\nI liked. Damn, did I like! I liked so much, I pulled her to me, glomming onto a nipple with my mouth while rolling the other between my thumb and forefinger.\n\n\"Oh, fuck, yes...\" she murmured as I suckled. I was guessing I was doing something right.\n\nMy, my... Jacquie's voice came to me. She iz most certainly a kindred spirit... a razzer amazing libido, don't you zink?\n\nI would have asked if she was talking to me, but my mouth was full.\n\nOh, yes, my Lady, I quite agree, Lizzie came back. Must we wait for them to fuck before partaking?\n\nIt would be ze polite zing to do, the Countess answered. Let zem get used to each ozzer first.\n\nThat was about the point where Bethany began pulling at my shirt.\n\nI'm only stupid occasionally. I broke free from suckling her, leaned back and started taking my shirt off. She took the opportunity to stand up, kick off her shoes, wiggle out of her skintight jeans, strip off her socks and pull off her panties.\n\nHoly. Fuck.\n\nAn absolutely perfect redheaded goddess was standing in front of me completely naked, with an expectant look on her face. I shook free of my fascination and finished stripping off my own clothes. Her attention immediately went to my groin and I swear, Ivan Pavlov would have been proud of her. She was literally starting to drool. Only a little, but still obviously excited by what she saw.\n\nOkay, so Jacquie and Lizzie had done a number on me. I was still getting used to the idea. I finished adolescence around seven inches and what I'd call normally thick. What she was looking at was closer to ten and very thick. I guess sex with a couple of ghosts will do that to a guy.\n\nShe inhaled me.\n\nShe dropped to her knees, grabbed my cock in one hand and my balls in the other and inhaled me.\n\n\"Oh, fuuuuckkk!!!...\" I moaned as her hot, wet mouth encased me and her incredible tongue went to work. Incredible, because it felt like it was prehensile, the way she was working up and down my shaft and using my glans to play tonsil hockey. Jacquie and Lizzie were intense... they were supposed to be. They were ghosts. Beth was almost in the same category and as far as I could tell, she was human. An alive human. An alive human with the most amazing mouth and starting to give off pheromones that were jacking me up even higher.\n\n\"Mmmm, gd th's gud,\" she murmured around my cock as she continued to suck on me like she was a starving baby on a teat. At the rate she was going, I wasn't going to last very long. And without the aid of the post-mortem nebulous apparitions, I wasn't sure I was going to have more than one in me. On the other hand, based on what they'd obviously changed, I didn't know I wasn't going to be able to cum more than once. Bethany made it moot.\n\nShe started doing something with her tongue and the tip of my glans that got something very tickled, almost painfully so. Then she deep-throated me. Honest to God, all the way down to where she was licking my ballsack. That did it. I exploded.\n\nI'm pretty sure \"Oh, my Fucking GOD!!! I'm Cumming!!!\" is what came out of my mouth. Jet after jet shot out of my cock at the same time and she swallowed it, all. She kept sucking and swallowing until there wasn't any more to get. As she came off my cock, she reached between her legs and started jilling herself.\n\n\"Oh, yeah! Oh, yeah! Oh, fucking YEAH!!! Oh! Fucking! CUMMING!!!\" She started shaking and quivering right there on her knees with one hand still on my cock like a handhold and the other busy between her legs. And she wasn't stopping.\n\n\"Oh, Fuck, YEAH!!!\" she cried out again and shivers wracked her body. \"Oh, fuck! Oh, fuck! Oh, fuck, YES!\" she cried out as a third massive orgasm ripped through her. And we hadn't even fucked, yet.\n\nI really think I am going to like this girl, Lizzie's voice entered my head. Now, my Lady?\n\nNo, dear, Jacquie answered. Let them exhaust themselves. We will have plenty of time... although you are right. She is very, very responsive...\n\n\"Oh, Lord, that was awesome...\" Bethany moaned as she came down from her crashing cums. \"Nature really blessed you, Mike... thank God...\"\n\n\"Nature didn't bless me with this,\" I told her, still panting from cumming my brains out. \"And I don't think God had much to do with it, either.\"\n\nShe looked at me funny, like she was expecting an explanation.\n\n\"I used to be significantly smaller,\" I told her, \"until a couple of ghosts had their way with me. But I'm glad you liked it.\"\n\n\"Well,\" she smiled, \"aren't I the lucky one? And, that takes care of the oral... do you have a favorite position for fucking?\"\n\nThis woman was going to destroy my brain with her more than straightforward approach. In all my twenty-two years on this planet, I'd never known a woman like this. If this was nymphomania, I was getting addicted.\n\n\"Um, no,\" I answered her. \"Whatever my partner likes, I suppose. I was kind of taught to make sure she was satisfied first. So... is there a position you like best?\"\n\n\"There is a god...\" she murmured as she moved to the sleeping bag I still had in front of the fire. She got on her hands and knees, spread her legs and dropped her shoulders, then told me, \"doggy.\"\n\nMagnifique! I heard Jacquie in my head. Oh, yeah... this was going to get interesting...\n\nI moved over behind Beth. Her juices were already running down her thighs and I was already coming up hard... another \"gift\" from Jacquie and Lizzie. It didn't take much to line up with her swollen pussy and plunge in.\n\n\"Oh, Fuck, YES!\" she cried out as I bottomed out. I wouldn't have bet on her being able to take all of it, but she did. And she started bouncing back onto my cock, crying out \"Yes! Yes! Yes!...\" on each bounce. Hey, all I had to do was kneel there and stay hard. Again, she was doing all the work.\n\nI counted three solid orgasms from her before I decided to start participating. I grabbed her rather luscious hips and started pounding back. \"Oh, yeah...\" she moaned as she stopped bouncing and let me take over. \"Damn, you're good! Damn, you're good! Damn, you're... gonna make me CUM!!!\"\n\nThe way her pussy clamped down on me, I thought I'd been caught in a Chinese Finger Trap. And I could see her anus pulsing hard, above my cock. I didn't figure pulling out was such a hot idea, so I just kept going, since I hadn't cum, yet. Apparently, that was the right answer.\n\n\"Oh, yeah! Oh, yeah! Oh, fuck, yeah! Harder! Oh, fuck, yeah, harder! God, yes, fuck me! Fuck me! Fuck meeeeeeee!...\" She went over hard again, and kept right on doing that, again and again and again. She was incredibly vocal and very specific about what she liked. It only took a few like that and I was building back up to my own climax.\n\nMy ghosts -- it was really weird that I was thinking of them as my ghosts -- had really done a job on my responsiveness. Before them, I wasn't exactly a One Shot Wonder, but this kind of recovery time had only been in my dreams. Now, I was going to blow another huge load within a few minutes. And as far as I could tell, this was all me... it didn't feel like Jacquie or Lizzie were messing with me. I also had another realization.\n\n\"Uh, Beth?\" I panted as we pounded into each other. \"I'm not protected. Should I cum on your ass or just miss?\"\n\n\"In my pussy, you wonderful fucker... I'm protected,\" she moaned back. \"Give it to me! Fill me with your fucking cum, Ponyboy... jam it to me until I can't fucking take any more!\"\n\nAs if I needed any encouragement. In effect, that was all she wrote.\n\n\"OH, FUCK, CUMMING!!!\" Again I unleashed a torrent into this incredible goddess... or maybe succubus... whatever. She tripped over right after I did and milked my cock like her mouth had. I was cumming so hard I was seeing little flashing lights and shit.\n\nWhen we finally came back down from our respective cosmic highs, she fell forward off of me and onto the sleeping bag, a little rivulet of my jizz leaking out of her.\n\n\"Okay...\" she panted. \"That... takes care... of... vaginal...\" She struggled back up to her hands and knees, proffering her ass. \"Next...\"\n\nI started laughing.\n\nShe turned to look at me over her shoulder. \"What's funny?\" she asked, a little peeved, maybe.\n\n\"Your mating call,\" I told her as I tried to rein it in.\n\n\"What mating call?\" She was definitely acting confused.\n\n\"The mating calls of the blonde, the brunette and the redhead,\" I told her. She wasn't getting it, so I told her. \"The mating call of the blonde -- 'like ohmigod, I'm so drunk...'; the mating call of the brunette -- 'has the blonde left, yet?'; and the mating call of the redhead -- 'Next!' I was laughing at 'Next!'...\"\n\nShe actually did break a smile on that one.\n\n\"Okay, so come on,\" she told me, kind of faux scolding. \"Get that horse dick up and in my ass. Now...\"\n\n\"You're going to have to give me a minute,\" I told her as I sat there in amazement. \"And by the way, you said you're protected. I hope you are disease free.\"\n\n\"Yep!\" she smiled. \"And I'm presuming you are, too, since you haven't gotten laid in a year. Should I play with myself while you recover? Do you like watching?\"\n\nI was going to give her a serious answer, but all of a sudden a chill ran through me and I went straight to massive hard-on, do not pass Go!, do not collect $200. Her eyes went wide as she watched me inflate almost instantaneously.\n\n\"Thanks a lot,\" I murmured, more than a little ticked. Bethany looked at me strangely.\n\nYou do not wish to keep the lady waiting, M'sieur, I heard Jacquie tell me.\n\nBesides, Lizzie added, we have voted and she has become our next invitee for a foursome.\n\n\"Shouldn't you ask her first?\" I asked in reply. Now Bethany was looking at me very strangely.\n\nYou can explain, M'sieur, while you are ravishing that very fine derri\u00e8re, Jacquie told me. I shrugged. What else was I going to do?\n\nI moved over behind Beth on my knees, lining up with her awesome rosebud and wondering what I should do about lube. I decided there was more than enough flowing from her pussy to suffice and started rubbing my glans between her nether lips. She really was soaking and it didn't take long before I figured I was lubed up enough.\n\n\"Are you sure?\" I asked. For some reason, it was important to be polite.\n\n\"Oh, yeah, I'm sure...\" she sighed. \"You have no idea how sure I am...\"\n\n\"Okay,\" I agreed. I pushed my tip against her ass and she took me easily. It looked to me like I was even bigger than before, maybe up to eleven or twelve, but definitely wider... like maybe two-and-a-half or more across. Not around, across. And she took me, even pushing back into me a little. My nuts were smacking her clit when I got seated.\n\n\"Oh, God, yes...\" she moaned as she dropped her shoulders, leaving her ass high and impaled. \"Fuck me hard, Mike... make me cum my brains out. I love getting off from a good ass fucking.\"\n\n\"You need to be careful what you wish for,\" I told her as I started rocking. \"There are a couple of very horny ghosts around here who would love to possess you and use you to fuck the hell out of me, and incidentally, to make themselves feel really, really good.\n\n\"Oh, fuck, that's good...\" she groaned as I started pounding away. \"You're serious, aren't you?...\"\n\n\"Yeah, I'm serious,\" I told her. \"If things all of a sudden get really cold, don't freak out. You probably won't remember much, but how much you're sore and where, later, will give you an idea of what happened.\"\n\n\"That's too bad,\" she moaned some more. \"I think... oh, fuck, Mike! you're gonna make me cum... I think being possessed could be kind of cool... oh, fuck, Mike... oh, FUCK, Mike! Oh, FUUUUUUCCKK!!!\"\n\nI felt Lizzie dive into Beth and Jacquie invade me. Beth and I exploded. I had a death grip on her hips and might have been coming out of her mouth if the biology worked that way. As it was, I didn't black out like I thought I would. I got cold, yes, and started shaking like crazy, just like Beth did. But the shaking wasn't from the cold. It was from the massive orgasm ripping through me and the same kind of thing must have been happening to Beth.\n\n\"Oh, fuck! Oh, fuck!\" I panted as I swelled up to impossible proportions. Beth was clamped and pulsing on me and I was blowing another huge load, this time up her ass. An incredible third one and before lunch even.\n\nThe ladies wouldn't leave us alone. I lost track of whether I was actually ejaculating or not. Beth kept pulsing on me and I pulsed back. My awareness of anything other than my cock in Beth's pussy pretty much went the way of the dodo. Finally, though, after God knows how long, Beth and I started to come down and we ended up falling to the floor on the sleeping bag, her spooning in front of me and me still in her ass. With the grip she had, I was afraid to try to pull out.\n\nI think we must have dozed some, because I came around feeling a little hungry and still docked in her. She stirred when I did and I decided to ask.\n\n\"Hey,\" I touched her shoulder. \"Are you hungry?\"\n\n\"Yeah, I guess,\" she mumbled and I started figuring out how to extract myself and go put something together. That's when the tray came floating over. I know I was surprised. Bethany was bug-eyed!\n\n\"What the fuck?\" she muttered as the tray settled down in front of us.\n\n\"It's a peace offering, I think,\" I told her. \"For taking us over. Shall we separate and I'll see what they've brought us for lunch?\"\n\n\"Yeah, I think we're going to have to,\" she agreed as she eased forward off my cock. And kept easing, and easing, and... \"Jesus! You're big!\" she announced to the world at large. \"I've never had a lover that big. You are amazing...\"\n\n\"So are you,\" I answered. \"Here... let me.\" I moved to the tray and there were the same venison sausage, cheese and crackers, wine, water and a small carafe of tea with a sugar bowl. I asked Bethany her preferences, then set about making us some lunch.\n\n\"So that was being possessed by a ghost,\" she commented as we ate. \"Seriously?\"\n\n\"Seriously. Hang around here on Walpurgisnacht and you can meet them in person.\"\n\n\"Walpurgisnacht?\" she asked thoughtfully. \"The Witches' Night? Your two ghosts are witches?\"\n\n\"No... it just happens to be their Death Day. They can become corporeal on Allhallowtide and on their Death Day.\"\n\n\"They both died on the same day?\"\n\n\"Long story,\" I told her. \"I'll tell you some time. In the meantime, I have no idea why a goddess like yourself would deign to pleasure a mere mortal like me, but you did and I thank you from every cell in my body. You'd better make your escape while you still can.\"\n\n\"Goddess?\" she asked with a slight smile. \"Don't you mean Demoness or something?\" She moved from sitting cross-legged facing me to stretching out. \"You know...\" she drawled, not exactly addressing my suggestion, \"you haven't fucked my titties, yet. Would you like to?\"\n\nAllow me to pause here to point out that it did cross my mind that between Jacquie, Lizzie, and now Bethany, I was a dead man. And I had no idea who my next closest blood relative would be other than either my sister or my parents. Giving my sister to these two ghosts could be dangerous -- for all of them. My sister wasn't exactly prim and proper when it came to expressing herself sexually. God knows what would happen if my parents ran into them.\n\nOf course, all of that meant exactly zilch to my libido.\n\n\"Oh, God... I'd love to,\" is what I actually said.\n\nOh, this should be wonderful! Lizzie sounded ecstatic. I started getting worried.\n\n\"Oh, and, uh... if you find crazy stuff happening, just, uh... just go with it. So far, Jacquie and Lizzie haven't done anything to hurt me and I don't think they'll want to hurt you. You're too much right up their alley. They could make a wanton slut feel inadequate.\" Actually, I didn't really mean to say that last bit. It just sort of popped out.\n\nWanton Slut??? I got from both of my ghosts at the same time, with dual internal head slaps.\n\n\"Wanton Slut?\" I got from Bethany as I rubbed the back of my head. \"Do you think I'm a wanton slut?\"\n\n\"Uh, no,\" I hurried to explain. \"None of you are. I mean, a wanton slut is really into all out sex, and you are really good at all out sex... actually all of you are... it was a compliment. I mean, I thought it was...\"\n\n\"Hmmm...\" she murmured as she lay back and hefted her ginormous boobs. \"I think my girls and I will have to see how good we really are at all out sex.\" My balls went to my throat.\n\n\"With the help you're about to get,\" I swallowed hard, \"you won't have any problem. Believe me.\"\n\n\"Well, how about you come over here and eat me before you titty-fuck me?\" she asked as she lay the rest of the way down and spread her legs. \"I will want you to blow your load all over my face.\" I was harder than Gibraltar before I got over there.\n\nI knew she was bare. I had figured she shaved. I changed my mind as I went down on her. It must have been one of those Brazilian wax jobs. There wasn't any hair. Anywhere. Which was awesome, as far as I was concerned. I love going down on pussy... I just don't like coughing up furballs. Or any hair in the teeth, for that matter. Her pussy was like an orchid, with the inner lips just sticking out a little and kind of fluted. She tasted incredibly sweet and had a clit the size of my little finger's tip. I went to town, starting with long licks from her anus to her clit and back, making sure to probe everywhere I could get my tongue.",
        "She went nuts.\n\n\"Aiieee!... oh, fuck, yes!!! God, that's good...\" She pushed her mons into my face, encouraging me. I tried everything I knew, from tonguing her ass to giving her clit a blowjob, and it all just kept getting better and better.\n\nIt would probably be easier to stimulate her jewel if she were a bit larger, I heard Lizzie's voice in my head. I was going to ask her what she was talking about when Bethany's clit blew up to the size of a grape. I happened to be sucking on it at the time.\n\n\"OHMYGODI'MCUMMINGGGGG!!!...\" Well, duh... she was pulsing away like crazy and flooding my face.\n\nYou might be able to reach her more intimate parts wiz zome length, M'sieur, Jacquie commented. That's when my tongue grew about six inches.\n\n\"Wll 'u 'ut 'at owt???\" I tried to protest... but my tongue was getting in the way. That's when a rather devious side of me kicked in. Well, if I wasn't going to be able to control the ghosts' messing with me, I might as well make use of it and hope it wasn't permanent. I stuck my entire tongue up Beth's pussy and started wiggling it around.\n\n\"OHMYFUCKINGGOD!!!\" I'll admit, it sure seemed to work. She was crushing my tongue and gushing into my mouth. I had to swallow like mad to not drown.\n\nOh, so good... I heard Lizzie murmur and I heard Jacquie laugh. I guess they were getting what they wanted. I still had a tit-fucking to do, though.\n\nI withdrew my tongue and tried to tuck it back in my mouth. It was only working partially. So with my tongue lolling out like a dog and my overly long schlong bouncing in front of me, also like said dog, I waddled my way up Bethany's torso to where I could straddle her and get my cock between her amazing mounds of flesh. Definitely Les Grande T\u00e9tons (I know... those French had been away from civilization way too long). Just putting my hands down on either side of her made my forearms push her tits up around my cock, and damn! did she feel good!\n\nI started stroking and she started pushing back. One of her hands snaked down past me, I guess to play with herself. The other she tucked under my ballsack, encircling me and tugging on me. I felt everything starting to pull up again and I knew that it was that ghostly magic, but I didn't care. I felt phenomenal and I was going to blow a huge load all over Bethany's face, as she'd requested, and was just going to stop questioning anything in my life anymore... I was slave to two post-mortem nebulous apparitions.\n\n\"Oh, fuck... gonna cum...\" I growled and Beth managed to moan, \"oh, yeah... oh, yeah... give it to me, big guy! Cum on me! Cum all over me!\"\n\nDid she just say 'cum all over' her? I heard Lizzie ask.\n\nZat iz correct, Jacquie answered. I was in trouble.\n\nWell, not so much in trouble as in for a massive surprise, although the way things had been going, I guess I shouldn't have been surprised at all. It was going to take time to get used to having these two randy ghosts running things.\n\nI came. Jesus Christ, did I cum! I came like a fucking fire hose. One huge, long, face-hair-and-tits soaking stream with short interruptions from my pulsing. And I kept cumming and cumming and cumming... By the time my jizz let up, Bethany was literally covered from the top of her head all the way to my thighs in cum. It was dripping everywhere. And Beth had the silliest grin on her face I'd ever seen.\n\nWhen I got my breathing under control, I asked, \"Are you in there?\" I meant Beth...\n\nI got back \"Yes,\" Yes and Oui... that's the point where I gave up trying to maintain any kind of rational thought and just collapsed on those massive, sticky jugs. Somebody could wake me up and clean me up later.\n\n* * * * *\n\nBeth moved in the next Friday. She had taken a commission with me to help renovate the farm and told her boss she was either taking a leave of absence or quitting, his choice. He chose L-o-A. I think he still saw a lot of potential in her. So did I, actually.\n\nShe liked to fuck. A lot. And our ghosts made sure we had every opportunity to go overboard. They'd ride along with us and get to feel what we were feeling, and it suited them to a \"T\". I got ahold of my boss and explained that a whole bunch of family shit had come up and I was taking my three weeks' vacation while I sorted it out, and that I'd get back to him after I knew what I was doing.\n\nThen Bethany and I settled into the lives of the landed gentry and began overseeing the restoration work. Beth's contacts in the area came in very useful, and it only took us about six months to get the house in shape and a lot of the outbuildings started. Enough time that she was starting to show. And of course, Jacquie and Lizzie were delighted that they were going to be aunts. We all kind of agreed that Godmother wouldn't quite fit.\n\nI'm still keeping my hand in at work, doing a lot of remote consulting with occasional travel. Life isn't anything like what I'd imagined even a year ago. But really? I don't mind at all. In fact, life with a couple of post-mortem nebulous apparitions just keeps getting better and better...\n\n~Finis~"
    ],
    "authorname": "eidetic",
    "tags": [
        "ghosts",
        "halloween",
        "mff",
        "nymphomaniacs",
        "young man",
        "young woman"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/it-was-a-dark-and-stormy-redux"
}