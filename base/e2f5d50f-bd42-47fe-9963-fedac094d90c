{
    "title": "Always a Bridesmaid",
    "pages": [
        "\"Jason! Shelby! Hi! It's so nice to meet you and congratulations to you both!\"\n\n\"Thank you so much, Danica! And thank you for coming. We are so excited about getting started on the wedding planning. We can't wait to get going right, honey?\"\n\n\"Oh, right. Yes, definitely. We really are excited and yes, thank you for coming.\"\n\n\"My pleasure! So...it's February 18th. What day are we looking at?\" she asked the newly-engaged couple. Danica Evans been working solo as a wedding planner for the last three years after learning the ropes from a family friend for two years before starting her own business, and she knew very well how important timing was to pulling everything together for the big day.\n\n\"We were thinking mid-June right, honey?\" she asked. \n\n'She' was Shelby Stanton, a 25-year old former beauty queen, college graduate, and socialite. As a member of the Stanton family, one of the wealthiest in the low country of Beaufort, South Carolina, it was a given she would have nothing less than a spectacular wedding. A wedding that would be paid in full by her father, Robert Stanton, senior partner at the law firm of Stanton, Charles, and Kenning. Stanton was also a retired Marine Corps colonel who'd been a military lawyer for nearly 30 years as a Judge Advocate before retiring in Beaufort and starting his own firm some 15 years ago.\n\n'Honey' was her fiancee of four days, Jason Kelley, a 24-year old Marine Corps officer who flew F-18s at the Marine Corps Air Station in Beaufort. First Lieutenant Kelley had been out of flight school for just over a year and was assigned to a flying squadron known as VMFA-333 or \"Trip Trey\" as it was commonly called for it's three 3s.\n\nThey'd met at the Marine Corps ball, an annual event held on bases all across the Marine Corps every November 10th. Just like her mother, Shelby had always planned to marry a Marine officer who would sweep her off her feet and provide her with something at least close to the kind of life she and her older sister, Emma, had known growing up.\n\nAs always, there was a new crop of handsome, single officers to choose from, but in the past, they'd just been dance partners or perhaps even dates. The difference was Shelby's father had recently let her know it was about time she thought about settling down and having children and when the colonel spoke, Shelby listened. \n\nOf all the good-looking, eligible bachelors, Jason had caught her eye very early on. She'd no sooner let her father know whom she'd chosen than the retired colonel, wearing his evening dress uniform, had struck up a conversation with the young lieutenant. Right on cue, Shelby had drifted into their social circle waiting to be introduced. Kelley was caught off guard by her obvious beauty which was a rare for a guy as good looking as he was. But Shelby Stanton was nothing short of gorgeous and she was initially as charming as she was beautiful.\n\nBefore the night was over, he'd found himself agreeing to see her again, a date which included spending time with her family, led by the very formidable Colonel Robert Stanton, U.S. Marine Corps, retired. Further dates, or rather\u2014social engagements\u2014followed. Between the colonel's mix of forceful personality and affable nature, his endless stories of days gone by, the excellent cooking of his still-beautiful wife, Kendra, and Shelby's willingness to do um...anything to make young Jason happy, he soon found himself under her spell if not that of the entire Stanton clan, less the mysterious Emma whom he had yet to meet.\n\nThey dated non-stop for nearly three months during which time Jason and Shelby had been intimate almost every day after a proper third date, of course. And when it came to intimacy, Miss Shelby had proven herself a very talented, very accomplished courtesan, less the fee normally associated with women accorded such a title. \n\nShe was also very intelligent and able to hold her own on any topic, making that much more appealing to a young man ready to settle down and start a family as was Jason Kelley. Having once been Miss Low Country, Shelby was also as beautiful as any girl he'd ever known, and he'd known quite a few very attractive women. \n\nIn spite of something in his gut that wouldn't leave him alone, he'd fallen so hard (of maybe been pushed so hard) that just four days ago, he'd proposed to her and now he found himself at the Stanton's home sitting down to plan his upcoming wedding. They hadn't set a date yet, but Shelby had essentially done just that for them.\n\n\"Sure, June sounds...perfect, Shelby,\" he agreed bringing a big smile and a kiss on the cheek from her.\n\n\"Maybe the 14th? Seeing that it's Flag Day and all, I think that would be very appropriate. Don't you agree?\"\n\nIt was more a declaration than a question and once again, Kelley found himself swept up in the tidal force that was Shelby Stanton.\n\n\"The 14th? Yeah, that seems like a good choice. Sure. Let's go with that.\"\n\n\"Perfect! Then it's settled,\" she said mostly for Danica's effect.\n\nThe wedding planner looked at her notes then said, \"Okay, so that leaves us just under four months to pull this together. Next question is the approximate number of guests.\"\n\nFor the next two hours, Kelley felt like he was in one of Dante's circles of hell. He came from a solidly middle-class family and had a younger sister so he knew that a wedding was a big deal to most girls. Therefore he'd pretty much always expected to have one. What he didn't realize was how the planning could take on a life of its own. Planning that got into so much minutiae, it made planning for a deployment of an F-18 squadron seem trivial.\n\nHis mind was swimming in the details of things he'd never once thought about and about which he had no interest whatsoever. Floral arrangements, seating charts, guest lists, what kind of cake to serve, which band to hire, and perhaps most importantly, where to have it.\n\nAt some point, Mrs. Stanton set in with them and made sure to let her daughter know their home was large enough and an option she should at least wish to consider it. Shelby ruled it out almost as quickly as it was raised. No, she needed a place that would 'set the tone for the rest of their lives.' A chapel of some kind. One that was non-denominational, rustic, quaint, but beautiful. Kelley suddenly had visions of doing lengthy recon runs to every chapel within a 50-mile radius then going back for second, third, and even fourth visits among many things he dreaded even thinking about.\n\nAt one point, he politely suggested they take a short break. Shelby reluctantly said she could spare him for possibly ten minutes and he stepped outside onto their very large patio covered by an equally large pergola. It was cold outside and Kelley relished the chill of the air as he breathed in deeply. \n\nHe look around at the very-well-cared-for back yard and saw someone inside the modest glass-enclosed greenhouse situated near the fence. He hadn't been in it before and the idea of stretching his legs appealed to him. He walked across the grass that was dormant for the winter and poked his head inside. He saw the person near the back and said, \"Hey there!\"\n\nShe turned suddenly and he could tell he'd scared her. \"I'm sorry. I didn't mean to startle you. It's just that all the wedding planning was closing in on me and I had to get some fresh air.\"\n\nThe woman smiled and said, \"Oh, okay. You must be Jason. I'm Shelby's sister, Emma.\"\n\n\"Oh, okay. Your name has come up quite a few times in past several months. I didn't realize you were home visiting.\"\n\nShe smiled and said, \"I am here visiting, but this isn't home. At least not anymore. I have my own place in Port Royal.\" Port Royal bordered Beaufort as well as the Marine Corps Recruit Depot, Parris Island, which churned out thousands of new Marines from the eastern half of the US each year while San Diego did the same for the western half of the country.\n\n\"Oh, okay. I've been looking forward to meeting you.\" He extended his hand and Emma went to shake it then pulled back.\n\n\"Sorry. I've got potting soil all over me. At least I hope that's just potting soil,\" she said before laughing nervously. \n\nShe was also very attractive, and Kelley could see the resemblance rather clearly, but in that short amount of time, his instincts told him that's where the resemblance ended. Emma was obviously older, and she gave him the distinct impression she was very different than her younger, very outgoing sister.\n\n\"So you're a pilot?\" she asked as she went back to working with the roses she'd been tending.\n\n\"Yes,\" he told her. \"How about you, Emma? What do you do?\"\n\n\"Me? I...disappoint my father,\" she said without looking at him. She put down the tool she was using, turned toward him, then said, \"That wasn't fair. You don't even know me and I'm dragging you into a lifetime of drama known as the Stanton family. Please forgive me. Let me try that again. I'm a nurse and I work at Beaufort Memorial Hospital.\"\n\n\"No need to apologize. I'm trying to learn how to steer clear of that...drama, as you called it. Any advice?\"\n\nEmma laughed then said, \"Good luck.\"\n\n\"That's it? No words of wisdom? No...roadmap. No nothing?\"\n\n\"I tried dodging it most of my life, Jason. I gave up when I went away to college. Oh, and that's where the disappointment began, just in case you were wondering. Sorry, I'm sure you don't want to hear my tales of woe.\"\n\n\"Actually, I do,\" he told her. \"Anything I can learn to help me avoid the ubiquitous social landmines would be very helpful.\"\n\n\"Okay, but don't say I didn't warn you,\" she told him with a small laugh and another warm smile. \"Daddy wanted me to go to law school and I've never had the slightest interest in it. I like helping people and although I will admit that attorneys do sometimes help people, it's just not my cup of tea.\"\n\n\"That doesn't seem so bad. Choosing nursing over law. Both are respected professions.\"\n\n\"I like to think so,\" she said. \"But that's not all. You see, I'm also supposed to be married by now and producing grandchildren. Oh, and you should understand that means never leaving Beaufort, either.\" She smiled again then said, \"I suppose I could get away with living as 'far off' as Charleston to the north or maybe even Savannah to the south.\" She cut her eyes back over at Jason then said, \"I hope you know you've entered the Stanton's own black hole and once you marry Shelbo\u2014my childhood name for her\u2014you may never leave.\"\n\n\"Wow. Just like The Hotel California? You know, where you can check out anytime you like...\"\n\n\"But you can never leave?\" Emma said finishing the song from the '70s by The Eagles.\n\n\"It's none of my business and this may make me sound like some kind of throwback to the 1960s, but you're obviously very pretty, Emma. Is there some reason you're not married?\"\n\n\"Um...not really. Okay, maybe. I don't know. I've been close a couple of times. I was even engaged once\u2014to a pilot, by the way\u2014but I guess I'm one of those doomed to always be a bridesmaid but never a bride. In fact, I just happen to have the dubious honor of being the last...single...girl standing out of all my high school classmates. All of them have been married\u2014at least once\u2014by now.\"\n\nThis time she smiled at him in a way that told him she was a very warm, very genuine person. He hadn't seen any of the pomp and flash that accompanied her sister everywhere she went.\n\n\"Well, I'm sorry your fiancee didn't follow through. You seem like a pretty amazing catch to me.\"\n\nEmma didn't answer for several seconds. Then, without turning toward him, she said, \"He was killed doing a routine maintenance flight in 2008. He'd made it through two tours in Iraq without a problem. One of them was during Fallujah when they were flying hundreds of missions a day. Sorties, I believe, is the correct word.\"\n\n\"I'm very sorry. I feel like a total ass for implying he stood you up. And we often hear 'there's no such thing as a routine flight. Again, I'm really sorry for saying that.\"\n\n\"It's okay,\" she said. \"It was eight years ago and you couldn't have known.\"\n\n\"It just seems like Shelby would have mentioned it at some point.\"\n\n\"Well, as much as I love my baby sister, we are two very different people,\" Emma said confirming his gut feeling. \"I'm the older, quieter, always-well-behaved sister while she's...Shelby.\"\n\nKelley didn't want to laugh, but he couldn't help it. Nothing else need be said. He got it and Emma knew he got it and she laughed, too.\n\n\"That was mean, and I had no business saying it. She can be really great sometimes.\" Emma paused and realized that sounded just as bad. \"I should probably stop talking while I'm just behind. No need to bury myself, right?\"\n\n\"And I should probably get back inside anyway,\" he said.\n\n\"Yes, you should. At some point, she's gonna come looking for...\"\n\n\"Jason? Jason?! Are you out here?\" they heard Shelby calling.\n\n\"Oops!\" Kelley said. \"Is there a back or side exit I can use?\"\n\n\"Nope. Sorry. You're gonna have to face the music directly, mister,\" she told him.\n\n\"You mean firing squad?\" he quipped.\n\n\"Ah. Fast learner. I like that.\"\n\n\"It was nice meeting you, Emma,\" he told her as he looked over his shoulder for Shelby. \n\n\"You, too, Jason. I'm sure we'll be seeing a lot more of each other since I'll be...guess what? One of Shelby's bridesmaids. So...\"\n\n\"Jason Kelley! Where in the world are you?\"\n\n\"That's me,\" he said using his thumb to point toward the direction of the bellowing. \"Wish me luck?\"\n\nEmma laughed and said, \"Good luck. You're gonna need it.\"\n\nHe stepped out of the glass building and hollered, \"Over here, Shelby!\"\n\n\"Oh, there you are! Come on! Let's get back inside. We have a thousand things to cover!\"\n\n\"Oh, goody,\" he said loud enough that Emma heard him but Shelby didn't.\n\nHe heard her laugh and turned around. He put a finger over his lips and said, \"Shhh!\"\n\nEmma giggled for the first time and that made Kelley laugh. Shelby was almost there and said, \"What's so funny?\"\n\n\"Funny? Um...nothing,\" he said.\n\n\"Oh. Well, let's get back inside, then!' she said hooking her arm in his. \"Time's a wasting, right?\"\n\nDanica's next question actually registered with Kelley. \n\n\"How formal are we talking? Super formal? Formal? Semi-formal?\"\n\nKelley started speaking before Shelby cut him off. \"I don't know. Nothing too formal, right, Shel...\"\n\nShe put a hand on his forearm and answered for them. \"At least formal. Possibly even very formal. Jason will be wearing his evening dress uniform and the other men who aren't Marines will wear tuxes.\"\n\n\"Oh, okay. So dress blues then,\" she said making a note.\n\n\"No. I did not say 'dress blues',\" Shelby said in a way that sounded very condescending. \"I said 'evening dress', dear. I thought you grew up here,\" she added in a very catty kind of way.\n\nKelley didn't even own an evening dress uniform nor was he required to until he made major which was a good 8-10 years down the road if he stayed on active duty. It was a sharp-looking uniform with a black coat, white shirt, and red cummerbund, but in his mind, dress blues were every bit as good and more than good enough for a wedding. Why spend another $1,000 on a uniform he might never wear again? Oh, right. Shelby just told him to. That's why.\n\nRather than start an argument he knew would follow, he simply said, \"I guess I better see a tailor here pretty soon.\"\n\nKelley wasn't rich or even well off for that matter. He had managed to put away about $10,000 in the two and a half-years he'd been on active duty. The main reason was he'd been in Navy ROTC in college and gotten a full scholarship which allowed him to graduate debt free in exchange for a five-year commitment. Not a bad trade considering he was getting paid rather well to fly the jet of his dreams. He wasn't broke or living paycheck to paycheck, but a thousand bucks was a lot of money for a uniform he might only wear one time.\n\nThe rest of the day was a haze. After Kelley left he went back to his apartment and changed into some PT (physical training) gear and got ready for a five-mile run to help him do a little stress busting. Who knew getting married could be so much...fun?\n\nThe following Sunday morning he drove out to the Stanton's to return the colonel's golf clubs. Kelley didn't own a set and Shelby's father had insisted he borrow an old set of his and return them at his convenience. Jason and three of his friends from the squadron had played 18 rounds on Saturday and he wanted to get the clubs back as soon as possible.\n\nEvidently, they'd gone to the Air Station to attend church at the little base chapel so Kelley carried the clubs around back where he knew they'd be safe. As he went to set them down he heard a familiar-sounding voice call his name.\n\nHe whirled around and saw her standing behind him. \"Emma? Hi, there. This time you startled me.\"\n\nShe laughed and said, \"Turnabout is fair play, or so they say. I'd ask what brings you here but the golf clubs are the answer. The better question is how you're avoiding going to church with the Stanton clan.\"\n\n\"Um...the same way you are?\" he guessed.\n\nEmma laughed politely again then said, \"I hope not. Not if you want to remain in good standing with the colonel. You see, this is yet one more area where I have seriously disappointed my father.\"\n\n\"I had no idea he was a religious man,\" Kelley said.\n\n\"He's not. It's all about appearances. You see, he's a conservative Republican and one doesn't fit in well if one professes to be an atheist.\"\n\nKelley was really confused and shook his head. \"So your father is an atheist?\"\n\n\"No, not really. I'd say he's more of a 'deist' from what I've heard him say over the years. You know, someone who believes there's a Grand Designer who wound things up but from then on doesn't get involved.\"\n\n\"I see. And you? Are you a deist, as well?\"\n\n\"No, I'm the heathen in the family, I'm afraid. I have no issue with religion, per se. I just see no evidence for the existence of any god. Technically, that makes me an atheist but in the 'weak' sense as I don't claim to know there is no God, only that the proposition one exists hasn't been adequately demonstrated. Or in my humble opinion, it hasn't been demonstrated at all. I tend think all religions are man-made.\"\n\nKelley laughed. \"I had many similar discussions in college and based on your definition, I guess I'm also an atheist although I generally say I'm an agnostic because I don't believe anyone knows one way or the other. Besides, the word atheist conjures up images of angry, wild-eyed crazies frothing at the mouth over any mention of God in a lot of people's mind.\"\n\nEmma laughed yet again. \"Don't mention that to Shelby or especially my father. That's exactly what they think being an atheist means. Someone who spends all their time being angry at God\u2014the God they don't believe exists\u2014and yet are somehow angry with and fighting against him. To me, if he exists, he knows exactly what it would take to convince me he exists, and that would be that. Were that to one day happen, I'd gladly change my mind. Until then, I'm happy being an unbeliever. My father however, is not quite so happy with his older daughter, who, unlike Shelby, refuses to have anything to do with God, church, or religion.\"\n\n\"So...do you two get along at all?\" he asked rather tentatively knowing this was also none of his business. \"If not, do you and your mom get along? And um, while I'm really stepping out of bounds, how about you and Shelby? She's mentioned you once or twice in passing, but that's about it.\"\n\n\"I don't mind you asking. After all, you're going to a part of the clan in a few months, so you should know what you're getting into, right?\" Emma had a beautiful and disarming kind of smile. It was every bit as pretty as Shelby's, but Emma's seemed genuine, something he often felt was missing from his fiancee's.",
        "\"With my father, it's a bit like the Cold War. We avoid one another whenever possible and remain civil when forced to interact. For the record, he's the one who essentially disowned me because I refuse to see the world the same way he does. My mom and I have a reasonable level of closeness, but she supports my father virtually without question so that puts a strain on our relationship, too. Shelby is daddy's little girl. End of story. She would never do or say anything to ruffle his feathers so she can pretty much snap her fingers and get anything she wants. That hasn't bothered me for many years, by the way. I mention it only because you asked. More to your point, she and I can get along, but only if I'm willing to do everything her way.\"\n\nEmma didn't smile for a couple of seconds so Kelley didn't know how to react. When she finally did she told him, \"If you haven't figured it out yet, Shelby is a manipulator. She gets what she wants and when she can't, she enlist's Daddy's help. When that doesn't work, she pouts, sulks, or lashes out. I wish I could say something nicer, but I'm sure you don't want me to sugar coat things because, as they say, the truth will out.\"\n\n\"No, please don't sugar coat anything,\" he replied. \"I'm just standing here listening to you say the things out loud I've been wondering since we met. I don't think I'm naive or...stupid. And yet I've somehow allowed myself to get 'roped in' as it were.\"\n\n\"Ah, yes. That's exactly what Shelby does. It's often so subtle you don't realize it's happening until it's too late. Just know that for everything she gives, there's something she hopes to get. With Shelby, nothing is for free.\" \n\nEmma saw the way Jason was reacting to her comments and said, \"I'm really painting a very negative picture for you, aren't I? I don't mean to, Jason. I just want to be completely honest with. Oh, and speaking of honesty, if you haven't been asked to start attending church with the clan yet, you will be. And one more thing. You should give up any idea of ever leaving the low country. Shelby would never, ever move away from our parents so keep that in the back of your mind, okay?\"\n\n\"I will,\" he said as he mulled over everything Emma had just told him. He looked up, smiled at her, then asked, \"What brings you over here, then, if not to visit family? You know, while I'm asking questions that are none of my business.\"\n\n\"Relax, Jason. You can ask me anything about anything...or anyone...anytime you like. As I said, I work at the hospital, and we have patients who need cheering up. I can't afford to buy them all flowers from a shop out in town, so I grow them here. I come by pretty regularly to care for them or maybe cut one or two to put in a vase.\" She smiled weakly then said, \"Children and the very old are my weak spots. Children can't understand why they have cancer or some disease that's killing them and I can't tell you how often I've had older patients whom no one comes to see. I like to think a pretty rose or carnation helps at least a little.\"\n\nKelley raised his eyebrows and exhaled loudly. \"Wow. You're nothing like Shelby, are you?\" he said seriously before adding a smile after the fact.\n\n\"Well, she is my sister,\" she said as though that was the extent of the similarity. \"Then again, we've never had our DNA checked so anything's possible.\"\n\n\"You do look alike. You're both very pretty if you don't mind my saying. Did you ever do the beauty pageant thing?\"\n\nEmma laughed and scoffed at the same time. \"Beauty pageant? Me? Oh, hell no! You'd never catch me out there in a bathing suit giving some lame answer to a question like how I'd bring about world peace. That world is so shallow and so phony it makes me sick.\" She smiled then said, \"And that's just one more thing to never say to Shelbo! She thinks having been Miss Low Country is the be-all, end-all of awards.\" Emma leaned closer and said, \"I used to think she slept with that cheap tiara on her head!\"\n\nKelley laughed with her until it struck him she might just do exactly that.\n\n\"How are the wedding plans coming since we last spoke?\" she asked trying to move on.\n\n\"Oh, yeah. The wedding. Don't get me started, okay?\"\n\n\"That bad already?\" she asked sympathetically. \n\n\"I don't know. She just wants this...grandiose event and every little detail has to be just so or...\"\n\n\"I get it,\" Emma said in agreement. \"She's wanted this Cinderella wedding as long as I can remember. I'm seven years older so by the time she started buying bridal magazines and planning her wedding, I was getting ready to go to college. But trust me, I get it. I often think the wedding means more to her than the marriage itself. For me, I don't give a hoot about the ceremony. I'd go to the justice of the peace in a pair of jeans if that's what the man I loved wanted. Oh, and I'd be happy to live anywhere as long as I could work. But not Shelbo. No, sir. She wants the fairytale wedding and then to be taken care of. You know, pampered, spoiled...\" She stopped in mid-sentence. \"Jason, I'm really sorry. I know you said you don't want sugar coating, but I'm really going way too far here. I think it might be best if I just went out the greenhouse and left you alone.\"\n\n\"Oh, sure. Feel free. I didn't mean to keep you,\" he let her know. \"It's just that you're really easy to talk to, you know? You're not pretentious or... Never mind, now I'm the one talking out of school.\"\n\n\"In school, out of school. It's still the truth, Jason.\" She hesitated then said, \"I see what Shelby sees in you. I'm just not sure, you know she...\"\n\nThey heard a car door open followed by voices. \n\n\"Looks like the clan is back from Sunday services. That's my cue to run and hide.\" She turned around to leave then said with that smile of hers, \"It's not too late if you want to run, too.\"\n\nThey heard Shelby's voice growing louder saying, \"He must be around back.\"\n\n\"Too late for me,\" Kelley said.\n\nThe sisters saw one another and Shelby said rather icily, \"Oh, hello, Emma. I had no idea you were here.\"\n\n\"Just trying to choose my times carefully, Shelbo. Don't worry. I'm leaving.\"\n\n\"Don't call me that!\" she hissed. \"Especially not in front of my fiancee!\"\n\nEmma didn't respond. She just looked at Jason and said, \"See you around?\"\n\nShelby was standing next to him as they watched her sister walk away.\n\n\"Don't listen to her, honey. She's an angry, bitter old woman who doesn't want anyone else to be happy.\"\n\n\"She seems pretty down to earth to me,\" Kelley offered rather casually.\n\n\"She's never gotten over the death of her fiancee.\" She turned to Jason and said, \"I don't believe in speaking ill of the dead, but he was an atheist just like her and it was obvious God was sending her a sign. She's just too stubborn to accept it.\"\n\n\"A sign?\" Kelley said with genuine incredulity. \"What kind of...sign?\"\n\n\"Well, that she needs to get right with God, of course. How could the good Lord condone her marrying a man like that?\"\n\n\"You mean a college-educated American willing to serve his country and give his life for it? That kind of man?\"\n\n\"Jason. Sweetheart. There's no need to be indignant. This is a matter of the spirit and one can only understand through the spirit. You're trying to analyze it with your mind and that's a no-win proposition. In time, you'll understand these things, too. Now come along. Since you're here, you may as well stay for Sunday brunch!\"\n\nKelley barely spoke two words for the next three hours and those were things like 'please' and 'thank you' during their meal.\n\nAt one point, Colonel Stanton asked Jason if they'd settled on a location yet for their upcoming nuptials. He started to answer when Shelby cut him off.\n\n\"Not yet, Daddy. We're going to have to get busy, though. We have SO many places to look at before we can make such an important decision, don't we?\" she said mostly to Jason.\n\nSomething inside him snapped. He didn't let it show and he didn't say anything negative. Rather, he smiled and told Mrs. Stanton brunch had been wonderful then said he really needed to excuse himself.\n\n\"But why?\" Shelby asked. \"What could you possibly have to do on a lazy Sunday afternoon that's more important than spending it with the love of your life?\"\n\nWhatever was bubbling up inside of almost spilled out like magma from a volcano. Somehow he managed to limit his commentary and said quietly but rather coldly, \"Why don't we just get married at the base chapel? That seems more than adequate to me.\"\n\nBoth parents looked at one another knowing something...fiery was coming from their daughter.\n\n\"Jason Kelley, you cannot be serious! One cannot simply and glibly make a choice of that magnitude! My wedding day will be the most important day of my life and I will not just settle for some place because it's 'good enough'!\"\n\n\"Your wedding day?\" he said gritting his teeth. \"Gee. Silly me thinking I was somehow involved.\" He stood up and said as he nodded at them, \"Colonel Stanton, Mrs. Stanton.\"\n\n\"Jason! You sit down right now! You may not just get up and walk out on my family like this.\"\n\nEvery fiber of his being wanted to tell her she could have her family and what she could do with it. Instead he said to her parents, \"My apologies for leaving so abruptly. I just need a little time to think.\" He glanced at Shelby and half-heartedly said, \"I'll call you.\"\n\nShe sat there stunned to the point of disbelief as Kelley walked away. He was close to the front door when he heard her mother say, \"Don't just sit there, Shelby. Go talk to him!\"\n\nHe grabbed his coat and walked outside and almost got to his car when he saw her coming down the steps of the big, country porch complete with a swing.\n\n\"Jason! Wait. Don't leave like this,\" she said as she hurried toward him.\n\nThe car door was open but he didn't get in.\n\n\"I know Emma did this,\" she told him. \"I know her. She'd poisoned your mind. I don't need to know exactly what she said, the fact that you're acting this way so soon after she talked to you is all the proof I need. Jason, don't pay any mind to what she said. None of it is true. She really is bitter and...\"\n\n\"Shelby? Stop,\" he told her firmly without anger. For the first time since they'd met, he put his foot down and put it down hard. \"Don't you dare blame your sister for any of this. If you want to blame someone, go take a look in one of the many mirrors in your room.\"\n\nShe went to speak but he didn't give her a chance. \"I understand this wedding is a big deal to you and I want you to have it. But goddammit, I'm getting married, too!\"\n\nHer eyes opened wide in disbelief followed by her covering her mouth with her hands. \"You did not just take the name of the Lord in vain!\" It was both a question and a statement. \"Please tell me you did not just do that.\"\n\n\"Stop with your self-righteousness already. You and I fuck never every day and yet you don't express any concern about having sex out of wedlock. So don't get all high and mighty because I'm 'up to here' with you trying to control me, this wedding, and every other aspect of our lives. I'm either your equal partner or you're on your own. Is that clear?\" His voice was steady, firm, and clear. There was no anger, but there was passion. His eyes were locked on hers and he could see them welling up with tears.\n\n\"I will not be spoken to that way!\" she said, her voice trembling with anger. \"No one talks to me that way. No one.\"\n\n\"Maybe someone should have years ago,\" he said icily. \"Suit yourself. Either you change the way you treat me or that is exactly how I'll be talking to you from now on. The choice is yours. I love you, Shelby. Or at least I think I do. But I'm a man, not a prop in the theater or your life. When you're ready to treat me like your equal, let me know, okay?\"\n\nWith that he got in, closed the door, and drove off leaving her standing there still stunned with tears falling down her face. Kelley knew they weren't tears of sadness but of anger as this may have been the first time anyone ever put her in her place.\n\nHer parents were both waiting for her when she went back inside.\n\n\"What's wrong, sweetheart?\" her mother asked as she tried to hold her. \n\nShelby pushed her away and said, \"I cannot believe I ever said 'yes' to that man's proposal! Why...the audacity!\"\n\nNeither of them were willing to tell her the truth, something both of them knew but had never spoken. They'd created this monster of a daughter whom they'd spoiled and pampered all her life and now they\u2014and she\u2014were reaping the whirlwind of the seeds they'd sewn.\n\n\"He'll come around, honey,\" her mother said trying to reassure her. \"He's probably just nervous. You know, there are just so many details to think about and that can be very stressful!\"\n\nShe looked right passed her mother and at her father. \"Oh, Daddy! He can't do this to me! I...I chose him! I chose him and he's mine. He can't just walk out on me like that.\" When he didn't respond she said, \"Do something, Daddy! Don't just sit there. You need to fix this! Talk to him. Convince him this is a terrible mistake. Help him understand what he's giving up if he walks away from us!\"\n\nHer father motioned for her to come to him and he took her in his arms and told her, \"Don't worry, sweetheart. We'll give him a day or two to calm down then have him over for dinner. Everything will be fine.\"\n\n\"Do you promise?\" she said as her tears ran down her face.\n\n\"Of course I promise, Princess. Everything will be just fine. Just give it a little time. Your mother is right. He'll come around.\"\n\nShelby barely slept all night. She just couldn't understand what in the world had upset Jason so much. Secretly, she blamed her sister and yet, even if she had talked to him and put thoughts in his mind, he was much too smart not to be able to see how wonderful a life with Shelby Stanton would be. Her father had to be right. He would eventually calm down, and then she could get back to planning her dream wedding.\n\nShe didn't fall asleep until a little after 6am and didn't wake up until just before dinner. Her eyes were red and puffy and her head hurt terribly. She had no interest in eating and decided to call Jason and see if he'd come around yet.\n\nThe call went straight to voicemail and the thought of him not answering her call made her furious. When she heard his recording end she said, \"I've waited almost 24 hours for you to call and apologize. Even though you didn't, I decided to reach out to you and you won't even talk to me? Jason, I am telling you that you will deeply regret it if you don't make this right and do so very soon. I expect you to call me back tonight so we can put this...unfortunate incident behind us.\" She thought about saying 'I love you' but couldn't bring herself to do so.\n\nShe kept her phone next to her throughout dinner and the rest of the night, but it never rang. No call, no text, no nothing. She began to sob somewhere around midnight as feelings of self pity overwhelmed her. \n\nBy around 2am she stopped crying and got angry. \"He doesn't deserve you, Shelby Stanton!\" she said out loud to herself. \"He's not good enough for you! You are a Stanton and no one can treat you this way!\"\n\nShe got up and went to the bathroom and washed her face. As she went to dry off, she looked at the large diamond ring on her hand and got even angrier. She pulled it off as hard as she could and before she knew what happened, it had swirled down the drain.\n\n\"Oh, my God!\" she said in a panic. \"Oh, my God! What have I done?\"\n\nWhen she woke up the next day around noon, she immediately began looking for a plumber to come to the house and get her ring back. \n\n\"No, I can NOT wait until tomorrow!\" she told the woman who answered the phone.\n\n\"I'm sorry, ma'am. All of our technicians are on other calls and the earliest we can get to you is...\"\n\n\"Please put your supervisor on the phone!\" she said angrily.\n\n\"David Rathman speaking,\" she heard a pleasant voice say.\n\nShe explained her situation and Mr. Rathman said, \"I'm the owner of the company and while all of my men are on other jobs, I'm still a certified plumber so I'll come over and take care of this for you, Ms. Stanton. I'm pretty sure I know where you live, but could you give me your address so I can be sure, please?\"\n\nTwo hours later, a white van that said 'Rathman Plumbing, LLC' drove into her driveway. Shelby met him at the door and said, \"It's upstairs in my bathroom.\"\n\nHe followed her until she pointed to the sink where it happened.\n\n\"Okay, so...this is your engagement ring?\" he asked as he shined a flashlight down the drain.\n\nShelby gave him the gist of what happened and as the man began opening the trap under the sink he asked her, \"So you took your ring off to take a shower or something?\"\n\n\"Well, not that it's any of your business, but my fiancee and I had a bit of a...misunderstanding and I was rather upset with him...\"\n\n\"Oh, okay. Gotcha,\" he said. \"First big fight?\"\n\n\"Well, yes. As a matter of fact it was.\"\n\nRathman didn't ask any more questions as he worked but Shelby felt like she had to tell someone and she began talking.\n\n\"So he wants a smaller, simpler wedding?\" he asked as he pulled the U-joint/trap out.\n\n\"Evidently,\" she said. \"I don't exactly know. What I do know is he doesn't understand the importance of this wedding.\"\n\n\"Ah! Here it is,\" the plumber said.\n\nHe was laying on his back and for the first time Shelby realized he was a very handsome man. He was possibly 35, but he was every bit as good looking as Jason and he owned a business. He sat up and smiled at her.\n\n\"Let me just rinse it off for you. It's got quite a bit of gunk on it.\"\n\nHe got up and as he did he said, \"I made the same mistake once myself.\"\n\n\"Mistake?\" she asked not sure what he was referring to.\n\n\"I was engaged several years ago. My fiancee wanted the perfect wedding and I thought it was too much.\"\n\nNow very interested, Shelby said, \"So please tell me what happened.\"\n\nHe rinsed off her ring, dried it with a towel on the rack next to the sink, then handed it to her. \n\n\"Basically, I ran her off. I failed to appreciate just how much having the wedding of her dreams meant to her. Her parents were paying for it and all I had to do was go along for the ride, but I couldn't keep my big mouth shut.\" He smiled a wry smile and said, \"I'd do anything to have a second chance.\"\n\n\"Did you try and apologize to her?\" Shelby wanted to know.\n\n\"Oh, sure. But the damage was done. I'd made one too many comments about how she was making too big a deal out of a wedding. Now I realize how foolish I'd been and I'd give everything I own to have her back.\"\n\n\"But you did learn from your mistake, right?\" she asked.\n\n\"I did. The hard way.\" He smiled at her then said, \"You're a very beautiful young woman, Ms. Stanton. If I were your fiancee, I would do anything and everything in my power to give you the wedding of your dreams.\"\n\nShelby smiled and said, \"Well, you are obviously a very intelligent and perceptive man, Mr. Rathman.\" She smiled coyly then said, \"And a very handsome man if I do say so.\" She paused then said, \"Is there by chance another woman in your life at his point?\" \n\n\"Oh, no. I have my hands full with my business so I don't do much dating. But were you not engaged...\" he said with a big smile.\n\n\"Did you say you're the owner of the business, Mr. Rathman?\" she asked still smiling that coy smile.\n\nKelley hadn't spoken to Shelby since walking out. He'd listened to her voicemail but didn't respond. In fact, he had no intention of doing so until she expressed a willingness to change her attitude and that's when he realized the chances of that happening were slim to none. After all, if Shelby Stanton always got her way and this big wedding in which he was but an afterthought was what she wanted, it seemed unlikely in the extreme she would even see any need to change. And that's where he left it.",
        "Three more days passed without any communication between them. Kelley had just landed after flying a 'maintenance hop' to check out a jet in order to ensure it was good to go when he saw his phone had a text from Shelby.\n\nHe waited until he got home that evening to read it. In fact, he ate dinner first then opened a beer before looking at it. It read:\n\n\"Dearest Jason. Regrettably, I have not heard from you in these many days. I must therefore assume you are not willing to apologize for your behavior nor do you wish to go forward with our June wedding. It is my sincere hope that you will be gentleman enough to confirm my assumption so that I may get on with my life should you no longer wish to be a part of it. Sincerely, Shelby Stanton.\"\n\nKelley shook his head and said, \"What a trip.\"\n\nHe tapped out a quick reply. \n\n\"I would like to discuss this with you in person. Could we perhaps do so sometime this week at your convenience?\" He hit 'send' and thought, \"Two can play this game.\"\n\nAlmost immediately he got her response.\n\n\"I will happy to entertain your presence at our home tomorrow evening at 7pm if this is acceptable to you. Sincerely, Shelby Stanton.\"\n\nKelley laughed out loud this time. \"Jesus! She must be living in her own Gone With the Wind movie.\"\n\nHe tried not to laugh when he replied:\n\n\"I shall call upon you tomorrow at the Stanton residence at precisely7pm.\"\n\nHe wondered if she'd even pick up on the sarcasm.\n\nTheir meeting was brief and reasonably cordial if by cordial one meant not saying exactly what one wanted so very badly to say.\n\n\"I thank you for taking the time to see me,\" she said when he told her his feelings hadn't changed and that he still felt it was her who would have to make some changes.\n\n\"While I don't believe I am either legally or morally obligated to do so, I am returning the ring you gave me. The ring which supposedly symbolized your promise to marry me.\" The last line was clearly meant as a dig as though his personal integrity had been breached by failing to fulfill this...contract.\n\nHe took but it, but didn't thank her knowing that would also be perceived as some sort of slight. \n\n\"Okay. I guess this it, then,\" he said after putting the ring back in his pocket. \"I um...wish you well, Shelby. I hope you'll find the kind of man you're looking for...\" He thought about not saying it but couldn't, \"and so richly deserve.\"\n\nOnce again, the sarcasm went right passed her as she clearly thought she did deserve the kind of man she wanted; the kind of man Kelley clearly was not.\n\n\"You needn't be concerned with such things anymore,\" she informed him. \"But for your information, I have met someone who understands the importance of an event like a wedding the same way as I do. Regardless, I also wish you the same, Lieutenant Kelley,\" she said very formally. \"I see no need for me to accompany you to the door so if you don't mind showing yourself out?\"\n\nKelley nodded and said goodbye. As he turned around he mouthed the words, \"Good riddance,\" and smiled knowing she couldn't see him.\n\nTwo months later, he got a very nice-looking envelope in the mail and noticed the Stanton address in the return section.\n\nHe opened it and almost started laughing. \"She didn't waste any time, did she?\" he said to himself as she read it.\n\n\"Colonel and Mrs. Robert J. Stanton request the pleasure of your company at the wedding of their daughter Shelby to Mister...\"\n\nShe was marrying some guy named Rathbun or Wrathman in three months at a place called The Rhett House Inn. The connection with Rhett Butler and Gone With the Wind was even funnier now that Kelley could look at the situation from afar. He shelved the invitation and didn't give it another thought until it got close to the date of the wedding.\n\nHe hadn't bothered to RSVP and hadn't even planned on going until that very day. He wouldn't crash her wedding, but the thought of crashing her reception made him smile and he decided about four hours ahead of time he'd do just that. He wouldn't make a scene, he'd just show up and see how the rest of the clan reacted to his presence. It was immature to be sure, but there was a part of him that just couldn't resist.\n\nMore than that, someone he very much wanted to see again would be there. Someone he hadn't been able to stop thinking about since the first time he met her. It made no sense, but he was unable to get her out of his mind so for that reason alone he was going.\n\nHe showered, shaved very closely, then got out his dress-blue uniform and got ready to go.\n\nThe Inn had a chapel and a reception hall which was convenient for couples wanting to avoid having guests drive someplace else after the wedding. It was exactly the kind of place he associated with Shelby Stanton, now Rathbun, or whatever her new name was. It was the 'perfect' location for the perfect wedding.\n\nHe pulled up, found a place to park, and did just that. He got out of his car, put on his white barracks cover (often erroneously called a 'hat' by non-Marines), centered it on his head, and began walking toward the door.\n\nHe was about halfway there when he heard someone call out, \"Hey, there! Yeah, you. Marine!\"\n\nIt was nearly dark, but he could still just make out her face. She was even more beautiful than he'd remembered, her makeup done to perfection and wearing a gorgeous, light-blue gown.\n\n\"Hey there, yourself!\" he said as they walked toward each other.\n\n\"Wow. Don't you look handsome!\" Emma said as they embraced.\n\n\"Thanks, but it's just the uniform. Danny DeVito would look like a rock star in this.\"\n\nEmma laughed and said, \"It's so good to see you again. And such a pleasant surprise to see you crashing the reception after failing to RSVP. Shame on you, Lieutenant!\" She pulled away then whispered, \"I love it!\" She took his arm and said, \"Come on. I'll walk you inside. I can't wait to see everyone's face when they see you!\"\n\nAs they walked Kelley said, \"You look amazing, Emma.\"\n\n\"Well, thank you, kind sir,\" she told him. \"I'm getting very good at this whole bridesmaid thing, you know.\" He laughed with her as the arrived at the door. \"Hang on to you hat!\" she said. \"Oops. It's been a while. Hand on to your cover,\" she said correcting herself.\n\nKelley wasn't the only Marine officer at the reception. He didn't recognize anyone else however, and several of them were old enough that they had to be retired. Most likely the colonel's colleagues from his days on active duty.\n\nAs expected, Kelley's presence drew a very predictable reaction first from Colonel Stanton himself, then his wife, Kendra, and lastly from Shelby herself. The attacks were blistering but brief and Emma ended up taking the brunt of it for 'ruining her sister's dream wedding' or 'escorting this heartless, uncaring man' inside.\n\n\"If you need leave, I understand,\" Emma told him after Shelby let him have it. Her new husband never said a word and Kelley thought he must be exactly the kind of man she wanted and deserved. One with no spine nor a pair of balls.\n\n\"I'd like to get something to eat first,\" he told her. \"Would you care to join me?\"\n\nShe took the arm he extended and said, \"I would!\"\n\nThey filled their plates with 'poo-poos' Kelley was sure had all been carefully hand-selected by Shelby after much thought and deliberation. It was cool but not cold outside so Kelley asked if Emma would mind joining him.\n\n\"I saw a couple of tables not too far from the door,\" he told her.\n\n\"Sure. Let's do it!\" she told him. He carried both plates and she carried their drinks.\n\nThey were just outside where they could talk quietly while still able to hear the noise from the celebration inside.\n\n\"So it looks like your sister finally got the wedding of her dreams,\" he said just before taking a bite of a chicken wing.\n\n\"She didn't waste any time,\" Emma said. \n\n\"Who's the lucky guy?\"\n\n\"Some plumber she met. Oh, I gotta tell you the story!\" Emma explained what had happened with the ring and how they met as well as Shelby's fascination with him owning his own company at just 35. \"And best of all? He has no intention of ever leaving Beaufort. Talk about a dream man, right?\"\n\n\"I'd say it's kind of sad, but only Shelby knows what's best for her.\"\n\nEmma almost choked on her food when she heard that. She coughed loudly and said, \"Oh, Shelby knows what's best for Shelby. You can count on that!\"\n\nAfter another short laugh, Kelley said, \"You really do look beautiful, Emma.\" \n\nShe got more serious than he'd seen her get before as she said, \"Thank you, Jason. That...that was really nice. I don't hear things like that too often.\"\n\n\"You should,\" he said sincerely.\n\n\"Shelby kind of sucks all of the oxygen out of the room, you know? But it was nice to hear. So thank you.\"\n\nHe took a deep breath then without warning asked her, \"Are you...seeing anyone by chance?\"\n\n\"No. No one at all.\"\n\n\"There have to be at least a few handsome doctors at that hospital of yours. You can't tell me none of them have hit on...sorry, expressed interest...in going out with you.\"\n\nEmma laughed politely and said, \"I've gone out with a few of them.\"\n\n\"Nothing serious?\"\n\n\"I thought so a couple of times but one turned out to be married and I didn't know for almost two months.\"\n\n\"Ouch,\" Kelley said sympathetically. \"And the other one?\"\n\n\"He was several years younger than me and he let it be known I wasn't someone he'd even consider getting serious with. I was just...fun.\"\n\n\"Ouch\u2014again,\" he said. \"Was the age difference really a big deal?\"\n\n\"To him, I guess. I never really thought about it. He was good looking, funny, intelligent. You know, like you, Jason.\" Her smile still amazed him and tonight, with her hair and makeup so beautifully done, he couldn't believe he hadn't noticed just how attractive she was before. Or maybe he had but her beauty had taken second place to her outlook on life, one with which he very much agreed. \"He was a 27-year old intern and I was a 32-year old...hag?\" She smiled but he could tell she'd been hurt.\n\nWithout thinking he reached for her hand that wasn't holding food and said, \"Don't talk like that, okay? You're nothing close to that.\" There was enough light that he could see her eyes, eyes that were looking into his. \"You're really beautiful, Emma. In fact, having seen you and your 'beauty-queen' sister side by side tonight, I'd be putting that tiara on your head and not hers.\"\n\n\"Oh, please!\" she said trying to pretend his comment was just silly. \"Like I'd want to wear that cheap piece of sh...trash.\" She looked around then laughed. \"Why do I still care? Piece of...shit,\" she said. This time both of them laughed.\n\nKelley hadn't let go of her hand and when they stopped laughing he said, \"Why do you do that?\"\n\n\"Do what?\" she asked as though she had no idea.\n\n\"Why do you pretend not to know how beautiful you are? Why do you play off compliments like they can't be true when they are? You really are beautiful, Emma.\"\n\nShe didn't reply. Instead, she pulled her hand away and reached for a napkin. \"The gnats are terrible tonight,\" she said even though it wasn't warm enough for bugs. \"I must have one in my eye,\" she said as she looked down and dabbed first one and then the other.\n\n\"You've lived in her shadow all your life, haven't you?\" he said without accusation. \"And because your personality wouldn't allow you to lash out or be mean, you just took it all these years. You gave Shelby the spotlight when you're the better person.\"\n\nHe saw her blinking away tears as he spoke. He got up and walked around to her side and sat next to her. \"I know it's your family and I'm still an outsider, but it's very clear now you're the star of the 'Stanton clan', Emma. You're the one who's truly amazing. No offense to Shelby, but she's not even in your league.\" He put his hand on her forearm and said quietly, \"You're the one who's beautiful both inside and out.\"\n\nShe tried to laugh and make light of it but it was hard for her talk. \"Yeah, for a just-turned 33-year old eternal bridesmaid.\"\n\nKelley put his arm around her back then rested his strong hand on her small shoulder. \"Would you like to go do something together?\"\n\nShe carefully wiped under her eyes again then said, \"You mean right now? Tonight? During my sister's reception?\"\n\n\"Well, yeah. If you want...\"\n\n\"Oh, hell yeah! Let's go!\" she said managing a genuine smile. \n\nKelley stood up, offered his hand, and helped her up. \"You're freezing,\" he said. \"Let's get you into the car and turn on the heat.\"\n\n\"Thank you,\" she said when he closed her door.\n\nHe reached into the back seat and grabbed a sweatshirt. \"It's clean,\" he said as he waited for her to lean forward so he could drape it over her shoulders.\n\n\"It's warm, too!\" she said thanking him again.\n\n\"You're welcome,\" he told her as he sat down and started the car.\n\nShe looked over at him just as he was getting ready to put the car in gear and he turned to look back at her. \"I wasn't kidding, Emma. You really are beautiful,\" he said quietly.\n\nHis hand was on the gearshift when she reached out and put hers on top of his.\n\n\"You make me feel beautiful, Jason. And to tell the truth, I...I haven't felt that way in a very...\"\n\nHe looked at her first, then leaned over and waited for her to stop talking. When she did and he saw her close her eyes, he kissed her softly on the lips. \n\nThe kiss lasted two or three seconds and when it ended she said, \"Okay, the kiss was very nice but what was that all about?\"\n\nKelley smiled at her at said, \"If I have to explain that to you, I take back anything I may have said about how smart you are. I don't really have to explain it, do I?\"\n\nShe still had her hand on his and when she looked at them together, Jason took hers in his and held it. \n\n\"Look. You're great, Jason. Really great, as a matter of fact. But Shelby told me how how old you are so I just want you to know I'm not...\"\n\n\"Not into being happy?\" he offered.\n\n\"Happy? I haven't been happy since...since, well, 2008. Between my work and my gardening, I am content, though. I just don't need a sympathy date or whatever you're thinking this is, okay? I like you a lot Jason, but I'd rather go somewhere and have some fun or even sit and talk for a while, you know?\"\n\n\"Yes. I do know. But I don't think that's what you need. And to tell you the truth, I don't think it's what you really want, either.\"\n\nEmma laughed quietly and said, \"Hmmm. So now you know what I want and what I need. You should be telling fortunes, not flying planes. Sorry\u2014jets. It really has been a long time since I hung out with a pilot or more accurately, a Marine pilot, who cares about such details.\"\n\n\"You still miss him, don't you?\" he asked quietly as the engine warmed the car.\n\n\"Sometimes,\" she said wistfully. \"I really loved him, Jason.\"\n\n\"Are you possibly afraid to fall in love again? I mean to let yourself really, really love someone again?\"\n\n\"No, I don't think so.\" She paused for a moment then said, \"I don't know. Maybe I am.\" She smiled then said, \"You seem to have all the answers. Why don't you tell me?\"\n\n\"Okay, how about this? I think you're afraid you'll be hurt again\u2014maybe even deeply hurt. You're worried that if you let someone inside and get close to him, then, one way or the other, he'll leave you alone, and that's too great a risk to take. Playing it safe is easier. It's risk free and you can't get hurt. Of course, you can't be loved, either, but you've decided safety is your priority.\"\n\nEmma sat quietly for a few seconds once he finished speaking. \"You're very wise for someone your age. It's too bad Shelby couldn't appreciate all of your good qualities. I think she saw them, but to her they were just blocks to be checked off in having the perfect husband; someone she could show off at parties and possibly even more importantly, someone our father would approve of.\"\n\n\"Oh! So are you saying I'm perfect?\" he asked trying to lighten the mood.\n\n\"You're all right,\" she said playfully not willing to commit to an answer.\n\n\"You already know what I think about you. Good sense of humor, fiercely independent, smart as can be, and drop-dead gorgeous.\"\n\n\"Yeah, right. We've been over that 'gorgeous' thing. I'm pushing 35 and when I squint? Oh, trust me, you don't want to see what I see. It's not pretty let alone gorgeous.\"\n\nHe let go of her hand and reached out and touched her face. \"I like what I see just fine. In fact, I like it very much.\"\n\n\"Ha! That's because it's really dark in here.\"\n\n\"You see. There you go again. You're doing it. You won't accept a compliment because then you might have to confront the fact that a guy really does believe you're beautiful\u2014inside and out. And that scares you. Please don't be afraid of me, Emma.\"\n\nShe looked away and said, \"Maybe we should go do whatever kind of something we were going to do.\"\n\n\"On one condition,\" he said.\n\n\"What's that?\" she asked barely loud enough to be heard.\n\n\"Will you look at me, please?\"\n\nHe waited for her to turn toward him and when she finally did he said, \"I'm going to kiss you again, and I want to you tell me how it makes you feel.\"\n\n\"You meant to ask me if it's okay for you to kiss me again, right?\" she said trying to get the upper hand or at least stay in control.\n\n\"No, I'm not asking permission, Emma. I'm just letting you know I am going to kiss you again.\"\n\nShe looked away and said, \"Jason, you don't have to do that just to...\"\n\nHe kissed her again while she was still trying to speak. This kiss lasted for several seconds and when he pulled away she whispered, \"Oh, wow. I haven't felt that way...either, for a very long time.\"\n\n\"Yeah? What way is that?\" he asked as he gently played with her beautifully-styled hair.\n\n\"Like I...like I...enjoyed that very much. Like...I'd like you to do that again,\" she said very quietly.\n\n\"You mean like this?\" he whispered before kissing her a third time. He put his hand behind her head as she did the same to him. Within a second he felt her offer him her tongue which he accepted by offering his back.\n\n\"So...how was that?\" he asked.\n\n\"That was...wow.\"\n\nHe saw her smile and asked what was funny.\n\nShe ran her hand against the grain of his high-and-tight haircut and said, \"That. I forgot about Marines having 'beard stubble' on their heads.\"\n\n\"Are you a fan of short hair?\"\n\n\"Uh-huh,\" she said quietly. \"I love a man who's very tightly groomed.\"\n\n\"Good thing,\" he said. \"It may be a while before I can groom myself otherwise.\"\n\n\"Are you presuming I'll be around for a while?\" she asked with a smile.\n\n\"I am. In fact, I'm sure of it.\"\n\n\"Someone is very full of himself tonight,\" she teased.\n\n\"Let's put it this way. Nothing would make me happier than to have you in my life, Emma. For as long as you'd like.\"\n\nHer eyes were looking into his, two dark saucers surrounded by white. She was searching for something. Something like honesty or sincerity. When she was sure she saw it, she said, \"Please don't hurt me, Jason.\"\n\n\"Are you letting me in?\" he asked without smiling.\n\n\"Yes,\" she said barely audible.\n\n\"I won't hurt you, Emma. Ever.\"\n\n\"Promise?\" she asked the last of her veneer melting away.\n\n\"I promise.\"\n\n\"Then would you please kiss me again?\"\n\nIn spite of the storage space and gearshift between them, he did his best to put his arms around her then kissed her like he hadn't yet done. She put hers around his neck and accepted his kiss and the playfulness of his tongue.\n\n\"I just realized you've never seen where I lived,\" she said when the kiss ended.\n\n\"You're absolutely right,\" he replied. \"I should probably know where that is. You know, in case you decide you'd like to see me again sometime.\"\n\n\"Right. Just in case,\" she said with the brightest, happiest smile he'd ever seen on her pretty face before.\n\n\"It's in Port Royal, right?\"\n\n\"Uh-huh. Just head toward Parris Island and I'll tell you where to turn.\"",
        "\"So I'm flying a D-model tonight.\"\n\nIt took her a few seconds before she remembered the F-18D was a two-seater while the 'C-model' was the single-seat version he normally flew.\n\n\"You drive, I'll navigate,\" she told him.\n\n\"Yes, ma'am,\" he said sitting back in his seat and putting the car in gear.\n\nKelley drove them passed the turn to the recruit depot then over the bridge and into Port Royal. \"Turn left on Bell then follow it to Robinson. Turn left and my place is on the right.\"\n\nEmma lived in a two-bedroom house that had been built in the 1970s. It was small but comfortable and obviously had had some TLC and a woman's touch on the inside.\n\n\"I like it,\" Kelley told her when she let them inside.\n\n\"It's not much, but it's mine,\" she told him. \"There's just no way I could have lived at home like Shelby did all those years. Then again, I'm not Shelby.\"\n\nKelley smiled and said to her, \"Thank God!\"\n\nEmma couldn't help but laugh at his remark. \n\n\"What can I get you to drink, Jason?\" she asked as she found herself staring at him in uniform.\n\n\"Maybe a beer?\"\n\n\"Beer it is,\" she said. A minute later they were both sipping a bottle of Corona.\n\nEmma sat across from him and Kelley said, \"Why don't you come sit next to me?\"\n\n\"Because I don't trust myself with you,\" she told him matter of factly but politely.\n\n\"Oh, okay. Fair enough,\" he said. He took a sip then told her, \"I thought you were letting me in.\"\n\nEmma laughed and said, \"Where do you think you are, Marine? You're in here and not out on the porch, right?\"\n\nKnowing she'd just bested him, all he could was, \"Touch\u00e9.\"\n\n\"I am letting you in, Jason. I just have to do it slowly. Is that okay?\"\n\n\"It's more than okay, Emma. In fact, anything you want is okay with me.\"\n\n\"Oh, you're smooth! I gotta hand it to you.\" She smiled brightly before taking another sip. \"You know, I really don't know much about you. What I do know...and can see...I like. Can you tell me about yourself?\"\n\nHe spent the next few minutes talking about growing up just outside of Portland, Oregon, his family which consisted of his parents and a younger sister, the sports he played in high school, where he went to college and what he majored in followed by going to Marine Officer Candidates School, The Basic School, and then flight school.\n\n\"So you're a professional student then?\" Emma teased.\n\n\"Sometimes it seems it that way. This last year has been the first time I haven't been in a classroom since Kindergarten. But it's not very interesting talking about myself. Tell me about you, Emma. That's what interests me.\"\n\nHer past sounded very much like his from K-12 followed by four years at The University of South Carolina which everyone referred to as USC. To Kelley and most of the rest of the country, USC meant The University of Southern California where the infamous O.J. Simpson had once played football and won the Heisman Trophy.\n\n\"So with a degree in nursing I had quite a few options as far as work went. I took a job at Beaufort Memorial a month after I graduated and I've have been there ever since.\"\n\n\"I take it you enjoy your work?\"\n\n\"I love being a nurse. I love everything about it except seeing children suffer. It's hard enough with the elderly when they're in pain, but at least they understand it's a part of life. Children can't possibly understand and it just breaks my heart. But other than that, yes, I really enjoy it. How about you?\"\n\n\"So far, yes. I can't tell you how much fun flying is. But unlike civilian flying, I have a zillion things to learn about air-to-air and air-to-ground tactics. The learning curve is incredibly steep and I still make plenty of mistakes. The good news is everyone really cares and they're happy to help me out as much as I want. I guess the think I love the most though, is hangin' out with the guys. They're like frat brothers only with a common bond forged at OCS. Not to sound melodramatic, but it's more like a calling than a job. Does that sound cheesy?\"\n\n\"No, not at all. I'm very grateful for every man and woman who's willing to serve. Flying seems very...sexy, but I'm sure all jobs are important.\"\n\n\"That's so true. Planes don't fly without mechanics and various technicians. People don't get paid or promoted without administrative support. No one goes anywhere without truck drivers and you kind of need supplies and stuff when you get there so yeah, every person is important.\"\n\n\"My dad always seemed kind of...I don't know. Elitist maybe? He made it sound like the officers were the be-all, end-all and the enlisted people the peons or servants or something like that.\"\n\n\"Wow. I don't get that at all. No one is better. We're just different. A pilot is no better than a grunt in the infantry or someone who fixes generators. It's a team effort for sure.\"\n\n\"I'm glad to hear you say that, Jason. That kind of elitism is one of the things I rebelled against early on. I'm grateful for everything my parents have provided, I just don't think anyone is better than anyone else. But my parents go from the officer's club to the country club to their swanky parties and they only associate with 'the right kind of people.' I can't live like that. My father is no more important than the poor, black man who has no insurance when he comes to the hospital. No one should get preferential treatment.\"\n\n\"Are you a big-government kind of person? Do you think it's the government's place to help people?\"\n\n\"Yes and no,\" she said. \"I want the government to do a few things really well and otherwise stay the hell out of our lives. But for people who are genuinely unable to work\u2014not because they're lazy\u2014I think we owe it to them to provide them with support.\"\n\nKelley smiled and told her, \"So far, we're in synch on the big issues of religion and politics and we seem to value most of the same things. I'd say that's a pretty good start, wouldn't you?\"\n\n\"I would,\" she replied with a smile. \"I know you only recently broke up with my sister of all people and you're probably not interested in getting serious again so soon, but I am curious.\"\n\n\"About?\"\n\n\"Well, about...us. Whatever 'us' means at this point. I know there's physical attraction\u2014on my part to you for sure and I'll take your word that you find me at least reasonably attractive, too.\" She paused when Kelley gave her one of those looks for being so hard on herself again. \"Okay. Fine. You find me attractive, too. But I'm not 25 anymore.\" She paused again then said kind of ruefully, \"Or even 30. You can't pretend that isn't the case and it means things for the future.\"\n\n\"You're right. It does,\" Kelley said with great seriousness. \"It means you'll be going on Social Security before I do so maybe I won't have to work as long as I've always thought I'd have to.\"\n\nEmma grabbed a peanut out of the dish on the coffee table between them and threw at him. \n\n\"Hey? What was that all about? It's true, isn't it? What else matters as far as age goes?\"\n\n\"Well, what about having children? Do you want them and if so, how many?\"\n\n\"I definitely want children and I'm thinking maybe two. Why?\"\n\n\"I'm not exactly getting any younger over here,\" she said with a look on her face that let him know that was a concern to her.\n\n\"I thought you just turned 33. Am I wrong? Did you really just turn 43?\"\n\nShe got ready to throw another peanut and Kelley put his arms up in defense. \"Hey! Stop already with the artillery barrage. The point is you're the perfect age to have children, Emma. I mean, it's not you're 35 or something. You know\u2014really old!\"\n\nHe ducked when a handful of nuts came flying his way. One of them stuck in the high collar of his uniform. He pulled out and said in the same voice as the guy on the YouTube video, \"Deez nuts!\"\n\nEmma laughed so hard she covered her mouth. \"I love that guy!\"\n\nKelley leaned over and put his forearms on his legs and looked right at Emma then said, \"And I love you, Emma.\"\n\nShe stopped laughing immediately. \"Jason. You did not just say that.\" She stared at him and saw the look in his eyes. He was deadly serious. \"Did you?\" she said, her voice trailing off.\n\n\"I started falling for you the first time we talked. Out in the greenhouse. Everything that felt so wrong with Shelby finally made sense and everything you said stuck a chord with me. Every time we've talked that same thing has happened. I've been obsessed with you ever since, but I never did anything about it until tonight. You're the only reason I even went to the reception tonight, Emma. You don't have to say it back. I wouldn't expect you to. You may not even believe me, but it's true, Emma. I do love you.\"\n\n\"Oh, my God,\" she said very slowly and quietly. \"I think maybe you should leave now.\"\n\nKelley felt like he'd just been kicked in the balls and wondered why in the hell he'd just said what he said. But he felt it and he wasn't going to apologize for telling her what he felt.\n\n\"I'll leave, Emma, but that won't change the way I feel,\" he said as he stood up.\n\nShe hadn't moved and she wasn't even looking at him. \"Are you really that upset with me?\" he finally asked.\n\nWhen she still wouldn't respond he walked over to her and knelt beside the sofa and said, \"I won't say I'm sorry for telling you how I feel. I suppose I should have waited, but sitting there looking at you, thinking about how amazing you are...I couldn't help myself.\"\n\nHer eyes never moved. She was looking down and away from him as he spoke. He stood up again then said, \"Okay. I guess I'll be going then.\"\n\nHe picked up his cover and said, \"I'll show myself out.\"\n\nHe got to the door before she finally spoke. \"Jason?\"\n\nHe turned around and waited. She looked up at him from across the room and said, \"If I say it back, then that's it. I have no more defenses. You'll be all the way inside and...I'm scared. I am still afraid. I wish I wasn't. I wish I was brave, but I'm not. I'm scared to death, Jason.\"\n\nHe let go of the doorknob and walked back toward her. He sat his cover on the coffee table that had nuts scattered all over it. He extended his hand and waited for her to take it. When she did, he gave it a gentle pull and lifted her to her feet.\n\n\"Come here,\" he said softly pulling her close. She rested her head on his broad shoulders as he stroked her hair. \"Do you believe me?\" he asked quietly.\n\n\"Yes,\" she whispered back. \"I just can't figure out why you'd want me. You're a pilot, you're smart, and you're so handsome and...and I'm...33. I don't understand.\"\n\n\"So much of life requires us to think with our minds, Emma. But the great thing about love is that it's something we feel with our hearts. It's like seeing a work of art. You don't analyze the paint or the brush strokes. You don't need science to tell you it's beautiful.\" He pulled his head back indicating he was waiting for her to do the same. \"You're that beautiful work of art, Emma. I don't care about the paint that was used or how the strokes were made on the canvas. I just know I love you. I'm not sure I can explain it any better than that, I do love you.\"\n\n\"Then you really should leave,\" she said, her eyes moving rapidly between his. \"Because if you stay any longer, I'll say it, too, and then there won't be anything to stop me from begging you to make love to me so...would you please leave?\"\n\nThere were tears forming in her eyes and Kelley hurt like he couldn't ever remember hurting before. He put a hand on her cheek then kissed her softly before saying, \"Okay.\"\n\nShe walked him to the door then thanked him for a wonderful evening. \n\n\"Seems like it's been a pretty miserable evening for you,\" he said kindly.\n\n\"Miserable? Uh-uh. Not at all. Confusing, maybe, but not miserable.\" She managed a smile then said, \"You may be the sweetest, most romantic man I've ever met.\"\n\nShe kissed him on the cheek and feeling like a total failure, Kelley told her goodnight and stepped outside. \n\n\"Well, that went well,\" he said very quietly out loud before heading to his car.\n\nHe was about halfway down the walk when he heard the door open. He turned around and saw her standing there looking at him. \"Jason? Jason, don't go!\" she called out. She ran down the steps of the porch then ran right to him. She threw her arms around him and said, \"I love you, too! I love you so much!\"\n\nHe held her tight and felt a lump in his throat that made it hard to speak. Finally, he managed to say, \"And I love you, too, Emma.\"\n\nShe looked into his eyes and said, \"Come back inside and stay with me. Please?\"\n\nHe put his hand on her cheek again and said, \"No. Not tonight. I want to more than anything on earth, but not tonight.\"\n\n\"Why? I don't understand. I just told you I love you, too, Jason,\" she said imploringly.\n\n\"And I believe you. But we need some time to adjust to this. We need a little time to let it sink in. To relish it.\" He smiled at her. \"To nurture it. To let desire build and grow. Is that okay?\"\n\n\"Do I have any choice?\" she said sweetly.\n\n\"Yes, but I think it would be an unwise choice,\" he told her still smiling at her.\n\n\"Couldn't you be just a little less wise for one night?\" she said using that same tone of voice.\n\n\"I promise I'll make it worth your wait.\"\n\nShe was still staring into his eyes as she said, \"I believe you. I'm not happy about this, but I do believe you.\"\n\n\"Goodnight, Emma Stanton. I do indeed love you.\"\n\n\"And I love you, Jason Kelley. I truly do.\"\n\nThey kissed briefly before Emma turned and went back inside.\n\nNeither of them slept much that night as the words they spoke and the feelings they felt sank in. As Emma lay alone in her bed she thought, \"He was right about waiting. He was absolutely right.\" Need and desire slowly and steadily grew inside them as their minds processed this very real, very serious change in their relationship. And as much as she loved him and believed he loved her, a part of her was paralyzed by fear; the fear he would one day tell her he no longer loved her and that was more than she could bear.\n\nBoth of them woke up exhausted that Saturday morning and on some level it felt like the night before had never happened. Kelley went for a long run and Emma took a long, hot shower before getting dressed.\n\nIt was just after noon when her phone rang. When she saw his name, her heart leapt into her throat. She took a deep breath then answered. \"Hi!\"\n\n\"Hi. Did you sleep?\" he asked immediately.\n\n\"Not really. You?\"\n\n\"Nope.\"\n\n\"Okay, I didn't either,\" she admitted.\n\n\"I want to see you, Emma. I...need to see you. Is it okay if I...\"\n\n\"Yes! Whatever it is, yes. Please come see me, Jason.\"\n\n\"I'll be right there,\" he told her.\n\nShe hung then panicked. She'd thrown on jeans and a sweater and decided she'd change. But into what? It was just after noon on a Saturday. Was she going to wear a dress? If so, did that mean heels, jewelry, and makeup?\n\n\"Take a deep breath and relax,\" she told herself. She went back into the bathroom and heated up her curling iron while she put on some mascara and a bit of foundation. She added the tiniest little touch of blusher before putting a soft curl in her otherwise straight, silky hair. Unable to resist, she put on some clear lip gloss and hoped for the best.\n\nFifteen minutes later, her doorbell rang. She took a couple more deep breaths then opened the door. As soon as he saw her he said, \"You look so good!\"\n\nShe closed the door and said, \"Um, last night I looked okay. Today I look...plain. But thank you. You, however, look very good!\"\n\nIt was chilly outside but Kelley was wearing shorts with cargo pockets and a three-button shirt with a collar and some running shoes. \"Not exactly dress blues, huh?\"\n\nThey stood there looking at each other before Kelley said, \"If I don't kiss you right now, something's going to explode.\"\n\n\"Same here,\" she told him dying for him to kiss her.\n\nHe put his arms around her and kissed her for a very long time then held her even longer before speaking again. He pulled his head back and smiled. \"So...do you still love me?\"\n\n\"Yes. Of course I do,\" she told him. \"How about you?\"\n\n\"More than ever,\" he told her before kissing her again. \"I know you've had some terrible nights in your past and I don't mean to bring them up. It's just that not being with you last night was the worst I can ever remember.\"\n\n\"With the exceptions you just mentioned, it was equally bad for me.\"\n\n\"Hey? Who's crazy, dumb idea was it to spend last night apart?\"\n\n\"He was actually pretty smart,\" she told him. \"That whole thing about passion and desire building? Um, yeah. Pretty much on the money with that one.\"\n\n\"Have you eaten anything yet?\" he asked.\n\n\"No. I haven't been able to eat,\" she told him truthfully. \n\n\"Any better now?\" he asked.\n\n\"Now that you're here, it's getting better,\" she told him with a smile.\n\n\"How about I take you out for something to eat?\" he asked.\n\n\"Is this okay?\" she asked regarding her clothes.\n\n\"You could wear a shower curtain and it would look great on you. That's perfect.\"\n\n\"Then, okay. I'd love to go to lunch with you.\"\n\nThey decided to go to a place called Moondoggies Cafe and Grill which looked more like a two-story home than a restaurant. They ordered a Reuben sandwich, something called Shrimp Po' Boy, and some hush puppies with sweet tea and shared it all nibbling at everything in front of them.\n\n\"So what now?\" Emma asked as the munched their food.\n\n\"I want to spend as much time with you as possible, Emma,\" he told her before popping a hush puppy into his mouth.\n\n\"Good answer!\" she said just like the game show Family Feud. \"Before I forget, you never really answered my question about work last night.\"\n\n\"How so?\" he asked as he took a sip of iced tea.\n\n\"Do you think you'll stay in for a career or do you know yet?\"\n\n\"I guess that depends on several things.\"\n\n\"Such as?\"\n\n\"We have majors in my squadron who've been deployed for five or six of the twelve or so years they've been on active duty. The wars have pretty much wound down but who knows what the future will hold, and even during peacetime there are six-month deployments and other shorter training dets. Detachments in case you forgot,\" he added with a smile.\n\n\"That's a lot of time away,\" she said without judgment. \"What else?\"\n\n\"It can be tough raising children like that. Especially if their mother wants to keep working.\"\n\n\"I see. Anything else?\"\n\n\"Well, it would definitely mean leaving Beaufort.\"\n\n\"Right. Yes, that is a definite. So...which way do you think you're leaning at this point?\"\n\n\"Honestly? I'd be okay either way as long...\" He reached out for her hand then said, \"As long as you're with me.\"\n\n\"Oh, really?\" she said playfully. \"Well, you know I'd gladly leave Beaufort so that's not a serious concern. I do want to keep working, but I could possibly take some time off to raise children. Assuming I had children. Oh, and a husband, of course.\"\n\n\"Oh, I see,\" he said also being playful. \"Got any prospects?\"\n\n\"Um, maybe. I find myself thinking about this one guy all the time.\"\n\n\"Oh. Lucky guy.\"\n\n\"How about you? Anyone out there on the horizon?\"\n\n\"Um, maybe,\" he said stealing her words. \"She's pretty incredible. Well actually, she's incredibly pretty and incredible and I can't think about anyone or anything else.\"\n\n\"Oh. Lucky girl,\" she said parroting back his line.\n\nKelley squeezed her hand and said, \"Now that we've had some time apart\u2014you know, all those hours\u2014and something to eat, I was wondering if you might like to find out where I live.\"\n\n\"Well, you know where I live now so that only seems fair,\" she said her eyes twinkling with delight.\n\nKelley paid the bill and escorted her outside. When he opened her door he just stared at her. \"What?\" she asked.\n\n\"You're just so beautiful. That's all.\"\n\nShe put her arms around him and said, \"If you take me home with you, I'm not leaving until tomorrow. I just wanted you to know that.\"",
        "He kissed her and said, \"Promise?\"\n\n\"Cross my heart,\" she before kissing him back.\n\nHalf an hour later they were alone in his bedroom after Jason gave her the two-minute tour of his one-bedroom apartment. \n\n\"Nice bachelor pad,\" she told him as she put her arms around him. She glanced to the side and said, \"Nice bed, too.\"\n\n\"I hope so,\" he told her with a smile. \"After all I promised I'd make it up to you for waiting.\"\n\n\"Oh, right! Yes, you did. I'm looking forward to you making good on your promise,\" she said as she pulled his shirt over his head. \"Mmmm. Someone is in very good shape,\" she purred when she his thick chest and flat stomach. \"I hope you're not too disappointed when you see my body.\"\n\nKelley snapped her up like a child and almost threw her onto the bed. Emma shrieked with surprise as he got on top of her. \"Okay, enough of that kind of talk from you!\" He had her arms held out to the side of her head and pinned to the bed. \"I am stone cold in love with you and that means your very hot body, too. So no more of that. Got it?\" His eyes were playful but also serious.\n\nShe looked into them and felt herself falling deeper in love with him. \"Yes,\" she said softly. \n\n\"Good girl,\" he said before unbuttoning her jeans and pulling them off. \"Can you raise up for me?\" he asked as she helped him take off her sweater. \"Aha! Just as I suspected.\"\n\nShe looked but didn't speak. \"You're perfect,\" he said convincingly before he kissed her.\n\nEmma sighed as he reached underneath her and unhooked her bra while she unbuttoned his shorts. Jason rolled over onto his back and kicked them off then removed his own underwear. As he rolled back over on top of her Emma saw him for the first time.\n\n\"Oh, my...God!\" she said.\n\nHe saw what she was looking at and asked her, \"Will that do?\" knowing it was one of his um...biggest attributes.\n\n\"Oh, wow. Talk about worth waiting for! Mmmm!\"\n\nKelley spent a very long time making sure his beautiful new girlfriend got all of the needed attention she could possibly want. All women could have multiple orgasms, but not all women were the same. Some had these rolling orgasms that came one after the other. Once you got them on the roller coaster, they just kept coming and coming and coming. Others needed time to recover so after their first, a man would leave the Boy in the Boat alone for a while and focus on her breasts or maybe just kissing until she was ready again.\n\nEmma was the latter kind of girl. She came the first time in less than two minutes from first touch on her swollen nub which had been preceded by a ton of kissing and petting. Kelley knew she was ready and it didn't take long before her body absolutely exploded in pleasure. He loved screamers although the quiet types could be fun, too. Emma was in between both extremes and he loved the way she reacted as she came harder than anyone he could ever remember.\n\n\"Oh...wow!\" she cried as her body subsided after tensing and trembling and shaking.\n\n\"That's just the tip of the iceberg, honey,\" he told her as she reached for him.\n\n\"No, this is the tip of the freaking iceberg,\" she said with a laugh as she played with huge, swollen head of his dick. \"They grow 'em big out West, don't they?\"\n\nHe went to take her and she said, \"Uh-uh. No way. I don't know about other girls, but this one loves giving head.\" Her smile was positively wicked as she pushed him onto his back then pulled her hair behind her ear. \"Damn! This is gonna be a challenge,\" she said smiling at him before trying to engulf the tip.\n\n\"I'm sure you're up to it,\" he said as she lowered herself onto him. \n\nShe came up briefly and said, \"Um, well...someone is definitely 'up' for something!\" She went back down and went to work proving herself to be nothing short of amazing in that area of lovemaking.\n\nKelley couldn't believe how beautiful she looked as she worked her magic in his boneyard. When he couldn't take anymore, he pulled her off and watched her climb on top. \n\n\"Is this okay?\" she asked looking down at him. \"I want to see your handsome face from up here when we make love for the first time.\"\n\n\"Anything you want is okay with me, Emma,\" he told her trying not to be too serious.\n\nShe rested her palms by his ears, her hair cascading around their faces. \"I love you, Jason,\" she said before reaching back and guiding him to the door of her vault. Once the angle was right, she pushed back and felt him slide inside her. \"Oh, God,\" she moaned as he filled her. \"Now that's a big cock, mate,\" she said. She wanted all of him but couldn't handle him all at once. \"Easy does it,\" she said as she pulled up then went back down for more.\n\nWhen he was finally completely inside her she purred with happiness. \"Talk about worth the wait. My God, you feel good inside me!\" She rocked back and forth as she raised herself up then down over and over.\n\nAfter a minute or so more, Kelley grabbed her and roughly pulled her over causing her to happily yelp again. \"Mmmm. Fuck me, Jason,\" she moaned as he filled her completely. \"Just like that!\"\n\nEmma couldn't remember a time when she was happier or had had such an attentive (and well-hung) lover. Everything was perfect as she felt her body on the verge of coming again. He pounded her hard as her hand reached for her clit. \"Harder, baby! Fuck me harder!\" she cried as her fingers did what they'd done so many times before.\n\nSeconds later her body exploded in a second, equally-amazing orgasm. In fact, his beautiful, hard cock inside her very wet pussy made this even more special than the first. When he felt her cum, he pulled out and let her use her hand to help him shoot his entire load all over her beautifully naked body. Kelley grunted and groaned as he shot one stream along her stomach then a second on her gorgeous tits, and finally a salvo that hit her right in the face causing both of them to laugh loudly.\n\n\"You fucker!\" she teased as she tried to blink the think goo out of her left eye.\n\n\"Why, yes I am,\" he said as he collapsed alongside her. \"I am indeed a fucker.\"\n\nBoth of them laughed again before Emma said, \"O, my God! I just realized you've fucked my sister in this very bed.\"\n\nHe leaned on his elbow and looked at her. \"Oh, shit. I forgot all about that. Is that too weird for you? Never mind. Dumb question.\"\n\nShe finally got all of his cum out of her eye then said, \"Not really. Sex isn't love. I don't know if you ever really loved her...and I don't want to know. But I know you love me, so...no, it's not a big deal.\"\n\n\"You're amazing,\" he told her.\n\n\"Normally, I'd make a joke like, 'Yeah, I sure am,' but I'm so happy...and so in love with you...all I can do is tell the truth. You were amazing. My God, that dick of yours is like a piston!\"\n\n\"So was it worth the wait?\" he asked with a smile.\n\n\"Uh-huh!\" she told him. \"Speaking of waiting, how long do I have to wait to try that again.\"\n\nBoth of them looked down at what she called 'The Big Piston' from then on, and both of them laughed. It had only gone down about half in its size and just the mention of Round Two brought it back to full steam. \"Does that answer your question?\" he asked as he got on top of her.\n\n\"It does, indeed,\" she said as they made love for the second time.\n\nEmma hadn't spoken to her family since Kelley showed up at Shelby's reception, but she got an earful from her mother the next time she stopped by to work in the greenhouse.\n\n\"Tell me you're not seeing that boy!\" she demanded to know after informing her elder daughter how badly he'd embarrassed the entire family.\n\n\"No, Mom. Not the entire family. Only the part you care about. The part that doesn't include me.\"\n\n\"Why...why that is just not true, Emma. You are as much a part of the family as anyone else!\"\n\n\"Oh, really? So if I was seeing Jason and that made me happy, then you'd be happy for me, right?\"\n\n\"Well, that's unfair, Emma. You couldn't expect your father and me to support such a foolish and hurtful decision.\"\n\n\"Hurtful to whom, Mom?\"\n\n\"Well, to Shelby. And to your father.\"\n\n\"Right. To the people who matter. I rest my case.\" \n\nEmma turned to walk outside and her mother stopped her. \n\n\"Are you seeing him?\" she asked, her voice much softer this time.\n\n\"Again, it doesn't really matter, does it?\" Emma said. An hour later she came back inside and her mother asked her to sit down. She even asked if she'd like some tea, an event normally reserved for her good daughter.\n\n\"I just want to say that your father is very set in his ways. Being married to him isn't always the easiest thing. I do love him, but he can be...difficult at times.\" She put her hand on Emma's and said, \"In my heart of hearts I know he favors your sister for reasons you and I know quite well. It's always bothered me because I love you just as much, Emma. But when you told us you no longer believed in God, that was the final straw for your father. Yes, he was upset you chose nursing over the law, but being...being an...atheist, well, that was just a bridge too far.\"\n\n\"Is there a point here, Mom, or is this just another lecture?\"\n\n\"I'm trying to tell you I love you, honey, and I will support you whomever you love. I could never say this in front of your father, but I wouldn't care if you were, you know, one of those kind of women.\"\n\n\"A lesbian?\" Emma said trying not to laugh. \"I'm definitely not gay, Mom. I like men. But it was nice to hear you say something accepting. But I am still an atheist. I'm not some angry, anti-theist who's has an aneurysm over Beaufort High School saying a pray before a football game. Religion\u2014and no religion\u2014is a personal choice. Do you accept my choice and love me in spite of it?\"\n\n\"Of course I do, Emmy,\" she said using her pet name for her daughter. \"I don't care about any of that. Our faith, such as it is, consists of going to the chapel once or twice a month. We claim to believe, but we don't do anything else differently than those who don't. So yes, I love you unconditionally.\"\n\n\"Even if I'm seeing Jason?\"\n\n\"Are you?\" she asked sweetly.\n\n\"Yes,\" she said. She looked at her mom for a second then said, \"I love him, Mom. I know that sounds crazy after him being engaged to Shelby, with how long I've known him, with me being so much older, and with how Dad feels. But I do. I really love him.\"\n\n\"Well, your father is seven years older than me, you know,\" she said trying to be supportive. She squeezed Emma's hand then asked, \"Is it serious?\"\n\n\"Kind of,\" she said. \"Or maybe it could be.\"\n\n\"I can't speak for your father or your sister, but I do know they will be rather...displeased to learn this, but I can speak for myself, and if you do love him and if he makes you happy, then you have my support, okay?\"\n\nEmma had always been closer to her father than her mother until the rift opened between them her senior year of high school. Since then, she'd been closer to her mom but never close. She felt tears welling up in her eyes and saw her mom in a whole new light.\n\n\"Thank you, Mom. That means a lot to me.\"\n\n\"You're welcome, honey. It's not going to be easy once your father finds out, but I will stand up for you. You have my word on that.\" She patted Emma's hand and said, \"And should he one day propose to you, I have a little money squirreled away your father doesn't know about. It wouldn't provide for a grand wedding like Shelby's, but let's just say we could but something nice together, okay?\" She saw a tear fall from her daughter's eye and said, \"I wish I'd told you this years ago, honey. I'm sorry it took so long. Fear is a terrible emotion to live with and I'm tired of being a slave to it.\"\n\nEmma stood up and hugged her mom. \"I love you, Mom.\"\n\n\"I love you too, Emmy-Em,\" she said as they held one another and had a much-needed cry.\n\nThat night, Emma recounted the talk to Jason who listened in stunned silence.\n\n\"I'm glad, honey,\" he told her. \"As much as I love you, I can't imagine having to choose between me or your family. Not that...\"\n\n\"Jason? There is no choice. I love you and if my family loves me, they'll accept our love. If not, they can go to hell. You know, the place that doesn't exist kind of hell.\" Both of them laughed before Jason put his arm around her and told her again how much he loved her.\n\nFor the next month, they spent as much time together as possible while avoiding her family. Her mother never said a word to her father and he might never have known except for one thing.\n\nJason took Emma out to the Old Sheldon Church ruins under the guise he'd never seen it before. That part was true, but he knew she loved that place and that it was very special to her. It was there he knelt down and asked her to marry him. Somehow she managed not to cry when he proposed, but that didn't mean her heart wasn't overflowing with love and happiness. \n\nShe gladly said 'yes' and Jason smiled then said, \"Just so you know, this is not the same ring.\"\n\nEmma managed a laugh and told him, \"I don't care about rings or weddings, sweetheart. I care about love and commitment. I love you and I promise I'll love you the rest of my life. What else matters?\" she said as he stood up and held her hands.\n\n\"Nothing,\" he told her. \"Nothing else matters. But if you do want a wedding, I want to give it to you.\"\n\n\"A big wedding has never been my dream. I would love to wear a beautiful white dress for you and maybe have a small, informal reception afterward, but no floral arrangements, no seating charts, no band, no hoopla. Just you and me and a few close friends.\" \n\nThe colonel barely contained himself when Emma told him to his face she was getting married to Jason a few days later. She calmly said she wasn't there asking for his blessing let alone his permission. She was simply informing her father she was getting married to the man she loved and he was welcome to attend.\n\n\"I don't expect to be walked down the aisle like Shelby, and I'm okay with that. But I would very much like you to be there, Dad. However, I'll understand if you're not.\"\n\nHe launched into a diatribe about the family, its reputation, their friends, and most of all, her sister.\n\nShe let him vent then said, \"My friends are happy for me and they won't be talking. What your friends think, say, or do is beyond my control. I love you, Dad, but I won't be intimidated by you ever again.\" She left a simple invitation on the table and walked away.\n\nHer mother caught up to her and walked her outside. She handed her an envelope and said, \"This will more than cover any dress you want plus a modest reception. And I promise you I will be there even if your father won't.\"\n\n\"Does Shelby know?\" she asked.\n\n\"No, but she will very soon and you should not expect her to attend. She may not ever speak to you again. You know that, right?\"\n\n\"That's her decision, Mom. I'm not angry at her but if she is with me, that's her cross to bear. Secularly speaking, that is.\"\n\nHer mom didn't laugh, but she did hug her and remind her how much she loved her and that she would be there.\n\n\"Mom? Would you be my maid of honor?\"\n\n\"Technically, I'd be the matron of honor, but I would be...honored!\" she said.\n\nSix weeks later, there was a small rehearsal dinner for a handful of friends as well as Emma's mom and Jason's family who'd flown in from Portland.\n\n\"Your father and I haven't spoken much since, you know...\" her mother told Emma when she asked if her dad might show up after dinner.\n\n\"Okay. I wasn't expecting him. I was mainly concerned about you,\" Emma explained.\n\n\"Me? Oh, honey, I'm wonderful! My daughter is getting married to a handsome Marine aviator tomorrow. How could I not be?\" she asked rhetorically.\n\nThey were getting married at the base chapel with several of Jason's squadron mates performing a sword arch for them after the ceremony. Emma had found the perfect wedding dress at a very reasonable price and after paying for the rehearsal and reception had money left over. Money she tried to give back to her mother.\n\n\"Nonsense! You keep it and use it toward your honeymoon,\" she'd told her. It was just enough to cover the cost of a three-day cruise out of Charleston which they'd booked for the day after their wedding.\n\nThe ceremony itself was short, simple, and sincere. The happy couple exchanged personal vows and rings, then walked under the sword arch on their way to a waiting limo that drove them to the back of the base to the officer's club for a small reception.\n\nThere was also music and dancing and as Jason held his wife, Mrs. Jason Kelley, for their first dance as a married couple he said, \"Any regrets?\"\n\nNeither her father nor her sister attended, but her mother had been there along with several close friends from Beaufort Memorial. \n\n\"Not one,\" she told him smiling a very happy smile. \"I would trade everything I have just to be with you.\"\n\n\"Well, you have me. For better or for worse for the rest of our lives. And you will always have my love.\"\n\n\"And you mine,\" she told him. She smiled then said, \"I hope this isn't the wrong time to tell you this, but I'm pretty sure I will having something else of yours in another eight months.\"\n\n\"What? Are you serious? Emma, are you kidding?\" he said hardly able to contain himself.\n\n\"I'm very, very late,\" she told him. \"I don't know for sure, and yet I do know.\"\n\nHe picked her up off the floor and swung her around. \"I am SO happy!\" he said. He put her down and said, \"You just made me the happiest man on earth twice in the same day!\"\n\nShe pulled herself close to his ear and said, \"Wait until we get to the hotel and I'll make sure it will be at least three times.\"\n\nJason laughed then pulled her close and told her again how much he loved her.\n\n\"And I love you, Jason.\" She looked into his eyes and said, \"Looks like I'm not always a bridesmaid after all.\""
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december",
        "bride",
        "marriage",
        "love",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/always-a-bridesmaid-2"
}