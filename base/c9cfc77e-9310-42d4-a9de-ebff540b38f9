{
    "title": "Painting in Color",
    "pages": [
        "This is not intended as a standalone story. It is a 'second page' to my story. The Painting. I suppose you could read this as a standalone, but you would miss a lot. All of the character development and theme of the story is in The Painting. That theme being of Cancer and one man's recovery and the path back to his life and relationships. Page two is more Jake, Cat and Denise, and how their relationships develop. Again this story is in the NON-EROTIC category. No sex, none, zippo not even a sniff. Your warned. Also be warned that it grew beyond my intentions, to about 25k words.\n\n\n\n*\n\nThis story starts with Denise's Mom, Carol.\n\nI hadn't even taken off my work uniform, or my name tag yet. Carol it said, god I hate that tag. Such a little thing, but I hate it. I've been so damn depressed lately. That's why my uniform's still on. I just can't seem to care how I look. I just sit here staring out the window, cussing a lot of things. I don't even have enough money to buy a beer to drink while I sit here and cuss out the world, let alone a cigarette. My life's what I'm so depressed about. I can't even blame anyone but myself, but I try.\n\nBad ass biker bitch...party...party girl. Straight out of high school, me and my BFF got an apartment all on our own. Then it was Party...Party...Party. Until I started showing, yeah knocked up before the age of nineteen. I didn't even stop partying enough to know that I was pregnant until I started showing, and people started noticing.\n\nThat scared the ever lovin shit out of me. For over two months I took my baby along on every booze, grass, coke and X trip I went on. But I never did any meth or H and I thank God for that. Bad food, no food, junk food and no vegetables to be found, no vitamins either. Drank a lot more beer then I did water.\n\nLittle sleep, no sleep, spend weekends on the run, high as a kite. Friday morning to late Sunday night. never stop, day and night, go, go, then crash and burn. Drag ass up Monday morning. Monday afternoon to Tuesday morning dead to the world, then start the merry go round again.\n\nWhen I found out I was pregnant. Quit cold turkey, birth defects...not this girls' baby. But I was scared with a capital S. Tried to go back to my folks'. THAT went over like a fart in a wind storm. Dad had gotten rid of my ass and could buy more booze, no way was I getting back into his house. 'Get the fucker to cough up some dough and get it cut out.' Direct quote of what he said.\n\nI might be a stupid bitch, but I won't kill my baby. So I stayed with my BFF Jenny, she cut back on partying and helped me what she could. Mom slipped me a few bucks when she was able too. I worked as long as I possibly could, longer that I should have. Had to stop working two weeks before she was born.\n\nBut I got my beautiful baby girl, Denise. Danielle Ann Williamson, but no father's name on the Birth Certificate. I didn't even know who it could be, too much water under that bridge.\n\nIn some ways I think that Denise saved my life just by being born. if I hadn't had to quit cold turkey like I did, for my baby girl. I would have been into meth and H and whatever else I could find. In just a little more time, running the way I'd been. Once a young girl like I was hits that road, the bottoms not far behind. I probability would have ended up naked, fucked, and OD'ed in some dude's back room.\n\nBad boys and parties dried up there for a while.\n\nUntil I met Scooter, bad ass biker from the hogs. Then I became Scooter's old lady. I kind of liked it, at least I was a part of something again. Life started to be a party again. Then it was the same old story, I got knocked up again, and boy I was terrified. I just knew Scooter was going to kick my ass to the curb. But he didn't.\n\nScooter liked the idea of being a daddy, and John was born. Sure I had two kids to look after, but I did, I took care of my babies. Some of the other 'Old Ladies' had kids too. We all chipped in and took care of the kids and each other.\n\nUntil Scooter and those other two hogs got busted for that liquor store robbery. I just couldn't slide over and be one of the other hogs' old lady. That's what usually happened in the clubs. Someone died or went to jail, that old lady moved over to another club member. I just wasn't that kind of person.\n\nSo I had to divorce Scooter, and try to make it on my own. That's where I've been for the last ten years, just hanging on, taking care of my kids. Bouncing from bad boy to bad boy. I cared more about boys then grades in high school. So I was not only bouncing between bad boys, also between bad, low end jobs. Grades were so bad when I was young and in school. I couldn't have gotten into college even if I'd had enough money. Or a high school diploma.\n\nSo it's been just one dead end job after another. Each one seeming to get a little worst then the last. Now I'm a waitress at a working man's' diner. Just breakfast and lunch served, 6am to 1:30pm not enough hours for full time. Not enough hours for insurance, not enough money to get ahead. Working men don't have enough to leave good tips either. Just not enough of anything, just enough to barely hang on.\n\nHell, I'm even cussing out the cripple guy who used to live next door to us. Indirectly he's the one who laid the straw that broke the camel's back. He moved out...back to his ex-wife. Thus killing my wild ass plan, but the last straw was unintentional. I know that he didn't have anything to do with it. It's just that our landlord raised the rent on his apartment after he moved out. By a lot, and he got it. It didn't take very long either, so guess what? He raised the rent on our place too.\n\nHe knows that I don't have enough money to pay it, even for just next months' rent. I don't think he's even going to wait the required 30 days to evict us, either. After all, what can I do about it, get a lawyer? Hell I can't even afford that can of beer. Even though I'm getting state assistance, they'll take at least 60 days to straighten out what he's doing wrong. That still leaves me SOL in a couple of weeks, with two kids to take care of. I've always taken care of my kids. Hope against hope that I still might be able to, but I doubt it.\n\nWhoa...that woman is way out of her neighborhood. But staring out the window, I watch her pull up to these dumpy apartments. The car is white and German, the jeans are fancy and tight. The heels are shiny and black. But the sweater is what says, 'not from this neighborhood'. White soft angora knit, cowl neck and long sleeved, but the lady inside is what makes it special. Red-orange flame, all the way down her back to her ass, and it's a tiny ass too.\n\nOne of my flash comic images hits my brain. At the grocery store checkout lane, one of those gossip rags with those impossible headlines...Famous Fashion Model...Hit by Mad Scientist's Shrinking Ray, what a hoot.\n\nShe is though, model material. She's got the face, the skin, the smoking hot body. But that hair...I've never seen as beautiful of hair as she has. Thick, rich, full and shiny fire flame all the way down to her ass. That's not far though, she's all of five foot tall, maybe. Fully dressed, soaking wet, weighting in at maybe a buck. She moves like a cat too, and she's coming up to MY door??\n\nAfter the knock and opening my door, she's even more beautiful close up.\n\n\"Is Denise here?\"\n\nAll I can do is nod and let her in.\n\n\"DENISE.\"\n\nShe's been reading one of her school books in her and my bedroom. So she hasn't seen the woman whose waiting for her yet.\n\n\"Yes?\" she answers as she coming out of the bedroom.\n\nI can see her mouth open in shock. All I can do is a little nod and gesture toward the redhead. Whose already reaching out toward Denise, to shake her hand.\n\n\"Denise...I just came to look at the 'other woman' in my husband's life.\"\n\n\"WHAT?\"\n\nSome man's been messing with my baby girl?? She's only fifteen. Some ASSHOLE'S going to JAIL!!\n\nBut the red head's already laughing, and Denise is trying to let go of her hand.\n\n\"I...I...I don't know any men!\"\n\n\"Just a little joke on my part, kind of an ice breaker. I'm Cat, Jake's wife. Well ex-wife right now, soon to be wife again. I know it's kind of a shocking joke. But Jakes' talked a lot about you Denise, and I just wanted to see and talk to you. If I know my Jake, I'd bet he's never talked to you about me. Plus I know that he didn't have any pictures of me in his place here either. So I thought that I could get away with a little joke.\"\n\n\"Carol, You know that my Jake never touched Denise, don't you? That's the only part of my joke I worried about. You know he didn't?\"\n\nMy mind's still stumbling about in shock, but I do know that, and just nod my head.\n\n\"Good, well let's sit down and I'll explain why I'm here.\"\n\nI indicate the only chair that we have, and Denise and I sit on John's bed. Being this small one bedroom hole in the wall. Denise and I sleep in the bedroom and John's bed is in the front room. A small TV, a cardboard dresser and hanging closet. Plus the one chair fills the room.\n\nBeing a teenage boy's bedroom I'm worried about that stark white sweater. But she doesn't seem to be. She just sets there and shines in our little dump. Right now, that dump, is the only thing that's keeping us from living on the street. For a little while yet anyway.\n\n\"Denise, I really need to thank you. You will probably never know how much you helped Jake. I know that you don't understand how many problems he had when he was here. He was just that grumpy old cripple, who hid out in the apartment next door to you. Then after several years he changed, and started becoming friends with you.\n\n\"What you don't know is that my Jake went a little crazy when he got Cancer. Clinically crazy, at one point the doctors offered me the option of admitting him. It was only an option because the doctors were convinced that he wasn't a danger to anyone but himself. But I couldn't do that...I couldn't put Jake in a hospital, especially a mental hospital. Jake, my Jake would never have come back, even to himself.\"\n\n\"Jake's a proud man, sometimes too proud, but that's Jake. So I had to let him go, if I couldn't hospitalize him. I had to let him go and just hope. Hope that someday he'd come back to himself, and come back to me. But weeks turned into a month, one month turned into several, then into a year. Then two years, three and finally four years, and I knew that I'd lost my Jake.\"\n\nHere you could see that beautiful tiny lady look down. Physically grab hold of herself and try to keep from breaking down. I was sure she was going to start crying, but she held strong, drew in a deep breath and started again.\n\n\"When Dennis died, something snapped inside Jake. He started to find his path back to himself. I know that...if it had just been the shock of Dennis' death. He'd have slipped back into his shell. But he met a special girl named Denise, and she became friends with a grumpy old man in a wheel chair. Not many girls your age would do that, they couldn't see that friend inside a grumpy old man. Or they would have just seen the wheel chair. You did though, and that let him creep out of his shell.\"\n\n\"You helped him paint a painting that's come to mean a lot, to a great many people. It's lessen a lot of grief. Dennis' wife Julie tells me she says 'good morning' to it every day, and that helps her feel less alone. Julie says Dennis' mom 'comes over for coffee' some days when she's feeling real blue. Julie will give her a cup of coffee and leaves her alone in the front room, to talk to her son.\"\n\n\"Dennis' Dad is one of those too proud men you'll never see cry. So he can only look at the painting for a very few seconds before he has to leave. Julie left him alone in the front room one day, all by himself. He was there for over an hour, before she noticed he'd disappeared. The one who the painting has had the most effect on, has been me.\"\n\n\"Denise, I took one glance at that painting, and I knew that my Jake was back. I KNEW it, and I had to have him back with me right away. I did every dirty trick and pulled every string I could in Jake, but I had to have him back with me, right then and there.\"\n\nAs if we weren't shocked enough, Cat came and knelt down in front of Denise and took both of her hands in her own.\n\n\"I'm sorry Denise, someday when you're older and have a husband of your own. You'll understand how I felt. But what I didn't know, was that I was hurting you. Someone that I owed so very much too. I understand now that it's been hard for you, missing your friend. Just starting out in a new and special friendship, and it gets jerked out from under you. I'm so sorry.\"\n\n\"I know that you been calling and talking with Jake on the phone. He's even taken you and Kathy out to lunch one day, and that's OK. It's more than OK, I want Jake to get back out into life. I want him to be able to be with his friends. I know that a lot of that is you Denise. Kathy's a friend, but your that special friend, and I want you to be in his life. Mine too if you'll let me.\"\n\n\"You see Denise, I owe you my eternal gratitude. Because without you I wouldn't have my Jakie back.\"\n\nAt that she lay her head down in Denise's lap and let the tears go. That beautiful woman, who had amazed us with her flaming red hair and tiny beauty. Cried out her thanks in my daughters lap. In my mind, I had to start begging for forgiveness.\n\nShe was too strong a person to cry for long. But a quick thank you for a hand up. A splash of water, for her face, and she was as good as new, almost.\n\n\"Well to why I came, I do want to get to know Denise more. AND I want her to be part of Jakes' life. So Carol, I have a favor to ask of you. If it would be all right with you, I'd like to have Denise over for the weekend. She'll have her own bedroom, we have a spare in our home. It even has its' own en suite. I assure you that she'll be well taken care of, and I have several ideas of fun things for us to do.\"\n\nI held my breath, and imagined the puzzle pieces falling into place. Cried in my heart, and prayed for forgiveness. Then Cat laughed again.\n\n\"Just look at me, I feel like a teenager asking a girlfriends mother if she can come over for a pajama party, or sleepover. Mommy can Denise come over to my house? Pretty please?\"\n\nThey're either giggling or laughing and I'm trying to laugh on the outside, while crying on the inside.\n\n\"Sure little girl, is your mommy going to be there to make sure LITTLE girls behave? Christ woman didn't your parents ever feed you? Your tiny, beautiful, but I don't think that I've seen few grown women as small as you are. What are you? About five foot and a hundred pounds?\"\n\n\"What, I'll have you know that I'm five foot one half inch, and 97 pounds. All of red haired, green eyed, Irish temper. So look out. Also would you believe that my dad's 6' 3\"...I didn't think so, but he is, and I'm just like my mother. So I can blame it all on her.\"\n\n\"Well if she's as beautiful as you are, your dad's a lucky man. So I wouldn't blame her too much.\" \"Denise you do want to go don't you?\"\n\n\"Yes I'd love too, if I can?\"\n\n\"Well go gather some of your prettier things together, and what else you'll need for the weekend. You'll have to get a bag from under the sink. Sorry we don't have an overnighter.\"\n\nI said that last to Cat. Her small soft smile said that she understood, and I felt glad at her kindness. We made small talk while Denise gathered up enough clothes for a weekend. Sad to see that it was a fair amount of her clothes in just that one paper bag. But I wanted her to take most of her best. They would probably take her out somewhere and I didn't want her to be more embarrassed then she had to be.\n\nSo with everything she needed in a brown paper grocery bag, at a fancy white car. I kissed my beautiful baby girl goodbye.\n\nWent back into the apartment and started crying, praying and begging god for forgiveness. Because all those puzzle pieces that I saw falling. Were my wild ass insane plan, falling right into place. A plan that I'd already given up on. Because too much of it was just plain wrong! But I'd only even considered this impossible plan...because I was out of options.\n\nUntil today...until this beautiful lady came to my house. All I could see was that Denise, my beautiful baby girl, and I. We're going to be living on the street, real soon.\n\nYou see, Scooter, John's father showed up a couple of weeks ago. He'd finally gotten out of prison and worked his way back into the city. He wanted to be back in John's life again. When he'd seen the straits that I was in, he offered to take John to live with him.\n\nI begged him to take Denise too, he was the only father she'd ever known. But he said that he just couldn't afford to. Even with just him and John it was going to be tight, and I knew that. With him just getting out of prison, it wasn't going to be an easy row.\n\nThen there was the rent that was going to be due in just a couple of weeks, and I couldn't pay it.\n\nAnother piece of the puzzle was Bernie, finally after years of bad boy choices. I had a boy friend who wasn't a bad boy, a biker, a con, or a player. No, no one would consider my balding pudgy accountant any of those things. So I thought maybe, possibly it might have had chance to work this time. He said that he loves me, and I think that maybe I could have loved him too.\n\nBernie was changing jobs and moving out of state, he was leaving Monday. He'd asked me to go with him. It might have worked, but I'd already told him no. You see, Bernie and I had one big black mark between us. Bernie was sterile, always had been. That had been fine with him, he'd never wanted kids anyway. I had two.\n\nEven after I'd gotten Scooter to take in John. I could go with Bernie, just not with Denise too. So I told him no, I couldn't go with him. I'd had serious doubts in my mind anyway. Could you really love someone and force her to give up her kids, to be with you? Could I love someone who could demand that?\n\nMy wild ass insane dream had started anyway. It wasn't so much in getting Bernie and I together. It was mostly just about keeping Denise off the streets. I know I'm a hard ass bitch, Denise isn't. She's a kind and gentle person who thinks the best of everyone, until they show her different. The streets are going to eat her alive. My wild ass plan...Jake.\n\nI don't know where us hard ass bitches fail, but sometimes we can see right into the soul of a good man. Know beyond the shadow of a doubt, that he's golden all the way to his core. He just doesn't make that tingle in your belly, doesn't make your heart go pitter patter. Don't get me wrong Jake's hot, he's got it in spades, just not to me. Then us bitches look at another man, see gold, at least we make our selves think so. Because heart goes thumpy thump, and tummy burns. Until we find out he's brass and pot metal through and through.\n\nJake doesn't make my heart even quiver, he's gold. I KNOW that Jake would take care of my baby girl. I don't have a doubt in my mind that he wouldn't. Until he moved back to his wife, and my insane plan went crash. But it really was insane, and I knew that I couldn't do it.\n\nYes, John's going to live with his Dad. But there's no way I'm going to take my baby girl somewhere and drop her off like a baby on the church steps. I couldn't look her in the eyes and do that to her. No matter if I took her to a way better home, or even took her to Jakes'. I couldn't look her in the eyes and leave her. Even for her own good. I guess I'm just too weak.\n\nUntil...this beautiful woman knelt before my baby girl and promised her eternal gratitude and cried tears in my daughters lap. She meant every word of it too. Some women you don't have to even look at, and see that their souls are golden.",
        "As I sit here crying and begging for forgiveness. In my minds' eye, all I can see are puzzle pieces falling and locking into place. But it's so very wrong!\n\nJake.\n\nI didn't know where Cat had gone to. Since I'd moved home, she'd been real good at letting me know where she'd be going, and how long she was going to be gone. But she hadn't this time, and she's been gone quite a while, and I was getting concerned. I was thinking of finding my cell phone. When I heard her car in the driveway. It was somewhat of a shock when she came through the door laughing with Denise and a sack full of clothes. But it was a good shock. That she'd gone and gotten Denise on her own, meant something to me. A lot of some things.\n\nI thought that maybe Cat would just try and ignore the time I'd spend away from her. I thought that if she did, it just might not be too healthy for us. Plus I didn't want to just forget about Denise. Cat trying to ignore that time, would have made it hard for me to include Denise in my life. I didn't want to have to choose between having an open friendship, or keeping my friendship with Denise separate. That could have led to a lot of jealousy. Denise was my friend, and she was going to stay my friend.\n\nBut my beautiful Cat didn't do that, she went and got Denise on her own. That told me a lot of things. We were going to be OK, Cat and I. Furthermore, she was going to except the good things of the last four years. Even though Denise is about the only really good thing in those years. That and getting back into painting.\n\nAlso the confidence I got in my own independence. I wasn't helpless like I'd been so afraid of. I'd taken care of myself for four years, with very little outside help. That had been one of my deep seated fears, not being able to take care of myself from this wheelchair. Of becoming a burden on everyone else, an invalid.\n\nThe painting just gave me a new direction for my life to go. We'd talked about that, Cat and I. We'd decided to set up a studio in the other downstairs bedroom. Even had a utility sink plumbed in, and replaced all the lighting with natural light fixtures. That room, like all of them in our home, had a great deal of large windows. So we took off all the curtains, and let all the natural light flood in. I never planned on this room as a studio, but almost all the windows in it ended up facing North. North light is the most stable, true color light throughout the whole day. Perfect for a studio.\n\nCat had jumped into this change of direction quicker than I did. I tried to slow her down, but she'd gotten the bit in her teeth, and was off to the races. She'd gotten the hospital, where she works, to designate a hallway wall as a mini gallery for me. She was working on Julie and a restaurant in the mall to do the same. I guess she wanted me to live with a brush in my hand. She'd ordered two more easels, and was looking into cabinets and counter tops, storage. Stainless steel counter tops.\n\nI'd started to talk about running a small engineering design company from our home. She jumped in and started talking about using the little upstairs bedroom. Getting a home elevator installed, and tax credit. Work station, light box, and employee tax id. LLC. Registration. I caught that plan before it snowballed and said we had to wait on that. It was like she was trying to make up four years time in just a couple of months.\n\nWell, after laughs and hugs, pecks on the cheek. I asked Cat to show Denise the bigger upstairs bedroom, and where to put her stuff. Then to give her a small tour of the upstairs, that I'd handle the downstairs tour. They were laughing all the way upstairs, but it was sad watching Denise with her little sack of clothes.\n\nSad watching Cat too. Maybe we should have had some kids. She should have had a daughter.\n\nI can't take pretty girls out dining and dancing any more. But we can do the dinning part. I'd like to take Denise out some place really nice. That paper sack doesn't hold an evening dress, furthermore I'd bet Denise has never had one or even seen very many. Antonio's restaurant sounds about right.\n\nOn the house tour with Denise, it's fun to watch the amazement on her face. Amazement about our house, the look of wonder. Life has been tough for her and her family. She's probably never been in a home like this. Definitely not the home of someone who's a friend.\n\nI guess it's maybe because I can see her pride in me about the design, and beauty of the house. It doesn't hurt too much to let her know that I didn't get to build the house with my own two hands. Cat had to get others to actually do the building. She did a good job though, the house is worth close to a couple mil. Even Cat's amazed when I point out the post I was moving when my leg broke.\n\n\"Would my two lovely ladies honor me with their presence at dinner on the town tonight? Antonio's sound about right?\"\n\n\"Oh, Denise he wants to take us out fancy, fancy tonight.\"\n\n\"I can't include any dancing, so it needs to be special dinning for my girls.\"\n\n\"I...I...don...Can't we just go for pizza or hamburgers Jake? I...I...don't have anything that I could wear to a place like that.\"\n\n\"I know Denise, that's going to be part of the fun. Cat, doesn't Julie work today?\"\n\n\"O yes, now I see the fun. We get to go shopping girl friend. Jakie's going to buy us dresses, pretty, pretty dresses. Come on Denise, my girl friend, we'll take my car. Hurry up Jake, and bring your credit card. We're going to buy pretty, pretty dresses.\"\n\nThat sounded so funny in Cat's sing song, put on little girl voice. So after we transferred my light frame chair to the car trunk. Slid my ass into the passenger seat of Cat's car. We headed toward the mall. Yes, our special fashion consultant was working today. Just special for us, she came down from her high office to...consult.\n\n\"So I hear Jake's buying dresses today? Special dinners, night out on the town. Ooh lucky girls. Is that her Jake, the one who helped with the painting?\"\n\n\"Yes that's her, that's Denise. She's had a tough life Julie. Cat brought her over for the weekend. She had just a paper grocery bag of clothes with her. Sad to say, it's probably about most of her clothes. Certainty nothing nice, jeans, tees, and most of those pretty worn. From what we've talked about, I doubt she's even had a nice dress before. And yes, she helped with the painting. Hell, I even put a paint brush in her hand for some of the background work.\"\n\n\"She's a pretty girl Jake, just right at that special stage in her life. She could be both a little girl, or a young woman. Depending on how she dressed, or feels. But, I think that if you buy a little girl dress, three women will beat you about the head and shoulders.\"\n\n\"Well, oh mighty fashion consultant I put us all in your hands.\"\n\n\"Where do you plan on taking them for dinner tonight?\"\n\n\"I thought about Italian, at Antonio's.\"\n\n\"How about that new place, The Castles Keep. It's a lot more wheel chair friendly. The menu's more varied, and they have some nice outdoor balconies. That would be very nice on an evening like tonight. Plus, we'll get her a young ladies dress, but she's still young enough that tomato sauce is a possible danger. It would break her heart to stain her first fancy dress.\"\n\n\"Great idea, thanks Julie.\"\n\n\"How about this Jake, you buy one set of the works, dress, shoes, lacy underwear. Then I'll buy another set, then she'll have a choice. Furthermore I'll take her to our beauty salon for hair and just a touch of make-up. Then you buy dinner, sound good?\"\n\n\"If that's what you would like to do Julie. Sounds great, but do you think we'll have enough time?\"\n\n\"I think that there should be enough. You men are so lucky, you don't have all these fashion problems. If you just got a nicer shirt here, or maybe a shirt and sport coat. You wouldn't even have to go home first then. Ooh, then here's a nice idea. There's a park on Lincoln Street right on the way. Stop there and let the girls do a little promenade on the pathways, which are paved by the way. Buy a little of their bread pieces and feed the ducks in the pond. Then cruise on up for evening dinner, overlooking the lights of the city.\"\n\n\"Wow, I got my whole evening out planned by a professional. All great ideas Julie. But then yours always are. Want to come with?\"\n\n\"Yes...yes I think that I would like that Jake. I...I haven't been out yet, since Dennis died. Mom's been pushing me, saying that I had to get out of that house. Maybe tonight, with you, Cat, and Denise. Is the time to dip my toes into the water and get out. I know Carl the maitre d' up there, I'll call and set it up. About 8pm?\"\n\n\"Yeah, 8pm sounds about right.\"\n\nAt that I headed off for a shirt and coat. Which of course took a lot less time than the girls did. Julie's done some really different things in her store. There's one place where she's created a viewing area for the men. Four large screen TV's in a circle, all facing out, a little seating. Then four different games or sporting events on all the time.\n\nBetween those and more flat screens by the men's fitting rooms. She said her men's clothing sales has risen several percentage points. The ones by the women's fitting rooms has helped too. Except their set on fashion channels. Julie's a very intelligent and daring woman.\n\nWhen they come back, it's an entirely different Denise. Julie was right again. Gone is the little girl, with an amazing young woman standing there. You can tell that she'd not comfortable in that yet. She feels the change though. It's not a 'little black dress', but it's got that classic look to it. Plus it's not black, almost a deep satin sable.\n\nI would have never have picked that color. I can see what Julie's doing though. It's an elegant classy dress, that could go with almost anything. Or go to almost anywhere. The thing it goes with the most is Denise herself. I guess I never noticed Denise's appearance much before. She was just Denise my young friend.\n\nWith her light blond hair, and her bright green eyes, fair skin. That exact shade of sable, just goes. Now that I really look at Denise I realize that her green eyes are almost the exact shade as Cat's. I've always loved Cat's eyes, they have an iridescent quality, a flash to them. Denise is going to be beautiful, and for some reason that makes me feel proud. Even though I don't have a reason to be.\n\n\"Hey Jake, scoot. I'm going to take your lovely ladies for shoes and to the salon. I know just how muuuu..ch you men just looo...ve to shoe shop, and sit around watching finger nails dry. Go out into the mall, get a cupp'a, an ice cream, or something. Sit and watch the T&amp;A go by. This is the part that's going to take some time, so scoot.\"\n\n\"OK bossy lady, but I think your T&amp;A comment has our little missy red faced and mouth open.\"\n\n\"Julie and Jake quit picking on her. But it does look so cute on her. Come Denise we'll leave these two to laugh it up and go get all fancied. Just fork over that credit card Jakie.\"\n\n\"No Cat, this parts on me. Remember I'm the one who gets the big employee discount.\"\n\nSince shopping has become a sport, men have done this. Been joyfully relegated to the side lines. But I haven't done this in over four years, people watching. It kind of crowds in on me, the noise and the people. Hibernating in that cave of mine, has really put me away from life. I think that this might be the first time I've been in any type of crowd, since I crawled out of that cave.\n\nI can still feel it some, that disassociation, even the chair adds to that feeling. Just not quite in that flow of people swimming through life. Still it feels good to get out, and at least watch life flow around me. Yes, even to watch the tits and ass go by. Damn but they look so young, even more than Denise did in that dress. Guess I'm just getting old, but 42 is not really...that old.\n\nThe park's all that Julie said it was. Asphalt paved walk ways, cool trees, green grass. A small area with swings and monkey bars. The walk ways are curved and wander through out the park. It's about fifteen or twenty acres in size. There's a small pond there with some ducks and fish. A little stand where you can buy bread pieces and some types of fish food. They're greedy and used to being fed. I have a hard time not feeling a bit of masculine pride.\n\nMy three ladies are miles above any others in the park. Dressed to the nines and each of them with their own distinctive beauty. They have a right to enjoy all the attention their getting. I think Denise is going to develop into a woman ever so much like Julie. Even at fifteen she's tall and lean, long legs. She even walks a little like Julie, that almost stalking strut.\n\nMaybe she's just following along, imitating Julie. She definitely starting to relax. My whistles and cat calls are drawing laughs from them. My talk of swinging asses, bring a few stuck out tongues. But it did cause a little extra swing in a fifteen year old ass, and a laugh from the others.\n\nI think society is missing things like this now. Our great-great grandparents used to do this. Promenade in the park on a Sunday afternoon or after church. Young men and girls dressed up to impress each other. Families with blankets and picnics. Kids running free in the sun shine. Maybe with new friends, All showing off either their family or their fancy clothes, meeting new people. Just having fun.\n\nI watched an old man, sitting on a bench. Just feeding seeds to the pigeons, all sad and lonely. When the girls approached him a smile broke like the sunrise on his face. A happy chuckle started that turned into a laugh. This drew a wink and a little finger wave from Cat. Julie leaned down and put a small kiss on his forehead. As they walked past Denise did a pirouette and a finger wave to him. It wasn't much, but maybe it brighten his day just a little bit. I know it would have mine, in his place.\n\nCastle's Keep, was a more than apt name for the restaurant. All stone and mortar, heavy and solid, with medieval styling. Hell it even had turrets and crenulations. The entry was steps up to a double heavy oaken doors. With door guards in period costume, but it did have ramps up the sides. Julie was right it was a very wheelchair friendly place.\n\nIt was friendly, but it was also formal dining. I could see the tension rising in Denise. More when she saw the table with all its myriad of silverware, water and wine glasses, tea cups and saucers, multiple plates, even finger bowls. I made it a game of showing Denise how everything was suppose to be used. Then doing the exact opposite, being rude and crude. Julie and Cat picked up right away. They took over the instruction, while I did the comedy overlay.\n\nFortunately the little balcony we got only had room for three tables, our larger table and two couple's tables. Only one of them was occupied, so I didn't have to much of an audience. Anyway they laughed a little too. It settled Denise into the group just like I wanted it too. Her introduction to formal dining was a lot more fun than mine had been. All stuffed shirts and straight backs, staged whispers.\n\nAgain Julie was right. The evening couldn't have been better for dinner on the balcony. Warm with a slight touch of coolness as the dusk fell. Plenty of light during the main of the meal. As we settled into drinks and dessert, the lights of the city started to shine.\n\nAt one point during the evening, I tried to think what it might look from Denise's point of view. All the waiters in their black satin vests, stark white shirts, creased black trousers. The rest of the serving staff in period costume. It must seen like a fairy tale evening. I kind of wanted it that way too. I wanted to show her a different side of what life could be. Maybe what she could achieve, if she worked hard and grabbed for the brass ring. She sure had two examples of successful women right in front of her.\n\nI wanted that for her, that example of what good choices in life can achieve. Not putting her mom down too much, but Denise needed some good examples. I've tried to talk to her about the choices we make in life. Denise is very intelligent, I think that if she applied herself in school a little more. She might be able to break out of that mold of her family. I want to help her do that, even if it's just showing her good examples.\n\nWe didn't get kicked out of the keep, but we should have. It got late. They looked like they were wanting their table for the next group. So we left, thus it was quite late when we got home. We didn't do much more than talk a bit, then head for bed.\n\nBut morning was more what I'd imagined it could be like. All of us in the kitchen cooking. I was dicing, frying, and getting ready for cooking omelets. Cat was mixing up some muffins, and Denise was cutting up some melon. It was fun, a lot of hip checking, and I ran over a few toes. A little friendly water thrown, and towels snapped.\n\nAt the table everyone was hungry enough that things settled down. At least until that grape bounced off my forehead. Then the battle was on. Fortunately the butter was left off the pieces of flying muffin, no sausage grease spots showed up on clothes or hair. So it wasn't quite Animal House, but fun.\n\nIt took me a while to realize why Denise seemed so much more relaxed and happy. Her home atmosphere couldn't have been very pleasant. I can't remember her family joking or laughing together. Anytime I'd been around Carol, her mother, the depression and worry radiated off her. With John playing video games with his friend all the time. Denise didn't have much to smile about, and she had to realize what her mother's worry was all about.\n\nIf Cat and I can have Denise over several times. Maybe we can show her a different side of life. Along with some positive examples. Give her an emotional mini vacation. John I don't know what to do about though, I just never connected with him. I guess we'll invite him along too, that should give Carol a little break on her food budget.\n\nDenise must have still been feeling her fancy dress evening. After breakfast and clean up, all we did was talk. Coffee and tea cups, couches and chairs, most of the conversation was between Denise and Cat. They had to do a lot of connecting, finding out about each other. Denise was quite the young lady though. It was a very mature conversation about things like her school and friends. Some about her hopes and dreams.\n\nCat was the one to approach her about making weekends with us a regular occurrence. Not all the time, but maybe every other weekend or so. Some times on holidays or over the summer. That bought out the happy little kid again. I suggested that we should get her a garment bag to carry her new dresses and such back and forth.\n\nSo it was back out shopping, not to any place expensive. I didn't want Carol to feel too much in our debt. Although I knew she still would, with even just the dresses. Then we hit the fun place for lunch.\n\nThe BBBB&amp;B, Billy Bob's Big Burger Bar, their d\u00e9cor is over the top red neck. The staff's all in costume and tries to imitate a southern hillbilly drawl, but their burgers are great. Real man burgers, big, greasy, with any fixings you can possibly want, even the kitchen sink. Cat says I just like the daisy duke shorts on the waitresses.\n\nThere was a small zoo on this side of town. So we rolled along through that a while, bought Cat and Denise matching sweat shirts with monkey faces on them. But we were running out of time. We wanted to get a light dinner fixed and done before we had to take Denise home. Tomorrow was a school day.\n\nBy the time we got done with dinner, it was getting late. So I stayed home while Cat ran Denise home. It wasn't long before the phone rang. It was Cat's cell, I started to worry about a car wreck or something.\n\n\"Jake, we've got a real problem.\"",
        "\"You didn't get in a wreck or anything did you? Everyone OK?\"\n\n\"No Jake, we didn't get in a wreck. But everything's not OK. Jake there's no one here, the apartment's cleaned out and everyone's gone. All that's here is two notes, and a couple of boxes of her clothes and things.\"\n\n\"Oh my God, how's Denise?\"\n\n\"Just a real mess Jake, one very scared little girl. We read the note with Denise's name on it. Her mom's gone Jake, she just left her. You'll have to read the note, but the other one's addressed to you Jake. What do you want me to do, Jake. I won't just leave her here, and I don't think I could take her to a shelter or child services. I couldn't do that to her, Jake. She's crying so hard I had to read the note to her. She's shaking so bad, she couldn't even hold it.\"\n\n\"What do I do Jake?\"\n\n\"Bring her home Cat, just bring her home.\"\n\n\"Jake, I'm crying too and my heart's breaking. I've never seen anyone so crushed, I try to get her attention and talk to her. But it's like she's not really there Jake. She's just laying on the floor in a fetal position, crying. It might be a while before I can get her up enough to even go to the car.\"\n\n\"Jake, can she live with us...even for just a little while?\"\n\n\"Bring her home Cat, just bring her home. As far as I'm concerned this can be her home for as long as we want, as long as she needs.\"\n\n\"Thank you Jake. We'll be home as soon as we can. Love you Jake.\"\n\nWhy is she telling me thank you, Denise has been my friend. Cat's just barely met her, just this week end. But I know my Cat's got a heart of gold, and this must be tearing her apart.\n\nI intellectually know that this stuff happens in the big bad world, parents abandoning their children. It's so completely alien in Cat's and my world. To have it happen to someone we know and care about...\n\nI'm going to have to read those notes as soon as I can. Then I'll know what Cat and I have to talk about, what direction to go. As soon as Denise can handle it, we'll have to talk too. It's her life, maybe there's a grandparent or something we don't know about. Somewhere she'd like to go, rather than here.\n\nI realize that I want her here. I think that it's even been in the back of my mind for a while, it seemed impossible, but it was there.\n\nI should get an attorney right away. I don't want her to end up in the child care system. You hear some real horror stories that can come from there. I don't want even the possible chance of her being put into the system. We'll look into adoption or becoming foster parents first. I'll have to get her school records and get her transferred over to this school district has soon as I can. With just a few months left before summer break. I don't want her to fall behind. Maybe in a year we can get her a car...\n\nThen I realize my minds just running away with itself. The fact about school is true, that needs to be remedied soonest. The most important is Denise, she needs to be settled and safe. Somewhere she can start to heal. God, how can you heal from something like this, she's just fifteen. Dumped by your own mother, and all alone in the world.\n\nThere's just no excuse for this...no possible excuse.\n\nEven if Carol ran completely out of resources and lost her job. Had to bust up the family and foster them out. She could have asked. Just let Denise know why, and asked. Then it wouldn't have tore Denise up so much. She would have at least known that her mother loved her. Maybe she knows that, but now she has to have doubts.\n\nThey're here!\n\nI'm out the door and to the car as fast as I can. Cat hasn't even made it around to the passenger side yet. I'm able to open the door and lift Denise out of the car and lay her across my lap. She lays there almost limp, just gently sobbing. I look up to my wife's makeup raccoon eyes and tear tracks. Read empathy and anguish, bone deep anguish. Two small hands slide up around my neck, a soft voice floats up...\n\n\"Jake.\"\n\nShe goes back to softly sobbing, and something sinks deep down inside me. Still looking into Cat's eyes as tears start sliding down her face again too. For a couple of heart beats, we just stare at each other. Realizing that neither one of us can absorb the magnitude of what's happened. Wondering...where do we go from here?\n\nI spin my chair and head into the house. Pulling up to the front of the couch so we both can hold her. There we sit, I don't know for how long but it feels like quite a while before one of us moves. Then it's Cat.\n\n\"I'll get her clothes out of the car, and get her stuff ready for bed.\"\n\nI see her go by with that little grocery sack of clothes and her new garment bag, heading upstairs. Denise has quit sobbing, and I don't know if she's falling asleep. But I do know that her breathing is settling down. So I continue to hold her. It's bare seconds and Cat's back, she tips her face to see into Denise's eyes.\n\n\"Baby, do you want to go upstairs and get ready for bed, or do you still want to sit here with Jake?\"\n\n\"Jake.\"\n\n\"OK baby, just let me know when you're ready. Jake, I'm going to go get some night things. I'm going to sleep with Denise tonight. I don't think that she should be alone tonight.\"\n\nI nod my head, still holding Denise close, running my fingers through her hair. Watch Cat lay two pieces of paper on the couch. Both folded into thirds, one open and one still taped shut with my name on the outside. She's heading into our bedroom. A couple of small whispers rise up from my lap.\n\n\"Why, Jake?\"\n\nThe sobs and tears started again. I pulled her head tight to my shoulder, used my other arm to pull her body tighter into my chest. Just hold her there, letting her settle.\n\n\"I don't know...but we'll figure it out, maybe tomorrow. All I'm concerned with right now is you. You're all that's important, getting you settled down and safe. Until we do that, you'll live here with us. Until we 'all' decide what we can and will do, you'll stay here. So you just sit right here and hold me until I feel better.\"\n\n\"But Jake, your holding me.\"\n\n\"Oh shit, I thought it was the other way around. Guess I better do a better job of it.\"\n\n\"Silly man...I love you Jake.\"\n\n\"I love you too, Baby Doll...I love you too.\"\n\nCat's hand floats over my shoulder to stroke Denise's hair.\n\n\"Sweetie, you about ready to go upstairs and hold 'me' all night?\"\n\nA very small chuckle escapes as she crawls out of my lap. Unfolding all those long arms and legs. Steps into the arm that Cat winds around her waist and up they go. I'm left staring at two pieces of paper that might as well be rattlesnakes. I really don't know if I'm up to reading them tonight. I'm not used to being rung out with so much emotion. Then I notice Cat coming back downstairs. Up close I see a flash I've never seen in my wife's eyes.\n\n\"There's no fucking excuse for doing that to a child. Not. One. Fucking. Excuse. Especially to your own daughter.\"\n\nThose flashing eyes spun on the ball of one foot, and stalked up to the stairs again. Only to stop, spin, and stalk back.\n\n\"All she had to do was ask someone for help. We would have helped her, hell she could have moved in here with the children. Or Julie would have taken her in, and maybe found her a better job. I might have been able to get her some hours in the hospital cafeteria. Something! All. She. Had. To. Do. Was. Ask!\"\n\nAgain with the spin and the power stalk, this time it went all the way upstairs. I expected the walls to reverberate with the slam of the door, but it never made a sound. Wow, she's a little hot, hotter than I've ever seen her. Momma bear just went to guard her cub. Don't get in the way, you'll pull back a stump.\n\nBut I'm still left with these two paper rattlesnakes on the couch.\n\nMy beautiful baby girl,\n\nI don't know if you'll ever be able to realize how sorry I am right now. You'd have to give away your own baby girl, and I know that you never would. You're a lot better person then I am. But know that no one will ever love you as much as I will, and that I'll love you forever.\n\nNone of this is any of your fault baby girl. It's all mine, all my life I've never been a very good person. You and John are the best things I've ever done, my pride and joy.\n\nKnow that my leaving you has nothing to do with my loving you any less than I always have. That is with my whole heart and soul, your my beautiful baby girl. You always will be. I'm leaving to get you to a better life, and I think that better life is with Jake.\n\nI have a lot of things to be sorry for in my life. Most of my choices in life have been bad ones, for all the wrong reasons. I never tried in school so I can never get a good job. I didn't try to learn a trade or job. I'd rather party, and I did right after I left high school. I partied so much after high school I got pregnant with you before I turned nineteen.\n\nSo here's the first thing I'm real sorry for. Scooter's not your Daddy baby girl. I don't know who is. Somewhere in that summer after high school is your father. I just don't know which one, or even if I remember him. Don't be like me baby girl, don't make my mistakes.\n\nI don't think that you will, you're not only a better person than I am. Your smarter too. So smart that I know you can see where we are at, money wise. We're going to lose this apartment. You know that slum lord bastard raised the rent, and I can't pay it. I looked all over for a new place, the only one I found. Is in a neighborhood that's so bad we'd have to carry guns to be safe.\n\nWhat you don't know is that my boss will be cutting back my hours this summer. He has a niece that needs to make some money for her college fund next fall. So each of the waitress will need to give up some of their hours. I tried real hard, but I can't find a better job either.\n\nSo not only can't I find an apartment to move to, I won't have enough money to pay for one if I could. Plus I have to accomplish this in the next two weeks. Because slum lord is evicting us next time the rent is due.\n\nScooter came back into town, and he wants to have John live with him. But he can't take us too. So that's where John is, with his Dad. Bernie will take me with him when he moves. But he doesn't want any kids, so I told him I wouldn't go. That left you and me, baby girl, living out on the street. I'm a bitch, I can survive there. I don't think that you could, not and stay the baby girl that I know and love. I'm just out of options.\n\nThen Jake's wife came over, and I realized that the best place for you would be with Jake. He loves you baby girl, and he's a good man and she's a good woman. He'll take better care of you then I ever could. Plus he'll teach you to be a better class of person than your bitch of a Momma. So listen to him baby girl and try to love him like the father that you never had.\n\nI won't ask for your forgiveness or your understanding, because I don't deserve them. I know that I'll never forgive myself for abandoning you. God's the only one who could do that, and I don't think that even he will.\n\nJust remember that I'll love you forever, my beautiful baby girl.\n\nWell it seems like Carol's in a very dark place, depressed and thinking she's out of options. I guess that I kind of agree with Cat though. All she had to do was ask for help. We could have found her some help, somewhere. Or even just helped them ourselves. I realize that she's kind of like me though. It would be very hard for either of us to ask for help from someone else.\n\nWe're both too proud. We take care of our own, or find a way too. Which I guess is kind of what she's doing. But even as proud as she is, it's not just her. With the two kids she had to ask for help, not just give up. Especially just abandoning Denise, that's going to leave some emotional scars. Well let's see what the other letter says.\n\nJake:\n\nI think you know that I'm a cast iron bitch. I'm proud, and have never begged anyone for anything. But I'm on my knees right now. I'm begging Jake, begging you to please take in my baby girl. I'm begging with everything I have, take her in and raise her. If you've read the other letter, you know Denise has never had a father. Become that for her Jake, become the father that she desperately needs. I'm begging Jake.\n\nI know that you really care for her and I'm counting on that. I know I'm being a low life bitch for putting you in this situation. Just dumping it into your lap like this.\n\nBut I'm going down Jake, and I don't want to take her with me. All my life choices have been bad. No education, no trade or training, I'm getting older and my looks are going. Everything is going downhill for me. Take her away from this Jake.\n\nMost of my family has never amounted to much. I'm an only child, and my Mother was a bitch too. My Dad was a mean drunk, and it got worse after I dropped out of school and left. Yeah, I tell everyone that I graduated, even myself. But I really dropped out, basically before they kicked me out.\n\nAfter I got pregnant and tried to go back home. My parents wouldn't let me. But their fighting got worse. He finally beat her to death. Then he died in prison years later.\n\nPart of what I'm saying with this is, Denise has no one but me. Now I pray with everything in me, you. Denise is different from any of my family. She could become a lot better person. Teach her how too, Jake. Give her the opportunities that the rest of my family never had, and never deserved.\n\nMy giving my daughter over to you is more than just finding her food and a roof over her head. She needs what you could teach her. Sure I might be able the find a shelter or a church group, something. To just get us over this hump. Maybe they could even get me a little training for a better job.\n\nBut it would only be a 'little' better job, just enough to get by. I don't have the education or the wherewithal to get much more. My lot in life is never going up. It will always be just enough to get by, at best.\n\nDenise could amount to so much more, and she deserves too. Her goodness would only get beat down where I'm going. I think that you know that too, and you care enough about her to not want that to happen. So teach her how to better herself, Jake.\n\nThere's some important papers in one of her boxes of clothes. Her Birth Certificate and such. So I guess I better get this stuff out of the road:\n\nI, Carol Ann Williamson, being of sound mind and body. Would like to pass the care and responsibility for Danielle Ann Williamson to Jacob Davis. To empower him to make all legal and necessary decisions for her care until she reaches the age of her majority. I request that she be named legal ward into his care, if possible. I also want to relinquish my rights as prime custodial parent to Jacob Davis.\n\nCarol Ann Williamson.\n\nThat should help you to get legal care of Denise. I'm praying that you will. I would prefer that you didn't totally adopt Denise. I would like to dream that she will still be my daughter. However, if you or Denise really want to, or find it necessary to, I won't fight it.\n\nI'm not going to contact you or Denise for quite a while. First, I think that you should have time to set up your own family, without me involved. Secondly I don't want Denise trying to find me, or join me, out of some misguided sense of loyalty.\n\nFurthermore I want you to know Jake. That I want you to have that freedom to build your own family. Without the fear of me coming back to take Denise away from you. If you're going to become that father to her, that's as it should be. That's what's best for her.\n\nWhile I'm writing this letter, I don't know where I'll be going. I haven't decided yet. I have a boy friend that wants me to move with him. I've already told him that I wouldn't.\n\nHe told me that he loves me and wants me to make a life with him. Just without my kids. How can a man do that, force a woman to abandon her children to be with him? Could he really love her and demand that of her? I don't know where I'm going, but I know that I won't be staying here in town. Your free to make that family if you want to, please do.\n\nI might go with my boy friend for now, just because I don't have anywhere else to go. But with all my heart, I want you to know I didn't abandon Denise to go run away with him. I don't think a relationship with him is going to work anyway. But Denise going to you is the best thing for her. Where I go has nothing to do with what's best for her.\n\nI know that the way I'm doing this, leaving while Denise is with you. Is probably the worst way for you or her. Not asking or talking to you, but it's the only way I could. I might be a cast iron bitch, but I couldn't have looked my baby girl in the eyes and left her.\n\nI know myself well enough to know that I'm too weak to do that. I could never have let her go if I had to watch it happening. I would have kept her with me, and drug her down whatever hole I'm going to. Even though I know it wouldn't have been the best for her, I couldn't have let go.\n\nIf I'm not looking at her, then I have enough love and courage to let her go. Knowing that she goes to a better place, and that's you Jake.\n\nSome years down the road try to explain that to her Jake, why I couldn't watch her leave.\n\nBecome a father Jake. Love my beautiful baby girl with all your heart.\n\nCarol.\n\nWow...just wow. I guess that explains a lot more. I still don't know that I'd agree with her reasoning. I'm a lot like Cat's thoughts, that because of the kids. She had to ask for help, not just abandon them. I can see that tendency in myself, that independence. Never take your troubles to someone else. But I'd like to think that with two minor children involved. I could swallow my pride enough to see the necessity of asking for help, at least for them.\n\nThat's part of being a parent. Putting the child ahead of yourself. Being able to recognize and ask for the things that they can't see or ask for themselves. But also in being a parent, I can't imagine having the willpower to give up your own flesh and blood, even for their own good.\n\nThe only way I could see myself doing that. Would be with my finger nails scoring tracks down the hull of the lifeboat. Going under for the third and final time. Pushing my child into the waiting arms in the life boat with my final breath. I'd like to think that I wouldn't wait that long, but I know that I would fight that hard. Thinking in that vein, I really don't think much of what Carol has done.\n\nPutting things together from both letters. I get a better picture of what's going on in her mind. She has an immediate short term problem. The rent being due and money being low. A somewhat midterm problem of a bad job and no place to move too. Then a long term problem in Denise's future and her own perceived failures in her ability to provide for that.\n\nAll she's done in abandoning Denise, is to defer the first two. Sometime, somewhere she'll have to come up with rent and a place to live, a job. Unless she just gives up totally and ends up homeless, and I don't think that she'll allow herself to do that. Then she's just shoved the long term problem on to me. Maybe she's right, maybe I can provide that long term solution for Denise better than she can. It's just the way that she done it that bites my ass.\n\nOh, I'll do it. Just not for her, but I think that she already knows that. Also I don't think she's asking this of me for herself. Only for Denise, and that's why I'll do this. Only for Denise. But before I start making promises to myself. I need to talk to Cat. I think that I know what she'll want to do, but I need to ask. Then I'll need to find out what we can do legality. But those are things for tomorrow, and I'll need to get some sleep if I can.\n\nI'm up before everyone else in the morning. While I'm starting breakfast, I'm also on the phone to Denise' school. It takes a bit to convince them of my role in the situation. I finally faxed part of Carol's letter to them. But I did get them to allow her some family leave.",
        "When they came down for breakfast, it wasn't the same as yesterdays' for sure. They both showed signs of having cried during the night. Cat had to get ready for work. So I was looking forward to talking a lot with Denise during the day.\n\nI followed Cat to the door as she left for work. I told Cat that she and I would talk after work. But I needed to know a direction to start working toward today. To start gathering information about what we 'could' do.\n\n\"Make this her home if she wants to, Jake. That's what I want. That's what would be best for her too.\"\n\nDenise hadn't even said a word all through breakfast, and was just picking at her food. I waited until she quit doing even that. Then picked her up and put her in my lap, and wheeled to the front room. I pulled her into to my chest and just held her for a while.\n\n\"Sweetie, I'm really sorry for all your having to go through. You shouldn't have to go through something like this. I'm so very, very sorry, and my heart hurts for you.\"\n\n\"I called your school this morning and told them that you wouldn't be coming in for a while due to a family emergency. It took me a little bit of talking to get them to believe me. I had to fax them part of your mother's letter, the one to me. Where she told what she wanted for your future care.\"\n\n\"That brings me to the main point we need to decide today. Where do you want to live? How do you want the rest of your life to go? The little bit Cat and I have talked, we'd like you to live here with us. To consider this to be your home.\"\n\n\"I know that your only fifteen years old, but it's still your life and you need to have some say in it too. Also from your Mom's letter to me, she makes it sound like her and John are your only family. So can you remember hearing of any other family members, and if you can. Would they be someone you'd want to live with?\"\n\n\"Just you Jake. I don't have anyone but you.\"\n\nThen the tears started to fall, and the sobs shook her shoulders. I clasped her head tight to my shoulder and let them fall. They did, for about a half an hour they fell. Her head pulled off my shoulder and she looked up into my eyes.\n\n\"Do you love me Jake? Will you be the only one to love me Jake?\"\n\n\"Yes sweetie, I love you and I'll take care of you. I'll do everything in my power to take care of you. I need to find out what the court system will let us do. But I'll do everything that I can possibly do to make this your home. If that's what you want, and for as long as you want.\"\n\n\"But sweetie, you have a lot of people who love you besides me. I'm sure that Cat will come to love you, maybe she already does. I bet John loves you, and I bet his Dad does too. I'm sure that you have some special friends at school too.\"\n\n\"Your Momma loves you too. Just because she had to leave you, doesn't mean that she doesn't love you. Mommas always love their baby girls. I'll tell you a secret. Even if your Mother lives to be a hundred years old, and you live to be eighty. You'll still be her baby girl, that will never change and you can never grow out of it either. Can you remember what that letter Cat read to you last night said?\"\n\n\"Kind of?\"\n\nSo I read it to her again, and again the tears started to fall. Again I held her while they did, and I silently cried a few with her, and for her. Then I read her the part of Carol's letter to me that I had to fax to the school. Then told her what I'd told the school of the reason for her absence. Then I read some other parts of Carol's letter to me, not all of it but some. Then some more tears fell.\n\nLater we talked about her school. About how long she wanted to stay home, about how long she could. What to do about her school work. I told her that I thought she should finish out this school year in the school that she was in. That I'd take her to and from school in the van. It was just too close to summer break not to have her stay where she was.\n\nCat called a couple of times and I updated her on what we were talking about. She'd put in her two cents worth. All on the speaker phone so Denise could talk too. I never said anything, but I wanted to do everything out in the open with Denise. I never wanted her to think that we'd made decisions about her, without her knowledge.\n\nShe's a teenager, somewhere, sometime she's going to want to rebel against any form of 'parental control'. It's only natural and human, it 'will' happen. If we have her buy in, and her participation in setting up those rules and guidelines. Any conflict about 'parental rights' should be mitigated, at least somewhat. The time to do that is right now at the start of everything. The way to do it is right up front and fully open.\n\nDenise and I made soup and sans for lunch. When we finished, Denise said she was tired and went up to lay down. I called Julie and asked her what the name of a good lawyer in family law was.\n\n\"Why do you want a family law lawyer Jake. You and Cat aren't having troubles are you?\"\n\n\"No Tible, we need it for Denise.\"\n\n\"God Jake, I haven't been called that for quite a while. Why does Denise need a lawyer?\"\n\n\"Well the three of us do. When Cat took Denise home last night. It was to an empty apartment.\"\n\n\"WHAT...what do you mean Jake?\"\n\n\"When Cat got to the apartment all that was in it were a couple of boxes of Denise's clothes, and two notes. Nothing else, no mother, no brother, no furniture just two notes. Everything else was gone to parts unknown.\"\n\n\"Oh my God...is she OK?\"\n\n\"Pretty much a basket case for last night and most of today. Cat slept with her last night, felt that she didn't want her to be alone. She's laying down right now, that's why I called. I know that Tible knows people, who know people, who know people. So she'd know of the best damn family lawyer in town.\"\n\n\"By your wanting a lawyer, I guess that means you're going to try to keep her. What about her mother? And why did she do this? I mean, come on Jake, just to dump off her kid. That's a bunch of bullshit!\"\n\n\"Like I said, mother gone to parts unknown. She left two notes, one addressed to Denise, the other to me. From the way the notes read, she feels that she's out of options and can't support them anymore. I guess that they were going to be evicted in two weeks. Because the landlord raised the rent and she had no way to pay it. I personally know that landlord's a real dick!\"\n\n\"Then in a little while her boss was going to cut her hours. So that would leave her with even less money. So in two weeks she has to find an apartment that she can't afford, only to have her wages cut further. I guess she's been looking, but she can't find either an apartment, that's not in a war zone, or a better job. Then her ex-husband comes back and wants his son to live with him. So that starts the family breakup. By the way the ex-husband's a biker who just got out of prison.\"\n\n\"I can see why she's so depressed, but still you don't abandon your kids.\"\n\n\"Oh it's even worse. Her life sounds like a bad Jerry Springer show. She dropped out of high school. Walked into a teenage pregnancy, tried to move back in with her folks, who refused. Doesn't even know who Denise's father is. A short time later her Dad beat her Mom to death in a drunken rage. Only to die in prison years later.\"\n\n\"She ends up marrying a guy from a motorcycle gang. Got pregnant again, only to have him get arrested for a liquor store robbery and put in prison. So she has to divorce him. After that she's just trying to keep body and soul together and keep her kids fed. Until she hits this latest bump in the road of her life.\"\n\n\"Sounds like an awful rough life Jake. Makes you glad for what we had as kids, doesn't it.\"\n\n\"Yes it sure does. But I have to give her a little credit. She makes no excuses for herself, doesn't blame the world for not being fair to her. In both letters she admits that her life choices have all been bad ones. She freely admits that it's all her own fault. Even though I hate the way she just abandoned Denise. I have to give some due to part of her reasoning.\"\n\n\"How so Jake. As a woman I can't see of any way I'd abandon any children I might have.\"\n\n\"From her letters she really believed that she and Denise were going to end up homeless. She said that she could survive out on the street, but that Denise never could. I have to agree with that, Denise is just too much of a kind hearted person. She'd never survive in that environment.\"\n\n\"The other part of her reasoning comes from her own life. She said her life is only going downhill and she didn't want to take Denise with her. Maybe not...we both know that she had other options. Ways to get herself a little help and get her back on her feet again. But her point is, that even if she got the help to get on her feet again. It wouldn't be enough to get Denise the opportunity's for a 'much' better life. I kind of agree with that reasoning. Or at least I can see it.\"\n\n\"Carol made a comment in her letter to me that struck a chord in me. She said that giving her daughter away to me wasn't just to put food in her mouth and a roof over her head. She wanted me to teach Denise how to become a better person. A better person than her own mother could, and I agree with that.\"\n\n\"From the life path of both Carol and her family. How much chance did Denise have for a better life? I know that it's possible for the child of a single parent to succeed in life. Nothing's impossible, but realistically, how much chance did she have?\"\n\n\"I guess I can see your point Jake. She really didn't have much of a chance for any significant change in her life.\"\n\n\"Julie, Carol would have had to turn her own life completely around. Enough to be able to teach her daughter the discipline and drive necessary to succeed. To give her the tools and the support system, the positive examples to make her 'want' to succeed. Then push her through the rest of her school years with a well above average grade point. She'd have to do all that...while providing for them both, and trying to save up enough money to get Denise into college...all in the next three years. Think that Carol's got that in her?\"\n\n\"No, I don't think that she ever did either. I don't know of a good lawyer for family law. But with one phone call, I'll know the name of the very best one in the state. I'll call you right back.\"\n\nRing.\n\n\"It's kind of funny Jake. Jakerson, Colleen Jakerson is her name. She has an office here in town, call her and you'll have an appointment tomorrow.\"\n\n\"See, there's my Tible that I know and love. 'ouse knows' peoples, who knows' peoples, but if you start telling me you know people with names like Guido Renzoni, I'll start to worry.\"\n\nWhen Cat and I sat down to talk I think that we both knew the direction that we wanted to go. Even before we started talking. We were in perfect agreement. Denise was already home, and here she'll stay. The rest that we talked about was just details. Then she slept in Denise's room again tonight.\n\nThe appointment with the lawyer, Colleen Jakerson, went well. She felt that it might take a while, time wise. To get a final determination, but she said that realistically as over loaded as the child care system is. They'd have to have a extremely good reason to turn down a situation already in place. Plus with Carol's letter of intent, she really didn't think that there'd be any problem. For assurances though, she'd start filing a temporary injunction that would allow Denise to stay with us until the final determination is made.\n\nTwo days later we got the Child Care Service's inspector that she told us to expect. Amanda, a slightly older African American woman, who despite of the horror stories about Child Care Services was a very friendly person. After showing her around the house and explaining what we both did. Plus our plans for Denise's care. She asked Denise to show her to her bedroom. Cat went to follow until I held her back.\n\n\"She wants to talk to Denise alone.\"\n\nEverything must have went satisfactorily. Because after they came down, the only thing that she wanted to know. Was if she could move in with us too, she loved our house.\n\nNext morning Denise and I took the van on its first of many trips to school. Then it made the inverse trip in the afternoon. After her days of absence she had quite a pile of homework to catch up on. I wanted her to know how much that I valued her school work, without having to bitch at her. So we both pitched in and I used that bonding time to show her how very important that I felt it to be. It turned out to be the first of many afternoons we spend doing the same thing.\n\nAs the school year was ending we got with Colleen and Child Care Services to get Denise's next year of school transferred to the high school closest to our home. Colleen was pleasantly surprised to get the final determination at midsummer. Denise was now legally our ward.\n\nDenise was Cat's maid of honor at our remarriage. With Julie, Kevin and Mary (with their new baby) as witnesses.\n\nIt wasn't very long after that I noticed what I thought might become a problem. Denise was becoming more than a little angry at her Mother. It first manifested one morning when she announced that she didn't want to be called Denise anymore. She wanted to be called Dani, for Danielle, which was in fact her full name.\n\nAfter a quick look and silent communication between Cat and I. We didn't make a big deal about it, and it really wasn't a big deal. If she wanted us to use a different name, we would be happy too. But we both knew that it was just an indicator of a bigger problem.\n\nA lot of gentle talking and some empathic reassurances that we didn't think that she was crazy. We pointed out that being angry wasn't hurting her Mother. It just wasn't very healthy for her, Dani. We got her in with a counselor. It only took about four months and then the counselor didn't feel that she would need any more sessions.\n\nOne of the nice possibilities in a timber frame construction is the ease in which interior walls can be moved. I had the wall and doors removed from a super sized walk-in closet and added it to the studio area. I added some built in desks and file cabinets. Took the computer that I had been using and set it up for Cat and Dani. There, I remembered to use the right name, Dani. It takes some getting used to.\n\nThen I picked up a top flight work station, software and plotter. Then hung out my shingle so to speak. As a freelance engineering design company. I didn't really hang out my shingle, as I didn't do any advertising. I just networked some of my old contacts. That later proved to have been a very good move, as the business grew faster then I really wanted it too.\n\nCat and I weren't hurting for money. We'd both come from well off families and started married life each with our own money. Throughout our married life we'd both had very good careers, and we're both basically frugal people. We weren't hurting for money. The reason I started this freelance company was for Dani. Like I'd told Julie, we needed to have her ready for college in three years.\n\nPlus I didn't want to take money from Cat or to take away from our relationship. So I felt that this was 'extra' that I could put solely to Dani's education, without taking from anything else. Like I said it grew faster than I thought it would.\n\nSo my day would start with taking Dani to school. Back home to work on any engineering projects that I might have. Start work in the studio. Go get Dani from school, from then on we'd both go do her homework. When Cat got home it was cooking in the kitchen for all three of us. Then either I went back into the studio or it was family time, movies, games or such things.\n\nHey surprise, surprise Dani took art in school. But the pleasant surprise was her interest in math and science. She's like me though in art, we'll never be Michelangelo. But we get by. While my talents tend to drawing and painting. Dani's are a little less defined, her strong points are in design, composition, form and spacial sense.\n\nPainting wise this last year has been rewarding. I have thirty eight paintings up in various places around town and in two gallery's. Dani's had a part in all of them, Cat too. We cook together, we do housework together, we even shop together. For food only not clothing. Fashion shopping is a strictly female bonding experience. Strangely in spite of their ages, the three of them have become very tight, Cat, Julie, and Dani.\n\nSo we even have painting planning sessions. Like I said Dani's strong points are in design, amazingly Cat's color sense is almost better than either of ours. I paint and come up with the basic theme. But the basic theme is, we have fun together.\n\nA high school art project of Dani's led to my biggest sized painting to date. It's six foot high by twelve foot wide. Dani's school assignment was stated simply as a 'movable sculpture'. I said to keep it simple, just do a hanging mobile. Kind of like some baby's crib toys. I thought that it would be good to keep to things aerial, kites, balloons, or airplanes. Dani was the one who tripped on feathers.\n\nSo that's what we did, both of us, my painting and her mobile. We did her mobile out of wire. An offset central column that rotated on ten long limbs at different random balance points. Hanging all from a single point. Wire feathers floating at the long ends of the limbs. Balls or stars, or moons at the short ends to make the balance points work. We used silver colored very stiff wire, but for color I showed her how to use a small propane torch to temper to different colors. Solder and acid wash to put it altogether. Then used different dyes and glazing's for other colors. All from the top down as a descending, shrinking spiral. She got an A on it.\n\nAs we were doing her mobile we came up with the idea for the painting, that same descending shrinking spiral. Like the top down view of a tornado funnel. In a way I think Cat's contribution really made the painting. Red and white, stark white background with brilliant red cardinal flight feathers. I let Dani do the design on all the feather placement. It was unconventional, but it worked.\n\nAn informal rule in painting or drawing deals with the eye's path through the painting. Dani's design of the primary path of the spiral led down and out of the painting. Breaking all the rules.\n\nThe top first feather took up fully a quarter of the canvas. Then that twisting tornado of feathers shrank to little more than a dot. Only to have a smaller inner spiral of softer feathers. Start at the bottom and rise to lead the eyes' path back up to the vivid reds of the uppers. Then back down again.\n\nWe hung it in Julie's store, which started out as kind of a problem. What women's fashion store has 72sq. feet of open wall space? Until I turned them into a quad with the addition of three smaller paintings. The three other canvas' were six feet long by four feet high. Just an horizontal solitary flight feather, one in each primary color. Red, yellow, and blue, just in brilliant iridescent colors on that stark white background. They were hung with the three smaller stacked on edge. Then fasten back to back with the larger one. Hung by a single center point cable, suspended from a high first floor ceiling. Turning and moving slowly with the air flow.\n\nJulie was happy for me but also sad for her store. Because they didn't hang on display for every long. Even at twenty five thousand dollars they went quick. That too went into Dani's college fund.\n\nI don't sleep for very long each night. I haven't since my cancer and this wheel chair. So in the very early hours. I've started three paintings. The girls won't see them until they're finished. I keep them covered with sheets and rags, behind spare canvas' that I haven't started yet. Working only in the early hours and having to hide them, they're going to take a while to finish. I'm working on them with the same techniques as I used on Dennis.",
        "Then Cat woke up real early one morning and surprised me. Fortunately it was only the painting of Dani that she seen.\n\nWe'd talked about it when we started designing the house. So spring of Dani's sophomore year we put in the swimming pool. Our neighborhood was pretty spread out and with some expensive homes in it. It wasn't a combination that lent itself to many kids. But Dani found a few, and a couple of them turned into very special friends.\n\nDani stayed with Julie at different times, just to give Cat and I some special us time. Cat and I kept a standing date night going all throughout Dani's high school years. Dani and I had lunch maybe once a week, during her school lunch period. Cat and I even had two separate vacations in those three years. So hopefully I didn't short either of my girls quality time.\n\nAfter the pool went in, the backyard turned into quite a mecca for young teenage girls. Of course that always attracts young teenage boys. So Dani's social aspect was on the rise. Again it was expressed of just how special Dani really was. In her selection of friends and all their time at our house. We never had any trouble. I really had little problem approving of any of them. But if I even 'looked' like I did, they weren't asked over again. Then they just seemed to disappear from the picture of Dani's life.\n\nThe mecca of the pool led to one of my better acclaimed painting. I never understood that, it was a quick total break from my usual style. Mostly my paintings depended on my technique in drawing and painting of an almost photo realism. This painting was quick bold brush strokes, bright vivid colors. You could recognized only a few of the kids in the painting. Most were just shape and form, color. Dani said it was special because you could feel the sun and the heat, the care free summer day. The motion and frenzy of the party and the pool, and their youth. Must be true, that's what other people have said about it too.\n\nIn late July before her junior year, we got her that first car. It wasn't much, just a used Honda. A point A to point B type of car, just like hundreds of others that drive down the road every day in Any town America.\n\nBoth of us and Dani got a rude case of culture shock. To Dani, a car...a car that was Dani's...just. Did. Not. Compute. The light years between those two thoughts made it impossible to fathom. Cars were other people's, not Dani's.\n\nShe wasn't Denise anymore. But Dani still had that hidden inner core of the girl and her paper sack of clothes in her. Her own car... just was not in her universe. It was so far out, that she thought we were making fun of her. She actually got mad at us. I mean, stomp her foot, run off toward her room crying, mad at us. But she didn't make it there to her room.\n\nShe turned, headed back toward us, tears and joy on her face. Only to stop, her face fall to a stunned blank. Turn and head for her room again. Walking not running, only to turn again. Stand, staring at us, with a kaleidoscope of emotions flickering across her face.\n\nI think that in that afternoon, in that small slice of time. Denise died and Dani became complete, and she never looked back again.\n\nHer grades in school took off. She never got valedictorian or anything like that. Her early year made that impossible. But her junior and senior years were high honor roll at 4.0 GPA. Her sophomore year came close at 3.68.\n\nThe crown of her high school years was the way that everyone got behind her. When we started deciding and choosing her career and college choices. Again it was shown just how very special Dani was.\n\nHer high school guidance counselor, art teacher, math teacher all wrote special letters of recommendation for her, even the principal. The lawyer Colleen that had stayed and become friends with us and Dani. Plus the judge that she'd introduced us too, wrote letters. Amanda the child care social worker, that still wanted to come live with us, wrote a letter, Julie did too.\n\nWe didn't ask them to, they approached us. All wanting to add to her college application files. Her art teacher and I are the ones who first came up with the career path for her, Architecture. Her math teacher and guidance counselor both highly agreed with that choice. Dani did too.\n\nHer guidance counselor came up with her first choice in universities. Cornell University in Ithaca, New York. It was ranked one of the best in the nation in architecture, art, and planning. We applied for several colleges, of course, but this was her first choice. She got it too, and with a full ride scholarship.\n\nAgain Dani proved just how very special she is. She's learned from those examples of women that I wanted her too. A lot from Julie, she can be so very much like Julie at times. Tall, proud, dynamic, but in more than just appearance. Also organized, intelligent, a salesman, and a people person. She can become someone's confidant in a matter of minutes.\n\nShe proved that in our first visit to Cornell University. I don't know what they call it, a student interview or university's presentation, or both. But in our talks with the scholarship representative. Dani somehow found out that she'd just beaten out a young man for her full ride scholarship, by a very small margin. He only got a partial and might not be able to attend Cornell, he's listed as a hardship case.\n\nIt only took a silence glance between Dani and I, and she knew that she had my approval. She talk, wheedled, and convinced that scholarship representative to reverse their standings. He got the full ride and she the partial. She knew that with the money that I'd put away she didn't need the full ride to get into college. That he did, and she remembered enough of Denise to know just where he was at. She is just that special.\n\nDani.\n\nIt was in the early summer just after I graduated high school. I could hear Cat banging around in the kitchen. I had a cup of coffee in my hands and I was watching Jake in his studio. Just leaning against the door frame, I was behind Jake and I knew that he didn't know that I was there. So I did one of my favorite things, just watch him.\n\nHe didn't need me like he did in that old apartment. Changing his canvas' in and out of his easel. So he could reach the top or the bottom. He'd put in a platform lift on the floor that he could raise and lower. That he could roll his chair up on and lock it down. With a electric winch and side shift, on the easel, and the floor lift he could reach anywhere on any size canvas he wanted to, just by moving levers.\n\nHe didn't need me, and that was good. Because I'd be leaving for college in the fall, and that was good too. So I watch him, sad and pensive. Knowing that I'll soon be leaving the most beautiful part of my life behind. Knowing too, that I had to leave, I just had too.\n\nHe's painting on a commissioned portrait right now. Moving into a new direction for his art. He's becoming well known in the art world, at least starting too. He also is becoming known as a prolific artist. In the last three plus years, he's done over two hundred major paintings. Countless drawings, studies, pre-work ups and all the necessary leading work. Some of the major works are getting international recognition. Plus he's still doing all his engineering work.\n\nOne art critic called him the soul painter. The critic wrote of the Amazon Indians who wouldn't let the white men take their picture with a camera. Because they thought it captured part of their soul. He said that's what Jake did in his painting, captured part of the subjects soul, and it looked out through the eyes of Jake's paintings. He was right, it started with Dennis, and just got better as he went along.\n\nHow could it not get better, it's Jake. He's just this amazing man, nobody's like Jake. He never got soft and pudgy like most do in a wheel chair. He looks like he could just stand up and power through anything. Except for his legs. He's got this whole raft of exercises he does every day. He looks like he should be on a weight bench power lifting.\n\nStrong back, powerful shoulders, arms made of steel cables with a six pack too. Dark hair almost black with a soft wave to it. I love the way it lays on his neck, and little bits that flow over his ears, small locks that fall on his strong forehead. It's getting a few silver hairs at the temples, and that just adds to its beauty.\n\nHe's seen me, just turned and smiled at me. With those flashing sky blue eyes. Then went back to painting.\n\nThat's part of what I love the best about him. Those sky blue eyes that can look right into your soul, and show his soul staring right back at yours. That's why I have to be careful, why I've had to learn to wear a mask in my eyes. That's why I have to leave, I have too.\n\nBecause I love him. How can I not?\n\nJake is my everything. Jake is my friend. Jake is my protector. Jake is my provider. Jake is my savior. Jake is my safe haven. Jake is my teacher, my guide, and my conscience. Jake is my...friend.\n\nJake is...not my lover.\n\nAnd he can never be...\n\nBecause even as he is my everything. I love her too. Cat...I would never hurt her. She has been my mother, my sister, and my friend. She has been the star that I want to follow. She's slept in my bed when I've hurt in my soul. Held me when I've cried, hugged me when I'm sad. Laughed at my joys, cried when I did at my sorrows, and then she let me into her life. All of it...into every part of it, and because she is...\n\nMy sister in love.\n\nShe loves him too. She is his wife. She was his wife before he got cancer, was his wife during, his wife after. She was his wife when he divorced her. She was his wife after he did too. She was his wife enough to let him go when he needed to. She was his wife while he was gone from her. She was his wife while she build the house that he wanted, just the way he designed it, because it was his.\n\nShe was his wife while she waited for him, when she cried at night for him to come back to her. She was his wife while she waited...for him. Because he is the breath in her lungs and the blood in her veins.\n\nFor all those reasons I would never hurt either of them. So I have to leave.\n\nI have too, because it's tearing me apart! Loving someone I can never have. Loving someone in a way that I shouldn't. Living with that mask in my eyes, hiding how I feel. Twenty four hours a day, seven days a week, three hundred sixty five days a year and never being able to let go!\n\nBecause my worst nightmare is the knife in her heart if she ever found out how I feel. Then the loss of the two people that I love most in this world, when she throws me out of their lives. So I watch him at times when no one can see my eyes...\n\n\"He's quite a man isn't he?\"\n\nCat's voice slides into my consciousness. My heart hammers into my chest, I didn't hear her coming up to me! I've spun to look at her, into her eyes. I realize that I don't have the mask in mine!\n\nHer head tilts to look at me, puzzled. As I try to hurriedly school my face and mask my eyes. Hoping that my nightmare won't come true. That she can't read from my face what I've been thinking, feeling. In vain...\n\n\"Oh...god, you're in love with him...aren't you?\"\n\nAs the panic slams into me, I'm terrified. It's coming true, she going to kick me out!!\n\nInstead she wraps me into a tight hug.\n\n\"Oh sweetie, how can you not be. I'm not mad that you. You're a young girl and Jake is your whole world. It's almost a fact of nature that you'd have to be in love with him. Besides he's Jake isn't he, beautiful loving Jake. The best of all possible men is our Jake, isn't he. How can we not help but be in love with him. Come, let's go into the front room and I'll tell you about Robert Shelton.\"\n\n??? Robert Shelton whose that?\n\nShe grabs my hand and starts physically pulling me toward the front room. Part way there she changes her mind.\n\n\"No, let's go visit your wise Aunt Julie instead.\"\n\n\"Bye Jake, we'll be back. We're off to lunch with Julie.\"\n\nWe make a bend in our path toward the front room. Still pulling me like a puppy on a leash, and with another heading change toward the front door. A quick grab for her keys and cell phone, into the car and off we go.\n\nFirst she calls Julie and arranges to meet her at Jeremy's on the Mall. It's a deli right close to Julie's store. She convinces Julie that it's so very important and she just 'had' to meet us there, right now.\n\nThen she starts chatting with me. Chatting about when she first met Jake, how she first knew that she loved him. She's happy, so happy to be sharing these memories with me. I'm so confused and off balance, it's like she's happy that I'm in love with her husband!\n\nJulie looks puzzled, already waiting for us at a table.\n\n\"Julie, remember me telling you about Robert Shelton?\"\n\nJulie throws her head back in a quick sharp laugh. Then in a knowing smile, she's nodding her head. Cat laughs too, then looks back at me.\n\n\"Dani your going to have to be very patient and understanding with us and what we're going to talk about with you. Also you have to promise to listen to us and to realize that we're NOT making fun or devaluing you feelings. When a woman feels she's 'in love with a man', she is, and it's real. Until SHE decides it's not or comes to understand that it's something different.\"\n\nNow the puzzlement on Julie's face is even more pronounced. Almost as extreme as the tilt of her head. As Cat continues...\n\n\"But only you can know that, okay. Understand too that I'm NOT mad at you. Actually I been kind of expecting it for a while now. But you fooled me, and I didn't see it coming. You must have been covering up, and hiding your feelings so very well. Remember Dani we love you.\"\n\nA light starts dawning in Julie's eyes. But when Cat leans over and whispers in her ear, nodding the smile really blossoms on Julie's face.\n\n\"Dani, when I was almost the exact age that you are. I was 'in love' with an older man, a neighbor of my folks. He was the most beautiful man I'd ever seen. His name was Robert Shelton. But he was married, with two children. She never loved him, and neither did his children. They disrespected him, and she nagged him continually.\"\n\n\"They made his life miserable, and I cried at night for him. My dreams were all of confessing to him of my undying love, swooning into his arms. Him kissing my face and carrying me off to... I don't know where, my dreams never went that far. After his many kisses on my face...my dreams never went any farther in that direction either. But I dreamed, oh how I dreamed.\"\n\n\"But I never said anything to him, he was married and you don't do things like that. Then in the fall I went to college, and I cried because I missed him and knew that I would never see him again. After a while I didn't cry so much, but I still hurt. I didn't see him when I came back for Christmas. When I went back to school I didn't cry any more, and hurt a little less. I saw him when I came back for spring break.\"\n\n\"He had a bald spot on the back of his head, and his hair was thinning. He wasn't as tall as I remembered, his shoulders weren't as broad. He had a pudgy muffin top over his belt that I'd never seen before. His wife adored him and his children ran to meet him when he came home from work.\"\n\n\"I realized that I had never been 'in love' with Robert Shelton. I'd been 'in love' with being 'in love' and my 'in love' had somehow fastened onto Robert Shelton and made of that the dream that I wanted it to be.\"\n\n\"But when I'd left that first fall, my heart hurt just as much as it would have as if he'd been my everlasting love. Because I'd been 'in love' that fall and it was just as real as it could be. That fall it WAS as real as it could be.\"\n\n\"So that's my 'in love' story. So I'm going to go to the little girls room and then disappear for a little while, and let your wise Aunt Julie tell you hers. Because every woman has one, just in her secret heart.\"\n\nCat got up and left. Julie leaned across the table, reached out and held both of my hands in hers. Then said something that shocked me to my core.\n\n\"Welcome to the I'm in love with Jake club.\" Then smiled at me.\n\n\"Yeah honey, there's even a club for all the many hundreds or so members of us.\"\n\nThen she's laughing.\n\n\"Oh, you should see your face right now sweetie. No, there's no I'm in love with Jake club. At least not a formal one, but there is a bunch of members. Of which I'm one.\"\n\n\"No Dani, no one's going to come sneaking around to steal Jake away from Cat. For two very good reasons. One is we don't quite love him in that way. Two, we never could steal him away from Cat, no one could. I'm going to be a little crude here to get my point across.\"\n\n\"Dani, I could strip off naked, sneak up to Jake and knock him down. Spin around and land on my back so he fell on top of my naked body... What do you think Jake would do? He'd get up, give me a hand up. Dust off my naked flesh, apologize for falling on me, and ask if I'm hurt.\"\n\n\"He wouldn't think of doing anything else, because I'm not Cat. I know of this five foot tall, fire redhead, with hair down to her ass. Who could do the same thing and get the same result, because she's not Cat either. She looks a lot like Cat, but she's not Cat.\"\n\n\"Yet we've both seen that kind of half smile she can give him. With just a little sparkle in her eyes and he's ready to go, because she's Cat. It only works for her. For that reason no one could steal Jake from Cat. Because she has his heart, and with Jake his heart is his word, his deed, and his bond, forever.\"\n\n\"Dani, you lived next door to him for four years, while he was suppose to be single. Did you ever see a woman around there? I know that you didn't. I've been around him for a lot longer than you have and I've never seen Jake look at another woman. In. That. Way.\"\n\n\"Sure he's a man he'll look at tits and ass, he'll admire a beautiful woman. But only for her beauty. Do you know just how very attractive that is to most women? To have a really hot man be so in love with her that he doesn't see other women as potential fuck buddies, just her?\"\n\n\"That's one of the reasons that I said that there's an 'in love with Jake club'.\"\n\n\"There's a old Greek myth of an ancient cynic philosopher, Diogenes of Sinope. Who in around 375 b.c.e. wandered the city of Athens with a lantern, 'looking for an honest man'. Well he would have found one in our Jake.\"\n\n\"Just look at yourself Dani. How long were you and Jake working on that painting of Dennis? Three months, maybe four, because that's when you first started becoming friends. Just that short period of time being friends. Yet when your world fell apart and you needed him.\"\n\n\"He was there, and he gave you what you needed. He gave to you just as if you were his first born daughter. Because Dani that's what you are to him, his first born daughter. I know that you don't really see that in your heart of hearts yet. But you will, and that's when you'll start to be really happy.\n\n\"These aren't the reasons that most women are in the 'in love with Jake club'.\"\n\n\"Here I'll be crude again to get my point understood. If I didn't know Cat, or had never met Jake before. If I just met him as a guy in a bar. He walked up to me and said, 'want to fuck?'. I'd say 'sure' and follow him anywhere, and I think that most women would too.\"\n\n\"See Dani, Jake has what I call a very high degree of sexual charisma. He's hot, but looking at him you can't see why. He's not like those men on the covers of romance novels. Broad hairless chest, heavily muscled body, sharply chiseled features, model beauty with a woman swooning in their arms.\"\n\n\"Jake was an almost perfect height, right at six foot. Just the right weight for that height. Just broad shouldered enough for his body type. In short nothing special, from a football field away. But up close...he's panty wetting hot, you just don't know why he is.\"",
        "\"Part of the real beauty in that is he doesn't know it either. Jake would never just go up and ask some girl to fuck, he's not that kind of a man. He just doesn't know that he could, and most women would. He's not being modest, he just doesn't know anything about that part of himself.\"\n\n\"He's like that really beautiful woman who never believes she is, and when anyone tells her she is. She thinks that they're making fun of her. Even if she won the Miss America Pageant, she'd think that the judges all marked the wrong ballot, or the computers all counted votes for a different girl as votes for her.\"\n\nAs she's saying this, Cat comes back to our table.\n\n\"So now that Cat's back I owe you my 'in love' with an older man story. But mine is not as pretty and clean as Cat's. I guess because maybe I'm not as smart as Cat. Or I'm more aggressive or blunt. Like Cat's was, mine was a neighborhood married man.\"\n\n\"I think that there's a lot to be said about young girls and that scenario. The easy availability of being already in the neighborhood. The perceived safety of being an older married man. Makes it seem easier for us to be 'in love' from afar. But not seeing the farts and beer breath, early morning stagger in white briefs. Of being able to see them frequently from a safe distance. Out in the bright sunlight, so to speak.\"\n\n\"Like I said, mine wasn't as pretty. Because I went up to him and professed my undying teenage love. He went from a nice married man to a predator almost before the end of my first sentence. He'd just gotten the green light to get some 18 year old teenage pussy, and he was going to get it right then and there. With all the tact and romance of a bulldozer with a hard on.\"\n\n\"The only good thing in my story is that I got away, and I ran. I ran far away and fast, and I got called prick tease and cunt all the way. Remember that easy neighborhood availability, I got called that until I left for college.\"\n\n\"Our stories of being young and in love with older men don't have very good endings. So in all fairness I have to tell you of my friend Elizabeth's story. Beth did the same thing, fell 'in love' with an older man from the neighborhood. The only difference was that he wasn't married.\"\n\n\"She did like I did and told him of her love. He didn't believe her and discounted it, there was just short of twenty years difference in their ages. He felt that was too extreme a difference and all she had was a school girl crush. She didn't and she pursued him, and pursued him, and told everyone how she felt about him. She finally caught him, and now they have three children. She's still 'in love' with him, and when he dies it will be holding the hand of a wife whose still 'in love' with him.\"\n\n\"So how does all this fit in what we're talking to you about. Both the being 'in love' and belonging to the 'in love with Jake club'.\"\n\nThat drew a sharp bark of a laugh from Cat, then her hand flew to cover the giggle.\n\n\"Oh...Julie, can I belong to that club?\" still giggling, \"I didn't know that there was a club for that.\"\n\n\"You already do Cat, there's only three charter members. That's the point I'm trying to make to Dani. Those three charter members need to meet a special requirement.\"\n\n\"You Cat are the President, the CEO, the Prime Minister, and the Grand Pooba. Most of all your wife. You Dani are the Vice President, Second in Command. Most of all, beloved daughter. His Mother is Grand Dame, and Queen Mother. Most of all Mom.\"\n\n\"The special requirement for charter membership is Jake's love.\"\n\n\"Not you loving Jake, but his loving you. All the rest of us club members are out in the cold peeking in through the windows. Wishing we were inside too.\"\n\n\"You see Dani, part of being 'in love' is getting 'in love' in return. Either Cat or I did from Robert Shelton or my asshole, and we fell out of 'in love' fairly quickly. Plus we both realized very quickly that we weren't really 'in love'. Beth had love returned and never fell out of 'in love'.\"\n\n\"It's almost impossible to remain 'in love' without getting love in return. Unrequited love is fine for love sonnets and fairy tales, but it carries little meat in real life.\"\n\n\"Plus the love returned to someone 'in love' needs to be the same kind of love. We all know that there's several kinds of love. The platonic love one might feel for a special friend. The parental love one feels toward a parent or a child. Or the sexual love one feels toward a lover or a mate, a wife.\"\n\n\"If your Aunt Julie's two cents of advice is worth that to you. What you need to do is understand what type Jake's love toward you is. Then knowing that, what do you really love him like, which type of love. When you understand that, what are you going to do with that knowledge?\"\n\n\"You fooled us, we thought you were immune to Jake's charisma, because you were so young and basically have grown up around him. I think it's been more like the slow growth of sapling to tree, then immunity. Where you've grown up watching that sapling grow each and every day. Then suddenly it's a tree full grown.\"\n\n\"You've just been real good at hiding it. Cat and I've both seen you've been unhappy lately. Now I can see that maybe some of that might be guilt, and that's needless. You feel how you feel, and love where you will, and you're the only one who knows which it is.\"\n\n\"Cat may have an idea what things are, I know that I do too. But our votes are irrelevant, yours is the only one that counts. Cat, I think that she needs to see the painting that Jake's been hiding.\"\n\nThen they just sat and looked that each other. For maybe 10-15 seconds.\n\n\"OK...Julie. You might be right, that's what we'll do. Are you going to come with us?\"\n\n\"No, I've got to get back to work. But you were right, this was important. I'll call you later.\"\n\nThe ride in the car back was quiet, I think that we both had too much to think about. I know that I did, my nightmare had come true. Just not in a way that I'd ever imagined. She hugged me, she loves me. She found out my secret, and she still loves me, and she's not going to throw me out of their lives. I'm off balance, amazed and so confused...\n\nRight inside the door she's already yelling for Jake.\n\n\"JAKE...Jake where are you at...JAKE.\"\n\n\"You don't have to yell, I'm here in the studio.\"\n\nHe's lowering the lift to the floor when we get there.\n\n\"Jake...Julie and I think that Dani needs to see the painting that you've been hiding. Is it done?\"\n\nThen they do that thing that Julie and Cat did. Just look at each other, for maybe 30 seconds.\n\n\"OK Cat, if you really think so, I was kind of waiting for sometime special. But it's done and I guess now is as good a time as any. But I'll have to set it up and that might take a little while. You'll have to promise no peeking, either of you. Promise neither one of you will peek until I call for you. I forgot to eat, so go into the kitchen and make something for me. Stay there until I call you, promise?\"\n\n\"Yeah we promise...OK.\" Jake makes shooing motions. \"OK, OK, OK, we're going.\"\n\nI'm making Jake a sandwich and Cat was heating up some soup. Rattling around in the freezer:\n\n\"Dani, what should I take out for dinner?\"\n\n\"Weren't we going to use that leftover lasagna up, before it has a chance to go bad?\"\n\n\"Oh yeah, that's right. Now I remember, so I won't take anything out right now.\"\n\n\"Jake's been hiding a painting?\"\n\n\"Yeah, sometimes he can't stay sleeping all night long, well actually most nights he can't. So he gets up and paints. One night I woke up very early in the morning and caught him painting on this one. I'd never seen it before either, it was suppose to be a surprise. But I caught him.\"\n\n\"What kind of a surprise?\"\n\n\"You'll see in just a little bit. You'll love it too. It's a very special painting, I think it could be one of his best works yet. It's very special to Jake personally too, he's worked a long time on it. Almost a whole year of middle of the night and early mornings, then he hides it.\"\n\n\"Wow, that's a lot of time and work invested into one painting.\"\n\nBut Jake fooled us again, because after his call of 'ladies come and get it', it's not one painting it's three. He's pushed the commissioned one he was working on to the back of the studio. Brought out three presentation easels and stood them in a shallow arc. With three covered canvas' on them.\n\nThe center one's square about five foot a side. The right is tall and narrow like Dennis was, about two and a half feet by six feet. The left is a rectangle, about four feet wide by five feet tall. Seeing three of them there Cat bursts out into laughter.\n\n\"Jakie, Jakie, Jakie you've been a very bad boy. You've been hiding things on me, haven't you?\"\n\nOf course he just grins.\n\n\"OK ladies, get ready the show's about to start. Here at center stage is...\"\n\nAs he pulls the cover off the canvas in the middle. Cat and I both gasp, because it's us. The two of us cuddled together on the couch in our front room. Black and blue, that's the colors dominant in most of it. At first blush that's what strikes your eyes, black and blue. The entire outer perimeter is all black, jet night black. That fades into the center of Cat and I.\n\nTechnique wise it's a very hard painting to do. Yet it's very beautifully done. Because the blue is the glow of a television . You can see that in half an instant, the blue and black. But you can't see the TV. But you can also see the fire of Cat's hair and the gold of mine, also the green of our eyes. Just everything shaded in that black and blue.\n\nThen it starts creeping up on you, and you see all the other colors too. Just where they're suppose to be. Red of Cat's hair the green of our eyes the blue, white and green of the tattered old plaid blanket that's on our laps. The satin cream of the chemise that I was wearing. The dove gray tank that Cat sometimes wore. You can see that clear skin tone of Cat's and that slightly more tan of mine.\n\nYour eyes blink and it's back to black and blue. Then all the rest of the colors of the rainbow come crawling gradually out to greet you. Blink, black and blue then floating out into colors. You don't even have to blink, as I look from my face, in the painting, to Cat's everything flashed black and blue. Then all the colors of Cat's face flowed back into life and brilliance as my eye watches. Blink, black and blue then the slide into color. Blink, black and blue.\n\nHe's playing hide and seek with color. In solid paint and canvas. And I don't know how he's doing it. But it's just fuckin amazing. I agree with the awe in Cat's voice.\n\n\"I know that if I stared at this painting for a long time my eyes would start to hurt. Because it's impossible, but the colors just seem to flicker back and forth. If my eyes just moves the colors change and then come back...but that's impossible.\"\n\nBut the color is not the only beauty of this painting. Like Dennis the rest is here too. I can understand how those Amazonian Indians felt about their souls. Because it's kind of spooky looking at a little bit of mine right in front of me. You can feel the love and comfort that's right there too.\n\nMy Mother, sister, friend has wrapped me up in her love and safety. I'm cuddled into that comfort and warmth, returning that parental love. As I say, at first blush the image says...home.\n\nThe image is about quartered away to the right. As if you're standing alongside the TV, looking at us. Large enough that you can't see from about Cat's knees down. I'm tucked under Cat's arm, with my face resting on the front of her shoulder. Her face is tipped so that it's laying on top of my head.\n\nMy one arm is around her waist and the other must be behind her. Her one arm is over my shoulders with its hand playing in my hair, and the other is laying on top of the one arm of mine that's wrapped around her waist. That hand is holding my bicep.\n\nCat's mostly sitting upright, just slid down and slouched back into the couch. I'm half laying on my side, half sitting up, half laying onto Cat.\n\nThe painting peacefully whispers; companionship, love, safety, ease, warmth and the peace of...\n\nHome.\n\nJake is the soul painter, and that's there. Just like it was in Dennis...but there's something more in this one. It's emotive and subtle and I can't quite put my finger on it...\n\n\"OK ladies, ready for the next reveal. Boy is it a big reveal too!\"\n\nWith that warning he jerks the covering off the canvas at the right of center, the tall narrow one, and laughs and laughs.\n\n\"JAKE!\"\n\nCat follows her panicked exclamation, with her fingers to her mouth and a wide eyed stare. I just HAVE to join Jake in laughing, it's just too funny.\n\nCat is standing in front of a full size, full frontal nude figure of...herself.\n\nAs I can't stop laughing, then I spot it. The pose, the setting, the hands and arms, the half shell. It's a classic, and a classical painting.\n\n\"Oh Jake, that's just too funny. Cat as the birth of Venus, rising on the half shell from the sea. Cat the goddess of love at her mythical birth.\"\n\nIt is too, it's Sandro Botticelli's birth of Venus painted in about 1482-1485. It's partly famous as the first large scale painting on canvas. It hangs in the Uffizi Gallery in Florence, Italy. Jake's painting is highly recognizable as an imitation of Botticelli's famous pose.\n\nHe's just sectioned out the central figure and shell, and just done it in Jake's own way and style, with Cat as the goddess. Botticelli's painting is somewhat stylized in its execution and rendering. The figure and scene are just three steps back from realistic. In Jake's painting they're realistic, almost photo-realistic.\n\nOh god are they realistic. That's what is making Cat stare and blush. In Jake's painting the sea is rougher than in Botticelli's. You can see the swells and whitecaps in the steel gray and the aqua green slate of the water. The clouds and sky are realistic and show a cloudy gray, white, and blue sky of a stormy day. The shell is also smaller to fit it on the narrow canvas.\n\nThe figure and it's pose in both Jake's and Botticelli's works are virtually identical. The head and face with the same right facing, downward tilt. The right shoulder high, figure curved in an arc toward the left. Weight all balanced on the left foot, with the right knee slightly bent, toe of that foot just resting on the half shell she's standing in.\n\nThe hand and arm placement is virtually identical too. Right forearm bent up and covering the middle of the right breast in Botticelli's painting. The left breast in Botticelli's painting is completely bare. In Jake's painting the right hand extends a little farther to where the fingers lay over the nipple of her left breast. It's just that the fingers are lightly spread and showing a small hint of nipple that's got Cat blushing.\n\nJake's painted Cat's hair as longer in his painting than it is in real life. Because he's followed Botticelli's pose exactly. In that in both paintings, the left hand and a tail of her long hair covers the groin and sex of the figure. That long hair in Botticelli's Venus is an almost washed out, orange ginger color. Cat's of course is that brilliant fire flame. In all told the colors in Jake's painting are brighter and more vivid. Of course it's not 530 years old either.\n\nAfter that Jake's and Botticelli's painting start to radically differ. Botticelli's Venus has an demure, disinterested blank expression on her face, and her body's stance is a very casual disdain.\n\nCat is realistic...oh yeah she's realistic. She's naughty mischief, a coy sexy vixen. That in a heartbeat is going to drop those coy bashful hands. Strut up and take a big bite out of her lover. She's hot, horny and aggressive and not waiting for her love. She's in heat, and she's absolutely magnificent.\n\n\"OH...Jake, Jake, Jake. You're a naughty, naughty man. Our daughter should NEVER see me looking like that. You're a bad, bad boy. Why I've half a mind to take that painting right over to our bedroom and never let it see the light of day again.\"\n\n\"But it's so beautiful...I don't look like that. Nobody could look like that. Is that how you see me Jake?\"\n\n\"Yes my love, sometimes I do.\"\n\n\"Oh...God Jake, what have you done? I want to take it and hide it away forever, and in that same breath I want to show it off to the world. What have you done Jake...?\"\n\nHe has done it, the painting is absolutely totally magnificent. Yeah it's funny, wanton, naughty mischief. It's a joyful joking play off an old masterpiece. Yet at the same time it's intimate, sexy, full of heat and desire.\n\nThere's a feel in it like what people have talked about in relation to the centerfolds in some men's magazines. That airbrush quest for perfection. Cat's body in the painting has that too, that polished shiny glow of perfection. Jake's shown just how much he cherishes her beauty.\n\nHow much he desires her...his...wife. In that instant, those thoughts lead me to what I couldn't put my finger on in the first painting. Jake...he's in both of these paintings. No, there's not a picture of Jake hidden on the canvas somewhere. But he's emoted HIS feelings about the subjects and the setting of both paintings INTO both paintings.\n\nPortraiture and figure painting and drawing have long had the goal of faithful representation of the subject. Sometime accurate, sometimes stylized, sometimes abstract, but always with the goal of being able to recognize something of the subject. Hey, that's my friend Joe, type of thing.\n\nAs you get to the better portrait painters and old master's work they start showing the expressions or the emotions of the subject. When you get to the masters then they show the person with all their character, personality, emotions and sometimes a bit more.\n\nWhat Jake's done here is more yet. He's passed that; this' my friend Joe phase. He's passed showing that Joe's happy. He's passed showing that Joe's a gentle and caring man. He's passed showing Joe's shining soul.\n\nWhat he's showing now is he, the artist Jake, knows that Joe's happy because he just bought a new truck. AND Jake likes the new truck too. But neither Jake or the new truck are in the painting. But it's there...in the painting.\n\nHow is he doing that? I don't know, but Jake does, because it's in the first painting too. Jake's love for his family; for his home, for the peace and comfort in his home. But most of all for Cat and I and the love and life we bring into his home...his home.\n\nIn the painting of Cat it's his absolute love for her, his wife. It's his awe of her beauty and his lust for her desire. Each painting's message is wrote in two foot high neon letters, in paint and canvas, for the whole world to see.\n\nJake not only puts his subjects soul onto canvas, now he's put his own there too!\n\nIt's so very quiet, that's what brings me aware, so very quiet. Out of the very corner of my eye I can see Jake watching me. With the barest twitch of eye movement, I can see Cat watching me from the other side. But I turn and look to Jake.\n\nHe's at the last covered canvas with his hand on the covering.\n\n\"Ready Dani?\"\n\nI turn my head to look at Cat, but she's just standing, watching...me. They're both just watching...waiting. My heart jumps and starts a heavy beat, thump, thump, thump, that I can hear in my ears. I force myself to turn and look at Jake, and chin high give a nod. He gives a tug...\n\nStanding still I stagger, my hand reaches out to touch something to steady my balance. My feet feel the need to spread, to take a wider stance, for balance. Because part of my perception has dropped INTO the painting.\n\nBecause in my mind I KNOW which way that swing will move next!\n\nI know it so vividly that my body's instincts want to adjust to that next movement. But I can't, my feet want to move but they're rooted into place. My hand reached out, but I can't move it now. My fingers won't wiggle. But they're touching nothing. They want a touch point, something on which to steady myself. But all I feel is air.",
        "I can hear the squeak of the swings' chains as they move. I feel the soft movement of air through my hair. The motion of my leg as it moves to keep the soft, slow, swing going.\n\nMy body quits trying to balance itself, as my eyes start breaking down the elements of this painting of my younger self. Wondering mildly what Jake used to get that exact shade of brown for the sable color of my first fancy dress.\n\nMy inner mind is trying to find those two foot high neon letters that were so easy to see in the other two paintings. Once I knew what to look for. But I can't seem to find in this one. Because I know that I have too. That's what's important in this painting.\n\nSqueak, as I feel the air over my face I can smell the park from that younger time. Squeak, as I feel the seat of the swing pause, and my weight to gently try to continue forward. The pull of the chains in my hands. As the swings' seat starts back down the path of its arc. Pulling my weight back with it.\n\nLooking, I'm amazed the both Jake and I can remember that same exact shade of sable that was in that dress from over three years ago. Realizing that Jake did the same treatment on this painting as he did on the background of Dennis too. That soft semi-blurred focus. The super sharp detail and rendering of the central figure...me.\n\nI know that it's my fault that I can't find those subliminal messages Jake's put in this painting. Those two foot high neon letters. Something happened in that first instants' look I had...\n\nAnd it broke me...\n\nMy psyche has fractured into three part harmony...\n\nThose younger sensations on that swing in the park. All feeling, smell, motion all flowing passed with no thought, no emotion...\n\nMy eyes, my mind, and the weight of my body as I stare, analyzing the painting of myself. Of brush strokes, color weights, design elements all floating together into technique, technique, technique...\n\nOf the panic in my inner mind, chasing, chasing around trying to find those neon letters. Running after hidden subliminal revelations. Wondering if the glimpses I see are of one's Jake put there, or are they ones I want to be there. Or maybe even ones I don't want to be there. I just don't know, but I have to find them. Because I know that their the key to putting myself back together...\n\nIt's all simultaneously singing in roundelay a three part harmony, and I can't make sense of anything...\n\nThe park and swing starts to fade, there's heat, pressure and weight on my arm. As Jake's hand on my arm slams into my inner mind and melds everything back together. I gasp...\n\nSucking in air, I know that I haven't moved. Maybe I haven't breathed either. But my eyes still are looking at the painting and it's screaming at me!\n\nMy hands fly up to cover my ears before I can stop them. I hear my voice whisper:\n\n\"It's screaming that me.\"\n\nThen a chuckle from Cat.\n\n\"Yeah it screamed at me too. I told you that it might be his best work ever. Now you can see why I said It's so very special to Jake.\"\n\nI feel the touch on my arm again.\n\n\"You OK Dani?\"\n\nI turn from looking at Cat to Jake, and read the concern in his eyes. I allow myself to sink down and kneel in front of him. Reach up with both hands and hold his face, and look into his eyes. Take whatever mask is left on my eyes off, and pour all the love I feel for him out of them.\n\nI remember from that letter my mother Carol wrote, 'that she was so very sorry that she never knew who my father was...\n\nBut I know.\n\nI pulled his face toward me, and for a little girl's fantasy that never was and never could be. Of being 'in love' with this most wonderful of men. I gave Jake the first and last kiss on the lips that I ever will. One beat, two beats and I pulled back. Still holding his face, with my soul open to his eyes.\n\n\"It's the most beautiful painting in all of this whole wide world. Because it just told me how so very much my Daddy loves me.\"\n\nI'd never called Jake Daddy before. Julie was right when she told me I had to find out what kind of love Jake had toward me. His painting screamed it at me, and everything fell into its correct place. My Daddy loves me so very much.\n\nI looked up to the painting and I could easily read the neon writing now. He'd used my younger self; that dress, that day, that swing and park to show me that even then he loved me. That subliminal revelation to show me how so very proud he was of just how far I'd come, from that shy timid younger self. To just how much he loves what I've become today. It's wrote in two foot high neon letters for the whole world to see.\n\nIn that painting of my younger self, in my first fancy dress. So I told Jake again.\n\n\"I love you Daddy.\"\n\nI stood and turned to Cat, took those few steps. Held her face and kissed her lips too. Pulled her into a hug and whispered into her ear and hair.\n\n\"I love you too. My sister, mother, friend, my guiding star.\n\n\"That was my nightmare, that I could possibly hurt you with how I felt about Jake. Thus pushing me away from the two people who I love most in my life. My secret that I had to hide, so I wouldn't hurt you. I would never hurt you, never, never, never hurt you. So I hid and denied and cried.\"\n\n\"My mother told me that she didn't know who my father was, so that meant that I didn't have one. I know that's not what she said. But that's what my younger self heard in her terror and pain. So I had no where to put Jake, no father box to put him in.\"\n\n\"Since I love Jake so very much, that meant that I must be 'in love' with him. Now I know that I'm not 'in love' with Jake. I have so very very much more, my Daddy loves me. Julie was right, in my heart of hearts I didn't know that. Now I do, Jake's painting screamed it and made that place, that box, open for him.\"\n\nHolding Cat, whispering into her hair, my eyes see behind her, the clock on the studio wall.\n\nTen minutes, that's how long we've been looking at Jake's paintings.\n\nTen minutes to see almost a year of Jake's work.\n\nTen minutes, that's how long it took to fundamentally change how I look that the most important man in my life.\n\nTen minutes, that's how long it took to find my Daddy's love.\n\nTen minutes, that's how long it took to realize that my nightmare was a child's closet boogie man.\n\nTen minutes to realize that I will always have a place in their lives, and always did.\n\nTen minutes to realize that all is right in my world, that I can go to school this fall and everything will still be alright.\n\nThat I can come home and my world will still be right. That I can come home to the most beautiful part of my life, and it will be here waiting for me.\n\nCome home to my Daddy.\n\nJake.\n\nOf Kathy, I don't know how the first two people I acquired as friends. When I started crawling out of myself imposed exile. Could both be such amazing people. She graduated from here. Her professor, who she studied under here. Knew another professor, who knew another, and found her a mentor.\n\nThat got her into The Istituto Superiore per la Conservazione ed il Restauro (ISCR) in Rome Italy. What better place to study art restoration could there possibility be? She hasn't just stayed in Rome though. Who could have known that our little art supply store cashier would become a world traveler. Gallivanting around the world saving histories masterpieces.\n\nShe hasn't forgotten us though. Dani gets post cards, letters, and pictures of every where she travels. Plus pictures all of the pieces that she works on, I do too. She's come over and stayed with us a couple of times too.\n\nIt was thanksgiving break and Dani was home. Again my remembrance of the turnaround in Dani's life. Swelled my heart. From that broken little girl. To this beautiful, confident, dynamic young woman home on break from college. Was nothing short of miraculous. That we'd been able to get her into Cornell University was a feat to be proud of.\n\nDani was the reason to be proud. That young girl I'd met in that broken down old apartment, and that painting we'd made together. Bore no resemblance to the woman that came through the door a couple days ago. 90% of that's all on her. I did as her Mother asked, I showed her how to become a better person. Once she started, she never looked back. She picked up that ball and headed for the end zone, and there was never any doubt that she wasn't going to succeed. No doubt at all.\n\n\"Hey ladies, I'm going to get the mail.\"\n\nI got half way out to the mail box before I realized that it was November, and dark and cold. Even though there wasn't any snow on the ground, it was still damn cold. But just a quick scoot to the mail box and back won't kill me. The usual flyers and junk mail and...\n\nAnd one smudged, folded dirty piece of paper. It had no postmark or stamp, no address or return. Strangely, down through the years I still recognized the handwriting.\n\nI've seen my daughter several times Jake. You've made a damn fine father Jake, damn fine. You've done everything that I could ever have wanted and a lot more. Thank you Jake, from the bottom of my soul thank you.\n\nIt looks like John and Scooter aren't going to turn out to be much more than trouble. But my daughter Jake, oh she's so very special. She's why I know that my life has not been wasted, that it's had purpose and meaning. Now I can die happy, and I will soon. I've done a lot of bad things in my life, made a lot of bad choices, sex, drugs, and rock and roll. You can't live life like I have and not pay the price.\n\nPlease don't let her know that or that I've been here. I don't want to risk hurting her any more than I already have. I know that you don't owe me anything Jake, you've done so much.\n\nBut if you could find some way to remind her that her mother has always loved her. Please find some way to let her know just how extremely proud I'm of her, of the amazing, beautiful young woman she's become.\n\nDamn fine Father, thank you Jake.\n\nCarol.\n\nI didn't realize just how long that I'd been out here. Or how so very cold my body was, until Dani's hand touched my shoulder. Then I had a point of reference for the shivering that was going through me. I realized that I really didn't owe Carol any consideration. But I owed Dani honesty, so I just handed the note up to her.\n\nI didn't watch her as she read it, the only contact that she's had with her Mother in five years. She's quiet, I don't want to look up at her. I don't know if I'm scared to, or that I'm allowing some privacy, maybe a little of both.\n\n\"It's cold out here Daddy, let's go back inside.\"\n\nShe doesn't call me Daddy very often. But I love it when she does.\n\nSo we turn and go back inside, inside our...\n\nHome.\n\nFinito.\n\nDo they go on to find Carol before she dies. Like in reality, life goes on passed the end of the story. You decide, it leaves a little mystery.\n\nHope you enjoyed this story. Votes and comments very welcome, good or bad.\n\nThe opposite of love is apathy.\n\nThe opposite of life is vacancy."
    ],
    "authorname": "JayDiver",
    "tags": [
        "art",
        "cancer",
        "no sex",
        "painting",
        "love",
        "father",
        "handicap"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/painting-in-color"
}