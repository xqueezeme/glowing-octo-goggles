{
    "title": "The Twelve Zenati Pt. 34",
    "pages": [
        "12 Zenati 34\n\nAuthors note: Hello everyone. I am sorry for my delay with this chapter. I have been busy returning to work and visiting therapists, which leaves me exhausted, so my writing continues to be considerably slower, for which I apologise. Again, I am grateful to MsSensualiT for her continued help to be my second set of eyes. I hope those of you who enjoy this series continue to do so. ~ellie. \n\n12 Zenati Pt 34.\n\nIt was six O'clock when Noah and Marcella took their uneasy truce to meet with the other members of their family, and those of the Gambaro family investigating the package delivery before their early flight home. Marcella was not surprised by the open package put before her. She could logically understand why it had been opened, given her condition when she returned to the hotel and the recent history with a man who had told her that he would come for her at some time.\n\nShe could see the looks of trepidation Noah's brothers were giving her, and she considered how much of a harridan she had been not only to Noah, but to all of them since arriving in Darwin to protect her sister. She knew she hadn't made it easy for anyone to like her, especially Noah, after he turned away her advances. Still, surely Vivienne and Olivia knew her well enough to know she could be reasonable about things like this when it was explained to her properly instead of being arbitrarily taken out of her hands. For the first time, she considered that her warrior self might have alienated the people she cared about more than she realised, especially because she had been so horrible to Noah, who had not let her alienate him.\n\nGideon sat with a man named Lewis, both using android tablets to try and discover if any planes without flight plans were seen in the skies around Perth in the last week. This was how Konrad had travelled in Queensland when Marcella was with him to disguise his movements. It was reasonable, she agreed, for them to assume Konrad would continue to try and fly under the radar. Still, she felt he was more intelligent than to just fly and probably often changed how he travelled, particularly as he hated flying.\n\n\"I hate to interrupt,\" Marcella said mildly, surprising everyone. \"Until we work out where he is and what he wants, we can't move forward, so all the talk this morning isn't telling us anything we don't already know. So if it's all the same to you, I will leave you men to do the men's work and go to visit my mother before we leave or she leaves for Adelaide. Thank you all for letting me listen in but seeing as you haven't told me anything, I didn't already know I'd just as soon be somewhere else.\"\n\n\"And there is the Marcie we know,\" Genesis chuckled and rolled his eyes at Noah good-naturedly.\n\n\"She's got a point,\" Gideon said with a shrug. \"We haven't turned up anything out of the ordinary in flights around Perth. Of course, he could have driven here in the time since he was last seen in Adelaide, but would he have taken the gamble we would stop here on our way home?\"\n\n\"He would have had people in place for several scenarios. He may not be here himself, but could have had several of his men both here and in Darwin depending on which decision we made,\" Marcella answered Gideon's question. \"From the information we have about the package delivery, we can't even be sure he was here himself.\"\n\n\"She's got a point,\" Lewis said, tossing his tablet onto the table. \"Sitting here isn't getting us any closer to Varangian.\"\n\n\"Come on,\" Noah said to Genesis. \"Let's take the girls to see their Mama. Gideon and X can handle this search for us.\"\n\n\"Sounds good,\" Genesis held his hand out to Olivia, and the four left the room. Half of their security team, including a few of the Gambaro watchers Oscar wouldn't remove; claiming the girls were still Gambaro's and deserved his protection no matter where they were, followed them.\n\nMarcella had never found Genesis so agreeable, and she frowned, wondering why he had ceased his antagonism toward her.\n\n\"I think we'll go with them,\" Gideon said after a quick look at his wife and her disappointed expression.\n\n\"Go,\" Xavier said. \"I wouldn't mind checking on Nathanael before we leave. \"Let me know when you're close to being done so, we can have Val ready the plane.\"\n\n*****\n\nBenita Gambaro was being cared for in a quaint little private hospital to Marcella's relief. She had imagined an asylum with nurses and orderlies all dressed in white who had calming injections at the ready like some horror movie. Marcella took a deep breath and shuddered. She wasn't sure her mother would welcome a visit from either herself or Olivia.\n\n\"You don't have to do this, Marcie,\" the calm, quiet voice in her mind spoke for the first time since she had woken.\n\n\"You can't think I am going to let you take over again,\" the harsher of her inner voices hissed. \"She needs to be strong and help her mother make the decision to go and help Jessa grow up and take responsibility for herself and those boys.\"\n\n\"I'm the one who needs to take responsibility for the things I do instead of letting you take over,\" Marcie thought loudly at the two voices.\n\n\"You're not strong enough, alone,\" Marcella hissed.\n\n\"She is stronger and more resilient than you will ever be with all your bravado. You don't play well with others, and we don't want to be alone and lonely for the rest of our lives,\" Chella responded.\n\n\"You mean this controlling asshole? We'd be better off alone if you ask me,\" Marcella said derisively, indicating Noah, who sat beside her.\n\n\"You will be fine, Marcie,\" Noah said as if reading the turmoil in her mind, and he squeezed her hand. \"Just remember she has been through a lot and might not be the woman you remember. I won't leave your side unless you ask. I'm pretty sure Genesis feels the same way.\" He looked at his brother for confirmation.\n\n\"Both of you are our priority. Whatever you need to get through this, we will do,\" Genesis said, making Marcella frowned again at his easy support of her in addition to Olivia.\n\n\"What's changed, Genesis?\" Marcella pushed forward, ready for an argument. \"Why are you suddenly acting like we are friends?\"\n\n\"Because we are friends, and very soon we will be family as well, Marcella,\" Genesis said from the front seat. \"This isn't a sudden thing. Once you stopped trying to force Olivia to leave and return to Perth, there was no problem between us. So I'm not going to argue with you and cause a rift between us if that's what you're looking for.\" His words and demeanour were casual, but Marcella narrowed her eyes, hearing a slight edge to his tone.\n\n\"Marcie?\" Olivia asked quietly. She watched as her sister spun to look at her with fire in her eyes. \"I need you with me to face Mama. Papa told her I was dead a while ago, and I am unsure how she will be when she sees me again. So I need Marcie with me.\" She watched as the fire slowly left her sister's eyes and expression, and she let out a breath. \"I think you were right about her being happiest with Jessa. They can help each other heal in ways we couldn't.\"\n\nNoah said nothing as he watched Genesis and Olivia handle the appearance of Marcella, the warrior who had come forward in her anxiousness about seeing her mother. Now that he was aware of what to look for, he could see the change of expression and how she held herself with each personality that protected the core of who she was. When she turned to look at him again, her eyes had her inner turmoil, and he wanted more than anything to take that away for her and make her feel safe and secure no matter where they were, as long as they were together.\n\nThey left the car and walked into the small facility after allowing Gideon and Vivienne to catch up. The closer they got to Benita Gambaro's room, the more Marcella's feet dragged her pace to almost a crawl. Olivia's words of needing her echoed in her mind from the soft-voiced Chella, and she drew a deep breath before marching forward and leading the way into the room. The room was small but nice, with only one bed in which her mother lay propped up and staring out of the large window beside her into a garden.\n\n\"That's a nice view you have, Mama,\" Marcella said quietly when Benita didn't turn to look at them.\n\n\"Marcella!\" Benita gasped and turned her head finally to take in her daughter. \"Your hair! You almost look like Olivia.\" She gasped as Olivia stepped forward to stand beside Marcella. \"No, she said you're dead. It can't be you, but here you are!\"\n\n\"Papa told you a lot of lies, Mama,\" Olivia said emphatically.\n\n\"And Jessa?\" Benita's voice sounded hopeful.\n\n\"She is in hospital in Adelaide and could use your help when you feel up to it,\" Marcella said, reaching out to touch her mother's hand.\n\n\"Not dead? You're sure?\" Benita clasped Marcella's hand hard as if to wring the truth from her.\n\n\"We have just come from Adelaide. She is in hospital and fighting to get back to her children,\" Marcella said gently. \"We thought it might be good for you to go and stay with her and help her look after the boys now.\"\n\n\"Your Papa would never allow it,\" Benita said quickly, worry and agitation in her eyes. \"I need to go home.\"\n\n\"Papa can't tell you what to do anymore. He is in jail, or at least the tables equivalent of it, and so is Severino. You are on your own now, and wouldn't you rather be with Jessa?\" Marcella prodded gently again.\n\n\"Oh, this is ridiculous,\" Olivia hissed and stepped forward between her mother and Marcella. \"Rip the bandaid off Marcella. She obviously isn't acknowledging the truth of her situation!\"\n\n\"Olivia!\" Marcella gasped in surprise.\n\n\"What? You know I'm right! What the hell is wrong with you today?\" She turned her hard look on her mother, making sure she had the woman's attention. \"Mama. Papa and Severino have been taken away to jail for plotting to kill us all. They will not be coming back, not ever. So, you are alone, and so is Jessa, except she has three small but amazing boys who need someone to care about them. She needs your help, and you need to go to her. There is nothing left for you here in Perth. Marcella and I won't be back either once we leave today. We are marrying into the Zenati Table,\" she lifted the hand that Genesis still clasped. \"This is my fianc\u00e9 Genesis Zenati, and when Marcie finally admits how she feels, she will marry the man standing beside her, Noah Zenati.\"\n\n\"Olivia!\" Marcella exclaimed.\n\n\"What? You know it's all true,\" Olivia said belligerently. \"That's an engagement ring you are wearing. Weird as it is.\"\n\n\"Not weird. Unique,\" Noah countered and smiled at Marcie before turning back to Olivia. \"She could have chosen any ring she wanted as long as she wore it on her left ring finger, and I would be happy.\"\n\nGideon chuckled at the truth of his brother's words and took stock of the situation. Olivia seemed antagonistic, Marcella was too careful. Noah wouldn't speak up because this was something Marcella needed to do for herself, and Genesis was too abrupt at the best of times. He drew a breath and marshalled his thoughts for a moment before speaking directly to Benita.\n\n\"I'm Gideon Zenati, and this is my wife Vivienne,\" he introduced himself to Benita. \"I understand that we've given you a lot of information to think about, but we were under the impression you knew about going to Adelaide to help Jessa recover and look after her boys?\"\n\n\"Her husband's family won't like that, and I would have to come back, but I would like to see her if she is truly still alive,\" Benita said softly.\n\n\"Mama! We are all alive! Papa lied to you!\" Olivia said.\n\n\"He didn't lie about Zia Ursula,\" Benita's lip quivered, and she raised her eyes to Marcella's. \"He said if anything ever happened to him, we would all die, including those who tried to help us. You don't know what he was like at the end. He laughed about the murder,\" she added fearfully.\n\n\"Benita, your husband and his brother, as well as Jessa's husband, have all been taken to a Papillo facility. They will have no contact with anyone outside of that facility. So, he cannot harm you or your daughters anymore. The Farnese family are happy for you to go to Adelaide and stay as long as you wish with Jessa and her boys. There will be no further repercussions from her husband's family,\" Gideon said in a gentle but firm way as if she couldn't argue any further with him.\n\n\"The Papillo?\" Benita brought the fingers of one hand to her lips. \"Not the Battaglia?\" She seemed to relax slightly at this news.\n\n\"They tried to kill, unsuccessfully, but they did attempt to kill each of your daughters as well as harm you. In addition, Severino shot my brother, who he believed was the reason why Marcella stayed in Darwin and one of my cousins who tried to protect him. They were criminally insane to think there would be no recriminations for such an act, and honestly, they are lucky the Papillo have them now. If Noah had a choice at the time, neither Severino nor your husband would be alive to complain about their treatment,\" Gideon said solemnly. \"They will not be returning to your lives again.\"\n\nNoah heard the words, and something clicked within him. He needed to talk to X right then, but he hated leaving Marcella while such turmoil was going on. So, in the interests of his promise to be honest with her, because he wanted the same honesty in return, he bent down to whisper.\n\n\"I have to call Xavier. Will you come with me for a few minutes, or would you like to stay here with the others?\" Noah asked, giving her a choice to know what he was doing.\n\n\"Yes, I'll come,\" Marcella said, hearing the urgency in his voice. \"Mama, I'll be back to say goodbye. We just have to do something that can't wait.\" With that, she turned and led the way from the room. In truth, she had been grateful Gideon had taken over the conversation. She knew if Noah had tried to discuss the issue, she wouldn't have been so content and probably would have accused him of taking over her life again.\n\n\"Where can I find a private place to make a call?\" Noah asked the first staff member they came across.\n\n\"Certainly, this way, Sir,\" the man said and took them to a private sitting room and slid the plaque on the door to show it was engaged after they entered. Noah immediately called Xavier.\n\n\"X, are you with Nathanael?\" Noah asked as soon as he answered.\n\n\"Yeah,\" Xavier answered curiously.\n\n\"Great can you clear the room and put me on speaker, and if at all possible, could you conference Rick Papillo into our call?\" Noah asked, and Marcella raised an eyebrow. It took a few minutes, but was surprisingly fast when Noah heard Rick answer his phone and the echoing hellos from the others telling him he was on speaker so Nathanael could be involved.\n\n\"Okay, so if Rick can suspend any doubt he has in what we told him yesterday for this conversation, I think we may have a problem,\" Noah began.\n\n\"Your logic was sound. I have no issue with anything you said yesterday,\" Rick agreed.\n\n\"Great, so going with that logic, Konrad was using Severino and Nunzio to sew discontent between Tables because they were easily manipulated. What if, and you will have to go with me on this; what if he had a way of tracking one or both of these men to the secure facilities of the Papillo that are not any map? What if the breaches to your facilities before the mother's day attacks were not the Suebi, but rather Konrad? What if the Papillo were the target all along, and they have someone in the ghost town that Konrad wants?\" Noah let out a large breath as he finished his questions.\n\n\"I doubt we would have searched them for internal trackers,\" Nathanael frowned. \"That would be the only way they got one to the Kimberley. At the time, we believed they were behind all the trouble for the three girls.\"\n\n\"They aren't anywhere top secret yet. They are in a high-security facility that runs much like a hard labour prison. There are no visitors allowed, but there's certainly not anything we would be concerned about in that facility,\" Rick said.\n\n\"You might want to double-check the list of inmates, not that we have been aware of who Konrad was in league with at any given time. Look, it's just a hunch, but can you scan them again?\" Noah asked.\n\n\"Tell me about the feeling?\" Nathanael asked. \"I wish we would have patched Phil into this conference call.\"\n\nNoah explained about visiting Benita and how something she said had given him the idea that Konrad had known the two men would mess up and be taken to the Papillo rather than the Battaglia, where they obviously had connections.\n\n\"The first breach wasn't bad, and whoever did it didn't get what they wanted,\" Rick said thoughtfully. \"We never did find who, and it was a far more sophisticated attack on the network than we had seen previously from the Suebi. So it makes sense that it could have been the Varangian.\"\n\n\"Looking for internal trackers isn't standard practise for the type of men they were. So maybe we need to upgrade our security a little even if this hunch doesn't pan out,\" Nathanael said.\n\n\"So, you'll check?\" Noah asked.\n\n\"It's being done as we speak,\" Rick said. \"It would have been done when they arrived, but new tech is coming out all of the time, and if it was Konrad, you can't be too careful. As I said, I trusted the logic of your presentation yesterday. If he wants into the ghost town, I'm afraid he's going to be very disappointed even if he does have a tracker on either of them.\"\n\n\"Can you let me know what the results are?\" Noah asked. \"I have to go. We're still at the hospital. I'll see you on the plane, X. Shit, wait!\" He exclaimed, turning to look at Marcella. \"Do you think he'd be tracking Marcie? He did say he would come for her.\"\n\nMarcella blinked and shook her head. She would have known if he had put a tracker on her. She would have felt it if it were internal. She had no bumps and bruises or mystery lumps on her skin. She'd know if he did anything like that to her, and she was sure he hadn't.\n\n\"Probably best to be safe than sorry. I can set up a thorough scan for her before you leave. Xavier can text you the details,\" Nathanael said.\n\n\"I would know if he had, and he didn't,\" Marcella whispered softly after managing to stay quietly in the background for so long.\n\n\"I believe you, Marcella. But when you left the boat, you would have been in shock and at his mercy. You might not remember something from that time, and as Nathanael said, it's better to be safe than sorry. You wouldn't want to be responsible for anyone getting hurt because we missed something so significant, would you?\" Xavier asked. \"I need to protect my family as much as you need to protect yours. I wouldn't ask you to do this for me, otherwise. Please, Marcella, it won't take long,\" he added, making it a favour to him rather than something she was being forced into against her will again.\n\n\"Okay,\" Marcella agreed slowly as the warrior raged at Chella for taking over again. She understood protecting those closest to you, but this was asking for much. He should just believe her. \"We haven't given him any reason to believe us lately, have we,\" Chella said softly to the warrior.\n\n\"Ally is causing chaos out there because you made her leave the room to have another secret meeting,\" Oscar chuckled as he entered the room. Then, seeing the serious faces on Xavier and Nathanael, he raised an eyebrow questioningly.\n\n\"On that note, I will go. No way am I going to make a little Mama of any table mad,\" Rick laughed. \"I'll text the results.\n\n\"I better go too. Let me know where you want us and when,\" Noah said and ended his side of the call, leaving Xavier to clean up the mess he made at the Gambaro house. \"Everything okay?\" Noah asked, eyeing Marcella carefully. He had expected at least some fight from her over having to go to yet another hospital or clinic.\n\n\"I'm fine. Whatever you think is best is fine,\" Marcella said and lowered her eyes. The movement told Noah who he was dealing with now, and he swore silently and considered if being here with her mother had made Chella reappear or if being pushed into getting the scan had caused it.",
        "They left Benita still sceptical of everything they had said, but she was resigned to her fate and promised to do as the Gambaro's asked. From there, they had gone to a doctor's clinic, and Marcella had been scanned from head to toe. Although the doctors had tried to be as unintrusive as possible, she had been uncomfortable with the thought that Konrad would have done something to her that she couldn't remember. Memories of her uncle's threats and violations threatened to overwhelm her, and her eyes misted more than once as she held the tears and her warrior, who wanted to lash out at anyone who touched her at the point, at bay.\n\nThey found five tiny trackers or what appeared to be trackers of some description hidden in her body. She had received bruises she couldn't account for during her night on the boat, or at least that is what she thought when she had woken in Konrad's home the next day. He had been such a gentleman to her and overly pontificating that he would never violate her personal space without her consent or hurt her. Imprison her perhaps, but not hurt her. She'd been wrong, she realised. His willingness to give her the freedom to leave both in Brisbane and Adelaide made more sense to her now.\n\nThe discovery of so many trackers or bugs or whatever they were had floored Marcella. She admitted, if only to herself, that she had always been wrong when she had believed someone cared for her. Not that she thought Konrad cared that much, but she hadn't thought he would hurt her, and he had, just not in a way that showed on the surface. She retreated within, but didn't give up control to the other voices that pushed forward in her weakness. Instead, she became zombie-like, moving and following instructions without any interaction beyond that. She didn't speak or show any emotion. Instead, she was an empty shell. Even when they told her she could change back into her clothes instead of the hospital gown, she didn't react or speak except to do as she was told.\n\nNoah had been with her the whole time, and despite his best efforts, he couldn't stop the fading light in her eyes from taking her over. Her eyes were dull now, and she seemed to look through everyone around her as if her mind had just checked out and she was barely going through the motions. He had been prepared to hold her if Chella appeared upset by the findings or fight with the warrior version of her if she rose to the challenge but this zombie persona? He had no idea how to help her, and he worried if anyone could.\n\n*****\n\nMarcella remained quiet and nonreactive to the people around her despite their best efforts as they returned to Darwin. Except they didn't land in the city as she had been expecting but rather on the large property she had visited before. Nobody else seemed concerned by this turn of events, so she followed them as they left the jet and took in the surroundings. She could see the small hill not too far away with the zip line mount, and she knew on the other end of that would be the treehouse.\n\n\"Home run,\" Marcella whispered to herself but realised she'd been overheard when Noah gave a small chuckle making the other members of their party turn to look at them as they stepped into one of the golf carts parked near the runway.\n\n\"Best game, ever,\" Noah whispered back with a broad smile and slid behind the wheel. \"Marcie, you are safe here. Safe with me. Safe with my family,\" he turned to look at her and took her hand as she sat beside him. \"That home run happened because I know you. I know you need to be challenged as well as trusted to keep up with me. I am still here trying to prove that if you tell me what you need for you to trust me to have your back.\" He said earnestly. \"Please, don't withdraw and hide again. We have only just got you back, Marcie,\" he said, but she made no reaction at all to his words. He could only hope she was taking in everything he said because they needed to do one more thing before retreating to their cabin, where they could talk, and she could rage at him if she needed to. \"I am sorry, but we have to face one more hurdle before we can go to our cabin and shut the rest of the world out for a while. I promised Zanto we would see him as soon as we arrived,\" he said. \"I need to keep my word to him, Marcie. Will you come into the clinic with me?\"\n\n\"Okay,\" she nodded, not entirely sure what she could say to a man who had almost died because of her and her fucked-up family, but she would at least face him if he had asked to see her and apologise.\n\n\"Thank you,\" he said with a soft smile and pushed the ignition button. He steered their cart toward the clinic glancing at her stony face, often trying to work out what she was thinking or feeling.\n\nMarcella closed her eyes as the voices in her head began fighting amongst themselves again. Everybody had an inner voice they battled with every day. It was one of the mantra's she'd used over the years to maintain control of her world. The key was not to let the fear and anger take over. She had nothing to fear or be angry about here. If anything, Zanto had reason to be mad at her. Guilt sat heavy in her gut, but it wasn't accompanied by fear, and she blew out a breath pushing the voices from her mind.\n\n\"He wanted to come to Adelaide to get you, but Helena wouldn't let him fly yet. But, trust me, he is going to be happy to see you,\" Noah encouraged as if guessing the reason for her large breath.\n\nThey pulled up outside a small building with the front wall made of glass illuminating the clean open space within. It looked more like a boutique hotel than a clinic to Marcella, who felt a small amount of relief about not having to walk into another overly sterilised hospital. She didn't fight Noah's touch as he placed a hand on the small of her back as they walked in.\n\n\"Thank God you're here,\" Zanto said as they walked into the clinic. \"I swear you give my sisters a simple task, and it becomes bigger than the raising of the Titanic. Let's go before they come back. You have a cart, right?\"\n\n\"Whoa, whoa, whoa!\" Noah held up his hands as if gentling a horse. \"Where's Helena?\"\n\n\"I knew you would ask that!\" Zanto grinned and handed over a note. \"She left that to explain she is off being a ditz with the rest of my silly cousins and sisters and that I am allowed to go to the beach house as long as you and Marcella escort me. Well, you can play chauffer, and Marcella can escort me.\" He grinned at her and took her arm, bending it to thread his arm through hers. \"I can't walk far yet, but I can hobble my way to the cart with your help.\"\n\n\"Are you sure?\" Marcella looked up at the tall man who dwarfed her and blinked.\n\n\"Pfft, I know you won't let me fall. It's not in your nature to abandon anyone you care about,\" he chuckled. \"Not even my controlling, emotionally retentive cousin, who is about to drive slowly and carefully, so I get some time with his girl in the back of the cart,\" Zanto said as he grinned and winked at Marcella.\n\n\"He's not so bad once you understand why he is so overbearing and glaringly idiotic at times,\" Marcella shrugged. \"You must know that if you bothered saving his life,\" she said, the half-smile she had allowed herself draining from her expression. \"I'm so sorry this happened to you, Zanto,\" she said quietly.\n\n\"Why are you sorry? It's Noah's fault I got shot. Which is why I have no problem making moves on his girl while he chauffeurs me around,\" Zanto chuckled as Noah gave him a steely glare and helped him into the cart.\n\n\"I'm not sure you can blame him,\" Marcella frowned. \"Not when he got shot, too, after all.\"\n\n\"Sure, I can because by the time he got his head out of his ass, and we made it to the markets to rescue you, you had already left your decoy there. Imelda found him there and told him he had to leave fast or the results would be disastrous. Instead of listening, though, he sat there and sulked because you left him behind instead of letting him protect you, even though we both know you can look after yourself, right?\" Zanto said. \"I mean, you look fine to me, so he shouldn't have worried, right?\"\n\n\"I was fine on my own,\" she said half-heartedly, knowing that she wasn't. All the while, her warrior roared her independence in her brain.\n\n\"So that wasn't you who was almost killed on a yacht, kidnapped and implanted with half a dozen trackers before being abandoned in Adelaide as bait for the Tables to sew more discord?\" Zanto put her time away from Noah into a brief list of events thanks to his brothers keeping him in the loop. \"Even in Darwin when your ex came to visit, he only managed to hurt you because you took off on your own. Do you see the pattern here?\" Zanto asked, eyeing her carefully as she gaped at him.\n\n\"What the fuck?\" Marcella finally blurted. \"I did what I had to do for my sister!\" she seethed at Zanto.\n\n\"Ah, there she is,\" he narrowed his eyes. \"Ms, I don't need no stinking help! It's good to see you again. That took a bit to get you here. You can apologise to Marcie for me once we are done.\"\n\n\"Did you fall and hit your head when you were shot? Do you have a brain injury or something?\" She snarked at him. \"I'm the same girl you met before being shot. Nothing has changed.\"\n\n\"That's where you're wrong. I have like an inbuilt meter for danger or trouble. What I think is for the first time in your life, you realised you were dealing with a true villain instead of some dumbasses that you could outthink and outmanoeuvre, and you were out of your depth on your own. Even if you can't admit it even to yourself, I think it scared you to have no real options without reaching out to family and friends for help,\" Zanto lectured. \"I think that's why you haven't been yourself since Massimo found you and took you home with him.\"\n\n\"Enough!\" Noah barked from the front, braking heavily and spinning to look at Zanto.\n\n\"See, he will even protect you from me and the harsh truth that you have hurt the people who would love you best if you would just let them,\" Zanto said sadly.\n\nMarcella stared at him incredulously but had no words to counter his as the enormity of it sank in and squeezed her heart.\n\n\"Why the hell did you stop all the way down there?\" Helena called from the Beach house veranda. \"Drive up a bit further, so I can see you both before I take my patient back to the clinic.\"\n\n\"Then why did we bring him here if you're just taking him straight back?\" Noah frowned. \"He said he was going to the beach house.\"\n\n\"I was going to the beach house with you. We moved your stuff from the cabin to here when a large contingent led by Claudio and Orlando went back to the city to track the Game Master and left the place free for the remainder of the gathering. It's further away from the central hub and will give you the privacy you need to work things out, with raised voices, if necessary,\" Zanto grinned.\n\n\"The cabin was fine, but if our stuff is here, it's fine,\" Noah grumbled. \"Don't be an arsehole next time we see you.\" He growled at Zanto, then took Marcella's hand and drew her from the cart before walking away from his cousins with a murmured, \"Thanks, Helena.\"\n\n*****\n\nMarcella sat on the veranda, staring blankly at the ocean. Noah, the man she never wanted to want but couldn't seem to help herself, had brought her to this safe and idyllic place. Finally, she had an unfettered moment of silence to sit and think about that fact. Things never seem to work out the way she expected. Any other man would have given up on her by now, and she wouldn't have blamed them, especially after being shot. She wondered if Zanto was right about her need to be independent and in control, until she came face-to-face with the fact that she couldn't do anything on her own when Konrad had cut her lose with no money, no phone, and no way to help herself let alone her sister.\n\nSometimes she wished she could stop pushing everyone away, but things always seem to spin out of control lately. She thought back to the fateful night when Noah had refused her invitation. He hadn't been mean about it. In fact, he had seemed regretful, but it had wounded her pride; and her ego was such a fragile thing that she couldn't forgive him. The truth was she wanted him, and she could admit to herself she'd always wanted him, even when she was pushing him away. He made her feel cared for and protected even when he was an arrogant bastard.\n\nShe got up and went into the house and started looking at the clothes brought here for her from the apartment where she'd stayed in Darwin. Noah appeared at the door to the bedroom, saying nothing. Instead, he leaned on the frame and just watched her.\n\n\"Did you have all of my belongings brought here?\" she asked in an accusatory tone.\n\n\"Why are you missing something you want to take when you run again?\" he teased.\n\n\"What are you talking about?\" she snapped, then looked at him like he had lost his mind because clearly, he had. \"I don't have a plan. Hello, I said I would stay. Where have you been? As Zanto said, I am clearly out of my depth here,\" she said, a little of her fire returning as she defended herself.\n\n\"So, you'll want to unpack then,\" he held up the bag Vivienne had given her in Adelaide and walked toward her.\n\n\"Do you know how long we will be here? Will we be going back to Darwin when the gathering is over?\" she asked.\n\n\"Does it matter if we have no plans?\" he asked innocently and walked into the adjoining bathroom to deposit her toiletries bag.\n\n\"What are you doing? Just tell me what's going on instead of acting like an arsehole now we are on your home ground!\" She complained. Marcella stood up and followed him, reaching out and grabbing him by the shirt. He turned with a smile and embraced her, pulling her tight against him once his hands were free.\n\n\"I don't know!\" he argued back. \"I have no idea what I am doing when it comes to you. Zanto was harsh, so I'm waiting for you to run again because that's what you've done anytime anyone challenges you on what you've done! Only I'm hoping that this time you won't run, so I am doing the things I would normally do while waiting for the inevitable explosion, while hoping you will believe in me and trust me to keep you safe even from my own family.\"\n\n\"I said I would stay, I don't know how else to say it so that you will believe me and trust me,\" She was almost shaking and thinking about how that sounded just like what he kept saying and not paying attention to what Noah was doing when his mouth connected with hers. Her hands grabbed his shirt again and pulled him closer as his hands rested on her hips, pulling her until she was flat against his body. His hand moved up from her waist and slid under her shirt. He broke the kiss and stared down at her.\n\n\"I guess we need to learn to trust and believe in each other properly this time,\" he said softly with his hand still under her shirt, savouring the feel of her soft, warm skin.\n\n\"You're right,\" she admitted and grabbed his face to pull him down to kiss her again. Her tongue slid over his lips, she felt his hand move up to cup her breast as his lips parted, and she moved in closer to him. He opened his mouth and slid his tongue against hers. His other hand moved up to cup her other breast rubbing her nipple through her bra. She moaned and pulled away, biting his lip as she went.\n\n\"Marcie,\" he groaned as she licked her way down his neck, unbuttoning his shirt as she continued. Then, finally, he picked her up and moved back toward the bed while she combed her fingers through the hair on his chest and nibbling his collarbone. \"Wait, Kitten,\" he muttered, uncertain about her taking the lead this eagerly. He liked control in this above all things, and he needed to wrap his head around the fact that she wasn't freaking out about being here on his family's property or what Zanto had said to her.\n\n\"What should I wait for? All this talk of love and when I take the lead you turn me down, again?\" she asked him. Then she mutinously wriggled from his arms and moved away from him, kicking off her shoes and starting to undress. If nothing else eventuated with this infuriating man, she would at least need a shower to cool down. \"What, you can't handle it when I am the one to initiate sex?\"\n\n\"I've been trying to do what's best for you, but you just won't let me will you?\" he stalked toward her. \"Not everything has to be a fight, Marcella. We can do this without the battle!\"\n\n\"You didn't want me. You walked away from me the last time I initiated anything. I wanted a hot steaming night with no strings, and you were the one who walked away or, should I say, ran away. Not me, you, so don't put the blame for our antagonism all on my shoulders! Asshole!\" Marcella accused. \"You set up our dynamic right from the beginning.\"\n\n\"Fuck, I thought we were past this! I'm sorry. I didn't know you were mine then. I was trying to avoid hurting you when fate stepped in. I wanted you, and walking away was one of the hardest things I have ever done. Even then, it was impossible to fight my draw to you and particularly when you got hurt,\" he closed his eyes as if reliving that painful moment. \"When that arsehole came and pushed you onto the road, the bottom fell out of my world. I knew then. I knew it was you, Marcie, just you, not Marcella or Chella or anyone else you have locked in that infuriatingly beautiful and clever mind of yours, just you. I love you and want no one else but you,\" he admitted saying more than he had planned to because she pushed all of his buttons so damn well that he lost his mind.\n\n\"So now you think I'm crazy? Like I am playing games? Well, I'm tired of playing games with you. Either you want me as I am, crazy or manic or whatever, or you don't, but damn it, this is who I am, take it or leave it,\" And with that, she slipped off her skirt and underwear. She stood in front of him completely naked, her hair flying around her face and looking like she was ready to attack him physically.\n\n\"Damn it, woman! How can you not know that you're the only woman I can't walk away from?\" he shouted at her. He made some indiscernible noise in his throat and grabbed her kissing her hard. She was naked, and her body was softened against his. He slipped out of his shirt, and she pushed him back towards the bed. He hit the edge and sat down. She knelt in front of him and pulled off his boots and socks.\n\n\"Pants off now.\" She demanded in a throaty voice.\n\nNoah stood and dropped his pants to the floor, giving her this, he would have his time, but he realised she needed this, here tonight. His sexy kitten was letting her walls down a little for him. He watched as she reached down and began to stroke his cock, a small smile of triumph curving her lips.\n\n\"Keep doing that, and I'll never be able to make it through to the fun parts,\" he teased.\n\n\"You don't have to make it sound like my touch is some sort of punishment.\" She snapped back at him.\n\n\"I didn't mean it like that. You always do that to me. You push every single button I have,\" He told her as he picked her up off the ground and dumped her onto her bed. He sat down next to her on the bed and stared into her eyes as he turned to hover over her. \"What do you want, Marcie? This isn't about me anymore. I have been very clear about my intentions since I found you in the casino. So what is it you want, Marcie?\"\n\n\"What?\" She froze and looked at him quizzically.\n\n\"You said you were tired of playing games with me, so what is it you want from me?\" Noah asked quietly. \"I don't want to fight or play games either. But, no matter what you want, I will continue to keep you and your sisters safe until the Gamemaster is dealt with, so don't base your decision on that.\"\n\n\"I know, I've done some pretty stupid shit over the last few months,\" she admitted out loud to herself as well as Noah for the first time. \"I was trying to keep everyone around me safe, including you, believe it or not,\" she sighed and draped her hand over her eyes so she didn't have to return his gaze, which had grown softer with her words.",
        "\"I do believe it,\" he said, gently taking her hand from her eyes and cupping her face with one hand running along her jaw. \"You showed me how you felt before you left me at the casino, and I let you go for the same reason. Because I love you, and you asked me to trust you.\"\n\nUnable to take the intensity of his eyes, Marcella leaned forward and gently kissed him, making them both close their eyes. She slid her lips over his, licked her tongue against his lips until he opened his mouth and slid his tongue against and around hers. Then, he wrapped his arms around her and pulled her tightly against him. She moaned as she felt the hair on his chest rub against her nipples, and she squirmed in his arms.\n\n\"The only person who has ever pursued me as doggedly as you have, was my uncle, and he claimed to love me too,\" she whispered and felt him freeze in their embrace. \"I've never even come close to a storybook romance, and I don't understand it or you, but I know I don't want you to be hurt any more than I want Olivia hurt again. I know that I do feel safe with you. But, I know that even now, you are compromising who you are to keep me from losing my shit at you again, and I hate that I did that to you.\" She pulled her head from his hand and turned away from him.\n\n\"I never thought I would want to compromise who I was for anyone,\" Noah admitted. \"Like you, I am the typical middle child who faded into the background and looked after everyone else. I guess I still do or did that to a certain degree before you came along,\" he flopped to his back, lying beside her and taking her hand in his. There comes a point where you have to start doing what you want and fuck everyone else. You don't want to be part of the Tables fine; once the Gamemaster is dealt with, we will take off and find our own bliss somewhere with good surf and cheap accommodation so our savings last as long as possible,\" he chuckled.\n\n\"You'd leave your family for me?\" she asked as if still not believing it even though he had told her that more than once.\n\n\"You know the curse of my people and what it means to us to find our curse breaker?\" he asked.\n\n\"I listened to you and Vivienne when you tried to explain it to me,\" she admitted quietly.\n\n\"It was different for me. I have an empathy for my family, not quite as strong as Dom's, but that empathy made me feel the curse-breaking differently, which was why I didn't realise it was you initially. It did hurt to walk away from you that night, but now I am sort of glad I did. I don't think you were ready for the kind of relationship we were always destined to have, and I'm pretty sure I was not ready for you to come in like a wrecking ball and make me re-evaluate everything I thought was important. You're not the only one guilty of doing a heap of stupid shit lately,\" Noah sighed and squeezed her hand.\n\n\"So, this is it, the naked truth, so to speak?\" Marcella asked with a smile, leaning up on one elbow and placing a hand on his chest.\n\n\"So to speak,\" Noah chuckled, turning his head to face her and locking his gaze to hers. \"You have to trust someone sometime. Why not me? I've never purposely hurt you or put you in danger. I have only ever wanted to care for you first as a friend and then so much more,\" he picked up her hand and pressed his lips to the ring she still wore on her ring finger.\n\n\"You make it sound so easy,\" she shook her head.\n\n\"You make it seem more complicated than it is,\" he challenged. \"We are destined. You're my ride or die, my penguin. You're the Juliette to my Romeo, and the Elizabeth to my Darcy....\"\n\n\"Shut up,\" Marcella gave a soft half-laugh before kissing him deeply.\n\nShe pushed his shoulders which had turned toward her, back onto the bed until he was lying flat. His hands went to her hips, running up and down his thumbs caressing the inside of her thighs. She leaned down and kissed him again. This time his hands moved up and cupped her breasts. She made a needy mewl in the back of her throat as his rough thumbs brushed against her nipples.\n\nHer hands moved restlessly over his chest and shoulders as she retook control of their actions. Her lips moved over his chest as she nipped at his body the whole way down. His hands slid into her hair as she licked his thigh and finally moved to take his hard cock into her mouth. Her tongue slid over and around the head, and his hips came up off the bed when she buzzed her lips, making a humming noise so that he could feel the vibrations through his entire body. He was breathing hard and about to thread his hands into her hair when he heard another golf cart approach the house and muffled voices sound outside.\n\n\"Fuck!\" he cursed and pulled her up against him drawing deep breaths and trying to think of ice-cold showers as he prepared for the interruption he knew wouldn't leave without some acknowledgement. His family was never shy about interrupting afternoon delights.\n\n\"Noah! Get your ass out here. There's news from Rick,\" The voice called up.\n\n\"Fuck off, Pietro, I'm busy up here. Come back in an hour,\" Noah yelled back, recognising his cousin's voice.\n\n\"Yeah, Xavier said you'd say that but to tell you that he knows you won't want to miss this meeting,\" Pietro offered. \"Honestly, my brother's scarier than you, so I guess I'll wait until you get dress rather than return without you,\" he laughingly yelled back.\n\n\"Then wait, it's your choice,\" Noah grumbled loudly.\n\nNoah flipped Marcella onto her back, his hands moving up and down her body. He licked his way down her body, stopping at her nipple to suck on it, drawing it deep into his mouth rolling his tongue over its stiff peak. While he did that, his hand cruised lower and slid between her thighs. He rubbed his thumb over her clit, sliding his hand through her damp curls.\n\n\"Go to your meeting! I will be here when you return,\" she breathed hotly, feeling him slip two fingers deep inside her.\n\n\"But I need you now,\" he murmured back, lifting his head to look at her showing he had no intention of stopping. He could feel how tightly her body was wound as he started at the top all over again, kissing his way down her body.\n\n\"Noah, please.\" She mewled, not caring that she sounded like she was begging. \"Your cousin is just outside listening to us!\"\n\nHe slid his tongue over her clit, and her hips jerked up to meet him as he sucked at her. He licked and slid his tongue into her moving in and out in such a rhythmic motion she was closing in on the orgasm her body wanted. And then he stopped leaving her teetering on the edge of oblivion.\n\n\"What do you want, Marcella?\" he asked as he climbed up her body and settled his hips between her legs.\n\n\"You,\" she said on a breath. \"I want you and this, and everything you want, just maybe not everything right now,\" she admitted, her brain whirling with the truth of the moment. \"What I want right now, though, is the orgasm you just stole from me!\"\n\nHe toyed with her nipple and looked directly into her eyes as he thrust inside her in one long slow movement before pulling back and beginning to pound into her forcefully, hard and fast. She gasped and arched against him. She could feel him moving deeper and harder inside her. She rocked her hips, keeping up with his pace, her legs wrapped around his waist, her hands on his shoulders.\n\nHe felt her body so tight around his feeling her giving herself freely. He almost lost his shit right then. She was so tight and so wet he thought he would lose his mind as he kept moving harder and faster, and then she cried out her elusive orgasm. He felt her stiffen around him, and he dimly heard her calling his name as he thrust deep one last time as she arched upward into him, and he let go of all restraint as he felt everything drain out of him.\n\nHe collapsed beside her, breathing just as hard as she was. His face buried in her hair, he nuzzled her shoulder. All he could think was that he didn't want to go to the meeting his cousin had come to get him to attend. He just wanted to stay here with this loving and softer version of Marcella.\n\n\"Hey,\" Marcella said softly. \"Don't you have somewhere to be?\" she teased, rolling to her side to face him.\n\n\"I don't wanna,\" he groaned and pulled her on top of him, wrapping his arms around her and kissing her.\n\n\"I think your family already hate me enough for all the trouble I brought them, don't make me the reason you start ignoring your family duty,\" she teased. \"Maybe I shouldn't think about this quite so much. There is plenty of time to convince me of that happily ever after you want so badly. But, for now, maybe we should just enjoy each other and take it for what it is right now? I'm here, and I have no plans to leave, at least not today, especially when you haven't fed me yet.\"\n\n\"I imagine there is a whole kitchen full of food there,\" he chuckled.\n\n\"It's not the same as having you serve me as you did up in the treehouse,\" she grinned. \"That was pretty hot!\"\n\n\"Come with me then, and I'll make us dinner when we get back,\" he bargained just before another cart pulled up downstairs, making them freeze again.\n\n\"I doubt he's dressed yet,\" Pietro warned the newcomer.\n\n\"Put some pants on, Noah Vivienne is coming up with Olivia, and you need to get your ass over to the Athenaeum,\" Gideon called up, and before they could even move, there were footfalls on the stairs. Noah picked up Marcella and pulled her into the bathroom, laughing as they hid from their guests.\n\n\"Tell me what you want?\" Noah urged as he pulled on his pants. \"Do you want to stay here with the girls? Do you want to come with me? Do you want some time alone?\"\n\n\"You'd let me stay here unsupervised?\" she asked, having been used to not being left alone in case she ran again.\n\n\"Trust goes both ways, as you pointed out. So, if I want you to trust me, I have to give you that same trust and honesty,\" he said reasonably, showing her how serious he was about stopping all the games they had been playing with each other.\n\n\"The girls are fine. I've been a pretty crappy sister and friend lately, so I guess I owe them some time to scold me,\" she sighed.\n\n\"If you're sure,\" he nodded and slipped into the bedroom to gather her some clothes while she washed up as best, she could at the sink he had just vacated. \"We're coming out just a few more minutes,\" he said when faced with the two women in the living area watching him through the open bedroom door. \"She's going to have a quick shower, so make yourselves at home,\" he slipped back into the bathroom.\n\n\"Shower and feel comfortable,\" he kissed her and smiled. \"I'll be back as soon as possible, and if your good, I will even wear an apron while I make you dinner,\" he winked.\n\n\"Go to your meeting. I will be fine,\" she said, knowing he would tell her what happened when he returned.\n\nNoah slipped out, grabbing his shoes and a clean shirt before walking into the living room and taking a seat for a minute to put his socks on and lace his joggers\n\n\"Don't scold her too much. She's already beating up on herself a lot. Konrad's deceptions have shaken her a lot which is why I think we saw the different sides of her come out more,\" Noah warned.\n\n\"I understand,\" Vivienne said, \"Trust me, Gideon has warned me to leave my doctor coat at the hospital while I am here. We just want to talk baby showers and wedding plans,\" she smiled.\n\n\"And maybe a little bit about my book and Jessa's boys,\" Olivia added.\n\n\"Just don't break her,\" he said thoughtfully. \"She's more fragile than she seems. Call me any time for any reason, okay?\"\n\n\"We will. Don't worry so much. It will be fine, we promise,\" Vivienne reassured him as Gideon stepped into the room.\n\n\"We gotta go, little brother. Don't make me call Dad to move your stubborn ass,\" Gideon threatened with a smile.\n\n\"I'd call you on that, but you would do it, and then Dad would gloat all day,\" Noah sighed and stood up, looking back towards the bathroom where the shower still ran and sighed.\n\n\"Let's go then. The sooner we do this, the sooner I can come back,\" he grimaced.\n\n*****\n\nMarcella slowly finished her shower and dressed, considering the two women she knew waited for her in the living area. She had so many questions about them and their lives, and for the first time, it really hit her that everything she had done to keep them safe and protect them had only alienated her from them. She knew nothing about her sister's plans or what had happened with the AFP after Hermione's was raided. Konrad had told her Olivia could already be married. Just the thought of missing that event had devasted her at the time. She'd been a horrible friend to Vivienne, who she knew was suffering through the early stages of her pregnancy. Still, neither she nor Gideon had scolded her for the extra stress she had caused them or even slightly withdrew their friendship from her to protect themselves. Instead, they had come to Adelaide to help her, and she admitted, to support Noah.\n\nOnce dressed, Marcella made her way into the living room, not exactly contrite and ready to apologise but at least ready for them to scold her without reacting badly. Instead, her tummy growled, and she consoled herself that the noise was due to lack of food, not nervousness with the two women she felt closest to.\n\n\"Hey, sorry about that. It's been a long day. Have you checked out if there is food and drinks in the kitchen? I'm starving, so I hope something is in there,\" Marcella said as she walked through the living area straight to the kitchen, avoiding looking at either of the women directly.\n\n\"If it's anything like our place, I'm sure Emma and Beverly organised people to stock it. They are pretty awesome friends to have in this family,\" Vivienne said, coming to her feet and following Marcella through to the kitchen.\n\n\"They were teaching me to cook before all of the drama with Konrad,\" Olivia said. \"If you can believe that,\" she gave a little laugh.\n\n\"I guess Mama didn't do so well at teaching either of us,\" Marcella admitted, then gasped and covered her mouth, making both women snap their looks to her. \"Ursula Zia! I never went to pay my respects, and that's the least that woman deserved for standing up to Papa for me,\" she said sadly. \"I was going to say I got lucky when I moved in with Zia Ursula. She taught me how to feed myself as well as sew and mend my favourite outfits when money was so tight for us.\"\n\n\"I wasn't interested enough to find an Aunt to teach me,\" Vivienne admitted. \"I sort of regret that now,\" she held a hand over her belly. \"I think I would like to cook for the little one rather than give him jar food all the time.\"\n\n\"Pfft, that stuff is nutritionally regulated. So, you'll be fine besides I bet Beverly and Emma would like nothing more than another reason to hold a baking bee or whatever,\" Olivia waved her hand. \"On to more important things like me!\" she laughed. \"But seriously, I know Genesis wants the whole big white wedding in a church with a priest and all that, but I just don't think I can walk down an aisle again,\" she sighed.\n\n\"You know that man would marry you in a registry office with strangers as witnesses if that was what you wanted,\" Vivienne grinned. \"I don't think either of you gets just how real this curse of theirs is. I mean, Gideon physically collapsed when ours fell into place,\" she admitted. \"From what Gideon said, Genesis was checked into the hospital to have cardiac investigations after he first saw you, Olivia! And you have no idea how pale and sick Noah looked every time you got hurt or disappeared on us all.\"\n\n\"Noah says it's different for him. Something about empathy for the family and being like Dominic,\" Marcella frowned, trying to remember the exact words he had used just that afternoon. \"That's why he didn't realise it was me at first, or so he says,\" she mused as she dug through the refrigerator and cupboards in the kitchen, deciding what to make when Vivienne's phone chimed in a clear melodic tune. \"I'm guessing we are too far away from anywhere to order pizza, huh? So we'll make toasted sandwiches then. That's nice and quick,\" she said to Olivia as Vivienne moved away to answer her call.\n\n\"Dinners on its way, apparently Gideon doesn't want me to starve his son, and you know this family,\" Vivienne laughed lightly while still holding her phone against her ear.\n\n\"Great, so snacks?\" Marcella offered overly brightly at the thought of having to face anyone else in this family.\n\n\"What's wrong?\" Olivia asked immediately, noting the tightness in Marcella's smile and voice.\n\n\"I just thought I would have more time before I had to face Noah's family after getting him and Zanto shot,\" she grimaced.\n\n\"You think they blame you?\" Olivia asked wide-eyed.\n\n\"Blame her for what?\" Vivienne asked, coming closer with her phone still in her hand. Vivienne looked at Olivia, who only shrugged and turned to face Marcella.\n\n\"Everything,\" Marcella sighed. \"Nothing! I don't know. I just hoped for a little bit of time before having to face the people who got caught up in all the shit that seems to revolve around me.\"\n\n\"Geez, self-absorbed much? Do I need to remind you why you came to Darwin and why you went to find my boat and Hermione's? Let's just park that giant ego of yours and realise none of this is about you. I was the catalyst who started it all. Even Vivienne wouldn't have met Gideon if it wasn't for the fact Gen asked her to help me! You're welcome, by the way,\" she grinned at Vivienne, who listened open-mouthed and started to laugh at the last statement.\n\n\"The more you come out of your shell, the more in awe of you I am,\" Vivienne laughed. \"Thank you,\" she laughed even more as she took in the stunned look on Marcella's face. \"She's got a point, Marcie. It's all pretty much her fault. However, I am more inclined to blame Remington even though he is dead.\"\n\n\"Yeah, let's blame him! There you go, Marcie, you are absolved of anything to feel bad about with this family because I guarantee you, they blame Remington and the Suebi for everything and now Konrad as well,\" Olivia said as if it was the most reasonable thing in the world.\n\nMarcella made an antipasto board while listening to the two women. Next, she poured a glass of wine for herself and Olivia and a juice for Vivienne. Then, content to stay where they were, she pulled one of the bar stools around to the end of the peninsula bench to sit with her closest friends. She didn't want to lose either of them by running away, but she also didn't want to stay and become part of the mammoth family, who were just as buried as every other table in arcane rules and misogyny.\n\n\"So, about my wedding, because we all know this evening is about me,\" Olivia grinned.\n\n\"I thought we were going to talk baby shower stuff. You two are the closest thing I have to family here who could do it for me because I don't want to have to host my own baby shower. How awkward would that be?\" Vivienne put in.\n\n\"Okay, it can be a little bit about you, but Marcie is my big sister and the person I always had to tell me what to do,\" Olivia conceded.\n\n\"A fat lot of good that did you,\" Marcie snarked.\n\n\"You and I both know I would be dead by now if you hadn't have done everything you did back then,\" Olivia said softly, looking directly at her sister. \"So, you kept me alive, and now it is your responsibility to help me with that life. So help me with my wedding dilemmas and plan Viv's baby shower.\"\n\n\"I don't have the skills for either of those things,\" Marcella shook her head.\n\n\"We have an expert party planner as a sister-in-law. So you just have to pick decorations and food and maybe games for the shower. I'd like it to be a surprise, please,\" Vivienne smiled widely.\n\n\"And do you have a wedding planner on stand-by?\" Marcella turned to look at Olivia.\n\n\"Me? Gosh, no! I just want advice on the whole big wedding, church, priest, aisle, thing,\" Olivia grimaced. \"If I can't get past that horror scene, there won't be a wedding which is fine with me, but Gen really wants it, and I hate disappointing him when he is so good to me, and all I have brought to him is drama and a sister who wanted to tear his head off initially. Thanks for not doing that, by the way,\" she grinned at Marcella.",
        "\"It could still happen if he tried to make you do something that you have good reason to be traumatised about,\" Marcella shrugged and turned at the sound of a cart approaching the slightly out of the way beach house.\n\n\"That will be the food,\" Vivienne stood up with a hand to her mouth. \"And I forgot to preheat the oven.\"\n\n\"No, you didn't,\" Marcella winked and quickly turned to put the oven on high to preheat, making the three women laugh as they went out to help carry the food inside.\n\n\"Sera!\" Vivienne greeted in surprise. \"I wasn't expecting you here. Let me help.\n\n\"Oh no, no, no,\" Sera warded Vivienne off. \"You don't get to lift anything. My other two sisters-in-laws didn't have my other two brothers threaten me so they can help me carry things,\" she laughed.\n\n\"Ooh, that's possible? Do you take long-term, long-lasting threats? I would like to be immune from menial labour,\" Olivia giggled.\n\n\"Probably, Gen was always the meanest of the three of them. Probably because we are closest in age,\" she shook her head.\n\n\"Well, I'm happy to help,\" Marcella said, grabbing a crate and pulling it from the back of the cart before marching upstairs.\n\n\"Goodie, I'll get Gen onto that tomorrow,\" Olivia giggled and followed her sister's lead as Sera took the last bundle of food from the car and followed the women upstairs.\n\n\"Did you ask her yet?\" Sera asked Olivia once the girls had taken seats at the dining table with dinners of alfredo chicken and bacon pasta and garlic bread.\n\n\"I was getting to it, but the baby Mama over there kept hi-jacking the conversation,\" Olivia complained.\n\n\"Oh, so you asked her then?\" Sera inquired gently of Vivienne.\n\n\"Asked, demanded, it's such a fine line, but she knows she is responsible for the baby shower and that you will help her with the details,\" Vivienne said as if proud of herself that she had just gotten what she wanted from Marcella without an argument.\n\n\"That's great. I hope we can find time while we are all still here to talk about the details,\" Sera said enthusiastically, looking at Marcella, who was scowling at Vivienne, which only made her laugh. \"Don't worry, it will be pretty painless, I promise. I'm more worried about the bride to be ever agreeing to any setting for the wedding. There's no rule that you have to have a big church wedding. He said he would marry you in the parking lot of McDonald's and order happy meals for the reception if that was what you wanted. He just needs to know what you want,\" Sera pushed.\n\n\"You can't blame her for being traumatised by the last time she was pushed to a church wedding,\" Marcella said. \"But I do have an idea that might negate the trauma. I am pretty sure no one would agree to it, though,\" she said, looking as if prepared for them to all discard the idea before it was even out of her mouth.\n\n\"You do?\" Olivia looked sceptical.\n\n\"Okay, so imagine the church, beach, property, the prettiest place you can think of to get married. Maybe a big sailboat and have a captain officiate?\" Marcella started.\n\n\"Do you think we could do that? On a boat, I mean?\" Olivia asked. \"Would there still have to be an aisle?\"\n\n\"It's your wedding, and by all account's Genesis is just happy to be the groom. He doesn't care where, how or why,\" Marcella laughed. \"So, I say we make him and his best men walk up the aisle to you rather than the other way around. You can stand at the top with the priest or captain or whoever, and Genesis can come to you rather than make you walk up the aisle and freak out from the memories.\"\n\n\"I love that!\" Sera enthused. \"Let's do it! Gen won't care as long as she is there and ready to say I do, I promise. Oh, and I could be his flower girl!\"\n\n\"It could work really well, and I have to admit I wouldn't mind watching Gideon lead Gen up the aisle,\" Vivienne chuckled.\n\n\"I never even considered that,\" Olivia blinked at Marcella. \"Do you think we could?\"\n\n\"There is no rule against it, especially if you opt for an outdoor wedding or a ship. It's not like you have to decide right now, though,\" Marcella said softly, unsure what to make about the enthusiasm and support for her idea's. She was so used to having to justify her thoughts that she wasn't sure what to do with this agreement.\n\n\"But if I don't have to walk up the aisle, we could have it at Gen's family chapel like he wanted, maybe?\" she asked.\n\n\"I don't see why not, and you've got nothing to lose by asking the question. Sera could even do that for you, so it could be a surprise for Genesis when you decide if you like. We could go and check it out and make sure it's not too much for you to cope with on the day. We would also have different flowers and decorations, all of that stuff to make it as different as possible to all those horrific memories of the wedding with Remington,\" Marcella said, not shying away from the subject as she guessed most others would be.\n\n\"Sure, we could do that tomorrow. The chapel is here on this property,\" Sera offered. \"I even think Father Benedict is still at the gathering to ask.\"\n\n\"Wow,\" Olivia shook her head. \"Just like that, you came up with a plan of action. Of all the shit we have both had to overcome in our lives, this seems almost trivial in comparison. Especially now that you are here talking to me about how to overcome yet another hurdle with something as simple as changing positions or flowers and music,\" Olivia said quietly. \"But that's the point, isn't it? We survived because of you. You always manage to save me even from myself,\" she reached over and grabbed her sister hugging her tightly. \"Don't leave me again, please,\" she whispered fiercely into Marcella's ear, surprising her sister.\n\n\"Amazing now do me,\" Vivienne interrupted the moment seeing Marcella's face cloud over with whatever Olivia whispered. \"I don't want to find out the sex of the baby, but Sera says everyone finds out now, and it's fun to do the gender reveal as part of the baby shower, so the Daddy feels included,\" Vivienne explained.\n\n\"Fuck Gideon! He had the fun of putting that baby in you. You have to carry it and push that bowling ball out on your own. At this point, his rights are limited to ensuring your comfort and happiness while you cart around his little ninja who is practising parkour with your internal organs,\" Marcella laughed sadly. She mightn't be able to have kids herself, but that only made her more determined to protect Vivienne's right to have hers the way she wanted. \"Sera, your job is to back up the mother-to-be not put extra pressure on her even if the father is your brother.\"\n\n\"I get it,\" Sera said as if surrendering. \"I was just giving Vivienne all her options and speak of the devils,\" she tilted her head. \"That will be my brother's, so I should go,\" she said, getting up and gathering the debris of all she had brought with her.\n\n\"I know what you were doing tonight, and while I appreciate it, you can make your own decisions without me, Vivienne. You are a brilliant and capable woman and I am not that fragile that you have to keep me busy and engaged,\" Marcella warned Vivienne, including Olivia in her scowl but to a lesser extent.\n\n\"You, Marcie, are the best friend I have ever had aside from my brother. Pardon me if I want you to help me plan this and be excited for and with me,\" Vivienne said, her eyes tearing up as she too took Marcella by surprise, hugging her fiercely. \"It's all pretty scary, if I am honest,\" she whispered. \"Giving birth.\"\n\n\"Okay,\" Marcella said, feeling the ache of held back tears press on her eyes. \"I'm here for you, whatever you need, okay?\"\n\n\"I just need to know your close by so we can have nights like this when the boys have to go to family things. So I want to come over or call you and tell you good, bad, scary and exciting things. When I found out I was pregnant, I only wanted to tell you, aside from Gideon. Well, you and my brother,\" she admitted.\n\n\"Okay,\" Marcella said again, feeling her throat tighten. No one had even been close to scolding or berating her tonight. Instead, they had carried on with life, as usual, expecting her to weigh in on the most important issues in their lives because they wanted her in their lives. It was becoming overwhelming for her to accept that this easy friendship and sisterly love could be hers if she could trust that it was real.\n\n\"Seraphina, what did you do?\" Gideon rumbled, seeing his wife's misty eyes as Sera packed up the last of the meal around her.\n\n\"Nothing! I did nothing. Marcie fixed everyone's problems with no help from me. But I will say that it looks like Gen will get his fantasy wedding if our new plans work out the way we want,\" she said, a little pleased with herself.\n\n\"So much for that secret surprise,\" Olivia groaned.\n\n\"Oh shit, sorry!\" Sera immediately put a hand to her mouth. \"It's just such a great idea that I'm excited.\"\n\n\"You organised my fantasy wedding?\" Genesis asked Marcella with a raised eyebrow and a half-grin.\n\n\"Not even close,\" Marcella gave a strange half laugh half choking sound as her throat constricted even more.\n\n\"Liar,\" Sera accused, but I won't say anything else except that Gideon should be afraid of the advice she gave Vivienne,\" Sera let out a peal of laughter and disappeared through the door calling out. \"I'll see you all tomorrow.\"\n\n\"She's not invited to any more meetings,\" Marcella grumbled and looked at Gideon, straightening her shoulders. \"Look, big guy. You had all the fun putting that baby in your wife's belly, so now your only job is to make sure she is happy and healthy. It's as simple as that. If she doesn't want to find out the gender of the baby early, then don't find out! It's not rocket science. She is always right!\" Marcella let her irritation push her overwhelmed emotions aside. There was a moment of silence as everyone looked at her then Gideon burst out in a roar of laughter.\n\n\"It is so good to have you back, Marcie,\" he said and wrapped his big arms around her in a bear hug, lifting her from her feet. \"I promise you that her happiness will be my every thought from this point on,\" he grinned as he let her go.\n\n\"So, do you have advice for me too?\" Genesis eyed his soon to be sister-in-law.\n\n\"Not advice but, what size shoe do you take? We may have to get pumps specially made to match your gown for the wedding, and that could take a while and affect our timeline,\" Marcella said with a perfectly straight face making everyone go silent and stare at her before Olivia couldn't take it anymore and burst out laughing.\n\n\"Oh my god, your face,\" Olivia giggled. She curled against Genesis side and continued to laugh as he eyed Marcella.\n\n\"Eleven, and I look much better in Ivory than stark white,\" he said equally seriously, ignoring Olivia. \"As long you get her to the priest on time, I don't care what I wear or where it is.\"\n\n\"Told you,\" Vivienne said in a childish sing-song voice to Olivia.\n\n\"This is great, but you all need to get the fuck out of my house. It's late, and there are things I need Marcie to fix for me,\" Noah chuckled.\n\n\"Ick! Too much information,\" Olivia wrinkled her nose.\n\n\"Let's go. They are here and safe now, so we can see them whenever we want,\" Genesis smiled, picking up Olivia and heading for the stairs.\n\n\"I'm tired,\" Vivienne admitted, and Gideon followed his youngest brother out the door.\n\nNoah held Marcella to his side as they stood on the deck and watched their brothers and sisters drive away. She felt stiff, and he could see that she was having trouble keeping her emotions under control while the others were there. He just wasn't sure if it would be anger or anxiety that he would face when he probed.\n\n\"So that went well, it seems,\" he said gently.\n\n\"Yeah,\" she shrugged. \"Did you manage to eat something?\" she asked.\n\n\"Mmhmm,\" he nodded and took her hand. \"But not what I was craving,\" he led her into the bedroom again, knowing there would be plenty of time for them to talk."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "dominance",
        "submission"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-34"
}