{
    "title": "The Auction Pt. 01",
    "pages": [
        "It started when I attended a benefit banquet a couple of years ago with my husband, Michael. He's a partner in a prestigious law firm in Seattle, and it was their annual charity auction where everyone one-ups each other for the most significant donation. I accompanied him because he is a partner in the firm, but I find it boring with all the legal talk around the table. I've been attending these functions since he started at the firm just over twenty-five years ago. That year we sat with three junior partners and their wives. I hadn't met them before, so I thought the talk might be interesting. Little did I know that the auction would change my life.\n\nI was delighted when we got to our table to discover one of the couples were lesbians. I knew the firm had been active in diversification, so this was a pleasant surprise. They were both relatively young and gorgeous, which at first made me feel old. The other two couples I'd met before at other corporate events I'd attended. They were in their mid-thirties and friendly people. With the newcomers, I hoped, we'd talk about anything but the legal world. It was refreshing to get to know Cassidy and Jillian during dinner. By chance, I sat next to Cassidy, the wife of Jillian, the junior partner.\n\nCassidy had dressed in a short black bodycon dress which showed off her impressive cleavage and toned legs. She also wore opera gloves which I thought was a bit of overkill. Her dark brunette hair was parted in the middle and held in a tight bun. Around her neck, she wore a gold locket which caught my eye as she moved. She had a mischievous smile that she'd flash my way when we talked, making me think she was planning something. Jillian, her wife, was much more conservative in her attire. A grey pants suit tailored for her svelte figure. Her long straight blonde hair lay neatly down her back and an infectious smile.\n\nI felt like a plain jane in my long sleeve black dress, pageboy cut, and very little make-up as I sat next to them. But then again, I had at least twenty years on them.\n\nThe dinner was the usual chicken, vegetarian, or beef which was very well prepared and presented. The conversation around the table ebbed and flowed as we ate. Most of the questions were aimed at Jillian and Cassidy since Jillian was reasonably new to the firm. We learned how they met in college and how Jillian had selected to work for Michael's firm. Cassidy taught kindergarten at a local private elementary school. They seemed both seemed sweet and totally in love.\n\nAfter the dinner plates were cleared, the auction began. I noticed one particular item I'd thought about bidding on. It was a pair of premium orchestra seats and backstage passes for a performance of Madame Butterfly a couple of months away.\n\nI'm not a huge opera fan, but I love that particular one. Our conversation at the table began to center on the bidding and who was doing the bidding. Since Cassidy didn't seem that interested in it, her focus fell on me. I got to see their puppy on her cell phone. Gretchen Marie was a Bernese Mountain dog and the cutest thing. She was ten months old and just adorable. Cassidy scrolled through the pictures as I watched, smiling at her pup.\n\nI volunteer at the humane society as a dog walker from time to time, so this was a real treat. There were pictures of Cassidy or Jillian in some rather revealing clothing in between images of the pup. At first, Cassidy would quickly scroll past those apologizing as she did. I didn't say anything to Cassidy but seeing them dressed as they were was interesting. I think after about four or five pictures, Cassidy noticed me gawking slightly, and she seemed to linger on them a bit longer than Gretchen's. I could feel myself getting warmer, which I attributed to the wine as Cassidy showed more of Jillian and herself on a tropical vacation dressed in tiny thong bikinis.\n\nAfter a few minutes of looking, she put her phone away, and we talked about dogs. By this time, I'd had at least three glasses of wine. It wasn't going to be too long before my opera was up for bid, so I excused myself to use the ladies' room. I asked Michael to bid if I didn't make it back in time. He was busy talking shop and nodded that he would.\n\nI hurried to the ladies' room, figuring Michael was preoccupied and would miss bidding should my opera come up.\n\nIn the ladies' room, I'd just walked out of the stall and noticed Cassidy at the sink touching up her lip gloss. She looked at me via the mirror, smiling. I had a chance to look over her toned young body with a perfect ass. I was in reasonably decent shape, but she was amazing. Oh, to be twenty years younger, I thought to myself.\n\nI began washing my hands as she finished primping. She then turned to me as I dried my hands, a sly grin on her lovely face. I tossed the towel in the tiny trash opening on the countertop then turned to her. She then wrapped an arm around my neck and one around my waist, pulling me to her. She kissed me full on the lips as the hand at my waist slipped down to cup my ass cheek.\n\nI was shocked, but her lips felt so delicious against mine. I was surprised and didn't fight it, and she thought I was enjoying it, so she slipped her tongue in, searching for mine. I must have moaned out of instinct or something as her hand massaged my ass, pulling me tighter to her. Her tongue teased mine as we stood there, me in a daze, and Cassidy focused. For some strange reason, I thought about wrapping my arms around her. But getting caught kissing her had popped into my mind. I did let her finish, glad that nobody was with us or had entered the room. When she did finish, I was breathless. I'd never been kissed like that before.\n\nShe just smiled, looked into my eyes, and told me she'd wanted to do that all evening. I was speechless. She then suggested I clean her gloss off my lips as she giggled, leaving me standing there to figure out what had just happened. I watched like a deer caught in the headlights as she wiggled her tight little tush looking back with a wink.\n\nI managed to gain my composure, wiping her lip gloss from my lips as I thought about what had just occurred. I could feel a warmth between my legs which was something that had never happened around a woman. My heartbeat had tripled, and my face was flush. I went back to my table, acting as calmly as I could. Cassidy practically ignored me, but Micheal noticed my red cheeks. I told him it was the wine and that I'd drink water the rest of the night. He smiled, returning to his shop talk with the junior partners.\n\nMy sex life with Michael was reasonably good. He'd developed Peyronie's disease about a year earlier, and intercourse had been sporadic at best. We were still intimate, but something was lacking in enthusiasm on his part because it could be painful. He'd seen a doctor about it and was contemplating surgery or medications. That passionate kiss from Cassidy sent me into a tailspin; remembering what I was missing, I rationalized.\n\nI looked at the program, thinking my auction was about to start. Then much to my surprise and dismay, it had been completed when I was recovering in the ladies' room. I asked Michael about it, and he had been too busy talking to bid. It was then Cassidy tapped my shoulder. I turned to look at her, and she was grinning like a Cheshire Cat and told me she'd won it. My jaw dropped; I started to say something until Cassidy stopped me in my tracks.\n\nShe smiled, \"Kathleen, you weren't here, and I know you were so excited about it, so I talked Jill into letting me bid on them. You're my date if you want to be. Jill has a weekend retreat with the partners or something. If you don't want to go, say so, and I'll find someone else. I love opera, so dramatic.\"\n\nI thought for a second before speaking. I was mad that Michael had just sat there yet glad that I was going to go.\n\nPutting on a false front, I beamed, \"Thank you, Cassidy. That's so thoughtful of you. I must have misjudged my timing for the auction. I'll gladly pay you for my ticket.\"\n\nShe giggled as she patted my thigh hidden from view, \"It's fine. Jill doesn't care for opera at all, and it will be nice to go with a fangirl for a change.\"\n\nI swallowed hard, \"Yes, it will be nice. I didn't know you liked opera that much. Michael hates it, and now I know he'll be at a retreat that weekend, thank you.\"\n\nThe rest of the evening continued with more small talk as Cassidy randomly traced my leg with her fingertip. She was very discrete. I hoped nobody noticed my goosebumps as she did it.\n\nMy heart was racing the entire remainder of the auction. I've never been teased by anyone like Cassidy was teasing me. She was married too! She had me confused and anxious at the same time, which for me, is rare.\n\nI felt a constant tingle between my legs, unsure why she had this effect on me. I'm not into women despite my reactions and Cassidy's flirting. Then, when I thought it would subside, Cassidy would tease me with a fingertip, pat my thigh or rest her hand on my leg. She was good at the flirting game, and I was a mess trying to remain calm as she toyed with me. I'm not a drama queen and didn't want to make a scene, so I stayed as composed as I could, counting the minutes until we could leave.\n\nWhen we did get up to leave, both Cassidy and Jillian hugged me. Cassidy whispered that she'd like to see me again, which made me a bit more flustered.\n\nOn the way home, Michael and I discussed the evenings' activities. I was still a little put out that he didn't bid for me. Even though he didn't seem to mind me going with Cassidy, I felt he should have paid attention. I guess it was his way of getting out of a trip to the opera.\n\nWe went to bed with Michael falling fast asleep. I was wound up thinking about Cassidy and the ladies' room kiss, along with her flirting. I found it unsettling yet arousing. I'd never had the remotest thought about being with another woman, but Cassidy did something to me. My lack of intimacy with Michael didn't help. I needed that closeness and, of course, an orgasm with someone, not with my fingers. I missed the long sloppy wet kisses, the feel of another body against me, and the joy of sex filling my senses.\n\nLaying in the dark, basically alone, I did something out of the ordinary. I masturbated thinking of Cassidy. Well, masturbating isn't abnormal for me; I've been doing it more often since Michael became afflicted. But, to picture another woman is not my norm. I couldn't get Cassidy out of my mind, young, voluptuous, and desiring me. Straight, mature Rachel Williams. I was flattered and horny. She probably knew how to please a woman in a multitude of ways I'd never experienced. It gave me goosebumps.\n\nI imagined Cassidy doing a slow striptease as I watched. She was slowly removing those gloves, tossing one at a time at me, and then kicking off her heels, letting them fly across the room, not caring where they landed. Dressed only in her black bodycon, she began inching it down her perfect frame. I imagined her dancing slowly closer to me then backing away to taunt me. My breathing was increasing as she smiled, watching me finger myself.\n\nAs each article of clothing disappeared, the exploring of my vagina became more intense. I kept watching Cassidy move seductively towards me with lust-filled eyes as the dress left her body, revealing her full, firm breasts. I heard myself moan then listened to hear Michael snoring away. Then back to picturing Cassidy crawling onto my bed wearing only lacey black boy shorts as I rubbed my clit with increasing ferocity. She hovered over me as my free hand became her teeth clamping down on one nipple, tugging it and stretching it as I moved closer to my climax. I looked over at Michael once more to ensure he was still sleeping since his snoring had ceased. Thank goodness he'd rolled over onto his side, facing away from me.\n\nI continued imagining Cassidy naked over me. She had a hand between my legs as she suckled one nipple. Her breasts pressed against my naked body sent me over the edge. I curled my fingers inside me as I bit my lip so I wouldn't cry out. I managed to bring myself to the most intense orgasm I'd had in a very long time. It felt good and odd at the same time, leaving me wondering what I might be getting myself into.\n\nAfterward, I lay panting, thinking about Cassidy and Jillian, wondering if Jillian knew what Cassidy was doing. Then the image of them sharing me led to another session of fingers between my legs and an even more intense climax. After that second time, I lay staring into the darkness as my heart slowly returned to its regular beat, and I caught my breath. If I could do that to myself with my imagination, I could only wonder how the real Cassidy and Jillian might be. That little vixen had awakened my curiosity. I wondered if it would ever really happen and how I would feel if it did.\n\nThe next few weeks were routine; I did my volunteer work, had a couple of meetings with the boards of the non-profits I'm on and thought about Cassidy. I think I masturbated to her and Jillian at least ten times in the few weeks after the auction, and each time was just as intense and delicious. I think Michael was glad I wasn't pestering him for sex, yet he didn't say anything.\n\nI decided to pick Michael's brain to see what he knew about my fantasy couple. I used the excuse of the opera date to find out a little more about them. Michael was pretty vague since he doesn't interact that much with junior partners. He did mention he'd give Jillian my number to pass on to Cassidy if I wanted.\n\nI remained aloof, telling him if he remembered, that would be fine. Inside I was shaking like a leaf, wondering if it was a good idea to let Cassidy into my life before our 'date'.\n\nIt wasn't long before Cassidy texted me, thanking me for accepting her date and letting Michael pass on my number. Our date was still a month away, but she wondered if I wouldn't mind getting together for coffee sometime. She worked weekdays teaching, so we scheduled a Saturday morning to meet and talk.\n\nWe met at a small coffee/bakery shop famous for its cinnamon rolls. Cassidy was waiting for me, having arrived early, sitting at a small table with two cinnamon rolls in front of her. My god, they were huge. I assumed one was for me, or she was going to take it home for Jillian. I waved to her before ordering my coffee. She smiled, pointing to one of the rolls mouthing that it was for me. I nodded, then turned to pay for my drink. I drink only black coffee, so the barista didn't have to fuss with my choice.\n\nCassidy was beaming as I approached her, drink in hand.\n\nI sat down, setting my coffee off to the side, \"Thank you for the roll. It looks amazing. I'll have to get a doggie bag or something to take most of that home.\"\n\nShe grinned, \"I know, right. These things are monsters. Extra cardio this week for me. Thanks again for everything. I wasn't sure how you'd react after our ladies' room encounter.\"\n\nI blushed crimson, I could feel it, and a surge of arousal accompanied it, \"That was a huge shock, Cassidy. We're both married, and I'm maybe twice your age or close to it. What prompted you to do that?\"\n\nHer hand rested on mine, her finger making small circles as we sat talking, \"I told you. I'd felt like doing that all night. You're gorgeous, and I couldn't resist. Jillian and I have an understanding. I won't go into details here, but we do entertain ladies once we both know them. So that you know, it has nothing to do with Jill's work environment. I wanted to make that clear. Right now, she knows nothing about the kiss, and it will stay that way.\"\n\nCassidy paused, \"You liked it, didn't you. I could tell you were shocked. Most women who don't like it react immediately. You didn't. I take it you've never been kissed like that before by anyone.\"\n\nI was watching her finger tracing the circles on my hand as she talked. It took me a moment to realize she'd stopped and was waiting for an answer.\n\nI looked at her as she continued playing with my hand, \"No, I've never kissed like that. It was completely spontaneous. I didn't know what to do, to be honest.\"\n\nShe giggled, \"But you liked it, didn't you, Rachel? You wanted more, I could tell. I've been kissing girls since I was twelve. I know all the reactions, and yours was very positive despite your hesitation. You're curious and a bit afraid, aren't you. Afraid you might enjoy it, right?\"\n\nI sighed; she was right. A part of me enjoyed it.\n\nI admitted she was right, \"Yes, you did excite me. As I said, nothing like that has ever happened to me. Part of me wants to explore more. It's the guilt that comes with cheating that scares me. I do love Michael, and we've been married for over twenty years. I couldn't throw that all away for a fling.\"\n\nCassidy replied, \"You wouldn't throw it all away. We could get to know each other first. I'm not one to make one-night stands anymore. Jill and I are happy with our relationship. If you're curious and want to be friends at some point, we may satisfy that curiosity. Regardless, I'd like to be friends at least. I don't want to sit through Madame Butterfly with someone who loathes me.\"\n\n\"You are direct, Cassidy. I'll give you that. Yes, I'm a bit curious now. I don't want to cheat on Michael even if he doesn't find out. I'll feel guilty more than I do now.\"\n\nShe took my hand in hers, \"Why do you feel guilty? It was only a kiss, and I initiated it. There's nothing to feel guilty about Rachel. Let's not talk about it anymore. Let's get to know each other, shall we? I do recall our conversations at the auction. You're big on charity work, right?\"\n\nI eased my hand from hers as we began getting to know each other on a platonic basis, \"Yes, I told you about a couple of them.\"\n\n\"Yes. The animal shelter, along with the blood bank and the food bank. I was wondering do they give tours to kindergartners? If not, that's fine. I'm constantly looking for places to take the kids to give them a broader perspective on things.\"\n\nWe sat and talked, nibbling away at the massive cinnamon rolls delighting in how good they were. I contemplated a second coffee, but that would keep me awake half the night.\n\nI found Cassidy to be very charming, caring, and a delight to talk with. We did have quite a few common interests, and I could see us becoming close friends if given a chance. There was that underlying sexual tension, mostly on my part. I wanted to explore her body and have her explore mine. I would try to keep our relationship out of the bedroom, but at some point, I'm sure I'd cave and discover what being with a woman was all about.\n\nIt was difficult not to think about Cassidy naked in bed with me as we sat talking. Occasionally, I'd feel her ankle against my shin or calf slowly moving up and down it. Her expression never changed when that happened. I think she was testing me, looking for a reaction. It was all I could to maintain my composure.\n\nAbove the table, the hand touches, smiling, giggling, and the looks she gave me. My god, that girl had the most expressive eyes. Then the clincher, she'd break off a piece of cinnamon roll and delicately place it between her lips. Closing her eyes, she'd slowly chew it. A couple of times, she had a crumb or a bit of icing on her lips and would delicately use her tongue to lick it off, then ask me if she'd gotten it all.\n\nThen the icing on the fingers. I sat mesmerized as Cassidy would slip her finger between those moist lips and suck or lick the white gooey sweetness from them. Cassidy knew precisely what she was doing to me, and she loved it.\n\nI could feel a sustained arousal as we sat talking, me fidgeting, squirming in my seat as she toyed with me. By the time we'd finished talking, I'd eaten more of the cinnamon roll than I should have. I'd come close to confessing my situation to her, although I had a feeling she knew what my condition was. Her hand on my thigh just before we left nearly sent me into orbit. She was very discrete, slowly moving it over my trembling leg to feel the warmth she'd created in me between my legs.",
        "She didn't say a word when her hand palmed my vagina. Instead, she smiled as I sat motionless, letting her feel what she'd done to me. I swallowed hard, wondering what she was going to do next. Much to my surprise and relief, she backed off, letting me catch my breath.\n\nCassidy looked at me, \"We'll have to get together again, Rachel. I'll give you a call, and we can meet when we both have more time. You do excite me, you know, and I have a feeling I excite you also.\"\n\nI stammered, \"Yes, I think that might be interesting, Cassidy. Call me, please.\"\n\nLooking back, maybe that was a hint of things to come. Delighting in the sweetness and not realizing how it would affect me long term. Yes, I'd spend a bit more time at the gym because of that roll, plus subconsciously I wanted to look good in bed if and when my seduction did occur.\n\nWe went our separate ways, but not before Cassidy stole a kiss from me out in the parking lot. She stole it because once again she took me by surprise. We were talking next to my car, my keys in my hand, when she looked me in the eyes. Her arm quickly wrapped around my body, her hand at the back of my head pulling me to her. It was quick and delicious, her tongue toying with mine ever so briefly.\n\nThen just like before, she released me, smiling as she sauntered off, leaving me dazed. My drive home was a blur. Michael was still playing golf, so a long hot shower and a lengthy masturbation session seemed like a good idea.\n\nI slipped out of my clothes as the taste of cinnamon, icing, and Cassidy's lipgloss lingered on my taste buds. I was still aroused thinking of her, and the best place I could think of for that was my bathtub. I lit a couple of scented candles before running the water in the tub. As I waited, I pictured Cassidy lounging in it nude while the warm water filled the void around her luscious body. Her eyes beckoned me, as did her index finger. I imagined her soft voice in a husky whisper asking me to join her, which I did. I entered the tub as she moved her legs around my feet, letting me sit facing her. She smiled, asking me to sit with my back to her so, I turned as she bent her knees then extended her legs over my thighs, capturing me in a warm wet embrace. She told me to lie back against her as she cupped my breasts with her hands.\n\nI laid my head back against her shoulder while her fingers tugged and rolled my nipples, making me squirm. Kissing my exposed neck, she whispered how good my body felt against hers. My eyes closed as she continued her sweet words and breast massage.\n\nIt was as if I was in heaven until the water cooled. I awoke from my fantasy with one hand between my legs and the other pulling a nipple. I continued thinking about her as I worked myself into another lust-filled orgasm dreaming of Cassidy. When I climaxed, I ran more hot water and finished my bath. My tension was relieved for the time being, but I knew it would return as soon as she called, and I pictured her again."
    ],
    "authorname": "O2",
    "tags": [
        "lesbian",
        "seduction",
        "fantasy",
        "temptation",
        "cheating",
        "lesbian sex"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-auction-pt-01-2"
}