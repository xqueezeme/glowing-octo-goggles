{
    "title": "Two Hundred Dollars Ch. 19",
    "pages": [
        "126 Dollars \n\nLaura moved through the cafeteria, eyes darting in all directions as she desperately looked for Bailey. \n\nI hope we're on for tonight, she thought, fighting to keep her teeth from clenching with anxiety. \n\nShe caught her friend's eye in the crowded cafeteria and rushed over. Unpacking a sandwich from her backpack even as she sat down, she leaned in close with a nervous expression. \n\n\"Tonight still good?\" she asked. \n\n\"Yeah,\" Bailey replied, \"Should be fine. Carson's got some Glee club thing he does on Mondays, so we'll have lots of time.\" \n\n\"Cool,\" Laura said, dropping her shoulders as a wave of relief coursed through her. \"Cool.\" \n\n\"Glad you're excited,\" Bailey raised an eyebrow, \"but it's hours away.\" \n\nShe tapped her phone and pointed the screen at Laura, showing her the time, \"2:28\". \n\nLaura sighed and took a bite of her sandwich. \n\nBailey took a moment, watching her friend chewing thoughtfully, before speaking, \"Still, I have an idea.\" \n\n\"Hm?\" Laura's mother had cultured her far too well for her to speak with food in her mouth. \n\n\"Remember what you said yesterday?\" \n\nLaura swallowed carefully before speaking, \"I said a lot of things.\" \n\n\"About gifts,\" Bailey said. \n\n\"Yeah,\" Laura replied, \"like how you can't repay Kent for the, um, clothes.\" \n\n\"I can't, true,\" Bailey agreed, \"But I could get a gift for him.\" \n\n\"Oh, right,\" Laura recalled. \"And he'll be okay with it now.\" \n\n\"Because he knows I'm not just trying to repay that other money,\" Bailey nodded, glad they'd arrived at the same page. \n\n\"What are you thinking of getting him?\" \n\n\"Well, it can't be too expensive,\" Bailey explained. \"The whole point of this is to save money.\" \n\nLaura tried to keep a smirk off her face. \n\nThe whole point of this is to turn you on by pretending it's about money, she wanted to tell her friend, to make you feel nasty because you're paying your debt with your body. If you go and spend a bunch of money frivolously, especially where Kent can see it, it'll break the spell. \n\nBut Laura, like Bailey, had no desire to break the spell, so she said none of this and tried as hard as she could to pretend she'd never even thought of it. \n\nOne of the benefits of a religious upbringing is the ability to pretend you believe things you don't and pretend you don't believe things you know are true. \n\n\"So it has to be something small,\" Laura said, \"something cheap. But still, somehow, sexy?\" \n\n\"I have some ideas,\" Bailey replied, \"when's your last class end?\" \n\n\"Four thirty.\" \n\n\"Alright,\" Bailey nodded to her friend. \"My lab starts soon and runs 'til five thirty, but if you wait for me outside the Arts library, it should be okay. The lab shouldn't take the full three hours.\" \n\n\"Where we going?\" \n\n\"Shopping.\" \n\nBailey offered nothing further before she whisked herself off into the crowd, leaving Laura on her own to finish her sandwich. \n\n============================= \n\n\"Are we taking a bus?\" Laura asked, still wondering what kind of a shopping trip awaited her this time around. \n\nBailey had managed to finish her lab even earlier than Laura had finished her class. Consequently, she'd intercepted Laura outside of the library and immediately directed her off campus. \n\n\"Shouldn't need to.\" \n\n\"No mall?\" \n\n\"No mall,\" Bailey confirmed, \"we need to keep the costs down, here, right?\" \n\n\"Oka-ay,\" Laura trailed off. \n\nAfter moving through the quad, they passed one of the engineering buildings and hit the edge of campus. \n\n\"Still don't know where we're going,\" Laura offered playfully, looking at the plaza across the street from the university buildings. \n\n\"Right there,\" Bailey pointed before she hit the button for the crosswalk. \n\n\"The 'One, Two, Three Dollar'?\" Laura wrinkled her nose. \"Why?\" \n\nBailey shrugged as they waited for the light to change. At rush hour, they could have waited a while, but they'd lucked out on the timing and crossed in short order. \n\nShivering somewhat, they marched through the parking lot and entered the store, thankful for the warmth. \n\n\"Let's have a look around,\" Bailey said, directing Laura toward the seasonal aisle, which still hosted a collection of leftover Halloween costume accessories. \n\n\"I am not interested,\" Laura said, \"in whatever you're imagining when you look at that pitchfork.\" \n\n\"The masks are all too creepy,\" Bailey ignored Laura's jibe, \"I was hoping they might have one of those whips or something.\" \n\n\"We kinda did that already,\" Laura laid discouragement into her voice, \"but I don't know that I could ask Dakota to borrow hers again. So if you're dead-set on it, you'd have to get your own.\" \n\nBailey hummed softly, not meeting Laura's eyes as she continued her quest. \n\n\"How would a mask work anyway?\" Laura's lips compressed in doubt. Then she looked up. \"Now, a cloak...\" \n\nBailey eyed her suspiciously as Laura took the black cloak off the hanger and wrapped it around herself. \n\n\"Think about it, Bai,\" she prodded. \"What am I wearing underneath? You don't know.\" \n\nWith a courteous tilt of her head, Bailey acknowledged her friend's contribution. \"Not quite a gift, unless we let him wear it,\" she said, \"and we somehow have something to match.\" \n\n\"He already has the vampire outfit,\" Laura shoulder slumped, \"but if we want to dress all goth and stuff, I got my tall boots.\" \n\nBailey continued walking down the aisle, but found nothing that stirred her insides. \n\nI want something that makes me tingle, she thought, something that will make Kent tingle when he sees it. \n\nShe remembered the look in his eye when he'd seen the skirt. \n\nIf I showed up in a black cloak and nothing but black panties underneath, would that do it? \n\nA grimace took over her face as she thought about it. \n\nHow would he spank me though? It seems awkward, all that extra cloth. \n\nBailey preferred blue jeans for a reason: they didn't get in the way. \n\n\"That's it, Bai,\" Laura said. \"End of the aisle.\" \n\nThey meandered for a while, their eyes scanning the other offerings of the discount store. \n\nSuddenly, Bailey's eyes went wide. \n\n\"What?\" Laura asked, turning immediately to follow her friend's gaze. \n\nBailey pointed, her confidence absolute. \n\n\"No, Bai,\" Laura stammered. \"No-no-no.\" \n\n\"You don't have to,\" Bailey pointed out, not moving her eyes. \n\n\"Don't I, though?\" Laura sighed. \"I guess it's not that bad, all things considered. Alright, I'll even go half and half on it?\" \n\n\"Really?\" \n\n\"Yeah,\" Laura said. \"So it's from both of us.\" \n\n\"Thanks,\" Bailey smiled. \n\nThe dollar and fifty cents wouldn't matter, but the thought counted. \n\n============================= \n\nKent had decided to forego videogaming for the evening. Events with Bailey and Laura didn't really consume that much of his time, but he had reached a personal epiphany regarding his schoolwork. If he didn't plan to get things ahead of time, his little adventures with the two girls could completely screw up his schedule later. He really had no way to handle that kind of interruption and then go straight back to focusing on his school work. \n\nEarly on in their interactions, Bailey had kept things fairly sparse, coming by his room every few days to pay off a few dollars. More recently, she had turned up the pace, dropping by almost every day. He couldn't resent the time he spent with them, but he would eventually resent any failure on his part to attain a decent education. \n\nWhat else do you want out of life, right now? You're getting an education and all the weird-ass sexy shit you can handle. \n\nTo that end, when Carson left for his musical thing at half past seven, Kent had finished all of his assignments due for the week and counted himself wise when he heard Bailey and Laura enter the apartment, locking the door behind them. \n\nYep. Called it. \n\n\"Hi, Kent,\" Laura sang down the stairs, \"Busy tonight?\" \n\n\"Just wrapping up, actually,\" he shook his head and rolled his eyes before either girl reached his doorway. \n\nBailey appeared first, blue jeans and winter coat whisking past the doorway. \n\n\"Give us a moment,\" she called back. \n\nLaura waved politely and followed Bailey, carrying what he took for a small suitcase of the type usually used as a carry-on by air travellers. \n\nKent listened to Bailey unlock her door and close it behind her. He heard nothing for a few moments, whatever the girls had gotten up to. When they came back out, Bailey relocked her door, a touch Kent found paranoid even for her, and they shortly returned in stocking feet, but otherwise still wearing their outdoor clothing. \n\n\"Do we have a plan today?\" Kent looked them both up and down, noting the burdensome level of clothing. \n\n\"We got you a gift,\" Laura said. \n\n\"I see,\" Kent replied, not seeing at all. \n\n\"A real gift,\" Bailey said. \"Just so you know.\" \n\n\"Alright...\" \n\n\"It's in my suitcase,\" Laura added, \"which is locked.\" \n\n\"The suitcase is in my bedroom,\" Bailey blushed hard, \"also locked.\" \n\n\"And the keys?\" \n\n\"I have one and Laura has the other,\" Bailey's eyes went straight to the ground as her shoulders shook with barely restrained laughter. \n\n\"You have to find them, though,\" Laura explained. \"Then you can unlock your gift.\" \n\n\"Oh,\" Kent finally understood the game. \n\nChrist, Bailey, he thought, this is what we're doing? Exactly how am I supposed to know how to touch Laura? \n\nHe'd touched Bailey just about everywhere by this point and, to be fair, he'd touched Laura almost everywhere. That didn't mean he took generic permission to touch either of them just any time, but today they'd invited him. \n\nBut how far exactly is Laura willing to go? Okay, need time to think. Stall. \n\nThe most obvious course of action came to mind and Kent rose from his chair, approaching Laura on account of the fact she stood closest. Smiling awkwardly, he first checked the pockets of her long, beige coat. This didn't take nearly enough time, as women's jackets never had a lot of pockets. He had only two places to check on the outside, and one inside pocket, all of which he found empty. \n\n\"It's a little warm for a jacket,\" Laura offered and turned her back on him. \n\n\"So true,\" Kent rolled his eyes and took her coat off her shoulders. \n\nAs she turned back toward him, she faced away from Bailey. Kent kept himself from flinching as Bailey's eyes met his and she made a quick gesture with her hands at her belt, waving upwards. \n\nGot it, he eyeballed a message back at her. Thank you. At least I know I'm searching high. \n\nIf Laura had hidden the key against her breast, it meant she intended for him to touch her there, the knowledge of which constituted a life saving flotation device, emergency breathing apparatus and final exam cheat sheet all in one. \n\nNot that I have to go straight to the end of the puzzle from the start, he smirked. That's how cheaters get caught. \n\nInstead, he moved over to Bailey and starting frisking her ski style jacket. It had the advantage of external pockets at about chest level. When he unzipped those and checked inside them, he reached his fingers as far toward her breasts as he could. Bailey's eyes closed and she inhaled deeply under his attention. \n\nThey would never make it that easy. \n\nHe unzipped her jacket, checked its internal pockets, and then removed it from her shoulders. \n\n\"Alright, then,\" Kent turned back to Laura and surveyed her from head to toe. \n\n\"Something wrong, Officer?\" Laura played her voice for maximum innocence. \n\nNow I get it. \n\n\"I'm going to have to search you very carefully,\" Kent jerked his head over towards his bed. \"Put your hands on the mattress, both of you.\" \n\nThe girls gave a start at his instruction, not having expected it, but he'd found it always paid to disrupt their plans just enough to surprise them. \n\nBailey glanced at Laura, who shrugged in return, and the two of them walked over to the bed and leaned over to rest their hands on his mattress. \n\nKent started with Laura first, going down on one knee behind her so he could slowly run his hands up her legs, one at a time, inside and out. When he reached her ass, he carefully used both of his hands to squeeze her cheeks and grope every bit of her, feeling her tense and release her muscles up under his attention. Standing up, he reached around her hips and checked at much as he could from the outside of her pants, running his fingers over every available surface without pressing down over her vulva. \n\nI am not going too hard there yet, Kent said. I know the key isn't hidden there so I can wait for her to give me some clue. \n\nHe switched over to Bailey, starting at her ass and working his way down the back of her legs and back up the front. With the denim on, though, she could be hiding her room key just about anywhere except the pockets. He checked all of those, taking special care to reach deeply into the front pockets and probe her pelvis. On his knees, he slid a hand between her thighs from behind, wanting to give her lips a stroking, but found the fly seam of her jeans far too hard. \n\nWhen he'd finished, Kent knew he'd treated Bailey and Laura differently, but Laura shouldn't have been able to tell from her position, and he just had to assume Bailey wanted it that way. \n\nI'm not getting a lot of guidance until I hear the moans after the fact, he thought worriedly, but they showed up here and asked me to grope them, so that's where we are. \n\nLaura had worn a heavy sweater he'd need to check out next. \n\n\"Gonna need you to stand up straight,\" he said as he grabbed her hips. \n\nShe giggled and stood up. \n\n\"Hands on your head.\" \n\nWith a deep breath, she obeyed his instructions. \n\nSuitably posed, Kent put his hands on her lower back and slowly felt his way up her spine, across her shoulders and back down the underside of her arms. Laura shivered slightly when his fingertips traced the underside of her ribs. \n\nThe sweater may be heavy, but I can already tell she's not wearing a bra under there. Oh, boy. \n\nWith Bailey watching over her shoulder, Kent ran his hands over the front of Laura's body, slowly feeling his way to her breasts. When he hit the spot where her underwire should have been, Laura inhaled deeply and thrust her chest out, her head turning up to the ceiling. \n\nThat's a pretty clear message. \n\nCupping both her breasts at once, he trapped her nipples between his thumbs and forefingers. \n\n\"What have we here, ma'am?\" he asked with a smirk. \n\n\"Uh,\" Laura managed to moan. \n\nHe gently squeezed, compressing her breasts against her ribs while maintaining his grip on her hardening little tips. \n\n\"Is this what I'm looking for?\" \n\nLaura let out another little moan and shook her head. \n\nHe released her nipples and moved his hands around her breasts before he felt a hard package, roughly square in shape, no bigger than his thumb, on the underside of her left breast. \n\n\"Ah,\" he breathed. \"What is this?\" \n\nA little squeak of dismay sounded from Laura's throat, as if he'd disappointed her a little by finishing his search so soon. \n\n\"How will we get that out?\" he wondered aloud. \n\nLooking for a clue here, you twits, Kent mentally beamed at them. I'm probably supposed to reach underneath, but I could tell her to take off her sweater, too. She called me 'Officer', which maybe means I'm suppose to strip search the two of you. Christ, this is complicated. \n\n\"I guess you'll have to go get it,\" Laura whispered anxiously. \n\n\"I guess I will.\" \n\nHe slid his hands under her sweater at the waist, feeling the trembling in her belly. Slowly, he moved up over her abs. The key, he well knew, lay just under her breast. His hands, however, slid up the sides of her body, the heels of his palms pressing along the soft sides of her breasts. He moved inward over top of her pectoral muscles, dislocating her sweater almost enough to expose those generous mounds of flesh. \n\nWith Laura shivering in his grip, his hands slithered down, palms over her hardened nipples first, cupping her breasts second, and finally captured her bare nipples between his thumbs and forefingers again. \n\nLaura let out a low throaty growl as he gave her tips a little downward tweak before releasing them. Finally, with his hands underneath her breasts, he bumped against the little bit of tape she's used to attach the tiny luggage key to her body. It came free with a little force and no obvious sign of pain. \n\nAs he withdrew his hands, Laura sighed and tilted forward to brace her hands on the bed. \n\n\"That's one,\" Kent announced. \n\n\"Yeah,\" Laura replied with all the force of a misting rain. \n\nKent decided to give Bailey the same treatment initially, telling her to stand up and put her hands on her head. Throwing him off, however, she stood up, turned around to face him and then interlaced her fingers before laying her hands on the back of her head. Finally, she closed her eyes, although Kent could swear she rolled them underneath her lids. \n\nHe put his hands around her, at the small of her back, and ran them up her white t-shirt. Feeling carefully at the strap of her bra, he didn't detect anywhere she could have hidden a key. Kent checked her stomach, then slid his hands up to her breasts, using his thumbs to poke and prod, roughly as he dared, at every bit of flesh covered by the cups of her bra. \n\nBailey breathed out softly as he worked both of her nipples in circles. \n\n\"They're not magic lamps,\" she scolded. \"Nothing's coming out no matter how much you rub them.\" \n\nKent grimaced. Their bodies didn't offer that many locations to hide a key. Bailey's key, especially, had to take up more space than the tiny luggage key Laura had hidden. On top of that, given that Laura had hidden her key near her breasts, he judged it unlikely Bailey would do the same. \n\n\"Well, ma'am,\" he told her, \"Looks like I need to check you more closely.\" \n\nBailey let out a little breath of disdain through her nose and turned her chin up at him. \n\nFine, Bai. One level further. \n\nHe grabbed her belt buckle and unthreaded the belt. With a bit of force and an inhalation from Bailey, he managed to pull it just tight enough to loosen the prong from the little eye in the belt. With an exhalation of relief, Kent released the belt. Next, he popped the snap button on her pants and unzipped them. \n\nThe transparent underwear I gave her, he smiled, nice. \n\nThe key, to his surprise lay right against her flesh, underneath the panties, with a bit of masking tape wrapped around the edges. \n\nShe didn't want to risk the edge of the key damaging her panties. That's why she wrapped it in tape. \n\nHe hadn't felt it all when he'd frisked her, on account of the fly seam hiding it. \n\nGiven that she'd placed the key just above the line of her pubic hair, he could have just reached down her waistband to get it. Instead, he pushed her jeans over her hips and let them drop to the floor. Then he slid his right into her panties from the side, over her lips, and pushed his way up over her clitoris. \n\nBailey opened her mouth, letting out a breath of shock as her stomach tightened and her whole body started to double over. Kent stroked her one more time, feeling her body shudder again, before he wandered farther up and reached the place she'd tape the key to herself. \n\n\"There we go,\" he said, tearing the tape from her skin. \n\n\"Hmph!\" Bailey exclaimed, opening her eyes. \n\nShe sat back on the bed, blinking away as her eyes searched for anything to look at but Kent, and Laura came to sit down next to her. ",
        "\"I can get my gift now?\" \n\nBailey nodded wordlessly as Laura looked at her. \n\n\"We'll wait here,\" Laura promised. \"Open the suitcase there. Bring just the gift back.\" \n\n\"Right,\" Kent said. \n\n============================= \n\n\"Whoa,\" Laura whispered when she judged Kent out of earshot. She looked down at her chest, her eyes wide with shock, \"That was something.\" \n\n\"Milked you good?\" Bailey did not meet her eyes. \n\nLaura nodded, her breathing speeding up as her brain started to respond to what Kent had done with her body. \n\n\"Just like you wanted?\" Bailey prodded. \n\n\"Yeah,\" Laura breathed out slowly. \"He touched me everywhere.\" \n\nBailey turned her head to raise a dubious eyebrow. \n\n\"Well,\" Laura rolled her eyes defensively. \"Almost everywhere.\" \n\n\"Good move, though,\" Bailey said. \n\n\"What?\" \n\n\"Calling him 'Officer',\" Bailey clarified. \"That made it way better.\" \n\n\"Yeah,\" Laura agreed. \"He really took to it, then. Kinda makes me wish we'd picked up those plastic handcuffs, though.\" \n\nThey heard Kent leaving Bailey's room, going so far as to lock the door behind him. He stepped into his bedroom holding a thin box, about as long and wide as his forearm, wrapped in a winter themed, snowflake patterned gift wrap. \n\n\"How thoughtful,\" he said. \"You even wrapped it.\" \n\n\"Sit here,\" Bailey said, moving over to make space between herself and Laura. \n\nKent took the place between them, holding the package in his lap. Bailey looked on quietly while Laura barely restrained herself from bouncing up and down. Kent first removed the tag, a small square of wrapping paper they'd reversed and attached to the gift. \n\n\"To: Kent,\" it said. \"From: Laura and Bailey.\" \n\nThey'd used the same red marker to cover the paper in little hearts of varying sizes. \n\n\"Alright,\" Kent tore off the wrapping paper to find a simple beige cardboard box inside. \n\nThe top and bottom of the box separated easily and he saw the contents: a simple, bright red, rubber spatula. \n\n\"Oh,\" he said. \n\n\"Hm?\" Laura prodded, leaning into him. \n\nHe lifted the spatula out of the box and found it had a surprising amount of heft to it. The entire body consisted of a single piece of silicone or rubber of some kind, and whatever they'd used for the core flexed like a golf club or a hockey stick might. \n\nKent took the handle in his right hand and slapped it down on the palm of his left. \n\n\"Hoo,\" he whistled softly. \"We're not kidding around here.\" \n\n\"You like it?\" Laura asked. \n\n\"It's pretty special,\" Kent turned and looked her in the eye. \"Thank you.\" \n\nLaura turned her head to present her left cheek to him, prompting him with, \"Kiss, kiss.\" \n\nHe planted a dopey kiss on her cheek before turning to Bailey, \"Thank you, too.\" \n\nBailey's raised eyebrow advised him not to attempt to kiss her cheek. \n\n\"Glad you like it,\" she said, \"Because we want you to use it tonight.\" \n\nStill in her transparent underwear, she stood up and moved to the white board, thumping down three marks. Laura came close behind, adding the same number of ticks before returning to stand before Kent. \n\n\"You took Bailey's pants,\" she pouted, folded her arms, and stared and Kent. \n\n\"Very well,\" he said. \n\nBy this time, however, he had a serious erection, necessitating the rearrangement of the black track pants he'd chosen for the night. Bailey, sitting beside him, laughed while Laura pretended not to notice. He stood up, undid the belt on Laura's pants, unbuttoned them and unzipped them. She kept her thighs together, though, which forced him to push her pants down. \n\nA simple black pair of underwear greeted him, neither too daring nor boring, a nice, narrow cut that worked well with her hips. \n\n\"Shall we start?\" she asked. \n\n\"Whenever you feel like it,\" Kent sat down and waved his empty left hand to encompass his entire room, \"and wherever you feel like it.\" \n\n\"Oh,\" Laura said in surprise, then turned to Bailey. \"Wherever?\" \n\nBailey shrugged, \"We have the whole place to ourselves.\" \n\nLaura's eyes darted around the room as if she wanted to see through the walls. \"Are there any rooms we haven't done?\" \n\n\"Living room,\" Kent ticked off, \"Laundry room, both bedrooms, kitchen, bathroom. Nope, I think they're all covered.\" \n\n\"Stairway,\" Laura pointed out, \"Hallway. When did we do Bailey's room?\" \n\n\"We didn't,\" Bailey said, \"But I did.\" \n\nLaura jogged her head, \"Yeah, alright. Maybe we'll just do the first one here.\" \n\nThe stairway, Kent knew, had some issues. No matter what you thought about Carson's night out, you still had to wonder if he could come home early. \n\n\"Who goes first?\" Laura asked. \n\n\"Me, I think,\" Bailey answered. \"I'd like to do it over your lap, but I don't think it would work.\" \n\n\"No?\" Kent wondered. \n\n\"Look,\" she said, and crawled over his lap. \"Are you really going to be able to swing that thing?\" \n\nKent braced himself by putting his left hand on the small of Bailey's back and then tapped her cheek with the business end of the rubber spatula. He tried shifting his body a little to get his shoulder farther back so he'd have more room to swing at her ass, but he had to admit to her point. \n\n\"You're right,\" he said. \"This is more of a ranged weapon.\" \n\nBailey sat up on her knees. \n\n\"Ranged weapon?\" Laura asked. \n\n\"He plays entirely too many RPGs,\" Bailey rolled her eyes. \"Although it's not really ranged, just a cumbersome melee weapon.\" \n\nKent turned to look at her in shock, \"Okay, then.\" \n\n\"What? I used to play WoW, okay?\" \n\n\"Yeah,\" Kent sighed, \"I can't imagine the term 'ranged' applying to any of this anyway.\" \n\n\"Why not?\" Laura asked. \n\n\"Well,\" Kent explained, \"I'd have to be, like, throwing or shooting things at you.\" \n\nLaura grimaced, then raised an eyebrow in confusion, \"No, thanks.\" \n\n\"Anyway,\" Bailey said, \"Let's just try it like this.\" \n\nShe stood up in front of Kent, facing away, and put her hands on her knees, arching her back to stretch the fabric of her transparent panties across her cheeks. \n\nKent set the spatula against her right cheek. \"Five, Bai?\" \n\n\"Yeah.\" \n\n\"What if this hurts more than a spanking?\" \n\nBailey shrugged, \"It's a gift for tonight. But if it's too much, we'll do a lower count next time.\" \n\nKent let out a breath as he realized that Bailey had given him some latitude on how hard he could use the spatula. \n\nShe's putting a lot of responsibility in your hands, he noted with concern, that's a boatload of trust to find just the right threshold for kinky pleasure and pain. \n\nHe eyed the spot on the lowest parts of her cheeks that had sustained the most reddening damage from her previous nights and decided not to go straight there. Instead, he touched the outside of her right cheek, where the panties didn't cover her, and then withdrew. Then, to build up some sense of theatre, he took several experimental swings in the air over her back, listening to the sound of the kitchen tool cutting through the air. \n\nLaura let out a small whimper as he set the spatula against Bailey's cheek again. \n\n\"Here it comes,\" he warned. \n\nBailey stuck out her hips just a touch more and he swung the spatula, letting the flexible handle get a good bend so it could snap out at and crack at the side of her right cheek. \n\nKent watched as Bailey thrust her hips forward in surprise and froze in place. A full second later, she exhaled a long breath with her mouth wide open. \n\n\"Ha, Jesus, Kent,\" she whispered a curse. \"One.\" \n\nKent risked a sideways glance at Laura, expecting some kind of complaint about blasphemy, but she only stared, wide-eyed and mouth open. \n\nI think I'd better spread these around then. \n\nBailey's words echoed back to him. How many days ago had she brought him the wooden spoon? And why? \n\n'I just want to see what you'd do with it.' \n\nWith the red underlines on her cheeks, Kent didn't have a blank canvas to work with, but he could still do something. He looked at where the first mark had landed, almost the upper right corner of her right cheek. \n\nI can do one higher yet, and a little farther outside. \n\nGetting up that high would barely - barely - constitute hitting her ass, but he needed enough room for five strikes, preferably without overlapping. He laid the spatula's heavy end on her cheek, almost touching her hip, and let it sing through the air again. \n\nIt snapped off her skin and Bailey let out another exhalation. \n\n\"Two.\" \n\nHe dragged the spatula across the first mark he'd made and continued his diagonal path across her cheek. The third strike came dead centre and Kent took a moment to admire the unusually loud and high pitched snap it made as it echoed through the room. \n\nBailey twitched again, her hips thrusting in an involuntary effort to move away out of the path of his next swing, but quickly reset herself. \n\n\"Three,\" she said. \n\nThe next two, Kent knew from experience, would go easier for her. She had more flesh on the lower part of her cheeks, which meant a bit more protection. He moved around to the side of her get a better angle. \n\n\"What are you doing?\" she wondered out loud. \n\n\"You'll see when I'm done.\" \n\nThat seemed to satisfy her and she wiggled her ass at him. \n\nKent took the next two strikes in rapid succession, giving Bailey no time to count or recover. \n\n\"Fuck,\" she cursed when he'd finished. \"Four and five.\" \n\nBailey's hand came off her knees and she ran a gentle finger along the line of pink-coloured flesh Kent had created across her right cheek. \n\n\"That'll look... interesting later,\" she noted. \n\nLaura gulped, \"My turn?\" \n\n\"If you want,\" Kent warned. \"You don't have to do anything you don't want to.\" \n\nShe sniffed, \"I can do at least one dollar. It's my gift, too.\" \n\nKent opened his hands in acquiescence. Laura would have the advantage of just a bit more body weight than Bailey. The snap of the spatula might come through just a bit less painfully with that added protection. \n\nLaura set the stool before his bed, stepped up on it and leaned over the bed until her breasts touched its surface. She locked her knees out. \n\n\"Ready,\" she deadpanned. \n\nKent laid the spatula on her left cheek, high and on the outside near her hip, \"Here it comes.\" \n\nHe didn't take any experimental swipes through the air this time, just wound up and struck her a sharp slap. \n\n\"Hah,\" she half-groaned. \"Oh my. Six.\" \n\n\"You sure you want this?\" \n\n\"Mm-hm,\" she nodded, murmuring through closed lips. \n\nDeciding to give her the same treatment he'd given Bailey, he moved down her cheek and inward for his second strike. \n\n\"Seven,\" she called out. \n\nUnlike Bailey, Laura had stopped tensing the muscles in her legs, letting her cheeks soften and loosen a bit to mitigate the striking force. \n\nHis third strike, which he placed dead centre in the thickest part of her cheek, created a delicious undulation across her whole cheek and down her thigh. \n\n\"Eight,\" she whimpered. \n\nI have to treat them the same. \n\nKent shifted position to give him better access to the lowest part of her cheek and let two more hard slaps resound off her ass. \n\n\"Ho, mama,\" Laura called out. \"Nine and ten.\" \n\n\"That is seriously red,\" Bailey's voice filled the room with admiration. \n\n\"Just like yours,\" Laura said as she carefully stepped off the stool and straightened her body. \n\nLaura wiped her forehead of a sweat mostly imaginary and looked over her shoulder. \n\n\"Kent?\" Bailey prodded suspiciously, \"did you make us... symmetrical?\" \n\nKent nodded and smirked. \n\n\"What?\" Laura asked. \n\n\"Look,\" Bailey turned her body, \"My right cheek, your left.\" \n\nKent vacated his place next to Laura so Bailey could stand there, the girls placing their most recently abused ass cheeks side by side. \n\n\"Oh,\" Laura noted with a surprising hint of appreciation in her voice. \"Can we do that thing where he rubs our butts?\" \n\n\"Lie down,\" Kent laughed. \n\nThe girls crawled upon the bed and laid on their stomachs, leaving him enough room to lie down between them. With Laura on his right and Bailey on his left, his hands could easily get at their recently striped flesh. \n\n\"Oh, thank god,\" Laura murmured as his fingers sunk in. \"That thing stings like crazy.\" \n\n\"Uh-huh,\" Bailey agreed. \n\nBoth girls luxuriated a while in his grip before Bailey cleared her throat. \n\n\"Uh, Kent?\" \n\n\"Yeah?\" \n\n\"I - I think the spatula is worth more than a dollar,\" she said. \"I'm not even sure I can do it again tonight, unless you promise to switch sides.\" \n\n\"Hm,\" he muttered, \"I guess I can do the other cheek. How much do you think it's worth?\" \n\nBailey and Laura shared a glance across their folded arms. \n\n\"Twice as much as a spanking,\" she said. \n\nKent jogged his head back and forth, \"Fair enough. What should we do about tonight?\" \n\nBailey gulped, \"I don't think it's fair to charge two dollars for what we already agreed was one.\" \n\n\"We could make a deal,\" Kent offered, \"just to be fair.\" \n\n\"I'm listening,\" Bailey said, imitating his tone from past negotiations. \n\n\"The spankings... wait, are those spankings? When I use a spatula?\" \n\n\"Paddling?\" Laura offered over her shoulder. \n\n\"Delightful,\" Kent said. \"The paddlings you just did count for two dollars if - big 'if' - you each do another set for two more dollars and, in exchange, I promise to do the other cheek.\" \n\n\"Okay,\" Bailey drawled and turned to Laura, \"you okay with that?\" \n\n\"I think so, yeah,\" Laura said, \"And we can do one more after? Just spanking?\" \n\nBailey sucked part of her left cheek into her mouth and nodded. \n\nKinda gotcha there, didn't she Bai? Kent thought, eyeing the red streak across Laura's cheek as she walked over to the white board, you know what Laura came here for, even if neither of you can mention it right now. \n\n\"That's pretty generous, Kent,\" Laura oozed sincerity as she made two more marks on the white board. \n\n\"If you say so,\" Kent gave her a winning smile. \"I try to be fair, though, not generous.\" \n\nBailey got up, with a clear regret at ending their massage so early, and made her marks before turning around to glare silently at Kent. \n\n\"And I think,\" Laura said, \"that we should be generous, too.\" \n\n\"Do you really?\" \n\n\"Do we really?\" Bailey asked. \n\n\"Uh-huh,\" Laura said to both of them. \"So we're going to let him decide our positions.\" \n\n\"That's fair,\" Bailey nodded. \n\n\"Oh,\" Kent felt his eyes widen with possibility. \"Any way I like?\" \n\n\"Anyway,\" Laura pronounced, \"Anywhere.\" \n\nPossibilities multiplied into an infinitely branching tree until he couldn't think straight. Kent's head had already started exploding with every possible position he could choose for them, and then she'd thrown in all the places, too. \n\n\"Alright,\" Kent said, \"let's do one you haven't done before.\" \n\nLaura gulped, looking at him patiently. He had half a mind to put her on her back on the bed and make her pull her legs up. Bailey had chosen that once before, right in front of Laura, and once more recently on her own. Laura would look majestic like that, but Kent specifically wanted to complete his work on her and he feared that position would make things too tricky. \n\nI need their asses exposed so I can do this right. \n\n\"Bend over the bed,\" he pointed at the edge of the bed as he stood up. \"Bailey on the left, Laura on the right.\" \n\nWith a shared glance and two shrugs, the girls bent over the bed, their hips touching. \n\n\"Laura, lift your right knee up on the bed.\" \n\n\"Oh,\" she gasped. \"I... okay.\" \n\nWith a shiver, she lifted her leg up and slowly spread herself just enough to get her knee up. \n\n\"Good?\" she asked. \n\nKent admired the view provided by the narrow black panties. As she hadn't taken even a moment to adjust herself, a little fringe of hair poked up around the left edge of her panties. \n\n\"Perfect,\" he said. \n\n\"You can get her right side pretty good that way,\" Bailey's voice carried a note of admiration that surprised Kent. \n\n\"That's the plan,\" he agreed with Bailey, \"now you with the left leg.\" \n\nAlready bent over, she raised her left leg up, opening her hips wide, and pulled her knee up until it reached her chest. \n\nWe're well beyond ninety degrees, Kent moved to stand behind her to take a look, we're into the one thirty-five zone here. \n\nBetter yet, due to the transparency of her panties, he could see where her stretch had opened her lips to reveal a touch of pink inside. \n\nQuite the show, Bai. Quite the show \n\nTaking a moment to enjoy the view, he stepped back and admired the way their muscles had twisted and tensed to support themselves in the awkward position he'd requested. Where their cheeks touched, green transparency meeting solid black cotton, one bony hip braced itself against a softer cheek. \n\nMagnificent, he thought, then moved forward to stand immediately behind them. \n\nHe took out and laid the spatula it on Laura's right cheek, high up near her hip. \"Ready?\" \n\n\"Mm-hm,\" Laura's voice had gone to an extremely squeaky pitch. \n\nKent didn't wait any longer, lashing out at her flesh with all the ferocity of his previous onslaught. \n\n\"Eleven,\" Laura chirped. \n\nKent moved along her cheek, diagonally across the centre, landing strike after strike in a neat, straight line toward her crotch. \n\n\"Twelve,\" she winced through the slaps, \"thirteen, fourteen...\" \n\nHe cracked the last one as low and as close as he could to the ample space she'd open between her cheeks. \n\n\"Fifteen,\" she sighed. \"Thank god.\" \n\nStanding up straight, she reached back with both hands to touch the parts of her ass nearest her crotch. \n\n\"Hoo,\" she breathed out. \"That's a really sensitive spot.\" \n\nKent turned to Bailey and laid the spatula on her left cheek, high up on her hip. Without warning, he began to extract his two dollars, listening to the luscious sounds of forty cents worth of payment rebounding off the tight, stretched muscles of her ass. \n\nWhen she counted out, \"Twenty,\" she gingerly lowered her legs and rubbed her cheeks. \n\n\"We get a massage after that,\" she declared, her voice brooking no opposition. \n\nKent waved her to the bed and took his place between their knees once more. Taking their asses in hand, he rubbed them. \n\nWe'll start therapeutically and see where we can go from there. \n\n\"How do we look?\" Bailey asked, interrupting Laura in mid moan. \n\n\"Streaked in red,\" Kent leaned over her to grab and squeeze her cheeks with both hands. He then traced his fingers over her flesh, from her hips to her crotch, \"A nice 'vee'.\" \n\n\"So we make a double-u together?\" Laura asked. \n\nKent reached over and squeezed her cheeks as well, making sure she got the same level of attention. \"Oh, yeah.\" \n\nThe girls looked at each other at that point and Kent noted some kind of silent, almost telepathic conversation pass between them. He watched, dividing his attention between a thorough cheek-massage and their non-verbal argument. \n\nBailey's gaze twitched at her cheek and back to Laura's eyes. Laura took a breath and nodded, before speaking the first non-telepathic words of their communication. \n\n\"May as well do it now,\" Laura said. \n\n\"Kent?\" Bailey asked. \n\n\"Uh-huh?\" \n\n\"We need a favour,\" she said, \"and I need my bedroom key.\" \n\n\"On the dresser,\" Kent said, watching Bailey hop up carefully crawl over Laura. \n\nHe raised an eyebrow at her back as she slipped out of his bedroom. \n\n\"Don't stop,\" Laura pouted at him. \n\n\"Right...\" \n\nHe got both hands on her ass, then, kneading and squeezing as deeply as he could, letting his thumbs wander a little, just to see what would happen. Laura did not, however, part her thighs for him, so he didn't try to delve any deeper. \n\n\"What's she up to?\" Kent asked. ",
        "\"You'll see,\" she sang back, clearly enjoying his undivided attention. \n\nOut in the hallway, Bailey locked her door but remained in the hallway for a several seconds longer than she should have needed to walk the few paces. \n\n\"Alright,\" she said as she reentered, \"Here.\" \n\nShe held out her cell phone to him as she approached. \n\n\"What?\" he wondered, taking it from her. \n\nBailey rolled her eyes and stammered, so Laura spoke, \"She's been taking pictures of herself. Didn't you know?\" \n\n\"No,\" Kent choked on nothing. \n\nHow many other pictures are on this camera? How many images does she have showing spankings we've done? \n\n\"Are you sure about this?\" he held the phone between his thumb and forefinger. \n\n\"Bai says it's safe,\" Laura said. \"I trust her.\" \n\n\"O-okay,\" Kent stammered, noting that Bailey had already put the phone in camera mode. \"How do you want to do this?\" \n\nBailey laid back down on the bed to Laura's left, cheek to cheek. \n\n\"Just sort of,\" she looked back over her shoulder, \"Across. Sideways, y'know?\" \n\n\"Across?\" Kent asked. \n\n\"Not, uh, up our butts,\" Laura explained, \"But make sure you can see the marks.\" \n\n\"Right, right,\" Kent nodded, holding the camera vertically at the bedside and lining it up to capture the curves of their reddened cheeks. \n\n\"Can you see?\" Bailey asked, eyeing him with concern. \n\nMay as well go for it at this point, Kent thought, although I'm pretty fucking close to blowing a load in my pants right now. \n\n\"Um, lift up your hips a bit?\" \n\nAlmost as if someone had programmed obedience to such an instruction right into the core of her being, Bailey arched her back and lifted her hips as she did when he spanked her. Laura, watching on, lifted her ass to the same height. \n\n\"That's good,\" Kent confirmed, \"stretches the muscles out.\" \n\nHe angled around toward their feet a bit so he could capture the red parts of their seats. \n\n\"Watch it,\" Bailey warned, \"I always keep my face out of the picture.\" \n\n\"Right.\" \n\n\"Oh, Bai,\" Laura said suddenly. \"Our panties.\" \n\n\"Crap,\" Bailey interjected. \n\n\"What?\" Kent asked. \n\n\"I always take off my underwear,\" she said, \"it's kind of, y'know, identifying?\" \n\nKent felt his erection swell and turn to solid steel as the two of them wiggled their panties down to their knees. \n\n\"Okay,\" Bailey said. \"Now.\" \n\nKent took a series of pictures, mostly from the side, but made sure to take one from directly above to capture the nice symmetry of the marks he'd paddled into their cheeks. He felt a sense of contentment, knowing a permanent record existed of what they'd done. \n\n\"Phone,\" Bailey demanded as she pulled her underwear back into place. \n\nShe made room for him again so he could go back to massaging them while she fiddled with the phone, cropping the pictures carefully and engaging in a bunch of other technical acrobatics he couldn't follow from his vantage. \n\n\"Good pix?\" he asked. \n\n\"Nailed it, yeah,\" she confirmed, continuing to work away. \n\nLaura, meanwhile, moaned when he gave her his undivided attention. And this time, when his thumbs touched the inside of her thighs, she spread her legs just a little and pushed her hips back into his grip. \n\nNow we want something more, do we? \n\nHe carefully rubbed circles on the inside of her thighs, his thumbs going as high as they could without tickling hair or touching her vulva. Under his grip, her muscles quivered. Kent smirked and moved away, taking his hands over to Bailey, who kept her legs tense but gave him more space between them. \n\nThat's a hard, hard ass. \n\nAfter a moment, Bailey put her phone away, declaring, \"Safe and sound.\" \n\n\"You're sure?\" Laura asked. \n\n\"Yes.\" \n\nKent now placed one hand on each of their asses, squeezing them in synchronicity and listening to their combined moans of appreciation. \n\nAs ego-stroking goes, the ability to get that sound out of two girls at once pretty much takes it. The only question here is how far we go tonight. \n\nHe shifted his weight forward so he could press down hard on their cheeks with his palms, getting some pressure into deep tissue. Bailey groaned and Laura gasped. \n\n\"Laur,\" Bailey said. \n\n\"Yeah?\" \n\n\"I'm gonna do my last one now, okay?\" Bailey told her softly. \"But you can lie right there and watch.\" \n\nLaura gulped and nodded. \n\nBailey rose up on her hands and knees and Kent saw the blurred look in her eyes to match the sheen of sweat on her forehead. She patted the bed next to Laura as she moved over. \n\n\"Lie here,\" she told Kent. \n\nHe knew what she meant to do next and he couldn't believe she wanted to do in front of Laura. Some combination of the pain of the spankings, the shame of exhibitionism and god knew what else had pushed her to the point of no return. Kent turned around and lay on his back next to Laura. His left hand, closest to her, found her cheek and continued squeezing her. \n\nBailey, meanwhile turned herself around and straddled him, sinking herself in so the head of his shaft pushed against her opening through three layers of clothing. This, she decided silently, counted as too much interference. She lifted herself off him, her reddened cheeks rising up in display, and pulled his sweatpants down. \n\nSeating herself again, she sighed and started rocking herself back and forth along his shaft. \n\n\"You'll... uh,\" she stammered. \n\n\"I'll what?\" \n\nBailey gulped and took a deep breath. \"When I ask for it?\" \n\nKent smiled, restraining his orgasm, \"When you say please.\" \n\nBailey nodded and Kent took a hold of her hips with both hands. Laura, taking note, turned on her side to face Kent and laid a hand on his chest, rubbing gentle circles. \n\nYou're about to get an education, Kent thought. I don't know what they taught you in Utah about any of this, but I have a good idea what Bailey's told you. You can watch and decide what you like and what you want to try. \n\nHe got the sudden feeling that this particular event, including the exhibition for Laura, had lain in Bailey's mind for some time. Whether Bailey had kept Laura informed of the plan, he had no idea. \n\nBut no way are you doing this in front of your friend without thinking about it ahead of time. \n\n\"Please spank me,\" Bailey whispered. \n\nThe easiest path lay in striking her cheek dead centre, in the middle of the angry, red line he'd made with the spatula. Instead, he went low and outside, finding a clean, pink piece of flesh to spank. \n\n\"Oh!\" she cried out, \"Twenty one.\" \n\nGood spot, then, that one. \n\nBailey started grinding away at him and he counted himself lucky that her favourite way to use his cock didn't line up perfectly with his own sweet spot. \n\nShe's only off by a few centimetres though. \n\n\"Please! Again!\" \n\nHe whacked the same spot \n\n\"Twenty-two,\" she whispered, \"Please spank... oh!\" \n\nHe recognized her orgasm by now in the way her hips shook and her body gyrated, so he let her have another one. \n\n\"Twenty-,\" Bailey cut herself off as her body locked up in the throes of passion. \n\nShould I spank her again? She has to ask for it and she didn't even start. \n\nInstead, he just held her hips in place and prevented her from falling off the bed in her seizure like episode. \n\nWith a sigh, her muscles relaxed. \n\n\"Twenty-three,\" she whispered in contentment. \n\nBailey leaned forward and grabbed Kent's ankles before slowly lifting her ass off Kent's lap. Kent let out his own sigh of relief as he watched Bailey's upper body become horizontal. From this vantage, the transparent fabric of her underwear hid nothing. In this raised position, with her knees so wide, Bailey had drawn her puffy lips open and exposed to his eyes, and a large wet spot showed prominently on the fabric where she'd ground it against her entrance. \n\n\"Please spank me,\" she added quietly. \n\nHis erection twitched in his pants as he realized she had passed her orgasm and moved on to the simple fact of paying her debt. Kent laid his right hand over the centre of her cheek and let her have a slap targetted on the red slash he'd made with the spatula. \n\n\"Twenty-four,\" she breathed. \"Please spank me again.\" \n\nAnother, final slap brought a low groan from her and she lifted her body off him entirely, twisting around to lay on his right side, her head in the crook of his shoulder. Her free hand rested on his belly and slid down over his boxer shorts, fingertips gently running over his erection. \n\n\"You wanted to know,\" Bailey prodded. \n\nKent drew in a breath to respond, but Laura's hand started moving down off his chest and he realized Bailey hadn't directed the statement at him. \n\nOh, Christ. \n\nLaura's hand, timid and shaking, flowed over his rib cage, down his belly, and stopped with her palm on his hip, her fingertips nearly touching the tip of his erection. From her side, Bailey slid her finger up and down the outside of his erection. \n\nLaura still needs to do her spankings, Kent tried to focus, gotta hold on a little longer. \n\n\"Never touched one before?\" Kent asked. \n\nLaura's head shook against his chest and her hand moved in so the tips of her fingers pushed against his penis, shifting it toward Bailey. \n\nHis penis twitched in response and Laura pulled back almost instantly, gasping, \"Oh, it moved!\" \n\nWith a bit more confidence, Laura moved in again and ran her fingers along the side of his shaft until she bumped into his testicles. \n\nKent did his best to control his breathing. \n\nIt might help if I weren't watching, he realized, but knew this for a once in a lifetime event. It seemed wrong to waste any part of the experience by closing his eyes. \n\nBailey's hand moved between his legs to cup and lift his testicles as Laura moved her hand, palm flat, over top of his erection. As Bailey squeezed underneath, Laura pushed down on his shaft in little bursts, almost as if she wanted to test its hardness. Each time, his erection bounced back under her hand. \n\nShe took her hand away entirely for a moment and stared at the shape of him under his loose shorts. Kent tightened his muscles and made his penis lift up. \n\n\"Oh,\" she said, watching him flex it twice before putting her hand on top again. \n\nBailey's hand came down on top of Laura's, forcing her to curve her fingers to conform to his shape. \n\nKent counted himself thankful that the two of them only pushed and didn't stroke him like that. \n\nAlso, I've spent this whole evening nursing an erection and I haven't blown in my pants yet. Must be a bunch of desensitization helping me out here. \n\n\"You gonna try?\" Bailey whispered across his chest. \n\nTry what? \n\nLaura nodded and rose up on her knees. As Bailey had before her, she put a leg over Kent and straddled him, facing away. Her cheeks, not nearly as abused as Bailey's, showed the red streaks from the paddling much more clearly against otherwise pale flesh. \n\nSlowly, warily, she lowered herself down until she made contact between her vulva and his erection. \n\n\"Oh, god,\" she whispered, her body twitching away. \n\nWith less hesitation, she moved down again. The second contact felt a bit more certain and she gently rocked her hips back and forth, sliding along his shaft. \n\nWhere does she want to rub it? On her clit or up against her vagina? At the moment, it's just rubbing her lips, but who knows where it tingles for her? \n\n\"Kent,\" she murmured. \n\n\"Yeah?\" \n\n\"I'm ready,\" she said. \n\n\"Do you want to say when?\" he asked. \n\nBailey had said 'please' five times and Laura hadn't even raised an eyebrow. From that, Kent had concluded the girls had discussed this option. \n\nLaura shook her head mutely, letting a little more of her weight rest on him. \n\nJust need to hold out a little longer. \n\n\"Okay,\" he warned, setting his hand on her cheek. \"Here it comes.\" \n\nLaura nodded her silent agreement and he swatted her ass. She drove her hips down hard and let out a squeak. \n\n\"Twenty-six,\" she said, lifting herself back up with a shiver. \n\nThe gentle stroking continued until he landed his next strike, forcing her down on his cock again. \n\n\"Twenty-seven,\" a moan escaped her lips as she stroked herself against him. \n\nIt's her clit, Kent noted the information for later use, she isn't going for pressure up into her vagina like Bailey sometimes does. \n\nKent watched the way her black panties stretched across her cheeks as she moved, inviting him to strike again. \n\n\"Ah!\" she screamed out. \"Twenty-eight.\" \n\nLaura's weight stayed on him this time and he knew, despite all of his other misgivings about her and all of Bailey's uncertainty about whether the girl ever pleasured herself, that this was exactly how she took care of her own needs. \n\nGotta get the spanks out before she hits it, though. \n\nHe swatted her right cheek again, as low as he could reach. \n\n\"Twenty-nine,\" she moaned, her gyrations reaching a fever pitch. \n\nSave the last one for just the right moment. \n\nA choked gasp escaped Laura's throat and her knees closed inward, digging in painfully at the nerves in the lower part of his thighs even as her entire body weight dropped in his lap. \n\nNow. \n\nHe slapped her dead centre in her right cheek, knowing she couldn't even move, never mind speak, in response. Instead, Laura stayed frozen atop him, her insides shaking, and simply accepted the last of her payment. \n\n\"Oh, god,\" she whispered, \"Oh, god. Oh, god.\" \n\nShe slid off him sideways, releasing his erection from containment, and fell onto the bed on her side, facing away from Kent. With his left arm over her neck, he pulled her close while she shivered, half worried she'd fall off the bed. \n\n\"You alright?\" \n\n\"Oh, god,\" she ignored his question, lost in her own world. \"I'm so bad. So bad.\" \n\n\"You're not bad,\" Kent tried to keep his voice calm. \n\nShit. Have I broken her? Bai, Bai, Bai. Was this too much, too soon for Laura? \n\n\"Bad girl,\" Laura repeated. \"Oh, god, so bad.\" \n\nShe turned around in his embrace and looked him in the eye, mournfully, \"So awful.\" \n\nChrist, Kent felt a terror reach out from her blank eyes and grip his heart. \n\n\"Just relax. That's what you wanted,\" Bailey chided softly, \"you wanted to be a bad girl, and now you are.\" \n\nLaura whimpered, burrowing into Kent's shoulder, and Kent wondered what sort of conversations passed between them in his absence. His instinct had run along the lines of consoling Laura, but Bailey saw something else. \n\nBailey does know her better, he mentally shrugged, the tension in his chest easing, but... \n\nLaura's hand reached out and touched his erection. \n\nOh, okay. \n\nBailey cupped his testicles as Laura stroked his shaft. \n\n\"Fuck,\" Kent exhaled the word as one long breath, his arms pulling both girls in more tightly. \n\n\"Do you want to see it?\" Bailey asked. \n\nLaura shook her head, her voice lost, and continued stroking the length of his erection. \n\nMaybe next time. No biggee. \n\n\"Will this,\" she croaked out in a stammer, \"will it make you come?\" \n\nShe wants to know if she's doing it right. \n\nKent gasped out, \"Yeah. Oh, yeah.\" \n\nHe stretched his hands down the backs of their bodies, reaching for their bare cheeks, but both girls lay out of reach. Bailey, understanding his desire, moved first, propping her body up and moving so he could get his right hand on her ass. She groaned as his fingers sank into the reddest spot in centre. Laura soon followed suit and, at that point, Kent lost control. \n\nWith both girls in his grip, he thrust his hips up in the air and felt his loins surge. Laura stopped for a moment in surprise, but Bailey's hand came down on hers, forcing her to keep stroking, harder and harder, right through his orgasm. \n\n\"That's a bad girl,\" Bailey whispered to her. \"Don't stop.\" \n\nLaura kept going, and going... \n\n\"Okay, okay,\" Kent begged, \"I'm empty!\" \n\n\"Oh, sorry!\" she jerked her hand back. \n\n\"It's alright,\" he assured Laura breathlessly, \"It's fine.\" \n\nA wide wet spot showed in his shorts. \n\n\"That's a lot of... stuff,\" Laura observed in shock. \n\nKent laughed, \"Have you looked at your panties?\" \n\nLaura squeaked and laid back down on his shoulder. \n\n\"Are you alright now?\" he asked her. \n\nShe nodded, not altogether convincingly, and ran her hand up his shirt over his chest. \n\n\"She's a bad girl,\" Bailey put in. \"But she likes it that way.\" \n\n\"My butt needs a break, though,\" Laura said, and Kent felt certain she'd aimed this declaration at Bailey. \n\n\"Ten dollars, today,\" Bailey replied in assurance, rolling her thigh far enough over his leg that he could see part of her right cheek. \"We can take a day or two off.\" \n\n\"That's a record,\" Kent admired them both, \"Ten bucks all in about an hour.\" \n\n\"Yay, spatula,\" Bailey rolled her eyes before reaching down to rub her exposed cheek. \"Oh, man. That's gonna hurt for days.\" \n\n\"It was a fine gift,\" Kent tried his best to ooze sarcasm and, by overdoing it, demonstrate his sincerity. \"I truly appreciate it.\" \n\n\"Wasn't it, though?\" Laura said. \n\n\"Are you gonna be okay?\" he squeezed Laura in tighter as he spoke. \n\n\"Yeah,\" she nodded quickly. She took a breath, \"It's just I've never done...\" \n\nKent accepted the way Laura left her sentence unfinished. She could have included any of a number of verb-noun combinations describing the last few months and still have made an accurate statement. \n\n\"Me, too,\" he agreed with her sentiment. \"Have you really been... taking pictures of yourselves?\" \n\nBailey started at that, but quietly said, \"Yes.\" \n\n\"Why?\" \n\nHis housemate made several aborted attempts at starting a sentence, but finally settled herself down. \"So I remember.\" \n\nHe opened his mouth to speak, but Bailey cut in. \n\n\"No, you can't have them,\" she said. \"I keep them well away from the Internet.\" \n\n\"That's not what I was going to say.\" \n\n\"Sure,\" she agreed with considerable doubt in her voice. \n\n\"I was going to ask if you've taken pictures every time.\" \n\n\"Almost, yeah,\" Bailey's voice came through natural and relaxed. \n\nKent felt as if he might ask her anything and get a true answer, but he didn't have any questions burning in his brain to take advantage. \n\nOh, I know. \n\n\"Bai?\" \n\n\"Yeah?\" \n\n\"The very first time I spanked you.\" \n\n\"Last year?\" \n\n\"Yes,\" he clarified, \"last year.\" \n\n\"What about it?\" \n\n\"How did you feel right then?\" \n\nBailey's deep breaths indicated to him that he'd caused a whole lot of reconsideration to flood her brain. \n\n\"Honestly,\" she said, \"it was like you'd pushed a weird button. It made me feel all sorts of things and I couldn't sort it out for days. At first, I was... sort of freaked out... that you'd taken a little bit of flirting to that level.\" \n\nShe paused for another deep breath. \n\n\"But?\" \n\n\"But, after a while,\" she said. \"A few days, I mean. I just noticed that I kept thinking about it. Kept thinking about the feeling, the shock of it, and just the fact you'd touched me.\" \n\n\"It's strange, but it took me a whole week to realize I was completely fixated on that one moment in time.\" \n\nBailey shook her head. \n\n\"I shouldn't even tell you this,\" she said. \"You're still paying me to spank me.\" \n\n\"Don't worry, I'll just spank you harder to make up for it,\" he assured her. \n\n\"Fuck off,\" she breathed dismissively and laughed. \"C'mon, Laura. You need to get home and I do need to take care of some school work at some point.\" \n\n\"Damn,\" Kent sighed as they crawled out of his bed. \"Alright. I guess I should do something productive, too.\""
    ],
    "authorname": "xtorch",
    "tags": [
        "orgasm",
        "payment",
        "spank",
        "spanking",
        "spatula",
        "strip",
        "unlock",
        "strip search",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-19"
}