{
    "title": "Beverly Pt. 02",
    "pages": [
        "Thank you for the positive response to part one.\n\nBeverly part two\n\nWhile I got the potatoes and sides ready I watched him through the patio doors. I felt like I should pinch myself just to make sure he wasn't a dream or figment of my vivid imagination. I smiled, dammit he's cute, and though he's an outdoors guy he doesn't look rough and intimidating. The best way to describe him to myself was solid and well put together, his body wasn't massive, but it was certainly tight and strong. When my body had been pressed to him at the front door I couldn't recall finding one flabby or soft part of his body.\n\nI caught myself wondering, will he have a huge dick, will it be as solid as the rest of his body, will he be able to deliver what my neglected kitty longed for? Then I remembered Laura's words about not worrying how big he is, but rather on whether he satisfies me. That's what I would do, wait to see how well he satisfied me, if he's as tender and affectionate in bed as he's been treating me, I'm in for a good screwing. No matter how soft and tender we may start, I was sure I could get him up to full speed and hammering my pussy into the mattress if that's what I wanted.\n\nI looked up from the table as the patio doors slid open, Yngvar had the platter of meat in one hand and the utensils in the other. Setting the plate down he closed the door, put the utensils on the sink and drew me tight to his body. Our kiss was as hot as the food, I pushed my hips into him softly, his hand slid up my side and cupped my left breast, softly molding it, lightly brushing his fingers over the nipple. He broke our kiss, then leaned and kissed my breast through the blouse. Pulling back he stood upright, kissed me and said, \"thank you.\"\n\nI looked at him oddly, \"For what?\"\n\n\"Not wearing a bra. I love your tits Bev, I'm hoping I'll have them in my mouth before the night is over. But now, let's eat. I'm starved and I hate eating cold food that's supposed to be hot. Like you baby, hot.\"\n\nI put my hand over his and drew it across my chest to the other breast, then whispered, \"She was feeling left out. Sit, I'll get the potatoes.\"\n\nWhile eating he stared at my chest constantly. Finally he spoke, \"Open two more buttons Bev, let me see your breasts.\"\n\nI thought it an odd request but did so anyway, as the blouse opened he smiled from ear to ear. Looking down I realized he could see not only the small valley between the mounds but the edges of the areolas. Moving my body to one side exposed my nipple, he smiled and groaned when I did that.\n\nLooking at me with lust in his eyes he growled, \"Now the other one.\"\n\nThinking to myself, \"just how far do I want to open the door tonight\"? I made an executive decision. I was going to call his bet and raise the ante to see what he would do. If it led to us being in bed rooting around, then so be it, but enough soft stepping, it was time to get busy. Sitting straight I opened all the buttons, stood, jerked the bouse from the waistline and pulled back both sides as I sat. I watched him literally drool, no man had ever drooled over my body, especially my tiny tits as I was used to them being called. He quickly wiped his mouth with a shirt sleeve and stood.\n\n\"Bev, you are a cock teasing little slut and I'm just the guy to tame you.\"\n\nI was initially stunned, then frightened. What had I done? When he reached my side of the table he very gently cupped a bare breast and kissed me. Moving his hand behind my back he slid the other under my legs and lifted me like a feather, just as he had done in the park. Cradled in his arms I linked mine around his neck and cooed into his ear.\n\n\"Take me to bed Yng, make me your girl. I need you baby, I need you inside me, deep inside me.\"\n\nHis groan told me everything I needed to know. He was not only in charge he was going to make me his woman, my body shuddered at the thought of being loved and satisfied at the same time. In the bedroom he set me on my feet, removed the blouse and lifted me by the waist until my nipple was next to his mouth. He kissed and sucked the one, then the other. Setting me back on my feet I started to remove my jeans.\n\nTaking my wrists in hand he put them at my side, \"Stay still Bev, let me undress you. Let me love you. I won't hurt you in any way, relax, let me take over.\"\n\nI knew I was experiencing what my sister had talked about, letting a man take control and not be fearful knowing he was going to be affectionate, while at the same time taking me over the edge again and again. The only man who had ever managed to make me climax vaginally was the married guy. I was looking forward to Yngvar making that happen as he slid my panties down, put his hand on my tummy and pushed me back onto the bed. With the lower half of my legs hanging over the edge of the mattress he put his muscular hands under my thighs and lifted them, spreading me wide open in the process.\n\nI felt the labia open and his warm breath on my skin. Yes, yes, and double yes, he was going to eat me. My dreams were coming true in rapid fashion. With his hands holding my legs fully apart he proceeded to lick from bottom to top, flat tongued at first. Quickly it changed to a stiff tongue probing within my vagina an inch or more, I'd read and heard about being tongue fucked, this was heavenly. His tongue then moved up through the labia and rested dead center on my clit. Softly, ever so softly he licked my clit. My hips were undulating, pushing into his face and then the attack began.\n\nUsing his fingers he spread the hood of my clit, exposing the hard, blood engorged, marble size love button. Circling it with his lips he sucked and licked fervently. He kept moving around and then looked up.\n\n\"Tell me where you like it best Bev.\"\n\nHo Lee Shit, a man who doesn't think he knows it all. I reached down with my hand putting the index finger to the right of my clit and rubbed, moving my hand he proceeded in paying attention to my most sensitive spot. Within a minute he had me bucking into his face, my mouth was open, but nothing was coming out, my breasts were a tingling mass of sensations. I grabbed the left nipple and pulled outward, my voice returned as I yelled, \"OH FUCK\".\n\nThough I was trying to clamp my legs around his head he held me open and continued licking, wave after wave of orgasm ripped through me, never had I felt such massive orgasms. I finally sat up pushing him away.\n\n\"No more, oh my God, no more.\"\n\nHe lifted as I clamped my legs together, my body was still shaking, I couldn't seem to catch my breath, my hand was between my legs clamped tight to my pussy. What had this man done to me? I didn't care, I only knew I wanted more. I watched him undress as the final shakes, throbs, and shivers left me sated and out of breath. I was right, his hairy chest barely hid a mass of rippled muscle, his arms were solid, his abs were pronounced and best of all.\n\nHe had a lovely cock, a cut cock with gnarly looking veins running along the sides. I didn't need to know how long or thick it was, I instinctively knew he was enough to satisfy me, to spread me open with that massive looking purple like head and then impale my pussy. To fill me completely, bring me to another earth-shattering orgasm and then unload a massive amount of seed inside me. His cock looked as stiff as a broom handle, when I took it in my hand it felt like there was velvet covering all that aroused muscle.\n\nWith me in the middle of the bed he crawled to me, opening my thighs as he moved. I looked between us to see his hard beige colored cock swaying side to side over my dark brown abdomen. I smiled, put my arms around his neck, kissed him and whispered in his ear.\n\n\"Put that lovely white cock in my slippery black pussy and fuck me silly Yng. I wanna be yours Yng, only yours.\"\n\nLooking into my eyes he had a serious nature about him, \"Put me inside Bev, and when you do, you're mine, I'll never let another man have you.\"\n\nReaching between us I grabbed his dick and brought it to the opening of my vagina, lifting into him I grinned and spoke. \"Then I'm yours baby, and like you, I'll never let another woman have you. Now, do you think you can finish this without any more help?\"\n\nHe laughed, \"You naughty little bitch, you're in for the fuckin of your life. Better put your hard hat on baby cuz it's gonna get brutal.\"\n\nAnd fuck me he did. As he pressed forward into my vagina I felt the sides slowly opening, they seemed to want to remain undisturbed. The head was spreading me open, the walls were holding tightly to the shaft as he pressed deeper inward, I was momentarily uncomfortable while at the same time being satisfied. He see-sawed in and out a few times, each thrust going a bit deeper, I reached between us grabbing his dick, holy shit, he wasn't much more than halfway inside me. I tried opening my legs further, smiling he placed his arms under my knees and lifted.\n\nOh my god, I was wide open as he slithered further inside me. The feeling of his cock opening me further and further was euphoric, there were nerve endings being stimulated I hadn't known existed. A vaginal orgasm was certainly going to happen soon. I was sopping wet and ready for all of him, putting my hand on his cheek made him look into my eyes as I spoke.\n\n\"Let me have all of it Yng, make me your bitch. Fuck me like you own me.\"\n\nHe groaned as he pulled back and slammed into me hard enough to feel our bodies collide, our pubic hair was meshed, our bodies pressed tight to the other, the sensations of pleasure flooded my body as he held still. Letting go of my legs he took ahold of my ankles lifting them onto his shoulders. I'd heard of and read about the position but had never experienced it. With a concerned look he asked.\n\n\"Are you sure you're ready Bev? You said you wanted all of me. Are you sure you can take it?\"\n\n\"I'm ready, I can take it, I want everything you have, including a pussy full of warm thick cum. Yng, I love you.\"\n\nWith a smile as wide as the Grand Canyon he muttered, \"I love you my sweet little vixen. We're gonna make great looking babies.\"\n\nMy mind was whirring at his statement, great looking babies? That thought quickly dissipated as the bliss of being loved by someone who loved me for me took over. I felt every vein and ridge of his cock, the head spreading me open, my vaginal walls hugging him tightly not wanting to let go. As he would pull back my pussy would scream \"more, more, I want more\" only to have him drive forward again. I could feel him almost touching my cervix, he was deep without hurting me, god I loved how this man was loving me.\n\nThe tingles began in my tummy and worked outward, when the orgasm hit it was like an inner explosion. With my legs alongside my body I couldn't raise up, the feelings ripping through my body took me into a stratosphere I'd never been before. I pushed my head back into the pillow, opened my mouth and let out a long, drawn moan coming from somewhere deep within. I opened my eyes long enough to look at my toes curling, though my skin is brown the knuckles of my toes were stretched so tight they almost looked white.\n\nI was in the midst of a second orgasm a few minutes later when I heard his breathing change, he was grunting and slowing slightly, he was going to cum, fill me with semen, with his life-giving seed, paint my insides and mark me as his own. In the sexiest voice I could muster I said softly.\n\n\"Cum in me Yngvar, cum in my pussy, put your babies inside me.\"\n\nLetting go of my legs he rose, grabbed my hips and slammed his body tight to mine, staying still as his cock twitched inside me. I could feel the semen hit my cervix with each strong spurt, three, then a fourth before pulsing less stringently. Squeezing my pussy muscles as tight as possible I was trying to milk the last dribble of sperm he had to offer. He held himself upright as he came, then softly lay above me, putting his weight on his elbows, his face an inch from mine, kissing me softly, whispering my name, telling me how wonderful I made him feel.\n\nThe hair on his chest tickled my nipples keeping them hard and suckable, which he did as he lifted up, sucking first one and then the other before lying by my side. Putting his arm under my slim body he lifted, turned me to face him and smiled as he cupped my drenched pussy with the other hand.\n\n\"You said to put my babies inside you. Are you fertile right now, is that why you're so horny?\"\n\nI gently laughed before I kissed him. \"As a matter of fact I'm not ovulating, I'm so damned horny because you make me that way. I'm on the pill so there'll be no babies from tonight. Which brings me to this question. What did you mean when you said we'd make beautiful babies?\"\n\nHe belly laughed, \"First, I didn't say beautiful, I said great looking, which I guess is the same. Secondly, I don't want to be without you Bev. Maybe not right now, but when you feel comfortable with the idea I wanna make you my wife and have a family. I want you in bed with me every night. I wanna know everything about you, how to please you, what makes you happy. EVERYTHING.\"\n\nI found myself thinking, 'How did I get so lucky as to have this man want to love me, to marry me, to have a family with me? Then again, maybe it wasn't luck, maybe it's what was meant to be from the beginning.' I was dumb struck to the point all I could do was stare into his eyes. He let go of my messy muff, licked the juices off his fingers and gently stroked my cheek. I found my voice after a minute or so.\n\n\"I would love that Yng. I mean, to be your wife, to have your babies, and I agree, we'll make wonderful offspring. The best part of us both, handsome and smart and good people.\"\n\nSleep overtook before we could shower and clean up. Somehow all of that didn't seem to matter as he held me tightly in his arms and slowly drifted away, I followed suit moments later. I was aroused about 4am to the feeling of a hard finger gently rubbing the right side of my clit. Putting my hand over his I stopped him as I whispered.\n\n\"Let me pee, then I'm all yours.\"\n\nI was sore and it stung slightly as I peed, none of that mattered, I was going to take all my lover had to offer before I let him slip away. He would have no reason to wonder if I truly desired him. I was smiling as I walked back to the bed, it was dark outside, but the nightlight from the bathroom provided enough illumination for him to see the smile on my face.\n\nGrinning he asked, \"What are you up to little girl? You look like the cat that swallowed the canary.\"\n\nI crawled across the mattress to him, then lowered a taut nipple into his mouth, when I pulled up his lips breaking suction made a loud popping noise. Sitting up on my knees I traced my fingers through his chest hair.\n\n\"You're going to make love to me from behind. I want you to go slow at first, slow and deep, when you feel me arch my back and push into you ... I want it all and I want it hard. Off the bed stud and mount me.\"\n\nIt took less than five minutes for my pussy to accommodate and be ready for more, I arched my back pushing myself wide open, my knees spread slightly and I moaned as he sank in another fraction of an inch. Tightening the grasp on my hips he began to thrust, had he not been holding me in place I'd have been knocked forward. My tits aren't big so they aren't prone to sway, but he was hammering me hard enough I could feel them move with every stroke, another first that I absolutely loved.\n\nI was on the verge of a climax when I heard a loud 'AHHHHH\" come from him, squeezing my hips hard he pushed as tight to me as possible and shouted, 'oh my god Bev' as his cock spewed what seemed like a gallon of seed inside my swollen, sore, and grateful pussy. His sperm hitting my cervix was what I needed to send me over the edge. I was moaning loudly, crying out in pleasure while my body pushed back into his. I finally collapsed onto the mattress, my chest and face down, my tiny ass high in the air.\n\nI could feel the liquid run from me and down my legs as he softened and pulled out, what he did next surprised the hell out of me. Moving back with his hands still on my hips he bent and kissed each of my ass cheeks, then leaned over my back and whispered in my ear.\n\n\"Thank you buttercup, I've been dreaming of this for weeks.\"\n\nI smiled and fell flat on the bed, he followed suit tucking in behind and pulling my body to his. Our breathing was quickly beginning to slow, which pointed toward more sleep and more mess between my legs. His hand was on my breast. I lifted and kissed it.\n\n\"We need to shower Yng, I'm a mess and I don't want to stink like a used pussy when we go grocery shopping this morning.\"\n\nHe chuckled, \"We're going grocery shopping?\"\n\n\"Yes we are, now let go of me so I can start the shower.\"\n\nHe pulled me tighter and nuzzled my ear. \"What if I want to eat you again and have you ride me cowgirl?\"\n\nTurning I looked at him, \"Then I'd let you do that, I'll never tell you no. But I'd like to be fresh for you.\"\n\nHe laughed and playfully swatted my ass, \"That's okay buttercup, you've drained me for the time being, and you're right. We smell like sex, let's shower.\"\n\nWe survived our first shopping foray without a cross word, awkward glance or deep sigh. After helping me unload he wanted to go home for a change of clothes and to check on Princess, his pregnant mare. He couldn't have been gone more than ten minutes when the phone rang. I was sitting on the couch in a dress with my legs spread wide, I'd taken off my panties, lifted the skirt, and was enjoying the soft fresh air helping my poor bruised kitty to be ready for the next fuck session. A session I was determined to enjoy, I'd told him I'd never refuse him and I intended to keep my word.\n\nI hadn't looked at who was calling before I answered, \"Hello, this is Bev.\"\n\nLaura huffed, \"Hello this is Bev? What the hell girl, you don't recognize your only sisters name anymore? Just how thoroughly screwed did he leave you anyway?\"\n\n\"Oh, hi Laura, I didn't look at the phone before I answered, sorry. How screwed you ask? Your assessment was correct, thoroughly screwed. Oh my gosh, I never knew sex could be so wonderful, yeah, the married guy was good, but there was never any love. Last night involved not only great sex but deep emotional love. And you're right, size didn't matter, he filled me completely and satisfied me in every way. I could feel him almost touching my cervix and when he came, I could feel it. Damn Laura, it was everything you said it could be.\"\n\nLaura laughed gently, \"Did your dream come true, did he eat you?\"\n\n\"Oh man did he ever. Laura, he actually asked where my hot spot was. Once I showed him he went right for it and sent me into orbit. You aren't gonna believe what he wants me to do tonight, sit on his face. Can you believe that? I know you talked about it, but I didn't think it would happen to me so soon.\"\n\nLaura giggled, \"Oh honey, be prepared to hang onto the headboard when you cum. When Darrel does that it flat wears me out. I'm almost like a rag doll when he finishes, and I love seeing his face all shiny from my girl juices. It's hot as hell.\"\n\nMy mind was going in circles. \"Laura, am I jumping the gun? Am I letting him have me too soon? He's perfect, my dream come true, I don't want to lose him.\"\n\n\"Okay little sister, a few questions. Number one, did he treat you with respect or like a slut?\n\nNumber two, did he bring you to a climax before he let loose? Three, has he given you any indication he isn't sincere in his desire for you?\"\n\n\"Umm, gimme a minute.\" I quipped. \"No, he didn't treat me like a slut, it was more like being treated as someone special, I mean, he doted over me, he pays attention to what I say. Laura, he told me he loves my little tits. Can you believe that? As for number two, yes, he made sure I came before him, in fact several times. God that man has a lot of jizz, it was running down my legs. Three, the only indication he gave me was that he wants to be with me forever.\"",
        "Laura laughed, \"You got all that from a night of love making? Holy crap girl, you're hooked. He's got you in his grasp and from the way you make it sound he isn't letting go. Baby girl, I'm so happy for you, do your best to keep him satisfied, you know what aunt Tara says, 'keep his stomach full and his balls empty, then he'll never drift', I can tell you firsthand that is a true statement. I make sure Darrel is worn out as often as he needs to be. It isn't all the time, but when he needs it, I make sure he gets it. All things being equal that is. It's absolutely amazing the power I have over that hulk of a man with a tiny pink slit between my legs.\"\n\nI wasn't sure what she meant, \"How do you mean all things being equal?\"\n\n\"You know, if I'm not feeling well or having my period. Stuff like that, but even then, he's understanding and kind. He doesn't force me to do oral or anal. I will occasionally give him a slow, deep, hands-free blow job during my period, but not every time.\"\n\nMy curiosity was peeked, \"What about anal? Do you guys do anal?\"\n\nShe scoffed, \"Not me little sis, there a one way only sign on my poop shoot. It may be for others, but not me. Darrel never brings it up or pressures me, apparently my snatch and mouth are more than enough to keep him happy.\"\n\n\"Yeah, I've never tried it and I don't think I would like it. Being in the medical field I'm aware of so many diseases that can transpire from stuff like that. Yngvar hasn't brought it up, and I hope he doesn't.\"\n\nLaura got real quiet a moment and then asked, \"What are you guys doing tonight?\"\n\nI answered, \"Nothing much, why?\"\n\n\"We're having friends over for a bbq, the Johnson's will probably hang around to play cards, but the others will only be there for the food and conversation.\"\n\nI wanted to be careful before committing, \"Will he be the only white person there?\"\n\n\"Nope, Larry and Georgia are coming, he's as white as they come and she's Filipino. He'll be welcomed, don't fret. Darrel will make sure he's comfortable. After all, it's been a long time since my sister has had a decent man in her life. So ... you guys coming?\"\n\n\"I'll say yes, but I need to make sure it's okay with Yngvar. I'll call back in a while.\"\n\nI caught myself thinking about her statement, a tiny pink slit between my legs. Yes, that's all it was, but for Yngvar it was the greatest thing in the world. I figured he'd be in the woods when I dialed, imagine my surprise when he answered.\n\n\"Hello my love. What can I do for you, just name it and I'll try making it come true.\"\n\nThe heat ran up my cheeks, I was flushed and had trouble catching my breath. I felt the dampness in my panties begin, just the sound of his voice made me want him.\n\n\"Um, Laura and Darrel are having a bbq tonight and invited us. I told her I needed to talk with you first.\"\n\n\"Thanks babe, thanks for calling. I'm game as long as it's not an ambush, I don't wanna be blindsided by a bunch of people who mean well by vetting me on your behalf. You know, is the white boy just in it for the pussy kind of stuff? I personally don't give a shit about them, for you I'd move the world, for them ... nah.\"\n\nI was again flush, he seemed to know all the right buttons to push at all the right times.\n\n\"I sort of asked the same thing in a roundabout way, Laura assured me that Darrel will run interference for you if anybody tries that. I honestly don't think they will and you won't be the only white person, Larry and his Filipino wife will be there.\"\n\nI heard him mumbling incoherently before speaking into the phone. \"Sorry, I'm currying Princess and she insists on making my job difficult. I think she's jealous I have a girlfriend. Okay, I'm in, with one condition. You wear a pretty dress, it's supposed to be warm tonight, you should be okay.\"\n\n\"Oh, so you have a girlfriend do you? And just who might that be?\"\n\nHe chuckled, \"You silly girl. Don't make me come over there and hose you down before the bbq.\"\n\nI laughed, \"Oh my, I would love it, but I might not be able to walk right afterward. Honey I'm still sore from last night and this morning. I do have one question. How would your horse know you have a girlfriend, I've never been to your place?\"\n\n\"Bev, I talk to her about you all the time. She knows I'm in love with more than her. You women, sometimes you're so fickle. What time should I pick you up?\"\n\nI was on the patio waiting as he arrived, feeling like his personal slut I stepped to the edge and lifted my dress just enough for him to look up through the guard rail and see my panties. He grabbed his crotch and groaned. When I answered the door he pushed his way in, gently pinned me to the wall, slid his hand up my dress and cupped my pussy. With his lips barely touching mine he whispered.\n\n\"You are a naughty little girl, I'll need to punish you when we get back here. I'm gonna lick you until you scream and then I'm gonna fuck you until you scream some more. What do you think of that?\"\n\nI pushed into his hand and answered, \"Promises, promises, always promises.\"\n\nSeeing the fire in his eyes I knew I should have kept my mouth shut. He picked me up and threw me over his shoulder like a sack of flour. Carrying me down the hall to the bedroom he began working my panties over the cheeks of my butt, as he set me on the bed he pulled them the rest of the way off. Taking me by the waist he lifted me, lay down and sat me directly over his chest. As I looked down he lifted the skirt to my waist and pulled me to his mouth. Spreading the labia with his fingers he went to work on my gash, licking, sucking, teasing, and then I felt his stiffened tongue on my clit.\n\nWith his hands on my titties over the dress he molded and shaped them, I had purposely worn a bralette so the nipples didn't show through the dress. It didn't matter, my nipples stuck out like the end of my little finger, they were so hard they almost hurt. When my climax started he squeezed my breasts hard, not enough to hurt me, but enough for me to know he owned them now. My hips were rocking, my tummy tightened and convulsed, I was out of breath and then I realized. I was doing exactly what Laura said I would, my hands were clasped to the headboard like I was going to fall off a tall building.\n\nAfter gaining my breath I opened my eyes to see him staring at me. I smiled and made a kissing motion, he gave me one last lick that was almost torturous, I was so sensitive I slapped the top of his head and squirmed away. I lay to his side, he got up, washed his cum covered face and returned. Picking up my sodden panties he asked where the dry ones were, I pointed to the top left drawer. He found a pair of lace sexy skimpy ones and tossed them to me.\n\n\"Put these on beautiful, and don't argue about it or I'll have to punish you again.\"\n\nI was smart enough to keep my mouth shut. At the bbq all went out of their way to make Yngvar feel accepted, including my dip shit brother who can be a real jerk at times. Everyone wanted to know about his odd name, his culture, and when they found out he was a lumberjack the mood changed immediately. All of a sudden the guys had a ton of interesting questions and some of the wives were all but drooling. I wanted to be jealous at first, but he made sure everyone knew we were together.\n\nAt one point he was sitting on a lounge chair and I was standing next to him. I felt his hand slide up the back of my leg under the dress, panic began to set in, I didn't have a clue as to what I should do, so I stood there. Our backs were to a fence so there was no risk of being seen from behind, but surely someone would figure out his arm was under my dress. As his hand slid further upward I tried positioning my legs closer together, to no avail, his strong hands simply pushed them an inch apart as they'd been.\n\nHis hand was on the inside of my thigh an inch or so beneath my crotch, I knew I was getting wetter by the minute. That was where he stopped, with his hand resting on the inside of my thigh he softly caressed, gently stroking my thigh and occasionally a finger would flutter across the wet gusset. I could feel my labia swollen and puffed out, pushing against the fabric of my now drenched panties. When Laura approached us he slid his hand up until it touched my pussy and then dropped it to just above my knee.\n\nAs Laura and I talked she kept looking at my legs and then at him. She couldn't see behind me, but his arm wasn't on the armrest either, she knew where it was. As she leaned to kiss my cheek she whispered.\n\n\"This guy knows how to keep a lady wet, don't let him get away Bev.\"\n\nStanding back she winked at me and walked away. When her back was turned his hand went all the way up and cupped my pussy. Looking down I could see the outline of his hand through my dress. I gently stepped to the side and motioned for him to let me sit on his lap. After kissing him I started to whisper in his ear.\n\n\"Honey, don't forget how skinny I am. I don't have much for hips and no tummy to speak of, once you look past my boobs it's flat all the way down. I could see the outline of your hand through my dress, please don't embarrass me. You can do anything you want when we're alone, but please, not here, not in front of the others.\"\n\nHe kissed and held me tight apologizing over and over.\n\nI whispered in his ear, \"I liked your hand on the inside of my thigh, I like being your woman, Paul.\"\n\nWith that he chuckled and patted my butt. \"I think we've been here long enough buttercup, take me home and make love to me.\"\n\nAs Yng was saying goodbye to Darrell and setting up a time for him to bring the kids out and see the mare before she foaled Laura was hugging me. Very quietly she said.\n\n\"His tummy is full. You know what to do next don't you?\" I nodded. With a quick sisterly peck on the lips she whispered, \"Take him home and empty his balls Beulah.\"\n\nThere it was, my given name, she was dead serious about me coaxing every last drop of semen from my man. We spent the next two hours kissing, feeling, licking, fingering and eventually making love. It was slow and sensual, nothing hurried, we didn't need to rut and pound like the night before. This night was about connecting internally, about solidifying that we belonged together and to each other. When we finished he got out of bed, wet a washcloth with warm water and returned, wiping away the mess we'd made between my rubber like legs. I felt so weak I didn't want to move.\n\nSliding under the covers and holding me to his body we fell asleep, not waking until the wee hours of the morning. I wanted to give him a blow job, he suggested I wait. His exact words were.\n\n\"There'll be plenty of time for you to do that later, for now let's concentrate on you healing for a few days so we can make love again. I don't want to be without you Bev, will you think about moving in with me? I'll take good care of you I promise.\"\n\nWow, things were moving at the speed of light it seemed. We hadn't known one another very long and here we were in bed together talking about me moving in with him. And yet, it all seemed as though it was planned to be this way, we were good together, our love was sincere and our desire to be with each other strong. We were young adults, not kids. With my parents gone I relied on Laura for someone to bounce things off, I would need to call her in the morning.\n\nWhen I woke and glanced at the clock it read 8:27, I hadn't slept that long in ages. The bed beside me was empty, I could smell bacon cooking which immediately signaled that he wasn't gone. Padding down the hall in my extra-long night shirt and nothing else I walked sleepy eyed into the kitchen. Yngvar saw me, turned away from the range and took me in his arms. It felt so very right to be in his arms, his solid chest a place to lay my head, his strong hands gently patting my butt, then a soft squeeze.\n\n\"Good morning sleepy head. I wondered how long before you were gonna get up. Bacon is almost done and the pancake batter is mixed, I even got some fruit for you to piece on while I cook your breakfast.\"\n\nI pulled back and made a face as I realized I had dragon breath, he didn't care as he gently kissed me, his lips soft and consuming. I felt like our lips had become one entity. His shirt was partially unbuttoned, leaning back I kissed his hairy chest.\n\n\"Where did the bacon come from? I don't usually buy it.\" I asked.\n\nHe grinned, \"I went and got some. You were sleeping so sound when I got up at six that I ran to the store real quick, I left a note in case you woke before I returned. After breakfast will you come with me to the farm, I need to check on Princess, she's due anytime now.\"\n\nWe'd finished breakfast, he cleaned up while I showered and washed away what had trickled from my vagina through the night. I was dressed in jeans, a cotton blouse and old sneaks, he whistled when I walked from the bedroom. I sauntered over, put my arms around his neck and pushed my middle into him as we kissed, then asked.\n\n\"Hey sailor, new in town? I have some horns that need trimming if you're interested.\"\n\nHe slapped my butt and told me to get my skinny ass in the truck. At one of the stop lights I saw Doctor Tim with his family. He waved, smiled and proceeded. I was sure we would talk the next day at work. My schedule for Monday was full, he would be one of the dentists' checking patients when I was done cleaning their teeth. We stopped for a gallon of milk and to top off the gas tank, while I waited in the truck who should pull into the pump next to us but Jamal. He had gotten out of his flashy sports car and was headed to me when Yngvar exited the building. Upon seeing Yngvar he immediately spun and hurried back to his vehicle.\n\nI wanted to flip him off or do something vulgar but realized it would be wasted energy. I was with the love of my life, content and happy, I simply smiled and gave him a toodle-oo wiggly finger wave as we passed by. Making our way up the long driveway Yngvar tensed up.\n\n\"Somethings wrong Bev, Princess is always in the pasture next to the driveway, I can't see her. Oh shit, what if she's trying to foal and I haven't been here. Damn.\"\n\nRacing to the barn he slammed on the brakes, cut the engine, jumped out and ran inside. I followed right behind, what greeted me was something I'd never seen, Princess was on her side with a colt about to drop. Yng was in with her, talking gently, stroking her head as Princess gave one last push. With the foal birthed Princess gave a long sigh and began getting to her feet.\n\nI wanted to help, \"Shouldn't we be doing something? We can't just leave her baby lying there in the straw.\"\n\nTalking softly to the mare he kept rubbing the side of her head. \"You did good girl. Looks like you have a daughter. This is Bev, she'll be your new mistress, Princess snorted as though she understood. Time to take care of your little one girl, we'll get out of the way.\"\n\nI still thought we should be doing something. He explained why we weren't.\n\n\"She needs to clean the foal, she'll lick away the amniotic fluid. That helps stimulate and dry the foal, it's also how she begins to bond with her offspring. It won't take very long and she'll nudge the little one onto its feet, you'll see. Come on, let's sit over here and watch.\"\n\nWe sat on a bale of hay and watched for over half an hour. I felt a thrill go down my spine as the colt stood for the first time on wobbly legs, we waited until the foal had found the udder and begun to nurse before heading for the house. The sun was warm and made me feel welcome at this man's castle. He held my hand as we walked, at the door he opened it, put his hand on the small of my back and escorted me inside. What greeted me was a modern well-equipped kitchen, it didn't seem as though anything had been spared when it was remodeled.\n\nWalking throughout the house I was pleased that everything was clean, especially the bathrooms. Men can be pigs at times, even the bed was made, it was obviously a man's house and needed a woman's touch, but it was clean and organized. He went to relieve his bladder as I continued snooping, when I opened cupboards and the fridge I was pleasantly surprised to see them well stocked. Remembering the milk I quickly ran to the truck and brought it in. Thankfully it wasn't a hot summer day or it wouldn't have been worth trying to save. The jug was still cold as I popped it in the refrigerator. Yngvar was coming around the corner as I closed the fridge door.\n\n\"Thanks babe. Guess I got carried away with princess foaling. You're welcome to stay for supper, but I have nothing thawed, seems a young dark-skinned filly with a beautiful smile and smokin hot body has kept me preoccupied the entire weekend. I'd rather take you somewhere for a meal, would that be okay? Dilly's Bar has delicious grilled chicken sandwiches and I love his homemade fries. Did you know he double cooks them? That's why they're so brown and crispy.\"\n\nGeez I loved this man, finding each other had been worth the wait. The days of wondering if I would ever manage to meet my knight in shining armor were over, he was before my very eyes. We went back to the barn, Yngvar closed the door he normally left open for Princess with the intention of helping it stay warmer inside, made sure she had plenty of fresh feed and the waterer was working properly. Her foal was now walking with mama on its spindly legs, Princess nuzzling and gently prodding it along.\n\nOn the way back to town I drifted off into a world I'd never considered before. Imagining him walking the floor with our newborn, talking to it, holding it firmly, keeping it safe, bonding with it. He would be like that, I just knew it inside. At Dilly's we ordered the meal, he ordered a beer, I ordered a glass of red wine. When Dilly set them before us he stood back and looked me over, not leering, just looking.\n\n\"Where you been hiding this lovely gal Yng? Dang, she's a looker, what the hell is she doing with a doorknob like you?\"\n\nYng laughed, \"This is my girl, Bev. Bev this horses patoot is Dilly. Speaking of horses, Princess foaled this afternoon, a wee filly. You'll hafta come see her some day when Bev isn't around, I don't need you hittin on her. I know what you old farts are like around pretty girls.\"\n\nI laughed a little as I put my hand on his, \"You won't ever have to worry about me with another man, I'm yours and yours alone.\"\n\nYng was smiling, \"I know, I like to tease him. He's in his sixties and a widower. I think he has a honey on the side, but he still flirts like hell with the pretty ones, pretty ones like you.\"\n\nMonday morning Doctor Tim saw me in the hallway and led me into one of the rooms.\n\n\"How long have you been seeing that fella Bev? You're aware I don't necessarily like office staff mingling with patients, but there are exceptions.\"\n\n\"I've been with him a short while, in fact right after his cleaning. We hit it off immediately, what impressed me about him is that he wasn't pushing for anything physical. He took me out, we had a great time, he took me home and he left.\"\n\nDr.Tim looked at me with lifted eyebrows. I giggled.\n\n\"Don't worry doc, we've made progress since then, and I might add, he's all man. Kind, polite, shows me affection, and doesn't behave like Jamal the everlasting teenager.\"\n\nHe frowned, \"Yes, Jamal. Unfortunately when you spurned his advances, he turned them toward Dorothy. Need I say her husband wasn't pleased. Jamal will be moving on by months end, which is unfortunate because he's a good dentist, he just never learned to think with the right head if you catch my meaning.\"\n\nI laughed knowing exactly what he meant. I didn't see my man Monday or Tuesday, we talked on the phone each night for an hour or more, but he had things to do and so did I. My last patient was at three fifteen Wednesday, I left a message for him at lunch time to call, I wanted to come out and cook for him, then we could play house afterward. Just before I clocked out my text beeped. He had taken a pork loin out and wondered if that would do. I texted back that I'd make it work and see him by four thirty.",
        "I ran home and changed into a cute house dress that I'd had for years but seldom wore. I wore only skimpy panties with it, no sense making things more difficult than needed. My firm small breasts stood proud, I felt a chill run through my body as I thought about him sucking nearly all of my breast into his mouth. I stopped at the store and bought a bouquet of grocery store kind of flowers, after all, flowers aren't only for women. He was still I the woods when I walked in the back door.\n\nBy the time he came in I had supper all but ready. He was full of sawdust and wood chips from the chainsaw, when he took me in his arms and kissed me gently, I forgot all about the wood chips. Pulling me tight to himself he whispered in my ear.\n\n\"Hello beautiful, damn you're good to look at.\" He didn't pat my bottom though, something I not only liked but had come to expect. Walking outside he emptied the cuffs of his jeans and the went to the mud room where he hung up his work clothes. As he sauntered past me in his underwear I had all I could do to not grab hold of that lovely meat and drag him to the bedroom. He smiled, said he'd wash up and be back in ten minutes. I had supper on the table as he walked out in sweatpants and slippers. A sweatshirt was draped over his arm.\n\nI smiled as I watched the muscles across his chest and abdomen ripple with every stride, thinking to myself. Those are my muscles to enjoy. Those are the arms that hold me tight and protect me, the arms that make me feel safe and secure no matter where we are. Walking to me he draped the shirt over the back of his chair and put his hands on my chest, molding and squeezing my small mounds of flesh. Without so much as kiss he looked me in the eye.\n\n\"Got any panties on under that dress gorgeous?\"\n\nI decided to play his game, \"A good girl never tells. Only bad boys have the nerve to feel under a girls dress.\"\n\nHe dropped his hands to my waist, lifted me in the air and slid his hands to my butt as my legs wrapped around his waist and my arms encircled his neck. Rubbing his hands across my panties he patted twice and grinned, then put them inside caressing my bare bottom. Using his hands to pull me tight to his bulging hardon he said with a raspy voice.\n\n\"You are a teasing little wench Beaulah Milton. I may have to take some of the wind out of your sails tonight.\"\n\nI pushed back looking at him. \"Yes, I know your name is Beulah, saw it on an envelope at your place. I kinda like it, I respect you wanting to be called Bev and will make sure I do .... (he paused and smiled) Buttercup.\"\n\nI couldn't take anymore, I needed this man, my man, right here and now.\n\n\"Can we skip supper Paul? I need your ax to split my slit. Hell, fuck me on the table, I don't care, just give me what I need baby.\"\n\nDamned if he didn't move the dishes to the side with one hand and spin me around with the other. In a flurry of rapid movements I was face down on the table, my panties had been pulled down and his gorgeous cock was fully imbedded within the wet walls of my vagina. I gripped the sides of the table and braced for every hard thrust as it met my tiny ass, his balls were slapping against my clit, it was enough to send me into an early orgasm. Finding his rhythm I began pushing back into him with gusto, I felt him hit my cervix a few times and though I didn't want to make any noise I yelped each time. He knew what was happening and short stroked a few more minutes while my body adjusted.\n\nWhen I knew I could handle it I yelled out \"deep\". We didn't last ten minutes, my entire body was quivering as I felt his load coming through the urethra and into my hungry pussy. Spurt after spurt hit my cervix, then he began to soften slightly, when I tightened the vaginal muscles he growled.\n\n\"You little slut, you want more, I'll give you more.\"\n\nPulling out he flipped me over and sunk his now re-hardened cock into my warm, gooey, wanton love cavern. Our eyes were locked on the other as we humped in unison, my spindly legs wrapped around his legs, dress bunched around my hips, little tits moving back and forth with every stroke. Looking deeply into his eyes I cooed.\n\n\"I love you Paul Bunyan, there can never be another in my life.\"\n\nWith equal passion he replied, \"And I love you buttercup, you're the only woman I want. I can't wait to see your little tummy growing with our baby inside.\"\n\nI moaned and pulled him down to kiss me, it was another fast and furious encounter, we lasted a bit longer than the first episode but not by much. With his semi-stiff dick still inside he lifted me off the table and carried me to the bathroom where he pulled out and sat me on the toilet. Once he'd washed he handed me the warm washcloth and left the room. Walking back into the kitchen I started looking for my panties, he smiled.\n\n\"Looking for these?\" he asked as he put them to his nose and sniffed. I nodded.\n\n\"Too bad, they're mine now. The aroma of you being turned on makes me want you twenty-four hours a day.\"\n\nI grabbed my crotch and with a smile said, \"Ouch.\"\n\nWe both laughed as he motioned me to sit on his lap. Unzipping the dress he lowered it until my pert nipples appeared, without a moment's hesitation he had a nipple in his mouth. After paying attention to both breasts he sat back.\n\n\"How about you sit here on this warmed chair while I reheat supper, we may need some nourishment after that little bump and grind episode.\"\n\nThough we talked every day we didn't see one another again until Saturday morning when I went to his place. He had an assortment of fruits ready when I walked in the door, there was also eggs and sausage if I was interested. As we cleaned up the dishes his phone rang.\n\n\"Hello, this is Yngvar. Oh, hi Darrel. Sure, that will be okay, not for very long though, she's still skittish with strangers around the colt. Okay, we'll see you around one. Yup, bye.\"\n\nHe turned to me, \"Darrel says to say hi for them. I could hear Laura in the background cackling.\"\n\nI laughed, \"Yeah, as soon as she figured out we were engaged in bedroom Olympics she hasn't let up. Always wants to know if I'm satisfied and taken care of. When I told her I'd never imagined having so many orgasms she just smiled and nodded her head as she mumbled, 'that's what it's like with Darrel.\"\n\nPrincess surprised me when they visited that afternoon, she and her colt took to the kids right away. She was skittish about Darrel and Laura, but what mattered most to them was that the kids had a positive experience. After letting each of the kids feed Princess some grain from the palm of their hand Yng felt we should let the horse and colt be. Darrel, Laura and I sat on the deck as Yngvar took the two kids on a tractor ride around the yard, letting each have a turn steering. I found myself thinking, 'what a perfect daddy' he'll be.\n\nWith winter approaching and the end of my lease coming up it was time to decide what to do. I cornered Dr. Tim one morning and asked if he had any free time in the afternoon. It so happened that he and I were both open for almost an hour right after lunch. In the break room by ourselves he nodded my way.\n\n\"What's up Bev?\"\n\n\"I'm in a quandary as to what I should do. Yng wants me to move in with him, my lease is up and I'm just not sure what I should do. We love each other and are compatible, (long pause) I don't know doc, I don't have a dad to ask so I'm asking you.\"\n\nHe sat back folding his arms, \"You love him that much?\" I nodded. \"And he loves you equally?\" I nodded again. \"Are you good together in bed?\"\n\nI looked at him quizzically, he replied, \"It's important Bev. Are you two good in bed? If not, you're in for a long miserable unsatisfied life.\"\n\nHe smiled, \"You're flushed Bev. It must be pretty good by your reaction.\"\n\n\"Oh my gosh doc, that man does things to me I never imagined. Yes, to be honest, we are VERY good in bed. We both like the same things and we both go out of our way to satisfy the other.\"\n\nLooking across the table he leaned forward, \"Then marry the man and make it right.\"\n\nI was stunned, \"He hasn't asked me yet.\"\n\n\"Then tell him, men are dumb when it comes to stuff like that. Simply tell him what you want, if he loves you that much he won't hesitate.\"\n\nIt was a Thursday when doc and I talked, Yng and I typically didn't get together on Thursdays. I made up my mind while finishing with the last patient that was about to change. Pulling into the driveway I noticed the barn lights were on. As I strolled in Yng looked up and smiled.\n\n\"Hey you. This is a nice surprise, what brings you out on a Thursday?\"\n\nI snuggled in tight looking for my hello kiss. Breaking the kiss and looking up I announced my plan.\n\n\"I'm here to find out what it's like to be with you every day. As soon as you marry me I can move in and we can begin making babies, real live babies, not pretend practice run babies. Don't look so surprised, we love each other, I don't wanna be alone and neither do you, so, let's get married and settle it.\"\n\nPulling me tight enough to maul my lips with his he took control, pushing me back against some bales, lifting me to sit on them he smiled.\n\n\"When and where babe? I'm more than ready, I haven't asked because I wasn't sure you wanted to live outside the city. We'll trade your car in for one with all-wheel drive, and heated seats, and I'll put a hot water coil in the garage to keep it warm, the wood boiler has more than enough capacity to handle that. I'm so excited Beulah, I finally get to make you mine forever. Come in the house and make love with me.\"\n\nPutting my hands on his chest I stopped him, \"Un-uh, we've blessed every room in that house multiple times, but we've never christened the barn. Make love to me here, in the hay, show me how much you love me.\"\n\nAfter placing a horse blanket on a pile of thick hay he slowly undressed me, laid me down and covered me with a regular blanket he kept in the small office if he slept in the barn on a cot. I watched as he stripped, he wasn't hurried or frantic. He was in his underwear when I sat up, hooked my fingers into the waistband and pulled them down. As he stepped out of them I scooted to my knees, grabbed his dick and wrapped my lips around it. His hands were on the sides of my head as he slowly stroked in and out of my mouth, I loved how he face fucked me, never abusive or degrading, no choking, no forcing it down my throat, just slow deep strokes that I could take without gagging.\n\nI knew he was getting close and pulled back. I motioned for him to lay down. Whispering in his ear I started changing positions.\n\n\"I'm gonna sit on your face, I want you to eat my pussy. Then I want it from behind, not fast, just deep. Can we do that?\"\n\nHe wasted no time positioning my pussy above his mouth. After a long satisfying fuck we collapsed on the hay, the blanket had been pushed aside, hay was sticking to our sweaty bodies. Still naked he picked me up carrying me to the house, the cool night air soon had its effect on my nipples, they were hard as pebbles. Setting me on the bed wrapped in a blanket he started a bath. Forty minutes later we left the tub and headed for the bedroom. He quickly donned some sweats and went to find my clothes.\n\nHe wouldn't let me leave that night, insisting he wash my soiled panties, promising to take me into work the next day. When I reminded him I would need clean scrubs he relented on taking me in, but asked me to stay the night with him. I got up early, went home, washed, put on work clothes and headed to work. When I walked out the employee entrance Friday after work who should be sitting in his truck waiting but my prince charming. With me leaning through his truck window for a kiss he told me he'd follow me home.\n\nIt was Friday evening, we normally got a bite to eat somewhere and then watched a TV series or a movie. I wanted tonight to be different, sexy, seductive, I wanted him so starved for my body that he would be willing to fuck me senseless as soon as we were behind closed doors. Driving home with him behind me I was doing a mental inventory of the sexy lingerie I owned, I didn't wonder if he would like seeing me in lingerie or not. He's a guy, and guys are visual creatures, he'll love it. Stockings, a belt, transparent panties and a wispy bra that covered nothing, it would be there just so I could say I had one on. The best part will be ..... when he takes it off and mounts me.\n\nI was horny and feeling raunchy, I wanted Yng to pound on my small black ass as long as I could take it. We both enjoyed it from behind and lately I'd come to like it on my tummy with my ass raised, in fact, we'd ordered and received a special foam wedge for just such a position. My chest would be on the bed, my face in a pillow, my tiny ass in the air and his tool owning my pussy. By the time I pulled into the parking lot I was so wet my panties felt gooey, just the way I wanted them to be when he took them off.\n\nI wanted the juice to be so thick that the cloth would hug my vulva and not let loose without him tugging them down. Maybe, just maybe, I'd ask him to eat me as I stood leaning against the wall. Laura told me Darrel had done that to her one night by surprise and it had her so turned on she fucked him in the hallway with the kids sleeping fifteen feet away. That's what I wanted the night to be, unbridled, uninhibited, no boundaries sex from night until dawn. I knew we could never last that long, but hey, it was a nice fantasy.\n\nI was so grateful Yng never asked for or hinted he wanted my ass, it was simply out of the question, there are just too many diseases that can be contracted through feces. A girl can give herself an enema and do other things to be clean, but there's always a risk, one I wasn't willing to take. Had I never had any training in the medical field I may have thought differently, but I did. I had no more than parked the car when Yng opened the door reaching for my hand.\n\nPulling me up he took me in his arms and laid a kiss on me that would start a forest fire, not to mention contributing to the fire already in my nether region. My knees were like rubber, his hands on the cheeks of my ass kept me upright, pulling back he smiled.\n\n\"Good evening future Mrs. Mattila. I can hardly wait to slip that ring on your finger. Speaking of rings, we need to pick out a set this weekend and have it sized right away. I want everyone to know you're my future wife. And for supper, I picked up a pizza at Little Angelo's, our favorite pizza place.\n\nI swooned, no man had ever made me feel this way, \"Yng, I want to go out after we eat. There's a new club in Centerville that I want you to take me to. I wanna dance and have a few drinks and then I want you to screw me senseless. I wanna scream when I cream. Hey, that rhymed, I'm a poet and didn't know it.\"\n\nHe laughed, \"Do I screw you on the dance floor or at home?\"\n\nI pushed in, grinding my pelvis into his, \"You can have me anywhere you like baby, as long as no one else is watching. Yng, when we get inside I want to do something after we eat, something different.\"\n\nWith supper over he asked what I would like to do, I was nervous and excited at the same time.\n\n\"Will you eat me while I stand and lean against the wall?\"\n\nBefore I could continue he grabbed me by the shoulders, pushed me against the wall, yanked my scrubs down and reached for the panties. They were a bit more stubborn than the scrubs, as he literally peeled them away from the pudenda he looked up and smiled.\n\n\"You naughty girl, your panties are full of lovely musky cream.\"\n\nWhat he did next startled me, he grabbed the sides and literally ripped the fabric leaving me completely exposed and his face buried in my muff. With his tongue already doing its magic I yielded and let the pending orgasm slowly encompass my body. It was so good, starting in my abdomen and eventually reaching the tips of my toes as I grabbed his hair with both hands, pushed into his mouth, threw my head back and let out a squeal. He kept licking, flicking his tongue over my clit, sending wave after wave of ecstasy crashing through my body. Pushing his mouth away from my quivering pussy my body began to slump down the wall, he stood and lifted me tight against his chest.\n\nWhispering in my ear he said, \"Like that?\"\n\nI could barely breath, \"Oh my gosh, you damned near killed me Paul Bunyan. Your tongue is as mighty as the ax between your legs. Son of a bitch, I'm so weak I can't stand, take me to the bedroom, please baby.\"\n\nIn a flash I was cradled in his arms one more time, it was as if I weighed nothing. Laying me on the bed he finished undressing me and putting me under the covers naked. My pussy was still spasming, ready for more as I drifted off to sleep. When I woke it was after eight, strolling into the living room I noticed he was on my laptop, I surmised he was probably looking at porn. After all, isn't that what all guys do, or so I was led to believe. When I sat next to him and looked at the screen I wasn't sure if I should be relieved or bewildered. Staring at me was of all things imaginable, chain saws. I pulled back enough to look at his face.\n\n\"Chain saws? You're looking at chain saws? Not porn, or some frilly sexy undies you want me to wear, chain saws, really?\"\n\nHe gave me the snake eye, \"Well I'm getting into the hardwoods more and more, I need a bigger saw. Are you wearing panties under that tee-shirt?\" I nodded. \"Get um off, panties are optional tonight, you wanna go dancing, then I want you to wear one of your mid-thigh skirts, stockings with a belt and no panties. As for porn, I don't need porn, I have you, and regarding sexy undies, you just keep surprising me and I'll continue to adore your body.\"\n\nI stood lifting the shirt to my waist, sliding my hand into my panties I bent over and whispered, \"This is all yours big boy, you sure you don't want to follow me and watch as I dress for you?\"\n\nHe grinned, \"Bev, if I follow you to the bedroom I'm gonna fuck you raw and we'll never leave this house to go dancing.\"\n\nI pulled the shirt over my head, taut firm breasts with stiff nipples awaited his lips as I straddled him. As he sucked one and then the other I bent enough to say into his ear.\n\n\"Then come fuck me raw, to hell with dancing, I need your cock.\"\n\nWhen I stood and turned he grabbed my waist, pulled the panties down and spun me to face him. He quickly kissed my muff and pushed back unbuckling his belt. Pushing his jeans and underwear to his knees he pulled me down so my face was directly above his hard twitching cock. With a hand on the back of my head he gently pushed me toward his dick, I didn't hesitate opening my mouth and inhaling as much as possible before the head hit the back of my throat.\n\nI love his cock, it's more than six but I have no idea how much more, I don't carry a tape measure with me in the bedroom. I just know that when I spread my hand it's six inches from the tip of my thumb to the tip of my little finger, and he was longer than that. I'd been with an uncircumcised guy and found I liked Yng's cut cock so much more. Thick, a bulbous head, veins running down the sides and a tube at the bottom that looked as though it could pump gallons of semen into me. I knew the semen gland and the testicles couldn't possibly produce that much at any one time, but I imagined if they could his cock could handle it.\n\nI had learned through the weeks that he liked his blow jobs hands free, I would at times grasp the lower part and push more into my mouth, but I never jerked him off at the same time I sucked him. With my hands on his thighs I had a nice rhythm going, when I looked up he mouthed, \"my little cocksucker\" and smiled at me. I stayed at the task with great diligence, his head was back and his legs were beginning to stiffen, I knew it wouldn't be long before I received the fruits on my labor. I wanted him to cum hard, hard enough that he'd have to rest while I put on stockings and a belt to be fucked in on the living room floor.",
        "As his back arched and his pelvis pushed toward my mouth I took all I could and waited, the moment I felt semen flowing through the urethra I moved back and locked my lips around the head. Semen spewed from him in what seemed like gushers, you know, like the old westerns where you see the oil gushing out of the ground. I swallowed as fast as I could, I could hear myself gulping as I tried to stay ahead of the heavy spurts flooding my mouth. He had cum in my mouth before, but this, holy shit, this was above and beyond anything previous. I continued to lick and suck lightly as he softened, he finally pushed my head away and pulled up into his arms.\n\n\"No more baby, it tickles so bad it almost hurts. Give me a minute and I'll join you in the bedroom.\"\n\nWith a soft slap on the ass he sent me scurrying down the hall, little did he know we were not going to make it to the bedroom for quite some time. It took me all of ten minutes to slip into the sexy stockings and matching colored belt, when I walked out in nothing but that he looked and his cock was instantly hard. I was smiling to myself, \"my man, my studly man is hard and waiting for me already.\"\n\nI had the wedge under my arm and threw it onto the thick carpet, by the time I was lying with my tummy on the wedge and my ass in the air he was sliding that glorious man meat inside me. His hands grasped my hips as he thrust in and out, I was so wet it took no effort at all for him to be balls deep. When we made love like this he always stopped when his balls made contact with my clit the first time. He would hold tight to me and I would wiggle my hips in an effort to get the last fraction of an inch inside me. I looked back over my shoulder.\n\n\"Now baby, give it to me now. I want everything you have tonight. I may be sore in the morning, but I want you to screw me as many times as you can tonight.\"\n\nI will never know where he found the stamina, (and after all the years we've been married it's never happened again), but he fucked me four times that night. The last time just before dawn, he didn't have much to deposit, but he did stay at it long enough to have a climax. Following that we didn't drift off to sleep, we literally yielded to exhaustion. To my surprise I was awake before Yng, which as I thought about it made sense, he's the one who did the lions share of the work. I simply lay there and enjoyed orgasm after orgasm, sure, I was active and tired, but not like him.\n\nSitting up I realized just how swollen and sore I was, putting my feet on the floor and standing I knew I would be walking gingerly for more than a day. My pussy felt like it had been torn apart. Looking at myself as the urine burned leaving my body I noticed how swollen and red I was, even for a brown skinned girl. Oh well, I told him to fuck me raw, I had no room to complain.\n\nWhen he stumbled down the hall at 8:55 he cursed himself saying how he needed to get home and make sure Princess was fed and had fresh water. I stopped him, pushing my thin body into his.\n\n\"It's okay, I called Laura, she and the kids went out and took care of everything. Did you forget what you said you wanted to do this weekend?\"\n\nHis face screwed up, then he smiled. \"Get rings for you.\"\n\nI kissed him, \"That's right, but we'll need to take our time, I'm having a difficult time moving fast. Honey you reamed me good last night, I can hardly walk.\"\n\nHe scoffed, \"Tell me about it, my dick feels like the skin has been pulled off. I've never gone four times in a row Bev, you wear me out.\"\n\nWe laughed reaching the consensus we wouldn't be doing that again anytime soon. He wanted to go home, shower, change and be back to get me at noon. He had been gone long enough for me to shower and try getting rid of at least part of what he deposited inside me, I did something I hadn't done for years. I douched. I had finished dressing when the phone rang.\n\n\"Hi big sister. What can I do for you, oh, and thanks for taking care of the horse.\"\n\nShe laughed softly, \"What you can do is tell me why he couldn't go to the farm himself. Did you screw him into oblivion last night Bev?\"\n\nI decided I'd give her a general description of our activities or she'd have a hundred questions.\n\n\"Well, to start with he ate me in the hallway while I leaned against the wall, just like you talked about. Then he stripped me, ripping my panties off. Yes, he literally ripped them off, I almost creamed on the spot thinking he wanted me so bad he'd rip my underwear. After he ate me I gave him a long, deep, hands-free blow job that buckled his knees.\"\n\nLaura let out a hoot and said, \"You did all of that before you got to the bedroom? Really?\"\n\n\"Oh, it gets better, while he was recouping I slipped into stockings and a belt, lay on the tummy wedge in the middle of the living room floor and let him pound my pussy until we both moaned. After that was more of the same in the bedroom, we went at it four times Laura. Not one of them was a quickie, we didn't go less than thirty minutes each time, I'm so frickin sore I can hardly walk.\"\n\n\"She belly laughed, \"It was worth it though, right? It's been years since Darrel has hosed me down like that, but I've never forgotten those nights. So tell me, just how big is that axe he carries?\"\n\nIt was my turn to laugh, \"No, no, no, you wouldn't tell me about your man, I'm not telling you about mine. I remember you telling me it isn't necessarily about size, but how it was used and if it satisfied you. I can say unequivocally his equipment not only fills every crevice and fold of my vagina, he satisfies me to the point of damned near passing out. Is that enough info to keep you from asking anything more?\"\n\nLaura sighed, \"You lucky girl. I'm so happy for you. You waited a long time, patience paid off kiddo. What's on the agenda for the afternoon?\"\n\nI couldn't wait to tell her, \"Rings, he's buying me a wedding set today. We're gonna get married right away.\"\n\n\"What? No shit? You'd better make damned sure I'm at your wedding, no running off somewhere without me along. How soon?\"\n\n\"The date isn't set yet, but in the next few months, and don't worry, you'll be there. I want it outside but the weather is already to unpredictable. We're gonna see if we can rent the American Legion hall. Hey, I need to go, he'll be here soon. Love you sis.\"\n\nWe found a ring set that afternoon, when I wondered about the cost he shrugged it off.\n\n\"When I sold up north the land was at a premium, when I bought down here the market was depressed, I had enough to buy where I'm at outright, scratch that, where we'll be at, there's no mortgage. Get what you want Bev, within reason, but you don't need to think cheap either.\"\n\nThe set I wanted was just over four grand, he didn't bat an eye, he simply wrote a check (who has checks anymore, he does) and got the guy to size it right away. An hour later we returned to pick up the rings, kneeling in the middle of the jewelers store he asked me to marry him. I was bawling my eyes out as he slipped the ring on my finger, gently took my hand in his and led me down the sidewalk. Doctor Tim and the others at work were excited for me, the girls of course had to examine it thoroughly, all reaching the conclusion he hadn't scrimped on quality or cost.\n\nWith my lease nearly over I moved into the house right away, each weekend we would move more of my stuff to the farm. Paul, my hunky lumberjack, did buy me an all-wheel drive vehicle with heated seats and installed a hot water coil in the garage. As a surprise he registered my car for specialty plates that read, \"skinygrl\". Life was good, NO, life was very good. We made the decision to be married on the 9<sup>th</sup> of February, my birthday. With Laura as my bridesmaid, Darrel as the best man and the kids carrying flowers, we said our vows in front of the three or four dozen people who witnessed the occasion.\n\nIn our attached bathroom there hangs a small plaque he made for me. On a piece of yellow birch he wood burned the following, \"always kiss me goodnight\", we make sure we do. By spring we were as happily ensconced in each other's lives as we thought we possibly could be. We'd gotten an early garden in, the mare and colt were doing wonderfully, my work was steady and timber prices were up. What more could we ask for? In reality nothing, until God blessed us with a little one growing inside me.\n\nYngvar did as he said he would, he would lay with his head on my bulging tummy and talk to our baby or try to hear its heartbeat. I thought I looked a fright with a baby bump hanging off the front of my slender frame, he thought I looked more beautiful than ever. What we both liked was that my breasts had increased a size, he would softly manhandle them with his lips, telling me he wanted a taste if the baby didn't drink everything.\n\nSummer came and went, fall was beautiful that year, the colors were simply radiant, as the weather began to warm after winter with the promise of spring our first born arrived late in the night. At 1:13am a boy was born to Yngvar and Beulah Mattila, whom we named Sydney after my late grandfather. I was pregnant with our second eighteen months later, at that time we decided I should stop working outside the home and concentrate on the kids. Considering we had three more after that it turned out to be the right decision at the right time.\n\nWhen the second was born, a boy we named Alfred, Yng surprised me with something I'd always wanted but never said much about. He had a back porch built and a white picket fence installed around the back yard where the kids would play. The next three kids were all girls, Yngvar wanted to give them Finnish names and we did. Emilya, Leah, and Mathilda.\n\nWe often sit on the back porch holding hands watching the youngest play after supper and think about how a skinny black girl and a Finnish white lumberjack ever found one another.\n\nHe teases and says if he hadn't had his teeth cleaned those many years ago who knows what loser I might have married. That usually gets him slugged in the chest and a woman possessed in bed that night. I keep telling him I have to prove why he will never need another woman in his life. He laughs and gives it to me like the lumberjack he is, we may not have a blue ox, but I think my hubby has the stamina of one.\n\nLike my aunt used to say, \"it spreads my thighs, brightens my eyes and gives my tail some exercise.\"\n\n*****************\n\nThis will likely be my last submission for 2021 as I'm going to take a break during the holiday season. I'm blessed to have the kids, along with the grandkids, and two new additions, great grands, home this year for the holidays. There won't be time for reading, writing, or submitting a story. I have several written and edited, I'll begin submitting them with the New Year.\n\nFrom me to you, Merry Christmas. See you next year.\n\nR410a"
    ],
    "authorname": "R410a",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/beverly-pt-02"
}