{
    "title": "Naked Tag",
    "pages": [
        "Author's Note: Submitted for the 2020 Nude Day contest. Enjoy, and please consider voting (assuming you don't live in the future). It's for a good-ish cause!\n\n****\n\nJade woke up to someone booping her nose. That someone was her roommate, Naomi. Naomi was naked.\n\n\"You're 'it',\" Naomi said gleefully as soon as Jade had fluttered her eyes open.\n\nJade groaned. \"You kidding me? It's so early.\"\n\n\"Game's started. You know that. Not my fault you're still sleeping.\"\n\n\"Your fault you got tagged though.\"\n\nNaomi shrugged and brushed back her platinum blonde hair. \"Kinda, I guess. Forgot it was today. And that it was gonna start on our floor. But, you know, lots of easy targets right now.\"\n\n\"So you pick me?\"\n\n\"You were the very easiest.\"\n\nJade rolled her eyes, but smiled at the lazy logic of it. She swung her feet out of bed. \"Alright, I've only got my top and panties. What do you want?\"\n\n\"Hm... give me the cami.\"\n\n\"Bottomless, huh?\"\n\n\"I'll probably get tagged again anyway.\"\n\n\"Probably,\" Jade agreed. \"It's early yet.\"\n\nJade slipped easily out of her two articles of clothing. She handed her camisole to Naomi and left her panties on the floor.\n\n\"Gotta hit the bathroom naked now,\" Jade grumbled. \"Thanks for that.\"\n\n\"Just gotta tag someone.\"\n\n\"Uh huh. They might be more alert than I am, though.\"\n\nNaomi snorted. \"You know better than that. Half of 'em won't have remembered any better than I did, and half'll still be asleep. Anyone else won't be moving quick yet anyway.\"\n\n\"I think your math's suspect, but sure.\"\n\nJade padded out of her room and down the hall to the bathroom. It wasn't busy, and there were only girls on the floor anyway. Mostly ones she knew. There was a thrill to making the walk naked, and a small nervousness, but it really wasn't any big thing. Not yet.\n\nWhich was probably just as well. Jade wasn't properly awake yet. She needed to get her brain running before she could deal with the day to come.\n\nThere actually was someone already in the bathroom when Jade opened the door. Gwen, an eighteen year old freshman, was at the sinks brushing her teeth, appearing to be just out of the shower.\n\nJade grinned. She didn't know Gwen all that well, but she suspected it might be fun to see what the shy, red-haired girl would do with being tagged. There was a very good chance it'd be her first game of naked tag, and she so far seemed totally oblivious to Jade sneaking up on her.\n\n\"You're 'it',\" Jade declared, poking Gwen in the shoulder.\n\nGwen frowned in confusion, spat toothpaste into the sink, then looked at Jade's prodding finger before running up and down Jade's whole naked body.\n\n\"Um... what?\"\n\n\"Tag,\" Jade said, poking her again.\n\n\"I don't... what?\"\n\nJade stepped back, folding her arms as she leaned against the edge of the sinks' counter. Gwen was a little taller than her, which felt a bit weird, but she also had a bit of a sweet innocence to her that left no doubt Jade was the older and more experienced girl here.\n\n\"Has no one told you about naked tag?\"\n\n\"... naked tag?\"\n\n\"That's a no then, I take it.\"\n\nGwen was blushing now, having correctly guessed she was in the dark about something fairly relevant. Her eyes kept flicking to Jade's nude body, which Jade didn't mind. It was bound to happen, her not wearing any clothes and all. Gwen would hardly be the only one looking as the day went on.\n\nAnd, really, Gwen was so adorable about it that Jade couldn't possibly have taken offense even under other circumstances.\n\nNaomi walked in before Jade could start explaining things, still wearing only the camisole she'd stolen. Gwen's eyes darted over to the new bottomless girl, and she only flushed pinker.\n\n\"What's up?\" Naomi asked. \"You tag Gwen?\"\n\n\"Yep,\" Jade said. \"But no one told her about today, seems like.\"\n\n\"Oh. Whoops.\"\n\n\"Yeah.\"\n\n\"Best get into now, then. It's still early.\"\n\n\"Loads of time yet,\" Jade said with a nod.\n\n\"What are you talking about?\" Gwen asked.\n\n\"Well... naked tag, right?\" Jade began. \"You know tag, obviously. Everyone does.\"\n\n\"It's like that, but whoever's 'it' has to be naked,\" Naomi said.\n\n\"Right. So Naomi got me already,\" Jade said, gesturing down at herself.\n\n\"And then she got you,\" Naomi added, pointing at Gwen. \"Now you gotta take off your clothes.\"\n\nGwen squeaked in embarrassment. \"I do?\"\n\n\"Yep. Rules are rules. Jade gets to keep them all except one thing. Her choice. Hence me not getting her panties.\"\n\n\"It's a surprisingly dangerous time, early in the morning,\" Jade said. \"Lots of us are only wearing, like, two things anyway.\"\n\nGwen glanced down at herself and her cami and pyjama bottoms. \"I only am,\" she said quietly.\n\n\"Right,\" Jade agreed. \"And that's actually kinda smart usually. Lotta people somehow think wearing lots of clothes is clever somehow. But you always lose everything when you're tagged anyway, so all you're doing is making yourself more of a target for someone who wants to get dressed again.\"\n\n\"Two things is actually ideal, in some ways,\" Naomi said. \"Makes it less likely someone'll go for you. Another thing people think is clever is only wearing a sundress or something.\"\n\n\"But if someone's feeling spiteful, they might tag you anyway and deal with getting nothing out of it,\" Jade said. \"All that means is then there's two people 'it'.\"\n\n\"How... how do you know who's it?\" Gwen asked.\n\nJade and Naomi grinned at each other. \"Anyone who's naked is 'it',\" Jade said.\n\n\"Oh. Right.\"\n\n\"Later in the day, there can be lots of people.\"\n\n\"Right now, it's just you,\" Naomi said. \"Only you haven't taken anything off yet.\"\n\nGwen hugged her arms around herself. \"Do I have to?\"\n\n\"Well... no. Technically. You could simply refuse,\" Jade said.\n\n\"But you'd be a party pooper,\" Naomi said.\n\n\"A spoilsport.\"\n\n\"A stick in the mud.\"\n\n\"And etcetera.\"\n\n\"Oh.\" Gwen struggled internally with the decision. \"Is it just this in the dorm?\"\n\n\"Nope. Everywhere,\" Jade said. \"Except not in class, 'cause teachers'll get pissy.\"\n\n\"Still gotta wear whatever you have on when you go in,\" Naomi said. \"However little that may be. But no tagging.\"\n\n\"Right. And elevators and stairs and such are safe as well. Just for safety and whatever.\"\n\n\"Dining hall's usually safe territory too. Just gets messy otherwise.\" \n\n\"Shoes and stuff aren't counted. Don't want anyone hurting themselves stepping on things.\"\n\n\"Any girl wearing something is fair game. Students only, obviously.\"\n\n\"Boys play their own game. Last year they were lame, but I've been assured they're stepping it up this time.\"\n\n\"They couldn't handle us making fun of how few of them lost their clothes last time.\"\n\nGwen's eyes were still wide and disbelieving. \"I can't go outside... naked!\"\n\n\"Well you'd best tag someone then,\" Jade said. \"Half the girls on the floor are still asleep. It's easy pickings right now. Plus no tagbacks when you do get someone. That might go without saying.\"\n\n\"Good to clarify,\" Naomi said. \"There was that kerfuffle last year.\"\n\n\"Mmhm.\"\n\nGwen was still weighing her options. \"So if I just get someone now, then don't get tagged again....\"\n\n\"You'd be all set,\" Jade finished for her. \"And we'd all know you're alright.\"\n\n\"It can be very helpful socially,\" Naomi agreed.\n\n\"You wanna hang with the cools kids, don't you?\"\n\nNaomi rolled her eyes. \"The cool kids don't call themselves the cool kids, Jade.\"\n\nJade grinned. \"Can if I want.\"\n\nGwen took a deep breath and started pulling off her top. \"I can do this.\"\n\n\"For sure you can,\" Jade said.\n\nShe and Naomi both had their attention firmly on Gwen as she slowly, nervously stripped. Gwen only noticed how they were staring when she started to pull her bottoms down.\n\n\"Don't look.\"\n\n\"Dude, you're gonna be naked,\" Naomi said.\n\n\"Plus it's just us,\" Jade said. \"I mean... I'm already naked.\"\n\n\"True. I guess.\"\n\nGwen still didn't seem totally happy about being watched, but she was a good sport about it and obeyed the rules. Jade took her pyjama pants and stepped into them. They were a little long, but manageable.\n\nNaomi had already wisely backed up and appeared ready to flee if Gwen went for her, but she only had a cami on anyway, and Gwen didn't really seem interested in getting zero clothes back for her efforts.\n\nGwen looked at herself in the mirror, then back to Jade and Naomi. Her arms kept twitching like she wanted to cover herself with them, and she couldn't quite decide between being a shy naked girl, or trying to pull off a more casual pose like Jade had been doing while she was the naked one.\n\nIt probably helped some that both Jade and Naomi were only half covered now. Jade's tits and whole upper body were out, and Naomi's pussy and legs were clearly visible with only a top on.\n\n\"So now I just... find someone to tag?\" Gwen asked.\n\n\"That's about the size of it, yeah,\" Jade said.\n\n\"And then if I don't get tagged again, I can just be dressed all day?\"\n\n\"Sure can,\" Naomi said, eyes glinting.\n\nShe knew as well as Jade that it wasn't really as easy as it sounded. Especially when there started to be multiple taggers running around. Plus, sometimes girls who desperately wanted not to be 'it' sent the kind of signals that only made others want to focus harder on them.\n\nBefore Gwen could muster the courage to run out and find someone to steal clothes from, the door opened again and Diana walked in. Diana was yawning as she walked in, clearly even less awake than the rest of them were.\n\nJade and Naomi both grinned and stepped back.\n\nGwen was pouncing before she even seemed to realize what she was doing. \"Tag,\" she declared with a sort of vicious joy.\n\nDiana stopped short, stared up and down at the gleeful redhead who'd just poked her, then grinned. \"Ha, ok, you got me.\" She looked back and forth from Jade to Naomi. \"You guys help her set up an ambush for me or something?\"\n\n\"Not hardly,\" Jade said. \"She was about to go hunting if you hadn't just walked in.\"\n\n\"Oof. Well, fair's fair.\"\n\nDiana shrugged her way out of a loose t-shirt, sleep shorts, and panties.\n\nThere'd been a comical fear on Gwen's face for a moment as she worried that she might have to choose between covering her top or bottom, but she seemed happy enough getting to put on shorts and a shirt. Even if the shorts would have been quite small and tight on her for wearing most days.\n\nGiven her recent nudity and fear of sharing it, Gwen was delighted with what she got.\n\n\"So you said I can still put sneakers on, right?\" Gwen said, looking happier and braver now that she wasn't naked in front of everyone.\n\n\"Yep. Footwear's exempt from the game,\" Jade confirmed. \"And, like, a backpack or something to carry your stuff, if you want. Good luck.\"\n\nGwen nodded, smiling shyly. \"Thanks.\"\n\nShe squealed in surprise as Jade smacked her butt on the way out, but Jade only grinned winsomely and fluttered her fingers in farewell.\n\n\"Well that was kinda fun,\" Naomi said. \"A naked tag virgin.\"\n\n\"And so cute about it too,\" Jade said. \"The shy ones can be the best, sometimes.\"\n\n\"Mmhm.\"\n\nDiana cleared her throat. Both Jade and Naomi turned to her, each belatedly realizing they should have fled already.\n\n\"Tag,\" Diana said sweetly, touching Jade's shoulder. \"Aaand since I'm still 'it', also tag,\" she added, touching Naomi as well.\n\nBoth girls groaned.\n\n\"Dammit, Di,\" Jade said.\n\n\"Not cool,\" Naomi concurred.\n\n\"S'what you get. Ambushing me like that.\"\n\n\"Told you it wasn't,\" Naomi grumbled, tossing her/Jade's cami aside and putting her hands on her bare hips. \"But would you listen? Nooo. Well great. Now we're all 'it'.\"\n\n\"Sure are,\" Diana said. \"I'm off to find a good target.\"\n\n\"I'll come with,\" Naomi said, abandoning her foul mood as quickly as it had come. \"You in?\" she asked Jade.\n\n\"Nah,\" Jade said. \"It's gonna get too hectic. I'll just get someone at breakfast or something.\"\n\n\"Suit yourself.\"\n\nShrieks, giggles, and the pounding of running feet became something of a backdrop to the morning. Jade went about beginning her day without worrying about it. If someone gave her an easy chance, she'd probably go for it. Otherwise it just wasn't worth the effort right now. Too crowded and chaotic.\n\nIt was more of an actual game later on. Once they got out and onto the campus. Where there was room to actually run and chase.\n\nFor now, Jade amused herself at everyone else frantically scampering about in various stages of dress; from fully clothed, to nightwear, to completely naked. All sorts of variation.\n\nJade took a shower, luxuriating in not having to worry about someone waiting to pounce on her when she left. Her hand strayed to her pussy as the warm water ran down her body. She tingled faintly at the knowledge that she'd soon be naked in front of more people. Not just Naomi or Diana, or even little Gwen.\n\nJade's lips quirked. 'Little' Gwen who was taller than she was. But such an innocent. Jade almost felt bad about tagging her, but she had to learn sometime. Better now than later. It had been kind of fun getting her naked too.\n\nDespite her thoughts, her musings about some of the other girls, and her own temporarily enforced nudity, Jade wasn't really in the mood for playing with herself just yet. There hadn't been anything quite enough of a thrill for that.\n\nThat was ok. The day was just starting.\n\nJade couldn't wrap herself in her towel after drying off, of course. She had to patter nakedly back to her room, towel dangling loosely in her hand. A girl on her way to the bathroom squeaked and darted back the other way, but Jade only made a false lunge at her before proceeding at her normal pace, a faint smile on her lips.\n\nHonestly, being 'it' was more fun most of the time. Nerve-wracking and humiliating sometimes, sure, but Jade was sufficiently used to it that it was more fun and lightly embarrassing than full on anxiety-inducing.\n\nIn fact, Jade was kind of looking forward to it. At least two other girls were 'it' already, and probably more than that. She didn't need to try and keep the game going. Others could do that. She could just enjoy all the fun parts of getting/having to be naked.\n\nGetting dressed was a breeze. Jade just put her dark hair up in a ponytail, threw on some socks and sneakers, slung her laptop bag over her shoulder, and was ready to go.\n\nJade hummed to herself as she made her way down the stairs to ground floor. She made some more girls skitter away from her as she casually proceeded, and did her level best not to give away how much fun she was having with her brief superpower.\n\nRather unexpectedly, Gwen was hanging about the front door peering out anxiously. The nervousness itself was easily explained in that Gwen seemed to have lost her clothes again already.\n\n\"Naked again, are we?\" Jade asked cheerfully.\n\nGwen started, then flushed lightly and shrugged. \"I was doing so well,\" she mumbled. \"Thought I could just escape while everyone was running around up there. Then... someone got me just before I could leave. Now I don't know what to do.\"\n\n\"Come with me,\" Jade said, extending her hand to the shy, naked girl. \"I'm headed out too.\"\n\n\"But... but there's people out there!\" Gwen lowered her eyes. \"Boys out there.\"\n\n\"Sure are. And that's awkward sometimes. But you know there's gonna be boys coming through here any minute now too, right?\"\n\nGwen appeared not to have considered the occupants of other floors. Clearly she hadn't been at the front door long enough for anyone else to walk by.\n\n\"What do I do?\" Gwen pleaded.\n\n\"Walk with me,\" Jade repeated, hand still extended. \"Better than going alone, isn't it?\"\n\n\"Yes. But....\"\n\nJade ignored whatever protest Gwen was about to make. She snatched her hand and started walking. Gwen just had to keep up.\n\nJade understood. It wasn't like she thought Gwen was being silly at all. It was tough walking around other people and showing off absolutely everything. Especially if you'd never done it before.\n\nEven Jade, seasoned veteran that she was, felt delightful nervous tingles as they strode out into the warm, sunny, morning air. It wasn't busy out yet, but there were some people around. Some girls, some boys. She and Gwen immediately began attracting attention from everyone.\n\nSmall, tentative thrills ran through Jade as she imagined where they'd be looking. They had lots of options. Two naked girls walking together, nothing to hide themselves with except for their bags.\n\nIt was a bit of a gray area, honestly, whether Jade could swing her satchel around to cover her pussy if she wanted to. Or her ass. She left it at her hip anyway.\n\nGwen's backpack, if anything, was probably drawing more attention to her rather than hiding anything. Sure it covered her butt somewhat from certain angles, but it also made her look....\n\n\"You know you've got a sexy schoolgirl thing going on right now,\" Jade said. \"Is that on purpose?\"\n\nGwen, wrapped up in trying not to make eye contact with anyone, startled at being spoken to. \"What?\"\n\n\"You know. Your shoes. Your backpack. And your pigtails.\"\n\nGwen reached for her hair and the twin pigtails she'd french braided in. \"What about them? Are they bad? I've been wearing them like this sometimes. I didn't--\"\n\n\"Not bad. Not at all. Just, I didn't realize, but honestly you've got a cute look going.\"\n\n\"No I don't.\"\n\n\"You do. The more I look now, that's all I can see. And that blush isn't helping.\"\n\n\"Well I can't help that, can I?\"\n\n\"No, I know. I'm just saying.\"\n\nGwen looked back wistfully at their receding dorm. \"Maybe I should just give up on today. Go back to sleep.\"\n\n\"No way! You've made it this far. Plus you'll get clothes again pretty soon. It'll be fine.\"\n\n\"How? Everyone can see us coming. No one's getting close.\" Gwen looked around and flushed darker. \"'Cept those boys.\" She squirmed. \"I can't deal with this. They're gonna look.\"\n\n\"They already are,\" Jade said, squeezing Gwen's hand. She could feel eyes on her just as Gwen could, and it was getting her excited. \"Just don't worry about anyone. If you start acting all shy, you just get more attention.\"\n\nThat was kind of unfair, Jade knew. Gwen couldn't help being shy. And she did it so adorably too.\n\nBut she honestly was handling herself pretty well. Jade had seen many girls do as Gwen had considered and just gone back to their rooms to wait it out. Or curled themselves up into a shy ball. Or refused to play entirely.\n\nGwen was blushing and looking down at her feet as they walked, but wasn't awkwardly trying to cover her breasts or pussy, or curl herself up, or hide behind Jade or anything. Her hand squeezed tighter around Jade's as she heard the pair of boys catch up to them, then walk past, but that was about it.\n\n\"Morning,\" one of the guys called cheerfully as they went by.\n\nJade nodded and allowed a small smile back. \"Morning.\"\n\nGwen's grip remained firm even after the boys were past, and only gradually slackened.\n\n\"Not so bad, was it?\" Jade said.\n\n\"I mean... no. They just kinda kept walking.\"\n\n\"Right.\"\n\n\"But... we're naked.\"\n\n\"Sure.\"\n\n\"Did they even look?\"\n\nJade snickered. \"Oh, Gwen. Yes they looked. Probably the whole time they were catching up. But it'd be quite a faux pas to just, like, leer at us for as long as possible.\"\n\n\"It would?\"\n\n\"Yeah. It's a day for fun. Not for being a creep.\"\n\n\"Oh.\" Gwen considered. \"I don't think I really understand the game all that well.\"\n\n\"That's ok. You'll get the hang of it.\"\n\nMore voices got louder from behind them. A guy and a girl this time. Jade peeked back at them and noted that the boy had no shirt on. It was hard to say if he'd already been playing tag, or whether he was just passing on a shirt today because he could get away with it. He definitely looked good enough with no shirt on that it might be deliberate.\n\n\"Just keep walking,\" Jade murmured. \"Don't look back. There's a girl coming. Wait and see if she gets close. Then drop your bag and go for her.\"",
        "Gwen tensed. \"You don't want to try?\"\n\n\"Nah. She's all yours. I might try and herd her for you if it comes to it. She seems kind of oblivious right now.\"\n\n\"How? Like... can she not see we're not wearing anything?\"\n\n\"She's all wrapped up in her friend. Mister No-Shirt.\"\n\n\"Oh.\"\n\n\"You disappointed she's not checking out your butt?\"\n\n\"No! I mean... no. Definitely no.\"\n\nJade grinned. \"It's ok. It's interesting having people look. I know. Exciting, sometimes.\"\n\n\"It isn't anything like that.\"\n\n\"No?\"\n\n\"No.\"\n\n\"Even though you're all nakey? Outside? Where everyone can see? And you can't help wondering just where their eyes are landing?\"\n\n\"Stop!\"\n\n\"And you feel that soft breeze and realize your thighs are starting to--\"\n\n\"Nooo.\"\n\n\"--get a little wet?\"\n\n\"Oh my goddd.\"\n\nJade grinned. \"Sorry. Just thought you might prefer knowing it's not just you.\"\n\nGwen squirmed. \"Is that ok? Like, it's just a game, right? But if--\"\n\n\"It's fine to get excited. Totally fine. It's a game, and we're all just having fun, but we're still naked in public. You know?\"\n\nGwen shook her head, perhaps trying to deny reality for a moment. She took a deep breath. \"Ok, I'm going for her.\"\n\nGwen dropped her backpack and tore off before Jade could properly react.\n\n\"Wait, no, it's too... oh whatever. It was too soon,\" Jade finished, only muttering to herself by the end.\n\nShe stopped anyway, guarding Gwen's bag, and turned to watch.\n\nGwen had a second or two of surprise on her side, but she hadn't let her target get close enough. Rookie mistake.\n\nThe girl's eyes widened and she took off the other way, racing away a bit more slowly than Gwen was moving. But there was the boy.\n\nMister No-Shirt laughed and stretched his arms out, moving to block Gwen as she neared. Gwen tried to veer around him, but he stuck with her, and she was forced to skid to a halt.\n\nGwen stomped her foot in frustration. She'd forgotten she was naked and had just charged a pair of strangers, and was only concerned with having been denied.\n\n\"No fair!\"\n\nJade picked up Gwen's bag and walked over to her. \"Yeah, Gwen, it's fair.\"\n\n\"But he blocked me.\"\n\n\"Yep.\"\n\n\"He can't do that, can he?\"\n\n\"Sure I can,\" the boy said, smiling as wide as ever.\n\nGwen blushed and shrank back as she belatedly remembered she had no clothes on. Her arms twitched, nearly folding across her chest to cover her breasts, but then she sighed and let them drop again.\n\nThe guy had flicked his eyes to both Gwen and Jade, which he really couldn't be blamed for, but was mostly maintaining eye contact with Gwen, when she allowed it.\n\n\"It was a good try,\" Mister No-Shirt said.\n\n\"... thanks,\" Gwen said, taking her bag back from Jade and slipping it on.\n\n\"Let us go by?\" he asked.\n\n\"Yeah,\" Jade said, speaking for both of them. She waved to the girl who was slowly creeping back up, keeping her boy between her and the two naked girls. \"We had our shot.\"\n\nGwen's breathing slowed back to normal as she and Jade gave their missed target a good head start.\n\n\"Can't believe I didn't get her,\" Gwen said.\n\n\"Gotta be patient.\"\n\n\"But she might run if I didn't go.\"\n\n\"She did run.\"\n\n\"Well... yeah, but....\"\n\nJade nodded to the dining hall. \"Come on.\"\n\n\"Hmf.\"\n\nA moment passed before Gwen spoke again. \"He totally saw everything.\"\n\n\"Yep.\"\n\n\"I didn't even think of it, but, like, I just ran at a boy naked.\"\n\n\"Sure did.\"\n\n\"That's... oh my god. What was I thinking?\"\n\n\"You were playing the game. That's how it goes.\"\n\n\"I'm not used to boys seeing... things. Or girls.\"\n\n\"What, like your boobs?\"\n\n\"... yeah. Or my butt. Or....\"\n\n\"Your pussy.\"\n\nGwen blushed, but nodded.\n\n\"But for a moment you didn't think about that, did you?\" Jade said.\n\n\"Not really, no. But I'm thinking about it now.\"\n\n\"And how does that feel?\"\n\n\"Embarrassing.\"\n\n\"And?\"\n\n\"And... it makes me all anxious again.\"\n\n\"Aaannnd?\"\n\nGwen shook her head and refused to answer. That was fine. Jade could tell it was doing things to her. Her nipples were way too hard to be only feeling embarrassment. And even though Jade didn't want to stare and make Gwen uncomfortable, she was pretty sure Gwen was getting wet too.\n\nJade understood. She felt that same kind of thrill. Being naked outside. Free to do it and not worry about it. Knowing that everyone she passed would check her out to one degree or another. That every part of her would be seen and hopefully appreciated.\n\nSure it was embarrassing and a little nerve-wracking to think about being judged and perhaps perved on, but it was naked tag day. There'd be plenty of other people taking attention away and ensuring that Jade and Gwen weren't all anyone remembered by the end of it.\n\nJust for now, though, they kind of were. The only two fully naked girls to be seen anywhere around. A shiver ran through Jade as she contemplated just how exposed, vulnerable, and alone they were at the moment. She could only imagine how Gwen and her lack of experience felt about it.\n\nGwen took Jade's hand and squeezed it tight for extra reassurance as they made the final stretch of the journey to the dining hall. Jade didn't mind being her security blanket, if that's what she needed.\n\nAs they approached the front cash, Gwen moaned loudly in defeat. \"Nooo, shit, I forgot my card.\"\n\nJade smirked lopsidedly. \"Forgot it in your other pants?\"\n\nGwen was too busy feeling sorry for herself to catch on right away, but a moment later she glared at Jade. Jade just laughed.\n\n\"Her first time?\" the woman sitting at the cash asked.\n\nJade nodded easily as she handed over her card to be swiped through. \"First naked tag for her. I never thought to mention about making sure you can carry all your stuff you need. Ok if I pay for her?\"\n\nThe woman shook her head. \"Don't worry about it. It's gonna be a rough morning for some.\"\n\nJade flashed a wide smile. \"Thanks.\"\n\n\"Thanks,\" Gwen echoed, mumbling half to her feet as she followed Jade through.\n\n\"She was nice,\" Jade said.\n\n\"Mmhm. God that's embarrassing though.\"\n\n\"Forgetting your meal card on the day you have to walk around with no clothes? I wouldn't worry about it.\"\n\nGwen just shuffled and mumbled some more. Jade took some extra pity on her.\n\n\"Here, grab a table. Look after my bag. I'll get us breakfast, ok?\"\n\nGwen nodded, already looking around for a good spot. Somewhere she could hide from prying eyes somewhat.\n\n\"Anything in particular you want?\" Jade asked.\n\n\"Maybe... maybe just toast or something? I'm feeling all nervous.\"\n\n\"Makes sense. I'll make sure I get some toast for you. And orange juice maybe.\"\n\nGwen nodded. \"Ok. Thanks.\"\n\nJade stood for a moment and watched Gwen walk off with her own backpack and Jade's satchel. Gwen's cute little butt was pretty dang watchable, and really wasn't blocked by her bag hardly at all.\n\nJade realized she was staring and shook her head to try and clear it. It was too early for this. Besides, it wasn't her fault Gwen was so adorable and sexy, all walking around with no clothes on, her bare little bum all swaying if anyone wanted to watch.\n\nWell ok, partly her fault. Mostly? No, partly. Someone else almost certainly would have tagged her first if Jade hadn't, since somehow Gwen didn't know any better.\n\nThe place wasn't all that busy yet. There were more than enough wandering eyes around to make any naked girl anxious and fluttery, but it wasn't nearly so bad as it'd be later on in the day. It wasn't crowded by any means.\n\nJade easily glided around, filling a tray mostly on whim, though ensuring she grabbed some toast for Gwen's nervous tummy.\n\nShe'd become pretty good at acting like she wasn't even aware she was naked. Opportunities to practice were rare, but they came a whole day at a time.\n\nHer act didn't mean she was oblivious to the looks she got. Especially this time of day, while nudity was still scarce and people were adjusting to it.\n\nJade stood in a short line for coffee, well aware of the guy in front of her trying to casually peek back at her without being obvious about it. He was failing miserably.\n\nShe herself was doing her best not to look back at the shuffling feet getting in line behind her. Whoever was there would be able to stare pretty freely if they wanted. She wouldn't know. She didn't even know who was there, or exactly how many.\n\nA warmth grew inside Jade. Helping Gwen had kept her distracted, but now she was flying solo, and her emotions were allowed more time to shine.\n\nShe loved this feeling. And hated it, too. But mostly loved it. This feeling of being so visible. Uncovered. Available to be looked at, to truly be seen.\n\nAnd, yes, to know that some people were definitely enjoying what they saw. A lot of them would be people she ordinarily would never take her clothes off for. Not ever. But lots, too, would be people she wouldn't mind seeing her, under the right circumstances. It was such a mix. Boys and girls both. She was naked in front of everyone equally.\n\nJade's pussy was betraying her as she got her turn to fill up a pair of mugs with hot coffee. Standing at the machine gave her a first natural chance to glance at the line behind her. All of a sudden the people behind her seemed to have lots of things to look at that weren't her butt, now that she might catch them. The warmth in her grew and she tried not to show that she knew some of them had been looking.\n\nThere was definitely some arousal happening. Some actual, physical slickness overflowing her pussy and wetting her thighs.\n\nJade tried to ignore her body's reactions the same as she ignored stares and glances. It was harder to feign indifference to herself, though. She knew better.\n\nGwen was fidgeting anxiously at the table she'd picked. Her leg was bouncing with uncontained nervous energy. She seemed much relieved to have Jade back, and it had little to do with the food.\n\n\"You drink coffee?\" Jade asked, setting the precarious tray down.\n\n\"Yeah. Don't know if I want it this morning. My nerves don't need it.\"\n\n\"Well I got some on spec. Have some if you want.\"\n\nGwen nodded and started munching on toast. She seemed glad for something to hold, and something to keep herself occupied.\n\n\"Everyone's been staring,\" Gwen said quietly. \"I nearly just left.\"\n\n\"Wouldn't have been any better out there.\"\n\n\"Well... no. But I wouldn't have just been sitting here knowing they're looking. And I might have been able to tag someone.\"\n\n\"True.\"\n\n\"You left your bag with me, though.\"\n\n\"Well I'm glad you guarded it with such dedication.\"\n\nGwen gave Jade a funny look like she wasn't sure if she was being made fun of or not. She shook her head minutely and took another nibble of toast. \"How do you deal with it?\"\n\n\"The looks?\"\n\n\"Yeah. I mean, I know you just try and ignore them or whatever, but--\"\n\n\"I get horny.\"\n\nGwen blushed bright red. Probably it was more pronounced given her light skin tone and red hair, but it was a good effect whatever the case.\n\n\"Oh my god!\"\n\n\"I'm just saying,\" Jade said, grinning at Gwen's shock. \"You know what I'm saying, don't you?\"\n\nGwen's leg started bouncing again. She held her toast in one hand, unable to decide between another bite or setting it down. Then, finally, she cautiously met Jade's eyes.\n\n\"I do,\" she admitted. \"It's... oh my god, just what this is all doing to me....\" She let out a deep sigh. \"I can't even deal with it. I don't want to feel this way.\"\n\n\"Why not?\"\n\n\"I... I can't get....\" Gwen paused and lowered her voice to a bare whisper, still blushing furiously. \"Horny. I can't be all turned on or whatever.\"\n\n\"Why not. Happens to lots of us. Happens to me.\"\n\n\"But... it's just a game, you said.\"\n\n\"Yeah, Gwen. A game where you're naked in front of everyone.\"\n\nGwen meeped and huddled lower in her seat at the reminder. \"You're confusing me!\"\n\n\"Sorry. But honestly, yeah. It's embarrassing. It's thrilling. It's gonna make you horny. And people are gonna know sometimes. Know that you're turned on. And that's gonna make everything more intense all over again.\" Jade shrugged and sipped her coffee. \"But it's also just a game. Everyone knows the deal. Almost everyone,\" she amended.\n\n\"Yeah, but--\"\n\n\"So have fun with it. Enjoy it. You're not gonna get in trouble. No one's gonna think you're a weirdo.\"\n\n\"Or a slut?\"\n\n\"Definitely not that. Why would you even think that?\"\n\n\"Because, you know. Naked.\"\n\n\"There's... too much to unpack there. I can't process it all right now.\"\n\n\"I mean, not that it means... not that it's slutty... just....\" Gwen made a noise of frustration and reached for the other cup of coffee.\n\nJade smiled to herself, noting that Gwen had once again forgotten to be embarrassed, and was just drinking coffee down like it was a normal day and she needed to wake up. She'd remember again, but for a moment she was just herself. Just Gwen. Nudity only a small part of who she currently was rather than the main thing. Jade liked seeing her like that.\n\n\"I forgot cutlery,\" Jade said. \"I'll be back.\"\n\nGwen nodded and distractedly took another bite of toast, staring absently into the distance while she chewed. Yep. She'd forgotten to be embarrassed.\n\nJade hadn't. She let the naked thrill run through her again as she made the quick trip over to grab a knife and fork for herself. She grabbed a pair for Gwen as well, just in case.\n\nHer body had calmed itself a bit while she and Gwen were talking, but reminding herself of all the people around, and catching quick peeks on her way by got her revved up again. Not a lot, just enough to keep it fun.\n\nJade saw Naomi on her way back to Gwen and beckoned her over. Naomi saw her and smiled assent. She'd won a shirt at some point since Jade had last seen her, but nothing else by the look of it. And the shirt wasn't long enough to properly cover her pussy as she walked.\n\nGwen was still lost in her own world and was startled about being joined by someone other than Jade. She seemed relieved that it Naomi. Someone she already knew.\n\n\"Naked again, huh kiddo?\" Naomi said.\n\nGwen nodded, somewhere between resigned, dejected, and maybe just a little bit excited. \"I'm maybe kinda getting used to it. Some.\"\n\n\"Attagirl.\"\n\n\"I was just explaining that it's ok to get kinda horny,\" Jade said.\n\nGwen gasped, eyes wide, and reflexively kicked Jade under the table. She immediately covered her mouth with both hands in shock as she realized what she'd done. \"Oh shit, sorry!\"\n\nJade laughed. and rubbed her shin. \"It's fine. I deserved it.\"\n\n\"Yeah you did,\" Naomi agreed. \"But Jade's right, though. It happens.\"\n\nGwen squirmed. \"Yeah?\"\n\n\"Yeah. I mean, I know I got a shirt on and everything, but you should feel how wet I am still.\"\n\nGwen's eyes went wide again and she covered her face by bringing her mug up with both hands cupped to it.\n\nJade laughed. \"And you're talking about me deserving a kick.\"\n\n\"Well you did. I'm just trying to help.\"\n\n\"By telling her about your pussy?\"\n\n\"... yes.\"\n\nGwen giggled uncertainly. \"You guys are crazy.\"\n\n\"Says the nakey girl,\" Naomi shot back calmly.\n\n\"Says the bottomless horny girl,\" Jade said.\n\n\"Pff, whatever, also-naked-but-even-hornier-than-me girl.\" Naomi grinned and turned to Gwen. \"You know Jade gets off on this?\"\n\n\"Don't make stuff up,\" Jade said.\n\n\"No, it's true. You know I know.\" Naomi winked and leaned in closer to Gwen, pushing her hair back behind her ear. \"Just watch. Bet ya she won't try to get clothes all day.\"\n\nGwen's eyes locked on Jade for a moment, searching for the truth of the statement. Jade just took a bite of her eggs and declined to respond.\n\n\"Really?\" Gwen asked.\n\n\"Yep,\" Naomi said. \"I noticed it last time. She likes showing off.\"\n\n\"I might enjoy the freedom of it,\" Jade said, \"but that doesn't mean I'm a show-off.\"\n\n\"You like being na-ked,\" Naomi teased. \"It gets you hor-ny.\"\n\nJade calmly kicked Naomi under the table, making her swear and rub her leg.\n\nGwen giggled again and relaxed some more. The three girls at the table only had a single shirt between them, but other than that they were still just who they were. Jade hoped Gwen would come around to appreciate that fact. That she could enjoy her lack of clothes for what it was without obsessing too much over the negatives all day.\n\nThe girls all left together, heading back out into the sunshine. It was getting busier out, and the three of them all lined up together drew some definite attention. Jade and Gwen naked and pretty, Naomi bottomless and alluring.\n\nBefore they got moving, Gwen casually reached out and tapped Naomi's shoulder. \"Tag,\" she said.\n\nNaomi just stared for a moment, then burst out laughing. \"Oh you little shit! I was actually feeling sympathetic toward you, you know.\"\n\nJade laughed even harder and held her hand up for a hi-five. Gwen smiled and slapped her hand.\n\n\"Now we're talking,\" Jade said.\n\nNaomi was a good sport and took her shirt off, getting just as naked as Jade and Gwen, then tucked the shirt in her bag.\n\nGwen tilted her head as she watched Naomi. \"So, uh, I know my clothes are probably back on our floor anyway, but how do people usually get them back?\"\n\n\"That's part of the fun,\" Naomi said. \"There really isn't a good way. I still sometimes see someone wearing something of mine weeks afterward.\"\n\n\"Really?\"\n\n\"Yeah.\"\n\n\"Do they give it back?\"\n\n\"Eventually. If they're really fun, they'll take it off right there when I ask.\"\n\n\"Oh wow.\"\n\n\"Yep,\" Jade said. \"Usually not if they'd actually be, like, topless or something. But I've seen it. A girl one time took off her borrowed sundress to give it back. She didn't have anything on but a pair of panties underneath.\"\n\n\"Oh my god,\" Gwen said. \"Even, like, on a day when it wasn't... naked tag day?\"\n\n\"Yep.\"\n\nNaomi leaned closer to Gwen. \"Jade won't tell you, but I will. She was the one that did that.\"\n\nJade shrugged, not being terribly surprised that Naomi would give it away. It hadn't been a big deal. She was on her way back from class anyway at the time. It just meant a mostly naked walk the rest of the way to her dorm.\n\nEven as she lied to herself about the lack of meaning to the event, she felt the warmth and thrill of the memory wash back over her, adding to the soft breeze breathing over the wetness between her legs, and the all-over tingles from being naked outside in the sun around passers by.\n\nThat had been such a good one. She'd been so damn turned on even from that brief, not-quite-naked walk. It was so much naughtier on a non-tag day.\n\nThe girls got moving, walking slowly off toward their classes. They were headed to the same building anyway, so they got to stick together.\n\nGwen wedged herself in the middle, presumably for the comfort of being flanked on either side. Jade didn't think it'd really help hide her much. No one was going to see three butts in a row and not look at the middle one. Ditto for anything else they chose to look at.\n\nThere were enough people around that Jade could sense eyes always being on her, and the looks could from anywhere. Any angle at all.\n\nSure some of the other students heading to class were only half dressed, but Jade, Gwen, and Naomi constituted an island of pure nudity in the midst of it all. Jade was on the lookout for anyone else being 'it', but she couldn't see anyone else fully naked yet, boy or girl.\n\nJade wasn't sure if Gwen had realized yet that the people closest to them were pretty well all boys. It wasn't a matter of them perving necessarily, so much as it was other girls giving a wider berth.\n\nGwen was mostly walking with the security of her naked friends to her sides, eyes down, cheeks rosy and warm. It was hard to say how aware she was of their surroundings. She was, presumably, still very aware of her nudity, judging by her face and how hard her nipples were. Jade tried not to be too obvious about looking, but she was pretty sure Gwen's thighs were getting as wet as hers were.",
        "It would have been nice if a few of the boys around them were naked. Even just to give Jade something to look at. She was turned on from her exhibitionist walk, and it was basically enough on its own, but some eye candy wouldn't go amiss.\n\nThe best she got were a few guys with no shirts on. Which was alright, but not great.\n\nThey just kept walking. Naked and thoroughly observed or not, they still had to get to class.\n\n\"Should be some easy pickings for getting some tags in,\" Naomi mused aloud as they approached their building. \"Jade, you mind flushing them for us?\"\n\nJade shrugged. \"Sure.\"\n\nGwen looked back and forth quizzically. \"What are you talking about?\"\n\n\"Just stick with Naomi,\" Jade said. \"She'll get you some clothes.\"\n\nGwen nodded and smiled in relief. \"Oh good. I thought I'd have to go through class like this.\"\n\nNaomi snickered. \"Jade totally will. And some other poor suckers we tag.\"\n\nGwen looked at Jade. \"Are you not gonna try to get someone?\"\n\n\"Well... not all that hard.\"\n\n\"She likes being na-ked,\" Naomi teased. \"I told ya.\"\n\nGwen giggled, once again forgetting her own nudity as she shared a laugh with Naomi at Jade's expense.\n\nAs she was lovingly mocked for her proclivities, Jade only felt some extra tingles and inner warmth. It was a little embarrassing to have it pointed out that she did, in fact, revel in the thrill of being so naughty, but that embarrassment only added to what she was already feeling. Naked, exposed, vulnerable, and definitely turned on.\n\n\"Don't mock me too hard or I won't help you,\" Jade said, pretending like she wasn't enjoying herself.\n\n\"Pff, whatevs,\" Naomi said. \"Come on, Gwen, we're gonna circle around from the side entrance.\"\n\nGwen gave Jade a last questioning look, then had to hurry to keep up with Naomi who'd broken into a slow run. Some other girls scattered at the sudden change in velocity, but Naomi wasn't aiming for them, and by extension neither was Gwen.\n\nJade dawdled as she watched her friends loping away. Their quick pace and the flash of their bare skin in the sun attracted lots of attention away from her. If she wanted, she could easily have her pick of at least a dozen girls who weren't watching her closely enough. But, really, what would the fun in that be? Having to get dressed now would be such a waste.\n\nAfter a few minutes had passed and Jade was nearing the front doors anyway, she decided Naomi and Gwen had gotten all the time to set up that they were going to. She veered slightly to the side and approached a pair of boys walking parallel to her.\n\n\"Here, hold this a second, would you?\" Jade said, handing over her satchel.\n\nThe guy who took it didn't have a chance to say anything before Jade was off and running.\n\nJade grinned widely and let her legs stretch out, feeling the air on her skin as she bounded toward the entrance to the building. Boys and girls both had been leisurely making their way inside. Now, as they saw the very obvious naked Jade running straight at them, the girls turned and ran for safety.\n\nJade felt like a big cat. A tiger, maybe. Or a cheetah. She ran like a hunter, and they ran like prey.\n\nIf she'd wanted to eat, she would have gone hungry. She'd done exactly what she'd warned Gwen against and started running too soon. Everyone had plenty of time to clear out, or find shelter somehow. But they weren't expecting to be scared into a trap. Shrieks and laughter from inside told Jade that her friends had had success.\n\nJade slowed to a full stop just outside the front doors. She waited for her temporary valet to walk up and bemusedly hand her bag back over. She was breathing heavier than before, but still ready to run.\n\nThe actual physical part of tag, the running and chasing just like when kids played, Jade kind of loved that part. Even naked. Perhaps especially naked. If it was a thrill just walking around with no clothes on, it was that much better to be dashing about, worrying about nothing but trying to catch up to someone, even forgetting for long moments at a time that she was the centre of attention for very good reason.\n\n\"Thanks,\" Jade said, securing her bag back over her shoulder.\n\n\"No problem,\" the guy said. \"No luck, huh?\"\n\nJade grinned and started inside. \"Nah, we got 'em.\"\n\nBoth boys laughed when they walked in with her and saw two petulant girls handing clothes over to Naomi and Gwen.\n\n\"Classic,\" one said.\n\n\"I know, right?\" Jade agreed. \"So satisfying to pull off.\"\n\nNaomi covered herself like it was no big deal to be dressing in the middle of the hall on the way to class. It might as well have been a private changing room rather than an extremely public area.\n\nGwen was much more excited and relieved as she got dressed. She smiled gratefully at Jade. \"Thanks,\" she said.\n\n\"No worries,\" Jade said, standing with only her shoes and satchel while her friends dressed.\n\nThere was a slow moving crowd passing by on either side. The quarters were much tighter than outside, forcing students to pass close by. Boys walked casually, getting some appreciative stares in. Girls darted past, keeping a close eye out in case anyone lunged for them.\n\nIn fact, the two newly naked girls, once they were squared away, did just that. They broke in opposite directions and chased down targets of their own to tag.\n\nJade just watched them in amusement. \"You two better get moving before someone tags you right back again.\"\n\nGwen nodded. \"See you guys later.\"\n\nNaomi once again was more collected, having done this several times before. \"Think she'll get to stay clothed for her classes?\"\n\n\"This one, sure, she's already past the chaos. All of them though? Doubt it. Might even get tagged right after this class.\"\n\n\"Mmhm. Well I best get moving.\"\n\n\"Sure sure.\"\n\n\"Don't let the boys stare too long. You need to get to class too.\"\n\n\"M'not letting anyone do anything.\"\n\n\"You say as you stand there posing for every passer by.\"\n\n\"Am not.\"\n\n\"All voluntarily nakey and stuff. All wet and--\"\n\n\"Jeez, announce it to everyone why don't you?\"\n\nNaomi grinned and tossed her platinum hair over her shoulder. \"You'd get off on it if I did. You'd just stand there and soak in the embarrassment and attention. Probably get even wetter. Start a little puddle at your feet.\"\n\n\"Would you shush? I can still make you 'it' if I want.\"\n\n\"Nuh uh.\"\n\n\"Yuh huh. I'm faster than you and you know it.\"\n\nNaomi was still grinning as she started walking away. \"But you'd have to put clothes back on. And we know you don't want that.\"\n\nA few other students overheard part of the exchange, and as Naomi had predicted, Jade felt her face heat up and her pussy gush. It was so much more intense when the people looking knew she was enjoying herself.\n\nJade headed to class. Nothing else she could do. Her thighs slicked lightly against each other as she walked. She'd left puddles behind in chairs before, and this might end up being such an occasion.\n\nThese days, Jade's classes were mostly on the smaller side. Not like her first couple years where auditorium classes were more frequent. Being the only naked girl sitting in the middle of a hundred or more other, much more clothed students was the sort of thing that left her unable to concentrate on a damn thing the professor said, and guaranteed leaving behind a wet seat.\n\nNot that smaller classes were much easier. A ten to thirty student range was technically fewer people around, but it was always a more intimate room where she knew more people, which made up for that.\n\nJade slipped into the room with very little fuss. She wasn't allowed to tag anyone in there already even if she wanted to, so there were no shrieks or mad dashes as she found a seat. She sat down at the end of the middle row, trying to look like she was hoping to avoid attention.\n\nIt wouldn't work. Anyone who wanted to look would look. Short of sitting in the very back corner, she couldn't do a single damn thing about someone behind her staring at her all class.\n\nAll class. She just had to sit there in her chair trying not to squirm too much.\n\nSomeone sat beside Jade as she was getting her laptop out. A small thrill went through her as she wondered who would have just gone straight for her. A girl who wanted to offer support for her naked and vulnerable moment? A boy who thought now would be a good time to hit on her?\n\nIn fact, it wasn't anything Jade would have guessed. As she turned her head, she found a very naked boy sitting next to her. Her eyes raked up and down as she was caught by surprise. He was very, very naked.\n\n\"Hey,\" he said.\n\nJade finally lifted her gaze to his face after her few quick seconds of surprise and checking him out.\n\n\"Well hello,\" she said, smiling back.\n\nTristan was a boy she kind of knew. She'd had some classes with him. This one included. They'd talked a bit on occasion, but hadn't made it to friends.\n\n\"I hoping you were the chocolate,\" Tristan said.\n\nJade frowned in confusion. \"What?\"\n\nTristan blushed. \"Sorry. That sounded dumb. I just meant... people are already talking about... well there were three naked girls walking together....\"\n\n\"Oh. Yeah. That woulda been me and my friends.\"\n\n\"Yeah. No. And, like, you know Neapolitan ice cream?\"\n\n\"Sure. Who doesn't? But--\" Jade's eyes went wide, then she tried to stifle an insane laugh. \"Oh shit, I just got it. Ha! Didn't even think of that.\"\n\n\"Yeah. Your hair.\"\n\n\"Oh my god, that's amazing! I'ma have to tell Naomi that one. I don't know if Gwen would appreciate it, but maybe.\" Jade snickered again. \"Shit, yeah, ok, I was the chocolate. People were really calling us Neapolitan?\"\n\n\"I mean... like one guy did, probably. I don't know if it'll stick.\"\n\nJade leaned back in her seat. She was still pretty wound up, but having someone to share being it with took some of the pressure off. That and the idea of being an ice cream was amusing to her.\n\n\"How'd you just figure I was involved? Or were you just gonna use that line on whoever you found with no clothes on?\"\n\nTristan looked around, then leaned in closer. \"I mean... you spend a lot of time being 'it'.\"\n\n\"What?\"\n\n\"Yeah. I've known you for going on four years of tag now. It's, uh....\"\n\n\"Oh wow.\"\n\n\"Just something I've noticed.\"\n\n\"Yeah I bet you have.\"\n\n\"Not 'cause I'm staring.\"\n\n\"You are staring though. You've been checking me out since you sat down.\"\n\nTristan flushed lightly, but didn't seem overly chagrined. \"You've been doing the same.\"\n\nJade grinned and brought her gaze back to Tristan's face. \"You're awfully hard, my dude.\"\n\n\"Yeah, I--\"\n\n\"And dripping.\"\n\n\"Like you're not?\"\n\n\"No, I definitely am. But I don't have a big ol' boner sticking out like that.\"\n\n\"I can't help it.\"\n\n\"Mmhm.\"\n\n\"Do you want me to move? I can move.\"\n\n\"Nope. I want you to stay right where you are. Hasn't been nearly enough eye candy so far.\"\n\n\"Beg to differ.\"\n\n\"I mean for me. Obviously.\" Jade leaned back and just let Tristan look if he wanted to.\n\n\"I'm flattered. I think,\" Tristan said.\n\n\"Yeah, you look ok naked. Don't get a big... head... about it.\"\n\n\"Ha. Ha.\"\n\nJade grinned, but their professor walked in before they could tease each other any more. He spied the two taggers pretty quickly and just rolled his eyes at them, carrying on with class as usual despite having a pair of naked students always catching in his eyeline, as well as distracting some of the hornier students around them.\n\nJade split her time between trying to listen and take notes, and appreciating her nude companion. Tristan looked better with nothing on that she probably would have given him credit for. He, presumably, was already familiar with her body, given that he'd noted her proclivity for remaining 'it.'\n\nHe was so hard! Jade felt better about being all soaked because at least she wasn't alone, but it also kind of made her problem worse. She didn't just have to deal with her horniness from being naked. She had to put up with always checking Tristan out and her brief, intrusive thoughts related to him.\n\nIt would be so crazy and not at all within the rules to just, like, grab him under the desk, or sit herself in his lap and start making out, or anything like that. She didn't even want to, really, but she was a horny little thing, and such thoughts arrived whether she wanted them to or not.\n\nA few times, it almost seemed like Tristan forgot to be all horny and on edge like he was supposed to be, and just kind of got caught up paying attention. Jade was trying to be a good student too, but as long as she wasn't, she didn't want to be alone.\n\nWhenever Tristan seemed to have forgotten about her, Jade sighed and shifted a bit to show off her boobs a little more, or leaned back and stretched. She was attracting attention other than Tristan's, of course, but that was ok.\n\nOnly once, when he was really zoned out, Jade 'accidentally' brushed her hand on his lap, not quite hitting his cock in the process. Tristan jumped and Jade offered quick apology, but he stiffened right back up again, so it basically worked out.\n\nIt was looking pretty painful for Tristan by the end of class as they walked out together. They waited until the end so everyone else had a head start and there wouldn't be quite so much running and screaming.\n\n\"That looks kinda bad,\" Jade said.\n\n\"What?\"\n\n\"Your dick.\"\n\nTristan snorted. \"Yeah. Thanks. Were you trying to keep me hard all class?\"\n\n\"Maybe.\"\n\n\"Well... now I gotta go deal with before next class, so thanks for that.\"\n\nJade beamed, ignoring his sarcasm. \"You're welcome,\" she chirped.\n\nNaomi showed up with Gwen in tow as Jade and Tristan meandered for the front doors. Both girls were still dressed, more or less. Naomi had a shirt and panties. Gwen had a halter top and shorts that probably only looked scandalously short because she had such long legs.\n\n\"Oh look,\" Naomi said, not even trying to hide a smirk. \"You made a friend.\"\n\nJade nodded. \"Naomi, Tristan. Tristan... Vanilla.\" She gestured at Gwen while Tristan was busy blushing. \"That's Gwen.\"\n\n\"Vanilla?\" Naomi asked.\n\nJade elbowed Tristan. \"Go on. Tell her.\"\n\n\"Um... well you know Neapolitan ice cream?\"\n\nNaomi's eyes darted to Gwen's hair, then Jade's. Her lips widened even further in pure delight. \"Haha, oh shit! That's great. We were walking together earlier and--\"\n\n\"Yeah, we got a nickname,\" Jade said. \"But you two'll have to get nakey again so we can pull it off properly.\"\n\nNaomi snorted. \"Fat chance.\"\n\n\"Aw come on.\"\n\n\"Maybe later. I got classes to get through.\"\n\nGwen still looked bewildered. \"I don't understand.\"\n\n\"I'll explain later, Strawberry,\" Naomi said.\n\nGwen belatedly made the connection. \"Oh.\"\n\n\"At least you got strawberry,\" Naomi said as Gwen tried to decide whether to be embarrassed or not. \"I got vanilla.\"\n\n\"And you're not a particularly vanilla girl,\" Jade said with mock sympathy.\n\n\"Watch it, naked girl. Don't start throwing shade over preferences here.\"\n\nTristan had been watching with amusement, but started edging away. \"Hey, this has been fun, but I gotta go.\"\n\n\"Class right now?\" Jade asked.\n\n\"Well... I got half an hour. But....\"\n\n\"Oh. That,\" Jade said.\n\nGwen once again didn't follow immediately, but Naomi's eyes went straight to Tristan's painfully hard, precum dripping erection.\n\n\"Come with us,\" Jade urged.\n\n\"I... that doesn't seem....\"\n\n\"Oh Jade,\" Naomi said. \"You're not gonna go play with yourself this early in the day, are you?\"\n\n\"Shut up! I've been naked. I've got needs.\"\n\nPoor Gwen was bright red by this point, even despite not being 'it' anymore. \"You're not really... are you?\"\n\nJade felt delightful tingles on her pussy at everyone's questioning eyes. \"You're welcome to find out,\" she said as she marched off.\n\nThere was a definite chance no one would follow. But they all did. There was a nice little area behind the building with some tables and benches, half surrounded by trees and a small flower bed. As she'd hoped, it was unused at this time of the mid-morning.\n\nJade dropped her bag, took a seat on the top of a picnic table, and rested her feet on the bench. She caught the glisten on her own thighs, and the very apparent moisture on her pussy.\n\nNaomi was first to stand in front of Jade, arms lightly folded, head slightly cocked. \"Well this is horny, even for you.\"\n\n\"You keep talking like I'm some kind of deviant,\" Jade said. \"A girl has needs when she's been naked in front of people like I have. That's all.\"\n\n\"You've been naked of your own volition.\"\n\n\"The rules--\"\n\n\"Yeah, yeah. And now you're gonna play with yourself, huh?\"\n\nGwen was hiding behind Naomi, biting her lip and only peeking at Jade like she wasn't sure she should be watching.\n\nTristan stood next to Naomi staring at Jade, cock twitching, looking wistful as he stood there uncertainly.\n\n\"I am,\" Jade said softly.\n\n\"In front of us?\" Gwen squeaked.\n\nJade smiled shyly as she let her hand drift to her pussy. \"Naomi's right, as much shit as I give her for it. I... I like this stuff. Plus, you know, it's just you guys. Not like I'm being super slutty about it.\"\n\n\"Not slutty,\" Tristan breathed. He cleared his throat. \"I mean, uh, masturbation breaks are unofficially pretty acceptable. If you've been 'it' a while.\"\n\n\"But you're supposed to try not to get caught,\" Naomi said. \"And here you decided to do it out in the open air.\"\n\nJade wasn't paying overly much attention. Just rubbing her pussy felt so good right now. Goddamn she was turned on. Naomi, Gwen, and Tristan watching her was all it was going to take.\n\nHonestly, she was almost horny enough to masturbate in the middle of class. Maybe at the front of the room. Just be the total show off Naomi accused her of being. She was pretty sure she actually couldn't do it, but the thought was so intense and amazing for her as she drew small, quick circles over her clit.\n\nJade's eyes closed as she bathed in her audience's mixed reactions and her own aroused fantasies. It wouldn't take her long to cum. Not at all. She needed that release if she was going to make it through next class.\n\nA soft grunting made Jade's snap right open again. Tristan was jerking himself off while watching her. They made brief eye contact before he looked away in embarrassment, but his gaze flicked back to where she was fingering herself.\n\nGwen was taking even more solace in hiding behind Naomi than before. Her eyes were big and shining, taking everything in without knowing what to do with it. Naomi was even getting squirmy as she watched, not as unaffected as she'd like to appear.\n\nJade spread her legs wider, panting softly and rubbing herself a little faster. She couldn't quite decide if she wanted to cum quickly, or draw it out some more. She was leaning toward quick on the basis that she might not be able to help it.\n\nNaked outside, an audience of three, one of them even a cute, equally naked boy masturbating right along with her. It was too good. Too much to handle.\n\nThey just kept staring. Kept watching her get off. She was being so bad. Naomi already knew some of Jade's secrets, and wasn't shy about telling others. If Gwen had Tristan hadn't come around to the same conclusions, they sure would now.\n\nWho even did this? Having fun on naked tag day was one thing. Getting off on it was something else entirely. Jade couldn't pretend in front of any of the three watching her. They could see exactly what she was. A secret little exhibitionist.\n\nNot so secret, maybe.\n\nTristan grunted and came, right there on the grass. He drew all eyes to him as he spewed sticky white cum, arcing briefly through the air before hitting the ground.\n\nNaomi looked like she regretted being clothed and that she couldn't masturbate too. She could have anyway. Jade wouldn't mind, and she was quite certain Tristan wouldn't either.\n\nGwen remained torn between wanting to hide and not look at anyone, and watching to witness absolutely everything. She'd stepped partly out from behind Naomi in order to get a better look at Tristan cumming, and though she kept a hand on Naomi's shoulder, she stayed slightly more on her own as she turned back to Jade.",
        "It had been so tempting to cum right along with Tristan. Jade was horny and desperate for a release. But she waited. Held back long enough to make sure everyone was watching her. It was, perhaps, on the narcissistic side, but she'd committed to showing off already. There was no point half-assing it now and achieving a slightly worse orgasm for the sake of long-forgotten propriety.\n\nJade closed her eyes, leaving her lips parted. She felt the eyes on her as surely as if she'd been staring right back. All focus on her. Watching her rub her pussy. Watching her tremble with need, her legs all shaky. About to watch her cum.\n\nJade moaned loudly, letting her little group know what was happening, not caring if anyone else heard. It was an electric, explosive orgasm. Her whole body tensed from it in the best possible way. Her hand went jerky as she lost some control. She tried to keep rubbing herself even as it started to get kind of painful.\n\nShe wanted everything she could squeeze out of the moment. More pleasure. More watching. Making certain Naomi, Gwen, and Tristan all knew exactly what she was feeling, and that they'd always know afterward that this was what did it for her. Her thing.\n\nJade's orgasm was long and intense as she kept rubbing her little pussy and imagining what everyone's reactions were. She cracked her eyes open again midway through, and indeed she had three unblinking sets of eyes squarely on her.\n\nThe tail end of Jade's public cum involved using what small amount of brainpower she had available to try and fix those awed expressions in her memory. Their reactions to her getting off in front of them, totally naked and ridiculously immodest.\n\n\"Feel better now?\" Naomi asked, feigning disinterest in her tone even if Jade already knew better.\n\n\"Yes, thanks,\" Jade said.\n\nShe casually rubbed herself a bit more, just slow and tender, then pulled her hand away entirely. She kept her legs spread, not hiding the wetness between them, nor the puffiness of her pussy.\n\n\"That was crazy,\" Gwen said, voice squeaking slightly. She wasn't even leaning on Naomi anymore, and Jade smiled to herself at the way Gwen subtly squeezed her thighs together.\n\n\"Crazy,\" Tristan agreed. \"And hot.\"\n\nJade snickered. \"Yeah, I saw you enjoying it.\" She reached a hand toward him.\n\nTristan grinned bashfully and helped Jade stand until she was sure her legs were going to hold her. \"Couldn't help it, could I?\" he said softly.\n\n\"You horny little things,\" Naomi said.\n\n\"Pff, you woulda been playing with yourself too, if you were naked,\" Jade said.\n\n\"Yeah but I wasn't, was I? Unlike some people, I'm just playing the game. Not using it as an excuse to show off to everyone.\"\n\nJade considered a witty retort, but it seemed like so much work. So instead she stuck out her tongue and made a rude noise.\n\nNaomi rolled her eyes. Gwen giggled before clapping a hand over her mouth. Tristan just smiled.\n\n\"Probably should get moving,\" Jade said.\n\n\"Probably,\" Tristan agreed. \"I got class... soon-ish.\"\n\n\"Me too.\"\n\nGwen nodded. \"I'm already late. I probably might as well not--\"\n\n\"Gwen!\" Jade said. \"What were you doing hanging around with us if you had class?\"\n\nGwen didn't look nearly so shy as Jade might have expected. She bowed her head slightly, but looked straight at Jade, gently teasing her bottom lip between her teeth.\n\nJade had worried for a moment that she'd dragged Gwen away with misused peer pressure or something. In that instant, as she saw something glinting in Gwen's eye, she knew better. There was something being revealed in Gwen today that was more important than a single missed class.\n\n\"Well, too late to be a good influence now,\" Jade said before anyone else could speak, hopefully saving the moment. \"Off we go, then.\"\n\nJade strode forward just as confidently as her not-quite-recovered legs would allow. Cumming had wound her down some, but she was still horny and enjoying the thought of everyone watching her butt.\n\nThey were all so intent on her, in fact, that none of them noticed a girl sneaking up until she said, \"Tag!\"\n\nJade turned. Gwen was looking at her own arm, totally bewildered for a second at why someone had grabbed it, then her shoulders slumped.\n\n\"Awww. Nooo!\"\n\nJade grinned. \"You got tagged.\"\n\nGwen groaned and dropped her bag. \"Fiiine.\"\n\nThe naked girl who'd tagged Gwen grinned maniacally and eagerly took Gwen's shorts from her.\n\nGwen looked embarrassed at being naked again, but nearly so bad as the first couple times. Not even close to when she'd initially contemplated going outside like that.\n\nPeople were walking by, glancing over at the small, mostly nakey group, none stopping or staring for too long.\n\n\"Thanks,\" the girl said happily as she snugged the shorts up.\n\nHer face changed and she looked down. So did everyone else. There was a quite visible wet spot around the crotch of the bottoms.\n\nOnly then did Gwen go crimson and fold her arms up tightly.\n\nJade shrugged and touched the girl on the shoulder as she stood there considering the damp patch on her newly acquired shorts.\n\n\"Tag.\"\n\nThe girl looked up again, then laughed. \"Ok, fair enough.\" She shed the bottoms just as quickly as she'd put them on. \"Guess I shoulda run faster.\"\n\n\"Really, though,\" Jade said.\n\nNaomi had wisely stepped back, ready to flee if necessary.\n\nThe girl stuck her hand out toward Naomi anyway. \"Lacy,\" she said.\n\nNaomi just gave her a look. She was too experienced to fall for an obvious handshake tag. \"Naomi,\" she said from a careful distance.\n\nLacy remained unperturbed as everyone else introduced themselves, playing up accepting her hand since they were already 'it' anyway.\n\n\"Wanna go chase girls down with me?\" Lacy asked, looking at Jade and Gwen.\n\nGwen only mumbled something, still shy from having her arousal noted by everyone. She was keeping her legs pressed together now too.\n\n\"Sure we will,\" Jade agreed for both of them. \"Come on, Gwen. Here, Naomi, take care of this.\" She handed her bag over.\n\n\"Just carry everyone's stuff why don't I?\" Naomi grumbled.\n\n\"Be more naked next time and you won't have to.\"\n\nIt took some effort to drag Gwen away and get her moving, but soon she was following along, being led by Jade's hand.\n\n\"I can't believe they were so wet,\" Gwen whispered.\n\nJade smiled reassuringly at her. \"No one minds. You weren't as bad as me or anything.\"\n\n\"That's true.\"\n\n\"People pretty much get that they're gonna get some soaked stuff every now and then.\"\n\n\"Do they?\"\n\n\"Yep.\"\n\n\"Oh.\"\n\n\"You might when you get someone. Might get some drenched panties.\"\n\nGwen shook her head. \"I don't know if I'd want them.\"\n\n\"That's fair. Depends on my mood. Sometimes it seems hot. Sometimes just uncomfortable.\"\n\n\"Yeah, but you don't wanna tag anyone anyway.\"\n\nJade grinned. \"True.\"\n\nLacy, marching slightly ahead, turned suddenly. \"Ready?\"\n\n\"Ready,\" Jade said immediately.\n\n\"What?\" Gwen said, somewhat less immediately.\n\nJade squeezed Gwen's hand, then released it and broke into a jog, moving up beside Lacy. Gwen followed belatedly behind them.\n\nA whole, spread-out group of students lay in front of them. Boys and girls both. They all started scattering with varying levels of awareness and urgency. Jade questioned that until she realized Tristan had caught up with them too and was running from close beside her. They exchanged brief, amused grins, then sped up to full runs.\n\nIt was chaos. A confused, milling flock of sheep descended upon by naked wolves.\n\nIt would have been so easy for Jade to grab someone if she really wanted. There was an abundance of choice. But that wouldn't have been any fun.\n\nShe ran gleefully, scaring targets, herding them back into the fray. She ran for the fun of it. For the joy of being free and naked.\n\nWeirdly, it wasn't even a case of showing off or anyone really looking at her. They were all running too. Jade might as well have had a jersey that just said 'IT' on it. It would have had the same effect as her current full nudity.\n\nThere was a certain level of excitement in that too. In being naked outside and among her peers, but not really been seen or appreciated for it. Only that she was coming for them, and they'd better scurry.\n\nPandemonium erupted as other naked taggers joined the fray as they caught wind of it. The boys had been having it easy, only Tristan to dodge. Suddenly they were running in more of a panic. Another few girls got mixed in as well, at least one or two from outside, but there was a definite possibility that more and more were becoming 'it' as people with only one piece of clothing got tagged.\n\nAs the crowd thinned and more escapees made successful breaks for freedom, Jade narrowed her focus and hunted down some good targets who looked like they only had a top on, or panties, or jeans, or whatever. Any single-item girls, really.\n\nHeart pumping, already panting and gaining a sheen of sweat, Jade ran hard, chasing down some of the faster ones. A few girls were clearly runners or otherwise in fantastic athletic shape and were baiting her out. As soon as they started running for real, Jade was left well behind. Some others, though, she was able to catch by running her little heart out.\n\nJade tuckered herself out chasing girls around and collapsed exhausted onto the grass, stretching out to recover in the warm sunlight. Her panting slowed and her heart chilled out. Her horniness had abated for a time, but as she became more conscious again of being naked and lying out for everyone to see, it crept back on her.\n\nA hand reached down toward her. Without really looking, Jade clasped it and was hauled to her feet.\n\nTristan had acquired some pants, but remained topless. He still looked pretty good like that, but it wasn't the same as him being all nakey with her.\n\n\"Boooo,\" Jade said, frowning at his jeans.\n\nTristan nodded. \"Yeah, I know. But I caught someone. What do you want from me?\"\n\n\"Obviously I want you to be naked. I thought that was obvious from my booing.\"\n\n\"Well, yeah. Sure.\"\n\n\"You're only half as interesting now.\"\n\n\"Oh. So you really liked my dick, huh?\"\n\nJade snorted and punched him lightly on the shoulder. \"I liked you when you were more fun.\"\n\n\"Naked's the only fun you know?\"\n\n\"You know what I mean.\"\n\nGwen and Lacy came over, followed by a rather weighed down Naomi, still carrying lots of extra bags.\n\n\"You didn't get tagged?\" Gwen asked, watching Naomi's slow approach.\n\n\"Be a bit of a dick move going after the bag minder,\" Naomi said, gently dropping bags to the ground.\n\n\"Oh. That makes sense as a rule, actually,\" Gwen said.\n\n\"Not a rule. More like... well it's a dick move, is all.\"\n\n\"So I could still technically tag you?\"\n\n\"Yeah. But let me just remind you before you get too backstabby, you're not actually 'it' right now.\"\n\nGwen looked down at herself and flushed. \"Oh. Right.\"\n\nEveryone else had their gazes drawn too, much to Gwen's chagrin. She only had a pair of panties on. A pair of rather soaked looking panties.\n\nOnly Jade knew why she'd chosen them. Or suspected she did, anyway. It might not have been their brief conversation, but it probably was.\n\n\"I really didn't think this through,\" Gwen said, squirming under multiple gazes. \"I can't even tag someone now.\"\n\n\"Sure can't,\" Lacy agreed. She'd taken someone's light hoodie, which only came down to her waist and left her pussy and butt exposed. It was probably still a better choice than Gwen's wet, skimpy panties. Plus cutely bottomless was a good look on her. \"Well, I'm probably gonna skedaddle here.\"\n\n\"Fair enough,\" Jade said, extending her hand. \"Good to meet you.\"\n\nLacy started to reach for her, then yanked herself back. \"Ah! Ha, no.\"\n\nJade easily let it go and didn't make any further attempt. It would have been funny if it had worked, but it wasn't worth pressing the issue. It was better just watching Lacy walk away with her butt showing under her hoodie anyway. Better, possibly, than fully nude.\n\n\"I should get going too,\" Tristan said. He shuffled a bit awkwardly. \"Uh, any chance I get your number?\"\n\nNaomi and Gwen \"ooohed\" together like it was their job.\n\nJade ignored them and tilted her head. \"Pretty bold asking now that you're dressed.\"\n\n\"Half dressed.\"\n\n\"Still.\"\n\n\"Ok, but... is that a yes or a no?\"\n\nJade let him squirm for a minute, even though she'd already decided in his favour. \"Yeah. Alright. Gimme a pen.\"\n\n\"My phone's right--\"\n\n\"Nah. Pen's better.\"\n\n\"But... I'll just put it right in my phone anyway.\"\n\n\"You seriously arguing about this?\" Naomi asked Tristan disbelievingly. \"You know Jade's a weirdo already. Let her do her pen thing.\"\n\nJade took Tristan's hand and started writing her number on it.\n\n\"Nah, I kinda get it,\" Gwen said. \"It makes sense.\"\n\n\"Does it?\" Naomi asked.\n\n\"Yeah. It's more... what's the word? Tactile. More tactile.\"\n\n\"Sure. Whatever you say.\"\n\n\"You'd best text me later,\" Jade said. \"All this and I don't hear anything? Not a happy girl.\"\n\nTristan was carefully holding his hand out to avoid any smudging. \"You know, if you just put it my phone, there's no way I could--\"\n\n\"Your problem,\" Jade said, slinging her bag over her shoulder. \"Come on, ladies.\" Jade marched off with Gwen and Naomi to either side. She let it go a moment, then hissed, \"He still looking?\"\n\nGwen glanced over her shoulder and giggled softly. \"Yep.\"\n\n\"Good.\"\n\nJade wasn't sure exactly what was developing between her and Tristan, but he really seemed to have a thing for her. Even from before he'd seen her naked. Although he'd seen her before today. Maybe lots of times. So it could still have been the naked thing.\n\nNaomi handed over her bag to Jade once they got to the building for their next class. \"Hold this. I'm hitting the bathroom.\"\n\n\"Yes ma'am.\"\n\n\"See how you like being the holder.\"\n\n\"Love it,\" Jade called after her, grinning.\n\nGwen hung out next to Jade, fidgeting a bit in her pair of someone else's soaked panties.\n\n\"How you making out there?\" Jade asked.\n\n\"Uncomfortable.\"\n\n\"Yeah.\"\n\n\"I don't know why I thought this was a good idea.\"\n\n\"You were horny.\"\n\nGwen shook her head, but not particularly vehemently. \"You got me all confused.\"\n\n\"Sorry.\"\n\n\"You should be.\" Gwen hesitated. \"But it was kinda hot, maybe. For a minute. Or whatever.\"\n\n\"Haha, ok.\"\n\nJade felt a weird surge of something very much like pride. No longer dreading being naked in front of people, Gwen was actually trying new things. At least partly at Jade's suggestion and mentorship.\n\nSure it wasn't really anything super deep, intelligent, or meaningful. But social liberation and discovering herself were important in their own rights.\n\nGwen was getting more comfortable with herself and other people, and Jade was watching it unfold before her.\n\n\"You wanna take those off and try again?\" Jade asked.\n\nGwen nodded. \"Yes please.\"\n\n\"Even though you'll have to be naked?\"\n\n\"It's not really any better only wearing panties. And they're all wet and stuff. Not even from me. Mostly not from me.\" Gwen shrugged. \"And that might even be worse, really. Wearing someone else's soggy panties where everyone can see.\"\n\n\"But it was fun. For a minute.\"\n\n\"Yeah. For a minute.\"\n\nJade reached out and booped Gwen. \"Tag.\"\n\nGwen smiled and slipped her undies off. \"Thanks.\"\n\nHer little pussy was all puffy and shining as she stepped out of the panties. Not unlike Jade's just after she'd masturbated.\n\nJade was pretty sure Gwen wouldn't go for it if she suggested playing with herself in public, though. She hadn't come that far yet.\n\n\"We're headed to class,\" Jade said as she saw Naomi returning.\n\nGwen nodded. \"Sure. Already missed half the one I was supposed to be in. I'll just... I dunno. Try and tag someone, I guess.\"\n\n\"Good luck.\"\n\n\"Thanks.\"\n\nJade watched proudly as Gwen walked off on her own. All naked and scouting for someone to chase after. She'd be just fine.\n\n\"Where's she going?\" Naomi asked.\n\nJade shrugged. \"Nowhere in particular, I think. Not until her next class.\"\n\n\"Oh.\"\n\n\"Yeah.\"\n\n\"You look like your baby just left the nest.\"\n\n\"Ha. I mean, basically, though.\"\n\n\"Well come on. You've still gotta be naked in the middle of another classroom.\"\n\nJade's pussy tingled. \"Yeah I do.\"\n\n****\n\nNaomi and Jade had split up, going their separate ways for their classes. But in the afternoon they had a poetry class together.\n\nJade was still naked, and Naomi had lost her outfit and acquired someone's jeans in the meantime. Naomi's toplessness and Jade's nudity had become less unique as they day went on and more and more people lost more and more clothes, but they still got some looks.\n\nJade was horny and on edge, her morning masturbation too long ago to do any good. This was their final class for the day, though, and if she could make it through she could go get off as much as she wanted.\n\nTheir poetry class wasn't large. Maybe twenty students, give or take. It was fewer people to be naked in front of, but also more intense because there wasn't any anonymity. Everyone knew everyone else to at least some degree.\n\nJade greeted a few of her classmates as she and Naomi slipped in and took seats. She felt gazes on her even more acutely than usual because of the small room size, her familiarity with those checking her out, and certainly because of how horny she already was.\n\nMs. Shields, their professor, walked in a few moments later as the last of her class was trickling in. She arched her eyebrow at the state of some of her students, eyes lingering on Jade's total nudity, but it wasn't like it could possibly be taking her by surprise this late in the day.\n\n\"I'm glad to see some of you remembered to get dressed today,\" Ms. Shields said.\n\nSmall titters ran through the class. Jade accepted the mild, joking reproach. There was nothing malicious behind it.\n\n\"Hopefully you all did better remembering the poems you were meant to be working on,\" Ms. Shields continued, just as dryly. \"Let's get right into it, shall we?\"\n\nA couple volunteers went up to read their work, followed by some brief comment and critique by Ms. Shields and the class at large. Jade absently watched a boy in boxers and a shirt read one out, then a girl in a shirt that came down past her pussy, leaving it ambiguous as to whether that was all she was wearing.\n\nAfter those two, there didn't appear to be any other eager takers. Jade didn't think much of it until a hand suddenly clasped her wrist and lifted her arm.\n\nJade, somewhat bewildered, turned to a furiously grinning Naomi who was still holding her wrist. \"What are you doing?\"\n\nNaomi was about to answer, but Ms. Shields got there first.\n\n\"Ah, Miss Jade. You've been quiet today.\"\n\nJade blushed as Naomi released her. \"Um, I don't--\"\n\n\"Yes, come on up. It's your turn. Regale us.\"\n\nJade blushed even warmer. \"I'm not wearing anything.\"\n\n\"Yes, Miss Jade. We can all see that.\"\n\nA few light snickers caught Jade's ear. As if she needed to be any redder for this. Her stupid heart was beating so hard, and her pussy was all madly on fire.\n\n\"I can't--\"\n\n\"Sure you can. Class, we'd like to hear Jade's poem, wouldn't we?\"\n\nA firm chorus of agreement answered the leading question. Naomi the loudest supporter of all. Jade's death glare did absolutely nothing to wipe the smirk off her face.\n\n\"There, you see? No one has any problem with your lack of clothes,\" Ms Shields said, a rather unprofessional smile tugging at her lips.\n\nJade fumbled with her notebook, finding the page for her latest poem. There was no point fighting it. She could maybe chicken out if she really, really dug her heels in, but it'd only be worse than just giving in. If nothing else, her reputation would take a serious hit.\n\nJade slowly made her way to the front of the room, right next to Ms. Shields' desk. She clutched her notebook like a lifeline, even though it did absolutely nothing of any practically value for her.",
        "Being naked in front of the class was... well that was kind of amazing. The sort of thing she got off on. Reading her poem out to everyone, that was more of a problem.\n\nThere was a vulnerability to sharing her own work while being the sole focus of attention for a couple dozen classmates. It was similar to the vulnerability of being naked in front of them, except without really any of the benefits. And when she combined the two, it meant that she had to share her work while under the constant threat of everyone recognizing that she was getting all worked up.\n\nJade felt lightheaded. Almost dizzy. Her body was warm everywhere. Her pussy was flooded like crazy, warmer than anywhere else on her, begging for attention. It should know better. Just work with her here. Let her get through it. She'd give it such loving attention later.\n\nBut no. Not so much. Tingles and small, imaginary flames ran all through her body, making her appear shaky and nervous, like someone who'd never done public speaking before. Or, indeed, like a girl who was humiliated at being nude in front of her class. Except that neither was really the case.\n\nJade couldn't look at anyone. Couldn't make the slightest eye contact. She needed to just get her thing done and get out of there. And yet, she stared at her notebook, barely able to read her own words.\n\n\"Whenever you're ready,\" Ms. Shields said gently, but with obvious amusement.\n\nJade nodded and tried to read. It was painful. Her voice wouldn't hold steady, and she couldn't keep track of her place. Couldn't make a single dang thing about her work compelling, even though she knew she'd done pretty well on it.\n\nIt was the stuff of classic public speaking nightmares. Just a poor performance all round, and she knew it while she had to keep struggling on anyway. \n\nThere was the urge to shrink away into nothing, sure. To never be seen again by anyone currently watching her nakedly bomb her presentation.\n\nBut, too, there was an insane, stressful, thrilling desire to stay in the spotlight. To suffer the eyes on her for as long as she could get away with.\n\nHer pussy was running like a faucet. Jade could feel more arousal trickling down her thighs. It must have been visible to everyone. She could swear it was. They could see it. All her classmates. Her teacher. Everyone.\n\nThe permanent red flush of her cheeks was even more of a giveaway. That and the tremor of her voice, the tremble of her hands, the raggedness of her breath, and her heartbeat that might as well be echoing through the whole room.\n\nFuck she was turned on. And miserably humiliated. But horny! But embarrassed.\n\nAnd all the while Naomi just sat there giggling herself silly at Jade's expense.\n\n\"We really must work on your public speaking,\" Ms. Shields said casually once Jade had finished.\n\nJade closed her notebook and mumbled something back, shifting her weight from leg to leg. She started to step away from the front of class, but was stopped by Ms. Shields continuing to speak.\n\n\"Who has some thoughts for Miss Jade?\"\n\nNaomi, grinning evilly, raised her hand high. Jade clenched her fingers tight around her notebook and glared ineffectually at her friend.\n\n\"I think the imagery really worked,\" Naomi said, the picture of innocence as she delighted in Jade's torture. \"But it was kind of hindered by the delivery, maybe?\"\n\n\"Yes,\" Ms. Shields said. \"We know Jade's having a... nervous sort of day. Let's not dwell on that, shall we?\"\n\n\"I liked her outfit,\" one of the boys from the other end of the room called.\n\nJade squirmed, wanting again to escape from them all. To return to her seat and be horny with at least some modicum of privacy. Instead, she lifted her middle finger toward her teaser. She was glad to get a better laugh than he had.\n\nA few more of Jade's classmates shared some thoughts, at which point she was sure she'd be able to sit back in her seat and try not to draw attention for the remainder. She was wrong.\n\n\"Miss,\" Naomi said, piping up again in the sort of way that made Jade groan internally.\n\n\"Yes?\"\n\n\"Remember when you were telling us about accompanying poetry with other mediums?\"\n\n\"Yes, Miss Naomi, I do.\"\n\n\"Well... music and pictures and stuff are fine and all. But what about a nude model?\"\n\nJade glared pure daggers at Naomi. She had a sense where this was going. She wasn't going to get to sit down at all.\n\nAnd her fucking pussy just wouldn't quit. She'd slip on a puddle of her own arousal at this rate.\n\nShe was so goddamn horny she could rub herself off right where she was. Right in front of everyone. She was such a twisted up little mess.\n\nMs. Shields looked at Jade, then back at Naomi. \"They'd have to be fairly specific--\"\n\n\"I've got poems that would be perfect right here,\" Naomi said promptly, holding up a notebook that Jade knew for certain wasn't her usual one for class.\n\n\"Are they appropriate for the classroom?\"\n\n\"Not really, no.\" Naomi stood up anyway and started forward to join Jade.\n\nMs. Shields rolled her eyes. \"Anyone object to... whatever we're about to hear?\"\n\nNo one much seemed to mind. Anyone who wasn't busy enjoying Jade's naked time in class was at least amused by it. Including, perhaps, their professor.\n\n\"What about you, Miss Jade?\" Ms. Shields asked more softly. \"You don't have to stay up here.\"\n\nJade swallowed hard, feeling faint but exhilarated beyond her imagining. \"Am I getting bonus points for this?\"\n\nMs. Shields smiled wryly. \"For such a demonstration of mixed mediums? I probably could arrange something.\"\n\n\"I should really earn those points, then.\"\n\nMs. Shields snorted. Jade's marks were fine and they both knew it. \"Suit yourself.\"\n\nNaomi stood next to Jade and grinned at her for a moment before opening up her notebook and taking her time ruffling through.\n\n\"How long have you been planning this little stunt?\" Jade whispered to her.\n\n\"You could always chicken out,\" Naomi hissed back. \"I heard Ms. Shields give you an out.\"\n\n\"You'd like that, wouldn't you?\"\n\n\"Nope. I'd rather you squirm. But then, you'd rather that too, wouldn't you?\"\n\nJade clenched her fists at her side; one empty, one with an increasingly distressed notebook. Naomi was right. This was exactly the sort of thing Jade wanted, in all its thrilling, terrifying glory.\n\nJade felt like she'd never be anything but 'that horny naked girl' to everyone present. And they wouldn't be entirely wrong.\n\nShe was so fucking turned on. Her thoughts kept flashing through various scenarios. Things that might happen, or that she might want to happen. Things like jumping Naomi and riding her face right there on the floor. Or bending over Ms. Shields' desk and just seeing what happened. Or standing outside the door after class and letting every single classmate rub up on her a bit as they went by.\n\nStupid stuff. She didn't want any of it. But fuck she needed something. It was way, way too much.\n\nIt only got worse when Naomi started speaking. Her poem, as it turned out, was filthy. Not just titillating, but downright pornographic. And, of course, eyes that had wandered locked straight back onto Jade as flowery and rhyming descriptions of rather intimate acts were vocalized next to her.\n\nIt was actually kind of unfair. Naomi was topless. They could have looked at her.\n\nBut then, Naomi didn't have a horny little pussy gushing in front of everyone, giving away just how badly this was all getting to her. Jade did.\n\n\"That was... perhaps a tad inappropriate,\" Ms. Shields said once Naomi was done.\n\n\"Oh, sorry,\" Naomi said. \"Lemme try again.\"\n\n\"Please don't,\" Jade whispered.\n\nNaomi ignored her and was already launching into a second poem that was more romantic than dirty, though still sexually charged.\n\nTime was frozen for Jade. She was stuck right where she was, standing at the front of the class while Naomi rattled off an endless barrage of poetry. Sometimes it was only lightly suggestive, conjuring images of tender embraces or light, loving kisses. Other times it was practically an instruction list for eating her out, or otherwise getting her off.\n\nAnd every single thing she said, Jade knew it was being imagined about her. As if their audience needed help having thoughts about her as she stood in front of them naked and turned on like mad.\n\nPlus, and Jade truly hated to admit it, some of Naomi's work was actually super hot on its own. One was about masturbating while being spied on, though disguised behind cunning use of language so it wasn't quite so obvious. It was a little too on the nose for the moment, given Jade's mood and tension, but it fucking worked for her. It worked too damn well.\n\nThe class was collectively getting all worked up to the point of bursting. At least half Jade's classmates were wiggling in their seats, either trying to grind on something or even possibly playing with themselves. They had the small privacy of desks in front of them. Jade didn't.\n\nAnd yet... that wasn't going to stop her. Jade could feel it. Naomi wasn't even slowing down, and Ms. Shields hadn't cut her off yet. Whatever was happening, Jade couldn't restrain herself forever.\n\nThis was the moment. The point where she might truly gain the title of horniest little exhibitionist on campus. Slowly, shakily, Jade leaned on Ms. Shields' desk, then boosted herself up to sit on the edge of it. Her legs spread wider of their own accord, her pussy flaming with need as those at the back craned for a better look.\n\nNaomi was still one step ahead of Jade, shifting right into another masturbation poem. How many of these did she even have? Jade knew that Naomi wrote stuff like this from time to time. Honestly, Jade did too. But to have this whole collection ready and waiting....\n\nYeah, Naomi had been working toward this for some time. She had to have been.\n\n\"... my secret little caress, only for me...\" Naomi was saying, nearly making Jade snort out loud.\n\nNo. It wasn't going to be secret. And it wouldn't be just for her. But it didn't matter. Jade couldn't wait any longer.\n\nTrembling with nerves upon nerves, Jade reached down past her tummy and slid her hand over her pussy. Her legs were still obscenely wide, and there was no possible way anyone could mistake what she was doing.\n\n\"... I shiver at the hot flame inside....\"\n\nGoddamn, she was doing this deliberately.\n\nJade rubbed herself. Rubbed her soaked, painfully aroused pussy while perched on her professor's desk. Providing a blatant counterpoint to the 'secret' girl in Naomi's poem. Being just the most obvious about rubbing herself as it was possible to be.\n\nMs. Shields cleared her throat a couple times, but gave up when both Jade and Naomi ignored her. Jade didn't dare to look at her. Didn't dare to look at anyone.\n\nShe knew everyone was still there. Rapt, undivided attention squarely on her. But if she kept her gaze low and soft, maybe she could pretend like she wasn't doing what she most definitely was.\n\nMasturbating for the whole class.\n\nJade moaned softly, rubbing her small, wet circles. She was so warm. Overheating despite her lack of clothing. Partly it was her physical arousal, but most of it was the warmth of shame. Feeling stared at while doing something wrong. And this wasn't a small group of friends watching her. This was her whole damn class. This was taking it to another level entirely.\n\nIt wouldn't even help to stop now. She couldn't play this off. There was no going back.\n\nJade risked a few direct peeks at classmates while she rubbed her pussy in front of them. In each instance, she both regretted daring to look, and felt another insane surge run through her, an extra thrill electrifying her and pushing her to continue. Forcing her to keep rubbing herself silly.\n\nThey were watching. Everyone. Watching with utter fascination. Some were definitely playing with themselves too. No doubt about it. Even a glance at Ms. Shields confirmed that she was just as riveted as everyone else, though perhaps slightly more bemused about it.\n\nAnd Naomi just kept talking. She wasn't holding together any better than anyone else, really. Her voice caught at times, and she was definitely squirming and squeezing her thighs together, but she kept rattling off dirty poetry like it was her job.\n\nJade's moans and panting got louder. Her fingers blurred and squelched. Her legs tensed and her toes curled. It was too much. Just too much.\n\nJade came in an explosion of embarrassment, horniness, need, and exhibitionism. She fully squirted, splashing her juices all over the floor in front of her. Gasps hit her from surprised onlookers, as well as subsequent murmurs of appreciation.\n\n\"Did you just squirt?\" Naomi asked, breaking her monologue and being the only one to directly comment.\n\nJade only groaned, threw her head back, and kept fingering herself. She was a horny mess. The shameful thrill of her orgasm still made her tingle in the aftermath, but it wasn't enough. She needed another one. She was sensitive after cumming, but didn't care. She kept rubbing.\n\nNaomi wasn't even speaking. The class wasn't silent, exactly, but Jade was by far making the most noise. Probably every single person could hear the schlicking of her fingers, the little moans she made, and the rasping pant of her breath.\n\nJade made herself cum again. Not as intensely this time, but still overwhelming and pleasant, and helpful as far as calming her down.\n\nThere wasn't even a pretense of a real class anymore. No lessons. No critiques. No Naomi working her way through months worth of erotic verse.\n\nJust a very horny and naked girl masturbating for everyone.\n\nHow the hell had she ever gotten to this point? How had she been allowed to do it? How had she not been stopped?\n\nJade came a few more times before she was well and truly worn out and calmed down. Her fingers, pussy, and legs were all messy from her juices, as was the floor and part of the desk she was sitting on.\n\nNot knowing what else to do, Jade lay back right where she was, still breathing heavy and feeling a sheen of sweat over her body.\n\nMs. Shields swore and rescued a stack of papers from being lain on. A few pens clattered to the floor. Jade ignored it all. Just lay there with her eyes closed, unable to look at anyone right now.\n\nFor all she knew, they might all be done staring at her. Or they might still be looking. She was all stretched out naked for them, spread-legged and wet. They could look if they wanted.\n\nA long moment passed, then Ms. Shields sighed. \"Well, why don't we call it a bit early today. I have a feeling we're not getting much of anything done after this.\"\n\nChairs scraped the floor and a soft stampede of feet arose. Jade remained on her back for a moment until the worst of the noise was past. But when she sat up, she found about half the class was still just kind of milling around her. Naomi included, naturally.\n\nNo one appeared at all upset or judgmental, which was a good start. Jade still wasn't sure she was ready to handle them all standing around her like they were, even if a few were only half-clothed, and at least one or two looked like they'd cummed pretty recently.\n\nThen, all at once, excited voices started piping up from all around her.\n\n\"That was awesome!\"\n\n\"Did you plan that?\"\n\n\"How'd you get away with that?\"\n\n\"Wasn't it embarrassing?\"\n\n\"Did you really cum?\"\n\n\"Shut up, of course she really came. You could see it.\"\n\n\"She wasn't the only one.\"\n\n\"Oh gross.\"\n\n\"Just saying.\"\n\n\"It was hot!\"\n\n\"That was a crazy class.\"\n\n\"Glad I didn't miss this one.\"\n\n\"You think that's gonna be on a test?\"\n\n\"You doofus.\"\n\nJade blinked, slowly adjusting to the crowd around her. They'd congregated on her, but there didn't seem to be much pressure for her to actually answer anything.\n\n\"No one's gonna believe this.\"\n\n\"With Jade? Some people might.\"\n\n\"You think?\"\n\n\"Damn I wish that whole thing was filmed.\"\n\n\"No way. It's better that it wasn't.\"\n\n\"How so?\"\n\n\"It's the medium, isn't it? Like how a spoken poem is different from reading it in a book.\"\n\n\"But on film....\"\n\n\"It would have been different. Not spontaneous. And it wouldn't have felt the same just watching a recording.\"\n\n\"Hm. Maybe.\"\n\nMs. Shields looked like she'd been about to start shooing students from her class. But as the discussion became actually relevant to their studies, she started joining in. Just little bits here and there, not trying to run things, just help them along.\n\nJade scooted back on the desk and crossed her legs, just perching there, not really participating other than to be used as the main example for the conversation. It was, perhaps, slightly objectifying, but her little stunt had been truly accepted by at least this group of her fellow students. She could work with that.\n\nA few appreciative looks still came Jade's way from time to time, but mostly people were wrapped up in the post-lesson discussion. It was a pretty chill time, really.\n\nJade sat and let the moment happen. Let everyone discuss her performance and its relevance while she was still right there with them, on the desk, naked and messy, having just cummed repeatedly for everyone.\n\nThere was a warmth to it that wasn't a feeling of horniness or shame. Something related but different. It was nice, whatever it was.\n\nStudents finally filtered out, leaving Jade, Naomi, and Ms. Shields alone in the room.\n\nJade stood and accepted her satchel from Naomi, adjusting it across her hip and shoulder. She fidgeted with it a bit more than necessary as she took a breath.\n\n\"Sorry for getting a bit out of control there,\" Jade said.\n\nMs. Shields smiled and shook her head. \"It's understandable. And honestly, we got some surprisingly good thoughts out of it. I wouldn't have dismissed them early if I'd known how the discussion would go afterward.\" She paused. \"Although it's possible dismissing them allowed the discussion to happen organically.\"\n\n\"Definitely seemed like it,\" Naomi said cheerfully.\n\n\"There was, if you don't mind me saying, a certain poetry in your performance,\" Ms. Shields continued. \"Though I know you didn't really intend for it.\"\n\n\"You mean... like with Naomi saying her poems and me--\"\n\n\"That too. But even when it was just you... you had their attention, Miss Jade. Everyone's.\"\n\nJade blushed. \"Only for dirty reasons.\"\n\n\"I wouldn't say that at all. Let's not forget, just because something's erotic, that doesn't mean that's the only value it brings.\"\n\n\"Oh. Maybe.\"\n\n\"You were like a silent poet up there,\" Naomi said, only half teasing.\n\n\"Um... thanks?\"\n\nMs. Shields gave both girls a small, crooked smile. \"We may discuss this more next class, if you don't mind terribly. Once I have a chance to settle my own thoughts.\"\n\n\"Oh. Um, yeah? Yeah. Ok.\"\n\n\"Can she be naked for it?\" Naomi asked, making Jade glare at her.\n\nMs. Shields gave Naomi a look not unlike Jade's. \"I really don't think that would be appropriate.\"\n\n\"Fair enough.\"\n\n\"Although... if no one objects... and if you can make a sufficient case for it being relevant....\"\n\nNaomi beamed. \"On it!\"\n\nJade trembled and her calmed pussy twinged back to alert. They couldn't be serious, could they? Do that all again? Or even part of it?\n\nDidn't they know how embarrassing that would be? Naked tag day was one thing. Spontaneous and all. Her being as surprised as anyone.\n\nBut again? Planned? Everyone knowing what it did to her? Being 'that' girl? A horny little exhibitionist getting off on their attention?\n\nOh fuck. Who was she kidding. She'd do it again in a heartbeat.\n\nJade poked Naomi's shoulder as they left the room together. \"Tag.\"\n\nNaomi accepted it easily. \"Fair enough,\" she said, stopping to strip off her jeans and fold them up. \"Figured that might be coming.\"\n\n\"Can't believe you.\"\n\n\"Yes you can.\"\n\n\"Ok. Yes I can. How long were you planning all that?\"\n",
        "\"I dunno. A month maybe?\"\n\n\"Ah.\"\n\n\"Never thought it'd go quite that well.\"\n\n\"No kidding.\"\n\n\"I really must remember to ask if we're definitely getting bonus points for that. Performance points, maybe. Something.\"\n\n\"Seriously?\"\n\n\"Yeah. I mean, it was a hell of a show. That's the sort of stuff we're supposed to be learning, right? Not just writing poems but, like, performing them. Making people care.\" Naomi waved a hand up and down Jade's nude body. \"People definitely cared.\"\n\n\"I still don't think it was for the right reasons.\"\n\n\"Pff. So what? We mix beauty and sexuality and poetry all together and get something pretty great out of it? Who cares if it's 'right'?\"\n\n\"That's... not a bad point.\"\n\n\"Damn straight.\"\n\n\"You really think she's gonna let me be naked again?\"\n\n\"Girl, there's gonna be a riot if she doesn't.\"\n\n\"Ha, ok, whatever.\" Jade grinned to herself as they walked side by side, two naked girls proceeding through a decreasingly clothed campus. Her pussy was already trickling again despite a flurry of cums back in class. \"Naomi?\"\n\n\"Yeah?\"\n\n\"You're a pretty great friend.\"\n\n\"Aw. Thanks.\"\n\n****\n\nJade and Naomi returned to their dorm to dump their bags. Jade took the opportunity to clean up some, since she was quite a sticky mess.\n\nAs they headed back out, they ran into Gwen just returning as well. All three of them were currently 'it'. Gwen seemed to be faring quite well with being alone and naked, though it probably helped that it was a much more common sight at this time of day.\n\n\"Hey, drop your stuff and come back out with us,\" Jade said.\n\n\"Where you going?\" Gwen asked.\n\n\"Just out to play tag.\"\n\n\"Yeah,\" Naomi said, \"we get to go chase down girls the rest of the day if we want. And we got nothing slowing us down.\"\n\nGwen shifted her weight. \"So your plan is to just, like, run around naked and see how many other girls you can get naked too?\"\n\n\"Basically, yeah,\" Jade said. \"You in?\"\n\nGwen had to consider for a moment, but a wide, slow grin gave away her answer. \"Ok. Just give me a minute.\"\n\nJade and Naomi hung around outside waiting. Gwen was back pretty quickly, already slightly out of breath from her dash to her room and back.\n\n\"Ready, Team Neapolitan?\" Naomi said.\n\nGwen shook her head. \"I don't know if I like that.\"\n\n\"Aw, c'mon. You get to be strawberry and everything.\"\n\nJade nodded absently, watching a couple of potential targets from a distance. \"Come on, Strawberry. Let's get 'em.\"\n\nGwen sighed dramatically, but jogged to catch up once Jade and Naomi started moving. \"Gwen's fine,\" she grumbled. \"Don't gotta mess with that.\"\n\nTeam names soon became irrelevant. There were so many girls to run after that none of them really thought about it again.\n\nJade loved it. She was having the time of her life. Possibly second to poetry class, actually. But still, pretty close.\n\nShe got to run free all the rest of the afternoon, naked and exhilarated. She, Naomi, and Gwen kind of got in each other's way at first, but bumping into one another and even falling down in a naked, laughing tangle was all just in good fun.\n\nAs they kept at it, they truly became an effective team, herding not-yet-naked girls around until one of them could catch up and deliver the all-important tag. If one of them accidentally won clothes, the others could easily tag them and take care of the problem.\n\nSome girls they tagged stayed and joined their hunting party, swelling their numbers and making things dire and hopeless for anyone trying to sneak past with modesty intact.\n\nThanks to Jade's team starting it, the game of tag spread wildly, so much faster than it had all day. The whole campus was a chaotic arena of students running, shrieking, laughing, and stripping. Even the shyest of them were pretty much just having fun at this point, since nudity was becoming more common than being properly clothed.\n\nThe boys' game had been slower to get rolling all day. They got properly enthusiastic about it as waves of naked girls started spreading out everywhere in the late afternoon sun.\n\nSome of the more excited girls who were disappointed by the increasing lack of targets to tag started helping the boys by tackling or latching on to guys trying to escape. It was, technically, a bit of a faux pas to interfere that heavily in the other game, but very few boys protested about naked girls flinging themselves at them.\n\nJade ran until she wore herself out. Naomi and Gwen had already stopped for a break long before she did, and were just chilling sitting on a picnic table and watching her. She flopped down on the grass next to them to recover from all her running around.\n\n\"Gwen and I are gonna go get some food,\" Naomi said with an utter lack of sympathy for Jade's exhaustion. \"You wanna come?\"\n\nJade nodded, feeling the rumbling of hunger hit her as soon as Naomi mention it. \"Yes please. Help me up?\"\n\n\"That's a little pathetic.\"\n\n\"I know.\"\n\nNaomi and Gwen each took an arm and got Jade upright.\n\n\"I gotta go get my card,\" Gwen said. \"I forgot it again.\"\n\n\"Hm, yeah, me too,\" Jade said. \"They might not care. Lots of people'll probably forget theirs this time of day. Practically everyone being naked and all.\"\n\n\"Yeah. Maybe.\"\n\n\"It's not that far to hit our rooms and come back,\" Naomi said. \"Might as well be official.\"\n\n\"Sure,\" Jade said. \"Official. Why not?\"\n\n****\n\nThe girls stuck together for the evening. They hung out at the dining hall for a time, having something of a popular table for friends and acquaintances to come sit with them. Plus the atmosphere was pretty fun and crazy.\n\nSo many eighteen to twenty-two year olds were all naked together and didn't have to feel bad since everyone was doing it. For many of them, it was an excuse to get wild and just enjoy the public nudity.\n\nFor Jade, it wasn't the same thrill as being more daring. But it was a pretty good time watching others enjoy themselves, as well as sneak peeks at some of the more interesting people around, so it kind of worked out.\n\nParties ramped up that evening, as was pretty much inevitable with so many naked, excited, horny people all hanging out. Jade, Naomi, and Gwen cruised through a few of them, variously taking other friends along in tow or losing them somewhere along the way.\n\nJade was a bit too tired to really get into partying too hard, whether it be dancing, grinding, drinking, or something else. She did a bit of it all, of course, couldn't pass up the chance, but stayed light and kept moving.\n\nShe had to keep an eye on Gwen too. Naomi could handle herself, but Gwen clearly hadn't yet learned to rein herself in when things got crazy. She hadn't even quite hit the legal drinking age, for that matter. Not that that stopped her or much of anyone else.\n\n\"You've had enough there, Strawberry,\" Jade said, plucking a half-full plastic cup from Gwen's unresisting fingers.\n\n\"Oh, have I?\" Gwen asked, giggling madly and leaning on Jade.\n\n\"You have.\"\n\n\"Oops.\"\n\n\"We don't want you getting all drunk, do we?\"\n\n\"I... I might already be.\"\n\n\"Possible. You're still standing though, so that's something.\"\n\nGwen nodded seriously like she was really thinking about it, but then seemed to lose her train of thought. \"Hey, so, lots of people are naked here.\"\n\n\"Yes, Gwen. Most of them. If not all of them.\"\n\n\"Right. And lots of them are kinda drunk too.\"\n\n\"Sure.\"\n\n\"And some are... hot.\"\n\n\"Where's this going?\"\n\n\"Is it bad that I kinda maybe want to... make out with someone?\"\n\n\"Ok. Maybe let's get you back.\" Jade looked around and spied Naomi busy flirting with a naked and very erect boy. She seemed to be lightly teasing him about it, and he didn't much seem to mind. \"Naomi! Give me a hand please?\"\n\nNaomi nodded and excuse herself, then came over. \"What's up? Our little one getting tired out?\"\n\n\"Getting drunk and horny more like,\" Jade said. \"Help me get her back to her room?\"\n\n\"Sure.\"\n\n\"You can come back after if you want.\"\n\n\"Nah. It's fun, but I'm about ready to call it quits anyway. Not super interested in accidentally waking up next to anyone here.\"\n\nJade snorted. \"Their loss.\"\n\n\"I know, right?\"\n\nJade and Naomi supported Gwen between them and began a rather slow walk back to their dorm. Gwen was in no particular hurry. She was happy just wrap her arms around her friends and snuggle-walk with them.\n\n\"Gettin' a bit handsy there, Gwen,\" Jade said.\n\nGwen giggled and shook her head. \"Nuh uh.\"\n\n\"Yuh huh,\" Naomi said. \"You're straight up grabbing my butt.\"\n\n\"Oops.\" Gwen laughed harder.\n\n\"How much did you let her drink?\" Naomi asked.\n\n\"Why was that all my responsibility?\" Jade retorted. \"You could have been helping instead of flirting the night away.\"\n\n\"Look who's talking. You're just happy 'cause you already got a boy interested. Some of us don't.\"\n\n\"You had plenty interested in you. I saw them.\"\n\n\"Well... ok. But not the right boy.\"\n\n\"There it is.\"\n\nJade had to keep guiding Gwen's hand back to her waist, where it would inevitably fall to her butt again. Naomi didn't even bother. Eventually, Jade gave up as well.\n\nThey took the elevator to their floor, even though Jade usually used the stairs. She didn't like their odds of navigating Gwen up even a single flight without incident.\n\nGwen leaned even more heavily on Jade during the brief elevator trip. She even put her head on Jade's shoulder and sighed comfortably. Jade just patted her and murmured something soothing.\n\n\"Alright, here we go,\" Jade said. \"Back to your room for a nice nap.\"\n\n\"No,\" Gwen said.\n\n\"No?\"\n\n\"No.\"\n\nJade and Naomi exchanged helpless glances.\n\n\"Um... well there aren't a lot of other places we can take you,\" Naomi said.\n\n\"Take me with you.\"\n\n\"Are you just gonna try feeling us up more?\" Jade asked.\n\n\"Nope.\"\n\n\"Promise?\"\n\n\"Yep.\"\n\n\"Fine. Ok.\"\n\nGwen happily lay out on Jade's bed, trapping Jade by putting her head square in her lap. Jade shrugged and rolled with it.\n\nNaomi grinned over as she made herself comfortable on her own side of the room. \"She likes you.\"\n\n\"So it seems.\"\n\nNaomi settled herself cross-legged and casually started rubbing her pussy.\n\n\"Oh really?\" Jade asked. \"You're just gonna masturbate now?\"\n\n\"Why not? Gwen is.\"\n\nJade turned her gaze, and sure enough Gwen had her hand busy on her pussy too. It didn't appear to be anything deliberate or calculated. Just Gwen being kind of out of it while super horny.\n\n\"Just great,\" Jade mumbled. \"I got her head in my lap. What am I supposed to do?\"\n\n\"Bit of a departure someone else getting to masturbate in front of people and not you, huh?\"\n\nJade flipped Naomi off, then idly stroked Gwen's hair. All she could do was sit there and rather wistfully watch Naomi and Gwen play with themselves.\n\nNeither girl had much sympathy for Jade. Naomi clearly enjoyed getting to be the one getting off this time. With Gwen there was a chance she didn't even realize she was playing with her pussy in front of anyone.\n\nThe three of them had a moment to themselves before Diana found them. She casually walked in and sat down next to Naomi, who didn't break stride on fingering herself.\n\n\"So this is where you all got to,\" Diana said. \"I was wondering. Not like you to miss the fun.\"\n\n\"We've had our fun,\" Jade said.\n\n\"I'm still having mine,\" Naomi said with another petty grin in Jade's direction.\n\n\"Your own little pussy party, huh?\" Diana said. \"I was wondering when one was gonna start.\"\n\nShe too started rubbing herself, right next to Naomi.\n\n\"Really?\" Jade asked. \"No one else is rubbing off yet?\"\n\n\"Well... not in any kinda group, really. Couple girls went back to their own rooms for private time. But you know. Day like this, it's nice to have company.\"\n\n\"Yeah,\" Jade said, \"I know.\"\n\n\"Wha'ssa pussy party?\" Gwen asked.\n\n\"This,\" Jade said. \"It's not really a party. Just... you know. Girls getting horny. Usually after naked tag. All rubbing themselves.\"\n\n\"Oh. Like me.\"\n\n\"Yes. Like you.\"\n\nGwen was satisfied and went quiet again except for the occasional little moan or whimper.\n\nJade remained the only one unable to play with herself in the room. The door had been left wide open on Diana's entry, and every now and then girls would filter in or out. Sometimes staying to hang out and chat even when they weren't masturbating, but they all basically rubbed at least one orgasm out.\n\nAs many as half a dozen girls squeezed into the room at times, at other times it was just Jade and Gwen. Gwen didn't seem to have much pattern to when she was fingering her wet little pussy, she just kind of did it at times. Sometimes to make herself cum, sometimes just for the casual fun of it.\n\nIt was, perhaps, a window into the soul of a typically shy girl who'd been rather indelicately pulled from her shell, and was currently more than a little tipsy to boot.\n\nNaomi brought some water in for both Gwen and Jade at one point. They had to help Gwen lean up and sip some, but she drank greedily once the water was to her lips.\n\nEventually, Gwen fell asleep right where she was, even while other girls were still sneaking in to masturbate.\n\nJade debated kicking Gwen out, but there wasn't much point waking her while the room was otherwise busy anyway. Besides, Gwen was exhausted and looked so peaceful while sleeping.\n\nIt was only when things truly calmed down and everyone was pretty much on their way to bed anyway that Jade decided she probably had to sooner or later. Naomi had disappeared somewhere, so it was just the two of them.\n\nGwen was bleary upon being nudged awake, and looked around in confusion.\n\n\"I'm... in your room?\"\n\n\"Yes.\"\n\n\"Oh. I thought....\" Gwen trailed off and frowned, rubbing her eyes and yawning. \"How long was I out?\"\n\n\"An hour maybe? Maybe longer.\"\n\n\"Oh. Sorry. I didn't mean to fall asleep on you.\"\n\n\"I know.\"\n\n\"I didn't drool on you, did I?\"\n\nJade quirked her lips. \"A little, yeah.\"\n\n\"Oh.\"\n\n\"It's fine.\"\n\nGwen nodded, bouncing slightly in place, still seated on Jade's bed. \"I had weird dreams. I mean, I know why. Just, they're weird for me.\"\n\n\"Like what?\"\n\n\"Like... I dunno. Girls kept coming in and... and doing stuff.\"\n\n\"Masturbating?\"\n\n\"... yeah. And I just thought it was fun and... and played with myself too.\" Gwen shrugged, looking away slightly embarrassed.\n\nJade sighed and knew she probably had to tell Gwen. \"That wasn't a dream.\"\n\n\"What?\"\n\n\"That happened. You. Other girls. It's been a whole party in here.\"\n\n\"Oh. Oh no. Really?\"\n\n\"Yeah. But you know, no one thought anything of it. Just happens sometimes. Naked tag, you know? It gets to everyone.\"\n\n\"I guess.\" Gwen fidgeted. \"I really just masturbated in front of people?\"\n\n\"Yep.\"\n\n\"Wow. Huh. I must have been drunker than I thought.\"\n\n\"Drunk and horny.\"\n\nGwen blushed, but smiled cautiously back Jade. \"That's actually kinda hot that I did that. Like, crazy and stuff. Is that why you do it?\"\n\n\"Basically, yeah. It's maybe a little more complicated than that, but mostly I just really like it. It's all crazy and embarrassing and just, like, the biggest thrill in the world. Took me a while to get over some of those feelings. Like the bad ones that sometimes hit afterward.\" Jade sighed. \"I may still wake up tomorrow and feel humiliated about that class with Naomi.\"\n\n\"Hm? What happened?\"\n\n\"I... kinda got myself off in front of the whole class. Repeatedly.\"\n\n\"No!\"\n\n\"Yes.\"\n\nGwen's eyes were wide. \"Like... wait, how? Before class?\"\n\n\"During. As part of the lesson. Somehow.\"\n\nGwen clutched her hands and squeezed her legs together. \"No way.\"\n\n\"Yuh huh. Ask Naomi. She was there.\"\n\n\"That's... oh wow, I could never do that.\"\n\n\"Yeah, I thought that too. Until today.\"\n\nGwen looked at Jade with an entirely new awe, then shyly looked away again. \"I think I was kinda... grabbing you a bit earlier.\"\n\n\"You were.\"\n\n\"Sorry about that.\"\n\n\"It's fine.\"\n\n\"Just... I think I need to, like, maybe get off again?\"\n\n\"Ok.\"\n\n\"And I don't want you to think I'm, like, being weird about it.\"\n\nJade smiled, shook her head, and leaned against the front of her bed. She spread her legs and slipped her fingers down over her wet slit. \"I need to do it too. Someone's been hogging my lap all evening.\"\n\nGwen struggled between apology, embarrassment, and horniness for a moment, then grinned back and rubbed herself too. It took her a few minutes in her less inebriated state to get comfortable fingering her pussy in front of Jade, despite having so easily done it in front of anyone who happened to walk in not that long ago.\n\nThe girls watched each other as they rubbed themselves. Gwen perhaps more intently than Jade.\n\n\"I think I might really like this,\" Gwen admitted softly.\n\n\"Which part?\"\n\n\"... all of them?\"\n\nJade smiled knowingly. \"Ah.\"\n\n\"I don't think I could ever be naked if I was the only one, but... well, I guess I was by myself sometimes today. But even then, like, people knew why. But I mean... if other people are naked, I kinda really like it. Maybe.\"\n\n\"That's good.\"\n\n\"And... and knowing I was actually just playing with myself in front of people....\"\n\n\"Hot, right?\"\n\n\"And you. I don't know. I'm confused about you.\"\n\n\"Oh?\" Jade asked, keeping her tone light.\n\n\"I don't think I'm really, like, into you or anything. You're just... there are things I love about you. And things maybe that I want to be. Things I'm not.\"\n\n\"Plus you're a horny drunk.\"\n\nGwen blushed, but only faintly. \"I think I was horny while I was drunk, not because of it. It's different.\"\n\n\"If you say so.\"\n\n\"I'm still maybe a little tipsy.\"\n\n\"I could believe it.\"\n\nGwen panted and rubbed herself faster. \"Would it be weird if we did this again sometimes?\"\n\n\"If you like. I don't think Naomi'll mind too much if you want to... 'visit'.\"\n\n\"Ok.\"\n\nJade wasn't totally sure what to make of Gwen's admissions and question, but she was pretty much on board with it all anyway. It was, in some ways, like she'd found herself a little protege. That could be fun. Assuming Gwen didn't really start catching feelings for her, which might be awkward. But it was probably all just fun and nerves and hormones and the novelty of the whole day.\n\nThe girls brought themselves to some final orgasms of the day while watching each other intently. Staring and being stared at. A last little bit of enjoying the nudity of the day, and the consequent slackening of inhibitions.\n\nGwen was much cuter making herself cum when she was fully aware what she was doing. Some of her initial shyness of that morning came back as she came while knowing Jade was watching every little moment of it.\n\nShe kept her hand covering her pussy afterward while waiting for Jade to finish up too. She either just wanted a bit of comforting pressure on it, or was feeling self-conscious about showing herself, despite Jade having had most of the day to check her out if she wanted.\n\nJade got herself off, playing up her moans and squirming perhaps just a little for Gwen's benefit. It wasn't nearly so intense as cumming in front of a small group outdoors, let alone in front of a whole class, but there was an intimacy to the mutual act that added kind of a lovely warmth to her cum.\n\nThere was a quiet few moments afterward, both girls still rubbing themselves slowly, but with no urgency or need to the touching. They shared communication only through their eyes until Gwen finally sighed and bounced to her feet.\n\n\"I should probably get some sleep,\" she said. \"Some proper sleep.\"\n\n\"Probably a good idea,\" Jade said. \"You really are welcome any time.\"\n\nGwen nodded, fighting a small, goofy grin. \"You've corrupted me, you know.\"\n\n\"I had a sense of that, yes.\"\n\nGwen hesitated a moment longer, then turned and padded off to her own room, naked and freshly cummed.\n\nJade gave her a few minutes, still idly playing with herself in memory of the day, then got up and hit the bathroom, getting ready for bed. She'd only just tucked herself in when Naomi returned from wherever she'd been.",
        "\"Gwen found her own bed?\" Naomi asked, crawling into bed on her side of the room.\n\n\"I believe so,\" Jade said. \"I didn't check.\"\n\n\"She had quite a day.\"\n\n\"Mmm. Me too.\"\n\n\"Ha, yeah. That was a good one.\"\n\n\"It was.\"\n\n\"Just a regular, plain old day tomorrow.\"\n\n\"Mmhm.\"\n\n\"Unless Ms. Shields really asks you to be naked again.\"\n\n\"Don't have that class tomorrow.\"\n\n\"Well... next time, anyway.\"\n\n\"Right. She wouldn't though.\"\n\n\"No. Probably not.\"\n\n\"But... she might.\"\n\n\"Would you really do it? On a regular day? You'd be the only one misclothed, let alone naked.\"\n\n\"Hrrgg. I'm tryin' to sleep.\"\n\n\"Getting excited thinking about it?\"\n\n\"No. Shut up.\"\n\n\"Maybe I'll just steal all your clothes before you wake up. Then what?\"\n\nJade sighed, trying not to let the small thrills of Naomi's suggestions get to her and ruin any chance of sleep. \"Good night, Naomi.\"\n\n\"I could--\"\n\n\"Good. Night.\"\n\nNaomi giggled softly. \"Yeah. Ok. Good night. Weirdo.\"\n\nDespite Jade's best efforts, she had to sneakily masturbate again before she could drift off. Stupid Naomi knowing her so well. And she probably wouldn't even follow through with any of her 'threats' either. Just a tease.\n\nStill, at the very least, there was always the next game of tag to look forward to."
    ],
    "authorname": "Xarth",
    "tags": [
        "masturbating in class",
        "embarrassed",
        "enf",
        "game",
        "naked in class",
        "naked outside",
        "public",
        "public masturbation",
        "public nudity",
        "university"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/naked-tag"
}