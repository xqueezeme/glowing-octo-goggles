{
    "title": "Riviera Sun & Knickers Ch. 02",
    "pages": [
        "11am Friday could not come quick enough for me! I was packed and ringing the doorbell at Olivia's house at exactly 10:55, that's when I got my first shock of the day, Isabelle opened the door as I had expected but not the Isabelle of the other night! This Isabelle was stunning, her long dark hair was down, she wore subtle make up and a beautiful white and pale blue patterned summer dress. \n\nIsabelle was gorgeous and I had not really taken that in the other night, in fact I had hardly noticed her at all! Tall, early to mid 30s pale olive skin and a figure that was all woman!\n\n\"Is something wrong sir?\" Asked Isabelle.\n\n\"Wrong? No, no not all,\" I stammered. I guess my face must have been a picture when confronted by this vision of loveliness. \n\n\"Ah there you are Simon, punctual I see, is there something wrong you look confused?\" Asked Olivia.\n\n\" No nothing at all, I didn't recognise Isabelle when she opened the door that's all\"\n\nWith that Isabelle turned and walked into the hall, I couldn't help but notice the faintest outline of her white panties as she sashayed away down the hall.\n\n\"Isabelle will be travelling with us Simon, she will be helping Virginie at the villa as well as having some holiday time herself.\" \"Oh and Simon.\" \n\n\"Yes Olivia?\"\n\n\"Please put your tongue back in, it's most unbecoming to drool like that\"\n\nIsabelle turned and smiled on hearing that last comment from Olivia, a smile that spoke volumes!\n\nTwo taxis stood outside the door all our bags were in and we were ready to leave.\n\n\"Ladies,\" I gestured to the door and the waiting taxis. \"After you.\"\n\nAs I watched the four visions of loveliness climb into the cars, I had to pinch myself to make sure this was really happening? \n\nIt was!!\n\n\"I have organised three cabins for our use if required,\" said Olivia as we boarded the ferry \"I will remain in one for the duration as the sea is not my friend! Simon will you be so kind and see to the luggage?\"\n\n\"Yes of course,\" I replied.\n\nI distributed our luggage amongst the cabins and knocked on Olivia's to check if there was anything she needed.\n\n\"I'm fine thank you,\" Said Olivia. \"I just lie down and wait for the ordeal to be over.\" \n\nI turned to leave as I had arranged to meet the girls on deck.\n\n\"Maybe just one thing Simon? Could you just help me with my zip, I can never quite get it all the way down\"\n\nThe dress was a simple white sleeveless linen, the zip slipped down easily and once down I should have turned and left, but with my heart beating hard in my chest I didn't move.\n\n\"Thank you Simon, that'll be all.\" Said Olivia turning toward me with a kind smile on her face.\n\nFor some reason I was transfixed and couldn't move as I looked at Olivia willing her dress to fall off her shoulders. At 45 she was 25 years older than me but utterly beguiling.\n\n\"Simon?\"\n\n\"I'm sorry Olivia I was remembering how beautiful you looked the other night when I helped you out of your dress, you are truly a very sexy woman!\"\n\n\"Thank you Simon, I am flattered, you are quite the smooth talker aren't you?\"\n\n\"I apologise Olivia I should leave.\"\n\n\"Yes you should, but first maybe you could help me hang my dress up?\" And with that she slipped the straps off her shoulder and let the dress drop to the floor. She now stood in front of me in a thin full length slip and from what I could see panties but no bra!\n\n\"Gorgeous!\" I said to myself.\n\n\"Really, you think so?\"\n\n\"Oh god yes Olivia,\" I said realising she'd heard me.\n\nI was now getting hard and struggling to hide it, I wanted to touch this woman whom I had only seen in her underwear before.\n\n\"Why Simon? what do you like about what you see?\" She asked\n\n\"A pretty silky slip that will feel gorgeous as it slides over your skin and panties under my touch, nipples getting harder as the soft material touches them as I kiss them, the soft rustle of the fabric as it slips to the floor,\" I whispered.\n\n\"My my Simon you do have an imagination don't you?\" She said moving a little closer, \"And look at the effect your thoughts have had!\" She said as she gently stroked my cock. \"I think I can manage from here but maybe a little treat won't do you any harm, before I get into bed you may slip my petticoat off and then go and look after the girls, as soon as we are out of the harbour I will be no good to anyone.\"\n\nOlivia had large but firm looking breasts which up to now I had not seen or touched and whilst it was clear this was not going far I was determined to make the most of this chance.\n\nI laid my hands on Olivia's shoulders and slipped the straps of her slip off and down her arms, she lifted them to allow them out of the straps. I smoothed my hands down her back until I could feel the soft material rubbing against what I now knew to be her silky panties, her breathing became a little deeper as I then placed my hands above the loose top of her slip and stroked it down over her breasts. \n\nOlivia let out a little gasp as my hands brushed her erect nipples, I knelt down in front of her to smooth the slip over her hips, my face was now level with her pussy and I could smell a delicate muskiness and also see a small damp patch on her panties. I could not control my need to bury my face in her pussy so with both hands on her ass pulled her to me and kissed her panty covered pussy, licking the damp patch along her slit.\n\n\"Not now Simon,\" came a weak voice above me \"not here.\"\n\nI stood slowly, running my tongue over her stomach and stopping to kiss her breasts, my hand running over her silky clad ass. My cock was ready to burst out of my chinos and as I looked Olivia in the eyes and kissed her, I pressed my self hard into her both hands now inside the waistband of her panties massaging the round bare flesh of her ass.\n\n\"Simon this must stop,\" she said firmly but in a whisper that denied her true feelings.\"\n\n\"Are you sure you want to stop Olivia?\"\n\n\"No, but we are going to anyway, I have no intention of making love in this cramped cabin, now get your hands out of my knickers young man and go and see that my daughter and her friend are all right. Don't worry Simon we will finish this at the right time this just isn't it\" Olivia smiled and with a final kiss eased me toward the door.\n\nI went up on deck to look for the girls with a very uncomfortable feeling in my groin.\n\nI found them finally, all leaning over the back rail watching as we slowly pulled out of the harbour. No matter what the weather there is always a breeze on the deck of a ship and this one was playing with the hems of each of the girls skirts and dresses. \n\nIsabelle's white dress was revealing enough to confirm shapely legs but not fully giving way to reveal any more. Chantal was wearing a pretty gypsy style skirt and blouse the skirt billowing rather than lifting, Lucy had on a pale yellow mini skirt which with the help of the wind revealed she was wearing pale yellow panties to match.\n\nThis view did not help my aching groin and my once again hardening cock!\n\n\"Enjoying the view Simon?\" Asked Chantal who had turned and spotted me looking at Lucy's panties.\n\n\"What's not to enjoy?\" I replied. I saw no point in being coy or bashful. \"Three pretty girls in a row, the wind blowing up your skirts showing off your knickers!\"\n\n\"I think only one of us was showing our knickers to you Simon but you can wish if you like?\" Smirked Chantal.\n\nThey had all turned round now and both Isabelle and Lucy were grinning at me, I looked a little quizzically at Isabelle not sure quite what she knew. It was Lucy who cleared things up.\n\n\"Isabelle is like one of the family Simon, she is fully aware of what happened the other night.\"\n\n\"Ah right ok,\" I mumbled, \"I'm glad that's all clear then, so what's the plan for the next four and a half hours? Olivia is tucked up in her cabin ready to suffer the crossin,' what shall we do to amuse ourselves?\"\n\n\"I thought you already were amusing yourself?\" Said Isabelle. \"Did you enjoy the views of our underwear?\"\n\n\"Well actually I only saw Lucy's, the wind wasn't quite up to lifting yours and Chantal's skirts so your knickers are still a mystery to me.\" I said laughing.\" By the way I have the the keys to the other two cabins if anyone needs them?\"\n\n\"Maybe if we go to the cabin you won't have to rely on the wind to get your kicks?\" Said Isabelle laughing loudly.\n\nBefore I could respond Lucy suggested we go to the bar for a drink. The staircases from one deck to another on ships are very steep, so being the perfect gentleman I let the girls go ahead of me and was sussed straight away!\n\n\"Oh please Simon try to be more subtle than that,\" Isabelle said turning to face me and smiling at me with her hands on her hips about 4 steps above me. \"Will you not give up until you have seen up my skirt?\"\n\nThe view I had now was so enticing I could see up to about 1-2 inches below her panties, her legs were stunning!\n\n\"If at first you don't succeed, try, try, and try again.\" I said shrugging with an innocent smile.\n\nLucy and Chantal had continued on up to the top of the staircase and Lucy's pale yellow panty covered pussy was on full view. \n\n\"Stop flirting you two and let's get to the bar.\" Said Lucy.\n\nIsabelle turned and oh so slowly and sashayed up the stairs knowing full well that I now had a perfect view of her delightfully round panty covered arse. The palest of pale blue nylon panties moved enticingly before my eyes, I also noticed the pretty slip she was wearing as well. Oh how I would have loved to have run my hand up her smooth legs and place my hand on her panties and felt her arse moving against the soft materials she walked up the stairs.\n\nWhen we were both at the top of the stairs Isabelle leant into me and and whispered \"Happy now, did you like what you saw?\"\n\n\"Beautiful Isabelle, quite beautiful.\" I said and gently gave her a little pat on her backside.\n\n\"It's a good job we have cabins judging by you two! Now come on Simon and get the drinks in,\" Lucy laughed.\n\nWe all sat with our drinks chatting and flirting with innuendos flying, laughing out loud, with me also having to keep pinching myself that this was really happening!\n\nIt was Isabelle who suddenly became serious and said to me \"So Simon why are you so obsessed with our knickers? Olivia and Lucy have told me all about you on the seafront last week, how you followed them and all that followed afterwards. What is it that turns you on about a girls panties, do you want to wear them?\"\n\nI looked nervously around the table at three curious faces not quite sure how or if it wanted to answer Isabelle's question.\n\n\"Come on Simon, please, tell us what makes you happy, what turns you on?\" Chantal purred in her sensuous French accent.\n\n\"Yes Simon, we need to know if our panties are safe or will we need to buy some more for you?\"\n\nI couldn't help feeling that this was a bit of a set up to embarrass and tease me. \"Surely you don't need me to state the obvious about any guy who would always take any opportunity to look up a girls skirt?\" I blustered.\n\n\"Of course not Simon,\" Isabelle replied, \"but you put in a little more effort than most, so don't be embarrassed tell us what really turns you on?\"\n\nI was embarrassed and felt very much under the spotlight being expected to reveal my inner sexual self to, in real terms, three complete strangers!\n\n\"Do you think I'm some sort of a weirdo or pervert because I like to see your knickers?\" I asked a little nervously.\n\nIsabelle placed her hand over mine and quietly and gently said, \"No Simon not at all, please don't think that! It is actually quite flattering for us and a little exciting at the same time, to know you have glimpsed something so personal in intimate. We are simply interested in what makes you tick?\"\n\n\"Okay,\" I said. \"I will try to explain, but first let me make one thing very clear, I have never worn women's panties and am never likely to! So yours are quite safe!\"\n\n\"Have you never even thought about it?\" Lucy asked with a wicked grin on her face.\n\nMy face obviously showed some doubt and I was not quick enough to answer when Lucy giggled, \"You have haven't you you? Who's do you want to try, mine? Isabelle's? Chantal's?\"\n\n\"Lucy please, no! I don't want to try yours or anyone else's knickers on!\" I retorted.\n\n\"Lucy, don't tease him,\" said Isabelle. \"This probably isn't very easy for him.\"\n\nLucy stood and gave me a gentle peck on the cheek, \"I'm sorry Simon, I didn't mean to upset you.\" As she sat down again she exaggerated settling her skirt and flashed her panties at me and gave me a little wink. \n\n\"Okay look, I don't think there is a guy on this earth that wouldn't enjoy a flash of a pretty girls panties? But I will admit that it is more than that with me, although I'm not really sure where to start?\"\n\nLooking around I saw the bar was full of people some sitting very close to us. Isabelle saw me looking and said \"let's get ourselves another glass of wine and go and find ourselves a little privacy, shall we?\"\n\nSo with full glasses we set off for one of the cabins, the cabin on a cross channel ferry is functional and no more! This one had a small toilet and a single bunk on each wall, Lucy and Chantal sat on one Isabelle and me on the other.\n\n\"So Simon, where had you got to?\" Said Isabelle \"I think you were telling us how you like a little more than a simple flash of a girls knickers.\"\n\nSo in the company of three beautiful women I looked at them each in turn and with a sigh continued. \"To see a lovely rounded bottom or the mound of a pussy encased in pretty panties is so erotic, but for me I would then be very disappointed if I didn't get the opportunity to touch, feel, maybe kiss them, or slide my hands down them. You see as you said Isabelle, they are intimate and they are the final barrier to your most intimate place. I just don't want to be handed the ultimate prize on a plate! If one of you stood up and undressed until you were fully naked, would that be sexy and exciting? Yes of course it would! But why rush straight to dessert when there can be so many courses to enjoy before that? I want to be teased, to have all my senses engaged.\"\n\nLucy sat forward and asked, \"what are your favourite panties Simon, do you prefer a certain colour or material?\"\n\n\"Material? No, soft cotton, nylon, satin or silk are all fine with me, bikini briefs are definitely my favourite though, they compliment a woman's shape so much better than any other style of panty. So far as colour is concerned white panties are probably my favourite.\"\n\n\"Not red or black? I thought all men preferred red or black?\" Said Chantal.\n\n\"No, definitely white or pretty pastel colours like Lucy and Isabelle are wearing and maybe you?\" I said looking at her enquiringly.\n\nShe pouted a little and looked sad as she said \"No Simon you will not like mine, I am wearing black.\"\n\n\"I am sure I would like them Chantal, you see if I closed my eyes then your panties would feel no different to a pair of white ones would they? And whilst I may have preferences I would be delighted to see what I am sure would be your very pretty black panties.\"\n\n\"Is it just panties or is there anything else you like?\" Isabelle asked.\n\n\"No it's not just panties it's all sorts of things, the way you dress, the way you move can all set my imagination running about what is going on underneath. Earlier Lucy when you stood next to me in the bar to kiss me, my imagination was running wild with what I would like to do!\" \n\n\"Tell me Simon, what did you want to do?\" Lucy giggled.\n\n\"No, show her!\" Chantal said. \"Go on Lucy let Simon show you what was going through his mind.\"\n\nAt that Lucy smiled and standing stood next to me, \"So Simon what did you want to do?\"\n\n\"Bend forward and kiss me like you did before.\" I said. \"Okay so I wanted to run my hand slowly up the back of your leg until I reached your panty covered arse, then I would have stroked and kneaded your buttocks and let my fingers explore your pussy.\" \n\nOf course as I said this I was doing exactly what I was telling her.\n\n\"Your panties would have been damp and I would then have lifted the front of your skirt and kissed and licked your pussy through your damp knickers.\"\n\nLucy was moaning softly as I licked her pussy, my hands were inside her panties stroking her soft round arse.\n\n\"Oh my god Simon, this is what you were thinking when I kissed you?\" Sighed Lucy. \"And all because I flashed my panties?\"\n\n\"So I will not have turned you on at all today then?\" Chantal asked looking sad.\n\n\"Oh no quite the opposite,\" I replied. \"I love the way you look today, let me try and explain, I love panties and cheeky flashes are a real turn on, a hint of of the outline of panties through a dress like Isabelle's is also a turn on. But you look gorgeous today, sensual, sexy and mysterious. Panties are the final goal but the journey is just as much fun!\"\n\n\"So what would you have done to me if I had come over to kiss you, hmmm cheri, what would mind have thought up for me?\" Chantal purred and came to stand next to me.\n\nHer gypsy skirt was matched with a very thin cream coloured billowy blouse, no buttons just a V neck and lace ties which were not done up. She was not wearing a bra and I had noticed her dark nipples were clearly visible earlier.\n\n\"If you lean forward to kiss me your blouse will fall open slightly and I will be able to see your bare breasts which I will cup and play with your nipple using the soft material of your blouse to make hard and erect. My other hand will be stroking your bottom through the folds of your skirt and my mind is imagining what the silky panties I can feel look like and how will I get to touch them? I think you would stand in front of me and with two hands slowly slide the hem of the skirt up your legs until there is just a small amount of material for me to lift and and expose your panties to me. I would place my hands on the back of your legs and move them up until I could stroke your firm round arse covered in your silky panties then gently pulling you to me I would push my head under the last bit if your skirt and kiss and nibble your pussy.\"\n\n\"Mmmm simon that is so good please do not stop!\" Chantal moaned. \n\nI didn't want to stop anymore than I had with Lucy who I noticed was sitting cross legged watching intently with her hand down her panties. However I was feeling very uncomfortable now as I struggled with a raging hard on which Isabelle noticed as I tried to adjust it in my chinos. She put her hand on the top of my leg her fingers just brushing my cock.\n\n\"And what would you have had in store for me Simon? Where was your mind going when you looked up my dress on the stairs?\" Asked Isabelle.\n\n\"At the time I wanted to put my hand on your panties and feel your arse moving against the soft material as you walked up the stairs. But I also noticed you had another possible pleasure in store,\" I said smiling.\n\n\"Oh, and what was that Simon, I am intrigued?\"\n\n\"You are wearing that other lovely undergarment, a slip! It maintains a little more of your modesty by hiding your panties from the watchful eyes of people like me, particularly when you are wearing thin summer dresses like yours.\" I said.\n\n\"So why do you like slips then if they hide your precious panties from you?\" She asked.\n\n\"Come here, stand in front of me and I will show you.\" I said.\n\n\"I'm not sure that would be a good idea Simon?\" She answered with a slightly coy grin on her face.\n\n\"You have to Isabelle!\" Lucy and Chantal said almost in unison.\n\nWith Isabelle now standing in front of me and the girls sitting on the bunk behind I said \" can you see how the slip allows just the merest hint of panty to show through, which is very exciting. Then the wonderful feeling of the materials all sliding together as I move my hand over her bum?\" \n\nAs I was talking and feeling Isabelle's panties through her slip and dress Lucy leaned forward and put her hand on Isabelle's bottom and started to gently stroke and knead her arse.",
        "\"You are right Simon this feels good, you have a lovely bottom Isabelle.\" Lucy giggled.\n\n\"The best is yet to come,\" I said, I went to stand up and at the same time took the hem of Isabelle's dress and started to lift it up over her head. It would have been easy for her to have stopped me at this point but she didn't, instead she raised her arms and allowed the dress to be taken off. She wasn't wearing a bra and her breasts were firm beautiful globes, I couldn't help letting out a little gasp as I fully realised what a gorgeous woman Isabelle was.\n\nI tried to remain cool as I sat down again, when in truth I was a wreck and feeling a little out of my depth. The slip she wore was white nylon and stopped about two inches above her knees, as I sat in front of her I could clearly see her pale blue panties framing her pussy.\n\n\"Slips are so sexy, when they feel silky like this and you can clearly see panties beneath them, your hands slide so easily over the curves of the arse.\" I said in a barely audible whisper.\n\n\"Aren't You going to kiss Isabelle's pussy like you did ours,\" Asked Chantal, \"I want to see you kiss her pussy.\"\n\nLucy came and sat next to me. \"I agree.\" She said as she curled her fingers into the waistband of Isabelle's slip and pulled it down over her hips and let it fall to the floor.\n\nI looked up, Isabelle's breasts just above my head as she looked down at me and smiled.\n\n\"it's only fair Simon.\" she said. \n\nI put both hands on her arse and pulled her toward my face and waiting tongue, I could smell her pussy and see a wet patch on her panties. My cock was fit to burst from my chinos and in desperate need of some attention when Isabelle stopped me just as I was about to bury my face in her panty covered pussy.\n\n\"I think I'd like to see a little evening out on the clothes front first! I am nearly naked and you are all fully dressed! You first Simon, let's have you down to your panties.\" smiled Isabelle.\n\n\"I think we can help with that!\" Said Lucy already pulling my deck shoes off my feet.\n\nIsabelle leaned forward and taking the hem of my polo shirt lifted it over my head, Chantal had been fiddling with the belt of my chinos and now required me to stand. The bulge from my rigid cock was not helped by her stroking it as she undid the buttons and pulled the zip on my trousers. It was a massive relief to have it released from its tight confines.\n\n\"Your turn now girls.\" Isabelle instructed.\n\nI sat back down on the bunk and positioned myself in front of Isabelle again, whilst watching Lucy and Chantal disrobe. \n\n\"You're arse looks great in those panties,\" Lucy said to Isabelle. She then stood behind her and cupped her arse stoking it and slipping her hand inside. With so little room in the cabin Chantal sat on the other bed and started to stroke and play with Lucy's arse her hand also slipping between her legs.\n\nI put a hand between Isabelle's legs and cupped her pussy feeling the dampness as I ran a finger along the slit of her pussy. Isabelle let out a quiet moan as I finally buried my face in the soft nylon of her panty covered mound. Lucy and Chantal had moved and were now squeezed on the the other bunk hands down each other's knickers. I carried on sucking on Isabelle's pussy the front her panties now a damp rag from a combination of my saliva and her juices, my hands were inside the legs of her panties as I kneaded her arse. \n\nIsabelle's breathing was becoming more ragged as she put her hands on my head to ensure it stayed right where she wanted it, I could hear both Lucy and Chantal purring and moaning as I assumed they were bringing each other off. The with a shudder and her legs nearly buckling under her Isabelle let out a long low moan and thrust her hips at me as she experienced her orgasm.\n\n\"Holy shit!\" She exclaimed as she leaned forward putting her hands on the cabin wall for support and blowing out her cheeks.\n\nThis position left her breasts hanging just above my face, \"Too tempting,\" I thought to myself. \n\nI raised my head and took one in my mouth and played my tongue over her erect nipple, my hands finding her gorgeous panty clad arse again. Without touching it I knew my cock was about to explode all on its own, so when Isabelle moved back and pushed me on to my back on the bunk I hoped that finally some relief was coming my way.\n\nMy cock was rigid and poking out of my boxers dribbling pre cum as Isabelle leaned over and brushed her breasts over it. Then with her long dark hair playing over my groin she lowered her head over the tip and took me in her mouth slowly and with great skill her head moving up and down my shaft her tongue playing with my swollen head. \n\nNow I had just seen and played with three beautiful panty clad arses, kissed and licked their pussies, watched them undress down to their pretty panties, so this was never going to be the longest running show on earth! In no time at all I felt my orgasm building and thrust my hips up toward Isabelle, sensing this she took my shaft in her hand and brought me to a climax all the while sucking and licking my cock as I bucked and shuddered under her.\n\nThe cabin whilst small and cramped with all four of us was very quiet for the next few minutes as we all recovered, it was Isabelle who spoke first.\n\n\"Well who knew panties could be be so much fun? Thank you Simon for the education, although I suspect we have many more classes ahead of us...\""
    ],
    "authorname": "lovethosepanties",
    "tags": [
        "knickers",
        "panties",
        "nylon",
        "silk",
        "cotton",
        "slips",
        "petticoat"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/riviera-sun-and-knickers-ch-02"
}