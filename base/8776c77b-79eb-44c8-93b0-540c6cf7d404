{
    "title": "What You Wish For Pt. 01",
    "pages": [
        "Introduction\n\nWhen I wrote my last story, I promised my next one would be a detective story of some kind. Sorry. I lied. Maybe not really a lie, so much. More like I tried to do it, but the story just kept going nowhere. Then I was out for drinks a month or so back and heard a guy telling his story. It started the way this one starts, and it got me to thinking about why people act the way they do. And it also got me to thinking about the endless criticism I get for not fleshing out my female characters enough\u2013a criticism, granted, that was more muted with The Bar and Grill, bit is valid nonetheless.\n\nSo I decided to write this one and see where it took me. Halfway through the outline, it all just clicked. Sure, you may hate it, so the outline may have sucked. But it was easier than hell to write. And, even though the main character and storyteller is a male trying to figure out life after divorce, the more interesting characters\u2013at least the ones I really enjoyed inventing and writing about\u2013are the women. None of them, I think, are really the same. All of them, I fervently hope and pray, are three-dimensional. So be forewarned: Three-dimensional characters have flaws. Sorry, but I'm trying to write about real life.\n\nBefore you begin, I want to warn you about a few things. First, this is a 6-part series. Don't, for God's sake, judge the book by the first part. Unless, of course, it really sucks. HarryinVA, please don't hate my main male character until at least part three, but make damned sure you weigh in with your thoughts. All of you, these characters are going to grow as the story goes forward, so please keep an eye out for that.\n\nAnd DanielQSteele, get your ass moving on When We Were Married! (Sorry, but I'm going to nag you until you're done with it. Despite my comments to the past several chapters, you really are fucking brilliant!)\n\nThanks to all for taking the time to read this, and particular thanks to those who take the additional time to comment.\n\nCHAPTER ONE\n\n\"Beware what you wish for. You just might get it.\"\n\nI can't count the times my old man said that.\n\nCliche? Oh yeah.\n\nTrue? Yep. Definitely. Without a fucking doubt.\n\nTake my marriage, for example. For years, I'd dreamed only of marrying Kristin, having a big house and, eventually, kids, and having a thriving career making tons of money.\n\nKristin? She wanted\u2013I thought\u2013the same things. Come to think of it, she did want pretty much the same things. You know, a life of leisure and glamor, a happy marriage to her high school sweetheart\u2013that's me\u2013and a big house and a bigger credit limit.\n\nMost of our dreams were realized before they destroyed us.\n\nTruth be told, though, my marriage was dead five years before the paperwork was signed, sealed, and filed with the Clerk of the Court. I just didn't know it at the time.\n\nThe cause? Doing what Kristin wanted\u2013chasing those dreams\u2013and moving to West Palm Beach so I could take a high-paying job as a bond salesman.\n\n\"West Palm,\" she said, her pale blue eyes sparkling. \"Just imagine, Tyler. Palm trees, beaches, warm sun.\"\n\n\"No snow.\"\n\nShe smiled, one of those thousand-watt smiles showing her perfectly straight, sparking white teeth and the cute little dimples on her cheeks.\n\n\"Especially no snow.\"\n\n\"And a good job,\" I said.\n\n\"A great job, baby,\" she said, leaning in for a tight hug before attacking me with her lips and tongue.\n\nSo, based on her initial reaction, I suppose you'll just have to excuse me for being surprised that her dream wasn't all she'd thought it would be.\n\nStill, I didn't expect her to play it quite the way she did. To the contrary, her ultimate actions still stun the hell out of me.\n\n* * * * *\n\nThree years after moving to West Palm, the problems began in earnest. Silly ass me, though, didn't really spot them for what they were. She's just homesick, I thought at the time. Needs to keep her mind off of her sister and parents back in Grant City and stay focused on everything that was going well for us at the time.\n\nBy that point, I was the third-highest selling bond salesman in the company, raking in over a quarter mil a year. We had a nice house mortgaged to the hilt, a pair of luxury sedans in the garage, and Kristin had a deep tan and extensive wardrobe. What she didn't have was a job or many friends. Or me, for that matter.\n\nThe problem with being such a successful bond salesman\u2013and the reason they paid me a quarter mil a year\u2013was that I was gone half the time. Flying from Dallas to Atlanta, then the Big Easy to the Big Apple, peddling our products to the end salesmen who would sell them to the public or their chosen few customers. When I wasn't flying out two or three weeks a month, I was working seventy hours a week trying to line up new contacts and future sales. All right? Get the picture? I'm a dumb ass, and I should probably have been paying a little better attention back at the home front.\n\nOf course, Kristin grumbled, but that always led to a whole new series of issues.\n\n\"Can't you just cut back a little?\" she'd say.\n\n\"Sure,\" I'd shrug. \"No prob. So long as you can, too.\"\n\n\"What's that supposed to mean?\"\n\n\"You know exactly what that's supposed to mean. The shopping. Jesus, Kristin, I can cut back all you want. But if I do, we won't have as much money, okay?\"\n\nShe'd pout over that one. Seeing her pout, I'd try\u2013every damned time, clueless that I was\u2013to point out reality to her.\n\n\"Of course,\" I'd continue, \"you could always go get a job yourself, y'know. I mean, you've got a degree.\"\n\n\"But I'm not certified to teach in Florida.\"\n\n\"Then get certified. And when you do, I'll cut back and we'll\u2013 \"\n\n\"I don't want to teach, Tyler,\" she'd say, usually in a louder voice. \"You know that.\"\n\nThen I'd try every argument I could think of. If she just got a job, she'd meet new people, make new friends, earn more money, not sit at home bored all day, I'd be able to cut back, and so on and so on.\n\nBut my arguments fell on deaf ears.\n\nShe wanted to have it both ways. She wanted to be taken care of\u2013just like her dad had always taken care of her mom\u2013but she wanted me home every night, too. She wanted the Ward and June Cleaver lifestyle, though considerably more high end than little Beaver Cleaver had ever envisioned.\n\nAnd me? Well, I wanted to give her what she wanted. She was the one. The love of my life. The only girl I'd ever dated since we'd started going steady as sophomores. Through high school and college and on into marriage, we'd always been together. Everyone told us, right from the start, that we were the perfect couple. Smart, attractive, popular, outgoing. You remember us. The homecoming king and queen for whom everything always came easy.\n\nAnd, right up until our move to West Palm, everything always had come easy. Then I got into the real world of high finance, though, and found out it required hard work. And long hours. And making sacrifices.\n\nI was ready, willing, and able to make those sacrifices, though. I hadn't come from money. Both Mom and Dad worked their fingers to the bone to make sure Benny and I had everything while growing up. They'd made sure we had our own jobs, too. From fourteen on, I'd cleaned the shop and sharpened the tools and stacked the lumber and done all of the other crappy jobs at Dad's custom cabinet making and woodworking shop, so I knew early on what it was to put in twelve-hour days.\n\nKristin never understood that, though. Her dad was President of Grant City Savings Bank, and she'd never had a job in her life. Come to think of it, I don't think her mom ever had a job, either. And I know for a damned fact that her sister, Priscilla, never worked. Oh no, not pretty little Priscilla. She'd gotten her teaching degree and certificate, then married the first lawyer she could find. She was happy at home with her four children and her husband breaking his back to keep her happy.\n\nSo yeah, you're right. I should've seen it coming from afar. But I didn't, so what're you gonna do? I mean, remember: We'd been together for eleven years; she was the only girl I'd ever dated; and I simply couldn't imagine a life without her.\n\n* * * * *\n\nThe situation became critical in Year Four. Looking back on it, with my head finally out of my ass, I see now that I really missed my chance to save our marriage then.\n\n\"I wanna go home for a few weeks,\" she said as I packed my suitcase for a trip to Vegas.\n\n\"When?\"\n\n\"Tomorrow,\" she said.\n\n\"When're you gonna be back?\"\n\nShe shrugged. \"Dunno. Maybe a couple weeks.\"\n\n\"Maybe?\"\n\n\"Jesus, Tyler, you're gonna be gone for ten days this time. And I'll be here. For ten days. Alone. With nothing to do.\"\n\n\"C'mon, Kristin,\" I said. \"Why don't you just get a\u2013 \"\n\n\"I'm not getting a goddamned job,\" she yelled. \"Get off it already. I don't want that. I want a family. Why can't we just start a family, Tyler?\"\n\nThis argument had been going on for almost two years, too, but I didn't want to be an absentee dad.\n\n\"Can't you just wait a little longer,\" I pleaded. \"Let me get the second mortgage paid off and the first paid down some more. Then I'll be able to afford to cut back on the travel and the hours.\"\n\n\"Yeah. Right. And what the hell am I supposed to do in the meantime?\"\n\n\"You could help is what you could do,\" I yelled, surprised at my sudden frustration. \"You could use your fucking degree and get a goddamned job and maybe contribute instead of spending every goddamned dime I bust my ass for.\"\n\nHer initial shock turned to fury. \"Fuck you,\" she said, stomping off. \"I'm going home to see my folks. I'll be back when I'm back.\"\n\nThat first stay had lasted nearly a month. I tried calling her every day, but I was back home from my ten-day trip before I caught her at home.\n\n\"What're you doing that's keeping you so busy?\" I asked.\n\n\"You know. Catching up with old friends. Spending time with Cilla and the kids.\"\n\nMy attempts to get more detail, or to even try warming her up to me, were brushed off with vague answers and hollow professions of her love. I'd known it at the time, but was afraid to admit that my marriage may be crashing and burning.\n\nWhen I offered to take some time and fly up to see her and our families, she just ignored me, so I didn't.\n\nI was treated to the same cold shoulder the next time she flew home about five months later, too.\n\n* * * * *\n\nTen months after Kristin's first trip home, I returned from a small jaunt to Minneapolis. Five days before Christmas, and I was taking the next two weeks off.\n\nBest of all, while in Minneapolis I'd snared Midlands Financial as a client, all but insuring a steady stream of ongoing sales and\u2013probably\u2013a promotion to that most coveted vice president slot I'd been shooting for. The hours would still be long, probably fifty or more a week at least, but my out-of-town travel would all but disappear. And with the commensurate raise in pay, coupled with the commissions from sales to Midlands, now was the time to start that family.\n\n\"I've got a big surprise for you,\" I'd told her the night before on the phone.\n\nKristin hadn't seemed all that thrilled, though. No anticipation, no trying to get it out of me. Nothing. Just, \"Sure, Tyler. We'll talk when you get back.\"\n\nBut we didn't talk. And we'd never be having that talk, I realized standing in my entry foyer and looking at my nearly-empty living room.\n\nWhile I was gone, she'd gone about the business of getting gone herself.\n\nShe'd left.\n\nWithout a word of warning.\n\nCHAPTER TWO\n\nTwo weeks later, Sunday morning at ten, my phone rang.\n\n\"Hello?\"\n\n\"Ty, honey, what's going on?\"\n\n\"Hi Mom,\" I said, deflating. It wasn't Kristin. \"I don't know what's happening. Kristin's gone.\"\n\n\"Why didn't you say anything last week?\"\n\nWe spoke every Saturday or Sunday. Mom and Dad and me.\n\n\"Ty?\" she repeated.\n\n\"I don't know what's going on. She left. I came back from a work trip and she was gone.\"\n\n\"She's back home,\" Mom said. \"With her folks. I saw Dorothy at the store the other day. She told me.\"\n\n\"She tell you why? Give you a reason? Anything?\"\n\n\"No, honey. Just that Kristin was back home and living with them.\"\n\n\"What're you gonna do about it, boy?\" Dad barked on another line.\n\n\"Nothing, Dad. I mean, what can I do about it? Fly up there and beg her to come back?\"\n\n\"You've got to do something, don't you?\" Dad said.\n\n\"No, Dad. I don't. She's already done it. Made up her mind. Without even talking to me.\"\n\n\"So that's it? You're just gonna give up?\"\n\n\"I'm not giving up,\" I said, my voice getting hot.\n\n\"Edwin,\" Mom said, \"leave the boy alone. He's confused.\"\n\n\"Well he needs to be unconfused,\" Dad argued.\n\n\"Dad,\" I said, settling down and trying to keep them from heating up their own argument. \"I came home from a trip. I was promoted. I wanted to tell her I'd be working less and we could start a family. Instead, I walked into an empty house. She was gone. Along with most of the furniture. I'm sleeping on the goddamned love seat, okay? No talk, no phone call, no note. Nothing.\"\n\n\"Oh honey,\" Mom pined.\n\n\"Uh huh,\" Dad said.\n\n\"So I'm pretty sure chasing her up to Grant City and begging her to come back would kinda be a waste of time, okay? I mean, she won't even return my calls.\"\n\nDad and Mom sighed in unison.\n\n* * * * *\n\nA week later, I was personally served with Summons on Kristin's Petition for Dissolution of Marriage. I think that's legalese for \"I'm Moving On, Sucker.\"\n\n* * * * * \n\nLet's cut to the chase on the divorce. Kristin filed for divorce in Lincoln County, Illinois, which is where we were from and where she was now back living with her folks. The thought of going back home for the divorce was galling, particularly where I'd be taking time off of work and she wasn't working at all. Thus, I sought and obtained a transfer of the action to Palm Beach County, Florida.\n\nThat pissed her off, and she decided to hire a real shark. My shark was bigger, though, and she ended up getting a sound thrashing in the blindingly fast divorce action. It was all so simple, apparently, because we had only my one income, a house, no kids, minimal debt, and only a few (healthy) accounts.\n\nThe lawyers hashed out nearly everything without the judge's involvement. Since she'd taken all of the furniture, she was ordered to pay the credit cards that were used to buy the furniture. That, of course, came out of her equal share of the equity in our marital residence, which had sold for top dollar two months after she left in the then-hot Florida real estate market. \n\nThe only thing the judge needed to decide was alimony. So Kristin had to fly down and attend one session of court. I must say, the starchy, carb-intense Midwestern diet didn't seem to be agreeing with her. She looked a little puffier than I remembered, maybe fifteen pounds heavier. She definitely had the I-fucking-hate-you glare, though.\n\nAnyway, that alimony thing. Kristin sought four grand a month for three years and then it would be reviewed; I sought no alimony at all. The judge, a crotchety old bastard with wisps of gray hairs shooting from his head, ears, nose, and eyebrows and a voice like a rasp, laughed out loud at Kristin's request, and turned a sad eye to my refusal to pay anything. He gave her one year, two grand a month, and I'd never have to pay her another dime. Whatever. It was less than ten percent of my take home pay.\n\nWhen the bailiff called the recess signifying the end of our case, Kristin stormed from the courthouse without another word. Priscilla shot me a flaming stare, then hurried after her sister.\n\nI just stood there, still just as goddamned clueless as I'd been when first entering my empty house a mere three months before. No note, no e-mail, no voicemail message. When I called to speak with her, she refused to talk with me. Nothing. More than a decade together, and I didn't even merit a fucking explanation.\n\nWas I mad? Nope. I was tired. Befuddled. Confused. Worn down by the whole sorry affair.\n\nWhat caused it? Barring her explanation, which she didn't seem to want to share with me, I was left to simple conjecture. She was lonely and away from her family. She was lonely with me working all the time. She wanted a family, and I wasn't ready yet.\n\nThe sad part is that most of her loneliness had been cured the day I found out she left me. We could now have that family. I'd be home almost all the time. We'd be together more.\n\nApparently, it was too little, too late.\n\nSo there I stood, weary to the bone, watching that courtroom door close behind my ex-wife. The only woman I'd ever loved. The only woman I'd ever been with and ever wanted to be with.\n\nI felt a hand on my shoulder, a gentle weight.\n\n\"Sorry, son,\" the judge said, now standing beside me. His voice was soft, like he could read my absolute emptiness. \"It'll get better. Just give it time.\"\n\nI could only nod, not trusting myself to speak lest I cry like a babe.\n\nCHAPTER THREE\n\nSuddenly single, albeit involuntarily, there seemed to be three paths open to me.\n\nFirst, I could go out and validate that I was still a great guy. To do that, of course, meant that I'd have to spend every waking hour trying to bang every chick in sight. This seemed to have its benefits, of course. Obviously, I'd be expanding my horizons sexually, which had its appeal. Let's face it: Experience wasn't exactly my forte where I'd only been with one woman my entire life. What if I sucked and became a laughingstock?\n\nSecond, I could bury myself in my work, in which case I'd probably make even more money that I didn't really need and guarantee absolutely no free time to try finding a life outside of work. Also, I'd only been working so hard to make ends meet and to give Kristin what I thought she'd wanted to be happy. Nevertheless, my old man always seemed to say it best. \"Do you want to work to live or live to work?\" Now that my salary was topping three hundred grand a year, I decided to work to live.\n\nThird, I could just say fuck it. Quit my job, move, take up a whole new life. That also had a certain amount of appeal. Hell, who doesn't just want to shed everything that's wrong and start anew in some strange place with total strangers who don't serve as a constant reminder that you're a marital failure? It had a certain adventurous panache that appealed to me. You know, a Jack Kerouac thing.\n\nAfter long thought\u2013at least the time it took me to drink two margaritas\u2013I settled on a course of action. It was going to be all three. I'd work my ass off and go somewhere new, start fresh. I'd be working my ass off on my college major, though. English, not sales or finance. (You'd be amazed how many salesmen are English majors; I mean, other than teach, what the hell else do you do with an English degree?) I wanted to write. I'd loved it in high school and college, but never had the time for it with marriage and work taking all of my energies.\n\nWell, there was no time better than the present, and it seemed the perfect way to get my mind off my life. So I'd spend every spare moment outside work writing. When writer's block hit, I'd go to clubs and try to get laid. No relationships, mind you. I was an emotional train wreck, and the thought of getting closer to a woman than hot, frantic sex made me want to barf. Still, hot, frantic sex sounded pretty good.\n\nI started that very night. I'll never forget it. Most people spend the day of their divorce getting drunk or trying to get laid, but I spent the rest of the afternoon in my apartment trying to come up with story ideas. What if . . . this? What if . . . that? What if . . . a man's wife leaves him for no reason? Then she disappears? And no one knows where she is? And he's lost without her, and consumed with finding her, and is torn over whether she's been killed, kidnapped, or just plain run off?\n\nThis guy, the poor bastard whose wife has run off. Let's make him a . . . bond salesman? Too boring. A . . . private investigator? Too cliche. A . . . oh man, I'm close . . . a sheriff? Yeah. A small town deputy sheriff. In a backwards nowhere. Who's beaten down by his job and his existence and the only bright, shining beacon in his universe is the wife who was always too good for him. Close. How about a police lieutenant? After all, it seemed far fetched to think a sheriff could get a month off to find his wife. But where's he live and work? How about Rockford, Illinois, a bigger city of a hundred fifty thousand or so about forty miles from Grant City. That seemed to work better.",
        "That's how it started: With a series of what ifs. Wild permutations of my own crazy situation, my own fucked up what if. What if the only woman you ever loved decides she no longer loves you? Or loves someone else more?\n\nOr maybe even never really loved you in the first place?\n\n* * * * *\n\nTwo months into the outline, Mom called unexpectedly on a Tuesday night.\n\n\"She's getting married,\" Mom said, her voice sad.\n\n\"Kristin?\" I said, stunned she'd replaced me so fast.\n\n\"Kristin,\" Mom confirmed. \"To Randy Walters.\"\n\n\"The cop?\"\n\n\"The very same.\"\n\n\"That didn't take her long,\" I said.\n\n\"I guess it started even before she left you,\" Mom said. \"That's the talk anyways. They were hooking up when she started coming back here to visit her folks.\"\n\nFucking bitch.\n\n\"And,\" Mom said, pausing before rushing the rest out in a flurry, \"she's pregnant.\"\n\nI was thunderstruck. That fucking cold, conniving, heartless, slutty, manipulative, vindictive, narcissistic, evil . . . .\n\n\"Say something, honey,\" Mom interrupted my mental tirade with.\n\n\"What's to say?\" Dad cut in. \"Fuck her.\"\n\n\"Edwin,\" Mom gasped. Dad almost never swore around Mom. Not unless he was seriously pissed.\n\n\"No, Mom,\" I said, gritting my teeth. \"Dad's right. Fuck her.\"\n\nThe phone was silent for a moment after Mom's second, and more audible, gasp at my profanity.\n\n\"So what do Dorothy and LaVerne say about their little princess now?\" I said.\n\n\"They're upset,\" Mom said.\n\n\"LaVerne's still acting like his shit don't stink,\" Dad cut in.\n\n\"But he's forcing it, Edwin. You saw it. And Dorothy couldn't even look anyone in the eye when she was talking about it.\"\n\n\"Good,\" I pronounced. \"Nice to see Kristin's now disappointed or hurt someone other than me, huh?\"\n\n\"No, Tyler, that's not good,\" Dad said, his voice going softer. \"That's not good at all. It's bad enough she hurt you. But heaping this embarrassment on her family only makes it worse.\"\n\n\"What's to be embarrassed about?\" I said. \"She's back home. They've got their precious little princess back in town, and now they can see her all the time. And their new baby with that prick Randy Walters. And they can continue\u2013they and Priscilla, for that matter\u2013they can continue to tell her about how special she is. And her fucking brat, too.\"\n\n\"You're hurting, Tyler,\" Mom said. \"We know that. But don't let the anger turn to hatred. Don't let it eat you up, honey. Please. Don't do that.\"\n\n\"That which doesn't kill us only makes us stronger,\" I said.\n\n\"Or rots us to the core,\" Dad added.\n\nBut I didn't feel rotten to the core. Not even the littlest bit. No, Kristin was rotten to the core.\n\nI was just the dumbass who kept his head in the sand when all the signals were there. I was just the fucking sap who was willing to look the other way so I could preserve something that was already spoiled.\n\nThe good news was my alimony was going to be ending before the year was out. Apparently, her marriage terminated my maintenance payments effective the date she married the cocksucker.\n\nSo there you go, Kristin. Suck on that.\n\n* * * * *\n\nAfter that phone conversation, the outline took a darker turn than the initially-planned happy ending. Way darker.\n\nTwo months later, writing like a demon possessed every night from six to midnight and from ten to four or five on weekends, I had a complete outline of my first novel. The character biographies had been written while I was plodding through the outline, and they were continuously fleshed out as the outline progressed.\n\nThen, suddenly, there I sat. Ten thirty at night all these months later\u2013nine months after she left me; six months after starting\u2013with the outline complete.\n\nThat's when I realized I hadn't been laid in more than nine months. Hell, I hadn't even thought about getting laid. Now, though, with the first step in my new life done, I realized my balls were set to explode if relief wasn't coming soon. Pardon the pun.\n\nEither way, the actual writing would definitely have to wait another day or two.\n\n* * * * *\n\nTen thirty seemed a bit late to be going out, but West Palm is a ritzy area with nightclubs galore and tons of young people. For whatever reason, none of which I could remember from when I was younger, the twenty-five and unders never bothered showing up until after nine. Thus, there seemed to be half a shot of getting laid on a Thursday night at ten-thirty.\n\nA half hour later found me in Matt's, a sports bar meets dance club with a packed parking lot. Working my way through the doors and to the bar, I was smiled at, given the glance, or lightly brushed by at least ten good looking chicks dressed to the nines and apparently bored with whomever else they were with. At least three of them had wedding rings, too, which almost made me bolt before my first beer.\n\nFinally, though, beer in hand, I made my way to a table near the dance floor. If nothing else, I could entertain myself watching men who thought they could dance jiggling out of beat with the slinky beach babes who seemed to be dancing with themselves in their own little worlds. Unfortunately, watching the gaggle of scantily clad women writhing on the floor with their faux hipster male companions drove home a simple point I'd previously overlooked.\n\nHow the fuck do I pick someone up?\n\nRemember, I'd only asked one person out on a date in my life. Kristin. Almost twelve years before. While we were in high school, for Chrissake.\n\nSince that fateful day, I'd never needed to hit on another chick. Sure, there were the innocent flirtations with women in the office, but both sides knew that was going nowhere. Hell, I wouldn't even know the signals if they were in neon lights flashing in my goddamned face.\n\n\"Hello,\" a cool voice with soft Southern accent said to my right, interrupting my thoughts.\n\nI turned, a deer-in-the-headlights look no doubt overtaking my features.\n\nShe stifled a laugh at my reaction, then raised her eyebrows and nodded to the empty chair across from me.\n\nI looked from the chair to her then back again. \"Oh,\" I said, standing so fast the table almost went over. \"Sure. Please. Sorry.\"\n\nShe didn't bother hiding her amusement now.\n\n\"First time here?\" she said, sliding into the chair across from me.\n\nI nodded.\n\n\"I'm Susan,\" she said, stretching her arm across the table.\n\n\"Tyler,\" I said, shaking her cool, surprisingly strong hand.\n\nShe was tall, dark, and beautiful. Long, shining black hair framed a model's face with high cheekbones and full lips, bright green eyes sparkling in the dance lights. She appeared to be my age\u2013twenty-eight or so, give or take a few years\u2013but her body was toned like a high school cheerleader with clear muscle definition and full breasts sitting high on her chest. Her slinky, bright green dress showed off her flawless complexion, brilliant eyes, and killer body to perfection.\n\nThose eyes were appraising me now.\n\n\"So, Tyler,\" she said, sipping her drink through a straw while fixing me with her stare. \"What brings you out tonight?\"\n\nHer forthright demeanor was startling. It was clear what she wanted, and she was brazenly trying to find out if I was looking for the same thing.\n\nI think.\n\nI didn't\u2013\n\n\"How long you been divorced?\" she said.\n\n\"That obvious?\"\n\n\"'Fraid so.\"\n\n\"Six months,\" I sighed, answering her initial question. \"Nine since she left, six since the divorce was done.\"\n\n\"And this is your first time out since?\"\n\nI nodded, trying to decide whether to get out before I made a bigger fool of myself.\n\n\"She must've been something,\" Susan continued. \"Most are out here within a week of the divorce. You waited six whole months. Hell, nine, actually.\"\n\n\"Yeah . . . well . . . I'm not really . . . you know\u2013 \"\n\n\"Been a long time since you've done this, right?\" she said.\n\nI nodded.\n\n\"And you have no idea anymore, right?\"\n\n\"Right.\"\n\n\"Okay,\" she said, finishing her drink before pushing it aside. \"Here's how it goes. You're pretty good looking, okay?\"\n\nI only stared at her in return, not sure whether to say anything.\n\n\"And I don't have a lot of time,\" she continued. \"So I'm gonna put it to you simply. You wanna get out of here?\"\n\nMy eyes went wide. It was simple as that? Just show up, be alone, and some goddess is going to pick me up and offer to screw me blind?\n\nShe laughed, a deep, throaty laugh. \"I guess we can go through the formalities. You know, you buy me a few drinks and I play hard to get for an hour or so. Then we dance a few times. We start with the faster numbers and, finally, when the slow song hits I make it known I'm available and interested. You prefer that?\"\n\n\"Well . . . I . . . . um . . . . What do you prefer?\"\n\nShe laughed, pushing back her chair and standing.\n\n\"This is gonna be fun,\" she said, holding her hand out to mine. \"Like with a virgin.\"\n\nShe had no idea how close to the truth that was.\n\n\"Let's not waste any time with the formalities,\" she said. \"I've got to be to work early, so come on.\"\n\nWe drove in separate cars to my place.\n\nUpon entering, she looked around.\n\n\"Nice. Better than most bachelor pads. Particularly the divorced ones.\"\n\nAs she spoke, I watched her slide her dress over her shoulders and to the floor.\n\n\"Well?\" she said, looking at me expectantly.\n\nI could only stare at her incredible body now clad only in a skimpy, matching white lace bra and panty set and high-heeled sandals.\n\nHer grin turned devilish. \"Like what you see?\"\n\nShe walked to me, but I was too frozen to do anything but stare.\n\n\"You can say something,\" she said, leaning in and blowing a hint of a breeze into my ear. \"I won't bite. Yet.\"\n\nMy hands went to her ribs and stroked her smooth skin, feeling her ribs around to her backbone.\n\n\"That's better,\" she encouraged, her fingers going to my shirt and releasing the buttons one by one. Her lips followed. First to the side of my neck, then the hollow near my clavicle, then down my chest until she was kneeling at my feet.\n\n\"Might as well get the first one out of the way quickly, right?\" she said, her fingers unbuckling my belt before unsnapping and unzipping my trousers and pulling them down to my feet.\n\n\"Very nice, Tyler,\" she whispered, her breath hot on my painfully throbbing erection.\n\nI could only moan in response, my hands stroking her shoulders as I tried to keep from losing it then and there.\n\nWell, despite her best efforts\u2013and they were pretty goddamned good; awesome to be more accurate\u2013I managed to last for at least a minute before shooting months of pent up sex all over her now naked breasts and belly.\n\nI will say, though, that the second time I lasted a lot longer. She seemed to think it was pretty good, too. If you're judging by her multiple orgasms as she put me through the full workout of positions. Missionary, her bent over the back of the couch, then her on top facing away before pivoting and smothering me with her marvelous tits as we finished together.\n\n\"Well,\" she said, gathering up her clothes as I laid naked on the couch, watching her.\n\n\"Well,\" I agreed.\n\nShe turned and smiled at me. \"I don't really . . . . I've got court in the morning.\"\n\n\"Court?\" I said. Who had I just been banging? Charlie Manson's love child?\n\n\"I'm a lawyer,\" she said.\n\nMy eyebrows shot up. A lawyer?\n\n\"Don't give me that look,\" she said. \"You of all people should know what it's like.\"\n\n\"Meaning what?\"\n\n\"Meaning,\" she said, looking at the stack of folders and print outs on my dining room table and covering most of my kitchen counter, \"that we both work high pressure, long hour jobs. I don't have the time for a relationship, okay? Doesn't mean I don't have needs. Like this.\"\n\nI smiled. \"I'm not judging you, Susan. Really. I mean, c'mon, me of all people.\"\n\n\"Then why the look?\" she said, her dander going back to normal.\n\n\"Just surprised is all,\" I said. \"You know. You're beautiful. And now I find out\u2013afterwards, no less\u2013that you're also intelligent and successful and everything. I mean, I've just never really done this before. I guess I just didn't expect it, y'know?\"\n\nShe nodded, then smiled. She stood, straightening her dress before walking to me and leaning over.\n\n\"Well, Tyler Whatever-Your-Last-Name-Is, you wanna play this game, you might as well get used to surprises like this.\"\n\nShe leaned in and kissed me on the lips.\n\n\"So that means\u2013 \"\n\n\"This is it,\" she said. \"Maybe we'll run into each other again, maybe not. You know, play it by ear. Okay?\"\n\nI nodded, both upset and relieved at the same time. Upset because the whole thing felt somehow cheap and hollow. Relieved that she didn't expect anything more from me.\n\n* * * * *\n\nIt was another month before I could go out and again try to get laid. In the meantime, all of my spare hours away from work were spent in my den, writing and writing and writing some more.\n\nThough only a month had passed since the outline was finished, the writing came very quickly. I'd fleshed out the outline in great detail, so it was just a matter of filling in descriptive prose and dialogue, which seemed to fly from my fingertips, through the keyboard, and onto the screen. After a month, I was nearly a third of the way through the outline and my first completed novel.\n\nThat's when my suppressed physical urges again reared their ugly head. It was a Saturday afternoon, a little past four, and I'd been at the computer for almost eight hours. Having just finished with a romantic flashback scene, I was feeling randy and couldn't get the images of sex from my mind. Feeling my enthusiasm for writing fade in direct proportion to my need to get boned, I saved my work and backed it up before hopping into the shower.\n\nThe shower didn't help things at all. The images of sex, both with Kristin and\u2013more vividly\u2013with Susan, only served to increase my arousal. Deciding I didn't want to embarrass myself again should I manage to pick someone up, I took care of things in the shower and hoped it would tide me over.\n\nAn hour out of the shower, though, I was still aroused. Deciding not to fight it, I dressed in a pair of khakis and a pale blue oxford shirt with sandals and made my way back to Matt's.\n\nCutting to the chase, I was there about three hours, going through the buying drinks and dancing thing, when I was leaving again, this time with a sizzling little Cuban named Sophia Martinez on my arm. Again, it was an evening of mind blowing sex. Again, it ended when she pecked me on the lips, thanked me, and took off at half past midnight.\n\n* * * * *\n\nThe next morning over coffee, I stared out the sliding glass door of my apartment at the gray waters and skies over the Atlantic, contemplating my love life. A few things cropped up immediately.\n\nFirst, sex when you're single is way different than sex when you're married. Bachelor sex is way more selfish. From both sides. All I wanted to do was whatever I it took to maximize my own pleasure. All Susan and Sophia had wanted to do was, likewise, maximize their own pleasure.\n\nSecond, there was a lot more direction going on. \"Yeah,\" they'd both said more times than I could count, \"just like that.\" Or, \"There. Right there.\" And, of course, \"Faster.\" After the first dozen or so times with Kristin, direction had been unnecessary. She had always sensed what I wanted, and I sure as hell knew how to push her buttons.\n\nThird, despite the selfishness on both sides, there was also a tentativeness, a hesitation to really go all out. \"If I do this,\" I'd thought several times, \"will she get pissed and leave? Will it kill the mood?\" Sophia had practically had to beg be to slip it into her ass. Sure I'd wanted to, but that can be a real mood killer if the girl isn't into it. God knows it had killed the mood more than once with Kristin unless she was really, really drunk.\n\nFourth, I hate condoms. Kristin and I had only used them the first year we were together, at which time she'd gone on the pill. There was never any fear of disease or pregnancy after that, so I hadn't sheathed up in more than a decade. Now, though, condoms were a must. Let's face it, both sides were sleeping around, and the thought of AIDS kept me conscious of the need for protection. Unfortunately, that thin covering desensitized my poor pecker to the point where it took a hell of a lot more effort to get off. Not that either of the girls had cared, mind you. Jesus, I could jackhammer them for twenty minutes or more and increase their pleasure, and I'm pretty sure neither really cared that much about mine.\n\nFinally, the whole thing just seemed so . . . so . . . impersonal. Almost like each side of the equation was just a flesh and bones fuck doll to be used for pleasure then cast aside like last year's Christmas present. The sex was certainly fun while it lasted, but the emotional toll afterwards almost canceled it out.\n\nWas I ever going to get used to this?\n\nOn the other hand, there was no way I was going to be chasing after a real girlfriend or a real relationship anytime soon.\n\nFinishing my second cup of coffee, I reached my decision. My life was good right now. A little lonely to be sure, but still good. The book was progressing, work was going gangbusters, and I was getting laid when the pressures reached a crescendo. If mindless sex with strangers was the price to pay for everything else that was going well, then so be it.\n\nI vowed to set aside every Saturday night for myself and my efforts to get laid. Maybe I'd just get used to it, maybe I wouldn't. If it became too much, I'd just stop.\n\nI know. Some dilemma, huh? A year ago I was faced with marital sex with one woman for the rest of my life. I'll grant you she was\u2013and still is\u2013one hot woman, so that thought wasn't exactly beating me down. Still, wild unbridled sex with hordes of hot chicks is supposed to be every man's dream, right?\n\nSo here I was. Something else I wished for and, when I got it, it wasn't all it was cracked up to be. But it was still better than my right hand.\n\nCHAPTER FOUR\n\nFive months and about a dozen forgotten nights of sexual bliss later, I was done with my first ever novel. Three hundred fifty thousand plus words of a man's tortuous journey to find out where she went and why. Half mystery, half betrayal, half suspenseful thriller. If that sounds like too many halves, it's because there was a lot packed into this first novel.\n\nAnd it wasn't a first draft, either. I'd edited it twice, getting rid of the typos, tightening up some scenes and expanding on others, changing some nuances of speech here and there and everywhere.\n\nIt was another Saturday evening, a little past seven, and I just stared at the screen.\n\n\"What now?\" I said aloud.\n\nBecause I didn't know what to do now. Another night cruising for mindless sex with a hot beach bimbo seemed out of the question. The thought didn't even stir my loins, truth be told. And I realized that was now done. No more. Hell, I couldn't even remember half their names. After Susan and Sophia, there'd been that redhead with big tits, then the brunette with bigger tits, then another Cuban chick with dancer's legs and gymnastic flexibility, then . . . then some more chicks. Never the same one twice.\n\nCruising for sex out of the question, I faced my more immediate problem. I've written a book, so what the hell do I do with it? Clueless, I started surfing the net.\n\nBy the end of the weekend, I'd made a list of things to do to see if I could get this behemoth that had taken thirteen months of my life.\n\nThing-to-do number one: Find an agent. Publishers rarely even look at manuscripts submitted cold, so I'd need an agent to read the book and, if it was good enough, market the thing to a publisher.\n\nI spent the next week drafting cover letters to two dozen agents in New York, Miami, and Los Angeles. A copy of the manuscript went into each. (Don't ask me how much it cost to make forty copies of the manuscript. Just go buy stock in Kinkos, because they took a friggin' mint from me.)",
        "Then I started writing another novel. It didn't come as quickly this time, though. It took me almost a month to get the complete list of what ifs set up and answered to my satisfaction before I was ready to start the outline.\n\nThe end of that month, having already received eleven rejection letters from a slew of agents, I decided to go out. No, not to get laid. Just go out and get something to eat and have a few margaritas and watch people have fun.\n\n\"Still alone I see,\" the voice behind me said as sipped my second margarita.\n\nI didn't even need to turn around to know who it was.\n\n\"How are you, Susan?\"\n\n\"Very good,\" she said, snaking between the chairs and sitting opposite me. \"And I thought you'd forget.\"\n\nI smiled. \"Hard to forget your first time.\"\n\nShe laughed.\n\nI flagged down a waitress, pointed to Susan and then to my nearly empty glass. The waitress only nodded before rushing to the bar to fill our drink order.\n\n\"Thank you,\" Susan said. She didn't look much different than when I'd seen her those many months before. Same killer body, encased this time in a tight white dress, and her dark hair seemed a little straighter and a little shorter. Otherwise, it was the same Susan.\n\n\"So what brings you here?\" I said, grinning and raising my eyebrows as I said it.\n\nShe smiled and shrugged in return. \"Probably the same thing that brings you here.\"\n\nI shook my head. \"Not this time. I'm a little tired of that.\"\n\nHer eyebrows went up, her face saying she didn't really believe me.\n\n\"Seriously,\" I said. \"I just . . . you know . . . guess I'm not really built that way.\"\n\n\"You seemed built just fine,\" she said. \"Sure I didn't just turn you off to the whole thing?\"\n\nI laughed. \"Oh no. I've had my share of . . . others. And they were good, don't get me wrong. But . . . I don't know. I guess it's just not for me.\"\n\nHer face went soft, and she leaned over the table and placed her hand on mine. \"It was pretty obvious at the time, tell you the truth. You're one of the good ones, you know?\"\n\n\"How so?\"\n\n\"You're marriage material. It's against your grain to just keep going with a string of different women. You need more.\"\n\n\"And you could tell that from just that one evening?\"\n\nShe nodded. \"Even before we left here to go back to your place. Plain as the nose on your face, Tyler.\"\n\n\"You remember my name,\" I said, surprised.\n\nShe laughed, but it wasn't a happy laugh. \"I don't remember a lot of the names. Your name, though, I remember.\"\n\nI felt puffed up by this.\n\n\"I was that good?\"\n\nShe laughed, merriment and a twinge of regret in her eyes. \"In ways you'll never really know, babe. Yeah, you were\u2013and are\u2013that good.\"\n\nOur drinks arrived and we were silent for a few moments, sipping and watching the dance floor.\n\n\"Don't you have any friends around here?\" she said out of the blue.\n\nI was silent before answering, thinking about how to take the question.\n\n\"Some. People I work with. We go out sometimes. After work. Maybe a few house parties.\"\n\nShe shook her head. \"Not like that. I mean friends, not just acquaintances you see every day and talk to about work and stuff. I mean buddies you watch football games with, go hunting with. People like that.\"\n\nI shook my head. \"Guess not.\"\n\n\"Pretty sad,\" she said. \"I mean, you're a nice guy. Easy to talk to, seem to give a shit about people. So what are you doing when you're not working? I mean, you're not out chasing women anymore. What're you doing with all of your time?\"\n\n\"Writing,\" I said. \"Books. Just finished one a month or so back.\"\n\n\"You're a writer?\"\n\nI shook my head. \"Bond salesman. Vice President at McDaniels Smyth.\"\n\n\"A bond salesman who writes books in his spare time,\" she said. \"A bit out of the ordinary.\"\n\nShe pondered this, giving me an appraising look.\n\n\"So when do I get to read this book?\" she said.\n\nI laughed. \"Probably never. I doubt anyone's really going to publish it.\"\n\n\"Then why do it?\"\n\n\"Because I like writing.\"\n\n\"More than you like people?\"\n\nThat was a tough question, and I mulled it over in my mind.\n\nWhen did this happen to me? I'd been surrounded by friends\u2013real friends; close friends\u2013in high school and college. I didn't even know what any of them were doing anymore. We'd all lost touch. I'd lost touch. And when I was married, Kristin had seemed enough. Between work and home, I'd never had any real time to make friends.\n\nI'd been in Florida for more than six years, and I didn't have a damned friend for five hundred miles.\n\n\"Sorry,\" Susan said after a few moments of silence.\n\nI tried to smile. \"No. That's okay. It just made me realize a few things.\"\n\nShe tried to smile, but it was a sad smile. \"This isn't really going so well, is it?\"\n\nI smiled. \"It's going fine. Really. Let me get you another drink. If you're not in a hurry or anything.\"\n\n\"Sure,\" she said.\n\nI motioned for fresh drinks, and the waitress was back with them in a flash.\n\n\"So you're a lawyer,\" I said, breaking the silence.\n\n\"Uh huh.\"\n\n\"You know any agents by chance? Maybe one that will give me at least a reading? A shot?\"\n\nI know. I was pushing it. But it seemed worth a shot, and her face told me she was mulling it over. Then a flash went across her eyes, and a few seconds later her lips broadened into a grin. A lascivious grin.\n\n\"I might,\" she said. \"What's it worth to you?\"\n\n\"I told you. I'm out of that game.\"\n\nShe shrugged. \"Then what've you got to offer to make it worth my while?\"\n\n\"Money?\"\n\nShe shook her head. \"Got that.\"\n\n\"My undying gratitude?\"\n\n\"Not good enough.\"\n\n\"Dinner?\"\n\n\"You've already eaten.\"\n\nI looked at her. \"What's it going to cost me? Just tonight?\"\n\nShe put on an exaggerated look of hurt. \"Am I that bad?\"\n\nI smiled. \"You know better than that. It's just that\u2013 \"\n\n\"The weekend,\" she said, her eyes fixing on mine. \"Starting right now.\"\n\n\"But it's already Saturday night,\" I said. \"So when you say the weekend. . . .\"\n\n\"I mean I want to actually sleep with you. In your bed. Wake up with you. I wanna know what that's like, okay? And then spend tomorrow with you. Through dinner.\"\n\n\"But you could get that from half the guys here,\" I protested.\n\n\"But you're not half the guys here,\" she countered. \"I don't feel cheap when I'm with you, okay? I want to know what a guy like you\u2013a guy who looks at me like something more than a receptacle to get his rocks off\u2013what a guy like that is like to spend time with.\"\n\n\"You want to date,\" I said.\n\nShe shook her head. \"Sorry, sport. My situation's not really changed much. I'm still on the road half the time and burning the midnight candles when I'm back at home base. So I'm not dating material. No, I just want to know\u2013even if just for a day\u2013what it is I'm giving up here.\"\n\nI thought about what she had said. Truth be told, I felt sorry for her. She was successful, that much was apparent in her jewelry and dress, which had to cost a pretty penny. And she was on the road to do her lawyering, so she had to be with a bigger firm that probably handled bigger clients and bigger cases. So she had achieved all of her dreams, and now she wanted to know what they had cost her.\n\nFrankly, I'd let her spend the night on these terms without the quid pro quo. Still, if she was willing to help me and all.\n\nDoes that make me a whore?\n\n* * * * *\n\nI could tell she was awake. Her breathing was softer and more rhythmic, none of the soft hum of her light snoring from only a few minutes before. She was laying on her side facing me, her long black hair cascading over her face and the pillow. I could still see her face through the soft tangle, though, and I watched her lips twitch and her eyes scrunch closed even more.\n\n\"Please tell me you're not watching me,\" she whispered.\n\n\"I'm not watching you,\" I said.\n\nShe opened your eyes. \"Liar.\"\n\n\"You're just as beautiful this morning as you were last night.\"\n\nShe snorted her disbelief.\n\n\"I'm serious,\" I said. \"So peaceful and quiet and calm.\"\n\nHer features softened.\n\n\"And last night,\" I continued. \"Well, let's just say you got some serious snoring in. It was like sleeping with a . . . well . . . . Ouch!\"\n\nShe slapped the side of my head. \"Careful, buster.\"\n\nWe laughed together. Then I leaned in to kiss her.\n\n\"No,\" she said, backing away. \"I've got morning breath.\"\n\n\"Suit yourself,\" I said, sliding out of bed and moving toward the bathroom.\n\nDone getting rid of four margaritas and the multiple glasses of water that had kept my energies going the night before, I started brushing my teeth.\n\n\"Mind if I join you?\" she said.\n\nI turned to see her standing in the doorway wearing one of my old sweatshirts. And nothing else.\n\nI waved her in before rinsing my mouth.\n\n\"Spare toothbrush in here,\" I said, opening a drawer and pointing at five toothbrushes still in their wrapping.\n\n\"Someone has a serious toothbrush fetish,\" she said.\n\n\"Amongst other fetishes.\"\n\n\"Tell me about it,\" she laughed, her fingertips trailing to between her legs. She saw me looking, turned beet red, and jerked her hand away.\n\nWe shared the sink, her flossing then brushing her teeth while I shaved.\n\nThen we showered.\n\nTogether.\n\nAnd it was really, really, really nice.\n\n* * * * *\n\nSo did we spend the whole day screwing each other silly?\n\nSorry. That's pure fantasy. Twice the night before had almost emptied me enough to prevent the morning's activities.\n\nInstead, we spent the day walking the beach and having a burger at a beach shack for lunch.\n\nThen we went back to my apartment for a nap. Before taking the nap, though, she convinced me\u2013nay, proved to me\u2013that I'd had enough time to recharge the batteries. And it was the best sex I'd had since before Kristin left. We knew each other well enough now, Susan and I, that direction wasn't necessary. I knew her buttons, and I particularly knew the most effective way of working her main button. And based on my rejuvenated John Thomas, she knew my buttons, too.\n\nSo it was a long, foreplay intense session of mattress mambo. Go at it, stop and lick and suck and touch some more, go a little longer, back to those little pokies on the ends of her breasts, and so on.\n\nWe were both ready for the nap by the time it was over, and I spooned her as we slept.\n\nHer movement two hours later awoke me from a sound slumber filled with the happiest dreams I'd had in a long time. Peaceful dreams. Dreams that left me content when I awoke.\n\nWhen I opened my eyes, a lazy smile on my lips, Susan was sitting on the side of the bed staring at me. And she was sad.\n\n\"You ever wonder if you've made the wrong choices in life?\"\n\n\"Every day,\" I said.\n\n\"Not just the little things,\" she explained. \"I mean the big things. Things like\u2013 \"\n\n\"I know exactly what you mean,\" I said. \"And I've spent every day for the past year and a half wondering whether my great job and great pay were really worth it.\"\n\nShe nodded, sympathy flooding her features before sadness returned.\n\n\"This was a mistake,\" she said.\n\n\"Why?\"\n\n\"Because,\" she said. \"Before last night, I had these twinges, y'know? These fleeting thoughts that there was more to life than just my career. Maybe a family. A husband I love.\" A tear trickled down her cheek. \"Waking up with someone I love and spending a day just like we spent today.\"\n\nShe turned away, and I sat up and stroked her back.\n\n\"But now I know what I'm missing,\" she continued. \"It's like I've seen what I could have, but I can't really have it.\"\n\n\"It's not too late, you know,\" I said softly. \"You can still have those things. I mean, you're what? Twenty-six? Twenty-seven?\"\n\n\"I'll be thirty in three weeks,\" she said.\n\n\"Thirty's the new twenty,\" I said, pulling her back into me and holding her. \"I don't know you very well, but I do know at least a few things about you.\"\n\n\"Like what?\" she said, snuggling back into me as I brushed the tears from her face.\n\n\"Well, I know you can accomplish whatever you set your mind to. You've done it in your career so far, right?\" She nodded. \"Then you can learn to quit working so damned hard and make the adjustments and give yourself a chance to meet someone special, right?\"\n\n\"It's not that easy,\" she said.\n\n\"No. It's not. I'll give you that. It would probably mean you'd have to work somewhere else. For people who don't all work themselves to death seven days a week. But there are places like that, right? Even lawyers, I suppose.\"\n\nShe laughed, then her voice went soft. \"You make it sound so easy.\"\n\nI was silent for a minute. \"It's not.\"\n\n\"What's not?\" she said.\n\n\"It's not easy,\" I said. \"If it was, I'd have done it by now. In my own life.\"\n\n\"Is that why you're divorced?\"\n\nI didn't really know how to answer that. Frankly, I still wasn't sure why Kristin was gone. Sure, there was Randy Walters and, now, their new baby. But which came first? Me working too much or Randy Walters?\n\n\"I don't really know,\" I finally answered. \"At least in part, I guess. Probably a large part. But I don't really think that was all of it.\"\n\nSusan turned and faced me, kissing me full on the lips before hugging me in a death grip.\n\n\"Well she sure made one hell of a mistake, Tyler Whatever-Your-Name-Is.\"\n\n\"It's Collins,\" I said. \"Tyler Collins.\"\n\n\"And I'm Karapova,\" she said. \"Susan Karapova.\"\n\nI gave a mock gasp. \"You mean I'm sleeping with a Commie?\"\n\nShe giggled into my neck and pulled me back to her.\n\n\"The Wall came down awhile back,\" she said.\n\n\"Whew. I'm just sayin', y'know?\"\n\nHer giggling intensified. \"You shit.\"\n\n* * * * *\n\nI made us a cheese omelette and toast for dinner, and we ate in near silence. But it was a comfortable silence broken only when the phone rang.\n\nMom, I thought. I'd missed the call that morning.\n\n\"Hello?\"\n\n\"Tyler,\" Dad said, his voice choking.\n\n\"What's wrong, Dad?\"\n\n\"Your mother,\" he said. \"She's . . . she had a . . . she's in the hospital. It's\u2013 \"\n\n\"You called Benny?\"\n\nHe tried to choke out a no.\n\n\"I'll call him,\" I said. \"Then I'll get there as fast as I can.\"\n\n\"Hurry,\" he said. \"Please.\"\n\n\"I promise,\" I said, but he'd hung up.\n\n\"What's wrong?\" Susan asked as I turned to face her.\n\n\"My mom,\" I said. \"I don't know.\"\n\nI was choking up. And scared.\n\nShe was quick and confident in the crisis.\n\n\"Benny your brother?\"\n\nI nodded.\n\n\"Call him,\" she instructed, pulling a cell phone from her purse and walking toward the bedroom. \"I'll book you a flight and get you packed.\"\n\n\"Chicago,\" I said. She turned and looked at me quizzically, and I repeated it. \"Fly me into Chicago. It's only an hour away.\"\n\nShe nodded, punching numbers into her cell phone before wheeling and turning back to the bedroom.\n\n* * * * *\n\n\"Your book,\" Susan said as she drove me to the airport.\n\n\"What?\" I replied, turning back to her.\n\n\"Your book,\" she repeated. \"Where is it?\"\n\nI only stared, not understanding.\n\nHer eyes were on the road, her face concentrating on the traffic, but I could see her features soften.\n\n\"I promised to get your book to an agent,\" she said. \"I'd like to keep my end of the bargain.\"\n\n\"You're kidding, right?\" I said. \"My mom's . . . well, it's real bad. Maybe worse than bad. And you're worried about our bargain?\"\n\n\"No,\" she said. \"I'm not really worried about it. And I know you sure have more important things. But while I'm down here, I want to do something for you, Tyler. Something to maybe, I don't know, maybe take some of the load off of you. To maybe give you something to keep your mind off things.\" She was crying now. \"And I don't know what else I can do. I just want to\u2013 \"\n\n\"There are some copies in my den,\" I said, fishing into my pockets for my apartment keys. I started pulling the front door key off the ring while I continued. \"They're in a box on the floor next to the computer. It's called 'Long Gone.'\"\n\nShe nodded, wiping the tears from her face and trying to smile.\n\n\"Okay,\" she said. \"I'll see what I can do.\"\n\n\"Thanks.\"\n\n\"And give me your cell phone,\" she said.\n\n\"Why?\"\n\n\"I'll program my number into it.\"\n\n\"Why don't you just give me your number and I'll do the programming,\" I said. \"You can concentrate on the road.\"\n\nShe gave me her number, and I dutifully typed it into my contacts list.\n\n\"You want my number, too?\" I said.\n\nShe nodded. A tight, brisk nod, like she was afraid to ask for my number.\n\nShe handed me her Blackberry, and I added myself to her contacts.\n\nTen minutes later, Susan saw me off at the post-911 security lines.\n\n\"I hope it all works out,\" she said, hugging me tightly.\n\n\"Me, too,\" I choked, hugging her back just as fiercely. \"Some date, huh?\"\n\n\"You sure know how to show a girl a good time,\" she said, tears welling into her eyes.\n\nI dabbed her eyes with my thumb.\n\n\"Thanks for everything,\" I said. \"You were a lifesaver tonight.\"\n\n\"And you were a lifesaver, too. Maybe my whole life.\"\n\nI kissed her, got in line, and didn't look back. I didn't trust myself to look back."
    ],
    "authorname": "Rehnquist",
    "tags": [
        "divorce",
        "cheating",
        "oral",
        "blowjob",
        "anal"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/what-you-wish-for-pt-01"
}