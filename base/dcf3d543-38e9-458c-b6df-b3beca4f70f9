{
    "title": "A Spill of Blood Ch. 04",
    "pages": [
        "If you're still here, welcome. Novel-length stories in installments take patience, I know.\n\nWhere we left off: Harry had Sydney stashed at the home of a family friend to keep her safe while he went to meet Nikki, another escort at Regan's party. He hoped to get a line on Larry Beck, one of the men, but really all he got was laid. Charlie Everett, another suspect, has just been murdered. Harry suspects it was on Regan's orders when Everett attempted to ransom some information to Regan.\n\n&mdash;C\n\n<p align=\"center\">CHAPTER 4</p>\n\n\"I figured,\" Sydney repeated her words of the previous evening.\n\nThe two of us were sitting at Uncle Jimmy's kitchen table. I'd spent almost an hour making sure I wasn't followed. I didn't use my own car in case someone tailed me. I picked up a light-silver Malibu at the rental place and let it merge in with every other cookie-cutter silver sedan on the road. I spent the time along side streets, through the Holland Tunnel, then more of the same as I worked my way south. Finally, a totally illegal U-ey on Bayview Avenue around a Jersey barrier convinced me I was clean, and I headed across the Bayonne Bridge onto Staten Island.\n\nJimmy announced he was going out for breakfast when I showed up. It wasn't that he didn't want to see me. It was that he didn't want to hear much beyond the answer to his quiet question.\n\n\"Are you sure?\"\n\n\"Ninety-nine percent,\" I replied. It didn't make me happy to tell him. His sad nod said it all. Uncle Jimmy didn't like bad guys. He didn't have a huge beef with the low-level kind, people just trying to get by in a city that could be very cold. If the law took a dim view of your way of doing that, if you were some kid boosting a car for a few bucks, he'd run you in. But there was no animosity in it.\n\nThe ones who ruined lives? Those he had a hard-on for. The drug kingpins for whom a few million wasn't enough so they'd pump that poison to kids, the wife-beaters, the pimps who scoured the bus terminal for new blood. \"Fuck the fuckers,\" he'd say.\n\nBut dirty cops were a quandary. There was that thin blue line. Jimmy believed in it. \"Us against the shit tide rolling out of the city's sewers\" meant that comrades were comrades, and peccadillos, as he saw them, were a gray area best ignored. When I'd had my difficulties, his advice was \"Don't see nuthin' long as everybody's got everybody's back and no one's gettin' hurt, Harry.\"\n\nA cop who was somebody's private hit squad, though? No, that was over the line... way over it, and that made them part of the sewage. But just because he saw it that way didn't mean it didn't cause him serious agita to go against a fellow officer.\n\n\"I'll do what you need me to do,\" he said as he pulled on his jacket. \"You know that. Fuck the fuckers.\" But his voice lacked its usual heat in saying it. It was almost sad as he went on. \"But I don't wanna know precincts or names unless I need to know, or how far the shit has spread. Leave me my illusions they're all solid blue like your dad was, Harry.\"\n\nHe looked to see if that upset me. It didn't. I'd known the man all my life. I trusted him. I knew where his moral compass pointed and a few degrees off north was okay by me.\n\n\"I promise she's safe here from anyone, no matter how far it goes,\" he went on. He was telling me he'd pull the trigger no matter who was trying to hurt her. \"But beyond that situation, the cleanup...\" He looked away. \"I'd take it as a personal favor if there's any way I can stay out of it. You and me, we're different people.\"\n\nWe were. It's why I ended up carrying a license instead of a badge, because I couldn't look the other way as he suggested. Neither of our compasses pointed true north, but they didn't point exactly the same way.\n\n\"We're good, Uncle Jimmy,\" I assured him, \"and I appreciate what you do.\"\n\nNow, I sat facing Sydney across the breakfast table. She'd seized on the shopping bag of clothes with glee and emerged shortly in jeans and a sweater. The tight taper of the jeans emphasize the length of her legs, and the cashmere draped softly across her serious curves. Like I said, she'd have looked good in a burlap sack, but I had to admit this was way better than good.\n\nI'd stared at her, the background part of my brain thinking thoughts that weren't going to happen in Jimmy's house, the foreground trying to decide exactly how to tell her the body of a hit man was in her apartment.\n\n\"I figured,\" she said after a moment. \"Stop panicking about how to tell me.\"\n\nWhat? I'm trying not to panic you. Oh.\n\nThen I wondered about her figuring.\n\n\"Do I really come across as the type to put the move on every pretty woman I meet?\" There may have been a little heat in my voice. \"Sasha's got it ten times over Nikki. She had guys' tongues hanging out. I did nothing even when it was offered. And for the record, you were the one who started&mdash;\"\n\nShe was laughing and shaking her head halfway through that outburst. \"No! I'm not saying that. I know you don't. And yes, I made the first move on you. You're not that type of guy, but she's that type of woman.\"\n\nI settled back in the chair in confusion.\n\n\"Let me guess,\" she said, \"big vulnerable eyes, soft voice, hesitant, scared?\"\n\nShe saw in my reaction that she was right.\n\n\"That's the kind of guy you are, Harry. A knight who'll do anything for the damsel if she's in distress. A femme fatale? You're proof against them. That's why someone like Sasha doesn't stand a chance with you even though ninety percent of the men in this city would cut off their left arm... or left something... to have a shot with her. She's even reeled in Jordan, and he's had more gorgeous women than you can shake a stick at. It doesn't matter his twist is he wants to break her; he's still hooked by that slinky allure.\" I'd shared my suspicions about where that relationship was going when I'd told her about my visit to his house. She'd agreed.\n\n\"And Nikki's that type of girl. Not damsel in distress... the kind of girl to put the move on every pretty man she meets.\" She was grinning as she bent my words back at me.\n\n\"You're wrong. She's really scared, and she should be.\"\n\nShe sobered a little. \"Yeah, she should be. Like I am. It's not every pretty man, just those she wants something from. Some, like Larry, it's the lifestyle. With a guy like you, it's something else. From you she wants protection. So she put the moves on you. I knew she would. It's what she does, ties men to her, and she's good enough at it that I was pretty sure she'd succeed. I'm not&mdash;\"\n\n\"No, you're wrong.\" I was disgruntled at the implication I'd been maneuvered. \"She's like... like a deer hiding from wolves.\"\n\n\"A deer?\" That got me a snort, and her amusement drove away her usual discretion. \"That deer wears studded black leather and carries a paddle when she's around Larry. If she figured you for the same kind of guy as him, you might have found yourself tied spread out on that four-poster hoping she was in a good mood like other guys have.\"\n\nThat last came along with a little of the look. It was the one that said, Yeah, you're the guy when it comes to keeping someone alive. But some other areas, Harry? Heh, you're a babe in the woods when it comes to the intrigues of the oldest profession. It wasn't the first time she'd turned that look on me, and she wasn't the first woman to do it lately. It wasn't scornful, more fondly amused, but that didn't help my pride.\n\n\"I'm not pretty,\" I muttered, looking for some iota I could be right about.\n\n\"No... no, you're not.\" Sydney's face grew serious again. \"On the surface you seem like another one of a million average-looking guys. If you tried to score with me, I wouldn't groan inside, but I wouldn't get butterflies either. Like I said before, in a suit you're just a guy at some corporate thing. But...\"\n\nShe looked away, thoughtful.\n\n\"But that's wrong. You hide what's underneath as well as Nikki does. And that something, the part that's under there, that makes me feel a little bit afraid and a whole lot safe.\" She looked back at me.\n\n\"I saw your expression in that mop closet with Brady. You didn't mind hurting him. It didn't matter that he was a cop. That's the part that's scary, the thought of you turning that ruthlessness my way. But it's not turned my way, is it?\" She didn't wait for a response. She shook her head. \"No, and that's what makes me feel a whole lot safe. You had a gun. If you hadn't gotten the drop on him somehow, if he'd seen me and tried to... you know... he'd be dead right now. I don't know how I know that, but I do. You're a knight. You rescued me.\"\n\nI didn't like the label, but she was right about what I would have done.\n\n\"I know it,\" she said, \"and it came through when I told Nikki about it. So, she responded the way she did because she's really good at guys, and she knew what would bring that out.\"\n\n\"Which is the real Nikki? The one I saw or the one Larry Beck sees?\"\n\n\"I don't think either. She's just a girl. One who had a shitty time when she was younger and who happened to grow up with looks and a gift for playing to what a guy wanted, and used both to get the hell out.\"\n\n\"And you? Is that what you do? Show me the vulnerable side, show another guy the paddle?\"\n\nThat got a small smile and headshake. \"I can't carry off dominatrix. No, I'm pretty vanilla when it comes to the escort business. You get a pretty face, long legs, big tits, and not a lot of inhibitions. I hope that's enough for you.\"\n\nI didn't know what to say to that. She expected something, maybe for me to protest that she was everything I dreamed of. Her expression turned concerned.\n\n\"Harry? Can we talk about us?\n\n\"What about us?\"\n\n\"I'm not Nikki. I'm not using sex just to try to cement you to me. I like you, even though you scare me a little. Hell, that's part of the attraction, the bad boy that scares us a little and thrills us a lot. You're not hard on the surface, but it's there, even so. Not like most men.\" She was echoing what Nikki had said to me, but not like she'd gotten it from her. More like she'd come to the same conclusion.\n\n\"I've been thinking about choices,\" she went on. \"I like the going out and the clothes and the nice apartment. If I'm being honest about myself, I like the attention. But I think I would have woken up one day and realized I had nothing except a full closet and a decent bank account. No guy, no real friends, no life that wasn't superficial.\n\n\"I lay there in that little twin bed upstairs last night, all alone, thinking. One of the things I realized was that I wasn't even seeing the big picture. It wasn't just making a choice between a steady guy and dates with strangers, between real experiences and a party buzz. If that was the only choice, I wouldn't be scared for my life.\n\n\"The world I live in isn't filled with nice people. I mean, nobody's world is perfectly safe, but my world has a bigger share of cruel people who'll just use you. To some of them I'm\"&mdash;her voice caught for a second, then continued&mdash;\"I'm just a whore. And whores are expendable to them. Just look at Cara. Just look at me if you hadn't been there. I'd be a body in an apartment, lying there until the super came to see what the smell was.\"\n\nGraphic, but she wasn't wrong.\n\n\"And I realized I'd made a poor choice. But I don't think it's too late to fix it.\"\n\nI didn't know what to say to that. I was distracted from trying as she stood and moved around the table. She settled onto my lap. My arm went around that slender waist instinctively as she laid hers around my neck.\n\n\"Harry, I said I like you and I mean it. Forget pretty. You're okay to look at, and pretty boys are overrated. You excite me, both in and out of the sack, and that's what counts. Look, I'm not going to pretend that I'm some kind of angel. You know I'm not. I have this hope that I can have it all. Maybe the two of us can come out of this with something that lets us have the lifestyle. But even if not, even if I have to make a choice, I'm thinking I better start making better ones. You're a million-times better choice than Tom or Dick even if you don't drive a Mercedes.\"\n\nIt took me a second to figure out Tom, Dick... and Harry. My mind was half on what was in my arms. It was something that said it was ready to be kissed right about now. Hell, it said it was ready to be laid back on Jimmy's table and taken if I was so inclined. It said it was mine.\n\nShe went on. \"If you're wondering how I can say that after yesterday, then stop. I don't care that you slept with Nikki. I knew it would probably happen, and I told you I'm not a jealous person. I mean I was actually kind of laughing at you not knowing what you were walking into.\" She chuckled. \"Call it a surprise present from me to you.\"\n\nShe searched my eyes for a response. I was busy with the skirmish going on in my mind.\n\nOn one hand: Sydney. She had my dick half-hard just sitting on my lap, gray eyes in a gorgeous face staring into mine, the firm curve of hip under my hand and soft curve of unfettered breast against my shoulder. And I liked her. It hadn't started that way. I had felt she needed me at first. I had felt she might be useful in getting out from under Regan's threat. But beyond eye candy, she wasn't much more than a client. Now though, she'd grown on me with her humor and intelligence. I liked her.\n\nOn the other side, there was the memory of Amber. There was the conscious decision I'd made once I'd pulled myself out of the bottle. Never again. I'd stuck to the fuckbuddies of the world after that. Nobody was going to get inside enough to be able to tear my life apart again.\n\nSydney misinterpreted my silence.\n\n\"Hey! If you're thinking about Lexie and whoever was in her apartment, and wondering if you're headed for a repeat, I'm done with that life. I know you're the type of guy that needs a one-man woman. That's okay by me. Nobody but you. But&mdash;\" She leaned down and kissed me. It was a short kiss, but it was full of promise. \"But I'm okay with a double standard. I mean, not with you running around behind my back. I wouldn't say anything because it's not my place to try to control you and you don't owe a woman like me anything, but I wouldn't like it. It'd make me insecure.\"\n\nYeah, like this woman would be insecure about a man, I thought.\n\n\"But if you liked Nikki every once in a while, a really long while, you could bring her to our bed. I'd give you a threesome if you wanted as long as I'm one of the three. Not a lot of inhibitions, remember?\"\n\nGod, this woman is offering me a fantasy world.\n\nBut I spotted the trap. The trap wasn't in the woman or what she offered. It was daydreaming about what she offered and taking my eyes off the ball. You didn't called for a strike in the situation we faced. You got dead. And so did she and who knows who else. I fought off the mental image she'd just shoved in my mind: the filling in a Sydney&ndash;Nikki sandwich, to use Sasha's metaphor. Much as I wanted to do something else right now, we needed to get back on track.\n\n\"First, we get out of this alive,\" I said. I broke it to her brutally. \"There was a man waiting at your apartment to kill both of us. He was a pro. He almost got me. And don't forget Charlie Everett. You know, he wanted to come out of this with something extra too.\"\n\nEvery bit of humor and affection fled from her expression. The panic returned.\n\n\"The killer's dead now,\" I reassured her. I left it at that even though I knew she would misinterpret how he got that way. Given her fright, I decided not to tell her the body was still there. Time enough for that once I'd dealt with it.\n\nAfter a long moment of pulling herself together, she asked. \"Did he try for Nikki too?\" I said she was intelligent.\n\n\"No. She was holed up in her apartment and wasn't a threat to anyone. I think they saw her as bait for you, me, or both of us. That's probably changed now. Call her, make sure she understands that she's not safe even in your building. I already told Jimmy to pick up a burner phone for you. He'll know what to do with it after.\"\n\n\"Okay.\"\n\n\"I need to go hear what Jess found out. I need to call Detective Murray back. I need to talk to your doorman, William, and see if I can figure out how that guy got in. That might be tricky because I wasn't completely upfront with him.\"\n\n\"What should I do?\n\n\"Stay here and be safe. Call Nikki and warn her. When you talk to her, see if you can put any leverage on her to let me talk to Larry Beck.\" I stood to go. \"Oh... and maybe don't give Uncle Jimmy a heart attack. Put on a bra.\"\n\nShe grinned, a weak one, but still a grin.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\n\"It's after ten. I guess hearing about the person allegedly trying to kill your client is somewhere at the bottom of your priority list.\" Detective Murray's voice held that same world-weariness it had held every time I'd met him.\n\n\"Let's not forget redecorating my face,\" I said lightly. \"It grieves me not to look good when my mug gets in the papers. However, it's true that keeping said client alive this morning is actually a higher priority than talking to you.\"\n\n\"Oh?\" There was a world of curiosity in that single word.\n\n\"In a bit. I want to know if I've ruined another day of yours or if you're going to arrest me for whatever law I happen to be breaking today.\" Those had been the alternatives he'd promised.\n\n\"Are you breaking any laws?\"\n\n\"The day is young.\"\n\n\"You haven't ruined my day.\" My heart fell. \"You've ruined an entire goddam week. There is... quite unofficially and quite vaguely... a definite odor of shititude around the name Carson Brady. And there is an even more 'get the fuck out here Darryl Murray before someone hears me talking to you' suggestion that you can get a whiff of that aroma in other places as well.\"\n\nI let out the breath I didn't know I was holding. You ask a cop to turn on a cop and you get a cold shoulder if you're lucky, a beating if you're unlucky, worse if you've really stepped in it. When I'd made the choice, I had a hunch I'd have gotten the first if I'd gone to Detective Gibson. He was sharp, but he didn't seem the type to allow guests into the laundry room. Murray, though, something about him reminded me of my dad.\n\n\"Then,\" I said, \"I'd like to buy you a cup of coffee.\"\n\n\"Why?\"\n\n\"Detective Murray, the answer to your question is, yes, I've broken a law.\" He waited. \"How 'bout if I tell you I know where there's a body?\"\n\n\"Did you create it?\"\n\n\"Not really, he was trying to make me be the body. Not only did he fail, he shot himself. But I moved him after so no one would find him.\"\n\nI got the sigh again. It seemed to say, Why can't I just have one day... just one fuckin' day? \"Who is it?\"\n\n\"No idea. He might be a cop buddy of Brady's. He might be some hired help.\"\n\n\"Mr. Morgan, you were a police officer once. I reached out and got two different stories. One version said you had a yellow streak. The other version said you were a straight arrow.\"\n\n\"Which did you believe?\"\n\n\"The first came from some officers who worked with you. The second came from some old-timers.\" I wondered how he'd known about the old-timers. I figured he'd found out I was a cop's son and asked around.\n\n\"So, which did you believe?\" I asked again.\n\n\"Neither. I trusted my own instincts, which was that I wouldn't necessarily trust your compadres with my lunch money. However, now I'm having my doubts about those old-timers too. Senility hits everyone.\"\n\n\"Sure,\" I said, my voice sarcastic. \"I call 911 and tell them I got a dead body on my hands. My second one in a week. The next thing I know I'm in a holding cell for forty-eight hours while they try to decide if I'm the next Joel Rifkin. That's assuming I don't get charged right away. While there, I get a two a.m. visit from someone Brady's paid.\"",
        "\"I can hear the captain's press conference the next morning.\" I let my voice go phony. \"'You're right, Mr. Reporter, inmate-on-inmate violence is a growing problem. Gangs, the decline in funding, and populations rising all exacerbate the situation. We're putting together a committee to study it and doing everything we can in the meantime. Unfortunately, that came too late for Mr. Morgan.'\"\n\n\"I get what you're sayin', but that puts me in a bind.\"\n\n\"I know it does. So, I'm asking you to be straight with me about what you feel you need to do about it. If you tell me you gotta take me in, I'll tell you where the body is, but then I disappear as best I can until this is over. I'll come see you after. If you tell me that you're after the bigger fish and this situation can wait, then I'll share what else I know. I'll still come in when it's over. Either way, walking into a police station to talk to you right now is inadvisable because that's where the Bradys are.\"\n\n\"And if I lie to you and say the second but do the first?\"\n\n\"Then you don't get a Christmas card.\"\n\nThat got me a snort along with one of his sighs.\n\n\"I guess I'm capable of acting on an anonymous tip for the moment.\"\n\nI rattled off the building's address and an apartment number. \"You can decide how much time you want to save CSI. Time of death was four thirty-two, give or take. He died on his back in the doorway and was dragged about six feet in.\n\n\"Three rounds from a suppressed.22 coming from outside the doorway toward someone opening it from the inside. Two are in the walls or furniture somewhere, one in the ceiling when I objected. Another round out in the corridor to the right as you face the elevators.\n\n\"The last one went through his throat during the struggle, causing him to bleed out. I didn't touch the gun, but I probably missed a print or two in the apartment and maybe on the rain jacket he was wearing. Oh, and the damage on the back of his head? Yeah, that was me introducing him to my tag-team partner, the corridor floor.\"\n\n\"Name a place. It better have decent coffee and you're buying.\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nThe brown eyes turned bleaker as my story continued. Over good coffee and a better Danish, I gave Murray everything except where Sydney was now. He asked about that.\n\n\"Safe,\" I said. He accepted it with ill grace. Cops like to know where they can lay their hands on a material witness.\n\n\"So,\" he said when I was done, \"we've got one of ours working as muscle for someone who ripped off a guy rich enough and nasty enough to do something about it.\" He sounded as if he believed me.\n\n\"Yep. And Brady?\" I prompted.\n\n\"Carson Brady has a reputation for employing what he jokingly refers to as 'advanced interrogation techniques' with perps and CIs. Nobody's willing to make a statement, but that's the word. He is also rumored to occasionally forget to check things into the evidence room. Just rumors, mind you, but my own powers of observation note that he drives a 'Vette while I'm driving a Hyundai.\"\n\n\"Things like cash or maybe somebody's stash of oxy?\"\n\nMurray shrugged. \"Could be.\"\n\n\"Or a box cutter with some banger's prints on it?\"\n\nThe second shrug was enough of an answer.\n\n\"Brady's partner?\"\n\n\"Manny Santiago... same story. And the guy I talked to, I had to lean on him a bit. That was my first clue that you weren't just an asshole, by the way.\" The eyes were slightly friendlier, or maybe I was mistaking neutral for friendly. By comparison to most of the guys I'd talked to lately, neutral was friendly.\n\n\"He said it could be bad for his health to be talking about Brady, which tells me a whole bunch of things. One, that Brady and Santiago aren't above going after a fellow cop.\" I could almost see the smoke coming out of his ears. \"That maybe there are more involved, or at least, some who'd talk to them. And lastly, that maybe someone higher up the food chain's looking out for those two because more than one person knows about them but they're still on the job.\"\n\n\"I'm guessing Santiago wasn't the guy in the apartment?\"\n\n\"No. They're running those prints through IAFIS.\" I wondered if the real answer would come back or if someone would step on it. If it came back \"No Match,\" I had a copy on a glass coaster stashed at Uncle Jimmy's. I'd take them to my dad's old captain. Even though retired, he had to know someone in the FBI, and they owned that database.\n\n\"What else?\" I asked.\n\n\"That's it. You give me one solid piece to work on other than the say-so of a guy implicated at the scene of two bodies who's listed as 'unknown fugitive' for one of them, and I'll go to IA. Short of that, they'll laugh at me. So, you tell me what next.\"\n\n\"Damfino. I just want someone to know everything in case the next time you see me, it's taking a nap over on First.\"\n\nHe knew what I meant. The city morgue.\n\nThe brown eyes studied mine. \"Morgan, when you get me that piece, this goes to IA, not some vigilante shit.\"\n\nI met the gaze steadily. \"If they allow that option, no problem. But that guy in the apartment didn't.\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nIt wasn't the first time I'd been in Jess's apartment, but I didn't come here often. She dealt with me enough during the week. She didn't need her personal life cramped by the boss any more than the odd hours we kept forced.\n\nIt was small, of course. This was New York and Jess wasn't rich. But it was immaculate, done in a '50s retro with enough taste that it stopped short of kitsch. It fit her. It fit me in a different way. I found it damn comfortable to sprawl back on that couch with a cup of coffee in my hand and just exhale for a moment without the office to remind me of all the crap on my plate. Jess settled across from me in an armchair with a pad of notes.\n\n\"Okay, you asked first about Lindqvist. He was the toughest, because he's kinda private and I don't speak Swedish, so I had to rely on Google to understand stuff. He owns a shipping company. It's not the biggest in Sweden and it's not the smallest. He built it up himself; his father worked on a commercial fishing boat and his mother was at home.\n\n\"His company seems to specialize in smaller general cargo vessels around twenty, thirty thousand tons, all dry goods, no tankers. It looks like he focused on taking older vessels, giving them some reno, and putting them back into service handling smaller ports. They're mostly located in the Atlantic and the northern Indian Ocean... western Africa over to southeast Asia.\"\n\n\"Any here now?\"\n\n\"Your tracker paid off. That helicopter went two places before coming back. The first was an airport in New Haven, Connecticut. I found this site called FleetMon. It allows you to track commercial freighters. The LL Namibian is at the Port of New Haven, registered to Lindqvist Logistik AB. She arrived from Castell\u00f3n, Spain via Tangier late Saturday night.\" She grinned like she was getting to the meat. \"But after that, they flew to Calverton Airpark out in Suffolk County.\"\n\nShe paused, obviously waiting for me to comment. I couldn't think of a thing.\n\n\"A trip to the Hamptons to hobnob with other rich people maybe?\"\n\nShe shook her head. \"They'd have flown to Gabreski. It's much closer to the Hamptons. And he's in the shipping business.\" Again, she sat there, grinning at me.\n\nI thought about what I knew of eastern Long Island. \"The New York commercial ports aren't out there. They're in Brooklyn, Staten Island, across the river in Jersey.\"\n\nI fell into the pit she'd dug.\n\n\"That's where you're wrong! There's a port out there, the United Riverhead Terminal. It just doesn't have piers.\" She enjoyed my puzzled expression, I'm sure. \"The ships dock at an offshore platform. Huge ships, things they call Suezmaxs. And get this, they're all tanker ships because United Riverhead Terminal is a storage facility for crude and gasoline.\"\n\nI sat back to think about that. Why would the owner of a company specializing in small, dry-goods freighters be visiting a facility for super-tankers? Then I noticed the grin getting wider. \"I'll bite. What?\"\n\n\"I took a run out there yesterday afternoon and spoke to the harbormaster like I was doing a puff piece for a local glossy. I gave him my best gushing-idiot girl voice and a shot of cleavage and found out that the Namibian anchored off their lanes Friday night before proceeding to New Haven the next day.\"\n\nI forced the image out of my brain&mdash;it was far too distracting&mdash;and concentrated on the facts. \"Why?\"\n\nHer grin dimmed. \"He didn't know. But it's got to be significant, Harry.\"\n\n\"Yeah, you're right. Even if we don't know what it means, it's something. I wouldn't have made that jump from the helicopter landing there. I'm glad you're part of this.\"\n\nThat tickled her, though she stuffed it away behind peering at her notes. \"Okay, next up, Larry Beck. Or maybe I should call him Bwana Beck.\" She didn't say that like it was a compliment. \"You already know his company does cement and gravel. But he doesn't spend a whole lot of time there because there's always something that needs killing in his eyes. Bear, cougar here in the States. A lion in Africa. Wild pig, even a tiger, in Asia.\" The slightly clipped tone had given way to outright anger.\n\nI knew she hated hunting for sport. It had come up some time back when we were hanging around the office, bored. \"I don't mind hunting if you're gonna eat it, Harry,\" she'd told me. \"That would be hypocritical since I'm not a vegetarian. But hanging a head on the wall just to show how big your dick is makes you an asshole.\" Clearly this was after she got comfortable swearing in front of her boss.\n\nNow she followed that up. \"Watch yourself with that one if you go after him. When he's not banging away at kitty cats around the world... or I guess banging away at a different type of kitty here... he's banging away at a local gun club. I found a picture of him accepting some award there.\"\n\nI ignored the edgy tone and filed that warning under the heading of \"Good To Know.\"\n\n\"I checked out what I could about his two homes. Get this, both are up for sale. I called the realtor for the one out on the island, pretending I wanted to make an appointment. She told me, 'It's open for showing anytime.' I figure that means he's not living there. I tried the same thing for the place here in the city, but they asked me to pick a day and they'd get back to me, so I don't know if we can assume anything about that one.\"\n\n\"When did they go on the market?\"\n\n\"MLS says early September.\"\n\n\"Before Regan's party,\" I said thoughtfully. \"The question is whether that means he was preparing to disappear or just relocating. I'm not sure he'd have known in advance about those certificates being left in a drawer.\"\n\n\"Do you like him for this?\" Jess asked.\n\n\"No, not really. His whereabouts are vouched for all evening. The fact that he disappears when Emerald gets killed and tells Nikki he wants nothing to do with her right now even though she's his dominatrix suggests that&mdash;\"\n\n\"What!\"\n\n\"Oh, yeah. Sydney let slip that that's Beck's thing, and he's totally infatuated with Nikki.\"\n\n\"When did you learn this?\"\n\n\"This morning.\"\n\n\"Ah.\"\n\nThere was a world of meaning in that syllable. I figured it said, So two of them weren't enough to teach you. I debated arguing with her, correcting the misapprehension about where I'd spent the night, telling her Sydney had realized she needed a new line of work. But I decided it wasn't worth the effort. For whatever reason, Sydney was tarred with a very black brush in Jess's mind. That puzzled me because we'd had a client once who was a working girl and Jess hadn't blinked an eye. She'd been friendly, in fact. But it was what it was, and protests weren't going to change it. They hadn't with Lexie. I went back to answering.\n\n\"I figure he's scared because Emerald died, and then Nikki probably told him they tried for Sydney. Now Charlie Everett's dead. Beck's probably digging a hole and pulling it in after him. The question is, where's that hole?\"\n\n\"Then who do you like?\"\n\n\"Kimi for the actual theft. She did a runner almost immediately. I've talked myself into an accomplice, somebody who knew about the bonds and got her to act for him. Lindqvist seems like the best bet. I met him and I tell you, Jess, he's a pretty cool customer. Regan figures he's too new to have done it. I figure new means he's got no loyalties built up. Neither one of those two are accounted for in the late evening.\"\n\n\"So, find Kimi, maybe find the bonds. Or...\" She looked thoughtful. \"Or search the Namibian and find the bonds? I mean, it seems silly to think he'd put them there when he could just get a safe deposit box at some bank and no one would know, but the ship being there and him going out there has to mean something, right?\"\n\n\"Yeah. But what?\"\n\nWe sat there in stumped silence for a while. Then Jess's phone rang.\n\nShe listened for a second. \"One moment, please.\" I saw her thumb the mute button. \"Rollover from the office. It's for you.\" She held it out.\n\n\"Harry Morgan? It's Larry Beck. Nikki says we have to meet. I pick the time and the place.\"\n\n\"Okay.\"\n\n\"Meet me at&mdash;\" He broke off as if thinking. I waited. \"I have to have some stuff I left at Nikki's before I disappear until this is over. I'm not going to show my face there. Go pick it up then meet me at a bar called Stuyvesant's. It's a block down and a little toward First. Leave her building out the side and cut through. The only way anyone could follow you would be if they come out that door too. Don't come here if they do. Call and I'll meet you someplace else.\"\n\nI ignored the tone&mdash;like I said, the rich think the world operates at their convenience&mdash;and addressed the problem that came to mind. It wasn't much past eleven.\n\n\"I'm told she sleeps late and doesn't answer. She may not buzz me up. And if she's not alone, she definitely won't.\"\n\n\"I'll call her and tell her to get up and let you in.\"\n\n\"Out of curiosity, do you know anything?\"\n\n\"Oh, yeah.\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nThere was no guarantee they were still watching her place, but something told me they were. I scanned around what I could see of the street. Nothing suspicious leapt out, but that didn't shake the presentiment. I didn't get out of my car. Something was bothering me, but I couldn't put my finger on it. It was something that had started not-quite-whispering in Jess's apartment.\n\nI needed to do something soon. It was eleven forty-five. Beck said he'd tell Nikki to expect me before noon.\n\nI wasn't looking forward to this. Even if I was wrong that someone was watching, I didn't expect the same pleasant welcome I'd gotten last time. Being dragged out of bed&mdash;alone in it or otherwise&mdash;hours before normal waking time wasn't going to make for a happy Nikki. I glanced at the gun I'd just checked to make sure it had one in the chamber and snorted.\n\nHopefully, Harry, you won't need this to hold off a pissed-off, paddle-wielding woman. Heh, I wonder if Beck used the same tone of voice with her he used with me. How many cracks of the paddle does ordering your dominatrix around cost?\n\nAnd that was the first domino that set a line of them toppling.\n\nSomething in that mental transformation of Nikki from the doe-eyed creature I'd met to a leather-clad boss-bitch, something about that while I was sitting there with my.45 still in my hand, triggered the memory of another.45. One I'd placed in a bar drawer in the apartment upstairs. A number of tiny threads came into focus. None of them were significant enough on their own, but taken together, they spelled something.\n\nA man who feared for his life enough to carry a gun... why would he give it up? Nikki had said, \"He left it here.\" Was she so important to him that he'd risk dying without it on the street so she could shove it deep in a sofa behind locked doors? Why not get her one of her own and keep the cannon for when he heard those footsteps in some parking garage?\n\nThe niggling, frustrating whisper in the back of my mind that started at Jess's suddenly became audible.\n\nJess told me this guy had a gun in his hand more often than his dick. Why would a man like that hand a weapon that big to a woman like that? One who weighed a buck fifteen soaking wet and had hands the size of a sparrow. One who'd never fired a pistol. He'd have known as well as I had that her first shot better get the job done because the rest would spray the entire borough. And that first shot? \"It makes me nervous,\" she'd said with a tremor. Yeah, only blind luck would make that first shot count.\n\nHell, I thought as the third domino tipped over, when exactly did a man who cut off all communication the minute Emerald was murdered give her that gun? \"He wants nothing to do with me,\" she'd said.\n\nMy train of thought went sideways in a leap. Why meet at a bar right near here when this was the last place he wanted to be seen? Why not some random watering hole in this city? Where was Larry Beck hiding out if he wasn't at his apartment or Long Island home? Who was the inside contact in Sydney and Nikki's building?\n\nWhat if Larry Beck was here?\n\nI pursued the thought. I'd seen every square inch of Nikki's apartment unless she'd rolled him in a ball and stuck him in a cabinet. And dominatrix or no, that seemed a bit much. But knowing I was coming over, he could have taken a ride around town for an hour or hung out in some restaurant he'd never been to before. My gaze shifted from the building's entrance to the side.\n\nIt was one of those little alleys that separate buildings built in the fire-escape era so that apartments that didn't face the street were legal. It was maybe eight feet wide. Ten-foot-tall iron gates of mesh too small for a hand to slide through and topped with outward-curving spikes blocked access&mdash;can't have it becoming a homeless haven, after all. The black iron lacery of the fire escapes and barred windows above, and the slanted basement doors painted in earth-tone primer colors below gave it the closed-in look of an urban jungle.\n\nTenuous worries became semi-convictions.\n\nThat's where it'll happen, I thought, not inside. I had left a dead body in that place, and okay, even the best apartment complex wasn't immune to a murder. A second within a week, though, and the police won't be so accepting of \"I don't know nuthin'\" responses. They'll use big shovels when they start digging. They might find a trail of paydirt leading from Sydney's apartment to Nikki's... and to anybody hiding there.\n\nI talked myself through it: I come out that side door, turn right to head away from the street and cut through, down toward that little jog in the alley where the building ends. No windows face there. I bet someone's already tucked in a doorway, waiting patiently for the sound of footsteps. Maybe it would be something quiet like a piece of pipe; maybe it'd be two shots and they'd have time before the cops got there.\n\nI dragged out my phone and called the last number to call me.\n\n\"Tell Nikki I'll be a few minutes late. I have something I need to do first but I'll be there.\"\n\n\"What the fuck? I'm not sitting in a bar waiting for someone to find me.\"\n\nYeah, sure. \"Calm down. It's a few extra minutes.\" I hung up before he could say anything else and debated.\n\nMurray? He's way the hell uptown in East Harlem. By the time I reach him, convince him I'm not imagining things, and get his ass down here, Beck will pull the plug. No, the Nineteenth is only a few blocks away.\n\nI put the car in gear. If I sat there and made a bunch of phone calls, they'd know if they had eyes on the street. I pulled into a Deliveries Only spot around the corner. I made a call to Murray anyway. I had his cell now because messages at the station weren't a good idea. I still got voicemail. I left him a clipped summary of what I suspected and then dialed again.",
        "\"Detective Rossi, please,\" I said to the voice that answered. \"He doesn't expect me, but I'd like to speak to him.\"\n\n\"He's off today. Someone else help you?\"\n\nFuck!\n\nThe homicide detective who'd caught Emerald's murder seemed like a good bet. He had me dead to rights that day if he wanted me, but he'd let me go without a blink. I debated the pros and cons of the alternative, decided the risk was worth it.\n\n\"How about Detective Gibson?\"\n\nThe vice guy. He treated me decently and agreed with Rossi about letting me go. That was the plus side.\n\nThe minus side was that the guy was sharp. I mean, somehow he'd connected the redheaded Jane Doe with the visiting Swedish businessman in no time flat. That meant no amount of protesting that I was just a horny guy paying for sex was going to fly when my mug reappeared in his field of vision. I was going to have my ass sat in a hard chair in a small room with a large one-way mirror.\n\nBut I needed a cop. I was in a serious jam, and it wasn't somebody waiting with a.22. I didn't need my hand held going down that alley.\n\nThe jam was that some of the bad guys were cops. I didn't know if Brady and Santiago were the ones waiting. Maybe they'd contracted it out. Murray hadn't identified that shooter at Sydney's yet, which probably meant he wasn't a moonlighting cop. But the odds of one of those two being here were high. That meant any shooting needed to be totally righteous... and by that I meant another cop present as a witness to why the trigger got pulled.\n\nI couldn't just walk away. I needed to get to Beck. In my mind, he was looking good for the guy I was after. Nail him and I was out from under Regan and his threats. If I was wrong, I still needed to get to him. He'd told me he knew something. So I asked for Gibson.\n\n\"He's in today,\" the voice admitted, \"but ain't in the shop at this moment.\"\n\n\"Can I call him?\"\n\nThe man allowed as how he could transfer me to his mobile.\n\n\"Detective Gibson, this is Harry Morgan. I was the guy who&mdash;\"\n\n\"I know who you are, Mr. Morgan. It's on my list to have another little chat with you.\"\n\nYeah, it was going to be a hard chair.\n\n\"Well, now's your chance. There was a guy I saw coming out of the building the day the woman was murdered,\" I lied. \"I've seen him again. He's in the same place I'm going.\"\n\nWhy was I lying? Because anything other than that would drag in that I knew a whole lot more than I had been forthcoming about. Like some of the whys and wherefores of Emerald's murder. Like giving a cop a severe beatdown. Like killing a guy just a day ago and then hiding the body. Like twenty-to-life upstate.\n\nNot to mention he wasn't Murray, and I still thought the instant I mentioned other cops, this would go sideways.\n\nAfter a long pause, he asked, \"Where are you?\"\n\n\"East 71st about a half block from the building.\"\n\n\"Damn it! I'm all the way downtown at court. I'm almost done. I just gotta sign some stuff.\" He hesitated while he weighed what he was doing versus some schmo thinking he had a lead on a murder case. He came down on the side of maybe I wasn't such a hot tipster.\n\n\"Look, go ahead with whatever you were going to do, then just hang there. I'll get up there as soon as I'm done, and we can talk to the doorman. It'll be forty-five-ish. Gotta go. They're calling my name.\" He hung up on me before I could decide how much more I could leak out as a lever.\n\nCall back? No, not if he's all the way downtown.\n\nForty-five minutes was optimistic. Who knew how long the court bureaucrat would take or how many lights Gibson would miss on his way up? I cursed up a blue streak. Cops all over the place when I didn't want them, none around when I did. Nobody heard because I was in my car. It wouldn't have mattered anyway, this was New York.\n\nMy phone rang.\n\n\"I'm not sitting here, Morgan,\" Beck said. \"You've got fifteen minutes and then I'm gone, and there won't be a second chance because I'm staying gone. Nikki's waiting, so get up there now.\"\n\n\"This won't wait. Give me an hour.\"\n\n\"Fifteen.\"\n\n\"I'm already ten minutes out and heading the wrong way. I'll turn around, but if you need your stuff that badly, you sit there. Nobody's going to walk into some random bar looking for you. Fifteen to get back there, then your fifteen can start. Half an hour.\"\n\n\"Not a second more.\"\n\nFuck. Fuck. Fuck.\n\nI decided to kill those minutes of the fiction I'd driven away with a takeout Danish to quiet a rumbling stomach. I left the car in the delivery zone and ducked into the corner deli. I dawdled my way through selection and then waited to pay. As I turned from the cashier, I got what might have been my only break of the week.\n\nA familiar face was wrapping itself around a handful of sandwich in a booth. I remembered there were two other cops who, if they wanted, could have put me six feet under when they caught me standing over a body with a gun in my hand. \"He made a move, and we had to make a split-second decision\" will pass the review board almost every time. It took Officer Hopkins a long moment to place my face. I started talking fast. I gave him the same story I'd given Gibson.\n\nA mask of careful non-expression dropped into place, replacing the irritation. More importantly in terms of gauging interest, his hand dropped away from the butt of his service pistol where it had unconsciously come to rest when I loomed over his table.\n\n\"I don't remember anything in your statement about a guy.\"\n\n\"It didn't seem that significant and slipped my mind. I only remembered when I saw him again.\"\n\nHe gave me that cop stare, the one that wanted to know if I was a lying scumbag. He probably already figured me for a scumbag, the lying part was the question. I felt a presence materialize at my back and glanced to see Officer Allen slipping past me into her seat. She'd come from the restrooms I guess. I turned back to Hopkins and played another card.\n\n\"I called Detective Gibson,\" I said. \"He thought it was worth checking out, but he's downtown and will take a while to get here.\"\n\n\"Checking out what, Kenny?\" Allen asked her partner. He repeated the gist of my statement. When he was done, she gave me a look that said she found this more interesting than Gibson had, but wasn't biting. \"So, do what Gibson wants. Wait for him.\" Hopkins nodded.\n\nI glanced at my watch and swore when I wanted to scream. The clock was ticking. It was unreasonable to be angry at them because I was holding stuff back and their advice was good, but I can be an unreasonable asshole sometimes. The pressure-relief valve on my mouth popped a little.\n\n\"Yeah, whatever.\" I stepped back from their table. \"Someone's tried to kill me twice. I'm still walking, but maybe they'll get third-time lucky. If so, have fun with the paperwork.\"\n\nThat got their attention. Both their eyes jumped to the colorful bruising on my face, evaluating it in a new light.\n\n\"Are you saying&mdash;\"\n\n\"I'm saying,\" I interrupted, \"that I've got a couple of minutes before I have to pick up a package as part of that case or I'm fucked. And then I'm going to walk down a rather-deserted alley because I need to make sure no one is following me when I deliver it. And the last two times I've been somewhere with no one else around, either I ended up in the hospital or they ended up in the morgue. Have a nice day, officers.\" I walked away.\n\n\"Wait.\"\n\n\"No,\" I tossed over my shoulder. \"Talk to Detective Murray in the Twenty-Fifth if you want more. He knows all about it.\"\n\nI pushed out the door. The whole visit to the deli had taken longer than I'd planned, and I was in Beck's fifteen now. I tossed the bag with Danish onto the front seat and left my car where it was. Maybe I'd get one fuckin' ounce of luck today and not get ticketed. I fast-walked my way the quarter-block to Nikki's building, working on turning the angry heat into cold resolve.\n\nI felt like Gary Cooper in High Noon, doing that solo walk down the street into a fight that might leave him dead. Nikki's continued existence was a salt lick luring the deer in. Or maybe a goat staked out for the mountain lion&mdash;my ego liked being a metaphorical predator rather than herbivorous prey. Just like Coop, I had to do this. It was my job... not to catch Regan's thief... to keep Jess and Sydney safe.\n\nI ignored the \"Hey, Morgan\" from far behind me.\n\n\"Hello, William,\" I said.\n\n\"Go on up, Mr. Morgan,\" he replied. \"She's expecting you.\" I nodded and stepped into the open elevator. The short walk had been enough. I felt the cold, cold anger coiling inside, waiting to be let out. Just as the doors clanged shut, I saw Hopkins and Allen turn under the awning that covered the entrance walkway.\n\nI had made a small miscalculation in my mental preparations. It didn't matter. Von Moltke told us what happens to plans when you meet the enemy. That's why you consider contingencies. Just because I was betting on what was going to happen didn't mean I wasn't going to hedge those bets. Murray knowing was a hedge, albeit one that would be after the fact. Hopkins and Allen were more immediate, unexpected until that last second but welcome. Another was punching the fourth floor button. Nikki lived on the second.\n\nIt's human nature to expect trouble to come up from below when you think you got there first. There'd been no one in the lobby and William hadn't called up. I hoped any hypothetical watchers would assume this elevator trip was someone else. I eased the fourth-floor stairway door open one quarter inch at a time. It didn't squeak. That would have been intolerable in a building this expensive. On rubber-soled feet, I stole down, watching intently through rails to the floors below. As I said, I'd made a very minor miscalculation: it wouldn't be in the alley after all.\n\nThey also miscalculated, but I guess they never read Von Moltke.\n\nMaybe some guy was just hanging on the stairway because he thought he'd sneak a smoke break after he promised his wife he'd quit. I had a different thought. Mine was that jet-black hair and skin that looked like it had been kissed by the sun could very well fit someone by the name of Manny Santiago. Before you accuse me of racial profiling, the arm held straight down his thigh with a black chunk of metal in it was another clue. He was intent on the tiny crack of open door.\n\n\"I'll blow your head off if you fucking twitch.\"\n\nHe started to. I saw his body react before his mind could veto it. I let him have that one for free because he stopped it. He slowly looked up over his shoulder to see me peering down from above, an arm extended and braced against the center rail, the muzzle that probably looked like a pit unwavering on him.\n\n\"Set it down. Slowly.\" He did and I moved the rest of the way down carefully, never taking eyes or aim off him. \"Out, Santiago.\" I saw the surprise at the name. Bingo. He pulled the door open.\n\nI was off to the side a little, so I saw the eyeball flick left as he stepped out. That told me which way it was coming from. Despite my warning, he decided to twitch. Just as I would have cleared the doorframe, he dove right and down, clearing the shot for his partner.\n\nHe was counting on instinct, that I'd track the target, him, with my aim. Maybe I'd even shoot, but fast moves and a vest made a snap shot an okay bet. It was another miscalculation on his part: I wasn't letting instinct run the show. The beast was on alert and it loved the geometry for a right-hander.\n\nThat eye flick was warning enough. Santiago's body was lunging right, but I didn't care. Mine was checking its motion in the stairwell and swiveling left. Only a part of my arm and one eye cleared the frame. I'd already taken up the slack in the trigger, and I felt it break under an extra few ounces of pressure the moment it had a sight picture. Center mass from five yards is no challenge, even a slight mis-aim is a hit.\n\nAny modern vest will stop a.45 hollow-point. And bullets obey reality&mdash;bodies don't get lifted and hurled backward, no matter what you've seen on the screen. But half an ounce of metal moving at nine hundred fifty feet a second is a helluva kick, and that's all I wanted, a spoiler. Brady's shot went wide. My second didn't. With seemingly all the time in the world, I lifted the muzzle, found the picture I wanted. The bullet did major dental work before removing his brain stem. He folded like a cheap accordion.\n\nI was halfway turned back when Santiago hit me. Pain seared up my side from the ribs and I fell forward. He rode me down with one hand clenched around my right wrist. He used the hard floor the same way I had the day before, smashing my hand down, and my gun went skittering. He rained blows on my face and torso. I covered up as best as I could, but I was too hurt to hit back effectively and he was tough.\n\nI prayed for two blue-clad forms to come boiling up, drawn by the sound of three shots coming down the echo chamber of the stairwell. I tried to punch him in the nuts, but he turned and took it on the hip.\n\nHe went for the throat and that gave me an opening. I managed to shove his left hand so that it missed, and I lunged and latched on with my teeth. Like a bull terrier, I dug in, ignoring the howl, ignoring the iron taste of blood in my mouth, ignoring the right hand crushing my windpipe and the jerking.\n\nThat hand left my neck and pummeled my head from all sides, seeking some way past the arms I had wrapped around it. He finally slipped one in, crashing into the side of my forehead that had taken a weighted glove just a week ago. My jaws loosened as lights exploded in my vision and he tore free, falling back to the side.\n\nHe fell toward my gun. He scrabbled toward it. Once again time seemed to move at a glacial pace as I watched the horse race: his hand stretching far ahead of him, mine stretching down to an ankle. It was going to be close. Too close. I was going to lose. My ribs were just too much impediment to the crunching motion required.\n\nHe had it. He was twisting onto his side and the deadly shape was swinging my way while my fingers were barely closing around the butt of the Centennial 642 in the ankle holster. My teeth were drawn back in a snarl of rage and defiance. His eyes were triumphant.\n\nAnd then they were surprised. The first round caught him squarely in the chest, no more lethal than mine on Brady was. Again, it was enough, enough that the bullet intended to have my name on it burned across my shoulder.\n\nSantiago twisted, absorbing the sudden shock, both mental and physical. Damn, he was tough! He ignored the injured man with no weapon in his hand for the one shooting at him. He snapped a shot toward the blue-filled stairway door that missed. Two weapons barked a fusillade in return. Each moment was an individual crystal to me.\n\nNice grouping.\n\nThe random thought strolled through my brain as two tears in his windbreaker erupted rhythmically within an inch of each other, companions to others spattering abdomen to collarbone. They were 9mm rounds, moving faster than the larger.45 slugs I'd lobbed.\n\nSome of those might get through.\n\nVests aren't bulletproof. They're bullet-resistant. Especially against faster stuff. And there was a hailstorm testing its limits. I'd turned enough to see Hopkins to the right of the door, punching round after round out as fast as his finger could work, Allen to the left delivering rapid, methodical double-taps: one-two-realign-one-two. Santiago's face was a grimace and I suspected some had penetrated. Even with most of their momentum spent coming through the fabric, they'd hurt. But he didn't stop pulling the trigger.\n\nAnd then there was no doubt they got through. Santiago fell back under the hammering, his off arm flying wide to catch the fall. If you want a vest you can move in, that's a vulnerable spot. Lucky accident or aimed, the sound of the two impacts in quick succession was different, meaty and muffled in a way that spelled doom.\n\nThe sudden silence was deafening. Quickly but cautiously, the two officers came forward. Hopkins toed the gun away from the body. Allen bent over me.\n\n\"You okay?\"\n\n\"It's just a flesh wound.\"\n\nI saw her mouth twitch despite the situation, and glimpsed the woman under the hard, professional exterior, the hair pulled back tight in a bun, nerve-sweat beading her forehead.\n\n\"Vest on this guy,\" Hopkins said.\n\n\"They both do,\" I replied. \"They're cops.\"\n\nTime, which had sped up again, froze.\n\n\"Dirty cops,\" I hurried on. \"That one's Manny Santiago. The one I got was Carson Brady. They moonlight as guns for hire. Detective Murray knows and is going to IA.\" A minor fib. He would. This was certainly the \"solid piece\" he'd needed.\n\nThe two partners stared at each other. You could see the \"What the fuck do we do now?\" in both their expressions. I had my own plan and time was of the essence.\n\nI slowly got to my feet. I hobbled toward my gun.\n\n\"Don't touch that!\" Hopkins said, his own lifting slightly.\n\nI put up a hand both in agreement and acknowledgement of stress-induced stupidity. \"Sorry, reflex.\" Instead, I turned to the door of 2B. I pounded on it three times, keeping my body to the side just in case.\n\n\"Nikki! Open the door,\" I bellowed. There was no answer. \"Open it or the police will open it for you\" I glanced over at the two officers. They were staring at me, still processing.\n\n\"And,\" I yelled, \"if you have your hands on that gun, or Larry's in there with one, it's going to go really badly for you.\"\n\nThat got a reaction from the two police. Both started upright. They moved well to the side of the corridor, Allen stripping a magazine and slotting a new one in with practiced motions. I noticed a spot of blood on Hopkins's left forearm and some tears in the chest fabric. Santiago hadn't gone down easily.\n\n\"What the hell are you doing, Morgan?\" Hopkins hissed. Why he felt he needed to be quiet when we'd just had a gunfight and I was yelling at a closed door, I don't know. Allen was already speaking rapidly into her microphone.\n\n\"These guys didn't go after me just because they didn't like my looks. Someone paid them. I think that someone is named Larry Beck, and I think there's a small chance, a very small chance, that he's in this apartment.\"\n\nI turned back toward the door.\n\n\"Wait,\" Allen said.\n\nI shook my head. I softened my tone. \"Just open the door, Nikki. Before this gets any worse.\"\n\nIt took a long moment, then we heard the chain go. Nikki's face appeared in the crack. Voices all spoke at once.\n\n\"Are you alone?\" &mdash;&mdash; \"Ma'am! Show me your hands!\" &mdash;&mdash; \"Step back, Morgan!\"\n\nI stepped back. Nikki's face blanched even more at the sight outside her door, tears coursing down her cheeks.\n\n\"SHOW ME YOUR HANDS!\"\n\nHer hands came into sight, empty. The tension level dropped seven thousand percent.\n\n\"There's n-nobody here,\" she stuttered. \"He left me a briefcase and said it had&mdash;\"\n\nWhatever the briefcase had was lost in the boom. I said bodies don't get flung by bullets and they don't. But Hopkins's torso arched forward in a gesture of utter incongruity. The second round punched it into another bizarre shape.\n\nIf he'd followed that up with two to Allen, things might have gone differently. She was the other one holding a gun. But maybe he figured I was the dangerous one. Maybe the beating I'd given Brady had created an impression, or the fact that I'd come back from the savage one I'd received to push at them even harder. Maybe he figured she was in shock at losing her partner. Maybe he was a fuckin' male chauvinist who just didn't see women as a threat, I didn't know.\n\nThe gun boomed again but the chains hadn't gone back on the thing inside me, and I was already driving Nikki before me without a conscious thought, back into her apartment. I felt the tug on my coat but no searing pain. I waited for a second round to punch through the wall into us, but guns barked again&mdash;two loud cracks, one louder&mdash;and nothing tore through the drywall. I heard a woman's voice, somewhere between a grunt and scream.",
        "The Centennial was in my hand without me consciously drawing it. The cold savagery poured back in like ice water in my veins. I came back out that door as fast as I went in, and it all made sense when I saw.\n\nMy rush from safety startled Gibson as he recovered his balance from her double-tap into his chest. His hand reoriented like the finger of death toward the woman squirming for the cover of a body. He had her. He knew it. She knew it despite her crawl. It was in her eyes. He had her.\n\nMaybe he was right to shoot at me first, I thought in his moment of surprised hesitation. Fight or flight wasn't a choice that part of me ever paid attention to. He saw it in my face. He tried, just as I'd been trying when Santiago went for my gun. This time, though, it wasn't a close race, and I wasn't first among losers.\n\nThey don't train cops to shoot to wound. It's a harder shot and the perps can still shoot back. But I knew he wore a vest. One of the things&mdash;other than Jess's rock-like presence&mdash;that occupied countless days during that early sobriety, that took my mind away from the dark paths it wanted to go down, was the shooting range. Box after box until it became rote. Switch weapon, do it again. Metal silhouettes clanging and paper perforating. I wasn't going to win the Camp Perry championship or go to the Olympics, but this was only the width of an elevator foyer.\n\nThe slug punched through khakis, underwear, skin, muscle, and found bone. I'd aimed a trifle high and wide. I wanted to smash an ilium, not sever an iliac artery.\n\nHe slumped. He wasn't as tough as Santiago. There was a half-hearted effort to bring the gun up. The temptation to put a round through that carefully coiffed hair was a black flame raging through me. I fought it even though it was a war I wanted to lose. But I wanted a live one... one fucking person I could wring some answers out of.\n\nI hobble-rushed over and body-slammed him. He went down with a strangled groan. I kicked the automatic away. I put my head on a swivel trying to cover everything as I moved to Allen. She was ignoring the growing stain of red on her uniform shirt as she frantically pawed at her partner. \"He's gone,\" she said dully. \"Kenny's gone.\"\n\nI knew that from his glassy stare, but I didn't say it. Something like a marriage breaking up had just happened to her. \"The rounds went through the vest?\" She nodded.\n\n\"Okay. I'm really sorry, but look, this may not be over, so I need you to focus on me for a second. Where are you hit?\"\n\nShe looked up abstractedly, then down as if noticing for the first time. \"It's in my shoulder.\" Her body was flooding chemicals into her to dull the trauma, but I saw the awareness of pain hit. The honey-colored skin paled and her eyes tightened.\n\n\"I need you to focus,\" I repeated.\n\nI watched her pull it together, inch by inch. The eyes stayed tight, the gaze averted from her partner's body, but she sharpened. Dullness turned to rage. She glanced around to find the nearest wall, then butt-scootched over so she was sitting up. \"Okay.\"\n\nGiving her a look of approval, I moved quickly to skid the plethora of guns strewn around toward her side. All except one, that one I picked up. \"I know it was just used to kill a cop, but my prints are already on it, and I'm a lot more comfortable with it.\" She didn't protest.\n\nI debated sending Nikki for a towel, but I couldn't risk letting her out of my sight. \"Get over here,\" I snapped at her. She looked at me blankly and didn't move. \"Now!\" I snarled. She scuttled.\n\n\"Take your shirt, wad it up, and put pressure on her shoulder. She'll tell you when it's the right amount.\" Something in my expression said I wasn't going to ask again. I ignored the resulting view, that kind of thing wasn't even remotely on my mind right now. I didn't ignore Allen's warning lift of her pistol as Nikki neared her. She was back in the game.\n\nI limped over and stared down at Gibson. His face was screwed up against the pain, but he was alert. He was lying flat to ease the hip.\n\n\"Is Beck in there? Anyone else?\" It had been another miscalculation. Mine this time, and I hadn't prepared enough for it. The result was Hopkins dead. I didn't care about the other two pieces of filth, but I felt like shit about that.\n\nI had assumed Beck was hiding in Nikki's apartment. I hadn't considered that he'd get himself a place right near his mistress. A place that made him a tenant who could hand out permanent passes. A place where gunmen could lie in wait.\n\n\"If you're lying, I shoot you first.\"\n\nHe didn't flinch at the threat. \"I thought Beck would be here, but he's gone. It was just the three of us.\" I took him at his word. I wasn't going to do anything if that door didn't open. Let the police on their way deal with it. I could hear Allen's voice behind me as she updated the incoming reinforcements.\n\n\"I never thought about you,\" I said. \"You didn't give me much, but there were a couple little things that should have made me wonder. I saw you with Lindqvist. She was a Jane Doe; you connected Emerald to him too fast. And how did you know exactly which apartment she was in if you were responding from across the street to shots fired?\n\n\"And today, you said, '... talk to the doorman.' How did you know it was an apartment and not an office or store? All I said was building. How did you know there was a doorman? Because you were sitting in it, waiting for me. It went right by me because I was distracted thinking about that alley,\" I admitted.\n\nHe gave a humorless laugh. \"It was supposed to be the alley. I changed it. It wasn't supposed to go this way,\" he gritted out.\n\n\"No? How was it supposed to go?\" I asked him.\n\n\"Obviously, you were supposed to be lying here, not them. You've been a fucking lucky man, Harry. That open call to 911 saved you that first time. That and those two badges showing up. They slowed us down a few seconds or it all would have been over.\"\n\n\"How?\"\n\n\"Shot in the act of killing that hooker.\"\n\n\"How was that supposed to work? My gun wasn't going to match the rounds in her.\"\n\nThat got a flicker of a smile. \"Brady used an M&P like yours for the job, and the barrels are interchangeable in that gun. Yours would have matched when we were done.\"\n\n\"And let me guess. My gun would have been fired by the time others got there. There would be GSR on my hands. There'd even be spent shell casings matching my gun around?\"\n\nHe gave a nod. \"But it was just being sure. Nobody was going to do forensic analysis. Perp killed in the act. Justifiable before the board. Case closed.\"\n\n\"And them?\" I nodded to where Allen was slumped against the wall, listening, and watching with blazing eyes while Nikki pressed white-turned-red cloth into her shoulder.\n\n\"They were an unfortunate wrinkle. Maybe I shouldn't have called in that ten-ten, but we were trying to make it look legit. Just bad luck they were cruising that block. Five minutes more and it would have been all over.\"\n\n\"You said the call saved me. You were going to pop them too, weren't you?\"\n\nHe didn't answer. We all knew what it was anyway.\n\n\"So, the big question: why? Why all this?\"\n\nThe flow dried up. He'd answered the questions that didn't matter anymore; we had him for murder and attempted murder, and none of what he said would be admissible. But that was all he was giving me.\n\nI smiled. It was the same cold one his hired stooge had seen one floor up as I watched his life bubble out his throat.\n\n\"If I hear that elevator go down, or feet pounding up those steps without you telling me, I'm going to put one more round from the same gun right through your gut. They'll probably be able to patch you up before you die in agony from peritonitis, but there's nothing they'll be able to do about the severed spinal nerve. Prison sucks for cops. Prison and unable to run? I'll send you a tube of butt lube each month.\"\n\nI heard breath suck in behind me. I paid no attention to it. I stared down with the cold eyes that had only surfaced twice in my life, now a third. He recognized what lurked in them. Promise.\n\n\"Alicia?\"\n\nI didn't understand the non sequitur, then I saw his gaze go past me. I glanced back. Allen's eyes were locked with his, hooded and inscrutable.\n\n\"You okay with that?\" Gibson said. \"I'm already down.\"\n\nThe tableau held. Nobody breathed.\n\n\"Why did Kenny die, Gibson?\" The voice was implacable. The meaning was clear: yeah, I'm okay with that.\n\nHis faint hope extinguished.\n\n\"You've got minutes, maybe seconds. Officer down... they're coming fast.\"\n\nHe caved.\n\n\"Beck used me. He's a long-time customer of the people I work for. We've done a little work here and there for him in the past. Like a favor, you know? Anyway, he came to me, told me he heard some shit over some pillow talk. He said some hookers had gotten some solid stuff on things and came to you. He said you needed to be dealt with fast before things go out of hand 'cause he didn't think you were going the blackmail route. Thought you might talk to someone downtown. The boss is out of the country, and&mdash;\"\n\nThat rang a bell. \"Richard Bertram?\"\n\n\"Yeah, him. So we acted. It wasn't until today that I found out Beck had been lying to cover his sorry ass over ripping them off. I came to see him, but he'd rabbited when he realized we were wise to it.\"\n\nI could tell he wanted to shrug; it just hurt too much.\n\n\"But we'd made you into a problem, so we had to clean you up anyway. Only thing was, we were going to leave you in his apartment like you did that other guy. We figured it'd jam Beck up good until we could find him.\"\n\nI didn't turn to look at Allen as Gibson outed me about the killing in the building. He hadn't been explicit, but somebody might put it together.\n\n\"And her?\" I didn't point, but he knew I wasn't talking about Allen. His eyes went over my shoulder again and he shrugged. Another dead hooker, that shrug said. I heard another catch of breath behind me and a whimper.\n\n\"And what's this business of Bertram's?\" He got stubborn again. But once you cracked once, cracking again is easier. I laid the muzzle of my automatic against his forehead and pressed the barrel of the revolver into his stomach. \"Right about here, I think.\"\n\nDeath, taxes, and me pulling that trigger if he didn't give.\n\n\"He runs girls through a front,\" he spat out. \"High class. Not all of them here legally. I was in a position to facilitate that.\"\n\nYeah, as a vice detective, I guess he would be in a position to help.\n\n\"So his import business is a front for trafficking?\"\n\nGibson shook his head. \"No. The girls are just a side thing he does. Maybe a couple come in with a legit shipment. I dunno.\" I didn't believe the legit part. \"The front's an agency.\"\n\n\"Eroticos? Gallerie?\" I named the two who'd sent girls to the party.\n\n\"The first one.\"\n\n\"So, her?\" Again, everyone knew who I meant. I glanced over at Nikki as I asked. She was shaking her head, her eyes wide.\n\n\"Uh-uh. Two different sides to the setup. Different people doing the booking for one type than the other. Different rules.\" By type, I figured he meant forced into it versus recruited. I remembered Sydney's description of Kimi's situation.\n\nI finally turned to Nikki.\n\n\"No!\" She echoed his denial. She stared at both of us like a bird with a broken wing staring at a snake. \"He just asked me to give you the briefcase.\"\n\n\"You knew Larry was the one who stole from Regan?\"\n\n\"No!\"\n\nI remembered the big-eyed doe. I remembered the story of the paddle-wielding dominatrix. This woman was good at dissembling. I wondered. I remembered she alibied him for an entire evening. I stopped wondering.\n\n\"Where's the briefcase? And where's the gun you had?\"\n\n\"I think the gun's still in the bar. The briefcase is inside.\"\n\nShe'd popped the deadbolt when she'd come out to stop the door from closing and locking her out, apartment-dweller habit. I pushed it open and saw one of those aluminum Zero Halliburton cases on the hall table.\n\nWhat was really in there?\n\nBeck wasn't going to buy me off. He'd planned on Gibson, Brady, and Santiago giving me my farewell. Cash to run?\n\n\"You got Gibson?\" I asked Allen. \"I'm going to make sure Beck's not in there and secure the gun.\"\n\nHer Glock came to rest on a bent knee. \"Oh, yeah.\" The voice was hard. The eyes were furious.\n\nI ducked in and grabbed the case, then continued to the bar. The Colt was gone. I unclipped the latches on the briefcase. No stacks of bills. Four pieces of paper. I folded them and put them in my pocket.\n\n\"The gun's gone,\" I reported. \"The case is empty.\"\n\nNikki jerked in surprise. I thought it was real, but she'd fooled me before.\n\n\"So,\" I said to Allen as I looked at the growing pool of blood by Gibson's hip. \"Do you want him to bleed out here or take a shiv in prison?\"\n\nHers was the pitiless gaze of a great white shark on its final run toward you. \"If he dies here, some fucker upstairs will decide it's best to sweep it under the rug and he'll be 'killed in the line of duty.'\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nI was out. It had taken almost forty-eight hours. Two days in which my lawyer was a constant presence. Two days in which Alicia Allen's story was unwavering on who the bad guys were and who had \"assisted the police.\" Two days in which Gibson's mouth didn't open except to say, \"Lawyer.\" Two days in which Nikki did a non-stop Sergeant Schultz impression. Two days in which Murray showed up and said, \"You're ruining more of my fucking week every day, Morgan.\"\n\n\"You said get you something... that was a something.\"\n\n\"I said let IA handle it.\" He sighed. \"You gonna survive the next one?\" He said it with heavy irony. He had a point.\n\n\"There's a next one?\"\n\n\"It's out of my hands right now, but a birdie in IA isn't peeping. I take that as a maybe.\"\n\nI maybe out-sighed him. Maybe not; he'd had a lot of practice.\n\nNow, I sat in my office and studied the pieces of paper in front of me. What the hell were these things? Two thousand bucks... less than a day-long date with Sasha for Regan. Cypriot Interconnect... a company that screamed, \"shell corporation.\"\n\nI ran them between my fingers. They didn't have that rough feel of engraving like I expected. On a hunch, I pulled out my keychain and a magnifying glass. Yeah, I had a magnifying glass. Shamus Morgan, that's me.\n\nI flipped off the overhead light and used the tiny blue LED flashlight on my keychain to light the paper. Yep! There they were: microscopic yellow dots on the paper showing black under the blue light, each one a mere two-hundred-fiftieth of an inch across, almost invisible to the eye. A machine identification code&mdash;a steganographic watermark that identified the printer model and usually the date printed. I didn't know how to read the codes they contained, but it told me someone was using a regular office printer to produce these, and that didn't seem normal to my layman's brain.\n\nA bearer bond... one where you couldn't just ask the company to send you a new certificate. You had to have this piece of paper. But laser printed?\n\nI stared at words until they swam. I admired the fancy border, but the magnifying glass showed nothing except loops and whorls. I used Google to translate the French, Greek, and what I learned was Turkish. They were all pretty close to the same legal gobbledygook.\n\nWhat makes you, Mr. Bond 15999977, so valuable?\n\nI looked again. Then I compared the second one to it. Then I thought some more, and brought out one of the bonds from a different company we'd snatched.\n\n\"Well, I think I've figured out the MacGuffin we've been chasing,\" I said to the two women later that day. With the hunters gone and Beck on the run, Sydney had returned from Uncle Jimmy's. But she wasn't eager to go to her apartment.\n\n\"There was a dead body in there. It gives me the jeebies.\"\n\nJess and Sydney leaned in. I could have just told them in one sentence what I guessed, but where's the thunder in that? I set three of the certificates in front of them, the two we'd been looking for plus one of the others I'd pulled from the briefcase.\n\n\"First, look at the serial numbers on the two from Cypriot Interconnect taken from Regan: 15999977 and 16000023. I started wondering why they used eight-digit serial numbers for thousand-dollar certificates. Did they really issue over 16 billion dollars' worth of bonds? But as I stared at them, I noticed something. Add them.\"\n\n\"Thirty-two million,\" Jess said after a half a second.\n\n\"A nice round number, don't you think? Coincidence? Maybe. But wouldn't thirty-two million be a lot more reason for people to be killed than two thousand?\"\n\nI had their interest now.\n\n\"You're suggesting the serial numbers are how much they're worth,\" Jess said.\n\nI nodded. \"And that was the key.\"\n\n\"Knowing their values?\"\n\n\"No... starting to think in terms of it wasn't the certificates. It was an easy mistake to make. They're bearer bonds, so in theory, they're worth cash to whoever holds the piece of paper at any given moment. But that was a red herring. It was what was written on the paper. And there are only three differences between those two Cypriot certificates: the serial number and the printer's marks at the bottom.\"\n\nI pointed at the tiny writing at the bottom of the document.\n\n\"They're on everything. People pay no attention to them. Hell, even a dollar bill has its plate number, position on the sheet, and Federal Reserve District. But if you asked most people what numbers were on it other than the value and maybe the serial number, they'd give you a blank stare.\"\n\nJess studied them. \"But... shouldn't they be the same? I mean, these would have been printed at the same time.\"\n\nI touched my finger to my nose. \"Bingo! And wouldn't you expect them to have a different format on this bond from another company?\" I gestured at the bond issued under a different name.\n\n\"Some kind of code?\" Sydney asked doubtfully.\n\n\"Sort of. That bit at the bottom right, it seems like random characters but if you look at all three documents, the only characters are zero through nine and A through F. Those are the characters used to represent hexadecimal values... one way of representing computer values.\" I'd spent a lot of time on Wikipedia once the idea got in my head. \"And there are exactly sixty-four on each paper. I'd bet a ton of money that's a 256-bit encryption key. In other words, a password.\"\n\n\"To what?\"\n\n\"It took me a while, but I had an idea.\" My finger slid over to a couple of identifiers on the bottom left. \"Completely random numbers and letters. Not just A to F, and there's both uppercase and lowercase. But glue them together and maybe what you have is a Bitcoin address. Each of these fits in the lengths Wikipedia says are allowed.\"\n\nNeither Jess nor I were computer experts, and I didn't think Sydney was either. But we all lived in the twenty-first century; we knew what Bitcoin was in layman's terms. Like Swiss bank accounts you could access from anywhere.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\n\"Well, here're your payoffs from whatever your racket is.\" I set the two certificates on Regan's desk.\n\nSomething in my tone caused him to look at me sharply. \"What do you mean by that?\"\n\n\"Thirty-two million. That's a lot of money.\"\n\nThe stare was long and heavy. It was decidedly unfriendly. \"You've figured it out.\" It was a statement, not a question.\n\n\"I figure Bitcoin addresses and keys.\"\n\n\"Not Bitcoin, per se, but electronic currency, yes. Did you go into the accounts?\"\n\n\"No. I wasn't sure how to do that.\"\n\nHe nodded. \"Well, let's confirm that, shall we?\"\n\n\"What do you mean?\"\n\nThe smile came back at knowing something I didn't. \"You can see every transaction on electronic currency. Come with me.\"\n\nHe rose and, sandwiched between him and Mitchell, I had no choice but to follow him out of his office and down the hall to another room that was fitted out like a real office: desk, chair, filing cabinet, and computer. It was spartan, not like the luxurious den he called an office down the hall. He sat. I stood.",
        "\"I told you there are no electronics in my office. This is where the legitimate business takes place.\"\n\n\"I think we both know you're not a legitimate businessman, Regan.\"\n\nHe smiled like a shark, white teeth and humorless. \"Know and prove are a world apart.\"\n\n\"Why go to the trouble of a eurobond certificate?\" I asked while he was booting up.\n\n\"It's complicated.\" His tone said I probably wouldn't understand.\n\n\"Yeah? I figured out your certificate dodge.\"\n\nThat got me a sharp glance. He didn't like being slapped back with a reminder that I wasn't some dumb pawn for him to move around the board.\n\n\"The exchanges available to upstanding American citizens are now sharing their identity-verification information with law enforcement. The FBI knows who owns what account. However, while they might know some Saudi prince owns one, they can't do too much to him because he's on foreign soil and not a U.S. national. Maybe freeze his assets if they can prove something, but that's rare because pissing off a Saudi prince upsets trade agreements. Follow me?\"\n\n\"Yep.\"\n\n\"So the answer is obvious. Have one of those foreign nationals create the account, put the money in it, then send you the credentials. It's in his name, but you have the money. You filter it out little by little at a rate that isn't suspicious. The transactions look like his.\"\n\n\"Why don't you just encrypt the information and send an email?\"\n\nI got the contemptuous expression again. \"I told you once about things like Pegasus. You didn't check it out, did you?\"\n\nI admitted I hadn't.\n\n\"Almost anything electronic can be snooped, even without you knowing it. And if the encryption is too hard to break, or if you're going places on the darknet to use exchanges that aren't known to legitimate businessmen, it gets you attention of the kind you don't want. You don't look legitimate anymore. Pretty soon they're going through your life with things like Pegasus and search warrants.\n\n\"But rich people couriering around financial instruments? That happens all the time. Even if some FBI agent finds them, they don't mean anything. Not like an encrypted file on a hard drive which is suspicious just for existing. If they find a list of account numbers and passwords in a safe, they go looking. If they find certificates, they let you keep them or impound them until a hearing, but they aren't curious.\n\n\"Plus, there's nothing that some hacker can extract if they find some way into your system, whether they're police, NSA, or even the real geniuses out there on the darknet who'll happily steal from anyone.\"\n\nPersonally, I didn't buy it. It felt like a bunch of boys playing at a James Bond movie. \"Look at me, Ma. I've got a secret decoder ring.\" I controlled the sneer.\n\n\"And what is your world such that it lives like this?\"\n\nI got that shark smile again. \"Labor relations consulting.\"\n\nInteresting that he'd used the same phrase Charlie Everett had. I'd debated whether he was in the body trade with Everett, if that's what the money was. But I'd googled and it seemed like traffickers made about $40,000 a head. I doubted Gibson's \"maybe a couple\" was eight hundred bodies at a shot.\n\nHis attention turned back to the screen. He brought up a Tor browser&mdash;more Wikipedia on my part&mdash;and typed.\n\n\"Well, it appears you were telling the truth.\"\n\n\"Perfect. We're done.\"\n\n\"No. We're not. These are worthless now. The money's been moved.\" He didn't sound surprised by that. \"But it was moved the day after Beck took them, over a week before I talked to you.\"\n\n\"Not my problem. You wanted the certificates and a name. I got both for you.\"\n\n\"Oh, I think it's very much your problem. Everything I said that first time in your office still holds. I want my money back and you're going to find it. Or else.\"\n\nThe threat against Jess. Plus Sydney was in the mix now because Mitchell had seen the moment of closeness in the corridor outside Emerald's apartment.\n\n\"Regan, you need to get one of your financial whizzes to track it. I don't know shit about tracking this stuff.\"\n\n\"You're not tracking digital currency. You're tracking a person.\" He pointed to a line on his screen. \"That's the first move of the money. That got it into another account in case I had a copy of the keys to the first one. It made it unreachable to me while it's filtered through a mixer.\" He looked to see if I was following. I was up until that last term. \"It's one way bitcoin is laundered, but it doesn't work with large amounts. You need to do it little by little.\"\n\nHe pointed to another line.\n\n\"But that's a decent chunk coming back out of that account. I'll bet anything that address is owned by an exchanger. You don't do a runner with only bitcoin because you can't spend it in hotels or with airlines. There's cash somewhere. Find who has that and we'll know who has the keys for the rest of it. You're after a person with cash. Old school, Harry, and you know how to do old school.\"\n\nI thought about Beck on the run. I thought about Kimi, still unaccounted for. I thought of Nikki, back in her apartment under the same orders as I was: you do not leave the city or we get a warrant as a material witness.\n\nI thought about Jess and Sydney, and the hulking shadow standing behind Regan.\n\nAnd that made me think about Charlie Everett. He was a guy who'd slipped my mind in the excitement. Did I know Everett's fate for certain? No. But I had a hunch, and hunches were the only thing between me and some of those bullets lately.\n\n<p align=\"center\">\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</p>"
    ],
    "authorname": "chasten",
    "tags": [
        "noir",
        "hard boiled",
        "hard-boiled",
        "detective",
        "prostitute",
        "escort",
        "new york",
        "mystery"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-spill-of-blood-ch-04"
}