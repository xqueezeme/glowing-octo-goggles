{
    "title": "Alice and I",
    "pages": [
        "I'm writing again. Been a while since things have been a little odd in my personal life.\n\nTo the readers;\n\nWhile this story does have sex eventually, there is a fairly long build up with a focus on the characters and the narrative in general; just so you're warned. It'll take a while to get there, but hopefully it's worth it to many of you.\n\nA note about the names. Lyssa is meant to be pronounced like the \"lis\" in \"list;\" \"Lis-sah,\" rather than \"lee-sa.\" As for the actual protagonist, Arun is pronounced \"ah-rune,\" but with short \"ah.\" So perhaps \"a-rune\" is more accurate.\n\nI'll be trying to write more now.\n\nI hope you all enjoy this. It's the first story I've managed to complete in a while, even though there are several others unfinished but waiting for me.\n\nThanks for reading.\n\n--- --- --- --- ---\n\nIt was about an hour into the party and it took me about a minute to figure out why Gabrielle had left me to join the group by myself. I managed to catch her sigh and the eye roll first; then she wished me luck with following the conversation.\n\nWhen it came to the conversation itself, I couldn't quite figure out if I was too stoned, or not stoned enough. However, I was thankful that the painkilling effects were active. The pain that usually accompanied the scar running down the left side of my back was almost unnoticeable.\n\nThere were three of them in the group in front of me, all stoned and standing with relaxed postures, discussing consciousness. I couldn't work out what they were trying to say; something about what it was or whether it could be transferred or shared with someone else. I hadn't ever given it much thought before this. There was mention of the mind/body discussion and Cartesian dualism, at which point I started feeling as though maybe I didn't want to be standing here after all. It wasn't that I didn't like philosophical discussions; it was more that I never felt I had a proper grip on anything like that. I always felt like there was something missing in what was being said.\n\nWhen I looked around to see if Gabrielle was anywhere nearby, I caught her glancing at me and flashing a grin. She was eating out of a crisps packet, talking to a couple that I hadn't seen since secondary school. I knew I'd have to go greet them at some point, even if it was something I didn't particularly want to do.\n\nActually, I only came to the party with the hope of seeing four people; Gabrielle, Grain and Amelia, but most of all, Alice.\n\nI heard my name and looked back to see all three of the others looking at me.\n\n\"Pardon?\"\n\n\"I said, what do you think?\" Alan asked me. He was plump, dark haired and had one of the most confident grins I'd ever seen on anyone; helped by the years of wearing braces in school. I could still remember a time when Alan refused to smile because he was too self-conscious about his left incisor looking prominent.\n\n\"About what?\" I asked, realising I'd completely lost track of the conversation.\n\nAlan, James and Gordon glanced at each other. Then Alan raised an eyebrow at me and said, \"About what we've been discussing!\"\n\n\"Maybe he's too stoned to follow,\" James commented.\n\nI didn't bother to contradict this notion because I didn't really care about the discussion. Yet, somehow, I could not find a way to escape them in a manner with which I was comfortable. They might have noticed I clearly didn't want to be near them and as stupid as I thought it was, I felt a little guilty about this.\n\n\"I just don't quite get what you're discussing,\" I told them.\n\n\"What do you mean?\" James asked with that famous look of his; the one that was designed to make you feel stupid when you couldn't join in with him. It never worked on me.\n\nI considered carrying on with the discussion but the truth was, I had never really felt fully comfortable around any of them, even when we were all in school and I realised all I really wanted to do now was leave them to it. A tiny bit of the Dread kicked in and I felt it in my stomach. I had to think of a way to extricate myself from this without feeling too anxious.\n\nI said, \"To be honest, I stopped listening. I started thinking about something else related to what you guys were saying.\"\n\n\"What's that?\" James asked.\n\n\"I was just thinking about whether there are different cultural definitions of 'consciousness.' I mean, I figured since you all were looking at it from a Western point of view, maybe there's a totally different way of looking at it all. Maybe something that'd make more sense to me.\"\n\n\"Or maybe you just don't get it,\" James said, that look of his getting worse.\n\nAmazingly, that was all it took to make me say more. \"That's possible. But you realise all of you just made a bunch of assumptions while you were talking about it?\"\n\n\"What do you mean?\" Alan asked.\n\n\"Well, first of all, the whole thing about transferring your consciousness to someone else's body. I think that's sort of impossible unless you rewire someone else's brain.\"\n\n\"Why would it be impossible?\"\n\n\"Well, no one knows what consciousness really is. I mean, no one knows what makes it manifest, but there are things that happen that shut it down so I'm guessing it has a biological basis; that it's somehow tethered to the brain or something, you know? Like, when people get anaesthetised, their consciousness gets shut down until they wake up again. And I guess since a person is their memories and all of that depends on their experiences and how those experiences wire their brains, then their consciousness must be different to anyone else's, right? And maybe if you tried to transfer it, or share it, it'd mean having to rewire someone else's brain too so they could actually experience it the way it's meant to... or something. Or maybe it just wouldn't be compatible with another brain. Like it'd cause a total meltdown in that other brain.\"\n\nI wasn't even sure if I'd gone off on a tangent somewhere. Part of me wished that Grain was there. He had a habit of being quiet and thinking through concepts and ideas before he tried articulating them in a manner which was much easier to understand.\n\n\"Anyway, all I heard from any of you is that you're talking about things which just involve having to assume a lot about the mechanisms involved in what makes anyone conscious. And, I don't know... I just don't get it. Because I don't even know what makes someone conscious, let alone ideas about what you can do with that.\"\n\nAlan, James and Gordon were looking at me, clearly a little annoyed at what I'd said. I wasn't sure what to do in this situation and the Dread started creeping in again.\n\n\"Well... I guess he has a point,\" Gordon said quietly.\n\n\"We know we're conscious,\" James said, but this time his voice was slightly less sure.\n\n\"I'm not disputing that,\" I said. \"I'm just talking about the whole transferring and sharing thing. We know we're conscious, but what does that even mean? What makes us conscious? What makes us look at ourselves and know we're looking at ourselves?\" I asked.\n\nNo one said anything.\n\nThen I saw her.\n\nI noticed straight away that she had heavy eye make up on and dark, dark lipstick. The best way I could have described the colour was some sort of midnight red, when really it was probably just a shade with a name with which I was unfamiliar. She told me she wore her make up like that as a sort of defence against people; a mask, I suppose. I never told her I loved the look of dark lipstick on a woman, especially on someone like her, who had porcelain skin.\n\nI hadn't seen Alice for about five years or so. She was holding a bottle of beer, barely suppressing a smile while looking at me, leaned up against the wall just a few feet away. I had no idea when she had arrived. I smiled lightly because it was all I could think of to do. Alice smiled back and seeing that made me smile inside, and that inside smile was uncommon.\n\nI suddenly thought about the last time I'd seen her, in her small flat, lying on the floor after having smoked a joint and staring at both the light bulbs in her living room ceiling, imagining they were both opposite poles with lines of attraction drawn between them. Somewhere in between listening to her voice talking about her upcoming modelling jobs, I somehow managed to replace the light bulbs with an image of me and one of her, with lines in between but never touching. Later, the image became her stretching her hand out to me.\n\nWhen she'd asked me what I was thinking about that night, I'd just closed my eyes and told her nothing. She was just a friend then; she was just a friend now. Even being in her flat that night was a first time event which had only occurred because she was leaving town soon after.\n\nThe way Alice and I had got to know each other was unusual, to say the least. We were at the same school together and one year we'd had one major shared experience which I suppose imprinted a bond in us, though my mind spent ages downplaying it. The intermittent muscle pain in my back had a specific cause; when Alice and I were around thirteen, she was almost hit by a car. I saw it coming and reacted immediately without thinking. I pushed her out of the way and got hit instead. The car sent me flying into a pile of left out rubbish from a construction site. The things had overflowed from a skip onto the ground and I found myself getting hurled into a pile of metal, glass and hard brick. The pain was horrible. Thankfully I passed out.\n\nAlice came to see me in the hospital often. I never let it be known how much I was hurting or how bad it was. It had fucked up my back, but more than that, it had affected my neurological system. My spinal cord had been a little bruised and some of the surrounding nerves were also affected. The scar tissue was unpleasant to look at; lots of deep ones and a few scars which stretched easily half a foot or so. My back was a criss-cross of pain.\n\nIt wasn't as bad now but I still didn't like to see it. I had never allowed anyone to look at me topless, except for my mother and sister. Not even Alice, from whom I hid the truth about the pain. I think sometimes Grain and Amelia suspected something was physically wrong, but they never asked or said anything. Gabrielle had figured it out early, though, and I only knew because she let it slip once when she was drunk. She never mentioned it after that because she was following my lead in keeping silent.\n\nAlice had felt so guilty about her carelessness that I couldn't really deal with making things awkward by showing her how much it had really affected me. Somehow, that ended up extending to being silent about it to everyone else I knew.\n\nFor a while after I left hospital and went back to school, Alice would often be near me and speak to me as much as she could. She was one of the more popular kids at school and it meant that I got attention from other kids I didn't want to know. She did notice that eventually and made an effort to make sure I got space from them.\n\nThe problem was, along with the physical pain, it seemed as though the accident had left a bit of psychological trauma. This would seem obvious in hindsight, but at the time, I wasn't really aware of that particular consequence. I found myself withdrawing from her and everyone else until one day I apparently had some sort of breakdown. At least that's what people called it. To me, it was simply me moving away from the world a little and quite honestly, I don't have much of a memory of that period of my life.\n\nSometimes I wonder if the breakdown was inevitable. I never associated what happened with the word 'trauma,' and I often found myself wondering whether I would've lost sense of who I was if I'd never had that association presented to me. That thing about self-fulfilling prophecies and all.\n\nI was jerked back to the present by the sound of Gordon's voice. He was shaking his head and saying, \"Fuck this. I don't know what you're on about. I'm getting another drink.\"\n\nThe others suddenly agreed and walked away, leaving Alice alone with me and letting me breathe in relief from finally being free of them. She quickly turned her head and moved out of the way so they wouldn't see her face. I watched them go without much interest, though now I was wondering why they'd suddenly decided to stop the discussion.\n\n\"Maybe you got too deep for them,\" Alice said in her low voice, as if she'd known what I was thinking.\n\nI looked at her. \"You think so? I wasn't even sure what I was trying to say. I think I might have smoked too much weed.\"\n\n\"I have no idea, Arun, but it's nice to see you haven't locked up your brain.\"\n\n\"I don't think I could, even if I wanted to.\"\n\nShe smiled and came up close to me. Then suddenly she put her arms around me and squeezed. It was a real hug and it made me feel a twinge of pain in my upper back but I ignored that because I was more in awe of how warm and firm her hug felt. I was usually awkward with hugs so I settled for putting my arms around her and lightly pressing before letting go after a few seconds, which felt a little more perfunctory. She held on for a bit more and let go finally, smiling as she faced me properly.\n\n\"It's so good to see you.\" I could hear the emotion in her voice.\n\n\"Likewise.\"\n\n\"Five years.\"\n\n\"Yeah. And things are going pretty well for you.\"\n\nShe rolled her eyes. \"I'm already over it.\"\n\n\"Yeah?\"\n\n\"I just want to go back to uni. Isn't that weird? I thought it was what I wanted, you know, modelling and all. Now, I'm just sick of it.\"\n\n\"At least you did it. You went for it and tried it out. Got something out of it.\"\n\n\"Yeah. I suppose.\"\n\nShe'd been discovered through an agency and somehow managed to shoot to prominence within a few months in the more specialist model scene involving pin up idols, burlesque and Goth-themed magazines. Alice had always had model looks for as long as I could remember, even though I didn't really notice until I was around eighteen or so. That was nearer the time we were going to be leaving school for university and the reality of all that time apart was becoming more tangible.\n\nHer hair seemed even more voluminous now. It was dark and straight. Her eyes were smouldering and light grey. She had a long neck and a curvy body. In fact, it seemed now she had gained weight since I'd last seen a picture of her on a poster; though it was probable that the poster had been a manipulated image. She was about my height too, and I wasn't very tall at all. I used to wonder if that would work against her, but obviously not.\n\nIt'd been five years and she looked even more beautiful than ever.\n\n\"What you thinking about?\" She asked suddenly.\n\n\"Hmm? Oh. Nothing.\"\n\n\"I see that hasn't changed either.\"\n\n\"What?\"\n\nShe smiled and shook her head at me. \"Nothing.\" The tone of voice was almost mocking.\n\nIt felt familiar. I never had quite figured out why she bothered to call me every six months or so for a talk, despite the fact we were only close initially after the accident. Even then, I'd drifted away from her afterwards. She just took my number one day and started using it. She never expected me to reciprocate, though I did try when I remembered now and then. Occasionally I even got lucky enough to speak to her for a lengthy amount of time, given how busy she was.\n\nI suppose in some ways she didn't want to lose touch and had realised the best way to maintain it would be in a relatively impersonal way, like phone or email. I was glad she'd done that.\n\n\"Come on, time to get a drink for you.\" She took hold of my arm and pulled me with her toward the kitchen.\n\nA couple of hours later I was watching them all interact. More people had turned up, which meant that Gabrielle kept close to me. If it was her way of keeping an eye on me, she wasn't very subtle about it. Sometimes I still wondered if it had been a good idea to mention the Dread to her but at least it was more comfortable to have her there and not have to face dealing with most of the others.\n\nEnough people had turned up that everyone felt obligated to mingle and talk to people they hadn't seen for a while in some cases. It also meant that Alice had soon attracted attention from a myriad of different people, mostly the men, who one by one re-acquainted themselves with her. She seemed to be taking it in her stride from what I could see and not for the first time, I wondered if it was something that happened to her often.\n\nDespite my initial misgivings about coming, I was actually enjoying myself. Seeing some people had filled me with some kind of emotional warmth.\n\nAfter all that, though, I ended up staring at the way the light hit Alice's creamy skin on the shoulder. She was wearing a string strap tank top that just about showed off her midriff. It meant I could see some of her back too. I had always liked the curve of it. In the dim light, there was a shadow going across her back which accentuated the contours of her flesh.\n\nShe seemed to be taking the attention politely from a group of men that included James and Gordon. I could tell she probably wanted to be left alone but Alice had always been quite polite about things like that. I made the assumption that this was something she was used to; it didn't once occur to me to go and rescue her from them. After a little more talking to different people, it was around midnight that I decided it was getting too rowdy for me and I told Gabrielle I was leaving.\n\nShe took me to the hallway and then next to her front door, shutting the door to the party room behind her so the sound was dimmed.\n\n\"Why are you going already?\" She asked. I heard the concern in her voice.\n\n\"I'm tired. And... it's midnight.\"\n\n\"I tried to tell Jean not to invite so many people, but you know what she's like,\" Gabrielle said, correctly guessing yet another reason why I felt I wanted to leave.\n\n\"It's your cousin's party, Gab. She can invite as many people as she likes.\"\n\n\"Hey, it was supposed to be my party too. Well, sort of.\"\n\n\"You didn't invite that many people.\"\n\n\"Hence the 'sort of.'\" She narrowed her eyes at me. Then she asked, \"You sure you have to go?\"\n\nI nodded.\n\n\"Well. Hmm.\" There was something she wasn't saying. I raised my eyebrows in a question. She did the same in reply, almost mockingly, and then relaxed her face and shook her head. \"It's nothing.\"\n\n\"You sure?\"\n\n\"Yeah.\"\n\n\"Okay. Well, I'll speak to you soon, okay?\"\n\n\"Hey, did you at least say goodbye to her?\" She asked.\n\n\"Hmm?\"\n\n\"Alice. Did you say goodbye to her?\"\n\n\"Well, no. She's pretty busy with all the guys around her. I didn't want to disturb her. Besides, it probably would've taken ages.\"\n\nGabrielle narrowed her eyes at me and closed her mouth in a thin line for a moment.\n\n\"What's with the disapproving look?\" I asked, suddenly nervous at seeing it. I thought I'd said or done something wrong without knowing it.\n\n\"She'd love it if you disturbed her right now.\"\n\nI shrugged. \"If you say so... but she still looks busy. And I want to leave.\"\n\nGabrielle turned to look back at the party room and then looked at me with a resolute expression. \"Go wait outside.\"\n\n\"What?\"\n\n\"Wait. Outside. Please. Simple enough to understand, no?\"\n\n\"... Okay, fine. I'll be outside.\"\n\n\"Good boy.\"\n\nOutside was balmy. It was a few weeks into summer and already the temperatures were reaching the heights that most people couldn't tolerate. I didn't mind at all, but even I had my limits. I suspected by August, I would be tired of the weather even if I preferred it to the cold. I waited for a few minutes before I started thinking about leaving, whether or not Gabrielle was coming back and just around the time I was thinking of calling her on her phone instead, Alice appeared at the door. She turned to look at someone inside I couldn't see and then waved briefly before shutting the door behind her as she stepped out into the warm night.",
        "\"So, you were going to go without even saying goodbye to anyone?\" She asked with an amused look.\n\n\"I said bye to Gabrielle. Everyone else was um... busy. I guess,\" I said. For some reason, it seemed a very flimsy excuse now that she stood in front of me. For a moment, I stared because of the way her skin was being lit up by the strong moonlight.\n\n\"I'll give you a lift home,\" She said. \"Or a lift wherever you're going.\"\n\n\"Oh, it's okay, you don't have to--\"\n\n\"I'd like to, Arun. I'd like to spend some time with you, if that's okay?\"\n\nIt sounded like a serious question. I faltered, wondering whether I really wanted company at that point, especially because of the way she was looking at me. There was no smile or amusement; just a touch of nerves. It seemed out of place.\n\n\"Yeah, that's fine. Uh, where's your car?\"\n\nShe smiled lightly and jerked her head towards the left. \"I parked it up on a side road over there. Come on.\"\n\n\"You have fun tonight?\" I asked her as we walked down the road.\n\n\"It was nice seeing some people. Been ages. Shame about the cloud of testosterone.\"\n\nI couldn't help but laugh at that description.\n\n\"Took me forever to kind of say my round of goodbyes. That's why you had to wait so long. Sorry about that. I should have just taken a leaf out of your book and vanished like a mysterious stranger of the night!\" She said with a theatrical flourish involving her hands waving off into the distance.\n\n\"It's okay. Does that happen a lot?\"\n\n\"What? A bunch of men wanting to hang around me in a big circle?\" She asked, flashing a grin as we turned the corner. \"That sounds incredibly dirty, doesn't it?\" She laughed. \"It doesn't happen a lot, no. But... tonight, I don't know. Must be something in the air.\"\n\n\"Maybe.\"\n\n\"My car's just up there. Where do you want to go?\"\n\n\"I was just thinking of home.\"\n\n\"Ah,\" She nodded. Then, \"You hungry?\"\n\nIt wasn't until she asked that I realised it'd been hours since I ate. \"Actually, a little bit, yeah.\"\n\n\"I know a 24-hour diner if you want to get a bite to eat?\"\n\n\"Sure. If you're okay with driving us there.\"\n\nAlice gave me a look. \"I have no plans for tomorrow. If you wanted to, I'd drive halfway across England with you right now.\"\n\nShe looked so serious that I couldn't really think of any reply. I nodded instead and thankfully she finally stopped in front of a car. I stared down at it.\n\n\"That's your car?\"\n\n\"Beautiful, isn't he?\"\n\n\"She. Cars are female,\" I said automatically. Years of listening to my uncle rave on about cars had obviously had an effect.\n\n\"He. My car is ALL MAN!\" She said loudly. Then she looked around in case someone had heard. \"I forgot how late it is.\"\n\n\"He's beautiful. A BMW i8? You are clearly making more money than I realised.\"\n\nShe grinned and unlocked the doors. We sat inside and got comfortable.\n\n\"Actually, an uncle of mine is an investment banker or... I don't know. Something like that. One of those arseholes that everyone hates because they're making money for rich people who don't need it. He gave me some good advice on investments after I made my first year of money.\"\n\n\"Oh.\"\n\n\"I just hope none of it was dodgy money. I don't think it was. I don't think he'd do that to me.\"\n\n\"But he would to others?\" I asked, looking around at the interior. The car was ridiculously comfortable and the dashboard had clean lines with rows of buttons and a couple of screens. The area behind the steering wheel was all digital, something I had no idea about and was surprised to see a screen light up with the speedometer on display as she started up the car.\n\n\"Who knows with people who worship money?\" Alice shrugged.\n\nI gave her a dubious look.\n\nShe caught it and smiled. \"Relax, will you? I can promise you this car was not bought with dirty money. My uncle's not that kind of person. His brother-in-law was, though. He's in prison for fraud.\"\n\n\"Oh.\"\n\n\"It's one of those family things no one talks about but it gets awkward at reunions. His wife didn't show up for a couple of years in a row until my mother had a go at her and told her it wasn't her fault. It was a shock to everyone, really.\"\n\n\"That's unfortunate,\" I said, unsure of what else to say. I still couldn't quite believe I was sitting there with Alice of all people. The seat was even okay on my back, which was feeling a little tired. I wondered how long we would be out. Having said that, the car was so comfortable once she started driving, that the desire to go home had nearly disappeared altogether.\n\n\"Did you have a good time?\" She asked, turning onto the main street.\n\n\"It was okay.\"\n\n\"You still have that thing about not wanting to be around people?\"\n\n\"... It's a lot better now than it was before.\"\n\n\"That's encouraging.\"\n\n\"Yeah.\"\n\nShe must've sensed I didn't really want to talk about this, because she turned the focus on herself. \"I feel like that occasionally these days. There's nothing like being exposed to the camera in nearly your entire birthday suit that makes you want space sometimes.\"\n\n\"Uh... I wouldn't know.\"\n\nShe gave me a sheepish look. \"Sorry. Too much information, huh?\"\n\n\"It's okay. It wasn't too much. I just... I'd never thought about it before, I guess. Sometimes I forget you've even done nude work.\"\n\n\"I always figure that's most of the reason I end up with men trying to have a go.\" She paused briefly and then slowly said, \"Um... I'm kind of curious about something.\"\n\n\"Oh?\"\n\n\"Have you ever actually seen any of, you know, those kinds of pictures of me? The nude photo-sets and all.\"\n\n\"Actually, no. I've seen the first few pictures of some of the photo-sets but never anything nude. In fact, not even underwear.\"\n\n\"... Wow. I'm kind of shocked.\"\n\nFor some reason that seemed like an odd thing to say to me. \"Why?\"\n\n\"Well, I don't know... I just... Actually,\" She grinned, \"I don't know whether to be offended or not.\" Then she laughed somewhat shyly.\n\nI had no idea how to react to this, so I didn't say anything.\n\n\"So, what stopped you looking?\" Alice asked.\n\n\"I...\" Good question. I had no real answer to it. Why did I never look? Did I just not want to see her? Be reminded of her? Or was it just because it seemed like I'd be invading her privacy? Then again, how many people must've seen her nude in those poses?\n\n\"Arun?\"\n\n\"I don't know. I think maybe I felt like it was too intrusive. Like I was doing something wrong.\"\n\n\"Wrong?\"\n\nI shrugged.\n\n\"That's actually kind of sweet.\"\n\n\"Is it?\"\n\n\"Yeah. But you are aware that thousands of people have probably seen those pictures?\"\n\n\"Sure, but most of them aren't your friends.\"\n\nShe turned her head briefly and glanced at me with an odd expression I couldn't decipher. Then she was looking forward again, looking deep in thought. I felt like asking her what she was thinking about but this was a conversation I'd never had with anyone and I didn't quite know which way to go with it.\n\n\"You make a good point,\" She said eventually. \"I suppose maybe some of my friends have seen it. Maybe that doesn't really matter though. Well... just so you know, I really don't mind if you look.\"\n\n\"... I will keep that in mind.\"\n\nShe gave me a grin which was slightly unsettling after what she'd said, but in a good way. If that is possible. I found myself forcing my eyes to look out at the houses and high street shops we were passing.\n\n\"Did you have a favourite?\" She asked.\n\n\"Favourite what?\"\n\n\"You said you'd seen the first few pictures of a few shoots I'd done. I wondered if you had a favourite.\"\n\nI felt too embarrassed to meet her eyes. \"Did you really just ask me that?\"\n\n\"Yes, Arun, I most certainly did. Judging from that reaction I'd say I touched a nerve or something,\" She said in a playful tone.\n\n\"A nerve? No, I just... I mean... most of your photo-sets were kind of... I mean they had a sexual focus.\"\n\n\"Didn't stop you from looking at a few.\"\n\n\"I feel like I've just put myself into a huge dark room and I can't see the exit.\"\n\nShe laughed. \"You don't have to answer if you don't want to. I'm just curious. It just occurred to me that we've never really spoken about that kinda thing.\"\n\n\"Your pictures?\"\n\n\"Well, just your sexual side, I mean. Or mine, for that matter.\"\n\nShe was right. It wasn't something we ever really touched on. That made sense though. After all, we were friends, not anything else. So, we wouldn't talk about things like that, would we? Unless, of course, this was another social convention that had flown over my head.\n\n\"I wasn't aware we were talking about our sexuality...\" I ventured carefully. \"Just your pictures.\"\n\n\"Well, I happen to think whatever you tell me, it'll reveal a bit about yours.\"\n\nThis was something I agreed with to an extent. After all, if I'd seen pictures of her that involved her expressing her sexual side to an audience of voyeurs and I'd preferred some over others, it wouldn't be a hard leap to judge that I had certain preferences where it came to what women wore in sexual contexts.\n\nAlice was stunning. In part, I think I'd never bothered looking beyond the first few pictures of any of her photo-sets because not only did it feel intrusive but I was also certain that I wouldn't ever really get the images out of my head. Without even realising it, I was already rifling through my memories of the ones I had seen and what she'd been wearing in them.\n\nThere was a set where her curves were covered by a short red dress with straps and a hem that came down to just above her knees, including a fair amount of cleavage that had made me realise that she was more well-endowed now than she had been before she left. Another where she wore a black dress that hugged her figure all the way from collarbone to thighs; seemed to be made of a stretchy cotton blend. Another where she wore a corset and a pair of jeans. She'd done over three hundred shoots in the past five years and I had only briefly seen the beginning of perhaps twenty at most.\n\n\"Let me guess, now you just can't stop thinking about me naked,\" Alice said. I could practically hear the smile in her voice.\n\nThat made me so nervous that I immediately tensed up as I looked at her and felt a shock of pain shoot across my mid back. I just about managed to stop myself from crying out but I couldn't stop the wince that creased my face. Thankfully, she was focused on the road in front of us and didn't see anything.\n\nThen, for some reason I could not fathom, I told her. \"There was one you did about two years ago where you wore a black dress that was almost like a second skin. Exposed your shoulders. Neckline went across the collarbones and it ended mid-thigh. Looked like stretchy cotton.\"\n\nI was sure she was looking at me when I finished but I didn't meet her eyes. I was still surprised I'd even told her.\n\n\"I liked that dress too,\" She said eventually. \"I still have it.\"\n\n\"...\"\n\n\"Had to wear nipple coverings in the shoot, though. Otherwise the dress made some things... kinda obvious. And we weren't really going for that in that particular shoot. Besides, I guess a lot of guys like the slow reveal.\"\n\nI didn't ask what she meant but I could guess. There'd been another set where I'd seen briefly that she had prominent nipples that cast little shadows in contrast to the bright red of the tight top she was wearing at the time. I tried to force the image out of my mind and tried to replace it with something else. I didn't really need to go down this road; it was inappropriate.\n\nWe were both silent for nearly a minute and it felt like forever in the small space of the car. I suppose that meant it was an awkward silence, but I didn't feel awkward within myself. I wasn't sure about her. I didn't know whether to bring it up at the risk of actually making the atmosphere awkward.\n\nAlice broke the silence. Maybe she'd been thinking the same things.\n\n\"I need to come up with some kind of strategy to extricate myself from situations like that. I mean, usually I can, you know? But I mean at a party or something, because there isn't really anywhere to go when you're at someone's place.\"\n\nIt took me a few seconds to realise she was talking about earlier in the night when she'd been surrounded by those men. \"You could've told them to just leave you alone?\" I suggested.\n\n\"Nah... That feels too rude. For some reason, I'm still too polite for my own good. Amazing considering the complete wankers I've met in the last few years.\"\n\n\"Oh?\" My curiosity was now alive. \"Like?\"\n\n\"Oh, just a few agents and directors and photographers. Some of them are arrogant fuckers. That doesn't even include the couple of boyfriends I had.\"\n\n\"I thought you got on with both of them.\"\n\n\"I did before I broke up with them.\"\n\n\"Oh.\"\n\n\"They turned into a couple of twats. It's amazing what breaking up will do to people.\"\n\nI shrugged. I'd only had two relationships so far in my life and both had ended more or less on amicable terms. I stared at the glow of the lights from the radio, mesmerised by the brightness, while she glanced at me a few times. I could just about see her doing that, but could not think of a way to react. It'd been so long since I last saw her, I was actually beginning to feel a little nervous in her company. It'd been fine at the party because there were so many other people around. The frequency of her glances made me wonder if she was feeling nervous too.\n\n\"Are you okay, Arun?\"\n\nI nodded.\n\n\"Okay. You just looked deep in thought.\"\n\n\"What do I look like when I'm deep in thought?\"\n\nShe opened her mouth and then shut it. She focused on the road momentarily, then glanced at me and said, \"Like you're deep in thought.\"\n\nI raised my eyebrow at that and she laughed. Somehow it lessened the nerves.\n\nSeveral minutes later, we were at an all-night American style diner on an A road just outside of London.\n\nShe'd ordered herself a burger and fries and was happily munching away on them. She always picked up one fry at a time and always took at least two bites to eat each one, no matter how short it was. I found it fascinating. I wondered if it was a habit she'd picked up from watching her weight during her modelling career.\n\nI was about to ask her about this, but she spoke first. \"Arun, how have you been? Seriously.\"\n\nI paused at this question. There seemed to be a depth to it I couldn't quite figure out. \"Fine. Why do you ask?\"\n\n\"Gabby was acting a little funny about you when you left.\"\n\nI was reminded of the feeling I had that Gabrielle had wanted to say something to me. I shook my head. \"I wouldn't know what that's about.\"\n\n\"Hmm. So, I have several weeks of doing nothing before I figure out what I want to study and so on.\"\n\n\"Several weeks of doing nothing sounds great,\" I said, looking at the dessert menu.\n\n\"It does. I bet it'll get old after a couple of weeks though. Maybe I need a year out from everything and I can just spend it messing about. Arun, how often do you work?\"\n\n\"Part-time; five days a week at most, few hours a day. Why?\"\n\n\"Oh, just wondering. Now that I'm back, I was thinking maybe it's likely we'd see each other often.\" She said this in a slightly quieter voice and when I looked up from the menu I could see she was keeping eye contact to a minimum.\n\nShe had a look on her face that I didn't quite recognise. Then again, I figured there was probably a lot of things about her I had to learn, since I hadn't seen her for so long. I mean things you couldn't learn from talking to someone on the phone; the way their body moved, their mannerisms and any little quirks they might express sometimes. Things that can change over time.\n\n\"Where do you live, by the way, Arun?\"\n\n\"Ealing. I'm sure I've told you this before.\"\n\n\"You have, but I've never seen your flat. Gonna have to rectify that.\"\n\nAs much as I wanted her to visit and see my flat, the prospect of it made me anxious. I was very protective of my space. It was the one place where I could completely relax and not have to worry about how I might come across to someone in terms of my pain and body.\n\n\"That'd be cool,\" I said, settling on the ice cream and looking around for the waitress.\n\n\"She's gone into the back,\" Alice told me.\n\nI looked at her. \"I'm feeling like ice cream.\"\n\n\"The ice cream here isn't that great. I know another place a few minutes from here.\"\n\n\"Sounds good. How is it you know all these places to go and eat?\"\n\nAlice grinned. \"Some of us do go out sometimes, you know? It's called 'having a life.'\"\n\nI couldn't help but smile at that. \"Yeah. Okay, fair enough. I should try that sometime; having a life.\"\n\nShe nodded. \"It's something that can get interesting quite quickly. You know, if you want, I can show you a few places in the city and even around north-west London that I bet you'd like a lot.\"\n\nThere it was again; the desire she had to spend her time with me. It seemed strange to me that she would be so intent on it. It appeared she was trying to be nonchalant about it but that look I'd seen earlier on her face had appeared again; the one I didn't recognise. Of course, it'd been so long since I regularly met up with people that maybe this was perfectly normal and I was simply being paranoid or over-thinking. Or something along the lines anyway.\n\n\"Don't count on me being willing all of the time,\" I warned her. I figured it'd be at least prudent to let her know I was reluctant. \"I'm not a very going out person.\"\n\nShe shrugged and smiled. \"Maybe I can find some way to convince you to be.\"\n\n\"Like?\"\n\n\"I'm sure I can think of a few things,\" Alice replied with a strange smile. There was something else to the smile and I don't know if it was deliberate, but she leaned forward a little. Either I was getting good at noticing body language or I was over-thinking her movement; the latter was more likely. Maybe she was flirting? I don't know but I said nothing to that in return. I just gave her a nod and tried to think of something else other than suddenly noticing the hint of cleavage showing above the neckline.\n\nWe left that place a few minutes later. I insisted on paying, since she was giving me a lift everywhere and she let me do it. When we got to the ice cream place, I ordered a few scoops of chocolate while she stared at the menu, sighing.\n\n\"I think I ate too much,\" She said, putting the menu down.\n\n\"You only had half your burger.\"\n\n\"I know, but I'm not used to it. I wish I'd just had none of it now. Then I could have some ice cream.\"\n\nI suddenly felt guilty about the idea of eating in front of her, despite having had very little in the diner.\n\nShe caught the look on my face and laughed. \"It's fine. Just eat the ice cream when it comes and enjoy. I don't mind at all.\"\n\n\"If you're sure...\"\n\n\"It's fine. Honestly.\"\n\n\"Okay.\"\n\nThe ice cream arrived a couple of minutes later and I started eating, enjoying the cool chocolate in contrast to the warmth around me. Alice simply watched me eat, occasionally grinning and shrugging at me every time I looked at her and asked what she was thinking.\n\n\"I know you're thinking about something,\" I said eventually.\n\n\"Why?\"\n\n\"Because usually you're the one who keeps talking while I listen.\"\n\n\"I know, I know! But... this feels different, don't you think?\"\n\n\"In a bad way?\"\n\n\"No. Just different. I'm so used to just hearing your voice and not actually seeing you. I feel like I have to be hyper aware of how you use your body or something.\"\n\nThat made me feel wary. The last thing I wanted was her hyper-awareness noticing anything off about the way I was moving. So far though, she had said nothing and I felt reasonably relaxed, though I knew pretty soon I would want to be on my own and lying down.\n\n\"Do you have a girlfriend, Arun?\" She asked suddenly. Maybe to fill in the silence.\n\n\"No.\"\n\n\"What happened with that girl you told me about?\"\n\n\"You mean the one I mentioned last year? Whose name I can't even remember right now?\"",
        "\"Wasn't it Katie or something?\"\n\n\"Kayley.\"\n\n\"That's the one!\"\n\n\"Nothing happened with her.\"\n\n\"No girlfriends at all?\"\n\n\"Not since Joanna.\"\n\n\"Why not?\"\n\nI didn't know how to answer that. I thought of that image of Alice and I, with the lines between us but not touching. It was an image that had stayed with me since I last saw her. It was obvious to me I found her beautiful. It was equally obvious I thought she was beautiful within too.\n\nMy last girlfriend, Joanna, had eventually split up with me because I couldn't quite be myself with her and I think she could tell. She didn't outright say it, but she did hint that she felt as though I constantly had some kind of wall up. It was true, more or less. I couldn't show her my body and I couldn't always be around her. It was the same problem I had with my first girlfriend.\n\nI was convinced that if, by some amazing chance, I ended up with Alice, the same problem would be present and it would never work. I mean, there's only so far that you can go before someone gets frustrated with a lack of openness, right? Both Joanna and my first girlfriend had proven that. It was my problem and it was one I hadn't properly faced.\n\n\"Arun?\" Alice said. \"You're deep in thought again. Is it that hard a question?\"\n\n\"I haven't really thought about it,\" I told her.\n\n\"Really?\"\n\n\"Really.\"\n\n\"Oh.\"\n\n\"What about you?\"\n\nAlice suddenly looked a little shy. \"Have I been thinking of a relationship?\"\n\n\"Yeah.\"\n\nAlice smiled and shrugged. \"I haven't had a boyfriend for about a year. I haven't really felt the enthusiasm for it for a while.\"\n\n\"Same boat, huh?\"\n\n\"Well, there might be one prospect. But I don't know. You lack the enthusiasm, too?\"\n\nI gave it a bit of thought. \"I don't know. Maybe enthusiasm or reluctance don't come into it when you meet the right sort of person. It just happens.\"\n\n\"Maybe. The prospect I have at the moment is a bit of a mystery.\"\n\n\"Oh?\"\n\n\"Sort of... I'll just see how it goes, I think.\"\n\n\"Sure.\" I spooned some ice cream into my mouth and had to look away. I felt tense all of a sudden and that meant parts of my back were beginning to ache. The thought of Alice being focused on some unknown person had triggered a surge of emotions towards her, which I was surprised at, particularly since it was so strong.\n\nOf course, whoever this guy was, he probably didn't have the kinds of problems I had and it'd be easier for her in the long run. I couldn't imagine anyone not being interested in Alice; she had this aura about her. At least she'd find it easier with him. Several years ago I would have been resentful about this, but nowadays I'd accepted it was down to me to deal with myself when I was ready. The trouble was, I hadn't felt ready yet. I was unsure of whether I ever would.\n\nAlice was looking at me again and I started thinking that maybe it was time I went home. Too many things just felt uncomfortable now and for a moment I hated that part of me that wanted to be perfect and unfettered by all the bodily problems I had.\n\n\"Arun, are you okay?\"\n\n\"What? Yeah, fine, why?\" I wondered if emotions had been showing on my face. Normally I was good at hiding what I felt.\n\n\"Just... I don't know.\" She looked uneasy.\n\n\"I'm tired. I'm not usually up this late.\"\n\n\"Oh.\" Her unease had disappeared and she gave me an easy smile. \"Well, do you want me to take you home?\"\n\nI ignored the little voice in my head that made her question sound like innuendo and nodded. \"Yeah, if that's okay with you.\"\n\n\"Of course.\"\n\nOne of the waitresses came up to our table to take my empty bowl. It was a moment of distraction while I looked at the clock on the wall. It was just past 2 am; no wonder I felt so tense and out of it.\n\n\"Thanks for coming out with me,\" Alice said, as we got into the car.\n\n\"It's okay. I enjoyed myself. Thanks for the lift.\"\n\n\"Don't be silly. It was great seeing you.\"\n\n... ... ... ... ...\n\nI got woken up by the phone ringing.\n\nFor a few seconds, memories of last night came rushing back, flowing past my mind's eye like a vivid tapestry with slightly patchy parts. I remembered she insisted on walking me up to my door because she wanted to lock the image of my front door into her brain. I felt a brief guilt when I noticed I remembered the details of her upper torso and her head a little too well. I wasn't sure if something had shifted during the night or something, but it seemed as though there was more cleavage on display and a sultry look in her eyes.\n\nProbably my imagination.\n\nI answered the call despite feeling it was far too early in the morning for this.\n\n\"Arun?\"\n\n\"Grain? Hi.\"\n\n\"Hello, hello. Uh, did I wake you?\"\n\n\"Yeah, but that's okay. I needed to get up soon anyway.\"\n\n\"Oh, good. I was worried I'd have to give you an insincere apology.\"\n\nI smiled at that. \"Depends on what you say now.\"\n\n\"Well, actually, Arun, I was going to ask where the hell you were last night. Me and Amelia didn't see you at the party.\"\n\n\"I left at midnight... which is sort of quite late, generally speaking.\"\n\nThere was a pause. Then, \"We arrived after midnight?\" Another pause. \"I didn't realise. What are you doing today? In around an hour or so?\"\n\n\"I have no plans.\"\n\n\"Lunch? You, me and Amelia. Since we didn't see each other last night. Lunch at Jenny's.\"\n\n\"Two hours okay?\"\n\n\"Perfect. See you in two hours.\"\n\n\"See you then.\"\n\nI lay there for a bit because my mind began to wander again. I suddenly remembered that on the drive home, she asked when we could meet up again. Then I remembered that as she said goodbye to me, she'd squeezed my hand and smiled slightly. For some reason, the shine on her lips stood out in the moonlight and the dark red was black in places and a strange shade of purple-tinted red in others. I blinked and the memory was gone.\n\nIt had only been one day and I was already thinking about her more than I felt was right.\n\nIgnoring the few other memories that came to mind, I got up to start getting ready. It took me a while to get ready; the pain was now shooting across my lower back every once in a while, stopping me from hurrying up. I did several stretches and got myself dressed. Just before I left I saw on my phone that Alice had sent me a text.\n\nI felt my stomach twist a little as I opened it. I hadn't been expecting to hear from her so soon after seeing her. She'd written; Was supposed to meet my friend Elena later today. She cancelled. You free later?\n\nI wasn't sure how to respond to that, not because I didn't know whether I was free later, but more so because I wasn't usually in the habit of meeting people on consecutive days. Technically, though, it was still the same day as the last time I saw her and with that in mind I hovered there, my thumb poised over the keypad on my phone, wondering what the hell to say to her.\n\nI don't know. I can let you know later, if that's okay? I eventually replied.\n\nThe reply was immediate. Sure. I'm free from 4 onwards. Just feel free to call, text, etc. Talk later! x\n\nI stretched a couple of more times to try and lessen the feeling of having a kink in my mid-right back, doing it slowly and deliberately. It helped a little. My mind was still on Alice's text. I don't know why it was. After all, it was just a request to meet up. It felt like more than that, though, but I couldn't dismiss that being my mind just making up a narrative for her actions; things like she wanted to see me because she wanted to tell me she liked me... things like that. Fantasies, really.\n\nI shook my head at myself, looking in the mirror before I left. It wasn't as if I was that bad looking, I suppose. I'd always thought of myself as average despite Gabrielle's insistence I most definitely was not. On the whole, I'd inherited my mother's looks more than my father's. She was Pakistani and I looked it, though there was a lightness to my skin that had made most people guess at my mixed heritage. My sister, Lyssa, looked more English. I was sort of thin, black hair, dark eyes; just average, unless you believed Gabrielle.\n\nWhy was I even thinking about this? Probably because I felt like Alice was slightly out of my league. Or very much out of my league, rather.\n\nI rolled my eyes at my reflection.\n\nThe walk to Jenny's only took around fifteen minutes and I sat and waited for Amelia and Grain to arrive. They were always a few minutes late. I'd been there so many times that all the staff knew me by name and a couple of them came up to greet me and take down an order for drinks.\n\nI opted for a blackcurrant flavoured Ribena and started sipping through the straw while I looked around me at the other customers. Grain and Amelia arrived soon after, both apologising for being late, as they always did. They sat down, looking pretty tired. I guess they still hadn't fully recovered from the night before.\n\n\"You two got home late?\" I asked.\n\n\"Late? I think the word 'early' might be a bit more appropriate,\" Amelia answered. \"Hi, Arun.\"\n\n\"Hey. I'm guessing you have big appetites this morning.\"\n\nGrain rubbed his eyes for a moment and picked up a menu. \"I'm starving, Arun.\"\n\n\"The menu is in your hands.\"\n\n\"Yes, it is. It's the future. The future is in my hands right now.\" Grain then groaned as he pressed his fingertips to his forehead.\n\n\"You okay, darling?\" Amelia looked sideways at him.\n\n\"I knew I was going to get hungover last night. I had the future in my hands then. Why did I still drink that much?\" Grain asked, widening his eyes briefly.\n\n\"I don't know. You usually don't.\"\n\nGrain crossed his arms in front of him and laid his head on them face-down. Then he said something muffled that neither Amelia or I could understand, but we took it to mean he wanted Amelia to order for him when he pushed the menu towards her.\n\n\"We invited Gabby too,\" Amelia told me as she looked around for Angelica, our usual waitress.\n\n\"Oh, okay.\"\n\n\"Ah, got her attention. She's coming over.\"\n\nAn amused smile appeared on Angelica's face when she saw Grain. \"What's up with him?\"\n\n\"He's hungover,\" Amelia replied.\n\n\"I've never seen him hungover before. You okay there, Grain?\"\n\nGrain raised his head to look at her, nodded and in a deadpan voice, said, \"I feel absolutely fantastic. How are you?\"\n\n\"Ticking along. You all want your usuals?\"\n\n\"And Gabby too. She should be here in about fifteen minutes,\" Amelia said.\n\n\"Okay, will do. I'll get you lot your drinks too. Try not to let your head explode, Grain.\"\n\n\"I'll keep that in mind, thank you.\"\n\nAngelica grinned as she left.\n\n\"I think you made her day,\" Amelia told him as she watched her leave.\n\nGrain just responded with a smile and a shrug. I was beginning to get the feeling that something was bothering him but wasn't sure enough to bring it up. I changed my mind when I heard Amelia sigh quietly and look at Grain briefly. She was worried.\n\nSo, I asked him. By that point we had known each other long enough not to shy away from being direct.\n\n\"What's wrong, Grain? Why'd you drink so much?\"\n\nGrain smiled and sighed. \"I really needed to blow off steam. I've been kinda stressed lately.\"\n\n\"We're worried about his grandmother,\" Amelia said.\n\n\"Why?\"\n\n\"We're not totally sure yet, but we think she may have the beginnings of dementia,\" Grain said quietly. \"So, we've been sort of looking up a lot of stuff and thinking about how to proceed with this. You know, ask her to get tested and stuff like that. Talk to her. Figure out treatments. Just... stuff. There's a lot to think about.\"\n\nI knew he was holding back. He seemed close to emotionless and smiling a little but I could tell he was hiding his real feelings about the whole situation. That's what Grain had done for as long as I'd known him, but ever since he and Amelia had become a couple, he'd become a little more open and would even talk about his feelings occasionally.\n\nOn top of that, it had never been a secret that Grain was an orphan who'd been brought up by his grandmother since he was about nine years old. His grandmother meant more to him than I knew most people thought of their own parents.\n\n\"I'm really sorry to hear that,\" I said to him. It seemed inadequate but at least he could know I was thinking of him.\n\nHe smiled and shrugged. \"These things happen. Hopefully it isn't what we think, but... I guess we need to make sure.\"\n\n\"And whatever happens, we'll figure it out together,\" Amelia said, reaching for his hand and squeezing it tightly.\n\nHe nodded appreciatively and when they locked eyes together, there was a brief moment where I knew they'd gone into their own little world. I wondered what that was like.\n\nIt was funny. A few years ago when some of us friends found out from him that he was with a woman about thirteen years older, we wondered if it would ever last. It seemed like such a huge age gap to us, but once we'd met her and seen how they were around each other, all doubts had evaporated. Grain had a seriousness to him that went beyond his years and it was matched by a playful streak that Amelia exhibited once in a while. Somehow, they fit.\n\n\"She seems more or less okay at the moment,\" Grain carried on quietly. I noticed their hands were still clasped together but both had turned their attention on me again. \"We might be being paranoid, but we still have to talk to her to be sure. So, I guess that's the next step.\"\n\n\"Right,\" Amelia agreed. Then she added, \"Besides, we have some other stuff that's a little more pressing right now.\"\n\nJust like that, she'd drawn a line under the topic, maybe to stop him thinking about it too much.\n\n\"Oh?\" I took the bait.\n\n\"We kind of had an ulterior motive for inviting you out to lunch,\" She said.\n\nI looked at the two of them in turn, waiting to hear more.\n\n\"We should probably wait until Gabby gets here though,\" Amelia added.\n\n\"For what?\"\n\n\"Well, she wants to be here when we talk about what we need to talk about with you.\"\n\n\"Why do I get the feeling all of you are going to lecture me on something?\" I asked.\n\nAmelia flashed a grin. \"Because you're oh-so-astute, Arun!\"\n\n\"Uh...\"\n\nGrain shook his head, smiling lightly. \"It's not a lecture. It's just... Well, Gabby will explain when she's here. She's kind of the one who brought it up last night.\"\n\n\"Oh.\" I didn't know what to say to that. I felt a bit nervous but these were my closest friends so I knew whatever it was, they'd approach it however I found it easiest. To break the tension I was feeling, I looked at them and said, \"Just so you both know, you're being irritating with all this mystery.\"\n\n\"It's not often we get to do that, so we're fine with that,\" Amelia said with ease.\n\n\"At least I'm not the only one suffering then,\" Grain said, sighing and rubbing his temple.\n\nI couldn't help but smile at the grin that spread slowly across his face.\n\nGabrielle turned up fifteen minutes later, around the same time as Angelica was setting the food down in front of us. They greeted each other enthusiastically and when Angelica left us to it, Gabrielle turned to look at Grain and smiled widely.\n\n\"You're hungover,\" She announced. \"I've never seen you hungover before.\"\n\n\"I am. Feel free to bask in the novelty of it. It's never happening again,\" Grain said, eyeing his food. He definitely looked wary of it.\n\n\"I will bask. But after I finish this wonderfully tasty, oily and flavour filled omelette with its fattiness and all that. The sweet fattiness.\"\n\nGrain gave her a look.\n\n\"It just tastes so intense in my mouth. Explosive flavours,\" Gabrielle added.\n\nAmelia giggled at this and Grain rolled his eyes. We all started eating slowly and chatting a little amongst ourselves, though Grain was noticeably quieter and more reluctant with his food. I wasn't sure how to broach the subject of what it was they wanted to talk about but I did know I wanted to get it over with as soon as possible. I don't know why but I had started feeling some discomfort about it all and it had only got worse in the last few minutes.\n\nFinally, I decided to just be blunt. \"Is it okay if we talk about whatever it is you all want to talk about?\" I asked, looking at each of them in turn. \"About me, I mean.\"\n\nThey all slowed a little and glanced at each other. Then Gabrielle cleared her throat and nodded. \"Yeah. That's a good idea. It's mostly me, Arun, but...\" Here, she glanced at Amelia and Grain; \"They kind of noticed things too.\"\n\n\"Things?\"\n\n\"We wanted to talk to you about how you're handling things with your body and the pain,\" Grain said quietly.\n\nI stared at him. I wasn't sure I'd heard him right. The Dread started creeping up in me.\n\n\"Look, please don't freak out, Arun,\" Gabrielle said quickly. \"Just don't. It's us. We're your family.\"\n\nI looked at her and nodded. I tried to ignore the Dread, but it wasn't working as well as I hoped.\n\n\"We... No, I wanted to talk to you. Grain and Amelia said it'd be better to just let you bring it up but honestly, Arun, I don't see you doing that any time soon and I feel like I have to talk to you about this before you end up fucking up any future opportunities.\" Gabrielle's voice sounded determined now and somehow that comforted me a little even if I was beginning to feel very exposed.\n\n\"Opportunities?\" I murmured. I think I was just seizing on what she said so that she'd keep talking. It seemed far easier than over-thinking everything.\n\n\"Alice,\" Gabrielle said simply.\n\n\"Alice? What about her?\" I asked, confused. Then, realising I was beginning to feel some kind of grip on all of this, I asked, \"How did... I don't understand how...\"\n\n\"How we know you're in pain half the time?\" Grain asked, completing my thought for me. \"Come on, Arun, give us a little more credit than that. We're your only friends. You think we didn't notice?\"\n\n\"Well... I...,\" I didn't know what to say. Had I really been that obvious?\n\n\"It was back when you were going out with Joanna,\" Gabrielle said. \"Before she broke up with you, she got drunk one night and said something about you hurting. She said something about how she felt like she couldn't get to... How you wouldn't get close.\"\n\n\"Joanna? She spoke to you?\"\n\n\"Just that once. She was worried. She didn't know what to do. I said I didn't know either and I told her you wouldn't appreciate her talking about it to me.\"\n\nI felt myself feeling a little out of control now.\n\n\"You remember that night I got drunk and asked you about it? But you wouldn't say much. So, I just left it at that. I didn't want to push you,\" Gabrielle added.\n\n\"I remember that night.\" I could recall it vividly. Gabrielle had been downing shots until one of our friends got her to drink half a bottle of fizzy water. Within minutes she was drunk.\n\nFor a few moments, I couldn't say anything and neither did they. Maybe Gabrielle was trying to figure out how to keep going. I'm sure she had a point she wanted to get to but I wasn't sure if I wanted to hear it. There was a small bolt of pain going back and forth across my mid back, mainly focused on the left side. I almost felt like pushing a knuckle into the area to see if it would ease it somehow but every time I had tried something like that, all I got for my efforts was an irritating disappointment at the lack of relief. Instead, I sat, staring at my food and listening to the others' cutlery occasionally hitting the plate as they ate silently, waiting. I'm not sure what for.\n\n\"We know it hurts a lot and... it stops you doing things. That's what we're trying to say, I think,\" Grain said eventually.\n\n\"Why now?\" I asked, the question occurring to me only then. \"Why are you bringing this up now?\"\n\n\"Because Alice is back,\" Gabrielle replied.\n\n\"What does that have to do with anything?\"\n\n\"Everything,\" Grain said.",
        "\"What's that supposed to mean?\" Maybe my voice sounded a little annoyed.\n\nGrain exchanged quick looks with Amelia and then said to me, \"She was kind of asking after you lot in the few months before she came back.\"\n\n\"Like... a lot,\" Gabrielle added, taking a bite of her omelette. \"I mean, come on, you know, right?\"\n\nI gave her a look.\n\nEvidently it was a puzzled look from the way Gabrielle reacted in disbelief. \"Arun, you do realise that Alice obviously likes you a lot?\"\n\nI felt distinctly uncomfortable and a bit of pain shot up through my mid back, which was strangely followed by the image of Alice comforting me by rubbing my back. Then the image of her when she was dropping me off the night before, with the low-cut top and the moonlight shining on the swells of her breasts. I tried my best to dismiss the image and half succeeded by focusing on the others and the way they were looking at me. I didn't quite want to admit that a part of me really wanted Gabrielle's words to be true.\n\nThe image surged back and this time, it was the smile on her face. That smile. So fucking warm and beautiful and just completely for me. There was no one else on the street then, no lights except for the lamp posts and the moon. Remembering it now, it was like seeing a moment frozen in time, but the air between us was infused with emotion. I sighed. That was my imagination adding things. All she was doing was dropping me off home.\n\n\"Why don't you just tell me what it is you want to say?\" I asked finally. It was beginning to feel obvious that Gabrielle was trying to lead up to something.\n\nShe nodded and put her fork down. \"Okay, fine. I get that you're a private person. I get that you've never really spoken to any of us about the accident and how you've been since. That's fine. I'll accept that. From what I've gathered, you've at least spoken about it a bit to your mother and sister--\"\n\n\"You spoke to my mother and sis--?\"\n\n\"Don't worry, Arun, they didn't tell me anything. Lyssa refused to even entertain the subject. That was enough for me to know. Look, my point is, you've spoken about it a bit. All I need to know is you haven't been keeping it to yourself all this time.\"\n\nI didn't understand. I was about to ask what this had to do with Alice, when she spoke again.\n\n\"But I do think you need to talk to Alice about it.\"\n\n\"... Why?\"\n\n\"Because it's different with her. Look... you split up with Joanna because you couldn't go that far and be that open with her, right?\"\n\n\"... Yeah.\"\n\n\"And let's face it, Arun, she likes you and you like her. Are you going to admit that much at least?\"\n\nIt was odd. Part of me felt I should have been a bit angry at these questions because normally they'd feel invasive. Maybe it was the fact Gabrielle was being so calm when she spoke to me that helped with go with them. Maybe it was also because it'd been years and my friends had given me all the space I wanted. Gabrielle had kind of earned the right to question me about the things I wouldn't let out.\n\n\"I'll admit I might have... certain feelings towards her,\" I answered quietly. \"But you can't be sure she feels the same way. She's never said anything to me, ever. And I've never told her. And you can't either.\"\n\nGabrielle held both her hands up. I noticed that Grain and Amelia looked as though they were going to say something but Gabrielle beat them to it.\n\n\"We haven't said anything to her, Arun, we swear.\"\n\nAmelia and Grain nodded to this.\n\n\"And she hasn't said anything to us, either,\" Amelia added.\n\n\"So, don't worry about that,\" Gabrielle said. She paused and looked as though she was trying to think of something. Then she shook her head and looked directly at me, almost with a subtle implicit challenge in her eyes. \"We just want you to be happy. And I really think Alice is going to be part of that. And that means being honest, right?\"\n\nI shrugged. \"I just... I can't talk to her about it.\" I couldn't think of anything else to say.\n\n\"Why not?\"\n\n\"I don't know. We're just friends, you know?\"\n\n\"Except you're not, really, are you?\" Gabrielle asked, tilting her head slightly to one side.\n\n\"What do you mean?\" Amelia asked, looking at her curiously.\n\n\"Well, it's just... after the accident, when Arun came back to school after that year he was out, things were different with them. Everyone kind of noticed it.\"\n\n\"Yeah,\" Grain nodded. \"Sort of like, everyone knew Alice and Arun were friends, even if... it's hard to explain actually,\" Grain said after going quiet for a couple of seconds.\n\n\"This sounds intriguing,\" Amelia raised an eyebrow at him. \"Wait. A whole year? Wasn't anyone suspicious about you having been gone for a whole year? How bad your back must've been?\" She asked me.\n\nI shook my head while Grain said, \"We assumed that year had fixed him completely.\"\n\n\"Anyway, they're making it sound more mysterious than it really is,\" I said, rolling my eyes at them both. \"What they mean is, Alice tried to be a friend but I was a standoffish quiet dick and it didn't come across very well. But she didn't seem to care.\"\n\nAmelia laughed but Gabrielle shook her head readily. \"Ignore him, he's lying. He was fine. Just really quiet. And that's what Grain means. Everyone who knew either of them noticed that for a while Alice spoke more to him, so naturally it meant a lot of her friends did too.\"\n\n\"Especially since he saved her from getting hit,\" Grain added.\n\n\"So, after a while, Alice could see it bothered him and told them to back off,\" Gabrielle said. \"But then she backed off too.\"\n\n\"... That was my fault really,\" I added.\n\n\"You had a lot to deal with and process,\" Gabrielle told me. \"We just didn't understand that at the time.\"\n\nI wondered how much else Gabrielle had noticed about me, but for some reason it wasn't a question I really wanted to ask.\n\n\"There were four of us,\" Grain said. \"Lawrence and Matt as well. Other than me and Arun, I mean.\"\n\n\"Don't forget Rowan,\" Gabrielle said.\n\nGrain nodded, with a hint of that foggy eyed look which said he was reminiscing. \"That's right... Rowan. Whenever he got tired of being around Greg and the others, he'd come and hang around with us.\"\n\n\"So, you were all what? Introverted?\" Amelia asked.\n\n\"More or less,\" Grain said.\n\n\"Not much has changed, I see.\"\n\nGrain answered that with a grin and a shrug.\n\n\"They were my only friends really,\" I added, starting to think about it with some more depth. It wasn't hard to end up going down memory lane with Grain and Gabrielle. Sometimes I still look back on those years and wonder if I really experienced them. It's strange how some things stick out more than others. At the time, I felt like it was disorienting because it wasn't always easy to link up the memories together. Eventually though, I realised they were memories that just meant something to me just because of how I felt at the time.\n\nI started thinking about how Alice had been towards me. There was a weird new angle to it all that I'd never really seen before and I'm not sure why it was there. I remember for a while she just spoke more to me. Then she backed off. I realised it wasn't fair on her. I should have maybe been a bit more honest about how I was feeling. But how could I when I wasn't even sure half the time?\n\nStill... maybe I could have told Alice. She was attentive in a way that no one else I knew had ever been, or has been since. I don't know.\n\n\"Technically,\" I said quietly, the thought arriving to me suddenly, \"I only really hung around with you and Lawrence and Matt in the last year, didn't I?\"\n\nGrain nodded. \"True.\"\n\n\"Before that, I sort of just hovered around different groups, but didn't really fix myself to any. Then the accident happened and...\" And Alice was there.\n\nAlice was there. All those years of not being fixed to a group. All those years of drifting and never really feeling fully comfortable with any one group of people.\n\nThen Alice was there.\n\nAlice was my first friend.\n\nWas it stupid to realise that now? I mean, was this even the kind of realisation that made sense? How could I not understand something so... so important?\n\nAfter the injury, the amount of effort she made and how strange it made me feel sort of clouded that fact. She was there. Whichever way I looked at it, I could have asked her for anything, said anything, told her anything and she would've sat and listened and done whatever she could in her power to help me. Instead, I pushed her away.\n\nSo, she found other ways of communicating with me, especially after she left. How odd that this would not have occurred to me before. Maybe my memory about that time was worse than I thought.\n\nThis was a strange bunch of thoughts to process and I went quiet for a long time, staring at my food and thinking about all of this. There was a low ache in my mid back, on the left and for some reason it made me think of Alice's text again. I started wondering if it was a good idea to meet her later if I was beginning to feel like this.\n\n\"It's funny, but at the time, we thought of Alice at completely the other end of the scale to us boys. She knew everyone, did lots of different stuff. And everyone kind of knew who she was,\" Grain said, maybe just to fill the silence.\n\n\"But she wasn't stuck up about it like some girls I can think of,\" Gabrielle said with one eyebrow raised, her face looking dismissive.\n\n\"Oh?\" I couldn't tell from Amelia's tone whether she wanted to hear more or not.\n\n\"So... that's why it was kind of weird, I guess. We all knew that they were nothing alike but that they were friends. They just didn't really... hang out much,\" Grain said.\n\n\"It's like we knew they were just special,\" Gabrielle said in a teasing voice, looking directly at me.\n\nI rolled my eyes at her.\n\n\"Well, isn't that true?\" She asked me.\n\nShe was special, I thought to myself. Alice was special because she was my first friend. And I should have recognised that somehow; told her how much I appreciated her. On top of that, I really couldn't deny that I found her extremely attractive. But she had never given any hint of how she felt about me, not to mention she had said something about some mysterious person who had caught her attention.\n\n\"I don't know why I just couldn't talk about it,\" I said quietly. Maybe I was hoping they'd understand enough to leave this alone now.\n\n\"We can stop talking about it, if you want,\" Gabrielle said seriously. I was glad she'd got the hint. \"But can you see why I wanted to talk to you about it?\"\n\n\"Yeah.\"\n\n\"I know you're scared. She was there, though, Arun. She experienced it with you. And... you know, if anything does happen with you two, I don't want you to go through the same shit that happened with Joanna. And I know you wouldn't want that either.\"\n\n\"No.\"\n\n\"She said something to me once,\" Gabrielle added with a nervous tone in her voice.\n\n\"What?\"\n\n\"I don't know if this is okay for me to say but, you know what, I think you need to understand why I think she likes you. She was drunk one night when I went to visit her in France that time, do you remember? During the summer?\"\n\n\"I remember you going, yeah.\"\n\n\"She'd had about eight shots and an hour later she was sitting on this bench outside with me just staring at the stars. And I think she forgot I was there or something, because she said; 'I really want to know what Arun would think of this sky.' And then she just started talking about you for ages.\"\n\nI don't know why that produced such a violent reaction within me. I felt hot all of a sudden and my heart was working harder. I looked down at my food and thought about Gabrielle's words. I didn't know if I wanted to ask whether she had asked Alice more about her thoughts of me.\n\n\"And even before she came back this time, she said to me on the phone a couple of times that she was worried you'd be as distant with her as you were when we were all back at school.\"\n\nI looked at Gabrielle in surprise. \"She said that?\"\n\n\"... She missed you. I don't think it'd be a stretch to say she thinks about you a lot.\"\n\nI didn't know what to say to that.\n\nIt was a short while before they started eating again properly and Gabrielle said to me, \"Anyway, we'll shut up about it. I've said what I wanted to. I just needed to say it, okay?\"\n\n\"Yeah. It's fine.\"\n\n\"And Arun? Any time you ever want to talk to any of us... okay?\"\n\nI looked at each of them in turn and nodded. They started talking about something else but I remember being struck with the idea yet again that I had a group of friends here that knew me well. For the first time, I found the idea of talking to them about how I was feeling much easier to handle. Maybe even telling them about how badly the injury had got to me.\n\nMostly I was thinking about Alice.\n\nWe ate and sat for another couple of hours or so, just talking about anything but the earlier topic. I tried to take part in the conversation but found myself wanting to leave sooner than I expected. I think a part of me resented the fact they brought up what they did, but another part felt this strong relief that it was at least out in the open with them. I was lost in my thoughts too. I could not stop thinking about Alice. Every now and then I'd look at my phone as it sat there on the desk, aware that it was approaching 4 in the afternoon and Alice would probably expect to hear from me by then.\n\nI decided I could not face her feeling like this. I sent her a message back apologising and telling her I was too tired to meet. Again, her reply was immediate.\n\nIt's okay. Just let me know when you're free at any point soon. Would love to see you again. Take care. xx.\n\n... ... ... ... ...\n\nIt was about a week before I saw her again. She'd text a few times but I always found a reason not to see her. I was still feeling too weird about it and every time I did think about seeing her, a little voice in my head would remind me that I would need to speak to her eventually about my body. Once we did meet after that week, however, I mentioned nothing.\n\nThis became habit. At least two or three times a week, I would meet up with Alice and simply hang out. We'd go walking or for a meal somewhere. She'd invite me round to her parents' house, where she was living temporarily and we would watch films. Sometimes all we did was go for an ice cream.\n\nI learned more about Alice during those months. I learned that while she had been modelling, she'd also modelled for websites that specialised in models with ample curves. She had saved up every bit of money she could and lived a relatively frugal existence because she simply did not want to spend. She had made some expensive purchases, like the car, though she told me it was actually second-hand and she didn't pay as much for it as I expected. I learned the way her body moved, her moods, her expressions, the tones of her voice, even. It was sort of strange and yet familiar; in some ways, I felt like I was getting to know someone new but in other ways all I was really doing was re-acquainting myself with an old friend.\n\nAlice was open with me, more than I expected sometimes. The truth was, the longer I spent with her, the more I was aware that maybe I hadn't ever seen her as a friend since we were around nineteen years old. Somewhere in those few weeks I realised I was slowly falling in love with her and it made things harder because I still had this mental block about telling her about the injuries.\n\nOccasionally I'd feel the pain shooting here or there and grimace or just wince or something little and I thought maybe she had noticed but since she said nothing, neither did I. It was driving me a little crazy.\n\nEventually, I found myself visiting my mother and sister and telling them about this.\n\n\"So, wait, who is this girl again?\" Lyssa asked me that one afternoon I was sitting in the living room and watching cartoons with her.\n\n\"Alice. I told you about her.\"\n\n\"The one you've been hanging out with.\"\n\n\"Yes...\"\n\n\"Keep going,\" My mother said. She was at the other end of the room, in the kitchen making an omelette for us both. The living room merged straight into the dining room and kitchen ever since my mother had paid to have the separating wall taken out.\n\n\"I want to tell her and I can't. I don't understand it.\"\n\n\"You want her?\" Lyssa asked.\n\n\"Want her?\"\n\n\"Like, you want to be with her? Is that why you want to tell her? Usually you don't say anything to anyone.\"\n\n\"I... Well, yeah. I really like her. Maybe even more than just that.\"\n\n\"What do you mean?\" My mother asked.\n\n\"... I think I'm in love with her.\"\n\nLyssa looked at me, wide eyed. Even my mother walked around the counter separating the dining room and kitchen and stared at me.\n\n\"You're in love?\" My mother asked.\n\n\"I've never even heard of this girl,\" Lyssa said.\n\n\"You have.\"\n\n\"Oh?\"\n\n\"Alice. Alice, as in, the one who almost got hit by the car.\"\n\nBoth of their jaws dropped. It was comical.\n\n\"That Alice?!\" My mother cried out.\n\n\"Yes.\"\n\n\"Arun! You could've said!\" My mother admonished me.\n\n\"Wow, Arun!\" Lyssa exclaimed. \"Well... shit. I don't know. I always figured you had some kind of post-traumatic stress thing going on. I mean, you broke down, remember?\"\n\n\"But surely I should find it easy to tell her?\"\n\n\"Why? Because she's that girl? I would've thought it'd make it harder. She's not a stranger. And let's face it, you always were private, even when we were kids. It doesn't surprise me that you don't feel like you ever want to tell anyone anything.\"\n\n\"I don't know how it works for other people,\" My mother said, \"But I don't think you should be feeling like there's a set way of handling this. You'll tell her when the time is right. You know, it's possible that because you've left it this long, it's made it harder over the years to even go near the subject.\"\n\n\"I guess that makes sense...\" I said this more to myself than them.\n\n\"Maybe you should see someone about it?\" My mother suggested. \"A therapist or someone.\"\n\n\"Maybe.\"\n\nShe rolled her eyes and sighed and shrugged in that way only a mother can.\n\nThe conversation didn't really get anywhere after that and I went back to brooding about what to do.\n\nSometimes, though, life has a way of doing things for you.\n\nAbout two and a half months after Alice had returned, at which point we were now obviously the closest of friends and saw each other once a week regardless of whatever else was going on, things changed drastically.\n\nIt was a day on which Alice had decided we were going to go to an art gallery and then have dinner afterwards. For all intents and purposes, it sounded like a bit of a date to me, but then again, I suppose a lot of what we did seemed like dating. Of course, there wasn't anything like kissing or any kinds of displays of affection other than she would hug me; she'd figured out ages ago that I wasn't quite open to prolonged physical contact even though I had said nothing about it.\n\nThe gallery was great. It'd been a while since I'd been to one so I was glad about that part of the outing. Alice, as she always had been, was enthusiastic about really taking in the paintings, occasionally offering some criticism or strongly worded opinion. Sometimes she'd look at a painting, pull a face and simply swear. I found that funny.\n\n\"Modern art, huh? I long for the days when people just painted grandiose shit about religion and made it look bad-ass,\" Alice commented on one particular painting, which seemed to be nothing more than several lines and blocks of various colours. \"I'd even settle for a version of The Last Supper with DC superheroes.\"\n\n\"I think they do have some kind of process involved when they come up with this stuff.\"\n\nAlice shrugged. \"What's that? Making sure they've got at least seven different colours and a paintbrush that'll keep their lines straight?\"",
        "\"I'll admit it's not the most awe-inspiring piece of work I've ever seen.\"\n\n\"Why are you being so diplomatic about this? Arun, look at it. Just look at it. I could've done that. And the last time I drew anything, it was a dog that ended up looking like a muskrat.\"\n\nThat made me grin. \"Yeah, but maybe that's the point. You didn't do it.\"\n\nAlice raised an eyebrow. \"Okay, well, fine. When we get home, I'm going to do the best drawing of my life and go over it in garish colours and then hire a marketing team to tell everyone I'm some sort of fucking genius.\"\n\n\"Well, I did hear that garish is in these days.\"\n\n\"It is because I say it is. So, admit it, Arun. What we're seeing in front of us right now is bullshit.\"\n\n\"It's bullshit. Probably worse than your muskrat-dog.\"\n\nAlice rolled her eyes. \"I don't know about that. Maybe on par.\"\n\n\"Must've been a horrible muskrat-dog.\"\n\n\"You have no idea. It looked like it hit every branch of the evolutionary tree on its way down to Earth.\"\n\nWe spent another couple of hours there and then ended up in a cafe near Kensal Rise station with a pretty nice atmosphere. Alice told me she'd been here several times with family friends while she was growing up. The staff seemed to know her and were pretty prompt with everything.\n\nI slipped up there. There was a moment where I felt a deep bolt of pain pass through my mid back and I couldn't stop myself from wincing.\n\n\"Arun? You okay?\" Alice had seen it immediately. Concern was all over her face.\n\nReally, I could've just told her there and then. It surprised me even now she hadn't ever mentioned anything or noticed anything. Sometimes I doubted this could be right; maybe she simply left it alone because of how private I was about things.\n\nI could've told her then, but I didn't. I couldn't understand what I was so afraid of but I also couldn't dismiss the fact that maybe it was nothing at all. Maybe my mother was right. Maybe it had just become a huge force of habit where any time I thought about it, the block was only there because the wiring in my brain enforced it.\n\n\"I'm fine,\" I told her. \"Just a bit tired.\"\n\n\"Oh. Okay. Well, we can get going soon, if you want? I was going to ask if you wanted to hang out at yours but... if you're not up to it, then maybe not?\"\n\nMaybe it was the fact we were at a cafe and it reminded me of that lunch I had with Gabrielle, Grain and Amelia, but I wanted to change the subject and the first thing that came to mind was; \"Can I ask you something about when we were at school?\"\n\nAlice actually slowed down at this and looked at me. The expression on her face was something I suddenly had trouble reading. It did not look overly happy, but it wasn't really negative either. She nodded.\n\n\"Did I say something wrong?\" I asked.\n\nShe shook her head. \"No. You just... I don't know. You don't ever talk about those days. I guess it was weird. Came out of nowhere.\"\n\n\"Oh.\"\n\n\"What did you want to ask?\"\n\nAt this point I realised I didn't really know what it was I wanted to ask. I just wanted to change the subject. Thoughts came to mind, however. About apologising for the way I'd been. Asking whether I was right about her trying to be my friend. Asking whether I'd really been that difficult.\n\nI ended up shaking my head. \"Nothing, actually. It doesn't matter.\"\n\nShe frowned. \"Arun? You sure?\"\n\nI felt nervous from all the thoughts and this pause in conversation that I'd stupidly triggered. My back felt tense and I couldn't help but wince once more.\n\n\"Arun, you look like you're in pain.\"\n\n\"Just tired.\"\n\n\"Do you want me to take you home?\" She asked. She didn't bother waiting for an answer. \"I'll take you home. Okay?\"\n\n\"I... Yeah. Okay.\"\n\nShe didn't ask any more questions as we paid and walked to the car. Standing up gave me a chance to stretch my back a little. By the time we got to the car, I'd noticed she was still glancing at me with a concerned look. I wasn't enjoying the level of attention and started wondering if it was a good idea to just cut the evening short.\n\nWe had normal conversation in the car, but I kept thinking about what must have been going through her mind, especially when she brought up my mention of our school.\n\n\"You must have had a reason for bringing it up, Arun.\"\n\nI figured maybe going with this topic would keep my mind off the pain in my back. \"I was just thinking about a conversation I had around the time we went to that party at Gabrielle's.\"\n\n\"Oh? What was it about?\"\n\n\"It was the next day and I was having lunch with Grain and Amelia and Gabrielle. We got to talking about being at school at one point. It made me realise a few things, I guess.\"\n\n\"Like?\"\n\n\"Like, I was kind of an arsehole towards you back then.\"\n\nI managed to look at her when I said this. She kept her eyes on the road because we were approaching a small roundabout but she frowned deeply. \"According to who?\"\n\n\"Well... me. I mean, I kind of was, wasn't I?\"\n\nShe shook her head. \"I never thought so. What would make you think that?\"\n\n\"I don't know. I just know I never really...\" What was I trying to say? Maybe my mother was right; seeing a therapist would be a good idea. If anything, it might have helped me organised my thoughts.\n\n\"You were going through a lot,\" Alice said calmly; but it was an odd kind of calm. Like it was a practised calm.\n\n\"That's not really an excuse,\" I murmured, wondering if I should point out how odd her tone of voice sounded to me.\n\nAlice shrugged. \"It was a different time back then. Lots of stuff going on, lots of things to deal with, right? And you were always quiet, Arun. I knew that even then.\"\n\n\"Well... I'm sorry if I ever made you feel... I don't know. If I ever did anything upsetting to you.\"\n\nThis time she looked at me, almost expressionless. I couldn't understand the hint of the look in her eyes but before I could really study it, she was looking at the road again.\n\nWe got back to my place relatively quick since there wasn't much traffic around and as she parked up, I prepared myself for leaving the car.\n\n\"Can I come in for a bit, Arun?\" That odd tone of voice again, but different this time. Like there was another layer to it; something like worry perhaps.\n\n\"... Sure.\"\n\nWe ended up in the living room, sitting down on the sofa. She was watching me. I was sure of it now. Part of me was paranoid that Gabrielle had said something to her. I tried to act nonchalant and look around and stretch a little. Alice gave no real indication she was noticing anything except her eyes would rarely leave me and eventually I found it too much to handle. I felt a large shot of pain move across my mid back and it not only made me wince, but made me grunt a little. I got up as quickly as I could.\n\n\"Arun?\"\n\n\"Just give me a minute... I need the bathroom. Be back in a few.\"\n\n\"... Okay.\"\n\nIn front of my bathroom mirror, I stopped and stood for a few moments, unable to quite tear myself away from looking at my face. The pain was showing on it. Alice was probably wondering why I'd left so quickly. I thought my expression was calm but obviously not.\n\nI took my T-shirt off and turned my body to look at the scars. The pain was mostly in the middle and to the left this time. I stretched for a few moments. It helped a little, but not enough.\n\nI thought maybe it'd be best to put on something warmer and find an excuse for Alice to leave so I could lie down. Or maybe this was the right time to just be open with her about everything that had happened to me since the injury. Right now, though, it was more a case of pulsing pain and I'm not sure I could've handled an emotionally heavy conversation. I decided there and then that I would talk to her tomorrow about it and I'd tell her how I felt about her and everything.\n\nThis is where things went wrong.\n\nAlice moves very quietly. Always has done. For a moment, I was reminded of the party at Gabrielle's place where I'd seen her again for the first time in five years. The way she had ended up behind me without me seeing her. The door to the bathroom opened slowly, a few inches and I grabbed the T-shirt to put it back on but because I moved so fast, pain shot down the side and across the lower back. It made me freeze and stop breathing. Then I took a deep breath, trying to relax.\n\nI swore. I don't know why I'd forgotten to lock the door.\n\nI swore again when I heard her voice from the door to my right, saying, \"Arun?\"\n\nMy T-shirt was in my left hand, which meant she could see most of my back. I didn't want to look at her so I kept my eyes on my reflection. I could already see the worry beginning to show on my face, as well as the anger at myself.\n\nMore footsteps. She walked in closer but stopped a couple of feet away. I could feel the Dread everywhere, creeping up my body, tensing my muscles, making my legs feel like they were ready to run miles. Not to mention it was just fucking with my mood in general.\n\n\"Sorry,\" I said, but I didn't know what for and I started putting the T-shirt on.\n\nAlice ignored my apology. She walked right up next to me and I felt her hand settle on my T-shirt, stopping it from moving any further. I looked at her. She was staring at my back with tears in her eyes.\n\n\"Arun-- Your back...\"\n\n\"Yeah.\"\n\nShe was standing just behind me to the side and I saw her other arm rise, moving closer to touch the scars. I don't think she was even aware she was doing it. I moved away instinctively. I hadn't had anyone touch them for a long time and I wanted to keep it that way.\n\n\"Arun,\" She said.\n\nI just wanted her to leave now. But I couldn't say the words.\n\nShe didn't raise her arm again but she stood there for several seconds, just looking at my back, taking in the detail of each scar maybe. I no longer felt like I wanted to cover them. That felt so strange. There was almost a sense of relief in letting her see them, but behind it all my mind was whirling and I was beginning to realise things would change after this. She'd maybe never want to be around me again. Or she'd treat me too differently and I wouldn't be able to handle it. Or something else I couldn't even imagine. I just couldn't see it'd be anything good.\n\nA part of me wished I could turn the clock back and make sure she had never come in. But I was standing there; not much I could do except go with it and just face up to revealing myself to her.\n\nA tear finally made its way down her left cheek and she looked at me in the eye.\n\n\"Arun? Is this from... the accident?\"\n\nI nodded. She began to cry.\n\nI felt alarmed. Her crying was the last thing I had expected. \"Alice... It's okay.\"\n\n\"How can you say it's okay?\"\n\nI hated seeing that expression on her face. Her hand was covering her mouth and her breathing was slightly more audible. She sounded like she was trying to keep it under control, but she was slowly losing it instead.\n\n\"It was a long time ago,\" I said stupidly.\n\n\"But... you're hurt. Fuck. You still hurt! I thought you were okay! You're still hurting!\"\n\nI turned to face her. I wasn't sure how to deal with this and it seemed to me the easiest thing right now was to be alone. Since I wasn't thinking straight, I didn't have much tact when I said, \"Maybe you should go.\"\n\nShe looked hurt suddenly. \"Why?\"\n\n\"You weren't... supposed to see anything. I'm not sure how to handle it.\"\n\n\"Arun, neither do I. But... please, don't ask me to leave.\"\n\nI didn't know what to say to that.\n\nShe wiped her eyes and looked at my scars again. \"Fuck. This is all my fault.\"\n\n\"No, it isn't.\"\n\n\"Arun, if it wasn't for me, this never would've happened to you.\"\n\nI couldn't stop the grimace as some pain shot down my left side again.\n\n\"Arun? Are you okay? Is it hurting? Do you want to sit down?\"\n\n\"Maybe that'd be an idea.\"\n\nShe immediately made to put her arms on me but I shook my head and left them hovering in front of her as I walked past. I walked back to the living room and sat down slowly, right next to the arm rest. She sat down next to me on the sofa, keeping a small distance between us, but not so big that she couldn't cross it with a simple reach of her arm. She wasn't really crying now, but her eyes were wet and red and the expression on her face hurt to see.\n\nThere was a long silence. I still had the T-shirt in my left hand and I started to put it on but she shifted position slightly.\n\n\"Can you leave it off?\" She asked.\n\nI frowned. \"Why?\"\n\n\"Because I need to be able to see it, Arun. I need to be able to see you.; all of you.\"\n\nSomething about her request made sense and I put the T-shirt on my lap. Another long silence.\n\nThen she whispered, \"Why didn't you tell me, Arun?\"\n\n\"... I don't really know.\"\n\n\"But there must be some reason? Anything?\"\n\n\"A few different thoughts maybe.\"\n\n\"Like?\"\n\n\"I just... I don't know. At first it was because you felt guilty all the time. I could see it in your eyes every time you came to visit me. I kept thinking maybe you were just being friendly because you felt so guilty and I didn't want to add to that. I wanted to see how things changed. And then, one day, I realised I couldn't be around anyone. Found it too hard. And then after that... talking about it, showing it, just seemed impossible. I really don't know. It just became this huge thing. I just had this... block.\"\n\n\"Arun... I'm so, so sorry. I can't even imagine what it's been like for you. I mean, I did feel guilty but I always thought I'd hidden that. I just... what you did. I'm just sorry you've had to go through that.\"\n\n\"I have my good days and my bad days. It's not your fault.\"\n\n\"Yes, it is.\"\n\nI shook my head. \"Alice, I'm not going to let you blame yourself. Whatever happened that day, I made the choice. I'm living with the consequences. There's not much else to it.\"\n\n\"But, Arun, if I hadn't been standing there--\"\n\n\"The guy shouldn't have been driving the way he was. It's not your fault.\"\n\nShe closed her eyes for a moment and blinked out some tears, before opening them and turning to sit facing me directly, bringing one of her legs up onto the sofa.\n\n\"Why did you do it, Arun?\"\n\n\"Why did I do what?\"\n\n\"Run in like that. Push me out of the way.\"\n\nI was surprised to hear this question. \"You were in danger.\"\n\nShe sighed. \"... We didn't even know each other that well. And you just... I mean. I guess I've always wondered. All these years.\"\n\nI was thoroughly confused at what she said. The answer was simple. She was going to be hurt and I didn't want to see it happen, so I did something about it. The more I thought about it, more it seemed like a simple choice to make at the time, but it seemed she thought there was something more to it.\n\nI didn't know if she was right or not. Of course, I had feelings for her now. But, back then? Never at thirteen. At least I didn't think so, but that was neither here or there. Her one question had triggered a mass of confused feelings. She was still waiting for me to say something.\n\n\"I didn't want to see you hurt, Alice,\" I told her simply. \"To be honest, I don't think I was really even thinking at the time. I saw you and I saw the car. I saw what was going to happen. So, I stopped it from happening to you.\"\n\nShe looked at me for a long time. Nervously, tentatively, she moved closer until she was right next to me, her knees almost touching my thighs. Slowly, she took my hand.\n\n\"I wish you'd told me. I wish... I wish back then I'd never let that distance come between us.\"\n\n\"That was mostly my fault.\"\n\nBut she carried on without hearing me. \"I don't know whether to be angry at you or just... I don't know.\" Alice let her head lean on the back of the sofa. \"God. Arun, why did you never tell me? Do you have any idea how much you mean to me?\"\n\nThat lessened the confusion in my head a little. Now it felt as though something else was pushing through all the uncertainty and it took me a few seconds to realise it was hope. Maybe, just maybe, she felt something for me. Maybe Grain, Amelia and Gabrielle were right. Maybe Gabrielle was right when she said Alice thought about me a lot.\n\nI had to be sure, though. \"You mean a lot to me, too. You're the best friend I've ever had.\"\n\nShe shook her head slowly. \"No, Arun. You...\" She trailed off, looking down at her hand holding mine.\n\nWhen she looked up at me, she had the look I didn't quite recognise. She moved even closer and suddenly I felt hot. I didn't seem to mind that her other arm was now brushing against my side. She glanced at my back and I began wondering if she was struggling with something when the upset came back on her face.\n\nThen she surprised me by leaning forward and planting a soft kiss on my shoulder, letting it linger before she turned her head and let it rest there.\n\n\"Can we just sit like this for a bit, please?\" She whispered. \"I think I need time to figure out how to say things.\"\n\nI nodded. \"Okay.\"\n\nWe sat like that for a long time. I had no idea what to say but for once it was fine because I felt so comfortable, so relaxed. Enough so that even the pain seemed to be calming down. I was so surprised that she was there, it occurred to me that I'd never thought it was a possibility. Some of my fears began making sense; the mass of confusion was beginning to diminish bit by bit the more she sat with me.\n\nMaybe this whole time, part of it was always being afraid I couldn't quite be loved; not by just anyone, but specifically by her. Or liked, even, if not loved exactly. After all, I was a source of guilt for her and I was a reminder of that time. However, she hadn't run or looked at my back with disgust or anything.\n\nShe'd stayed.\n\nMore than that, I was starting to realise that if it had been anyone else, it wouldn't have mattered so much. Given it was Alice, maybe I'd always been too afraid of saying anything because I was more emotional about her than expected; I'd just never fully been aware of it.\n\nBefore I knew it, I was saying, \"I'm sorry for not telling you.\"\n\nShe made a small sound. Then, \"It's okay.\" There was a pause. \"Arun, has it been bad ever since that day?\"\n\n\"It varies. I have good days. Bad days. There are a lot of factors involved.\"\n\n\"Like what?\"\n\n\"You really want to know?\"\n\nShe raised her head slightly to look at me in the eye. \"Of course.\"\n\n\"Okay. I guess, the weather, temperature, how nervous I am, stuff like that.\"\n\n\"Really?\"\n\n\"Yeah. I mean, if it's cold, then it's usually likely to hurt more. So now I hate winters. And if I'm feeling nervous, I kind of tense up and that causes problems with movement.\"\n\nShe was quiet for a few moments while she took this in. \"Are you tense right now?\" She asked putting her head back on my shoulder.\n\n\"Not now.\"\n\n\"... Good.\"\n\nThere was a very long silence. It was so long I began to wonder if I should break it but Alice got there first.\n\n\"It wasn't because you resented me, was it?\" Her tone of voice was quiet but it also told me she'd been nervous about asking that question and perhaps had been meaning to ask it for a long time.\n\n\"What?\"\n\n\"When you started cutting yourself off from everyone. From me.\"\n\nThat had never occurred to me. All of a sudden, her behaviour in the car made sense. That tone of worry. Even the way she'd forced herself to be calm when I brought up our school days. \"No. Not at all! Alice, is that what you thought?\"\n\nShe nodded slowly. \"For a while.\"\n\n\"I've never resented you for anything, I swear. It just seemed easier to deal with it myself. Keep my own space. Kind of just have this separate world, you know? Me with my fucked up back and fucked up head; everyone else just going on as normal.\"\n\nShe nodded again. Her other hand was now stroking my hand while she still held it. \"Arun, I can't imagine what it must be like for you. I don't think I'll ever understand. But, do you think maybe you can tell me? Or just... I don't know. I just want to know this part of you. I don't want you to hide from me.\"",
        "I wasn't sure how I felt about this. I'd spent so long avoiding the topic with anyone that it almost felt like she was asking me to do the impossible. Looking at her, though, I was reminded starkly that I'd already started opening up.\n\n\"I know I might be asking a hell of a lot,\" She continued. \"I know it must be like being asked to do something that totally goes against your instinct. So, will you at least think about it?\"\n\nI nodded.\n\nShe nodded in response and her eyes moved to my back again. \"Can I see?\"\n\nI moved forward and turned to the left so she could see all of my back.\n\n\"Can I touch?\"\n\n\"Uh...\"\n\n\"It's okay if you don't want me to.\"\n\n\"Why do you want to?\"\n\n\"Because it's your back.\"\n\nI was silent for a bit. \"I don't let people touch it.\"\n\n\"Okay. I'll leave it alone then.\"\n\nHer willingness to say that changed my mind for some reason. \"Gently, please.\"\n\nI heard the surprised tone in her voice. \"Okay. Gentle. Of course.\"\n\nShe started at the right shoulder with only one or two of her fingers, slowly, calmly tracing a scar down to the middle of the back. Then she traced another scar upwards from my lower back. Soon she had both her palms flat against my middle back, slowly moving up as if she was trying to take in every detail of every scar covering the skin.\n\nThe whole time, I couldn't really make myself speak, even though that's what I wanted. I wanted to convey something about the moment; about how calm I felt and how alien this all felt to me. I wanted to tell her how good her hands felt on me.\n\nBefore I knew it, her hands had gone up to my shoulders and over them, until finally I saw them clasp together in front of my body and felt her against my back with her chin on my shoulder and her cheek against my jaw. She felt so warm.\n\n\"When I said you mean a lot to me, I meant a lot more than just friends,\" She whispered.\n\nThat left no doubt at all in my mind about what she meant, especially since, as soon as she said it, she kissed my jawline softly and let it linger. Then she rested her head on my shoulder.\n\nMy heart was pounding when she kissed me. I couldn't tell if I was nervous or relieved or terrified or ecstatic. Maybe all of that and more. I had questions suddenly, but all that came out was, \"Really?\"\n\n\"For a long time now.\"\n\n\"I had no idea.\" There was a beat of silence. \"I thought you were interested in some mysterious prosp-- oh. Right.\"\n\nShe snorted once as if she was about to laugh. \"I wanted to tell you before.\" She kept her face there so it wasn't possible to actually look at her, but I got the feeling that this was making it easier for her to be open with me.\n\n\"Why didn't you?\"\n\n\"I suppose a few reasons. But mainly two.\"\n\nI was very curious now. \"Do you mind if I ask what they are?\"\n\n\"I don't mind,\" Alice said quietly. She shifted slightly, pressing her body against me a little more. I can't describe how good it felt. It was almost like she was making sure she could hold onto me no matter what she said. There was nothing she could've done which would make me push her away. Even hearing her words so near to my ear and her breathing on my neck were having massive effects on me.\n\n\"The first reason,\" Alice said slowly. \"I guess I didn't say anything because you felt so distant. There was a lot going on. I felt so guilty and you just didn't seem to want to know anyone. The main reason, though, is that I told my mother how I felt about you. I was fourteen at the time.\"\n\nThat was a huge surprise. I slowly turned and she loosened her grip, adjusting her body to accommodate me facing her. \"Fourteen? You had feelings at fourteen?\"\n\n\"How could I not?\"\n\n\"I don't understand.\"\n\nShe smiled. \"I guess neither did I, at the time. Arun, I felt like you'd saved my life. Did you not think that'd have a powerful effect on me? About how I saw you? How I related to you?\"\n\n\"... No. I don't think it ever entered my mind.\"\n\n\"I was confused. I mean, I couldn't stop thinking about you sometimes but at the same time you were a mystery. I told my mother and she said the best thing to do would be to wait.\"\n\n\"Wait for what?\"\n\n\"To see whether my feelings were real. Whether they'd change or disappear. I don't know. Just to wait and see. She said because of what you'd done and how young I was, it might just have been that I was overwhelmed and confusing gratitude with something more. Or that it was just a crush or something. I mean, she made sense and I hated what she was saying because I just wanted to tell you, but eventually I realised she might be right. So, I waited.\n\n\"Then I left. And, I think sometimes my feelings weren't the same or whatever. I just kinda kept going. But the one thing I couldn't do was lose contact with you. It took me a while to figure out that maybe just emailing and calling was the best way to do it. You seemed to hate being around people. I figured at least if I had your number, I'd never lose contact. Even if it was once in a while.\"\n\n\"I looked forward to talking to you every time.\"\n\nShe smiled. \"I'm glad. I felt the same way. Eventually, after those boyfriends and knowing I was coming back home, I realised I was coming back to you. And that was it. That's all I needed to know. Pretty much knew then that I'm crazy about you.\"\n\nI saw how nervous she was. It occurred to me then that I hadn't said anything about how I felt. She was laying her heart on the line here and waiting for me to say something and it was something she'd been waiting to hear for a very long time. It was all the more potent as her words went around inside my head; her realisation that she was coming back to me.\n\nIt was like having a wild dawn inside. The sudden burst of pure light over the horizon. That subtle bubbling of joy welling up from somewhere deep down. It was the strangest sensation of knowing what she was saying was natural and felt so right and yet was so unexpected that I was just looking at her with words caught in my throat. It felt like a waking dream. And then suddenly, it felt like the most real thing that had happened to me in years.\n\nIt was easy for me to say, \"I feel the same way.\"\n\nThe tension seemed to drain out of her shoulders immediately and she beamed. Slowly she leaned forward and softly kissed the corner of my mouth and laid her head on my shoulder again. \"Good.\"\n\nJust from the way she had reacted softly, I knew this felt natural to her as well.\n\nI pulled her toward me so I could sit back against the sofa and she moved with me, bringing her legs up onto the sofa, relaxing her body against mine.\n\n\"Arun?\"\n\n\"Hmm?\"\n\n\"I'm so sorry you've been in pain all this time.\"\n\n\"I've learned to live with it. It takes a while to adjust is all.\"\n\n\"You're going to have to adjust again.\"\n\n\"Am I? To what?\"\n\n\"To me, Arun. What else?\"\n\nI couldn't help but smile, even if she couldn't see it. She moved closer to me and hummed, sending vibrations against my neck before she kissed it. I could've stayed like that forever. I think she understood that because she barely moved once she settled into that position. I don't know why at that time we didn't do more; that she didn't just suddenly start kissing me or I started touching her. It wasn't as if I didn't want to, but there was this odd understanding that this was one of those things we were going to be careful about. When you feel something for that long, it isn't always the best course of action to rush into something.\n\nIn some ways, it felt like we were like that forever. Minutes and hours passed and we didn't feel the need to say much. It was just a calm; one I hadn't felt in a long time. I was relaxed and so aware of her steady breathing. Occasionally she'd press her face against my neck, almost as if to let me know she was still awake. I wasn't sure what time it was when she finally whispered that she wanted to lie next to me when I went to bed.\n\nI wasn't expecting her to say that but to my own surprise, I had no fear about the idea of it. I already knew she didn't want to do anything sexual. I had no doubt she understood me and how slow I needed things to go so I could adjust bit by bit.\n\nI have a very vivid memory of that; getting up and walking to my bed with her following me, keeping her hand in mine. Nothing much actually happened, but I remember the light was muted because it was the middle of the night. There was a soft breeze blowing because I'd left a window open somewhere and my bed seemed completely normal when I looked at it as I entered the room.\n\nAlice went to the bathroom and I went after her as soon as she got out, passing her by as she walked to my bedroom. I say my bed seemed completely normal, because when I got back, it had taken on a completely different tone just because Alice was sitting on it. She was looking at me.\n\nShe never said anything. She took her skirt off, exposing her creamy thighs and her black knickers. Moving onto the bed completely, she took her socks off and let them drop to the floor on the side and then she moved to one side of the bed. The only other item of clothing she was wearing was her T-shirt. She patted the bed next to her leg and gave me a questioning look.\n\nI remember saying to her; \"I sleep in my boxers and a T-shirt most nights.\"\n\nShe simply smiled. It didn't bother her, of course.\n\nI put my T-shirt back on and took my jeans off. I felt a little nervous about showing more of my body but I felt at ease when she lay down on the bed as if she'd been doing it for years. When I was ready for bed, I was on my back next to her within a few seconds, my head turned toward her.\n\nThere's that feeling of ease when you enter a swimming pool that's just at the right temperature, right after the slight shock of the water surrounding your body and making you feel weightless. That's what it felt like when she sighed contentedly and closed her eyes to sleep.\n\n--- --- --- --- ---\n\nShe took things slowly. Every week, she would spend at least three or four days in my flat with me, simply sitting around and watching TV, or occasionally cooking a meal or even just laying by my side in bed and talking.\n\nShe was tactile too, but it was always something innocent and if she ever got near certain parts of my body, she'd stop and take her fingertips somewhere else. I can't tell you how much I loved it every time her fingers were on my arms as we sat together.\n\nWhat I found even more of a surprise was how easily she got along with my mother and sister. One day they had both come to visit while I was out getting a few chocolate bars for a sudden craving she and I had got. When I returned, I found them all laughing in the kitchen; I hadn't seen my sister laugh so much in years. They both greeted me and watched carefully when Alice gave me a kiss on the cheek and took the bag of chocolate bars from me and walked over to the cupboard to start stacking them.\n\n\"You're looking well,\" My sister said. She looked a little amused.\n\n\"Yeah, he is, isn't he?\" My mother said. \"I wonder why that is,\" She continued, glancing over at Alice.\n\nI couldn't help but follow the glance and saw Alice smile to herself. To break the moment, my sister started talking again about something or the other from her life but I wasn't listening, because I just noticed Alice leaving out one bar of chocolate and looking over her shoulder at me to smile.\n\nMy mother left an hour later and my sister was still talking animatedly to Alice while I listened. They were discussing past relationships and both going into detail quite easily. It was unusual for my sister to do that. She and I had always been close, especially since our father had left and she kept herself to herself, only really talking to me and my mother. She seemed so comfortable with Alice that it was probably the first time I found myself imagining a scene in which Alice and I had been together for years and we were having dinner with my sister and mother and their partners. Some scene in the future. Like a family.\n\nIt was a powerful thought and it lingered.\n\nWhen later, Alice decided she had to get going home to get some work done for her aunt, she went to my room to gather some of her things and my sister nudged me.\n\n\"What?\" I asked.\n\n\"What's going on? You didn't tell me and Mum that you and Alice were together!\"\n\n\"I was going to do that eventually.\"\n\nMy sister narrowed her eyes. \"I'm telling you now -- She. Is. Perfect.\"\n\n\"Perfect?\"\n\n\"For you, you idiot,\" She said. \"Don't fuck this up. Who would've thought she of all people would turn out to be the right one for you?\"\n\n\"Yeah. Well. Yeah.\"\n\n\"So articulate, Arun,\" Lyssa said, shaking her head. Then she was silent for a moment and gave me a quick hug. \"Good,\" She said, looking at me. \"I think she's brilliant already. And so does Mum.\"\n\n\"I'm glad,\" I said, realising I really was; I couldn't imagine being with someone who didn't get on with my family.\n\nShe left soon after with Alice.\n\nWhatever was going on between me and Alice, it was happening slowly and at a speed where it seemed the transition to something more was seamless and subtle. It was like she knew exactly what pace to go at. We were a couple now. We'd gone out a few times with Gabrielle, Grain and Amelia, who were profuse with their congratulations when they found out Alice and I were together. Alice would kiss me when it was just us on our own, keeping in mind that neither of us liked public displays of affection and every time she did, my heart would race and I'd feel myself more and more drawn to her.\n\nAlice was gorgeous and the more time I spent around her, the more it was this undeniable fact that no matter how she looked or what state she was in, I just found her beautiful to look at. So, it was no surprise really that she had a pretty major effect on me when it came to the sexual side of things. We'd never really done anything other than kiss, though, so occasionally I worried a little bit on how to approach it.\n\nWith my previous two girlfriends, we'd kissed heavily, petted quite heavily, but I'd never taken my shirt off in front of them, even if they had been fine with taking off their own. The most that had happened beyond that was giving and receiving oral, but it was rare; I enjoyed it, but I had to be very much in the mood.\n\nWith Alice, I seemed to be in the mood nearly all the time. That was new to me.\n\nIn some ways, it was like my body had woken up, as if being more open about it meant it had the freedom to do what bodies do; in this case, everything about her made my body do little dances inside. Sometimes it'd be something simple like her cutting up something in the kitchen with her weight resting a little more on one leg, making her body do a slight S curve from head to toe.\n\nSeeing her in situations like that somehow brought home the idea that she had modelled and been seen by thousands of eyes, but none of them would have seen her in this relaxed, unconscious sort of grace. Her hair usually fell over to one side or over one shoulder and she usually had a calm smile on her face. And sometimes all it took was a look from her and I felt the urge to hold her against me and kiss her.\n\nIt happened one night where, while she was reading, she wore a very low-cut tank top which revealed more cleavage than I'd seen so far and I couldn't help but keep glancing at her. Somewhere along the way I saw she had an amused smile on her face until finally she looked up at me.\n\n\"I'm glad to see this top is having the effect I was hoping for.\"\n\nFeeling caught out, I stammered for a moment and took a deep breath.\n\nShe grinned. \"I take it you like the view?\"\n\n\"... It's certainly eye-catching.\"\n\n\"Why can't you just admit you're staring like a starved man?\"\n\nThat flustered me a little. I may have been in my mid-twenties but I felt like I barely had any experience. At least, compared to Alice.\n\nShe seemed to be waiting for me to say something.\n\n\"I think you look sexy as hell in that tank top,\" I told her a moment later.\n\nThis time she smiled with a tint of shyness and to my surprise, she actually blushed a little. \"Why, thank you, Arun. In case you hadn't figured out by now, every time you look at me, I get tingles going all the way down to... well, you know.\" She flashed me a wicked grin at the look on my face.\n\nMy eyes dropped to her crossed legs without me even realising it and she laughed.\n\n\"Very funny,\" I said to her. Then, \"Really? Tingles?\" I had to know. It was the first time I could remember that word even exciting me.\n\n\"I've seen the way you look at me, Arun,\" She said with a very serious face. \"Tingles is just the beginning of it.\"\n\n\"Well... I'm not the only one who has an effect.\"\n\nShe gave me an amused look. \"No?\" Then she giggled. \"It's so funny watching your face. It's kinda like you really want to say what you're really thinking but you're just being so polite or something silly like that.\"\n\nWhich was sort of the truth and when she put it like that, it did seem very silly.\n\nShe put her book down and stood up, walking over to me slowly and sat down next to me. Just that alone, coupled with the smouldering look in her eyes made my heart beat a little faster. I think I actually gulped. She scooted close so that her legs were pressed against mine.\n\nThen she leaned forward a little and put one arm across the back of the sofa so her hand was behind my head and I felt her touch my hair lightly. Her fingers slowly moved up through the locks of my hair and sent a shiver down my neck. I couldn't help but smile.\n\nShe smiled back and said, \"Hi.\"\n\n\"Hi.\"\n\n\"Come here often?\"\n\n\"... It's a place I like hanging out.\"\n\n\"Yeah, I've noticed that. Looks pretty comfortable.\"\n\n\"It is.\"\n\n\"I can think of more comfortable places.\"\n\n\"Yeah? Like?\"\n\nWithout saying another word, without even moving her arm away from my head, she shifted her body and ended up straddling me. Suddenly there wasn't anything playful or funny about this. I was riveted just by the look in her eyes and she seemed to be fixated on me.\n\nShe brought up her other hand behind my head and clasped her hands together, leaning forward until her forehead was pressed against mine.\n\n\"Hi,\" She whispered this time.\n\nI could feel her body pressed against me, especially her breasts and I was hard already. I knew she could feel it. At that moment, it didn't seem to matter too much. Her eyes were closed and mine closed automatically in response and for a perfect few moments, I was with her in this little bubble. For the first time I could remember, I felt completely relaxed with someone else so close to me. There was none of the Dread, no second thoughts, no doubts. I felt an overwhelming rush of affection for her.\n\nAnd before I knew it, I was saying, \"I love you.\"\n\n\"I love you too, sweetheart,\" She responded immediately.\n\nAnd when she kissed me, I suddenly realised all those kisses before had been chaste because this felt like a real first kiss. Her moist, soft lips pressed against mine with an urging I hadn't felt from her before, opening a little and I did the same in response, feeling her tongue suddenly flicker out across my bottom lip before entering my mouth. For a moment, she moaned into my mouth, our tongues moving slowly against one another and her lips varying in pressure as she seemed to move back and forth slightly, almost in a rhythm. My hands were on her back somehow, moving up underneath her hair to her neck, stroking it softly as she gave me that passionate kiss that left us both breathing hard when she broke it off.\n\nFor a moment, we stayed like that, breathing and smiling. She kissed me again, shorter this time but even more passionate and I returned it, feeling my head floating off somewhere where the only thing that existed was her and me. I felt her lips move onto my jawline and bite it softly, immediately followed by a kiss and another further up to the top of my neck below my ear."
    ],
    "authorname": "clarkcrow",
    "tags": [
        "friend",
        "close friend",
        "curvy",
        "model",
        "injury",
        "big breasts",
        "dark haired",
        "first time",
        "romance",
        "full bodied"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/alice-and-i-2"
}