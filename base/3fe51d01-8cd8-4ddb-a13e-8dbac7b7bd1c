{
    "title": "Sam's Naked Adventures Ch. 02",
    "pages": [
        "Authors note: For context you should read the first chapter. All characters are over 18 and fictitious. No similarity to any real person is intended.\n\n***********************************\n\nSam awoke a little after 10:00 am Monday morning having slept in after her adventure the night before. She got out of bed and after answering natures call walked naked downstairs to the kitchen. Her stomach was growling so she took a cup of strawberry yogurt from the fridge and sat down at the table to eat. After finishing her breakfast she went out to the pool to work on her tan and decide how to spend the rest of her day. \n\nShe took a quick dip in the pool then dried off returning to her favorite lounge chair. As she lay naked she remembered that she still didn't have any sunscreen and made a mental note to run to the store for some. She didn't want to burn any sensitive areas that were not yet used to being exposed to the sun. \n\nClosing her eyes her mind drifted back to the events of the night before. Her being naked on the street, then on the golf course. The massive series of orgasms she had given herself on the table. Realizing Jim was watching her and seeing him stroking that big brown cock of his as it shot a huge load of cum onto the grass. Jim telling her of the other woman that came to the same spot to masturbate. All these thoughts aroused her and without conscience intent she parted her legs and began to slowly move her fingers across her clit while replaying the images in her mind.\n\nSam had been lying on the lounge chair with her eyes closed slowly masturbating for about ten minutes, She was enjoying the sensation of her fingers against her clit while the warm sun heated her body. \n\n\"So this is what you do all day when your parents are away huh?\" \n\nSam's eyes flew open as she sat upright on the lounge. Sitting on another lounge chair near the end of the pool with a big smile on her face was her next door neighbor Carol Poole.\n\nSince Sam's parents were going to be away for an extended period of time her mother had asked Carol to check on her. Carol was a successful author of romance novels who worked from home so it was no imposition. Thirty nine years old with two divorces behind her Carol stood 5'8\" tall with blue eyes, long red hair, fair skin and a 36C-24-34 figure that turned heads wherever she went. Carol had knocked at the front door and when Sam didn't answer she had walked around back to the pool. That was when she saw the younger woman lying naked on a lounge chair masturbating. Carol had quietly sat down and unbeknownst to Sam had spent five minutes videoing her with her IPhone before putting it away and speaking.\n\nSam grabbed a towel from the ground next to her and attempted to cover herself. \"I was just...just...,\" Sam stammered. \n\n\"I know exactly what you were doing,\" replied Carol still smiling. \n\nSam flushed bright red and dropped her eyes in embarrassment wishing she could disappear. \n\n\"Oh Sam stop,\" Carol said, \"you are a beautiful young woman with a healthy sex drive in the privacy of your own back yard. There's nothing to be ashamed of. If I didn't burn so easily I'd strip down and join you, at least in the sunbathing that is,\" she said with a wink and another dazzling smile. \"Besides Sam, it's not the first time this morning I've seen you naked although this view was much better than the ones I saw recorded on my security system.\"\n\nSam's eyes shot up from the ground on which she had been focused, her stomach twisting into knots. Carol was giving her a mischievous grin. \n\n\"You, you saw me.... last night?\" Sam asked. \n\n\"Oh yes dear, twice in fact from the security camera I have mounted at the end of my driveway. First walking away, your fit young body highlighted by that perfect round ass of yours then later, on your return, your beautiful perfect breasts swaying above your smooth bare pussy. You looked as though you picked up a raincoat somewhere as well. I must say, even though my security camera is HD, it doesn't compare to seeing you in person. You're magnificent!\" \n\nSam sat in a daze. \"I'm fucked,\" was all she could think. Carol turned more serious. \n\n\"Listen Sam. I'm not here to judge. Since your mother did ask me to keep an eye on you I need to know what's going on. What are you up to wandering around the neighborhood at night naked?\" Carol asked.\n\nSam sat silent for a few moments trying to come up with some sort of reasonable explanation for her actions. Finally, seeing no other way out, she told Carol everything. She told her about finding the DVD with the pictures of her sister. She told of her first halting attempts at trying to match her sister's uninhibited nature. Finally Sam told her of meeting Jim on the golf course. Carol listened to her story without comment. Sam finished talking and sat looking at Carol like a whipped puppy. \n\n\"You must think I'm perverted and awful,\" Sam said miserably. \n\nSam's words and the tone in which they were spoken shook Carol out of the erotic trance she had been in as she listened to the younger woman talk. She could feel the moisture between her own thighs and the cotton of her shirt against her nipples. Wanting to reassure Sam, Carol stood and quickly crossed the distance separating them. Sitting next to the younger woman she put her arm around her in a comforting manner and put a finger under Sam's chin lifting it so she could look into her eyes. \n\n\"I think you're anything but perverted and awful, I think you're sexy and exciting and adventurous,\" said Carol.\n\n\"Really?\" Sam replied.\n\n\"Yes, in fact I'm going to help you push yourself farther.\" \n\nSam's eyes grew wide as she stammered, \"What... what do you mean?\" \n\nCarol stood facing Sam. \"Come to my house tonight at 11:00 in exactly what you were wearing last night,\" Carol instructed. \n\nSam began to protest but Carol immediately cut her off saying, \"Now Sam, you wouldn't want me to have to reconsider all of this and decide that I need to inform your mom would you? See you at 11:00, don't be late. Oh, and bring your IPhone.\" With that Carol turned and walked out of the backyard leaving Sam with an odd mix of anxiety and sexual excitement churning through her.\n\nOnce Carol left, Sam put on a t-shirt and shorts and spent the remainder of the day pacing around the house alternating between fear and excitement. As the evening passed the fear lessened and the excitement began to build. Finally it was ten minutes until 11:00 and she knew she had to face whatever Carol had in store for her.\n\nSam, wearing only the running shoes from the previous night and carrying her phone slipped the two hundred feet through the wooded area dividing her home from Carols. Arriving on Carol's front porch at exactly 11:00 pm she rang the bell. Almost immediately the front door was opened and Carol ushered her inside. Carol was dressed in a light green tennis dress and quite obviously was not wearing a bra. \n\n\"I have to say I don't think I could ever get tired of seeing you naked,\" she said with her dazzling smile. \n\nFeeling somewhat uncomfortable Sam replied, \"I'm not a lesbian.\" \n\n\"Neither am I Sam, I just truly appreciate the female form.\"\n\n\"Okay,\" said Sam, \"You want to tell me why I'm here?\"\n\n\"That's simple Sam, you're here for me to help you explore your exhibitionist side. The price for both my help and my silence however is that you do exactly what I say. Don't worry though, I promise I won't make you do anything you won't enjoy. Deal?\" \n\nSam considered her situation for a few moments before replying. On one hand she was concerned about the older woman having control over her and what actions she would have to perform. On the other hand she had to admit those same thoughts excited her. The excitement won. \n\n\"Okay, you win. What do I do first?\" \n\n\"Follow me Sam, I guarantee you won't regret it. Unless you get caught that is.\" Flashing that dazzling smile again Carol walked out of the room with Sam following close behind.\n\nSam followed Carol through the large house eventually arriving in the garage where Carol told her to get in the back seat of an SUV while Carol took the drivers seat. \"I'll explain your task as we drive.\" \n\nWhile Sam was nervous she was somewhat comforted by the fact that the SUV had dark tinted windows. Carol drove through the darkened city explaining to Sam's disbelieving mind what she would have to do. \n\n\"I'm taking you to the back of the high school and letting you out at the athletic complex. Once you're out of the car you will have to work your way through the ball fields, around the back and side of the school, cross the parking lot and go to the tennis courts. Once there go into the ladies room and open the paper towel dispenser. Inside you will find one of my favorite toys. Take it onto one of the tennis courts and make a video of you using it to make yourself cum. Once you're finished send the video to me and I'll pick you up at the guard shack in front of the school. Simple right?\"\n\nSam sat in stunned silence. Finally she managed to form some words. \n\n\"Are you insane? There's almost always one or two people using the track up there even in the middle of the night! Besides that I don't know that I want you to have a video of me masturbating.\" \n\nCarol pulled the car over and stopped. Without speaking she removed her own cell phone, went to her videos and proceeded to play Sam the video she secretly took of her masturbating by the pool. \n\n\"Why should that bother you when I have one already?\" Carol asked. \"As far as people being at the track at night well doesn't that add to the naughtiness of all this?\" \n\nSam sat silently considering her options, \"What happens if I say no? Are you going to send that video to my parents?\" \n\n\"Of course not dear. I'm going to upload it to a number of porn sites,\" Carol replied with her great smile. \n\nBowing her head in acceptance of her fate Sam answered, \"Lets go to the fucking high school.\"\n\nThe rear entrance to the high school was located just off an interstate beltway that surrounded the southern part of the city. No businesses are located near immediately outside the entrance making it fairly secluded. Carol drove her SUV into the parking lot of the athletic complex and stopped near the walk leading to the concession area. No other vehicles were in view. \n\nSam exited the vehicle as Carol spoke, \"Remember, you have to send me a video of yourself on the tennis court cumming with the toy I left for you before I will pick you up. Have fun dear!\" With a flash of that smile she drove away leaving Sam in the parking lot wearing nothing but running shoes and holding her phone.\n\nQuickly Sam moved up the concrete path into the athletic complex. Once out of the parking lot and in the relative safety of the area around the concession stand she paused to consider how to move forward. Now that she was here and alone the fear began to subside replaced by the excitement of being nude in a public place. \n\nReaching between her legs she confirmed it by feeling the moisture of her pussy. \"Sam you've got to be crazy to be enjoying this,\" she spoke into the night. Moving slowly and stopping often to listen for sounds indicating anyone else was around, she crossed the remaining ball fields to a set of concrete stairs. \n\nThe stairs led up to the drive that separated the school from a soccer field and the athletic complex. Halfway up the fifty or so steps Sam froze. Was that music she was hearing? It was faint and when after several minutes it didn't seem to be getting any closer she slowly continued up the steps. Nearing the top she began to hear other noises, voices, and were those moans? Reaching the top of the steps she determined the noises were coming from her right. Moving slowly she peaked around the shrubbery that bordered the drive. \n\nFifty feet away a white Audi convertible sat parked in the middle of the drive facing away from her. About ten feet in front of it sat a Jeep. That, however wasn't the first thing she noticed. What Sam first noticed, bathed in the headlights of the Audi, was the bare ass of a young man, his pants around his ankles. He was fucking a young woman who was bent over holding on to the tire mounted on the back of the Jeep. He was apparently doing a good job by the sound of her moans. Sam immediately felt herself get even wetter than she already was. She was in the shadows and well hidden so she stayed where she was watching the scene. After several minutes the couple changed positions to the side of the Jeep. This allowed Sam a better view of them both. \n\nShe knew them. Zach and Elana had graduated with her but she hadn't been close to either of them. Zach had been on the high school soccer team. He was six feet tall with blonde hair, very fit and from what Sam could see now was very well endowed. Elana, a leggy brunette with a dancers body had, naturally, been on the school dance team. She was completely naked. Zach had lifted Elana up and pressing her ass against the side of Jeep was in the process of giving her a good pounding. Elana was obviously enjoying it if her moans were any indication. Feeling wicked Sam lifted her phone with her left hand and began to video them. Her right hand however moved between her legs and her fingers played with her clit. She watched the couple fuck having no idea that they had an audience enjoying the show. \n\nAfter several more minutes Elana was getting louder, almost yelling, \"YES, YES, YES, FUCK MEEEEE, I'M CUMMING!\" Zach fucked her even harder as she came. As soon as her orgasm subsided Zach let her down and she dropped to her knees grabbing his large cock and pointing it at her face she began to furiously jerk him off saying, \"Give it to me baby! I want that cum!\" \n\nThat was all Sam could take as her orgasm hit. Somehow she managed to keep quiet as she came, squirting for the third time in her life. Zach held out under Elana's relentless attack for a minute longer then erupted covering Elana's face and breasts with his cum. \n\nZach immediately pulled up his pants while Elana remained naked. After several minutes spent catching their breath Elana reached into the car and retrieved a dress. She used it to wipe the cum from her face and body then put it on. Once done Elana got in the convertible and Zach in the Jeep. They drove away not knowing there was a third person they made cum that night.\n\nAfter the cars left Sam stayed put for several minutes replaying the scene in her mind. Even though she recently had a huge orgasm she was still extremely horny. Hornier than she could ever remember being. All she wanted at that moment was to get fucked right then and right there. She realized a couple of other things as well. The first was she wanted someone to see her here, the second was that she was no longer angry with Carol for setting this whole thing up. She sent Carol a text that read: \"You were right! I'm loving this! Here's a video but not of me yet. Enjoy this one for now and mine will follow a little later.\" With that she sent Carol the video of Zach and Elana.\n\nSam knew from experience that the most likely place to find someone this time of night was the track that circled the football field. Her initial plan had been to stay as far from it as possible. Plans change. Leaving the stairs she set off in the direction Elana and Zach had driven. Reaching the back corner of the school she carefully peaked around making sure the coast was clear to continue. She wanted to be seen but still had not decided how to go about it. Walking carefully down the slight hill beside the school she approached the track. Her heart began beating faster, there was a car parked in the space closest to the track entrance. She made it to the corner of the school. She was in the shadows where she stood but the track blazed with light. She couldn't see the far end of the track from where she was so she waited, hoping that the owner of the car was jogging. She didn't have to wait long.\n\nHe came into view within a minute, jogging easily. Shirtless, in running shorts and shoes, he appeared to be in his early thirties with dark hair and was muscular without being bulky. He was perfect for what she intended. Sam let him run past and waited to make sure no one else was using the track. She let him make two more laps and still no one else appeared. The next time he passed she made her move.\n\nLetting him get in front of her by thirty yards or so she left the shadows and began jogging behind him on the track making sure to set a marginally quicker pace. Her 32D breasts bounced in time with her steps. As she closed the distance between them Sam thought to herself that there were two ways that this could end, one good and one bad. Sam got to within five yards of the other runner when he sensed someone behind him and glanced briefly over his shoulder. His head then quickly snapped back over his shoulder to make sure he saw what thought he saw. When he did he tripped, landing in a pile on the track.\n\n\"Oh my God are you okay?\" Sam asked as she ran up to him kneeling down at his side. \n\nRolling onto his back he looked at her with eyes as big as saucers, \"You're naked!\" he said. \n\nSam giggled and replied, \"Yeah, yeah I am.\" \n\n\"What are you doing here like this?\"\n\nSam replied slowly stressing every word, \"Are - You - Okay?\" \n\nThe man shook his head side to side seeming to regain some composure, \"I'm not hurt. I'm also not sure I'm awake. Are you real?\"\n\nSam giggled again, \"You're awake and yes I'm real, I'm Sam.\" ,she said holding out her hand. \n\n\"Gary.\" he replied taking Sam's outstretched hand. \n\nSam stood and helped Gary to his feet. He looked her up and down smiling and said, \"Never in my wildest fantasies would I have ever imagined being lucky enough to run into someone like you here. What are you doing here like this?\" \n\n\"I'll tell you the story but not right here, there's too big a chance someone else will show up. Will you walk over to the tennis courts with me? I'll explain as we go.\" \n\n\"Sure, absolutely!\"\n\nFrom the track entrance to the tennis courts was about two hundred yards straight across a dimly lit parking lot. Gary's eyes roamed up and down Sam's body the whole way. For her part Sam kept stealing looks at the impressive tent that had appeared in Gary's shorts. As they walked Sam offered as an explanation that she had lost a bet to a friend and had to make her way naked from the athletic complex behind the school to the tennis courts and then perform a task. She also told him about seeing the couple having sex behind the school. \n\n\"Those cars were leaving as I got here. So what is it you have to do once we get to the tennis court?\" Gary asked.\n\n\"I have to make a video. That's where you come in. I want you to video me with my phone.\" \n\n\"Not that I mind one bit but couldn't you have just done that by yourself and made it out of here without me seeing you?\"\n\n\"Well,\" said Sam, \"I guess I could have but it would be more difficult. See the \n\nvideo is going to be me making myself cum with a sex toy so my hands are going to be busy.\"\n\nAt that Gary stopped in his tracks eyes as big as saucers again. \"No shit?\" was all he could say. \n\n\"No shit,\" replied Sam, \"Still willing to help?\" \n\n\"Hell I wouldn't miss this for anything! Let's go!\"\n\nThey arrived at the tennis courts a few moments later. Sam disappeared into the restroom and quickly located a black rabbit vibrating dildo in the paper towel dispenser. Returning to Gary she held up the rabbit. \n\n\"Well this is a first for me. I've never used one of these before. What am I saying, this whole night is a first for me,\" Sam laughed. She glanced down at Gary's obvious erection, \"Listen Gary, you've been really great and I need to ask one more favor from you. I've been really horny ever since I saw that couple fucking earlier and I have to cum on this vibrator for the camera to settle my bet. The favor I'm asking is this. Would you fuck me and before you cum pull out and let me jerk you off on my face and tits? I think it will make the video of me with this toy even hotter if I'm covered with cum.\"",
        "It took Gary all of two seconds before replying, \"Oh hell yes!\" \n\nSam took Gary's hand and led him to the net at the center of the first tennis court. Kneeling in front of him she grasped the top of his running shorts slowly pulling them down and freeing his cock. Once free of the elastic it sprung up revealing an eight inch long, thick circumcised cock. Sam's fingers couldn't completely close around it. Opening her mouth she took the head in swirling her tongue around as Gary moaned his approval. She could taste the saltiness of his sweat from his run. After thoroughly wetting it she stood, turned away from Gary and bent over grabbing the net. \n\n\"Please fuck me Gary. I really need it!\" She didn't have to ask twice.\n\nGary positioned his cock against the wet opening of her pussy. Slowly he inserted the head. \n\n\"Oh Gary please don't be gentle, I need to be fucked!\"\n\nWith that Gary grabbed her by the hips and began thrusting his cock deep into Sam's young wet hole. Over and over again, her wet pussy squeezing his shaft, he hammered into her as Sam offered encouragement. \n\n\"Yes Gary, like that, fuck me like that!\" \n\nBetween her young hot body, tight pussy and verbal appreciation Gary knew he wasn't going to be able to last long. He managed to fuck Sam furiously for several minutes and he knew he was getting close to climax. \n\nPulling out he said, \"I'm close Sam!\"\n\nSam spun around, dropped to both knees and took his cock back into her mouth to the back of her throat tasting her juices on his shaft. Slowly she moved her head back sucking hard until the head came out of her mouth with a pop. Looking up into Gary's eyes she began vigorously jerking his cock with her right hand while playing with his balls with the left. In less than thirty seconds Gary let out a loud groan just as the first large spurt of cum hit Sam on her left cheek. The second was divided between Sam's open mouth and chin as she continued jerking the cock aiming it lower on her body. Five more spurts landed glistening on her breasts. \n\nWhen Sam had emptied Gary's balls she made a show of swallowing then smiled and said, \"Tasty, those balls were really loaded. Time for my show, get my phone ready.\"\n\nGary pulled up his shorts and did as Sam asked. Leaning back against the net with her legs spread wide the dildo easily slid inside Sam's well lubricated and slightly stretched pussy. Turning it on she was pleasantly surprised to feel the shaft rotating inside her and the vibrating rabbit ears hit her clit perfectly. Still very turned on from the hard fucking she had received shortly before, she was ready to cum within two minutes. She fucked herself through that orgasm and continued to a second five minutes later. The second causing her to squirt a flood onto the court. As she lay against the net recovering she smiled up at Gary and said, \"Thanks, I needed that.\" \n\n\"Anytime.\" was all Gary could manage in reply.\n\nHer task accomplished she bid goodbye to Gary not wanting him around when Carol picked her up. He went reluctantly and only after Sam told him if he didn't go she wouldn't pay him another visit in the future. The hope that she would show up for a surprise fuck down the road finally convinced him. With Gary gone Sam sent the video he had taken to Carol along with the message that she was ready to be picked up. Carrying the dripping wet dildo in one hand and her phone in the other she walked up to the guard shack to wait. \n\nCarol arrived in less than three minutes. Sam approached the SUV and Carol motioned her into the front seat. Sam opened the door and the interior light revealed a naked Carol. Sam got in and closed the door. \n\nLooking over at Carol she asked, \"Is there any particular reason why you're naked?\" \n\nReaching over Carol whipped a finger across Sam's face recovering a large glob of Gary's cum. \"Looks like you made a friend.\" Carol said with a smile before sucking the cum off her finger. \"I just love the taste of cum don't you?\" she asked.\n\n\"I'm learning that I do,\" replied Sam. \"Now why are you naked?\"\n\nCarol pulled the SUV into a parking space and replied, \"I thought I'd join you for the ride home but first things first. Give me the dildo.\" \n\n\"It's still really wet, sorry,\" Sam replied handing over the toy. \n\n\"Good! I was hoping it would be,\" Carol replied as she scooted forward on the seat, spreading her legs and shoving the length of the still glistening wet dildo deep inside her pussy. She then opened Sam's video on her phone which was mounted on a holder on the dash, started the video and powered up the toy as Sam looked on in wonder.\n\nWatching Carol pleasure herself to her video was one of the most erotic things Sam had ever seen. She watched as Carol's breathing began to get deeper, her fair C cup breasts with their bright pink nipples on the end rising and falling. The black dildo moved in and out of her pussy with it's neatly groomed red \"racing stripe\" of pubic hair above. Her deep blue eyes were fixed on the device as she watched Sam have her first orgasm on camera. The scene aroused feelings in Sam that she had never felt before. Suddenly the idea of having sex with this woman was all she wanted. She began to finger herself as she watched Carol's climax near. When Sam had her second on camera orgasm Carol climaxed also, her entire body shaking as she did. \n\nCatching her breath she looked over at Sam who was rubbing her own clit, \"May I borrow that toy again?\" Sam asked.\n\nNever taking her eyes off Sam, Carol slowly pulled the dildo from her pussy and handed it to the younger woman. Sam took it and slid it into her own drenched hole and began fucking herself as Carol put the SUV in drive and headed for home.\n\nSam had another orgasm just as the SUV turned onto their street. As Carol pulled into Sam's driveway to let her out Sam looked at her nervously and asked, \"Would you like to come come in for a while?\" \n\nCarol flashed her winning smile and said, \"I thought you weren't a lesbian.\" Then laughed and continued, \"Sam, there's nothing I'd like more than to go inside with you and spend the night exploring every inch of each others bodies..... but I can't, not tonight anyway. I have to leave mid-morning and drive to Atlanta for a meeting with my editor so I have to get some sleep. I'll be back in a couple of days and, if you're still interested, then I'd like nothing better than picking up where we're leaving things off tonight. I'll call when I get home.\"\n\nSam got out of the SUV and stood naked watching Carol drive away. Turning she went into the house, up the stairs to her room, kicked off her shoes and crawled into bed. Falling asleep she was thinking of how good that black dildo looked sliding in and out of Carol's fair body.\n\n \n"
    ],
    "authorname": "LeighKent",
    "tags": [
        "sex with strangers",
        "toys",
        "exhibitionist",
        "masturbation"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/sams-naked-adventures-ch-02"
}