{
    "title": "I Came for your Soul",
    "pages": [
        "+++++\n\nA Demonic Romance in Three Acts.\n\nFor him and for her.\n\n+++++\n\nACT I\n\nI noticed her first when I looked over my shoulder. Black-haired, cloaked in trails of smoke and gorgeous beyond description, the demoness just stood there observing me.\n\nI clung to the coffee mug in my hand, which began to shake. I'd been wondering what to do with my life that morning, staring at my reflection in the mirror: slender, gaunt after a late night of studies, halfway through my final year in literature and with no exciting job prospects. At least the coffee was good. I'd ground it myself and roasted it in a little percolator over the stove that morning. My name is Daniel, by the way. I was 27 when this all happened and lived in Prague. I'm telling you this story as a warning. Please read on.\n\nWhen I first noticed her, it took me a few moments to register what I was looking at. A black-haired lady appearing in a mirror... hadn't I seen that before in some video online? This had to be a night terror, I concluded, but damn if it wasn't realistic... even the coffee tasted real.\n\nStill shaking, I closed my eyes. I took a few long, deep breaths. Then I turned around and bravely opened my eyes again.\n\nShe was still standing there, entirely unassuming, occupying what little free space my bedroom offered. A whiff of lavender hung in the air.\n\nI myself stood nailed to the ground. In fact, it was only her breathtaking beauty that prolonged the panic you'd normally expect, having a woman draped in smoke appear out of nowhere into your private quarters. I caught myself staring at her face unashamedly, captivated by her ethereal features.\n\nClassical, actually, is how I'd describe her. There was something ancient about her proud cheekbones and the rich, jet-black hair gushing down past her bare shoulders. After the dirty smoke, hanging about her figure like a cloud pregnant with bad weather, the most curious thing about her was her skin. It was intensely pale, verging on the blue.\n\nThe woman, for lack of a better word, appeared to enjoy the attention. Her grey eyes began to return the favor, tracing the shape of my lean body, seemingly undressing me in her mind. With a half-smile, as if satisfied, she bit her lip.\n\nThis must be a dream, my mind insisted.\n\n\"You're not dreaming, Daniel.\"\n\nAs she spoke, a lovely warmth washed over me like a Roman steam bath. In surprise, I took a step back and tripped onto my bed.\n\nHer voice! \n\n\"Do you like the sound of it?\"\n\nLike honey the words now flowed, thickly, penetrating my ears, nose, and mouth... intoxicating me. The skin of my chest tingled underneath my bottom-up shirt. Dizzily, I reached for my head. My face felt tender and I inadvertently let out a sigh when my fingers brushed past my lips. What was happening to me?\n\n\"You can... hear my thoughts,\" my drugged mind finally managed.\n\n\"I can do many things for you,\" she said deliberately, as she positioned herself next to me on the bed. She leaned over and whispered into my ear: \"I have come for your soul, but I cannot take it without your permission.\"\n\nHot, inescapable, as though I'd stepped into a sauna at full capacity, her breath engulfed me.\n\n\"I know, my presence is a bit much,\" she apologized. \"I'm just so very excited to see you.\"\n\nI closed my eyes and the world began to spin, but when I pried them open again, she was still sitting there. Could it be that this was not a dream?\n\nI felt overwhelmed and my eyes drifted to her dress. No, wait, it wasn't a dress at all. It danced like smoke over an extinguished candle, clouding her in a suggestive darkness that occasionally failed to cover the bluish skin below.\n\nDazed, I irreverently followed the shape of her figure, wherever it appeared. For a split second I thought I saw a nipple, as purple as a plum, when the woman hooked her finger below my chin and gently pulled my face up towards her.\n\nShe smiled, conspiringly, as a professor would at her favorite student.\n\n\"My eyes are up here.\"\n\nAnd so they were, narrowing a little as she spoke, a quiver of her eyelashes luring me in like a serpent. I shifted my gaze up towards her flawless eyebrows, arched in mock surprise, until finally I had no other option but to drink in the sight of her eyes. Grey pools of lust and power, they dragged me in deep. There was a shimmer of dark red down there, and at long last I grew frightened.\n\n\"I came for your soul,\" her voice rang again. \"Will you give it to me?\"\n\nBreaking eye contact, I jumped up and fled from my bedroom, slamming the door behind me without looking back.\n\nI was properly panicking now and stumbled into the kitchen. My hands trembled as I splashed some water in my face. I filled a dirty glass from the sink and downed it in a few gulps - filling it a second time for good measure.\n\nWas I going insane?\n\n\"Dude... are you ok?\"\n\n\"Jesus!\"\n\nI dropped the glass and spun around.\n\nAnd collapsed against the sink with a sigh of relief. \"Martin, what the hell, you scared me.\"\n\nI would introduce you to my housemate Martin at this point. However, he was stoned like a grapefruit and he's not exactly that interesting to the story. Making a vague excuse, I retreated to the living room and collapsed onto our sofa, head heavy in my hands. From the corner of my eye, I saw Martin stare confusedly at the bag of chips in his hand.\n\nI tried focusing on my breath again, when I noticed our cat Trouble. Surely she would keep me safe. Smiling wanly, I reached out to say hello - when she hissed at me!\n\nWhat the hell?!\n\nAt that moment, I saw the woman emerge from the hallway. Still shrouded in smoke, she strolled leisurely past the kitchen and Martin - who chewed on thoughtfully without noticing her - and into the living room where I was sitting.\n\n\"Hell indeed. Second circle,\" she began.\n\nHer presence was entirely too much. I sank deeply into the leather sofa, feeling more stoned than Martin.\n\n\"Ever read Dante? He got most of it right, although he didn't seem to like the place much.\" She stretched her slender arms lazily behind her back and stared out the window for a brief moment, before returning her attention to me.\n\n\"Let's keep it simple. The gentleman eating Doritos in the kitchen can't see or hear me. Nor can anyone else, except for you - and cats, of course.\"\n\nShe hissed back at Trouble, who had shrunk into a corner, petrified.\n\nThe mysterious woman smiled, flashing her perfect white teeth. \"As I said earlier, I am here for your soul. You are now twenty-seven and at the handsomest stage of your life. No - don't go away again.\" \n\nShe reclined next to me on the couch, her ass stretching out the leather.\n\nWould Martin be able to see her imprint?\n\n\"I have such a weakness for academics, but you do tend to overthink.\" Her hand touched the side of my face, drawing my attention squarely back to her. \"Stop thinking and listen.\"\n\nDespite myself, I shivered with pleasure at the caress. It wasn't just nerves, I realized. As if she were a harpist, her touch sent my body vibrating to its core - all the way from my face down to, well, you know.\n\n\"This is the deal, my sweet prince.\" She bent over towards me, all the way until her flushed lips hovered right in front of mine. \"Before midnight, I must take your soul and set your empty body to work in this meaningless world. That is the price you have to pay.\"\n\nAgain that smell of lavender... She put her hand on my leg to lean even closer. Another millimeter and the tips of our noses would be touching. \"In return, you and I will spend one night in each other's arms and I'll give you greater pleasure than any of your species has ever experienced.\"\n\n\"My species?\" I blurted, desperately trying to change the topic.\n\nMartin looked up from the kitchen again: \"Dude... are you ok?'\n\n\"Just think the words,\" the demoness suggested, \"it will be more convenient for everyone.\"\n\nThen those red lips curved up with an infectious laugh, and it was hard not to grin myself. Languidly, she surrendered herself against the sofa to observe me, expectantly but without pressing for an answer.\n\nWho are you? I tried thinking.\n\n\"You may call me Erea,\" she said patiently.\n\nI had to contain myself. My hand, almost with a will of its own, had wanted to reach out and touch her long black hair, which spread over the red leather invitingly, every now and then disappearing into the opaque storm of smoke. Where were these thoughts coming from?\n\nThank you for the proposition, but I'm late for class. \n\nBefore she could object, I jumped up and stormed out of the apartment without backpack, books, or wallet, or any idea of what was happening. I just knew I had to leave, as fast as possible.\n\nThis time she did not follow me. I know because I kept checking over my shoulder as I hurried down the cobbled streets of Prague towards the city center.\n\n\"This can't be real. This isn't real.\"\n\nI stuck my hands deep inside the pockets of my jeans, making fists against the cold.\n\n\"This can't be real. This isn't real.\"\n\nWithout my bus pass, I had to walk forty minutes to get to my university. It was November, and I was beginning to shiver violently. Real or not, the rest of my day would really suck without my backpack.\n\n\"This can't be real,\" I repeated to myself again, aloud. \"This can't be real. This isn't real.\"\n\nI briskly walked the route to school, mumbling like a madman all the way there. Try as I might, I could not wrap my head around what had happened. My mind refused to comprehend, to accept the possibility, of a seductive demoness having arrived to steal my soul.\n\n\"This can't be real. This isn't real.\"\n\nWhen I finally entered the warm university halls, it was all I could do to stop frantically repeating those two sentences.\n\nI made my way to the lecture hall, sinking into one of the chairs to look down at the podium. I finally relaxed somewhat. Professor Lidmila was not too hard on the eye herself. I had partially chosen the course because of her: I was studying literature and had little professional interest in her class on the cultural impact of the climate crisis.\n\nProfessor Lidmila had only gotten halfway through her introduction when Erea appeared inside the lecture hall, and any chance of fleeing into the routine of my day dissipated for good.\n\nThe demoness had been descending down the stairs of the auditorium from the back, so I only noticed her when she passed by. I froze and could only watch in horror as she continued her way down towards the podium. With every step the black smoke shifted, clinging to her shape now like a luxurious gala dress, then a dangerously revealing bathing suit - and all stages between and beyond. A show, I realized, when no one else looked up, that was intended just for me.\n\nMy hands clasped the desk when Erea paused in front of my professor, who remained unaware of her presence and continued her lecture on nitrogen compounds.\n\n\"She's lovely,\" Erea observed, just loud enough for me to hear. \"You've got a good taste in women, Daniel.\"\n\nThe demon strolled around the stage, then suddenly came up close behind the professor. The smoke flowed all over the podium now, as Erea's pale fingers began tracing the outline of Professor Lidmila's shape, before playfully cupping her sizable breasts.\n\nI let out a moan of protest.\n\nProfessor Lidmila stopped mid-sentence, still unaware of the demoness visibly admiring her figure. Looking up, her dark, intelligent eyes searched the audience, until they found me. \"Sorry, Daniel - did you have something to say?\"\n\nI vigorously shook my head and apologized to my professor, even as Erea extended her tongue tantalizingly close towards her ear...\n\nI jumped up. Dizzily, I ran up the stairs, barely managing an apology before escaping the auditorium.\n\nEventually, she followed me into the bathroom. I'd been splashing water into my face, on the edge of a nervous breakdown, when Erea reappeared in the narrow space between me and the faucet, arching her back to offer me a full view of her chest.\n\nI backed away, hitting the stalls. I looked for the exit, but she now stood between me and the door. The mirrors rapidly fogged up, as the cold water suddenly ran warm. Erea lowered her gaze with a smile. Her sweet breasts still showed, a lovely sight that had been right in front of me just moments ago... The smoke retreated suggestively, a single sliver covering her crotch, like some Victorian fig leaf.\n\nHad she been naked all this time?\n\n\"The answer is yes.\"\n\nErea slid off the porcelain basin. With confident strides, she closed the distance between us and pressed her hand against my chest, pushing me gently back against the bathroom stall.\n\n\"Why don't you stop playing around? I know exactly what you want.\"\n\nThe burning heat of her skin pressed through my shirt and made my heart race.\n\n\"How about I give you a preview of all the pleasures that await you, should you decide to give me your soul?\"\n\nShe kicked open the door of the stall behind me, nodding commandingly. Three times now I had tried to escape her, but Erea had followed me no matter where I ran. The demoness' beauty was overwhelming, and she had drained the last of my resistance.\n\nYou will not take my soul, for whatever happens inside this bathroom? \n\n\"I will not take your soul yet.\"\n\nDefeated, I stepped back.\n\nErea followed me inside, her slender figure now dangerously close to mine. She snapped her fingers and the lock behind her clicked shut.\n\nGraceful, like a priestess, she knelt before my feet.\n\n\"I have been watching you for a long time,\" she mused, enthusiastically pulling down my pants.\n\nI stood as stiff as a pillar, but that fact gave her no pause. Black nails gripped my boxers and jerked those off as well.\n\n\"I've waited a long time for this moment. To finally have you...\" Like the sun, her beautiful smile broke through the smoke. \"And haven't you been mean, to be playing so coy?\"\n\nShe gazed up at me - all along the shaft - and her grey eyes trapped me.\n\nThe tip of her tongue, which I realized was just a bit longer than it should have been, began to trail its way up. Left and right it wandered until finally, the tip rested at the top.\n\nA single drop of saliva rolled down my penis.\n\n\"I will show you why tonight, you shall give me your soul for all eternity.\"\n\nWithout breaking eye contact, she took me fully into her mouth.\n\nOne smooth stroke was all it took, until her lips closed around my base. Her pale, elegant neck stretched out and appeared to vibrate with pleasure.\n\nSnake-like, she began to sway left and right, as if to find the right hold over my member. Never mind that I was already entirely inside her mouth. Without breaking eye contact, she then began to suck me off, balancing on the balls of her feet as she rocked back and forth.\n\nThe stimulation she gave me then was beyond anything you can imagine. Intoxicating smoke filled the stall, oh so hot... I felt her fingers slide down my lower back, nails pinching my ass as she grasped for support. Soft as velvet, her tongue rolled around the skin of my penis.\n\nNow her mouth would retreat, suckling just at the tip. Then like a stream of lava she washed back over me again, claiming me for herself. From her nose appreciative moans rang through the bathroom, her hot breath brushing over my pelvic area.\n\nHer lips massaged the soft flesh, kneading it pro and forth, leaving me in ecstasy.\n\nThere came a moment when, overcome by lust, I reached out for her black hair. My fingers searched and got lost momentarily, until below the gleaming mess, they found her scalp.\n\nI instinctually clasped her skull and began dictating the pace.\n\nErea threw her curvy shape up against my legs, humming with pleasure, in an attempt to hold me even closer. I pressed on further, deeper, discovering ever-richer folds of luscious flesh inside of her demonic throat.\n\nI could barely see the walls for the smoke. It was just the two of us, at the center of it.\n\nHer naked body steamed below me; her glistening breasts pressed up against my knees. The blue skin on her cheeks now blushed a raw red, even as her eyes still refused to lose contact. My hands grasped desperately around the base of her skull, then her neck, even as her fingers trailed all the way down around my ass, towards the back of my crotch...\n\nThere, I exploded. The sensation of coming down her throat was too much to handle and I entirely forgot to breathe. I just stood there, throbbing violently, while Erea gently took back control of the situation.\n\nHumming a vaguely familiar melody now, she sucked me off properly, then licked along for a little while, before finally wiping her glistening lips, satisfied. Smiling, she propped her athletic figure back against the door of the bathroom stall, seemingly content to just observe me.\n\nI noticed the lower half of her face had turned into a flushed, gleaming mess of spittle and cum. I experienced a perverse arousal in seeing a creature of such ethereal beauty despoiled in such a dirty place.\n\nReading my thoughts, she panted softly: \"My sweet Daniel... You will be mine by midnight.\"\n\n+++++\n\nACT II\n\nI arrived back at the apartment frozen to the bone. I had taken the long way back in the hopes that I could somehow shake the demoness off my trail. I strolled by the river, sat down on a freezing park bench for a while to watch the sun set, before finally began making my way back home.\n\nStiff with cold, I retreated straight back into my room. I barely registered that my housemate Martin had passed out on the couch - right where Erea had first asked me for my soul. I considered waking him up to keep me company, then thought better of it. What if Erea started making out with him? Strangely, the thought made me feel jealous.\n\nI locked my room and fell back against the door, collapsing onto the floor. I felt weak in the knees and realized I was hungry - ravenous, even - but I was in no mood to make dinner.\n\nI glanced at my watch, shivering. It was only four and a half more hours until midnight.\n\nThen she will disappear. \n\nAt that thought Erea reappeared, her divine figure languishing belly-down on my bed. Tongues of smoke licked her supple legs, which were folded at the knees, feet crossed over her buttocks. Small toes wriggled invitingly. \n\nA beast inside me stirred. Furious, I wanted to punish her for her continuous intrusion, take her right there and then. But instead I forced myself to ignore the bed and simply stared down, tracing the patterns on the floor's cold tiles.\n\n\"I can make you warm, you know?\" The demoness managed to sound concerned.\n\nI am not sleeping with you. \n\n\"Just this once, that's not what I meant.\"\n\nErea casually snapped her fingers and suddenly the light in the room changed. It turned redder, although that fails to do it justice. It wasn't just the light.\n\nIt felt as though the Holidays had arrived already and someone had lit a cozy fire inside my room. I could smell logs crackling and began to feel warm and comfortable, as if wrapped inside a thick blanket. The heat crawled into my insides as well, filling my throat like a sip of steaming hot chocolate. To top it off, little red lights floated around the room, spreading a suggestive glow.\n\nMy body began to relax, and I felt drowsy... which was dangerous! I shook myself awake, trying to stay vigilant, only to be hit in the face by a pillow that Erea threw my way.\n\n\"Will you relax? I'm not the devil!\" she bristled, slinking down onto the floor next to me. For the first time, the ancient woman did not seem to be seducing me - at least not actively. \"You have to consent to sleeping with me, otherwise it doesn't work. And consent doesn't work if you can't think straight.\"",
        "What are you doing here? \n\n\"I already told you. I've come for your soul. But you can only be mine if you want to be, I won't force you.\"\n\nHer words gave me pause.\n\n\"I'm sorry, it's just...\"\n\n\"You've never seen a demon in the flesh before?\" A sad smile spread over Erea's face and she rested her head back against the wall. \"I understand, you must be nervous. Frightened even.\"\n\nSomehow, melancholy made her even more beautiful. She started another hum, raising little shapes out of the smoke around her. Mythical beasts began exploring the room, while beautiful birds fluttered upwards. \"I'm not supposed to tell you, but you're my first visit to earth in a thousand years. We only get one visit per thousand years, you see. I get to try and convince you to come with me - and you of course have the right to decline.\"\n\nA smoky dragon now perched on her hand and took off for a flight around the room, catching one bird after the other, viciously shredding them into nonexistence.\n\n\"You don't have to feel bad if you decide to stay. All the others have stayed behind, after all. Although there was this one philosopher, some two, three thousand years ago... he was gay ignored my seductions, which was really just my bad luck, but then to add insult to injury, he kept trying to reveal me to his philosopher friends. What a waste.\"\n\nNow she looked positively miserable. \"Really took a number on my self-esteem, that one. He ended up jumping into a live volcano, just to try and find me again... for scientific purposes! I had explained to him in clear Greek who I was and what I wanted from him, but he just couldn't care less.\"\n\nDespite myself, I laughed - and then I couldn't stop.\n\n\"Don't mock me.\" Erea sighed and made the dragon land on her arm, where it dissolved. \"I want to find someone to call my own! Someone to play with, to talk to.\"\n\n\"I'm sorry.\" Her words gave me pause. \"My soul. You wouldn't give it to the devil?\"\n\n\"Of course not. He likes to get on a first-name basis before getting into any of that. I just wanted you for myself, to be honest.\"\n\nI looked at her differently then. This ancient creature in a youthful body... did demons get lonely?\n\n\"So, out of all the men and women on earth you chose me,\" I coughed.\n\n\"Yes,\" Erea smiled wistfully. \"A full twenty-four hours with my pick of the crop.\"\n\n\"Hang on,\" I frowned. \"The deadline's at midnight, so what were you doing all morning?\"\n\nShe giggled. \"I was watching you sleep. I do enjoy the way you mumble in your dreams.\"\n\n\"And when I woke up?\"\n\nShe hit me in mock outrage, and my whole body lit up with excitement at her touch. \"I may be from hell, but I'm not evil. You don't think I'd let you wake up and get some coffee, before introducing myself?\"\n\nYou can imagine I was beginning to feel rather sorry for Erea. She would have to go back down there to wait for another thousand years, just to have another shot with someone else... who might not take her either. Perhaps she really did have a bad sense in picking men, choosing only the ones who'd refuse to come with her?\n\nMy eyes drifted towards her toes again, when suddenly an idea blossomed in my mind. She must have felt my excitement, because she looked up with a blush. \"What is it?\"\n\n\"What if...\" I braced myself and took her hand.\n\nMy god, as if I were jumping off a cliff, or tasting apple for the first time, or-\n\n\"No need to flatter me,\" she interrupted, squeezing my hand. \"Tell me about your idea.\"\n\n\"You've come here to convince me to give up my soul, which I cannot do. So we cannot sleep together and yet... you gave me the best blowjob of my fucking life. In a bathroom stall. Surely that means the rules are flexible?\"\n\nShe sat up, the smoke flaring up around her. \"I'm listening.\"\n\n\"I feel bad that I can't come with you, but before you go back for another thousand years, I want to make your time here worth your while. Is that possible, or will that cost me my soul?\"\n\nShe looked taken aback. \"You'd do that for me?\"\n\n\"I would, but you must promise that you won't take my soul for it.\" I glanced at my watch. \"We have another four hours, give or take, before you have to leave. The least I can do is repay you for all the pleasure you've given me.\"\n\nShe nodded, strangely shy all of a sudden.\n\nIt was my turn to order her around: \"Get on the bed.\"\n\nErea seemed aflush with emotion but hesitated. \"I can see in your mind what you're planning, but if you give that to me, I may not be able to hold back... is that ok?\"\n\nI sternly told her that I would give her - achingly slowly - whatever came across my mind. She could ask of me whatever she desired, but I would still decide at what time.\n\nWith those words, the demon surrendered. Gracefully, like a scene from some Romanticist painting, I found her sprawled out on my bed.\n\nThe bedsheets shivered with heat, as I knelt by her feet and began by softly kissing her toes.\n\nI allowed myself to run my fingers along her shins, which shivered at my touch. Kissing my way upwards, ever so slowly, I passed by her knees, her upper legs, and then all the way around her thick thighs.\n\nI nibbled, licked, and bit before finally arriving at the sight of her mount.\n\n\"Don't stop,\" she breathed, her nails clawing at my head.\n\nBut I was busy appreciating the view. Through curls of smoke I admired the glowing hills of her grey-blue flesh - dead, somehow, yet vibrant with sexual energy.\n\nYou are beautiful.\n\nI stayed there for a while, partially to tease her, partially captivated. Literally smoking hot, the steam around her body coalesced into little pearls of condensation, tiny ornaments on the supple skin of her belly. I watched one roll down, accelerating slightly before it paused at her clit, then continuing its journey downward to disappear somewhere in the folds of her shiny shaft.\n\nThat was my cue. Ever so slowly, I began brushing the tip of my nose around her pubic area. She was shaking violently now, grasping my hair yet refraining from pulling me closer. I knew she was enjoying the wait.\n\nI nudged my nose inward, closer and closer. I let out some breath, tantalizing her pussy, which seemed to widen in anticipation.\n\nAt long last, tentatively, I let the tip of my tongue trail the rim of her outer labia.\n\nThe flesh gave way willingly, and she stopped shivering: she was in the grip of a higher kind of tension now. Soft, desperate moans began to fill the room.\n\nI stopped again, feeling overpowered myself. The touch of my tongue against her vagina was divine. She tasted vaguely salty, even as an indescribable perfume was spreading from between her legs. It made me mad with passion and it took all my willpower not to take her for myself.\n\nBut I contained myself, mindful of my soul, and began rubbing my tongue up, down, and all around the outer edges of her plush vagina. I took my time, occasionally foraying outwards to suckle her thighs, her pubic area, and then her ass. Only when she could no longer take the suspense, did I begin circling her clit.\n\nShe grasped the sheets now, and her moans gave way to a low, rumbling pant. As I began to sink away from the clit towards the gateway below, the panting intensified.\n\n\"Please, please, just do it now!\"\n\nShe was going mad and I loved it.\n\nI held back and waited, circling back outwards to plant a quick kiss on her inner thigh.\n\n\"Daniel, you mortal fool! Take me or I will curse you and your descendants for all eternity!\"\n\nThere was a hint of laughter in her raucous panting. But then I saw the angry glow of hieroglyphs, curving in thinly edged lines all around her pale body. I rapidly returned to the task at hand.\n\nI stuck my tongue inside of her and even as she screamed, my taste buds exploded.\n\nThe odor I had smelled before entered my system at once. Golden nectar, her pleasure filled me up, and I realized suddenly that I must be feeling what she was feeling.\n\n\"Empathy of the soul,\" she managed. Whatever it was, suddenly we were both enjoying my tongue and I could not have stopped penetrating her if I'd wanted to.\n\nIn and out I stuck my tongue, in and out, in and out... and we rode waves of ecstasy together. Unable to get enough of the luscious taste of her pussy, I pressed all of my face against her, giving her everything and losing myself in the process.\n\nI only kept enough reservation to retreat, whenever I noticed her coming close. At those moments, I would return to nibbling, stroking, sucking her pussy. One such times, on impulse, my one hand trailed up and found the lower end of her breast, so scalding to the touch that I almost pulled back.\n\nBut I insisted. My grasp was hesitant, then firm, and she choked up with pleasure. The heat somewhat declined and when I looked up, I almost lost myself again: the bounce of her breasts as she convulsed was a treasure beyond description. But were they worth my soul?\n\n\"Please, your fingers... now!\"\n\nI entered two fingers into her at once, reaching up for where I assumed her demonic G-spot would be.\n\nI found it instantly.\n\nErea was shrieking with pleasure. I stroked her, firmly, in and out again, until my entire hand glistened with her dew. Then I reached back down with my face, and added my lips and tongue to the mix.\n\nI don't remember well what happened afterwards, so lost did I get in the hypnotic rhythm of satisfying the demoness. We spent eons lost in pleasure together, and I must have had her a thousand times with my tongue, my fingers, and finally my entire hand.\n\nWhen we collapsed, at last, I found her staring at me, wide-eyed. I'm not sure I could have pleased her more.\n\n\"There's only one way that would've been possible,\" she panted.\n\nI shifted a little, keeping some distance on the double bed to prevent myself from getting any ideas. It was a quarter to midnight, and I had spent three hours going down on her. Enough was enough.\n\nMy dick still stood erect, but in a way I couldn't have been more satisfied myself.\n\n\"There's only one way that would've been possible,\" Erea quipped again.\n\n\"Will you stop reading my mind?\" Exhausted, I smiled and closed my eyes. \"That was incredible, I've never felt this way before.\"\n\n\"It's called the empathy of the soul,\" Erea explained, lazily running her fingers along my face. \"Our bodies are real enough, but it's really our souls that are doing the sexy part. Doesn't it feel good?\"\n\nI smiled apologetically: \"You've almost convinced me, but I won't give up my soul for just fifteen minutes of sex - not even with you.\"\n\nShe shifted onto her side to face me, while the smoke danced around the both of us. \"I think that's part of why I picked you - you're not the type to give in so easily.\"\n\n\"I won't try to convince you,\" she continued, \"but just so you know, it wouldn't be but fifteen minutes. Your soul would still be yours for as long as we're having sex - you could come inside of me as often as you want. We could go all night, if you so desired.\"\n\n\"Let's just lie here for a little, ok?\" I took her hand in mine. For a while we did just that, watching the moonlight cast long shadows across the ceiling.\n\n+++++\n\nACT III\n\nIt was five minutes to midnight.\n\nMy dick was still hard. It was impossible not to be aroused next to Erea's timeless curves, although, to her credit, she had stopped trying to convince me to give up my soul.\n\nI was about to whisper my farewell, when there was a knock on my door.\n\n\"Hey Danny,\" a muffled voice came. \"You've got any more of those instant noodles, by any chance?\"\n\n\"No dude, sorry.\"\n\nWe listened, as Martin retreated down the hallway.\n\nErea bit her lips. \"I wasn't going to tell you, but it'll definitely be the Third Circle for that one.\"\n\nI glanced at my watch again. Just as Erea was about to disappear from my life, I began wondering in earnest what I really needed a soul for anyway. I thought of my dreary life, stretching into the weeks and months ahead. I suddenly felt very tired and wondered if that's what I truly wanted. Behind me lay nothing, and which man alive could claim to have fucked a demoness?\n\n\"I promised myself not to try and convince you.\" Erea suddenly rolled onto me, lithe like a cat. I felt her body press down on me, her pussy leaving a wet imprint on my shirt. There was a look of urgency in her eyes: \"I can't help it. Daniel, fuck me now.\"\n\nI want to, but I can't.\n\n\"I know you. I've watched you for months, and I would not have picked you without a reason... do you trust me?\"\n\nShe looked at me, searchingly, imploringly. Again there was that red shimmer of power in her eyes. Lust, power, and possibility? Was I really about to trust a creature from hell?\n\nOvertaken by the moment, I kissed her. It was just a quick peck, of the kind that high school lovers exchange when parting ways: fleeting like the wind, with a promise to return.\n\nFor me, for us, it was a watershed. It was the moment when it became impossible to look back.\n\nShe knew my mind. She knew what I wanted. She knew how I wanted it - all night long.\n\nShe quickly rolled off me, sitting by my side. \"I need you to speak the words.\"\n\nI sat up and took her hand in mine. The words came naturally, and I spoke them gladly: \"My soul is yours, for now and all eternity.\"\n\nWe labored together, fast and with sparse movements, to get me undressed. I unlaced my boots and pulled off my socks, while she reached around from behind to deftly unbutton my shirt.\n\nShe took off my belt - tossing it onto the bed with a sly wink - while I escaped from my pants and underwear, standing naked in the moonlight.\n\nShe embraced me victoriously and we fell back onto the bed, where she quickly pinned her plump ass down onto my crotch. I had no time to speak, no time to make a move. Before I knew it, she engulfed my member, drawing it deep inside of her soaking wet pussy.\n\nI croaked. It almost ended right there and then, so good did she feel. She felt the same, and we barely moved for the first few minutes.\n\nDid we make it in time? I wondered, feverish at the feeling of her squeezing down on me.\n\n\"We did, we're still here,\" she whispered. \"We can take our time now.\"\n\n\"I cannot explain to you how long I've wanted this,\" she then moaned, eyes half closed as she glanced down at me. Her black hair fell past the side of my face, tickling. She brushed a long strand of itbehind her ear, then planted a kiss on my lips.\n\nI could sense how much she enjoyed my penis throbbing up inside of her, when suddenly I became aware of the pair of fine breasts pressed against my chest.\n\nErea was aware of them as well. Sensually, she began to rub her torso up against mine, the heat making it an easy slide. My hands brushed over her waist towards her lower back, and lower still, until they took hold of her monumentally nice ass.\n\nShe kissed me, stroking my face coquettishly.\n\n\"I know precisely what you want... shall I give it to you?\"\n\nI nodded.\n\nWith great deliberation, she began shifting her weight around my crotch. After a while, she began riding me in earnest. It was all I could do to hold on to her thighs, so good did it feel when she rocked her hips over me.\n\nI'd like to say I mounted a vigorous assault, but in fact it didn't take too long before I came. I was grasping at her tits, and she herself was balancing on the top of my member, her perfectly arched body shivering with bliss. Out of that long orgasm, she finally collapsed onto my torso. I was grateful that at least I'd been keeping my body in fit condition, so that I had something substantial to offer as pillow, in return for all the joys of her tight form.\n\nI didn't get to enjoy the post-coitus laziness for long, as Erea demanded I got up.\n\nI stood there, lazily admiring her. The tiles under my feet should have been freezing, what with the November cold creeping into the old flat. Instead, it felt as though I stood on a thick carpet near a fireplace.\n\nShe approached me slowly, like a tiger stalking its prey. From her hand bungled my brown leather belt and for the first time in a while now, Erea scared me a little. Once again, deep red lines shimmered against her pale skin. Nordic runes this time? Suddenly invigorated by her magic, I once more felt myself at the tip of my capabilities.\n\nBut when I made to move she stopped me, and pressed a slender finger against my lips. Only then did I become aware of the devil's tail - a smooth, black thing - flicking playfully behind her.\n\n\"I don't know if I'm into that,\" I whispered, realizing with horror where this was going.\n\nErea pressed up against me: \"Trust me, you are - you just don't know it yet.\"\n\n\"No, I insist, I -\"\n\n\"Shut up.\" She smacked me across the face with the belt, only slightly playful, before making it up with a drawn-out kiss. Grasping my head, she forced her magnificent tongue far into the recesses of my mouth. I still felt the leather burn on my cheek.\n\n\"I won't do it if you don't want me to,\" she finally whispered, withdrawing. Turning around, she leaned over against my bookcase, her tight ass perked up into the steamy air like an offering.\n\n\"Spank me for a little while.\"\n\nI took the belt from her grasp and whipped her white buttocks. But it didn't take long before she bid me move on.\n\n\"Now do me from behind, Daniel - I do like anal.\"\n\nThe black tail flicked at me playfully as I approached, writhing all the way up from her tailbone.\n\nI was slightly put off by it, but then grew mad with lust at the sight of her second opening. I grabbed her firmly at the waist, pulling her body back so I could rub my dick between her legs and past her pussy a few times. When it gleamed I began, ever so slowly, to wet her ass.\n\nI intended to be careful - as careful as I'd been with her pussy - but Erea would have none of it.\n\n\"I am ready. I want you inside me.\"\n\nFirst went the head, with just a bit of resistance. When it popped in, things slowed down, but only for a moment. Then her hole opened up further and my shaft slid inside in its entirety. I heard my body slap against hers.\n\nShe screamed with pleasure, black nails scratching the wood.\n\nSweet Lord, she was tight. I panted and began shoving my dick up and down. Then I pressed my body more tightly against hers, drilling ever deeper into her ass in the ecstatic knowledge that each thrust drove her a little more crazy.\n\nAlmost reflexively, her smooth tail flicked up, over Erea's shoulder and down towards her face, where she began sucking it as vigorously as she had sucked me off in the bathroom today. Deep inside her throat it went. When she finally let it go again, the black skin glistened dangerously in the moonlight.\n\nShe guided my hands towards her breasts and began breathing very fast now. I grasped them eagerly, then played with the nipples for a moment before biting her neck. I was taking her, all of her: her whole body was mine and she begged for me to take it, pressed up onto her toes with pleasure.\n\n\"Faster, harder! I want you to fuck me harder!\"\n\nBut there I paused, for suddenly it felt as though I was the one being penetrated. Was this the empathy of souls?\n\nThen I realized that her tail had snuck up around my waist, tracing down around my upper leg, where the tip now rubbed my own ass.\n\nWhat are you doing?! \n\nShe looked back over her shoulder with a playful glance, still panting.\n\n\"Do you trust me?\"\n\nNo - I mean, I don't know!\n\nMy protests were cut short by a piercing sensation. The pressure felt soft and wet at first, then painful.\n\nI began to panic. I wanted Erea to stop and almost told her so, but then all of a sudden both pressure and pain gave way, and I felt her thick tail sink slowly inside of me.\n\nAhhhh...\n\nWhat I then felt was better than any sensation I'd yet experienced that day. I could feel her warm rod fill me up inside, searching around teasingly. My mouth hung wide open in ecstasy. How could it be humanly possible to feel such pleasure?",
        "\"I told you,\" Erea breathed, as she slowly set her tail to work. Smoothly, gently - lovingly even - she fucked me, giving me time to get used to the sensation. When she could feel she had it just right, she picked up the pace, flicking her tail in and out, in and out, reaching at last the point where I felt I was going to pass out with pleasure.\n\n\"Gotcha,\" she panted victoriously, \"I'm on the edge as well... now you finish it.\"\n\nI pulled her hair and pinned her against the bookcase and began pounding her again, even as her black tail continued my own punishment, sliding in and out of me and slamming my body against hers.\n\nMy hands found her steaming breasts and at the ninth stroke, I came inside her ass. It was the happiest moment of my life.\n\nErea then retreated with a sigh and I felt the tail slither, then pop out of me. In that instance I felt curiously sad, as if I'd lost a good friend.\n\nThe demoness escaped my grasp, but I could tell she wasn't done yet.\n\nAs she reclined onto the bed, I once again saw the cursed red signs glow all over her naked body, and once again I felt the manic rage of a wounded beast, unable to wait another moment to ravish her body. She beckoned me by splaying her pussy, even as her tail flicked mischievously in the reddish light.\n\n\"Come here and take me - whichever way you want.\"\n\nI descended onto her.\n\nGrasping her hands, I pinned her down against the bed. Then I drove my dick deep into her fleshy mount, again and again, until she was yelling at the top of her voice, giving me fast, breathless shrieks of pleasure.\n\nI kept this rhythm up for a long time, furiously, before I relaxed into a somewhat slower pace. I began to explore her beautiful face with my lips. She responded vigorously and before I knew it, our tongues were having a little orgy of their own inside each other's mouths.\n\nHer smell, her taste, the hot touch of her skin against mine drove me crazy.\n\nThe mischievous tail then began caressing my abs and wrapped itself snugly around my torso. From there it snuck down towards my ass again, but I was prepared this time. After a moment of discomfort, I opened up and was finding double enjoyment in each of my long strides.\n\nOn the way in there was Erea's pussy, welcoming and moist. Hot as hell, it eagerly clung to me, slopping when I retreated before gratefully taking in the next thrust, provoking a raw cry of pleasure from the demoness.\n\nOn the way out there was the pulsing demon's rod. It now glowed with red marks as I rode it furiously, back and forth, and back and forth... damnation and salvation. Each slide was a higher wave euphoria that Erea and I rode together through the emphatic connection of our souls. I bit my lips until they bled, experiencing the new-found joy of being penetrated and fucked hard even as I pounded a creature of divine beauty.\n\nTowards the end, we were holding onto each other for dear life, our glistening bodies locked in a tight embrace. On we rode, and on, and on, and on...\n\nFinally Erea shrieked desperately, clawing my back open in the midst of her orgasm.\n\nAt that same moment, I felt a shiver all the way from the core of my gut to the tip of my shaft. With a final thrust into the greedy, grasping folds of the demoness' vagina, the beast in me erupted.\n\nSpent, I fell into Erea's arms. The semen continued to flow out of me lazily, filling her up inside. I could tell that she was incapable of speech as I was. Our bodies glowed under the floating red lights and the perfume of her cunt was all over me.\n\nAt long last, smiling like a fool, I closed my eyes.\n\n+++++\n\nEPILOGUE\n\nI woke up feeling better than I'd ever felt before.\n\nI felt fresh, as if every breath I took was pure mountain air. I felt clean and muscled, as though I had just showered after a workout. Above all, I felt a deep and intense joy, as if I'd just been kissed by a lover.\n\n\"Which you have been.\"\n\nI found Erea smiling down at me.\n\n\"What happened?\"\n\n\"I came for your soul. It belongs to me now.\"\n\nWe were lying on soft grass in the shade of a few trees. I felt a breeze on my face and saw a long beach stretch out ahead. Jagged mountains rose against the horizon, somewhere on the other side of the lake, and I could hear tropical birds cry their mating calls.\n\nI sat up in amazement and the demoness slid up behind me, wrapping her soft arms around my bare chest to kiss me on that sensitive spot behind the ear. \"Welcome to hell.\"\n\n\"This is hell?\" I placed my hands over hers, which had been sneaking down towards my crotch again. \"What does heaven look like?\"\n\n\"It's just clouds. Clouds filled with proper people, having mundane discussions, behaving according to the ethics of their life on earth.\" The demoness sighed. \"Daniel, the world has a way of giving you what you want. You just have to admit to yourself what you desire, and you did. You chose to be my companion for all eternity. You chose to enjoy yourself.\"\n\n\"You picked me... just so you could share this place with me?\" I was taken aback with gratitude.\n\n\"I just came for your soul. Your body is still up there, living your life.\" She bit my ear. \"You're set to graduate in two years, have a career crisis, then join the administration of the European Space Agency to help manage the 2030 Mars mission.\"\n\n\"Hang on, that sounds like fun.\"\n\nErea grimaced. \"It will be very boring, trust me. You won't even make it to Mars yourself. You will spend the majority of your life behind a desk, without much sunlight or fresh air, being steadily numbed by the petty office politics that you refuse to participate in.\"\n\n\"How about my family, my friends...?\"\n\n\"You'll keep the same relations, behaving towards them just as you've treated them over the past year.\"\n\nI grimaced at that, some regrets entering my mind, but Erea pulled me around and took my face in her hands. \"Don't overthink it. Better to be here, no?\"\n\nI spotted some other demons walking over from the beach, although some of them might be humans. A few definitely had fantastical shapes... each one more suggestive and arousing than the next.\n\nBut none were as seductive as my beautiful, ancient Erea. She blushed as I gently took her tail and kissed the tip.\n\nAnd so there you have my warning: if ever you are visited by a demon or demoness, do yourself a favor and give them your soul. Thank me later, when you get down here. We'll have a drink together.\n\nI let go of the tail and kissed Erea's pale face, trails of smoke shooting up and around us like fireworks.\n\n\"Better to be here,\" I agreed."
    ],
    "authorname": "Ovidiy",
    "tags": [
        "cunnilingus",
        "demoness",
        "fantasy",
        "femdom",
        "incubus",
        "nonhuman",
        "oral sex",
        "romance",
        "tentacle"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/i-came-for-your-soul"
}