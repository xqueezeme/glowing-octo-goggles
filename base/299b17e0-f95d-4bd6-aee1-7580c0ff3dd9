{
    "title": "The Girl at the Spa Ch. 03",
    "pages": [
        "We still talked as much as ever but I missed her. Just being with her, her fantastic aura and 'joie de vivre'.\n\nDuring one of our late November Skype chats I told her about the upcoming Christmas ball that the school of medicine was running at a very nice hotel on the outskirts of Cambridge. It was a classy event without doubt, this was Cambridge don't forget, and for those with the cash the dinner and dance could be completed with a room for the night in the hotel it was being held at.\n\n\"When is it?\" She asked.\n\nI told her and said that I wasn't terribly worried as it was a lot of money, and I still had those misgivings born of not being the popular bloke that had carried across from my previous course.\n\nShe smiled at me and straightened her laptop exposing more of the her wonderful body in a bright green lacy teddy, the kind of thing she often wore during our Skype chats, giving me my own private show of her in her sexiest undies and nightwear, 'just to keep me on the boil' as she put it.\n\n\"Book two tickets Darling Richie, including the hotel room!\"\n\n\"Are you sure Ali?\" I said, \"it's such a journey.\"\n\n\"Not from London Honey,\" she said, \"It's a train and a taxi ride, send me the details of the hotel and I'll meet you there.\"\n\nAnd so it was arranged. One of the girls on the Christmas Ball committee looked me up and down a bit when I specified two tickets. She was looking a bit smug as during my second and her third year of my last course I had nervously asked her out on a date and she had turned me down, as one of her mates had.\n\n\"Definitely two,\" I said.\n\n\"So long as you're sure Richard,\" she said with a stupid smile that I just hoped Alice in her finest would wipe of her face, \"The deposit is non-refundable.\"\n\n\"Yeah, that's what deposits are all about,\" I replied in an angry tone. Richie Rich was starting to get a bit pissed off with this attitude.\n\nTwo weeks later some forms arrived from the committee asking for names for the table cards and for the hotel. I noticed that most other people had them put into their pigeonholes while my one was hand delivered by the odious girl that had taken my deposit, with one of her colleagues holding back giggles ten feet away.\n\n\"Got her name yet Richard?\"\n\nFuck but she was soooo pissing me off. A plan appeared in my head.\n\nI fumbled a seemingly innocent memory lapse,\n\n\"Yes,\" I said, then I took a couple of breaths, \"err, Miss A Trenowden...\"\n\n\"Are you sure?\" she said inquisitively.\n\n\"Of course!\" I said with just enough of a delay before it. Then added, \"with the initials MChiro and DC after her name please.\" \n\nOdious girlie wrote that down.\n\n\"Oh, she's a Chiropractor is she?\" like this was some kind of insult, particularly from a medical student.\n\n\"Yeah,\" I said brightly, \"she's Chiropractor and sports masseur to the rich and famous. Mateo Rodriguez gave her a Tag Heuer watch as a special thank you for some career saving work this summer.\" OK, that was to drive my Dad to the heliport but I wasn't letting this smart arse bitch know that; \"Anything else?\" I asked, happy that the first thing she would do would be to Google Alice.\n\nI hoped desperately that she had picked up on my lack of confidence, and that I had laid of false trail that Miss Trenowden MChiro. DC. was my chiropractor (being Richie Rich) and I had just picked her name out of the air. The girl had a satisfied grin that suggested that it might have worked and she walked quickly to her friend to spread the news.\n\nBack in my room I checked The Spa's website and I saw that Ali's picture was of her looking gorgeous in very smart corporate scrubs clothing and talked about her qualifications and the references from previous patients included some quite famous names, including a photograph of the prime time presenter with their trademark wave and stupid grin. I was quite pleased because she appeared on The Spa page, which only had 'Part of the McN Health Group' in teeny tiny letters right at the bottom. She did feature on the London Clinic page which was 'McNair Chiro' but you really had to search for her. Her hair and make-up had been professionally done for the photo's and she looked young enough and beautiful enough for any young, well off student to have developed a crush on.\n\nFor the rest of November I forgot about the ball, until in the first week of December, I had an email from Ali.\n\n\"Hi Richie,\n\nJust had the strangest email from the School of Medicine Events Committee asking me if I wanted my name card to read 'Miss A Trednowden, or Alice Trenowden and that I wasn't entitled to 'Doctor' before my name in their particular company, WTF?\"\n\nI replied.\n\n\"Hi Baby,\n\nFantastic! I'm playing a game with the events committee. So much so I'm pretty sure that I left enough doubt that I actually know the gorgeous Alice Trenowden!\n\nI desperately hope that they don't believe you are actually coming, and that I picked you off of the internet - after all I certainly didn't give them your email address and I haven't told anyone that your name is Alice - reckon they've googled you. \n\nI leave your response to your own well-developed skill in mind games and revenge being best served cold.\n\nLove you\n\nRichie\"\n\nShe got back to me,\n\n\"Leave it with me, I really want your triumph to be total. You're aren't seeing the dress until thirty seconds before they do, THAT'S how serious this shit is.\n\nLove you too\n\nAli\"\n\nThe reply was sent through an administrator account and meant to be as vague as possible.\n\n\"Dear Events Committee,\n\nUnfortunately Ms Trenowden is unable to reply to your email as she is currently out of the country on business and likely to be so for some time. I will endeavour to contact her and ask that she replies to you directly.\n\nThere is nothing in Miss Trenowden's business diary and without access to Ms Trenowden's personal diary I cannot confirm her attendance at your Christmas event. I suggest that any formal invitation is titled 'Miss A. Trenowden', I trust she will be able to confirm her attendance regarding your event as soon as possible. \n\nThe Spa Chiropractic Clinic rarely sponsors events such as this and a request to speak should always been sent at least a month in advance.\n\nAlthough entitled our senior staff rarely title themselves 'Doctor' they hold the highest qualifications in their areas of expertise, and are internationally recognized. \n\nIf I can be of any further assistance please contact...\"\n\nIt was beautifully general in nature and didn't give the game away in any direction.\n\nI put on my rented white dinner jacket and throwing my overnight bag into the taxi very nervously rode to the hotel, conscious that Ali was already there and getting ready. She had booked a hairdresser and make-up artist to call on her in the room.\n\nI arrived and asked that room service take my bag up to room 17-05 booked in my name of course, and to page Miss Trenowden in that room that I was here.\n\nThe committee were stood at the door to the huge baronial function room in their legions, shaking hands with the attendees and watching who was coming and how they were turned out of course. I could see the odious girl and her equally odious date for the evening staring at me, stood in the reception area all on my own.\n\nTheir body language suggested that they were looking at me and trying not to. With mouths covered by innocent hands I could see their excited, nasty little minds working on what they were going to say to me when I eventually had to walk through the door on my own.\n\nMy phone pinged, and a quick check showed it was my lovely Ali telling me to wait somewhere obvious and well observed. I stood across from my audience and level with the lift but not actually looking at it. I tried to look shifty and like I had some kind of secret to keep and sneaked a covert overt sideways glance to reinforce my nervousness, worse now that I knew that I was being watched. \n\nIt showed that it was working as the females, odious most of all, were buzzing with the hidden excitement as the clock ticked round and seats needed to be taken quite soon.\n\nThe red LED numbers counted down from floor seventeen and seemed terribly slow, as it stopped at 14, 9, 8 and 6 to collect more guests.\n\nThey all came out in their finery and I stepped back to allow them to pass. I had a final look at my watch and with an almost hidden look of resigned defeat stepped towards the lift.\n\nFrom behind me and to my left I heard a semi-drunk female cry of \"Bye Richard!\" \n\nFucking YES! Ali had done it and my triumph was seconds from completion.\n\nThere she was in the entrance to the lift, in a shiny, sparkly black designer dress glued to her every curve, slashed to her hip on her left leg and a cleavage down almost to her navel. Her own skills with hair and make-up were pretty fucking devastating but tonight she looked incredible, her big brown eyes looking wonderful deep and soulful and her soft, already pouting lips in deep red, just begging to be kissed. With her clutch bag held in her right hand, she thanked the smiling lift attendant (yes, they had one of those) and stepped out. Her face lit up as she saw me and she ran to me,\n\n\"Richie!\" she all but screeched hugging me as I swung her around in my arms. She kissed my face, and it warmed my heart when I saw that she was actually that pleased to see me after our almost six week separation, \"Oh Baby!\" she said, as I let her down to her feet, \"I missed you!\"\n\nHer leaping into my arms and my spinning her around brought us straight into the line of sight of the committee, and I saw that they had seen her.\n\nSo did she.\n\nI'd forgotten my audience by this stage being as pleased to see her as she was to see me. She grabbed my arm and we walked towards the main door. \"Let me,\" she whispered as she reached the reception committee, her face beaming and illuminated by her real smile. \"Richard McNair and Miss Alice Trenowden, sorry I'm so late.\" she said being all giggly, \"I'm not sure what you'll have down for me, only my PA is such a soft sod sometimes and she didn't forward you email on to me in time!\"\n\nThere were quite a few fake smiles glued to surprised and disappointed faces and they struggled to transmute them into real smiles as we got close and Odious girl fabricated some shuffling of papers knowing exactly what table we were on and I almost hoped that they hadn't set two places for me and we could stand around not being angry while the committee sorted something and gave us an official apology.\n\nLuckily, they actually had set two places and our large circular table was also home to the deputy head of school, and a senior Consultant from the Hospitals Trust, and two of the other committee members. I saw that odious girl was chatting with the two committee members on my table and looking sidelong at the gorgeous Alice because no way was I attractive enough for a girl like that.\n\nWe took our seats and the first of the wine was poured. Ali turned it on, and soon all of the men where under her spell.\n\nThe senior consultant was most interested in Ali's credentials, and asked where she worked.\n\n\"I work for McNair Chiropractic,\" she said sipping some wine.\n\n\"Aaah,\" said the deputy head cottoning on to the name, \"That your family young Richard?\"\n\n\"Yes sir,\" I said, \"my Father's business.\"\n\n\"And you chose to be a hard pressed sawbones and not a well-paid Chiro like Dad and the gorgeous Alice here?\"\n\n\"Dad's idea sir,\" I said, \"I was going to follow in his footsteps but he suggested that I go the long way and get my Medical Degree first.\"\n\n\"Well done young McNair,\" said the Consultant, his eyes still watching my gorgeous Ali's every move, \"Richard will be a multi-millionaire while us boring types as still bashing out our bush medicine through the National Health Service!\" He raised his glass to me, but then turned his attention to the real Chiropractor at the table, \"like the gorgeous Alice here!\" He chuckled and Alice touched her glass to his. \"That right Miss Trenowden?\"\n\n\"It has its moments Professor,\" she said.\n\n\"You've been somewhere nice for the last few weeks Miss Trenowden?\" said the committee member as if from nowhere. The news of the email had travelled and the bastards had obviously fully discussed what they hoped was going to be Richie Rich's humiliation.\n\n\"United Arab Emirates,\" she said with a grin, \"a young crown prince and his wife expecting their first child. Just some acupressure, massage and relaxation therapy for the when the big day comes!\" She beamed her huge smile to him, and had a few daggers from his rather plain looking partner sat next to him. Mind you, virtually everyone looked rather plain in her company tonight. She had done such a thing of course, but it wasn't this side of the summer, but those smug fuckers on the committee weren't to know that.\n\nThe Deputy Head's wife complained about the shop talk and asked where she had gotten the dress from.\n\n\"Hired,\" she said, \"A great place in Chelsea that I was recommended. I may work for the occasional crown prince, but I can't afford couture like this!\" For evidence she stroked her hands down her sides emphasising her great shape. She leaned forward to speak to the DH's wife, \"Wig tape,\" she whispered, \"I'm glued into this bloody thing.\"\n\n\"Tape?\" said the so far ignored partner of the first committee member, another medical student.\n\n\"Oh yeah sugar,\" said Alice, \"you didn't think this was all held in place by magic did you?\"\n\nThe girl smiled for the first time and I saw Ali lean back and encourage her new friend to do the same. She looked around and surreptitiously raised the side of the shiny black material the tiniest bit and open mouthed the other girl saw the thick adhesive tape gluing her dress and by implication her wonderful boobs in place.\n\nI grinned at her, in the knowledge that every male on that table would have liked the same view.\n\nThe food was quite excellent and at every point Ali made more friends and converted a few to some of the more straightforward concepts of her trade.\n\nAfter the speeches and the thanks, the bar opened and the tables were put away and the dancing began. I was no one's dancer but Alice had the most wonderful way about her that many girls have of making her man look good just by dancing around him and moving him when and where he needed. Alice did precisely that.\n\nHanging from my arm, she chatted with lots of my classmates, many of whom just wanted to come and see the gorgeous thing that Richie Rich had somehow convinced to come with him. Some of the men even asked her to dance, but she demurred explaining that she was 'danced out' by Richie. There was some amazement that other people other than these Cambridge educated comedians called me Richie.\n\nThe deputy head appeared with the head of school and the Chief of Surgery for the NHS Trust and I was introduced as \"Ralph McNair's lad.\"\n\nThis was met by a couple of 'well why didn't you say so' exclamations and I said all that stuff about not resting on someone else's glories and this seemed to go down well.\n\n\"And I understand you're one of Ralph's star players my dear?\" said the Head of School.\n\n\"That's very kind of you to say sir,\" she replied.\n\n\"Not what I say M'dear,\" said the head, \"your Boss has seen to my sciatic nerve on several occasions; all that standing up at operating tables,\" he nodded conspiratorially, and she giggled, \"and I have nothing but respect for the man. He says,\" the head put on his glasses and pulled his phone from his jacket pocket, \"He says for you to take special care of his baby boy this evening Alice!\" \n\nThere was silence,\n\n\"I always do,\" she slipped an arm through mine and kissed my cheek, \"well, since August at least.\"\n\nHe grinned back, \"and he says that you have to take even more care of Alice young Richard!\" I gave the tiniest bow to both to him and my girl.\n\nThe slow music came on, and Alice took the opportunity of proving to the rest of the room that her attendance wasn't just a favour to her boss.\n\nAs the lights went down, we got close and got romantic. We held each other close and kissed when the moment took us. After one particular song, she whispered in my ear,\n\n\"Enough performance Richie,\" she said, \"Let's go to bed, and I'll put on a special show just for you.\"\n\nShe pulled me towards the bar and the last few drinks of the committee, many of them decidedly the worse for the amount of booze they had put away. She approached odious girl,\n\n\"Thanks for putting together such a wonderful evening Julia.\"\n\nJulia? I had been on the same course as her on and off for four and a half years and I didn't know her bloody name. Because her surname was Murphy, she had been dubbed 'Spud' by one of her tutors and the name had stuck.\n\n\"You're welcome Alice,\" said Julia, with a bit of a pissed giggle.\n\n\"I love your dress,\" whispered Ali.\n\n\"Thank you,\" said Odious Julia, \"Pleased you enjoyed yourself.\"\n\nAlice leant in close. \n\n\"Going to have to drag Richie away from you now,\" she said, \"we only get to see each other every few months and we're loooooong overdue for a... err... catch-up?\" She hugged Julia and kissed her cheek and pulled me out if the room and towards the lift, now devoid of the attendant. \n\nShe pushed me against the wall next to it and we kissed, with a real hunger that the last four hours of performance, as she had so adroitly put it, had done little to stave off. Once inside and with the door closed behind us, she slipped her arms around my neck and the passion cooled as we got into what we were doing.\n\nWe made it to the 17th floor and finally free of the audience ran to our room laughing fit to burst. Ali let us in and pulled me to the bed.\n\nI kicked off my shoes, hung my rented tux and stripped down to my undies and lay on the bed.\n\n\"This I've got to see,\" I said as Alice, returned from the bathroom, and undid the clasp that held the dress behind her neck.\n\n\"Thank God for the dresser this evening,\" she said, \"If I hadn't brought the tape, this dress would have been slightly more successful this evening than I would have wanted it.\"\n\nShe pulled it away from her chest and I could see where it had been secured under her bust line, then some around her waist and bottom and finally the thing fell to the floor leaving her naked.\n\n\"No undies?\" I said.\n\n\"In this dress!?!\" she said with a gasp, and kicking off her heels as she stalked gorgeously naked towards me.\n\nShe tore off my boxers and we got busy. In the months since our summer of love she had gone on the contraceptive pill and our love making stepped up a notch and was just that much better.\n\n\"Was that OK Richie?\" she said laying down on me.\n\n\"The strip tease? Perfect...\"\n\n\"No Dickhead, convincing your appalling fellow students that you aren't Billy No Mates, and your girlfriend isn't made up.\"\n\n\"Like everything about you Ali, it was perfect.\" I ran my hands through her hair and she closed her eyes and pushed against me, \"If I'm totally honest, the second you came out of the lift I forgot all about everyone else and just concentrated on being with you.\"\n\n\"Awwwww Good Answer Richie,\" she purred and kissed me deeply.\n\nI rolled over on top of her and we kissed and made out, and she raised her thighs to hold me, bringing our genitalia into touch. I raised my waist and lowered again feeling my erection enter her wet swollen pussy, with a groaned 'oh yeah' from my girl. We made love and it was perfect.\n\nShe got up and headed for the bathroom, returning to a cup of tea I had made for her.\n\n\"Hmmmmm,\" she said taking the mug from me and walking back to the bed. \"I was thinking about coming off of the pill Richie,\" she sipped from the edge of her cup.\n\n\"Err...\" I stood there like a lemon, not knowing quite what to say. She burst out in giggles and put a hand to my shoulder.",
        "\"Easy tiger,\" she said, \"I don't have a great desire for children trust me,\" she sipped more of her tea, \"I just preferred it when you were the one getting up and going to the bathroom after we've made love.\"\n\n\"Still have plenty of condoms,\" I said, somewhat relieved.\n\n\"Scared you though didn't I.\" she said reaching down and grabbing my cock that started to harden the moment she made contact.\n\nYes, we made love again. This time I used the remaining condom from my wallet so my lovely Ali could go straight to sleep after her orgasm. She did, and cuddled up and into me as she always did after lovemaking.\n\nShe drifted off to sleep and I lay there for a time and thought about what my initial reaction to her statement had been. I felt a warm feeling for a second time that evening about the thought of having a child with my gorgeous girlfriend and step-sister.\n\nWe woke next morning and happy that Alice could head straight for a post-coital shower she climbed on top of my morning erection before I was fully awake. I had my favourite view of my beautiful girl as she sat astride me, her shaved groin level with mine, her narrow waist flaring up to the most perfect bust crowned with rose red nipples that I just knew she would force into my mouth at some stage of that mornings proceedings.\n\nFuck but I was so much in love with her and I just wanted more.\n\nShe bounced on me, throwing back her head and making her dark hair fly then hang around her face so sexily and she pouted a silly grin at me.\n\n\"Are you coming home for Christmas?\" she said as she pivoted on her knees to get my organ pressing against her G-spot.\n\n\"Hell yeah,\" I said, \"no way I'm missing all this.\"\n\n\"I meant because it would be nice that you could be with Dad!\"\n\nFor years previously I had rarely managed a Christmas with my Dad. I had spent many with my Mum of course and her string of husbands, both maternal and paternal Grandparents, but hardly ever with Dad and Meghan and never at The Spa.\n\nThey always had numerous invites to go to country houses and to visit clients in foreign climes; once they had even gone to India when Grandma had been taken ill. That year I was actually booked to go to The Spa but it was really short notice and whereas Dad and Meghan (and Alice I suppose) all had up to date vaccinations and visas I didn't, so much as I really wanted to go with them I couldn't. Grandma recovered of course.\n\nThe following year when Dad was working out somewhere nice to take me to make up for the previous year's disappointment, Mum had 'already booked something spectacular seeing as it was her turn'. \n\nBy checking through her credit card statement and some of the booking paperwork, I found that Mum had actually booked our week in Austria three days after Dad asked her for my passport details for 'Christmas in New York' as some kind of revenge.\n\nFor almost every Christmas, Mum found a reason why I couldn't go to The Spa; her latest divorce, death of her mother, on her own for the first time, then the death of her father, and the distance just grew between Dad and I, and my attendance at her table for Christmas was pretty much a given, seeing as Dad had someone to share Christmas with after all.\n\n\"Of course,\" I said, \"Mum has Dave the Leech and the ugly sisters to cook for, this year she won't need me.\"\n\n\"Excellent,\" she bent forward and kissed me, \"And of course, you get me as well.\"\n\n\"You're all I want for Christmas Ali,\" I said.\n\n\"Awwwww Richie!\" She fell forward on top of me, squishing her wonderful boobs against my chest, and pulling me so I would roll over on top. I went for it, pumping as hard as I could and trying to remember in my excitement the beautiful woman I was making love to and tried to move my cock across her G-spot that she had taken so much time to teach me about.\n\n\"Richie,\" she gasped, \"this isn't a time to be clever and attentive Darling, just fuck me, you know I'll enjoy... oooooooooh shit yeah, just like that!\" I did as I was told and just went for it, and she raised her thighs to hold me, pulling my face to hers so we could kiss. \"Yeah Richie, that's it, fuck me Richie, fuck me darling, ooh Christ yeah!\" I felt her tremble beneath me as she reached her orgasm and try as I might I was still too green not to let her passion affect mine and I came as well.\n\nShit but it was good, and we lay there both gasping and getting our breath back after such passionate exertion.\n\n\"That'll do it Richie,\" she said, \"some more of that will do very nicely.\"\n\n\"I'll be there for Christmas Alice, I promise.\"\n\n\"Just make sure you are, you know Dad will celebrate big once he knows you're coming.\" She tried to extricate herself from me, but I wouldn't let her go. \"Please Richie, I'm going to leak!\"\n\n\"And?\"\n\n\"There speaks a man that has never had to change come-stained sheets!\" After some very passionate French kissing I eventually let her get up and she waddled to the bathroom, tutting at me as I watched her fighting to keep what I'd taken such an effort to put in there, stay in there, until she reached the ensuite.\n\n\"Tea would be nice!\" she shouted over the noise of the shower as she washed off last nights and this morning's excesses. I made her tea and brought it into the bathroom, if nothing else to take every opportunity to look at the wonderfully body I dreamed about, even when I was awake.\n\nShe saw me, and put on the most erotic display of cleaning herself, and while the pouting lips and boobs stuck out in my direction at another time might have seemed a bit silly, right then I just wanted to get in next to her a screw her again. Her leaning back against the tiles and masturbating her clit to orgasm was too much, so I did. The smallness of the shower didn't really help us so after a few thrusts into her sopping quim she stood, pushed me back where she had been and dropped to her knees and blew me, taking me almost all the way there a couple of times before grabbing my hips and lip-fucking me until I came in her mouth for the very first time.\n\nWe had a great breakfast delivered to our room then a day out and about in Cambridge until it was time to get her back to her train.\n\nAt the beginning of December Mum rang and asked about the arrangements for the big day and said that this year 'we' were celebrating in France with The Leech, Leah (who was now tiring of her dissertation and instead working on her PhD Thesis), and Fifi who still had the same hair style that Ali had done for her and told her she looked so good with. \n\nFiona had bought all of the Game of Thrones box sets and had read all of the books, complaining at length about the lack of book 6 and 7.\n\n\"Say you'll come Darling, you wont want to be on your own in London,\" said Mum, \"Fiona asked if you were coming, she really likes you.\"\n\n\"No she doesn't Mum, she really likes Ali. Did she mention her at all?\"\n\n\"Yes, now you come to mention it; why don't you ask Alice to come as well?\"\n\n\"Ali's parents have invited me down to Cornwall, seems rude not to go.\"\n\n\"Oh, well you go and stay with them and not your own mother.\"\n\n\"Yeah, at the age of 23 the last thing I should be doing is going somewhere that I want to go rather than the place you want me to go mother, isn't it.\"\n\n\"You don't know these people from Adam!\" she snapped.\n\n\"Yeah and the way you are talking I never shall, seeing as every significant holiday I now have to spend with you and him in France, with a language I can't speak and a step-family that don't actually like me...\"\n\n\"But Ali..\"\n\n\"Yeah, they like Ali, not me! Like I said at the beginning of this discussion.\"\n\n\"Oh I can't talk to you,\" she snapped, \"sometimes you just turn into your father.\"\n\nI laughed if only inwardly and to myself. I couldn't actually bring myself to tell Mum exactly who Ali's Step-Dad and Mum was, I would save that for later and maximum effect.\n\nHappy with my plans for Christmas and even happier that my placement had finished on the Friday before Christmas Day and since I didn't have any Christmas work placements at any hospitals I was free until the second week in January. I packed as much of my life into my trusty rucksack and got to Cambridge station with seconds to spare on Saturday Morning.\n\nAfter the longest and most expensive train ride ever, I dragged my tired, slightly grumpy self from the train and stepped out onto that platform of St Ives Railway station. \n\nOutside was a black Land Rover Discovery with blacked out windows and leaning against the passenger door was...\n\nSome strange bloke I didn't recognise.\n\nShit.\n\nThrough the Christmas Underground and all the Great Western 'would all passengers for... change at...' and the standing for toilets and hoping your seat would be there on your return, waiting for the crap buffet trolley that never had the right change as well as never having the right food, I really wanted to see my gorgeous girlfriend again, especially after the wonderful time we'd had just a couple of weeks before in Cambridge.\n\nI walked across the car park and waved to the stranger waiting at the car, he waved back and reached for the door handle.\n\n\"Good evenin' Mr McNair,\" he said in his best West Country.\n\n\"Hi,\" I said, with all of the energy I could muster.\n\nHe pulled the door open, and there sat in the driver seat in a form fitting black mini-dress with her usual wonderful cleavage, a pearl choker, pearl earrings was my lovely Ali, biting her bottom lip in an attempt to stop herself laughing.\n\n\"Got you there Richie!\" she said.\n\n\"Cheers Alice!\" said the unknown man as he took his Great Western fluorescent jacket from the passenger seat and walked away with a grin.\n\nI climbed in the car and I don't think we stopped kissing for ten or fifteen minutes.\n\n\"Richie,\" she purred as I kissed the furrow from her neck to her ear, \"we've got to go honey, only it's your Dad and Mum's Christmas party, and you'll never believe the kind of people that are there!\"\n\n\"OK,\" I said and clipped on my seat belt.\n\nI asked her who the man on the car park had been and she said he was a contact at the station that they worked with when new people were arriving, and he was now a friend and she had asked him to help her out with the prank on her boyfriend.\n\nI thanked her for that, and said that revenge was sweet. She leaned across and kissed my cheek, still keeping her eyes on the road.\n\n\"Oh come on Richie, after that wonderful weekend in Cambridge you can forgive me anything surely?\"\n\n\"We'll see.\" I said. After all I did have something planned for that night, and being at the party would only make it more special.\n\nWe chatted away the miles as I told her of my horror journey, the agreeable and disagreeable staff and fellow passengers and my almost starvation as the wrong buffet trolley, the one that had no food or drink on it, had been put on at Plymouth. \n\n\"Oh, my poor Richie,\" she said as the high stone cliffs of The Spa appeared and I saw the two big security guards on the gate, who pushed the waiting Paparazzi's to one side as we approached. Cameras were pushed against all of the windows except for the ones that Ali and I were at.\n\n\"Some fucking 'B' lister tipped them off,\" said Ali, \"happens every now and again. Dad will go through the list of attendee's, look for the ones that came here in cars without security and ban half of them. That way he'll find out which one of them it was.\"\n\n\"And I never knew alternative medicine was so complicated.\" I said.\n\n\"You know it,\" grinned Ali, slowing for the guard to open one of the normally electric gates by hand while another three guards stopped anyone from slipping through before or after the car. She parked it by a long canvas tunnel. \"When you get out, stand with your back to the car for a few seconds and get all bodyguard like, just give them fuckers something to think about; increases the mystery and keeps the prices up!\"\n\nI did, standing tall and stretching out my neck, my hands clasped together in front of me, looking across to Ali who was just getting my bag from the back seat but doing a fine job in convincing anyone in telephoto lens distance that a camera shy superstar was running. \n\nAli moved the Disco back across the car park into its usual spot between the second one and the Jaguar and I walked across to retrieve my coat and my bag. The dress, make-up and jewellery she was wearing were fantastic and I knew that at this party there was a good chance that my clothes were going to let me down.\n\nShe led me through the front doors then into the family wing and her room, where I put down my bag and coat. Hanging on the wardrobe was a dinner jacket, along with a white shirt and bow tie. \n\n\"You have five minutes to shower lover,\" she said.\n\n\"You not going to join me?\"\n\n\"Richie!\" she grinned, \"you're insatiable! Tell you what, I'll go get you a cup of tea and some sandwiches to take the edge off of the other hunger that you're feeling.\" \n\nI had the fastest shower in history and had all but dried off when she came back with a tray. I had quickly shaved off my five o'clock shadow in the shower and had remember to bring aftershave. She walked in on me spraying myself with that and some other 'smelly chemicals', as she called them.\n\nI quickly dressed, stopping while she did up my bow tie, a real one, and the first time I'd worn such a thing since my Tripos graduation party. It was nice while she did it though.\n\nShe kissed me, stepped towards her large dressing table and did a quick touch up on her make-up smacking my hand as I grabbed her arse and boobs as she tried to repair the lipstick I'd smudged, and finally happy with the gorgeous result she took me by the arm.\n\nStepping through curtains, we came into the dining room completely set up for the Christmas party. There were lots of staff members, some of which I knew from both The Spa and the London Clinic, and as my eyes became accustomed to the dark I started to recognise the glitterati, including Mateo Rodriguez with a glamour model on his arm. \n\nThere were at least three of Hollywood's best and some recognisable second best on their arms, and some British TV stars. Next, three England Rugby players, Two Olympic Gold medallist rowers, three Olympic runners, a Triathlon star, a cabinet minister with their MP partner, a smattering of footballers and there was the prime-time presenter Meghan had told me about, all false smiles and bonhomie with everyone and just a bit over the top, stopping occasionally to snipe at the waiting staff just as Meghan had told me they would. Tonight all the waiting staff were supplied by the outside caterer as Dad's were here and in their glad rags for one of his big nights of the year.\n\nOne of Mateo's team younger mates that I recognised from press coverage appeared beside us and we both smiled at him. He ignored me and tried desperately to lift Ali's arm away from me, the unrecognisable young man in a dinner jacket. \n\nShe shook her head and whispered something to him and waved him away with smile. He was obviously a little bit pissed and, earning my entire seven years of student debt every four days and paying some of it to my Father, felt he had a better claim to the gorgeous chiropractor than I did.\n\n\"Not tonight mate,\" I said with a light-hearted lift to my voice and a raised hand.\n\nWith pursed, slightly pissed lips, he took hold of my arm and tried to move it from hers again. I resisted, so he pursed his lips even harder in some South American fume and tried a bad tempered shove at my chest. I stood my ground ready for a punch up if necessary until Ali pushed him away, looking dangerous daggers at him.\n\n\"Fuck off mate,\" I said. I guessed as a British Premier League Player he would have heard that particular phrase from the terraces and understand what it meant.\n\nHe looked at me askance, ignoring Ali's preference for her partner completely and put his head to one side with a scowl at me, in a 'who the fuck are you - do you REALLY not know who I am?' look.\n\nI'm guessing he thought I was just another bloody staff member that he paid for; another masseur, therapist, administrator, chef or server, all of whom were dancing in their dinner jackets and long dresses drinking Dad's excellent wines. He looked around for support from another superstar but there weren't any and he shot his hands out from his cuffs and struck a 'try your luck then' pose. \n\nI wasn't going to fight this South American arsehole in front of my Dad's best clients and looked around for some support, although I thought my furious girlfriend was about to attack him and her body language spoke volumes. \n\nSeeing this he simply put his hands out to his sides, waved a hand up and down his body then with a sideways look pointed at me, shook his head and winked to her. He held out his arm for her to take patting his chest pocket, I guessed to indicate where he kept his wallet and how important that was, then took a long look at his Rolex watch. Ali just moved closer to me, which just made him get right into my face with a hissed Spanish challenge, his breath reeking of booze.\n\n\"Richie!\" shouted my Dad coming across the room at speed, gently pushing aside one of the rowers. \n\nAfter a tip off from the cabinet minister he strode across giving me a huge hug, and then another one for Ali. He turned to the footballer, \"Tomas!\" said Dad putting his arm around my aggressor and losing his smile, \"\u00c9ste es mi hijo Richard, \u00e9l est\u00e1 en la universidad que aprende ser m\u00e9dico!\" (This is my son Richard, he's at University learning to be a Doctor!)\n\n\"You... son?\" said Tomas. I thought I saw a bit of a nervous gulp.\n\n\"Si,\" said Dad with the tiniest almost unnoticeable curl to his top lip, \"Mateo!\" shouted Dad, not breaking eye contact with Tomas, and Rodriguez came across, abandoning his fashion model. Dad put an hand on his arm and whispered to him that I now know was something like, 'keep that bastard away from Alice and my son, or you can both go get treated by someone else'.\n\nHe spoke to the chief wine waiter and said that Tomas was on soft drinks from now on, doctor's orders, and at the first sign of trouble the guards were to have him out of the door and in a taxi to the station. Mateo dragged the much younger Tomas away to a corner remonstrating with him at length in hissed Columbian Spanish about what you couldn't do at The Spa. Tomas seemed rather put out that his splendid wealth didn't quite entitle him to exactly what he wanted, however much he wanted it and he argued. Mateo smacked the back of his head and pointed an angry finger at him, snarling that he had better not fuck this up for both of them.\n\nThe gorgeous and glamorous Paula received similar less than gentlemanly treatment half an hour later from the immature superstar, and the chief wine waiter saw and in moments the now very pissed Tomas was whipped through the curtains we came through and escorted from the premises at speed by two big lads and taken to St Ives railway station in the back of an unmarked white van, still in his dinner jacket for the last train to Paddington where at some stage in the early hours of the next day he could get a connecting train to the large northern town whose football club paid his outrageous wages.\n\nDad took Alice and I across the dance floor to where Meghan was stood with the founder of the feast, none other than Grandma herself, in the most colourful sari.\n\n\"Gra'ma,\" said Alice, \"this is Richie, Ralph's son.\"\n\nShe beamed a big smile at me, and took my hand.\n\n\"Ah Richie,\" she said, \"I've heard so much about you from my baby girl Alice.\"\n\n\"All good I hope,\" I said.\n\n\"The very best,\" she said with a big grin, \"Here, have some proper Champagne Dear,\" she said, \"not that shit you father is feeding the god-liked and omnipotent.\"\n\nI took the glass from her and smiled. She was so much like her granddaughter Meghan and Alice her great-granddaughter that I warmed to her instantly.",
        "Dad took Alice away to dance, and Grandma tapped me on the shoulder.\n\n\"You've got something planned haven't you Richie?\" she said.\n\n\"I'm sorry?\"\n\n\"My spirit guides are letting me know that you have something up your sleeve.\"\n\nI wanted to suggest that the only spirits she had been in contact with were dished out in 'one sixth of a gill' optics behind the bar but thought better of it. She stood up. \"Come closer,\" I did, and she patted the outside of my left breast pocket, \"thought so,\" she said, \"congratulations Darling, and not before time?\"\n\nI bowed and smiled.\n\n\"Who am I to argue, Grandma.\" \n\nI walked to where the DJ was and basically explained to him what I had in mind, and he pulled one of the waiters to one side and came up with a far better plan than I had.\n\nI went back to our table and Meghan took my hand and pulled me to the dance floor. Thanks to my wonderful Ali I felt a hundred times better about dancing and I managed not to embarrass anyone or push anyone over. At one stage Meghan got in really close and ground first her great boobs and then her still fit arse against me, and my mind went back to that great week in the summer before when she stripped naked, blew me and I fucked that arse that was rubbing against my groin.\n\nShe had a great body and I had no bad feelings about our sex session and her choice to stop once she realised how Alice felt about me. Before I knew it, my gorgeous Alice was next to her mother and giving it as much on the dance floor. Dad appeared and took Meghan to one side and they danced just as provocatively as we had been.\n\nAs soon as Alice moved in front of me and put her arms around my neck, the DJ played the first of the slow dance songs and I took Ali and pulled her closer. Slowly we moved to the music, just delighting in the contact and the romance. Ali helped me out by pushing her face into my neck and closing her eyes. I looked around at the smiles that we were getting from Ali's friends and colleagues who all knew about us.\n\nWhat she didn't notice was several of the wine waiters gradually tapping the other dancers and telling them of the plan. The Key song was Eric Clapton's 'Wonderful Tonight' which I knew was one of Ali's all-time favourites. It played and she smiled and pulled me closer while on the second guitar break I saw that all of the other dancers had gone, and the chief wine waiter moved close to me and slipped something into my trouser pocket.\n\nAlice noticed this of course and looked around. Seeing just me and her on the dance floor she was a bit suspicious.\n\n\"Payback time,\" I whispered to her, and reached into my pocket for the radio mike the waiter had dropped in there.\n\n\"Don't make me hurt you Richie,\" she said with a smile.\n\n\"Alice,\" I said into the mike, and she just looked at me with her head slightly to one side, her perfect eyebrows raised in an arch, her lips slightly pursed into a smile and her arms defensively but still humorously folded. \n\nShe looked so gorgeous, and all of the clever words I had been preparing since our romantic weekend in Cambridge just left me and it was obvious; the giggles started until I got my breath and started again. \"Ali,\" I said forgetting the clever stuff and just going with what I felt, \"I love you more than anything in the world, will you marry me?\"\n\n\"Wh...\" her mouth hung open for a moment and one of her hands went to her chest, as I went down on one knee and held out the small felt box with the huge engagement ring I'd bought for her.\n\n\"Please?\" I said.\n\nHer beautiful grin returned and she laughed.\n\n\"YES!\" she said pulling me up and into a hug and squeezing me so tight I knew it was OK, then she started laughing as our audience started to cheer and applaud, loudest of all being none other than Dad, Meghan and Grandma.\n\nI slipped the ring on her finger and she stared at it, then me then back to it and it's import; instantly she was mobbed by all of the female Spa staff, Meghan included, as they all wanted to hug her and see the ring. I saw Sean with my Dad and looking across with a glued on smile. His look was again that elder, supercilious one I disliked so much.\n\nDad's arm was around my shoulder,\n\n\"Well done Richie,\" said Dad, \"I'm so pleased for you both!\" He gave me the tiniest shake, \"obvious from the start, even Grandma said so!\" I shook hands with some other people, many of which I recognised, 20 percent of which I actually knew.\n\nDad was there moving me around to avoid the celebs trying to be part of the deal and passed me on to Paula and I got a kiss and a hug from her, looking genuinely happy for us. Eventually, after Alice had dabbed her eyes dry and had a restorative glass of Champagne, she came back to my side.\n\n\"I suppose you're going to hurt me now aren't you?\" I said.\n\n\"Nah,\" she said, slipping her arms around my neck, \"I have a whole lifetime to torture you don't forget.\"\n\nThe party went on into the wee hours, and didn't finish until the last of the staff and the superstars were eased into taxi's, limo's, staff accommodation or bungalows. We went back to Ali's room, which from the next morning was officially dubbed 'our room', and we stripped naked and slid into bed.\n\nWe made love of course, but now somehow it seemed so much more passionate, loving, tender, than it ever had before, as if we had passed some kind of way marker that just said 'now you're really in love'.\n\nWe woke he next morning in each other's arms and I knew that's where I wanted to be from now on. We headed out for breakfast and there was a slightly bleary-eyed Meghan preparing family breakfast, including a special vegetarian one for Grandma.\n\n\"Good morning Darlings!\" she said and came over and gave both of us a hug.\n\n\"Morning Mum,\" said Alice, it was a term she didn't use that often.\n\nMeghan noticed and I saw her gulp back some emotion and hug her daughter again.\n\n\"Morning Meghan,\" I said.\n\n\"Morning Richie,\" she said with a grin.\n\nDad appeared moments later with Grandma on his arm, after he had taken her for an early morning walk around her former estate to show her the new bungalows he'd built on the land he'd bought and all of the new facilities, seeing as she had arrived totally unannounced the previous afternoon. \n\nBeing Grandma, she had no complaints about settling down in one of the staff overnight rooms of course but as soon as she arrived Dad was checking where he could put her, and he saw that I was down for a bungalow so had her bags moved there. It was quite sweet that the Spa staff had still set aside a room for me, even though Ali and I had pretty much been an item and in love since August.\n\n\"Morning Gra'ma,\" said Alice, running across to her, \"Morning Daddy,\" she smiled up at him. Again the first time I'd heard her call him that. I smiled, Dad noticed.\n\n\"And a wonderful morning to you, my darling Ali,\" he hugged his step-daughter and spinning her round, \"Thank you honey,\" he said kissing her cheek, she squeezed him tight around the neck and I saw that close bond that Meghan had told me about back in the summer.\n\nThat morning I felt that leech-like attraction that Dave had for my Mum and somehow I just wanted to be with Ali constantly. We were grinning at each other like a couple of idiots almost constantly and I could see that Meghan wanted desperately to shout 'get a room' but of course we already had one. It was a Sunday and both Ali and I had avoided the hangovers by moderating our drinking as had my Dad, Meghan and Grandma.\n\nSome of the other Spa guests had not been so lucky and Dad suggested that we all stay within the family apartment until the drunks were rounded up, sorted out and moved on.\n\nThe outside caterers had arranged breakfast for the party attenders and there was a proviso that everyone was off of the site by one o'clock. There were those that laid in, but their room phones were rung off of their hooks until they answered. The caterers were nice and terribly professional but didn't have the tiniest worry about upsetting their famous guests in the way that Spa staff might have.\n\nThey didn't have the slightest concern that the front row forward of the Scottish Rugby team wanted to shower before his breakfast and politely pointed out that if he had rolled out of bed at the time of his alarm request he would have been showered, had eaten three breakfasts and three pots of tea, but seeing as he needed to be in the taxi that had been called for him for 1pm, something had to give.\n\n\"I want to speak to Mr McNair...\" he grumbled.\n\n\"I'm afraid Mr and Mrs McNair have already left for London,\" said last night's chief wine waiter, \"Mr McNair has another function he has to attend.\" It was complete rubbish of course, Mr and Mrs McNair and their children, and Mrs Trenowden senior were in the apartment snacking on various splendid breakfast goodies, especially toasted bacon and egg sandwiches, but this tosser wasn't to know that. In fact if he had crawled from his bed at a sensible time he would have seen Dad and Grandma walking around the whole place. \"How's this,\" said Chief Wine waiter, \"you jump in the shower and I see if I can find someone that can pile a whole mess of man food onto a plate with strong orange juice and strong tea and bring it to your room. If you move your arse you should get it done and be in the foyer with bags for five to one. Deal?\"\n\n\"Deal,\" said the Scots international.\n\n\"Wait a second,\" said the waiter, he paused for just the right amount of time, \"right, I've managed to find a very sweet girl that is going to sort your tray and bring it to you. She's Spa staff and actually on her own time so may I suggest that you thank her in the appropriate manner.\"\n\n\"Yes of course,\" said Scots international.\n\nA young local girl brought in especially to clean up after the multi-millionaires was told to visit room 5 in bungalow 4 and look at her watch as the occupant opened the door. She was pleased to see the vast muscular shape of the professional rugby player in just his towel, still wet from the shower that came to the door. She was also very pleased with the \u00a320 note that he passed her along with his prolific thanks. It was good to have friends.\n\nBy two o'clock that afternoon the place was cleaned, polished, and closed down and the staff sent home with Christmas presents to add to the splendid night before.\n\nAfter breakfast Ali and I went back to our room and we showered and dressed. She wrapped up in layers of warm clothing, a long scarf and a matching woolly hat pulled down over her ears and matching gloves.\n\nI was dressed similarly with my thick Barbour jacket and a cap and gloves. We set out and took our now regular route down into the village of Port George and the wind was blowing in from the south west. \n\nWe reached the pub which was just opening for lunch, but knowing that Meghan would prepare a huge evening meal we just went with thick sandwiches with huge lumps of pork liberally doused in apple sauce along with two pints of the local bitter beer and we sat in front of the fire warming up from our windy walk, careful to remove her hat so as not to mess up her great hair, and her gloves so her ring stayed in place and didn't wreck her beautifully knitted hand warmers.\n\nAli's cheeks were red and contrasted beautifully with her winter English Rose complexion, and her dark brown hair and big brown eyes that shone in the December sun and with the glow of the fire. As if to add to this she stretched out her left hand and looked at the ring I had given her the night before and smiled at it, then at me.\n\nI leaned across the table and kissed her.\n\n\"Have I said thank you for being in love with me today Richie?\"\n\n\"No,\" I said, \"please don't let me stop you.\" I kissed her again.\n\nShe grinned and placed her hands either side of my face,\n\n\"Thank you for being in love with me Richie,\" she kissed me, hard and passionately. This was followed by a scream as the landlady saw the huge diamond on Ali's ring finger and she ran across to our table, grabbed her screaming, \"Jen! Jen! You gotta come here and see this! Jen!\" She stood next to our table and arm round Ali and kissing her smiling face and looking at the rock currently sitting on the third finger of my fianc\u00e9e's left hand.\n\nJen appeared.\n\n\"Look at this rock!\" screamed the Landlady.\n\n\"Oh Ali!\" said Jen, evidently the daughter of the house, \"I'm so pleased for you. And this is the lucky man!\"\n\n\"Jackie, Jen, this is my fianc\u00e9e Richie,\" said Ali proudly.\n\n\"Well Richie, you are such a lucky boy!\" said Jackie, \"you work at the Spa?\"\n\nI was about to speak but Ali stepped in.\n\n\"Richie is almost a Doctor,\" she said with even more pride.\n\n\"Nowhere near as talented as my gorgeous Alice though,\" I said.\n\nAll three women ooohed as I spoke of 'my Alice'. From that point on I was pretty much left out of the discussion as dates, dresses, flowers, churches etc were discussed and I got on with my great sandwich and long draughts of my excellent beer.\n\nThe landlord appeared and I was introduced to him, and a number of other locals that new Ali either from having gone to school with her, or having worked in or for The Spa. The ring was poured over by the females, with only one looking at me and asking if 'them rocks is real?'\n\nI nodded that they were and grinned.\n\nWe walked back to The Spa slowly, holding hands and stopping occasionally to look at the great scenery and the harsh contrast of the rough looking Bristol Channel with many white caps and the white horses crashing into the rocks and cliffs. We let ourselves in and walked back into the apartment and there was Dad and Grandma sat around the now lit hooded fire pit in the main living room and discussing musculature.\n\nDad was trying, again, to convince Grandma that the physical nature of his cures, the pushing, pulling, poking of various muscles and them being reset was actually up there with the client's spiritual wellbeing. \n\nThey were both professionals at their chosen art forms and had now spent getting on for fourteen years trying to convince the other that it was one over the other. My Dad confessed himself an atheist but did listen to Grandma's discussion of the human spirit and natural forces and I could see that he desperately WANTED it to be true, but in his Chiropractor brain along with almost thirty experience he knew that however the person's spirit was he had clients walk in almost bent double with excruciating back pain walk from his consulting rooms upright, or nearly so, pain free for the first time in days, weeks, months and years - Grandma being one of them - after his attention and not a word to any religious book, no prayers, fires or lit candles, or dancing naked around a fire in the woods.\n\n\"Hey Gra'ma!\" said Ali.\n\n\"There's my baby girl,\" said Grandma, seeing the ring gleaming as Ali carefully removed her gloves again, \"have you been showing that off honey?\"\n\n\"Yeah!\" she said with a bit of a wiggle and screwed up features, as if telling the world our great news was a little bit cheeky, \"I never realised how much fun it was going to be!\"\n\nWe sat and chatted about how things were in India and what had brought Grandma so far north.\n\n\"Family,\" she said, \"Haven't had a proper Christmas with my family in five or six years and I got the feeling that I needed to be here for this one. At first I thought it was because of my age and my time left, but now of course I know it was because my baby girl was going to get engaged to Richie.\"\n\n\"Awwwww!\" said Ali giving her great-grandmother a hug.\n\nIt was all total crap of course. Ali told Meghan what her Gra'ma had said and Meghan smiled that huge happy smile of hers. The second that Ali headed for the bathroom Meghan spoke to in whispers.\n\n\"I love Grandma to distraction but that's a load of sacred cow shit,\" she grinned sipping from her glass of wine, \"the reason she actually came home was because both your Dad and I had watched the pair of you since the summer and we both said that we thought you would pop at Christmas the question if Ali didn't do it first.\" She grinned, \"I told Grandma, before you know it she's on a plane and flying home for Christmas to see her favourite great-granddaughter get engaged.\"\n\n\"Last night she said her spirit guide told her,\" I giggled.\n\n\"Only if her spirit guide was me using Skype!\"\n\nWe went shopping on Monday just to make sure we had all we needed for my first Christmas with my Dad and his family in at least ten years. It was nice to walk around with my fianc\u00e9e on my arm, Dad out in front playing host and Meghan and Grandma behind us.\n\nMeghan had of course ordered in everything weeks before, and a huge goose was defrosted in the kitchen, along with other large cuts of meat. In the large chillers were peeled and blanched potatoes, carrots, suede, parsnips, sprouts ready for cooking, alongside two large puddings, a huge cake and any number of other great Christmas treats for a small family dinner, where one of the family was a strict vegetarian.\n\nDad had selected wines for each course, had a late bottled vintage port to go with his selection of West Country Cheeses, so why the five of us were walking through a chilly Penzance Christmas market on a December Tuesday morning was lost on me.\n\nMy Mum never did that kind of thing, and as soon as I was too old to believe in Father Christmas it just became a good day to give presents, eat too much and watch a Bond film with your feet up on the sofa.\n\nDad and Meghan loved the whole thing. Neither of them were that religious although Meghan I think had a bit of a leaning towards English Wicca and would much rather have celebrated Saturnalia and burn a Yule log to bring good health and prosperity.\n\nStill, whatever was going on, that lovely family that I'd missed out on for so long were enjoying the sights, the smells, the carols be they from tape recordings or the local choir singing for charity.\n\nI could see that for my lovely Alice this was a family tradition and they bought things, stopped and pointed at things, stopped and listened and chatted about days and people past, and I could see that until I learned the significance much of this would be lost on me. Ali never let go of my arm for a second and tried to explain what was going on and what the story was. It was lovely and I really didn't mind for a second.\n\nLoaded down with I don't know what, we made our way back to Ali's Discovery and drove back to the Spa and helped Meghan carry things to the kitchen.\n\nWe sat around the fire pit in with the TV playing to itself and talking through Christmases past, and I regaled them with stories of Mum's various husbands and the strange if not ridiculous presents some of them bought me, some of their weird food choices and bizarre customs.\n\nWe ate a very simple meal of the most wonderful vegetable curry that Grandma created and at a bit before midnight headed for our beds. As I saw Grandma back to her nearby bungalow for the night she was staring out into the night and the stars hidden here and there by low cloud. She pointed up at some constellations and told me which each was and then to the North star.\n\n\"You mentioned bizarre customs Richie,\" she said to me as I opened her door.\n\n\"Yes?\"\n\n\"I want you to do something a bit special for your Dad tonight...\"\n\n\"Right?\"\n\n\"At a few minutes to Midnight he steps down to that last bungalow there,\" she pointed to the best room, the one I had spent my summer holiday in, where I had lost my virginity, the carpet-like lawn were Ali and I had made love two or three times.\n\n\"Yes...\"\n\n\"Meet him there, meet him there with a glass of port, he'll have one.\"\n\n\"OK. What does he do?\"\n\n\"I don't know Richie, neither does Meghan or Alice. And for the time being that's how it should stay.\"\n\nSo at five to midnight, I pulled on my fleece, walked through to the living room and saw the bottle of port that my dad had lately poured himself a glass from. I got one for myself and pulling my cap down I walked down the path, quietly and slowly.",
        "There was my Dad, staring up and away into space. As I got close the gravel on the path crunched, and I was quite pleased because it meant I didn't have to try and creep up on him.\n\n\"Evening mate!\" said Dad smiling at me and looking back up at the stars.\n\n\"Evening Dad,\" I said, \"Grandma said I had to come and join you.\"\n\n\"Did she now.\" He said with a smile, \"That's very sweet of her.\"\n\n\"What are you doing?\"\n\n\"The Christmas thing mate,\" he said, \"Something I got from your Grandpa Joe.\" Grandpa Joe was my paternal grandfather, a former Royal Air Force Doctor and a joy to be around. Grandpa Joe was Group Captain The Hon. Sir Joseph Cavendish McNair MRVO OBE, and an expert in 'Air Medicine' and had inherited 'the Christmas thing' and his title 'the honourable' from his Royal Army Medical Corps Father who had served in World War 2, who in turn had it from his Father John.\n\nIt started with Great-Great Grandpa John McNair MRCS, graduate of the University of Edinburgh and late of the Royal Army Medical Corps, who had served in World War 1 and having spent Christmas eve 1915 in a regularly shelled field dressing station near Ypres, every year following he had carried out the ritual, 'the Christmas thing'.\n\nHis son, Great Grandpa Richard McNair followed in the family footsteps and graduated from Medical school in time for World War Two. He spent a year working in a military hospital in Hampshire with Patsy, a young Queen Alexandra's Imperial Nursing Service Sister who neglected to tell him she was 'Lady Patricia'. Upon their marriage on his return from Arnhem, he became 'Earl' Cavendish McNair DSO of somewhere or other. Grandpa's Joe's older brother Edward took the title of course, a place in the County Regiment and a seat in the House of Lords, the country seat had gone with Patsy's father's death duties.\n\nGrandpa Joe listened to his 'honourable' Father who spoke about the RAMC in proud but disparaging terms, especially that regiment's habit of being 'up to their eyes in mud, blood, shit and bullets' so he went through medical school then duly applied to the Royal Air Force, and had a much cleaner and nicer time of it in general terms. \n\nMind you, he had been there in Aden, Radfan, Cyprus and especially Belfast, treating bomb and gunshot casualties during the troubles. He had been at RAF Brize Norton when the wounded were flying back from the Falklands war and also did much good work in civilian accident and emergency departments, as his speciality was blasts and burns.\n\nMy Dad had it from him; now it seemed it was my turn.\n\n\"A couple of minutes to midnight,\" said Dad, \"you just stand somewhere quiet where you can consider the year just gone, and think about gifts you had throughout the year - the good stuff and the bad. Those that we've lost and those that we've gained; more than that - just to recognise that biggest of gifts, that you've survived another fucking year!\" He laughed, \"think about it... just contemplate THAT... that concept that despite the dodgy beer and dodgier curries, the hundreds of miles you've driven, that orange light you slid across at the last minute, the mad bastard behind you in the Volkswagen Golf GTI with no sense OR insurance,\" he sipped his port, \"then there's the poor bastard behind you in the queue at Tesco that has decided not to listen to the voices in his head that day and slaughter everyone within ten yards of him with the kitchen knife he has tucked up his sleeve; or that the cells in your body have decided that they aren't going to create a malignant tumour in you this year. Shit like that.\" He took another sip. I tried mine, it was quite excellent.\n\nA lone church bell some miles away started to chime midnight,\n\n\"then you turn towards wherever you feel it needs to go; for me it was that way,\" he pointed back over my shoulder, \"Towards London and where you were with your mother, and you raise your glass in whatever toast you feel coming on. That is 'the Christmas thing'.\" He looked at me, \"I always drank to Meghan, Alice's and your health mate,\" he said, \"and that 'next year', whenever that year might have been, and I would finally get to spend a Christmas with you.\" He sipped his port, raising his glass in thanks for my presence I guessed, and the last bell struck twelve, \"And here we go, thanks year, you didn't get me this time ya bastard!\" he raised his glass high then sank it, \"Merry Christmas!\"\n\nI thought about what a shit year I had been having, worried about educational burn out, not seeing my Dad enough, long days of sick and dying people, Mum's new boyfriend and his terrible offspring and what I now recognised was straight up loneliness. So bad that when it peaked on a miserable fucking Thursday morning in August I ran away; I ran to the West Country and once I looked into a black Land Rover Discovery hours later it quickly became the best year ever, and I was now engaged to my beautiful girl. I smiled,\n\n\"Yeah, thanks,\" I raised my glass to the south east and France where Mum was, more importantly for me at least the apartment where my fianc\u00e9e was sleeping, \"You haven't been so bad!\" I sank my port in one as well, \"Merry Christmas!\"\n\n\"That'll do fine. Happy Christmas mate,\" he gave me a hug, we walked back to the apartment in silence leaving our glasses on the small coffee table and with a simple 'goodnight' headed for our own rooms. That was my first McNair 'Christmas thing'.\n\nChristmas day was amazing. It was just the five of us and involved many Christmas traditions I could remember from my childhood; at least the bit before Mum divorced Dad and everything was rosy still. \n\nThere was a nice light but filling breakfast of bacon and egg sandwiches (of course) with a vegetarian option for Grandma. There were presents around the huge fire with a supply of nibbles of both the sweet and savoury variety.\n\nI had a thick Cornish Fisherman's sweater called a 'gansey', knitted for me locally by a fisherman's wife that now ran a small business producing that particular style of knitwear. I pulled it on and it was fantastically warm yet still light with room to move. While I was amazingly grateful to my beautiful Ali for getting it for me, I had to take it off as it was so warm in the room already.\n\nFrom Dad and Meghan there was a new bicycle - mine had been stolen from the locked bike shed at my last placement hospital, an angle grinder used to cut through the rack and chain. This bike was made in London by a specialist manufacturer who used only the finest and lightest alloys but using paints and old recovered stickers made my new machine that had cost in excess of \u00a31000, look like it was some nasty old thing thrown together out of spare parts that hadn't been well cared for.\n\nGrandma gave me a claddagh, an Irish ring I recognised; a pair of hands holding a heart surmounted by a crown.\n\n\"I was given that by my mum to give to my husband, and he wore it for over forty years. I had goldsmiths in Hatton Garden build it up again so I could give it to the man who would one day win my Alice's heart,\" she leaned forward, \"the hands represent friendship, the heart represents love, and the crown represents loyalty. You show those three virtues to my Alice and she'll love you forever.\"\n\nI slipped it on, it was the right size for my little finger!\n\n\"Right hand until you're married with the heart pointing towards your body, towards your heart, it tells the world you're single but in love,\" said Grandma, \"once you're married it goes on your left hand, the same way.\"\n\n\"Oh Gra'ma!\" sighed Ali, \"that's so lovely!\" Ali moved next to her Grandma on the sofa and hugged her.\n\n\"I've got some things for you too sweetheart but Richie can't see them. Not yet at least!\"\n\nWe ate cold food on Boxing Day and had a long walk, ending in the Pub in Port George to the delight of all there, especially when Dad bought a round of drinks for the whole bar.\n\nAli and I has a Skype chat with Mum, the Leech and Fi the next day and once they were all at the screen Ali held up her ring finger and there were lots of smiles and ooh's from Mum and Fi and congratulations from Dave.\n\nAli said how well everyone looked, and ordered Fi to keep up her health and fitness regime.\n\n\"Especially if you're going to be a bridesmaid at our wedding...\"\n\nFi screamed in delight and Ali and I smiled. I wanted to say that Ali and I would need to set the date soon, as I wasn't convinced that Mum and the Leech's marriage would last, judging by the last two and some of the longer relationships had gone on for. I was good though and left my thoughts for later.\n\nWe had a great week and played around, swimming naked in the pool, shopping trips, walking the Cornish countryside in all weathers, even when the cold snap arrived and covered the Spa in ten inches of snow. We took photos and tweeted them on the Spa page, and posted them on the Spa Facebook page. The Spa's website manager picked them up from her poolside lounger in Lanzarote and put them on the Spa's web page.\n\nWe went to the Pub some more, then to Yves at The Red Dog and just had a great time.\n\nI went back to work at Cambridge and I was extremely pleased with myself. Ali had become Facebook friends with one of the girls from my course that she had met at the Christmas dinner and had then helped her with a back problem during a visit to London.\n\nSo the new profile picture of her showing her engagement ring with the title 'Richie put a ring on it!\" had travelled around some of my classmates and around the hospital. Across that great week I felt the pleasure that Ali had known in telling friends, colleagues and acquaintances that yes, I had asked that beautiful girl I came to the dinner with to marry me. It was tremendous.\n\nIn February she came to visit me in Cambridge for a long weekend and I showed her the few remaining sites that she hadn't seen when she came to visit me in December. We stayed in my rooms and ate out. She met some of my colleagues and I saw her back to the Railway station at Silly O'clock on the Monday morning, knackered from the almost constant lovemaking we'd shared. \n\nI had an email from Ali saying she'd had a bit of trouble with her Facebook account from a troll so she was going to close it down for a while. I sent her an email saying I quite understood and I'd see her in two weeks when we met in London again.\n\nI asked her to Face Time me but a short email back said she was closing that too.\n\nHer reply was a bit strange and she said that she might not be able to make it because of some commitments at the London Office, office not 'The Clinic'. I contacted her and said that I would be there for her and just see her in the evenings. It was odd.\n\nTwo weeks I received a very strange package in the post - it was the large engagement ring I'd given her just over two months back and to get it with a hand written address label in her writing was a bit strange. I rang her on her mobile but go no answer.\n\nI rang the Clinic and was put through to a call handing service which I never remember Dad ever using. Next I rang The Spa and was put through to Paula,\n\n\"No Richie, she's in London,\" she said brightly, \"definitely not here. If I hear from her I'll get her to call you straight away.\"\n\nI contacted Dad, he was in America lecturing and a symposium there and this time had taken Meghan with him. I sent an email asking if Ali was OK because my engagement ring had just come back to me in the post and her phone wasn't answering and I wasn't getting through to the Clinic either.\n\nIn about ten minutes I had a phone call from Meghan.\n\n\"Richie?\" she sounded worried.\n\n\"Hi Meghan how are yo...\"\n\n\"Richie listen; she actually sent your ring back?\"\n\n\"Yeah,\" I said as surprised as she sounded.\n\n\"Where are you?\"\n\n\"Cambridge.\"\n\n\"Get to London, something very strange is happening,\" said Meghan with real fear in her voice, \"Richie, I kissed Ali goodbye not two days ago and she was talking about coming to Cambridge and meeting you for lunch to surprise you. She was even talking about where she could take you for a quick lunchtime shag. That isn't a girl that sends her ring back in the post, not my Meghan. I've just tried to ring her and she isn't answering me either...\" I could hear panic in her voice, \"I'm getting on a plane Richie, I know my Ali and that isn't her.\" I could hear her panting, \"Go to London Richie, find my Ali and make sure she's OK. I'll head for the clinic as soon as I get off the plane.\"\n\n\"OK Meghan, I'll go now.\"\n\nI contacted my course leader and my tutor and explained as best I could.\n\nThey both advised I contact the police, so as my train wound interminably slowly back to Kings Cross, I rang the non-emergency number.\n\n\"She's sent your ring back?\" said the call taker, and I got the impression that the police really didn't want to be bothered with a couple of 24 year olds' and their love lives.\n\n\"She's not answering her mobile phone either,\" I added, just so as not to come across as the stupid star crossed lover wasting police time.\n\n\"Could it be that she's blocking calls from you?\" said the call taker with a tone, \"seeing as she's sent your ring back.\"\n\nI took a deep breath. \n\nI mean, I did get it, the call taker probably spent her life on that phone taking calls from people that had lost their door keys, their wallets, Tiddles the cat, complaining that their Wi-Fi reception wasn't that good and Virgin Media or BT or Talk Talk were defrauding them, and demanding a police car or ambulance to take them home because they were 'too tired to walk'.\n\n\"I saw her two days ago and she was talking about the dress she was going to wear, I just got off of the phone from her Mum and she can't get through either.\"\n\n\"How long has she been out of contact?\" said the call taker.\"\n\n\"I spoke to her the night before last,\" I remembered her comment about Facebook, \"She switched off her Facebook account because she said someone was trolling her.\"\n\n\"Facebook...\" said the Call taker with a very deep breath.\n\n\"Look, could someone visit The McNair Clinic and ask for Miss Trenowden, I'm really worried.\"\n\n\"Is she suicidal?\"\n\n\"No chance, she's really strong and with loads of friends around.\"\n\n\"So, you fianc\u00e9e goes off line and off of her phone...\" said the call taker, in a tone that just screamed 'God preserve me from 1st World problems.\n\n\"It's 500% not like her, she's an amazingly strong person.\"\n\nThe call taker was silent, I could even hear her pen tapping on the desk.\n\n\"You've called this clinic?\"\n\n\"Yes, it's my family business,\" I tried to keep it simple, \"My parents are in the States on a lecture tour and even they can't get through.\"\n\n\"Whereabouts are you?\"\n\n\"On a train to London from Cambridge.\"\n\n\"How about I ask one of our community support officers to call in and carry out a welfare check, that team are still in a briefing and it might be a while until they get there later today?\"\n\n\"That would be great,\" I said, \"could you let me know if there's a problem?\" \n\n\"We certainly shall Mr McNair, if you don't hear from us assume everything is OK.\"\n\nI thanked the call taker and disconnected. Shit. 'Later today' chances are I'd probably be there before they were.\n\nThe train pulled into Kings Cross a few minutes early and I ran straight out to the taxi rank and leapt into the first one. I gave the address of the Clinic and desperately hoped that this was all a misunderstanding and I would walk into 'the flat' and she would be there with chilled champagne, wearing lacy sexy underwear with a cheeky smile on her face and saying 'knew I could get you here'.\n\nBut that wasn't Ali.\n\nThe driver stopped directly outside. I paid him and ran up the stairs.\n\nThe usual receptionist Janice was there with her usual big smile for me.\n\n\"Hi Richard,\" she said seeing me, then her voice dropped as she saw my face, \"Is everything OK Honey?\"\n\n\"I'm looking for Alice,\" I said.\n\n\"She's not in today.\"\n\n\"Do you know where she is?\"\n\n\"She doesn't have any appointments here. Has she gone to the Spa?\"\n\n\"No, she would have told me.\"\n\n\"Of course,\" said the lady, \"you two are engaged now aren't you!\"\n\n\"Yes,\" I said with a gentle smile not wanting to shout from the rooftops that she had sent my ring back. \"I checked with Paula.\"\n\n\"I've not seen her since Friday afternoon, when I finished last thing and closed up.\"\n\n\"I'm just going to pop up to the flat,\" I said.\n\n\"OK darling,\" said Janice and I used my McNair Chiro 'access all areas' swipe card that Dad had given me the previous summer.\n\nI swiped and walked through, meeting several other faces that I knew. There was Sean.\n\n\"Excuse me,\" he said in that whiney voice he had used against me in the summer.\n\n\"Hi Sean,\" I said, really not bothered by him.\n\n\"Can I ask where you think you're going?\" I was crossing a big office space to the door to the private staircase to the flat.\n\n\"Up to the flat,\" I said, \"I'm just looking for Alice.\"\n\n\"And that means you can just stroll around the place when you feel like it does it?\" he gave me the same look he'd tried the previous summer and I still wasn't impressed. A few staff members looked at him sidelong but thought it best to stay out of it.\n\n\"Well actually yes!\" I said, not in the mood for him, moving past him and putting my foot on the bottom step.\n\n\"Excuse me MISTER McNair,\" he put his hand on my shoulder, but I shrugged it away and carried on, \"Oi!\" he shouted after me.\n\n\"What Sean, WHAT?!\" I really was not in the mood for this shit.\n\n\"I'll have you know that my room is up there and I don't like the idea of just anyone coming and going as they please around my stuff.\"\n\nI stopped and thought long and hard about what to do next. I came to my measured and considered opinion and told Sean.\n\n\"Really? My Dad owns this whole place and I have a swipe card that gets me into wherever I want to go while I guess that you probably don't. If you have a problem I suggest that you take it up with your Union or with an industrial tribunal. Good morning!\" I carried on up the stairs.\n\n\"Now just you look here!\" he said and followed me up. I ran quicker taking two steps at a time and swiped into the Flat pushing the door closed behind me.\n\n\"Ali!\" I called, but to no avail. I walked from the living room, through to the kitchen, then the bathroom, checking the main bedroom, the one next to it and the spare, or staff, room that Sean, Paula, Gwen or any of the other senior staffers that stayed in the Flat used when they were on duty. They didn't have access to main bedroom as it was full of Dad and Meghan's stuff and latterly Ali's and mine.\n\nAli was nowhere to be seen. I went back to the main bedroom to check Ali's bag and see what stuff was missing. I couldn't find one. I put my hand on the large wardrobe that held suits, coats and things.\n\n\"You!\" I felt a grip on my shoulder as I was flung to one side, \"Get out of my room!\" \n\nBecause of my lack of concentration I ended up on my arse next to the wardrobe. With a renewed anger I stood up, stepping towards him.\n\n\"It's not your room dickhead, it's my Dad's room, ergo it's my fucking room!\" My anger increased. This room was Dad and Meghan's room and Ali and I could use it in his absence and on request. To find that Sean had assumed a right to sleep in there along with all of their stuff was another proof that Sean was still, as Meghan so wonderfully put it, 'outrageously up himself'.\n\n\"And... and...\" Sean stuttered, \"Just who the fuck are you huh? Huh?\" He took a step towards me, \"Some Johnny-come-lately, new kid on the block, moving in on Daddy's business empire? Huh?\" he jabbed me in the shoulder, \"Suddenly Alice is all loved up and throwing all of her friends aside, you're obviously here to push people out, the cuckoo in the nest!\"\n\n\"What?\"\n\n\"You suddenly appear back in your Father's life and start feathering your own nest; to cap it all you start shagging your own sister! That's fucking disgusting!\"",
        "\"One thing Sean,\" I said stepping so that we were even closer, \"What the fuck business is it of yours what I do, what my Dad does or what Ali does!\"\n\n\"I care about your Dad, I care about Alice and I care what happens to McNair Chiro, THAT'S what business of mine it is!\" he jabbed me in the shoulder again.\n\n\"Sean, so fucking help me you jab me one more time with your finger I'll rip the bastard off and push it so far up your arse you'll be able to scratch a tickly throat! Where is Ali!\"\n\n\"What?\"\n\n\"Alice, Meghan's daughter remember? Where is she?\"\n\nHe paused for a moment, just long enough for the wrongness to register.\n\n\"How should I know.\"\n\n\"You work here, she works here, thought it might ring a bell?\"\n\n\"Alice has made it most clear that she doesn't want me in her life anymore so aside from on a purely professional basis I make it my business to stay out of hers.\"\n\n\"OK, so on a professional basis, where is Alice?\"\n\n\"How should I know,\" he spat out and folded his arms.\n\nI stepped back out into the main room and the adjacent laptop, I touched the mouse pad and it came to life.\n\n\"What are you doing?\" said Sean from behind me.\n\n\"I'm checking her email account and her calendar.\" I said.\n\nAn arm reached around me and slammed the screen down onto my hands. I pulled them free standing and spinning round to Sean who seemed slightly concerned at what I might do now.\n\n\"You... you have no right to look at that,\" he said. \"You aren't an employee of McNair Chiro so... so... so you have no right to look at personal information about our clients.\" His rant had given him confidence. He took a step back and smiled, then folded his arms.\n\n\"I may not be able to throw you out of this place, as you so rightly put it, it belongs to your father BUT if you take one step towards any of the consulting rooms or offices were personal data is held I will report you to the Office of the Data Commissioner in regard of a flagrant breach of the Data protection Act and Article 8 of the Human Rights Act...\"\n\nI had of course studied the Human Rights Act and the Data Protection Act as part of my college course and was more than happy that it didn't count.\n\n\"Fill your boots Sean,\" I said and raised the computer screen again.\n\n\"I'm warning you!\" he said.\n\n\"Yeah, I heard, and I'm ignoring you.\"\n\nHe unplugged the laptop but it had a large battery in it.\n\n\"I'm calling the police,\" he said.\n\n\"No need, I already rang them and one of them is coming here to do a welfare check on Alice. Soon as they get here you can have me thrown out.\"\n\nI tapped my password that Dad had given me to get access to the McNair system, the screen came to life and there was Ali's email account still open, I moved my finger and saw unread emails from me, Meghan and one from Paula sent minutes before; as I looked closer at these the Laptop was snatched from the desk and flung across the room, smashing into the wall.\n\n\"THAT!\" shouted Sean, \"is YOUR FAULT!\" he almost screamed, \"If you hadn't shown such contempt for the English law I wouldn't have had to have done that!\"\n\n\"You TWAT!\" I shouted, \"That's Ali's laptop!\" I squared up to him now, \"You fucking idiot, I HAVE AN ACCOUNT with McNair Chiro! How did you think I was going to check Ali's calendar, fucking guess?\"\n\nHe began to mumble,\n\n\"Mmmm... Mmmmbbbbbbmmmm... mmmmmMMGET OUT!\" it was the shout of hysteria, and he did it again, screaming the 'out' like a fouteen year old girl. I straightened up, this wasn't going to end well and to reinforce his point he ran at me.\n\nAs befitted my excellent English education I was terribly well trained in Rugby, and stepped to one side and used a manoeuvre referred to as (if you'll pardon the expression) the 'hand-off'. \n\nA disgusting concept to those not educated in the Sport of Gentlemen, this is where you use a braced arm and your opponent's momentum you simply push them past you and hopefully to the floor and out of your way and out of trouble.\n\nIt worked almost perfectly but such was Sean's momentum he ploughed straight into the thin plasterboard wall making a significant dent in it that was the same shape as his head and shoulder with a bloodstain that corresponded to a new cut on his forehead. \n\n\"You bastard!\" he rolled to the floor, \"I gonna make you fucking suffer for that Rich Boy!\" He stood, I thought he was going to take another run at me.\n\n\"Violence? What's up Sean,\" I said, \"Run out of clever comments?\"\n\n\"I don't need comments to get one over on you MISTER McNAIR!\" he smiled a nasty smile that suggested that there was worse to come.\n\nI thought about this,\n\n\"OK Sean, where is Alice?\"\n\n\"Lost your pretty fianc\u00e9e have you?\" he snarled, \"Not really your Father's son are you? Ralph never loses anything.\" He had a borderline evil grin on his face.\n\n\"I get the feeling that he's going to be losing you pretty soon,\" I said, watching him as he paced around the room stopping to touch the blood stain on his forehead.\n\n\"Thinks he can teach does he?\" said Sean, \"I'm a hundred times the teacher he is, everybody says so.\"\n\n\"Plainly not everyone, my Dad is in America talking to hundreds of Chiropractors, while you're here running the Clinic for him.\"\n\n\"Yeah Ralph Fucking McNair, son of a Lord...\"\n\n\"Grandson of a lord...\" I said. I wasn't sure why but I knew I had to play for time.\n\n\"Alright, GRANDSON of a fucking lord!\" He snapped, \"what fucking difference does it make?\"\n\n\"It means his upbringing got him a good education and almost fuck all else. When my Great Uncle the Lord died he left his immediate family at title, a seat in the House of Lords and a fuck load of debt.\"\n\n\"You want me to feel sorry for your family?\"\n\n\"No,\" I said looking round for anything that would give me a clue, \"My Dad went to a good school for children of Servicemen, once he left there he went the long way, same as you, which included being taken for almost everything he owned by my mother in the divorce.\"\n\n\"You really are going for my pity here aren't you?\"\n\n\"Not me mate,\"\n\nThere had to be something, some clue of what had happened. It was quiet and I turned my head to listen.\n\n\"YOU!\" shouted Sean against the new silence, \"You suddenly turn up and everything goes to bat shit.\" He walked further around the room and I figured he was heading for the laptop. He was talking quite loudly, why... what the fuck...\n\n\"Mr McNair?\" An inquisitive voice from the bottom of the stairs broke the tension.\n\nI backed up to the bedroom door, and shouted down, hoping I knew what it was.\n\n\"Yes, up here.\"\n\n\"The police are at the front desk asking for Miss Trenowden, is everything OK?\" She sounded suspicious and I wanted to play on that. The thump of me, Sean and Ali's laptop all hitting the floor in succession must have travelled.\n\n\"Send them up,\" I said in triumph and as I turned my head to grin at Sean I saw HIS extended braced arms hitting my chest and sending me flying out of the door, across the small landing and down the stairs landing like a sack of shit at the bottom at the feet of a very surprised Janice and a policewoman and police community support officer.\n\n\"Excuse me,\" said the policewoman stepping over me to run up the stairs. As her foot hit the first step the top door slammed shut. She ran up and pushed at it. It was locked and as Janice and the PCSO tried to help me up I was reaching into my pocket and my wallet with the swipe in it.\n\nI threw it up to her, she missed it and it tumbled back down the stairs. I grabbed it and ran up with the PCSO behind me.\n\n\"My girlfriend is missing,\" I said, \"and I have the strangest suspicion that he, Sean Patterson, knows something about it.\" I swiped the reader and there was the clunk of the latch disengaging and I pushed. The door moved a fraction of an inch, but was stopped by something the other side. The bastard was barricading himself in to the flat.\n\nI threw myself at the door and it gave a bit more, behind me the policewoman was on her radio and telling control that all was not as simple as suggested at McNair Chiro and assistance was needed.\n\nI continued with the door and it gave a second time but tiny amounts. I leant back for another go and Sean had obviously returned and pushed it closed again. I hit the now locked door and my shoulder, sore from my first fall and an out of control tumble down the stairs, knew about it.\n\n\"Is there another way in or out?\" said the PCSO.\n\nI thought about it; Janice at the bottom of the stairs and looking more worried than I'd ever seen her before shouted up,\n\n\"FIRE ES---\" The last word disappeared with the loud clanging in bells and screeching of sirens.\n\n\"He's gone out the back!\" shouted the PCSO running down the stairs and taking a now terrified Janice with him.\n\nThe policewoman and I eventually got through the door feeling the cool air hit us as we stepped in,\n\n\"Fuck,\" she said.\n\nWe followed the breeze along the short corridor and there at the back of the spare room and behind a curtain I'd never even thought about was the fire door swinging open allowing the rush of wind. As we stepped out onto the steel gantry and steps, the PCSO and Janice appeared at the tunnel entrance at the other side of the large car park owned by the hotel next the Clinic.\n\n\"Fuck,\" said the policewoman to herself again, then shouted down to her colleague, \"did you see any one leave?\"\n\n\"Red sports car!\" shouted the PCSO, \"gone off the wrong way down this one way street.\" He pointed in that direction.\n\n\"It's an F-type convertible,\" I said getting my breath back, \"registrat...\"\n\n\"Hang on,\" said the Cop taking the mike on her radio, \"Juliet Tango one four to all units, be on the lookout for a stolen red F-type Jaguar convertible, registration...\" she held out the microphone to my face. I remembered my phonetic alphabet from school cadets and spoke carefully and slowly.\n\n\"Alpha Lima India,\" I took a breath \"Charlie Hotel India Charlie.\" It was Ali's play car and for getting her around in comfort and at speed, and when she wanted to be a bit girlie, hence 'Ali Chic'.\n\n\"Zoe!\" shouted at deep voice from behind us in the flat, I turned it was another policeman, \"probably two in the car, someone has been locked in the wardrobe of the room next door... and they ain't there now...\""
    ],
    "authorname": "Androgynousother",
    "tags": [
        "straight sex",
        "oral",
        "shower sex",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-girl-at-the-spa-ch-03"
}