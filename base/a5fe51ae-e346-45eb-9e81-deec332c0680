{
    "title": "Vannerbehn's Luck Pt. 13",
    "pages": [
        "Kima said it first. \n\n- \"Taliesine? You ... you were dead.\" \n\nThat was precisely what we were all thinking, as we stood in the blood-spattered wreckage of our sitting room, with the bodies of Cremyne and her cronies strewn on the floor. Syrava's broken neck was twisted at a grotesque angle, and her unsettling eyes were still open. \n\nIt struck me that Kima had used the word 'we', rather than 'I'. That might be significant, in some way - or not. I wasn't thinking particularly clearly. \n\nEveryone was in shock, to some degree. Boutan and Naomi had probably never been so close to death. I was bleeding all over the carpet, from my gashed fingers. I was also discovering that a broken collarbone can be surprisingly painful. \n\nFrom the look on her face, it was quite clear that Denya had never killed anyone before. \n\nI cleared my throat, loudly. \"Well - I think that Kima and Taliesine need a moment. Alone. The rest of us should go to the kitchen.\" \n\n\"Boutan, would you put a kettle on? A pot of tea sounds about right, don't you think? Naomi, dear: could you find me something to wrap around my fingers? A towel, or a sheet ...\" \n\n\"Denya - I can't reload my pistols, just now. Would you ...?\" \n\nGiving them all a simple task to perform would help, I thought. Tea can't cure everything, but it never hurts (unless you have a serious gut wound). And I had told Denya, at least a hundred times, that pistols should be reloaded immediately, no matter what. You never knew when you'd need them again. \n\n- \"Here.\" said Aressine. \"Let me help.\" She'd torn half of Armon's shirt off (the back half - it was probably cleaner than anyone else's), which she now wrapped around my hand, to staunch the bleeding. \n\n\"Can you heal yourself?\" she asked me, softly. \n\nI could. I was the only one among us who was seriously injured - physically, at any rate. Aressine supported my left arm, to relieve the pain of my shattered collarbone, while I quickly repaired the worst of the damage. \n\n- \"Are you alright?\" I asked. \n\n- \"I'm fine. But that little girl needs you.\" said Aressine. \n\n- \"I know.\" I said, glancing over at Denya, who was carefully loading my pistols, exactly as I'd taught her. \"Give her a moment, yet.\" \n\nI found Boutan already bustling around the kitchen. She'd put wood in the stove, getting the fire going strong, and the kettle was on to boil. In case we needed stronger drink, she'd already put out wine and three types of liquor, with a dozen cups and glasses. Now she'd begun putting together a tray of food. \n\nI stopped her. Very gingerly, very carefully, I put my arms around her, and gently hugged our cook. \n\n- \"You were so brave.\" I said. \n\nThat did it. Boutan squeezed me so tight I thought she was trying to pop the stuffing out of me. \n\n- \"Will one of these do?\" called out Naomi, as she ran into the kitchen. She was waving a towel and a napkin, one in each hand. \n\nI extended one arm, and invited her into a three-way hug. The little blonde maid stopped, and just stared at us. Her mother and I moved the hug over to include her. As we enfolded her in our embrace - one arm each - Naomi burst into tears. \n\n- \"I was so scared.\" she wailed. \n\n- \"We all were.\" I said. \"I was petrified.\" \n\nBoutan cast me a grateful look, thinking that I was fibbing to her daughter just to soothe her, and to allay her fears. \n\n\"We'll make sure that it never happens again.\" I promised. \n\n- \"It'll be fine.\" said Boutan. \"Them bad 'uns are gone. And now her Ladyship's back, we'll all be safe.\" \n\nHer Ladyship? \n\n- \"And Master Kelsen, too.\" said Naomi, her eyes bright with tears. \"He saved us.\" \n\nUh-oh. The little maid's expression looked suspiciously like an incipient case of hero worship. I 'd have to be very careful with that. \n\nTime for a talk with Denya. \n\nShe had just finished loading, and passed me my pistols, butt first. \n\n- \"Thank you.\" I said. \"Denya - can I ask you something?\" \n\n- \"Sure.\" She looked mildly confused. \n\n- \"That was your first kill, wasn't it? How did it feel?\" \n\nDenya froze. She stared at me, dark brown eyes searching mine. \n\n- \"You're doing this on purpose.\" she said. \n\n- \"What d'you mean?\" I answered, playing innocent. \n\n- \"You know it's the first time that I've ever killed someone. You don't want me to enjoy it too much. I remember when you told me, that time, about the first man you'd killed.\" \n\n\"Well I didn't enjoy it, in case you're really wondering. But I'd do it again, in a heartbeat, because he was about to kill you. And he was a complete bastard who didn't deserve to live, on top of that.\" \n\nDenya glared at me, defiantly. This would take careful handling. I loved this little street urchin like a younger sister - the one I'd never had. I wasn't old enough to see her as a daughter; I wasn't even sure that I wanted children. But I loved Denya dearly, and didn't want to see her hurt. \n\n- \"You saved my life, Den.\" \n\nShe continued to stare at me, unblinking. \n\n\"If you hadn't done what you did, I'd be dead. I was about to die, and you prevented him from killing me.\" \n\n\"Thank you. For my life.\" \n\nThat worked. Her lip wobbled, and her eyes began to tear up. She was only twelve years old, after all. \n\n- \"I'm glad that you killed him, Den. Not because he was an evil man - but because he was about to kill me. There are plenty of evil people out there: but we don't have the right to appoint ourselves their executioners.\" \n\n\"But in self-defence? To protect ourselves, or to protect someone we ... someone we care about? Then yes, you can kill them. You did what had to be done.\" \n\nShe didn't sob, or cry openly. I hugged her anyway. Her arms came around me, and she pressed herself against my chest. \n\n- \"I was so scared.\" she said. \"For you.\" \n\n- \"I know. Thank goodness you disobey me, from time to time.\" \n\n- \"From time to time?\" Denya looked up at me and smirked. It was close enough to a smile. She never obeyed me, if she thought she could get away with it. \n\nI'd told her not to follow me home, and she'd done it anyway. I wasn't sure if Taliesine's wards had still been operative, or if Syrava had disabled them. But Taliesine had amended her protective spells, so that Denya wouldn't trigger an alarm. \n\nShe'd followed me all the way. Only, as I entered our house, Denya had noticed a few minor anomalies. The heavy drapes in the sitting room weren't properly closed, as if someone had been peeking through them to watch the street. There was also light showing through the window of Taliesine's and Kima's bedroom - unnecessary, unless the redhead fighter was keeping vigil. \n\nDenya knew our patterns and habits. Curious now, she'd circled our house, and found that Boutan's room was dark, as was Naomi's. Odd, and unusual enough to lead her to investigate. She'd come in through the front door.  \n\nBut when she heard voices, Denya had flattened herself against the wall, to listen. She had the good sense to wait, and not to rush into the sitting room. \n\nHer timing had been perfect. \n\n- \"You saved my life.\" I repeated. Now she couldn't meet my eye. \n\n\"Do you know what that means, Denya? You're responsible for me, now. You have to keep me alive. Otherwise, what you did tonight was pointless.\" \n\n- \"Does that mean I get to boss you around?\" \n\nShe was going to be fine. I hoped. \n\n*** \n\nTaliesine eventually explained what had happened. Aressine and I were there, with Kima. Denya was included, too: either because she was the wizard's apprentice, or as a sign of respect for her contribution in the fight. Or maybe both. \n\n- \"I could tell that the crossbow bolt was poisoned.\" said Taliesine. \"Unfortunately, I had no spells to eliminate or slow the poison. My only option was to slow my heartbeat and the functions of my body with a feign death spell. That, and to hope that Kelsen could get us to the Narimac quickly.\" \n\n\"By the time we arrived, I had come to the conclusion that it might be wiser to remain 'dead', so to speak. It would give me, and us, a tremendous advantage against Syrava and Cremyne if they believed that I was deceased.\"  \n\n- \"How did you fool Ludianne?\" I asked. \"I didn't think that was possible.\" \n\n- \"I did not 'fool' her at all. Ludianne recognized that a spell was at work. She spoke to me - telepathically. I expressed my preference, which was to continue to appear dead. She purged the poison from my body, and extended my spell indefinitely, but otherwise respected my wishes.\" \n\n- \"She extended your spell? Indefinitely?\" I squawked. \"How is that even possible?\" \n\nThe wizard simply shrugged. \"With Ludianne, many things are possible.\" \n\nI was stunned. Ludianne couldn't leave the Narimac. It had never occurred to me that her magic could. Or was it the fact that it was Taliesine's spell, first? \n\nTaliesine turned to Aressine. \"I am sorry if I caused you undue worry. It was not my intention to harm either of you.\" \n\n\"You may have said certain things, in my presence, when you believed that I was dead. I was not expecting to eavesdrop, or to hear sentiments which probably would not have been expressed if you knew that I was alive.\" \n\n- \"You don't have to apologize to us. Well, to me, anyway. Sorry.\" I said, to Aressine. \n\n- \"I understand why you didn't tell us, Taliesine.\" she said. \"But I was frightened. I really thought you were dead.\" \n\n- \"That decision was taken in haste. I may not have made the best choice ... for all concerned.\" \n\n- \"She didn't think that I could keep the secret.\" said Kima. She still looked half furious, and only half relieved. \"She was probably right.\" \n\n- \"I almost told you, Kelsen.\" said Taliesine. \n\n- \"Because I can keep a secret?\" \n\n- \"Because you are such a skilful liar.\" \n\n- \"She means that in the nicest way.\" suggested Aressine. Denya was grinning at me openly. \n\n- \"Thanks a lot. You cut it all a little fine, though, didn't you?\" I said. \n\n- \"My wards on the house were there to warn me. I knew the exact moment they entered.\" said the wizard. \"Yes, we could have invited Pamna and Fhaernala to stay here, to increase the odds in our favour, but how was I to communicate that? Also, I feared that our enemies might not strike if the house was too well defended.\" \n\n\"I waited until they were gathered in the sitting room, because I needed them all in one confined space. It also helped immensely that you were there, Kelsen. Once I realized that Syrava's hold spell would protect you from my stun, at least in part -\" \n\n- \"What do you mean, 'in part'? You didn't know?\" \n\nAnother shrug. \"These things are rarely certain.\" \n\n- \"You haven't mentioned what happened upstairs.\" said Kima. \n\n- \"Ah. Yes. That was ... regrettable.\" \n\n- \"What happened?\" I asked. \n\n- \"They destroyed most of Taliesine's notes, and some of the components she needed.\" said Kima. \"You know - for that big spell she's been working. I don't think they even knew what it was for. They just did it out of spite.\" \n\nTaliesine confirmed it. The spell to get Ludianne home had been sabotaged. \n\n*** \n\nIt was early morning, only a few hours before the dawn, before we got to bed. She helped me get my clothes off, which was complicated by the fact that I couldn't raise my left arm, or use my right hand. Aressine fussed a bit, worrying about my injuries. \n\n- \"I healed myself.\" I said. It was only a mild exaggeration. Well, maybe not so mild. \n\n- \"But you're still in pain.\" she insisted. \n\nI was. But I was also monstrously horny. I was trying to think of a way that I could have her, without aggravating my injuries, or passing out from the pain. \n\nBut Aressine didn't react to near-death experiences the same way. She diplomatically ignored the colossal bulge in the front of my clothing. Then she shifted her position, so that she wouldn't get slapped in the face by my erection as she pulled my pants down. \n\nAressine was also bruised, as I saw when she undressed herself. \n\n- \"I'm sorry.\" I said. \"You're hurt, too. All this time I was only thinking of myself, and ...\" \n\n- \"I'm just sore.\" she said. \"Tomorrow I'll be right as rain.\" She leaned in closer, and gently kissed me on the lips. \n\n\"You can heal me in the morning, and then we'll get you to Ludianne. She'll take care of your wounds. Right now, though, you need sleep more than ... anything else.\" \n\nInteresting, that: Aressine clearly meant 'we', but said 'you'. I wasn't sure what that meant - but then I wasn't sure of much, at this stage. \n\nShe brushed her fingers lightly over the head of my erect penis. \n\n- \"And we'll take care of this problem tomorrow night. Thoroughly.\" \n\nWe were both exhausted. Probably too exhausted for any serious romantic activity. Aressine knew better than I did. She snuggled close, on my uninjured side. \n\nI don't remember falling asleep. \n\n*** \n\nLudianne took care of everything. She examined everyone, and dispensed healing and sympathy wherever they were needed. Aressine got a massage (privately - I wasn't allowed to watch). \n\nBut the Janni could also see that Denya was hurt. Not physically; but the 12 year-old had been marked by last night's experience. Ludianne had a long conversation with her (again, in private). \n\n- \"She is quite remarkable, your friend.\" said my partner, when we were finally alone. \n\n- \"Will she be scarred?\" \n\nLudianne shook her head. \"She may still look like a little girl, but Denya has been saddled with responsibilities as long as she can remember. She is also very sensible. She knows that what she did last night was necessary.\" \n\n- \"She saved my life.\" \n\n- \"She knows that. But Denya will not refer to it, or remind you of it.\" \n\n- \"Oh?\" \n\n- \"She does not want to make you feel obligated to her.\" \n\n- \"Huh. Women are odd creatures - even the little ones.\" \n\n- \"You are much the same, Kelsen. You go out of your way to avoid referring to what you have done for me.\" \n\n- \"What? I don't -\" \n\n- \"Enough talking.\" said Ludianne. \"I have work to do. You made a complete mess of healing yourself.\" \n\nShe had me strip, and lie down - it would probably be best if I didn't mention any of that to Aressine. Ludianne used her healing skills to improve on the rush job I'd done on my fingers, shoulder, and collarbone. \n\nThen she gave me a thorough massage. No, not that thorough. \n\n- \"You know,\" I said \"I do believe that was the first time you've ever lied to me.\" \n\n- \"Taliesine asked me not to tell you.\" \n\n- \"Hmm ... and whose partner are you?\" \n\n- \"Yours.\" she said. I couldn't see her face, but I could hear her grin. \"But you know, Kelsen - you have only yourself to blame. You could have been my master.\" \n\n- \"Don't remind me.\" I grumbled, softly, into the pillow. \n\n- \"Pardon?\" \n\n- \"Nothing.\" She'd heard me. Ludianne heard everything said in the Narimac. I sometimes suspected that she could read thoughts, as well. \"One more thing, partner: how did your spell 'leave' here? I thought ...\" \n\n- \"It was an experiment.\" said Ludianne. \"I extended Taliesine's spell, and then suggested that she stay here. That way, she could continue to appear dead for as long as she wished.\" \n\n\"But she insisted that she had to be elsewhere - preferably at your home - to draw your enemies out. I did not expect my extension to last once she left the Narimac.\" \n\n- \"You didn't know?\" \n\n- \"I have told you before, Kelsen: I am neither omniscient nor omnipotent.\" \n\nNow would be a good opportunity to change the subject. \n\n\"You heard about the damage to Taliesine's research?\" \n\n- \"Yes.\" \n\n- \"It's only a temporary setback.\" I said. \"We'll get that spell right. It'll just take a little more time. And money.\" \n\n- \"Time and money are things I have plenty of.\" said Ludianne. If I didn't know her better, I'd have sworn there was a note of wistfulness in her voice. \n\n*** \n\nPamna was upset that she'd ever believed Taliesine was dead. \n\n- \"I should have known. I should have examined her more closely. Tried to heal her.\" \n\n- \"Why would you, after Ludianne had pronounced her dead?\" \n\nPamna was also quite unhappy that she hadn't been available to help us when Cremyne and her gang took over our house. \n\n- \"We should have been here to support you!\" she exclaimed. \n\nFhaernala was more philosophic about the whole ordeal. \"How, Pamna? We don't live close by. Even if we did, how would they have contacted us?\" \n\nThey had both come to join us at the Narimac. Ludianne had sent word for them. My Janni partner had no work to do during the day, and absolutely no need for sleep, so she was sitting with us as well. \n\n- \"Well, there is a way to prevent it from happening again.\" she said. \"Kelsen could buy you the house next door.\" \n\nIt wasn't as crazy as it sounded. Ludianne wasn't simply floating an idea that had just occurred to her. \n\n- \"We have more than enough money.\" she told me. \n\n- \"What about the research for your spell?\" I whispered. \n\n- \"We can easily to buy another house. Or several houses. In fact, it would be a wise investment, against the day when the Narimac is no longer here.\" \n\n- \"Really?\" \n\n- \"You could sell them, at some time in the future, if you needed money. Or you could rent them to lodgers, and provide yourself with a regular income.\" \n\n- \"How do you know so much, when you've never set foot outside this place?\" It wasn't a real question; no answer was required. I was just amazed by my partner - again. \n\nPamna and Fhaernala weren't sure that they wanted to be housemates, but the idea of a large house, as opposed to the small apartments they presently occupied, really appealed. \n\nAs an added bonus, we would be in a much better position to support each other at short notice, or in a crisis. \n\nThey weren't ready to decide right away, but as Ludianne pointed out, I could go ahead and see about buying more properties in our neighbourhood. \n\n- \"Kelsen the slumlord.\" said Kima. \"It does have a certain ring to it.\" \n\n*** \n\nI suffered all through the late afternoon, and into the evening. I'm tempted to describe it as torture, but that would be disrespectful to people who've truly been tortured. \n\nBut I began to understand some of the of principles of torture. Whether it's physical pain or mental anguish, or deprivation ... there has to be no end in sight. The victim must see nothing but more suffering on the agenda, and no way to escape it. \n\nThey have to experience hopelessness, and eventually despair. That was how I felt. I thought our friends were never going to leave. \n\nPamna and Fhaernala came back to the house with us, to make sure we were alright, as the witch put it. Denya said her goodbyes, to go and find her brother. She would be back in a couple of days, in any case, for her magic lesson. \n\nNow, I'm very fond of both Pamna and Fhaernala, but that night there was nothing I wanted so much as for them to say goodnight and go somewhere else, so that I could be with my girlfriend, naked and wide awake. \n\nInstead, the two of them polished off two bottles of my wine. Then they had a long discussion with my housemates about whether or not they should open a third. \n\nThey chatted, and reminisced, and speculated. I told Boutan and Naomi that we didn't need anything else, and sent them off to bed. As hints go, that one fell flat. \n\nI suppose I could simply have announced that I was going to bed myself, and taken Aressine by the hand. I wasn't sure, though, that she'd have gone along. She has much better manners than I do, for one thing. \n\nIn the end, our guests finally realized that Kima and Taliesine desperately needed some time alone. They were practically staring at one another, almost unaware that there was anyone else in the room. \n\nIt was obvious to me, at least, that they should be upstairs. Whether they would just talk, or make love first and then talk afterwards ... well, that was no one's business but their own. ",
        "I tried to catch Aressine's eye, to give her a hint. No luck there. \n\nFinally - finally! - Pamna caught on. \n\n- \"We should probably be going.\" she said, to the elf. \n\n- \"You're welcome to stay here.\" said Aressine. \"You can take the guest room.\" \n\nGuest room? Right next to Kima and Taliesine? What was wrong with her? Whose side was she on? \n\n- \"No. Thank you.\" said Fhaernala. \"We've overstayed as it is. You need some time on your own.\" \n\nFinally! Of course there were more thank yous, and a conversation at the door that seemed like it would never end. Taliesine and Kima disappeared before we'd even gotten to the final goodbyes. \n\nThe very moment our two friends were gone, and the door closed behind them, Aressine turned to me, and smiled. \n\n- \"Ready for bed?\" she said. \n\nReady? I'd been ready for more than a week. I'd been over-ready, fit to burst. But in the interest of domestic harmony - and of not starting an argument which might interruptus our coitus - I chose not to say anything stupid. Instead, I smiled back at my girlfriend. \n\n- \"If you are.\" \n\n- \"I've been ready all day.\" she said. \"I can't believe that Pamna and Fhaernala stayed so long.\" \n\nTaliesine was right: I can be a skilful liar. And sometimes, it's not what you say, but what you don't. I managed to keep my mouth shut, and to lovingly shepherd Aressine up the stairs. \n\nMy accumulated frustrations began to subside when we closed the door behind us. They melted away the instant Aressine doffed her clothes. \n\nShe was breath-taking. Her long blonde hair fell over her shoulders, and hung just below her breasts. The combination of her yellow hair and her dark brown eyes never failed to move me. Perfect nose, kissable lips ... \n\nAressine had perfect posture, as well. Her back was straight, her chin up. I admired the long column of her neck, her proud breasts, and surprisingly narrow waist and slender hips. \n\nShe calmly waited, letting me gaze at her nakedness. There was no hurry. Her composure was remarkable - but then, she was quite comfortable in the nude. \n\n- \"You're so beautiful.\" \n\n- \"I'm glad you think so.\" \n\nI came closer, and took her in my arms. She tilted her head, to meet my proffered lips. It was a wonderful kiss: soft, but firm. Gentle, but full of promise. \n\nMy hands began to move, up and down her back, and then lower, to cup her buttocks and pull her to me. My erection was pressed against her stomach. Aressine reached down, and pushed it lower, between her legs, just below her pussy. \n\nShe trapped it there, between her thighs. The she began sliding her hips forward. My member angled upwards, so that the head was rubbing on her outer lips. Aressine licked her fingers, and then used that saliva to liberally coat the head of my cock. \n\nMeanwhile, I continued to stroke her back and bottom with my left hand, while I brought up the right to fondle her breast. My fingers were still sore, but to look at them, you'd never know that I had almost sheared them off ... was it only last night? \n\nThere was so much that I wanted to do to Aressine - with her, on her ... but she was smarter than I was. Stronger, too, in many ways. She put me on my back, so that there much less strain on my shoulder and collarbone. \n\nShe gave my cock and balls a thorough examination, and plenty of attention with her hands and fingers. Briefly - just briefly - she took me in her mouth, and teased me with her tongue. But that was obviously more to get me thoroughly wet than for any other purpose. \n\nAressine, it turned out, was just as eager as I was. Or maybe she was just smarter. She knew that the best thing, at this moment, was for us to be joined. Connected. She straddled my hips, aimed my erection with one hand, and then sank down on it. \n\nTwo partial strokes, and then a third, very smooth and very deep, and Aressine was sitting on me, fully embedded. \n\nShe shifted forward, and then back, a delicious movement. She was looking at me, a half-smile on her lips, to see how I would react. \n\nI reached for her lovely breasts with both hands. As it turned out, that wasn't such a good idea. My shoulder and collarbone both protested; that wasn't the ideal position for either of them. A twinge of pain spoiled the sensation for me. I gave up that attempt, and relaxed my left side, letting my shoulder rest on the bed. \n\nMy right arm wasn't hurt, but when I extended it, I still felt a twinge on my left, in my collarbone. To make matters worse, the feeling in my injured hand was mixed, at best - both pleasure and discomfort. \n\nAressine knew it. She leaned forward, and pinned me to the bed, with her hand on my chest. It wasn't a fair contest, because I wasn't sure that I wanted to win. Especially when she leaned even further forward, and dangled her breasts and swollen nipples just above my chin. \n\nThe view was spectacular. I discovered that I didn't particularly mind being trapped in this way, especially when Aressine shifted her hips forward again. But she had even more in store for me. \n\nShe twisted her shoulders, just slightly, so that her breasts swung from one side to the other, gently slapping my chin. I only had to turn my head, to try to catch her nipple in my mouth. I missed, twice, and lightly grazed her nipple with my teeth. \n\nAressine obligingly held still, with her breast hanging directly above my mouth, so that I could latch on with lips and tongue. \n\n- \"You were very brave.\" she said. \n\nI let go of her nipple. \"You were magnificent - again.\" I told her. \n\n- \"Maybe. But no so brave as you. I was very proud. I still am.\" she said. \n\nI don't know that I truly deserved them, but I reaped a hero's rewards that night. My girlfriend made it a very memorable occasion. \n\nMy girlfriend ... I was beginning to like the sound of that. \n\n***** \n\nNot quite the end. \n\nThere will be more Kelsen stories, eventually. Thank you for all the comments and support; as always, they are much appreciated."
    ],
    "authorname": "AspernEssling",
    "tags": [
        "fantasy",
        "rogue",
        "magic",
        "intrigue",
        "girlfriend",
        "urban environment"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/vannerbehns-luck-pt-13"
}