{
    "title": "The Archer Part Pt. 02",
    "pages": [
        "Aslin was going mad. If she didn't leave this room today, she was going to scream. She felt she had looked at every single object in the room a thousand times, felt every fabric, every surface. She had started to pick objects up just to put her hands on something new, had started moving her chair to different corners so when she looked up from reading she didn't always see the shafts of sunlight falling on her freshly made bed. Breakfast lasted her nearly an hour these days, as she savored the novelty of different dishes, different textures and tastes. These were the acts of insane people, she knew, and she felt it happening to her in small increments.\n\nShe hated Ero for keeping her always in this one space, but also felt such an incredible rush of pleasure and gratitude every time he came to her. Not just because he was a person with whom she could interact, but because of his vibrancy, the sheer energy that always seemed to be vibrating off his person, his unpredictability. She craved novelty, and he was novelty personified.\n\nBut she tried not to advertise how desperate she was for his company, feeling more than a little self-disgust at how annoying of a prisoner she had turned out to be. Bathed and fed and dressed like a prize pig and here she was, complaining of her boredom. Would she rather be swinging in the basement, getting lashed?\n\nSo when Ero came to lunch with her, Aslin schooled herself to remain calm and prayed he was in good humor. She had a request to make.\n\nHe opened the window, as usual, and she stood by it for a little while as the lunch tray was being set up. \"This looks nice, Giro, thank you,\" Ero said softly in Almanian, and the manservant smiled.\n\n\"Cook's gone out of her way to experiment with spices, what with the lack of reliable meat. Thankfully this was one of her more successful experiments,\" the man answered.\n\nAslin lightly closed her eyes with the strong breeze, relishing these moments when Ero spoke to the others in Almanian, none of them knowing she could understand. It somehow gave her a sense of her own power.\n\n\"Well, it shouldn't be too long until things are calmer with the local farms,\" replied Ero.\n\n\"I hope so, my lord. Our gardens are bountiful, but Cook says the soldiers need meat.\"\n\n\"That they do. As the Tirians have withdrawn, they've been paying off the farmers to keep them from selling to the keep. As if they could starve us out.\"\n\nAslin's heartbeat quickened. Withdrawn?\n\nGiro sniggered. \"If only the Tirians knew how satisfying loyalty is to the belly. We have no need of their food.\"\n\nEro just laughed mildly. \"Well, man cannot live on potatoes alone. We need good relations with the civilians here, for reasons besides their livestock.\"\n\n\"Yes, my lord,\" deferred Giro.\n\n\"And when we are gone from this place, I'm sure the locals will miss what we sell them just as dearly,\" Ero added, and she could hear his grin.\n\nAslin's hand gripped the doorframe. Were they vacating the keep?\n\n\"That they will,\" Giro laughed. \"I can't believe the people never ate eel before we came. Such a waste.\"\n\n\"The Tirians waste more than fish,\" Ero added seriously. \"They waste lives as well.\"\n\n\"You mean our guest?\" Giro queried, curious.\n\nAslin forced herself not to look over.\n\n\"It's alright,\" Ero reassured the servant. \"It's just . . . they leave their people behind as if they mean nothing.\"\n\n\"It doesn't make sense,\" Giro agreed softly. \"To have scaled the cliffside in the dead of night, to shoot down our lights from such a great distance, surely she is a valued warrior.\"\n\n\"One would think,\" Ero said, with a note of finality, and Aslin felt a strange lump of emotion in her throat.\n\nThe squadron had left, and had not tried to bargain for her. Worse, she was less surprised by this news than the surprise she felt at the idea that two Almanian men considered her a valuable warrior. If her commander discovered she was a woman, it wouldn't matter if she killed the Almanian king himself. The shame of her identity would have overruled everything else.\n\n\"Come, Aslin,\" Ero said gently in Tirian, to wake her from her musings. \"Lunch is ready.\"\n\nFeeling rattled, she sat in the chair and absently took the bowl he offered.\n\n\"Eel soup,\" he announced, and she blinked at him. His face told her he was waiting to see if she'd be repulsed, but she took a bite and nodded before lowering the bowl absentmindedly to glance again at the open window.\n\n\"Are you alright?\" he asked her, and she detected a note of concern.\n\n\"Yes, quite,\" she said, trying to infuse cheerfulness into her voice, and hearing her own failure.\n\nEro said nothing, and she felt his watchful gaze on her. They ate in uncharacteristic silence, until Aslin remembered.\n\n\"I had wanted to ask something of you,\" she began, glancing up to find him already looking at her, his expression unreadable. That look always did something strange to her stomach, like a nervous fluttering.\n\nHe poured a glass of wine and handed it to her. \"A favor?\" he guessed, his eyes mischievous.\n\n\"I suppose it is a favor, of sorts,\" she admitted, feeling sheepish now. She was a grown woman.\n\nEro waited.\n\n\"I feel I'm going mad in this room,\" she stated simply, sipping the wine. She rather enjoyed being able to speak whatever she felt, in the Almanian style.\n\nHis eyebrows rose. \"You don't look like you're going mad.\"\n\n\"I feel it,\" she shrugged. \"I'm losing my sense of time. I'm having trouble remembering how many days I've been here.\"\n\n\"Nine,\" he said, quickly.\n\n\"And how many more do you expect I will spend confined?\"\n\nHe was silent, considering her question. She felt her heartbeat speed again, losing her tentative bravery.\n\n\"What are you waiting for?\" she asked curiously.\n\nWhen she glanced up at him her eyes widened, and her grip tightened on the stem of her glass. He was looking at her not with anger, but with something else entirely. Something indecipherable and upsetting and fierce. She didn't know what she had said to make him thus incensed, but she frantically thought of how to backpedal. Seeing him this way made her flush red with discomfort, he was looking at her so keenly. Was he looking at her breasts? God help her, did she want him to? She swept away the ridiculous notion.\n\nHe stood with a clatter and she thought he meant to just leave.\n\nPanic soared through her at the idea that he would go so soon. Scarcely ten minutes he'd been there, a mere ten minutes and then who knows how many hours until he'd be back.\n\nBut he went to a different chair, at a small writing desk in one corner, and sat down there instead, his frame looking comically large for the delicate, laticed seat.\n\n\"You want to leave this room?\" he asked, his voice tight and controlled.\n\nShe swallowed, unsure if she should press now. \"I just thought . . . if I could just be in a different place, for an hour or two, I think I could settle a little. I needn't even talk to anyone. I could do dishes, or laundry. Surely there is plenty of both.\"\n\nHe laughed, running his hand through his hair, a boyish gesture that always gave her heart a twinge. \"You want to fold laundry?\"\n\n\"I want to put my hands on something different. I want to distract myself.\"\n\nHe cleared his throat and shifted in his seat, turning half away from her. \"You can't fold clothes,\" he said decisively.\n\n\"Why not?\"\n\n\"You aren't meant for that kind of work,\" he shrugged.\n\nShe laughed. \"I'm no lady, Ero. I come from a family of farmers. I grew up mucking stalls and herding sheep. Then I joined the army and wore myself to exhaustion daily. This is the first time in my life I've sat in a room being idle for nine days.\"\n\n\"Is it so bad, this room?\" he asked, looking around.\n\nOf course it didn't seem bad to him, he who went everywhere and talked to everyone, she thought sourly. She said nothing, finishing her wine and rising to stack the empty dishes.\n\n\"I'll take you somewhere,\" he said, in a voice so soft she thought she had imagined it. \"For a couple of hours, this afternoon.\"\n\nShe looked up, and he was watching her intently as she bent over, dishes in hand.\n\n\"Someplace busy, with lots to look at. And no folding.\" A small smile appeared on his face, and she realized it was a mirror to her own. \"Give me an hour or so, to finish some business.\"\n\nShe nodded, biting her lower lip with the pleasure of her success.\n\n\"Don't do that,\" he murmured, and she looked up again, unsure of his meaning.\n\nBut instead of clarifying, he stood and quickly left the room.\n\n***\n\nWhen he came back, Aslin was sketching aimlessly at the writing desk where he had sat earlier. The business that had called him away in the intervening hour had not been professional, it had been personal. He'd needed an hour away from her to simply rein himself in. He'd spoken briefly with the officer training the men in close combat, asking to delay his observation until tomorrow. Then he'd gone straight to his room, stripped, and taken a frigid bath. He had sat in the cold water, feeling all the blood retreat from his extremities, one in particular.\n\nWhat was it she had said? She wanted to put her hands on something, to know what he was waiting for?\n\nThe chaste way she had said it, with no ulterior meaning, that's what floored him. She had no idea what her words were doing to him. Or what her body was doing to him, bent over with the barest glimpse of the curve of her breast visible, her long hair shining and free. She wore her hair free every day, never bound, and was barefoot every day. She thought she was going insane, he was going insane, and he knew he wouldn't be able to last much longer around her. Which made his plan for her all the more untenable.\n\nWhen Aslin heard him enter she twisted and smiled at him, and his heart gave a great thump.\n\nNine days. Surely a man couldn't fall in love with a stranger in nine days. Surely this feeling was not love.\n\n\"Ready?\" he asked, his voice somewhat unsteady.\n\nShe nodded, standing and holding out to him a length of silk. \"It's the tie of my robe,\" she explained, and he felt his mouth go dry.\n\n\"For a blindfold,\" she added, still smiling. \"Unless you have that piece of my uniform lying around.\"\n\nHe had burned her uniform, happy to never see those cursed shreds again. He moved behind her, taking the tie and wrapping it loosely over her eyes. As he did so, she gathered her hair over one shoulder to clear it away, and the scent of jasmine wafted to him. He looked for a moment at the skin of her shoulders, at the clasps he had chosen for her that morning, and knew that his cold soak had been in vain.\n\nCatching her hand in his, he walked them to the door. She faltered, surprised, and let out a sharp little inhale. He couldn't help but wonder what kinds of noises she would make naked and wrapped around him. Pushing the very distracted thought aside, he led them out slowly, gripping her hand. It was so small, practically engulfed in his own. How had he ever, even for an instant, thought she was a man? How had any of them?\n\nThey walked at a leisurely pace, Ero warning her ahead of curves, and easing up two more flights of stairs.\n\n\"Heavens, how tall is this place?\" she murmured.\n\n\"This is the top. Six flights above ground, two below,\" he replied softly, wondering at himself for telling her.\n\nAs they neared the spot, the sound of voices and music rose, and she gave his hand a squeeze. He felt a throb of guilt for having kept her in that room for so long, but what else could he have done? Exactly when she had transformed from his prisoner to his guest, he wasn't sure.\n\nHe released her hand, slipping a finger under the silk tie at her temples and pulling it down gently.\n\nShe laughed, leaning over the balcony railing, watching the people in the large courtyard below. Seeing how bright it was, and the greenery of vines and flowers, she looked up at the open sky and laughed again.\n\n\"We call it the plaza. There are lots of plazas back home, important places for trade and community. This is our little version here.\"\n\n\"It's marvelous,\" she said, bending over again to the crowd below, where half a dozen stands were set up with vendors, and people sat at tables and stood together in small groups. But the main attraction was a gaggle of young children sitting cross-legged on the floor, supervised by a tall, lean man.\n\nHe bent beside her, pointing. \"It's a music class,\" he explained. \"Woodwind. They're not very good, but they are very loud. The other teachers protested and made them come here to practice. Some of the parents stop by to listen, and sometimes people dance if the tune is cheery and there's any semblance of rhythm.\"\n\n\"The children learn music?\" she asked wonderingly, and he frowned.\n\n\"Of course. Music, art, dance. In addition to their other studies. Don't Tirian children learn such things?\"\n\n\"Perhaps the rich ones do, the ones with private tutors. I learned only arithmetic, reading, and writing until I was 10 or so.\"\n\nHe was shocked. \"Did you fall ill?\"\n\nShe glanced at him, a laughing smile still on her face. \"No, Ero, I was from a poor family. My parents couldn't afford to have us all in school, with no one home to help. I came home so that my younger sister could go. But even my brother had left school by the time I ran off.\"\n\n\"But you know history, philosophy,\" he protested.\n\n\"Books,\" she said simply.\n\nHis eyes lingered on her as she watched the people. Noting the tea tray and chairs set up for them, he pulled a chair flush against the balcony ledge and indicated she should sit. He did the same with his own chair.\n\nFor a while they sat together, Aslin's forearms flat against the railing and her head bent over, watchful. The children began their next tune, off sync and with a few seemingly playing wrong notes on purpose, and she smiled again. Ero's stomach twisted, and had to stop himself from caressing her.\n\nThe wrath of the gods take him, he was in love with her.\n\n\"You make Almania sound like some sort of paradise,\" she said, glancing at him, her eyes serious.\n\n\"Hardly,\" he rejoined. \"We have our problems as much as other nations. We're isolated, and that has its trappings. Supply lines are difficult to maintain, and we can't rely on imports. The weather is terrible in the fall, and storms cause ongoing damage every year to both homes and crops. We're constantly rebuilding infrastructure everywhere.\"\n\nShe was quiet, considering this.\n\n\"But . . .\" he went on, looking down at the crowd to avoid her gaze. \"There is not much unrest among the people, or hunger. Thanks to the mining the royal coffers are full, and the people are provided for. Children can stay in school until they are grown,\" he added pointedly.\n\n\"I suppose women need not marry for money either,\" she replied, with a hint of scorn.\n\n\"What do you mean?\" he asked quickly.\n\n\"Nothing,\" she said, turning back to the plaza.\n\n\"Would you have needed to marry for money? Before?\" he pressed, trying to keep his voice quiet.\n\nShe didn't answer for a long moment.\n\n\"Eventually daughters become a burden.\"\n\nHe felt a flush of anger heat his face, and clenched his jaw to keep from speaking out again.\n\nShe must have sensed his discomfort, for she gave a soft, humorless laugh. \"Don't concern yourself. I'm a soldier now, remember?\"\n\n\"How could I forget?\" he replied, equally stern.\n\n\"My lord,\" a voice interrupted, and they both turned to see a uniformed officer.\n\n\"Jurillo, what is it?\" Ero asked the man in Almanian, his frustration palpable.\n\n\"It's one of the patrolmen, my lord. There seems to have been some kind of mixup. His wife is frantic, saying he was supposed to be home this morning, and half of the patrol agree, but the other half say he was on duty for another three days. He can't be accounted for, and . . . well, the wife is making a scene. With the cannon shipment expected so soon I thought you'd want to know of anything out of the ordinary.\"\n\nEro sighed, rising. \"Stay here,\" he ordered Aslin gruffly, walking away with the officer, who was debriefing him as they went.\n\n***\n\nThe news that the Almanians were receiving a shipment of cannons barely made a ripple in Aslin's troubled mind. What did she care anymore? The war had left her behind, and good riddance. She had done what she wanted, saved her brother from an early grave.\n\nShe rested her chin on the railing, feeling strangely sad. But after a few minutes alone, watching the vague grimaces of the people below as they listened to the discordant music, her good mood returned. She could smell the sweetness of some kind of fried dough being sold, and watched an older couple at another stall pick up engraved candlestick after candlestick, examining each one closely. It was exactly what she had wanted, to be reassured that outside of her four walls, the keep was alive.\n\nBelatedly, she realized she was alone, and unwatched. She knew she could make it back to the stairs, couldn't she just descend six flights and find the exit closeby? If she went swiftly, would anyone actually stop her? Once she was outside she could find cover, wait until nightfall, and if the descent to the valley below was still too heavily guarded, perhaps check for the cliffside bolts. Would they really have removed them one by one?\n\nHer breathing quickened at the possibilities flying through her mind, and she felt so distracted that she almost didn't hear the strange sound coming from another part of the balcony on the adjacent side. But she heard it again, and saw a small shape pressed against the railing bars, and stood to listen more closely. It sounded like crying.\n\nHer thoughts of escape paused, Aslin glanced around to see if there was anyone nearby, but found no one. The crying continued, and Aslin tiptoed towards it, finding to her surprise a small girl child with her head buried on her folded up knees.\n\n\"Hello?\" she asked softly in Almanian and the girl looked up, startled. \"Are you alright?\"\n\n\"I want to go home,\" the girl cried, her face crumpling, and Aslin came towards her instinctively, sitting down on the floor beside her.\n\n\"Oh, no,\" Aslin murmured, upset. \"You must miss Almania very much.\"\n\nThe girl stopped crying, wiping the back of her hand across her face messily.\n\n\"No, I mean, home to our rooms. I'm lost.\"\n\n\"Lost? Oh well, surely that can be fixed. I can help you.\"\n\nThe girl sniffled and wiped her eyes, looking at Aslin closely, her eyes growing large. \"Are you an angel?\" she whispered.\n\n\"No,\" Aslin laughed softly.\n\nThe girl looked at her with skepticism, before apparently deciding Aslin could be trusted. She stood up, brushing her hands on her wrinkled dress with purpose, and lifted her hand to be held. What could Aslin do but take the girl's hand and walk back towards the very same staircase she had just moments ago considered flying down in her escape?\n\n\"I'm Jania,\" the girl announced, waiting.\n\n\"I'm Aslin,\" she replied with a smile.\n\n\"I've only ever seen hair your color on the turnip man,\" Jania said.\n\nAslin tried not to laugh as they began to descend the stairs. \"There's a turnip man?\"\n\n\"Yes, he's Tirian.\"\n\n\"I'm Tirian too,\" she said gently. \"That's why my hair is pale.\"\n\nJania frowned. \"I thought all Tirians were bad.\"\n\nAslin hesitated. \"Is the turnip man bad?\"\n\n\"No,\" Jania admitted. \"He brought me a chocolate egg once. But my brother stole it before I finished it. I hate my brother. It's all his fault I'm lost, and mama won't punish him, she'll just punish me.\" Jania's continuous narration of her brother's ruthless chasing and later abandonment went on.\n\n\"But I know just what to say when I'm lost. Mama taught me. I say 'I live in the lower third quadrant, yellow wing, number 17.'\"\n\n\"I'm not sure where that is exactly,\" Aslin said slowly, not wanting to worry the girl by admitting she had literally no idea what that string of words meant. \"Let us go down all these stairs into the plaza and ask someone.\"",
        "So they descended, Jania jumping down the steps excitedly, telling Aslin about her day, and the drawing she had been working on of her new ceremony dress ruined by her brother's dipping her ponytail in ink. Eventually, the pair reached the ground level. Aslin could see the direction her instincts told her would lead to the entrance, but with the girl's hand in hers, she turned towards the crowd instead.\n\nJania pulled her up to a pair of middle-aged women talking and drinking from large cups, asking for directions to the yellow wing where she lived. Aslin took a deep breath and braced herself, fully expecting the women to sound an alarm somehow, and for her to be promptly seized. They would take the child from her, but it would be alright, because Jania would be taken home.\n\nThe women did look her over with sharp eyes, glancing at each other and at her fading bruises and cuts. But it was perhaps her attire that swayed them. When they saw the clasps at her shoulders, their brows cleared somewhat. A bit reluctantly, they showed the odd pair the direction they were to go.\n\nAnd with that breadcrumb Jania was off, resuming her chatter.\n\nAslin walked with her through the plaza, then down a few hallways to an open space with a massive fountain and a glass ceiling. There Jania sang her line once more, and they were given the next leg of the trip. It seemed a long walk was ahead of them, they climbed several flights of stairs and passed what looked to Aslin like a kind of greenhouse as well as a large, empty amphitheatre.\n\n\"This'll take forever!\" Jania whined. \"It's all my brother's fault. I hate him.\"\n\n\"I have a brother too,\" Aslin commiserated, happy to be able to contribute in some part to Jania's running narrative. \"Brothers can be mean. But when you grow up he'll tease you less. And if you're ever in trouble, he'll protect you.\"\n\n\"Maybe your brother, not mine,\" insisted Jania.\n\nAs they neared a massive gateway painted bright yellow, Jania jumped up. \"The yellow wing! I know where I am!\"\n\nAslin breathed a sigh of relief, thinking of how long she'd been away. Ero by now might have returned to find her gone. Again she was disappointed in her navigation skills, would she even be able to make it halfway back by memory? Perhaps she could ask people for the plaza, and they might direct her back?\n\n\"I'm so glad, Jania. Shall you go the rest of the way yourself?\"\n\n\"No!\" Jania protested loudly, grasping her hand again and pulling her forward. \"You have to come home with me and meet my mama.\"\n\n\"Oh, no. I'm sure your mama is very busy.\"\n\n\"Not too busy. Besides, you can tell her that I'm not to be scolded.\" Aslin grimaced, sensing herself trapped. When they reached number 17, Jania pulled a key from a chain around her neck like the one Ero wore and opened it swiftly, dragging Aslin inside.\n\n\"Jania Jerithra Haltib,\" came a scolding, feminine voice.\n\n\"Don't be mad mama!\" Jania shouted preemptively. \"I was lost, but an angel helped me!\"\n\nJania launched into the story, while Aslin stood in the open entryway somewhat sheepishly. Jania's mother, a lovely woman with two thick plaits like her daughter wore, emerged from the kitchen wiping her hands on a towel, but the woman's mouth fell agape at the sight of a Tirian in her home.\n\n\"My lady,\" the woman said in a puzzled voice, taking her in with a frown as she bowed.\n\n\"Oh no,\" Aslin said quickly, reaching forward to stop her. \"This dress isn't mine. I don't belong here, I'm just . . . I'm just here for a little while.\"\n\nAslin's embarrassment soothed the woman's nerves, and she smiled kindly. \"Well, I thank you nevertheless for bringing my little songbird home. Will you stay for some tea?\"\n\nAslin smiled back weakly, feeling awkward. \"It sounds lovely, but I should go.\"\n\nSuddenly an eruption of sound came from the hallway, pounding and raised voices.\n\n\"What is all this?\" Jania's mother asked, and both women turned to see a blurred figure bolting past the open door, then doubling back and collapsing against the doorframe.\n\nJania gave a dramatic shriek, and without thinking Aslin pressed them both back further into the room, coming to stand in front of them with her arms akimbo as cover. She reached behind her for her bow before remembering it was gone.\n\nBut then the intruder's form became Ero's form, Ero, who recognized her, and doubled over, panting for breath. He let out a soft, pained sound, and Aslin felt a flutter go through her. She felt the urge to go over to him at once, but clenched her hands into fists to stop herself from such insanity.\n\n\"Aslin . . .\" he managed, his hands braced atop his thighs.\n\n\"Lord Ero,\" Jania's mother said wonderingly, and Aslin moved aside to see both Jania and her mother bowing ceremoniously to him. The sight of it was so strange that Aslin felt suddenly nervous. She had known Ero must be high ranking, for everyone seemed to naturally defer to him, but she had no idea Almanian military were treated with such esteem.\n\n\"Forgive me,\" he panted, speaking in Almanian in reply to Jania's mother. \"I came in search . . . of this woman.\" His hand waved in her direction.\n\n\"You mean Aslin?\" Jania squeaked, and Ero looked up at the child.\n\n\"Aslin helped me when I was lost, she's an angel,\" Jania added, in a tone that implied Ero should be thankful for being told such a divine secret.\n\n\"Stop saying that, dear,\" Jania's mother murmured in gentle chastisement. To Ero, she clarified. \"The kind lady helped my little one find her way home just now.\"\n\n\"How?\" Ero frowned, looking at Aslin, who felt all the color draining from her face. But it was Jania who answered, breaking away from her mother's grasp.\n\n\"We asked for directions! And we talked all the way. We talked about our terrible brothers. You wouldn't know about brothers, Lord Ero, for you don't have a single one. And I brought her home, to meet mama, and show her my drawings of palm trees and kukaros, and----\"\n\n\"I'm sorry,\" Aslin broke in as she spoke in Almanian to Ero for the first time, her heart thundering. \"For wandering off.\"\n\nEro momentarily stopped breathing, his eyes widening as he straightened slowly to his full height.\n\n\"I was just coming back,\" she went on, but stopped speaking as she saw his nostrils flare.\n\nHe was livid.\n\nTrue enough, he backed out of the doorway into the hall, pointing down at the floor in front of him.\n\n\"Come,\" he commanded her sternly in Almanian, and she felt icy dread grip her stomach.\n\n\"No, Lord Ero! Don't be mad!\" Jania cried out, running past Aslin to tug on Ero's uniform shirt in supplication. \"Don't make her in trouble, please. It's all my fault,\" Jania cried, tears swiftly back upon her.\n\nAslin moved quickly, pulling the girl away from Ero and crouching down beside her, wiping her tears away. \"Sweet little Jania,\" she murmured, trying to smile. \"Don't fret. Lord Ero isn't mad. He's just surprised. See?\" Aslin pointed up at Ero, who looked like he might murder her. \"His face looks all squished and red like that when he's surprised. Doesn't he look just like a bear? No one is angry.\"\n\nTears still fell amidst tremulous breath. \"Are you in trouble for helping me?\"\n\nAslin's insides clenched. \"No, no dear. Everything is fine. I have to go just now, but I can come back again some other time. We'll have tea, and you can show me your room and your new ceremony dress and all your drawings.\"\n\n\"You promise?\" Jania asked, her eyes fearfully raised on the towering Ero.\n\nShe couldn't promise that. \"I will try my best,\" Aslin said instead, kissing Jania on the cheek and straightening, turning without meeting Ero's gaze and walking directly down the hall in the direction from whence she had come.\n\nNot a moment later she felt his hand tight around her upper arm. He walked in front of her, pulling her with him at a quicker pace.\n\nShe shouldn't have likened him to a bear, she thought with a pang. She'd earn an extra lash for that one. Panicked at the level of his fury, Aslin wondered if she should have just stayed in that blasted room.\n\nHe was silent as they strode, his grip bruisingly tight. Aslin said a quick prayer of thanks that at least he had taken her by her uninjured arm. He never turned back to her, not even on the stairs when her feet stumbled in his haste. Her anxiety soared as she wondered what awaited her next. At least they were going up, she reasoned, not back into the basement. Perhaps he would beat her, or force her to pleasure him, but she would not hang. He seemed an entirely different person from the thoughtful, curious man who had pressed her for more information about herself an hour ago. He seemed like a man out of control.\n\nShe was breathless by the time they were back at her door. He ripped the chain from around his neck, unlocking the door and pushing her inside, then threw the key across the room. It hit the wall with a sharp clang and she felt true fear.\n\nShe thought he would release her arm but he kept going, tossing her forward onto the bed where she bounced, turning over to scramble backwards.\n\n\"How do you know Almanian?\" he demanded, still speaking in Tirian to her despite his very question. She could see the flush on his face from where he stood several paces away from the bed.\n\n\"I learned it,\" she answered meekly.\n\n\"Liar,\" he threw out loudly. \"Tirian women don't just learn Almanian.\"\n\n\"Soldiers in service do,\" she reasoned.\n\n\"You've been in service three months, by your own admission,\" he snarled, holding up three fingers. \"You expect me to believe that in three months you trained as a soldier, a scout, a climber, an archer, and a linguist?\" He counted roles off on his fingers, pointing to invisible fingers after the third.\n\nShe hesitated, her chest rapidly rising as she thought of what to say.\n\n\"Tell me the truth!\" he shouted.\n\nHer own patience broke, frustration pouring out at her unbelievable circumstances and grim future.\n\n\"What will you do to me?\" she demanded. \"Will you beat me? Kill me?\"\n\n\"I'll lock you in this room for the rest of your life,\" he snarled savagely.\n\nHe turned away from her, leaning against a sofa, and minutes of tense silence passed between them.\n\nAs Aslin watched the agitation radiate off his body, she realized he was trying to gain control of his temper. Whatever ideas had flashed in his mind of what he wanted to do to her, the moment had passed. She suddenly doubted that he would strike her at all.\n\nQuietly she got off the bed and sat down in a chair by the table, the chair she always chose when they dined, when they played their games and read. She took several, deep breaths and tried to steady her nerves. At this point, what would the truth cost her? The truth was likely better than whatever deception he was imagining behind those steely eyes.\n\n\"My mother taught me Almanian as a girl,\" she said softly.\n\nHe didn't move.\n\n\"She is half Almanian herself.\"\n\nSlowly he turned, and his face was no longer contorted with anger. Now it looked mostly like disbelief. \"A half Almanian woman just raising a blonde Tirian family in the countryside? Your story is getting more far-fetched by the moment.\"\n\nShe pursed her lips. \"It's a long story.\"\n\nHe walked over to his chair, but only stood beside it. His movements were measured and controlled, and she felt the sinewy power still inside him. A warrior, she thought. Something clenched low in her abdomen, but it was not fear.\n\n\"You'll tell me now.\" It was a statement, not a request.\n\n\"I'll tell you now.\"\n\nShe paused a moment to think of where to begin, wondering as she did so why he continued to speak to her in Tirian. Perhaps he thought her understanding of Almanian was rudimentary.\n\n\"When my grandmother was a young woman, she worked as a governess.\"\n\nAbruptly he laughed, rubbing his hands over his face before raking both through his hair, making it wild. That same feeling in her abdomen swept over her again, and, with utter disbelief, she felt warmth and a pleasant, slippery sensation between her legs. What was wrong with her?\n\n\"This is a long story,\" he scoffed. \"Shall I call for dinner?\" His voice dripped with scorn.\n\nShe said nothing.\n\n\"Go on.\"\n\n\"My grandmother was charged with the care of two young boys with a mother long dead. When their father died, she was to sail with them across the sea to live with their aunt and uncle in Finull. The boat foundered, and almost everyone died. But a few came ashore on Almanian sand . . .\"\n\nAslin trailed off, skipping the part of the story that would reveal what she knew: that, despite appearances to the contrary, once arrived, outsiders were welcome to stay and live on the island.\n\n\"She married an Almanian man, my grandfather, and she bore three children, amongst them my mother. When my mother was around my age she left Almania to come to Tiria, her mother's homeland, where she met my father.\"\n\n\"Almanian people don't just leave,\" he countered immediately.\n\nAslin shrugged. \"My mother did. I don't know how.\"\n\n\"So she taught you,\" he reiterated.\n\n\"My brother and I both. My younger sister a little less. She said she wanted people to talk to in her native tongue.\"\n\n\"And when you enlisted, I garner that particular skill was in much demand.\"\n\nShe swallowed. \"Yes.\"\n\nHe sighed, raking his hand through his hair again. \"You understand what this means, Aslin. I cannot let you go back to the troops, or go home. Not now.\"\n\nShe paled.\n\n\"I'm sailing home in a few days,\" he went on, in a low voice. \"I won't have anyone else be your keeper. Enough is enough.\"\n\nAslin's heart began to throb, all the more painful for its earlier calming.\n\n\"There are peace talks happening between your Prince and my King, and I need to be there.\" Her eyes darted around the room. She had cornered herself quite literally. She had practically no defense, with the wall and hearth behind her and heavy furniture in front. She could hardly disable him, let alone kill him, with the mere two inch pin of her clasp.\n\n\"But, I suppose you knew that already, didn't you?\" he asked derisively.\n\nShe rose slowly, trying to see if she could gain some distance from him.\n\n\"Let me stay here,\" she pleaded. \"I can work hard. I could be a servant.\"\n\nHe shook his head slowly, his eyes watchful, stepping to the side to mirror her own movements, inching even closer to her.\n\n\"Please,\" she murmured, her voice shaking. \"I can be useful. Please . . . don't.\"\n\nHe took a quick step towards her and suddenly he was closer to her than he had ever been before. That strange look was back in his eyes, the one akin to fury, and his eyes glittered with it as he stood so close she had to crane hers upward to see him.\n\n\"Don't what, Aslin?\" he asked, his voice surprisingly gentle. \"Do you really not want it?\"\n\n\"My own death?\" she whispered, confused. \"Why would I want it?\"\n\nUnbelievably, her words made him smile. Not a jeer, but an actual smile, and Aslin felt more bewildered than she had ever felt in her whole life.\n\nHe reached out a hand and held it against her chin, tilting her head even further back, seeking her gaze. A shiver went through her at his nearness.\n\n\"You thought I wanted to kill you?\" he laughed softly. Never had she thought it would be possible to say such a sentence in a gruff and tender tone.\n\n\"Why do you think me so murderous?\" he asked gently, stroking the tip of her chin with his thumb.\n\nHer mind swam with swirling thoughts, but it was the truth that surfaced.\n\n\"It's what we would do, if we captured you.\"\n\n\"Well, I am not Tirian,\" he said with another, strange smile.\n\nOh, how she knew that.\n\n\"I am not leaving you behind, sweet Aslin. I'm taking you with me.\"\n\n***\n\n\"What?\" Aslin whispered the word as if she had misheard him.\n\nEro gave her a moment to let it sink in, watching the storm of emotion pass over her face.\n\nWhere had all his anger gone? For it had been anger, though not like the blind rage he felt the first time he saw one of his men slaughtered in front of him, or when he watched Tirian cannons fire on Almanian ships with innocents on board. It was anger of a different kind, something . . . terrifying. He had been frantic. That she had escaped yes, but it was more than that. He had been afraid of what would happen to her. Scenes rushed through his mind, one after the other, Aslin outside, running so fast towards the cliff that she fell over its edge, Aslin at nightfall, lost and shivering, Aslin at the tent of her commander, being lashed for treason.\n\nSuch fear . . . he marveled, all for a woman, all because a woman had left the place she had been sitting at. But after the peak of his fear had passed and Aslin was once again safe within his reach, the terrified anger had faded into an altogether more familiar feeling, that undeniable urge to touch her. He had been holding on to his self control with the barest of grips, and now he was slipping.\n\nAslin's eyes roamed over his face, gratifying his ego. Yes, he wanted her to look at him this way.\n\n\"Why?\" she asked faintly.\n\nHe had almost forgotten he'd need to explain his decision, it had been fully formed in his mind for days. Circumstances just helped him along.\n\n\"You've heard things you weren't supposed to hear, seen them as well,\" he explained, relishing the long-awaited feeling of touching her face.\n\n\"But . . .\" she drifted off, her anxious gaze breaking from his stare. \"I've heard nothing.\"\n\n\"Oh?\"\n\nShe was not pulling away from him, even as close as he was, he noted with satisfaction.\n\n\"The King would hardly pay my weight in gold to hear that the fish here is too bony, that the laundry detergent isn't as good as it used to be, that the turnip man has hair the same shade as mine.\"\n\nHe tried hard not to smile. \"Is that all? What of the cannons?\"\n\nHer eyes widened.\n\n\"I wouldn't tell anyone,\" she whispered, and he felt the moment she saw her fate.\n\n\"You would,\" he insisted soberly. \"If they threatened your family, if they held a knife to your mother's throat, you'd tell them everything you heard and invent more besides. Anyone would.\"\n\nShe shook her head almost imperceptibly, eyes downcast. \"I swear it, Ero. My lips are sealed.\"\n\nHer words drew his gaze to her luscious mouth. \"Are they, Aslin?\"\n\nHis gravelly voice drew her eyes up to his once more, and she inhaled at whatever she saw on his face. She paused in the nibbling of her lower lip, pinning it under her teeth.\n\n\"I told you not to do that,\" he murmured, bending and pressing his mouth against hers.\n\nHe felt what he knew he would feel, a soaring sense of rightness, of victory, as her soft mouth crushed gently against his own. He pulled back, already overwhelmed at the sensation, but instead of withdrawing he hovered an inch away, indecisive. Before he could move again Aslin lifted her head, closing the distance and pressing her mouth against his in that same, chaste way, as if in answer to something he had said. Lust surged through him and he took her face in his hands, slanting to deepen the kiss.\n\nAslin made a small sound, her hands coming up, but the sound only incited him and he groaned, pressing harder until she opened her mouth to permit his entry and he dipped his tongue into the heat of that beautiful mouth he had dreamt of all week, feeling his cock jump at the penetration of his tongue.\n\nEven the gods were not as sweet as she, he thought distantly, feeling his resolve to go slow receding like a wave on the sands.\n\nHe devoured her, knowing even as he did so that it was too much, but he was utterly unable to stop. His lips meshed and molded against hers, breaking away only to return, withdrawing only to pursue once more. To his disbelief she didn't pull away, but seemed frozen in place as he took more and more of her into his mouth. His hands stroked her cheek, her neck, her hair, skimming down to her arms, when one of his hands brushed against the still jagged cut on her bicep.",
        "The feeling of it, sharp against her all-consuming softness, was like a bucket of ice water on his roiling desire and he tore himself away from her, falling back a few paces in his desperation for distance as the remembrance of what she had been through, what he had done to her, ripped through him.\n\nIt would be an abuse of his power, he had told himself a thousand times. It had become his mantra.\n\nHis breath seemed to have departed his lungs for he gasped again, with nearly as much effort as the unending sprint through the keep in search of her. He glanced over to assess her state.\n\nShe stood, her hands still slightly raised. Her jaw had fallen slack, and her eyes looked dazed. He saw the hard peaks of her nipples under her gown and groaned aloud. His cock throbbed painfully. He bent over at the waist, to shield Aslin from the sight of it.\n\n\"Tell me you don't want me,\" he ground out the words.\n\n\"Quickly,\" he added as an afterthought.\n\nHer arms fell and her eyes shifted slowly over to where he bent, but she just blinked.\n\n\"Aslin, say it quickly,\" he commanded her. \"Say you don't want me, you don't want this.\"\n\n\"I . . .\" she began, but her voice trailed off.\n\n\"I need to hear you say the words,\" he enunciated, wincing at his physical discomfort. \"Say them or or I'll touch you again, and if I touch you I swear by all the gods I won't be able to stop.\"\n\nShe nodded faintly and he dropped his head, breathing deeply, waiting for the refusal that would bring him the self restraint he so desperately needed.\n\nHe waited, willing the words to come, but he heard nothing but her shaky breath.\n\nHe sensed her moving and looked up to find her hesitantly walking towards him, and he froze like a deer catching the scent of its hunter.\n\n\"Aslin . . .\" he warned, his hands clenching the fabric of his trousers.\n\nBut still she approached dreamily, pausing just before him, the floating hem of her dress trailing over his boot. Wordlessly she bent, taking one of his forearms and sliding her hands down it until they caught in his fingers. It was the first time she had ever touched him. His chest constricted, and he felt genuine pain.\n\n\"I won't be able to stop,\" he said again, his voice breaking, his hand pulling her towards him even as his words warned her back.\n\nStill her damned silence, but the feeling of her soft body colliding with his, of the warmth of her belly over the straining ache in his pants, sent his mind reeling.\n\nWas that enough? A few steps towards him, a platonic touch. Was that enough?\n\nBut the question lived and died in the span of a single heartbeat, as he had gathered her up entirely within his arms, kissing her fiercely and wrapping her arms around him. There was no turning back. His honor's qualms faded, and he let himself feel the incredible curves and planes of her body under his hands with no second thoughts.\n\n\"You taste of ambrosia,\" he whispered, kissing and licking the column of her throat. \"Sweet nectar of the gods.\"\n\nShe was breathing rapidly, her chest heaving, and had no reply.\n\nAt her clasps, he opened his mouth hot on the skin of her shoulder, stroking her with his tongue and nipping with his teeth. He felt her shudder as he reached up and undid one clasp and then the next, pulling the fabric down as he bent, scarcely giving himself a moment's pleasure to look at her breasts before taking one roughly within the cavern of his mouth. She cried out in a mix of surprise and confusion, but he could not pause. He suckled her, palming her breasts with one hand and holding her upright with the other. She leaned forward and her hair fell over him.\n\n\"So beautiful. Heila, how I've dreamt of this,\" he murmured, the mix of Tirian and Almanian words strange in his mouth.\n\nAlmost reluctantly he knelt down, tugging at a tie at her waist and pulling her dress fully off her. It pooled on the ground, leaving only a slip skirt on her lower half with nothing underneath, in Almanian fashion.\n\nHe looked up at her above him, her face flushed and eyes shining, and ran his hands gently over her stomach and abdomen, sliding around to stroke her lower back and bottom. Feeling her so utterly within his arms somehow calmed him. She was his now, he needn't rush. He knew he was going too fast, and wanted to give her a chance to catch up. He kissed and nuzzled her skin, his hands gliding to her breasts, her rear, worshipping her on his knees until he felt her tremble. His rough cheek scraped her soft skin, and he soothed the places he had nuzzled with kisses.\n\nSlowly he slipped his fingers under the waist of her slip and tugged it down, baring all of her to him. Aslin made another sound and covered her face in her hands, but still said nothing. He bent to her, inhaling deeply the fragrance of her sex, a scent he had craved deep in his bones.\n\nAslin moaned softly, overcome. A distant recess of his mind told him to make her talk to him, but here was the object of his fixation and his craving could not be denied. He kissed her hipbones, the tops of her thighs, giving her a taste of what he wanted most of all, and she lowered her hands from her face, dropping them onto his shoulders.\n\nHe paused, but she didn't push him off. Her fingers just grazed him lightly, and his chest tightened at her touch.\n\nWhen he went to kiss her sex, to prepare her, he encountered her already slick with desire. He hissed in through his teeth, feeling something savage in him start to overtake what was left of his sanity. He looked up at her lightly closed eyes, her perfect breasts.\n\n\"You are wet for me, chela,\" he groaned in disbelief, and her eyes fluttered open.\n\nStill she said nothing, lifting her hands from his shoulders to run them through his hair, her fingernails trailing on his scalp. He shuddered at the sheer wave of pleasure that wracked him.\n\nStill watching her, he took a single finger and stroked her cleft, lost in her heat.\n\nAslin gasped, her head falling back, exposing her throat. The vision of her was so erotic that his brief attempt to slow was abandoned.\n\n\"I need to be inside of you,\" he growled, rising swiftly to his feet and lifting her off the ground, striding to the bed and laying her down. He kicked off his shoes as he ripped off his shirt, seeing a button fly. He was unbuckling his belt and dragging his pants off as she faintly tried to sit up. Naked, he crawled atop her and pushed her prone, his mouth open and hungry as he gathered anything he could find of her into it.\n\nHer hands had covered her face again, her head rocking back and forth.\n\nThis would not do, he decided, taking both her hands firmly in his own and pinning them above her head, kneeing her legs open as his other hand grasped his length and positioning himself at her slick entrance. He saw nothing but his impending possession of her now; he was not even aware of his own emotions, let alone hers, as the drive to claim her was greater than any drive he had ever known.\n\nHe pushed in slightly, grunting at the heat and moisture that greeted him, but she barely granted him entry. He glanced up at her face and she was breathing hard, her eyes shut tight, but he saw no pain there. He pushed harder, and the tip of his cock slipped inside her.\n\n\"Heila, you're fucking tight,\" he swore, his teeth gritting at the pressure clamping on him.\n\n\"I'm sorry,\" she whispered in a rush, and the strangeness of the reply tugged at his focus. He looked up again, his grip on her wrists loosening.\n\nDid she regret it already?\n\n\"Why are you sorry?\" he whispered back, uncertainty nagging at him.\n\nHer eyes opened, and he thought of how utterly beautiful she was, with those bright, aquamarine eyes set like gems in the pink flush of her skin.\n\n\"I'm hurting you?\" she replied hesitantly, and again, the oddness of that answer sounded a kind of alarm in his overexcited brain.\n\n\"No, no,\" he murmured, confused. \"You feel incredible.\"\n\nHer eyes scanned his face for deception, and finding none, she took a deep breath and let her head fall back on the bed. Her soft breasts bounced a little with the motion and it caused a flare of feeling in him that was not exactly sexual. He was so happy in this moment, even while having a conversation with only an inch of his cock in a woman.\n\n\"You've done this before?\" he asked her softly.\n\nHer eyes closed lightly again and she shook her head, the blush deepening.\n\nHeila, she was a virgin. Equal parts triumph and self-reproach battled in him. He was the first to have her, the first to claim her. The first and last. The only. His heart was thundering, and he made himself release his hold on her wrists.\n\n\"Am I hurting you?\" he asked gruffly, moving to stroke her breasts again and feeling his cock twitch, still poised at her entrance.\n\nShe shook her head, a small laugh escaping. \"It's just . . . it's big.\"\n\nHe grinned despite the pain in his nether regions. \"Thank you,\" he laughed, and she let out another brief huff of laughter, smiling. The sound of it made his hips buck involuntarily and he slid a little more into her incredibly tight sheath that molded around him. Her laugh died and she arched off the bed a little. He tried to breathe, pressing his head on the mattress beside her as he willed himself not to thrust, to give her time to accommodate him.\n\nWhen she stilled, he turned his head, brushing his lips against the crook of her neck, dropping light, feathery kisses. He breathed in the fragrance of her hair. When the stubble on his cheek grazed her sensitized skin she moved, and he pursued it, kissing her neck with an open mouth, letting himself scratch her. She squirmed beneath him, her hips moving against his sex, and it was too much.\n\nHe thrust, bottoming out in her, groaning deeply at the satisfied feeling of her tight, hot passage.\n\nThen his body was moving involuntarily, withdrawing and thrusting into her steadily, the feeling so fucking good. He felt already too close to climaxing, the experience having been drawn out. But he wanted to make her come so badly, despite the increasing impossibility of holding on.\n\nHe moved more forcefully, searching for the angle that would spark her climax, but the more deeply he penetrated, the more he lost himself.\n\nDesperate, he murmured. \"Can you come for me, my ilya?\"\n\n\"Come where?\" she asked, breathless. \"What should I do?\"\n\nAgain he paused, amazed. \"Your climax,\" he said, and she blinked. He was using the right Tirian word, yes? \"That feeling of high pleasure when you touch yourself,\" he clarified, just in case.\n\nHer eyes darted over his face, unsure, and a wave of tenderness swept over him, the demands of his own release miraculously quieted. By all the gods, had she never even known the feeling of orgasm? What kinds of women did these heathens raise?\n\nHe kissed her sweetly, already missing the feeling of her mouth. She made a soft purring sound.\n\n\"This feeling,\" he whispered. \"Kissing me. It feels nice, yes?\"\n\n\"Yes,\" she said shyly.\n\n\"Imagine that multiplied by a hundred, throughout your whole body.\"\n\n\"But I already feel that,\" she replied earnestly. \"Right now.\"\n\nHe smiled at her, his eyes crinkling. \"No, chela, this is just the beginning.\"\n\nHer eyes widened, and he laughed again, feeling the rumble of it at the tip of his cock.\n\n\"You will know your climax when it comes,\" he murmured, bending his head to kiss her nipple and coax a moan from her. He was beginning to learn what she liked. He moved again inside of her, going slowly, his hand coming between them to find her little center of pleasure and brush it with his thumb. Her hips jerked upwards and her back arched off the bed again as she gasped at the sensation.\n\n\"Like the crests of a wave in a rising tide,\" he went on softly, continuing to lap at her nipple. \"It will pursue you.\" He increased the pressure of his thumb on her clitoris, circling. She cried out, her legs opening wider as her body sought contact with his.\n\n\"Higher and higher,\" he said, feeling the frenzy begin again in himself as he watched it begin in her. He picked up the pace of both his caress and his penetration, and she began crying out softly with each exhale.\n\n\"Until it claims you, my ilya, my sweet,\" he whispered in her ear, thrusting deeply, kissing behind her ear.\n\n\"Like I have claimed you, Aslin,\" he grunted, moving fully atop her and seating himself inside her.\n\nHe watched as her breath stilled and her body began to shake, her back and neck coming fully off the bed as she arched in the extremity of passion. He thrust again, and she moaned in a low, primal voice, eliciting from him an approving growl. He pummeled into her, losing all sense of himself in her sounds and the feeling of her slick skin as he pounded his cock fully against her over and over. She was either still coming or she had come again, the pleasure gripping her hard and she reached for him, clinging to his chest. Her touch broke his hold and he came inside of her, the orgasm ripped from him almost violently, the pleasure surging maddeningly throughout his body, without end.\n\nStill he thrusted, unable to quiet his body's motion, still he gripped her hips in his hands, ran them down her flush skin with its dew of perspiration. She had collapsed, breathing rapidly, but it took him longer to finally relinquish her, and at last he withdrew, groaning again, and falling onto the bed beside her.\n\nThey said nothing, their panting was the only sound in the room. The smell of sex permeated the air, and his cock already wondered when he could have her again.\n\nHe felt sleep coming for him, though he dimly remembered it was the middle of the afternoon. He was sure her door was unlocked, the key long forgotten. Oh well, he chuckled to himself, turning onto his side and reaching for Aslin, drawing her into the curve of his body. She was hot, and still breathing hard, as was he.\n\nA question nagged at him as he drifted off, his arm in the small of her waist.\n\n\"Why didn't you run?\"\n\nFor a long moment she said nothing, and he wondered if she already slept. He buried his face in her hair and took a deep, slow breath.\n\n\"She needed me,\" came her soft reply, and then, darkness.\n\n***\n\n\"What do those words mean? Ilya, chela?\" Aslin asked as Ero's hands idly stroked her stomach and the undersides of her breasts beneath the water's surface.\n\nHe laughed softly, rubbing his chin on the crown of her head. \"They are just things men say to women.\"\n\n\"They have no translation?\"\n\n\"Do you want to warrant a guess?\" he asked, and she could hear his smile from where he sat behind her in the bathtub, cradling her body in his.\n\n\"Well, ilya I think means something sweet, like honey.\"\n\n\"Close,\" he admitted. \"The ilyata is a kind of flower, with a long stem and a single, large blossom. Ilya is its nectar, much prized by hummingbirds and even collected as a kind of aphrodisiac used in a drink at weddings.\"\n\nShe considered this, to be called a sweet nectar, used to stoke passions. It was rather nice.\n\n\"And chela?\" she asked.\n\nHe hesitated, shifting in the tub. She thought perhaps he was uncomfortable and leaned forward, but his arms encircled her waist and drew her firmly back. As she slid against his chest, slipping once more into the warm, bubbly water, she could feel the distinct hardness of his manhood against her rear. It was a feeling she had come to recognize well these last few days.\n\n\"Chela is harder to translate. I suppose the closest equivalent would be 'pet.'\"\n\nShe tensed, and he felt it.\n\n\"Not like a domesticated animal,\" he added quickly. \"More like, a small thing.\"\n\nShe said nothing. She didn't like being compared to a kitten or canary.\n\n\"It sounds bad,\" he went on, a bit nervously. \"But it isn't.\"\n\n\"Other men say it?\" she asked with skepticism.\n\n\"Yes,\" Ero replied, cupping her breast in his hand and lazily caressing her nipple until she shivered, and not from the cooling water. \"But I will try not to, if you don't like it.\"\n\nHer stomach clenched at the knowledge that he would soon take her again, give her once more that dizzying sensation of flying.\n\n\"It's alright,\" she said mildly, her annoyance forgotten already.\n\nHe took her waist and lifted her higher against his chest, so that she was seated on his lap, her legs atop his. Without preamble, he slid his hand down to the apex of her thighs, stroking her sex. Her breath caught as his other hand came up to her breast, pulling her flush against him.\n\nThey had spent the last three days as lovers, and each day he had grown exponentially bolder, more demanding of her sexuality, which last week she hadn't even known existed. It was almost frightening the speed with which he could bring her to climax now, he was so attuned to her pleasures in a way that she herself did not understand. He was also insatiable, taking her time and time again, in the middle of the night, the early morning. She had already lost track, but her body and mind were on the verge of overstimulation. It was heady and exciting and overwhelming and utterly unnerving.\n\nWhen he pressed two fingers into her sheath, she hissed a little on her inhale.\n\n\"Sore?\" he asked.\n\n\"Hmm,\" she replied, half moan, half assent.\n\n\"Last time, I promise. You'll need your sleep tonight.\"\n\nHis fingers moved in and out slowly, stroking inside her as he palmed her breast. She felt his chest rising and falling against her slick back, his arousal audible in his breath. It didn't take long for her body to respond, and she began to move down onto his fingers in time with his thrusts, bracing herself against his thighs for leverage. The water sloshed around them and the sensation of it lapping around her waist was new and strange.\n\n\"Give me your mouth,\" he growled, and she craned to face him. His hand left her breast and slid upwards around her neck, pulling her roughly to him as he kissed her deeply, his hand still moving within her. He twisted his arm, pressing the bone of his palm against her sensitive spot, and her hips bucked at the wonderful pressure that spiraled within her.\n\n\"Does that feel nice on your little pearl, chela?\" he whispered against her mouth.\n\nShe gasped. His words always licked the flame of desire in her, hurling her faster to the precipice. His hand tightened impercepibtly around her throat and she shuddered, feeling herself begin to unravel.\n\n\"Coming for me already?\" he laughed, the sound strained.\n\n\"Yes,\" she breathed. \"Yes.\" His hand returned to her breast, catching a nipple between his fingers and pinching it, making her moan.\n\n\"Move against my hand, chela, and tell me the moment you surrender to it,\" he commanded, and immediately she began shifting her hips against his hand, his fingers thrusting in and out of her still, now curling inward to that massage that hidden spot inside. When he added another finger she cried out, her head falling back against his shoulder as her hips ground in desperation against his hand.\n\nShe needed it now, needed it badly. He groaned, and the idea that he might withdraw flitted through her consciousness.\n\n\"No, don't stop,\" she gasped, her hands clenching on his thighs.\n\n\"No, sweetness, never,\" he promised, kissing her ear.\n\n\"Oh, God . . .\" she managed as she was thrown into extremity, her body bowing forward as her hips jerked uncontrollably, the pleasure combing through her very nerves, robbing her of all thought. With every breath she cried out, feeling rent in half with it, utterly exposed to him.\n\n\"Yes, Aslin,\" he growled, continuing to slowly invade her with his fingers even as the waves began to ebb. As she came back to herself, panting, she moaned in protest and he withdrew gently, wrapping his arms around her in an embrace.",
        "\"No,\" she protested, feeling strangely desperate for more.\n\n\"Come inside of me . . . quickly,\" she whispered, bending forward and grasping the rim of the bathtub, pulling herself on to her knees and offering herself to him.\n\n\"Aslin,\" he swore, his hands sliding over the slick flesh of her buttocks, his thumb dipping in between her asscheeks to stroke her.\n\n\"Please,\" she said again, in a half moan, and he moved behind her, seating himself in a single thrust.\n\nHe was so big, and he had used her so much, that the feeling of his penetration was a mix of relief and pain. But Aslin savored both at once, needing both. When she pressed back against him he groaned, coming forward to grasp her waist in his hands and pull her down onto him rhythmically.\n\nWith the water moving around them and their bodies sleek and in tune, it was only a matter of minutes until he came within her with the hoarse grunt she had come to love. She did not climax again, but she hadn't needed to. What she had needed was to feel the root of him within her before she slept. Utterly spent, they spent a few minutes collapsed against the sides of the tub until the water grew cold and she shivered.\n\nEro carefully climbed out, reaching for a towel even as water sloshed all over the tile floor. He wrapped the towel around his waist and held out his hands to help her out. \"Careful,\" he warned, and when he saw her thighs trembling he scooped her up entirely, bringing her naked and wet to the bed.\n\nThey had spent one night in his rooms, but Aslin had asked to move back. His quarters were so large and imposing, full of objects that smelled of him and that represented him. It felt very foreign, very Almanian. He was already invading every recess of her being, she didn't need to be surrounded by him on the outside too. She had missed the bright yellow walls of her sanctuary, its crisp, white sheets. It felt somehow like her domain.\n\nAs he pulled the covers up around them with a happy sigh, he snuggled against her, never satisfied until multiple parts of their bodies were entwined.\n\nShe was losing track of where she ended and he began. This feeling of being close to him was addictive and frightening.\n\n\"You're so quiet tonight,\" he commented, and she detected a note of worry in his voice. \"What are you thinking about?\"\n\nEverything. You. The future. What this means. What I am to you.\n\n\"The voyage,\" she replied softly. It wasn't a lie, exactly. \"How long will it be?\"\n\n\"Four days, three if the wind is with us.\"\n\n\"I've never been on a ship before.\"\n\n\"Having scaled a cliffside, now you're worried about a little vertigo, Archer?\" She felt him smile against the skin of her back, and he planted a kiss there.\n\nAslin tried to feel nothing, squeezing her eyes tight. It was just sex, she told herself. He wants nothing more from you. It's your body he wants, that's what men are like. Don't be a fool."
    ],
    "authorname": "Surfacing1440",
    "tags": [
        "fantasy",
        "prisoner",
        "escape",
        "virgin",
        "rough",
        "bath",
        "reluctance",
        "romance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-archer-part-pt-02"
}