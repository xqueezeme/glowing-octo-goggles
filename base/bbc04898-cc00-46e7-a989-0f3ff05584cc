{
    "title": "A Friend in Need Pt. 04",
    "pages": [
        "I'm not entirely happy with how this turned out, but hopefully it's alright. Like with chapter two, the first half of this chapter is non-smut. I want to show some of their normal relationship stuff to balance out the increasingly weird and kinky sex, but you can skip to the page break if that's all you're here for.\n\nContains: a woman using magic to temporarily detach her head and hide her limbs in a pocket dimension, auto-cunnilingus, bondage, dominant/submissive, orgasm control, and some humiliation. This is not for everyone.\n\n<hr>\n\n\"I still think this is gonna be weird,\" Janet muttered, jamming her thumb into the doorbell and causing a muffled ding-dong somewhere inside the big suburban house.\n\n\"It'll be fine.\" Emma gave her girlfriend's hand a squeeze. \"They loved you before, didn't they?\"\n\n\"Yeah, but that was before I started dating their daughter.\" Janet tugged at her blouse, straightening out a crease and frowning. \"Are you sure I look okay?\"\n\n\"J, you look great. Honestly, you should dress up more often. You've got the legs for skirts, even if you insist on wearing jeans all the time.\"\n\n\"Said pot to kettle,\" Janet muttered, and Emma smiled. \"I didn't even know you owned a dress.\"\n\n\"Yeah, okay, but-\"\n\nThe door opened with a waft of warm air, revealing a version of Emma that was maybe thirty years older. She was wearing a nice green dress with her hair done up in a big bun, and she broke into a smile at the sight of the two on her doorstep.\n\n\"Oh, you're just on time! Come in, come in.\" As they stepped inside, Janet got a brief impression of wood floors and a freshly cleaned-up living room before being wrapped in a fruit- and vanilla-scented embrace. \"Janet! You look amazing, oh my goodness! How long has it been? Six years?\"\n\n\"Seven,\" Janet said indistinctly. Emma had inherited her mother's curvy figure but not her height, and the hug was gradually smothering her. \"Hey, Mrs. B.\"\n\n\"Mrs. B!\" She stepped back but kept her hands on Janet's shoulders, beaming. \"It's been so long since anyone's called me that. Not since Emma stopped bringing friends home... but please, call me Christie. We're all adults now.\"\n\n\"Alright, uh, Christie...\"\n\n\"Do I get a hug?\" Emma asked, smiling.\n\n\"Of course, sweetie!\" Christine wrapped her arms around her daughter, kissing her on the forehead. \"It's just so good to finally see Janet again. How have you two been?\"\n\n\"We've been great,\" Emma said happily. \"What's cooking? It smells good.\"\n\n\"Well, we made chicken marsala, and your father just put a peach cobbler in the oven.\" She turned to Janet. \"That used to be her absolute favorite, do you remember? She would have it for every meal if we let her. Ha, we used to say we were making peach cobbler for our peach gobbler... is something wrong?\"\n\nJanet had turned away, a hand clamped over her mouth. A sound like a choked sob slipped out as her shoulders shook. Emma was slowly turning pink.\n\n\"No, mom, it's fine. She does this sometimes. Go help dad finish up, we'll come to the table in a minute.\"\n\n\"Alright...\" Christine said hesitantly, heading towards the kitchen. Janet snorted. When her mother was out of sight, Emma slapped her girlfriend on the arm, blushing furiously.\n\n\"J!\"\n\n\"Peach gobbler!\" Janet wheezed, her laughter finally escaping. \"Peach gobbler!\"\n\n\"It's just a stupid nickname!\"\n\n\"That I'm gonna remember forever- pffft-\"\n\n\"I- I like peaches! What's wrong with that?\"\n\n\"Oh, n-nothing, nothing at all,\" Janet managed, dabbing at the tears in her eyes. \"I've got a peach for you to eat tonight, my little- peach- gobbler-\" She dissolved into helpless giggles again, clutching at her stomach.\n\n\"If you call me that one more time, I'm never going down on you again,\" Emma muttered, crossing her arms.\n\n\"Fine- fine,\" Janet gasped, struggling to breathe. After taking a few moments to calm down, she cupped her girlfriend's face and kissed her on the cheek, still grinning. \"I- I need a minute. Where's the bathroom?\"\n\n\"Upstairs, first left.\"\n\n\"Right. Thanks.\" Janet pecked her on the lips and jogged up the staircase, a stray chuckle slipping out. Emma watched her go, a smile tugging at the corners of her mouth, then headed for the kitchen.\n\n\"Hey dad.\"\n\nHe looked up from washing a dish in the sink, breaking into a smile and holding out his arms. \"Hey!\"\n\nShe accepted the hug, patting his back as he kept his wet hands away from her dress. \"How are you?\"\n\n\"Good, good,\" he said, releasing her and stepping back. \"How's my girl?\"\n\n\"Good.\" Emma broke into a grin. \"Really great, actually.\"\n\n\"She looks happier than I've seen her in years,\" Christine said, coming over to put a hand on her husband's shoulder. \"You really like her, don't you?\"\n\n\"Oh my God, mom, she's the best,\" Emma said, almost bouncing on her feet. \"We're not, like, perfect, but I can't believe it sometimes. I can't believe we were just friends for so long!\"\n\n\"How come this is the first time we're seeing her?\" Henry asked as he dried his hands. \"You've been together a few months, right?\"\n\n\"Longer than that, but she was nervous about meeting you two.\"\n\n\"Meeting us?\" Christine said. \"But-\"\n\n\"I know, I know, that's what I told her. She just thought it would be weird to come back as my girlfriend after so long.\"\n\n\"Well, we'll be sure to make her welcome.\"\n\n\"You all talking about me?\" Janet said, smiling as she came into the kitchen. \"Hi, Mr. Black.\"\n\n\"Janet!\" he said, breaking into a grin and holding out his hand. \"Call me Henry. It's great to see you again, you've really grown up.\"\n\nJanet took his firm grip, giving it a shake. Wearing a button-down shirt and slacks, he looked almost the same as the last time she'd seen him, though his black hair had retreated a few inches and gained a sprinkling of grey.\n\n\"Is everyone hungry?\" Christine asked, to a chorus of affirmatives. \"Alright, this way...\"\n\nShe led everyone to the dining room and started pulling the covers off dishes, letting the delicious smells of hot food fill the room as they took seats at the table. Emma sat next to Janet, finding her hand under the table and giving it a squeeze.\n\n\"Henry?\" Christine murmured, bowing her head and closing her eyes. Emma and Janet did the same a little awkwardly as he said grace, then food and wine was served out and they dug in. Once the first urges of hunger were sated, they slowed down, complimenting the meal and trading some polite conversation until the topic moved to their new relationship.\n\n\"So, how did you two...\" Christine trailed off, waving her fork aimlessly as she rethought her question. \"I suppose I already know how you met, but how did you end up together?\"\n\n\"Well-\" Emma and Janet said simultaneously, then looked at each other. They had anticipated this question a little too well, apparently. After a moment, Emma hesitantly continued. \"We were, um, hanging out, and we ended up talking about relationships and how we were both single and were best friends for so long. We get along so well and we both like girls, so... she asked if I wanted to go on a date, and I said yes.\"\n\nShe let out a small sigh of relief, glad she had gotten through that without - technically - lying. Omitting the fact that that conversation had taken place while she was tied up and cuddling in the afterglow of an intense orgasm didn't cause the story to be untrue.\n\n\"Well, I'm glad you figured out your feelings for each other,\" Christine said with a gleam in her eyes. \"You were always so cute together in high school, I wondered...\"\n\n\"Mom!\"\n\n\"Can I ask... when did you know Emma was bi?\" Janet asked, interrupting the motherly teasing.\n\n\"Oh, quite early I suppose... \" Christine tapped her lip, considering. \"I think it was when she first transferred schools. I asked if there were any boys that she liked, and she said no, but with that kind of hesitation. And I, well, I know how things are at that age and as a mother you have a certain intuition with your children, so I asked if there were any girls she liked, and she said yes. And... that was that. I tried to not make an issue of it, and here you are eating dinner with us, so I suppose that worked out.\"\n\n\"Yeah,\" Emma said, smiling. \"I've heard so many horror stories about coming out. I'm glad you both were cool about it.\"\n\n\"I have to admit, I didn't know for the longest time,\" Henry said with a chuckle. \"Christine told me 'Our daughter likes girls' and I said something like 'That's nice, dear.' I didn't actually understand until, oh, college, when Emma told me to my face that she was dating a girl.\"\n\n\"You were so surprised,\" Emma giggled. In a poor imitation of her father's voice, she barked, \"'Julie? What do you mean, Julie? That's a girl's name! She's a girl?!'\"\n\nHenry shook his head good-naturedly as the others laughed. \"Sometimes things just go in one ear and out the other with me.\"\n\n\"It's the only way he can put up with my chattering,\" Christine said, smiling as she touched his hand.\n\n\"Who was the girl you liked?\" Janet asked after a moment. \"I don't think you've told me about your first crush.\"\n\n\"Well, she wasn't the first, but it was Mindy,\" Emma said awkwardly.\n\n\"The goth girl?\" Janet's eyebrows raised. \"The one who smoked behind the gym?\"\n\n\"I liked her before that, but yeah. She's naturally blonde and- pretty cute, under all the makeup.\"\n\n\"Huh. I guess I never knew her before she got gloomy. Did you ever tell her...?\"\n\nEmma snorted. \"I thought you knew me.\"\n\n\"Right, right. You stared at her longingly from afar and wrote poetry in your notebooks about how pretty she was, then complained about being single.\"\n\n\"Ha, yeah,\" Emma said, but her cheeks were turning pink. That had struck a little too close to home.\n\nHenry asked about what Janet was doing for a living, and that began something of a gentle parental interrogation, ensuring that she was good enough for their little girl. Even if Janet had been jobless and broke, seeing the way Emma looked at her would have made it hard to say no. \n\nThey continued to talk even as they finished desert and polished off the bottle of wine, enjoying each other's company until they realized how late it was getting. Henry and Christine bid them a warm goodnight, hugging both and waving them off from the porch until they were driving down the street, quiet in the darkness of the car.\n\n\"Not as bad as you thought?\" Emma asked eventually, putting a hand on her girlfriend's arm, and Janet chuckled.\n\n\"I admit it, I was wrong. It was really nice. It felt like... coming home.\"\n\n<hr>\n\nPart 2.\n\nSecondary warning: read the content heads-up at the top if you haven't. These kinks aren't for everyone.\n\n<hr>\n\n\"All snug?\"\n\nEmma flailed her limbs through the empty air, wiggling slightly on the bed as the harness shifted against her bare skin. \"Yeah.\"\n\n\"Alright.\" Janet leaned over her, pressing a kiss to her forehead and staying close to her face, meeting her gaze. \"I've got a few ideas.\"\n\n\"Whatever you want to try,\" Emma murmured. She loved it when Janet took the lead instead of letting her choose her predicaments; there was always a huge thrill in not knowing what was in store for her.\n\n\"It might be a bit... much,\" Janet said, worry in her eyes. \"I think you'll like it, but all you have to say is yellow if you don't, okay?\"\n\n\"O-Okay,\" Emma whispered, her heart beginning to pound with nervous excitement. The tight metal collar pressed into her throat as she swallowed hard.\n\nJanet kissed her. Then again, and again, the sweet brushes of her lips growing hot and fierce as her tongue pushed into Emma's mouth. Warm hands slid up her chest, squeezing her heavy breasts and teasing her nipples into stiffness. Janet tweaked one, making Emma gasp and writhe against the bed as heat shot through her body. After so much practice, her girlfriend had become comfortable with getting a little rough with her, and the sharp sting of her pinches and slaps never failed to get Emma going, making her crave more even as the rational part of her tried to escape it.\n\nShe made a noise of disappointment as Janet pulled away, but the trail of nibbled kisses from her chin down to her collarbone soon made up for the loss. Her girlfriend's lips wrapped around a hard bud, lashing it with her tongue and gently biting, drawing out tiny squeaks of pained pleasure. Fingers toyed with her other nipple before Janet switched sides, giving both the attention of her mouth and hands while Emma moaned. Her girlfriend was an expert at riling her up and did so with ease, continuing to play with her sensitive breasts until Emma was wet and panting, desperate for more stimulation.\n\n\"Please, J...\" she whined. Janet leaned forward to give her a quick, messy kiss, then reached up to her collar, resting a finger against the red button.\n\n\"I'm gonna separate you, okay?\"\n\n\"Okay...\" She was ready to agree to just about anything. Janet pressed the switch before taking hold of Emma's head and carefully lifting her up, bringing their lips together again as she shifted off the bed. It was always incredibly disorienting to use the collar, but between the slow steps and the distraction of her girlfriend's kisses, Emma barely even registered the vertigo of being detached from her body until she was set gently on the dresser. The thick metal ring around her neck made a base for her to stay upright, and positioned towards the bed she could see her limbless torso and glistening lower lips. \n\n\"J?\" She could hear her girlfriend doing something next to her, but trying to turn and look made her feel like she was going to fall over.\n\n\"You're gonna stay right there,\" Janet said, coming back into her line of sight with a strap-on harnessed to her hips. \"I want you to watch me fuck you.\"\n\nEmma shivered uncontrollably, a sudden wave of arousal setting her nerves alight. She could see herself trembling, and it was a moment before she was able to whisper, \"Okay...\"\n\nJanet turned and strode towards the bed, showing off her long, perfect legs and tight butt. Emma was by far the curvier one, but Janet's slender grace made her drool, especially when she was wearing nothing but a dildo that would soon be pounding her into bliss. She watched as Janet climbed over her body and positioned the strap-on at her slick folds, running her soft hands over her chest before gently pushing forwards and making her groan. Her girlfriend gave her time to adjust, rocking back and forth to just fill her with a few inches at a time, gradually working the thick shaft deeper until they were pressed together. They lay together for a few moments, warm skin against warm skin, then Janet pulled out to the tip and plunged down again, starting a hard, deep rhythm that dragged across all her sensitive points and made her gasp. Her girlfriend gradually sped up, making each thrust faster than the last until they were both panting, the bed bouncing a little every time their hips slapped together.\n\nIt was incredibly surreal to watch herself get fucked from a third person perspective, especially when she could feel every thrust as normal. With Janet over top of her and her limbs hidden in the harness, she couldn't even recognize her own body, and the sudden twinge of jealousy she felt at that realization was as absurd as it was arousing. It was almost like Janet was making love to someone else, and she was forced to watch and experience it at the same time. She... didn't know what to think about that. Her mind was a mess of conflicting emotion and building pleasure that came out as low, choked moans as she struggled to make sense of everything. It was... wrong, but good. It made her irrationally angry, but massively turned her on. She wanted to be under Janet; she wanted to watch. She wanted... she wanted...\n\n\"Oh, fuck,\" she gasped, her toes curling and her hands clenching into fists.\n\n\"Tell me if you're gonna come,\" Janet grunted, holding tightly to her girlfriend's shoulders as she rocked her hips at the rapid pace.\n\n\"Fuck- fffuck- I'm gonna come- I- I'm-\"\n\nJanet pulled out of her, leaving her teetering on the brink. Emma let out a frustrated moan, trying to hump into the strap-on, to rub her thighs together, to do anything that would give her that last bit of stimulation and finding she was, as always, utterly under her girlfriend's control.\n\n\"P-Please, I was so close...\"\n\n\"Not yet,\" Janet said softly, rubbing her fingers over Emma's soaked, aching pussy as she inched away from orgasm. After letting her cool down for a minute, she realigned herself with her girlfriend's puffy folds. \"Tell me when you're close, okay?\"\n\n\"Okay,\" Emma whispered. She knew that it meant she would be denied again, but she wanted to submit more than she wanted to come.\n\nJanet pushed inside her again, drawing out a moan, and the wonderful sensation of being filled was nothing compared to the sudden shock of pleasure as the strap-on pressed into her swollen front wall at the perfect angle. Janet slowly rocked her hips, dragging the head against the spot that made her breath hitch and her body go tight. She wished she could grab onto something, anything, her arms and legs searching aimlessly in the empty space of the harness as that hot, tense pressure built in her belly once more. It was going to be a massive orgasm, she already knew. If Janet kept rubbing her g-spot like that, she was going to squirt, too, but the embarrassment of that almost didn't matter. All she wanted was that explosion of pleasure, and it was right there, right there...\n\n\"Close,\" Emma moaned, squeezing her eyes shut. Janet stopped, buried to the hilt inside her. Her body clutched at the strap-on, trying to find some kind of stimulation to send her over the edge as the promise of her climax faded away. It felt like one good stroke on her clit would send her rocketing into bliss.\n\n\"You're so good,\" Janet murmured, rubbing her sides. \"Keep being good for me, Em.\"\n\n\"I will,\" she breathed, trembling with submissive excitement. \"I'll be good for you. I'll be- good-\" Her body went tight as Janet began to rock her hips again, planting tingly kisses along the curve of her neck. She tried to hold back, to at least enjoy the sensation for longer before she was denied, taking ragged gulps of air as she was forced back towards her peak. All she could focus on was Janet's warmth, her lips, the way the strap-on rubbed inside her and stretched her open, the way every ounce of tension in her body was coiled into a tight little ball in her stomach and how just- one- more- touch-\n\n\"Close,\" Emma sobbed, and her inner walls fought to keep the shaft inside her as Janet slowly pulled out. She dragged in a shaky breath, trying not to cry with need as her clit throbbed untouched. Warm hands suddenly cupped her cheeks and her eyes shot open to find Janet in front of her, leaning in for a kiss. For a moment, the sweet, wonderful pressure of her lips was enough to distract her from her desperation and the dizzying feeling of being picked up. Janet brought her head back to the bed and cuddled it into her chest, pressing kisses into her hair.\n\n\"So good,\" Janet whispered. She shifted Emma's head to be held in one arm and held her in front of her own dripping heat, her voice soft as she ordered, \"Make yourself come.\" \n\nShe stuck her tongue out without thinking, straining toward her body, and Janet brought her closer so she could frantically lap at her clit. At the same time, her girlfriend slipped two fingers inside her, finding that point along her swollen front wall and stroking it until Emma went rigid, letting out a low, muffled moan as the pressure in her abdomen reached the breaking point.\n\nShe suddenly realized what her girlfriend was doing, why she had been so unsure at the beginning. Janet was going to make her squirt. She was going to come harder than she ever had before and squirt all over her face. But all it would take to stop it was a word. Janet would still let her come. She didn't have to do this dirty, humiliating thing...",
        "One more lick over her clit sent her over. Her back arched off the bed as her mind went white. A spurt of her hot juices covered her face and filled her mouth, but she was flying, far beyond the range of anything except ecstasy. She shuddered and screamed and kicked at the empty air as her legs cramped and she still kept fucking going, overwhelmed with pleasure. In a brief moment of clarity, she realized Janet was rubbing her clit and continuing to curl her fingers; then she was riding another wave of bliss that was almost painful in its intensity, her helpless body rocked with sensation.\n\nEventually, she came to, dazed and fighting to breathe. Janet was holding her, their foreheads pressed together. The taste of her juices was still heavy in her mouth, and it took her a moment to understand her head was reunited with her torso. It took longer for her vision to focus on her girlfriend's gentle brown eyes.\n\n\"Hey,\" Janet murmured. \"You okay?\"\n\n\"Yes...\" Emma whispered. \"I... Oh my God... I came... so fucking hard...\"\n\n\"You scared me a little,\" Janet admitted. \"I was worried I pushed you too much.\"\n\n\"No, J...\" She struggled to find reassuring words and came up with, \"So good... Fuck, so good...\"\n\nA smile grew on her girlfriend's lips. \"I'm glad.\"\n\n\"I think I have a new fetish...\" Emma mumbled, her eyelids drooping. \"Um... want me to... do you...?\"\n\nJanet made a soft snort of amusement. \"It's okay.\"\n\n\"But...\" It felt incredibly selfish to not return the favor after all that. \"I want to...\"\n\n\"You look like you're gonna pass out.\" Janet kissed her, brushing a strand of hair out of her face. \"Seriously, it's fine. Just cuddle with me.\"\n\nShe couldn't find the strength to object as she was pulled against Janet's chest, cuddled into her girlfriend's naked warmth. Gratefully closing her eyes, she let the exhaustion of her orgasms crash over her, dragging towards blissful oblivion. Just before she dropped into sleep, she felt lips on her forehead and a quiet murmur against her skin.\n\n\"I love you, Em.\""
    ],
    "authorname": "macktosh",
    "tags": [
        "autocunnilingus",
        "headless",
        "lesbian",
        "lesbian d/s",
        "lesbian romance",
        "limbless",
        "magic",
        "nbm",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-friend-in-need-pt-04"
}