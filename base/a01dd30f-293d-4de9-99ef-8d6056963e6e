{
    "title": "The Swim Team Ch. 09",
    "pages": [
        "Disclaimer\n\nThis is a work of fiction. Any resemblance to any person living or dead is purely coincidental.\n\nYou need to read chapters 1-8 to get background on the characters and story.\n\nAll fictional characters participating in any fictional sexual activity are 18 years of age or older.\n\nOrgy, Voyeur, mf, ff, mff, mmf, masturbation, exhibitionism\n\n\"You must be Austin,\" Kelly said as she sat on the bed and slid toward the headboard. \"I've heard about you. You're the cam-slut, right?\"\n\n\"Yes, mistress,\" Austin said blushing.\n\n\"Ma'am.\"\n\n\"Excuse me?\"\n\n\"Don't call me mistress. You can call Diane that, but you call me Ma'am. Got it?\" I found myself staring at this woman, whom I've known for twenty years, and wondering who the hell she was. This was not the same Kelly that hung out with me and Carrie all those years. Not the same Kelly that threw Linda and Brenda the Star Wars themed party for their fifth birthday. This Kelly was a boss, and a scary one at that. She should have been the one wearing leather, not Diane.\n\n\"Yes, mi...I mean Ma'am.\"\n\n\"Such an obedient little thing, isn't she?\" Kelly smiled at me. \"She is quite pretty. And just look at that ass.\" She turned back to Austin. \"Turn around. Let me see it better.\" Austin spun slowly on her toes, flexing her thighs, and arching her back to highlight the angle of her cheeks. \"Damn, I wish mine looked like that.\"\n\n\"You have a fantastic ass, Kelly,\" I said.\n\n\"But it's not tight like this one. Come here you pretty little thing.\"\n\n\"Mistress calls me Pretty.\" Austin said with her head bowed. She was clearly submissive, but the smile on her face and the points poking through her top told me she was enjoying herself.\n\n\"Well, it fits. Now let me see that ass.\" Austin climbed up on the bed and presented her cheeks to Kelly while still wearing the boy shorts, though now the crotch of the shorts was much darker than the rest. Kelly ran her hand over Austin's panties, pressing the gusset into the molten core. \"Damn, you are primed, aren't you?\"\n\n\"Yes, Ma'am,\" Austin said between deep breaths. \"I get very wet.\"\n\n\"She can squirt if she's stimulated the right way,\" I offered, remembering the last time I was with her.\n\n\"Oooo,\" Kelly said like a child being offered candy. \"I'd like to see that. Barry, why are you still wearing pants? Get naked and bring that cock over here.\"\n\nI was naked and in Kelly's mouth in seconds while she stroked Austin's ass, dipping her fingers under the seam of her panties. Kelly gave me a few seconds of nice suction, followed by some loving licks before turning her full attention to the girl kneeling beside her. She slid her hands over Austin's cheeks meeting at the small of her back, then back down, hooking her fingers into the waistband of the panties and dragging them down. Austin's pussy was already peeking open, her lips and clitoral hood protruding from her peach.\n\n\"Nice,\" Kelly whispered. \"It's been so long since I've done this.\" With that, she buried her face in the wet cleft before her like a starving woman. Austin gasped at the sudden assault on her vulva.\n\nAustin keened as she enjoyed Kelly's ministrations. \"Please,\" she gasped at me with a plea in her eyes, \"please kiss me again.\"\n\nI was only happy to oblige her, and stretched out next to her, running my fingers through her hair. Her eyes held mine as my fingers traced her jawline until I lifted her chin, bringing her lips to mine. Her kiss was warm pudding, and I couldn't get enough of the taste of her lips, nor she mine. She whimpered into my mouth when my fingers freed her breasts from her top. We kissed for an eternity, losing ourselves to the taste and the touch, each breathing in the essence of the other. Every few moments, Austin would gasp or shudder when Kelly hit a particularly excitable spot. I wanted to watch her, to see how she was reacting to the pleasure, but I allowed the sensations to carry me away with closed eyes. I rode waves of pleasure, all emanating from a kiss from a beautiful girl. After a few more moments, a low groan rumbled from deep inside her, building in intensity and frequency until she pulled back from me, arched her back and cried out before collapsing her torso on the bed.\n\n\"God! That was intense,\" Austin said between breaths.\n\nKelly rocked back; her self-satisfied smile shiny from Austin's release. \"You taste wonderful, young lady. I definitely want to do that again.\"\n\nAustin looked at me through heavy-lidded eyes. \"Would you please fuck me, now? I've been wanting you since you left Saturday.\"\n\nI smiled as I rose to my knees. \"As you wish,\" I said as I moved to kneel behind her. The height of the bed and the length of her thighs placed her pussy at the perfect position to line up with my cock. An artist couldn't have molded a more perfect form of art than the line of her back sweeping in the swell of her hips and dipping into two perfect mounds surrounding a bright pink paradise. It took Herculean effort to draw a breath after seeing such a beautiful sight. \"Hold yourself open for me.\"\n\nShe reached between her thighs and split her lips with her fingers, revealing her gaping hole bright red, shiny-slick, and primed for my cock. I leaned in, rubbing my spongy head against her vulva, catching the dripping fluid, and mixing it with my own precum. After several passes from her anus to her clit, I pressed forward to spear her lips and slide further in. Then I stopped. \"You know, on second thought, I'm not sure you've earned this yet. What do you think, Kelly? Has she earned a good fuck?\"\n\nAustin whined and pushed her hips back against me, forcing another inch of my shaft inside her. I grabbed her hips to hold her off. \"Hey, hey, hey, now. No one said you could do that.\"\n\nKelly appeared over my shoulder. \"I think she needs to be punished for that, Barry. I think she needs a spanking.\"\n\nAustin's eyes flew open wide, but her face flushed at the same time. There was no fear in her eyes, but rather unbridled passion. I slid my hand over the smooth globe of her ass. \"You mean I should spank this ass?\" I patted her cheek. \"This ass right here?\"\n\n\"Or maybe this cheek instead,\" Kelly patted Austin's other cheek making the younger girl whimper again.\n\n\"Please....\" Austin breathed the word.\n\nI drew back and brought my open palm down on Austin's right cheek with a pop. Her flesh rippled under the blow, and I felt her cunt clench my shaft as I repeated the process. With each spank, Austin groaned louder, and her ass glowed a brighter red. Kelly moved around to my other side.\n\n\"Let me,\" she said with a plea in her eye. \"Just one.\"\n\nI cocked my head and moved my hand away. Kelly brought her hand down on Austin's other cheek, a little harder than I had, and Austin cried out but thrust her ass up again, as if asking for another.\n\n\"She liked that, didn't she?\" Kelly said as she reared back again. \"Another?\"\n\n\"Please,\" Austin said as she exhaled.\n\nKelly reared back further and dropped a loud slap that reverberated in the room and made Austin cry out and drop her hips, pulling my cock out of her pussy. A white handprint whelped across Austin's red ass cheek. \"OW!\" Austin exclaimed. \"Banana! Shit! That hurt.\"\n\n\"Banana?\" Kelly rubbed her hand.\n\n\"It's my safe word,\" Austin said with tears in her eyes. \"When play gets too rough, a safe word stops everything. Damn, my ass hasn't hurt like this since I was a little kid and my daddy spanked me for punishment. There's a limit to how much feels good and how much is too much, you know.\"\n\n\"I'm sorry,\" Kelly's face was a mask of concern. While she held a barely contained passion, she hadn't had recreational sex in several years, and I doubt she had any more experience with dom/sub type things than I did, and nowhere near as much experience as Austin or Diane. \"Are you going to be okay?\"\n\n\"Yeah,\" Austin said still rubbing her ass. \"Just give me a sec. It kinda killed the mood.\"\n\n\"I'm so sorry,\" Kelly said as she moved up beside Austin on the bed. \"I've never spanked anyone for pleasure before.\"\n\n\"The first one was nice, but that last one. Wow. I'd hate to be your kid in trouble.\" Austin offered a weak smile.\n\n\"Let me get you some ice or something,\" I said backing toward the door. Kelly and Austin stayed on the bed, Austin on her tummy, her ass still bearing the handprint in sharp relief on her otherwise flawless skin.\n\nAs I grasped the doorknob, I heard a loud groan from down the hall. It sounded like Dennis was giving Diane a good fucking from the sounds she was making. But then, I heard a different moan. Female, but different. In fact, it sounded like several different voices. I pulled the door open and took the ten steps past Brenda's door until I could see the couch in the living room. Nothing could have prepared me for what awaited me.\n\n#\n\nDennis was fucking alright. It just wasn't Diane, who was busy eating another pussy. I blinked as I took in the surprising orgy happening under my own roof. A very naked Karen was in a sixty-nine with Diane, her meaty pussy stretched as far as it could go between Diane's teeth, and her tongue evidently deep inside the former coach. Dennis was drilling into Bethany while he sucked on Tina's tiny breasts and Tina rode Bethany's face. Tommy was naked and fucking another girl, whose face I recognized, but whose name I didn't know. There were two other swim team members engaged in the free for all as well. Naked or near naked bodies were sprawled out all over my living room. I was speechless, and just stood frozen in place as I watched. What were they all doing here?\n\nAfter the morning I had with Kelly and Dennis, then with Diane and Austin, then with Kelly and Austin, my cock refused to go limp, and stood firm, despite my brain being shut down in shock. I was transfixed, watching as Tina noticed me standing there naked, with my cock jutting out before me like a divining rod. A smile spread across her face, and she rose from Bethany's slimy lips and came to me like she was floating on air. She was even shorter than Linda and standing flatfooted could probably give me a blow job.\n\nWithout one word, she dropped to her knees and inhaled my cock as if it was the most normal thing in the world to do. After Diane, Austin, and Kelly, I doubt anyone could impress me with a blow job. While she gave enthusiastic head, and many of my friends say there is no such thing as a bad blow job, hers lacked the skill of the other women. She bobbed back and forth over the head and about another inch or so, but no more. Her mouth was too small, and her teeth occasionally grazed the ridge. She'd never get me off like that, but a younger man would have loved it.\n\nBefore I knew what was happening, she had somehow climbed up my standing body and was lowering her pussy onto my erection as I cupped her tight ass while her legs were wrapped around my hips. I bottomed out inside her with several inches of my dick still exposed to the air. She was tiny inside and out.\n\n\"I always knew you had a nice dick, Mr. B,\" she said as she began sliding herself up and down. \"We all tried to get a feel of it the other week in your pool.\" She tightened her grip on my shoulders and buried her face in my neck as she rode me. \"You were so powerful throwing us around. I almost came when you picked me up and tossed me.\"\n\nMy hands moved of their own accord, lifting her, and lowering her on my erection. She clenched her pussy on the out stroke, as if reminding me to dive back in. My mind was lost in the moment. No rational thoughts tumbled through the fog of sensations I was experiencing, although I was aware that I should be thinking about something. There was something I was not considering as Tina fucked me. What was it? That thought was dispelled as I felt a tongue lapping at my balls. I tried to look around Tina to see who was kneeling before me, but all I could see was a set of female hips. Whomever it was bathed my ball sack in her warm saliva, and I could feel her wet tongue tickle the base of my cock as Tina lifted on the upstroke.\n\n\"Oh, my God!\" Tina gasped and shuddered in my hands as her pussy clamped down on my cock, threatening to squeeze it out of her. She clenched me tighter as the waves of her orgasm washed over her and her pussy pulsed on my shaft. \"Fuck!\"\n\nI lifted her near limp figure off my erection to put her down when my cock was completely enveloped in moist warmth, and I heard a satisfied \"mmmmmmm\" as a ring of pressure traveled down my shaft.\n\nI looked down as my cock emerged from Karen's mouth, her blue irises searching my face. \"Hi, Mr. B,\" she said after releasing the head of my dick with a pop and sliding her hand up and down my glistening rod. \"Tina tastes really good on you.\"\n\nAs I put Tina down, Karen slid her hands up my abdomen while she sucked me back into her mouth. I wasn't close to cumming, but after fucking Tina standing up, my legs were tired, so I lay on the carpet. Karen never lost suction on me as she adjusted to the new position. I was content to watch her sandy brown hair fall around her face as she made love to me with her mouth. Her breasts barely jiggled as she worked my cock. While bigger than Tina's, her bust was nowhere as large as Bethany's, or Brenda's for that matter, but they hung perfectly positioned on her athletic frame.\n\n\"I haven't done this in a long time,\" she said. She could have fooled me. Her technique was better than Tina's, but I still was not feeling that stirring that signals a build up toward orgasm. She didn't seem to mind, however, as she rose up, swung her leg over my hips and began dragging her pussy and grinding her clit along the length of my cock. I couldn't take my eyes off the full lips that enveloped me and coated me with her passion. As she slid down the length, her lips flared out on either side like a butterfly about to take flight. The fold of flesh covering her clit rolled back when she'd slide forward, revealing what looked like a small penis head, angry red and shiny as it lay atop my larger one. I had never seen such a large clit in my life.\n\nKaren dry-humped me, if it can be called that, sliding herself back and forth along my length coating me in her juices, her hands grasping at my chest as her hips rocked. Her hair flicked back and forth over my face, so I brushed it back so I could watch her blue eyes as she worked herself toward an orgasm. I let my fingertips trace a line down from her face along her neck and shoulder, dipping lower to the swell of her breast as they moved in rhythm to her hips. Nestled between her breasts, she wore a red bejeweled heart on a simple gold chain, like the heart on the choker that Austin wore, and matching the necklaces in the suitcase I found. Karen's nipples rose to meet my palms as I teased them by only brushing them with the lightest of touches.\n\nShe sat back and grabbed my hands in hers, mashing them into her chest. \"Pinch them,\" she said with a gasp. \"Pinch them hard.\"\n\nI followed her directions and grasped her nipples with both hands. Her quarter-sized areola stretched into cones as she leaned back, her nipples trapped between my fingers. I gave each nipple a twist for good measure, making Karen gasp and whimper.\n\n\"Yes!\" She closed her eyes. \"Harder!\" The rocking of her hips sped up dramatically and her motion became more frenetic. \"Uhnnn,\" she moaned when the head of my cock slipped into her molten canal on one of her down-strokes, her motion forcing the full length into her. Her eyes flew open as though it was the last thing she planned on happening. She stiffened up and remained motionless, not pulling off of me, nor fucking me. \"Shit! Oh, my God!\"\n\nA shadow fell over us and I looked up to see the unmistakable bust of Bethany looming over me. Her auburn hair was pulled back in a ponytail and her green eyes burned with a fire as she watched one of her lovers sit astride me. \"Kiki? Are you okay?\"\n\n\"He's inside me,\" she whispered. \"I didn't...it wasn't...\"\n\nBethany's eyes showed concern, but her mouth curled at the corners. \"How does it feel?\"\n\nKaren searched Bethany's eyes for something I couldn't fathom. It was like there was some unspoken communication going on between them. After a heartbeat, she relaxed. \"It feels...nice.\"\n\n\"Then have fun with him,\" Bethany purred. \"Tina sure did.\"\n\nApparently having secured Bethany's permission, Karen began fucking me in earnest, rocking back and forth on my hard-on with gusto. With that, Bethany leaned down until she was inches from my face. Something hit my shoulder and I glanced down to see she also wore the red heart on a chain. I had never been this close to her before, and her eyes grabbed me. They were hazel, with gold flecks in the irises and they held a warmth and coldness in equal measure. \"Karen hasn't had a cock inside her since her first time. She didn't enjoy it, so she has avoided it. Until now, that is.\" She kissed me, sucking my lower lip into her mouth. \"Your dick must be something special. I can't wait until it's my turn. You can warm me up, though.\" With that, she knelt across my face and presented me her pussy. \"Eat me.\"\n\nBethany's pussy was pretty. Not meaty like Karen's, not thin like Tina's, more average. Small flanges of flesh lined either side of a small clit with a thin hood. Her juices were not copious, like Austin's, and not fruity like Diane's, but not unpleasant, either. And Karen's pussy was tight, not as tight as Tina's, and very warm, but not as hot as Diane's. Or Kelly's.\n\nThen it occurred to me. I had seen so many pussies in the past week that I was comparing them. There had to be something wrong with that. There were almost a dozen naked young women in my home all engaged in sex. Most of them were still in high school, even if they were all over eighteen.\n\nEighteen.\n\nBrenda was eighteen.\n\nBrenda. Where was Brenda? This was her group. Was she here somewhere? Having sex? In my house? Suddenly any thought of cumming was driven from my consciousness. What was I doing?\n\nI grabbed Bethany by her ass and lifted her from my face, then as I was about to move Karen, she came on my cock, her pussy clutching me and pulsing as she gasped and cried out.\n\n\"Wow,\" she breathed as she came down from her release. \"I never knew it could feel like that. I've been missing out.\"\n\nOrdinarily, I would revel in such praise, but all my mind could think about was Brenda. Where was she? Was she here? I rolled Karen off me and dislodged myself from her arms and legs, which seemed to want to remain wrapped around me.\n\n\"Aww. Don't go,\" Karen whined as she tried to grab my arms. \"I want to go again. Make me cum like that again.\"\n\nI looked at her, seeing the passion in her eyes, while at the same time seeing her youth and inexperience. At least, her inexperience where it mattered. \"Maybe another time. I have to...I need to...find someone.\"\n\nI stood up and looked around. Several people were still fucking and sucking, but some were lounging and caressing each other. I didn't see Brenda anywhere. I felt relieved that she wasn't participating in the orgy, at least. I walked into the kitchen to find it empty, and the relief increased. Maybe she wasn't here. Maybe she and Linda had no idea this was going on, and were at school, like these students should have been.\n\nI passed the fridge and remembered I was supposed to be getting ice for Austin, so I grabbed a cold pack and a towel to take back to my room. When I passed Brenda's door, I heard a loud moan that stopped my heart. Her door was ajar, as though someone had shoved it closed on the way in, but not hard enough to catch the latch. I looked into my room and Austin and Kelly were laying there caressing each other and exchanging soft kisses, so I looked back at my daughter's door. Inside the room, I could hear slapping sounds punctuated with gasps and groans, both male and female.",
        "I stepped up to the door and eased it open. This was the room to which I brought Brenda home from the hospital when she was a newborn. Even though we kept her bassinet in our room for the first couple of months, we changed her in here, dressed her in here, and watched her play in here.\n\nNow, as I peered into the room, I saw my little girl playing an entirely different game.\n\nBrenda was on her knees on her bed. My stomach sank as I took in her naked form, her beautiful full breasts swaying below her, the curve of her back into her strong buttocks, her firm muscular thighs supporting her body as her face, that face I've kissed so many times, the face I've dry tears, bandaged cuts, and even washed clean, the face that has smiled at me in wonder, gawked at me in pride, and scowled at me in anger, that face was buried in the pubes of Ivory Johnson and she was busy feasting for all she was worth. Ivory's juices made Brenda's cheeks shine as she drank from Ivory's honey pot.\n\nBrenda's ass rippled under the impacts of some guy's hips as he was driving his cock into my little girl over and over. He held her waist for leverage as he fucked my daughter. Her breasts swung in time with his thrusts. He reached forward and grabbed her by the hair and pulled her face from Ivory, her mouth and chin dripping with juice, and she gasped in pleasure as she rose and turned her face to kiss him. Between her breasts, a red heart dangled on a chain.\n\nA flash of light caught my eye and drew my gaze to her broad, brown nipples. My eyes bulged as I took in her areola, each of which had to be almost three inches across capped with a prominent nipple pierced with a silver barbell. I couldn't pull my eyes away from her tits as he mauled them all the while never missing a stroke.\n\nBrenda keened as her chest flushed. Her nipples enlarged and the wet smacking sounds of their coupling amplified. \"God! Yes! Right there. Harder!\" She opened her eyes and fixed on Ivory, still splayed out in front of her. There was a hunger in her eye that I hadn't seen in six years. A hunger that can only be sated by raw passion, and it didn't matter from whom that passion flowed. Carrie had given me that look enough times, and I swear I could see my wife in Brenda's face as she licked her lips and trembled. My little girl was cumming. \"Fuck!\"\n\nAnd, God help me, my cock lurched.\n\nIvory had replaced Brenda's tongue with three of her own fingers from each hand and was busy trying to stuff as many of them into her pussy as she could, determined to cum again at the same time as Brenda.\n\nThe guy grunted and slowed his stroke, reaching down to grab his cock before pulling back. Brenda spun around and knelt before him to jack his dick and drink his cum, her ass high in the air atop her reddened thighs, and I caught sight of the purple jeweled butt plug nestled between her ass cheeks. Her pussy was engorged, shiny, and gaping open revealing the bright red flesh within. Her still throbbing clit bore a small silver hoop through its hood.\n\nShe drank his cum like a woman possessed, as though it were the sweetest nectar, the most potent drug, or the last drop of water in the desert.\n\n\"Damn, girl,\" the guy said. He was young, probably not much older than she was, and probably on the swim team, too. \"You sure know how to make a guy feel good.\"\n\n\"Not just guys,\" Ivory said grinning while she casually stroked the landing strip of hair on her pussy. \"So, Brenda, not that I'm complaining or anything. But why have you never hosted a party here before?\"\n\n\"Hey,\" Brenda said, \"It's my birthday. I'm finally eighteen. I get to do what I want,\" she said with a satisfied smile on her face. \"At least until my dad gets home.\" She slid to the edge of the bed and turned toward the door, where I stood. Her eyes widened when she saw me, and the color drained from her face.\n\n\"D-Daddy? What are you doing here?\"\n\nMy brain couldn't formulate words. I was still trying and failing to process what I had just seen. It didn't help that she was standing naked before me, a smear of cum still clinging to her lip, while I stood naked before her, my dick still at half-mast and covered with the cum of her teammates. The only thing I could say was what I always said to that question. \"I live here.\"\n\n#\n\nCarrie's funeral almost killed me. A cool breeze brought a shiver on that late summer day, even though the sun shone high in the sky, the wind blew in gentle wafts that rustled the leaves on the trees, and flowers were still in bloom. All that didn't matter. My heart was a cold, wet, miserable place. I wouldn't have known the difference if the weather had mirrored my mood.\n\nWe stood on a hill under a maple tree. This was her parent's family plot. We each had purchased plots side-by-side, thinking we would spend eternity together like we had spent our lives together. Now, she was the first one in the ground. Her parents were standing next to me dabbing their eyes. Their plots were one row up, the ground still undisturbed.\n\nBrenda stood in front of me, my hands on her shoulders. At twelve, she had not yet had her final growth spurt, nor developed her womanly attributes, and was still my little girl dressed in a simple black dress. The Mitchell's stood on my other side. No one said a word as the Minister recited his message and committed her to the ground. I wasn't listening. I had a void in my soul that nothing could fill. I was certain that the rest of my life was going to be a meaningless string of joyless days. It took every fiber of my being not to turn into a blubbering idiot. But I couldn't let myself do that. Brenda needed me. I would be there for her.\n\nAs people filed out of the cemetery, I knelt before Brenda and hugged her. Tears pooled in her eyes, but she kept her lips stiff and refused to sob. \"Brenda, honey, it's okay to be sad.\" She just flicked her eyes up at mine, then back to the ground into which her mother's casket had just been lowered. \"Sweetie, did you hear me?\"\n\nShe nodded.\n\n\"You know I'll always be here for you, right?\"\n\n\"Mom said that, too.\" She didn't say it with any sarcasm nor malice. She just stated a fact, punctuated with a sniffle. One simple fact that underscored the powerlessness I felt in a large wide sharpie stroke.\n\nAfter the funeral, I went back to work. Brenda went back to school in the fall. She spent a lot of time at the Mitchell's while I worked until school started. I had to go through the records for the insurance, and the bank accounts, and the court filings. The death certificate had to go to too many places, the insurance needed too many repetitive forms, and I received too many phone calls from people wanting money. I was barely holding it together. I would see her picture and a rage would engulf me. I would see her makeup in the bathroom and desolation would swallow me. I enter the closet to get dressed and see her clothes hanging there as they always had, and despair would consume me.\n\nIt took every ounce of strength to make myself get out of bed and function, and it exhausted me. After I woke up with a throbbing head and clutching an empty bottle I knew something had to give. I gathered all the records, papers, documents, and such and put it in boxes. I didn't even look at them before stuffing them in the boxes and shoving the boxes into the spare room. I couldn't bear to look at them.\n\nI followed that with Carrie's clothes. Then her knickknacks. Then most of the pictures. Anything that reminded me of her. I simply stuffed them into that room. The room that was supposed to be our second child's bedroom. The child that now would never be born.\n\nKelly and Dennis came over a lot, and I was not hospitable, despite their repeated attempts. I rejected their offers of help. I turned down invitations to go out. I refused offers of vacations. I was an ass. Being around them reminded me of all the times with Carrie.\n\nI did a good job of walling myself off from the world. I never opened the spare room door again.\n\n#\n\n\"Get dressed and get them out of here, please.\" I didn't wait for Brenda to respond. I turned and walked into my room where Kelly and Austin were still on the bed. They noticed my mood and separated.\n\n\"Barry,\" Kelly said, \"What's wrong?\"\n\nI tossed the ice pack and towel on the bed. \"This is for your butt,\" I said to Austin, but I didn't look at her. \"But I think I'd like everyone to leave now.\"\n\n\"What happened?\"\n\nI grabbed my shorts and a muscle shirt and dressed quickly, not bothering with underwear. \"Just go, please.\"\n\nKelly was not satisfied. \"Barry? What happened...\" she stopped talking when the sound of people from the living room grew loud. \"What's all that?\"\n\nA fire flared behind my eyes, and a snarl curled my lips. I turned and strode down the hall prepared to grab people by the short hairs and toss them into the yard, dressed or not. I couldn't articulate the source of my anger, but it surged. Kelly followed behind me while Austin wriggled into her boy shorts.\n\nSeveral people were already on their way out the open front door. Brenda stood there in a swimsuit cover up, her face full of apology as her teammates filed past her in various stages of dress. Several muttered \"Happy Birthday\" on their way out.\n\nI looked into the living room and Diane was fastening her skirt. Dennis sat on the couch in his pants and unbuttoned shirt running his hands through his hair. He seemed to go out of his way to avoid looking at Brenda in her cover up, especially since, with the door open and the light shining through, her full figure was on display through the sheer fabric. Austin stood in the entry to the hall trying her best to look small. Her straight arms crossed in front of her, her face down. She looked like a child waiting for her parents to begin yelling. I had no idea where Kelly went.\n\nThey all looked at me as though waiting for a volcano to erupt.\n\n\"I'm sorry,\" I said, though I didn't feel it. \"I need to sort this out with Brenda right now. Please give me the space and time to do that.\"\n\n\"Barry,\" Dennis stood up and began to button his shirt, \"don't blame Brenda...\"\n\n\"Dennis, stop. I'm not blaming anyone for anything. I was here, too. But I need to talk to my daughter about this, and I'd rather do it just the two of us.\" I walked toward Austin and put my hand on her shoulder. \"I'll talk to you later.\" I turned back to the room. \"I'll talk to you all later.\"\n\nI walked past Austin into my room, where I turned and waited for Brenda to follow me. She slunk into the room and stood next to my chair as I closed the door. I didn't know if anyone was leaving or not, but I couldn't be bothered to think about that now.\n\nI gestured for her to take the seat while I sat on the mussed bed. I could still smell Kelly and Austin in the room, but that was preferable to smelling Brenda's sex in her room, or the residue of all those naked people having sex in the living room.\n\n\"First of all, Happy Birthday, sweetie.\"\n\nShe blinked hard clearly not expecting that. \"Uhm...thanks?\"\n\n\"No, I mean it. This is your birthday. Your eighteenth birthday. This is a milestone that should be commemorated. It means something.\"\n\n\"Does it?\" She eyed me warily, not entirely believing me. \"Does it really?\"\n\n\"You're talking about our argument last night?\"\n\nShe nodded.\n\n\"You snuck out before I calmed down enough to apologize for some of the things I said.\" I waited for her sarcastic comeback, but she just lowered her eyes. \"I was trying to talk to you about,\" I gestured to the hallway, \"this very kind of thing, and you bit my head off. I reacted poorly.\"\n\n\"But...\" she struggled with her words, as if not knowing the best way to express herself. \"I...I mean, how am I supposed to....\"\n\n\"How are you supposed to talk to your dad about sex?\"\n\nHer head dipped in the barest of nods. \"I know it isn't easy, Brenda. Believe me when I say this is difficult for me, too. I never talked with my folks about sex, other than the simple birds and bees talk when I was a kid. I got the feeling my dad assumed I was getting laid and was proud of it. He never asked me about girls or anything, though. I figure my ma thought I was a virgin until the day she passed away.\n\n\"I was too embarrassed to bring it up to my dad. I had to figure things out as I went. It didn't help that I was a shy nerd.\" I laughed and she smiled. \"You don't suffer from that malady.\"\n\n\"Actually, I am a nerd,\" she said.\n\n\"Well, then, nerd must mean something different from when I grew up. Back in my day, nobody wanted to see a nerd naked.\"\n\n\"Well,\" Brenda wrestled with her words, \"Uhm, in case you didn't notice, all my friends wanted to see you naked.\" She blushed as a grin spread across her face. \"And now they have.\"\n\n\"That's certainly true.\" I felt my face flush. In the moment, I never contemplated that all these hot girls actually wanted me. But evidently they did. \"Now, at the risk of sounding too parental, why aren't the lot of you in school?\"\n\nBrenda's smile dropped and she looked at the ceiling behind me. \"Uhm...\"\n\nI waited for what seemed like an hour as she looked around the room. \"Well?\"\n\n\"The team wanted to celebrate my birthday, and, uh, well...\"\n\n\"Hold it before you hurt yourself thinking up an excuse. I know about the 'club,'\" I pointed at her heart pendant, \"and I know it has a lot to do with sex.\"\n\nHer hand jerked to her pendant still resting on the swell of her breasts, her cleavage showcased by her cover up. I couldn't help noticing the sheer fabric highlighting the shape of the barbells in her nipples. \"Well, I, uh...\" Her eyes finally found mine again. \"Are you sure you want to hear this?\"\n\n\"Brenda, I want to understand you. I thought we had honest communication between us. But now I see there is a whole side of you that I don't know and that scares me.\" She looked like she was waiting for me to continue. \"Obviously, you're not a virgin. And obviously you're not a, how did Speedo boy put it, a Dyke? So, just tell me what all this means. And start at the beginning.\"\n\nMy daughter sighed. \"Will you hate me?\"\n\n\"I could never hate you, sweetheart. Never in a million years.\"\n\nAnd she told me. She gave me the details of how Tony Scarpetti took her virginity in the back of his Forerunner her sophomore year. She told me about how she met Austin her freshman year on the Swim Team, and how Austin showed her the more risqu\u00e9 techniques of sapphic love, including multiple partners. She told me about the swinger lifestyle, which is what the jeweled hearts represent.\n\n\"Austin told me that any swinger wears them to events to show that they are in the lifestyle to other members who might want to play.\"\n\n\"Hers is different, though,\" I said. \"She wears hers on a collar.\"\n\n\"She's a sub. The collar represents ownership or control. She wears it when she's with Coach West.\"\n\nI felt my eyebrows pop. That filled in another puzzle piece. \"So, Diane is a Dom, and Austin is her pet.\"\n\n\"Right. So, you do know something about it.\"\n\nI chuckled. \"I'm not completely clueless about sex in the new millennium, dear. Besides, people have been playing like this for centuries. But evidently, Diane is not all Dom. Kelly had her submissive.\"\n\n\"Linda's mom?\" Austin blinked and couldn't have looked any more surprised if I had said she had three breasts. \"She's a Dom? Wait. How would you know that? When did that happen?\"\n\n\"Well, she was in my room this morning. With Austin and me. When the party started. I don't know if she goes for the label, but she sure put Diane in her place for her affair with Dennis.\"\n\n\"Coach West was fucking Linda's dad?\" That blackness came back to her eye for a moment. \"That bitch!\"\n\n\"Brenda!\" I admonished.\n\n\"I'm sorry, but I can't believe she did that. Is that why she was here this morning?\"\n\n\"Well, from what I know of Dennis, it wasn't as though she sought him out. But that's another talk. Let's talk about why all your friends came into our home when they should be in school.\"\n\n\"After the meet, we were all planning on partying to celebrate the first win, but then, you know, things got weird. Between us, I mean. And with Linda.\"\n\n\"I remember.\"\n\n\"So, this morning before first period, Ivory said we should have the party today, since it was my birthday and all. And I was still a little mad at you. And...well, I said okay.\"\n\nIt took a lot of effort to keep my face neutral. I was seriously disappointed that she broke one of the few rules I have in the house, but I didn't want to shut her down when she was finally opening up to me.\n\n\"She spread the word to the others on the team, and well, here we are.\"\n\n\"I see.\" I got up off the bed and walked to the window, glancing out to the pool. Watching the sunlight glinting off the water took me back to simpler times. Like a month ago. Before all this started and Brenda showed me she was a woman, in every sense of the word. My emotions welled up like a river after a flood threatening to burst the dam.\n\n\"You have grown up. You're not my little girl anymore,\" my voice trembled. \"I can't protect you. I haven't protected you like I should. I'm such a failure.\"\n\n\"Daddy, no!\" Brenda ran over to me wrapping her arms around my waist from behind. I could feel her tears on my back as she pressed herself to me. \"You haven't failed me at all. You've always been there for me when I needed you.\"\n\n\"But you couldn't trust me with all this...\" I turned around and she melted into my arms.\n\n\"I thought you'd hate me if you knew. That you would think me a freak or something.\"\n\nI felt a surge in my eye and a pull on my heart. \"I could never hate you. You're my daughter. I love you more than anything. You're the last thing I have of your mother. God!\" I blinked my tears back. \"You are so much like her. You have her eyes. Her beauty. Her spirit. When I look at you, I can see her.\"\n\nBrenda sniffled and then laughed. \"Except my boobs,\" she said trying to lighten the mood. \"In pictures, Mom's are smaller.\"\n\n\"Well, you got those from my mom. You're welcome.\" We laughed together as we held each other. My mother passed before I met Carrie, so neither she nor Brenda had ever seen how well-endowed she had been.\n\nWe returned to sitting on the bed where she filled me in on her sexual journey for the next several minutes, and I had to force myself to not get an erection. Several hours of naked hotties, and blow jobs, and sex and I had not cum left me with a bit of a buildup of pressure. I had to keep my legs crossed while sitting next to her on the bed to hide any telltale bulge that might pop up. She was telling me explicit details while wearing nothing but a slinky, sheer cover over her naked body, which only made her more tantalizing. I would never make a move on her. But any human male would have to react to such a gorgeous woman talking about her sex life.\n\n\"So, I have a question.\" I interrupted at a lull in her story. \" Are you bisexual, or what?\"\n\nShe couldn't have rolled her eyes anymore if they were able to leave her skull and fly through the air around her head. \"No, Daddy. I'm not gay or lesbian or whatever label they put on it these days. If I had to wear a label, I guess it would be pansexual. I just love the feeling of getting and giving pleasure to someone I care about. The anatomy doesn't matter. The person does.\"\n\nMy brain didn't want to process what I was hearing. I'd never experienced such a carefree attitude about sex. Well, not that I was aware of, since evidently Carry had such an attitude before I met her. Brenda was so nonchalant. Sex was just fun. It was just pleasure. It seemed to hold no more special significance. It might as well have been a handshake. Granted, a very pleasurable handshake, but still. My parents would never have accepted such a cavalier attitude from me about it. I, however, couldn't fault Brenda for her attitude, could I? Hadn't I been avoiding relationships myself all this time? How could I expect Brenda to do any different? Of course, I never considered sex with another guy. Brenda not only considers it, she acts on it. \"But do you have a preference?\"",
        "\"Well,\" she said making a show of touching her chin and tilting her head, \"each has its own unique qualities that I like, but if I had to pick one, I like playing with women, but I guess I'm still more romantically drawn to men.\"\n\n\"Well, there it is then.\" I drummed my finger on my knee not knowing how to respond to that revelation. At least it meant that someday she might find a nice boy to marry and start a family, so my parents wouldn't roll over in their graves, and I would be able to have grandchildren that had some of Carrie in them. Thinking about kids reminded me of another question. \" And those toys in the suitcase in your room. Are they yours?\"\n\n\"Yes. Well, not just mine. We kind of share them.\"\n\n\"Who's we?\"\n\n\"Bethany, Karen, Linda, and me.\"\n\nMy eyebrow felt like it was trying to curl over the top of my head. Linda? Sweet innocent Linda? \"Linda too?\"\n\nBrenda almost laughed. \"She's not as innocent as she plays being, Dad. We've been playing together since we were fourteen. But she only plays with herself, or me. She likes watching, though.\"\n\n\"Really?\"\n\nBrenda nodded. \"I guess you two have that in common.\"\n\nNow it was my turn to look confused.\n\n\"Oh, Dad, I know about the security camera. I saw the video on your computer. Along with an impressive porn stash.\"\n\n\"Oh, you went snooping on my machine? What about my privacy?\"\n\nShe looked chagrined. \"Busted. Okay. I shouldn't have, but I couldn't surf porn on my machine in case you look there. I figured you would never notice if I looked at your stash. I found it there.\"\n\n\"So that's why you covered the camera the last sleepover.\"\n\nShe nodded. After several moments of silence, she drew a long breath. \"So, what now? Where do we go from here?\"\n\n#\n\nWe hadn't finished our talk when I heard a commotion from the living room. I glanced at the door, then back to Brenda who shrugged. I was about to go see what was going on when my door burst open, and a fiery young woman exploded into my room.\n\n\"What the hell?\" Linda looked at Brenda and blinked when she saw Brenda's state of dress. Then she looked at me in nothing but a pair of shorts and a workout shirt and blinked again. \"What's going on in here? I come back to see my mom and dad sitting together on the sofa, and Coach West and Austin all talking together like they're best buds. And you're both in here half naked?\" She turned toward Brenda before either of us could answer. \"And why weren't you in school? I was going to ride home with you, but I had to take the bus again.\"\n\n\"Linda,\" Brenda began, but she was interrupted when Kelly came into the room. Kelly had cleaned up and dressed and gave no sign of the activities of the morning.\n\n\"Honey, Brenda and her father are in the middle of an important discussion. We need to give them some privacy. Now come on, we can talk in the living room.\"\n\n\"Oh, no. I'm not going to be left out this time. If something is happening, I want to know about it before it happens. No more trying to let me down easy after the fact.\"\n\n\"Linda Mitchell,\" Kelly raised her voice to Mom level. \"You get yourself into that living room right now. We will discuss it there.\"\n\n\"Discuss what? Who's fucking who? You don't think I know what went on here? I can fucking smell it.\" Linda leveled a hard look at me that made me want to shrivel up and die. I don't think I ever felt so small. \"I guess that's the only real question...and maybe it doesn't really matter, does it?\" She whirled on her heal and marched out of my room.\n\nKelly looked her apology back at me before she turned and followed her.\n\n\"Brenda, we can finish this later. Go calm her down. You're probably the only one who can right now.\"\n\n\"Somehow, I doubt that,\" Brenda said under her breath. \"Let me put something else on, first.\"\n\nI dropped into my chair and blew out a long breath as I ran my hand through my hair. I had no idea what to do next. Nothing in my life ever prepared me for a situation like this one. In one day, my life had been turned upside down. Everything I thought I understood about life, both mine and my daughter's, was set sideways.\n\nA shadow fell across me, and I looked up at Dennis, still wearing nothing but pants with his shirt unbuttoned, and no socks or shoes. \"Hell of a day, eh bud?\"\n\n\"Understatement of a lifetime,\" I said as he took a seat on the bed.\n\nWe sat in silence together for a moment before he sighed. \"I need to know something, though.\"\n\n\"I don't know what I could know that would possibly help you, since I have been so clueless for the past six years. Hell, the past twenty.\"\n\nDennis sat on the corner of my mattress and wrung his hands together. \"Are you in love with Kelly?\"\n\n\"What?\" I sat up and blinked. \"No! Whatever gave you that idea?\"\n\n\"Well, she told me she spent the night here last night.\"\n\n\"She did. I slept on the couch. Linda was here, too. In Brenda's room.\"\n\nDennis didn't look convinced. \"But, the thing is, Bare, Kelly has been a cold fish for more than six years. Since right before Carrie died. And after one night in your house, suddenly she's an insatiable slut like she was in college. I don't know how you did it, but I need to know what happened.\"\n\n\"Dennis, I wish I could take credit for the transformation, but I can't. She came over here last night in that outfit with that haircut. I had nothing to do with it. Hell, I was as surprised as you are. I haven't seen Kelly any more than I've seen you in the past six years. And I'm not in love with you either.\" I tried a jovial smile which he returned.\n\n\"Then what...?\"\n\n\"Ask her.\"\n\n\"What?\"\n\n\"I said, ask Kelly. She'll tell you. I have a feeling she won't be sitting on her feelings anymore.\"\n\n\"Ask me what?\" Kelly returned to the room.\n\nI looked a question at her, and she shrugged. \"Brenda's talking to her right now. I got the feeling they didn't want to discuss it around parents. Now, ask me what?\"\n\n\"Why the change?\" Dennis looked up, his eyes wide and hopeful.\n\n\"You mean why did I fuck the socks off of both of you?\" Kelly grinned.\n\n\"And Diane...\"\n\n\"Well, that slut had it coming,\" Kelly huffed. She told Dennis about her talk with the youth minister and how it opened her eyes to her misunderstanding of her beliefs. In the end, they sat together on the bed with their arms around each other. I half expected them to start fucking again, but then Kelly turned to me.\n\n\"So, what's your excuse?\"\n\n\"Excuse me?\"\n\n\"You fucked half of the girls that were here this morning. I heard about your performance.\"\n\n\"I fu...I was...Tina and Karen both seduced me, yes. That's not half.\"\n\n\"No. You fucked Austin too. And you were going to fuck Bethany if you hadn't stopped. Why did you stop?\"\n\nI didn't want to discuss this. I had no real answer as to why I did what I did. I'd had those girls in my house countless times over the years and never once gave serious thought to having sex with them. Oh, sure, I fantasized about it, but I'd never had done it. Would I? \"I remembered Brenda.\"\n\n\"And the thought that she might be involved bothered you? No, don't deny it. We all saw it when you brought the festivities to a crashing halt.\"\n\n\"What was I supposed to do? She's my baby. Are you telling me that if Linda were here, it wouldn't bother you seeing her fucking all those kids?\"\n\n\"We're not talking about me, Barry.\" Kelly was winding up again. She had a point she wanted to make, and she was by God going to make it. \"We're talking about you. And your attitude toward sex.\"\n\n\"What attitude? I'm no prude.\"\n\n\"No, you're not. You never were. But you do have some antiquated, parochial ideas about it. You seem to think that recreational sex is fine for guys, and girls you don't know. But for Brenda, it has to mean something. There has to be a commitment before things get physical.\"\n\n\"You don't know what you're talking about.\"\n\n\"Don't I? What did you tell Brenda this weekend?\"\n\nShit. Brenda must have told her about our fight at some point. Or Linda did. \"That's different. I'm her father.\"\n\n\"So? She's a young woman, Barry. Or hadn't you noticed.\"\n\nOh, I noticed, all right.\n\n\"And she had needs, and desires, just like any other woman. Like me. Like Carrie did.\"\n\nI raised my hand to stop her, but she barreled on.\n\n\"No, don't think that talking about Carrie is off limits. She's the reason we're in this mess. At least partially. You haven't fully healed yet, Barry. You're still holding on.\"\n\n\"No, you're wrong. I've moved on. I've dated.\"\n\n\"You've fucked, Barry. You've scratched an itch. You haven't move on one inch. You want to know how I know?\" She got up off the bed and went to the door.\n\n\"Now, wait a minute...\"\n\n\"You see this door?\" She was standing at the door between Brenda's and my rooms. The spare room. The room that was supposed to be our second child's room.\n\n\"Kelly, don't...\"\n\nShe opened the door, which screamed on its hinges as it opened.\n\n\"Kelly, stop.\" I tried to get up, but I couldn't move. The light filtered out into the hallway from inside the room. The color of the light was muted, like a dress left in an attic for decades. Rays of light highlighted the dust particles that drifted out of the room into the hallway.\n\n\"You want to tell me about all that?\" Kelly gestured her arm at the room. I didn't need to get up to see what she was pointing at. I knew full well what was in there. I put it there six years ago. That was the last time I opened that door. \"Barry, tell me. What is all this?\"\n\n\"Daddy?\" Brenda crept up beside Kelly, with Linda right behind her. They both stared wide-eyed at the open door.\n\nKelly cast a glance at the girls before she stepped into the room.\n\n\"Kelly, wait,\" I hopped up and followed her as far as the doorway. She was standing next to a stack of boxes covered in a thick layer of dust. Behind the stack was a pile of clothes still on hangers draped over a bed that had never been slept in. Other boxes were placed haphazardly around the room. A crib sat disassembled in one corner. The walls were decorated with posters and art from children's books. Many of them had hung in Brenda's room before she got too old for them. Carrie moved them into this room when she and Brenda redecorated. That was about a month or two before Carrie got sick. We never finished this room.\n\n\"This is what I'm talking about, Barry. Carrie is still here. Her casket might as well be resting right here in this house along with all this other stuff.\" She stepped up to me, her nose inches from my chest, and looked up into my eyes. \"You need to let her go. You need to let all this go. It's nothing but stuff now. She wouldn't want you wallowing in her old junk. I mean look at this.\"\n\nShe walked back to the top box and looked in. \"Oh, my!\" She reached in, disturbed a puff of dust, and retrieved a dingy handbag. Carrie's purse. The purse she took to the hospital. She opened it and pulled out Carrie's wallet and check book. \"Hmph,\" she chuckled. \"There still money in here. And what's this?\" She reached into another pocket and pulled out an envelope. \"Oh!\" She blinked and dropped the purse as she stared in shock at the envelope in her hand. \"Oh, God.\" She looked up at me with wide eyes. \"You didn't read this?\"\n\n\"What? What is it?\"\n\n\"Carrie wrote this for you. She wrote one for me and Brenda, too. This one's still sealed. Why didn't you read it?\"\n\n\"I didn't know about it.\" I closed the distance in two steps and reached to take the envelope from her, but stopped short, my hand hovering like it was a hot poker about to burn me. I saw my name printed on the envelope. It was in Carrie's writing. I recognized it. I hadn't seen her writing in six years, but I recognized it. My heart thumped in my chest and my fingers trembled.\n\n\"Come on, Barry,\" Kelly said offering me the envelope. \"Take it.\"\n\nI touched the paper like it was a sacred scroll unearthed after countless centuries and one that would disintegrate with the wind. My fingers traced the letters of my name as a tear welled in my eye. I turned it over and peeled it open. Several pages of lined stationary were folded up inside, each with Carrie's scrolling writing. I opened them and, with a deep breath, I read.\n\n#\n\nBarry, my love.\n\nI hope I'm wrong when I write this, but if you're reading it, then I'm not. I know the doctor said I would get over this, but somehow, I don't think so. I looked it up on the Internet and it's not good. Chances are you know this by now. I'm sorry I let you down. I'm sorry I let Brenda down.\n\nBarry, I'm going to die. I know it. I can feel it. But I also know that if I die, I die knowing that I have loved the only man in the world I could have, and that he loved me. You are everything to me, my love. The day begins and ends with you. You have never given me any reason to doubt your love for me, nor to question my future with you. If I had known twelve years ago that I would die today, I would do everything again just to spend all the time I have left with you. You have given me the happiest moments of my life. You have given me the greatest child on the planet. You have given me purpose. My only regret is that stupid year when I questioned if I was worthy of you.\n\nBarry, honey, I know you love me, and nothing will ever change that, but when I'm gone, don't close your heart to love. Brenda will need you and a girl needs a father who is open to love. Don't hide yourself away. Don't isolate yourself or throw yourself into your work. Meet someone. Love someone. Show our daughter how a man is supposed to love a woman, what a loving couple are to each other. Find someone and love her like you love me. Do it for Brenda. Do it for me.\n\nBrenda is going to need you especially now in the coming years as she turns into a woman. Barry, I never told you much about how I was in high school, but I made some mistakes that I don't want Brenda to make, and since I won't be there to help her, it falls to you. I have a diary that I kept from those years. It's in my hope chest in the closet. Read it. Learn from my mistakes and keep Brenda from repeating them. Kelly knows what I mean. The two of you should be able to manage without me.\n\nIf you ever need help, know that Kelly and Dennis will always be there for you. They have been family to me for most of my life, and they love you like a brother.\n\nI will love you forever, babe. I will be waiting for you in heaven with open arms.\n\nYour loving wife\n\nCarrie\n\n#\n\nI was on my knees on the floor, the letter crumpled in my hand as my shoulders trembled with silent sobs. Tears stung my eyes and dripped off my nose as I stared at the note. Kelly and Dennis stood on either side of me, and the girls were kneeling beside me. No one said anything as I digested what I read. Brenda rubbed her hands in small circles on my shoulders, while Linda stroked back and forth on my lower back. I leaned into my daughter's arms and she held me.\n\n\"We'll give you a minute,\" Kelly said as she pulled Dennis' arm.\n\n\"No,\" I said and sniffled. \"I'm good. Uhm,\" I looked around the room. \"Geez, I haven't been in here in a while.\"\n\n\"I know, Daddy,\" Brenda said.\n\n\"I guess we could have used this room for company. Hell, Linda could have stayed in here last week.\"\n\n\"It's okay, Daddy. We didn't mind. We probably would have stayed in my room together anyway.\"\n\n\"Yeah,\" Linda said.\n\n\"Still. We need to fix this. This,\" I waved my arm at the clothes and boxes, \"all this needs to go. It's time.\" I stood up and shook six years of weight from my shoulders. \"Right.\" I looked at the letter in my hand. \"Right.\"\n\n\"Right, Dad!\" Brenda stood up and grabbed a box. Kelly and Dennis looked at each other and shrugged before grabbing other boxes.\n\nIn a few hours, the room was empty. Most of Carrie's clothes had been bagged for donation. Kelly took some outfits, Brenda took others, not as many, since Brenda was bigger in almost every aspect than her mother: taller, bustier, and curvier. Much of Carrie's jewelry was divvied up between the three of them; Kelly squealed when she found some of Carrie's older things that she remembered from high school, though I kept Carrie's wedding rings. I planned on giving them to Brenda when and if she ever married.\n\nAs we carted the last box to the garbage, a thought hit me. \"Carrie mentioned a diary in her letter, but I didn't see one in any of these boxes. Did anyone find one?\"\n\nThe Mitchells all shrugged, but Brenda shifted around on her feet, her hands behind her back as she kept her eyes on the floor. \"Uhm...well...\"\n\n\"Brenda?\"\n\n\"I...I...uhm...I found it. A while ago.\"\n\n\"A while ago? How long ago?\"\n\n\"Well, like, uhm, last year.\"\n\n\"You've been in this room?\"\n\n\"I...I...\" she looked panicked, like she thought I was angry with her. \"I was missing her. It was on my birthday, and she died right before my birthday and I couldn't stop thinking about her and how much I needed her and missed her and...and...and...\" She started to tear up as her words tripped over themselves.\n\n\"Shhh, sweetie,\" I held her and rested my chin on the crown of her head. \"It's okay. I'm not mad. I just never thought you came in here.\"\n\n\"Only once in a while. I found her diary,\" she choked back a sob, \"and reading it was like talking to her.\"\n\nI nodded silently. I was envious that she had that, but also, grateful, if it eased her pain. \"Well, I'm glad you got to have that time with your mom.\"\n\n\"She, uh, wrote me a letter, too.\"\n\n\"She did?\"\n\n\"Yeah, it was in the same box as her diary. She told me to take care of you. That you would need me more than ever. And she was right.\"\n\n\"She always was.\"\n\n\"She also told me not to tell you she said that.\"\n\nI chuckled. \"That sounds like Carrie.\"\n\nAfter several moments of holding my daughter, I remembered there were others in the room. \"Sorry, guys.\"\n\n\"Hey,\" Dennis said, \"don't worry about it. You guys needed that. Listen, we've pretty much finished with this stuff,\" he gestured to the now mostly empty room, \"so I think we'll all make ourselves scarce and give you guys some quality time.\" He moved his arms to herd Kelly and Linda toward the door.\n\nBefore I could object, Brenda beat me to it.\n\n\"Don't you dare. This is a day of celebration. You two are back together, I was top ranked at the swim meet, and last but not least, it's my birthday, so I get to say what we do. And I say Pizza!\"\n\nThere she goes again, giving orders. Brenda raised her eyebrow at me challenging me to refuse her. I couldn't. Dennis and Kelly nodded as well. I caught Linda's eye as she smiled at me.\n\n\"That sounds good to me,\" I said. Linda clapped her hands and bounced on her toes. She looked so happy. So full of life. Her energy was contagious. Making her happy felt good. Part of me wanted to spend a lifetime making her happy. She bounced into me under my left arm as Brenda held me under my right. This was the beginning of a new day and who could say what tomorrow would bring?"
    ],
    "authorname": "Arkfisting",
    "tags": [
        "orgy",
        "voyeur",
        "mf",
        "ff",
        "mff",
        "mmf",
        "masturbation",
        "exhibitionism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-swim-team-ch-09"
}