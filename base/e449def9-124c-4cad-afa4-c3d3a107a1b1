{
    "title": "The Looking Glass",
    "pages": [
        "This story contains Crossdressing, themes of Gender Fluidity, Exhibitionism, and Voyeurism. If any of this sounds unappealing to you, I welcome you to leave and find something more to your liking. This story is a submission for the 'Love The One You're With' Quarantine Story Event. Please take a second to rate after you finish reading.\n\nThank you to Skye4Life for her help in editing, and thank you to Insert25\u20b5 and Outdoorsman5287\n\nThe Looking Glass\n\nI've never done Heroin. I've never even been tempted. You hear all the time about how easy it is to become addicted, and how it can ruin your life. That knowledge alone has been sufficient to dissuade any thoughts of ever trying it. If I'd known that it wasn't only drugs that could suck you down the rabbit hole, upending your life forever, I would have never gone snooping around in Kelsey's flat. Hell, I would have never left the States, and stayed tucked up nice and safe in New Mexico. If only I'd known.\n\nLike most things, it all started with a phone call.\n\n\"Luke? Are you there? Can you hear me?\" Kelsey's voice burst through the speakers of my cell phone as I juggled it between my fumbling hands. \"Luke?\"\n\n\"Yeah, just a second!\" I replied, slinging my bookbag back onto my shoulder before bringing the phone to my ear. \"Sorry, what's up Kelz?\"\n\n\"Hey, Cuz!\" Kelsey said warmly. \"What are you up to?\"\n\nWincing at her choice of words, I answered. \"Not much. Just finishing up my mid-terms. And I hate it when you call me that.\"\n\n\"What, you don't like being my cousin?\" she asked sweetly. \"I thought you liked me.\"\n\nI could actually see her pouty face through the phone. Oh, I liked her all right. That was what made it so weird when she called me Cuz. Our fathers had been best friends since high school, and her dad had always been Uncle Jack to me, but ever since I could remember I'd had a crush on Kelsey. It was a crush that she seemed ever oblivious to, and whenever she called me her cousin it felt like she was driving a very solid wedge between us and my hopes for something more.\n\n\"What's going on?\" I asked in a brighter tone as I suppressed a sigh. \"I thought you were too busy for the likes of us lowborn mortals, what with you running away to Paris to become all successful and shit.\"\n\n\"I might have been a bit busy over the last couple of years, but I'll never be too good for my family,\" she said, pushing that wedge in just a little deeper. \"And it's London, I'll have you know.\"\n\n\"Oh, London!\" I mocked, affecting a horrible British accent. \"My apologies to the Queen.\"\n\n\"I'll see if I can get you a pardon the next time we have tea,\" she shot back easily. \"The reason I'm calling is, I was thinking of you quite a bit over the last couple of weeks.\"\n\n\"Really?\" I asked, trying hard to mask my delight at the thought.\n\n\"Yup,\" she replied matter-of-factly. \"I remembered that you're in college and realized that your spring break should be coming up.\"\n\n\"In about a week,\" I said, taking a moment to dodge a coed with her thumbs glued to her smartphone. \"What about it?\"\n\n\"I was thinking you might like to catch a flight down here for the holiday. There is a lot of cool stuff you could see, and the drinking age is 18. What do you say?\"\n\n\"That would be awesome!\" I thought out loud before remembering my bank balance. Then continuing in a more somber tone, \"I don't know though. I don't really think I can afford it right now.\"\n\n\"You wouldn't have to worry about a hotel,\" she offered enticingly. \"You can stay at my flat.\"\n\nStaying with Kelsey would have made any vacation a hundred times better, even if nothing ever happened between us, and it physically hurt to tell her the truth and put an end to any thought of it. \"I don't even think I'd be able to afford the plane ticket,\" I said honestly. \"Not this last minute anyway.\"\n\n\"Humm,\" she thought. \"I can use some of my miles,\" she offered after a few moments of silence. \"I've got a ton of them saved up from traveling for work. All you would need is a few hundred to party with.\"\n\n\"Wow, really?\" I asked. \"You'd do all that just to see me?\"\n\n\"About that...\" she began awkwardly. \"I'm not gonna be there. I have a work thing in Prague, so you would have the flat to yourself. But I figured it would work out nicely for you though,\" she said quickly. \"You know, if you find a girl, you can bring her back and dazzle her with how huge your...apartment is.\" she finished with a slight giggle.\n\nJust when I thought she might finally be coming to her senses... Well, I should have figured. To her, we would always just be family. Still, a free trip to England seemed like a great idea, and I would have been a fool to pass it up under any circumstances.\n\n\"Is there a chance that you will be back in London before I would have to leave?\" I asked hopefully, but already knowing my answer.\n\n\"Umm. Maybe,\" she said thoughtfully. \"It might be tight, but we might have a few hours...a day at the most. Does this mean you're coming?\"\n\n\"Yeah,\" I told her. \"I'm coming.\"\n\n\"Great!\" her voice beamed. \"I'll buy your plane ticket tonight and email you the info.\"\n\n\"Thanks, Kelz.\"\n\n\"Don't mention it, Luke,\" she replied. \"I feel like I dropped the ball on your whole high school graduation gift, so I hope this makes it better.\"\n\n\"And then some,\" I assured her.\n\nBefore I even made it back home from campus, I had received an email from Kelsey with my flight information and a link to my E-Ticket inside. I was still a little bummed that she hadn't been inviting me to London so we could hang out and she could accidentally realize that she had the hots for me. That would have really been hoping for too much, but despite that I was still excited. I'd never been outside of New Mexico, and barely ever outside of Santa Fe. A chance to go to London for free felt unreal.\n\nSkipping past the pleasantries with my parents, I rushed through the front door and upstairs to my bedroom, slamming the door behind me in my excitement as I fired up my computer and began looking up things to do in London and the surrounding areas. Buckingham Palace, Big Ben, and the Tower of London were on the list for sure, but the thing I was most looking forward to were the bars, and the kind of trouble every teenage boy looks for on vacation, or at home for that matter\u2014sex of course.\n\nLater that evening when I hopped out of the shower before dinner, I took a long look at myself in the mirror and regretted neglecting that gym membership my mom had gotten me for my birthday last summer. I had been meaning to put some muscle on my body, but with school and a part time job, I'd only seen the inside of the gym a half a dozen times in the last six months. Staring at my scrawny frame, I tried flexing my muscles in an attempt to look more manly, but the effort failed miserably. I looked thin and lanky...everywhere but my ass, that was. Years of climbing up and down the stairs at my house, as well as the schools I attended, had seen fit to sculpt it into something firm and shapely.\n\nAt dinner I announced to my parents my plans to go to London for spring break.\n\n\"That sounds like a great Idea,\" my dad said, clapping his hand on my shoulder as he took his seat beside me at the head of the table. \"You and Kelsey haven't gotten the chance to see each other in some time. How is she doing by the way?\"\n\n\"She's good. She told me she has a big fancy flat downtown,\" I said, purposely forgetting to mention that Kelsey wouldn't even be on the same land mass as me. I might have been old enough to fight for my country, or vote, but my parents still wouldn't have let me go to another country without supervision.\n\n\"Are you sure that's a good idea?\" Mom asked, concerned. \"Isn't there that Croney thing going around over there?\"\n\n\"That's in China,\" I said quickly, hoping she wouldn't say no.\n\n\"I heard something about someone dying from it in Italy just today,\" she said. \"Maybe you should wait until this all dies down a bit.\"<br >\n\n\"Italy is like a thousand miles away, Mom,\" I insisted. \"And it's just the flu. I've had the flu before. It's nothing I can't sleep off if it comes to that.\"\n\n\"It's supposed to be more than just a flu,\" Mom began before dad cut her off.\n\n\"Relax, Hun,\" he said giving me a knowing smile. \"I'm sure Luke will be fine. Besides, Kelsey will be there to take care of him,\" he added with a subtle wink to me that I hoped our mother had not seen.\n\nI had never told anyone about my little crush on Kelsey, but my dad had seemed to know the moment that I did. He never mentioned it out loud, but he never stood in the way whenever Kelsey and I wanted to hang out, even when I was supposed to be in trouble. Deep down I always knew she was way out of my league, but my father never seemed to notice, always giving me that subtle encouragement while never speaking a word on the subject, so as not to embarrass me. A good dad.\n\n\"Well, you double check that she has all of our numbers just as soon as you get off the plane,\" My mother insisted.\n\n\"She has them,\" I assured her, \"but I'll make sure,\" I added when I saw that she was about to press the matter. As far as I could see, she was the only potential obstacle, and I wanted to stay ahead of that if I could.\n\nThe next ten minutes of dinner passed in patches of awkward silence as I pushed my peas around my plate with my fork and nibbled on a few pieces of potato. All the while, my father kept giving me knowing smirks that flirted with that delicate line we had established about not embarrassing me about Kelsey.\n\nAfter sitting with them for the bare minimum amount of time required to maintain good manners, I excused myself to go back up to my room. I still had a few more tests to cram for before I was London bound in a week. My books sat neglected though. As stupid as I knew it was, I found myself face down on my floor trying to squeeze out a measly ten pushups. There was no way any work I did now would make a noticeable difference in only a week, but that wasn't going to prevent me from trying.\n\nWith Kelsey out of town, my prospects with her were zero, but that didn't mean I couldn't try my hand at the local watering holes. Everyone always talked about how European girls go crazy for American guys. As much as I wanted Kelsey, it wasn't like I was desperately obsessed with her. It was more of a lustful longing from a distance. Besides, I was only human...and male. I'd had my first taste of sex after my senior prom, and I was instantly hooked. I'll admit, I wasn't sure if I was going to enjoy it beforehand. The only thing I had to compare it to was masturbation, and I'd been practicing that at least twice a day since puberty, but I have to say, sex with another person definitely wins out in a contest. Hell, I'd take bad sex over good masturbation, and I'm sure any other guy would agree.\n\nBy the time I made it up off the floor and into my bed for the night, I had managed forty pushups, and I had a painful erection from thinking about hot spring break sex with British girls. My arms felt like jelly, but that didn't stop me from wrapping my fingers around my cock and stroking with the last ounces of energy I had left. As horny as I was though, and as hot as those British girls in my imagination were, I still fell asleep long before my climax.\n\nThe next week passed slowly and painfully, both mentally and physically. With my excitement from my impending trip, each day seemed to drag out, milking every last second from the clock. Between last minute cram sessions for midterms and finishing up a few last-minute assignments, I still found time to squeeze in my futile work outs.\n\nAs the day of my last two classes neared, my mother's worrisome nature seemed to be going into overload. Nearly every hour she would call or send another text, mentioning that \"Croney thing\" that she'd been hearing about, and wondering if I thought it would be better to put off my trip. I loved her, but sometimes she worried entirely too much. Sure, you could die from a flu, but only if you didn't take care of yourself, or you were really young or really old. Everyone knew that. Every year a new flu strain came along, and every year it passed. This one would be no different.\n\nEven with my mind filled with thoughts of my upcoming trip, by some stroke of magic I managed to pull off all A's and B's in my midterm exams. As good as if felt to be thriving in my first year of college, I barely paused to celebrate when my last grade came in. The only flight Kelsey could book was for early Friday morning, and I now had less than twelve hours to finish packing and get to the airport.\n\nI arrived at the airport in the wee hours of the morning, three hours before my flight, determined not to miss it. My first time in a plane, and thoughts of my eventual destination, were enough to keep me pretty amped. This trip was going to be the highlight of my life, I could just feel it.\n\n*** *** ***\n\nMy first day in London was a waste. I landed at Heathrow Airport at 3am local time, and after fumbling through customs and baggage claim, I managed to find a cab to take me to Kelsey's flat downtown. I tried to be excited about being in a new country, but I felt so sleep deprived that I couldn't summon the energy. By the time I made it through the front door of her apartment the sun was finally rising, and the light was spilling in through a wall of windows that faced the street.\n\nTelling myself that I would only need a short nap before I was good to go, I fell onto the bed, fully clothed, and pulled the thick comforter over my face to block out the light.\n\nWhen I finally woke again, it was dark. I checked my phone, and I'd slept away the entire day. It was nearly midnight. Realizing I had wasted my first day, I tried to go back to sleep for a few hours to help shift my internal clock, but it wasn't happening. I was fully awake, and the gears in my mind were already turning, imagining all the cool things I could be doing in only a few hours.\n\nRipping back the blankets, I sat up and took my first real look around. The flat wasn't massive or anything, but it was still impressive. It was basically one large room, with the exception of a closet and a criminally small bathroom that left the old-fashioned claw foot tub sitting against the wall outside of it. The modern kitchen flowed seamlessly into the living room, and the living room into the bedroom. The large queen-sized bed, with its black and silver blankets and pillows, sat oddly place right in front of the wall of windows that looked out toward a beautiful building with fanciful carvings across the street. I could only guess that Kelsey wanted to wake up to that view every morning. All in all, she really had made something of herself to be able to afford such an amazing place.\n\nWith sleep a known impossibility, I crawled out of bed to find something to eat. The last thing I'd had was the inflight meal, and it spoke volumes of the troubled times airline companies were experiencing. I wasn't sure what Kelsey would mind me eating from her fridge, so I limited myself to coffee until I could go shopping.\n\nAs I sipped the delicious Italian roast, I wondered where the hell I was going to find groceries. I knew there had to be stores, but I honestly didn't have a clue what I was doing in a strange country. After I realized that google could help me, it made my life seem a little easier and I moved on to more important conundrums, like do they still call it Italian roast in Italy, or is it just coffee?\n\nMorning came closer, and I decided to get a jump on the day since I was already up. I went to take a bath in the claw foot tub that sat against the wall near the door to the closet-like bathroom. Having not taken a bath since I'd been four, it felt strange to be sitting submerged in the warm water as I scrubbed my body with a loofa. It wasn't until the water was draining, and I was standing on the hard wood floor drying myself off, that I realized I was in full view of anyone who might be awake in the building across the street.\n\nBlushing, I pulled the towel against my body, quickly fumbling to get it around my waist. Stepping lightly, I moved toward the windows to close the curtains. Before I got there I noticed something else, there were no curtains. Holding the towel tightly at my waist, I searched either side of the room, still dripping water everywhere, looking for some contraption or hidden whatchamacallit that contained blinds or something else that covered the windows. I even looked toward the ceiling to see if they dropped down, but I found nothing. Despite it being one of the older buildings, the flat seemed to be renovated into a more modern style, so I was sure I was missing some trick, but for the moment I was stymied. Giving up, I pulled some fresh clothing from a suitcase and went into the cramped bathroom to change.\n\n*** *** ***\n\n\"Did you get in okay?\" Kelsey asked later that morning before I headed out to explore the city. \"I tried calling yesterday but you never answered.\"\n\n\"Yeah, I'm here,\" I said. \"I passed out after the flight and didn't wake up until about midnight.\"\n\n\"I figured,\" she laughed. \"That happens to me a lot with work. They send me all over the place, and that first day is usually wasted from the brunt of the jetlag. It's only one day though. You still have a ton of time to see everything.\"\n\n\"I'm sure I will,\" I said. \"Uh...speaking of seeing everything, how do I close the blinds in your apartment?\"\n\n\"Oh...I uh... I guess I don't have any,\" she said.\n\n\"How do you not have blinds?\" I asked. \"Your bathtub is basically in your living room.\"\n\n\"I like to think of it as part of the bedroom, thank you very much,\" she said with a bit of snark. \"And to be honest, I'm not there all that much. I only moved in a few months ago, and all together I've probably only been there for three weeks of that. With work being so busy, I never got around to having curtains or blinds installed.\"\n\n\"You just take baths right where everyone can see you?\" I asked, unable to stop the image forming in my mind of watching her from one of those windows across the street as she soaped her naked body, kneeling in the tub as she poured water over those small perky breasts, washing away the foam. My cock began to grow at the thought.\n\n\"I normally use the dressing blinds,\" she said, intruding on my imagination.\n\n\"Dressing blinds?\" I asked, looking around for something that might fit that name.\n\n\"Yeah, it's the little foldy thing. It should be leaning against the wall near the tub,\" she said. After a moment of silence on my part she added, \"Think fancy Asian folding screen.\"\n\n\"Oh!\" I exclaimed as I finally noticed it. It wasn't exactly next to the tub; it was sitting further down the wall by the window. I had even leaned it out of the way while I was looking for some sort of switch to work the nonexistent blinds earlier. \"That might make things slightly less awkward.\"\n\n\"Maybe just slightly,\" she mused with a chuckle.\n\n\"Hey, before I forget,\" I said quickly. \"What's the deal with your refrigerator?\"\n\n\"Uh...it keeps things cold...\" she said awkwardly.\n\n\"No, what I mean is, can I eat things from it?\" I asked. \"I can replace the stuff...If I can find it somewhere around here. I don't recognize half of what's in there.\"\n\n\"Eat whatever you want,\" Kelsey offered automatically. \"And don't worry about replacing the food. Everything in the fridge usually goes bad before I get back from a trip anyway. If you get into my wine though, you will have to replace that,\" she added.\n\n\"I don't think you'll have to worry about that.\" I assured her, my eyes scanning the impressive wine rack hanging on the wall near her kitchen area. \"Give me a cold beer over wine any day.\"\n\n\"That works out great for me then,\" she said. \"Well, you probably want to go adventuring, so I'll leave you alone. If you get lost, or need anything, you can call or text me any time.\"",
        "\"Thanks, Kelz,\" I said\n\n\"Don't mention it, Cuz,\" she said before hanging up.\n\nHaving received her blessing, I dove right into her refrigerator the moment I hung up, my growling stomach spurring me on. Sticking to the more familiar fare, I ate some fruit, and toasted an English muffin with jam. With a full stomach and an extra cup of coffee flowing through my veins, I finally ventured out into downtown London.\n\nThoughts of the virus going around floated in the back of my mind, but despite a few hypochondriacs wearing face masks outside, no one else seemed deterred. I spent the morning walking the streets and getting lost as I appreciated the architecture of the old buildings. I eventually found my way to the Palace of Westminster and Big Ben. I managed to get a few good photos, but I felt kind of cringey around so many obvious tourists with their fanny packs and families while I was all by myself. I walked around the outside a bit, taking in the stunning architecture and the sheer size of the massive building until finally I'd had enough. No matter how spectacular a thing is, there comes a point when you've seen enough for now. I could always come back another day if I wanted.\n\nThrough most of the day I let my feet pull me along. I never really looked for anything specific, I just went with the flow, deciding which turns to take on a whim. I kept seeing people with those blue hospital masks on their faces, and it weirded me out a bit. Even so, no one else seemed affected by their presence. Huge masses of people still moved about the city tending to business or pleasure, and I pushed all thoughts of the virus out of my mind.\n\n*** *** ***\n\nI woke up late into the next morning with a massive headache throbbing at my temples. Groaning, I pulled an arm over my eyes and prayed that I would fall back asleep. I must have suffered in silence for over an hour before I finally gave in and went in search of aspirin.\n\nWashing down the pills I'd found in the medicine cabinet with a glass of water, I tried to recall the events of the previous night. I'd eventually made it to an old fashioned pub and celebrated my legal drinking age with a pint of Guinness. After a minor misunderstanding with some guys in Manchester United jerseys over the color of my shirt, which involved several minutes of explaining that it was simply a blue shirt, and that I was not in fact a Chelsea fan, we had boughten each other a round. Things began to get hazy after that, and I had a suspicion that I had tried to out drink them and failed miserably.\n\nIt took some food and another handful of aspirin before I was able to find my way outside once again. There seemed to be less people out than the day before, but I barely took note besides thinking that I wouldn't be jostled as much as the day before. With so fewer people, I thought I might take one of the tours. The overwhelmingly long lines had been a huge deterrent the day before, but The British Museum seemed almost barren. There was a steady stream of people walking past, taking the occasional pictures, but the line from the day before was absent. Taking a chance, I approached the entrance.\n\n\"We're closed,\" a man in an official looking uniform said through the blue mask on his face as he held out a hand, preventing me from getting closer.\n\n\"Do you know when you'll be back open?\" I asked, stopping a few feet away.\n\n\"We're closed until further notice,\" he said.\n\nI wasn't sure if it was the contempt for foreigners I was hearing in his voice, or just his polished accent, either way I lifted my hands in apology and backed away. More places I went to were the same. There were even police stationed at the popular tourist spots, like Victoria Park, ushering tourists along. Signs began popping up everywhere else I went announcing the extra measures that were being taken due to the Corona Virus outbreak.\n\nIt seemed like people had actually lost their minds over this flu. I tried to wander around for another couple hours, looking for something that wasn't shut down, but after learning that it was an official UK wide shutdown of tourist traffic, I gave up.\n\nTo my great relief, bars and clubs were still open, and those inside showed no indication that there might be a flu going around. Knowing better this time around, I paced my drinking. I managed to chat up a few girls for a bit, and even stole a few kisses with one of them, but by the end of the night I'd still struck out, even after offering to show them my impressive flat downtown. Even so, I couldn't count the night as a loss. Sex or not, it had been fun to hop from bar to bar experiencing both traditional and modern London nightlife from one establishment to the next.\n\nOver the next two days things turned from slightly inconvenient to just plain shitty. With less and less to do, I'd actually began paying attention to the news, and realized that this Corona thing might be worse than I'd initially thought. People were dying from it, and not just a few. Over a thousand people had already died in Italy alone. Only a handful of people had died in England so far, but several of them had been tourists. It was enough to make me reconsider stepping outside.\n\n\"I'm sorry about this,\" Kelsey said during one of her calls. \"I'd heard about the virus, but I didn't think it would get this bad.\"\n\n\"It's not your fault.\" I tried to ease her guilt.\n\n\"Yeah, it is,\" she said. \"I promised you an awesome spring break, and now you're stuck inside. You might as well be at home for all the fun you're having.\"\n\n\"It's not like my mom didn't warn me,\" I admitted. I'd already heard from her in a near panic, wanting to make sure I was okay and that I was being safe. \"I still got to see a lot of stuff,\" I offered, not wanting her to feel bad. She'd cashed in a bunch of her miles just so I could come out after all.\n\n\"Yeah, but it was supposed to be an amazing spring break, not a day and a half of sightseeing,\" she sighed. \"I'll make it up to you. I promise. After this is all over, maybe you can come back out for the summer or something. I'll make sure I'm there this time too.\"\n\n\"You don't have to do that,\" I told her.\n\n\"I insist,\" she pressed, to my delight. I was only trying to be polite, but I would have loved nothing more than to come back here, and to get a chance to hang out with my closest friend.\n\n\"Only if you insist,\" I replied, trying to contain my desire to jump up and down and whoop loudly.\n\nEven though I didn't have to stay inside, there was no point in leaving the apartment after that. Everything that I wanted to do was closed, and with the now serious risk of actual death on the table, I was much more comfortable experiencing London through the window of Kelsey's flat. The days of my vacation wasted away while I sprawled out on her bed, or couch, watching endless amounts of Netflix on my phone (because Kelsey was too high class for a TV).\n\nThe day before my flight home I received another bit of good news. All flights in and out of London were canceled. In fact, all flights in and out of Europe and nearly every other country were suspended. On top of that, a Stay at Home order had been issued, restricting outside movements for only the most necessary reasons, and for people whose jobs were essential. Tourists were on lockdown, and there was no word on when it would lift.\n\nHow long did it take for me to break, you ask? Five whole days. Five solid days of complete isolation involving Netflix binging and an embarrassing number of crisps. Yeah, that's right, I'm learning the lingo. What are you going to do about it?\n\nI never meant to do it. It was late in the night, and my eyes felt like they were going to fall out from staring at the tiny screen on my phone, and my back was getting stiff from my position on the couch. Tossing my phone aside, I got to my feet and paced around, stretching my muscles and savoring the momentary pleasure of popping my back. I was about to go back into the cabinets in search of more crisps or biscuits, when I stoically stopped myself from another session of boredom eating. Instead, I opened a drawer on the dresser that sat off to the side of the bed against the wall. My heart fluttered when I saw what was inside.\n\nThe moment my eyes fell on those soft frilly garments in all their colors, I instantly closed the drawer feeling guilty. I hadn't even meant to snoop. I'd been so bored; I wasn't even sure why I'd opened it. I stood there for a moment, staring down at my hand on the handle. After a moment, curiosity won out, and I eased the door back open. I was curious to see what kinds of things Kelsey wore underneath her clothes.\n\nEverything inside was so soft. Silk, satin, and lace slipped through my fingers as I examined the underwear. There were a few simple pieces, but nearly all of it was fancy and sexy. While nearly every hue was represented, pink and black were the predominant colors.\n\nI couldn't say how long I stood there, touching those tantalizing fabrics, examining one piece and then another, imagining them hugging Kelsey in her most intimate places, but by the time my trance broke I had a painful erection in my jeans. Feeling nervous, I grabbed a pink silk pair of panties and sat back on the couch.\n\nTaking my time, I slowly undid my pants as I built the scene in my mind, imagining Kelsey wearing the pink panties I was holding and nothing else. She sat cutely on her knees with her arms up, her hands running through her hair like a pinup girl, her small perky breasts on full display. I slid my pants down to my ankles, freeing my painful erection. Wrapping the soft panties around my shaft, I began sliding the delicate fabric teasingly over my cock.\n\nIt felt so good, and I desperately wanted to rush, to quickly pump my cock in my fist and shoot my load, but I held back. As worked up as I was, I still wanted to enjoy my little fantasy.\n\nKelsey was right in front of me, watching me stroke myself. She let her hair tangle in her fingers and lifted it up over her head, letting her dark brown locks cascade down in waves. A smile tugged at the corner of her lips, and she bit her finger teasingly.\n\n\"Do you see something you like?\" she would ask.\n\n\"Oh god yes!\" I whispered.\n\n\"Do you want to see more?\"\n\nI could only nod my head.\n\n\"What do you want to see?\" she teased. \"You have to tell me.\"\n\n\"Touch yourself.\"\n\nSpreading her knees slightly, she slipped a hand slowly down the front of her pink panties. I squeezed my cock tighter in the pink silk but continued my slow strokes. When her fingers reached her clit, her lips parted slightly, signaling that she'd begun pleasuring herself. My eyes were glued to her body\u2014the heaving of her breasts as her breathing became heavier, the way her eyes appeared heavy and lidded as her pleasure increased. The fingers inside of her panties sped up, and moans began to escape her lips, making sweet music with her audible gasps of delight.\n\n\"Oh yes!\" she called quietly to me. \"That's it, Luke. Do it. Do it for me!\" she called.\n\nWatching her riding the edge of her orgasm pushed me closer, and hearing my name slip from her lips like a moan stole any resolve I could still call my own. Pleasure began to lance through my body from the tip of my cock and the depth of my balls like lightning. I began to swell and throb like a desperate beast gasping for its final breath, reaching for that sweet blissful end.\n\n\"Cum for me,\" she gasped, seeing my climax plain on my face. \"Cum all over me!\"\n\n\"Arghh!\" I cried as my cum burst forth, shooting in sticky white streamers to cover her breasts and thighs.\n\nSpent, I let the final moments of my fantasy play out. Kelsey moaned in pleasure as she scooped some of my cum from her tits with her free hand. Slipping it into her mouth, she sucked on her fingers while her eyes held mine. The look on her face said that she knew she was being a little slut, and she wanted me to know it too.\n\nSighing, I finally opened my eyes and saw the mess that I had made. The pink silk in my hand was drenched in my fluids, and globs of my white cum were already soaking into the red and black rug covering the hardwood floor in front of the sofa.\n\nShit!\" I breathed, trying to use the sodden panties in my hand to clean up the rest of the cum coating my cock and hand.\n\nI got to my feet, and with my free hand, I awkwardly pulled my pants up. Holding them, I shuffled to the sink to try and wash up. Taking the paper towels, I dried my hands and then returned to the rug and tried to clean as much of my mess as I could. As for her panties, I washed my cum from them in the sink and set them out on the counter to dry overnight. In the morning I would put them back and try to pretend that none of this had ever happened.\n\nNow that it was all over, I felt a little weird. Not about jerking off to Kelsey. I had done that hundreds of times over the years, if not thousands. She might have thought of me as only a cousin, but I knew damn well we weren't related, and felt no guilt about fantasizing about her like that. What I felt weird about was jerking off into her panties. I knew that I'd just crossed some sort of boundary. I had violated her privacy, and then I violated her panties by cumming all over them. And I was just going to put them right back in the drawer tomorrow morning. Eventually, after she came back, she would wear those, and never know that the cloth touching her pussy had once been coated in my semen.\n\nThat train of thought threatened to breathe life back into my wilting cock. I knew it was wrong, and I felt guilty, but the thought of her wearing those panties sometime in the future was turning me on.\n\nI hadn't heard from Kelsey over the next couple of days. We'd been pretty consistent about keeping in touch since the lockdown was announced, but she couldn't be blamed. While I was bored out of my mind with nothing to do, she still had a job. Sure, all of her meetings and business outings had turned into Skype conference calls, but the work in international marketing wasn't going to be stopped for some silly global pandemic.\n\nAll in all, it was probably for the best that I hadn't heard from her. I tried to tell myself that I wouldn't go back into Kelsey's drawers, but it didn't last. The boredom was beginning to get to me. I had watched so much Netflix that it was making me physically sick to even think about it for long stretches. The only thing that brought any excitement to my current predicament came when I had the soft fabrics of her unmentionables wrapped around me and my imagination was running free.\n\nEvery time I washed the cum from another pair of her panties, I found myself saying that it was the last time. There were already three pairs still drying on the kitchen counter from today alone. It was just so hard to resist. After an hour or so, the guilt would fade, and I would remember how sexy those little panties of hers were, and how good they had felt on my skin. In no time I would cave, and find a new pair wrapped around my cock, letting a new fantasy play out in my mind. Kelsey featured in many of them, but there were others, pretty girls from school back home, or celebrities, anything that tickled my fancy when I found myself in the moment.\n\nI had lost track of how long it had been since I'd jerked off into that first pair. All alone, the days seemed to run together. Taking a break from Netflix, and not quite past my recent bout of guilt at having defiled her underwear drawer yet again, I'd decided to go snooping around the rest of her flat. After everything I'd already done, snooping seemed pretty low on the list of things I should have felt guilty about. Hell, at this point, it didn't even register.\n\nI'd tried everything else I could to keep myself occupied; I was surprised that it had taken me this long to actively search her apartment for other goodies. I still didn't count opening that first drawer. I hadn't even meant to, so it didn't count as snooping in my book. Having already become familiarized with one of the drawers in her dresser, I opened the others. One by one they revealed everything you might expect in a girl's dresser. All assortments of clothing\u2014folded jeans and leggings, skirts, socks. One drawer was a pile of old compact makeup cases. Opening a few, I surmised that they were all used to the point that she had replaced them, but still contained enough makeup to prevent her from just throwing them out.\n\nNext to the dresser was her vanity with a mirror built onto the back. There was more makeup and brushes in the drawers. A small cabinet to the side held blow driers and curling irons and the like, all hanging neatly on hooks, and all plugged into a power strip at the bottom, waiting and ready for instant use.\n\nI wasn't finding anything I wasn't expecting, and it was kind of bumming me out. The whole point of snooping was to discover secrets. To be fair, the panties weren't that big of a secret. I figured she wore stuff like that, but I just didn't know exactly what kinds of girly things she was into wearing. Besides the sexy panties, everything else seemed extremely pedestrian.\n\nI made myself a small sandwich and watched a bit of Netflix while I ate and then decided to resume my search. The bathroom held nothing of importance. It was too small to contain anything more than the toilet and a small sink. Her closet was stuffed with dresses. It was about the same size as the cramped bathroom, and it seemed as if every inch of space had been accounted for when Kelsey had began stuffing it filled with her belongings. Two footlockers with simple locks sat beneath the dresses, a hanging shoe rack clung to the back of the door, and cardboard boxes were stacked on the shelves above like an expert level Tetris map. I had to pause in my inspection to admire how tight those boxes were packed. I didn't think I could have duplicated the feat on my own.\n\nRealizing I would never remember how the boxes were placed, I took a picture with my phone before pulling them down one by one to open them. Inside some of the boxes were small, expensive looking figurines. Each box contained a note, the city she got it in, and sometimes a name of the person who gave it to her. Some heavier boxes near the bottom held papers; copies of important documents\u2014boring.\n\nSomething that I found interesting was the contents of some of the larger boxes. They were made of sturdier material, and each one contained a wig, five in total. They were different colors and cuts, some long and full of curls, and other short and straight. A blond one was even braided into cute pigtails and bangs. This was definitely the sort of thing I was looking for. Looking at the wigs, I couldn't help but ask myself why she had them, or why she needed so many.\n\nThere must have been nearly twenty boxes spreading out from the closet door once I'd gotten them all down, but I wasn't interested in putting them back yet. Now that I'd found something intriguing, I wanted more. Grabbing the handle to one of the footlockers, I pulled the heavy case out of the closet so I could get a better look at it.\n\nThe trunk was three feet wide, made out of real wood, and painted black with brass hardware around the edges and latch. The lock holding it closed did not look too secure though. Finding a couple of Bobbie pins, I spent nearly an hour wiggling the pieces of metal in the lock before giving up. I didn't have the first clue how to pick a lock. They made it seem so easy on TV, I figured I could get into it easily, but so far it had kicked my ass.\n\nAnnoyed at being defeated, however momentarily, by a cheap lock, I peered back into a few of the boxes idly before coming back to the wigs. Choosing one at random, I carefully pulled out a short wig made of black hair and held it in my hands. The hair felt real enough, sliding easily through my fingers. A small patch on the inside had French writing on it, and I figured it was the name of the company that made it.",
        "Hefting it in my hands for a moment, I leaned over and slipped it onto my head, and turned to look into the vanity mirror across the room. A laugh escaped my lips, probably the first sound I'd made in days, and it made me jump. Shaking it off, I continued to look at myself. I looked strange. The hair was tousled, but I straightened it as best as I could, running my fingers through it. I looked totally different. The hair was a bob, longer in the front than the back. It covered my short hair perfectly, and after shifting it around, it fit rather snug. I found myself shaking the hair back and forth, and it held firm.\n\nI let out another laugh, as I brushed my hair back behind my ear. I didn't even look like myself. The cut of the hair accentuated my face differently, making my jaw line appear softer...feminine. I looked like a stranger. I found myself taking it off so I could look at myself again without it. I knew I wasn't the most masculine guy in the world, but did a haircut really make that much of a difference? I tried the one with long blonde curls, and I saw something different. It wasn't the severe look of daring angles, but instead pretty and open, but still very feminine. I tried on the others, and while I saw something different in each of them, I still couldn't see a guy staring back from my reflection.\n\nI knew I should have felt upset that I wasn't more manly, but that ship had sailed years ago when my friends went through puberty, getting taller and more masculine, and all I got was some peach fuzz and a full helping of pubic hair.\n\nIf I hadn't been bored out of my mind, I probably would have put it all away and forgot about it, but it was the most fun I'd had in over a week. I found myself switching back and forth between the wigs, messing around with the way each of them moved when I walked or jumped around. The long hair felt strange, and I was having a hard time with it constantly touching my neck. It looked cool, but I couldn't stand the way my neck began to sweat underneath all of that. The short black hair was fun and sassy, tickling my cheeks with every sway of my head, constantly making me smile.\n\nThe wig I spent the most time in though was the one with blonde pigtails. They dangled all the way down to my chest, and I had fun making them swing around, sometimes even spinning quickly, making them helicopter, or leaning forward and swinging my head side to side making them move like two pendulums.\n\nIf that was all I'd seen, it would have probably ended there, with me having a laugh and then going back to soiling Kelsey's panties like a normal perv, but I just had to know what was in those two footlockers that required a lock and key.\n\nIt took the better part of a day to figure out what the hell I was supposed to do with those Bobbie pins. After bending the tip of one into a right angle, I inserted my torsion wrench into the bottom of the keyhole and applied steady pressure. The other hair pin was bent into a little hook, and inserted at the top. After some fumbling, scraping the pick across the little pins for several minutes, the lock magically opened with a click.\n\nI paused for a moment, staring in wonder as I celebrated my success before moving past it and quickly ripping the lock from the hasp. Flinging back the lid, I peered inside to immediate disappointment. Right on top were a few of her yearbooks, and some photo albums. I felt cheated. Why the hell would she lock this stuff up? Before giving up completely I looked farther, removing the books to see what might be beneath. It was just more books, and I wasn't happy. It had taken a significant amount of time getting past that lock for something so pedestrian. I knew that I had loads of time to kill in the first place, but the letdown was making me reconsider even trying the second chest.\n\nAs I began putting everything back the way I had found it, one of the photo albums slipped from atop the one I was holding and fell to the floor. Landing on its spine, it opened up to a random page near the center. As I reached to pick it up, I saw the pictures inside and my eyes widened, first with shock, and then with lust.\n\nOn old fashioned prints, placed precisely beneath the protective film, were pictures of Kelsey, and in every single one of them she wore barely anything at all. My cock was instantly hard as I grabbed the book from the floor. I eased back off the balls of my feet and sat down on the hardwood, crossing my legs as I pulled the thick album reverently into my lap. I had hit the motherload.\n\nSlowly flipping through the pages, I saw picture after picture of Kelsey in the skimpiest of underwear, or the sluttiest of outfits. She was always alone, but someone had to be taking the pictures. In two whole spreads, Kelsey was tied tightly wearing nothing but the ropes meticulously and intricately binding her. I found myself admiring those pictures the longest. Even bound and bulging from the ropes, her modest breasts were spectacular. Her dark nipples were long and hard, just begging to be pinched and sucked.\n\nAfter the success of the first album, I searched through the others and I wasn't disappointed. There were more slutty outfits, featuring a schoolgirl in pigtails, a hot librarian with flowing red hair biting her glasses, and a truly slutty flight attendant with short black hair. I guess I had my answer about what she needed so many wigs for.\n\nI couldn't believe that Kelsey had let someone take pictures of her like this. I wasn't upset, just surprised. I would have never guessed that she would have been the type to have her own private softcore porno catalogue. It takes a certain kind of girl to let someone photograph them like this, and some of it was rather kinky.\n\nThe last photographs in the album were black and whites of her on her knees wearing nothing but a black dog collar and a leash hanging down. She was a blonde this time, with long flowing hair. Her arms were crossed over her breasts and her knees were together, concealing herself, but it was still the hottest picture out of all of them. She had her lower lip between her teeth sexily, and she was looking up towards something unseen. Her whole demeanor shouted submissive, and I'd never been more turned on.\n\nTaking great care with the book, I climbed to my feet and moved to the couch. I grabbed a fresh pair of panties from her drawer, black satin, and made myself comfortable on the couch as I began to slowly stroke my cock looking at that photo. In my mind, she was looking up at me, waiting for me to tell her what to do...waiting for me to order her to crawl over to me and suck my cock.\n\nA shiver ran through my body as my fantasy played out. I had the end of her leash wrapped around my hand and she let my cock rub against her cheeks as she nuzzled lovingly into my crotch. Tilting her chin up, I rested the tip of my cock on her lips, and her mouth parted, taking me in.\n\nThe longer she pleasured me, the tighter my grip became on the leash. I was holding it right next to the collar now, forcing her movements with tugs on the thin strip of leather. She just stared up at me with those happy obedient eyes, letting me do anything I wanted to her.\n\nShe had that same loving, needy look in her eyes that she'd had in the picture, and I couldn't help but wonder what that felt like, to give up control to someone so completely. I didn't have long to contemplate it because she was bobbing faster, desperate to feel my cum splash into her hungry mouth. I fucked into her face harder, and with a groan I shot my load into the wadded-up panties I held fast over the tip of my cock.\n\nPanting hard, I held my eyes closed as I let myself catch my breath, trying to hold onto the image of my fantasy as the blissful warmth of my orgasm began to quickly fade from my body.\n\nI woke to a mess. Black satin panties were glued to my skin by dried semen and there were boxes strewn all over the floor by the closet. The contents of the opened trunk still lay scattered close by and a photo album sat on the couch beside me, still opened to the picture of Kelsey wearing that sexy leash and collar that somehow drove me wild.\n\nI had the immediate urge to jerk off again, but I resisted. Instead, I carefully peeled the now crusty panties from my sensitive skin and pulled my pants up. After putting the underwear into the sink to soak, I got to cleaning up my mess. I didn't try to fit all the boxes back on the closet shelf, but I did move them neatly against the wall for the time being to get them out of the way. I did the same with the opened footlocker, replacing all the contents but the one album still on the couch.\n\nI felt like I was becoming some sort of deviant. I hadn't jerked off this much since that first year I'd learned about how fun my wiener could be. It was like I was going through puberty all over again.\n\nI tried to slow down my pervy spiral, but it didn't last long. Only a few hours later I was sitting on the floor in front of the second trunk, trying to open the lock. It took considerably more time than the first, and I had to keep taking breaks as the metal hair pins threatened to rub the skin of my fingers raw.\n\nI'd almost given up for the day when the lock finally clicked open and I sighed with relief. Lifting the lid, I hoped to find more pictures, but I was shocked at what I actually found.\n\nRight on top were a half a dozen dildos of different shapes and colors. Some were realistic looking, and others were of fanciful colors. A few even had suction cups attached to the base. My eyes were glued to them as my jaw hit the floor. I hesitated to move as my mind took it all in. After seeing the pictures, it was safe to guess that each and every one of these had been inside Kelsey before, and I had never been more sexually excited by a bunch of cocks in my life.\n\nI took them out one by one, examining them. None felt quite the same in my hand. Some were heavier, and others lighter. Even their textures varied widely. Some felt more like harder plastic, and others rubbery. A lifelike looking one felt as if it were covered in real skin, slightly mushy on the surface, but rock-hard underneath like a real cock. I was fascinated. After some time spent fiddling, I finally put the last dildo aside and got to the contents beneath.\n\nI hadn't even thought to wonder where all of the slutty outfits in the pictures were hidden, but I found them. Folded and stacked neatly atop one another were over a dozen sexy outfits, and right on top, resting atop a black corset with red ribbons, was the collar and leash. It felt like such a simple, innocuous thing, but in the picture it had appeared to be so much more. Turning it over in my hands, I thought about the way Kelsey had looked with the collar around her neck. She didn't have that expression in any of the other pictures, that desperate need. Fumbling with the clasp, I opened it and slipped it around my own neck.\n\nI couldn't say exactly why I did it. I had been curious about what Kelsey had been feeling in that picture, but why I felt the need to put it around my own neck still escapes me. Something just told me I should try it.\n\nIt took some time to thread the strip of leather back into the clasp, but I managed it. It felt snug around my throat, and I checked myself out in the mirror. I looked strange in my t-shirt and jeans, so I took them off and looked again. Thinking again, I went back to the boxes of wigs I'd stacked by the wall and pulled out the one with long flowing blonde hair\u2014the same one that Kelsey had been wearing in the picture.\n\nI took my time to set it correctly and ran my fingers through it to adjust it. When I looked back into the mirror, I felt my cock harden at the sight of me. It wasn't Kelsey looking back at me like I'd half expected, but someone else entirely. She was pretty, with wide innocent eyes and pretty lips. Her chest was flat, but she had a small waist that made her average hips appear wide. She had long looking legs and a cute butt, and her cock stood hard and erect, dripping precum just like mine.\n\nThis was something I'd never thought of being interested in, but I couldn't deny that I was attracted to the girl with the cock I was seeing in the mirror. I found myself stroking my shaft in front of the vanity, watching myself. I was so hard that it hurt, and I wanted to cum desperately. Try as hard as I might, I couldn't even get close. Unable to leave it, I tried harder, switching hands, and even grabbing a pair of Kelsey's panties for help. I found myself kneeling on her bed, facing her mirror, my body rocking and undulating as I touched myself, using every subtle movement of my body to try and drive myself closer to my release. One hand rubbed over my body while I stroked my cock, pinching my nipple and even reaching up to grip the band of my collar tightly.\n\nThat rough feeling of something around my neck did strange things to me, and I began to writhe as the pleasure built. I wedged more of my fingers between the leather and my neck, making the collar tighter around my throat as I jerked faster and faster. Desperate moans escaped my lips as I raced closer, until, with a blissful, thankful cry, I came.\n\nI watched the girl in the mirror as bursts of cum shot up to cover her naked chest.\n\nAs I came down, guilt and shame began to fill me, and I found myself pulling off the wig and frantically undoing the collar around my neck. I knew what I'd done wasn't exactly normal, but the shame felt weird. It wasn't for the way I was using Kelsey's belongings, or the shock I'd felt at seeing myself looking so feminine\u2014I knew that I wasn't exactly a very masculine guy. The part that truly made me so uncomfortable though, was how that collar had made me feel.\n\nWhen that leather was around my neck, I felt...charged, like my every sense felt heightened, and I felt slightly helpless and...slutty. It was a feeling that I had never associated with myself, and I liked it. It was a rush, and at the same time scary. It reminded me of the one time I'd ever gone bungie jumping. I had been standing at the edge of a cliff staring down. I knew that I was safe, that a bungie cord would stop me from hitting the ground, but that knowledge couldn't prevent the breathtaking sensation I would feel every time I thought about the fall.\n\nStill unable to believe what I had done, I cleaned myself and put on my own clothing before packing away the wig and collar. As I climbed into bed, I was determined that in the morning I would put everything back where I had found it and forget any of this had ever happened.\n\n*** *** ***\n\nI woke with a start, my heart racing in my chest.\n\n*BRING*\n\nHearing my phone ring again, I breathed a sigh of relief. My dreams had been...disturbing, and it was a relief to know that none of it had happened. For a brief moment I hoped that my memories from last night had also been a dream, but I knew better. Those felt more solid in my mind, and although they were more tame, they filled me with more shame.\n\n*BRING*\n\nMy phone rang again. Tugging back the covers, I grabbed my phone from the nightstand and checked the screen. It was Kelsey. A new surge of guilt flooded through me as I stared at the screen, wondering what would happen if Kelsey ever found out what I had done in her apartment, with her things. Unable to stomp down on that guilt, I tried my best to cover over it with a cool fa\u00e7ade.\n\n\"Hello,\" I said, answering my phone.\n\n\"Hey Cuz,\" Kelsey said, in one of her abnormally chipper moods, especially given her circumstance being locked down in a hotel in Prague.\n\n\"Hey Kelz,\" I said, trying to sound normal. \"How is it going over there?\"\n\n\"Eh...it's okay,\" she replied. \"I've got work to keep me occupied most of the time, but it can get pretty boring. How about you?\"\n\n\"Yup, pretty boring,\" I agreed quickly. \"I've just been doing the same thing every day pretty much. Lounging on your couch while watching Netflix. You should invest in a TV when this is all over.\"\n\n\"It would be kind of pointless to buy a TV after all of this,\" she said. \"Once you get back home, that place will be empty most of the time.\"\n\n\"You never know,\" I said. \"You gotta think about the future. What are you going to do if you're the one stuck in here next time?\"\n\n\"I'm sure I'll suffer through,\" she replied. \"Speaking of suffering,\" she said, pausing for a moment, \"I know this has really just gone to shit for you, so I've decided that you can drink my wine.\"\n\n\"Really?\" I asked hopefully. Wine wasn't my thing, but in my estimation, alcohol could only improve my situation. \"I don't want to overstep or anything. That's got to be a few hundred dollars' worth of wine, at least.\"\n\n\"More like a few thousand,\" Kelsey replied. \"And since when have you been worried about overstepping?\" she asked curiously. \"How long have we been family?\"\n\n\"A long time,\" I said, unable to summon the will to fight against the way she saw our relationship.\n\n\"Exactly!\" she said. \"So, drink up. Try to have a good time. What's mine is yours.\"\n\nThere was a slight pause, and just as I was about to thank her, she cut me off. \"Hey, that's the firm calling. I gotta go. I'll call tomorrow or something.\" With that, the call ended.\n\nAs soon as the screen of my phone went blank, I found myself thinking once again about the trouble I'd gotten myself into. I caught a glimpse of the stacked boxes and the two footlockers by the closet and remembered my resolve to put everything back where I'd found it, but first, I needed a drink.\n\nI knew nothing about wine. Frankly, I knew nothing about alcohol in general, except for the basics. You drink it, you get drunk. As far as different brands, or the different types, I was oblivious. Picking a bottle at random, I found her electric corkscrew and opened it up. I quickly proceeded to fill a regular drinking glass from the cabinet. After giving it a cautious sniff, I tasted it. It was strange, and had a slightly dry, bitter taste, but altogether, it wasn't bad. Being my only option, it was a pretty tolerable drink.\n\nAfter emptying the small amount I'd put in my glass, I filled it some more and continued drinking as I looked at some of the other bottles. Between trying to read all of the labels, and juggling my glass of wine, I'd somehow finished my first bottle. It was only when I moved to place the empty bottle in the recycling bin that I realized how drunk I actually was.\n\nAfter steadying myself, I came to the conclusion that wine was much more potent than the cheap beer I was used to. Grabbing another bottle, I carefully made my way to the sofa and eased myself down. I was going to have to take the next bottle much slower.\n\nFor a long while, I had forgotten all about my problems. The sun had gone down, and I could barely recall what I was watching on my phone as the wine did its job magnificently. I was numb and tingly, and I just felt great...until something I could not even recall reminded me of the dreams I'd had the night before.\n\nMy whole body shivered at the thought and I tried to push the thoughts away. The harder I pushed though, the more those images and feelings solidified. I felt a tingle creep down my spine, and my cock shift on its own in my jeans. I took a deep swallow of wine, trying to wash the feelings away, but it didn't work, and I was confronted once again by the things my mind had conjured while I slept.\n\nRecalling the dreams, I could remember exactly how I had felt during them, and that was what was terrifying. I had been a girl, the same girl that I'd seen in the mirror when I'd tried on that wig and collar. I had been sexy, and slutty, and oh so horny. I had also been at the complete mercy of men that I didn't recognize. Their hands had been all over my body, feeling me, teasing me. They each took their pleasure from me as they wished, and the worst part was I had loved every minute of it. I had begged for it!",
        "I knew that I was not gay. I was sure of that, but the thing that frightened me the most was, if I wasn't gay, then why had I been so turned on being dressed like a slutty girl, and letting myself be used by all of those strange men? Pulling myself out of those dangerous thoughts, I realized that I was once again sporting a painful erection.\n\nIgnoring my throbbing member, I climbed to my unsteady feet and made my way back to the kitchen. I'd obviously hadn't had enough wine if I was still thinking about this. A small voice in my mind tried to tell me that I might be overdoing it, but I was already far too drunk to take that voice seriously. I had a problem going on, and alcohol seemed like the perfect solution.\n\nAs I stood there, reading the labels on the bottles, I found myself slipping into those thoughts again. I knew it was wrong, those things I was feeling, but they tugged at me like a siren's call, and I didn't know why. Why did I have to feel those things? Was it something inside of me, or was it something about those things\u2014the wig and the collar? That was what had started it all, right?\n\nBefore I knew it, I was sitting on the floor in front of the trunk that held the collar. Ignoring the toys and slutty outfits, I went straight to that thick band of black leather with its silver clasps. Carefully holding it in my hands, I turned it over, examining it. It was just a simple collar, just like before. There was nothing to see there. I'd already known that, but I had needed to double check. Still, while I could not see a thing that could tell me why it had had such an effect on me, I felt a stirring deep in the pit of my stomach, like I was standing at the edge of that cliff once again, edging closer so that I could peer over the side.\n\nSnapping myself out of that hypnotic rush of emotions, I quickly set the collar aside and turned to the boxes of wigs, picking one at random. The flowing red hair felt soft in my hands, and it even smelled wonderful when I brought it to my nose, like flowers and something sweet.\n\nI caught a glimpse of red flannel from the corner of my eye. It was sticking out from underneath other outfits tucked away in the trunk. It was a short catholic schoolgirl skirt. I stared at that bit of cloth while I let the red hair slip through my fingers like silk, brushing it gently across my cheek.\n\nAn idea was forming in my clouded mind. Maybe if I just tried it out...just once, I would get it out of my system. Right now, I had no clue what it would really be like. My mind had just made up those feelings. If I actually tried it out, the whole fantasy would be shattered.\n\nThe solution to my problems seemed so simple in that moment. Standing, I returned to my forgotten bottle of wine on the counter, and quickly opened it. Disregarding the glass, I took a swig straight from the bottle for a bit of courage and returned to the open trunk.\n\nThings from there seemed to just happen, like I was a watching passenger in my own body. I pulled out the outfits from the trunk, and laid them out one by one, examining them. When I reached the schoolgirl outfit, I held on to it longer than any other as I turned the garments over in my hands. It was a short skirt, a small top with wrinkles from tie marks in the front, and a pair of white stockings. I stared at them a long time before I finally climbed to my feet and began stripping off my clothes.\n\nI stood there naked for only a moment before I scooped up everything I needed and took it to the bed. After setting the pile down, I carefully laid out each item side by side. In front of me, my cock sat ignored, aching with a drip of precum sitting on the tip. Finally making a move, I sat on the edge of the bed and carefully began rolling a white stocking up one leg, and then the other. The snug sensation around my thighs and legs left me feeling like someone was constantly touching my skin seductively.\n\nThe top came next. I felt a bit flat chested as the fabric bulged slightly away from my chest. Ignoring that little detail, I tied the ends just below my bust, and pulled on the blonde wig with the bangs and pigtails. For this outfit, I couldn't pass on the pigtails.\n\nI had purposely saved the skirt for last. I held it in my hands almost reverently before stepping into it and zipping up the side. That light fabric rested gently on my bare ass, and it caressed my sensitive skin with every tiny move I made. My cock still ached, tenting the front of my skirt ridiculously.\n\nI turned to the vanity mirror for the first time since I'd started down this road, and saw my reflection. I expected to look rather ridiculous, to laugh it off, and change back into my own clothes, but I didn't. I looked hot as hell. I had long slender legs, and a narrow waist. The short skirt flared out over my ass, leaving my cute butt exposed. My stomach was smooth and flat, and as my eyes finally focused on my face, I saw the smile on my own lips.\n\nI couldn't believe what I was seeing, and I had to reach my hand up to feel my face just to make sure that this wasn't some sort of trick. It wasn't. I watched as my hand traced my still grinning mouth. My blonde pigtails swayed as I turned my body from side to side to get a better look at myself.\n\nIt wasn't until I had turned to profile that I noticed the tip of my cock peaking out the front of my skirt. I thought that maybe seeing that might pull me out of whatever daze I was in, but it didn't. A surge of arousal flooded through me, and my cock jumped slightly before my eyes. In that moment, I was the hottest thing I had ever seen. If I could have split myself in two, I would have fucked myself in a heartbeat.\n\nBeing dressed like that...it felt good, and I didn't know if it was my level of intoxication, or some sort of inner surrender, but I didn't feel so bad about that. I watched myself in the mirror as I straightened my clothing and hair, admiring the way my cock bounced the front of my skirt when I moved. I felt so charged and aroused, but somehow, I had so far refused to touch myself. I just couldn't get enough of my reflection.\n\nAs I played with my hair, I thought about trying a different wig and glanced back to the pile of boxes by the opposite wall. Sitting on the floor next to the red wig was that black collar. Without even thinking, I retrieved it, and brought it to my neck as I returned to the mirror. It took a moment to fasten it into place, but when I was done, and I had moved my hands out of the way, I saw it sitting snuggly around my throat and any sort of resistance that I might have still clung to fled from me.\n\nMy breathing became shallow as my heart raced within my chest. The pleasure torturing my cock increased tenfold and I began to squirm, pressing my thighs together desperately. Before I could think it, my fingers were around my cock, and I was squeezing and stroking it as I squirmed in my white stockings. Standing quickly became too much, and I found myself on Kelsey's big soft bed, lying on my back as I pleasured myself, and let my hands rub all up and down my body.\n\nI had been so worked up, I came quickly and with barely any effort. With only a moment to catch my breath, I drank more wine and continued playing with myself. I couldn't stop myself if I had wanted to. I felt so high, and euphoric as I explored my body.\n\n*** *** ***\n\nI woke to the morning light spilling in from the windows in front of the bed. My head hammered from my hangover as I tried to recall the previous night. Prying my eyes open, I saw the mess I had made. Both trunks were wide open, and their contents scattered across the floor. Several of the wigs were tossed about, and there was a broken wineglass decorating the kitchen floor. Groaning, I cursed myself as I sat up in the bed. Kelsey was going to kill me.\n\nIt was only as I sat up that I realized what I was wearing, and all sorts of memories from the previous night came flooding back. My fingers quickly went to my throat, and I could feel the leather collar there. I moved frantically as I tried to get it off and threw it away as soon as I was free. I couldn't believe what I had let myself do.\n\nPressing my head into my knees, I groaned as I cradled my head in my hands and tried to rock myself comfortingly. Memories were still filtering in, and each one was just as shocking as the one before. I refused to look, but I was sure there was a dildo somewhere in the bed with me. I could remember clearly trying to stuff as much of it in my mouth as possible while I jerked my cock. Other images just as humiliating floated through. I felt like such a slut.\n\nUnable to sit there in that schoolgirl outfit any longer, I jumped out of the bed and began to take everything off. I had only gotten so far as removing the blond wig when my eye caught something in the window. It took a moment to focus, but when I did, I froze solid in mid crouch. There was a man standing in the window of the penthouse across the street...and he was staring right at me.\n\nPanic paralyzed me. I had gotten so used to Kelsey not having curtains in her flat that I had stopped thinking about it altogether. How could I have let this happen? My eyes were still locked with the strange man. He was tall with dark skin, and he was wearing nice black slacks and an unbuttoned dress shirt. Somehow my eyes seemed to soak in those details, like the little smile on his lips. I could barely make out the other details on his face, but I was sure he was laughing.\n\nFinally, feeling returned to my body, and I bolted. Snatching the pile of my discarded clothing from the night before, I dashed for the cramped bathroom and slammed the door shut behind me.\n\nI had really messed up. I should have never let myself get anywhere near that situation. And how the hell had I forgotten about the curtains? Who else could see me? What else had I done that people had witnessed? I felt slightly sick to my stomach as I huddled there in the dark, worrying about people knowing what I had done. Everyone was going to think that I was some kind of fag.\n\nI spent nearly an hour sitting on the cold bathroom tiles before I realized that I still hadn't changed out of the schoolgirl outfit. Getting to my feet, I quickly stripped and put on my normal clothes.\n\nI didn't want to leave the bathroom, but I didn't really have a choice. I couldn't stay in there forever, and I'd already missed three calls on my cell phone. It was not like the guy across the street was going anywhere either, there was a nation-wide lockdown, if not global by now.\n\nIt took great effort to collect myself before opening the bathroom door. Determined to ignore the strange man, I kept my head down and found my phone on the kitchen counter. Keeping my back to the windows, I checked my missed calls and messages. Kelsey was beginning to worry about me. Sighing, I messaged her back, telling her that I was fine, and that I had just slept in. a moment later my phone rang.\n\nIt was Kelsey. I had to answer it now, she knew that I was there. What was I going to tell her, that I was too busy? I'd been bored out of my mind for over a week. That was what had gotten me into this mess in the first place.\n\nGiving a defeated sigh, I answered. \"Hello.\"\n\n\"Hey, Cuz. How's it going?\" she asked. \"I've been trying to reach you all morning.\"\n\n\"Yeah, I was sleeping.\" I lied.\n\n\"Until eleven o' clock?\" she asked suspiciously. \"You didn't try to drink all of that wine last night, did you?\"\n\n\"Of course not.\" I lied again. \"I just stayed up late is all.\"\n\n\"Really?\" she asked. \"What did you get up to?\"\n\n\"I uh...\" I fumbled for a moment. \"Just watching Netflix. There was a documentary that looked interesting.\"\n\n\"Is it the one about the guy with a tiger?\" she asked.\n\n\"Uh...no,\" I said. I hadn't watched that one, and the last thing I wanted was for her to start trying to talk about it with me. \"How are things over there? Does it look like they will be lifting the lockdown soon?\"\n\n\"Not at all,\" Kelsey said with a sigh. \"It's actually getting worse. More businesses are being shut down. More and more restrictions on movement are being put into place. It looks like this might last for a little while. At least you have a good view though. I'm stuck staring at a parking structure right outside my window.\"\n\n\"Yeah...\" I said, not exactly enthused about the view at the moment. \"Listen, I'm getting ready to make some lunch. Can I call back later?\"\n\n\"Of course. You have fun,\" she said. \"Later, Cuz.\"\n\nI set my phone down on the counter and looked around at the mess still strewn across the floor. Things had gone way to far, and I needed to put a stop to it. Picking a spot at random, I began packing things back into their boxes and trunks as neatly as I could, trying to make them appear exactly as they had before I had violated their contents. I even retrieved the outfit from the bathroom and put it back as well.\n\nWhen all the boxes were closed, and both of the locks on the trucks were once again secure, I began packing them back inside the closet, making sure to use the picture I had taken as a guide. Before long, I was glad that I had the forethought to snap that photo. Each box seemed to have the perfect position among the others in order to make them all fit. The very last box slid into place at the very top, wedging snugly between the boxes below it and the sheetrock ceiling.\n\nSince I was on a roll, I decided to continue with my cleaning adventure. I swept up the broken glass in the kitchen and kept right on going. When I finally slowed to a stop, I had swept the entire hardwood floor of the apartment and wiped down every other surface with household cleaner. All of the dishes were also done and put away, and a large bag of trash was sitting outside the front door waiting for collection. Everything was exactly as it had been when I first arrived.\n\nInstead of going back to Netflix, I decided to change things up. I bought a couple e-books off Amazon and began reading them on my phone. Against every effort, my gaze eventually went to the window across the street, and I was grateful to see that the stranger wasn't still standing there staring at me. In fact, to my great relief, he was nowhere in sight.\n\nThere was no denying that that man had seen every embarrassing thing, but I was grateful to not have to meet his eyes. There was no telling how bad things would turn out if he decided to tell people about me. I didn't live in the biggest town back home, and if rumors of what I'd done found their way back there, everyone would know and my life would be over. Keeping a close eye on my wine intake, I let it settle over me in an effective attempt to quiet the scared voices.\n\nWith enough wine, and distraction from the books I was reading, things didn't seem to be as bad as I initially imagined. That was until I was getting ready for bed.\n\nI decided to call it an early night. I was still a little wrecked from the drinking the night before, and I wanted to make sure that I could fall asleep while I was still teetering in that drunken sweet spot. I was just getting ready to climb underneath the covers in my boxers and a t-shirt when I saw an orange glow from a light across the street.\n\nThat strange man was sitting in a chair that he had pulled over to the window, and there was no mistaking that he was watching me. Doing my best to pretend that I hadn't seen him, and that he didn't even exist, I climbed into bed and turned off the lamp.\n\nThrough slitted eyes, I watched as he watched me. I couldn't say how much he could see with the lights off in the apartment, but his eyes seemed glued to a single spot...me. I refused to move, to give any indication that I knew he was watching. He was almost like an onyx statue as he sat there staring.\n\nMy buzz had begun to fade, and I still hadn't managed to fall asleep. I held my body still, and tried to keep even breaths as I watched back through slitted eyes. I breathed a small sigh of relief when he finally rose to his feet and walked back from the window into the darkness. It appeared that he had given up for the night. I was just about to finally relax when he returned with something in his hands.\n\nThe stranger sat once again, and it appeared that he was doing something with his hands. A moment later he pressed a piece of paper to the window. On it was written one word. \"More\"\n\nI felt my cheeks flush with mortification. He wanted me to dress up again. This guy obviously knew that I was a man, and he wanted me to dress up as a slutty girl so that he could watch. My heart raced, and my stomach churned at the thought. Humiliated, I pulled the thick comforter up over my head and shut the stranger out completely. It had taken a long time to fall asleep, but eventually dreams crept up on me.\n\n*** *** ***\n\nI woke from another embarrassing dream. My face was buried into my pillow as I lay face down on the bed. My cock ached painfully as blood continued to surge toward it even as it lay bent awkwardly beneath me. As I rolled to the side to relieve it, I felt my hand clutching something to my chest. It seemed that I had found the pink dildo that I had forgotten about from the other night.\n\nDropping it quickly, I pulled one of the pillows over it just in case my watcher was at his post again. I was going to need to pull the trunks out and figure out which one it belonged in. It was not something I was looking forward to. I had put all of that stuff away for a reason after all.\n\nWhen I finally deigned to crawl out of bed, I noticed the man across the street was absent, but the sign still remained, taped to the window now, a constant reminder that he wanted me to entertain him. Jerking my head quickly, I tried to put those thoughts out of my mind.\n\nI was determined to keep myself distracted, to try and climb back to some semblance of normalcy, but I kept finding my eyes sneaking darting glances to the window. I had even sunk to turning the sofa away from the window to keep it out of my eyeline, but even out of sight, it was not out of mind. I could swear that I could feel his eyes on me\u2014watching, waiting.\n\nThe worst part was how those invisible eyes made me feel\u2014like a filthy object. I hated it, but every time that shame surged, so did the blood to my cock, making it stiffen painfully in my jeans, demanding that I free it and satisfy its perverted needs.\n\nI had spent hours on Netflix, staring blankly at the screen of my phone as scenes played out that I failed to follow. My mind was filled with turmoil, blocking out everything else. How could I let something like this happen to me? And how had it become something so powerful\u2014like a looming shadow\u2014come to cover my mind, threatening everything that I had once believed? Even just thinking about the things I had done made my heart flutter and my breathing quicken a step. It was as if I was some sort of junkie, jonesing for a fix.\n\nIt was exhausting chasing all of those thoughts in circles. It wasn't until late evening that something shifted. I had been going over the worst-case scenarios once again\u2014if anyone back home found out about the things I had done. What if the man across the street told someone, or if he took a picture, and someone I knew saw it?\n\nI had gone over this many times before, but for some reason, this time, I thought about how exactly he might tell. It was only then that my mind quieted, drawing a blank. I had no clue who this person was. Hell, I barely had a vague idea of where we were\u2014London somewhere. No one I knew back home had even left the US before. It was the first time I began to ask myself if I was overreacting.\n\nMy head slowly turned to peer through the window from over the back of the couch. That word was still taped to the window across the street, \"More\". The lights were on in the penthouse, but I could not see any sign of the man that lived there.",
        "As I gazed through my window and into his, I found myself thinking, what if I did it...just once? My heart skipped a beat. No one would find out, I told myself. And after some checking, I discovered that as long as I didn't stand right up against the window no one else would be able to see. Only him.\n\nI didn't know why I was suddenly trying to talk myself into it, but the longer I played it out in my mind, the more aroused I became, and the more determined I became to do it...just one more time. All I was doing was masturbating really. As long as it was only me, it couldn't be gay.\n\nDropping my phone, I got up and found my feet carrying me to the closet. In no time, the trunks were pulled out and I was twisting the ends of bobby pins in the locks. With only a little effort, they opened for me. It wasn't until I found myself going through the slutty outfits, brushing the soft fabrics against my cheek, that I realized that I was actually going to do this. I was knowingly going to turn myself into a sissy, and let that man watch me touching myself.\n\nIt took me much longer to get ready this time, almost as if I was stretching it out for some reason. The entire time my heart raced. I put some soft music onto my phone and poured a glass of wine. I made sure to take slow sips, not wanting to become so drunk again.\n\nI chose to be a redhead this time, with long flowing hair that would trail down my chest and back. It took a while to settle on an outfit. There were so many to choose from, but in the end, I decided on the black corset with the stockings and garter belt. I took everything that I thought I would need and went into the small bathroom.\n\nOn my way in, I still hadn't spied the man across the street, and if it wasn't for the sign taped to the window, I might have thought that I had originally hallucinated him somehow.\n\nWith the door shut, I tore off my clothes quickly, but when it came time to dress, to transform myself, I was painstakingly slow. Not only did I want to get everything just right, but I wanted to let myself savor this. This was my last time after all.\n\nI started with the black stockings, slowly letting them glide up my legs, enjoying how they felt wrapped around my sensitive thighs. When they were both in place, I snapped the garter belt around my waist and attached the straps to hold the stockings up. I took the corset in my hands and felt the hard boning and satin in my trembling fingers. I was equal parts excited and terrified as I struggled to clasp it around my body. It took some minor adjustments to the laces that ran down the back before I could fasten all the little hook-like clasps that ran up the front.\n\nAs I stood there staring at myself in the mirror I hesitated. A beautiful and sexy redhead stared back at me. It wasn't the woman in my own reflection that caused me to pause, but the soft pale skin around my neck. My costume was not yet complete, and the scales of excitement and fear began to tip as I reached for the black collar.\n\nI was sure this was it, the thing that had broken me somehow. It had all just been a game until I had felt that cool leather around my throat. It was frightening that something could hold so much power over anyone, but I knew I couldn't go without it. The truth was, that collar was the true outfit. Everything else was just there to make me pretty.\n\nI closed my eyes as I raised the collar to my neck and held my breath as I lifted my red hair and fastened it into place. As soon as I felt that leather on me again, precum began to leak from the tip of my cock, dripping long streamers to the floor.\n\nReaching down, I touched myself, trailing soft fingers up and down my cock until finally wrapping them around my shaft and letting out a trembling coo of delight. I stroked myself slowly, savoring the feast I had laid for my eyes, and my flesh.\n\nI was about to burst when I stopped myself abruptly, taking in ragged breaths as I gripped the sink with both hands trying to calm myself. I hadn't done all of this just to get off hidden away in the bathroom. I made a point not to think about him, but he was the real reason for all of this work. My body craved the attention like this. It needed someone to watch, to set my anxiety aflame while I made myself an object for their desire.\n\nAs much as my true goal was outside of that door, I was having a hard time finally making that move. Instead, I preened needlessly in front of the mirror, adjusting my corset, and making sure the straps on my stockings were straight. I even found a tube of bright red lipstick in the medicine cabinet and spent twenty minutes applying and reapplying until I was sure it looked perfect.\n\nEventually there was nothing else I could convince myself that needed doing, and it was time to either go out into the flat, or change back. The mess of precum dribbled onto the floor and the side of the sink told me that the last one wasn't an option.\n\nI tried to take a few deep breaths to settle my nerves, but in the corset it was impossible. I had to settle for straightening my back and giving myself a reassuring nod in the mirror. Gripping the handle tight, I eased the knob and let the door swing open.\n\nI stepped gently from the bathroom into the open on my stockinged feet. I instinctively looked up toward the window, but no one was there. I had half expected him to already be standing there waiting for me. It felt strange to be disappointed by his absence, but he wasn't everything. Even without him there, I was still incredibly horny.\n\nPadding carefully to the bed, making sure not to slip on the hardwood floors in my stockings, I climbed onto the soft mattress and fluffy pillows and comforters. I took a moment to adjust some pillows, and settled in, leaning back against the headboard, facing that wall of windows.\n\nToo eager to sit and wait for him, I closed my eyes and began touching myself. I let my fingers slip through my hair, and trace over my body, feeling not only my warm skin, but the soft sexy fabrics that clung to me. I teased and explored until finally I grasped my cock firmly in my hand and gave it a firm squeeze. A moan escaped my lips\u2014almost a purr.\n\nInstead of just focusing on my cock like I would have before, I pulled my whole body into it, rubbing and undulating, enhancing my pleasure not only from my body, but my mind. I felt so dirty and slutty. I thought about someone clipping the leash to the collar around my neck and claiming me, owning my body. Another moan shot from my lips as a particularly strong jolt of pleasure rocketed through me at that thought.\n\nDespite my need for release, I found myself stretching it out, stopping moments before I would cum so that I could cool off just enough to keep going.\n\nWhen I finally opened my eyes again, I jumped in surprise. He was standing at the window across the street watching me with intent. I lay there frozen for a moment, unable to move before I could force myself to keep going. My movements started up stiff and jerky, but before long I found myself falling into my pleasure.\n\nIt was too dark to see his eyes, but I was sure he was enjoying what I was doing. Knowing that he was there watching ramped everything up to eleven, and instead of just pleasuring myself, I exaggerated my movements hoping to somehow share my own pleasure with him.\n\nAs if my plan had worked, I caught a glimpse of movement. He was unbuckling his belt. My heart skipped as I watched him unfasten his pants and reach inside. Slowly he pulled out his hard cock and began stroking it as he leaned against the window with his other arm above his head.\n\nMy mouth went dry as my eyes locked onto his cock. I could barely make out the outline, and it was impressive\u2014larger than my own by a considerable margin. My free hand gripped my collar tight as I let my stroking become faster.\n\nI strained my eyes to see more, but he was shadowed, blocking all the light from inside of his penthouse. Desperate to get a better look, I sat up and climbed onto my knees and crawled to the very edge of the bed. With my eyes fixed to his cock, I stroked faster, my hips humping into my hand, as I slowly twisted the collar, tightening it around my throat.\n\nPleasure surged through me, and my moans ricocheted off the walls and floors like an echo chamber of carnal pleasure. I needed this. God, I needed to cum. I couldn't hold back anymore. I felt that if I tried to stretch this out any longer, I might die from madness. I stroked faster, feeling the sweat from my effort trickle down the back of my neck.\n\nAs I felt myself coming near, I watched as his hand began to move faster as well. He stiffened for a moment, and then globs of white goo splattered the glass at his waist. Seeing him cum while he watched me sent me over the edge. With a couple last strokes, I came, shooting wildly. Rope after rope sailed over the edge of the bed, reaching for the window but never quite making it. I almost thought the torrent would never end. After the seventh rope of cum quaked through my loins, I lost count. When it finally stopped, the wood floor was decorated with my seed, and the rest coated my hand in a warm sticky mess.\n\nWith my breath coming in short strangled gasps, thanks to the tight corset, I fell onto my back and tried to catch my breath as I bathed in my bliss.\n\n*** *** ***\n\nI had told myself that it would be my last time, but the pull was too strong, and the more I endured, the weaker I became to resist. One more turned into another one more, and that became just a little while longer. Before I knew it, I had fallen headfirst into an addiction I didn't know how to break. I loved dressing up, and I loved getting off from it. I even loved the idea of someone knowing about the naughty things that I did.\n\nAt first, I only dressed up at night, just before bed. I would get myself all dolled up and pretty, and get off with the man from across the street, and then fall asleep. In the mornings I would change back, and go about my day. After one of those nights, the next days always seemed so much easier, like those few hours had somehow pushed down those things I was craving.\n\nAbout a week into my new sissy routine, I found myself wearing Kelsey's underwear underneath my clothes. It was often some of the skimpiest pairs I could find, relishing in the naughtiness of it all as I went about my regular day.\n\nAfter a month, I didn't even bother to change back into my own clothes. Instead I would rummage through Kelsey's belongings to find something suitable for the day. Unlike my nighttime attire, I veered away from the sexy, or slutty, preferring the cute dresses, or a skirt and top. Nothing too conservative, but I wasn't choosing it to get me off.\n\nI spent a lot of time switching through the different wigs. Each one made me feel like a completely different person, and I had an idea that it was the same for Kelsey.\n\nIt didn't take very long for me to decide to shave my body hair. It was only light peach fuzz mostly, and likely nothing that the man across the street could see, but I did it anyway. There was surprisingly little inner resistance in my mind either as I sat in the claw foot tub running a razor across my legs.\n\nAs things in my flat changed, things across the street stayed the same. I rarely ever saw my stranger during the day, but it was a guaranteed certainty that he was there in the nights, playing his part in our little game from his own distant window.\n\nAs for Netflix, I still watched it, but I had other things to occupy my time as well. I had begun messing with the half-used makeup cases. He would never be able to tell the difference, but I enjoyed making myself pretty.\n\nKelsey's heels were just a hair too small for my feet, but that didn't stop me from trying them on. Some days I spent most of my time walking around her flat in them, enjoying the little game I had come up with called 'don't fall on your ass'. Every time I stumbled, I had to drink more wine.\n\nAs far as the wine reserves, I had to eventually start rationing my drinking. As big as Kelsey's wine rack had been, it wasn't endless. I had ordered some replacements, and groceries from a delivery service, but I still felt bad about how much I had burned through.\n\nMy dad had quickly taken pity on my situation and wired some money into my account so that I wouldn't starve or anything. I'm sure my parents wouldn't be thrilled if they ever found out that I wasn't exactly spending it on only the bare necessities. And I doubt my father would have thought that a pair of high heels that fit his son would be necessary. Thankfully, I had my own bank account and no paper statement that would accidentally be delivered to my parents.\n\nKelsey and I continued to keep in touch almost daily for the most part. It became less and less awkward talking to her while wearing her clothes and panties, or painting my toenails while she was on speakerphone telling me about what was going on with her work, and the little bits of news she had heard about the virus (I wasn't exactly paying attention as closely as I should). That was how it snuck up on me.\n\n\"They're finally lifting the flight restrictions in a few days!\" Kelsey said excitedly as a greeting.\n\n\"What?\" I asked shocked, holding very still so I didn't spill the bottle of scarlet nail polish I had balanced on the sofa cushion.\n\n\"Right? It's only been three months!\" Kelsey said sarcastically. \"They are going to start letting people travel again, but only to go to their home countries,\" Kelsey continued. \"A lot of tourists have been stuck in foreign lands, like you, and as long as they aren't showing symptoms, they will be allowed to fly home.\"\n\n\"That's great!\" I said after a moment, trying to sound excited about this new development.\n\nKelsey kept on talking while I stared at the red paint drying on my toes. It had been fun while it lasted, but if I was going home in a few days, what was the point of finishing? After I had tumbled into this, and finally let myself enjoy it, I had told myself that I would leave all of this behind me once I went back home. It was a complication I didn't need in my life. People wouldn't understand it. It wasn't like I was gay or anything. I just liked dressing up and having fun.\n\n\"Did you hear me?\" Kelsey asked.\n\n\"What?\"\n\n\"I said that it might take me a while to get a flight back to London,\" she said again. \"I am not in Prague as a tourist, so I'm a little further back in the line. It is looking like a week maybe.\"\n\nLooking around her flat I was grateful for the extra time. I hadn't exactly been keeping it in tip top shape. The amount of laundry I had to do was just short of staggering if I wanted her clothes to be fresh and clean when she arrived.\n\n\"How do I go about getting a flight back home?\" I asked. I didn't have a clue where to start with any of this.\n\n\"I'll send you the info in an email. You just call the number and tell them that you are stuck in a foreign country. You tell them your name, the country you are in, the country you are from, and the flight that you arrived on. They will be able to sort it out from there,\" she assured me.\n\n\"Alright, thanks,\" I said. \"I'll make sure to do that as soon as you send me the information.\"\n\n\"You know, I am really sorry about all of this,\" she said once again.\n\n\"You don't have to be,\" I told her. \"Believe it or not, I actually had some fun here.\"\n\nShe laughed. \"Stuck all alone in my flat? I'm sure you had a blast. Still, I'm going to get you a flight back here so we can do it properly. It will probably be for the Christmas break though; the way things are going.\"\n\n\"I told you that you didn't have to do that,\" I reminded her.\n\n\"I know,\" she said. \"Listen, I'm going to let you go. I have my personal trainer calling soon for my workout.\"\n\n\"Have fun, Kelz,\" I said.\n\n\"You too, Cuz,\" she said before hanging up.\n\nStaring down at my toes, and the brush in my hand, I decided to finish. I still had a few days, and I didn't feel like wasting them. As soon as the paint dried, I started working on the laundry situation. While it ran, I called the number that Kelsey had sent me and got put on a wait list for a nonstop flight heading back to the States.\n\nMy nighttime fun with the man across the street continued that night. Knowing that this was all finally coming to an end had hit me harder than I thought it would, and I didn't want to waste what time I had left.\n\nI decided to be the schoolgirl again. It had been a long time since I had become her, and it felt like coming full circle in a way. It had been the first thing I had worn for him. It hadn't been intentional, but he had still seen it.\n\nWhen I exited the bathroom, he was already there waiting for me. He sat in a cushioned chair, shrouded slightly by the dark, the whites of his eyes catching the meager light and shining as he watched me.\n\nMy heels clicked on the hardwood floor as I walked slowly toward the window in front of the bed, making sure to let my hips sway provocatively. Seeing him shift in his seat, and adjust his pants sent a thrill through me. It wasn't anything like it had been those first few times, but it was exhilarating all the same to see that I had that kind of effect on him.\n\nI trailed a finger along the glass as I continued my circuit around the foot of the bed before turning and walking away, giving him a good look at my ass swaying. He was in for a treat today. I had been fantasizing about doing this for him, but something had been holding me back. If this was all ending, I didn't want to walk away without a bang.\n\nIt had been under that pillow since the early days, and it was still there as I slipped my hands beneath it. It was a bright pink dildo, seven or eight inches long. Holding it reverently, I pulled it free, making a little show of it for my friend.\n\nI walked back to the foot of the bed and sat on the edge, spreading my legs so he could see the bulge in my panties underneath my tiny skirt. Holding the dildo in both hands, I trailed it along my thigh, bringing it up my stomach and between my small breasts. Past my collar it traveled, painfully slow across my skin as it reached for my chin. When it finally touched my lips, I gave it a long kiss.\n\nMy eyes watched him, and he must have liked what he was seeing, because his cock was already free, and he was using both of his hands to stroke himself. I was so turned on; I didn't even hesitate to open my mouth and let that hot pink cock slide into my mouth.\n\nI moaned around that rubber flesh and felt my panties become damp as precum oozed into the fabric. Reaching down with one hand I freed my cock and began stroking as I sucked on the dildo. I immediately began trying to fit more and more of it inside my mouth, feeling it bumping against the back of my throat. I could feel little tears forming at the corners of my eyes, threatening my mascara, but I was determined. The fist around my cock pumped faster and my moans grew louder with my pleasure.\n\nMy eyes never left him, and I felt like such a slut for him. Just the thought of it being the real thing in my mouth sent a tremble through my body making my knees weak. I let myself slip off the edge of the bed and crawled quickly to the window. Licking the bottom of the dildo, I stuck it to the glass and began sucking it for all I was worth. One hand fisted my cock desperately, and the other gripped my collar, putting on the pressure just how I liked it, driving me faster and faster towards that dangerous release.\n\nMy watering eyes blinded my view of him, but my imagination easily covered for the lack. I forced my mouth forward as hard as I could, and after much resistance, there was a dull pop and the dildo slipped into my throat, letting my nose finally touch the cool glass. I held there, unable to breathe as I raced toward my climax.",
        "My fist flew along my shaft and tears dripped down my cheeks. My head became light as my pleasure peaked, and I was desperately holding on to consciousness. Just as I thought I might not last, heat lightning cascaded through my body and a moment later I erupted in blissful relief.\n\nAs my cum splattered the window in front of me I finally backed off the dildo, gasping for breath as globs of saliva dripped from my chin, making a mess out of my top. Leaning against the window, I caught my breath before finally looking up to see my stranger.\n\nHe was standing at the window, his cock still out and his cum painting the glass. He wasn't touching himself, but instead holding a new sign. \"Eat it.\"\n\nI hesitated, staring at my cum dripping down the window in front of me. Looking back up at him, I extended a finger and trailed it through the semen and slowly brought it to my mouth. I knew what I was about to do was at least a little gay, but I still parted my lips and let my finger inside. I closed my lips around my finger and slowly pulled it out.\n\nI had expected it to be disgusting. Girls always talk about how bad it tastes, but it really didn't taste bad. It wasn't candy, but it wasn't repulsive either. It was actually quite interesting the way it felt on my tongue as I swirled it around before swallowing.\n\nRealizing how okay I had been with tasting cum, I was quickly awash in embarrassment. Now that I was spent and satiated, I wasn't sure how I felt about what I had done. Blushing, I climbed to my feet and turned from the window. I shut off the light, shrouding the apartment in darkness, and crawled under the covers, not even bothering to undress.\n\n*** *** ***\n\nThe next day I woke to people walking around on the street in front of the apartment in a sort of celebration. It seemed that they had loosened the restrictions finally, but I had no desire to go running around the city. Instead, I picked out a nice blue dress and slipped into it before checking my emails for one from the temporary administration that had been assembled to handle travel. I had received information about my flight, and I was scheduled to leave the following afternoon.\n\nThings felt like they were moving incredibly fast. With so little time, I stepped up my efforts to get Kelsey's apartment and belongings back the way I'd found them. While I waited on laundry, I called Kelsey. She was still a ways back on the list for her own flight, and she wouldn't be arriving back until after I had already gone. I wished that I could have seen her, but strangely, I felt like I would miss other things more.\n\nAfter getting all but the bare necessities put away, I sat watching people out on the streets as the sun slowly drifted towards the horizon. I was waiting patiently for my last night to begin, for the time when the sun finally passed over the buildings to the west and darkened the sky outside my window and I would begin truly getting ready.\n\nI adjusted the hem of my pretty dress, and admired my painted toes peeking out from my black heels. I didn't want to leave this behind, whatever this was, but I couldn't take it with me, and when I eventually came back to visit Kelsey it would be as far out of reach as ever. Somehow this train wreck of a vacation had turned into the perfect storm, allowing me to find something I truly enjoyed. It took a long time to feel so comfortable with it, but now I could at least admit it to myself honestly. I loved dressing up like a girl. Not just because of the sexual nature (not that it didn't add its own spice), but because it felt so natural.\n\nI knew I wasn't a girl. I was just a guy who looked pretty in their clothing, but somehow that was enough. I really wasn't looking forward to letting it go.\n\nDistracted by my thoughts, I didn't notice the sky outside begin to darken so drastically. When I peered up, I saw the lights from all of the windows across the street shining brightly in the increasing darkness. I quickly climbed to my feet, worried that I was running late for my date and set down my empty wineglass.\n\nMy familiar stranger was already standing at his window, and my heart quickened, urging my feet to haste. Before I could rush away to change into my more provocative nighttime attire, I noticed a new sign pressed to the window replacing the original one that simply sated \"More.\" The new sign held two words. \"Come over.\"\n\nMy heart stopped in my chest.\n\nMy feet were frozen to the ground while my mind tried to process. He wanted me to come over? To leave the apartment? There was no doubt which version of me he wanted\u2014the girl. I could still hear the ruckus of voices below on the street, crying their freedom from isolation at last. So many people, so many eyes that would see.\n\nMy mind tried to scream that I should stay inside. That If people saw me, they would see right through my attire and know who I really was. I flattened that voice quickly and violently, smothering it with more important thoughts like what I was going to wear.\n\nAn excited smile pulled at my lips as I finally turned from the window. I was torn between running to the trunks that held the naughty things I'd become accustomed to, and the rows of dresser drawers that held Kelsey's everyday clothes. Whatever I wore, I would have to walk past all of those people in the streets. So, the question came, who did I want to be?\n\nI had come to love being the filthy slut, but I knew I would never have the nerve to leave the safety of Kelsey's flat dressed so provocatively. At the same time, I didn't want to be homely. I wanted to be sexy.\n\nWhile I failed to think of what to wear, I utilized that time for other necessities. Turning the taps on the claw foot tub, I let the water begin to fill as I grabbed the dressing screen and positioned it for a little privacy. I didn't even know if he was still watching, or why I felt the need for privacy now after months of being on full display for him.\n\nAfter shaving my entire body and bathing in lavender and jasmine soap, I dried and began getting ready. While I had been running the razor across my skin, I had finally come up with an idea. I didn't need to be a slutty schoolgirl, or a naughty flight attendant to be sexy. Kelsey had some very nice lingerie, and I wouldn't need to walk down the stairs and across the street like that.\n\nRummaging through Kelsey's closet and drawers, I found the things I needed and brought them into the bathroom. After nearly a half hour of heart pounding work, I was ready. Taking a look in the mirror, I paused for one last once over of my appearance. The cute black cocktail dress looked both fun and respectable on me, but I could feel the lingerie beneath, secretly teasing my senses. My many hours playing with makeup had given me quite a deft touch with both pencil and brush, and my big innocent eyes looked both sweet and alluring. It was only after adjusting a few locks of the flowing blonde hair on my head that I was finally satisfied, and step back out into the flat.\n\nThe lights from the penthouse across the street glowed a dim orange, casting everything in deep shadows. I couldn't see him, but I was sure he was there...waiting for me. I grabbed a purse I'd found in the closet and dropped my phone into it, as well as something else that was very important. Hoping to prevent myself from overthinking what I was doing, I started a quick determined stride for the door. Before I knew it, I was on the other side of that door, and I was striding down the hall and then the stairs.\n\nI could barely hear the click of my heels as I crossed the crowded street filled with celebrators. As soon as the door had opened to the outside world, fear had spiked inside of me, but I never let my stride slow. I kept my head straight and refused to look at any one person as I clutched tightly to my purse.\n\nThe crowd felt endless, and time seemed to stretch as I passed through the street. When I reached the sidewalk on the other side, I found myself staring up toward the penthouse looming above me. Shaking off the paralyzing anxiety that threatened to grip me, I pulled open the door to the building and stepped inside.\n\nTo the right, there was a vacant desk that should have occupied a doorman, and across the white tiles at the end of a wide entryway was a single elevator. I walked toward it, hearing my heels clack loudly off the tiles and reverberate off the walls. I pressed the only button next to the elevator and with a ding, the doors opened.\n\nOnce inside I pressed the button for the penthouse and waited for the doors to close as my blood pressure began to rise dangerously, pounding in my ears. I watched the lights above the door slowly move from left to right as I passed one floor after another. My hand fidgeted with my purse nervously as I neared the penthouse. One floor before, I opened my purse and grabbed the collar and leash that were inside. With trembling fingers, I fastened the collar around my throat and clipped the leash to one of the silver loops in the front.\n\nAs the bell rang, I quickly arranged the leash, bunching it up and hiding it casually beneath my crossed arms. The doors opened to a moderately sized room with fancy padded benches along either side. The only door sat opposite of the elevator.\n\nAs I stood outside that door, terrified and excited, I realized I was addicted to this. Whether I had always had this hidden inside of me, or I had created my addiction on accident, was irrelevant. I was a dirty little sissy. As much as I tried to tell myself that I didn't know what would happen on the other side of this door, I knew exactly what I was hoping for...and that was the reason I was standing there trembling in equal parts fear and anticipation.\n\nBiting the inside of my lip nervously, I pressed the buzzer beside the door.\n\nIt took a moment, but when the door opened, I finally came face to face with him. He was tall, towering over me even in my heels, and well-muscled. Our eyes met and silence passed through us as his eyes drank me in. If he was disappointed by my pretty cocktail dress, he didn't show it. His eyes however lingered on my neck and the collar fastened tightly there.\n\n\"Please come in,\" he said in a deep smooth accent as he stepped aside.\n\nMy legs felt like jelly as I entered his Penthouse, and I jumped slightly as I heard the soft click of his door shutting. Nerves and embarrassment flooded into me like never before and I found myself ducking my head, unable to meet his eyes.\n\n\"I have taken great pleasure in watching you these last few months,\" he said, placing his hand on my lower back and guiding me deeper into his apartment. \"When word of the quarantine came, I was sure that I would be trapped in my boredom, until I saw you,\" he continued, pouring two glasses of champagne from a bottle he had chilling.\n\n\"You've made these months quite enjoyable.\"\n\n\"Thank you.\" I murmured quietly, still unable to look at him.\n\nHe took a long sip of his wine, never letting his eyes leave me as he tipped the glass back.\n\n\"My name is Cole,\" he said finally.\n\n\"I'm...\" I paused. Who was I? Was I still Luke? Had I always been Luke, or was I someone else now? \"I'm Lucy.\" I said after a moment.\n\n\"Well, Lucy,\" he said setting his glass down beside him before stepping closer to me. \"is there anything I can do to thank you more properly?\"\n\nHe stood so close that I had to crane my neck to peer up into his sparkling eyes. I could smell his manly musk and the sweet smell of the champagne on his breath. I could no longer find my voice.\n\nHe raised a hand, brushing my long blonde hair over my shoulder, revealing more of the collar around my neck. I knew what I wanted to say\u2014what I wanted to happen\u2014but I couldn't speak. I felt lightheaded as I breathed him in, and when I felt his steadying hand on my hip, I was grateful.\n\nGently he eased our bodies closer until we were touching. As I leaned on his strong frame, still looking into those dark eyes, I could feel the growing bulge pressing into me. When his other hand rested heavily on my shoulder, my legs slowly failed, and I found myself sinking to my knees before him. His fingers had wrapped around the leash I was clutching, and as I lowered it pulled from my weak grasp.\n\nThis was it. My mind screamed. A cacophony of frantic thoughts drowned each other out and I was left there on my knees, my eyes fixed on the swelling lump before me and the silver buckle to his expensive slacks.\n\nMy hand reached out weakly for his belt, and I felt Cole's large hand caress my cheek, tilting my head up towards his. He looked down at me with an almost adoring smile, encouraging me on, and I found a little more resolve. I eased his belt from the loops and unfastened his pants.\n\nBiting the bullet, I reached inside and let my fingers search blindly, feeling the warm flesh of his cock until I could wrap my fingers around his shaft and pull it free. It was magnificent. It was long and thick with a swollen beautiful head. The dark brown skin was stretched tight from his arousal, and a small drop of precum sat shining on the tip. I couldn't pull my eyes away from it.\n\n\"Do you like it?\" he asked.\n\nWhen I didn't answer, he pulled slightly on the leash and I looked up. I saw that confident smile on his lips as he looked down on me, and I saw the leash wound around his fist, and all the reservations I'd still been holding onto were gone.\n\nThe naughty slut inside of me struggled to break free and a smile formed on my blushing face. I gave him a small nod before focusing my attention back on his beautiful black cock. Closing my eyes, I leaned forward, letting his warm flesh press into my face as I rubbed his length across my cheek. A small moan of excitement parted my lips as I basked in what would be my first real taste.\n\nWhen I couldn't wait any longer, I brought my lips to his flesh and kissed. I placed my fingers around the base of his shaft as I continued kissing, angling his cock to point straight at me. When I had finally worked my way to his bulging head, I let my tongue slip out to glide across his smooth skin. As my tongue trailed up to his slit, I caught a taste of his precum and my own cock began to swell dangerously in my panties.\n\nAll of those feelings I had been toying with over the past months came flooding into me all at once setting my mind and senses aflame. That deep dirty pleasure I'd taken from the stranger across the street watching me be a naughty sissy hit me all at once and my lips parted wide, and I plunged forward letting his cock into my eager mouth.\n\nI moaned loudly as I tasted his flesh on my tongue and reveled in the way his size stretched my jaw to its limits as I tried to push more and more of him inside of me. I wanted it all. My mouth watered as I bobbed forcefully onto his cock, hoping that I could fit just a little more inside. Eventually I gave up and began stroking whatever I couldn't fit in my mouth.\n\nIt was as if a weight that had been baring down on me had vanished. I felt light as a feather as I sucked my first cock and gave into the dirty cravings that had become my life. I opened my eyes and stared up at Cole while I worshipped him from my knees. His eyes were fixed to mine and I felt a ripple of that sexy energy fill me.\n\nMy knees ached, and my jaw screamed for a reprieve, but I didn't care. I needed it\u2014all of it. I had to have it. I moaned harder and bobbed faster. I felt my saliva dripping down my chin. And every time I caught a fresh taste of his delicious precum I redoubled my efforts.\n\nLost in my madness, I was shocked when I felt his strong hand pushing me off of his cock. As I stared up in confusion, he had turned away from me and began pulling me slowly behind him by the end of my leash. With no other choice, I crawled behind him. He led me past a spacious kitchen and through another door. The impressive wall of windows instantly told me that this was where he would watch me from. He brought me to a large chase lounge sitting next to a sofa and helped me to my feet. His strong hands turned me away from him, making me face the window.\n\nI felt his hands on me, feeling their way over my body. I felt so helpless under his touch. His fingers found the zipper on the back of my dress and I watched in the dim reflection as he unzipped me and slowly pulled the dress off my shoulders and down my body. The black lingerie slowly came into sight with its bright pink ribbons and bows. It was the sexiest outfit Kelsey had, and I had been afraid to soil it. According to the tag, it was pure silk, and it felt like heaven on my skin.\n\nI could see my cock bulging in the reflection, but Cole seemed not to notice or care. Once he tossed my dress away, his hands returned to my soft skin, gliding over me as if he was determined to explore every inch of me.\n\nMy eyes closed as his head came down and kissed my bare shoulder. His lips moved to my neck and I could feel his tongue on me. One of his hands wrapped around me, resting flat against my tummy just above my panties. As he continued to kiss me, his hand slowly lowered until he was just above the hem. His hand froze, and so did my breath. I let out a gasp when I finally felt his hand dip inside to brush against my aching cock.\n\nHis fingers wrapped around me and pulled me free. I felt so small in his large hand, but I didn't care. He began slowly stroking my small cock and I moaned my pleasure for him. When my hips began bucking in desperation for more, he pulled his hand away and pushed me gently down onto the chase in front of me.\n\nOn my hands and knees, I shuddered as he moved behind me. His hands worked over my hips and ass gently. When I felt his lips on my bottom I jumped, but he settled me down with a firm tug on my leash. He continued kissing, occasionally giving a gentle bite. Before long he pulled the strip of cloth guarding my modesty to the side, and warning flashes of fear began sounding in my brain once again.\n\nI didn't know if I was ready. Someone in my head kept shouting that I wasn't gay. Cole pulled tighter on the leash bending my head back slightly and those thoughts drifted down. When his tongue touched my little hole, all rational thought died.\n\nIn an instant my arms gave out and my body collapsed onto the soft cushions. I was a panting, moaning, squirming mess as his tongue danced across my delicate hole. I didn't even protest when I felt his finger pressing slowly but determinedly for entrance. First one, and then a second, and after some time, a third.\n\nHe slowly used his fingers to fuck me. My little hole felt stretched to its limits. A warm glow pulsed around my bottom, and I wasn't sure if I could take much more of the sensations he was causing inside of me.\n\nOne moment his fingers were deep inside of me, and the next they were gone, replaced by something else pushing against me. My eyes shot open, and I saw his reflection behind me in the glass. His shirt was gone, and so were his pants. There was a look of determination on his face as he stared at the space between us.\n\nI felt more pressure, and then some more. The pain began to build, and my fingers dug deeply into the soft pillow as I tried not to cry out. Finally, with a small pop I could feel him slipping inside of me and I sighed in relief. The pain was still there, but less, and different.\n\nI knelt there frozen, staring at myself in the reflection. There was a cock in my ass. I was getting fucked by another guy. There was no denying it now. You can't let another man stick his cock in your ass and not be gay, could you? Strangely, I didn't even think about stopping. I was already here, and I was beyond trying to tell myself that I didn't want this.\n\nCole held himself very still for a few minutes as I adjusted to his size and the pain faded away. It wasn't until I lifted myself up onto my elbows that he began easing more of himself inside of me. I moaned in pain and pleasure as I felt stretched more and more by his cock, but he never stopped. He slowly fed himself into my ass until, after a mile of flesh, his warm hips pressed against me.",
        "I felt so full I was sure I was choking on it.\n\nHe wrapped more of my leash around one of his wrists, and pulled it taut, forcing me to arch my back more. As soon as he was satisfied, I felt him withdraw, slowly sliding his cock out until only the tip remained, and then he pressed forward.\n\nHe's fucking me! I thought as I felt him connect with my ass again and again. I'm being fucked! Oh god, he's fucking me!\n\nMy mind was a jumble of gibbering thoughts and an overload of pleasure.\n\nMy cock bobbed between my thighs, dripping endless amounts of precum as he used my body. My little hole felt on fire, and every time he thrust into me something deep within me shuddered sending a ripple of warm pleasure coursing through my body. I gasped and moaned as he continued to cause those sensations. Before long that warm pleasure began to build, growing larger and more powerful. The blood rushed in my ears, and Cole fucked me harder as he heard my tortured cries of pleasure.\n\nI felt my body collapse as my arms gave out. His cock continued to pound into me, setting my pleasure alight. Just when I was sure I couldn't take it anymore, that warm pleasure burst, and spread throughout my entire body like a tidal wave of bliss. My entire body went limp, and I could feel my cock pulsing between my thighs as I came.\n\nI hadn't even touched myself, and the most powerful sensations of pleasure I had ever felt were crashing through my body. It was unbelievable and incredible.\n\nCole only slowed as my climax took me, but as soon as the worst had passed, he continued taking his pleasure from me. For a moment I thought I was just going to wait until he finished, but in no time, I felt that pleasure building from somewhere deep inside of me again. It was distant, but it called sweetly to me.\n\nWanting to feel that pleasure again, I began thrusting back onto Cole's cock, making him hit that spot inside of me harder and harder. Soon he was fucking me with abandon, his hips crashing violently into me. Someone somewhere was shouting, encouraging him on, and it took a moment to realize that the high-pitched voice was mine. \"Fuck me! Fuck me! Fuck me!\"\n\nHis rough hands pulled at my shoulders, pulling me back onto my knees, and a hand gripped my collar tightly, cutting off my air. I watched in the window as he pummeled my little hole like a beast possessed. My own cock, hard once again, bounced wildly before me.\n\nCole's pace quickened, and I could see his approaching climax on his face in the reflection. Desperate to cum one last time, I grabbed my cock and began stroking as fast as I could. My arm ached, but I fought through it as that blinding pleasure built once again.\n\nI was so close.\n\nSo close.\n\nJust a little bit...more.\n\nCole's body seized up behind me and his final thrusts came jerky and uncontrolled. I felt his cock swelling inside of me and the flood of warmth that could only be his cum filling me. The image of his seed deep inside of my slutty ass sent me to the edge, and two pathetic streamers of cum spurt from my cock as another powerful orgasm shook my existence.\n\nWhen my senses returned to me, I found myself laying flat on my stomach on the chase, and Cole was lying beside me tracing little shapes on the skin of my back.\n\n\"You were incredible, Lucy,\" Cole said once he saw my eyes flutter open.\n\nI could only blush in response. I didn't know what I was supposed to say. The only few times I'd had sex before, I hadn't exactly been preparing for this role. Now I was the girl who had just been fucked within an inch of her life. I could still feel small ripples of pleasure cascading through me like gentle aftershocks.\n\n\"Do you think we could do this again?\" he asked. \"You seem like you could really use it.\"\n\n\"I...uh,\" I began. \"I'm going home soon,\" I said honestly.\n\n\"Do you have to?\" he asked, placing a kiss on the back of my shoulder.\n\n\"I was only supposed to be in London for a week,\" I explained. \"My friend was out of town, and I was using her flat.\"\n\n\"And you just decided to play in her things?\" he said with a small chuckle.\n\n\"It wasn't exactly intentional.\" I blushed.\n\n\"It didn't stop you though, did it you bad girl?\" he said giving my warm bottom a playful swat.\n\n\"No.\" I blushed further, enjoying the spank.\n\n\"Why don't you...\" he began before the sound of a ringing phone cut him off.\n\n\"Shit!\" I groaned.\n\n\"I'll get it,\" Cole said, hopping to his feet quickly.\n\nBefore I could even move, he was returning with my purse. Climbing up to my elbows, I grabbed my phone from inside and checked the screen. It was Kelsey. Putting my finger to my lips for Cole, I answered it.\n\n\"Hello?\" I said, trying to sound normal.\n\n\"Hey, Cuz. How's everything going?\" she asked. \"Did you get a time for your flight?\"\n\n\"Uh, yeah,\" I said. \"I leave tomorrow afternoon. What about you?\"\n\n\"It's all a mess,\" she sighed. \"You know how it is. Everyone...\"\n\nAs Kelsey talked, I could feel Cole climbing back onto the chase. I looked up into the window and saw him straddling my thighs and climbing further up. His cock was hard again and bobbing threateningly as he neared my bottom.\n\n\"Yeah,\" I said, not even sure what Kelsey was saying. All my attention was focused on Cole. I tried to get his attention, but he was having none of it. I felt the tip of his cock brushing teasingly against my hole. Despite my resistance, a switch had flipped inside my body. It was as if he had pressed some magic button and sent an electrical current through me. I was charged and ready.\n\nAs if he could read me, I felt him press forward, and with a lot less effort than before, he entered me. I had to cover my mouth to stop the pathetic moan of pleasure from reaching my phone. He began to gently fuck my ass while I tried to talk on the phone with Kelsey. I felt the light tension on the leash again and I couldn't focus on anything anymore except what he was doing to me.\n\n\"What?\" I asked, something Kelsey had said broke through for a moment.\n\n\"I was just saying how hot you look with that guys cock in your ass,\" she replied.\n\nI froze, sure that I hadn't heard her correctly. Did she just say... My eyes were fixed on the window, watching Cole's reflection as he slowly fucked me while he straddled my thighs. It took a moment for my eyes to adjust so I could see through the window instead of the reflection, and what I saw opened a deep pit my stomach. The light across the street was on, and I could clearly see Kelsey's silhouette watching me. Watching me being fucked.\n\nPanicking, I tried futilely to reach back and push Cole away.\n\n\"Hey, don't stop on my account!\" Kelsey laughed, stepping back to sit on the edge of her bed. \"Cole has told me all about the naughty little things you've been doing. He and I have been dating for a while. I must say, I didn't believe him when he said he could get you to come over.\"\n\nI stared back at her stunned as she talked.\n\n\"He told me all about the little pervert staying in my flat,\" she went on, slowly hiking up her dress. \"about how he would cum all over my panties. It was gross at first, but it was also a little hot too. I always knew you had a crush on me.\"\n\nShe hooked her thumbs into her panties and began inching them down, keeping her thighs pressed tightly together.\n\n\"But when you started digging around in my trunks, I thought it was time to put a stop to things,\" she said kicking her panties away. \"Cole had seen more than he told though, and wanted to see how far you might go. When he sent me a picture of you dressed in my schoolgirl outfit, I couldn't believe it.\" There was a small moan as she parted her legs, exposing her pussy to me for the first time in our lives. \"Who knew we had so much in common?\"\n\nMy phone was glue to my ear as she talked, and Cole never stopped his gentle fucking.\n\n\"Cole and I have tried a lot of things over the last year, but we've never had our own sissy,\" she said as she fingered her pussy, her eyes locked on me as her boyfriend fucked my ass. \"Fuck, you're so hot!\" she moaned. \"I want you to watch me play with my pussy while he fucks you, and after you cum I'm going to come over there so you can show me just how dirty of a sissy you can be.\"\n\nKelsey never hung up the phone, but she was done talking. Her moans poured through the speaker and I couldn't stop mine from joining hers. Across the street, she stripped off her dress and bra, and fingered herself while she showed me her beautifully naked body.\n\nShe kept her word too, after Cole made me cum once again, she pulled her dress back over her head, not bothering with her underwear, and left her apartment. When she arrived the night truly started. Kelsey let me lick her beautiful pussy, and helped me suck Cole's big cock, and when he was nice and hard one more time she cradled me in her arms, planting sweet kisses on my face as he fucked me again.\n\nWhen I finally woke, I was sore and exhausted, but I couldn't remember being happier. I was laying between Kelsey and Cole, both of them with their arms wrapped around me protectively.\n\nI wanted to stay. I didn't want to go home, back to normal, but I didn't exactly have a choice. I put my dress back on and walked back across the street with Kelsey. I showered and changed into my own clothes before packing my things into my suitcases. I tried to apologize to Kelsey for messing with her stuff, but she wouldn't have any of it.\n\nKelsey drove me to the airport and walked me to security. Before waving me off she gave me a knee trebling kiss and promised to have me out for Christmas.\n\nThe smile on my lips didn't fade until I stepped off the plane in New Mexico. It truly was back to normal now. I already missed being Lucy, even though I had only just given her a name. It was going to be torture waiting until Christmas to be her again.\n\nI wound my way through the terminal and found my bags, and then quickly my parents. They had a sign all done up for me, and were wearing their blue masks for safety, but it was hard not to recognize them. They hugged me to death and told me how glad they were to have me back, and then drove us home.\n\nI spent the drive staring out the window, seeing the same place I lived my whole life. It was the same, but different...or maybe it was just me that was different. I could still feel that gentle ache in my bottom from Cole's cock, and if I strained my imagination, I could taste Kelsey's pussy on my lips. I tried to let myself bathe in those memories, but as wonderful as they were, it wasn't the same as actually being there.\n\n\"Are you okay?\" my mom asked, noticing my mood as I grabbed my bags from the car.\n\n\"Yeah,\" I sighed. \"I'm just tired.\"\n\n\"Well you're home now,\" she smiled. \"Why don't you get some rest in your own bed and I'll come and get you for dinner?\"\n\n\"Sure, Mom,\" I said.\n\nI took my things upstairs to my bedroom. I opened the door and stared. It seemed that my mom had taken pity on me and washed all the dirty clothes that had decorated my floor when I had left for London. They were all folded neatly on the bed. Jeans and t-shirts and boxer shorts.\n\nI couldn't say why it twisted so much to see my old clothes, but it did. A weight settled upon me as I realized that I would be pretending for a very long time. None of these clothes were me anymore. None of the posters on the walls were either. I now craved soft pretty things, and things that could awaken those primal desires I had discovered.\n\nBeing home was going to be harder than I thought.\n\nIt wasn't until after dinner that I returned to my room to unpack. I hadn't been wearing my own clothes for some time back in London, and most everything that was in my suitcases was clean and went straight into the drawers. It wasn't until I made it to the bottom of the last suitcase that I discovered a stowaway.\n\nThere, underneath everything else, was a plain wooden box. Hesitantly I ran my finger over the latch and looked towards my door nervously. My heart thumped as I flipped the latch and opened the lid. Nestled inside was a black collar and a leash sitting on top of several pairs of panties. A folded note sat in the center.\n\nJust in case you can't wait until Christmas.\n\nDouble checking the lock on my door, I quickly began stripping off my clothes.\n\nTHE END?\n\nThis story was written as a contest entry, and as such I would greatly appreciate you taking a moment to rate my work. That being said, Skye and I have both seen the possibility for much more here, and depending on feedback, this could become a series. Thank you so much for taking the time to read and rate my work.\n\nSoB_Erotica"
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "anal",
        "covid19",
        "cross dressing",
        "exhibitionism",
        "lockdown",
        "london",
        "masturbation",
        "quarantine",
        "sissy",
        "voyeurism"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-looking-glass-3"
}