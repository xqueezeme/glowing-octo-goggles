{
    "title": "The Muse",
    "pages": [
        "Author's Note: Thank you to all those who have encouraged me to continue writing. Thank you Tim413413 for the hours of editing. \n\n***** \n\nSleep wasn't coming. Reading almost worked. My eyes would close and my mind would drift; then reality would slam back in. I rolled over and looked at the clock. Eleven thirty. At least it wasn't too late yet. I could still get six hours' sleep if I could just calm my mind. I took a couple of deep breaths, trying to slow my active heart. I relaxed my eyelids and tried to think of nothing. Tomorrow's interview invaded again. \n\nThe interview was just too damned scary. I really wanted the job. My career was in a holding pattern, circling through days of tedium. How I ended up as a buyer for a hardware chain is still a mystery to me. I blame the student loans. Their never-ending demands frightened me into taking the first thing with a paycheck. For five years I have trudged through wrenches and lawn mowers trying to do battle with my monthly bills. I was getting nowhere because there was nowhere to go. Every position above mine was filled with family members of Mr. Wilkerson, the owner. \n\nMy true love was marketing. Matching people to products. Analyzing trends, identifying core customers and designing plans to make them love a product. I had a pile of loans that proved I had the degree. I just didn't have that first real marketing job. The one where I could shine and follow my dreams up the ladder. If I didn't get some sleep soon, the interview could go poorly. \n\nI rolled onto my back and reached blindly for my Kindle. The glowing words appeared and I tried to lose myself in the story. I read the same paragraph three times before I realized my mind was still centered on the interview. I had visions of an interviewer laughing at the dumb chick who dared apply, of the questions I couldn't answer or of simply getting lost downtown trying to find the office. More deep breaths. \n\nThe alarm drilled into me at six. The last time I had glanced at the clock it was two forty-five. I felt like crap. I waddled into the bathroom and blinded myself with light. In between the long blinks, I spotted the zombie girl in the mirror. Yep, dark circles surrounding veins of red lace. It was going to be a Visine and concealer morning. I dropped my nightgown to the floor, admonished myself for only exercising once in the last week and slithered into the shower. \n\nI thought about lying down again after my shower. I was planning on being in the city an hour and a half early anyway. What's another thirty minutes of sleep going to hurt? I fought the temptation, knowing I would feel worse at the end of the nap. The interview was in a building I had never been to and downtown parking was always a question. It wasn't worth the risk to be late for the interview. \n\nMy navy skirt was tight. I hadn't planned on that little bit of joyous news. It was my only real interview suit. The one that said 'organized and driven.' I should have tried it on a week ago. The dreaded mirror had warned me about my waist and I chose to ignore the bitch. Now I had to pay the price. I slipped the skirt back off and carefully tried to stretch the waist band. I went around the whole band pulling it in little sections, trying to extend it without misshaping it. An act of desperation to be sure. When I slipped it back on, I was surprised that my efforts weren't wasted. It was snug, but no longer tight. I practiced sitting down and it all stayed in place. As long as I didn't attempt any gymnastics, I would look respectable. \n\nMy hair, surprisingly, gave me no trouble. About a year ago, I had it trimmed to shoulder length. The stylist talked me into a slight inward curl at the neckline. That gave it a bit of a style, something my head had always lacked, but remained manageable. I liked the way it moved. A sort of blond pendulum swing when I turned my head. It was my look now, one of the few things about my body I felt like I owned. Most of the rest owned me. \n\nMy hair was making me feel a bit better as I exited my apartment. Leather briefcase in hand, I was feeling rather important. No one would ever know the case only held an empty legal pad, some pens and a few copies of my r\u00e9sum\u00e9. Even Richard Thompson noticed. \n\nRichard was one of those strange, lonely guys every apartment building had. They had trouble looking at you when you looked at them. They did most of their looking when your head was turned. It was creepy at first. After a while, it became apparent he had some kind of anxiety disorder that everyone ignored for his sake. I almost pitied him. Somewhere at the tail end of his thirties, he had no one and little chance of ever meeting anyone. Today, Richard gave me a double take as he exited his apartment. I was looking right at him and I got a few seconds of a stare, half a smile and then he disappeared back into his apartment. It was obvious he couldn't handle the stress of saying good morning. I took it as 'Looking good today, Mary.' \n\nThe drive downtown was uneventful and way too quick. I was starting to get a bit nervous and wished for a traffic jam just to slow things down. Instead, I arrived and was parked with an hour and forty-five minutes to spare. It only took me fifteen minutes to figure out where the Brindle Building was and locate the elevators. I had an hour and a half to kill. I didn't want to work up a sweat by walking around so I ended up in a small independent coffee shop. Someone had left the morning paper on the table to share. I shared it with a cup of Jeju Island green tea. I was careful to lean forward when I drank and made sure the cup was well away from my white blouse. \n\nI killed a half hour in the coffee shop and played with my map app to find another distraction. I scored a bookstore two blocks west. I am the type of customer bookstores hate. I browse, evaluate and pick out my books in-store. I then buy them online. I used to feel guilty, but that wore off after some time. I walked slowly. My heels were sensible, but they were still heels. I figured two blocks wouldn't be too much of a strain if kept the pace down. \n\nThe store was fairly crowded. It looked like the latest thriller from Donald Rickers had been released. The line to the cashier was at least a half hour wait. Luckily, I didn't need to get in that line. I headed straight for my 'heroin' - the romance section. The aisle was empty so I could browse in peace. \n\nIt had taken me a long time to get over the tactile feel of a book. I, at one time, had the need to display my reading on a shelf. As my eyes cruised along the aisle, a little tinge of Kindle remorse set in. That small desire to have bulging bookcases that proved my voracious appetite for reading. \n\nWhen I moved into my current apartment, I donated most of my books. It was either that or rent a storage unit. My apartment just didn't have the room. The donation was emotionally difficult. Almost like when Daisy, my childhood best friend of the Golden Retriever variety, died. Those books were part of me. None of which I would ever read again, but they were my proof. Now my bookshelves have been replaced by a folder on my Kindle called 'Read Books.' No one, except the internet servers, knows what I have read. \n\nI ran my fingers across a series of titles by one of my favorite authors. Okay, I admit I miss my paper books. A digital list just didn't have the same weight. I sighed and looked for something new. I only had three unread titles and that would likely last me two months at most. \n\nA series of firefighter novels caught my attention. Well, actually, the guys on the covers caught my attention. I was sure fighting fires with exposed abs was dangerous, but at least they looked good doing it. I took out my phone and fired up my store app. I purchased the first book and relished the idea that a beefy firefighter was waiting for me at home on my reader. If the book was as good as its cover, I would get the whole series. New books always put me in a great mood. \n\nI knew I was using romance books as a crutch. My love life was a bit slow these days, not that some of my colleagues at work weren't trying to change that. There just weren't any firemen in my life. Those guys who were confident, decisive and could shed a tear at the right time. All of my past loves were exciting at first, but that feeling dwindled as time went on. I didn't need twenty-four seven passion, but being the obsession of a man once a week would be divine. \n\nI completed my guilty purchase and decided to head to the interview. Showing up early was better than being late. I went the wrong way down the aisle and realized I would have to cut through the customer line to make it to the door. \n\n\"Excuse me,\" I said quietly. Two older men parted for me to pass through. One of them, a gray-haired gentleman in a dark banker suit, looked at me with a confused smile. The other gave me a muffled \"wow\" as I passed through the line. I took it as a compliment, thinking my suit was doing its job. Hopefully, the interviewer would think the same. \n\nI overheard some more whispers down the line. \"No, right there.\" \"No way!\" \"Could be.\" It sounded like they were directed at me. I ignored them, thinking I had to have misinterpreted the blurbs. \n\nOn the walk back I let the words make me antsy. Self consciously, I stopped in a restroom before I headed up the elevator to the interview. I checked my clothes and ass to make sure I hadn't sat in gum or something. Once I assured myself I was clean, I headed out of the restroom, looking down at my skirt while trying to brush off a bit of lint I had missed. I walked right into a pair of brown leather loafers. \n\nI looked up into the shocked face of Richard Thompson, my neighbor. His eyes were wide and he reached out his hand, almost like he was reaching for my breast, then snapped it back. I almost cried when I saw the open cup of coffee in his other hand. Then I felt it. Hot wetness soaking into my white blouse. I didn't need to look, but, like a traffic accident, I did. A wet brown stain ran from my right breast and widened its way down to my waist. My dark skirt now looked like I had peed myself. I bit my lip trying not to cry. Foolishly, I chose anger instead. \n\n\"You bastard!\" I said more loudly than prudent. What the hell was he doing here anyway? We were in a rotunda near the front entrance. A lot of heads turned. \"Are you trying to ruin my life?\" I heard a small echo when I finished. Richard was trying to say something and couldn't find the words. I saw his eyes going red and his head turning back and forth like he was looking for help. I was pissed at his lack of compassion even when I knew I shouldn't expect it from him. \n\n\"What the hell, Richard?\" I goaded with anger. I leaned over a bit to try to limit the wetness on my skin. \n\n\"Sorry...\" Richard pleaded. There was pain in his voice and I could see his hand shaking a bit. I hated myself at that moment. I just couldn't stop myself from being me. \n\n\"Sorry? You throw coffee on me, fuck up my whole day and all you can say is sorry?\" My voice carried venom. I saw my marketing dreams disappearing. My best clothes were ruined. My shitty job would remain my shitty job. I kept being me. \"You're an asshole!\" \n\nRichard's eyes were blinking fast. I could see he wanted to run, but he stood, unable to do anything. At that point there was nothing he could do. I was about to send more of my anger at him, planning to break him for what happened. A gentle hand grasped my shoulder. \n\n\"It was an accident, Honey,\" a sharply dressed older woman insisted calmly, \"let's get you cleaned up.\" She led me back to the restroom. Richard just stood there near tears, staring at me as I left. The longest look he had ever given me. Just before I entered the restroom, a red-haired woman ran up to Richard. It looked like she was trying to console him. I let it go when the door closed. My anger evaporated and tears I could no longer hold back came. \n\nI spent a half hour in that restroom. Betty, my savior, and I talked while the hand dryer did a poor job of drying me out. There is something about having someone willing to share your pain. It made it tolerable. The interview was shot since I looked like I just spent the night drunk in an alley. I had wasted a paid day off, but I made a temporary best friend. Betty worked on the fifteenth floor for a lawyer. He was obviously an understanding boss since she didn't seem concerned about disappearing for thirty minutes. \n\nBy the time I walked my stained self out of the restroom, Betty had me cooled down and wanting to apologize to Richard. I was secretly happy he wasn't waiting for me. A public apology would be a bit too emotional. I suspected I was his least favorite person right now. Probably number one on his to-be-avoided list. Betty was right, I had handled it without proper decorum. She made me laugh with how she said it. I think that was her intention. I thanked Betty and got a hug. I headed home with the strong desire to put on my pajamas and read about firemen. \n\nI tried knocking twice at Richard's door that evening. He wasn't home or, just as likely, he was not going to answer. I was feeling pretty badly about the way I acted. I had an excuse, but I knew Richard, and I should never have attacked him like I did. When I replayed the scene in my head, I convinced myself it was mostly my fault. I had barreled out of that restroom without looking. I estimated my culpability at around eighty percent. \n\nBefore I headed to work the next morning, I tried Richard's door again. No answer. Now I was feeling awful. Sometimes I hated being me. The guy was fragile and I was beginning to suspect he was avoiding his apartment in order to avoid me. I hated the word 'bitch,' but I was starting to think of myself as one. This was becoming one of those 'shiver' moments. Those times when certain memories send a sickening shiver through your body. I already had enough of those stacked up for a lifetime. I tried not to think about it. \n\nWork sucked. Of course, it sucked before my new shiver moment. I spent the day matching invoices to purchase orders and verifying pricing. We had new forecasting models dishing out ridiculous numbers. It meant twice the work for me. A series of slow, repetitive calculations to verify numbers before submitting new requisitions. I would rather have been reading about firemen. \n\nI felt worse when my knocks went unanswered again. I had visions of Richard in a straight jacket, taking shock treatments. I turned to my apartment and saw a large package waiting in front of my door. It was addressed to me with a return address of Themes Publishing, located in the Brindle Building. The scene of the infamous coffee incident. \n\nOnce inside, I opened the package. Inside the box was another box from La Casa di Moda, a ritzy downtown clothier. I had never been there since its prices don't mix well with my student loans. Inside there was a letter atop something wrapped in white tissue sealed with a gold sticker. The letter was from Richard. \n\nDear Ms. Higgins, \n\nPlease accept my apology for my appalling behavior Monday morning. My blunder and inaction after the fact were inexcusable. \n\nI have attempted to replace the clothes I ruined. As if my deeds could hope to improve on God's Flower. \n\nSincerely, \n\nRichard Thompson \n\nI read the note three times. I had barely gotten more than a 'hi' from Richard in the five years I had lived in the apartment building. This letter used words with multiple syllables that were grouped in coherent sentences. I read the last sentence again. Vanity had me interrupting it one way and fear another. Its meaning was clear and vague at the same time. \n\nI felt my anger rise. I had meant to apologize first and now he had upended the whole process. I took a few deep breaths, trying to think it through. I had called him an asshole. That was the last thing that came out of my mouth. I collapsed in a chair and felt my anger turn to embarrassing guilt. That stupid shiver doubled in size. I couldn't even be social with the unsociable. I hated coffee and everything associated with it. I had a small cry. \n\nWhen I got myself together, I parted the sealed tissue to see what I had to return. I had already decided I would refuse to accept whatever was in the box. It was the only decent avenue left for me. Under the tissue was a fancy certificate for free tailoring and under it a dark gray suit. The skirt and jacket were cut finer than I had a right to touch. The fabric was soft, but didn't look it. The thread count was well beyond anything I owned. When I saw the label I choked. It was an 'Arturo Carducci' original. \n\nIt took an internet search and a phone call to realize I had a three thousand dollar, one-of-a-kind suit in my apartment. It was gorgeous. I admit the price may have helped influence my assessment. How could someone who lives in my apartment building afford such a gift? Why would he give it to me and why wasn't he a fireman? I had moved the suit away from the kitchen and boxed it. I was terrified I would spill something on it. I was scared to even hold it. \n\nI tried Richard's door again. Thinking he may be hiding inside, I spoke to the closed door, insisting I wasn't angry and only wished to talk. Silence was the only answer. I needed to fix this. Richard had gone too far. He should have fought back and named me for the reckless bitch I was. Slowing down, I realized I was blaming him again. It was Richard. I doubted he had been in a confrontation in twenty years. I had to be the one to make it right. \n\nIt was late in the night when I finally broke down and tried the suit on. Strange things happen when you step into something so fine. You feel rich and powerful. It's just a wrapper, but it definitely affects the innards. I really wanted to keep it and regretted ever trying it on. It hardly needed any tailoring at all. The waist had to be taken in a bit, which made me feel good. It took me three trips to the mirror before I finally packed it back up with a sigh. \n\nI arose the next morning after a fitful night of sleep. I tried Richard's door again and wasn't surprised when no one answered. I called in sick to the office. I had to do something today. Guilt was eating me alive. I dug through the trash and recovered the return address on Richard's package. A little research on the internet and I had the phone number for Themes Publishing. I called a minute after eight. \n\n\"Themes Publishing, this is Clara speaking. How may I help you?\" a friendly voice inquired. \n\n\"I would like to speak with Richard Thompson, please.\" I tried to match the receptionist's friendly tone. \n\n\"I'm sorry, he is not available. Would you like to leave a message?\" Clara didn't even hesitate, and I sensed Richard was never available for phone calls. It made sense since he had trouble holding a conversation. I wasn't going to break through on the phone. \n\n\"I have a package I need to return to Richard. Could I drop it off at your offices?\" I figured getting the suit out of my apartment would relieve some of my stress. \n\n\"Mr. Thompson is currently out of town. I am not sure when he will return,\" Clara stated in an obvious maneuver to avoid the package. \n\n\"If I brought it by, could you put in his office or something? I would really like to return it and I can't seem to locate him.\" There was a bit of a delay before Clara responded. Almost like she wasn't sure what to say. I heard one false start before she responded. \n\n\"Yes, we can hold the package for Mr. Thompson. I just can't promise when he will pick it up,\" Clara finally said hesitantly. It was good enough for me. That got it out of my apartment and returned to Richard in absentia, but returned nonetheless. I'll just have to write a note so Richard would understand. ",
        "\"Thank you,\" I said with obvious relief, \"I'll drop it by this morning.\" We ended the conversation, and, feeling a little better, I went to take a shower. \n\nIt took me five attempts to compose a note to Richard. I had to express my embarrassment for my actions, absolve him of any responsibility and graciously return his thoughtful gift. Not an easy thing to put into words. When I finally had something I didn't want to crumple and throw in the trash, I placed it in the La Casa di Moda box on top of the suit. \n\nThe weather had made a turn toward fall last night. It was a bit cooler so I decided on my favorite navy blue hoodie. It had a great big white C surrounded by yellow with Berkeley above and Bears below. My alma mater. I always felt better when I wrapped myself in my own history. It was starting to look a bit used, but I didn't have the heart to replace it. It was my favorite piece of clothing. \n\nIt was after the morning rush so I made good time downtown. I entered the Brindle Building, now wary of errant coffee carriers, and headed up to the eighth floor. Themes Publishing looked like it took up the entire northeast corner of the building. They had a nice glass entryway with their stylish logo embossed on the glass door. The reception desk was empty. Behind the desk, in a large open meeting area, people were gathered cheering and tapping paper cups together, drinking in celebration. I walked up to the reception desk and waited to be noticed. I smiled at their jubilation. \n\n\"No way!\" exclaimed a young man in a yellow shirt with a loosened bronze tie. He was looking directly at me and took me by surprise. The other heads turned with smiles and a few dropped jaws. I felt like I was the butt of some unknown joke. I found myself taking a small step back and losing my smile. \n\n\"Janice, did you do this?\" the young man's smile enlarged as he yelled out. Some of the people were moving slowly toward me. I turned my head, hoping to see some other object that could be the center of their attention. I was alone, now holding the La Casa di Moda box with both hands against my chest, almost like a shield. \n\n\"Do what?...\" This was from a red-haired woman who entered the main room from an office. She was thumbing through a stack of papers with a concerned look. \n\n\"Hire a 'Melissa,' \" the man said, pointing toward me. Janice looked up and studied me. I thought it best to end the confusion. \n\n\"Hi, ah, I'm Mary Higgins.\" I stumbled a bit with my words. \"I am just trying to return a package to Richard Thompson.\" I held up the La Casa di Moda box to prove my intent. Everyone was staring and my comfort level was decreasing rapidly. Janice looked down at the papers in her hand and back at me and my suit box. Her expression changed to one of concern. \n\n\"You're the girl he spilled the coffee on?\" Janice asked with wide eyes. \n\n\"Yes. Well, it was really my fault and I am trying to apologize,\" I replied innocently, holding up the box, \"he sent me this as some kind of apology and it is way too much. I really need to give it back.\" All the smiles disappeared and confusion seemed to reign. \n\n\"Oh my God! Do you even know who Melissa is?\" Janice asked with a panicked expression. \n\n\"I don't know who you are talking about. Look, Richard is just my neighbor.\" I went into defense mode. I had no idea what was going on, but I didn't want another incident I would regret. \"I think I was out of line the other day and I want to make it right.\" Janice looked back at the papers in her hand. \n\n\"Tom, do you know where Richard is?\" Janice inquired of the young man with the bronze tie. \n\n\"One of his houses. He never tells me where he goes,\" Tom answered with a frustrated tone. The notion Richard owned multiple houses caught me by surprise. \n\n\"Find him quickly. I just got his new chapters and Adam Westlake is practically suicidal. Seems Melissa took a shot at him,\" Janice exclaimed while staring daggers at me. Tom looked shocked and ran to what I guessed was his desk. Everyone else began to scatter to theirs. \n\n\"Look, I'll just leave this here,\" I said judiciously while placing the suit box on the receptionist's desk, \"it has a note it in it. Just tell him I'm sorry.\" I wanted out. I had no idea what was going on and I really didn't want to know. I turned and tried to escape. \n\n\"Mary, wait!\" Janice called to halt my progress, \"there is something you need to know.\" I turned, but continued my slow escape backward. Janice was walking quickly toward me. I saw nothing but a new problem in her eyes. Coffee was now my least favorite thing in the world. \n\n\"I really don't understand what's going on, and, in truth, I don't want to understand,\" I shot back almost frantically. Janice stopped in her tracks when she realized how confused and upset I was. \n\n\"You changed your hair about a year ago, didn't you?\" Janice asked calmly, \"and that hoodie, it's your favorite, isn't it?\" Numerous heads popped up from behind desks. Obviously, others were also interested in my answers. I stopped. \"Purple is your favorite color, you prefer your meat well done and you love romance novels.\" I stared dumbfounded at her revelations. \n\n\"What's..going on?\" I muttered. \n\n\"It seems Richard has been writing about you. His descriptions are quite vivid,\" Janice explained with the beginnings of a smile. I didn't think anything was funny. \n\n\"And you all read his stuff?\" I asked, looking at all the interested faces waiting for my reaction. Janice laughed, followed by a room full of suppressed smirks and chuckles. My anger was beginning to rise. I felt like I was the butt of some joke again. \n\n\"Half the nation has read his work, Honey,\" Tom answered from behind his desk, \"we were just celebrating him crossing the seventy-five million mark.\" The way he said 'honey' made me question his manners and his orientation. I never heard of Richard Thompson outside the apartment building and no one can sell that many books and not be known. \n\n\"He writes under a nom de plume,\" Janice answered my unasked question. I was trying to remember if I ever had a real conversation with Richard. We had some summer building parties, but I don't remember him attending any. I was slowly moving back toward the La Casa di Moda box. \n\n\"Under what name?\" I inquired as I slowly tucked the box under my arm. Richard was obviously wealthy and the suit looked really good on me. Maybe returning it wasn't necessary. I resigned myself to try to hand it back personally, once. If he remained chivalrous, I wouldn't give him a second chance. \n\n\"Confidentially?\" Janice looked at me and I nodded. \"Donald Rickers,\" she answered. Wealthy was an understatement. I decided to keep the suit. I would justify it in my mind later. \n\n\"THE Donald Rickers?\" I queried, \"why would he write about me? Better yet, WHAT does he write about me?\" \n\n\"Yes, THE Donald Rickers. Maybe you would like to read a bit and we could figure this out,\" Janice suggested and gestured to her office. I put a death grip on the suit box and determined I might as well figure out how I ended up with the suit. I followed Janice to her office and sat in one of her leather chairs that surrounded a small coffee table. Janice poked her head out of the office and yelled to Tom, \"Tell me as soon as you find him.\" She shut the door and handed me the papers she had been holding. \n\n\"This just arrived. It's rough, but it usually goes through a few rewrites,\" Janice said and, with a bit of accusation in her tone, continued, \"this is quite different from his previous works. It seems God's Flower has some thorns.\" \n\n\"What's God's flower?\" I asked as I looked at the printed pages. There must have been over forty of them. \n\n\"You, if I don't miss my guess.\" Janice sat next to me and gestured for me to read. \"He called Melissa that the first time Adam Westlake saw her at the botanical garden. He kept it running through the last four of his novels. To Richard's readers, you're a mystery. You keep popping up and yanking at Adam's heart strings, then you disappear. You're Adam Westlake's 'kryptonite.' It's the only time he doesn't think straight.\" \n\n\"Adam Westlake?\" I asked, looking up from the pages. \n\n\"The hero of Richard's novels,\" Janice answered with a puzzled look, \"you really haven't heard about any of this before?\" \n\n\"No,\" I replied, \"I am a little weirded out about the whole thing. I mean, Richard hasn't said much past hello to me in five years. Why would he pick me?\" \n\n\"Just read those pages and tell me what you think,\" Janice said, then added, \"I have to say I am a little concerned. I think the coffee incident hit him harder than I had thought.\" I cringed at her words. I felt bad enough about it already. That damn shiver of regret came back in full force. Janice headed out of the office to give me some peace. \n\nI was five pages in when I felt I was looking in a mirror. His descriptions were highly detailed. I blushed at the good parts and cringed at the flaws. To him, they weren't flaws. Even the little indentation high above my left eye, the one I thought my hair hid, he found strangely enticing. I was secretly pleased with the way Adam loved the way my hair cascaded to my shoulders. I nearly choked when he described my favorite navy blue skirt as 'must have been borrowed.' My God! He only saw me for a total of thirty seconds that day and even he saw it was too tight. I swore I would get back on my exercise program and I was definitely keeping the 'Arturo Carducci.' \n\nThe strange reference to God's Flower appeared as he described seeing me from across the room in a dingy coffee house. I had no previous context, but it seemed Adam was shocked Melissa reappeared after a long absence. His joy was quite surprising, sparking memories of dalliances, warm kisses and nights on the town. No one had ever described me, not that Richard knew, in such a titillating way. I felt invaded and not confident I could live up to those descriptions. I was blushing by the time Richard stopped the flashbacks and returned to the book's present. \n\nChapter Two took a strange turn. Adam Westlake stood to get Melissa's attention, too quickly it seems, and knocked over his cup of coffee. Melissa seemed surprised to see Adam. She stood, backed away and drew a revolver. Amidst the screams and panic of patrons in the coffee shop, Melissa fired three shots at Adam who stood in shock. Melissa left at a run, never knowing she had missed Adam. The next chapter delved deeply into Adam's psyche - the ensuing depression and the drinking it caused. There was a drunken walk across a bridge when Adam contemplated where his life was going. Melissa had been his one connection to a possible happy future and that was now shattered. The words were so dark, I didn't expect Adam to make it to the other side of the bridge. \n\nI felt ill as I turned over the last page. Richard had some kind of fixation. I think he saw a relationship where none existed. I handled the coffee accident so poorly that I damaged him. I didn't think I could feel worse. I saw the illusionary relationship in his words. The spilled coffee and the 'You Asshole!' turned into three shots. As a human being, I had failed. \n\n\"Well, what do you think?\" Janice was leaning on the door frame with her arms crossed. I looked up and couldn't stop the water in my eyes. \n\n\"I think I hurt him,\" I stammered, \"...I really hurt him.\" I felt a tear and wiped it away quickly. How could I have been so uncaring as to attack such a fragile man. I no longer wanted the 'Arturo Carducci.' \n\n\"Look, I know all this caught you by surprise,\" Janice said in a motherly tone, \"Richard feels things a little too deeply. It makes him a wonderful writer, but difficult in person. Maybe if you spoke with him. Told him you're not upset.\" I could tell she was trying to get her cash cow back on track. I wondered how much she cared about Richard personally. Then again, how much feeling could someone really invest in such an uncommunicative person. \n\n\"That's just it,\" I defended myself, \"I have been trying to apologize. It was just an accident. I blew it out of proportion. I've been making myself sick just thinking about it. This just makes it worse.\" I shook the incomplete manuscript at Janice. \n\n\"If I could get you in touch with Richard, would you apologize?\" Janice queried. I sensed she wanted to make sure I wasn't going to make matters worse. \n\n\"Of course. For my well-being and his,\" I answered. I wasn't sure I liked Janice. If she could get me in touch with Richard, I could tolerate her scheming. \n\n\"Good.\" Janice smiled with a little too much relief for my taste. \"Tom found out he is at his condo in San Antonio. He isn't answering his phone so you will have to fly down there.\" My jaw dropped to the floor. This woman presumes too much. \n\n\"I have a job,\" I said incredulously, \"do you think I can just drop everything and take a trip?\" I was about to mention my nearly empty bank account wouldn't appreciate the purchase of last-minute plane tickets. I decided my finances were none of her concern. \n\n\"For Richard, yes,\" Janice declared. I saw the determination in her eyes. I also sensed a bit a fear in her tone. \"Tomorrow is Friday. Call in sick or something. We'll take care of all the arrangements, plane, hotel and food. You just make sure Richard knows you aren't upset with him and we'll have you back on Sunday.\" Richard and I were being handled. Richard may be used to it, but I was not. \n\n\"It was only spilled coffee,\" I insisted, \"this orchestrated apology is way over the top and seems disingenuous. I can just wait until he returns.\" \n\n\"Knowing Richard, he may not be back.\" Janice didn't seem like she was exaggerating. \"He tends to blow things out of proportion inside his mind. I wouldn't be surprised if it takes years for him to come back. Looking at those chapters, it wouldn't shock me if Melissa was written out of Adam's life forever.\" I had no idea why her last sentence struck me as hard as it did. Thirty minutes ago, I had no idea anyone was writing about me. Now I found it endearing and a little flattering. Damn my ego. I didn't want Melissa to die or something. \n\n\"You'll take care of the expenses?\" I asked with trepidation. I hated having to admit I was basically living paycheck to paycheck. \n\n\"Yes.\" Janice was smiling again. \"We'll take care of everything. You can clear your conscience and Richard will get back to his normal writing.\" I could tell Richard's writing was at the top of her to-do list. My conscience was a non-issue. She will have to excuse me for reversing the priority. We just had to accept we were using each other. \n\n\"Well, okay. I guess I am going to San Antonio,\" I stated with little confidence. \n\nIt took Clara about thirty minutes to establish my itinerary according to Janice's specifications. I only needed to get myself to the airport the next morning. Janice was going to have a car pick me up, but I ended that, thinking the handling was going too far. Janice would have been happier if she could have borrowed my skin and apologized herself. I had a nagging feeling she was expecting me to screw it all up. \n\nI was happily surprised to share a ride down the elevator with Beth. I didn't really think I would ever see her again. \n\n\"You ever get that interview?\" Beth asked pleasantly. I was happy she left out the coffee spill. \n\n\"No. I tried to reschedule, but they had already offered the position to someone else.\" I put a fake smile on my loss. \"Karma for my lack of decorum.\" \n\n\"Don't be too hard on yourself,\" Betty replied, \"the timing was just bad. Give it a few weeks and you'll be laughing about it.\" I really liked how she judged the situation and not me. My friends are a lot harsher and I didn't need harsh right now. I unloaded the string of events, leaving out the best-selling author part. She listened intently. \n\n\"When you finally catch up with him, I hope he appreciates your efforts,\" Betty stated, \"if not, then maybe he is an asshole.\" I laughed and felt better. I may never see Betty again, we didn't exactly trade numbers, but she was the friend I needed at the time. \n\n&lt;&lt;&lt;&lt;&gt;&gt;&gt;&gt;&gt; \n\nI had never flown first class in my life. I think Janice had sensed my apprehension and decided to make sure I was as comfortable as possible. I wasn't used to being pampered, but felt I could get used to it. I spent the flight time learning about Adam Westlake. I didn't start at the beginning. I started on the novel where Adam first met Melissa. Melissa was prettier than I am. I sensed that right away. She was also much more confident. I liked her better than I liked myself. \n\nRichard's description of Melissa the first time Adam saw her was beautiful. Almost loving in his word usage. If this, in any way, reflected how he saw me, the coffee incident must have ripped him apart. I had to be careful he understood my apology for what it was. I didn't want him thinking it meant anything more. I had to admit that I loved his words. Especially the ones describing me, I mean Melissa. \n\nThere was a limo waiting to pick me up. Ralph, my black-suited driver, carried my luggage and opened doors for me. Janice was truly going all out. You feel pretty special when a livery-capped man is holding up a sign with your name on it at baggage claim. I tried to tip him at the hotel and he refused politely, \"Themes Publishing has been more than generous, Ms. Higgins.\" I was being handled by professionals. \n\nThe hotel was flush against the River Walk. I had never been to San Antonio, but Ralph had filled me in on the way. By his tone, I suspected the hotel was high class and the place to be. The River Walk held an impressive array of restaurants and small shops below street level. \"You won't even know you're in the middle of a city,\" Ralph stated with pride. My room overlooked the River Walk with a balcony that allowed me to lean over and people watch. The room itself was about three stars more than I could ever hope to afford. I felt like a queen the way everyone was scurrying about making sure I was comfortable. My wardrobe suddenly didn't feel up to the standards of my new image. \n\nJanice called while I was sitting on the balcony, nursing a glass of wine the staff insisted I try. The bottle it came from was probably more expensive than my car payment. I was trying to think about what I was going to tell Richard when I knocked on his door. \n\n\"I'm glad you arrived safely.\" Janice hurried through the greeting like it was an afterthought. \"Do you think you could talk with Richard tonight?\" It really didn't sound like a question. I was about to get angry. I looked at the wine, down at the River Walk and thought about the pampering. She may be pushy, but she made sure I felt like I owed her. \n\n\"Yes, I was just trying to get my words straight,\" I answered, \"I don't want him to get the wrong idea. \n\n\"Don't worry about that,\" Janice continued, ignoring my concerns, \"just make sure he knows you don't hate him. It's the rejection that tears him up.\" Hate him? He couldn't possibly think I hated him. I assumed he was thinking I was only angry. Maybe I was crueler than I thought. My stomach churned a bit. \n\n\"I don't hate him!\" I declared forcibly. \n\n\"I know you don't.\" Janice's tone was calmer, like she was soothing a child. \"We just need to make sure he knows that.\" I decided dealing with Janice was not my favorite thing. Only my mother is allowed to talk down to me like Janice does. I sucked it up since this would all be over soon. My conscience healed and Janice will have her author back. \n\n\"Okay, I'll make sure he knows,\" I conceded against my better judgment. I promised to leave for his place in a few minutes and cordially ended the call. There was no way I could ever work for someone like Janice. I wondered how everyone at Theme Publishing could stand it. \n\nIt was a pleasant walk, about three blocks, along the River Walk. The buildings I passed all had their own unique architecture. Unique, but each fit well with the comfortable atmosphere the walk engendered. I passed at least three restaurants that teased my nose. I hadn't realized I was hungry until the smell of searing meat and boiled crab watered my mouth. The sun hadn't gone down yet so the crowds were still of the tourist variety. Mostly gawkers like me. I was sure nighttime would bring out more locals. ",
        "I crossed a really charming stone footbridge to get to Richard's condo complex. The complex had a rustic, but affluent, look about it. The units were mostly done in shades of brown and tan stone with large windows overlooking the River Walk. It was all very serene. \n\nI paused at Richard's door. My intent was to just knock and get it over with when my brain decided to interfere. I was at a man's door, eighteen hundred miles from home, to ask for his forgiveness about a spilled cup of coffee. I suddenly felt stupid. I held my finger an inch from the doorbell, trying to will it to push. My mind kept echoing the phrase, 'This is really dumb.' \n\nMid-push, the door swung open. I was brought out of my stupor by a jacketed Richard who was obviously on his way out. We just stared at each other, neither with words in our mouths. It was his door so I needed to start. \n\n\"Ah...hi, Richard..\" That stupid feeling was increasing. This wasn't one of my wisest decisions. \"This might seem a bit weird, but I..\" How do you tell someone you hopped on a plane to apologize? I was at a loss for words. \n\n\"Dinner?\" Richard asked. It came out of nowhere. He was still looking at me, the longest stare since I had known him. Bless me, he had hazel puppy-dog eyes. Behind them there seethed an intensity I couldn't get a handle on. I realized my hand was still inches away from the doorbell so I dropped it self-consciously. \n\n\"Yes,\" I answered. He tricked me with his eyes. This was Richard and I just agreed to have dinner with him. I couldn't imagine the silent drudgery I just committed myself to. It would have been better to eat alone. \"I mean, I just came to apologize.\" I moved quickly to salvage myself and maybe end this with a short conversation. Richard moved past me, closing his door. \n\n\"Over dinner,\" Richard stated, gesturing down the walk,\"I haven't eaten all day. I hope you don't mind Italian, I have a taste for pasta.\" I stayed at his threshold staring as he walked down the path. Coherent sentences from Richard was the last thing I expected. He turned when he realized I wasn't following. \"Coming, Melissa?\" he asked with all sincerity. \n\n\"My name is Mary, Richard,\" I stated. Following him now seemed unhealthy. I wasn't sure if I was at the beginning of a murder mystery. He looked up at me and smiled. Almost the same smile he had when he saw me dressed for the interview. \n\n\"Of course, Mary, \" he confirmed, \"but it would be better for my book if you called me Adam, at least for this evening.\" He was calm and attentive. Patiently waiting for me to catch up. Those damn eyes made me follow. He had been hiding them for years. I played along, convincing myself Janice would approve. \n\n\"Ah..Italian is perfect, Adam,\" I said with a shrug. This was going to be one weird evening. He held out his hand, patient and insistent at the same time. I took it like an idiot. He headed off with me in tow, a quarter step behind him. Any ideas of me controlling the evening faded away in that walk. How he had asserted his control was subtle and startling. I began to wonder if Janice set me up. I didn't like how good my hand felt in his. \n\nThe walk was silent. Richard didn't seem as uncomfortable with the silence as I felt. He bypassed the front entrance of an Italian bistro and walked down a small alley to the back door. I thought I may have made a grave error as I followed into the dark, quiet passage. I was relieved by the greeting Richard received when the door opened. \n\n\"Adam, good to see you again.\" A gray-haired man in a stained white apron smiled his greeting. His accent was Italian, but many years removed from Europe. It looked like we were all playing the name game. I was happy it wasn't just me. It seemed a bit more sane. \n\n\"I brought a surprise guest, Raphael,\" Richard responded. \n\n\"Mama help me, I would recognize Melissa anywhere.\" Raphael wiped his hand on a towel and held it out with big smile. I blushed as I shook it. I was beginning to think I was the last person in the world who knew about Melissa. \"Your table is ready and I set aside some of the those spicy meatballs you like.\" He led us to a private room in the back, away from the kitchen and separated from the restaurant proper. The table was laid with fresh bread and a bottle of red wine. Raphael quickly retrieved a place setting for me and headed off to give me time to go over the menu. It seemed Richard's order was already in progress. \n\nRichard was watching me as I perused the menu. I tried not to smile at his attention, but it was hopeless. I finally looked up at him. \"What?\" I knew he knew what I meant. \n\n\"I'm glad you came,\" Richard smiled softly as he spoke, \"I was surprised, but very happy.\" Those hazel eyes were not looking away. They seemed so strange on a man who could barely say hello a week ago. For some reason, I needed to get my apology out. \n\n\"I really came to apologize for the way I acted...\" Richard didn't let me finish. He reached out and covered my hand with his. I shocked myself by letting go of the menu and letting him have my hand. \n\n\"You acted perfectly,\" Richard said with grace, \"I couldn't have scripted a better response and I relished every moment of it.\" I should have pulled back my hand. I am sure my face showed my confusion. I couldn't think of anything to say. Richard chuckled and let go of my hand. I wished he didn't. \"You are truly God's Flower.\" He made it sound endearing. \n\n\"Okay, what is God's flower?\" I asked, trying to fill my confused silence. \n\n\"It stems from the first time I saw you.\" Richard realized his word choice. \" 'Stems' I have to remember that.\" His eyes left mine as he filed the word away in his brain. \n\n\"I haven't been to a botanical garden since grade school,\" I said, trying to verify that his fantasy world wasn't colliding with reality. Richard's eyes returned to mine and so did his smile. \n\n\"About five years ago I was researching landscaping and botanical care,\" Richard said as he leaned back in his chair, \"in truth, I was stalling with a bad case writer's block. Adam Westlake was getting repetitious and frankly boring. I was at a home and garden show where a florist was showing me a crossbred purple rose he had developed.\" My eyes went wide with realization. My company frequently attended those shows and I had worked the booth many times. Richard saw me connecting the dots and leaned forward to continue. \"The florist told me that if God had a favorite flower, his purple flower would be it.\" Richard paused for a moment, letting me remember. \"It was exactly then that a lovely young woman came by to admire the purple roses. Her exact words to her friend were, 'They're gorgeous, and my favorite color too.' \" Richard smiled as my memories flooded back. \n\n\"At that instant, it came to me,\" Richard continued and leaned back again, \"Adam needed a strong love interest, someone mysterious who could pull him apart and paste him back together. The florist's words kind of stuck and you became God's Flower.\" \n\n\"I remember those roses,\" I admitted, \"I remember that moment.\" I looked at Richard, trying to remember him standing there by the roses. Sadly, there was nothing but the roses and my friend Cathy still in my brain. \"But you moved into my apartment building,\" I said, leaning away, \"you were all anti-social.\" \n\n\"Sadly, the anti-social part is not far from the truth,\" Richard said quietly, \"ten years ago, this dinner would have been torture.\" He was looking at the table, folding a bit inward. \"My writing helps. That's why I stalked you to your apartment. I needed to keep seeing you without you seeing me.\" I really wished he didn't use the word stalked. I wished his eyes were still on me. \n\nRaphael chose that moment to come back in. I hadn't spent enough time with the menu so I took a chance and asked for whatever Richard was having. Raphael smiled and took off to the kitchen. I decided to fish for more information. \n\n\"Janice thinks I ruined you,\" I stated as I placed my napkin on my lap, \"I am supposed to make sure you know I don't hate you.\" Richard's eyes widened. \n\n\"Oh, God, you hate me for all this?\" Richard asked desperately. \n\n\"No,\" I answered as I took back a bit of control. I realized I had been following Richard's lead since his doorstep. It was awful of me, but it felt nice to see him a bit flustered. \"I am not sure what I feel. You kind of trespassed a bit. I read some of things you wrote about me.\" \n\n\"You didn't like it?\" Richard pleaded, \"it was never meant to hurt.\" \n\n\"Oh, no, the words were lovely,\" I tried to clarify my statements, \"it's just that the erotic parts seemed...too erotic.\" \n\n\"Oh, those parts.\" Richard was looking back at the table. \"My imagination tends to wander and that stuff kind of wrote itself.\" He was actually blushing. \"I guess it seems like an invasion of privacy to you. It was how I saw you at the time.\" I blushed. Where is dinner when you need it? \n\n\"And how do you see me now?\" I had no idea why I let my mouth utter that question. It wasn't the time or the place. This guy had been stalking me with his words for a long time. I still wasn't convinced I was totally safe. Those hazel eyes found mine. \n\n\"I would embarrass you even more if I told you,\" Richard answered sincerely. My blush wasn't receding and I had trouble controlling my stupid smile. I did the only thing I could think of, distract myself. I grabbed some bread and began buttering it. I saw, out of the corner of my eye, Richard smile. I suspected he was happy I didn't just storm out. He caught the hint and grabbed the bottle of wine to refill our glasses. Then he nicely changed the subject. \n\n\"I hope Janice is paying for this trip,\" Richard said as he placed the bottle back on the table. \n\n\"Yep, and first class all the way,\" I acknowledged. Something struck me then \"She doesn't know you're...kind of...normal?\" Richard laughed. I guess my searching for the right words did seem a bit humorous. I liked his laugh. \n\n\"She has no idea that my anxiety disorder,\" Richard emphasized 'anxiety disorder' for my benefit, \"has receded. I am not ready for book tours and TV appearances. I hope you can keep my secret.\" \n\n\"Of course I can,\" I conspired with a wide grin. I believed we just had moved into the friends stage. The sharing of secrets. Of course, he didn't know any of mine and that still seemed prudent at this point. \n\nIt was over salad that I reentered the name game. \"So, I shot at you, now what?\" I asked with curiosity. I sensed he may have written himself into a corner. \n\n\"Melissa, you are forgetting you just flew across the country to apologize for it,\" Richard said as if it was obvious. What a cop out. I wasn't going to let him get away with that! \n\n\"Adam, I shot and missed you three times for a reason,\" I said in between bites. They had some kind of house-made wine and vinegar dressing. I couldn't pick out the seasonings they added, but it really was quite good. Richard was smiling as he finished chewing. \n\n\"Melissa, my love, I have been waiting patiently all night for your explanation,\" Richard stated with his eyes all a twinkle, \"I am so ecstatic you came back, I would be willing to pretend it never happened if necessary.\" There was no way his readers would stand for it. Then I realized he was dumping it on me. \n\n\"You wouldn't?\" I grinned, stalling for time. Richard just nodded and went back to his salad. From what little I read, Melissa didn't have a defined past. She was this mysterious woman, much sexier than I, who kept disappearing from Adam's life. She always deftly deflected Adam's questions and he accepted that in trade for her passion. \n\n\"Adam, the people I work for can't know about the true us,\" I leaned closer and almost whispered my lies, \"your love has cost me more than you know. Neither of us would have walked out of the coffee shop alive had I not done what I did.\" There, I thought, that ought to be cryptic enough. I answered everything with nothing. \n\n\"We can run away, find our own private corner of the planet,\" Richard leaned closer to me, his whispering deeper than mine, \"let's just allow the world to turn without us.\" Yeah, like I want to go back and explain to Janice why this is Donald Rickers' last book. There is no way we were running away together. \n\n\"If it were only that simple.\" I leaned a bit closer. \"They would never let us go. We would be running for the rest of our lives. We have tonight. Let me be happy tonight.\" I don't know why I did it. It just happened. I reached up and combed my fingers along the the side of his head, pushing some errant brown hairs softly behind his ear. Adam/Richard kissed me then. His lips weren't as tentative as mine. They were soft, but firmly decisive and very demanding. \n\nRaphael chose that moment to deliver dinner. Richard snapped back before Melissa/I wanted him to. I was a split-second behind, looking like a schoolgirl leaning in for more. Raphael's grin told me he saw enough to make me blush. I quickly returned to a more upright position and glanced at Richard. He was also a bit red around the cheeks. Raphael moved extra quickly, laying down the dishes and grating some Parmesan to our whims. He was still smiling when he made his exit. \n\n\"Mary, I'm sorry about that kiss,\" Richard said quietly once the coast was clear. He already copped out once tonight. I wasn't going to let him do it again. \n\n\"Did you like it?\" I queried with as neutral an expression as I could muster. He quickly took a bite of his spaghetti, obviously stalling for time. Suddenly he put his fork down and swallowed hard. \n\n\"As a writer, it was wonderful,\" Richard admitted, \"as a man, it was phenomenal.\" He was staring at me with a hazel intensity. I was so happy he took the risk. My lips curled up involuntarily. I felt like how he wrote me. I stood and moved toward him, following his eyes. I cradled his head in my hands. When our lips touched this time, it was mine that were demanding. He pulled me onto his lap, his hands exploring my back and thigh. We necked like teenagers in that private room. I felt a warmth growing, a need I hadn't answered in a long time. I found a fireman. \n\nIt was the sound of the door opening that broke our kiss. No blushing this time when it closed quickly followed by a muffled chuckle on the other side. I moved back to my seat after I gave his forehead a little peck. I wanted more of him later. I loved that he was hesitant to let me go. \n\n\"Mary, I am no longer sorry about that kiss,\" Richard teased as he twirled his fork among the noodles. I laughed a bit too loudly and almost snorted it back. God, I hoped it didn't come out like I thought it did. Richard just grinned sweetly, so I forgave myself. \n\nI am ashamed to say Richard corrupted me into running up a tab for Janice. We decided to go to my hotel's bar and charge a few drinks to the room. He had a strange desire to torture Janice a little. I was complicit and found it devilishly fun. We ordered the expensive house-concocted martinis. I had the Alamo Apple and Richard went for the Crockett Coconut. The conversation was light and airy. I filled in Richard on what had transpired at Themes Publishing and he told me funny stories about how Janice handles him. I loved how he made sure he touched me whenever he made a salient point. I just made sure I touched him whenever I felt like it. \n\nI could tell Richard loved Janice like a sister. The way he talked about her, but held her at arm's length at the same time, was endearing. He liked the whole idea of Janice thinking he needed her more than he actually did. Secretly, I think he needed her more than he was willing to admit. Richard wrote books and Janice took care of everything else. It was a very symbiotic relationship. I found it poetic she was the one who sent me to Richard. \n\n\"I have to write some tonight, before I forget any of it,\" Richard said as we were finishing our drinks. He was looking around rather apprehensively. The bar was beginning to fill with its Friday night crowd. \"I would love to pick you up and take you to breakfast in the morning.\" It was wonderful he didn't take me for granted, but I wasn't ready for the night to end. It was time for me to take a risk. \n\n\"I would rather watch you write.\" I smiled and focused on Richard's eyes so my meaning was clear. I loved the way he looked at me, assessing my thoughts through my eyes. A grin slowly formed as he realized what I was asking. \n\n\"You could make sure I don't leave anything out,\" Richard said as he covered my hand with his. His eyes were split between mine and the growing crowd. I could feel his anxiety as he tried to make sure I understood he wanted me with him. I smiled to help him relax. \n\n\"Let me grab a few things from my room,\" I said softly, caressing Richard's hand lightly with my fingers. I knew what he was going to say before he said it. I saw it in his anxiety-filled eyes. \n\n\"I'll go up with you,\" Richard stated and stood and led me toward the elevators. When the elevator doors closed, he released the breath he had been holding. He looked over at me wearing embarrassment on his face. \"I'm sorry, it can come on suddenly.\" He paused for a moment then added, \"I'll understand if it makes you too uncomfortable.\" I heard the pain in his voice. He was going to let me run if I chose. I chose otherwise. \n\nI cupped my hand around the back of his neck and pulled his lips down to mine. I felt the tension leave his body as he wrapped his arms around me. There was so much strength in his kiss, I wanted to be devoured right there, in the elevator. The doors opened on my floor, breaking the moment. I knew I was going to have him tonight, I could wait. \n\nRichard was still a bit flustered about his actions. I saw it in his posture as I gathered a few essentials for the night. I saw how much the crowd affected him. I remembered how ill my 'shiver' regrets could make me. His anxiety had to be something similar, only insuppressible. I had no idea how to help him beat it, but I certainly didn't have to add to it. After I placed my toothbrush in my little travel case, I moved next to him and grabbed his hand. \n\n\"Any time you need to leave a place,\" I said with as much compassion as I could muster, \"tap me like this.\" I subtly tapped his hand three times with my finger. \"We'll leave together, no questions asked.\" Richard pulled me into his embrace. I was expecting a kiss, but received an intense hug instead. I think his eyes were watering, which made mine water. \n\nI felt my phone buzz in my pocket. Richard released me, he could feel it too. \"It's Janice,\" I said, looking the screen. \n\n\"Don't answer it,\" Richard said and smiled conspiratorially, \"let's let her sweat a bit.\" I swatted him playfully on the shoulder. \n\n\"You're just mean,\" I said, but sent the call to voice mail anyway. Janice was a bit controlling and I hated to admit it, but I found it a little satisfying to make her stew for a while. It was just a bonus I could lay it on Richard. \n\nOur walk back to Richard's condo was leisurely and very pleasant. Richard led me across a small wooden bridge to the less-traveled side of the river. Except for a few other amorous couples, the walk was very private. We could hear the revelry and see the lights on the other side, but its distance was buffered by the slow-moving, silent river. I liked this Richard, the invulnerable one. Here, without the crowds, he had a commanding presence. It didn't hurt at all that his entire attention was on me. I molded my body into his as we sauntered slowly down the trail. \n\nRichard's condo was a bachelor pad. Not the invite-the-boys-over kind of pad, but definitely never touched by a woman. The door opened on a great room with no pictures on the walls. The large glass window overlooking the River Walk was covered by thick drapes. There was one couch facing a large flat panel on the wall and a large desk against the other wall. The most comfortable seat looked to be the large leather chair near the desk. The desk held a fairly large flat panel computer screen that was currently flipping through a series of pictures, obviously a screen saver of some type. ",
        "The back of the room opened to a kitchen separated from the great room by a counter with three \n\nstools pushed under it. There was an empty tiled space for a table. Although sparsely furnished, it seemed clean and orderly. There weren't any dishes rotting in the sink like you would find in my apartment. Richard grabbed the remote control and hit a few buttons and mellow music came from the wall-mounted flat panel. \n\n\"Not really used to visitors,\" Richard said as an excuse for the sparseness. \n\n\"It fits you.\" I smiled. It was pretty much what I expected. I was surprised by the art that was being displayed on the computer screen. It was an eclectic mix of modern and traditional with a few illustrations mixed in. He saw where my eyes were going. \n\n\"It's what inspires me when I get stuck,\" Richard explained, \"I kind of pace around and one of those works will trigger some thoughts and another couple of pages will jump out.\" He shrugged his shoulders. \"Strange, but it works.\" I just nodded. A picture of purple roses flashed on the screen, it caught my eye because it was the only landscape type picture I had seen. It also was a picture of me and half of my friend Cathy. I looked at his red face. \n\n\"God's flower,\" Richard explained and squirmed, \"it's the only one I have. That's the limit of my stalking.\" I tried to hold my stern expression, but gave up and laughed. Richard smiled with relief. \"I forgot that was there. I took it with my phone and kept it because the readers liked you so much.\" \n\n\"I inspire you,\" I pointed out in a flirtatious way. \n\n\"For many years,\" Richard added. He nonetheless wiggled the mouse to stop the images. A word processor full of paragraphs appeared instead. \"I have some wine. I usually drink a glass while I work,\" he said as he moved toward the kitchen. He pulled out a half-full bottle of white. \"Would you like some?\" \n\n\"Please,\" I answered and moved toward the kitchen to shorten the delivery. \"What are you going to write tonight?\" I asked as he handed me a half-full wine glass. \n\n\"Well, strangely, Melissa stopped by Adam's apartment to explain the shooting,\" Richard replied - he seemed pleased with himself, \"Adam was so jazzed that she came back, he took her out to dinner before getting the apology. I had left them at the restaurant when you found me leaving for dinner.\" \n\n\"No way!\" I exclaimed. \n\n\"Your timing was perfect,\" Richard stated, \"and the kissing excellent. I am going to kiss-and-tell. I hope you don't mind.\" \n\n\"No way,\" I said again and headed toward his computer. The manuscript was on the screen so I scrolled back a few paragraphs and read. I could hear Richard snickering behind me. Sure enough, a modified version of what happened this afternoon was elegantly portrayed in words. Adam's apartment was nicer, the restaurant was French and Melissa was a lot prettier. I felt Richard comb his fingers through my hair as I read. I leaned into it subconsciously. My God, I liked how he described me, Melissa. I got up out of the chair. \n\n\"Write some more,\" I said giving him a quick kiss. I don't think he knew the kiss was for his magic words, but he smiled and sat down. I have never seen an author at work. His fingers moved so quickly, forming sentences that morphed into paragraphs. His word choices were so natural and fluid. Every once in a while, he would stall for a moment, backspace over a word and use another, then continue as if it wasn't disruptive. At times he was typing as fast as I was reading. \n\nI refilled my wine, pulled a stool from the kitchen and put it next to the desk. I sat, lightly massaging his neck, as I read the words that poured from him. Our earlier conversation as Adam and Melissa appeared on the page, slightly modified, but essentially the same. I absently sipped my wine as Richard described Adam's infatuation. When he portrayed my breasts, I blushed. I had no idea anyone would consider my breasts so intoxicating. I was heating up inside. I moved my fingers to behind Richard's ear as Adam leaned into Melissa for the kiss. Richard stalled there, thinking. \n\nI leaned down from the stool, wine on my lips, and passionately kissed Richard. He responded by kissing me back. I, ever so lightly, flicked my tongue across his lips. I felt a shudder travel through him. Our tongues danced to the soft music and my body stirred. I was about to crawl down onto his lap when he pushed me away and attacked the keyboard. My disappointment was short-lived as he recalled our kiss in words. He wrote what he felt and I felt what he wrote. I didn't know it could be put into words. I was breathing heavily as his passion poured out of him. He reached the end of the kiss and Melissa's lips moved across Adam's cheek to his ear. Richard stopped there with a set of quotes - he was waiting for words from Melissa. \n\nI crawled into Richard's lap. I felt his arousal as he let me take over the keyboard. I typed: \n\n\"Take me,\" Melissa breathed. \n\nRichard pushed the chair back, cradled me in his arms and stood almost effortlessly. His strength was surprising, his confidence intoxicating. I wrapped my hands around his neck and leaned my head against his shoulder. He carried me to the bedroom, smothering me with kisses along the way. \n\nRichard stood me beside the bed. I was flustered he hadn't laid me down. Slowly, he ran his hands down my sides, lightly grasping the hem of my shirt. He was going to undress me, standing. I was shaking in his hazel eyes. I wanted the door closed so full darkness could conceal me. He kissed my neck as his fingers dragged along my skin, lifting my shirt. I lifted my arms, wanting to hide, but wanting to stay. \n\nI closed my eyes as Richard pulled my shirt over my head. I wished I had worn a sexier bra. Something frilly and not so functional. I was afraid to open my eyes as he reached around for the clasp. I moved in closer, hiding what I could. He was so commanding in his actions, I wanted to please him, but felt worried the reality would never live up to his words. It should be dark the first time. \n\nMy bra dropped off my arms and floated to the floor. Richard could see me now. I could feel my insides cringing. I didn't know where to put my hands. \"I got it all wrong,\" he whispered, \"you are so much more beautiful than I imagined.\" I melted into his words as his hand cupped my breast. I covered his hand with mine, encouraging his exploration as warmth spread between my legs. I gave myself to him that first night and he used me so blissfully. \n\nAn insistent buzzing broke my slumber. I hadn't felt so relaxed in a bed in years. My body just wanted to lie there, enjoying its jellied muscles. The buzz forced my eyes open. A smiling face with lovely hazel eyes and a disorderly mop of brown hair greeted me. \"Good morning,\" Richard said. I smiled, realizing I was half exposed, but comfortable in his eyes. He knew every part of me now. I loved that he kept looking. The buzzing continued and I realized it was my phone. \n\nI crawled across Richard, naked, following the buzz to locate where my pants had landed. I laughed when a warm hand caressed my ass, sending a tingle to a very exhausted part of my body. The man was insatiable and I loved that I was his target. \n\nI fished out my phone, just as it quit buzzing. The screen said I had missed four calls from Janice. I showed it to Richard as I curled up into the nook of his shoulder. \"Have we made her sweat enough?\" I conspired. He kissed me and thought about it. I felt his hand gently roaming my body, caressing my back at the top of my butt. I could have spent the day right there in his arms. \n\nThe phone started buzzing again. Janice must have been frantic. Richard nodded so I answered it. \n\n\"Where have you been?\" Janice asked, sounding every bit like an irritated mother. I looked at the clock. It was only six. This was going to be good. \n\n\"Trying to apologize to Richard,\" I answered innocently. Richard was wearing a wonderful grin. He was really going to enjoy this. \"You just woke me up,\" I added to forestall her questions about her previous attempts. \n\n\"Did he accept? Is he okay?\" Janice's questions were a bit frantic. I could hear her concern and it was more than just the paycheck. \n\n\"I tried twice, but he kind of changed the subject.\" I was smiling now and hoping it didn't translate to my tone. \"He is really hard to apologize to.\" \n\n\"But he's talking to you. That's a good sign,\" Janice said, obviously calculating my words. I almost burst out laughing. Richard had his hand over his mouth holding back his own outburst. \"He won't answer his phone. Do you think you can get him to call me?\" She almost sounded like she was begging. I felt sorry for her and didn't want to continue the game any longer. Richard just shrugged his shoulders, leaving it up to me. \n\n\"If you want, you can talk with him right now,\" I said in my innocent voice. Richard rolled his eyes, but I could tell he was done with the game too. The silence on the other end was deafening. I was sure Janice was checking the time and adding in the fact that she had just woke me up. \n\n\"I'm interrupting...\" Janice stumbled out the words. I didn't know what to say so I handed the phone to Richard. \n\n\"Good morning, Janice,\" Richard announced. He was loving our surprise and it came out in his tone. I decided to make it a bit more difficult for him and even the odds for Janice. I ran my hand up his thigh and between his legs. Memories of last night flooded back. Richard was squirming. \n\n\"Everything...is fine.\" Richard was having trouble with his words as I brought him back to life. I was his toy last night. I decided he would be mine this morning. I dropped my head under the sheets. \n\n\"No...Janice, I'm fine... the book is fine,\" Richard stammered. I took him in my mouth, tasting the both of us. I loved how he jerked and the deep sigh I received. He was putty in my hands. \"Look, I'll call you back...in an hour... maybe two.\" I heard the phone being placed on the night stand. Richard tried to sit up, to take control. I pushed his chest back down. My toy - my fireman. It was three hours before we talked with Janice again. \n\nRichard was washing my back in the shower when I told him I was going to call Janice. I felt badly that I helped tease her. \"You really don't owe her anything,\" Richard said humorously as his hands worked on the small of my back. I loved the feel of hands there, I sensed he loved it just as much. I leaned my head back, and he instinctively leaned forward for a quick kiss. We were in sync. Words weren't as necessary anymore. \n\n\"She sent me to you,\" I moaned as he nuzzled my neck. I laughed as he pulled back, with a mouth full of soap, sputtering like a five-year-old tasting Brussels sprouts. I cupped my hand under the shower and dowsed his mouth, then kissed him properly to test the cleanliness. \n\n\"Then, maybe, I should call her.\" Richard smiled. \n\n\"You would just torture her some more,\" I said and tapped Richard's nose with my finger, \"she deserves at least some truth before you give her more gray hairs.\" He pulled me close. My wet skin to his, warm water caressing us both. \n\n\"Did I tell you how much I loved this morning?\" Richard asked for the fourth time. I could feel his excitement growing again. I teasingly ran my hand down his stomach and lightly ran my fingers through his sparse pubic hairs. \n\n\"You promised me breakfast,\" I teased, \"you'll wear me to skin and bones, Lover.\" In truth, I was famished. My body was begging for a break. Just a short one to replenish its strength. One part of me was willing to let me starve to death. I ignored her out of self preservation. \n\n\"Okay, okay, I'll feed you, but I can't promise I'll be a gentleman for long,\" Richard joked softly. It was going to be a wonderfully long weekend. He guided me under the water to rinse my back. I watched his eyes drink me in. I loved the way he looked at me. Somewhere, lost in the literary ether, Melissa was green with envy. \n\nRichard let me talk with Janice alone. I sat on the steps, outside his condo, half way down to the River Walk. It was actually a pretty tranquil spot. \n\n\"What were you thinking?\" Janice huffed. I could tell she had been stewing since this morning. I needed to set her straight so we could talk. I hated to sound nasty, but ground rules needed to be established. \n\n\"I guarantee you don't want to interfere with this,\" I stated firmly. I know she felt like Richard needed her care. She was thinking like a mother. \"It just happened and we are very happy it did.\" There was an extended pause. \n\n\"You're right,\" Janice conceded softly, \"I have a lot invested in Richard and I'm not talking about money. I care about him and this caught me by surprise. I'd hate to see him hurt.\" I smiled knowing we at least had a partial understanding. I also sensed a bit of jealousy. I think she liked the idea of Richard needing only her. \n\n\"You and me both,\" I agreed, \"I don't think you realize how much he values you. You would think you were his sister. He made me leave you in the dark just to tease you.\" \n\n\"He didn't!\" I could hear the smile in her voice. I didn't tell her about the drinks. I was going to save that one for later. There was no need to tempt fate. \n\n\"He is more devious than you know,\" I conveyed, \"I was more upset about the coffee than he was.\" I paused for a second as a thought struck me. I wondered if my coming out here was all part of Richard's plan. \n\n\"I guess I just never imagined Richard with a girlfriend,\" Janice said and then added with a chuckle, \"you know I'll end up calling you when he doesn't answer his phone.\" \n\n\"I can live with that,\" I said, \"of course, I have to be back at work on Monday so I may not be a lot of help.\" \n\n\"You guys haven't worked out any logistics yet,\" Janice stated. I hadn't thought much past the weekend. Everything was so new. \n\n\"No, we haven't thought out much past breakfast,\" I admitted, \"it just hasn't come up yet.\" \n\n\"Then I'll stay out of your hair this weekend,\" Janice said, \"tell Richard I will call him on Monday.\" The conversation ended with a set of goodbyes and a promise to stay in touch. I was happy we at least understood each other. I liked how she snuck in the need to talk about the future. It was rather motherly-like and necessary. I didn't relish the idea of a long distance romance. \n\nRichard and I ate breakfast at a small coffee bistro. The temperature was cool, but comfortable, so we chose to sit outside. I think Richard enjoyed the lack of walls hemming him in with other people. I was just pleased with the weather. We traded reading lists that morning. He was an ecliptic reader, dabbling in a bunch of genres. He had a particular like for history and preferred that to most fiction. I thought that was strange for a popular fiction writer. \n\nI rattled off my last few titles, all romance, and Richard just smiled. Of course, he already documented it in his books. Richard confessed he had never read anything in the romance category. He made the comment, \"I only read real books.\" He said it with a smile and meant it teasingly. I bit, and made a deal. He would read a romance of my choice and he could pick a book for me. He accepted the challenge quickly, making me wonder if I just got sucked into a raw deal. \n\nA young couple had stopped at the end of the walkway and were pointing in our direction while having some kind of discussion. It seemed the man was adamant and his companion just wanted to keep moving. I thought they were probably pointing at the bistro. I was proved wrong quickly. The smiling man dragged the reluctant woman to the table. I caught Richard's quick grimace. \n\n\"You know you are the spitting image of Melissa,\" the man was speaking to me. I looked at myself like an idiot. I was wearing my Berkeley hoodie to ward off the cool morning. 'Shit.' \n\n\"Melissa? Who's Melissa?\" I feigned ignorance. \n\n\"Come on, Todd. Let these people eat in peace,\" the woman said, trying to pull her partner along. \n\n\"Melissa. From the Adam Westlake novels,\" the man persisted. I was about to reiterate my ignorance when a masculine voice from the table behind us chimed in. \n\n\"He's right, you know. I was thinking the same thing.\" The man's voice was chorused by a few grunts of approval from people sitting with him. Richard just smiled and placed his hand over my shoulder, possessing me. \n\n\"The hair, the shirt and your eyes are perfect,\" the standing man said. His partner was less than thrilled with his descriptions. I felt Richard's muscles tighten. \n\n\"You're certainly as pretty as in the books,\" a new voice from the table behind chimed it. I flushed at the compliment. \n\n\"I'm sorry, I really don't know what you're...\" Our waiter quickly joined in over my words. \n\n\"You're the spitting image, Ma'am,\" the waiter agreed, \"I just read about that hoodie a few nights ago. I felt three light taps from Richard's finger on my shoulder. I had to agree with him this time. I feigned looking at my watch. \n\n\"Oh, Richard, we're going to be late,\" I said in exasperation, \"I'm sorry guys. I guess I'll have to read those books and find out what you are all talking about.\" Richard and I stood. He laid a couple of twenties on the table and we left quickly. \n\nWe were half a block away when I heard Richard let out the breath he was holding. I looked up at him and he just stared forward. He didn't like me seeing his weakness. The grip he had on my hand relaxed and we continued walking. I steered us into a secluded offshoot where an open-backed, curved bench sat, surrounded by a set of thick bushes with rubbery leaves. I didn't like him not looking at me. \n\nRichard sat with a sigh. I straddled his lap, my legs hanging down behind him. He couldn't not look at me now. \"What did it feel like?\" I asked softly. He didn't answer right away. I could see him calculating, wondering if telling me was the right thing to do. \n\n\"Suffocating...Ambushed...Like I am a child facing my parents after breaking the lamp. No control and a lot of fear,\" Richard said with his eyes closed. I could see the pain in the tightness of his forehead. At least he could describe it. \n\n\"And now?\" I cradled his head in my hands. \n\n\"Ashamed.\" Richard opened his hazel eyes. I could see the strength hidden behind his anxiety. I pulled his lips to mine. I felt his strength again. I ran my hands to the back of his neck and gave him my passion. He returned it. \n\n\"And now?\" I asked when I broke the kiss. \n\n\"Shamefully horny,\" Richard answered with humor back in his eyes. I smiled. At least my kiss could take away the shame. \n\n\"You write too well,\" I acknowledged, \"I'm going to have to retire this hoodie. Maybe change my hair.\" Richard reached up and ran his fingers through my hair. \n\n\"No, I really like it this way,\" he said honestly, \"it's you now. I can't imagine it any other way.\" I sent a private prayer of thanks to the stylist who talked me into it. \"It was your beauty they recognized. I can't blame them - I have been mesmerized for years.\" \n\n\"Why didn't you tell me?\" I asked stupidly and realized it almost immediately, \"No, don't answer that.\" I kissed him again and moved my lips across his cheek to his ear and whispered, \"You can tell me anything you want now.\" I felt a happy tremor run through his body. I nibbled on his ear and another tremor was followed by a quick intake of breath. I smiled and experimented by sighing audibly at the base of his earlobe. I could feel his erection growing through his pants. I pulled back from his ear, smiling. \n\n\"You have horny ears,\" I said proudly. I am sure my face was beaming at my erogenous discovery. I reached under my butt and felt his arousal to prove my point. My new power went straight to my head and I felt myself getting wet. I briefly considered trying to get away with a quickie right there behind the bushes. ",
        "\"Your hotel room is closer than my condo,\" Richard offered, his need growing like mine. I jumped up and pulled him to his feet. I leaned into his ear, brandishing my advantage. \n\n\"I want you badly,\" I whispered seductively. I am sure I looked the fool with a smile I couldn't hide. \n\n\"Stop that. It isn't fair,\" he said, walking just a little funnier than I looked. I skipped ahead like a schoolgirl, pulling him along faster. I wanted him with me, more than anything else right then, I wanted him naked and with me. \n\nI lost my advantage the moment I closed the hotel room door. I was ravished by the sex-crazed maniac I had created. I decided I liked being ravished by a sex-crazed Richard and his horny ears. \n\nIt was over dinner when I broached the future. We had ordered room service and rented a pay per view movie on Janice's dime. Richard enjoyed it all the more. He really had a thing about torturing her. \n\n\"I have to fly back tomorrow,\" I said in between bites of a really tasty filet mignon. (Richard had insisted we order the most expensive items on the menu.) He looked away for a second, sucking his lips in deep thought. \n\n\"I'll stay here through Tuesday and drive back on Wednesday and Thursday,\" he said then added, \"I don't do well on planes.\" \n\n\"If you want to leave tomorrow, I could drive back with you,\" I offered. It was a long drive alone. Richard smiled. \n\n\"I have half my book swimming around in my head,\" he responded, \"I need to get it down. If you're near, the last thing I want to do is write. You're just too delicious.\" I loved his word choices. \n\n\"I can make you dinner Thursday night,\" I suggested, \"just you and me.\" I loved how he was smiling at me. \n\n\"I'd like that a lot,\" Richard returned, beaming. I liked that we had plans. I had a feeling dates with him were going to be on the private side. Right now I was okay with it. I was hoping I wouldn't resent it over time. I was never a big party person, but a restaurant now and then wouldn't be horrible. I decided, for now, we would move at Richard's speed. \n\nTorturing Janice had its cost. We had both over ordered and overeaten. We spent the night cuddling with little desire for our previous sexual exploits. To tell the truth, it was just as enjoyable. I just loved touching him and he seemed so comfortable with me in his arms. We talked late into the night. He bounced ideas off me, what-would-Melissa-do questions. I gave him smart ass answers and intelligent ones. I flirted and teased, but stayed away from his ears. I needed and wanted comfortable Richard. I fell asleep in his arms, a most comfortable place to be. \n\nI woke up to a very amorous Richard. We made love slowly and with purpose. He cherished me and I responded in kind. This was his goodbye, the morning to remember until Thursday night. We simply shared each other. It was lovely, my tender fireman making sure I knew how he felt. \n\nAfter, sated and in his arms, he whispered to me, \"That's how I feel about you.\" He was absently caressing my breast as he spoke. \"I just had to let you know.\" I knew then that he had loved me before I even knew he existed. He didn't use words. I wasn't ready for the words. When he finally left me so I could pack, Thursday seemed just on this side of eternity. \n\nI wasn't anxious to get back to work. Life-changing weekends have a tendency to remold your viewpoint. I disliked my job before and now I was considering hating it. Damn student loans. The one bright spot was that I was one day closer to Thursday. I was measuring time by a man, and, even with all the independence that change had sucked from me, I was giddy. I read some more of Richard's book on the plane and deep into the night. He had written the words four years ago, yet I could feel his passion for Melissa, me. I could almost feel his arms around me as I read. \n\nI entered the main offices of Wilkerson's Hardware barely on time. Julie, the receptionist, was giving me a knowing smirk as I passed. \"Sick, my ass,\" she commented quietly as I moved beyond her desk toward my cubicle. I looked back to her wide grin and I blushed. Was it that apparent? I tried to relax my face, make it more normal. I never thought of Julie being that perceptive. Others were smiling at me. I felt like I was in one of those nightmares where you show up at the office naked. I was obviously the root of some kind of rumor. \n\nThe cause became apparent when I entered my work area. There, on my desk, was a glass vase filled with two dozen purple roses interspersed with some kind of white lily. It was exceptionally large as bouquets go. I turned four shades of red and felt my heart shudder. It was embarrassingly lovely. \n\nA small envelope stuck out from among the blooms. I pulled it away quickly and looked around, making sure no one was spying. I opened the envelope slowly and pulled out the small card. I almost cried when I read it. Richard had penned 'God's Flower' then crossed out 'God's' and corrected it with the word 'My.' I shoved the note quickly back in its envelope when Julie entered my cubicle. \n\n\"Someone had a nice weekend,\" Julie whispered. I was still flushed from the note and I could see it reflected in her eyes. I tried not to smile and maintain some decorum, but it was hopeless. \"Someone had a VERY nice weekend,\" Julie repeated, grinning conspiratorially. \n\n\"Shh,\" I said, trying to get her to stop. \n\n\"Purple means love at first sight you know,\" Julie stated, ignoring my reluctance. I wasn't going to tell her there was a deeper meaning. \"They were shipped overnight from Texas. Who the hell ships flowers overnight and were you in Texas?\" She was nothing if she wasn't persistent. \n\n\"Look, I just met this guy,\" I tried to make it seem normal. No big deal. Julie wasn't biting. \n\n\"God's flower, my flower. What's up with that?\" Julie crossed her arms and assumed a stubborn pose. She had read my note. Of course she did, she was Julie after all. I was about to express some anger and was interrupted. \n\n\"It's because she looks like Melissa,\" Bob, my purchasing counterpart, said from the cubicle next to mine. He stood and put his arms on the cubicle wall. I now had two people to shut up. \n\n\"Who's Melissa?\" Julie asked. Bob was smiling. I was grimacing. \n\n\"The mysterious love of Adam Westlake, from Donald Rickers' novels,\" Bob imparted his knowledge. I squirmed. \n\n\"Shh,\" I repeated and was ignored. \n\n\"I've heard of him,\" Julie said. \n\n\"Adam Westlake calls Melissa God's Flower,\" Bob continued, \"and our Mary is Melissa's spitting image.\" \n\n\"You got that from a book?\" Julie asked incredulously. \n\n\"The descriptions are quite vivid,\" Bob answered as I cowered in my chair, \"purple is Melissa's favorite color.\" My face was turning purple. \n\n\"Stop it! I have work to do,\" I pleaded. \n\n\"We're eating lunch together, girlfriend, and you are going to give me all the dirty details,\" Julie ordered good-naturedly, \"if you don't, I am going to start a rumor you're dating Donald Rickers.\" Her revelation was meant in jest, but it took me by surprise. \n\n\"Please, don't!\" I responded, shocked at my adamancy. Julie's eyes went wide. \n\n\"Oh my God, you are Melissa,\" Bob whispered, \"you know Rickers, don't you?\" I was never good at keeping secrets. The ramifications of this getting out right now hit home. My eyes were watering. \n\n\"Please, stop,\" I pleaded once again. Julie saw something in my face and looked at Bob. \n\n\"This conversation never happened, Bob,\" Julie said sternly. Bob looked at me and then nodded his head. He sank back into his cubicle. \"I'm sorry, Mary, I stick my nose where it doesn't belong all the time,\" Julie apologized, \"I was just happy to see you get flowers.\" \n\n\"Lunch, okay?\" I asked. I guess talking with someone who already knew would be liberating. \n\n\"Sure,\" Julie responded with concern, \"and my lips are sealed.\" She smiled at the bouquet on my desk and then headed back to her desk. \n\nI spoke with Julie at lunch and the next day's lunch. I told her almost everything, leaving out only Richard's anxiety. She had a voracious appetite for personal information. She became my sounding board. Julie never judged and was more interested in the sex being good. She was enamored with the idea of dating a famous author, whether he was a private man or not. I decided nothing during those lunches, but I felt better because of them. They made the days go faster which was bringing Thursday's dinner quicker. \n\nBob, for his part, kept quiet about his discovery. He did whisper a request for an autograph, and I promised I would try. I wasn't sure if Donald Rickers signed anything. I got home late on Tuesday, we had to double check purchase quantities to verify a new inventory system again. The system that was supposed to save us so much time was currently costing us twice the time. I was surprised to see Janice waiting at my apartment door. She was holding a bottle of wine and a pleasant expression. \n\n\"I was in the neighborhood and decided to stop by,\" Janice stated warmly, \"I thought we could talk.\" The wine told me she may not have seen the room service bill yet. I smiled warmly and let her in. \n\n\"I was going to make a salad for dinner, are you hungry?\" I offered. \n\n\"Sure, if you let me help,\" Janice countered. I emptied the fridge of its vegetables and we sliced cucumber and shredded carrots together. \n\n\"I just received some more pages from Richard,\" Janice said as she chopped some broccoli, \"Adam has reaffirmed his love for Melissa and he vowed to free her from her past. He has gone into action mode, the stuff his readers eat up.\" \n\n\"That's good, right?\" I asked, pulling three types of dressing from the fridge. \n\n\"For Themes and his readers, yes,\" Janice answered, \"you do know he is also talking about you when he writes about Melissa?\" \n\n\"I saw it first hand,\" I said, remembering the first night Richard and I spent together. \n\n\"He loves you,\" Janice stated. She didn't leave room for debate on the issue. I looked at her, with her motherly concern, and just nodded. She looked down at the broccoli, \"Are you going to run the first time he has a panic attack?\" Her question was soft and quiet. She was trying to feel me out, to see what I would do to Richard in the long run. \n\n\"He had two when I was out there,\" I said almost proudly, \"I am not afraid of his anxiety, I am just trying to figure out how to work with it.\" \n\n\"Two? And he still wrote?\" Janice raised her head, beaming. \"He usually goes dark for days after one. How did you break him out of the funk?\" I was blushing bright red, not really knowing how I should answer. \n\n\"Kissing seemed to help,\" I replied sheepishly. Janice snickered, trying to hold back a laugh without spitting all over the vegetables. \n\n\"I tried everything else,\" Janice joked with a shrug, \"I think I'll leave that remedy in your capable hands.\" From that moment on, I sensed Janice had fully accepted me. I had her mom 'seal of approval.' \"Do you love him?\" Janice asked, this time looking straight at me. She was ready to accept any answer I gave, positive or negative. \n\n\"I am not ready to say it yet,\" I answered truthfully. Janice started laughing and had to turn away from the counter to not spoil the dinner. \"What's so funny?\" I asked with apprehension. \n\n\"As an editor, may I rephrase your answer?\" Janice was grinning from ear to ear. I nodded. \"Yes, but I haven't told him yet,\" she rephrased. I sucked in my bottom lip and I just nodded. She was right. I was afraid of the future and needed more time to adjust. \"It's not what I imagined, but I am truly happy for the both of you. Richard is one lucky man,\" Janice added. I became a Janice fan. \n\n\"You haven't seen the room service bill yet.\" I warned. Janice just laughed again. We opened the bottle of wine and enjoyed our salads. I had been planning a little workout tonight, but thought talking about Richard with Janice would be more pleasurable. It was. After we cleaned the dishes, we took the rest of the bottle of wine to couch, kicked off our shoes, and talked some more. \n\n\"I want to make you an offer, but I am afraid you might take it the wrong way.\" Janice was hesitant to broach the subject. I think she just moved from motherly to businesswoman. I told her it was okay to continue. \n\n\"I would like to bring you on at Themes,\" Janice said, almost as a question. I was floored. How do you answer something like that. I am screwing your best writer so you want to bring me in-house. Janice was quickly losing her appeal and she must have seen it in my face. \"I was afraid you might react that way - please, let me explain.\" I took another sip of wine and held my temper in check. \n\n\"Richard is Themes Publishing,\" Janice began, \"he is eighty percent of our business. He doesn't do appearances and book signings like most authors. He doesn't respond to reader mail and won't let us do it for him. There is a lot of untapped potential in that man, markets he hasn't even tried to penetrate. Did you know only five percent of his readers are female?\" Janice paused for a second trying to gauge my reaction. I just nodded and she continued, \"If we could double the female readership, it would mean tens of millions.\" She paused briefly again. \"Richard won't pursue these things, but he would let Melissa do it. We are his family, Mary. We would love to have you on board, moving his books to new markets.\" She was throwing marketing at me. I wanted to leap at the job, but it still felt wrong. \n\n\"You want me to keep Richard in line?\" I asked sarcastically. \n\n\"No one keeps him in line and keeping him happy is not in the job description. I'll admit that a large part of your appeal is that he trusts you,\" Janice responded. \n\n\"Why does the whole idea feel so...whorish?\" I asked. \n\n\"Please don't look at that way. You're right that I wouldn't offer this to anyone else, but Richard doesn't trust anyone else.\" Janice threw up her arms, almost spilling the wine. \"I'm taking a risk even asking you. Richard told me he would switch publishers if I pissed you off with the request.\" \n\n\"You already mentioned this to Richard?\" I shouldn't have been surprised. \n\n\"Yesterday.\" Janice nodded. \"He didn't like the idea at first. He thought you would be insulted. I thought he might fire me for the suggestion. You and I are the only two who know him well enough. I know how far I can push in the right direction. I also know you can push farther - before you say anything, that is exactly what I told Richard. It is what convinced him to even let me ask.\" \n\n\"He wants to be pushed?\" I asked surprised. \n\n\"Gently, yes. And only by you,\" Janice stated, \"he knows instinctively that you understand his limits and would never push him over the edge. He gets really upset when he disappoints and goes out of his way to avoid situations where it can happen. For some reason he has no desire to avoid you, the biggest risk he has ever taken.\" \n\n\"I would be able to decide what paths we take?\" I needed to make a few things clear. \n\n\"Yes,\" Janice answered without a pause. \n\n\"If anything came between Richard and me, I'd quit in an instant.\" I felt that needed to be made crystal clear. I knew I was inching toward acceptance with Richard's acquiescence. He needed me, and, God help me, I needed him. \n\n\"Of course.\" Janice smiled. \"That's the reason he trusts you. I wouldn't be asking if that wasn't a foregone conclusion.\" I looked away, trying to think of reasons I shouldn't take the job. I had no desire to work at Wilkerson's Hardware anymore. There were no other opportunities throwing themselves at me. Just those damn student loans. It always ends with the money. I hate talking about money. It just makes me feel greedy. \n\n\"I need thirty-two a year, I can't survive on less,\" I stated with the firmness of a fish out of water. Janice just smiled. \n\n\"We'll start you at fifty-five, and, after six months, Themes will take over any outstanding student loan payments for as long as you work for us.\" Janice knew she had me. I was trying not to look stupid after asking for such a low amount. \"Richard is a hundred million dollar business, Mary,\" she added to make sure I understood. \n\n\"You're risking a lot, based on the one weekend Richard and I have spent together.\" I don't know why I harped on the negative. I guess I just wasn't used to people handing me things like this. \n\n\"Business is a risk. Richard was the biggest risk I ever took and he worked out rather well,\" Janice responded, \"I will never find another person who he will respond to. It may be a very long time before you get another offer like this. We all suffer a little if you turn this down.\" It wasn't really a choice. Staying at Wilkerson's seemed senseless and Richard needed me. \n\n\"I'll take the job,\" I agreed, \"I'll give Wilkerson my two weeks' notice tomorrow.\" \n\n\"Wonderful,\" Janice beamed. She grabbed the bottle of wine and emptied it into our glasses. \"To a long and fruitful employment,\" she toasted. We clinked our glasses and I sipped wine with my new boss. \n\nI was nervous when Thursday finally rolled around. A lot had changed since the weekend. I had spoken briefly with Richard on the phone - not a good way to talk with him. He was more of a letter person. He agreed to meet me at my place at seven thirty. That would give me time to clean up after work and cook a dinner. I rushed home a little late. Work was in a turmoil due to my two-week notice. They had me documenting all my procedures and training a temporary replacement. They tried to offer me more money to stay. I have to say it felt good to have a business desire you. I declined graciously, secure in my direction. \n\nWhen I finally arrived home, Richard was standing at the door holding a single purple rose. \"I couldn't wait anymore,\" he said with a smile. The gulf I thought was created over the last three days disappeared in an instant. He looked so good standing there, his hazel eyes begging for mine. I threw myself into his arms and we kissed deeply. I loved the feel of him, his arms wrapping around me, holding me like he would never let go. I heard a sharp intake of breath from down the hall. \n\nDebbie Brindlemen, her gray hair askew from the wind, was holding a bag of groceries and staring at us in shock. It wasn't that I was kissing a man. It was that I was kissing Richard, the building's shy guy. \n\n\"Good evening, Debbie,\" I said warmly. I shouldn't have been enjoying her shock, but I found it enjoyable none the same. \n\n\"Hi, Mary...Hi, Richard.\" Debbie looked at us both in turn. She had forgotten to close her mouth. I could smell the gossip brewing from where I stood. \n\n\"Debbie, you look absolutely wonderful tonight,\" Richard said from whatever cloud he was on. I was still in his arms and couldn't help smiling at his words. Words that weren't on paper, that came from his mouth, that didn't try to hide. He was looking straight at Debbie. The woman blushed and I could see the schoolgirl in her wrinkled eyes. She saw the dashing Richard. The same one I saw. \n\n\"Why...thank you, Richard,\" Debbie stuttered. At least the gossip would be pleasant. \"You two look very good together.\" She smiled honestly. I liked her assessment. \n\n\"Thanks.\" I smiled back and gave Richard a quick peck on the cheek. Debbie giggled and unlocked her door. She gave us a last, bright look before she disappeared into her apartment. I brought Richard into mine. \n\n\"I missed you,\" Richard said softly, running his hand through my hair, \"I really missed you.\" My insides melted at his words. \n\n\"Ditto,\" I said before he kissed me again. This time his hands traveled to places the hallway wouldn't allow. Dinner was really late. \n\n\"I took the job Janice offered,\" I told Richard over toasted cheese sandwiches. I had planned a nice dinner, but time got away from us - blissfully so. \n\n\"She told me,\" Richard returned, \"she is really excited about it. Thinks you'll take me in new directions.\" ",
        "\"I don't want to cause you pain,\" I professed, \"I don't like to see you hurting.\" \n\n\"I can take a little pain as long as you're there with me,\" Richard confessed, \"you're good for me. Janice knows it, I know it and I sure hope you know it.\" I smiled at his trust. I wished the world could see Richard as I saw him. Handsome, confident and oh so loving. \n\n\"I will be there, always,\" I said confidently. \n\n\"And I for you,\" Richard said absently, \"I would run through a burning building to get to you.\" I knew he meant it. He was my fireman. \n\nThe weeks that followed were some of the best in my life. Richard stayed in town and we enjoyed each other fully. Wilkerson's threw me a going away party that had me in tears, good tears. Themes welcomed me with open arms. I had my own office, it was my first, and what everyone thought was a humorous desk nameplate. On one side it said 'Mary Higgins' and on the other it said 'Melissa.' I kept it on the 'Mary' side unless the day was stressful. Then I would turn it to the 'Melissa' side. Melissa was known to carry a gun. \n\nAny thoughts of this being some kind of patronage job went out the window the first day. Janice inundated me with marketing information. By the end of the first week, I knew exactly where Richard's books stood in the marketplace. The competition was as fierce as any other product line. The battle for product placement in a store as well as online was bloody. Richard's, or Rickers', new novels were easy to place at the forefront. It was keeping them there that was the difficult job. Targeting that new reader and getting him or her hooked was the challenge. I was in marketing heaven. \n\nRichard, as Donald Rickers, signed a copy of his newest book for me. I wanted to keep my promise to Bob for his discretion. Richard had signed a few before, but had no desire to try for a full-fledged book signing - way too many people. The inscription was nice 'Thanks for being a friend to Mary. Sincerely, Donald Rickers.' I kissed him in payment and dropped by Wilkerson's to deliver it to Bob. \n\n\"Oh my God!\" Bob exclaimed. He was way more excited than I had expected. \"Do you have any idea how much this is worth? I mean, I would never sell it, but thank you so much.\" I thought he would jump out of his pants. \n\n\"It's just a signature, Bob.\" I smiled, thankful I could return his favor. \n\n\"This is rare, Mary. Really rare,\" Bob whispered reverently, \"he doesn't sign anything. I should know, he's my favorite author. The blogs are always buzzing when anything of his shows up. Which is practically never. Very rare indeed.\" My marketing brain kicked in. I almost ran back to work. \n\nI spoke with Janice and watched her face light up. \"Do you think he would do it?\" she asked. \n\n\"Of course he would,\" I answered, \"it could help the world, get free press and maintain his anonymity. I would need some kind of authenticity document on Themes letterhead - your signature would help.\" \n\nRichard and I spent the evening researching our first test. He thought the idea would never bear fruit, but he loved me and played along. It took us about two hours to find something that appealed to Richard. A charity fundraiser for a children's hospital. They were going to have an auction in two weeks. \n\nI spent the next day on the phone organizing our donation. Janice had a first edition, leather-bound version of Richard's first novel. Richard came in the next day and hand wrote an inscription and added his signature. We developed a gold leaf certificate and had every department head and Janice sign it after witnessing Richard signing. No one was allowed to see the inscription - that was Richard's idea. He used a ribbon to close the book and tie it shut. I liked the mystery. Richard just liked to tease Janice who was in a panic that his inscription might be inappropriate. \n\nThe hospital agreed to accept the donation for the auction. Richard just sneered and said they would be lucky to get a hundred bucks. Janice insisted I wear the Berkeley hoodie when I dropped off the book. It was a black tie affair, and I was planning on wearing a nice dress to make the delivery. We went back and forth until I gave in. Since I was going to drop it off before any of the guests arrived, it made little difference whether Melissa or I dropped it off. \n\nThe afternoon of the event, Janice hired a limousine to deliver the book. I told her it was over the top, but she was insistent. She walked me out to the limo while congratulating me for thinking out of the box. I stepped in while she held the door for me. Suspicions that I was being buttered up for something began to surface. \n\n\"By the way, there may be a few cameras there. So smile,\" Janice said and quickly closed the door. The driver headed into traffic before I could respond. Anger is the first thing you feel when someone takes you for a ride. The second emotion is revenge. I pulled out my phone and called her. She was waiting. \n\n\"What do you mean there will be cameras?\" I grimaced. \n\n\"Now sweetie, it was your idea. I just added a few touches.\" Janice's voice was all flowery. \n\n\"Janice, I thought we talked about things first.\" I moved to my commanding voice. The one most people ignore. \n\n\"Four hundred seventy-six dollars and seventeen cents,\" Janice responded. \n\n\"What?\" \n\n\"Your room service bill,\" Janice laughed, \"I'm just having my fun now.\" The line went dead. Richard teases Janice and Janice teases me. How did I let myself get in the middle of those two? I sat in the stew of my own making and plotted my revenge. I would have to enlist Richard; he had the most devious mind. \n\nJanice lied when she used the term 'a few.' There were at least ten cameras, maybe more. There was also video being taken. I was going to have to spend some serious thought as to how to get her back. The red carpet had never been in my dreams. I never saw myself on a runway and felt fairly uncomfortable. The chauffeur was moving way too quickly around the car to open my door. I took a deep breath and let it out slowly. I felt my heart pumping hard. I imagined this as a smaller version of what Richard feels. No wonder he found it hard to breathe. \n\nThe door opened and I stepped out with the small wooden chest we had constructed to contain the book. I smiled as best I could, trying not to trip and fall as I self-consciously walked up the steps to the hall. Cameras were going off left and right. I knew video was being taken. I also knew I hated Janice right then. I dismissed the silly dream of becoming an actress - no way could I put up with the pressure. \n\nA man in a tuxedo was waiting at the top of the stairs, smiling. Damn, they wanted me to do this outside. I was hoping we could go inside, behind a few doors. I heard someone call \"Melissa\" from behind the cameras. Oh great, Richard's fans were here. I smiled and waved, trying desperately not to trip on my own feet. It is really difficult to walk when you're thinking about walking. About a year later, I reached the top of the steps. The man in the tux was almost laughing. \n\n\"Janice said you would enjoy this,\" the man said quietly, out of earshot of the crowd. I gritted my teeth while trying to hold my smile. \n\n\"Janice is dead to me right now,\" I said sarcastically. He laughed and took the box from my hands. He turned me around and put his arm around my waist. We posed for a few more pictures and he thanked me as Melissa, loudly and clearly. My five minutes of fame seemed like a decade by the time I was finally back in the car. \n\nThe driver must have pushed a button because a small cache opened with a chilled bottle of wine, a couple of wine glass and a note. I opened the note and it simply said 'Thank you, Janice.' I didn't hate her anymore. I did drink her wine, and was still contemplating revenge. \n\nThe book auctioned for just over thirteen thousand dollars. Janice's little show had increased the hype. There was a lot of money at the event and the book was one of the most unique items. The winning bidder, a stock-broker, broke the ribbon and read the inscription. \n\nYour gift will touch many small hearts and warmly wrap mine. \n\nThank you for being so human. Donald Rickers \n\nI knew all this because we made the late news. The internet went wild as Richard's fans clamored for information. Richard was floored. I was self-critical, looking at my large butt climbing stairs on the news. Someone should have told me those pants didn't look good on me. Richard assured me it was my imagination. I kissed him and decided to toss the pants. \n\nJanice was ecstatic the next morning. She was waving the morning paper at me. Melissa made the society page and so did the winning bidder. We had also received a mention on a national morning show, 'The Sunrise.' The reclusive Donald Rickers was the angle. We had buzz and a lot of it. Richard, through Themes, matched the winning bid. He tried to do it quietly, but it leaked anyway. \n\nThe following day brought the biggest surprise, 'The Sunrise' wanted to interview Melissa. Their studios were in the city, only a few blocks away from Themes. \"Mary, over eighty percent of their viewers are women,\" Janice championed the go ahead.  \n\n\"I was scared to death just delivering the book. What do you think I would like on TV?\" I was definitely in the 'no' category. \n\n\"Look, there won't be any surprises on this one. You know what you're getting into and your so-called miserable walk was a resounding success.\" Janice was, of course, all for it. She was a numbers person. If it raises our sales by one percent, then it must be a good thing. \"You would look phenomenal on TV. I can't think of anyone better to represent Richard.\" She was good. Reminding me this was for Richard was no accident and I knew it. \n\n\"All I had to do before was walk, now you want me to talk,\" I argued. \n\n\"We'll coach you on what not to say and then hold practice sessions to make you sound fluid,\" Janice continued the hard sell, \"I have all the confidence in the world in you. I wouldn't have agreed otherwise.\" \n\n\"You already told them yes!\" I was a little perturbed. \n\n\"Just a tentative yes, nothing is set in stone,\" Janice countered, \"think of what this could do for us, for Richard.\" She was using my love against me. \n\n\"Arrggh!\" I grunted at Janice. I was running out of useful words and I knew I was going to go. I just wanted to make sure she knew it was on her if this turned into a disaster. She smiled when she recognized my surrender. \n\nThe coaching was brutal. I had two days to prepare and Janice was leaving no stone unturned. The basic rule was to get Richard out of the conversation and I have no idea who Donald Rickers is. By the end of the two days, I was really good at deflecting probing questions. The toughest one was why I looked so much like Melissa. My pat answer was 'It was just a coincidence and one of the reasons I was hired by Themes. I had my hair done to match.' I tried to tell Janice I was really bad liar. She insisted that with practice it wouldn't seem like a lie. I had naively thought marketing was a bit more ethical. I justified it by convincing myself they were harmless lies to protect Richard. \n\nThe absolute worst part was seeing myself all over the TV. They were pushing the spot heavily using the book delivery footage. Every time I saw the commercial, I cringed. I wanted to be the person who hired the spokesperson, not be the spokesperson. It's for Richard, I kept telling myself. Somehow it kept coming back, 'it's for Janice.' \n\nOf course I had trouble sleeping the night before the show. Stress did that to me. This time I had Richard to hold me which made it more comfortable. He kept nodding off, then wake with a start at my tossing. He would just smile, pull me closer and stroke my hair before he would drift off again. He was utterly satisfied with me in the bed, asleep or not. \n\n\"I'm going with you,\" Richard said as I finished donning my Melissa uniform. I was really going to have to get a new hoodie if this type of thing was going to continue. \n\n\"That's kind of risky, don't you think?\" I asked concerned. \n\n\"Naw, no one will figure it out.\" Richard seemed confident. \"You're stressed and exhausted, I'm not letting you go alone. I am sure they have a room I can wait in.\" I moved into his arms and kissed his cheek. \n\n\"I would like that,\" I admitted. Knowing he was going made me feel better. I only had about four hours sleep total. \n\nWe arrived at 'The Sunrise' studios two hours early as the producer had demanded. We were ushered into a room where an assistant producer prepped us on how things would work. She told Richard he could wait in the room during the show, monitoring it from the screen on the wall. He gave me a quick kiss and wished me luck as I was moved on to makeup. \n\nFear was growing as my time slot approached. I was in one of those situations where I really wished I said no. I know I would have regretted it, but it had to be better than the butterflies trying to eat their way out of my stomach. I took deep breaths and smiled at the show's celebrities as they were introduced to me. Having non-nervous people tell you that you don't need to be nervous is next to useless. I just kept running through what I was going to say, trying to keep it at the front of my mind. Five minutes before I was supposed to go out, I was introduced to my interviewer, Stacy Phillips. \n\n\"I'm good at what I do,\" Stacy gave me her TV smile as she spoke, \"I'll ask questions and you just have to answer. I'll keep the conversation going, just relax and enjoy it.\" I only felt slightly better, but I smiled anyway and took more deep breaths. I really wished I had said no. \n\nI was ushered out on set and took one of the leather seats. I had to shift my ass a bit to accommodate the microphone transmitter they had clipped to my pants. I was as ready as I would ever be as the guy next to the camera began counting down. My own personal doom clock. \n\n\"I am here with Mary Higgins or, as you Donald Rickers' fans would know, Melissa,\" Stacy said with a smooth delivery. I envied her calm. \"She made her first appearance while delivering a rare signed Donald Rickers first edition for the children's hospital charity auction. Tell me Mary, did you ever think it would fetch thirteen thousand?\" The morning show spots were quick, we had skipped right to the questions, by-passing the hellos. \n\n\"No, Stacy, we were as surprised as everyone else.\" 'Smooth,' I thought to myself. \"Donald's fans have always been incredibly supportive, but that kind of generosity was more than we ever expected.\" I didn't stumble over my words. I was inwardly proud of myself. \n\n\"From what I have read, preparing for this interview, you look astonishingly like Melissa, the mysterious love of Adam Westlake in Donald Rickers' novels.\" I knew the hard questions were coming. I saw it in Stacy's eyes as she spoke. \"Did Donald base the character on you?\" I smiled, trying to put a little humor in my answer. \n\n\"If it were only true,\" I lied smoothly, \"no, it's only a coincidence. I am sure there are a thousand other women just like me. I was just fortunate enough to be chosen to represent her.\" It sounded good and I was feeling better. \n\n\"So, have you met the reclusive Donald Rickers? Can you tell us who he is?\" Stacy asked with a sly expression. Her eyes went from soft to those of a bird of prey. I was prepared for the question. Janice had made sure of that, but I didn't think how it was asked. I sensed I was being baited. \n\n\"No, that's a secret I'm not privy to,\" I lied again, \"I am told he is a very private man.\" Stacy's smile turned almost evil. My fear was coming back. \n\n\"We did our own research and I have to tell you, Mary.\" Stacy seemed exceptionally pleased. I was panicking. \"I don't think you're being wholly honest with me.\" I never was a good liar. I grabbed hold of the arms of the chair to stop my hands from shaking. \n\n\"I'm sure I don't know what you mean, Stacy,\" I responded. My stomach was doing flip flops and I felt a bit dizzy. \n\n\"I am sure you remember Betty Simpson. She works in the same building you do.\" Stacy smiled as Betty walked onto the set and took a seat across from me. All the blood in my body rushed to my face. I was being ambushed. I didn't practice for this. Betty smiled at me with the same smile she used to calm me after the coffee incident. 'Sneaky bitch' was the thought that came to my mind. I hated being me at that moment. Stacy seemed to be in her own personal heaven. \n\n\"Betty seems to think you do know Donald Rickers,\" Stacy said with confidence, \"and that you may be the one and only Melissa.\" I was suffocating. My heart was beating way too fast. \n\nI sat in shock, trying to interject as Betty recounted the coffee incident. Things were falling apart in front of me and it was happening on a national broadcast. Stacy kept me out of the conversation and I wasn't strong enough to stop her. Betty had surmised my connection to Richard, she knew he lived in my apartment building because I told her. She knew he was involved in Themes Publishing because she had shared an elevator with him in the past. I watched her ruin me step by step, putting the pieces together on national TV. \n\n\"So I have to assume,\" Betty continued with pride, \"Mary got her job because of the hot coffee, possibly threatening a lawsuit\" Stacy looked back to me with her winning smile. \n\n\"Is that true, Mary?\" Stacy asked, looking at me with a victor's smile, \"is Donald Rickers' real name Richard, and are you blackmailing him?\" I stared. I had lost all control of the situation. I felt like a child facing her parents after breaking the lamp. I was in an incredible amount of internal pain. I wanted to run. \n\nI stumbled for words, I couldn't put together a coherent sentence. The world knew I was lying. \"Maybe we can get that answer when we come back.\" Stacy smiled at the camera as its red light went dark, indicating a commercial break. I couldn't speak, couldn't even yell my hatred at what they had done. My heart was going to explode as tears began to form. I couldn't stay any longer. I had ruined everything. I stood, turned quickly and started to run. \n\nI was caught by a strong set of arms, only a few feet from my chair. \"I've got you,\" Richard said softly. I folded myself into him and began to cry. \"I'll give you five minutes if she leaves,\" Richard said forcibly to Stacy while pointing at Betty. I could feel his muscles tense, holding my shaking body. He was visibly angry. \n\n\"And who are you?\" Stacy asked with indignation. \n\n\"Richard Thompson a.k.a. Donald Rickers,\" Richard stated, \"and I expect an on-air apology.\" Stacy whispered something to one of the assistants and Betty was shuffled off the set grumbling about still wanting her money. I fed on Richard's anger. \"Get me a damn tissue!\" he ordered. I had never seen him in king mode. I didn't know he had a king mode. \n\n\"I love you,\" Richard whispered as he wiped the tears from my eyes, \"I couldn't watch them do that to you - I had to come.\" \n\n\"I think I've ruined everything,\" I stuttered, trying to drink in his hazel eyes. The strength I needed was in them. \n\n\"You have ruined nothing,\" Richard said lovingly, \"we will fix this and anything else that's thrown our way.\" I loved the word 'we' more than anything else right then. I kissed him, really kissed him. I heard a gasp from behind me and ignored it.  \n\nSomeone yelled \"fifteen seconds\" and I knew I had to straighten up. Richard was quickly fitted with a microphone and we took our seats next to each other. \n\n\"It seems we owe you an apology, Mary,\" Stacy said solemnly when the red lights went back on, \"we blindsided you with incomplete research and for that we are sorry.\" I liked the way Richard used 'we' better. Stacy should have used 'I.' I nodded instead of verbally accepting, since I didn't trust my voice. ",
        "\"On a brighter note.\" Stacy perked up, the apology forgotten. \"Donald Rickers has agreed to come on camera for the first time ever to clear up our errors. The world is very pleased to meet you, Mr. Rickers.\" \n\n\"Thank you, Stacy,\" Richard said formally. \n\n\"How did we get it wrong, Mr. Rickers?\" I could tell Stacy saw ratings before her eyes. She didn't care about what she had done to me, and now we were rewarding her for it. A true blood-thirsty professional. Richard grabbed my hand and pulled it into his lap so no one would mistake his intentions. I smiled and let him. \n\n\"I fell in love with Mary about five years ago,\" Richard started, \"I was researching botany and the prettiest girl I had ever seen was there admiring some purple roses.\" I stared like a schoolgirl as he told the world about us. How the term God's flower came about. How he wrote about me as Melissa instead of confronting his fears. Stacy laughed as he explained the coffee incident and my trip to San Antonio to apologize. How his heart leaped to see me at the door. How I lied to protect him from public exposure. \n\n\"I dare say you're rather exposed now,\" Stacy surmised. \n\n\"I'd run through flames for Mary,\" Richard said without missing a beat. I just teared up looking at my fireman. He raised my hand to his lips and kissed it while looking into my eyes. The whole world knew he loved me. \n\n\"When did you know, Mary?\" Stacy asked. I stared at Richard's strong eyes. I knew exactly to the minute when it happened, but I had never told him. \n\n\"October seventh at eight thirty-six in the evening,\" I answered. Richard's eyes widened. I stopped there - Stacy deserved some dead air. \n\n\"Um...how can you be so exact?\" Stacy stammered. I am not ashamed to admit that I took pleasure in her stammer. \n\n\"Richard, I mean Donald, was writing about a meeting between Melissa and Adam,\" I said while still looking a Richard, \"he was describing our conversation when he came to our first kiss and he stalled. I kissed him again to help him remember. That's the kiss that I didn't want to end. The passion that poured out in the words that followed stole my heart. I was his at eight thirty-six, the time displayed on the computer.\" I paused and leaned closer to Richard, \"I have loved him deeply from that moment on.\" I saw a tear in Richard's left eye. I told the world as I told him. Not what I had in mind, but it couldn't wait any longer. \n\n\"We'll be back in one moment,\" Stacy said softly, emphasizing the 'moment' for the audience. I felt Richard's fingers tap my hand three times. There was no strain in his eyes, this had nothing to do with anxiety. He was going to let me inform Stacy and regain some strength. \n\n\"That was your five minutes,\" I said sternly to Stacy. We stood and walked off the set. Stacy tried to call us back, almost pleading. We ignored her as we entered the hall. Janice was waiting, tears in her eyes. \n\n\"I'm so sorry, Mary.\" Janice was in real pain. She had obviously missed the second half in her rush to get to me. \"I didn't know that bitch would do something like that.\" \n\n\"Richard saved me,\" I said softly with a smile and hugged her. Janice looked at Richard who just shrugged with his own silly smile. \n\n\"Secret's out,\" Richard stated. \n\n\"Oh, and it's my fault,\" Janice whined, \"I'm so sorry, Richard. I pushed everyone too hard.\" \n\n\"I'm not,\" Richard grinned, \"Mary said she loves me and I have it on video so she can't take it back.\" \n\n\"Live?\" Janice looked at me. I nodded and blushed as I realized what I had done.\"Well you can't go back to your apartment now.\" Janice went into bossy mode. \"Richard, why don't you and Mary go down to your house in the Keys, away from everyone. Give me your apartment keys, Mary. I'll pack some clothes and have them sent down. You two just need to disappear for a while while we think about what to do about this.\" \n\n\"She's your boss, you know,\" Richard said, taking me in his arms again, \"you have to spend time alone with me on the beach, whether you like it or not.\" \n\nOur two months in Key West were bliss. Janice fielded the press with staunch brilliance. Never saying no and certainly not saying yes. Richard's rescue of me on national TV hit some kind of soft spot in hearts of the viewers. Pre-sales of his new novel skyrocketed, women forcing most of the growth. Even his older novels saw a strong resurgence, people trying to tie Melissa and Adam to the reality of Richard and me. \n\nThrough it all, we hid on the beach. Richard wrote and I gave him motivation - lots of motivation. He learned to write in between the motivation. I motivated while he wrote - that didn't work, but we had fun trying. We spent time in the sand and in the waves. We learned about each other during that time. When we finally returned to reality, we knew, without a doubt, our lives had forever merged. \n\nMy belated revenge on Janice was actually planned by Richard. I thought him cruel since the news was hard to hold in. He just had this evil streak in him when it came to Janice. I caved and allowed him his tease. It was part of him and one of the things that made him so endearing. \n\nRichard forwarded a new chapter to Janice via his phone, from just outside the Themes offices. As Janice always did, she immediately closed her office door and began reading the draft. We entered the offices and stood waiting for the her reaction. It was ten minutes later when Richard's phone buzzed. It was Janice so he sent the call to voice mail. My phone buzzed almost immediately after. I sent it to voice mail as well. \n\nPredictably, Janice's door flew open. \"Tom! Get me Richard NOW!\" she yelled, looking down at a set of printed pages. Her face was livid. Richard grabbed my hand and smiled. \"Richard's pushing it, there's no way his readers will accept that Melissa is...\" Janice stalled there, seeing us with our silly grins. Mine glowing more than normal. \n\n\"pregnant,\" Janice finished, a smile growing on her face."
    ],
    "authorname": "DreamCloud",
    "tags": [
        "river walk",
        "san antonio",
        "love",
        "fireman",
        "purple rose",
        "god's flower",
        "publishing",
        "writing",
        "coffee",
        "anxiety"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-muse-11"
}