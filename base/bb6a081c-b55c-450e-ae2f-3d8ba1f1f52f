{
    "title": "The Pirate King Ch. 03",
    "pages": [
        "Part of an ongoing series - if you're just joining us, please go back and read chapters one and two! We'll still be here when you get back:)\n\nWeekly is still working for me, so expect that to be our schedule from now on, +/- a day. \n\n*****\n\nI rushed into the mess, knowing it would be empty but hoping Cookie would still be there. \n\n\"No food until,\" he stopped and stared at me, naked from the waist down. \"You should not be out like that.\" \n\n\"Dressing would have taken too much time.\" I didn't have time. I didn't have anything, not self respect, not a soul, not anything. Endorphins were crashing down, leaving nothing to cover up the hole the Captain had ripped in my stomach earlier. I needed to do something, anything, to get myself back to normal, to return my body to the state it should be in. I should be strong. I should be everything. I should not be reduced to nothing by a man who I had only just met. \n\nOn top of everything, I didn't understand why what had just happened was bothering me so much. Not bothering me; killing me. Ripping up bits of my soul like sails with rot, rather than the sturdy canvas I knew I should be. It was just casual sex, I told myself angrily. Nothing new to me. I thought you were okay with being used, the Captain had said. I was, I really was. Hell, one time I had sailed a ship of gold into a siren's channel just to hear her song. She had held me for as long as her children counted the loot, then tried to kill me. \n\nShe had tried to kill me, and it hadn't hurt as much as this did.\n\nI tried to reign in my frustration. I was being unreasonable again. I had fun; I had more than fun. The Captain was incredible. I should be thankful, take the good where it could be found. It was a small miracle that he had even let me touch him again. \n\nBe thankful. I listened to myself think and felt the ocean rise within me. Anger leaked out of me like the sweat that glistened on my body. I had been weak, had allowed myself to become distracted from my goals, I had not stood for what I knew to be right. I remembered the Captain's words the night before and echoed them to myself now: This doesn't feel good. \n\nI leaned out the port hole in the kitchen. \"What kind of ship is it?\"\n\n\"You're naked.\"\n\n\"Ship, Cookie.\"\n\nCooks always know the gossip. \"Word is, Indiaman. British make, or maybe French, hard to tell these days, but flies a Brit flag. Tough buggers, but then - hey, what do you think you're doing?\"\n\nI was leaning out the window, most of my bulk outside the ship, anchored only by my knees and a few fingers as I tried to catch a glimpse of the ship we were chasing down. An Indiaman meant fast, but heavily armed. We were on a schooner, which meant faster, so we'd be there soon enough. But what would we do when we caught her? We didn't have half the weaponry the larger ship did, and with all probability what we had was for shit. \n\nI knew enough to guess what the captain meant to do, a maneuver called the twist. It involved spinning the boat around 180 degrees, faster than you really should, and hitting your opponent with a full side of cannon before they had time to react. I was well familiar with the move. Been on a boat or two that had pulled it successfully. Been on a boat or three that hadn't. I knew it was risky. \n\nI leaned out a little farther and caught my first sight of the ship. We were bearing down on the Indiaman fast, her Union Jack snapping in the wind. Fucking Brits, real pricks about not surrendering. I pulled myself back into the port hole. \n\n\"Big guy,\" I told Cookie. \"Probably 40 cannon. You guys usually chase that kind of stuff down?\"\n\nHe nodded.\n\n\"It go okay?\"\n\nHe bristled. \"The crew knows what they're doing.\"\n\n\"Sure.\" I had my reservations about a crew led by the Captain at this junction. I leaned my head out the window again. \"What's the ratio?\"\n\n\"Ratio?\"\n\n\"Yeah, Cookie, the kill ratio.\" I felt bad when he jumped at the snap in my voice. I didn't mean to be short with him. \n\n\"Two of theirs for every one of ours. And we don't strike first.\" \n\n\"Shit.\" This could take hours. And We don't strike first,  what was that kumbayah shit? These were Brits, for gods sake. Threatening to kill two of them for each pirate they killed wasn't going to do anything. \n\nI had a solution. It would make things go a lot smoother for both sides, save a lot of ammo. And it would probably bring the Captain back to me faster. \n\nI felt a shiver pass through me at that and hated myself. I was done with him. He didn't care for me, would use my body and reject my soul. I couldn't keep doing this to myself; I had seen what happened when captains tried to enter harbors that would have nothing to do with them. I would not rip myself apart on the shoals of his approach, just for some dream of fresh water. Or love.\n\nI shut that thought down so quickly it was almost as if I had not thought it. Almost. \n\nSo I would not do this to bring the Captain back. This, I would do for myself. A special treat to bring myself back to myself. I turned to Cookie. \"Can you keep a secret?\" \n\nHe gave me a look. \n\n\"You're going to have to. You got rope?\"\n\n\"This is a ship. We have rope.\"\n\n\"Good.\" I grabbed the length he handed me and threw it from the window. I spooled it out until it drug in the water, then tied it off to the table bolted to the floor. \n\n\"Do not,\" I told Cookie, \"cut this for any reason. Understand?\" \n\nCookie nodded.\n\n\"Okay. I need knives.\"\n\n\"Not my knives,\" he moaned. \"Couldn't you have gotten them from the Captain's room?\"\n\nI shrugged. I wasn't going to explain my frustration with the Captain to Cookie. \"Pirates are funny about their knives.\"\n\n\"And cooks aren't?\"\n\n\"You'll get them back.\" I didn't bother making any more arguments than that. Cookie knew my word was good. He groaned again but ended up handing over two of his sharpest blades. I wrapped up the larger one in cloth and twine, tying it to my waist. The smaller one I would hold between my teeth for easier access.\n\nI stripped off my shirt, folding it on the kitchen table. Automatically I went to tie my hair back and found it too short, the thin wisps gracing my scalp nothing like what I was used to. I scowled. \n\nCookie caught the motion. \"It'll grow back.\"\n\n\"Yeah.\" I couldn't deal with that loss too, not right now. I leaned out the window again. We were almost on the Indiaman. I turned back to Cookie. \"Remember -\"\n\n\"Don't cut the rope, yeah.\" He looked at me. \"You know what you're doing?\"\n\nI did. I finally had a plan and I was going to stick to this one. \"Are you going to ask me that every couple hours?\"\n\n\"If you keep acting like this. Absolutely.\"\n\nI scowled deeper and leapt from the window. \n\nIt hurts, to hit water from that height, but I'd had practice at making my body like a needle and I pierced the waves exactly how I needed to, slipping beneath the currents like the dolphins that often graced ships' bows. The cold water shocked me, washed me clean of the sweat and the haze that had invaded my space ever since I'd first seen the Captain on the deck of this strange ship. I stayed down as long as I could, letting my lungs burn, feeling the ache of oxygen leaving my body until I couldn't stand it anymore. When I came back up I was pleased to find I'd timed my jump exactly right and the Indiaman wasn't too far away. I slipped the small blade between my teeth and used my powerful arms to propel myself through the water toward the larger ship. \n\nI reached the anchor with relatively little trouble. The Indiamen were well built, had to give credit to her Majesty and her engineers, and it threw up less wake than I was used to. I clambered up the anchor and into the belly of the ship.\n\nI knew that I would have to hurry to make it to the gun deck before the ships started trading blows. I stopped only long enough to grab what I needed from her kitchen.\n\nBrits. Won't surrender to a pirate, but they're terrible superstitious. \n\n***\n\nAboard the pirate schooner, the men waited with bated breath for the first salvo of cannon fire as they drew closer and closer to the merchant ship. These battles were always long, and could be bloody, especially when they enacted their tax of two dead combatants for every pirate killed. \n\n\"Ready,\" called their quartermaster. \"Wait. Wait...\" They needed to wait for the first provocation. It was part of their orders.\n\nBut the roar of the cannons never came. \n\n***\n\nUp on deck, the Captain stood with his first mate. \n\n\"Something's wrong.\"\n\n\"You should have been up here sooner,\" Wicky grumbled again. \n\nThe Captain snapped his spyglass closed. \"You only came up when I did, Wicky.\" He slowly turned his head and raised an eyebrow. \"Enjoying the peaceful sounds of midday?\"\n\nWicky turned bright red.\n\nThe Captain turned his attention back to the ship. \"They should have attacked by now.\"\n\n\"I wasn't even listening,\" Wicky protested.\n\nThe Captain didn't respond.\n\n\"Made me afraid to leave my room, you did.\" \n\nBut the Captain was focused on movement occurring on their quarry. \"Look.\" He snapped his spyglass back open. \"The sails are coming down.\"\n\n\"Coming what?\"\n\n\"Down.\" He watched the movement of the crew in his spyglass. \"I think they're surrendering?\"\n\nWicky shook his head. \"Cap, they're Brits.\"\n\n\"Aye.\" The frowning man looked out through his instrument. \n\n\"And we've only been chasing them less than an hour.\"\n\n\"Aye, Wicky. But look.\" \n\nThe two men watch the sails come down, slowing the ship to a pace which made their speed seem ridiculous. They would quickly pass them at this rate. \n\nThe Captain snapped spyglass shut. There was no denying what was happening. \"What made them decide to surrender now?\"\n\nWicky swallowed. \"Captain.\" \n\n\"Do you think this is some sort of trick?\" he murmured thoughtfully. \"Should we be prepping for a boarding?\"\n\n\"Captain.\" The Captain gave him his attention, brows pulled tight. But Wicky was just pointing, a slight tremor creeping up his arm. \n\nThe British flag had come down with the sails. Running up the mast in its place was a white flag, crude dark designs bleeding against the bright sky. \n\n\"Is that,\" the Captain started, stopping just to stare.\n\nBut his first mate didn't need him to finish the sentence. \"I think so.\"\n\nThe reverse skull and crossbones flapped across from them, black skull painted sloppily over a simply X. The Captain and first mate stared at it, shocked, as it peaked on the mast. \n\n\"Fuck,\" the Captain said, and turned to give his orders to the crew. \n\n***\n\nIt was a much easier swim on the way back, the ships veering closer and closer with each passing moment. They'd already come about, turning the ship around with the twist's sharpness even though there'd been no real need. That was smart, I thought. It was always better to have more practice under your belt. That did mean, however, that I had to swim to the far side of the ship to get to the rope Cookie should be guarding. \n\nI found the rope right where I'd left it, thank all the gods the sea had ever birthed. I could have gotten into this ship the way I had the Indiaman, true, but my shirt was in the kitchen and my pants in the Captain's room. It was a long way to move from the anchor block to this part of the ship fully naked.\n\nI hung from the rope and set my sights on Cookie's window. But I wasn't ready to head back to the ship yet; I needed to wash the adrenaline and blood from my body, become the person I was supposed to be. The sea felt good against my bare skin, and I wrapped myself in the rough threads and let the waves wash me clean of blood and the flour I had used to coat my body, scrubbing my hair in the swell and chop. I stayed until I felt clean, until the ocean's pull no longer felt like a judgement. \n\nOnly when I was thoroughly scrubbed did I pull myself up the rope, hand over fist, and back through the window. Cookie looked up to my dripping face as I slithered over the metal frame.\n\n\"Kicked a hornet's nest, you did. Been people runnin' and shouting for the past twenty minutes.\"\n\nI shrugged the ocean from my back and tried to readjust to confinement. Cookie handed me a towel and I scrubbed dry. I begged clean water from him to wash the worst of the taste of sea from my body, returned his knives, and began to make my way back to the bedroom, shirt in hand. I paused in the doorway and looked back the the pinched cook unwrapping his knife.\n\n\"Hey, Cookie?\" He looked up. \"Wash that before you use it.\"\n\n\"Aye, boy,\" he said, eyes big. \"I know.\" \n\n***\n\nI made it back to the Captain's suite without running into anyone, which was a bit of a miracle. Cookie was right; the ship was a hive of activity. I could hear people shouting, running above my heads with an intensity that made me frown. Were they always like this, or did they not realize the ship had already surrendered? \n\nOnce I was back in the Captain's room, I grabbed up my breeches and pulled my shirt over my head. I saw no point in being cold, and it sounded like the Captain would be a while. I settled down in bed with one of his books. \n\nI was proud that I didn't even jump when the Captain burst through the door. He took me in, lazily sprawled on his bed, not where he had left me, and raised an eyebrow.\n\nI had no time for his judgements, his assumptions I would listen to his words. \"I got cold.\"\n\n\"I'll take this over you running amok.\" I was ready for him to come and try to control me again, in the way that he had. I had convinced myself that this was no different than the control that had been wielded over me by so many others, decided that his violence lay hidden somewhere under the surface. It lay in the daggers he dug into my soul when he laughed at my assumption that this could have been more; it lay in the way he smiled as he told me he would use me. I had been preparing myself ever since I had returned to his room to stand against his strange power, building walls to help me stay safe. So I was completely shocked when when ignored me completely and walked over to his swords. \n\nHe tossed me a saber. \"Know how to use this?\"\n\n\"Hold here,\" I pointed at the hilt. \"Pointy end.\"\n\nHe gave me a serious look. \n\n\"Yes, I know how to use a sword. What's going on?\"\n\n\"Nothing.\"\n\n\"Don't give me that.\" I got out of bed; he looked genuinely worried. \"It's got to be serious if you're arming me.\"\n\n\"It'll be fine. Just stay here.\" He turned to go. \n\nSeeing he had no intention of explaining anything to me, I lunged for the door and managed to keep it shut. \"No.\" My bulk moved to block his path and I heard him sigh. \"Explain.\" \n\n\"There might be an ambush. Nothing to worry about, just. The ship is acting strangely.\"\n\n\"Ours?\"\n\n\"No, the other.\"\n\n\"Oh.\" I tilted my head. It shouldn't be. The men that had been left had very strict instructions, and I would hate to have to kill anyone else. \"Strangely how?\"\n\nHe made a bit of a face before the words left his mouth. \"They surrendered.\" \n\n\"Isn't that good?\"\n\n\"It would be, but.\" I saw him hesitate, saw a moment pass before his eyes. I wanted to know that moment, to hold it, investigate, but it was gone before I could really get a glimpse. \"There's a flag.\" He kissed me, and my body melted involuntarily into his. It was so perfect, the way he held me, and he caught me so by surprise that my defenses had not had time to be fully up. I was lost to him the moment he touched his hands to my hips, let alone his lips to mine. He took advantaged of my weakness and moved me aside. \"I have to go; stay put, this is pirate's business.\" \n\nAs he moved out the door, he stopped and looked at me, a moment of hesitation lost on my love-shocked form. I stood, still not recovered from the kiss, sword hanging loosely from my hand. He reached out and touched my wrist. \n\nI jumped.\n\n\"Be careful,\" he said, so softly I might have imagined it. Then he was gone. \n\nI put his words from my mind, along with the kiss. I couldn't handle it. He was a distraction. I had washed him from my soul in the sea. \n\nBut what had he said? A flag? I moved to the window and looked out. We were pulling up beside the Indiaman. Snapping up on her mast was the reverse skull and crossbones. The one I'd put up.\n\nIt was a joke, really. A little calling card we'd always left when we'd taken ships like that. We'd called it our ghost flag, for our ghosted ships, but it didn't actually mean anything. It was just a skull, and an X, and shitty ones at that. I shouldn't have put it up, maybe, but it had felt so natural after the ease of everything else. Like riding a horse, except I didn't ride horses. Like coiling a rope. Like tying a knot. Do it enough times, you just have to complete all the steps. It was nothing to get worked up about, just an inside joke from a past time in my life. \n\nI suppose inside jokes are a lot less funny from the outside. And maybe I had gone a bit over the top.\n\nMan, I thought a little sourly. They weren't going to be happy when they realized I'd painted it in blood. \n\n***\n\nIt was hours before the captain came back. He looked weary, exhausted by something that wasn't physical. I immediately put down the book, a treatsie on maritime law, and turned to sit on the edge of the bed. \n\nI had spent the last few hours practicing for this, preparing for his return. I knew, I knew the effect he had on me, knew that I was weak for him, and wasn't going to slip again. And yet, the moment he walked through that door, his shoulders hunched and those thick brows so furrowed they nearly touched, all thoughts fled my mind but concern for him. \"You okay?\"\n\nHe sat down at his desk and began writing furiously, filling a sheet of paper as I watched, then starting on another one. I watched him write harder and harder, until suddenly his nib broke, splashing ink everywhere.\n\n\"Fuck!\" He threw the papers across the room. \n\n\"Hey!\" Not knowing what I was going to do when I got there, I found myself moving towards him through the rustling air. I knelt beside the morose figure slumped in his chair, drawn inexplicably by his pain. A moth to flame, my flamable wings in danger of being consumed. \n\n\"What is going on?\"\n\n\"Nothing. I told you, it's fine, it's fucking nothing.\"\n\n\"Yeah.\" I put my hand on his arm and he pulled away. How quickly I'd forgotten everything I'd thought to myself in the hours he'd been gone. How easy it felt, to comfort him. \"Really seems like nothing to me.\"\n\n\"You wouldn't understand,\" he finally said.\n\nThat brought me right back. Nothing but a prisoner, he reminded me. The anger arose, but for some reason it only fed my attempts to console him. \"Try me.\"\n\nHe scoffed. \n\n\"I'm not a child.\" I took his hand. \"And I can tell you're frightened by something.\" \n\n\"I'm not.\" But he didn't move his hand away. \n\nI sat there silently, waiting on him. His hand tightened for a moment in mine, then relaxed. He sighed. \"Did you see the flag?\"\n\n\"Yes.\" I waited for him to say something else, but he just stared straight ahead. \"What about it?\" I prompted. \n\nI expected to hear something about ghosts, some superstitious nonsense I could laugh at to make him feel better, or maybe about how it was made of blood, but what I did not expect to hear was; \n\n\"It's the banner of the King.\"\n\nHe said it so grimly, as if it were a death sentence. As if he had just proclaimed someone mortally wounded, their guts spilling over the operating table, and he was the one telling them they'd never make it back in.\n\n\"The king?\" I tried to keep my voice light, tried not to squeeze his hand too tight. \"Which king?\" I knew which fucking king. I couldn't believe he'd done this, couldn't believe - \n\n\"The Pirate King. The King of the Sea.\" He ran his free hand through his hair. \"Never thought I'd see it this far south.\"\n\n\"The Pirate King.\" I repeated the words slowly, tasted them in my mouth. It tasted like blood, and salt water, and my soul leaving my lips as I choked on the two mixed. He'd never expected to see his flag this far south; I hadn't expected to hear that name. And now, twice in one day. Funny, I thought angrily, how fate works. \"Cookie said you used to work under him.\"",
        "\"Not under, more with. He had a -\" he shook his head. \"It's complicated. Pirate business. You wouldn't understand.\"\n\n\"Try me,\" I repeated angrily. To hear him say he worked with the King, that struck something within me. It landed on top of my frustration, vibrated there and grew as he still wouldn't meet my gaze. I was frustrated with being left out of his 'pirate business', frustrated that he didn't think I could keep up. At being nothing but a prisoner to this man who was my entire world, despite everything I was doing to keep that from being so.\n\nAnd I was pissed to hear about the theft of my flag. \n\n\"I think you'll find I understand more than you think,\" I continued, letting my frustration spill into my tone more than I probably should have. \n\nHe looked at me then, that same funny look he'd been giving me all day. \"Okay,\" he said quietly. \"I'm sorry.\"\n\nBut I didn't have time for this. \"Pirate King. You worked under, with. Shouldn't you be happy to see his flag?\"\n\n\"Ha.\" It was that same dry laugh, tangling in his thick hair as it tried to escape his lips. \"I kinda pissed him off.\"\n\n\"How?\"\n\n\"It's complicated.\"\n\n\"Captain.\"\n\n\"I know, I know.\" He pulled his arm over his eyes and smiled the ghost of smile. \"I may have tried to overthrow him.\"\n\n\"You did what?\" I could literally feel the shock rolling off my body. My first thought was relief, to find us on the same side so drastically of this man he called the King. I let that sit within me for all of a second before my second thought overwhelmed me, which was; oh gods, no. No, not you, killed the same way I was. Such a fate was unimaginable for anyone but my worst enemies, and here was this man, having come so close to sharing it with me. The thought shot hot fire of fear and anger through my very soul, made my blood rush to my ears and my fingertips tingle. I could not believe that he was alive, that I was here holding his hand. I squeezed his hand as gently as I could, given the circumstances.\n\n\"It's odd, though.\" He ignored my outburst. \"All the survivors of the ship said the same thing, that it was a ghost. Naked white flesh, grey eyes, ghost, ghost, ghost. No Pirate King.\"\n\nI was still staring at him, taking in this man before me. Fate, I thought. No. Irony. \n\n\"What makes it even odder is, I know this ghost they're talking about. He was a legend in the north. More than a legend, he became this sort of. I don't know, symbol. He's supposed to mark his kills on his body, draws a line for each man killed in their blood.\" He drew his hand down over his eyes. \"I don't know how they would know about him, really. Or why they would chose him, of all legends...\"\n\nBut I was still stuck, needed to make sure I got this right. \"You mutinied against the Pirate King?\"\n\n\"And that's the other thing, there were survivors at all. Recently, if the King raises his flag, no man survives.\" He looked at me from under his fingers. \"I thought you didn't know who the Pirate King was.\"\n\n\"I don't,\" I lied, \"but. He's a king.\" I swallowed. \"You should be dead.\" \n\n\"Hence the concern of the flag.\"\n\nI paused then, took in more of what he had said. \"He kills entire ships?\"\n\n\"Massacres.\" \n\nI felt a shiver of rage pass through my spine. The Captain put his hand on my shoulder, misunderstanding my shake. \"Don't worry, he should still be far in the north. He doesn't often leave his empire. I think this was just.\" He shrugged. \"I don't know, honestly. A ghost.\"\n\nI pulled away from his hand. I didn't need his false comfort. \"Ghosts don't exist,\" I said quietly.\n\nIf he noticed how I reacted to his touch, he didn't show it. \"That ghost does. They said he did in the North, and it looks like now he's here. Because what he did to that ship, that happened. That's real. Twenty men dead, just like that. And you should have seen the dead, most killed where they were standing, one man had his jaw just.\" He stopped, shaking his head. I know, I wanted to tell him. I was there. You should have seen what they were trying to do to me. \"I don't know, I don't know. Maybe it is the Pirate King, sea walking to come and get me.\"\n\nI scoffed. As if the Pirate King could have done such a clean job of it. \n\n\"They say he can.\" He actually sounded serious. \"They say he's a son of the sea.\" Then, more quietly. \"I've seen the things he can do.\"\n\nI looked up and realized that he was scared, truly frightened. I covered his hand with my other, trying to push my knowledge into him without having to say a word. \"He can't reach you here,\" I told him. Not while I'm here, I added in my head. \n\nHe stayed tense for a moment, holding his convictions tight. Then he relaxed. \"No,\" he sighed. \"He can't, unless he's moved.\" He pulled his hand from mine and picked up his quill to began to sharpen a new nib. \"I have letters to write, allies to check in with. I need to make sure he's still where I think he is. My friends help me make sure I never cross his path again.\"\n\n\"Good.\" I turned to gather up his papers for him, holding them carefully so they wouldn't smudge. He smiled as I handed them to him, and his smile undid me. It was the simplest of things. It always seemed to be with him, his hair, the way he moved his hand to pick up more ink, the way his lips curved to say thank you. The tightness of his pants. The drop of his stupid shirt. \n\nI wasn't done with him. I knew it then, watching him sit there. I couldn't be done with him, not the way he sat in my chest and pulled at my very soul. It would rip me apart if I walked away like this, if I enacted the walls I had been drilling into my body these last few hours. How could it not? I had nothing to hold onto, nothing of my own left. \n\nMy heart had been stolen by the man who sat before me. My life had been stolen by a man thousands of miles away, unreachable now. My name was stolen by the sea. And my flag was stolen by the fucking pirate king. I wanted something of my own. Needed it. Even if it was just a moment, even if it couldn't mean anything. He'd had his moment for him; I needed to have mine for me. \n\nThen, maybe, I could be free of him. \n\nI moved to the door and locked it.\n\nHe frowned. \"What are you doing?\"\n\n\"You promised,\" I reminded him as I walked back towards the desk, my eyes taking in the man that had become my world, that I had decided to let be my world because without a world what is the point of living? I would rather have a world and live without, I realized, than never find such a place to belong at all. I thought all of that as I approached him, knowing this would be my last chance at entering his gravity. \"You promised that we would finish what we had started.\"\n\n\"I did,\" he agreed, a frown flashing behind his eyes. He could tell something was different. \n\n\"And I've been waiting.\" For hours, I thought. For years. For my entire life. I've been waiting for you for millennia, and this will be my moment.\n\n\"Have you, now.\" He moved to get up, but I put my hand on his chest and pushed him back into his chair. Not this time, I thought. Not the bed. The bed was his, he had made that very clear. I would have him right here. Besides, there was something I wanted to try, had been thinking about trying ever since he'd brought me to his room that first night. His brows slowly unknitted as I kissed him, deep, but they were quick to draw back together as I dropped to my knees in front of him.\n\n\"Hey.\" He captured my chin in his hand. \"You don't need to -\"\n\n\"Shut up,\" I told him, my mouth chasing his thumb. His eyes widened slightly and he let me catch it, and I slipped it over my tongue and grinned as he gasped. I felt his other hand creep into my hair, entwining with strands and pulling my eyes to his. \n\n\"Okay,\" he agreed softly. I smiled around his thumb and began to work on his breeches. There was no pretending through the thin fabric that he wasn't enjoying was happening, and as I brushed my hand against the growing mound his hips jerked. \n\nI reached into his trousers and found my prize, pulled it into the light of day. We gasped together, the Captain and I, he at my touch, and I at being so close to something so fucking perfect, so unmistakably erotic.\n\nI'd been close to penises before, but never like this. Never one like this, so incredible and tempting. I imagined I could smell it, or maybe I could, a heady aroma that sent my head reeling and my mouth actually watering. I wanted him, needed him in a way I had never experienced before; it overwhelmed me, consumed me, and I knew the only way I could exorcise this demon that had been destroying my soul was by giving the Captain what he wanted, the way I wanted. \n\nI carefully reached out and touched the head of his cock, and he shuddered, an entire body reaction to the gentlest of stimuli. I ran my finger along the length, base to tip, and watched his body shake, felt his hand tighten in my hair and my stomach tingled, my own cock hard and throbbing. It felt incredible to touch him, to let myself explore his body in even this most minor of ways.\n\nI waited until he had calmed down. \"I've never done this before,\" I warned him. I didn't want him to get his hopes up; Cookie had said he'd been with many whores, and I knew they were trained in how to do this. \n\n\"You don't have to do anything you don't -,\" he started, but I wanted to do this, and he wanted me to do this, and so I leaned down and put my mouth around his cock.\n\nHe gasped, his hand tightening around my hair. He tasted so good, the head of his cock warm and throbbing in my mouth. I never wanted to lift my head. I could feel the way his body reacted to me through his hand in his hair and the twitching inside my mouth. This, I thought, was where I could begin to control him truly. This was where he was mine. I experimented, moving deeper, then lifting and licking around the tip, trying to see what would get the strongest reaction. He cursed as I flicked my tongue at the base of the head, sliding my tongue under the lip that I found there, then gasped as I took him further in my mouth. \n\nI traced circles around the tip of his cock, watching his whole body twitch, and loved it even as I knew he wanted more. Wanted control. I could feel his hand on my head all the while, felt him want to press and pull with my motions. I wanted that too, but not yet. I teased him for a minute longer, finding the crease at the very tip of his cock and licking along the length of it to see what that would do. He moaned and jerked beneath me, and I did it again and again until I got distracted by the other parts of him, the other sounds he made. I explored him, lightly, at my pace, and was somewhat surprised to find that he let me do it. \n\nWhen I was ready, I lifted my head and met his eyes. They were half closed, his lips parted, and I couldn't help but smile to see the effect I had had on this man. \n\n\"Sir,\" I said. I was ready to give him what he really wanted. What I had been hoping he would take. \"Guide me.\"\n\nI saw him swallow, watched his breathing increase in tempo. He put his hand back on my chin and I felt his hand shake. \n\n\"Okay.\" He ran his fingers over my lips, watched shuddering as I tried to catch them with my tongue. \"But you need to tell me if I'm too much.\"\n\n\"I will,\" I promised him. \"But you won't be.\" \n\n\"Open your mouth.\" He gripped my head tighter, spreading his fingers across my head to give him control. He positioned me just above his cock. From this height, it looked massive, intimidating, but I trusted him. I opened my mouth and let him guide me down. \n\nHe gasped as my tongue touched the head of his cock, then my mouth, sliding down as his hand pressed gently. I was concerned I couldn't take all of him, knew that I couldn't, but he stopped me before I got anywhere near uncomfortable, brought me back to the tip. Again and again he guided my head down, then up, his hand on my head firm and tender. \n\nWith his other hand he brought my fingers to the base of his cock, placing them around the shaft. I pulled my hand from his, setting my own rhythm, slow and steady and deliberate. Somewhere above me I heard the Captain curse. He allowed the rhythm of my head to match the one I set with my hand.\n\nI took him like I needed to, because I did. It was a single minded action that drove me, a demand that existed in my being without him having to give it. I felt myself speeding up, pulling against his hand, wanting his cock deeper against my throat, needing more of him inside my body. He moaned, his hips moving against me. I almost gagged as he thrust inside my mouth, and it made me want him more, made me need even more of him, but his hand pulled me back and denied me. \n\nHe didn't mean anything by it, in fact probably meant kindness, but it was frustrating. \n\nI increased my pace and I heard him say something, but I wasn't listening. My entire world was his cock, his hand, my mouth and tongue, the way those things came together to make a blossom of pleasure and perfect harmony of bliss. The pressure he kept on my head didn't allow me to test myself, to see how much of him I could truly take, and I resigned myself to this, instead forcing him to increase the pace of my head by speeding up my hands, relishing how my fingers glided over his slick cock, tightening and loosening my grip as he moaned above me. \n\nHe shouted something, pulling my head from my rhythm. I kept stroking him, didn't want to let him stop me completely, but he slapped my hand away. I knelt there between his legs, staring up at the Captain. His chest was moving quickly, his head thrown back and his eyes closed. So he wouldn't see, I thought, if I just...\n\nI leaned forward against his hand. He felt me and tightened his grasp, but at the end of my tether I was just close enough to reach his cock with my tongue. I opened my mouth and reached out, scraping the tip of his cock with the tip of my tongue.\n\nHe cursed and ripped my head back. I saw stars, the suddenness of the pain and control in my scalp breathtaking, and the noise I made was nothing like anything I had ever voiced before, small and sensual and filled with desire. The Captain's body reacted to it, his arm tensing and his hand jerking upwards, and because I was attached to the Captain's hand I was jerked upwards as well. I found myself lifted just off my knees, my head tilted up to meet the Captain's eyes. \n\nHe stayed like that for a moment, his eyes pumping waves of anticipation and pleasure through my core. They were ragged, unfocused in their desire, staring down at me with an intensity that wasn't directed but instead showered me with lust. I returned his look, knowing he was in control again, understanding he would have his way with me if he wanted. I wanted him to, I begged him with my eyes to take me. My head began to ache from the pressure his fingers exerted on my hair follicles, and I let slip a small noise with my breath. \n\nHe immediately tightened his grip against me, pulling my head back at an awkward angle. I loved being held by him, loved letting him move me in this way, and I felt my breath come hard and fast His other hand made its way to my chin, then slipped over my lips. I drew them into my mouth with my tongue, never letting go of his eyes with mine. \n\nBreath hissed from his lips in a string of curses, leaving his chest, his body, the muscles unwinding as he lowered me back down. His fingers hooked into my mouth and drew me forward towards him, leaving my mouth only when I reached his cock. \n\nHe didn't wait for me to open my mouth, just pushed me onto the erect form waiting and I was glad. I tried to return my hand to the base, but he grabbed my wrist and twisted my arm behind my back, pinning it there. I jumped at the sudden escalation, but he shoved my head back down, making me maintain the rhythm that he had chosen for me without the meddling interference of my hand. I knew what was expected of me and kept my other hand far away. \n\nThe pace he chose was rougher, faster, but I loved it. Craved more. Warm waves were crashing against me from the pit of my stomach, driving me to do whatever it was that he wanted. Whatever he did, it wasn't enough. Even in this state, he didn't drive my head down as far as I wanted, didn't let me take as much as him as I desired. I wanted him. All of him. \n\nHis hand was pressing against my scalp, his cock was in my mouth, and I was where I wanted to be. When he yanked me up again suddenly, I wasn't going to be denied. I slipped my free hand up from where it had been resting and continued the rhythm hoping he would let me go back down. \n\nBut it was not to be. I was done with the Captain, because he was coming. I felt his entire body seize under my hand, his hips bucking up and his back arching. The hand on my head jerked back, pulling at my scalp with a gratifying intensity. My mouth fell open unbidden just as thick warm cum splashed across my face and neck, landing partially on my exposed tongue. \n\nI took a moment to enjoy what had just occurred, to enjoy the taste of the Captain in my mouth, the commanding tug of his fingers laced through my hair, forcing my head to remain in place. Then I looked up to him. His eyes were closed, his head thrown back. He looked so peaceful that I almost let him be, but I wanted him to look at me. I wanted him to see what he'd created, the beauty he'd spread across my being. I pursed my lips and gently blew air over his cock.\n\nHe jerked, his entire body convulsing in on itself. I looked up at the face that now looked down at me, wide eyes taking in my craning neck, my body twisted to accommodate the hand he had trapped behind my back and the pressure from the hand he still had buried deep within my hair. His eyes traveled then to my open mouth, ending on the splashes of cum that ran from my lips over my chin, down my neck. \n\n\"Shit,\" he said, releasing me quickly and drawing his hands up, palms out, as if he were surrendering. \"Holy fuck, I'm so sorry. I was trying not to -\"\n\nHe shut up as I wiped a bit of cum from my face with my finger and licked it up, smiling. \n\n\"Fuck,\" he breathed, staring down at my decorated face. \"Who are you.\" I licked his stomach and he shuddered. \n\n\"Yours,\" I reminded him. I stood up, kissing him on the way. He kissed me back, soft and confused and so sweet I almost believed he cared. But I had heard him earlier that day. I had to keep my plan, I told my endorphins and my racing heart. He told me who I could be with; now it was my turn. \"But this is the last time I will ever let you touch me.\" \n\nHe pulled back. \"What?\"\n\n\"I'll be with Cookie if you need me.\"\n\n\"Wait! Fuck, your face!\"\n\nBut I had already unlocked the door and was moving down the hall.\n\n***\n\nThe door swung shut, leaving only the Captain in his quarters. He sat there alone, silent, staring at the space the man had just occupied for some time. His face was drawn together, stitches all pulled too tight in all the wrong places, his pants undone and limp dick hanging out. \n\nSuddenly, the man pulled his hands to his head. \"Fuck,\" he shouted. He drew his hair back, still staring at the door, as if willing it to open. The expression on his face was slowly changing from one of confusion to one of pain, the brows that were drawn together slowly drawing up, the lips that had been pursed dropping open in a gasp, only the smallest of breaths able to escape past. \n\nThe door remained steadfastly shut.\n\n\"Fuck,\" he whispered. He folded in half on the chair. Perhaps he was borne down by the weight of something; perhaps he simply could no longer bear the sight of that wooden door, closed to him forever. He stayed that way for a very long time, silent except for his shattered breaths."
    ],
    "authorname": "nakamook",
    "tags": [
        "gay oral",
        "domination",
        "gay domination"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-03"
}