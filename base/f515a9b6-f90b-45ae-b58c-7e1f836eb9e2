{
    "title": "The Pirate King Ch. 18",
    "pages": [
        "First off, if you find yourself here without reading the first 17 chapters, I really recommend going back and checking those out. Don't worry, we're not going anywhere - we'll still be here when you get back. :)\n\nSorry for the long wait. Been trying to exist in this capitalistic society we live in and that takes time, and I joined a choir and that takes time, and winter has arrived where I live and that takes time while I try and make up for the happiness and energy the darkness takes. But at the end of the day we make time for what's important for us, and Ghost kept showing up in my dreams and staring me down for not resolving the conflict I had put him in. So. \n\nHere we are, together again. And winter will end and the sun will come back and until it does, there are warm cups of tea and blankets to share with friends (or not to share with friends, blankets to steal and keep and hoard like precious things, like currency, like love). May your hot water kettle never run empty, may you have enough mugs for everyone and may the changing leaves fill you with the wonder of renewal, of resiliency, rather than the dread of the upcoming white. May you always remember that the trees are no less trees and are no less alive simply for the fact of their bare branches. They are concentrating on surviving; it's okay for us to do the same. \n\nPeace and love and someone to keep you warm at night. A heartbeat for a pillow and breath as a lullaby. I love you all, I missed you. Take these words forward as you find your own song to sing you to sleep.\n\n*****\n\nI couldn't move for a long time, my stomach tied in knots so bad I found it impossible to pull my body from its tightly bound position. The Captain, the Captain, always binding me as he wished and I hated it, hated to feel this way for him, hated it because I knew he would be feeling so much worse and I had no way of making it better. \n\nEventually I managed to pull myself upright. How had this all gone so wrong? My body was falling to pieces; I was dead, I was dying once more, I was so close to being alive again and that was the one thing I could no longer be. I found myself in need of distraction, of company. Of return. And so I turned to the one place where there was always work, hard, repetitive work. I knew I would find no quarter there. I knew I might be able to recover some sense of myself. \n\nWhat I did not expect to find as I turned the corner to enter the mess was the Captain.\n\nHe sat with his head in his hands across from the slight frame of Natch. His body set mine on fire, turned me to ice. He looked so tired, so. \n\nI won't explain it. I can't describe him in such a state, could barely look and see him there, watched him not move at all as Natch reached out and placed his hand on his arm. Ached to be that touch, that comfort. Had I done that to him? Was this what truth looked like, lashed across the back of the man I loved?\n\nI hated myself. I hated the things I had been and I hated the things I had become even more. \n\nThe Captain had his back to the door and so he did not immediately know that I had entered the room. Natch, however, saw me nearly at once. He drew back from the Captain as if afraid to be seen touching him, his mouth snapping shut and his body language shutting down. The Captain stiffened before him.\n\nI froze, understanding that they must have been speaking of me. \"I can go,\" I told them quietly. \n\nThe Captain rose, his eyes nowhere near my form. Without saying a word, without looking at me once, he turned and left the room. His body never came within six inches of mine.\n\nI leaned against the door, unable to watch him go. Shaking. \n\n\"Gods, Ghost.\" Natch sat where the Captain had left him, eyes wide. \"What the hell were you thinking?\"\n\nI couldn't do this, not now. I moved into the room and entered the kitchen, wanting to find onions, potatoes, anything I could destroy, to lose myself in tasks that had no real meaning. No beginning and no end. Cookie crossed his arms and frowned at my form as I hunted for knives. \n\n\"It's one thing to keep your past from him. You're entitled to that. But you know the way we talk about the King, you know the stories. Christ, Ghost. You've got to know what we say. What he's said, probably to you. And he doesn't know how much of it is true, doesn't know what you've done and what you haven't.\" He paused at the doorway. \"Gods. I don't know what you might have done.\" \n\nI ignored him. \"Where are your knives?\"\n\nCookie shook his head and leaned back against the counter. \n\n\"You do know what they say about you, right? The stories they tell, the men you've killed, the women.\" There was a brief pause. \"The children.\" \n\nI wanted him to shut up, never wanted to hear his voice again. Of course I knew what they said of me; I had heard the stories, had lived most of them myself. Had starred in many of them, in one way or another. Had been one of those very children of which he spoke. Of course I knew what they said; I had often been the first to have to hear it. \"Give me the fucking knives,\" I snarled at Cookie.\n\n\"Think not,\" he replied calmly. I slammed a cabinet door and Natch flinched. \n\nI pressed my head to the polished wood, hoping perhaps to press my frustration into the grain. \"The stories are for shit,\" I told the cabinet. \"The stories are stories. I am who I am and he should know that.\" \n\nI wanted him to know that. But the stories weren't just stories and he should know that too - he had probably seen some of those stories born under Dreyfus, had perhaps taken his own starring role in some. I thought of him in my brother's hands and nearly ripped a cabinet's door from it's hinges. \n\n\"Ghost, you fucked up,\" Natch told me. My stomach roared, my chest, my lungs. \"You should have told him this to begin with. God, it looks like you're using him just to get to the fucking - \"\n\nI turned my eyes to him and watched as he drew back. Good. He should be afraid of me. All of these land boys should be afraid of me. Why had I tempered the things that I was, why had I kept myself contained for their sakes? Hidden my past, my nature, the shadow of my names. Let them quake before me; let them die in my wake if they couldn't keep up. \"Do you truly believe,\" I told Natch now, letting my voice be seawater, feeling the way it left my body like mist, \"that I need help to find my revenge? That I, I, need something so paltry, so insignificant, as a ship to travel through this world?\" \n\nBetter, he had wanted me to be. Better, I had wanted me to be. This was better. This was safer. Let my body turn to nothing but storms and white-capped waves if the Captain would not have me. I could not feel pain as a thousand crashing atoms of salt and a million churning molecules of water. I could not be turned away as the everlasting sea. Before me, Natch shrunk back, fear in his eyes and his body shaking. \n\n\"Lad.\" I turned and crashed up against the rock that was Alan. I barely noticed as Natch scrambled from the room, released from my attention, fear making his exist clumsy and fast. \"My vegetables.\"\n\nI felt a bump at my feet and looked down to see onions, displaced from their homes as the ship listed under the sudden wind that had come to be at my side. I watched impassively as they tapped at my legs in silent entreaty. Tap, tap. Tap.\n\n\"Lad,\" Alan said again.\n\nI sighed and concentrated on the wind. Soon I felt it lessen, knew the ship to be righting. Knew my world was not so easily fixed. \n\n\"The Captain is everything,\" I told the onions. My voice was shaking. Everything was shaking. \"The Captain is the only thing I care about.\"\n\n\"My boy.\" Cookie laid a hand on my shoulder. I looked up to see his hand holding out a knife. \"I know.\" \n\nI bent down to pick up the onion, took the knife, and went to work. \n\n***\n\nI served the food that night for dinner as I had so many other times. The ship was tense; they might not know exactly what was happening, but they could tell something was wrong. \n\nThey were nobodies. I stood in the kitchen and waited for my Captain. \n\nI could not eat, my stomach hurt so bad. Instead I sat in the kitchen, my eyes tight against the counter top. \n\nIt was a long meal. \n\nI wiled the time away with daydreams, fervent wishes that I had been born a different being, that I had never been the King, never taken onto my father's ship and made the things that I was but as soon as I thought it I took it back because then I would not have met my Captain, and then I wished that I had never been born at all, that I had died like so many other children in the hold of that dark ship, that I had drowned at sea in my birth but that had the same result and so I could not wish it, not truly, for perhaps the Captain would be better without me but I, I could not imagine a world where I had never been given the chance to be with him. \n\nChance, opportunity. Fate. I had never been given an option of who to be. I moved past wishes and turned sour; I cursed the turnings that I called fate, I cursed prophecies and fathers and family and the sea, I cursed my wretched inclination towards the taciturn and every part of me that I could think to pick apart from the rest.\n\nIn the end, none of it mattered, because the Captain did not come to dinner.\n\nDinner ended in it's own time, my body vibrating with unresolved tension. As the men filtered from the room I moved about, cleaning up and clearing spaces with the energy I carried. Most men left quickly, unwilling to tempt the things that I might be. It was a decision that did not register to me in that moment; of course they would leave. Of course they would fear me. Had I not wanted this, cultivated this so many times in so many places? I carried pain so close to my chest it puffed from my nostrils and soured the air.\n\nAs I stacked the last of the bowls, I noticed Natch and Sneg standing in conference. I paid them only the briefest moment of attention, and only then because they had not run like the others, before turning my back and returning the to comforting closed space the kitchen provided. \n\nI was surprised when Natch walked up to the counter. No, not surprised, for I did not have the capacity for surprise at that time, so filled was I with other things. But I would have been lying if I said I had expected it. Natch might not be afraid of ghosts, but he had certainly learned to fear the sea. I ignored him and continued with the dishes. \n\n\"Ghost.\" \n\nThe dishes stacked neatly, satisfactorily. Behind me, I could hear Natch shift. \"Ghost.\"\n\n\"That isn't my name.\" My voice came out sharper than I intended, cut through the space like Val's cold winds. Brothers, I thought sourly. Family. \n\n\"I know. I mean, of course it isn't, but -\"\n\n\"I have no names.\" I stared down at the bowl in my hand. \n\n\"Would you rather he call you Your Majesty?\"\n\nI whipped around to find Sneg flanking the small blonde boy; so they had decided that reinforcements were necessary. Didn't trust Natch alone with me, with the things I carried, with the past I held in two hands like a bowl, like something that someone else had crafted but still fit so well in my grasp and what if the things they saw within me were true, what if I was the product of my past and the stories and at that thought I considered throwing the bowl I held at their head. I thought about sending my oceans to clean out the things living within their soul that seemed to be able to see me better than I had ever been able to see myself. \n\nSneg must have seen what I held in my eyes, on my skin. They always could, always would be able to. But rather than turning away, they moved into the room. \"Just saying.\" \n\nIt was pointless to be so angry at anyone but myself. Sneg had done nothing. I sighed and put down the bowl. \"I'm dead,\" I told them. How many times had I told them this? How was it possible that they had never understood, that I was dead, that the King was gone, that that life was over? \n\n\"I know.\" Sneg hoisted themself up so that they sat on the counter, booted feet dangling. \"But your death doesn't negate the life that you lead.\" \n\n\"Ghost.\" I leaned forward at the sound of Natch's voice, my weight on my hands, my back to the coming words; why would these two not leave me be? \"You need to go and talk to him.\"\n\n\"He does not want to see me.\" This was true. It was apparent in the way he had left the room when I had entered, in the way he had not come to dinner. The look in his eyes... \n\n\"He's confused. I told you before, he doesn't know what to think.\"\n\nI stared down at the counter. How had this come to mean so much? Was it possible it was I who did not understand my death? \n\n\"Ghost,\" Natch prompted. \n\n\"I don't know what to tell him,\" I admitted. \"I don't understand.\"\n\nNatch opened his mouth, but it was Sneg who answered. \"Then go and ask him.\"\n\nAnd there it was. So simple, so easy, and the hardest option in the world because it would take me back to him and I would have to see him, be in the same room as him, look him in the eyes and watch as he looked back...\n\n\"I do not know if I can,\" I told Sneg quietly.\n\nSneg shrugged as they hopped down from the counter. \"That's up to you.\" They collected Natch on the way out the door, looking calm and casual but I saw the way they never fully turned their back to me, I watched how their eyes never left my form and I hated it, hated the things I had become to them and the way they felt they had to live, \"but if you want to be with him you're gonna have to have these conversations at some point. Talk to him and maybe it doesn't get better, or don't and it never will. It's your choice.\"\n\nI stood in the kitchen for a long time after they left, surrounded by onions and silence. \n\n***\n\nI had never before felt such anxiety from something so insignificant as a door.\n\nI stared at it, willing it to give me some hint of what might lay behind. Was the Captain distressed? Frozen with sorrow, or anger, or some other emotion I could not even imagine? Was he even in the room? Could I do this? \n\nI shook my head. It was just a door; it held no answers for me. I put my hand on the knob and prepared to enter. \n\nBefore I could, my body froze. What was I doing? Walking in like this was foolish, was more than rude. Might startle him. My mind brought up the way his fingers had once searched for a knife even as I tried to turn away from the thought.\n\nI never wanted to see him take that form in front of me again. \n\nSo should I knock? To enter my own room? To enter his room, I reminded myself, but it was still mine and I did not know what to do, did not know what was right only knew that what I was doing was wrong, again, and I couldn't afford to be wrong again, and so I stood there trying to decide what to do until the door yawned open beneath my hand throwing my rapidly spinning brain to a crashing, beautiful, Captain filled halt.\n\nBecause the doorway was filled with the Captain. And I, I was filled with him, his scent, the sight of his dark eyes wide with surprise, the way his shirt fell open and revealed to me his chest, his skin, his beauty...\n\nHe took a step back, a small one it was true but still a space was created and I. \n\nI looked away.\n\n\"Oh.\" His voice was so sterile. \"It's you.\" \n\nI waited for him to say something else. \n\nHe did not. \n\n\"Can we talk?\" I asked quietly.\n\n\"I was on my way somewhere.\" That sterile voice, this distant man...\n\n\"Please.\" I couldn't look at him, not like this. Not when so many other versions of him pressed up against the back of my eyes. \"I need to speak with you.\"\n\nThe Captain snorted, an ugly sound that made me wince, but he stepped back and gestured for me to enter the room. I moved through the space he made for me carefully, acutely conscious at every moment where his body was, how close he was to me, how far, the way he held his muscles like he was about to fight...\n\n\"So, what was it you wanted to talk about?\" he asked as soon as the door was closed. His voice was calm but sharp, and it made me instantly nervous. Before I could answer he was speaking again. His back was to me, his hand still on the door handle. \"You, of all people. Come here to talk. As if that's something you do now, as if this were your idea. Come on, Sailor. You, wanting to talk.\" He turned to me then, and I shrunk back under the ferocity of his gaze. \"Don't make me laugh.\"\n\nHe swung across the room then, a ship in full sail, a beautiful and powerful and dangerous thing, my Captain, my love, the whole of the night sky and I watched him and ached and wished, and all if it was useless because I had never before seen him so angry and I had never before felt so lost. \n\n\"Well.\" He grabbed a bottle from his bedside table as he passed it, his movements loose and yet so punctuated I flinched. \"Take a seat. Let's talk.\" With that, he threw himself down on the chest Val had packed for us, bottle in hand, his back against the wall. \n\nI stared at the bottle. Where had he gotten it? Who had brought rum aboard? I watched as he brought the bottle to his lips and felt my heart begin to race, my stomach turn. A hand reached out on its own, reaching for - but it closed on air, I had wanted it to close on the Captain, or on the bottle, but I couldn't do anything I was useless, I was nothing, I was the sea eternal I was the ever-present ocean I was the grey foam that flecked the decks of every ship and the storms that chose which men lived and died, I was all of that and more, I was everything and the world knew my names even in my death for fear of losing them and here, here I was helpless. In the face of this, in this room. I was helpless. \n\nI drew in a breath before my body could betray me with noise, pulling back my hand as steadily as I knew how. I found that it refused to stay calm, that traitorous hand, that it knew it's place in the Captain's where that bottle now sat and so refused to listen as I told it to remain here with me. I wrapped my other hand around it hard and hoped it would soon forget. \n\n\"What do you want to talk about,\" the Captain was saying. His words felt like the edge of barnacles against my skin, his voice like water leaving my lungs, like life given when I had not asked for such a thing back. \"Do you want to talk about how you didn't tell me that you used to be the fucking King? Cuz that's just, I mean. The King, Sailor. Want to talk about how we spoke of the King, how you deliberately talked around the truth like you were hiding this from me? The stories I told you. The stories you told me. I mean. The fucking King.\" He held up his bottle like he was giving a toast, the twist in his mouth mirrored by my stomach. \n\n\"Or, okay, want to talk about the brother you've got on the islands, how he seems to know everything that's going on? Knows more about my fucking past than I ever told you, which is just fucking rich, just fucking fantastic seeing as I don't know shit about you. I'm wondering, I gotta wonder, did you tell him to spy on me or is that just something he does? Keeps tabs on all your lovers for you. Or am I special?\"\n\nMy hands were tight. My stomach tighter. The room felt like it was shrinking, as if soon it would be nothing but sharp words and the Captain and anger in such a small space I would suffocate. \n\n\"Or would you rather talk about the brother you apparently have at sea? Gotta say, great fucking family you've got there. Or oh, how about the fact that every time I look at you, every fucking time I see your fucking face I can't not think about the man who fucked me up so bad I ran, I fucking ran because he was going to kill me, Sailor, he already made me dead. Wanna talk about that? The one you call brother. The one you made me believe I would be able to kill. You wanna talk about that?\"\n\nMy knuckles were so white. I could not look anywhere but at them, did not dare look up at the Captain.",
        "\"Because I kinda want to talk about that. I kinda wanna talk about how you made me feel powerful for the first time in years, how you made me feel like I could take him on. Like he didn't control parts of me that I'd long since given up. Was that all part of your fucking plan, too? Get me to trust you, build me up real good, make me your fucking puppet? Did he tell you how to do that, Sailor? Teach you how to make me dance? Tell you how to fuck with my head, how to really get in there and make me break? Or is that just something everyone in your family is just naturally talented at.\"\n\n\"Captain.\" His name came out of me like breath after a punch. I had no breath but his name. I had nothing. I was nothing. My legs were shaking and I didn't know how to make any of this stop, couldn't. Couldn't. \n\n\"Do you know what he did to me, Sailor? Do you know the shit he used to do to me, that he made me do?\" There was a pause; I heard a gurgle and a clink as the Captain drank more from his bottle. \"Oh, ho, I forgot. You must know, right? You saw him do that shit to others. Watched this shit go down on your own fucking ships. Fucking watched.\" Another swish. Another clink. My body swished with him; my body was nothing without him. \"Fucking watched. Did you stop at watching? Is that where it ends, Sailor? Or did you use to join in too?\"\n\n\"Please.\" I couldn't stop my voice. My traitor hands, my knowledgeable hands, they had taken up homes on my face and I could not find a way to peel them from my skin. \"Please, stop.\"\n\n\"Stop? Stop what? You're the one who wanted to talk.\"\n\n\"I didn't.\" I didn't want this. What you're saying is wrong, your words are climbing into my soul and ripping me to pieces, please stop, I love you please stop. But the words got stuck even before they reached my hands and I stood there, shaking, palms pressed to my lips catching every useless, empty breath. \n\n\"I'm just trying to understand, Sailor.\" I felt my body sink down to the floor in a slow submission, my legs unable to hold the weight of all the anxiety my palms were gathering just in front of my lips. \"Because I've been thinking, been doing a lot of fucking thinking. About you, and the way you are. And who you are. And who you're related to.\" I tried to shove the breaths back in so that they would come back out with words, with explanations, anything, but my lungs refused to take air and I was left kneeling there, held down by the gravity of my own uselessness. \"Mostly, how you came to be here. Cuz that just seems odd to me, you know? That you would walk onto my ship. Me, of all fucking people. Of all fucking shared histories.\"\n\nIt was fate. It was chance. It was you, it was always only and ever you, I tried to say, because you found me. Of all the ships in the sea, you chose my ship, you raided my merchant, boring, useless transport. You found me and made me something more than I was ever supposed to be. I wanted to tell him, wanted to remind him, but my breath was in my hands and my lungs were lead.\n\n\"So I just want to know, Sailor. Because remember, and I do, I fucking remember how you walked onto my ship and came onto me. Do you remember that, Sailor? How you came onto me. How you seemed to know how to get me all riled up, every single fucking thing that would turn me on.\"\n\nAs if I could forget. As if I wanted to. On my knees on the floor, I quietly began to cry. \n\n\"Did he tell you that? Did Val -\" I heard him pat the chest he sat on, \" - tell you about that? About the things he used to do to me, how he would find the things my body loved and do them just to watch me squirm, how I hated it but my body would react, how my brain is so fucking fucked up and I can't make it fucking stop -\"\n\n\"Please,\" I asked him, begged him, but he was gone, angry, the cold press of stars' eternity relentless against my soul, burning, burning. \n\n\"-even though I didn't want to do the things he was making me do, how he made me fucking hate myself, Sailor. How he made me his because he told me I was, how I didn't have a choice. And then you come along, and you're everything I want and nothing I hate like you fucking knew, like someone told you. Like you had a fucking list, Sailor. And you rile me up with what you do, and all the things the are and how you let me touch you. With the parts of me, the shit I've always wanted but managed to keep hidden from even him, that I can't even, couldn't ever fucking touch after him because it was too fucking close, the shit he fucking ruined and there you are, slamming against all those limits and just.\" He took a long, shaking breath. \"Fuck, Sailor, because you made it okay, because you made it not like it could have been. And I let myself think that maybe, maybe I'd finally found someone who makes me feel happy. Who I could be okay with, safe with. I felt safe with you, Sailor. I fucking let you into my fucking life, risked my life, my sailor's lives for you. I gave up my ship. I gave up my fucking heart. I fucking love you, Sailor, I trusted you and I love you so much and I find out, I fucking find out.\" He paused; the only sound in the room was my ragged breaths, spilling out over my fingers and splashing onto the floor with my tears. We sat there a long time; me, a pile of ash and embers, moments away from scattered indelibly; him, a thousand distant suns separated by incomprehensible blackness.  \n\n\"Fuck,\" I heard him say after a stretch of time so long I thought it eternity. Then again, angrily, so angrily, \"Fuck.\" \n\nIt was only seconds after this second exclamation that the bottle shattered; I flinched, an automatic reaction after having so many of such tosses aimed at my body in my youth, but the splashing of rum was centered in the corner opposite me. I raised my eyes to see him glowering at the spreading puddle, thick curls obscuring much of his face, dark brows nearly fused together over dark, swirling eyes. \n\n\"Fuck,\" he repeated. \"I didn't mean. I just.\" He took a deep breath as he pushed back his thick curls; it whistled through his nose. \"Fuck.\"\n\nI tried to get my breathing back under control, my tears. My thoughts. It didn't matter; he wasn't looking at me. Instead he stared, for a long time, at the slowly spreading stain in the far corner of the room. The smell of rum was everywhere, the sound of breaking slipping into the air like blood in water. When he finally turned to me my breath caught in my lungs, in my fingers, in the palms of my knowledgeable, errant hands, because the thing that was breaking was him and I had never, ever seen his eyes look like that. I made a small noise and saw the Captain pull back in surprise, or perhaps simply to take in more of me. \n\nHe watched me for a long time, perhaps waiting to see if I had anything to say. I did, I had so much I wanted to express, but I didn't know how to say it or perhaps I was a coward. Either way, I stayed silent as he watched me, then as he shook his head, then as he walked past where I knelt on the ground and left the room, closing the door behind him.\n\n***\n\nI expected the next person to come through the door to be Finn, reprimanding me for letting the Captain get into the drink, or Natch, reprimanding me for hurting the Captain, or Sneg, reprimanding me for gods all knows what but it would hurt because they would be right about the subject and right to do so and so I turned my back to the door. I did not want to see any of them. I did not want to see anyone. \n\nI was the nobody. I was not worth any of their time. I busied myself with straightening the room and tried to not think about the passing of the day.\n\nWhen the door finally opened, midway through my organization of maps, I did not turn at first. I did not want to see who had come to remind me of my place and my mistakes. It was only when the maps were stacked well that I turned and took in the man who stood in the door. \n\nAnd I froze. Because standing in the door was the Captain.\n\nFrom the way he stood there, frozen, I do not think he had expected me either. \n\nI ran my eyes over his body, trying to parse the drink from the man. His eyes were wary but seemed clear, his hand on the door merely an extension of the movement my presence had arrested him in rather than a steadying force. I watched him notice the way I searched him for signs of intoxication and his eyes went from wary to dark to something I did not recognize because I had stopped looking. \n\nThe Captain did not move forward. I did not move forward. The distance between us grew with every second. \n\nFinally, he spoke. \"I didn't. I mean.\" He took the smallest step in, closing the door behind him. \"I thought you'd be in the kitchen.\"\n\nI shifted, my arms coming up to cross over my chest, but that felt restrictive and wrong and so I lowered them again. \n\n\"Are you. I mean.\" I did not dare raise my eyes to see how the Captain was standing. Hearing him was hard enough. \"I just came back to clean up the.\"\n\nThere was a pause as the Captain took in the fact that the mess of rum and shattered glass was no longer in the corner where he had left it. \n\n\"You didn't have to do that,\" he said, his voice soft. \n\n\"It was nothing.\" I was used to it. How many times had I cleaned up such messes before? \n\n\"It wasn't -\" I heard the Captain sigh. \"None of it. What I said, how I acted.\"\n\n\"You were in your right,\" I let him know. \n\n\"Never.\" His voice was firm. \"I'm never in my right to throw things in anger, and. Or. Losing control like that.\" As he took a step into the room, my heart began to beat faster. Something like hope warred against anxiety withing my soul; I willed them each to be silent, to drown in the sea and to leave me with my eternity, but they persisted and my heart sped up again as the Captain moved towards me. \n\nHe did not come close, but instead moved past me to inspect the corner that had once held the remnants of his escape, his anger. \"You truly did not have to do this.\"\n\nI shrugged. \"I'm used to it.\"\n\nThe look he gave me caused my knees to nearly give, simply because it was the Captain and he was looking at me, because his eyes did not hold anger, because his eyes, because him. Because. I steadied myself with a hand on the desk beside me.\n\n\"I don't know anything about you,\" he said into the silence his gaze has conjured up. \"I don't know about your past, or who you are. I don't know what you've been through or what it means that you're here now.\"\n\nI met his gaze carefully, my head bowed slightly. My heart beating a rhythm I did not understand. \n\n\"What it means that you are royalty.\"\n\nI looked away at the way he said the word. \"I am not the King.\"\n\n\"I didn't say that you were.\" I lifted a shoulder in quiet acknowledgment. \"But your brother is King now. And.\" He paused, considering. Perhaps remembering stories distant, told in bars by men who journeyed into the terror of that world as an escape from their own. Perhaps remembering stories more personal, told by a man who's world was that terror, who could not escape because it was his life. \"Your father before you?\"\n\nMy arms crossed on their own accord at the mention of his form. \"And my sister in between.\"\n\nThe Captain took a moment to consider this. \"Your sister?\"\n\n\"She lives in the North.\" I offered no more explanation that that. I knew what the tales said of her. I hated that I had allowed such stories to be created, that men held her name on their tongues and their breath did not immediately burn their bodies to ash with the pressure of the concentrated untruths. But would it have not been worse to have killed her? Would it have not been at least the same, and her dead as well?\n\n\"He never mentioned a sister,\" the Captain muttered.\n\n\"And he did mention me?\" I asked, my voice sharper than I had intended. \n\nThere was a moment of silence as my words settled. \"I don't know,\" the Captain said carefully. \"I'd like to think he didn't.\"\n\nI waited in the silence that followed, my arms tight against my chest. My heart knowing what was coming, my body hoping it would not be true. \n\n\"He used to talk about killing a King,\" the Captain finally said. I couldn't look at him, instead studying the grain of the wood beneath my feet. \"How he beat a sea god. How that god had been vengeful. Violent.\" The Captain paused; the wood floor stared up at me, impassive. \"How he killed children for fun.\"\n\nI scoffed, shifting my weight. \n\n\"So it wasn't you,\" the Captain said slowly. Hope and caution at war at the edges of his words.\n\n\"It was me.\" I could feel the way this made him stiffen without having to look, felt it in the air. I readjusted my arms, settled them tighter against my chest, my racing heart. My empty lungs. I needed no lungs to make these words; the rush of blood carried them as surely as ocean currents, made it so that I had only to open my mouth and listen as they came churning forth like seafoam. \"I made children fight to the death, and I made them kill my enemies for me. I took them into my home, stole them from the sea and turned them into an army. Entertainment. And then I took those children under my wing when I killed the man who had been making them fight, that god. The man who used to tell us he was a god to control us, the children of the sea.\" I killed a sea god and drank his blood, I thought. It made me immortal. I slept with a thousand sea witches, or sirens, or gods, searched for my hundred sons that would make me all powerful. I killed my sons, I bore no children, I had one hundred daughters and sold them all. I was the sea and eternal and when I had been the King, I had been even more eternal still. \"And then I did many other things and those things I may have actually done with these two hands, but now I have done none of those things because I am not the King. Now Dreyfus is the one who killed children and saved them and even though it was this body who killed that man, that monster, it is Dreyfus who now is the one who has the victory of it as well as the victory of my death. Because it was not this body that did it, it was the King. I am no longer the King. The King is dead, long live the King, and it does not matter to anyone who the King is besides the King.\"\n\nI looked up and found the Captain staring at me, his eyes fixed on my form, his brows drawn together. My heart found new rhythm in the unreadable expression of his face. \n\n\"The King is not a person,\" he tried. \n\n\"The King is a person,\" I corrected. \"It is just every person who has ever held the crown, and every person who ever will.\"\n\nHe took that in silently, my Captain, my eternal sky. Took that in and I do not know what it meant to him, but I knew what it meant to me and so I told him. \n\n\"I was always going to be the King. I always knew it, was born to it.\" That's what I was told. That's what my father told all of us, why he made us fight. \"It was destiny, and it nearly killed me.\"\n\nThe Captain took in a breath at that; I waited for him to release it, but he seemed frozen. Waiting. \n\n\"To be free of all that,\" I continued quietly. My heart pulsed words directly to my mouth, the press of them harsh in my eardrum, my throat. \"To no longer be tied to my father's shadow. To not be what he was by nature of a name, of a position. To be able to walk into a room and not have a thousand tales weighing down on me, to know that my actions are mine, mine, my love, not fates, not the Kings, I can do something and it will be attributed to me and they will know of it as mine and that is so new, such a novelty, or to have something so simple as when I walked onto your ship and you looked at me and did not fear. To have you look at me, to have that chance. When you to look at me and you don't judge my soul against the actions of my father, or his father, or my sister or a being that never existed but was instead some creation of a drunk man wishing the world was a more frightening, magical place and invoking my name to make it so. To be me, instead of the King. To be me and to be here, somehow, with you.\" The Captain watched me steadily. My heart beat on. \"I just wanted to stay here with you.\"\n\nMy words sat in the room long and pulsing, a sea all of their own. I did not watch them as they slowly listed with the pull of the ocean - I watched the Captain.\n\n\"You should have told me,\" he finally said.\n\n\"I should have,\" I agreed. \n\n\"You deliberately hid this from me. You lied.\"\n\nI said nothing. He was right; I had done more than not tell him. I had taken great care to keep this truth from his world.\n\n\"Why?\"\n\n\"I did not think it was important.\" I saw from the look on his face that this answer was not enough, and so I said the next words that came to my lips, \"And I was scared.\"\n\nHe froze, eyes locked in mine. My heart pulsed in time with my fear. My voice came out quiet, cracking. \n\n\"I don't want to lose you.\" \n\n\"Fuck.\" His hands came up; one covered his face while the other sunk deep into his hair, pushing it back halfway where it gathered in a mass of curls and anxiety. I looked down, unwilling to see the sudden rift this man was no longer able to contain, his composure slipping beneath the waves of my monologue. \"Fuck, Sailor. I don't. It isn't fucking fair.\"\n\nI stared at the ground, covered in words I was no longer sure were right, or correct, or warranted.\n\n\"Everything you say makes sense, but I'm still so fucking mad at you,\" he continued. \"I love you so fucking much and I'm so fucking, fucking mad.\"\n\nI slowly raised my eyes to find him staring me down. \"You should have stopped him. When he sailed under you, and I don't mean because you were the King, fuck being the King. You were still you. You, with all your power, and the things that you know. You should have stopped him.\"\n\nI nodded, slowly. \n\n\"Why didn't you?\"\n\nThere were so few left in the end. So few, so few left when we killed my father, so few that survived... There can only be one, my father used to tell us. When the strongest remains, that one will have a seat at my table. And then he would bring home more children he had found floating in the sea, take them from the ocean's protection into his hell of a ship so that there was never an end to the fights. And I survived that. My siblings, we survived that. Us four and no one else. We were alone in our survival, in our shared experience, and no one else could ever understand because everyone else who could we had already killed. \n\nNo, I couldn't leave my brother, any more than I could leave Val even after he abandoned the sea. Anymore than I could leave Miranda after she tried to kill me. Val had warned me, had warned me of over-empathy and that my siblings would not extend the same sentimentality towards me, but. \n\nHe was all I had left. \n\n\"I didn't want to be alone,\" I told the Captain, and wondered if he could possibly understand, and wondered if I even wanted him to.\n\nThe Captain took a long time to hear this, his eyes searching my face, his hand still tight in his hair. Curls cascading every which way from his gripping fingers. Finally, he shook his head. \"Fuck.\" Another head shake, those curls catching the light of the lamp in the now-dark room. When had the sun gone down? How had I missed the sunset? \"I think I need some time to think about this.\"\n\n\"I understand.\" He looked so beautiful, standing there. He looked so lost. He was my entire map, my stars, and I needed him to find myself and watching him stand there as if he did not know which way to turn hurt me in a way I did not know I could feel somewhere deeper than my bones. \n\n\"Maybe it would be best,\" he said slowly, eyes roving the room, \"if you did not sleep in the same bed as me tonight.\" \n\nHis words were like hot coals dropping to my stomach. \"Whatever you need,\" my racing heart told him. My lungs struggled for breath. My trembling hands hid themselves within the crook of my arms as my eyes tracked to the chair that sat between us, a reminder of how we used to spend our nights, he on the bed and me, tied, perceived as dangerous. My body, my entire body, reduced to it's parts so that I did not have to face the truth of it. The possibility of this. Were we back to those days? Did he see me as a threat, had I become a thing to tie up at night for safety rather than fun? ",
        "He caught my gaze and winced, a darkness settling behind his features. \"I'm not going to tie you up as punishment, love. Never that. Okay? I just.\" Love, my heart beat. Love, love, love. \"I just need some space.\"\n\nI nodded, relief fluttering in my chest and making my waters shake. \n\n\"I can find somewhere else if it's easier, I don't want to make you -\"\n\n\"No,\" I interrupted him. He was the Captain. These were the Captain's quarters. \"I'll sleep in the riggings.\"\n\nHis frown was so natural, so ordinary, that I settled into it without thinking. \"Isn't that uncomfortable?\"\n\nI shrugged. I found it as comfortable as a bed, more so than some, but the reasons why were complicated and confusing even to me and so I simply told him, \"I'm used to it.\"\n\nHis frown deepened. \"I don't think I like these things that you are used to.\"\n\nI shifted, not sure what he meant by that. \"It is not so bad,\" I tried to explain. \"I like it.\"\n\nHe frowned further at me, and I found myself inexplicably smiling. It was in the way his brows furrowed, I think. How he carried his worry so physically, so tactilely. So right. \"Don't worry about me,\" I told him softly. \"I'll be fine, my love.\"\n\nHis face was on the way towards gentling when he ripped his body away from me, his hand returning to his curls as if their errant paths were the thing leading him astray. \"Fuck,\" I heard him say towards the wall. \"Fuck.\"\n\nI turned without another word and let myself out of the room.\n\n***\n\nIt felt good to be on deck, to be in the fresh air of the night. The sky welcomed me with open arms, the stars hidden from my view by dark clouds but still I pretended I could hear their voices. Minnie always used to tell me that the stars sung to those who were hurt, that the voice of a constellation could heal any wound. \n\nI listened that night so carefully that I was sure I could hear every refrain. \n\nI could not get to sleep right away, not with the buzzing of what had happened that day, the knowledge of my family so recently left, my lover alone in his room. The stars above singing for me. And so I settled myself on a beam and looked out over the waves. First back towards home, where Val might be yet and where Sybil certainly still was, where the cracks of the world slowly stretched. The birthplace of the end. Where I had built my home. And then I looked towards the East, where the Cave of Sapphires glittered in the night, where Cass would be holding conference with fishermen and fae and merfolk, where whales in need of friendship came to teach and learn songs from sirens who had come for a healing potion and ended up staying the night, or the week, or the year. Where the tea was better than anywhere else in the world. Where I had found a home before I had needed one built, where I was taught all the things that a home was supposed to be. Where I had learned what was possible, that a home was possible. And then I looked North, where a ship sailed, massive and imposing and held aloft as much by fable as by its framework, captained by a man who had killed me and hurt my love and where more lies and truths lay than I ever wanted to touch. A place where I doubted more and more every day my home had ever existed. \n\nHome, I thought. Home is a strange thing when you are the ocean. Home is a delicate concept when it relies just as much on those around you as it does on the place. \n\n\"Penny?\" Sneg asked. I hadn't noticed them climbing up, so entrenched was I in my musings. I looked askance at them, unsure what they meant.\n\n\"Penny for your thoughts,\" they expanded, settling beside me on the beam. \n\n\"My thoughts are worth more than a penny.\"\n\nSneg laughed. \"It's a land saying, man. And no one's thoughts are worth more than a penny.\" They smiled over at me, nearly glowing in the soft light that finds its way into the night, strands of brightness catching on their long braid like moths. \"So, what were you thinking about?\"\n\nI saw no reason to lie, not to someone with so many ways of listening. \"Home,\" I told them. \n\n\"Heavy concept.\"\n\n\"Aye.\"\n\nWe sat in the quiet of the stars song for a bit. Perhaps Sneg thought of their home, burned down by men who believed they had dominion over the wars of the gods. Perhaps they thought of the ways in which they had created new homes in places I had never been, with people I would never meet. I do not know. I did not ask. I listened for the stars and would have been content to continue doing so, but Sneg again began to speak.\n\n\"Have you spoken to the Captain?\"\n\nI nodded. \n\n\"And?\"\n\nI shrugged. \n\nSneg nodded empathetically, a small noise of agreement coming from their lips. \"Is that why you're out here?\"\n\n\"He asked for space.\" I was the one with space. I thought for a moment of him alone in that room, that bed, his words and mine still mingling on the floorboards and getting caught up in the linens, crawling over his skin without the soft caress of starlight to press them from his mind...\n\n\"He'll come around.\"\n\nI shrugged again. He would, he needed to, he had to or my world was no longer mine, but that did not mean I could bring myself to agree out loud. My stomach tied in knots sitting so close to the possibilities and it made me want to fight a demon.\n\nBut Sneg seemed unconcerned. \"He will. I mean, I was pissed at you for summoning me back to the sea, and I was even more pissed at you for making me deal with Yarrick, but hey, look at us now. And I like you, sure, but I don't love you. Love moves mountains, that's another land saying. A good one, though. Love moves mountains, love changes the maps of the stars. And you two love each other.\" I did not respond, but instead thought of how the Captain had not even been able to smile at me as I had left his room. He was so angry, so lost. It did not seem good to change a map when you needed it for your basic navigation. I was not so sure that moving mountains was always such good thing for the land. \n\n\"It'll be alright.\" Sneg placed a small, pale hand over mine comfortingly. \"You'll see.\"\n\n\"How do you know?\"\n\n\"One, because the love that you two have is so fantastic it's almost disgusting. I traveled with a troupe for a year and you two make their love ballads read like merchant reports. Two, because if it doesn't work out I'm pretty sure you'll each independently tear the world apart. And you might know where the cracks lie, all the maps to the pressure points and how to not become overwhelmed, and you might have a hell of a witch on your side, but I wouldn't put it past the Captain to beat you to it. He seems the determined type.\" I turned to Sneg, frustrated by their flippancy, but they merely grinned and patted my hand again. \"He's determined. He's not going to let you just walk away, or if he does I'll beat his ass until he sees reason because I'm not dealing with any more of your angst than I have to. Either way, it'll turn out.\" Sneg's grin turned into something softer, something closer to a smile, and I found myself relaxing. \"Trust. It's going to be alright.\" \n\nTrust. I felt the stars on my skin, and trust just above that. If I could obtain the stars, why should I not be able to obtain trust? \n\n\"Okay,\" I told Sneg. \"Trust.\"\n\nThey patted my hand one last time. \"Get some sleep. You must be exhausted.\"\n\nI nodded as they began to slide off the beam, their feet searching for footing among the ropes. \"Sneg?\"\n\nThey looked up just at the clouds broke. The moon shone down, catching on their face like wisps, casting their face in cold light and making them look like a light source themself. Like a ghost. \n\n\"Thank you,\" I told them quietly. Thank you for everything. \n\nThey grinned, flashed me a quick thumbs up, and dropped towards the deck. \n\n***\n\nIt was a few hours more before I allowed myself to turn to rest. The moon came out periodically, checking on me and lighting the deck below, but I preferred the darkness. The semi-gloom of clouded night, the light drifting by on warm currents. In that space I found solitude and the type of quiet that held the ever-present noises that gave me peace. \n\nWhen I finally laid down, it was to the gentle hum of wind through the ropes, the quiet creak of the ship, the lap of water against her hull. The singing of the stars. All of these things swirled around me, filling the emptiness and keeping me from loneliness.\n\nAnd then, the sudden vibration, the twang of ropes beneath my form that told me someone was climbing towards me. This, this was why I slept like this so often, so exposed, so safe for I always knew when someone approached, the weight, how they climbed, who it might be, and so I sat bolt upright and felt my heart begin to take off because I knew who was coming up those ropes but I did not know why.\n\nWhen the Captain reached me, I was waiting. \n\n\"Hey.\" He leaned against the nest I had made, eyes critical. \n\nI did not know how to respond, and so I sat, silent, in the music of the night sky and the beauty of his gaze. \n\n\"Will that thing hold me too?\"\n\nI nodded. It was not a matter of weight, but rather a matter of space - \n\n\"Good.\" He pushed himself into the ropes, entering my space with such speed he knocked me back. I grabbed onto him automatically, keeping him from the larger holes and settling him where it was safe, where it was comfortable. Where it was best for him. \n\nWhich, in such a small space, turned out to be pressed against my chest and neck, his legs entangled with mine. My heart beat; my hands shook. \"Captain,\" I began.\n\nHe cut me off. \"Couldn't sleep.\" His hand came up to rest on my shoulder, a light touch that pushed all the breath from my body. \"Room's so fucking empty without you.\" His fingers traced gently over my skin. \"Is this okay?\" he asked, his voice hesitant. \n\nI nodded, then realized he wouldn't be able to see the movement from where his head lay nestled in my neck. \"Yes.\"\n\nHe let out his breath in a whoosh that raised goosebumps all over my skin. \"Good.\" His fingers traced over my shoulder again and I shuddered. \"Good.\"\n\nWe laid there in silence, the kind of light that exists in clouded nights trailing over our bodies. My heart beating fast in my ears. The Captain's fingers on my skin.\n\n\"I was worried you'd be angry with me,\" he said, a quiet statement that caught me by surprise. \n\nI had not thought I had a right to be angry. I was in the wrong here. Wasn't I? \"Why would I be?\" \n\n\"For. I did not treat you with respect.\"\n\nI shifted, my arm wrapping around his back, holding him because it was needed but also because I was too afraid still to touch him in any other way. My other hand hovered close to his chest but I held it at bay, held it back with the power of guilt and care and trepidation. \"You were angry. You had a right to be.\"\n\n\"Please don't -\" He took a quick breath in. \"Why are you making excuses for me? I had no right to act like that. I can be mad at you, I can be pissed that you lied to me but. Fuck, I threw something at you, Sailor. I said the cruelest fucking things for no reason at all. How can you act so calm around me still?\" He ducked his head into my chest, so close to my heart I was sure he was listening. \"How are you not indescribably angry with me, knowing the shit that went through my head? The way I thought about you?\"\n\nCould he not feel the way my heart beat for him? Could he not hear how the thought of him fearing me, that those were thoughts he held in his body and not just words he hurled at mine, tore my breath to shreds? \"Do you think of me like that now?\" \n\n\"Of course not.\" My lungs, oh my grateful lungs. \"I might not know what to think, not really, and my whole body is fucked and my head is fucked and I don't know what I'm supposed to do with any of this information but.\" His fingers tightened on my skin for a moment. \"I know I trust you. I have to trust you.\"\n\nMy hand made its own way to his chest, closed the gap while I was distracted by his words and I felt the way that made him lose his breath, just that small touch, watched his eyes flutter closed and relief seep over his face and that made me need to touch him more, need for him to know he was safe, we were safe, that everything was going to be okay and so I lowered my head until it rested on his, my neck craning until I could bury my face into his hair. \n\n\"Love,\" he whispered, his grip pulling me closer. I said nothing with my words and everything with the way I tightened my own grasp, holding him, breathing him in. \n\nWe existed. We clung. We rocked there in the night sky, danced over by threads of errant moonlight and the kinds of songs you aren't supposed to hear. \n\n\"You're shaking,\" he said quietly. It was true; I had not gained control of my body, not fully. I took another breath of him and felt how that settled like a weight in my limbs, made me feel almost steady. \"Why are you shaking?\"\n\nI paused before answering, unsure how to say what I needed him to hear. \"You scared me.\"\n\n\"Fuck.\" He immediately attempted to pull away from my form. \"Fuck, I fucking knew -\"\n\n\"Love.\" I hadn't let him go far, mostly for fear of him dislodging from the riggings and falling to the deck. He was not looking at me, eyes cast to the side and brows drawn down. I knew what he was reacting to, my words having been as always too careless. \"I was not afraid of you.\"\n\nHe drew his eyes up to me slowly. \n\n\"I was scared,\" I began again, hoping this time I could get this right, that my words would be what I needed them to be, that they would come out as I asked and not as some other force decreed, \"but not that you would hurt me. I know you wouldn't do that.\" He looked away again, and I fought to bring his gaze back to me. \"Not like that, my love. If you ever hurt me like that you would never forgive yourself.\"\n\nI knew it was true even as I said it, although I had never had the occasion to think such a thing previously. Of course the Captain would not hurt me, not like that. Not without destroying himself. It was true and then I said it; I saw him collect my truth on his skin and breathed a quiet sigh of relief as his eyes again raised to mine. \n\n\"I was scared,\" I continued, \"that you would hurt yourself.\" I swallowed, seeing the guilt building in his eyes even as I tried to dispel it. Worrying that the next words, so true, so raw, would not help. \"I was scared that you hated me for things I had no control over. That the stories had done to you what they did to so many others, that you would hear others words and judge me for actions that were not my own.\" Or perhaps my own, or, or. Or. His eyes were so dark I could not see them in the night. They swallowed light and my words alike and did not allow any of it to escape. \"I was scared that I might lose you.\"\n\nI felt how his breath shuddered as he ducked his head back into my chest. \"Never,\" he told my skin. My soul. \"You'll never lose me.\" \n\nAnd something within me softened at his words, and my own breath shuddered as my lungs took them in, and I knew, I knew they were the truth. It was true and then he said it. What more proof did I need? \"I love you,\" I told him.\n\nHe was quiet in my arms for some time after that. \"I don't want you to forgive me so easily.\"\n\nIt was too late. It was done. I ran a hand down his back and listened to his breath.\n\n\"I haven't forgiven you. You lied to me, you kept information from me. You knew things about me that you shouldn't have and you didn't give me anything in return. I don't know what I'm most mad about of all the things, that you didn't tell me you were King, that you didn't tell me your brother was King, that I didn't put it together a long time ago from all the fucking clues I had. I'm so mad. At you, at myself, at fucking Cookie because he seems to know shit, at Natch even though I know he knows nothing. At everyone. At the fucking world.\" My hand had stilled; my body waited, my mind empty, for whatever it was that he might say next. \"How aren't you angry?\"\n\nI thought about that for a moment. \"I still have you.\"\n\n\"And it's that easy? You can just move on?\"\n\n\"No.\" Because I had not moved on, could not. Moving on was a physicality, and my body still held flecks of anxiety in my shaking fingers, my hesitant hands. My only recently calming heart. \n\n\"Then why are you acting like you have?\"\n\n\"Because.\" Because it had to be. Because I could not live if it were not. Because my body might know things but my soul could fight my body for years and come to no conclusion, and I knew this with the certainty of practice. \n\n\"Because what?\"\n\n\"I do not know how to put it in words.\"\n\nHe sighed softly into my neck. \"Will you try? For me?\"\n\nFor him, anything. I looked out into the stars, listened to their song. Took some time to put the words in an order that made sense. \n\n\"For a long time I was alone. I had Val. Everyone else was someone that might kill me or someone I might have to kill.\" Val was supposed to be like that. It had been my father telling me to kill Val that had caused his own death.\n\nIn the end he had not been a god, as much as he had spoken as though he was and tried to hold power in his hands like bullwhips. He had been a man, and he had died in the night at the hands of children. His death was legend and no one knew his name. \n\n\"Val left the sea,\" I continued. \"And then I was alone, and all I had was the ocean. And that was fine and I thought I was happy. And then I found you.\" And my world became complete all in an instant, and my body had known that and my brain had not allowed it for days. But in the end I had known. How could I not? This, this was completion. I pulled the Captain closer and felt him press his lips to my neck. \"And I was not alone anymore.\"\n\n\"And this is why you're so quick to forgive?\"\n\nI was quiet for a moment. \"I can't lose you.\" To be alone again would be alright, I could survive. But to be without the Captain...\n\nHis arms tightened around me like moonlight, like starsong. \"I told you,\" he murmured into my neck. The words slipped down into my lungs, gathered there and swirled. \"You won't. We can fight, we can be angry, we can be at odds. You won't get rid of me. I'm not going anywhere.\"\n\nI held him close and let his words settle. Felt my body believe. \n\n\"Please don't drink anymore.\"\n\nI think the Captain was as surprised by my words as I was; I felt the pause they gave him in the hitch of breath against my neck. \"What?\"\n\n\"You hurt yourself when you drink. We fight.\"\n\n\"We didn't fight last time I drank.\"\n\n\"No,\" I agreed. \"You nearly burnt my brother's brothel down instead.\"\n\nThe Captain was silent for a moment. \"Do we need to do this now?\"\n\nI lay silent. Hoping he would just agree and this would be over.\n\n\"Please, Sailor. I'm exhausted. Let's just sleep.\" \n\nI nodded, and the Captain sighed in what sounded like relief but could have been exhaustion. He began to shift, moving to get out of the hammock I had made. \"Alright. Let's get to bed.\" \n\nThe noises he made as I held him tight brought a smile to my lips. \"Sailor, let's go. I'm tired.\"\n\nI shook my head, happy where we were. The Captain took in my face, the smile just beneath my lips. His eyes roved past my face down all the way to the hard wooden deck.\n\n\"Oh,\" he said, his voice sullen. \"Hell no.\"\n\nI pulled his body back down into me, noticing how he did not fight his downward trajectory. I heard disgruntled noises coming from his throat as I settled him beside me. \n\n\"It is entirely too far up in the air,\" he told my cheek. I corded a hand through his hair and marveled at my capability to do so. \n\nHis breathing settled against mine as I ran my hand again and again through his long black curls. The clouds had long ago parted, revealing the night sky in all its glory. I held it there in my arms.\n\n\"Can you hear it?\" I asked the Captain. \"Can you hear the stars' songs?\"\n\n\"You want a song?\" his voice came back, held just steady as sleep threatened to turn it to wisps of ideas and currents of half-remembered interests. \"Christ, Sailor. Fucking demanding.\" More ideas than words, that time. Less remembered and more felt. \"Fine, then. But only for you.\" ",
        "And he sang to me, there in the ropes where we existed half in his dreams and completely in mine. We lay there as I held the sky and listened to the song of the stars, and learned what it meant to be healed."
    ],
    "authorname": "nakamook",
    "tags": [
        "gay",
        "gay pirates",
        "gay novel",
        "plot"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-18"
}