{
    "title": "Diary of a Pain Slut Week 05",
    "pages": [
        "= = = = = = = = = = = = = = = = = = = =\n When Maddi Miller gets caught doing naked self-bondage under an interstate bridge, the police take her to the psych ward of the local hospital. She is released but has to keep a diary as part of her thirty day evaluation and submit it to her therapist at the end of each week.\n\nThis is the final week of that diary. There are five weeks, each more or less stands on its own, but makes more sense if you have read the previous weeks.\n\n = = = = = = = = = = = = = = = = = = = =\n\n WARNING!  All of my writing is intended for adults over the age of 18 ONLY.  Stories may contain strong or even extreme sexual content.  All people and events depicted are fictional and any resemblance to persons living or dead is purely coincidental. Actions, situations, and responses are fictional ONLY and should not be attempted in real life.\n\nIf you are under the age or 18 or do not understand the difference between fantasy and reality or if you reside in any state, province, nation, or tribal territory that prohibits the reading of acts depicted in these stories, please stop reading immediately and move to somewhere that exists in the twenty-first century.\n\nArchiving and reposting of this story is permitted, but only if acknowledgment of copyright and statement of limitation of use is included with the article.  This story is copyright (c) 2014 by The Technician.\n\nIndividual readers may archive and/or print single copies of this story for personal, non-commercial use.  Production of multiple copies of this story on paper, disk, or other fixed format is expressly forbidden.\n\n = = = = = = = = = = = = = = = = = = = =\n * * * * * * * * * * * * \n\nMaddi's Diary, Day Twenty-Five, Monday\n\nDr. B said that he was very pleased see that I was moving forward in my relationship with Shirley. He feels that he can recommend that I be released from treatment. However... There is always a \"However...\"\n\nThe however in this case is that I cannot be released from court-ordered treatment until all \"fees, fines and restitution has been fulfilled.\" And court-ordered therapy does not mean court paid for therapy. I qualified for public defender because I was 18 and a college student, but the hospital stuff was submitted to my dad's insurance and that established my dad as a responsible party for the expenses.\n\nDr. B tried to sound very sympathetic when he told me, \"Normally, that would just be insurance co-payments and a few fines and fees, but in your case, your father's insurance company has rejected the claim because it stems from an illegal act in which you willingly took part.\"\n\nHe further explained, \"I can't reduce the fees because your father owns the land in the country plus his truck. They count all that as assets, so your family doesn't qualify for reduced fees.\"\n\nHe cleared his throat nervously and said somewhat apologetically, \"And in addition to all of that,  the state is charging you for a special inspection of the bridge you tied yourself under.\"\n\nAs stupid as it sounds, the biggest item on the list was that damned bridge inspection. Because I had \"attached unauthorized equipment to the physical structure\" of the bridge, a special inspector had to be flown in from somewhere with a special crew to do a full inspection of the bridge. I ran ropes through some eyebolts what were already in place on the bridge!! I didn't cut anything, weld anything, or even clamp anything. I didn't hit it with a truck, a car, or even my fists. I just ran some damn rope through a ring on the bridge. \n\nEvidently there is some weird-ass federal law that got written after a bridge collapsed up in Minnesota somewhere that requires this kind of inspection whenever there is \"unauthorized or uncertified work or attachment on or to a bridge.\" The bill for the inspection is $45,000 dollars!\n\nThe fines are almost nothing. My plea agreement includes a fine for public indecency. The criminal charge will be expunged from my record when I satisfactorily complete therapy. I still have to pay the $1,500 dollar fine plus $1,000 in court costs.\n\nThe in-patient stay at the looney bin was $14,000 and my 15 sessions with Dr. B cost $1,100 each for a total for treatment of $30,500. If I had insurance, those sessions would automatically be reduced to the negotiated amount of $600, but since I don't have insurance\u2013 or it isn't paying, I get stuck with the full, inflated charge.\n\nIt is one bullshit thing after another, but it all boils down to the fact that I have to come up with $78,000 by next Monday or go to jail...or worse, go into the state psychiatric facility downstate.\n\n\"Actually,\" Dr B said, \"the easiest thing to do would be to extend treatment. I can do that for a few weeks and recommend that it be extended on a month by month basis for up to six months. That would keep you out of jail or the state facility, but it would also continue to cost you $3,300 a week.\"\n\nHe shrugged his shoulders. I think he was honestly sorry for me. \"I know it's a real catch-22. You can't get out of treatment unless you pay for treatment, but if you don't get out of treatment, the bills keep going up.\"\n\nHe shook his head. \"There really isn't anything I can do. Maybe you can borrow the money from somewhere or your parents can help you out.\"\n\n\"I'll see what I can arrange,\" I told him, but I didn't have much hope. They think Dad has all sorts of \"assets,\" but he cracked a block on his truck out in Denver a few months back and the cost of those repairs, plus the downtime, emptied his bank accounts. He had to re-finance the truck to come up with the necessary money to replace the engine and get back on the road. There just isn't any spare cash in the Miller family right now and I think the mortgage on the land is as high as it can be already. I will have to come up with something on my own.\n\nDad's on an extended run and won't be back until Sunday. Mom is gone on a week-long training trip and may have to work Saturday also. So I am on my own this week and most of this weekend. This isn't something I want to talk to them about on the phone, so it will have to wait until Sunday. Maybe I can figure something out before then.\n\nWork was a blur this afternoon and evening. I was really distracted, but at least I didn't drop any trays.\n\nEnd of entry for Day Twenty-Five\n\nMaddi's Diary, Day Five, Twenty-Six, Tuesday\n\nI called Harold first thing this morning and asked him how much money I actually had in my Beat Girl account. He said I had $51,000 that I could draw out. Jesus! I'm really glad I didn't know I had that much. I might have blown it all on some really expensive sex toys.\n\nJust kidding, Dr. B. I have enough really expensive sex toys in my studio that are already paid for out of the Beat Girl profits. I probably should sit down with Harold some day and find out how much I, and he, am actually making on Beat Girl.\n\nHarold told me that normally he could advance me quite a bit toward future earnings, but right now he was in the middle of a big business deal and most of his money was tied up. He could loan me $5,000 from his personal savings, but that was all he could come up with on short notice.\n\nI told him I would keep the $5,000 in mind, but to transfer the $51 K into my checking account immediately.\n\nAs soon as I hung up from talking to Harold, I called Shirley. I cried on the phone with her for about a half hour, but then I had to get to work. I was crying most of the day, but I got all the orders right and didn't spill any hot coffee on anyone.\n\nThe Beat Girl session was TERRIBLE! I should have had Harold cancel the session and put on a rerun. We do that once in a while when Beat Girl is \"on vacation.\" But those are always announced in advance, and I didn't want to disappoint my fans.\n\nI disappointed them anyway\u2013 at least most of them. It was a spank and paddle night which usually brings out my E buddies, but I was so down that they stayed home. Anyone who was hoping to see me go into a pain-induced orgasm was very disappointed. On the other hand, anyone who wanted to hear me scream in pain really got their money's worth.\n\nI probably should have dropped the safety switch when I realized that the endorphins weren't going to kick in at all, but then I decided that maybe my body was telling me that I needed the true punishment with no help from my E buddies. I had, after all, gotten myself into this by \"an illegal act in which I willingly took part.\"\n\nEverything hurt like hell, and I kicked and screamed and thrashed like I never had before. If this was how \"normal\" people experience this kind of pain, I understand why they think I am weird. There is no way that I would do this regularly if it actually hurt that much with no corresponding reward and release.\n\nAs soon as the session was over, I shut down the studio and limped back up to the house barefoot and naked. I probably would have done that anyway\u2013 walked back up to the house barefoot and naked, but I wouldn't have felt like a whipped dog slinking back to its kennel while I did it.\n\nI had barely gotten back into the house when my phone rang. It was Shirley.\n\nShe didn't even say \"Hello,\" but instead started off with, \"I know how we can raise the money.\"\n\n\"I don't want to borrow from your parents,\" I answered.\n\n\"Can't do that anyway,\" she replied. \"I talked to them this morning. It would directly involve them in a criminal proceeding in which they did not have a direct relationship, and that could taint their credibility in other cases.\"\n\nShe gave a short snort that was somewhere between a laugh and a chuckle. \"That's my Dad's lawyer talk for why he can't do it. But I have another idea.\"\n\n\"What?\" I asked.\n\n\"We do a live performance of Beat Girl!\" she bubbled excitedly.\n\n\"Wait a minute, Mickey Rooney,\" I answered, \"this is not a 'Let's Put on a Show' movie. It doesn't work that way in real life.\"\n\n\"Yes it does,\" she replied. \"I already checked with The Grease Pit. We can rent the place for an after hours show for only $1,000. They are licensed to seat up to 250 people. If we charge $125 a ticket, and sell out, we can clear over $30,000. Even if we only have an 80% house, we still clear $25,000.\"\n\n\"But Beat Girl doesn't have a road show,\" I protested, \"And it would be really hard to set up all this equipment somewhere.\"\n\n\"The only equipment you will need,\" she insisted, \"is your cape and mask and that weird chair you showed me in the studio. I can get anything else we need. We advertise the show as a live performance of Beat Girl and Nubbin, with special guest, Beat Cat.\"\n\nShe paused to let that sink in and then continued, \"I really wanted to use Catwoman, but Dad said that would trigger a copyright bot if it appeared on the website. He's not sure how you have gotten away with Beat Girl for so long.\"\n\n\"I'm not sure about all ths,\" I said. \"Who do we get to be Beat Cat and Nubbin?\"\n\n\"I will be Beat Cat,\" she said. \"I have a full body cat suit that will drive them wild. As far as Nubbin, have you ever seen Vicki naked?\"\n\n\"Not since the sixth grade,\" I replied.\n\n\"Vicki is endowed,\" Shirley continued, \"with a clit that is bigger than some men's pricks. When she gets turned on it sticks out of her almost two inches. And I haven't collected from her on that bet yet, so she has to do it.\n\n\"Get Harold to put something on a special page of the website that says that Beat Girl and Nubbin will be appearing live this weekend. That way people can check the website to be sure that this is the real deal. We put up posters at the Pit and a couple of other bars in town and see what happens.\"\n\nI agreed and Shirley said she would talk to the owners at the Pit and set things up. She was also going to take care of getting the tickets and the publicity ready.\n\nI was feeling a little better when I finally went to bed, but my ass and legs and back still really hurt. With my E buddies on strike, I didn't even feel like jilling off before going to sleep. I just took some pain pills and slept on my stomach.\n\nEnd of entry for Day Twenty-Six\n\nMaddi's Diary, Day Twenty-Seven, Wednesday\n\nI explained to Dr. B what Shirley and I were planning to do. He advised me to pay the bill from the state first since it would take the longest to clear. We really didn't talk about much else during our session. He more or less let me vent about how unfair this all was. All I did was stand up on a ledge naked and it was practically ruining my life.\n\n\"But you finally connected with Shirley because of it,\" he said in his helpful therapist way.\n\n\"Yes, there is that,\" I conceded.\n\nThen he asked, \"If that was the only good to come out of all of this, would you do it again?\"\n\n\"Damned straight!\" I answered. The answer surprised me for several reasons. One, that is one of my father's expressions and I have never used it before in my life. And two, I was practically shouting as I said it.\n\nDr. B just laughed and said, \"See you Friday.\"\n\nI checked with Shirley before I went to work and she said everything was set up with the Pit. Tommy, the bartender, will get 5% for handling the ticket sales. That cuts some from the profits, but it is a necessary expense. She also told me that she was hiring four of the security men from the club at $250 each for the night... \"just in case.\"\n\n\"In case of what?\" I asked.\n\n\"Two of them are going to be wandering the crowd keeping things peaceful. The other two are going to be standing up front making sure that nobody gets over-excited and rushes the stage.\"\n\nI hadn't thought about that. Men can kind of lose it sometimes when things get hot on a live stage. The real reason that strip clubs started using brass poles was to keep strippers from being pulled off the stage by lust-crazed customers. The pole gave them something to hang on to. The fact that dancing around that pole can be erotic as hell, was just an accidental side benefit.\n\nWork was OK. My mind was a lot clearer. I was even able to smile and be chipper as I waited on customers. That makes a big difference. My tips went back up to their normal level.\n\nEnd of entry for Day Twenty-Seven\n\nMaddi's Diary, Day Twenty-Eight, Thursday\n\nI didn't realize that my E buddies could arrive so late. I was feeling a LOT better, and I woke up REALLY horny, so I dug out my jack rabbit and my stash of clothes pins. There are a lot of different pain devices on the market, but nothing really does it for me like a good ol' wooden clothespin. And it is so quick and simple to set up.\n\nI got the jack rabbit out of my toy drawer and made sure it had good batteries in it. It wouldn't do for the bouncing bunny to die on me in mid-stroke. Then I dug out the clothes pins. I've got a full bag of them now, but I have found that the nine cross does everything that I want and need to be done.\n\nI warmed myself up with the rabbit and once things were flowing, I started putting the clothes pins on my breasts. The four that are vertical are harder to put on, so I put those on first. One is just above and another just below my nipple. Then two more are right at the edge of where the aerole color starts to fade out. I don't know why, but that boundary is more sensitive than the surrounding skin.\n\nAfter I have the vertical pins in place, I do the horizontal ones. Again there are two right next to my nipples. These are a little harder to put in place because my skin is already stretched a little by the pinching of the vertical pins. The ones on the aerole boundary go on easily. I guess there is more skin to work with out that far from the nipple.\n\nThe last thing I do is put the \"tip clip\" in place. It is sort of a delicate balance between getting it far enough out on the nipple so that it is actually squeezing the very tip where it is most sensitive and having it clipped far enough back so that it won't fall off as I move around.\n\nOnce everything is in place, I kneel facing the headboard of my bed. The cluster of clips on each tit is tied together by a cord that threads through the center of their springs. I tie one cord to the bedpost on one side of the headboard, and then tie the other string to the other post. I scooch back until the strings are just beginning to get tight, then I start working the jack rabbit.\n\nIf I close my eyes and rock forward and back slightly, I can imagine that someone\u2013 today it was Shirley, is pulling at my breasts and nipples as they work their hands on my cunt and clit. I sometimes imagine that it is Randy fucking me as I stand before him. Today, for some reason, I imagined Shirley with a big, vibrating strap-on.\n\nI had never thought about that before. I wonder if she has one? That is something we will have to explore if I can ever get out of therapy.\n\nIn any case, I was just starting to get really juicy when suddenly I could feel a flood of my E buddies coming to join me. I expected some of them to arrive. I did, after all, have the clips in place on the very tips of my nipples. But this was way more than I needed to go from pain to pleasure pain. The only thing I could figure was they were from the Beat Girl session, but had somehow been delayed.\n\nWith the pain buddies who had stayed away during the Beat Girl session finally arriving, I was in a self-induced narcotic rush that put me in nirvana.  I pumped furiously with the jack rabbit and wobbled back and forward so that the strings would pull at the clips. I was grunting and screaming like mad. It is a good thing that we live way out in the country or the neighbors might be calling the police to say that someone was being murdered.\n\nThen I popped. As soon as I felt it start, I fell backward on the bed. The strings went tight and pulled all of the clothespins off my breasts all at once. That completed the blast off.\n\nWith my legs doubled over and my butt between my feet, I was splayed open at an obscene angle as I rammed the jack rabbit home one last time and lost control. My arms were in the air above me shaking like I was having a fit. My legs were trying to flail, but they were trapped beneath me on the bed. I screamed and thrashed so hard that I felt the jack rabbit slip out of me and squirt onto the bed between my knees. My hands came down on their own and attacked my cunt as I grunted and groaned and screamed in the throes of a fantastic orgasm.\n\nWhen it was all over, I lay there panting and trying to regain control of my mind and body. I turned slightly onto each side and straightened my legs. I was so close to the headboard that I couldn't straighten them out, so instead I put my feet on wall above my headboard and lay there with my cunt dripping onto the sheets. I must have stayed like that for ten or fifteen minutes, or maybe even longer than that. Finally I got up out of the bed and went into the bathroom.\n\nI smelled really heavily of sex and really, really needed a shower, but I decided that my sheets would have first crack at the water heater and stripped my bed and took the sheets down to the laundry room. I had just put them in the wash machine when there was a knock at the door.\n\nIt was Harold. I pulled on a robe and asked him to come into the kitchen. He looked really strange and he was having trouble meeting my eyes. \n\n\"What's wrong?\" I asked him.\n\nHe looked all over the kitchen and then finally back at me as he said, \"I can't lie to you anymore. There is no friend of a friend of a friend.\"\n\n\"What?!\" I asked in surprise.\n\n\"I own the website,\" he blurted out. \"I own all of them. I'm worth a lot of money and I really, really want to help you and would if I could, but honestly and truly, I am in the middle of a deal to buy out two of my competitors and I don't have any ready cash.\"\n\nHe looked up at me through his always dirty, thick glasses. \"If you need to raise more money with this live performance, though,\" he said, \"I can set things up to stream it live on a pay-per-view basis and give you all the proceeds over expenses.\"",
        "He looked at me very seriously. \"Do you want to do that?\"\n\n\"Definitely,\" I answered. \"How much do you think we can raise?\"\n\n\"I really don't know,\" he answered, \"but whatever it is, it should help.\"\n\n\"Thank you, Harold,\" I said as I kissed him lightly on the forehead. \"And don't worry about lying  to me. I looked up the site a long time ago on Whois and your private email address is listed for the owner. I've known you owned Beat Girl for a long time. It doesn't matter. We all have secrets that we like to think that we keep from everybody.\"\n\nHe grinned at me rather sheepishly and said, \"I'll put the publicity on the site today and see how many people sign up for the show.\"\n\nEnd of entry for Day Twenty-Eight\n\nMaddi's Diary, Day Eight, Twenty-Nine, Friday\n\nShirley and Vicki came out this morning before I left for group. We went out to the studio to look at the chair and make sure it was going to work for what Shirley had in mind. She had Vicki sit in it and had me on all fours down in front of her. \"We'll have to put it up on blocks or something,\" she said. \"It has to be about a foot higher.\"\n\n\"No problem,\" I answered, and pointed to several small, wooden platforms that were stacked in the corner. \"We had to use these at first with the robot arms,\" I explained, \"until Harold had their legs extended slightly.\"\n\nShirley and I dragged one of the platforms over to the chair and then hefted it onto the platform. Vicki sat back down and I got back down on my hands and knees. I was looking right at her crotch. \"Perfect,\" said Shirley. I was starting to think I knew what she had in mind.\n\nThe whole thing was starting to get me pretty horny, but it was time to go to group, so they left and I went down to the psych floor at the hospital for group.\n\nThe sex addict boy and girl weren't there. \"Karen and Terrance won't be joining us today,\" Dr. B explained. \n\nWanda giggled and said, \"They got caught screwing on the floor of the gazebo in the middle of the town square.\"\n\nI asked, \"Did somebody see them and call the police?\"\n\n\"Everybody saw them!\" chortled Diane. \"It was 1:00 in the afternoon.\"\n\nDr. B coughed lightly and said, \"They will be participating in group at the state facility for awhile. Let's return to the issues within our current group.\"\n\n\"And what are those?\" asked Wanda.\n\n\"We could talk about the problem of paying for all this when insurance won't cover it,\" I said, somewhat bitterly.\n\n\"My insurance covers it,\" said Wanda.\n\n\"So does mine,\" added Diane.\n\nI looked over at Dr. B. He said softly, \"Keep control of yourself, Maddi.\"\n\n\"I'm in control of myself,\" I answered. \"I'm just really pissed off that my Dad's insurance won't pay because I was naked in public, but theirs will pay even though they raped their own students.\"\n\n\"It wasn't rape,\" they shouted in unison.\n\n\"It was just misdirected love,\" Wanda said as she crossed her arms in front of herself.\n\n\"Well, if you had done that to me,\" I said, \"my Dad would have misdirected his truck right across your sorry ass.\"\n\nDr. B evidently knew when things were not going to get better and he said, \"I can see that our environment for group today is just too hostile, so I am going to wrap things up early.\"\n\nWanda and Diane both glared at me. I hope my glare at least matched theirs. I decided that I was going to hold my ground so I just sat there and stared at them. Finally they picked up their purses and left together.\n\n\"Assuming that you can get the money together to pay everything off,\" Dr. B said to me, \"this was probably your last group session with me.\" He smiled at me and said in a totally normal human voice, \"If you still need to deal with things, wait 21 days after our last meeting and then call for an appointment. That will put it in a new case number and your Dad's insurance should pay 80%... and that will be at the lower rate.\"\n\nAs I got up to leave, he said, \"See you Monday... for the last time, I hope.\"\n\nWork was pretty normal except for having to not react when one of the other waitresses asked if I had heard that Beat Girl was going to be live at the Pit tomorrow night. \"You ought to watch her webcasts sometime,\" she said. \"I think you could really learn something.\"\n\nI just answered, \"I might do that some day,\" and bit down hard on my lower lip to keep from bursting out laughing \n\nEnd of entry for Day Twenty-Nine\n\nMaddi's Diary, Day Thirty, Saturday\n\nHarold called first thing this morning to say that he was pretty sure that the pay-per-view would help with my expenses. I asked him how many were already committed and he answered, \"The numbers aren't real until the credit card clears. There are a ton of people signed up for reminders, but I can't actually charge the cards until the show starts and they sign in. I'll let you know the numbers Sunday morning.\"\n\nShirley also called to say that she was bringing out two of the bouncers to help move the chair and platform. I told her that I had to leave for work, but explained where the key to the studio was hidden.\n\nWork was OK. It wasn't good and it wasn't bad. My tips were down again because I was distracted and not paying enough attention to the customers. I'm normally not a clock watcher, but I kept looking over at the clock to see what time it was. Show time isn't until 2:00 am, so I am going to drive myself crazy if I keep this up.\n\nThe clock slowly dragged its way around to 4:00 and I left for home. There wasn't anything I needed to do to get ready for tonight's show, so I surfed the web and read and took a nap. \n\nShirley said she and Vicki would pick me up at 10:30, so around 8:00 I drew myself a hot bubble bath and soaked for about an hour. Then I used the shower to wash my hair and got it set. I really wanted to wear Shirley's collar tonight, but she said that it would identify me too clearly since I have been wearing it around town. I gave a deep sigh as I left it on my dresser.\n\nI put my pink cape and mask in a small travel case and set it by the door. I was wearing a white, A-line dress with nothing underneath it. Shirley said that she would park in the back in the owner's spot in the alley. After we make sure everything is set up back stage, we go out the back door and come in the front like regular customers. Then we can sit in one of the back booths and relax until around 1:30. We go out the front doors like we were leaving and come back in the back door and get ready.\n\nShirley arrived exactly on time\u2013 she always does, and we drove into town. It was 11:00 when we got to The Grease Pit. The parking lot was already absolutely full and cars were parked on the grass by the road. So much for sitting unnoticed in a back booth and relaxing. \n\nTommy met us at the back door and said, \"I'm sold out of tickets, but I've got people offering me double or triple to let them stay for the show. If I open the folding doors to the party room, I am legal for 300. Nobody can see from there and nobody will be in there when the show starts, but the cops can't shut me down for overcrowding. Do you want me to overbook?\"\n\nShirley answered him with, \"Be damn sure you keep it under 300. I don't want any legal surprises in the middle of the show. Do you have some kind of ticket so the bouncers know if someone has paid or snuck in?\"\n\nHe answered, \"Everybody gets a stamp when they turn in their ticket. If they don't have a big blue GP on their left hand, they aren't legal.\"\n\n\"OK,\" Shirley shouted. Even backstage it was almost impossible to hear because of the noise of the crowd.\n\n\"Looks like we wait back here,\" I said.\n\n\"Yeah,\" answered Vicki, \"but if they are sold out and adding 50 more at double price, you are clearing somewhere around $40,000. That ought to clear up your troubles.\"\n\n\"About that,\" Shirley said, somewhat seriously. \"When we were figuring what we needed to take in, we forgot Uncle Sam's cut, and the state's cut and the city's. This is all declarable income, plus the state has an entertainment tax and the city has an entertainment surcharge and both have to be paid when we clear the license.\"\n\nI looked over at her in shock. \"Dad reminded me last night,\" she said. \"Taxes are going to take about a third, so the extra will bring us back up to where we thought we would be to begin with.\"\n\nI must have looked a little disappointed because she raised my chin and said, \"Don't worry. It will be enough. Just worry about the performance.\"\n\nWe sat in the back talking while we waited for show time. Vicki kept going up and peeking out through the curtain. \"You keep that up,\" I told her, \"and somebody is going to recognize your face.\"\n\nI had a sudden thought, \"You did bring a mask didn't you?\"\n\n\"I'm not that stupid,\" she replied, sticking out her tongue. \"But I don't know if it is going to do much good. Anybody who has seen me naked will recognize me. I am pretty distinct down there.\"\n\n\"How many have seen you fully turned on?\" asked Shirley.\n\n\"Nobody!\" she answered, almost shouting. Then in a bit softer voice said, \"Well, almost nobody.\"\n\nShirley raised her eyebrows at her and Vicki said, \"OK a dozen or so people, but almost all of them are girls so I don't really expect them to be out there tonight.\"\n\n\"Don't bet on it,\" I interjected. \"Harold says that almost 75% of Beat Girl's followers are female. That greatly increases the odds that some girl you have slept with will be out there.\"  I paused and asked, \"What about the guys?\"\n\nVicki scrunched up her face and answered, \"Most guys I've slept with know how big I feel, but I don't think any of them know how big I look. And about half of them didn't even notice.\"\n\n\"Just so your face is well covered, you are OK,\" said Shirley. \"They might suspect, but if they don't see your nose and the area around your eyes, they can't be sure.\"\n\n\"Oh, oh,\" I said.\n\n\"What now?\" asked Vicki.\n\n\"Robin's mask doesn't cover his nose, just the area around his eyes.\"\n\n\"Thought of that,\" she replied and held up a bright yellow hooded mask. It was very similar to Beat Girl's Batman mask except it didn't have any ears on top. It did have, however, a smaller black mask sewn into it.\n\n\"Besides,\" she said. \"I'm not Robin. I'm Nubbin.\" Then she stuck her tongue out at me again.\n\nTommy came in through a doorway behind the bar. \"Show time in a half hour. Is everybody ready back here?\"\n\n\"Ready, willing and able,\" I answered. I laughed and then pointed to myself and said, \"I'm willing.\" Pointing to Vicki, I said, \"She's ready.\" And finally pointing to Shirley, I said, \"And she's able.\"\n\nI was the only one who laughed at my joke. Shirley just said quietly, \"OK Nubbin, let's get you dressed and into position.\"\n\nVicki pulled off her dress and pulled on the yellow Nubbin mask with the Robin mask sewn into it. Then she tied a matching bright yellow cape around her neck.\n\nI did the same with my pink Beat Girl outfit.\n\nOut front we could hear Tommy making an announcement through the speaker system. \"Ladies and Gentlemen,\" he said. \"The Grease Pit Bar and Grill will officially close at 2:00 am. No alcohol can be purchased after that. The stage and dining area has been rented by Beat Girl Websites Incorporated, and they will be presenting a show that will begin shortly after 2:00 am. If you do not have The Grease Pit stamp on your left hand, you will have to leave at 2:00 o'clock. No exceptions.\"\n\nShirley was standing over by the bondage chair and she signaled with her hand that Vicki should come over there. Vicki is smaller than my Mom, so when she sat down on the chair, it spread her legs even wider than it had Mom's. I looked between her legs and her labia and clit were enormous. It reminded me of one of those Georgia O'Keeffe paintings of flowers that looked like a woman's cunt. As Shirley tightened the straps on Vicki's arms, I could see her clit starting to enlarge and stiffen.\n\n\"Somebody likes this,\" I said in a teasing way.\n\n\"No, I don't\" countered Vicki.\n\nI reached down between her legs and swiped my finger through her slit. It came out glistening. I held it up in front of Vicki's eyes and said, \"The juices never lie. You may or may not like pain, but you love being tied up.\"\n\nVicki just looked back at me like a little kid who had been caught with her hand in the cookie jar.\n\n\"Help me push her into place,\" Shirley said, and we pushed the chair out into the center of the stage just behind the curtain.\n\nWe were just in time because I heard the Beat Girl theme start to play. Tommy had a video that was supposed to play on all the screens that had the intro to Beat Girl. The crowd was shouting along with the music, \"dum, dum, dum, dum, dum, dum, dum, dum, Beat Girl!\" Then everyone screamed \"WHAP!\"\n\nThe music repeated and so did the insane chanting of the crowd. They screamed out \"Beat Girl,\" and then \"KA-POW!\"\n\nEverything repeated for a third time with everyone screaming even louder, \"ZAP!\"\n\nThe music started again and the curtain opened rapidly as I ran toward it. I was afraid my timing would be off, but I got to the very front of the stage and spun around to show my ass to the crowd just as they yelled \"Beat Girl.\"\n\nI stood there, bent over slightly, showing everything I had to the crowd in the room as Shirley slowly sashayed on stage and out to the front. It was like watching a cat walk across a field with its body down low as it sneaks up on its prey. She was wearing an absolutely skin tight, black, full-body cat suit that hid everything but left nothing to the imagination. It was so tight that you could tell that she was completely shaven between her legs. Something as small as the hair of a landing strip would have shown clearly.\n\nShe raised the microphone in her hand and began. \"Good evening ladies and gentlemen,\" she said. \"We have a very special show for you tonight. For the first time EVER, Beat Girl is appearing live.\" There was thunderous applause and a lot of whooping and hollering.\n\n\"And joining Beat Girl tonight is Nubbin!\" Shirley thundered. She sounded a lot like one of those ring announcers on the wrestling channel. Well, there were a lot of similarities in the programming.\n\nVicki's chair had been more or less in the dark until then, but now a bright spotlight illuminated her bound figure. There were actually two lights. One lit up the entire chair and showed her whole body. The other, much brighter, was concentrated on her slit. The moisture glistened in that very bright light.\n\nYou could see that her eyes were wild behind the mask and she was shaking her head from side to side and trying to scream through the ball gag. I think she was acting, but I wasn't sure. She might have just lost it when the curtain opened and she saw 300 peoples staring at her open crotch.\n\nShirley walked over to Vicki and stood beside her. \"Care to guess why they call her 'Nubbin'?\" she asked with a laugh. Then she reached down and flicked Vicki's clit hard with her gloved fingertip. Vicki screamed and thrashed and the crowd roared with laughter.\n\nShirley looked out over the crowd and said, \"I am Beat Cat and I will be your host for the evening.\" Then she walked along the front of the stage, teasing the audience with what was almost a bump and grind walk. By the time she stopped next to me, she had everyone's attention.\n\n\"Tonight we are going to start with a little contest,\" she said. \"Those of you who follow Beat Girl on the web know that she is turned on by pain.\" There were a couple of whoops and yelps in response to that statement.\n\nLooking back over at Vicki, she purred out, \"Care to guess what turns Nubbin on?\"\n\nThere was some murmuring from the crowd and Shirley leaned down slightly and spoke directly to a girl in the front row. \"You ever given a blow job... ... to a girl?\" She asked. The crowd roared once again with laughter. Shirley turned and started walking once again across the front of the stage. \n\n\"Of course not,\" she said. \"A woman doesn't have a horn to blow.\"  The crowd laughed again. She leaned down toward another obviously drunk woman and said, \"You DO know that in a blow job you are really supposed to be sucking, not blowing, don't you?\" The crowd laughed again. \"Maybe she doesn't know,\" Shirley purred. \"Maybe that isn't fat on her boyfriend. Maybe he is just over-inflated.\"\n\nShe was back at Vicki's chair before the laugher finally died down. \"Nubbin has something to blow on, or more accurately something to suck on. Tonight we are going to see if Beat Girl can suck Nubbin to orgasm before I drive her to orgasm by pounding her ass with this paddle.\"\n\nShe reached behind the chair and held up a thick wooden paddle. No wonder she wanted the program to be spontaneous. Either Vicki or I or maybe both of us might have backed out if we had known for sure what was planned.\n\nShirley suddenly turned toward the audience and shouted, \"How many of you are into pain?... receiving, not giving?\"\n\nA surprising number of people cheered. Most of the voices sounded female.\n\n\"So you know,\" Shirley continued, \"that in a proper pain session, you have to start with a warm up.\"\n\nSeveral voices yelled out their agreement.\n\n\"Time to draw our first door prize,\" she said. \"Some lucky member of our audience tonight is going to get to come up here on stage and warm up Beat Girl with a 50 swat hand spanking.\"\n\nTommy the bartender walked out on stage carrying a heavy wooden chair and a large glass jar filled with slips of paper. He set the chair down at the front of the stage to the right of Vicki and then held out the jar to Shirley.\n\nShirley made a big show stirring the papers in the jar and then stuck her hand way in and pulled out a single slip. \"Oops,\" she said, \"got two of them,\" and she threw the slip back into the jar.\n\nThe audience couldn't see what I saw. She had palmed a slip in advance. The drawing was rigged! What was she up to?\n\nShe turned and faced the audience, \"Brad Summers, are you out there?\"\n\nThere was a bunch of wild applause from Brad's friends and he came bounding up onto the stage. Shirley had him sit down on the chair and then she crooked her finger over at me calling me to my fate. \n\nI walked slowly over to Brad. As I passed Shirley, I hissed \"Traitor\" at her. She ignored me and began instructing Brad. \"Remember, this is a warm up. Start out firm and slow and then build up to hard and fast.\"\n\nI lay down over Brad's lap and he rubbed his hands over my butt. Suddenly he leaned down close to me and said, \"Hello, Maddi.\"\n\nI stiffened on his lap and he continued, \"I'm shit for remembering faces, Maddi, but I never forget an ass, especially an ass like yours.\"\n\n\"Thank you,\" I replied. \"Now warm it up for me, and please keep Beat Girl's little secret.\"\n\n\"Anything for you,\" he answered. \"Maybe we can repeat that night some time.\" He started swatting. \"But I don't think so,\" he continued. \"Things just came together. You can never repeat something like that.\" His swats were getting stronger and faster. \"But I will always have my memories, and after tonight, I will have these memories, too.\"\n\nThis wasn't fair. This was supposed to be a warm up spanking and I was about ready to pop my cork. The thought that he knew who I was and remembering that night was so humiliating and embarrassing. That was adding to the swats and I was climbing orgasm hill a lot faster than I had intended.\n\nThen I heard Shirley's voice, \"Whoa, cowboy, whoa. Fifty! Only fifty. We don't want Beat Girl losing before the contest even starts do we?\"\n\nThe audience laughed, thinking that she was kidding, but she and Brad knew that she was very, very close to the truth.\n\n\"I think we need to level the playing field a little,\" yelled Shirley out to the audience. She reached again behind Vicki's chair and brought out a huge, battery powered Magic Wand. She turned it on to high and held her microphone up next to it so the humming filled the room through the speakers. Vicki's eyes were wide and she was shaking her head from side to side and thrashing her legs like she was trying to get out of the chair.",
        "Shirley stood slightly to the side so she wasn't blocking the audience's view of Nubbin's nub, and then thrust the vibrator firmly up against Vicki's clit. Her \"nnngh, nnngh, nnngh\" was loud enough to be heard throughout the room even with Shirley's mic switched off.\n\nShirley held the vibrator in place for almost a minute and then announced, \"I think that is enough.\"\n\nShe turned around and asked me, \"Are you ready?\"\n\nI nodded my head yes.\n\nShe turned back and flicked Vicki's clit again and said, \"Nubbin's ready.\"\n\n\"The rules are simple,\" she said. \"I try my best to get you off with the paddle while you try your best to get Nubbin off with your tongue and mouth. The loser gets a session on the spanking bench with members of the audience swinging paddles and canes and then a session between the restraint poles while five specially-chosen members of the audience replace the Beat Girl TAZapper robots.\"\n\nThe audience was going wild. So was Vicki. Shirley hadn't told us any of this. I was starting to wonder what further surprises Shirley had up her sleeve, but there wasn't anything here that wasn't in a regular Beat Girl session, so I knew that I could handle it.\n\nI nuzzled in close between Nubbin's legs and started slurping and Beat Cat started pounding on my ass. The crowd was stomping and clapping in time with the swats from the paddle. This was not only degrading and humiliating and painful, it was WEIRD. These people were kinkier than I was.\n\nI could feel an orgasm building within me. Shirley knew how to read my body and she was pushing me toward that big finish, but then the blows got slightly lighter and I started slipping back down the mountainside. I don't know if her arm was tiring or she just wasn't paying close enough attention, but I would get close and then there wasn't enough smack in the swat to take me over the top.\n\nRegardless of what Shirley did, I kept licking and sucking on Vicki's now rigid mini-penis clit. It was starting to throb and I halfway expected her to spurt cum into my mouth at any minute. Then Shirley started really laying it into me with the paddle.\n\nDammit! I knew what she was doing. She was keeping us in sync so that we would pop at the same time. The initial drawing was rigged, the contest was rigged, the whole thing was a big fake to create the best show for the people. \n\nWell, the show must go on. I was almost there and so was Vicki. Shirley slammed a really hard one into my ass and I sucked on Vicki's clit like I was trying to draw a thick milkshake up a straw. She exploded and so did I. I don't know if it was cum or what, but she squirted something into my mouth as she grunted and thrashed in an intense orgasm. I turned my head and slipped her out of my mouth so I wouldn't accidentally bite down on her as an equally intense orgasm tore through my body.\n\n\"We have a tie,\" shouted Shirley. \"We have a tie.\" Then she shouted to the audience \"So what should we do? Are they both winners who get to go home? Or are they both losers who have to face the consequences?\"\n\nShe held her microphone out to the audience, but it wasn't needed. The shout of \"Losers!!!!\" shook the building.\n\nThe two security men who were guarding the front of the stage, dashed backstage and both soon returned with two identical spanking benches that they just happen to have brought with them from the city. This performance was starting to more and more closely resemble professional wrestling. The pain is real, but the outcome is pre-determined.\n\nOne of the burly men in black led me over to one of the benches and pushed me down in place. I was kneeling on a padded step with my stomach on a padded raised platform. My arms were strapped in place down at the base of the bench in the front. There was a wide leather strap across my back just above my ass that held me firmly in place.\n\nI looked over and Vicki was being placed on a similar bench. She was trying to resist, however, and the second man had to help restrain her while they strapped her in place.\n\nAfter Vicki was securely in place, Shirley yelled out to the crowd, \"Time for more door prizes.  Ten of you... times two, will get to come up on stage and give Beat Girl or Nubbin five swats with the sacred paddle.\"\n\nShe held up a long, light weight paddle and showed it to the audience. \"Do you know why it is sacred?\" she asked. \n\nAfter a moment of silence she answered, \"Because it is holy.\" Then she put her finger through one of the dozen or so 1\" holes in the surface of the paddle.\n\nThe audience groaned, but the joke gave Tommy time to show up with the jar. This time the drawing was probably legit, and pretty soon there were twenty people standing up on stage.  Shirley divided them into two lines and handed the first person in each line one of the paddles.\n\n\"Remember, five swats and then you hand the paddle to the next person in line and go back to your seat.\"\n\nThe first person stepped up behind me and the crowd started chanting, \"One!\" Both paddles slammed into asses. \"Two!\" Again the strikes were synchronized.\n\nVicki was no longer gagged and by the third strike, she was begging them to stop. I was just grunting and groaning. It wouldn't do for Beat Girl's public image if I started begging them to stop something as trivial as this.\n\nThe next person in line stepped up and the crowd again counted out the five swats. They kept that up through all ten spankers. By the time we got to the last person in line, Vicki was blubbering almost incoherently. I was almost incoherent also, but that was because my E buddies had really shown up and I was on the verge of a really good orgasm.\n\nShirley once again stepped to the front of the stage. She was holding a very thin cane in each hand. She swished them both through the air, crossing them in front of her as she spoke. \"Now some very lucky person is going to get to deliver six of their best to these already sore asses.\"\n\nTommy came running out with the jar and Shirley drew out two names, a man and a woman. A moment later both were on stage. Shirley handed a cane to each of them and motioned for them to come stand with her in front of Vicki.\n\n\"Nubbin,\" she said, \"I am going to let you chose which of these two gets to lay six strokes of the cane on your blistered ass. Which one do you chose?\"\n\nVicki\u2013 Nubbin sobbed out, \"The girl.\" \n\n\"Bad choice\" I thought as the man walked over to stand behind me and the woman moved into place behind Vicki.\n\nI was right. The man didn't really know how to use a cane. He was swinging it like a paddle and not putting any wrist into it. He slammed it into me six times in quick succession and was done before the woman had even started. It hurt, but it didn't hurt all that bad. And it didn't make that really evil swishing noise a cane can make as it swings through the air.\n\nThe woman behind Vicki, however, was a cane virtuoso. She whipped the cane back and forth rapidly just above Vicki's ass so that it sounded like an angry nest of hornets getting ready to strike. Then she tapped Vicki's ass lightly with the cane about five times before quickly snapping it back with her wrist and slamming it vertically into Vicki's left ass cheek. \n\nShe repeated that and put a welt down the middle of her right ass cheek. Then she laid three across Vicki's ass. One was at the very top of the cheek, but still not on Vicki's back. One was right at the bottom of the cheek where it meets the leg muscle. And one was dead center in the middle of Vicki's ass. This woman was an expert with the cane. There was one more stroke left and I knew exactly where that sixth stroke was going to land.  I cringed waiting for it even though it was Vicki, not me who was going to feel it.\n\nThe woman whipped her wrist so that she spun the tip of the cane in the air just behind Vicki's ass. The circle started getting bigger and more oblong. It was now a vertical oval in the air just behind Vicki's ass. The whole place was totally silent and all that could be heard was the angry humming of that cane. Then with a single motion, the woman snapped the cane downward almost to the ground and upward right between Vicki's legs.\n\nVicki's scream was extremely loud. Several girls in the crowd also screamed. One or two fell to the ground. Every woman in the place felt that cane smash into Nubbin's engorged nub. Vicki's eyes rolled back into her head and she passed out.\n\nShirley stepped to the front of the stage. \"It looks like Nubbin has reached her limit. We will let her rest up for the final punishment while Beat Girl gives us a live TAZapper session.\"\n\n\"Oh great!\" I thought.\" My least favorite session in my least favorite way.\"\n\nThe two burly security guys pushed Vicki over to the side of the stage where she stared out at the crowd with glazed eyes and moaned softly with each breath. Then they went back stage and brought out a platform with two huge pillars on it. They pushed the pillar platform over to the center of the stage and came back over for me.\n\nI don't know if they were expecting me to resist or try to run away or what, but they made sure that one of them had a firm hold on me before the other released my restraints. Then they more or less frog-marched me over to between the pillars and tied me in place. It must have been originally set up for someone about an inch or so taller than me because it really stretched me out. I was standing there facing out over the crowd, so I couldn't see what was happening behind me.\n\nI heard Shirley call out five names and three men and two women came up on stage. They were close to the front of the stage, so I could see them out of the corner of my eye. Shirley held up a smaller jar with just a few slips of paper in it and they each drew out of a slip. She then handed out the three TAZappers and the two vibrators.\n\n\"A normal session is a half-hour, but we are going to shorten that tonight.\" She turned to the five people and said, \"You have ten minutes to see what you can do... starting now!\"\n\nThe first thing that happened was that one of the women with a TAZapper traded it to one of the men for the Magic Wand vibrator.  After that, it was pretty much like any other Beat Girl session on TAZapper night except that live people are a lot faster and much more accurate than joystick controlled robots. Just about every zap was on my clit or a nipple.\n\nI was pretty high on endorphins, so it wasn't too bad. The only time I really yelped was when the man with the anal vibrator pulled it out and someone with a TAZapper took its place. He didn't push it inside me, but he really popped my pucker string with about six or eight quick zaps right on the rosebud.\n\nLike I said, the TAZapper sessions are not my favorites and I was glad when Shirley called out \"Time,\" and the five people went back to their seats.\n\nShirley walked out and stood next to me. She signaled the security guys and they pushed a second set of pillars out onto the stage and slid mine slightly to the side so that everything was properly centered.\n\nOne of the men went over and got Vicki and brought her over to the second set of pillars. By the time they had her in place, she was also stretched very tight. Both men then left the stage and returned carrying bullwhips.\n\nVicki saw them first and started thrashing and screaming. Shirley said in a loud and commanding voice, \"Quiet, Nubbin.\" Then is a softer, almost laughing voice. \"They aren't going to use those whips on you.\"\n\nShe turned to the audience, smiled very broadly and said, \"I am.\"\n\nThe men handed her the whips and she flipped both of them underhand toward the audience so that they snapped loudly. \"A little demonstration of just how good I am with these whips,\" she said.\n\nThe two men were now pushing something else onto the stage. It was another platform. There was a shelf about four feet high and three or four feet long on the platform. On the shelf were two rows of burning candles, placed one right behind the other. There was about two inches between the rows.\n\n\"A whip can kiss very lightly,\" Shirley said and then turned and snapped the whip in her right hand. The outermost candle went out. As second snap from the whip in her left hand, and the outermost candle on the opposite side when out.\n\n\"And it takes more skill to kiss very lightly that it does to smash your lips against each other.\" She turned to the audience and said, \"Am I right, ladies.\"  There was a thunderous response.\n\nShirley then turned back toward the candles and began snapping the whips alternately right hand and then left. The candles in the front row went out, one by one.\n\n\"Sometimes you want to spread that light kiss across more of the body,\" she said and then snapped both whips at the same time. She leaned her shoulders slightly forward as she did and then pulled her body upright as her wrists made the snap. The entire back row of candles went out at the same time. There was a heart beat of silence and then tremendous applause and shouts and whistles.\n\n\"Of course, the whip can do more than kiss lightly. It can inflict severe punishment and pain.\" A flick of the right and left hands and the outermost candles were cut in two. There was a smattering of applause that grew in volume as snap after snap cut off the candles of the first row about an inch above the shelf.\n\n\"And that pain and punishment can also be spread over a large portion of the body.\" A simultaneous snap of both whips caused the back row of candles to disintegrate into a shower of flying wax.\n\nShirley waited for the applause to finally die down. Then she said, \"Now you know that I am an expert with these.\" She again snapped them underhand over the audiences head. \"Tonight I am going to give you a demonstration of the difference between duty and love. I am going to give both Nubbin and Beat Girl twenty-five strokes of the whip. Some will be very light kisses.\" The left-hand whip snapped over the audience. It was a very light crack.\n\n\"Some, not so light.\" The right hand whip cracked and it was like a rifle shot. Then Shirley snapped both whips. The crack was somewhere between the kiss and the rifle shot. \"But every stroke to both Nubbin and Beat Girl will be identical. Nubbin is here because she lost a bet to me. She is letting me do all this to her because she is an honorable woman and it is her duty. Beat Girl is here tonight because she got herself in trouble and she needs the money. But she is letting me do all of this to her because she loves me. And I am doing this because I love her.\"\n\nShe snapped the whips above the crowd once again and said in a very dramatic voice, \"Now see the difference between duty and love.\"\n\nShirley turned to me and said in a very stern voice, \"You may not cum until the twenty-fifth stroke.\" Then she turned to Vicki, laughed slightly and said, \"You may cum whenever you want. You don't enjoy pain as much as Beat Girl, but you enjoy it a lot more than you are willing to admit.\"\n\nShe then stepped back slightly on the stage and began snapping the whips against the two girls at the same time. She would snap the whip in the air and then strike. The first several snaps were kisses that landed squarely in the middle of Beat Girl and Nubbin's ass cheeks. Then a louder crack signaled a harder strike and two more simultaneous strokes landed on ass cheeks.\n\nThe impact of the whip could be heard throughout the room. So could Vicki's scream, and, I think, my moan of pleasure. At that point, I thought that I could probably endure any pain possible. And it wasn't just my E buddies. Oh, they were there all right, but there was an even greater high flowing trough my body. Shirley had told me, and the whole world, that she loved me.\n\nTwo more snaps landed on my body... kisses on the outside of my right breast and then my left. They were kisses. They were kisses from Shirley. As soon as I thought that, I was in trouble. I could hear Vicki struggling to endure the pain, but I was now struggling to hold back an orgasm.\n\nA louder snap signaled that a harder strike was coming and I felt the whip bite into my right breast. Another loud snap and another bite, but this time on my left breast. Down, beast, down! Mistress said no orgasm until the twenty-fifth stroke!\n\nA soft snap signaled a kiss to come and suddenly the whip kissed my right nipple. Even a light kiss of the whip right on the nipple caused a yelp from me and a scream from Vicki. Another soft snap and the whip kissed my left nipple. This time I was expecting it and remained silent. Vicki did not.\n\nKnowing the pattern that Shirley had been following, I really expected a loud snap and a terrible bite on my nipple, but instead there was another soft snap and a kiss on the front of my right hip. Soft snaps and light kisses continued. The kisses worked their way across my abdomen. They were working closer and closer to my pussy and drawing my thoughts more and more to my throbbing clit.\n\nI wondered if Vicki's clit was also throbbing or if she was still just enduring pain. The change in Vicki's voice answered my question. She was no longer screaming, but was rather grunting and moaning with each kiss of the whip. I guess everyone has E buddies. Some just have more and faster E buddies. Mine are really fast and I must have a whole lot of E friends on my pain page.\n\nVicki was definitely climbing the hill. I had been on the peak for quite a while, hanging on desperately... and my fingers were slipping.\n\nI suddenly had a terrifying thought. How would I know it was the twenty-fifth stroke. No one was counting. With no one was counting, I might let go too early!\n\nThe kisses moved between my legs. The whip was curling up between my legs and snapping slightly outward so that the kiss landed just outside my labia. Three or four whip kisses landed between my legs and I finally realized that I would know when the final stroke hit. I knew what it would be and I knew that it would be coming soon. Two more soft snaps signaled kisses and then there was a very loud snap. I closed my eyes and took a deep breath. This was going to be it.\n\nThe whip came up between my legs and the tip snapped exactly against my clit. It wasn't as hard as the loud snap might have signaled, but it was definitely not a kiss. I knew that was stroke twenty-five, and more importantly, my body knew.\n\nIn that fraction of a second before my orgasm overwhelmed me, I expected to hear Vicki's scream, but instead I heard the beginning of a loud groan of pleasure. Vicki was also going into a major orgasm\u2013 or at least I think she was. I lost control at that point as my own orgasm overwhelmed me. \n\nYour body reacts differently when you orgasm while tautly held standing up. It is like the orgasm echoes around inside you going from your head to your feet and back in waves. And your mind reacts differently to an orgasm when there are 300 people applauding wildly.\n\nI've had orgasms in public before, but in those cases as you explode off the cliff, you know in the back of your mind that somebody is or might be watching. 300 people were definitely letting me know that they were watching me scream and writhe and squirt. And that wasn't counting the probably thousands who were watching the live webcast.\n\nMy mind's reaction to the applause flung me back up into the stratosphere. It was public humiliation, but it was more than that. Maybe my mind took the applause as approval of my public pleasure. Maybe it took it as a command to go higher. Whatever happened, a second wave of extreme pleasure overwhelmed me and I screamed out even louder and thrashed so violently that I was afraid I was going to tear loose the restraints\u2013 or my shoulder.\n\nFinally the applause, and my orgasm subsided and Shirley bowed to the audience. \"That concludes our live show for the evening,\" she said.  \"Remember to join Beat Girl on line every Tuesday night for her weekly webcasts.\"",
        "She bowed again and started to walk off stage. The two burly security guys pushed us off stage behind her. As the curtains closed behind us, the audience gave one last round of applause and shouts.\n\nThe men released us from our restraints and both Vicki and I stood on shaky legs in front of Shirley. \"You bitch!\" Vicki said. She was trying to sound angry, but there was a smirk on her face.\n\n\"Are you telling me that you didn't like it?\" asked Shirley, matching Vicki's smirk.\n\n\"No,\" Vicki replied. \"I did.\" She pointed her finger at Shirley. \"And you knew I would.\"\n\n\"Yes, I did,\" answered Shirley. \"You liked it very much.\" She reached over and lifted Vicki's head. \"And you would have liked it much, much more if I had been a Batman rather than Catwoman.\"\n\nVicki reddened. The color of her face was more than enough to verify Shirley's claim.\n\n\"I could set you up with a young Master at the club,\" Shirley said. \"You made quite an impression on some of them when I took you there as my guest slave.\"\n\n\"That was just so I could see what the club was like.\" Vicki protested. \"I don't even know if I want to go back.\"\n\nShirley laughed and reached down to slip a finger through Vicki's crack. Vicki gave a slight moan. \"The body never lies,\" said Shirley with another laugh. \"The body never lies.\"\n\nI turned around and started toward the door and stopped suddenly. There were two county deputies standing behind us in full uniform. I recognized one of them from the night they found me under the interstate.\n\n\"Evening, Maddi,\" he said.\n\nI was starting to panic when Shirley put her hand on my shoulder and said, \"It's all right. I made arrangements for them to accompany us to the bank to make the deposit. They also guarded the receipts during the performance.\"\n\nI whispered to Shirley, \"Could they see the performance?\"\n\nI must have been a little louder than I thought because one of them answered, \"Yes ma'am, we could. It was quite a show.\" He paused a moment and added, \"... but legal out here outside the city limits.\"\n\nThe other officer then added, \"But remember to cover it up before you go outside. I wouldn't want to have to wrap you up in a blanket again.\"\n\nThen he stepped up in front of me and said softly, \"And maybe the next time I find a girl doing what you were doing, I will understand a little better and just tell her to go home and find a safer way to fulfill her fantasies.\"\n\n\"Thank you,\" I said.\n\nVicki and I took off our masks and capes and pulled our dresses on over our heads. Shirley remained in costume as we walked back to the car. \n\nWe were about at the car when one of the deputies said, \"Can't do that, Shirley.\"\n\nShe turned around and he added, \"Face has to be visible when you are driving a car.\"\n\n\"Rats,\" she said as she pulled off her mask and hood. \"I was hoping to brighten some poor sucker's life who has to review security tapes all day.\"\n\nWe made the deposit at the bank and Shirley dropped Vicki off at her place about 4:00 in the morning. Dawn was starting to lighten the sky when she dropped me off in front of my house.\n\nI was too worked up to sleep, so I wrote this entry for Saturday. It's now about 9:00 in the morning and I am dead tired. I am going to bed.\n\nEnd of entry for Day Thirty\n\nMaddi's Diary, Day Thirty-One, Sunday - Final Entry.\n\nMom got in early last night. Dad got home around noon. I got up around 2:00.\n\nDad is always a little grumpy when he has a long haul that brings him back on Sunday. He says he'd rather do a two weeker than a Sunday return. \"I don't have time to do anything here except catch an overnight nap,\" he complained.\n\n\"Oh, I don't know,\" Mom answered as she sat on his lap. \"There is time for one or two other things.\"\n\nI was just walking into the living room and decided that it would be best for me to pretend that I hadn't heard anything.\n\n\"How did last night go?\" Mom asked.\n\n\"What happened last night?\" said Dad.\n\n\"Benefit concert to help with her legal fees,\" chirped Mom as she smiled at me.\n\n\"It went well,\" I answered. \"Between that and some other ideas, I think I have enough to pay things off.\"\n\nDad looked like he wanted to ask more questions, but Mom gave him one of her \"Do you really want to know?\" looks and he instead returned to his paper.\n\n\"Good to hear that,\" he mumbled.\n\nThe rest of the day was really normal. I was too tired and too sore to do much of anything.\n\nJust before I went to bed, I got a text from Harold that said, \"Wire transferred $20,000 to your account. There is more if you need it, but I thought you would want to build your reserve back up.\"\n\nI texted back a thank you and climbed into bed. Just before I fell asleep I suddenly thought, \"Was the whole world watching me last night?\"\n\nEnd of entry for Day Thirty-One\n\nEnd of entry for Week Five\n\n \n\nMaddi's Diary, Day Thirty-Two, Monday\n\nThis is actually an addendum or an epilogue or whatever you want to call it. Whatever it is, this is truly my last entry. My diary for Dr. B ended yesterday, but if I am going to let others read this, I thought that I should say what happened today.\n\nFirst thing this morning Shirley and I went to the bank and verified the deposits and got some certified checks. Then we went to the court house and paid all my fines and the hospital and cleared all of my bills there.\n\nAfter we got the receipts from the clerk at city hall, I told Shirley that I would have to see Dr. B one last time so that he could release me. She surprised me when she said she wanted to come along. I told her that Dr. B might not allow that, but she said that she thought he would understand. I wasn't so sure.\n\nMy appointment was for 10:30.  We had to really hustle to get everything done and get there on time. When the receptionist told me to go on in, Shirley followed me through the door.\n\nDr. B greeted me with, \"Hello, Maddi.\" Then he turned to Shirley and said, \"Good morning, Mistress Shirley.\"\n\nShe replied, \"Good morning, Master Thomas.\"\n\nI thought my jaw was going to hit the floor. \"I told you he understood you a lot better than you thought,\" Shirley said.\n\n\"I understand that you have cleared all outstanding fees, fines and obligations,\" he said with a grin. Then he handed me two sheets of paper.\n\n\"The top form is my official release. My findings state that you have a high tolerance for and an unusual craving for pain, but that you are mentally fit and not a danger to yourself or society.\"\n\nHe laughed, \"In other words, you're kinky, but you're not nuts.\"\n\n\"The lower form,\" he continued, \"is your official release from supervision.\"\n\n\"I thought I had to appear before a judge to get that,\" I said, somewhat surprised.\n\n\"I know a judge who understand these things a little better than most,\" he explained. \"She was willing to sign the forms based on my explanation of the situation.\"\n\n\"Mistress Judy?\" Shirley asked.\n\nDr. B just laughed and said, \"Good guess.\"\n\n\"Then we're through here?\" I asked.\n\n\"Not quite,\" said Shirley. \"Doctor Bergenstein, does pre-collaring counseling for the Society.\"\n\n\"Master Thomas,\" she said, addressing Dr. B. \"Would you be willing to guide Maddi and me through that?\"\n\n\"I would be delighted,\" he replied.\n\n\"Pre-collaring counseling?\" I said. \"That sounds a little weird.\"\n\n\"Kinky isn't crazy,\" Dr. B, or should I say, Master Thomas said. \"And any relationship can use a little help in the beginning. I will tell my secretary to set you up with a series of appointments.\"\n\n\"Can I make one request?\" I said.\n\nThey both looked at me, and I continued, \"Not on Wednesday morning. Even Beat Girl needs to get her sleep.\"\n\nShirley kissed me on the forehead and said, \"Especially since Harold wants to know if Beat Cat and Nubbin can make occasional guest appearances.\"\n\nI looked at her with wide open eyes and she added, \"I told him we would have to think about it.\"\n\nI asked her if she was serious. She gave me a hug and said, \"I don't know, maybe we should save Nubbin and Beat Cat for your live appearances.\"\n\nI think she was teasing me... but I'm not sure.\n\nEnd of entry for Day Thirty-Two\n\nEnd of Diary\n \n = = = = = = = = = = = = = = = = = = = = \nEND OF STORY\n\nPlease remember to vote \nby clicking on one of the stars at the end of the story.  \n\nIf you really liked it, click 5.  \nIf you really hated it, click 1, but please click something. \n\n = = = = = = = = = = = = = = = = = = = ="
    ],
    "authorname": "The_Technician",
    "tags": [
        "public nudity",
        "public orgasm",
        "public spanking",
        "public caning",
        "public bondage",
        "public flogging"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/diary-of-a-pain-slut-week-05"
}