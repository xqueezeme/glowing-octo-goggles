{
    "title": "Revealing at Work",
    "pages": [
        "I latched the door and listened.\n\nI knew I could get into big trouble.\n\nHowever, I knew I couldn't stop now. \n\nI listened again. None of the sounds of the office, the people, or the phones seemed to enter this space.\n\nOnly the sound of the overhead fan broke the silence.\n\nI swear I could hear my heart beating.\n\nI wondered if this was too much. Maybe I shouldn't do so much.\n\nI closed my eyes for a moment and told myself to relax.\n\n\"No one is going to know,\" I tried to reassure myself, trying to keep my hands from shaking.\n\n\"No one is going to notice I am gone,\" I told myself.\n\n\"You need to do this for yourself, you want to do this,\" I thought to myself.\n\nI had been thinking about doing this for weeks, ever since I had read about it on-line. This had become one of my ever-increasing number of favourite fantasies. It also seemed very easy; I was amazed at the number of videos online. Whether reading or watching, each time the effect was the same. I ended up naked and making myself orgasm. I just had to do this this.\n\nExploring my desires, pushing the limits on my sexuality, it was seeming to become almost an obsession with me. I loved the feeling I got with each new thing I tried. I was getting bolder and I knew I was pushing up against what other people might find acceptable, but the more I was doing the less it seemed to bother me.\n\nAt moment I wasn't seeing anyone, I had moved to the city to take a job and other than a few unsatisfying encounters most of my explorations had just been things I could do alone. \n\nI had decided last night that I would try to today. I had noticed that almost no one used this washroom during this time of day. It was about thirty minutes before everyone went for lunch. I had troubling focusing all morning but no one seemed to notice I was distracted.\n\nLast night I had taken a bath before getting ready for bed. Relaxing in the hot water with a glass of red wine, I felt my anxiousness disappear.\n\nSometimes it felt almost like two different sides of my personality were battling it out. One side, the logical \"me,\" was a good student and dedicated employee. This \"good girl\" always tried to do the right things and always followed the rules. I had been this way all of my life. The other side of \"me\" was new. The \"desires me,\" wanted to explore what it felt like to be sexy, to be naughty, and to give in to pleasure. The \"desires\" had become much stronger it seemed with each passing week since I started this new job.\n\nI knew people found me attractive, I always thought of myself as average, but at 5.2 and 100 pounds with a nice figure, I enjoyed the attention of men and women. Living at home until recently though, my desires had never really been given a chance and I wanted to have some freedom to explore.\n\nFinishing the wine, I took my razor and I shaved my legs first, luxuriating in the feeling of the steel blades moving up and down my legs. Running my hands down the now completely smooth skin, I shivered anticipating the next part.\n\nI pulled myself up and sat on the edge of the tub, with my feet still in the hot water and bubbles. Taking the razor and being very careful, I shaved my pussy completely, as I had seen in so many videos. Normally, I kept it trimmed; now for the first time as an adult, I made myself completely bare. \n\nMy mom would be shocked. As I shaved the harder to reach parts, I almost felt light-headed, as small electric shocks seemed to ripple through my body as my fingers touched my folds and other naughty places.\n\nI had to stop for a moment and force my hands to stop shaking. I could feel myself getting hotter and watched my petals start to open. Reaching between my legs, I ran the razor carefully between my pussy and my ass to remove all of traces of my hair. Finally bare, I ran my fingers over my smooth skin and shivered again in excitement.\n\nAs I slid back into the water, I ran through my plan for the next day.\n\nI pictured each step and what I planned to do several times. With one hand between my legs and my other playing with my nipples, it wasn't long before I felt my body go rigid and my body explode as I came hard in the tub. Afterwards, I let my fingers continue to wander as I savoured the feeling of my body returning to normal. I let my mind drift in the possibilities of what might happen.\n\nReturning to the present, part of me couldn't believe I was actually here and doing this, it was breaking so many rules and I was so bad. With the door latched and my eyes closed, my fingers fumbled with the buttons on my blouse. One, two, three, and then finally the last button was undone. My top fell open and I could feel the cool air caress my skin. Still constrained by my bra, my nipples were hardening, I could feel them pushing against the soft cups. Goose bumps formed on my skin and my breathing was more noticeable.\n\nMy breathing was so loud I was momentarily afraid that if someone came in they would somehow hear me. I smiled because in a few minutes, I would be completely naked and the sound of my breathing would be the last thing I would have to be worried about.\n\nThe little clasp on my bra came undone and I felt the pressure deliciously lessen on my chest.\n\nA small moan escaped as I felt the release. My boobs weren't big, 34B's, but they always felt sexier when they were free. I slipped my blouse off and then shrugged my shoulders and my bra fell away. I hung them both up on the hook. Now naked from the waist up, I took a moment to savour the feeling of running my fingers across my naked skin.\n\nI began with smaller then larger circles tracing on my chest with my fingernails, another moan escaped; this time I made no effort to stifle it. Moving up I cupped each breast, then with my fingers and thumbs, I pushed and pulled each nipple one way and pushed back the other way, applying some pressure to pinch them as well. More moans escaped and I felt my knees get wobbly.\n\nAs wonderful as this felt, I knew I wanted more.\n\nWith my eyes closed, I slipped my shoes from my feet. The floor felt cold on my bare feet as I fumbled with the button on my slacks. Undoing it, I took a deep breath, hooked my thumbs on the waistband of my pants, and slipped them down over the flare of my hips. I wiggled my hips as my pants slipped down over my thighs and then steadied myself as I pulled them off each leg and they joined my blouse and bra on the door hook.\n\nNow just in my wet panties, and feeling the chill of the air conditioning, I smiled at my fully erect nipples and I could detect the sweet scent of my little pussy. Stopping for a moment, I ran a finger along my pussy, feeling myself up and enjoying the heat of my damp crotch through my tiny red panties. The silky material hugged my opening and my clit protruded from the sheer fabric.\n\n\"OMG,\" that feels incredible. I felt so exposed and so naughty. \n\nJust for a moment, my mind flashed to another one of my darkest desires and I imagined being caught. Before I knew it, I was picturing being brought before my boss and being spanked for being a bad girl. Without a conscious thought, the image of my sexy boss spanking me made me almost come on the spot.\n\nSteadying myself again, I took the final step and my panties joined my other clothes on the hook. Fully exposed, part of me wanted to unlatch the door and run to the mirror to see myself naked. Maybe snap a selfie to prove I was doing this. Taking a deep breath, \"Maybe next time,\" I didn't know if my nerves could keep up with my imagination. \n\nI felt my strength to control my lust weakening, and I once more I gave into the feelings.\n\nLetting my mind return to the image of my boss catching me masturbating, I closed my eyes again and started using my fingertips to caress my body. I thought about the humiliation, the shame, the excitement.\n\nI used one hand and started it moving up my stomach, slowly moving up my body, the tips of my fingers barely grazing my skin, the sensation sent chills up my spine. I imagined that my fingers were her fingers. I could almost feel her hot breathe on my body.\n\nMoving in circles ever higher, I felt the fingers move higher along my stomach and then to the rise of my breasts and this time another long moan passed over my lips. Always moving, always just lightly touching me. My neck and back arched as the intensity of the feelings took over all of my senses.\n\nMy other hand slowly traced the flat contours of my skin just above my pussy. Moving the same way, the light touching felt incredible. I was now leaning against the side of the stall. For a moment, worried about how long I had been in here but as one finger moved along the uneven petals of my vagina and parted my lips, I inhaled sharply and lost all sense of time.\n\nI could feel the electricity rolling and building from the core of my body, I could almost see the crackling of electricity in my mind, and this was so much better than I had imagined. I felt like I was on a roller coaster as it made the first long climb to the edge of the highest precipice.\n\nMy breathing was loud and ragged and my quiet whimpering filled the air. I was pinching and pulling on my nipples furiously now and my other fingers had focused on exploring the edges of my pussy, the heat and the moisture lubricating a pathway for them. \n\nI tried to prolong the intensity of these feelings but my legs could barely support me. My breathing was coming in short little pants as the roller coaster teetered on the edge of oblivion. Then I felt myself plunging over the edge, I felt like I was freefalling for miles. Suddenly I tried to freeze as I heard the unmistakable sound of outer door to the washroom open.\n\n\"OMG,\" I thought, but it was too late, a long loud moan started in my feet, rose up through my legs and tore through my chest, and out of my mouth. I couldn't stop now even if I wanted to. The chain reaction of my actions combined with the wicked thoughts in my mind, and my orgasm was not going to be held back now. \n\nI knew whomever it was, was going to hear what I doing to myself. My body went rigid and then started to twist and bend as the orgasm shook me. I shivered, moaned, whimpered and shook for several moments, I knew whoever it was would know the unmistakeable sounds of an orgasm. I knew I must have made too much noise not to be discovered. It didn't matter, in that moment; all of my feelings were locked into the release I was experiencing.\n\nThe intensity of pleasure finally began to fade after several moments and was replaced by the growing ice-cold fear of imminent discovery. The washroom seemed quiet; the only sound was from my own breathing. My arms and legs felt like they weighed a thousand pounds but my body still buzzed with the residual energy of my orgasm. I stood silently, naked, just trying to catch my breath.\n\nI knew I shouldn't have done this. I knew I was caught. \n\nMy good girl brain was thinking I wish I had thought about trying to start by just masturbating through my panties quietly in a stall. I knew giving into my fantasies was going much too far.\n\nI checked my phone and I realized I had been away from my desk for almost 30 minutes. My excitement of the intensity of what I had done was now being countered by the cold realization that I would be in serious trouble. \n\nPart of me thought I should just wait to be punished; maybe the thought of being discovered naked would be worth the embarrassment. My practical brain fought hard and for a moment by body listened and and mechanically and without enthusiasm I began to get dressed.\n\nI grabbed my blouse and put it on, I was doing up the buttons when I realized I had forgotten my bra. \"Fuck,\" I whispered to myself, grabbed it, and tucked it into my purse rather than to waste time taking my blouse off again.\n\nI pulled my red panties up my thighs and felt the cold wetness of the crotch pull tight against the still throbbing warmth of my pussy, smiling despite my fear, pushing my practical brain back, even just for a moment.\n\nThe slacks were next and felt that rush as the tightness of the seam pushed hard against my very sensitive pussy again. My desires were reasserting themselves again even as my practical brain thought it had won. Slipping my shoes on, I left the stall and stepped into the empty room.\n\nI checked each of the other stalls were empty. I was sure I had heard the door open just as I came. I wondered what had happened, was I hearing things. Did someone know? Did someone report me? What would be waiting for me on the other side of the door?\n\nI looked at my reflection, I was flushed, my hair slightly tousled, the top of my chest was bright red. I thought I looked like someone who had just been fucked, and I smiled again. \n\nMy desires said, \"You go girl, good for you, it was worth it\" my practical side said, \"OMG OMG OMG, you went too far, you deserve what is going to happen next, what are you going to tell your mom when they fire your ass?\"\n\nMy hand was shaking as I turned to face the music and consequences.\n\nI opened the door ...\n\nThe office looked like nothing had changed, the phones were ringing, people were working, and my boss looked up from a huddle of people.\n\n\"Are you okay, we were worried, you looked very pale before?\" she said.\n\nI nodded, \"I am okay, just needed a break,\" and smiled at her.\n\n\"Okay, lets get back to work then,\" she smiled and then she turned back to the people she was talking to. It was like nobody even noticed me.\n\nI walked back to my workstation, nobody pointed their fingers and yelled, \"She's a slut,\" one of two nodded but nothing seemed out of the ordinary.\n\nI sat back at my desk, I realized by bra was peeking out of my purse, but not too far, I figured I was safe and shoved it back into deeper.\n\nI couldn't believe it, nobody acted any different. Lunch came and went; the afternoon went by as normal. People asked me questions, including even my boss. Nothing was said; no one seemed to have noticed. \n\nHad the door opening been completely my imagination?\n\nMy boss came to me about mid-afternoon and as she approached, panic gripped me. In the few weeks I had worked here, we had only had the briefest of contact and all of it came from me going to see her or being called to her office. She had never come to my workstation.\n\n\"Liz, could you stay a little later tonight to finish that assignment I gave you?\" she asked, politely and she smiled.\n\nLindsay was in her early fifties, attractive in a professional way. I think her husband was a lawyer. She kept herself in good shape and I had always thought she was very attractive.\n\n\"Sure Lindsay, I didn't have any plans,\" I said, I hoped she didn't notice the sweat that I could feel on my forehead.\n\n\"That would be great Liz, I hate to ask, but my meeting for next week has been moved up to tomorrow, and I really need that paper.\"\n\n\"Lindsay, I am almost done, I could likely have it done if I stay for an hour or two,\" I said relieved that I wasn't in trouble.\n\n\"Thanks Liz, you are a life saver,\" and she swiveled and walked back to her office. I watched her nicely shaped posterior sway in her tight skirt.\n\nQuitting time came and went and my co-workers left in one's and two's, no one seemed to notice that I was still working and soon I was the only one left. Focused, I barely noticed them either and when I did glance at the time, I realized I had been working for almost an hour since everyone had left. The office was dark and very quiet.\n\nAnother hour later, most of the building was in darkness and I finished the final proofread. I stretched and then I was just getting ready to turn off my computer when my phone vibrated.\n\nI glanced once at the message and not recognizing the number I ignored it. Literally, seconds later the same thing happened. Against my better judgement, I opened the text.\n\n\"Elizabeth, I know what you did,\"\n\nMy heart almost stopped.\n\nI had been working so hard, I almost forgot about this morning.\n\nOnly the lingering feeling of dampness in my panties and the tingly feeling reminded me about how bad I had been. So focussed, for the last few hours I hadn't thought about it, now all of my fears about being caught flooded back.\n\nFor what seemed like an eternity, I just stared at the screen.\n\n\"You sounded like you were having such a good time.\"\n\n\"I wanted to stay until you finished, I didn't know if you even noticed someone else was in the washroom.\"\n\nI hadn't moved and I realized I was still holding my breath. Realizing this, I exhaled; I could feel my heartbeat thumping even harder in my chest.\n\n\"If it felt half as good as it sounded, that was quite an orgasm, Elizabeth.\" It was the second time they used my name, the first time it hadn't registered and now it did. I felt like I was really in trouble, the only time any one had ever called me Elizabeth was when I was in deep trouble.\n\nI still hadn't responded.\n\n\"Are you there Elizabeth? Come on don't be shy.\"\n\nIn my mind I was freaking out, I should have known something like this would have happened.\n\n\"Don't worry; I'm not going to tell anyone, not if you answer my questions, that is.\"\n\nSweat was beading on my forehead again. I had no idea who the person texting me was. I figured it was a woman, because a guy would have looked suspicious going in and out of the woman's washroom.\n\n\"Now come on Elizabeth, answer my question.\" \n\nI thought again, I only heard the door open and I never heard anything else because of my orgasm and my moans and whimpers. It could be any number of women who worked on my floor; it could be any one of almost twenty women. I knew a few of them; they would know me because I was relatively new. I had only been there for a few weeks, still on probation.\n\n\"Elizabeth, answer the question, please.\" \n\nI needed time to think, the logical part of my brain was running around screaming inside my head. My desires part of my brain was trying to convince me, \"What the hell, let's see where this goes.\"\n\n\"Yes\" I typed slowly. My logical brain was screaming inside my head, \"WTF are you doing?\"\n\n\"Good, see that wasn't so hard.\" \n\nThen a few seconds went by.\n\n\"Did it feel good?\"\n\n\"Yes,\" I typed, that butterflies in my stomach and the tingling between my legs had started again. My logical side brain said, \"Fine, I give up. Desires, you are such a slut.\"\n\n\"Good, you sounded like it did.\" \n\nMore seconds ticked by. \n\n\"Have you done that before?\"\n\n\"No, it was the first time,\" I typed, not realizing that it implied that I might do it again.\n\n\"Oh, would you want to do it again?\"\n\nA full minute went by before I realized what I had said.\n\n\"Elizabeth?\"\n\nThe tingling was steadier now, I could feel the excitement of my desires rising, and I knew without looking that my nipples were hard again.\n\n\"Yes.\"\n\n\"Weren't you afraid of losing your job or someone like me catching you?\"\n\n\"Yes and yes,\" I typed, my heart starting to beat faster. I knew I should just stop and not answer any more questions, but my sense of arousal had already defeated my logical brain, I was in uncharted territory and my desires had the ball.\n\n\"But you did it any way, you were very naughty.\"\n\n\"Were you naked or did you just play with yourself through your clothes?\"\n\n\"Naked,\" now I could feel my panties starting to get really wet again.\n\nNothing happened for a minute or two and I glanced around the empty office, worried that someone was hidden and playing mind games with me.\n\n\"Do you feel like doing again right now?\"\n\nWhoever it was could likely guess the answer. I knew that answering this question was not a good idea, all of the warnings from my mother flashed through my mind.\n\nI typed, \"Yes.\"\n\nI knew it was a mistake, I knew that whomever was on the other end of the text was manipulating me, was controlling me, and was dominating me.\n\nI knew though, I couldn't submit fast enough.",
        "\"What if I asked you to play with yourself right now?\" a pause for a second, \"To make yourself come?\" a pause, \"Would you do that?\"\n\nSilence, I looked at my phone.\n\n\"Elizabeth?\"\n\n\"Yes, oh god yes,\" I thought to myself, I couldn't believe that I was feeling this way. The way I felt in the washroom now seemed like a hundred years ago, my skin was flushed, my nipples were rock hard, I was squirming in my chair, and the friction between my legs was almost unbearable.\n\nTen seconds passed, it seemed like forever.\n\n\"Yes.\"\n\n\"Good choice Elizabeth,\" and a few seconds passed, my heart was in my throat, I knew what was coming next, it was just a question of where.\n\nAlmost a full minute when by with nothing, I swear I was holding my breath again the entire time.\n\n\"You know what I want?\"\n\n\"I think so,\" I texted.\n\n\"What do you think I want you to do?\"\n\nI knew that I had passed the point of no return already, but here was a final chance to escape, if I answered this question, there would be no going back because I would be exposing myself willingly to a complete stranger.\n\n\"You want me to play with myself,\" I paused for a moment then added, \"And, you would like to watch.\"\n\n\"Yes.\" \n\n\"Right here?\" I texted.\n\nNothing for a moment, my voyeur seemed to be thinking.\n\n\"Does your computer have a webcam?\"\n\n\"Yes.\" \n\nI looked around the empty office, only a few lights remained on, my pulse had quickened again and my mouth was dry, that anxious feeling had returned.\n\n\"Okay, I just sent you a meeting link, follow the instructions.\"\n\nI set the phone down and opened my work email. In a few moments the invitation appeared. The email sender was not anyone I recognized. When the meeting opened, I could see me, but the only thing showing for them was a black logo with my name on it.\n\nI took a deep breath.\n\n\"Okay, Elizabeth are you ready?\" appeared in the close captioning.\n\n\"Yes,\" I had turned the microphone on, whoever it was could hear me, but I could only read what they typed. Already my panties were soaked and the sweet scent of my pussy lingered strong enough I could almost taste it.\n\nI looked straight into the camera and began to undo the buttons on my blouse again.\n\n\"No, start with your pants please. Stand up.\"\n\nI stood and started to comply. I could see myself on screen; I wondered if they could see the darker area around my pussy, my wetness had wicked into the thin material.\n\nThe button came undone followed by the zipper, my knees felt weak and I was almost hyperventilating.\n\n\"Keep going Elizabeth.\"\n\nI wiggled my butt as I hooked my thumbs in the waistband and pushed the slacks over my hips, the top of my blouse hiding most of my pussy from view. Only flashes of my skin showed, I bent over and pulled them the rest of the way off. The cool air of the empty office raising goosebumps on my damp skin.\n\nFor the second time today, my bare pussy was exposed. The first time there had been the risk of discovery, this time it was in full knowledge of being exposed and I was intoxicated by the thrill. I was stripping away my hang-ups about proper behavior as much as I was stripping away my clothes. \n\n\"Let me look at you Elizabeth.\"\n\nEach time they said my name I really felt like I was in trouble again ... I was trembling with excitement.\n\nI stood looking into where I imagined their eyes were.\n\n\"Turn around.\"\n\nI slowly swiveled on my bare feet, I didn't even remember taking off my shoes. I felt like every nerve in my body was crackling with electricity. I don't think I have ever felt as turned on as I did at this moment. It was better than earlier, then there was the fear of discovery, now on display, I embraced the thrill of being nude, or nearly so, in front of a stranger. \n\n\"Take your hair out of your pony tail.\"\n\nI reached up to undo my high ponytail; the action of lifting my arms pulled my blouse up higher, exposing my little pussy to the camera. The folds of my box, already open, glistening, and expectant.\n\n\"Elizabeth, you shave yourself, your pussy looks delicious.\"\n\nIt wasn't a question as much as it was a statement and without being prompted I ran my middle finger up the cleft between my legs, shuttering as my finger came in contact with my folds and even more so as it embraced my finger slipping briefly inside me. Shivering slightly and closing my eyes, I brought it to my lips. I inhaled my scent, slipped my finger into my mouth, and tasted myself.\n\n\"Oh, Elizabeth, that is hot, you are making me so wet,\" I had guessed my voyeur was a woman, but this was the first explicit admission. Knowing I was performing for a woman only added to my sense of sensuality of the moment. Although, I would have been just as turned on, if it was for a man, or maybe a group of men.\n\nI shook my head and my long hair spread out in a loose tousled look.\n\n\"Elizabeth, that suits you, that just fucked looked, your blouse barely covering you, I have dreamed of seeing you like this since the first time I met you.\"\n\n\"Undo you blouse now, I want you to be nude for me.\"\n\nLooking into the camera, I tried to imagine whom I was stripping for, a list of names and pictures of women scrolled through my mind as one, two, three and and finally the fourth of the buttons were undone. Each name had a picture and some were young, some were older, some attractive and some were not. I imagined I was doing this for money and I decided that I didn't care who or what they were, only that they were forcing me to strip naked.\n\n\"Take your blouse off,\" interrupted my fantasy.\n\nMy gaze never wavered as each button came loose and the top of my blouse opened more and more. The flushed red of my chest spread to include the tops of my breasts, the smooth curves of my white skin, and the hint of the raised brownish pink nipples as gravity opened the fabric wider and wider. The soft material hung suspended from my hard nipples as the last button came undone and I slowly revealed myself to the camera. Still looking into the lens, my determination could not stop several small whimpers from passing over my lips.\n\nI forced my eyes to stay open as I cupped both of my breasts without completely covering them. They felt warm to my touch; I took my thumb and forefingers and began softly pinching and then pulling on each nipple. Another series of louder moans and whimpers escaped as I continued. Finally I was unable to keep my eyes open as the pain and pleasure became too much.\n\n\"OMG,\" I whispered softly as I felt the electricity building again throughout my entire body. My nipples had always been extremely sensitive and masturbating for my unknown voyeur was only heightening my feelings.\n\nI dropped one of my hands to my dampening pussy. Softly and slowly, my hand made its way downward. I used my fingertips to lightly caress my skin, making circles as my fingers descended.\n\nMy breathing was now a continuous series of moans, which filled the empty silence of the office.\n\nThe wetness between my legs beaded on my folds in the light from my workspace, as my voyeur did not disturb me.\n\nOne finger slowly moved up and down and around my pussy, my body moving in concert with my touch. I could feel that wonderful sensation of approaching the top of the roller coaster again. I wanted to prolong the anticipation, but despite trying to keep my fingers from working my body too hard and too fast, I could hardly control them. I felt out of control and I went even faster.\n\nI felt myself on the very edge, I held it for what seemed like eternity, but I knew was only a minute or two, my knees buckled and I almost fell as a moan that sounded like a scream filled the room.\n\nMy hips went rigid but my body arched and bucked as I felt like I was falling. The release felt so intense, I could feel myself squirting and I kept using my fingers inside me until the sensitivity became too much and I had to stop.\n\nWhen I realized what was happening, I was on my knees in front of the computer, my breathing coming in long gasps and pants.\n\nMy voyeur had remained silent throughout the entire think and only as my breathing returned to normal, did she comment.\n\n\"Elizabeth, that was so sexy.\"\n\nI could not believe all of the things I had done. I felt released, as if I was now someone I never had never really known, but having discovered these desires, I never wanted to hide them away again.\n\nIt was like a hunger and some kind of bottomless pit, now that I had released it I only wanted more.\n\n\"Elizabeth, we will do this again.\" It wasn't a question.\n\nMy voice was hoarse and almost unrecognizable, \"Yes, I want to do this over and over again.\"\n\n\"Elizabeth, you are such a naughty girl, maybe next time you can do this in person for me, would you do that?\"\n\n\"I think we may need to spank you too.\"\n\nI knew my answer before my fingers could enter the text.\n\n\"Yes.\""
    ],
    "authorname": "ghost12_spirit",
    "tags": [
        "bdsm",
        "exhibitionist and voyeur",
        "fetish",
        "blackmail",
        "caught",
        "co-worker",
        "exposed",
        "nudity",
        "stripping",
        "submission"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/revealing-at-work"
}