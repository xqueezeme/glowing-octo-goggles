{
    "title": "Love of Autism Ch. 11",
    "pages": [
        "And here we are, chapter 11! Can you believe you've stuck around...well, considering how many positive comments I get from this story of course it makes sense you've stuck around and patiently waited for this new chapter. I think everyone will like this chapter and look forward to your comments. As always, thank you Tigermans for your editing and letting me bounce ideas off of you.\n\nScott laid in his bed and didn't want to get up. The previous day should have been one of the happiest of his life. He and his girlfriend finally had sex after over a month of sexual tension between them, but their moms found out and made a much bigger deal about it. He felt so embarrassed by his mom and was thankful that his dad came and sent him to his room. Still, he couldn't shake the feelings of embarrassment and shame.\n\nHe slept horribly that night, tossing and turning, getting maybe only few hours of sleep. He should have gotten up earlier but he had no energy. His dad slowly opened the door, walked in, spun Scott's computer chair around so he could sit and face his son.\n\n\"I know you feel like shit Scott, but I need you to sit up,\" Keith said. Begrudgingly Scott did what his father wanted and sat up on his bed, his back against the headboard. \"I know you think I don't know what you're going through but I somewhat do.\"\n\n\"Your mom made light of the fact you lost your virginity the night you lost it?\"\n\n\"Nope, but Melissa made a scene the morning after your mom and I had sex for the first time.\" Scott shook his head in disbelief as his father told him that. \"Yes, she made quite the scene. Needless to say I was embarrassed. Not really ashamed like how you felt with your mom, but still quite embarrassed. I put on a brave face for Jackie...and did somewhat enjoy the back and forth between them but really wished she hadn't walked in on us that morning.\"\n\nScott stared at his dad, partially dumbfounded by his confession, but also in shock that his father actually understood what he was going through. \"So when you saw mom teasing me...\"\n\n\"I knew you weren't taking it well and...well, not to be mean, but you haven't always been that self-confident.\"\n\nScott hung his head at his father's statement. \"Yeah. I mean, I know I'm...you know what's it like dad, always having to think and rethink something you're going to say to make sure it sounds right, taking extra-long on how to respond to someone and making sure what they said was or wasn't sarcasm. I just want to be...I just want to know I'm doing something right for once, especially with Katie.\"\n\n\"I know you've heard me say this many times before, but it will come in time with lots of practice and patience. It also doesn't hurt to have friends willing to help point things out once in a while.\"\n\nScott smiled and looked up at his father. \"Yeah, it does help having Liz and Steve around. So umm...\" Scott became unsure of how to ask his father his next question.\n\nKeith recognized his son's reluctance. \"Go ahead Scott. Just ask your question. I promise not to judge.\"\n\nScott appreciated his father's reassurance, but was still nervous to ask. \"Well...is it normal to feel like...lighter, happier after sex? Like everything just seems right in the world and nothing could go wrong?\"\n\n\"When you have sex with the right person, yes, it should feel something like that.\"\n\n\"Ok, that helps me a little.\"\n\n\"But speaking of sex, go buy some condoms on my credit card.\"\n\n\"Dad!\"\n\n\"Don't 'dad' me. If you and Katie are going to have sex you need to use protection. She doesn't need to get pregnant going into college and you don't need to be a daddy going into college either.\"\n\n\"I know, but...it's going to be awkward for me going into a store to buy condoms. I might get a look from the other people and the cashier.\"\n\n\"You probably will, but fuck them and what they think. Condoms are a lot cheaper than formula and diapers.\"\n\n\"Dad I know.\"\n\n\"You keep saying you know, but you still don't seem to get the point.\"\n\n\"I get the point! It's just...how did you feel at my age buying condoms?\"\n\n\"If I was still living at home probably nervous and worrying if my parents were going to find them. But I'm telling you to buy them and your mother knows I'm telling you to buy them.\"\n\nA thought then occurred to Scott. \"Wait, are you and mom going to let...\"\n\nKeith cut off his son quickly \"No. You two are still sleeping in separate bedrooms. However, we do realize that Jillian may let you two sleep together and it is also obvious you two will take advantage of the situation if she is not home.\"\n\n\"But why not just let us sleep in the same bed then?\"\n\n\"Because you two are too horny for your own good. We don't mind you having sex but just not in this house right now and with protection.\"\n\nScott still didn't quite understand his dad's logic, but knew that it was best not to fight him on this. \"Ok fine. We won't try to sleep in the same bed and when we do have sex we will use protection.\"\n\n\"Good. Now get out of bed. You still have laundry to do after all and your sister waited to put her dirty clothes in the laundry room.\"\n\nScott immediately slouched where he sat at that news. \"I hate it when she does that.\"\n\n******************************************************\n\nIf there was one thing Katie enjoyed about being back at school, it was that she got to see Scott twice. If there was anything that she hated more than going back to school, it was driving there in snow. There was a little snow on Christmas break and some on Christmas day to make a white Christmas. However that previous night it snowed three inches and of course their school district decided not to cancel any classes. It didn't help that the snowplows were out in full force ready to push the snow off the roads throughout the night.\n\nEven with the roads somewhat clear, driving was still very slow going. She had left almost twenty minutes earlier than she normally does and still got to the school building at her usual time. The school hallways were covered in wet, dirty slush as everyone tracked snow in from the outside. Everyone else looked as gloomy as she felt. That is everyone except for Scott whose smile warmed her heart. Even on the dreariest days he always seemed to find a way to smile about something. It was somewhat annoying that he could always be so happy, but she needed to see his smile.\n\nShe approached him and warmed her arms around him. He proceeded to do the same. Usually he would give her a romantic little kiss on the head, but this time he just rubbed her back over her winter coat.\n\n\"Don't take this the wrong way,\" Katie began, \"but the way you just seem to know exactly what I need makes me doubt that you are autistic sometimes.\"\n\nScott couldn't help but smile at that. \"And then there are other times where I remind you all too much that I am indeed autistic.\"\n\nThat caused Katie to also smile and laugh at her boyfriend. \"Especially at lunch where, if you brought in a lunch today, you have four slices of salami, six Chips Ahoy cookies, fruit punch Gatorade, some pretzel tiny twists, and whatever fruit your mom set aside for you to try to get you to eat healthy.\"\n\nScott could only shake his head and laugh a little at his own predictability. He loved certain routines and certain foods. He didn't like deviating from his favorites for lunch. \"And you know me all too well also as that is...indeed what I have packed for lunch today.\"\n\nKatie tilted her head up and gave him a peck on the cheek. \"I'll save some stir fry tonight and we can have that for lunch tomorrow if you'd like.\"\n\n\"Can it be made with...\"\n\n\"Yes,\" Katie interrupted knowing exactly what Scott was going to ask, \"sliced carrots, red peppers, small pieces of beef, and chestnuts.\"\n\nAgain, all so predictable. \"I need to start changing up my favorites. I don't like being this predictable.\"\n\n\"Don't change who you are,\" Katie somewhat pleaded. \"You are amazing just the way you are.\"\n\n\"Am I though?\" Scott said doubtfully.\n\nKatie separated herself from Scott and looked at him with concern. This wasn't like him at all. \"Scott, what's wrong?\"\n\nScott realized then he had said too much, but it was too late to take it back. \"I don't want to talk about it now. Maybe later.\"\n\nKatie nodded her head, but was still bothered by Scott's sudden lack of confidence and goofiness. Her classes went by at a snail's pace and she was more than happy when lunch time came. However, Scott didn't look any much happier than he did at the beginning of the day.\n\nScott was indeed feeling exactly how he looked. Ever since his mom and dad had 'the talk' with him once they found out he and Katie had sex he had just felt down. Thoughts of worry about if Katie were to become pregnant. Thoughts of him actually going out and buying condoms and the weird looks he would get from everyone. What if other students found out and started asking him questions? All of these thoughts and questions had been weighing on him and overwhelmed him. He had learned to hide how he was feeling before from friends and family, but somehow he slipped up with Katie and let his guard down. That only made him feel worse because now she worrying about him and he didn't know how to explain what he was going through, nor did he really want to talk about it.\n\nHe was thankful that Katie didn't try to bring it up at lunch or during English class. He just wanted to go home and try to get his mind off everything...even if nothing he had tried had worked so far. However, when he got to his car to go home Katie was there instead of Sarah. 'She isn't going to let this go,' he thought to himself.\n\n\"Can we talk for a second please?\" Katie asked with concern.\n\nScott shook his head, hating himself inside for shutting Katie out. \"No, I don't really want to talk.\"\n\n\"Scott, I'm worried about you. This isn't like you at all,\" Katie pleaded.\n\n\"I promise I'm fine. Just...got a lot on my mind about stuff.\"\n\nKatie knew that he was not fine, but also knew how stubborn he could be so she let it go, hoping that they could talk about it the next day. However Scott refused to talk about it for the rest of the week, which only made her worry even more. Not knowing what was going on was killing her inside and that Saturday morning she went over to Scott's house uninvited. She rang the doorbell and Jackie opened the door, shocked to see her.\n\n\"Katie, what are you doing here? Scott didn't tell me you were coming over.\"\n\n\"He doesn't know I'm here,\" Katie admitted.\n\nThat shocked Jackie even more as she welcomed her. \"So why are you here?\" Jackie asked as she closed the front door.\n\n\"I'm worried about Scott. He hasn't been...well himself all week.\"\n\n\"I know,\" Jackie admitted. \"He tells me and Keith that he just has a lot on his mind, but I think he is just feeling overwhelmed.\"\n\n\"Overwhelmed by what?\"\n\nJackie shrugged her shoulders. \"I wish could tell you. Other than eating dinner with us, he doesn't come out of his room.\n\n'So he's shutting himself off from his family too?' Katie asked herself. This just seemed too much and very unhealthy for Scott. She turned and headed straight for Scott's room.\n\n\"Where are you going?\" Jackie asked.\n\n\"He and I are going to talk whether he likes it or not.\"\n\n\"You really shouldn't...\"\n\nKatie turned and looked Jackie dead in the eye. \"I'm not going to let him suffer like this alone. He's going to either talk to me or I'm going to be here all weekend until he does decide to talk.\"\n\nJackie wanted to stop her, but the conviction in Katie's voice was strong and the last thing she wanted was to cause more drama. There had already been enough of that between the two families.\n\nKatie turned back, walked straight to Scott's room and barged right in. She wasn't surprised to see him still in bed and he jumped when she barged in.\n\n\"What the hell are you doing here?\" he asked. Katie closed the door behind her. \"Don't close the door. Mom and dad...\"\n\n\"Shut it!\" Katie demanded. \"You are going to tell me what the fucking hell has been going on with you.\" Katie took off her coat, hung it around his computer chair and sat in it. \"And I'm not leaving until we talk.\"\n\nScott was shocked at what has happening. 'Who the fuck does she think she is,' he thought to himself, slowly getting angry at her. \"And you think just barging into my room and demanding we talk is going to make me talk?\"\n\n\"Well I don't see any other way how to get you to talk because you've completely shut me out all week. I've asked Liz and Steve what to do and they just tell me to let you get out of this funk. However I can't do that!\"\n\n\"And this is the solution you came up with?\" Scott asked incredulously.\n\n\"Well I did think about trying to get a mind reader to tell me what it is you're thinking.\"\n\nScott shook his head, anger building inside him. He tried to take a deep breath to calm himself before he spoke again. \"You don't need to get sarcastic with me.\"\n\n\"Really? Then tell me how else I'm supposed to know what the hell is going on with you?\"\n\n\"I don't know,\" Scott said growing frustrated.\n\n\"I think you know. You just don't want to tell me.\"\n\n\"No, I really don't know!\"\n\n\"Fuck you! Yes you...\"\n\nIt was too early in the morning for Scott to be dealing with this. He just wanted Katie to leave him alone. Out of anger and frustration he threw one of his pillows at her. \"I said I don't know!\" he yelled.\n\nThe pillow hit Katie, but she just threw it back at him. \"God dammit Scott! I just want to know where my confident and goofy boyfriend went!\" she yelled back.\n\nScott threw the pillow onto the floor. \"Your boyfriend isn't confident! This is who I am! This is the real me!\"\n\n\"No it is not!\" Katie felt hurt that Scott didn't see himself as she saw him. \"You are confident. It was your confidence that helped me get over Jack.\"\n\n\"That wasn't confidence. I don't have any. That was just me trying to be nice to you.\"\n\n\"Yes you do. Every day I see your smile and you make me feel loved.\"\n\n\"God dammit Katie. That isn't confidence. That is just me putting a mask on. I put on a happy face and try to make everyone think I'm good and ok, but I'm not. I'm miserable.\"\n\n\"Why are you miserable?\" Katie asked not understanding why he thought that way. \"You have me, amazing friends in Steve and Liz, loving parents...\"\n\n\"Because I can't always feel free to be me. I have to act a certain way so that people won't call out how weird I am. Even when we went to see 'Your Name' you complained that I was too hyper to see the movie. That is me! I get hyper and giddy over things I love, especially when I actually get to share it with someone. I have to control myself at school, here at home and even with you. Tell me if you wouldn't feel miserable if you couldn't be who you wanted to be and felt.\" Scott waited for a few seconds for Katie to answer, but she didn't. She couldn't answer since she would have to tell the truth. He was right that she would be miserable. \"So yes, that is why I am miserable. Now put on top of that my parents finding out we had sex and my mom making a big ass deal about it. So I'm sorry I can't be the fucking happy go lucky, confident boyfriend you think I am. That is not me and if you can't handle that, then just leave me.\"\n\nSilence fell between them. Scott had said what he needed to say and what was seemingly building up inside him. Katie didn't know how to respond to Scott and everything that he said.\n\nSeveral minutes passed and Scott again just felt drained. He leaned over his bed to grab the pillow and placed it on his bed. He then laid down with his back towards Katie. He had turned his back to Katie not because he was mad, but because he started to feel bad for going off on Katie in the way that he did. She didn't deserve all that hatred and venom. He felt ashamed for doing that and wanted to cry.\n\nKatie didn't leave though. She knew she had pushed Scott hard to open up and that he more than did. But there was a very brutal honesty about it that she needed to hear. Even though his back was turned to her, she decided to get into bed with him and cuddle him from behind.\n\nScott didn't expect Katie to cuddle him, but he was happy to be wrong. He turned over so that he could face her and put his arms around her. \"I'm sorry,\" he said feeling forlorn.\n\n\"Don't,\" Katie said not wanting Scott to feeling so sorrowful. \"Don't ever be sorry for being honest with how you feel. If we are going to make this work, we need to be honest with each other.\"\n\n\"I know, but...\" Scott didn't know what to say next. After venting everything he felt there was nothing else really to say.\n\nKatie knew though exactly what she needed to say to Scott. \"From now on, if you want to be silly and giddy about stuff around me, go ahead. If you ever feel overwhelmed, tell me.\"\n\n\"I don't know if you know what you getting yourself into Katie.\"\n\n\"Well, I guess I'll find out sooner than later.\" That caused Scott to laugh and give a small smile. \"Wait, did you just smile?\"\n\n\"Yes I did you cute little smart ass,\" Scott said with a grin.\n\n\"Smart ass you say?\" Katie turned her head to make it look like she was looking at her ass. \"Well it is cute, but I don't know about smart.\" That made Scott's smile bigger for a second and Katie smiled back noticing. \"See, you are allowed to be happy.\"\n\n\"I guess.\"\n\nKatie scooched up and gave him a kiss on his forehead. \"Just be who you are. That is all I want. I want the guy who came to my rescue at Homecoming and made me feel special.\"\n\n\"I can try to do that.\"\n\n\"That is all I ask,\" Katie said with a big smile on her face<br ><br >\n\n***************************************************\n\nWith the roads still being hell from the snowfall, Scott and Katie packed a lunch instead of going out to eat. Scott had a leftover hamburger from the weekend and Katie had a ham sandwich.\n\n\"So how are you doing so far today?\" Katie asked.\n\n\"I'm doing better today,\" Scott answered. \"I think what happened on Saturday got my butt into gear and out of my mood.\"\n\n\"That's good,\" Katie said happily. \"I like it more seeing you with your handsome smile and yes,\" Katie emphasized not allowing Scott to interrupt her, \"you do have a handsome smile.\"\n\nThat caused him to smile a little and shake his head. \"I'm just not used to being called handsome by someone other than my mother.\"\n\n\"Well you are very handsome and don't let anyone tell you different.\"\n\nScott liked hearing Katie call him handsome, but it was still hard for him to truly believe he was handsome. He knew he looked nerdy because he wore glasses and was skinny. After a certain age he knew no girl would approach him because he was cute or really good looking. Hell, the only reason why Liz hung out with him was because she grew up playing with him as little kids and stayed close to him through the years.\n\nThe rest of lunch was filled with small talk. After lunch was over they proceeded to go to their next class, which meant Scott's favorite class, math. Math always made him pay attention to the small details. It was also those small, little details that one needed to pay attention to. It was always something small that made the attempted solution either right or wrong. His autistic mind loved the puzzle that math problems brought because it helped him focus on one thing and block everything else out. However, class would end and next would be his English class. The only thing he liked about that class was that Katie was in that class and sat next to him\n\nWhen he sat down next to her she smiled at him. That beautiful smile he had grown to admire over the past three months gave him peace for even just a few seconds. Once class began however they both had to focus on the lecture from Miss Bird about the current book they were reading. It didn't help that the book they were reading bored Scott and he simply had no interest in it. Class lasted way too long for his liking and was glad when it was over. After class he hugged Katie goodbye and went off his to his locker. He got what he needed, but took his time. His mind thought about how he really was doing. He still didn't feel confident in himself and everything he was doing was just for show. After a minute he closed his locker and turned around only to see Katie standing there.",
        "As soon as he had turned around and saw her she came up to him, put her hand to his chin, then pulled her hand back an inch before lifting it over his face and head.\n\n\"Um, what was that?\" Scott asked confused.\n\nKatie smiled at him with that disarming smile of hers. \"I took off your mask. I could tell at lunch that you still had it on. You don't have to hide if you're not doing well emotionally Scott.\"\n\nScott took a deep breath through his nose, still not wanting Katie to be brought down by his depression. \"Katie, I don't think you understand...\"\n\n\"I am here for you Scottie,\" she said, almost pleading. \"Please don't shut me out. You don't need to struggle with this alone.\"\n\n\"You don't know what it is like inside my head though. Some days I'm just a mess and worry about everything and just focus on stuff I don't need to but do anyways.\"\n\nKatie reached for Scott's face and cupped her hand on his cheek. \"And I'd rather see you for how you really feel. Even if you feel completely depressed and sad, I want you to show me and tell me.\"\n\n\"Katie,\" Scott began trying to figure out what he wanted to say. \"I...you don't want to see me with my mask always off.\"\n\n\"But I don't care,\" Katie said almost begging. \"If we are going to make this relationship work, I...we need to see each other at our best and our worst. I want...need to see you as you truly are. I need to see you not be fake with me, even if it means you are just sad because your mind only has you focusing on sad things.\"\n\nScott still didn't want to drag Katie down with him. He knew she was sincere in what she said and that she completely believed it. However, he doubted that over time she would still believe what she was saying once she realized that he really felt more miserable than he still let on.\n\n\"Just realize you might not like what you are actually asking for,\" Scott said.\n\n\"I may not like what I see, but I'd rather see the real you.\"\n\n***********************************************\n\nFor the rest of the week Scott didn't hide how he was feeling to Katie. He let her know when they first met at school each day that he still felt miserable and depressed. However as the week went on he opened up little by little about what he was thinking about and feeling, even if he had trouble effectively communicating exactly how he was feeling. To Katie's credit, she never tried to make Scott feel better as he told her everything. Instead she would just let him talk and listen. Sometimes she would pick up on certain things he would have said the previous day and ask if he felt better or worse from that day about said certain thing.\n\nScott didn't really realize that Katie had been paying attention to the things he was saying. He was just happy she was listening to him and not trying to make him feel different that he actually was feeling. He also appreciated that she didn't ask for him to kiss her or any other forms of affection. She just let him...be him.\n\nKatie did however suggest that he come over Saturday afternoon to watch a movie with her that she thought he might like. He pressed her to give him to the name of the movie, but she wouldn't say what it was. The only thing she would say was that it was anime and that she wanted her first time watching it to be with him. Scott eventually agreed and that Friday night he made sure to get as much of his homework done so that his mom and dad wouldn't ask him how much he had left to do when he left for Katie's.\n\nHe slept horribly Friday night, not able to get into REM sleep for whatever reason and felt exhausted all morning. Even with his mom making bacon and pancakes for breakfast, he still didn't feel that much better. He still had some time before he went to Katie's so he showered, brushed his teeth, did some chores, including laundry just to help pass the time. All the while his mind was still wondering what movie Katie could have found that she wanted her first time watching it to be with him. There were so many anime movies that she could have chosen. He rambled off a few titles in his head that he had watched before and some that he had never seen but wanted to see. He knew he would never figure it out, but thinking about that was better than his mind thinking about more depressing things.\n\nThe time finally came for him to leave and he put on his boots and winter coat. Before he left his mom gave him a hug and told him to enjoy his time with Katie, but also reminded him to be safe. He knew that had the double meaning of driving safely to and from her place, but also practice safe sex. The drive was slow going as it had snowed the previous night and most cars with moving slowly. Still Scott got to Katie's house at the time she told him to come. He rang the doorbell and a few seconds later Katie opened the door and let him in. Scott kicked some of the snow off of his boots before he came in and took them off. Once he had his boots off, he took off his winter coat and hung it up, he and Katie embraced and she hugged him tightly.\n\n\"I love you Scottie,\" she said as they continued to hug.\n\n\"I love you too Katie,\" Scott said back, but still sounding miserable. He did indeed love her, but he didn't want to hide how he was feeling. She asked him not to and he decided to not fight her about this.\n\nAs they separated from their hug Katie grabbed Scott's hand and kissed it. Scott also took a good look at Katie and realized she was looking different than he was used to. She had her hair up in a ponytail which in turn revealed more of her face. She also appeared to be wearing pajamas, but the top was somewhat low cut and was close to revealing her cleavage.\n\n\"You appear to be dressed quite comfortable,\" Scott commented.\n\n\"Well if we are going to be watching a movie together on the couch I want to be comfortable as we cuddle. Plus I usually wear pajamas on the weekend if I'm staying in. They are just too damn comfortable sometimes.\"\n\nScott chuckled for a second. \"I wouldn't know. I just sleep in athletic shorts and no shirt on.\"\n\nThat also caused Katie to chuckle. \"Well let's go to the family room and sit down. I have the movie ready to play off of Netflix.\"\n\nScott let Katie guide him to the family room, but he stopped when he saw the title of the movie she had chosen, A Silent Voice. It was a movie he had only seen once and it was when he was fourteen. He didn't care for it that much back then and wondered why Katie picked this movie. \"This is an interesting choice.\"\n\n\"I know, but I think it might be good for us to both watch together. I don't know if you've seen it, but I think it is something I need to watch.\"\n\nScott didn't feel like disagreeing with her about this as he sat down with her on the couch. Katie started the movie and cuddled up to him as it played. Two hours later and half a box of tissues, the movie was over and both of them were crying during the final scene.\n\n\"Wow,\" Katie said as she wiped a tear from her eye. \"That was...powerful.\"\n\n\"Yes it was,\" Scott agreed, lifting his glasses to wipe the tears from his eyes. \"So why did you choose this movie?\"\n\n\"Looked interesting and...thought it was something that would be somewhat good for me to watch.\"\n\nScott turned to look at his girlfriend. \"Because it helps you believe that your past with me won't define our future?\"\n\nKatie nodded her head. \"Yes. I know it's a made up story, but at the same time...I feel like if Shoya can find redemption, so can I.\"\n\nScott wrapped his arm around Katie and pulled her in to give you a kiss on the top of her head. \"Don't worry about me trying to jump off a balcony though. I'm much too happy to have you as my girlfriend to do something stupid like that.\"\n\nKatie closed her eyes and concentrated really hard to not laugh, but Scott just had to say what he said. He wouldn't be him if he didn't say something like that to try to lighten the mood. \"I love you Scottie.\"\n\nScott used his other hand to turn Katie's face towards him and tilt it upwards as he placed his lips on hers. \"I love you too Katie Paulson,\" he said as he separated his lips from hers.\n\nKatie looked into eyes for all of two seconds before she pulled Scott's head towards her and pressed her lips to his. Scott gladly kissed her back and he rubbed his hands over Katie's sides. After about a minute Katie swung her legs over Scott's so that she was straddling him while still kissing him. Scott's hands roamed her back as he rubbed her back. He felt no bra straps on her back and decided to take her pajama shirt off which Katie more than happily helped him get off. Katie then proceeded to take off Scott's shirt before re-engaging in their kissing as Scott cupped her breasts in his hands. Scott again broke their kiss, but this time he kissed her cheek and continued to kiss down to her neck.\n\n\"God I love you when you kiss me there,\" Katie said breathing hard, feeling more turned on than she had ever felt before at this point in her young life.\n\nHearing how hard Katie was breathing made Scott know that she was really enjoying this, but he wanted some as he leaned back and look at his beautiful girlfriend. \"I want to make love to you.\"\n\n\"I know,\" Katie said still trying to catch her breath.\n\n\"No,\" Scott said shaking his head. \"I mean I want to make love to you.\"\n\nKatie leaned forward and gave him a slow, gentle kiss. \"Then let's go to my bedroom so you can make sweet love to me.\"\n\nSuddenly Scott realized something. \"Shit, I forgot to buy condoms.\"\n\nKatie smiled and kissed him. \"Don't worry. I'm on the pill and there is no chance of me getting pregnant.\"\n\nThey both got up from the couch and walked to Katie's bedroom. They didn't bother closing the door because Katie's mom was on a business trip and wouldn't be home until the next day. As soon they entered her room, Scott pulled her close and kissed her, his hands at her hips, slowly sliding down her pajama bottoms. Once her bottoms were at her feet Katie stepped out of them and used her hands undo Scott's belt, unbutton and unzip his jeans and pull them down. Once Scott's jeans were down at his feet he also stepped out of them and pulled Katie's body against his, his hard penis pressing against her stomach.\n\n\"Fuck Scott, I want you.\" Katie whispered.\n\nScott guided her to her bed where she took off her comforter. They both got on her bed and continued to kiss each other with Scott on top of her. His penis was position right on top of her clit and she slowly rocked him back and forth to rub it.\n\n\"Scott, please stop teasing me,\" Katie begged. \"Please make love to me.\"\n\nScott sat up and positioned the head of his penis at the entrance to Katie's vagina. Slowly he pushed his penis past the entrance and Katie tensed up and closed her eyes as she felt him enter her.\n\n\"Are you ok?\" Scott asked concerned.\n\nKatie opened her eyes and smiled at her wonderfully sexy boyfriend. \"Yes. It's been a while since our first time and I still need to get used to you in me. Please Scottie, push on through and make sweet love to me.\"\n\nScott did as he was told and pushed his penis further into Katie until he couldn't go any further. He laid on top of Katie and made sweet love to her and they kissed. For the next half hour or so, they kissed, rubbed their hands over each other's bodies, kissed each other's necks, and did whatever else felt right as they made sweet love to each other. Katie hadn't thought she would like this slow pace of having sex, but she felt more turned than ever as Scott made sweet, slow love to her.\n\nEventually Scott could feel the burning inside his balls that told him he was ready to cum. He picked up the pace as he wanted to feel that sweet orgasm and unleash himself into Katie.\n\nKatie knew Scott must have been close to cumming because he picked up the pace. \"Fuck me Scottie. Cum inside me again.\"\n\nThat was all the encouragement Scott needed to hear as a minute later he came inside Katie and collapsed on top of her. \"Oh fuck,\" he whispered, feeling completely drained. After a couple of minutes he rolled off of Katie and his penis exited her vagina.\n\nKatie was starting to fall in love with Scott's penis being inside her and felt a little empty when it exited from her, but knew he couldn't stay in her forever...as much as she wished he actually could.\n\n\"Damn Scott. That was amazing.\"\n\nScott took a few moments to catch his breath, still not believing that he had sex with Katie again. \"Yes...yes it was. It helps that...I'm with the sexiest woman alive.\"\n\nKatie smiled at what Scott said. She considered herself that sexy, but still, hearing Scott say that made her feel really good. \"I'm with the sexiest man alive and who makes me the happiest woman alive.\"\n\n************************************************\n\n\"Well, I guess I should play this monopoly card,\" Katie said all too happily, \"and I want everyone to give me their wheat.\" Scott, Liz, and Steve gave her all the wheat cards they had in their hands. \"Now then, I'll trade four of them in for two stone and as I have the two for one wheat port. Upgrade my settlement to a city and,\" Katie then flipped over two more cards that gave her two more points, \"flip over my two other development cards to give me ten victory points and the game.\"\n\nScott's jaw dropped to the floor, still not believing that Katie had just won Settler of Catan having never played it before. \"How...what...are you sure you have never played this before?\" Scott asked, still dumbfounded by what had just happened.\n\n\"Never even heard of it until tonight,\" Katie said with a big smile on her face.\n\nSteve scratched his head also confused. \"I mean we helped you with your starting settlements but still...you made moves no one playing their first time would make.\"\n\n\"Well she did get a little lucky,\" Liz pointed out. \"She only bought four development cards and managed to get Road Building, Monopoly and two Victory Points.\"\n\n\"And my AMAZING boyfriend,\" Katie said as she leaned her head on Scott's shoulder, \"who helped me with some trades that greatly benefitted me.\"\n\nScott looked over and glared at his girlfriend. \"I won't be so nice next game.\"\n\nKatie giggled and then kissed Scott's cheek. \"Yes you will. You love me too much.\" Scott looked the other way, not wanting to admit that his girlfriend was right. \"Come on, look at me.\" He shook his head. \"You don't want to look at this pretty face because I'm right.\"\n\nScott rolled his eyes, sighed, and looked at his girlfriend. \"You are right on this one thing. Nothing else.\"\n\n\"You're only being so nice to her because she puts out,\" Liz commented.\n\nScott gave her a look. \"And that trade you did with Steve to get you your city and the next turn you gave him a favorable trade so he could have his, that wasn't because you two put out with each other?\"\n\n\"Of course not,\" Steve said defensively. \"I gave her that nice trade because she's a good kisser.\"\n\n\"Sure, and she gave you that favorable trade also because you are a good kisser.\"\n\n\"No, she made that trade because I'm going to reward her with an orgasm later.\"\n\nEveryone burst out laughing for a good minute before everyone calmed down. Scott started putting away the tiles and pieces to the game while Katie talked with Liz and Steve. She was happy to finally have another chance to hang out with them. Hanging out with just Scott was awesome and she loved spending time with him. However, she wanted to also hang out with Liz and Steve as they were his best friends.\n\nThe four of them sat at the table and chatted for another good hour before Steve told everyone he needed to get Liz home for dinner. Everyone hugged and said their goodbyes. Once Steve and Liz were gone, Scott asked Katie to sit on the couch with him in the family room.\n\n\"So I've been doing some thinking lately and I think there is something we should talk about.\"\n\n\"Ok,\" Katie said with a smile, trying to sound relaxed, but actually slightly nervous about what Scot wanted to talk about.\n\n\"Well...I think you need to try to make peace with your dad,\" Scott said very nervously.\n\nKatie's eyes nearly came out of their sockets. \"I did not just hear you say that.\"\n\n\"Umm, you did.\"\n\nKatie, with her jaw dropped, still couldn't believe Scott would even suggest such a thing. \"You know how I feel about Trevor. The fact my mom has made peace with him doesn't mean in any way that I have to.\"\n\n\"But you should still try. He is your dad.\"\n\n\"He is not my dad,\" Katie interrupted. \"He is a cheating bastard and always will be to me. I want little to nothing to do with him. No dad...\" Katie paused, trying to hold back the tears with the memory of her finding out Trevor was having an affair, \"...should put his daughter through what he did. No daughter should have to answer questions about why her dad is no longer living at home and is now with another woman.\"\n\n\"Can you see any way...\"\n\n\"No Scott,\" Katie interrupted again, but more sternly. \"There is no way I can see myself forgiving him. He could offer to pay for all of my college expenses, wedding, and first house and I would still refuse it all.\"\n\nScott looked down at the couch cushions, feeling defeated. He was hoping Katie would at least listen to his reasons she should just try to make peace with her dad. Try, not actually for herself to do it.\n\n\"Ok.\"\n\n\"Ok?\" Katie asked, not understanding why Scott wasn't pushing this more.\n\nScott shrugged his shoulders. \"You don't want to talk about it so I won't push it.\"\n\n\"You're going to give up just like that?\"\n\nScott looked up at her, angry and confused. \"Um yeah. What should I do? Force you to talk about this when you've made it 100% clear you don't want to and would never consider it?\"\n\n\"I don't know. Just stand up for yourself.\"\n\n\"Stand up for...\", Scott cut himself off and looked away, closing his eyes, trying to calm himself down. A few seconds later he turned to look at Katie. \"You can't tell me in no uncertain terms that you will not try to make peace with your dad and then tell me I should stand up for myself and force you to talk about it.\"\n\n\"What's wrong with getting into an argument especially if you believe it is worth talking about?\"\n\n\"Because you made it painfully clear you don't want to hear my argument,\" Scott yelled. \"I'm not going to start a fight for the sake of starting one.\"\n\n\"Maybe you should once in a while. Then people wouldn't think you are a pushover.\"\n\nScott pursed his lips, not liking at all where this was going. \"Do you think I'm a pushover?\"\n\n\"What does that have to...\"\n\n\"Do you think I'm a pushover?\" Scott interrupted.\n\n\"My opinion...\"\n\nOut of frustration Scott slapped the top of the couch hoping that would get Katie to finally answer him. \"Do you think I'm a pushover?\" Scott yelled.\n\nKatie didn't expect that reaction out of Scott. As soon as his hand slapped the couch cushion her eyes went wide with fear. She looked at Scott for the first time in fear for her safety. She had never seen Scott lash out in anger like that before...and it scared her. Scared her more than she wanted to admit.\n\nScott's parents heard him yell from their bedroom and immediately came to see what was happening. When they saw how Scott and Katie were looking at each other they decided it was best for the two of them to be separated. Jackie came to Katie and asked Katie if she wanted to go home. Katie nodded her head and Jackie guided her to the closet where her winter coat hung and helped her put it on. She gave her a hug and let her know that everything was going to be alright. Katie wanted to believe Jackie, but at the same time she didn't know what to believe at that moment.\n\nOnce Katie got into her car and left Jackie went back to the family room and sat down with Scott and Keith. \"Do you want to talk about what just happened?\"\n\nScott just glared at his mom, not wanting to talk about this at all. Katie hurt him, betrayed him. His anger was ready to explode and Keith could see it building as Scott let it fester inside him. \"Honey, go back to the bedroom and get the key.\" Jackie didn't argue with her husband as she did as she was told. Once she got the key, she handed it to her husband. \"Thank you. Let's go downstairs Scott and so you can get this anger out of you.\"",
        "Scott followed his dad to the basement to a locked door that only those closest to the family knew about it and knew what it was for. Keith put the key in the lock, turned it and opened the door. Inside was a punching bag and boxing gloves for hitting said bag. This room was setup this way because Keith knew that he might need to let his anger out onto something every once in a while. Little did he know that his son would end up using it more than he did. With all the bullying Scott went through Keith let him use the punching bag a lot, but only with his permission. He didn't want it to be the go to outlet for his anger. Hence why later on a lock was added to the door with only one key.\n\nOnce Scott had the gloves on his hand and Keith positioned himself behind the bag, he started to hit the bag as hard as he could. There was nothing pretty about how Scott chose to hit the bag. He just hit it and hit it and hit it, letting out all his anger and frustration. After a half hour of hitting the punching bag and tiring himself out, he finally backed away from the bag and sat back against the wall. After a minute Keith joined his son sitting against the wall.\n\n\"So, tell me what happened.\"\n\n\"You heard what happened. I went off on Katie and slapped the couch hard.\"\n\n\"Nice try. What led up to that? As far as your mom and I could tell everything was going fine. Something happened that lead to your blowup.\"\n\nScott sighed before deciding to just tell his dad the truth. \"I suggested that she try to make peace with her dad and she gave a very pointed statement saying that there is no way she would even try to make peace or forgive him. I decided to drop it and she said people call me a pushover. I asked her if she thought I was and she didn't answer until...well she never answered me.\"\n\n\"Did you want the truth from her or a lie?\"\n\n\"I know the truth. She obviously thinks I am because she refused to answer me.\"\n\n\"Well, you logic isn't wrong. But do you think it was wise to suggest that she try to make peace with her dad?\"\n\n\"She also wanted to see the real me and not hide my thoughts or feelings. Well...I don't think she anticipated seeing that side of me.\"\n\n\"No one does because we do our best to not show it. We mask and hide our anger until it has nowhere to go but out. That usually happens at the worst time.\"\n\n\"And it certainly did this time,\" Scott said tossing his head back in frustration. \"I hate being autistic dad.\"\n\n\"I know son,\" Keith said as he put his arm around Scott. \"There are times I've felt that way too.\"\n\n\"Would you change you who are? Get rid of the autism?\"\n\n\"At your age, I maybe would have said yes. Now though...I see how I benefit from it and don't. It is something that will always be a part of us. Just have to learn how to make the best with the cards we're dealt.\"\n\n***********************************************\n\nScott drove to school the next morning feeling depressed about what happened the previous night. After he and Sarah got out of the car, he entered the school building and went to his locker. Katie usually was already there waiting for him, but this morning she wasn't. He couldn't blame her after the way he went off on her and scared her. All throughout his next five classes he thought about how this was probably the beginning of the end of his relationship with Katie.\n\nWhen lunch came around he figured he would be sitting alone. He had texted Liz and Steve that he needed some space and they knew not to ask him why, just to give him the space he wanted. There was no reason at all for Katie to sit next to him, yet a minute after he sat down, she sat down across the table from him. However he didn't acknowledge her when she sat down. He didn't know what to say and didn't want to say something he shouldn't so he kept his head down.\n\n\"Last night I would have said you are a pushover,\" Katie began, which confirmed what Scott had suspected. \"But after you went off on me and the more I thought about it when I got home...you aren't a pushover. You just don't want to go through unnecessary drama.\" That statement caused Scott to look up at Katie who nodded at him. \"You go through things I could never imagine. Some of them because of me and others simply because you're autistic. Only you know yourself best for what is too much or how to avoid being overwhelmed.\" Scott was ready to start crying right there as Katie was saying those things. \"You've compromised who you are for a long time for your friends and to everyone here at school. It's time someone compromised for you so you can be who you are.\"\n\n\"Katie...you don't...\" Scott was speechless as he didn't know what to say. He lifted his glasses to wipe the tears that were forming in his eyes.\n\n\"Yes, I do. In fact...I texted my dad last night and asked him if he and I could have dinner together next Friday, just the two of us.\"\n\n\"Wait, what? Why did you do that? You made it sound like you didn't want to do that last night.\"\n\nKatie smiled and let out a little laugh through her nose. \"Well, I also realized that you wouldn't suggest me trying to make peace with my dad if you hadn't really considered it. And I do think I need to try. Hating him won't make my life any better and...I want to spend more time with my half-sister.\"\n\nScott reached over and put his hand into Katie's. \"I'm glad you're going to at least try.\"\n\n\"Yeah,\" Katie agreed. \"In the end I really have nothing to lose, but more to gain.\"\n\n\"I agree.\"\n\nThe two of them ate the rest of their lunch in a much happier mood. When lunch ended, Katie was glad to see that smile on Scott's face again. The smile that wasn't fake or forced. The smile that told her he loved her and he would do anything for her. It was time for her to do the same for him."
    ],
    "authorname": "DestinyReader",
    "tags": [
        "love",
        "relationships",
        "young",
        "passionate",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/love-of-autism-ch-11"
}