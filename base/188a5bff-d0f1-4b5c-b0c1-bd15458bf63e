{
    "title": "I Will Love You Forever Pt. 2 Ch. 16",
    "pages": [
        "Nick took Hana home still not quite believing that they were legally married. The first order of legal business would be taken care of as soon as he could get to the bank. He needed to add her to his accounts. He had already put her in his will to receive everything in case anything happened to him, but she was listed as his housekeeper. As soon as he had the chance, he was going to amend that too. \n\nThe only thing that marred his happiness was the memory of how his family had treated not only her, but everyone else the evening before. He pushed the memory away. They had all seemed to have forgotten about it and besides, it was a time to be happy. He reached over, took her hand in his and brought it to his lips.\n\n\"I love you Hana Alexander.\" He said and then kissed her hand.\n\n\"I love you too.\" Hana replied.\n\nShe was happy but also saddened that things with Nick's family had gone as they had. She could only hope that things between them got better. She looked over at Nick and smiled. He was as handsome as the day she first saw him. The few strands of gray in his hair did nothing to diminish his looks. If anything, they added to them. When he aged, he was going to look like a kinder version his father. The one thing that she wondered about was how he had managed not to become as racist as his family was. It was a question that she planned to ask at some point, but not tonight.\n\nNick pulled into the driveway and then into the garage. He jumped out of the car, ran to the passenger side and helped Hana out. Before she knew what was happening, he scooped her up into his arms and carried her into the house and upstairs to the bedroom.\n\n\"Are you going to let me get undressed?\" Hana teased even as she was loosening his tie.\n\n\"I suppose it would make things easier.\" Nick teased back as he set her on her feet.\n\n\"I'll be back.\" Hana said as she walked back to the door.\n\n\"Where are you going?\" Nick asked. \"The bed's over there.\"\n\n\"I'll be back.\" Hana said and left the room.\n\nShe went to the spare bedroom, opened the closet and took out a lingerie box. She sat the box on the bed and opened it. She took a deep breath as she removed the dark blue negligee out of the box. She had never worn anything like it and had only gotten it because Abby, Patricia and the other women had told her that a sexy nightgown was a must for a wedding night.\n\nShe held the gown up almost embarrassed by how sheer it was. It left nothing to the imagination and was shorter than anything she had ever worn to bed. She carefully undressed and hung the wedding kimono in the closet and put the negligee on. She looked at her reflection in the mirror and let her hair down. After examining her reflection for a moment more, she left the spare bedroom to go to Nick.\n\nNick was about to go see what was keeping her when she walked in. He stopped short when he saw her.\n\n\"Hana... Jesus... you're gorgeous!\" he said his voice soft.\n\n\"I am sorry that I took so long.\" Hana said.\n\n\"It was worth the wait,\" Nick replied as he drank in her appearance.\n\nWhen Hana started to walk toward him, he stopped her.\n\n\"Stay where you are,\" He whispered. \"I just want to look for a while.\"\n\nHana stood still and waited until Nick held his hand out to her. Hana took his hand sighing when he took her into his arms. Nick held her close burying his nose in the softness of her hair. Tears prickled his eyes as he realized that he didn't know how badly he had wanted to marry her until that moment. He tightened his hold on her and kissed the top of her head. They stood that way for several minutes before he picked her up, carried her over to the bed and gently lay her down on it.\n\nNick stood at the foot of the bed and looked down at her for several seconds before lying down next to her. They turned so that they faced each other. Nick put a hand on Hana's lower thigh and began to move it upwards.\n\n\"I don't have to hide what you are to me anymore,\" he said softly. \"No more having to remember to take off the wedding band when I go to work. Do you have any idea of how happy that makes me?\"\n\n\"I am happy too.\" Hana replied. \"I am only sorry that your family wasn't there.\"\n\n\"My family was there,\" Nick said. \"All of you are more like family to me than the family that I was born into. It was no major loss that that they weren't there. But I don't want to talk about them anymore. They don't matter.\"\n\nHis hand was now at the hem of the negligee and edging it up toward her waist stopping when he was at her hip. He made little abstract designs with the tips of his fingers that made their way to between Hana's legs.\n\nHana turned onto her back, opened her legs in invitation and gasped when Nick's fingers slipped between her vaginal lips. Somehow, although his touch was always gentle and almost reverent; it seemed even more so. The negligee was now bunched around her hips and the material, although light and sheer was irritating her.\n\nAs if reading her mind, Nick moved so that he could help Hana remove the gown. He kissed her lips, her neck and then took a nipple into his mouth and suckled it while his hand went back to between her legs. His cock throbbed as the sounds of Hana's moans filled his ears. His moans joined hers when he felt Hana's hand wrap around his cock and begin to slowly stroke it. Every so often she gently scraped her nails along the underside and across the head. \n\nHe removed his hand from her wet mound and placed it on top of hers indicating that he needed her to stop. He gave the nipple in his mouth a hard suck and then began to make his way down her body. When he got to the vee between her legs, he moved so that his face was inches away from her mound. \n\n\"Open as wide as you can.\" Nick said as he spread her outer and inner lips.\n\nHana didn't need to be told twice. This had become one of her favorite ways of making love. When she was positioned as Nick wanted, she felt his warm breath caress her clit. Her hips jerked in response seeking his mouth. A moment later, Nick had her clit between his lips and was sucking on it. Hana cried out as she felt one and then two fingers enter her and begin to slide in and out in time with the sucking. The orgasm seemed to start slowly and from some place far away, but it rapidly picked up in both speed and intensity. Hana grabbed a pillow and screamed into it as the orgasm washed over her.\n\nNick flicked his tongue and kept sucking trying to coax another orgasm from her. He reached up and took the pillow away from her. He didn't care who heard them. He was making love to and with his wife. When Hana came for the second time, only then did he move so that he covered her with his body and slid into her and stilled. Moments later, he began to thrust and grind against her. As his orgasm neared, he crushed Hana against him and slammed into her moaning loudly as his seed left his body and entered hers.\n\nAfterwards, Nick pulled the blankets over them, took Hana into his arms and stayed awake until her breathing told him that she was asleep.\n\n***\n\n\"It was a beautiful wedding.\" Patricia said as she handed Kenji a cup of tea. \n\n\"It was.\" Kenji agreed. \"It is hard to believe that today is also another anniversary date for us.\"\n\n\"I know.\" Patricia said as she sat down next to him. \"The past few years have certainly been an adventure.\"\n\n\"This is true.\" Kenji replied. \"But we are where we need and want to be and maybe things will become more... boring.\"\n\n\"I hope so.\" Patricia said as she set her tea cup down. \"I'm ready for some normalcy speaking of which I have something for you.\"\n\n\"I have something for you as well,\" Kenji said. \"Wait here.\"\n\nPatricia waited until he was upstairs before going to the library to retrieve his gift. It was a top of the line stethoscope that Paul Mynt had helped her pick out from a catalogue. It was actually the kind that he used. She spent the extra money and had it engraved. Along with the stethoscope, she also ordered engraved pens. To make sure that Kenji didn't know, she had the items delivered to Abby's house. Abby brought them over already wrapped one day when she was baby-sitting and they had been hidden in the library ever since.\n\nPatricia looked at the packages and then at the small envelope that held the small handmade card. When she made it, she was reminded of the first card and gift that Kenji had ever given her. The card was similar in its simplicity and sentiment. \n\n\"Kenji,\n\nI am so happy to be with you. If I had to do it again in order for us to be together; I would. Itsumade mo ai shite iru- I will love you forever.\n\nPatricia\"\n\nShe sat on the sofa wondering where Kenji would have hidden a gift. She was frequently in the closets of both bedrooms as well as the dressers. Kenji came down the stairs a moment later carrying a medium sized cardboard box.\n\n\"Where did you hide that?\" She asked when he was sitting next to her.\n\n\"The one place where you cannot reach.\" Kenji replied with a smile. \"The very top of the closet. You cannot see that high up.\"\n\n\"Sneaky.\" Patricia commented.\n\n\"Where was your hiding place?\" Kenji asked.\n\n\"I'm not telling.\" Patricia said. \"I might need it again.\"\n\n\"I would like for you to open yours first.\" Kenji said. \"One of the items is for both of us, but the rest is for you alone.\"\n\nPatricia took the box already knowing what the one item was. Kenji had mentioned that they needed to get more diaphragms. She had no idea of what else was in the box. She took the lid off and took out the contents. There were several small boxes that she recognized as the diaphragms, a jewelry box, an oblong shaped box and some other items.\n\n\"Open this one first.\" Kenji said handing her jewelry box.\n\n\"Kenji... what did you do?\" Patricia asked looking at the box.\n\n\"I bought my Kirei an anniversary gift\" Kenji replied. \"Open it.\"\n\nPatricia opened the box and gasped.\n\n\"Kenji... it's beautiful but...\"\n\n\"There are no buts.\" He said. \"\"it is but a small token of what I feel for you. Each of the stones is a birth stone with yours in the center.\"\n\nHe took the ring out of the box and slipped it on to her right hand.\n\n\"I wish that I could have done more.\" He said kissing her hand. \n\n\"This is perfect.\" Patricia replied throwing her arms around his neck. \"Thank you!\"\n\n\"There is more.\" Kenji said kissing her. \"Open this one next.\"\n\nHe handed her the oblong shaped box and waited for her to open it.\n\n\"A stethoscope?\" She asked. \"But I'm nowhere near ready for this.\"\n\n\"But you will be.\" Kenji replied. \"Before you know it, we will be building our practice together.\"\n\nPatricia looked at the stethoscope through tear filled eyes. She noticed that it was already engraved.\n\n\"Dr. P. Takeda\"\n\n\"Thank you!\" She said kissing him. \"I'm going to put it where I can see it.\"\n\nThe rest of the gifts were little things like pencils and school supplies for the coming semester.\n\n\"Your turn.\" Patricia said handing Kenji the smallest box.\n\nKenji unwrapped and then opened the box smiling when he saw the pens.\n\n\"I will think of you with every prescription and note that I write.\" He said touching the pens.\"\n\n\"I have one more gift.\" Patricia said handing him the box. \"It looks like we were both thinking the same thing.\"\n\nKenji read the card first and touched Patricia's face.\n\n\"Itsumade mo ai shite iru Kirei. That is something that will never change no matter what happens.\"\n\nHe opened the box and smiled. \n\n\"I will never use another.\" He said as he put the stethoscope around his neck.\n\n\"It's engraved too.\" Patricia said.\n\n\"Dr. K. Takeda\"\n\nKenji took Patricia into his arms and leaned back. He was remembering the first time that he got to hold her in the house. It had been under very different circumstances. Both of her parents had been angry enough that they didn't acknowledge her as their daughter. He remembered it as if it had just happened.\n\n\"Hey.\" Patricia said nudging him. \"No sad thoughts. It's our anniversary.\"\n\n\"I was thinking about the first time that I held you in this house.\" Kenji said. \"It seems that we have come full circle. I was also thinking that we never took our trip that Ralph gave us.\"\n\n\"We haven't had the time.\" Patricia replied. \"We could go next year after you graduate. God only knows that we'll need it before you start your internship.\"\n\n\"I think that is a good idea.\" Kenji replied. \"We have plenty of time to plan. Are you ready to go to bed?\"\n\n\"I am, but I need you to wait down here for a few minutes.\" Patricia said. \"I have one more surprise for you.\"\n\n\"Kirei...\"\n\n\"I won't be long.\" Patricia said. \"I'll be ready by the time you get the cups washed. I'll see you upstairs.\"\n\nPatricia gave him a quick kiss on the cheek and ran up the stairs before he could ask any more questions. She had been thinking of having another baby, but the timing just wasn't right, but if they waited until she was done with school; she would be too old. If they had another baby soon, they would have plenty of help while she went to school. For a brief moment, she thought about not inserting the diaphragm. She inserted the diaphragm deciding that talking to Kenji would be the better option.\n\nOnce in the bedroom, she undressed and hung up her clothes. She could hear Kenji's footsteps as he climbed the stairs. She needed a few more minutes. Just as she was about to call out asking for more time, she heard him go into the bathroom and close the door behind him. \n\nShe changed into the new nightgown that she had hidden under the bed. Unlike Hana's which was sheer, hers was more opaque and in Kenji's favorite color- green. She sprayed a little perfume on her pulse points and waited. She heard the bathroom door open and his soft footsteps come toward the bedroom and then stop at the children's room.\n\nA moment later, he was in their bedroom staring at her with his mouth open. \n\n\"Do you like it?\" Patricia asked when Kenji didn't say anything.\n\n\"I... I like it very much.\" Kenji replied as he looked her starting at her head, lingering on her breasts and crotch before continuing down to her feet and then back up. \"You are Kirei... beautiful.\"\n\n\"I realized when Abby, my mother and I were shopping with your mom that I didn't have anything nice to wear to bed... So I got this. \"Are you sure that you like it?\"\n\n\"Please... turn around for me.\" Kenji said. \"Slowly\" he added. \"I want to enjoy what is so beautifully wrapped.\n\nPatricia did a slow turn. By the time she was facing forward, Kenji was standing in front of her shirt off and slacks undone. \n\n\"I guess you like it.\" Patricia teased when she saw the bulge in his pants.\n\n\"Like is an understatement.\" Kenji said as he ran his hands up and down her arms. \"Do these come in other colors?\" he asked as he slid a strap over her shoulder.\n\n\"As a matter of fact, they do.\" Patricia replied. \"And they have other styles too.\"\n\n\"I would be most interested in seeing the other colors and styles.\" Kenji said his eyes glittering.\n\n\"Would you now?\" Patricia teased. \"I'll see what I can do, but in the meantime it's still our anniversary.\"\n\nKenji let his slacks fall over his hips and to the floor and guided Patricia to the bed.\n\n\"Aren't you going to hang your slacks up?\" Patricia asked glancing down at the crumpled slacks.\n\n\"Later.\" Kenji replied. \"As you say, it is our anniversary and you need to be cared for. Now lie back and let me take care of you.\"\n\nAs Patricia lay back on the bed, she wondered how many women were as lucky as she was to have a man so attentive and loving no matter what else was happening. She sighed when Kenji kissed the side of her neck before gently tugging on her earlobe with his teeth.\n\nPatricia moaned and felt a spurt of moisture between her legs as Kenji sucked and then gently chewed on her earlobe. She wrapped her arms around him holding him close as he released the earlobe and turned his attention to the neglected one.\n\nShe reached down between them looking for his hardness.\n\n\"No Kirei, not yet.\" Kenji said as he released the earlobe.\n\n\"But I want to touch.\" Patricia said as she reached for him again.\n\n\"Soon.\" Kenji assured her as he took her hands in his and kissed them. \"Let me explore for just a little longer.\"\n\nTen minutes later, Kenji was still exploring and Patricia was becoming impatient. He sucked her nipples through the thin fabric of nightgown and then without it to see if she reacted any differently. He did the same with the matching panties. He sucked her clit with and without the material deciding that while he didn't mind sucking her nipples through the material; he wanted to feel the throb of her clit against his tongue without it.\n\nHe pulled the gown up as he made his way back up Patricia's body kissing and licking the exposed skin.\n\n\"You taste good,\" he said in between kisses. \n\nWhen he reached her lips, he kissed her and eased into her. Instead of lying still for a few minutes as usual, Kenji began to thrust into her. He started off slowly and buried his face in her neck as he picked up speed.\n\nPatricia rocked against him wrapping her legs around him pulling him tighter against her urging him to go faster and harder. Kenji obliged coming just after she did with a moan and as gasp. Afterwards, he cuddled her close and kissed her. He planned to slip out of bed early to care for the children so that she could sleep late.\n\nA few minutes later, he felt her warm breath on his chest. He fell asleep a few minutes later toying with the soft material of the nightgown.\n\n****\n\nIn spite of seeing Taylor Dean, Isadora wasn't ready to go back. The time had flown by too fast. It was only the thought of seeing him and his friends in prison that made her pack her bags in preparation for the long train ride home. She noticed Noah talking to Byron, but didn't think too much of it. Of her brothers, Byron was the one with wanderlust. He was also the one who had asked the most questions about California and school. \n\nSupper that night was on the quiet side. No one was ready for their time together to end especially since they didn't know when it would happen again. Isadora had already told them that she wouldn't be home for the summer.\n\n\"I'm going to be taking summer classes so that I can graduate early.\" She told them.\n\n\"Do what you need to do\" her father said. \"We ain't goin' nowhere.\"\n\nThey stayed up even though Isadora and Noah had to be at the train station early. She saw Noah and Byron exchange mysterious looks and was about to ask what was going on when Byron began to explain.\n\n\"Mr. Jackson thinks that I'm smart enough to go to school. He says that I have to wait a while, but he wants me to learn to read and write better.\"\n\n\"Byron that's wonderful!\" Isadora exclaimed. \"What would you study?\"\n\n\"That remains to be seen\" Noah said. \"We'll see how he does with his studies. But as I told Byron, he'll have to work hard in order to be college material. He has to achieve and maintain excellent grades in order to be considered for my program.\"\n\n\"Who's going to teach him?\" Isadora asked.\n\n\"I'll figure that out later,\" Noah replied. \"I'll send a letter to Mr. Whitman with the information. Now if I may change the subject for a moment,\" Noah said looking around the table. \"I would like to thank you all for inviting me into your home. This is the best Christmas that I've had in years.\"\n\n\"It ain't much, but you always welcome here,\" Isadora's father said.\n\n\"Mr. Hughes, it isn't about the building,\" Noah replied. \"It's about the people in it and I thank you for making me feel welcome.\"\n\nEarly the next morning, Mr. Whitman was there to take Isadora and Noah back to the train station. For Isadora and her mother it was a tearful goodbye. Her brothers and sister in law stood back and waited their turn to say their goodbyes.\n\n\"Study hard,\" She whispered in Byron's ear. \"Noah Jackson is your way out of here.\"",
        "\"I will, I promise.\" Byron said hugging her tight.\n\nHer father hugged her last.\n\n\"We proud of you baby,\" He said kissing her cheek. \"Keep sendin' them letters.\"\n\n\"Isadora, we need to be going,\" Noah said gently.\n\nShe hugged everyone again and accepted the sack of food that her mother had packed.\n\n\"There are some biscuits and a few other things in there,\" Her mother said. \"It ain't much, but it'll hold you for a few days.\"\n\n\"Thank you mama\" Isadora said with a last hug.\n\nAs the car pulled away, Isadora looked out of the back window and waved until her family was gone from view. She shed a few more tears, dried her eyes and began thinking about the future. She was more determined than ever to finish school early so that she could finish her business in Mississippi. She didn't see the look of satisfaction on Noah's face as he glanced back at her. He was more than pleased.\n\nHe and Whitman chatted quietly leaving Isadora to her thoughts.\n\n\"I want her brother Byron to be taught to read and write better.\" Noah said. \"I don't know for sure, but he seems to have an aptitude for science and math.\"\n\n\"I can find someone.\" Whitman replied.\n\n\"No, I'll do it.\" Noah replied. \"You're too important to expose and I already have someone in mind. I just need to locate him.\"\n\n\"Alright, then I'll wait until I hear from you\" Whitman replied. \"Noah, you do realize that it's going to get ugly down here don't you?\"\n\n'Isn't that the way it goes?\" Noah asked. \"It always gets worse before it gets better. Just watch yourself. I would hate to see anything happen to you.\"\n\n\"This is true\" Whitman agreed. \"Noah, someday we need to talk about...\"\n\n\"No we don't,\" Noah said cutting him off. \"There's no point to it.\"\n\nWhitman sighed and said no more. Isadora's ears had perked up when that part of their conversation reached her ears. She was now more curious than ever about Mr. Noah Jackson.\n\nWhitman dropped them off at the train station and handed Isadora a stack of magazines. \n\n\"These are some other law journals that I came across. They're basically the same as the others, but they do offer another point of view on some things.\"\n\n\"Thank you\" Isadora said taking the magazines.\n\nA few minutes later, they were on the train. An hour later, they were headed back to California.\n\n****\n\nMoving around was getting easier by the day for Saul. Now that he had decided on his life's vocation, he worked even harder at his studies. He soon found out that Reggie while patient was nowhere as gentle a teacher as Joshua had been.\n\n\"We have to make up for lost time.\" Reggie told him. \"You're intelligent enough, but you need to be challenged.\"\n\nThe first things to go were the children's reading books.\n\n\"We're going to start with one of the classics.\" Reggie said as he handed Saul a copy of 'The Three Musketeers'.\n\nSaul paged through the book and looked at Reggie.\n\n\"Are you serious?\" He asked. \"I don't even know half of these words.\"\n\n\"I know that\" Reggie replied. \"But you will. What you might find interesting is that the author Alexandre Dumas is what would be considered a man of color. He is of French and Haitian descent. I'm quite certain if the whites knew this, they would stop reading this as well as his other works. At any rate, if you enjoy this; we can read some of his other works. 'The man in the Iron Mask' is one of my favorites.\"\n\nSaul looked at the book again and then at Reggie.\n\n\"So when do we start?\" he asked. \n\n\"We can start tonight if you like.\" Reggie replied.\n\n\"Reggie... what about your job?\" Saul asked. \"Isn't school going to start soon?\"\n\n\"I'm what's called an itinerate teacher.\" Reggie explained. \"I go from place to place staying for as long as I'm needed and right now, I'm needed here.\"\n\n\"Why don't we switch sleeping places?\" Saul asked. \"It's hardly fair that you sleep on the sofa after all, you're Aunt Cora's nephew.\"\n\n\"Actually I prefer the couch.\" Reggie said with a smile. \"I don't always rest well at night and that way I don't disturb anyone if I sit up or decide to go for a walk. We have a little time before supper,\" Reggie said \"why don't we get started?\"\n\n\"That's fine by me.\" Saul replied. \"Do you think that my mother got the letter yet?\"\n\n\"If she hasn't, she'll get it soon.\" Reggie replied. \"Have you thought about when you're going to contact that lawyer?\"\n\n\"I thought that I would wait until I heard back from my mother.\" Saul replied.\n\n\"That's a good idea.\" Reggie replied. \"Let's go out on the porch and get started.\"\n\n***\n\nErnie spent the rest of Christmas break getting ready for the following semester. He hadn't spoken to Kenji or Joel since the party, but he did talk to his parents about the group studying at the house.\n\n\"Of course!\" his mother said. \"Just make sure that you give me plenty of warning so that I can have refreshments ready.\"\n\n\"I would like to meet this young man Kenji.\" His father said.\n\nErnie wasn't surprised by their reactions. It made him a little more ashamed of his own attitude. The one thing that he appreciated was that Kenji admitted some unpleasant things about himself. Ernie hadn't missed the warning, but it told him that Kenji understood what he was going through. He thought about Maeve and how he hadn't wanted to tell her about his part in the group. He liked her even though he had just met her and was hoping to run into her again. There was something about her bubbly personality that put him at ease.\n\nHe made another decision. He was going to try to get into the summer group. He knew that there were at least two spots available, but the competition would be steep. He would still graduate behind Kenji and Joel, but he could cut off a semester and start his internship earlier.\n\nWith that goal in mind, Ernie began to study.\n\n*****\n\nThe rest of the winter passed quickly with no further incidents. Patricia thrived on the extra school work and did well with the math and science courses with the help of Kenji, Joel and Penny and everyone was counting down to graduation day. The list for the summer program had been posted and much to Ernie's disappointment, he wasn't on it.\n\n\"I am sorry.\" Kenji said.\n\n\"It's okay.\" Ernie replied. \"I knew that it was a longshot. Just think you and Joel will be done in a few weeks. That has to feel good.\"\n\n\"It does\" Kenji agreed. \"But you will graduate next year.\"\n\n\"I know\" Ernie replied. \"Has anyone approached you about a residency yet?\"\n\nKenji had been approached. He got the letter the week before, but hadn't said anything to anyone except family which included Joel and Penny. Joel and Penny both had received letters but they weren't from UCLA. Both of their letters had come from Columbia University in New York. Neither of them had responded yet hoping that they would receive a letter from UCLA. Neither of them wanted to go to the east coast, but would if they had to. They still had plenty of time to respond.\n\n\"I have been offered a position here\" Kenji replied.\n\n\"That doesn't surprise me\" Ernie replied. \"Congratulations!\"\n\n\"We are having a party the evening following the last day of class\" Kenji said. \"We hope that you will come.\"\n\n'I'll be there\" Ernie replied clapping Kenji on the shoulder. \"I'll ask my mom if she can make one of her pumpkin rolls.\"\n\nAs soon as they got the letter, Patricia began planning for the graduation party. Since she was still busy with classes, she delegated. Will and Sally were more than happy to help since they missed Nick and Hana's wedding. Their baby Emily was doing well and Diana was more than willing to help take care of her to help out.\n\nAs of yet, Patricia hadn't talked to Kenji about the possibility about another baby. Once the semester started they had both been busy with classes and family. Finals would be over in a few weeks and they would have a much needed respite. The other topic of discussion would be what school to send Ralph to school. Patricia always felt a little pang in her heart whenever she thought about it. Their babies were growing up so fast.\n\n**\n\nPatricia sat in the library studying for the chemistry final. Unable to concentrate, she lay the pencil down and looked out the window. It was a beautiful spring day-much too nice for being indoors. She could hear Hana in the kitchen making lunch for the children and decided to join them. It would also be a good time to talk about the party.\n\n\"Mama!\" Marie greeted when she saw her.\n\n\"Hi!\" Patricia replied. \"Are you being a good girl for grandma Hana?\"\n\n\"Yes mama\" Marie replied.\n\n\"Good-where's Ralph?\" Patricia asked.\n\n\"He is in the backyard reading\" Hana replied. \"Will you have lunch with us?\"\n\n\"That sounds good\" Patricia replied. \"I wanted to talk about the party anyway. Do you think that you can make the Tamago Maki? Mine are alright, but yours are so much better.\"\n\n'I would be pleased to help\" Hana replied. \"How many eggrolls would you like?\"\n\n\"As many as you can manage\" Patricia replied. \"They always go fast.\"\n\n\"It will be done\" Hana replied. \"We are very proud of you and Kenji.\"\n\n\"He's going to be a wonderful doctor isn't he?\" Patricia asked her voice filled with pride.\n\n\"Yes, but so will you\" Hana said. \"It will not be too long before you will be in medical school.\"\n\n\"It feels as though that's a long ways off\" Patricia replied.\n\n\"It will go faster since you are able to take more classes.\" Hana replied.\n\nThat was true. It was decided that since Ralph would be in school, Patricia would take a full course load. They still had to figure Kenji's schedule into the mix, but he was confident that it would work out. The one thing that Patricia wasn't looking forward to was not seeing Kenji on a daily basis. She pushed the thought aside and brought up another topic.\n\n\"Have you heard from Nick's family?\"\n\n\"His mother called once to apologize\" Hana replied. \"But that was a month after the wedding. I do not think that they will ever come to accept me. Nick says that it doesn't matter, but I know that it hurt him.\"\n\nPatricia regretted asking the question and quickly changed the subject.\n\n\"Thank you for helping with the kids while we get ready for finals. We really appreciate it.\"\n\n\"You are welcome\" Hana replied. \"Anything we can do to help. Patricia- why don't you and Kenji go away for a night after he graduates? Nick and I will care for the children.\"\n\nPatricia thought about it. She and Kenji had never gone on an overnight trip and she liked the idea. They still had the money from Ralph that they had earmarked for a trip. One night wouldn't use all of the money, there would still be plenty left for a longer trip. The more she thought about it, the more she liked the idea.\n\n\"I'll talk to Kenji about it\" She said.\n\nShe helped Hana with lunch and called the children. Once again, she was struck by how much they had grown. Ralph was looking more and more like his father with each passing day. Marie was a miniature version of her, only her eyes were a lighter brown and almond shaped. They were going to have their hands full once she discovered the opposite sex. Once she and Kenji were finished with for the semester, they would start preparing the children for Kenji's long absences. The preparation was for them too even though they hadn't said it. In many ways, the separation would be harder on them than it would be on the children. Suddenly, she missed him and needed to touch him. She glanced at the clock and inwardly groaned. Kenji wouldn't be home for another four hours.\n\n\"Patricia? Are you alright?\" Hana asked.\n\n\"I'm fine\" she replied with forced cheerfulness. \"Let's eat.\"\n\nHana started to say something, but didn't. Patricia knew that she could talk to her about anything. After lunch, Patricia read with the children and went back to the library to study. She forced herself to concentrate and was soon lost in her studies. She jumped when she felt a soft kiss on her neck.\n\nShe jumped out of the chair, threw her arms around Kenji's waist and hugged him tight. Kenji returned the hug. He had missed her as much as she had missed him.\n\n\"I missed you too\" he said kissing her.\n\n\"Have you seen the kids?\" She asked after they were sitting down.\n\n\"Yes, I said hello to them when I got home\" Kenji replied. \"How is the studying going?\"\n\n\"It's going well- Kenji your mom made a suggestion that I like.\"\n\nKenji listened while Patricia told him about Hana's suggestion.\n\n\"I think that it is a good idea\" He said after a moment's thought. \"It will do us good. Where would you like to go?\"\n\n\"I don't know, but it can't be far if we're only going to be gone for a night.\"\n\n\"We have time to think about it\" Kenji replied. \"I spoke with Ernie today.\"\n\n\"Is he coming to the party?\" Patricia asked.\n\n\"Yes, but he is disappointed. He was hoping to get into the summer program, but he didn't.\" Kenji replied.\n\n\"That's too bad\" Patricia said. \"But he only has one more year. Did Joel and Penny hear anything from UCLA yet?\"\n\n\"No, not yet\" Kenji replied, \"But it is still early.\"\n\n\"I hope that they don't have to move\" Patricia said glad that she and Kenji didn't have to leave.\n\n\"I hope not as well\" Kenji replied. \"Do you need help with your studies? We have a little time before dinner.\"\n\n\"Any and all help is appreciated\" Patricia replied with a grin.\n\n***\n\nIsadora left the registration office after signing up for the two classes that she was going to take over the summer. She had wanted to take a third, but Noah forbade it.\n\n\"You need time to relax and do whatever it is young people do\" he told her. \"Two classes are plenty.\"\n\nReluctantly, Isadora agreed with him, but that didn't mean that she couldn't find out if any of the syllabi for the following school year was available. More and more people were speaking to her, many of those in the class ahead her. Taking the nothing to lose approach, she stopped one of the students as she was leaving the office. The student was more than willing to give Isadora the syllabi that she had.\n\n\"I'm just going to throw them out anyway. I'll bring them on the last day of class.\"\n\nIsadora thanked the woman and hurried away. She was supposed to meet Maeve at the library. Maeve had wanted to take summer classes with Isadora, but couldn't. Her brothers and sisters would be home from school and she had to babysit. They agreed that Isadora would share what she learned in order to make things easier for Maeve in the fall.\n\n\"The only thing that I won't do is tell you what's on the quizzes and tests,\" Isadora told her.\n\n\"I already knew that,\" Maeve replied. \"But what you're going to do will help a lot.\"\n\nIsadora rushed toward the library and stopped short. Maeve was talking to a guy. After a second look, she realized that it was Ernie. She had met him at Kenji and Patricia's house at one of their gatherings, but hadn't really talked to him other than to say hello. She hadn't realized that Maeve knew him that well. At the gatherings, she only said a few words to him.\n\n\"Hi\" Isadora said as she walked up to them.\n\n\"Hi,\" Ernie said with a smile. \"I was just leaving; will you be at the party?\"\n\n\"We'll be there\" Maeve replied. \"Thanks for explaining things to me.\"\n\n\"You're welcome,\" Ernie replied. \"I'll see you later.\"\n\n\"What was he explaining?\" Isadora asked after Ernie walked away.\n\n\"He was the one that broke Joel's hand-did you know that?\" Maeve asked.\n\n\"I heard something about it,\" Isadora replied.\n\n\"He was explaining how he got into a group like that- of course it was the condensed version, but...\"\n\n\"You like him,\" Isadora finished for her.\n\n\"Is that an issue?\" Maeve asked.\n\n\"Not at all,\" Isadora replied. \"If Kenji and Patricia don't have a problem with him, why should I? Let's go, we've got less than an hour before Lenny picks me up.\"\n\nMaeve hesitated and then followed Isadora into the library. Not for the first time she wondered about Isadora's total lack of interest in the opposite sex. As close as they had become, the subject of men was taboo unless it was regarding classes.\n\n****\n\nSaul was thriving. Once he read Alexandre Dumas's 'The Three Musketeers', he couldn't get enough. Reggie was pleased with the rate at which Saul was learning and started calling him 'sponge'.\n\n\"We've got a long ways to go, but you're doing well\" Reggie told him. \"We need to start adding to your curriculum. I think that we'll add mathematics next.\"\n\n\"I like working with numbers\" Saul replied distractedly.\n\n\"What's on your mind?\" Reggie asked.\n\n\"I haven't heard from my mother yet\" Saul replied. \"I should have heard something by now.\"\n\nReggie agreed and made a suggestion.\n\n\"We'll write another letter and this time we'll add a phone number. We'll send money so that she can use a payphone.\"\n\n\"Whose number are we going to give her?\" Saul asked. \"None of the people here have a phone.\"\n\n\"True, but the train station does\" Reggie said. \"Your boss might not like it, but it wouldn't be a long call. All you need to know is that she got the letter and is taking precautions. We need to make sure that she says that it's a family emergency when she calls.\"\n\n\"How much time should we give it?\" Saul asked.\n\n\"I think that two weeks is a reasonable amount of time. After that, we'll have to think of something else. I just had an idea.\" Reggie said. \"What if you contacted that lawyer? I'm betting that he can help keep your family safe.\"\n\n\"Maybe, but let's try the letter first\" Saul said. \"I would like to do it tonight and mail it tomorrow.\"\n\nAn hour later, the letter was written.\n\n\"Dear mama,\n\nI hope that everything is alright. I haven't heard anything to tell me any different. Could you do something for me? When you get this letter, could you call this number? It will go a long way toward easing my anxiety. Here's the number 555-1212. It's my work number so when you call be sure to say that it's a family emergency. I'm there most days from six am to about three. If the mail comes after three, call the next day.\n\nYour son,\n\nSaul\"\n\nSaul had Reggie look over the letter to check for clarity and spelling.\n\n\"It looks good\" Reggie said as he quickly scanned the letter. \"Your writing and spelling have gotten much better.\"\n\n\"Thanks to you and Uncle Joshua,\" Saul said.\n\n\"It's been a pleasure\" Reggie said patting Saul on the knee.\n\n\"How much longer are you going to be around?\" Saul asked.\n\n\"I'll be here until you're ready,\" Reggie replied. \"And at the rate you're going, it won't be long.\"\n\n\"Where will you go from here?\" Saul asked.\n\n\"I don't know yet, more than likely back south; but we'll see.\"\n\nThey talked for a few more minutes before going in to supper. Saul wanted to read before going to sleep, he had to be at work early. He had no more run-ins with Dewey, but knew that he was being watched. It was only a matter of time before the big man confronted him again. It helped that a few more of the baggage boys decided that he was \"alright for a white boy\" and started eating lunch with him and Harry. \n\nSaul's time of relative peace briefly ended when Dewey finally managed to catch him alone. The morning had been so busy that no one, Saul included had time for a break. When he saw a break in the seemingly endless number of passengers needing help, Saul took off for the bathroom. Assuming that Dewey was just as busy as everyone else was, Saul didn't check for his whereabouts. He ran into the bathroom, did his business and turned to leave. Dewey was blocking the bathroom door.\n\n\"Who gonna help you now?\" He asked. \n\n\"Look,\" Saul said. \"I don't have anything against you, so why don't we just forget about this?\"\n\n\"But I has sumthin' gainst you,\" Dewey said as he stepped away from the door.\n\n\"What did I do to you?\" Saul asked. \"We've never met...\"\n\n\"You white ain't ya?\" Dewey broke in. \"Anybody who white did sumthin' to me.\"\n\n\"All of this is because I'm white?\" Saul asked. \"Dewey, I personally have done nothing to you or to anyone that you know. I am also not responsible for every white person who happens to be a racist or who treats you like shit. Tell me how beating my ass and possibly killing me is going to change anything. Are you going to kill every white person that you see?\"",
        "Dewey paused.\n\n\"Let's take this a step further\" Saul said. \"Let's say that you kill me. Are you ready to go to prison for killing a white man? You hate white people, I get it and I even understand it but is it worth spending the rest of your life in prison for? I've been there and I'm telling you that it's not a place that you want to be.\"\n\n\"How about I just beat your ass and don't kill ya?\" Dewey asked. \"I can make it so that you can't come back here to work.\"\n\n\"Dewey, the only way that I'm not coming back to work is if you kill me.\" Saul said standing straighter. \"You need to understand something, I'm not afraid of you. If I have to kill you to protect myself then I will. I'll feel bad about it, but I will do it. The way I see it is that we have two options. One, you kill me and go to prison for it or two; we walk out of here and stay away from each other. This little talk remains between us.\"\n\nTime slowed as Saul waited for Dewey to decide what he was going to do. He kept his eyes on the man looking for any sign that he was going to be charged. Suddenly, Dewey turned around and walked out leaving a very relieved Saul alone in the bathroom. Saul slumped back against the sink. He had been lucky and he knew it. He would still have to watch himself, but he thought that the issue with Dewey was resolved.\n\n\"Where have you been?\" Harry asked when Saul came back to their station.\n\n\"I had to take a leak.\" Saul replied.\n\n\"We just saw Dewey and thought the worst. Did you see him?\"\n\n\"Yeah, I saw him in the bathroom\" Saul replied. \"We talked and it's alright.\"\n\n\"He didn't kick your ass?\" Harry asked surprised.\n\n\"No, but we agreed to steer clear of each other.\" Saul replied. \"Are things still slow?\"\n\n\"For now\" Harry replied. \"We'd better eat while we can. I heard that there's another full train coming in about an hour.\"\n\nSaul felt proud as he listened to Harry talk. His command of the English language had vastly improved ever since he started teaching him what he knew. His mind was quick to grab and understand some of the concepts that he-Saul had had difficulty with. On occasion, the two men discussed their futures.\n\n\"I never thought about it\" Harry said one day when Saul asked him what he wanted to do with his life. \"This is all I know and you know that the future of the black man is up to the white man and I mean no offense by that.\"\n\nSaul couldn't deny the truth in what Harry said, but he couldn't believe that it would and could never change.\n\n\"But things can and will change\" Saul replied. \"The president has a committee...\"\n\n\"Saul, let me tell you something,\" Harry broke in, \"a committee don't mean nothin'. All they do is sit around saying pretty words. It's easy for you to say that things are gonna change, but friend or not; you still white. You will always be believed over me. That's just the way it is. But- I hope that you're right. I'm not going to believe it until I see it.\"\n\nThat discussion took place the week before and Saul was hoping to finish it. A loud whistle blew indicating that a train was coming in took care of that.\n\n\"Damn!\" Harry exclaimed. \"So much for lunch.\"\n\nThey didn't get another chance to sit down for three hours. The train had been filled to capacity and as hard as they tried not to keep people waiting, it happened. Several people refused to pay because they had to wait. Finally the supervisor got involved.\n\n\"Look here folks\" His voice boomed. \"These boys are going as fast as they can. Now, if you're in a hurry; feel free to take your own bags to your vehicle. But if you decide to wait, there will be no discounts or courtesy deliveries given.\"\n\nWith that, he turned around and walked away ignoring the grumbling passengers as he did so. In the end everyone ended up paying, but the truly disgruntled gave no tips. As they walked home, Saul brought up the conversation about the future that had been interrupted the week before.\n\n\"So Harry, do you really believe that things won't change?\"\n\n\"For you maybe\" Harry replied. \"No matter how much schooling I have and how well I dress, I'll be nothing more than a nigger. You on the other hand can walk out of here, put on nice clothes and blend right in. Let's think about this, you got professional athletes who are black- are they treated any better than I am? Hell no. The same goes for the black entertainers...\"\n\n\"Yes, but Harry; what about the changes that have happened?\" Saul asked. \"Interracial marriage is now legal. Laws are being passed...\"\n\n\"How does that help me?\" Harry asked. \"So what- I can marry a white woman now. How does that help me get a better job? How does that make me eligible to rise up in the ranks? You can say all you want about the laws that are being passed, but who's going to make sure that they're followed? Other white people that's who! So tell me, how does that help me?\"\n\nSaul stopped walking and looked over at Harry. They had discussed this issue before, but Harry hadn't been so-angry. \n\n\"I'll tell you something else\" Harry continued. \"I've been reading the papers and seeing what's going on in the Southern states and it isn't right! Your damned laws aren't doing anything!\"\n\n\"It takes time...\"\n\n\"You know, let's not talk about this anymore\" Harry said as he started walking away. \n\nSaul watched him walk away with a feeling of disquiet. The person that he had just been talking to was different somehow. It was a subtle change, but it was a change nonetheless. He decided that he wouldn't bring the subject up again unless Harry did.\n\n\"Are you coming?\" Harry called back when he realized that Saul wasn't with him.\n\nSaul jogged to catch up with him, gave him a glance and then looked away. His friend was changing.\n\nThe phone call from Saul's mother came a week later.\n\n\"Saul! Get your ass in here\" the on duty supervisor called. \"Some woman calling- says that it's a family emergency!\"\n\nSaul ran into the office not looking into the angry face of the supervisor. He snatched the phone from the desk and spoke into it.\n\n\"Mama!\"\n\n\"Hey Saul\" his mother replied. \"Is everything alright? I got your letter and it scared me.\"\n\n\"I'm fine, are you moving?\"\n\n\"No, can't afford to- but we'll be careful. Are you sure that you want to do what you're planning?\"\n\n\"I have to, I have to go now; but please be careful.\"\n\n\"You too and Saul? I may not understand or agree with what you're doing; but I am proud of you for keeping your word.\"\n\n\"Get off the phone!\" The supervisor bellowed.\n\n\"Mama I gotta go, kiss everyone for me\" Saul hung up and left the office without offering any explanations. He wished that his mother would reconsider moving, but he recognized the tone in her voice. She wasn't leaving even if money wasn't an issue. Reggie's thought about the lawyer being able to help him came to mind. \n\nHe made a unilateral decision, his family was going to move whether they wanted to or not. The only way that was going to happen was if the lawyer helped him. The next thing was going to be making contact with the lawyer. His next day off wasn't until the weekend when the lawyer would be off. That left calling him and hoping that he would agree to meet with him during the weekend. He couldn't ask to use the office phone which meant a payphone. He felt around in his pocket for change, but then realized that the number was at home. \n\n\"Damn it!\" he cursed and then stopped realizing that it was no way for a future minister to talk. He took a deep breath and realized that it was probably for the best that he didn't make the call anyway. He could take the evening to organize his thoughts and make the call during his lunch break the next day.\n\nThe rest of the day passed slowly because none of the incoming trains were full. \n\n\"So is everything alright with your mama?\" Harry asked.\n\n\"They're fine\" Saul replied.\n\n\"Look, I'm sorry that I blew up a last week. I guess I just had some things on my mind and didn't want to talk about things that aren't going to change.\"\n\n\"Understood\" Saul replied. \"Is it something that I can help you with?\"\n\n\"No, it's alright now. By the way, I read that book you gave me. I didn't know what some of the words meant, but I still liked it. Is Alexandre Dumas really a black man?\"\n\n\"He's part Haitian and French\" Saul replied.\n\n\"And white people read his books?\"\n\n\"Reggie seems to think that many whites don't know about his heritage. If you want, I can go to the library and get some of his other book for you. Better yet, why don't we go and get you a library card?\"\n\n\"I... I think that I would like that. Saul, I want to tell you something. No matter what happens, I'll always consider you a friend.\"\n\n\"Harry what's going on with you?\" Saul asked. \n\n\"Nothing, I just wanted to tell you that. When can we go to the library?\"\n\n\"We can stop by on the way home if you want.\" Saul replied. The feeling of disquiet was back.\n\n\"Not today, I have to get home- what about tomorrow? We get off early.\"\n\n\"Sure, that sounds good. That way I can return some books that I borrowed.\" Saul replied.\n\nAfter their shift, they walked home in relative silence. Saul kept glancing over at Harry wondering what was going on with him.\n\n\"Aunt Cora's making chicken potpie for dinner, want to come?\"\n\n\"Nah, I got to get home. I'll see you tomorrow at work\" Harry replied.\n\nSaul gave Harry a sharp look, but didn't say anything. They usually walked to work together on the days that they got off early. They parted ways at Saul's house. Saul watched Harry walk away with a sinking heart. \n\nJoshua met him at the door.\n\n\"Harry isn't coming?\"\n\n\"No, he said that he had to get home\" Saul replied.\n\n\"He turned down Cora's chicken potpie?\" Joshua asked surprised.\n\n\"I know, that surprised me too\" Saul replied. \"He's been acting kind of strange lately.\"\n\n\"Well, come on; supper's waiting.\" Joshua said as he headed toward the kitchen.\n\nReggie was already in the kitchen when Saul and Joshua got there.\n\n\"It's about time!\" he exclaimed. \"I was about to start without you.\"\n\n\"I'm glad that you didn't\" Saul teased. \"There wouldn't be anything left. By the way, I heard from my mom today.\"\n\n\"And?\" Reggie prompted.\n\n\"She isn't going to move but she promised to be careful.\"\n\n\"Does she understand what you're going to do?\" Joshua asked. \n\n\"She does and while she doesn't agree or understand it, she says that she's proud of me. One of the reasons that she gave for not moving was money\" Saul said. \"I think that its time that I called that lawyer.\"\n\n\"I agree\" Reggie said as he reached for the potpie. \"I have a question though. Does this Ellis know where you are?\"\n\n\"I... I don't know\" Saul replied. \"I doubt that mama would have told him even if he asked. What are you thinking?\"\n\n\"If he doesn't know where you are, that would provide a measure of safety for your family\" Reggie replied. \"Not only that, how many prisoners have been released since you left? Maybe he'll suspect one of them before he thinks about you.\"\n\n\"Maybe- but I don't think so\" Saul replied. \"I don't know why I think that, but I do.\"\n\n\"Son,\" Joshua said softly, \"you know that this could get real ugly don't you? You'll probably have to go back to South Carolina if this thing goes to trial.\"\n\n\"I know\" Saul replied. \"I'll do what I need to.\"\n\n\"Your mother is right to be proud of you\" Cora said patting Saul's hand. \"I know that we are.\"\n\nSaul swallowed the lump in his throat. He had come to love Joshua and Cora as if they were family.\n\nLater that night as he lay in bed, he thought about the events that brought him to where he was. It started with him accidentally killing his father. In an odd kind of way, it had been a blessing in disguise. Not that he would have killed anyone to get to where he was, he might have gotten there anyway; but going to prison had put him in the path of Jacob Lincoln. \n\nIt also put him in the path of Lawrence Goodman whose money had gotten him to California. Saul was almost certain that Lawrence was spinning around in his grave at the way in which the money that he had given him was being used. He chuckled softly and then turned his attention to his pending phone call to Nick Alexander. In his mind, he organized the conversation as he would like to see it happen. His belly filled with butterflies as he thought about the ramifications of what he was about to do. \n\n****\n\nNick sat in his office reading briefs while Hana made dinner. His stomach rumbled reminding him that lunch had been several hours ago. He and Will were keeping a close eye on the whereabouts of any known Klansmen in the area as well as Andrew Kelly's group. It helped that Peter was now a full time student and could keep an eye on things at the college.\n\nLike Kenji and Patricia, he was more than ready for a time free of drama and danger. He hoped that that time was now, but his gut was telling him otherwise. In any event, he was determined to enjoy the peace while it lasted. \n\nHis mother had called twice since he and Hana married and neither conversation had gone well. Hana knew about the first call, but not the second one. He hadn't told her because it would only upset her and bring back the feelings of guilt at the way she had treated Patricia. The first phone call his mother had apologized, but it was a conditional apology.\n\n\"I'm sorry for the way that things went, but...\"\n\nThe second phone call was more of the same with an exception.\n\n\"Our wedding anniversary is in two weeks and we'd love for you to come to the dinner, but please don't bring her. I wouldn't want anyone to say anything to hurt her feelings-\"\n\n\"Mom,\" Nick said interrupting her, \"Hana is my wife and if she isn't welcome to come to dinner, then neither am I. Have a wonderful anniversary dinner.\"\n\n\"It isn't that she isn't welcome\" his mother insisted. \"It's just that... well, you know; it's our anniversary and-\"\n\n\"I get it\" Nick replied sharply. \"As I said, have a good time.\"\n\nNick flushed with anger when he remembered the conversation. It faded a little when he remembered that while his own prejudices weren't as severe, they had still been prejudices. It had taken meeting Kenji and Patricia to change that. He supposed that he could cut his family a break, but he had no intentions of exposing Hana to their hatred. It was enough that she had to face it from the outside world.\n\nWhat concerned Nick was what was happening in Korea. Most people couldn't tell the difference from a Japanese person from a Chinese let alone a Korean. All they would see was the slanted eyes and go from there. He sighed heavily and tried to concentrate on the brief in his hands. The feeling that things were going to get worse again settled in the pit of his stomach. \n\nHe was becoming more concerned about the civil rights situation in the United States. Blacks were becoming more disgruntled and rightfully so. Even though laws were being passed, he wondered who was going to make sure that they were abided by. There were Klan sympathizers in congress, both houses and even in the president's cabinet. He even worked with a few in his office. To their credit, they kept their opinions about Hana to themselves but he knew that he was the topic of lunch time conversation.\n\nUnable to concentrate, Nick laid the brief down on the desk and closed his eyes. For reasons that he didn't understand, Andrew Kelly's parents entered his thoughts. He couldn't even begin to fathom what they must have felt and what they were going through. It had been such a useless waste of not only his life, but that of Vincent Vaughn.\n\n\"Nick!\" Hana called. \"Dinner is ready!\"\n\nNick stood up, stretched and went to the kitchen where Hana was waiting for him. He walked over to her and hugged her.\n\n\"Nick? What is wrong?\" Hana asked hugging him back.\n\n\"Nothing- I just wanted to hug my wife. Is there a problem with that?\" he teased.\n\n\"No, but I also know when something bothers you.\"\n\n\"I was just thinking about Andrew Kelly's parents and the waste of life because of hatred. Hana, I could have been like that. I mean look at my family. They're just as racist as he is and I hate to admit it, but I felt the same way that they did.\"\n\n\"I don't believe that\" Hana replied. \"If that were true you wouldn't have helped Kenji and Patricia as you did. You would not have helped me and Joben's daughter. You wouldn't have placed yourself in harm's way for me and Kenji and we wouldn't be standing here as man and wife.\"\n\n\"But I still held those beliefs\" Nick countered. \"There is no degree of racism is there? It's like saying that someone is a little bit pregnant when either they are or they aren't. Either you're a racist or you're not. I may not have wanted to hurt anyone and I may not have called anyone derogatory names, but the sentiment was there.\"\n\n\"Then that makes me as guilty as you are and I cannot say that I did not use the derogatory terms. I stood by and did nothing while Hiroshi and Joben planned to harm Patricia\" Hana replied. \"But what matters is that we are no longer those people. We cannot forget what we were, but we cannot allow it to color what we have become.\"\n\n\"I know that you're right\" Nick said hugging her tighter, \"but it doesn't make me feel any better about myself or my family.\"\n\n\"I understand\" Hana replied. \"Even after all of this time, I still feel a deep guilt for what I did or should I say, what I didn't do; but it is the past. Kenji and Patricia have forgiven me and now I think that it is time that I finally forgive myself as you should forgive yourself.\"\n\nNick hadn't realized until that moment how hard Hana had been on herself. \n\n\"I think that you're right\" he said after a few seconds. \"You're one smart lady\" he added with a kiss.\n\n***\n\nSaul dressed for work double checking for Nick's number. As an afterthought, he put more change in his pocket. He replayed what he planned to say in his head. He was scared but determined to follow through on living up to his promise to Jacob. The question was, would he be believed and what could be done about it. He was still concerned about his family, but hoped that Reggie was right about Ellis not making the connection between him and whatever happened.\n\nHe saw Harry and waved at him as he put his lunch away. Harry smiled and waved back relieving Saul of any anxiety that he had about him. Thankfully the morning was busy but not so busy that it would interfere with his lunch break. \n\nAs soon as it was time for lunch, he took off for the payphones hoping for one that was in the corner and not being used. Luck was with him. Saul picked up the receiver, put it back down and then picked it up again. He took the piece of paper with Nick's number out of his pocket, looked at it and took a deep breath. The enormity of what he was about to do took his breath away. He was potentially placing his entire family in danger because of a promise.\n\nHe took a deep breath and dialed the number. To his surprise, Nick answered the phone.\n\n\"Nick Alexander here.\"\n\nSaul's mouth went dry and he couldn't speak.\n\n\"Hello?\"\n\n\"Ummm hello, is this Mr. Alexander?\"\n\n\"Yes it is, may I help you?\"\n\n\"I... you don't know me, but my name is Saul Mullins.\"\n\n\"How can I help you Mr. Mullins?\" Nick asked.\n\n\"I'm the one who sent you that letter a while back... the one warning you about Ty...\"\n\n\"Where are you?\" Nick interrupted.\n\n\"Before I tell you that, I have more information\" Saul said. \"But-I need your help first.\"\n\n\"What kind of help?\"\n\n\"The information that I have could put my family in danger. I need to know that they'll be safe before I tell you anything.\"\n\n\"Where are they?\"\n\n\"South Carolina.\"\n\n\"Let me explain how this works,\" Nick said, \"you have to give me something. I know that you're reliable because the information in the letter you sent was accurate, but this is another matter.\"\n\n\"Alright, how about this?\" Saul asked, \"Warden Ellis.\"",
        "Saul heard Nick's sharp intake of breath and knew that he had his interest.\n\n\"What about him?\" Nick asked his voice intense.\n\n\"I'm not saying anymore until I know my family is safe.\" Saul replied.\n\n\"What is it that you want me to do?\" Nick asked.\n\n\"Get them out of town. If Ellis figures out that I'm the one who gave you the information, he'll go after them.\"\n\n\"Where can I reach you?\" Nick asked.\n\n\"I work at the train station\" Saul replied.\n\n\"You're here in California?\" \n\n\"Yes but don't come here. If you want to meet, it'll have to be somewhere else.\"\n\nThe line went silent as Nick thought about his options.\n\n\"Will you come to my office?\"\n\n\"No.\" Saul replied. \"I don't want to take any chances that someone there knows Ellis.\"\n\n\"Alright, you tell me where and when.\" Nick said.\n\n\"Are you busy Sunday afternoon?\"\n\n\"No, that'll work. Where?\"\n\n\"The sitting area behind the library. I work until two and it'll take me twenty minutes to walk there.\" Saul replied. \"I'll tell you where my family is and you can tell me how you can help me.\"\n\nSaul hung up and wiped the sweat from his forehead. It had begun- whatever it was.\n\n**\n\nNick hung up and called Will into his office.\n\n\"You're not going to believe who I just talked to.\"\n\n\"Who?\" Will asked as he sat down.\n\n\"Saul Mullins.\"\n\n\"Alright, I'll bite. Who is Saul Mullins?\"\n\n\"Saul Mullins is the one who sent me the letter about Lawrence Goodman and his plans. He's here in California.\"\n\n\"What? What does he want?\" \n\n\"For one, he wants his family protected.\"\n\n\"From who?\" Will asked.\n\n\"Your cousin- Warden Ellis\" Nick replied.\n\n\"What? What does he know about Ellis?\" Will asked his interest piqued.\n\n\"I don't know\" Nick replied. \"He won't talk until he knows his family is safe. I'm meeting him on Sunday at the library.\"\n\n\"I want to be there\" Will said.\n\n\"I figured as much, but you can't say anything about knowing Ellis. He'll bolt. That's why we're not meeting here.\"\n\n\"I wonder what he has on him\" Will mused.\n\n\"I don't know, but whatever it is; it must be huge\" Nick said leaning back into his chair. \"Oh and Hana wanted me to ask if you wanted to come over for dinner tonight. I got busy and forgot to ask.\"\n\n\"I think that it's alright, let me call Sally and check\" Will said as he reached for the phone. \"It's a go\" he said after a minute. \"She said that she'll make something for dessert.\"\n\n\"Sounds good\" Nick said.\n\nAfter Will left his office, Nick began to wonder just what it was that Saul knew about the warden.\n\nSunday afternoon finally came. Nick and Will were at the library fifteen minutes before Saul was due to arrive.\n\n\"Do you think he'll show?\" Will asked.\n\n\"I think so\" Nick replied. \"He sounded nervous, but determined. The question is whether we can protect his family in a way that he deems acceptable. If we can't, he won't talk.\"\n\nSaul showed up on time and looked at the two men.\n\n\"Who's that?\" he asked looking at Will.\n\n\"A friend that can help me meet your request\" Nick replied. \"His name is Will.\"\n\nSaul looked at Will for a moment and then turned his attention to Nick.\n\n\"You already know that I'm good for any information that I give you. The difference is that this could involve my family. I won't tell you anything else until I know that they're safe.\"\n\n\"Where are they?\" Will asked.\n\n\"They're still in South Carolina not far from the state penitentiary. I want them moved from there.\"\n\nWhat Nick and Will didn't know was that Saul would have still given them the information, but would have found another way to do it if they couldn't guarantee the safety of his family.\n\n\"This is going to take some time\" Nick said. \"I need a way to reach you.\"\n\n\"I come here about once a week to check out books\" Saul said. \"Usually it's Thursdays because I get off work early.\"\n\n\"Where are you staying?\" Nick asked.\n\n\"You don't need to know that,\" Saul replied. \"The people that I'm staying with have nothing to do with this and I want to keep it that way.\"\n\nWill and Nick looked at each other and nodded.\n\n\"As I said,\" Nick said, \"This is going to take some time.\"\n\n\"I understand\" Saul replied. \"You know where to find me.\"\n\nNick and Will watched Saul walk away. Both of them had the same thought.\n\n\"We need to watch him\" Will said.\n\n\"Agreed, I'll call Charles in the morning.\"\n\nAs Saul walked home, he felt a sense of relief. He was finally beginning to pay hos debt to Jacob. He looked at the cheap watch on his wrist. If he hurried, he could be home in time to study before dinner and go to the evening service. He was also hoping to see a certain very attractive, young black woman whom he had yet to speak to.\n\n****\n\nThree weeks passed and still no letter came from UCLA. It was to the point where Joel and Penny had to make a decision.\n\n\"How much longer can you wait?\" Patricia asked.\n\n\"Another week\" Joel replied. \"But I'm not hopeful. Even if one of us gets a letter of invitation, the other has to go east.\"\n\n\"What are you planning?\" Kenji asked.\n\n\"We're going to accept the offer from Columbia University\" Penny replied. \"Before we go, we want to get married and we were hoping that you and Kenji would stand up with us.\"\n\n\"We would love to!\" Patricia exclaimed. \"When?\"\n\n\"As soon as possible-actually, we were hoping to get married here...\"\n\n\"You could have the wedding during the party!\" Patricia said. \"It would be perfect! Everyone will already be here. What do you think?\"\n\nPenny looked at Joel who nodded at her.\n\n\"We accept\" she said happily. \"Tell me what you need from us.\"\n\n\"Nothing... wait... those cookie things you make and I'm leaving the cake up to you.\" Patricia replied.\n\n\"Do you think that your mom can make the cake?\" Penny asked.\n\n\"I'm sure that she would, we'll call her later and ask. I really wish that you didn't have to go so far away.\"\n\n\"Us too, but look at it this way, it's another place for you to come and visit.\" Penny said taking Patricia's hand and trying not to cry.\n\n\"Maybe you'll still get a letter\" Patricia said.\n\n\"Maybe,\" Joel said, \"but I think that all of the letters have gone out.\"\n\n\"When will you leave?\" Kenji asked.\n\n\"Soon after the party\" Joel replied. \"I've already done some checking into the housing situation in New York. I made a deposit on an apartment close to the hospital even though we haven't seen it yet.\"\n\n\"That's kind of risky isn't it?\" Patricia asked.\n\n\"Ordinarily yes\" Penny replied. \"But the apartment was occupied by another student. Joel talked to him and while it's small, it's within walking distance of the hospital so we won't need a car. My parents are going to take a look at it too.\"\n\n\"Are you going to wait the week out?\" Patricia asked.\n\n\"No, we're going to call tomorrow and accept.\" Joel said. \"But you know that no matter where we are, we're still friends right? We're only going to the other side of the country and our home is your home.\"\n\n\"I know- but I'm going to miss you\" Patricia said.\n\n\"We'll miss you too, but there's the telephone and the mail.\" Penny said wiping away a tear. \"And we'll come back to visit during breaks.\"\n\n\"Penny, will your parents come to the wedding?\" Patricia asked. \"I know that they had a problem with the fact that Joel is Jewish.\"\n\n\"They'll be here\" Penny replied. \"They've gotten used to the idea that I love him and I won't give in. the fact that he was accepted at Columbia helps. They even offered to let us live with them.\"\n\n\"I'm glad\" Patricia said. \"Do they need a place to stay?\"\n\n\"No, but we have another favor to ask.\"\n\n\"Anything that you need,\" Kenji replied.\n\n\"Can Joel stay here when they get here? They won't look too kindly on the fact that we're living in sin.\" Penny said.\n\n\"Of course he can stay here,\" Kenji said. \"As you say, our home is your home. You will always have a place with us.\"\n\nThe rest of the evening was spent in planning the party/wedding. Hattie was thrilled to be asked to make the cake and wondered when they would go shopping for a dress.\n\n\"God I don't want to leave you guys\" Penny said tearfully. \"But I guess that's life isn't it?\"\n\n****\n\nSaul had gone to the library ever Thursday for the past two weeks. This was the third time since he met with Nick and Will. He was beginning to wonder if they had forgotten about him. He was about to check out his books when he heard Nick behind him.\n\n\"Alexandre Dumas- he's good. I also like Mark Twain.\"\n\n\"I thought that you forgot about me.\"\n\n\"I told you that it would take some time, but your family is safe.\" \n\n\"Where are they?\"\n\n\"Will still owns a house there-\"\n\n\"He's from South Carolina?\" Saul asked.\n\n\"You didn't hear that accent?\" \n\n\"I guess I wasn't paying attention\" Saul confessed. \"My mind was on other things.\"\n\n\"Yes well as I was saying, he still has a home there and has agreed to let your family stay there for as long as needed.\"\n\n\"Why would he do that?\" Saul asked.\n\n\"Let's just say that he has a vested interest in the good warden,\" Nick replied.\n\n\"Good isn't a word that I would use in the same sentence with the warden,\" Saul said grimly.\n\n\"I gathered that, but at any rate, we've upheld our end of the bargain; it's your turn.\"\n\n\"I'll talk to you anywhere except for your office.\"\n\n\"What about my house? I have an office there.\"\n\n\"Will the other man be there?\"\n\n\"I would like for him to be and- I have a friend who works for the government, I would like for him to be there too.\"\n\n\"Will he be able to help with Ellis?\"\n\n\"He has contacts that I don't have so yes\" Nick replied.\n\n\"Alright,\" Saul replied after a few seconds. \"When?\"\n\n\"Next Thursday. I'll meet you here and drive you to my house and bring you back. What time do you normally go home on Thursdays?\"\n\n\"I get home in time for supper. I get here around two.\"\n\n\"I'll see you next Thursday at two. If anything changes, you have my number.\" Nick said as he stood to leave.\n\n\"Mr. Alexander?\"\n\n\"Yes?\" \n\n\"Thanks.\"\n\n\"No, thank you\" Nick said. \"That was a brave thing that you did back then and it's a brave thing that you're doing now. I'm glad that I can thank you in person. That letter saved the lives of some of the people close to me. I'll see you next week.\"\n\nSaul decided that he liked Nick. Will he wasn't so sure about. There was something vaguely familiar about him. He shrugged it off attributing his wariness to the fact that Will was from his home state. In spite of his wariness, Saul was grateful to him. By providing a place for his family to live, Will had made what he had to do easier.\n\nReggie, Cora and Joshua were anxiously waiting for him when he got home.\n\n\"Well?\" Joshua asked. \"What happened?\"\n\n\"Give him a chance to catch his breath!\" Cora said but it was obvious that she was as anxious as the men were.\n\n\"They got my family to move\" Saul said. \"Mr. Alexander has a friend who owns a house a couple of towns over and that's where they are. I'm meeting with him, his friend and a government man next Thursday.\"\n\n\"Government man?\" Joshua asked.\n\n\"Apparently this man had contacts that Mr. Alexander doesn't.\"\n\n\"There has to be something big happening\" Reggie said. \"Either that or your lawyer friend has connections.\"\n\n\"Supper's getting cold\" Cora said. \"We can talk at the table.\"\n\nIf Saul thought the three weeks he waited to hear about his family passed slowly, the next week seemed to move even slower. By Tuesday, time seemed to be at a standstill. He lay awake all of Wednesday night, his stomach roiling to the point of nausea.\n\nHe skipped breakfast and was out the door. He realized that he forgot his lunch when he was halfway to work. He had plenty of time to go back for it, but decided to leave it; he didn't think that he could eat anyway. He remembered with a start that he and Harry were supposed to walk to work together.\n\n\"Sh-\" he started to say and stopped himself. He continued to the room where the assignments for the day were hung on a wall. As he rounded the corner, he heard Harry's voice.\n\n\"I don't care; I said that no one touches him.\"\n\n\"But Harry-\"\n\nSaul froze. What was Harry doing talking to Dewey?\n\n\"No fucking buts!\" Harry said interrupting him. \"Keep your damned hands off of him and that goes for the rest of you.\"\n\n\"Harry?\" Saul called not sure of what to make of what he was hearing.\n\n\"Oh hey! You're here early.\"\n\n\"So are you.\" Saul said looking at the men.\n\n\"Yeah well, I was just reinforcing that you're not to be messed with.\"\n\nSaul looked at the four men that stood behind Harry. Four pairs of dark eyes looked back at him with contempt. The feeling of disquiet that he had felt every so often over the past weeks had become clanging alarm bells. He watched as Harry dismissed the men with a nod of his head. He realized with a start that Harry was in charge. The men glared at Saul and left the room without speaking.\n\n\"Harry what in the hell are you into?\" Saul asked forgetting that he wasn't going to curse anymore.\n\n\"It's nothing for you to worry about\" Harry replied with a smile. \"As I said, I was telling them to leave you alone. Why are you here so early?\"\n\n\"I couldn't sleep- Harry-\"\n\n\"How about going to the library after work? I already read the books that I checked out last week.\" Harry said cutting him off.\n\n\"I can't today\" Saul replied. \"I'm meeting someone there today. We can walk over together though.\"\n\n\"That sounds good- where's your lunch?\" Harry asked noticing Saul's empty hands.\n\n\"I forgot it, I'll be fine.\"\n\n\"I've got plenty\" Harry said sounding more like the Harry Saul knew.\n\nFinally, the day was over. Saul took off and then remembered that he was supposed to wait for Harry. He doubled back and met Harry partway.\n\n\"Must be something important, you've been distracted all day.\"\n\n\"It is important\" Saul replied. \"It has something to do with my time in prison.\"\n\nHarry didn't say anything. Saul's time in prison was something that they didn't talk about much. He knew why Saul was in prison and it sounded justified to him-but what did he know?\n\n\"Alright, well I hope that it turns out alright,\" Harry said and let the subject drop.\n\n**\n\nNick was already at the library reading a magazine when he saw Saul and Harry walk in. He watched with interest as they talked for a few seconds and then parted ways. He folded closed the magazine, stood up and walked to the agreed upon meeting place.\n\nSaul came out a few minutes later.\n\n\"Are you ready to go?\" Nick asked.\n\nA few minutes later, they were in the car and headed toward Nick's house. \n\n\"So... how do you like California?\" Nick asked. He wanted to know more about the young man who had saved the lives of those he loved.\n\n\"I like it fine- but then I'd like anyplace that wasn't South Carolina.\"\n\n\"I know that you were in prison, what I don't know is why. Care to tell me?\"\n\n\"Does it matter?\" Saul asked.\n\n\"No, not at all; I just wanted to learn something about you.\"\n\n\"I killed my father. I didn't mean to, I hit him harder than I meant to. I was trying to get him to stop hurting my sister.\"\n\n\"So it wasn't planned?\" Nick asked.\n\n\"No, I just reacted when I saw him shaking her like she was a rag doll. All she had done was to say that she was hungry. I don't know what came over me, but I couldn't watch him hurt her. I grabbed a cast iron skillet and hit him over the head with it. I didn't realize how much force I used until we saw that he was dead.\"\n\n\"How did you manage to get out of prison so soon?\"\n\n\"That's part of what I'm going to tell you and if you don't mind, I don't want to tell it twice.\"\n\n\"That's fair\" Nick said, \"But I have another question- actually an observation. The letter that you wrote indicates that you or whoever wrote it had very little schooling. What I'm hearing and what I read doesn't match up.\"\n\n\"My mother helped me write the letter,\" Saul replied. \"I have a fourth grade education. It wasn't that I had to quit school, I refused to go. I found it boring and didn't see where it would get me. Since I've been here, the people that I live with have helped me.\"\n\n\"Are you talking about Joshua and Cora?\" Nick asked.\n\nSaul looked at Nick in surprise.\n\n\"How do you know about them?\"\n\n\"I had you followed\" Nick replied. \"I had to make sure that you weren't living on the streets or something. How did you meet them?\"\n\nSaul told Nick about the train ride from South Carolina to Los Angeles.\n\n\"Joshua was the last person that I sat with and by the time we were to LA, he had offered me a place to live. The thing was he acted as if it was nothing to invite a stranger home, a white one at that. He is also one of the best read men that I know. I asked him to help me learn to read and write better. Then Aunt Cora's nephew Reggie came to visit and he's been teaching me ever since.\"\n\n\"They did a good job\" Nick said. \"We're almost there and by the way, my wife is Japanese. I'm only telling you so that you aren't surprised.\"\n\nNick saw the look of surprise on Saul's face but didn't comment on it. He pulled into the driveway and into the garage.\n\n\"This is your house?\" Saul asked awed.\n\n\"Yes and please make yourself at home.\"\n\n\"Yes sir.\"\n\n\"And none of that. My name is Nick- sir and Mr. Alexander makes me feel old. I hope you're hungry; Hana made dinner.\"\n\nThe smell of cooking food made Saul's stomach rumble. He followed Nick into the house looking around as he did. He had never been inside of a truly nice home. People had them in South Carolina, but he had never had reason to be inside of one.\n\n\"Hana honey this is Saul, he's the young man that I was telling you about. Saul this is my wife od a few months Hana.\"\n\n\"Welcome\" Hana said with a slight bow. \"Please make yourself at home. Dinner is almost ready.\"\n\n\"Th...Thank you ma'am\" Saul said shyly. Hana was his first encounter with a person of Japanese descent.\n\n\"Please, call me Hana. May I offer you something to drink?\"\n\n\"I'm fine thank you.\"\n\n\"Let's go to my office until dinner is ready\" Nick said.\n\n\"She's pretty\" Saul said when he and Nick were alone.\n\n\"That she is\" Nick agreed. \"I know that it's early for dinner, but my guess is that you didn't eat breakfast or lunch.\"\n\n\"How did you know?\" Saul asked.\n\n\"Let's just say that I have some intimate knowledge about what you must be feeling.\"\n\nTo put Saul at ease, Nick told him a little about himself and the other men. By the time he was done, Saul genuinely liked Nick and trusted him.\n\nWill and Charles arrived just after dinner. \n\n\"Saul this is my friend and colleague Charles Jensen. Will you've met before. Charles this is Saul Mullins, the young man that sent us the letter regarding Lawrence Goodman. As I told you, he has some information that may help us with our friend warden Ellis.\"\n\n\"Tell us what you know and take your time\" Charles said as he settled into a chair.\n\n\"Holy fuck\" Charles murmured an hour later. \"The bastard committed murder in plain sight. I have a question for you- You could have just kept going and not looked back, why are you doing this?\"\n\n\"I made a promise and I'm keeping it\" Saul replied. \"I wouldn't have survived a week in that place if Jacob Lincoln hadn't helped me. I know at first it was because he wanted to use me, but in the end; we were friends. I watched as that bastard Ellis murdered my friend and there was nothing I could do about it; but now I can.\"\n\n\"Saul, do you understand that if we pursue this you may have to go back to South Carolina? You would be putting your life in danger,\" Will said.\n\n\"I know, but I've already started and I have to see it through. The way I see it, Jacob put his life on the line too and he paid with it. So can we get the son of a bitch?\"\n\n\"We can try but we need more than your word\" Charles said. \"I believe you, but the more witnesses we have the better. Were you close with anyone that might be brave enough to step forward?\"\n\n\"Not really\" Saul said after a minute. \"To be honest with you, I was closer to Lawrence's group than Jacob's for obvious reasons.\"",
        "\"Alright, was there anyone in that group who was wavering?\" Nick asked.\n\n\"No. Lawrence handpicked his group. I think that you're going to have better luck with the black inmates. All of them hated Goodman and his group and Jacob was helping them improve themselves.\"\n\n\"We actually have two murders here if you think about it,\" Will said. \"Jacob killed Goodman, but where did the weapon come from? At the very least it's facilitated murder. Jacob should not have had access to the supplies that he did. He shouldn't have been able to wander out from the sight of the guards. Neither should Lawrence for that matter. I think that we need to find out who was imprisoned there at that time and where they are. I'm including the guards in that too. I still have a contact or two that can help in that regard.\"\n\n\"Charles, does this warrant federal attention?\" Nick asked.\n\n\"It most certainly does\" Charles replied. \"Will, can you guarantee that your friends won't blab to Ellis? I would rather not send my own agents yet. If I do, it might catch Ellis's attention.\"\n\n\"I'm sure\" Will replied. \"But I'll put feelers out before I tell them what I need\"\n\n\"Good\" Charles said as he turned back to Saul. \"Are you sure that you want to do this?\"\n\n\"Want to? No, but I have to and not just for Jacob. What kind of man would I be if I didn't pay a debt owed to a friend?\"\n\nThey talked for a few more minutes before Nick offered to take Saul home.\n\n\"I can take him\" Charles replied. \"It isn't out of my way.\"\n\nNick walked them to the door and handed Saul a slip of paper.\n\n\"My home phone number is on there. I'm going to be your liaison between you and the government. If you need anything, and I do mean anything; you call me. I don't need to tell you not to talk about this with anyone.\"\n\n\"The people that I'm staying with already know but they won't say anything.\" Saul said tucking the paper into his wallet. \"My mother won't say anything either-she doesn't know the whole story.\"\n\n\"That's more people than I like\" Charles said, \"but we can't do anything about it now. Well let's go, I've got an early meeting and I want to get started on this. I'm also going to give you my home and office numbers in case you can't reach Nick.\n\nWill and Nick watched then leave and then looked at each other.\n\n\"I know what you're going to say,\" Will said. \"I can't tell him that Ellis is my cousin, at least not until this is over.\"\n\nA few minutes later, Will was gone.\n\n\"That young man reminds me of Kenji\" Hana said from behind him. \"He is willing to do what is right even at great personal cost to himself.\"\n\n\"Funny, I was thinking the same thing\" Nick replied. \"Now if we could get all of the ones like them together-\"\n\n****\n\nThe weeks before Kenji, Joel and Penny's graduation were a time of stress because of finals, happiness because of the graduation and Joel and Penny's wedding as well as a time for sadness. Joel and Penny had already packed what they didn't need and shipped it to Penny's parents' home in New York. Her parents were due to arrive the following week and Joel had for all practical purposes moved into Kenji and Patricia's basement. The children were thrilled; it was another adult to read with them. \n\nOne evening when Kenji and Joel were talking amongst themselves, Penny and Patricia sat at the kitchen table chatting.\n\n\"Did you know that Joel was in love with you at one time?\" \n\nPenny laughed at Patricia's shocked expression.\n\n\"Calm down, it's alright. Like I asked him, what's not to love?\"\n\n\"You have to know that I never encouraged anything\" Patricia said.\n\n\"I know that,\" Penny said laughing. \"Five naked men could be in the room and Kenji fully dressed and you wouldn't even see the naked men. I told you because- I wanted you to know how special you are. Even that psychopath Andrew Kelly saw it. That's why he didn't do anything to physically hurt you.\"\n\n\"Penny-\"\n\n\"Patricia Takeda, you are a truly wonderful woman, person and friend. I can't even begin to tell you how much I'm going to miss you.\"\n\n\"I'm going to miss you too\" Patricia said. \"You were one of the first people at school to treat us as if we were human. And Joel... he blossomed with you.\"\n\n\"I can only hope to have half the marriage you and Kenji have. I hope that when we've been married for a few years that I'll see Joel and not the roomful of naked men. I hope that he'll still look at me the way that Kenji looks at you. You know, that was one of the first things that I noticed about you two. He didn't have to say how he felt about you; it's always in his eyes. You don't even have to be anywhere around. All someone has to do is say your name.\"\n\n\"Joel is the same way with you\" Patricia said. \"You guys are going to have a wonderful life together and have lots of little Joel and Penny's running around.\"\n\n\"I hope that you're right- Patricia, can I ask a question?\"\n\n\"Sure.\"\n\n\"In all the time that I've known you and after all the things that you told me, I never heard you say that you hated anyone. I know that you were angry, who wouldn't have been; but I think that I would have hated too. Didn't you hate anyone?\"\n\nPatricia was quiet for a long time before she replied.\n\n\"I would like to say no,\" Patricia replied. \"I was alright as long as Kenji was with me, but the day they took him to that camp- Penny, I hated. To some degree I even hated Kenji for not letting me go with him. Rationally I knew that he was right, but my heart- it hurt in a way that I can't describe. Being pregnant with Ralph helped. It gave me a connection to Kenji and I had to let that hate go. I didn't want Ralph to feel it and what good would holding on to it have done?\"\n\n\"Like I said,\" Penny said, \"you are a special person.\"\n\n\"Enough about the past\" Patricia said. \"We have a wedding and party to plan. When are your parents getting in?\"\n\n\"Next week. Mom has already been to the apartment and pronounced it small but fit. I think she's already stocked it with food.\" \n\n\"That's great! One less thing to worry about\" Patricia said. \n\n\"That's my mom. I can't wait for all of you to meet them.\"\n\n\"We can't wait either- are we forgetting anything?\"\n\n\"Nope, I think we've it covered. Can you believe that graduation is next week?\"\n\n\"No,\" Patricia replied. \"I hope you come back for mine.\"\n\n\"We wouldn't miss it and who knows? We may be back in the area. We hate the cold so we're planning to move back here as soon as we're done with our residency.\"\n\n\"I can start counting down the days then\" Patricia replied.\n\n\"Penny are you ready to go?\" Joel asked as he and Kenji came into the kitchen.\n\n\"I think so, we'll see you guys tomorrow\" Penny said as she stood and hugged Patricia and then Kenji.\n\nAfter they were gone, Kenji put his arms around Patricia. He knew how much she was going to miss Penny.\n\n\"Joel says that they are planning to come back when they are through,\" Kenji said.\n\n\"I know, but I'm still going to miss them.\"\n\n\"I will to, but I have a question for you; have you decided where we will spend the night? And have you gotten one of those gowns?\"\n\n\"That's two questions and the answer to the first one is I would like to stay somewhere by the ocean. Is San Diego too far away?\"\n\n\"No, not if we leave late morning\" Kenji replied. \"What about the second question?\"\n\n\"I'm not saying\" Patricia replied with a grin. \"You'll have to wait and see. By the way I found a place that isn't too expensive. I called and they have vacancies- I made reservations hoping that you wouldn't mind.\"\n\n\"I don't- why don't we tuck the children in and go to bed?\" Kenji said kissing her cheek. \"I would like to see that green gown again.\"\n\n****\n\nPatricia was up early on graduation day making sure that everything was ready for the wedding and party. Everyone had been over the night before to help with the decorations. When she was satisfied, she turned on the radio and began singing with the song that was playing as she made breakfast. \n\nKenji stood in the doorway as he did every time she was up before him and watched for several minutes before making her aware that he was there. Watching her like that remained one of his guilty pleasures that he planned to enjoy for years to come.\n\n\"Good morning Kirei,\" he said coming up behind her.\n\n\"Good morning Dr. Takeda, are you hungry or are you too nervous to eat?\"\n\n\"I'm hungry\" he admitted. \"Shall I wake the children?\"\n\n\"No, not yet; I want to sit here with you for a few minutes. Have I told you how proud I am of you? If I haven't, I am.\"\n\n\"I would not be here if not for you. You have been through so much with me... Kirei, you are and have been my rock. Every step that I take forward is because of you and our children. I love you Kirei.\"\n\n\"Mama!\" Marie called before Patricia could respond. She hadn't seen herself in the way that Kenji had, but she did see him that way. \"I love you too; I guess our moment is over.\"\n\n**\n\nThe auditorium was packed full with the friends and families of the graduates. To free up seats, Nick held Ralph in his lap and Patricia's father, John held Marie in his. Ralph looked around the packed room awed that so many people had come to hear his papa speak. He knew that wasn't the only reason, but it felt good to think that. His heart swelled with pride when he saw Kenji's name listed with those graduating with honors.\n\nHe looked over at Patricia and saw her wiping away tears. He knew that these tears were because she was happy. He looked down the row and saw that all of the women were crying. What surprised him was that Grandpa Hiroshi was crying too. Their little boy was looking at Hiroshi too and was confused as to why he was crying.\n\nSuddenly, the room hushed as soft music began to fill the air. Ralph turned forward not wanting to miss Kenji's entrance into the auditorium. His heart pounded when he saw Kenji and Joel walk out with the other honor students. He took a quick glance over at Patricia, took her hand in his and looked forward.\n\nPatricia looked at him, smiled and gave his hand a little squeeze.\n\n\"There's your papa\" she whispered.\n\nAs young as he was, Ralph heard and understood the pride that he heard in her whisper. He wanted her to be that proud of him. He knew that she was already proud of him, she told both him and Marie that often, but he wanted her to be so proud of him that she cried. He glanced over at his sister and frowned when he saw her fidgeting. He waited until she was looking at him and put a finger to his lips. Immediately, she settled and looked forward.\n\nPatricia hugged Kenji's suit jacket close to her as she watched the graduation. This meant more than they had met a goal; it meant that Kenji could begin to take care of them in the way that he had envisioned. \n\nFinally, it was time for Kenji to speak. She heard a few grumbles about a 'Jap' and not an American citizen making the speech, but she ignored them. She watched as Kenji stood in front of the podium as if he owned it. He was a long ways away from the shy young man that she met in nineteen thirty-nine. He looked around the auditorium until he found her. It was then that she realized that he was a little nervous and that he needed to see her. She smiled at him and she could have sworn that what little nervousness that had been there was gone.\n\nThe auditorium was quiet as Kenji spoke. His speech was short and very much to the point. When it was over, he stayed where he was.\n\n\"I beg your indulgence for just a moment more. None of us would be standing here today if it were not for the love and support of our friends and family. I would like to take just a moment to thank my family and friends for their support. I especially would like to thank my wife- my Kirei which means beautiful in Japanese for her unwavering love and support. Thank you Kirei.\"\n\nPatricia held Kenji's jacket even closer as he publically thanked her. Tears streamed down her face as he sat down and then waited to receive his diploma. After he received his, she listened for Penny and Joel's names. To her left, Penny's mother was crying and her father had a huge grin on his face.\n\nAfter the ceremony was over, Patricia rushed to find Kenji in spite of his telling her to stay put; that he would come to them. She found him just as he was heading in their general direction. He swept her into his arms and kissed her. They stood there for several minutes as people milled around them. Finally, Kenji let her go.\n\n\"Let's go to the others\" he said pulling her into his side.\n\nJoel and Penny were already there when they got to the group. Penny's father had his arm around Joel's shoulder. It was hard to believe that he had once had an issue with Joel's ethnicity. Kenji took Marie from John, hugged and then kissed her. John embraced him in a bear hug careful not to crush Marie.\n\n\"We're proud of you son\" John whispered in his ear.\n\nKenji handed Marie back to John and picked up Ralph. He hugged and kissed him as he had Marie. He made his way to down the row hugging and kissing everyone. When he got to Joel, he embraced him.\n\n\"We made it my friend,\" Kenji whispered in his ear.\n\n\"Dinner's on me!\" Paul Mynt announced.\n\n\"I'll split the bill with you,\" Penny's father announced. \"I was going to pay for dinner anyway.\"\n\nDinner was a happy/sad affair. It would be the last time that the two couples would be together for a long time. Patricia sat next to Penny and held her hand throughout dinner. Kenji sat across from Joel so that they could talk. The parents all understood and kept the children occupied. Abby sat quietly watching and wishing that Ralph had lived long enough to see Kenji graduate. She determined that she was going to be around to see Patricia graduate too. She reached into her large purse, took out the camera and began to snap pictures. She had to stop several times because her eyes were blurry with tears. John finally took the camera when he noticed that Abby wasn't in any of the pictures. By the time dinner was over, all of the film had been used.\n\n**\n\nAfter they were home and the children in bed, Kenji and Patricia made a final check for the party and wedding. Afterwards, they lay in bed with their arms around each other sweaty after making love.\n\n\"Kirei, what are you thinking about?\" \n\n\"I was thinking about us and the wedding and party tomorrow night.\"\n\n\"We are ready for the party and wedding, so what about us?\"\n\n\"I've been thinking... I would like to have another baby. Now hear me out before you say anything. If I wait until I'm done with school, I'll be too old. If we get pregnant now, the baby will be born while I'm still doing my undergraduate and we'll have all kinds of help.\"\n\n\"Kirei,\" Kenji said after several long moments. \"I love you and I love our children. I would love to have another child with you, but let's think about this and what it could mean for your education. Not only that, there are many times when I won't be here to help you.\"\n\n\"We managed when I found out I was pregnant with Ralph and then Marie,\" Patricia said.\n\n\"Yes we did, but neither child was planned-\"\n\n\"What difference does that make?\" Patricia asked sitting up.\n\n\"Kirei,\" Kenji said as he pulled her back into his arms. \"What about sleep? How can you take classes when there will be a baby to care for? What happens if he or she is ill? If I were already practicing, I wouldn't hesitate, but Kirei; I'm going to be gone much of the time- Kirei, how much of this is because of that?\"\n\n\"It might have something to do with it\" Patricia confessed. \"But I do want another baby.\"\n\n\"I understand, but I recall you telling me that carrying Ralph while I was gone was a help to you. Please don't misunderstand me; I am glad that you had that comfort, but Kirei we can find other ways to feel connected. What about writing in journals like we did when we were separated?\"\n\n\"You'll be too busy for that\" Patricia replied knowing that Kenji was right about the timing.\n\n\"I will never be too busy to write for you. We'll write in journals every day that I'm away and exchange them when I come home. We can also do something that we couldn't do then- we can call and talk to each other. We can have lunch and dinner together sometimes.\"\n\n\"I know that you're right, I guess I still carry the scars from that time. I feel like a little kid afraid that her daddy won't come home except that you're far from being my daddy.\"\n\n\"I am not looking forward to the separations either,\" Kenji said, \"but we will manage as we always have. If a child is conceived without our trying, then we will deal with it; but --\"\n\n\"I know\" Patricia said. \"You're right. I was just looking for old comforts.\"\n\n\"I Understand\" Kenji said hugging her close. \"I also think that school is going to keep you busy.\"\n\n\"Not so busy that I won't miss you.\"\n\n\"Kirei, lie back\" Kenji said as he pushed her back. \n\nWhen she was on her back, he bent down and took a nipple into his mouth and rolled it between his lips before gently biting down on it. His hand wandered over her soft belly, paused and then moved downward. He slipped a long finger between her vaginal lips and began to rub her clit. He held her nipple between his teeth as he flicked his tongue over the tip as he pushed a thumb against her nub and moved it side to side and back and forth. His intent was to make her orgasm hard so that she would sleep. They had a long day ahead of them.\n\nPatricia came with a loud moan and a shudder before finally closing her eyes.\n\n\"I knew what you were doing\" she said as she drifted off.\n\nThe next morning, Kenji was up before she was. The smell of toast and coffee woke her up. She glanced at the clock and was alarmed that it was already past eight am. She had wanted to be up by six. She threw on her house robe and ran down the stairs.\n\n\"Kenji why didn't you get me up?\"\n\n\"I wanted you to sleep and many of the things on your list were things that I could do. Sit and I will bring you a cup of coffee.\"\n\n\"Where are the kids?\" Patricia asked.\n\n\"I asked Abby to take them to your parents' house. They'll be back in time for the party\" Kenji said. \"I wanted to spend the morning alone with you.\"\n\n\"Okay.... What's going on?\"\n\n\"I wanted to make sure that you understood that I wasn't saying no to another child because I didn't one. You honor me by wanting to have another child with me, but Kirei we've come too far to take a gamble on our future.\"\n\n\"Kenji, you're right and I'm okay with that so stop worrying about it.\"\n\n\"I also thought that since I managed to do half of the things on your list that we could go back to bed after breakfast.\"\n\n\"Who needs food?\" Patricia asked as she stood and ran for the stairs.\n\n***\n\nThe wedding was short and to the point much to Penny's mother's chagrin. She had wanted more than one bridesmaid, the white gown; all of it, but she quickly got over it. The party lasted until well after midnight with the newlyweds leaving first around eleven pm. Joel and Penny were leaving the next evening to go to New York with Penny's parents so they wanted to make the most of the hotel room that her father paid for. In no time, there was little evidence that there had been a party. Kenji and Patricia sat on the couch tired from the long day.\n\n\"Come Kirei\" Kenji said standing and holding out his hand. \"Get ready for bed while I check on the children.\"\n\nBy the time Kenji checked on the kids and got to the bedroom, Patricia was already sound asleep. He undressed, climbed in next to her and smiled as she molded her body into his. He really was going to miss her during his rotations.\n\nThe next evening was filled with tearful goodbyes as Penny and Joel boarded the train. The entire family including Will, Sally and their children were there to see them off. Patricia consoled herself with the fact that it wasn't a permanent goodbye, but still it hurt. For just a second, her heart rate rose as in her mind's eye she saw Kenji boarding a bus. She felt a soft kiss on her cheek. Kenji knew where her mind had gone. Her heart rate slowed to normal as she felt his arms tighten around her. She watched the train pull away with tear filled eyes.",
        "***\n\nAndrew knew exactly what weekend it was. He had been at Alcatraz for months now and he thought that he had come to grips with the fact that his life was over. He still woke dreaming of his mother's home cooked meals. It no longer worked to pretend that the food that he ate was made by her. The morning of graduation, he woke up with a different dream. He was on stage getting ready to accept his diploma. He was smiling at the audience and waved at his mom and dad. He could see how proud they were of him. Kenji Takeda was there too, but things between them had been different. They stayed away from each other.\n\nAndrew woke up with a wet face. His dream was about what could have been and what should have been. He began to sob when it finally sunk in that he would never see the looks of pride on his parent's faces except in his dreams. He got up from the cot, got dressed for the day and stood in front of his cell waiting for the door to open. For the first time since his arrival, he began to think about whether it was possible to escape from 'the rock'. \n\nHe had heard about the previous attempts and how no one made it, but what if he could? He was still young and strong. He jumped when the cell door swung open and stepped outside of it his mind still on the possibility of escape. He decided that if he was successful, he would vanish and never be heard from again. But he couldn't be rash. He had to do his research and learn what he could about the setup of the prison and possible places to go to. Money would be an issue, but he would worry about that later. Reluctantly, Andrew said goodbye to the dream that should have been. He told himself that he was going to stop thinking about his parents. They no longer existed in this life. He bit back a sob and stared straight ahead.\n\nAs soon as he was allowed, he would start his research. He knew that it would months before he was ready, but the idea of having something to work for settled him. He told himself one more thing, if he escaped, he wouldn't go after Kenji. He had learned his lesson. Even as he said it, he knew that the temptation would be there and could become overwhelming. \n\n\"I will not go after him\" he muttered over and over again. He said those five words whenever he thought about his plan hoping that the idea would be ingrained in him by the time he was ready to make his escape.\n\n*******\n\nBy the end of 1950: The Great Brinks Robbery takes place. Eleven thieves take more than two million dollars from the Brinks headquarters in Boston, Massachusetts.\n\nRationing is still enforced in England.\n\nThe first payment made on a 'Diner's Club' card. It is the first use of a charge card.\n\nA second red scare occurs. Senator Joseph McCarthy accuses the United States of being filled with 205 communist.\n\nWalt Disney releases its 12th animated film- 'Cinderella'\n\nPoland announces plans to exile all Germans.\n\nBritain formally recognizes Israel.\n\nMauna Loa in Hawaii erupts.\n\nNorth Korean forces capture Seoul. The Seoul National University Massacre occurs. 900 people are reported to have died.\n\nFlorence Chadwick swims across the English Channel in a little over thirteen hours.\n\nSinger/ actor Paul Robeson, whose passport had been revoked for suspicion of being a communist meets with U.S. officials in an attempt to get it reinstated. He is unsuccessful. It won't be reinstated until 1958.\n\nDarlington speedway is the site of the first 500 mile NASCAR race.\n\nThe comic strip 'Peanuts' by Charles M. Schultz is first published in seven U.S. papers.\n\nThe Republic of China enters the Korean conflict.\n\nThe United States entered the Korean conflict. General Douglas MacArthur was named commander the U.N. forces. He would eventually threaten to use nuclear weapons against Korea.\n\n****\n\nCivil rights\n\nThe 'Group Areas Act' is passed in South Africa formally segregating the races.\n\nMclaurin v Oklahoma State Regents- a public institution of higher learning could not provide different treatment to a student based on his skin color.\n\nThe Supreme Court abolishes segregation in railroad dining cars.\n\nThe University of Virginia is forced under federal law to admit a black student to its law program.\n\nThe \"Leadership Conference on Civil Rights' is created to promote the enactment and enforcement of active civil rights legislation and policy.\n\nOrlando, Florida hires its first black police officers.\n\nDr. Ralph Bunche wins the Nobel Peace prize. He is the first African-American to win the prize.\n\nHazel Scott became the first black entertainer to have her own network musical variety show.\n\nAlthea Gibson becomes the first black American to compete in a U.S. tennis championship.\n\n******\n\nAs always, thank you all for your patience and donalde for beta reading.\n\n**** "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "historical drama",
        "post wwii",
        "japanese male",
        "black female",
        "racism"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-16"
}