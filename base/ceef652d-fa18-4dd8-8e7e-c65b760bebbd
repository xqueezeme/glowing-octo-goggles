{
    "title": "Surefoot 36: My Summer on Vulcan",
    "pages": [
        "\"Bring in Captain Hrelle!\" \n\nSasha was dragged, manacled and bloodied, across the stained, cracked stone floor of the ancient hall, to the jeers of the armoured warriors on the sidelines, ready for the spectacle of the imminent duel. \n\nWhen they released their hold on her, she struggled back to her feet, her chin raised defiantly at the Klingon who stood on the raised dais before the banner of his House. He was a young male with a patch bolted over where his right eye used to sit, and the sneer he offered her revealed crooked, yellowed teeth. \"So here she is, at last, the petaQ Starfleet captain responsible for the death of my honoured father!\" His men roared loudly, boisterously, as his hand rested on the hilt of the mek'leth blade on his belt. \"Well, Captain? Have you nothing to say for yourself?\" \n\nSasha wiped the blood from her mouth onto her sleeve, and held up her bound wrists. \"I say... release me, Khlaris. Release my hands and let me face you like a warrior, rather than like some animal. Or do you fear me so much that you need me chained up in your presence?\" \n\nThe Klingon grunted at the taunt, and nodded to his men, who approached her again and removed the restraints - stepping back quickly, in case she tried to fight them again. But she ignored them, keeping focused on Khlaris. \"And I will also say to you that your father Athagh... was my greatest opponent. No one has ever come as close to killing me as he had. How close, you might ask?\" \n\nShe reached up and peeled back the collar of her Starfleet uniform as much as the sturdy material would allow, revealing an ugly scar running from her collarbone to the back of her ear. \"He nearly took my head off. I'll carry this with honour, and drink a toast to him every year on the anniversary of our deal.\" \n\nA rumbling sound of surprise ran like a tremor through the assembled as she adjusted her uniform again, and Khlaris reacted to the unexpected praise for his father, before spitting and sneering, \"You think mere words and promises will assuage my thirst for vengeance, Hrelle?\" \n\nShe shrugged. \"Probably not. It didn't for me. When I was half your age, a group of cowardly, criminal petaQs murdered my mother. They shot her in the back, never even giving her a chance to die with honour. And years later, when the opportunity came to witness the execution of the man who led those scum... I gladly claimed it.\" \n\nShe took a step forward. \"But... I won't fight you today, Khlaris. I think that honour must fall to my son. He was with me when your men abducted me, and he stands ready to face you.\" \n\nThat provoked another rumble among the Klingons, and a greedy smile from Khlaris. \"Yes... YES! I accept the challenge! Bring forth your bastard son!\" \n\n\"Okay.\" She turned her head and called behind her, \"Shalom! Come here, sweetie!\" \n\nThe Klingons behind her parted, allowing a waist-high, six-year-old Caitian male cub with auburn fur, sharp-pointed ears, a blunt muzzle and a thin, excited tail to step forward. He wore shoes, jeans and a black T-shirt emblazoned with the Starfleet logo, and as he faced Khlaris, he bared his tiny teeth and claws and gave a minikin roar of challenge. \n\n\"Computer,\" came a voice from an unseen source, \"Pause Program.\" \n\nKhlaris, the other Klingons and the Caitian cub all froze, and silence blanketed the room as Sasha turned to see a dozen young Starfleet officers emerge from a seemingly-empty corner of the Hall, led by an older, dark-skinned Vulcan male with Commander's pips on his uniform, a strong broad face that was, unusually for his people, framed with a trimmed moustache and beard flecked with grey, and bright blue eyes that showed more animation than one might expect from one of his people - unless, like Sasha, one had experience living and working with them. \"Lt T'Shul, why did you interrupt Lt Hrelle's exercise?\" \n\nT'Shul was a gaunt Vulcan female Sasha's age, with sable hair and a narrow chin, like Sasha newly graduated from Starfleet Academy, only from the Academy Annex here on Vulcan rather than on Earth. She adopted a formal pose, hands behind her back. \"Commander Haluk, I wish to formally protest Lt Hrelle's response.\" \n\nIn the group, someone - Sasha recognised it as Lt Luckinbill - muttered, \"Here we go again.\" \n\nSasha echoed that sentiment, folding her arms across her chest and facing T'Shul; since Sasha's arrival on Vulcan to participate in the elite Advanced Command Training course, T'Shul had become an almighty pain in Sasha's toches, constantly challenging her responses, her attitude, her everything, to the point where Sasha was beginning to suspect the young Vulcan was a plant designed to test her resolve. \"I haven't even finished, T'Shul. What can you possibly have to protest about?\" \n\n\"Much. This exercise was designed to test our responses to critical situations. Your response is both facetious and ethically questionable.\" \n\n\"Oh, is that right, Bubulah?\" \n\n\"Yes. You have fashioned a false scar for yourself, and false stories regarding its origin and your witnessing the execution of your mother's murderer, all in order to ingratiate yourself towards Khlaris. Lying is not considered a virtue among Starfleet officers. Even human ones-\" \n\n\"The scar is real, T'Shul,\" Sasha informed her. \"As is the story of seeing my mother's killer executed.\" \n\nThe group went silent at the revelation - as Sasha expected. She had just wanted to come here, take the course, and learn everything she could from it before moving onto her first assignment. As it happened, she found herself enjoying the experience and making new friends among her fellow participants. But she would have much preferred to keep certain aspects of her past to herself, and not be That Girl, the one that people talk about when she's not around. \n\nIn the group, Lt Russ, a tall, blonde beanpole of a man who loved to smile, now frowned. \"Seriously? What- How did you-\" \n\n\"The details aren't important,\" she added quickly. \"But I did amend the origin of the scar for Khlaris. I thought, since it was there already, I could make good use of it to build a connection with him.\" She looked to Haluk. \"Would that be considered wrong, Sir?\" \n\nThe instructor folded his own hands behind his back. \"Deception for a higher moral gain, such as the preservation of oneself or others, is considered ethically acceptable.\" \n\nBut T'Shul remained undeterred. \"With respect, Sir, it is not acceptable to intentionally endanger civilian minors, such as Lt Hrelle's alleged child.\" \n\n\"Alleged?\" Sasha moved to stand behind the still-frozen hologram, bending down and wrapping her arms around him protectively. \"He's not 'alleged'! I went through fourteen hours of labour to push this cub out!\" \n\nThat provoked chuckles among some of the other participants, as T'Shul turned back to Haluk. \"As she continues to demonstrate even now, Sir, she is not taking her opportunity here seriously.\" \n\nTheir instructor raised an eyebrow. \"And yet, her scores consistently exceed yours. Perhaps you are in fact questioning my competency in administering this course?\" \n\nT'Shul stiffened. \"That is certainly not the case, Sir. But there is no logic in her choice of program modification. An adult Caitian male accompanying her would at least have been more efficacious in defending her from the Klingons than her manufactured child.\" \n\n\"A cub,\" Sasha corrected. \"They're called cubs. And it's my choice, T'Shul. As to why I chose him, maybe you should have let me proceed, instead of interrupting to kvetch at me like an old woman?\" \n\n\"I must agree,\" Haluk declared, facing T'Shul again. \"And I would put it to you, Lieutenant, that your failure to see the logic in your colleague's choice does not automatically equate to a lack of logic. Perhaps in future you should consider curbing your seemingly-natural urge to interrupt and challenge?\" \n\nT'Shul's face tightened, betraying the relative lack of emotional control typical of Vulcans her age, before nodding and replying, \"Yes, Sir.\" \n\nHaluk returned to Sasha. \"Lieutenant, do you wish to restart the exercise from the beginning?\" \n\n\"Thank you, no, Sir. It's almost the end of the day, and I think I can jump right back in where we left off.\" \n\nHaluk nodded and silently ushered the others back to the corner of the room, ordering, \"Computer: Continue Program Hrelle 4-7.\" \n\nThe group vanished, shielded by the program from being seen by the holographic characters, who were reacting to Shalom's challenging roar... with raucous laughter. \n\nShalom stopped and looked to Sasha with confusion. \"What's wrong, Mom? Did I do it wrong?\" \n\nShe smiled and tickled the back of his right ear, making him squirm and purr. \"You did beautifully, darling; your grandparents would be so proud of you!\" \n\nKhlaris snarled, indicating the cub. \"What is this? Are you mocking me, Captain?\" \n\nSasha stepped forward. \"No, I'm reminding you. Reminding you that you are no longer Khlaris, Son of Athagh, a young man grieving for his father. You are Khlaris, Head of the House of Khlaris. From the moment your father died, you had to see with new eyes. \n\nYour father died honourably, and now sits in Sto-Vo-Kor with all other honoured Klingon warriors, and I swear on my cub's life that I will forever honour him as my greatest foe, and defend his name against any who would sully it. \n\nBut he does not need you to avenge him. And he, and you, will not be served by killing my son, or me. Our governments may be at war now, but governments rise and fall with the sun. Honour Remains.\" \n\nShe stepped up to him, right arm outstretched. \"'Gorgh ghob rIn e' Sov Suvwl': 'A Warrior Knows When His War is Over'.\" \n\nHe stared at her, brow furrowed, as if seeking some deception behind all of this, even as he was aware of all eyes upon him, awaiting his response. \n\nThen he stepped up to her, clasping her arm. \"This War between us... is over, Captain.\" \n\nShalom cheered along with the other Klingons. \n\nThen Khlaris, the other Klingons, Shalom and the hall around them vanished, replaced by a large, stark, windowless room, patterned from floor to ceiling with yellow gridlines over black. Haluk and the group approached Sasha, Haluk inviting, \"Opinions?\" \n\n\"Nicely done,\" Russ noted with his typical smile. \"I like a happy ending.\" \n\n\"I want to take Shalom home to my little sister,\" Lt Lenard, a handsome, dark-skinned human male laughed. \"She's about his age and is already looking for a boyfriend.\" \n\n\"Who's the father, Sash?\" Russ asked. \n\n\"I'll never tell,\" Sasha retorted, patting the frozen Shalom on the head. \n\n\"Opinions related to the Lieutenant's actions in the scenario, perhaps?\" Haluk clarified mildly. \n\n\"Well, Khlaris didn't disembowel her,\" Lt Blalok, a stocky Trill woman, quipped, \"So she did better than me.\" \n\n\"She did better than any of us,\" Lt Luckinbill, a slim, freckled, red-haired human female pointed out. \"Including you, T'Shul. Didn't Khlaris shoot you in the head with his disruptor while you were in the middle of quoting Interstellar regulations regarding abduction?\" \n\nT'Shul did not deign to respond to the question, or the consequent laughter it produced, leaving Haluk to continue. \"Lt Hrelle did survive longer than any of you. Why?\" \n\n\"The rest of us tried to cheat?\" Russ suggested, smirking. \n\n\"I would not use the term 'cheat'. But the rest of you who requested modifications to the program such as hidden weapons, personal communicator and transporter units, allies in disguise among the Klingons, cloaked ships in orbit waiting to rescue you - none of which were exactly novel in our history of running this exercise, I should point out - chose these to help you escape, or fight, rather than address the problem to a resolution that would satisfy both sides. \n\nThese were short-term solutions. Had your own efforts helped you escape Khlaris, he would have continued the vendetta; had they helped you kill Khlaris, in his own House, his successor would have been compelled to continue the vendetta.\" \n\n\"I would remind you, Sir, that I did not attempt to escape, or kill Khlaris,\" T'Shul announced. \"I attempted to address the problem to a resolution that would satisfy both sides. But there was a problem with the program. It refused to see logic.\" \n\n\"There was no problem with the program,\" Sasha countered. \"It was just unwilling to see your logic. To Klingons, seeking vengeance for the death of a family member is perfectly logical, and an accepted aspect of their culture, whether or not we agree with it. You, standing there and telling Khlaris about how he should behave in a civilised manner and release you, was just an invitation to get your sinuses cleaned out with a disruptor.\" \n\n\"Lt Hrelle is correct,\" Haluk noted. \"In her own singular fashion. She possessed the insight to create a holographic offspring of such youth that Khlaris could refuse to fight him and still retain his honour in front of his people. She empathised with him, and employed an appropriate quote from Kahless to help him end the vendetta. This is why she succeeded. \n\nShould some or all of you go on to command positions, you may find yourselves in situations where you might respond with Fight or Flight, and admittedly these might prove to be, if not your only approach, then certainly the most desired approach. But statistically they are short-term solutions, and one must always be conscious of this, and to always consider what is colloquially referred to as 'The Big Picture'.\" \n\nHaluk relaxed his stance a little. \"As you will already be aware from previous announcements, Vulcan is about to commence Wan T'naehm, a time of historical remembrance. Many Vulcans will return to their ancestral homes to rejoin family and meditate on the paths our people have taken to get to where we are now. As a result, many services this weekend will be running at minimal capacity, including our own facilities, so you may enjoy this time on leave. I would strongly advise you to take the opportunity to visit our many museums here in ShiKar and elsewhere. Vulcan has a deep, rich history of which many of you will be unaware, and you may even find it more fulfilling than spending all of your time in the Southern District Karaoke bar I know many of you frequent. \n\nDismissed - Lt Hrelle, a word, please?\" \n\nSasha froze as the others departed, immediately running all the reasons through her head why the instructor would want to speak with her privately - none of them good - and as the doors closed again, she straightened to attention and announced, \"Sir, I apologise.\" \n\nHe furrowed his brow. \"What for?\" \n\n\"I... don't know, Sir. But knowing how easily I irritate some people, I was just being pre-emptive.\" \n\nHe raised an eyebrow. \"Very pre-emptive, in this case at least. In fact, it was I who was prepared to apologise to you.\" \n\n\"You, Sir?\" \n\n\"Yes, for allowing Lt T'Shul to interrupt your exercise, and for leaving open the potential for you to feel forced to reveal personal details about your past that I correctly suspected you would have preferred to keep to yourself.\" He paused and elaborated. \"I am of course familiar with your history, as I am of all the Course participants. I know of the Bel-Zon attack on Station Salem One, and the death of your mother... but I was not aware that you bore witness to the execution of her murderer.\" \n\nShe nodded. \"His name was Alexander Giger, a senior operative in the Bel-Zon. The Nist government had captured and condemned him, because the raid on Salem One had also killed some of their people. They invited the next of kin of all the other victims of that day to attend. I... was desperate to go, though my Dad tried to convince me that it wouldn't give me any comfort or peace or satisfaction.\" She swallowed, still vividly recalling the image of Giger in that execution sphere, writhing in agony as he was being eaten from within by Nist larvae planted earlier in his stomach by his executioners... \n\nShe shuddered. \"Dad was right. I should have listened to him.\" \n\nHaluk nodded in understanding. \"Your reaction to the others indicated that it remains a sensitive subject... as does the origin of your scar. We will not speak of it further. \n\nI also wished to congratulate you on your success. However, you should know that the psychological and cultural subroutines in the Khlaris character would have allowed for a 35% probability that he would have accepted the challenge and attacked Shalom. What would you have done if that had happened?\" \n\n\"I would have killed him.\" \n\nHis expression narrowed. \n\nSilently inviting Sasha to explain herself. \"I don't say that as some empty boast, Sir; if you do know as much of my history as you say, then you'll know that I already have killed. And not from a distance with a phaser or a disruptor, but up close and personal, using everything I've learned, including Caitian K'Gressir, Klingon Mok'bara and Roylan Aikido. I have the experience, the training... and, when it comes to defending members of my family, even holographic ones, I have the will, too.\" She breathed out. \"But for the record, Commander, I'm grateful that Khlaris took the High Ground in responding to me.\" \n\nHaluk raised an eyebrow. \"If the Khlaris character was sentient, and had to face you in combat, then I daresay he would be grateful, too. Enjoy your break, Lieutenant.\" \n\nShe offered a slight smile of gratitude at his support. \"Thank you, Sir. You too.\" \n\nTo her surprise, she found the other participants waiting in the corridor just around the corner from the Holosuite, Russ the first to ask, \"You okay, Sash? You're not in trouble, are you?\" \n\nShe grinned. \"Nope. Haluk was merely gaining my insight to possible different reactions from Khlaris. Oh, and he ordered all of us to go enjoy ourselves. Especially you, T'Shul; you have to do Karaoke.\" \n\nThe Vulcan raised her chin as the others chuckled. \"I find that as incredulous now as when you have broached the subject the previous eight times. Besides which, I am returning home tonight to spend the break with my family.\" \n\nSasha smiled. \"Taking advantage of still being on your home turf, huh? I'm envious.\" \n\nTo her mild surprise, T'Shul offered an almost saturnine, \"If you knew my family, you might find that envy curbed somewhat.\" \n\nSasha almost laughed at what was an apparent attempt at humour, but there was something about the other woman's expression, a feeling barely hidden behind the stoicism. She was tempted to ask further, but then remembered how she felt when her own personal matters were made public. Besides, T'Shul and she were hardly friends, were they? \n\n* \n\nThe image of the large-framed, grey-furred Caitian female filled the screen of her desk monitor, as she frowned at Sasha, as if responding to the occasional interference to the transmission from the growing stellar activity. \"Are you okay, Grandcub?\" \n\nSasha frowned back. \"Yeah, Grandma, why?\" \n\nMa'Sala Shall, Fleet Captain of the Caitian Planetary Navy, nodded at her. She looked down, confused - and then understanding and cursing. After returning to her quarters in the local Starfleet Headquarters Accommodations Building and cleaning herself up following the exercise, she had turned the room temperature down and sat around in her vest and boxers - Hot as Vulcan wasn't just a phrase, she had learned upon arriving here, but a way of life - to bask in the coolness. Now her nipples were peaking through the vest material, and she grabbed a discarded towel from the floor and wrapped it around her neck to hang over her chest. \"Grandma! You're not supposed to notice things like that!\" \n\n\"How could I not? You could poke someone's eye out with those!\" Ma'Sala chuckled. \"So, still dazzling them there?\" ",
        "She reached for her beer. \"Still annoying them. I feel like I'm showing off. Bragging.\" \n\n\"You are. You all are. That's why you were all picked for this course, to show them what you cubs can do.\" She smiled. \"If it helps, remember that it's not really bragging if you have the bite to go with the teeth. And you do.\" \n\n\"Thanks.\" More seriously now, she asked, \"Have you heard anything about Dad? Is he- is he okay after-\" \n\n\"Yes, Grandcub, he's recovering, according to Kami's reports. It wasn't a Dominion attack, as some tail-chasers have surmised. Just a one-off incident from an emotionally-distraught human- no offence.\" \n\nSasha smiled, though the smile didn't reach inside her. When Kami had contacted her, informing her of the attempt on her father's life by one of his temporary First Officers, Sasha had almost considered leaving the Course early to head out to the Sherman Sector, especially when security levels rose to restrict private transmissions with the Thirteenth Fleet. But Ma'Sala had been in touch with her, convincing her that the matter was settled, her father was fine and that there was no point in throwing away all her hard work here, when she would be shipping out to the sector in a few weeks to her first assignment. \"Are you sure?\" \n\nMa'Sala smiled back. \"I have more connections than you'll ever know, cub. Trust me, I keep an eye out on all my clan. Including you. I have to go now, you take care, stay out of trouble... and relax. Take a break.\" \n\n\"Thanks, Grandma, I'll try.\" \n\n\"Find some delicious-smelling male to give you a good hard-\" \n\n\"Bye, Grandma!\" Sasha laughed. \"Love you!\" \n\nThe transmission ended, and Sasha finished her beer and leaned back in her chair, looking around at the mess that was her quarters, glad to have graduated and no longer required to be as neat as possible. She considered her plans for this evening, thinking about contacting Luckinbill and Lenard, they were always up for sushi and Karaoke- \n\nHer door chimed, and she reached for her sweatpants, slipping into them and rising to her feet. \"Come.\" \n\nThe door slid open, and Lt T'Shul stood outside, a traveller's bag slung over one shoulder. \"Lt Hrelle, may I enter, please?\" \n\nSasha blinked; T'Shul was the last person she expected, the Vulcan mostly keeping to herself and, as far as she knew, never making any social contact outside of Course hours with anyone else. Least of all the woman she constantly criticised. \"Sure, come in, make yourself at home.\" \n\nT'Shul complied, setting her bag down and looking around the quarters with barely-concealed disapproval. Her posture remained stiff, her hands behind her back as she commenced with, \"I hope I am not disturbing you?\" \n\n\"Me? No, no.\" Quickly she moved to the room's environmental controls, raising the temperature back to a level that would be more comfortable for her visitor. \"So... you want something to eat? There's a glazed doughnut left in that box over there- no, wait, I ate that in the shower-\" \n\n\"Thank you, no.\" The young Vulcan continued to look uncomfortable. \"Lieutenant, I have come here for two reasons. One is to offer my apologies to you. I have been obstreperous and challenging to you, more than to others on this Course. But on reflection, I have accepted that this was in part due to my envy of you.\" \n\nSasha blinked. \"Envy, huh?\" She wasn't naive about Vulcans that she would question the existence of emotions within their people, but she recognised that their open admission of it, especially to non-Vulcans, wasn't something to take lightly. \"What's envious about me? My waistline?\" \n\n\"No, I clearly have the superior waistline. But your experience with life is far in advance of mine. I have never left Vulcan, and have only come into contact with non-Vulcans since joining Starfleet. You have travelled to many worlds, interacted with many races. This has given you a distinct advantage over me.\" \n\nSasha grunted at the admission, removing the towel around her neck to reveal her scar again. \"For what it's worth, T'Shul... the experience that gave me this... killed me. And it wasn't even the first time I had died.\" She reached for her sweatshirt and slipped into it. \n\n\"Then I must apologise again for my ignorance-\" \n\n\"Don't. And you don't have to apologise for challenging me. Actually, I'd rather have that than having you kissing my toches.\" \n\n\"Toches?\" Then she seemed to comprehend the Yiddish. \"I thank you for your gracious response. And now that I have successfully settled the differences between us, I am free to move onto my second reason for appearing here: to make a request of you. A rather significant request, I might add.\" \n\n\"Oh, really?\" I'd better sit down for this.\" She took a place at the foot of her bed and indicated the desk chair for her guest. \"You too, methinks. So, what is it? I'm assuming you're not looking for suggestions for songs to sing at Karaoke?\" \n\n\"You are correct. As I stated earlier today, I am returning to my family home. But it is more than just a social call. My parents are planning to finalise my betrothal.\" \n\nSasha had been leaning back on her elbows, but now sat up again, smiling. \"Betrothal? You're engaged?\" \n\nT'Shul nodded. \"His name is Sulkek. We were betrothed when we were seven, and a telepathic link was made when we were fourteen. Now, at twenty-one, it is traditional for the principals to make final preparations - or to break the link and allow them to seek other partners. Sulkek's family has ancient aristocratic roots in our Province. I am to be considered... fortunate in having him as a husband.\" \n\nSasha's smile dropped. \"But you don't share that. You don't want to get married. And you told your parents, but they wouldn't listen to you.\" \n\nThe Vulcan reacted. \"How were you able to discern all that?\" \n\n\"Some Vulcans wear their emotions closer to the surface than they might think; you have a face on you like you were talking about cleaning out a toilet rather than getting married, for one. And as you've never seemed the type to keep your opinion on anything to yourself, you would have said something before now. What did they say when you told them?\" \n\n\"They persistently reminded me of my familial and societal obligations, and that at my age I cannot possibly understand how a marriage with Sulkek would be preferable to an unmarried life in Starfleet.\" \n\n\"But you're a legal adult! You have a right to make your own decisions about your life!\" \n\nT'Shul nodded. \"Yes, that is the... theory. The reality is different, where my mother and father are concerned. Such is my determination that I have resorted to... ethically-questionable practices in my attempt to break the betrothal.\" \n\n\"Oh? Like what? Planning to assassinate Sulky?\" \n\n\"It is Sulkek. And no, assassination is not planned. I have in fact claimed to be involved with someone else... another female I met here.\" \n\nSasha smirked. \"You know, lying is not considered a virtue among Starfleet officers. Even Vulcan ones.\" \n\nThe other woman averted her gaze. \"I am acutely aware of my own hypocrisy in this matter, Lieutenant. You do not need to remind me.\" \n\nSasha sobered, perceiving the level of discomfort in the other woman. \"Sorry. So, why another female? Do you lean that way?\" \n\n\"No. However, during my research into Vulcan betrothal annulments, I have found that 73.4% have been due to one or both parties recognising a same-sex attraction in themselves. It offers both parties the opportunity to part amicably without losing honour, and is a stronger motivation than simply my desire not to marry Sulkek.\" \n\nSasha reached for her beer, finishing it. \"And what did they say when you told them about your girlfriend?\" \n\n\"They have insisted that I bring her with me this weekend... I suspect it is a means for them to confirm I am not lying to them.\" \n\n\"Can you blame them?\" Sasha smiled... and then dropped her smile as all the pieces fell into place. She set down her emptied bottle. \"Wait a second- No! You can't be talking about me?\" \n\nT'Shul frowned. \"Of course. Why else do you think I am confiding in you? I have made reservations for us at the local Transporter Station-\" \n\n\"No!\" Sasha held up a hand. \"This is crazy! Why me? A human? Wouldn't a Vulcan woman be more believable? More likely to know all your traditions and rules?\" \n\n\"It is logical for my family to assume that I might have formed a relationship with a non-Vulcan while in Starfleet. And a Vulcan woman of our age is more likely to be deferential to my parents, and less likely to maintain an effective deception. You, however, have proven quite adept at deception, even by human standards.\" \n\n\"Thanks. If this is you trying to win me over with sweet talk, then maybe you should stick with Sulky.\" \n\n\"It is Sulkek. And it is not my intention to insult you. Also, your considerable sexual experience with both men and women of various races will compensate for my own deficiencies in that area.\" \n\nSasha frowned. \"Who told you I've been with other women?\" \n\n\"Lieutenants Lenard and Luckinbill. You apparently confessed your liaison with your Caitian cousin to them in a drunken contest on Stardate 49663.39; they were discussing it most fervently the following morning in the Library, unaware of my presence nearby.\" \n\n\"Oh.\" Sasha felt her face burn, remembering winning the contest - and hoping no one would have have remembered. \"Look, I wouldn't say my experience was 'considerable'... 'Noteworthy', maybe-\" \n\n\"An explanation is not necessary. You are highly unlikely to be required by my parents to demonstrate your sexual credentials.\" \n\n\"Good; I'm told I pull some weird sex faces.\" Sasha turned away, shaking her head in disbelief. This was crazy, some sort of joke- maybe this was even some Course exercise? No, T'Shul couldn't be that good an actress. \"Forget it. I'm not even entertaining the notion that you're asking this.\" \n\n\"Lieutenant-\" \n\n\"I said forget it!\" \n\n\"Please.\" T'Shul stepped forward, looking as flustered as Sasha had ever seen her. \"I- I don't have anyone else to ask. Anyone I can trust. I... do not make friends. I never thought I would require them. I have been proven most significantly incorrect.\" \n\nSasha's outrage at being approached like this, especially from someone who had been like a pimple on her ass until now, now evaporated. More sympathetically, she pointed out, \"You know, you can always just tell them the truth, and stand your ground. What's the worst thing they can do?\" \n\n\"They can disown me.\" \n\n\"What?\" \n\n\"It has all but been threatened to me.\" \n\nSasha started, almost discounting the reply as being absurd... until she remembered the stories Dad told her, about how his father had disowned him for choosing a life in Starfleet rather than staying on Cait and continuing the family business. \n\nAnd T'Shul continued. \"I have listened to you speak at length about Captain Hrelle, the man who married your late biological mother and whom you now call Father. And your brother Misha, and Kami and the Shall Clan. You are more fortunate than you know. You have been embraced by people who do not share your blood, your genetics, but who still love and support you unconditionally. They would never make a demand like this of you. It is yet another reason for me to envy you. \n\nYou have many in your life. I am alone.\" \n\nAs she regarded the piteous Vulcan, Sasha thought about the other woman's words. And had to agree with them. Dad was... Dad, and such was their relationship now that she never questioned that he was Caitian and she was Human. And when he married Kami, and had Misha, and Kami's clan had taken them in under their banner, Sasha was included. They had welcomed their Tailless Cub, so completely into their culture, their lives, that Sasha had welcomed them back, and did so to the point where, when she had to imagine a holographic offspring of her own, she imagined a Caitian cub rather than a human child. \n\nYes, she was damned lucky. \n\nSasha finally breathed out. \"Well, I hate to break it to you, T'Shul, but you're not alone anymore. You've just made a friend.\" \n\n\"Indeed?\" \n\n\"Indeed. We're Starfleet, if nothing else. We stick together. I still think this is a bad idea, though. It's certainly not the sort of long-term resolution that Commander Haluk would approve of.\" \n\nT'Shul nodded, looking almost visibly relieved. \"I will be in your debt, Lieutenant.\" \n\n\"You know, you'd better learn to start calling me Sasha, if we're supposed to be on intimate terms and all.\" \n\n\"Indeed. Sasha, our transport is scheduled for 22.3 minutes; you have that long to pack and for us to check in at the station.\" \n\n\"What? That's not enough time for me to get ready!\" \n\n\"Then presumably there is even less time to complain. Please expedite your preparation.\" \n\nSasha cursed and retrieved her shoulder bag from under her bed, quickly opening drawers and throwing in socks, underwear, T-shirts and other casual wear, hoping her uniform will count as formal wear should the need arise. \"Will you at least enter my itinerary in the Security Log, as per Starfleet Regulation... whatever the number is?\" \n\n\"Starfleet Security Regulation 213.47,\" T'Shul informed her, moving to the desk terminal. \"What is your serial number?\" \n\nSasha stripped out of her sweat clothes and reached for a fresh uniform from her closet. \"All this time together and you don't know it yet? You are so not getting any from me tonight.\" \n\nThe Vulcan woman stopped and looked at her. \n\n\"Just kidding,\" the human woman corrected, winking at her. \"You'll get some tonight.\" \n\n* \n\nAs it turned out, despite the reservations, there was a delay at the local Transporter Station, as more travellers than usual were returning to family homes for the weekend break, and Sasha and T'Shul found themselves in the waiting room with other travellers. \"So, tell me more about yourself.\" \n\n\"Is it necessary?\" \n\n\"No, I can always go in there completely ignorant of your life despite the apparent intimacy we're supposed to be sharing.\" \n\nT'Shul nodded in acquiescence. \"My family home is in the Matallak Province, near the Fire Plains. My mother's name is Prath, my father's is Chadok; they own and manage the Province's principal geothermal power facility.\" \n\n\"Your family is well-off?\" \n\n\"If by that you mean in a financial sense, then yes.\" \n\n\"And does Sulky's family have as much money?\" \n\n\"It is Sulkek. And his family has a... prestigious name.\" \n\nSasha waited for more. When nothing else was forthcoming, she smirked. \"In other words, they have a history, and nothing else. No wonder they want a marriage.\" \n\nT'Shul looked to her. \"You ascribe mercenary motives to them?\" \n\nSasha just shrugged, trying not to develop any preconceived notions; the whole idea of a society as logical as Vulcans still having arranged marriages in this day and age was crazy enough for her. \"Anyone else at home?\" \n\n\"My grandfather Strynn, a... former Professor of Pre-Reformation History at the University of Vulcana Regar.\" \n\n\"Former? You mean he's retired?\" \n\n\"No.\" Her voice lowered now, she added, \"My grandfather is afflicted with Bendii Syndrome; it is a degenerative neurological illness characterised by physical debility and... loss of mental and emotional control.\" \n\n\"I'm sorry to hear that. I've not heard of Bendii; can they cure him?\" \n\n\"No, although my family has hired a resident nurse to attend him, and I understand there is a Doctor Myrek in attendance this weekend. But I must apologise in advance if my grandfather behaves... inappropriately.\" \n\n\"I understand.\" Sasha reached out and took T'Shul's hand in hers. \n\nThe Vulcan looked down at it. \"What do you think you're doing?\" \n\n\"Offering my lover a sympathetic gesture?\" \n\nT'Shul glanced around at the other waiting travellers, who viewed the young couple with barely-disguised distaste. She removed her hand. \"That is not appropriate in public on Vulcan. I should not have to remind you that our intimacy is a facade.\"  \n\n\"Maybe, but if it's meant to be a convincing facade, we have to look as if we've been close for longer than the last hour. Imagine if you had reacted like you just did in front of your family? Still think they'd buy that we're a couple?\" \n\nT'Shul considered the argument. \"There is some logic in what you say.\" She held up her right hand, extending her fore- and middle finger. \n\n\"I hope that's not the Vulcan equivalent of saying Up Yours.\" \n\n\"Copy the gesture, touch fingertips. If we were genuinely intimate, we would have telepathically bonded by now, and when such gestures are employed in public by couples, when a low-level telepathic link would initiate with the contact.\" She paused and added, \"This will not happen between us if we touch now.\" \n\n\"Fine by me; my one telepathic experience wasn't the most pleasant.\" But Sasha mirrored the gesture, aware of the heat from the Vulcan's fingertips. \"Don't Go Breaking My Heart.\" \n\nT'Shul dropped her hand. \"I beg your pardon?\" \n\n\"It's the title of an ancient Terran ballad, a favourite duet love song at Karaoke. You and I are going to sing it when we get back.\" \n\n\"We are not.\" \n\n\"You owe me. I'm spending my weekend with your parents and you're not even gonna give me a tumble. Unless, of course, I win you over with my charms.\" She smiled and winked. \n\n\"You will need to find an alternative recompense. I do not sing.\" \n\n\"I bet I can make you sing,\" Sasha teased, grinning and winking. \n\n\"You will also need to curb your tendency for innuendo.\" \n\n\"But you make it so hard!\" \n\n* \n\nIt was soon their turn, and Sasha found them transported to a smaller, fortified community in another part of Vulcan, one where the sun, corona flaring angrily, was still high in the sky, but it was a sky that was growing hazy from... dust? Thunder? Lightning? \n\n\"Sandfire Storm,\" T'Shul explained as they retrieved their bags and she led them out to a line of autotaxis. \"They occur frequently in Vulcan desert regions this time of year. They are characterised by strong winds and blinding sand, as well as lightning-like discharges of electricity close to the ground. My family home is 44.6 kilometres from here; we should make haste before the storm increases in intensity and travel becomes dangerous.\" \n\nMinutes later, the autotaxi carrying them was racing down a narrow, winding road, its navigational computer showing no apprehension. Unlike Sasha, who glanced out at a rugged, treeless terrain, where striped, windworn rocks jutted up from the ground like the fossilised ribs of the skeleton of a long-dead monster, electrical discharges jutted upwards to and from the ground, and wind buffeted the vehicle. \"I hope your house is still standing by the time we get there.\" \n\n\"Family homes here are heavily-fortified; they have stood for centuries, some since the time of Surak, and modern technology makes them self-sufficient. We can survive isolated for weeks if necessary.\" \n\n\"Glad to hear it.\" She looked at T'Shul. \"You know, you haven't asked anything personal about me. This shouldn't be a one-sided relationship.\" \n\n\"Your garrulous nature during our Course attendance has provided me with a considerable amount of information about your life without my even asking.\" \n\n\"Sure, I've got a tongue that wags at both ends. But there must be something about me that tugs at your curiosity?\" \n\nT'Shul seemingly considered the suggestion. \"How did you obtain the scar on your neck?\" \n\nSasha's expression sobered: a thousand questions to ask, and she asks that... She almost didn't tell the truth. Almost. \"Two years ago, the Imperium of the planet Skaros sent a team of Vlathi snake assassins to the Surefoot, to kill my father and every Caitian they found onboard, in revenge for a mission Dad had on their world. One of the Vlathi cornered a Caitian civilian in the ship's Arboretum. The Vlathi gave me the chance to escape with my life. ",
        "I chose to stand and protect the civilian. I had no weapons but a pair of clawed gauntlets I used in my K'Gressir training. I eventually killed it... but not before it gave me a lethal dosage of its venom.\" She shrugged. \"Obviously, I survived.\" \n\nThe Vulcan girl nodded sagely. \"I was not aware.\" \n\n\"Most aren't. Let's keep it that way, okay? I don't want to be known as a killer of anything but a fried chicken platter.\" \n\n\"I understand. But may I ask another, related question?\" \n\nSasha pretended to find her boots distracting. Well, she asked for curiosity... \"Go on.\" \n\n\"If it is something which causes distress, why do you not have the scar surgically removed?\" \n\nSasha pursed her lips. \"Well... I guess... because I know removing it won't remove the experience. And I don't want to forget it. The scar is a reminder. A reminder that I was stronger than the thing that tried to kill me.\" She looked up, offering a smile that didn't reach her eyes. \"Very Klingon, huh? No wonder I got along with Khlaris.\" \n\n\"Indeed. I thank you for your candour. Have I asked enough personal questions?\" \n\n\"More than.\" \n\n* \n\nThe autotaxi drew up beside an impressive-looking stone structure, looking more like a small castle than a home, at least to Sasha's eyes, with high, narrow windows carved into the rock but currently covered in metal shutters. \"Wow, I see what you mean about this place having been here for centuries.\" \n\nAfter a brief but arduous struggle to get from the autotaxi through the stormy outside and into the sheltered foyer of the house, T'Shul led them inside: a stark, dark interior of high ceilings and cool stone floors, and lit with chemical lamps producing warm yellow-gold light. There was a slight scent of incense in the air, and the sound of the wind blowing waves of sand onto the walls and roof was barely audible. \n\n\"Someone approaches,\" T'Shul informed her softly. \"Please attempt to curb your normal human effusive exuberance and tactility in a Vulcan household.\" \n\n\"So, no boob grabbing?\" \n\n\"Absolutely not.\" \n\n\"What, not even my own?\" \n\nA middle-aged Vulcan couple in plain beige and brown clothes approached. They stopped silently, T'Shul nodding her head. \"Mother, Father: it is not disagreeable to see you again.\" She indicated Sasha. \"This is my partner, Sasha Hrelle of Cait. Sasha, this is my mother Prath, and my father Chadok.\" \n\nSasha took a step forward, her face solemn as she raised her right hand in the Vulcan salute. \"Sochya eh dif. Etek nam-tor pudor-tor tor nam-tor la.\" \n\nThe Vulcans, and T'Shul, reacted in varying degrees, T'Shul's parents managing better than their daughter. And Sasha took note of it; people liked to think of Vulcans as unemotional, but her own experience living and working with them taught her differently. They may not be as effusive as Caitians, but she had become sensitive to their actual emotional level, could see when they were sad or angry or - as now - surprised. \n\nThen Prath returned the salute, responding with, \"Dif-tor Heh Smusma, Sasha Hrelle of Cait. It is... interesting to see that you actually exist. T'Shul's father and I must admit to having had some doubts.\" \n\nSasha folded her arms behind her back, remaining polite and measured. \"Indeed, Ma'am?\" She looked curiously at T'Shul now. \"Are you embarrassed to admit you have a human girlfriend, Sweetheart?\" \n\nT'Shul made a visible attempt to control her emotions in front of her parents. \"Of course not... Beloved. I was merely being... considerate about not embarrassing my parents with intimate details about our relationship.\" \n\n\"Or indeed any details,\" Chadok noted mildly. \n\nThen Sasha smiled, relaxing as she reached out and raised her fore- and middle finger to T'Shul. \"They had you, Darling, I think they understand the concept of intimacy.\" When T'Shul didn't respond, she wiggled her fingers. \"Don't leave your girlfriend hanging here, Hon.\" \n\nT'Shul steeled herself and met Sasha's fingertips with her own, before dropping them and facing her parents again. \"Please excuse Sasha's human exuberance. Is Sulkek present?\" \n\nPrath nodded. \"And his mother.\" \n\n\"Then perhaps we shall commence the formal dissolution now so they can return to their own home, before the storm makes travel too hazardous?\" \n\n\"No. We have decided that they will remain overnight, to share in our evening meal. It is the least we can do to assuage their disappointment at your determination to sabotage our plans for you.\" \n\nInwardly, Sasha winced; parents of all races seemed to have an innate ability to deliver such barbs. \n\n\"For now,\" Chadok concluded, \"Escort your associate to your room and deposit your belongings. Then you may pay your respects to your grandfather and join us in the living room.\" \n\n* \n\nT'Shul had said nothing, collecting hers and Sasha's bags and motioning for Sasha to follow her along a winding corridor, down several steps and into a room through an old-fashioned door on a hinge. She remained silent until the door closed. \"Explain yourself.\" \n\nSasha had been admiring the ancient sigils carved into the surrounding walls, but now faced her. \"Huh? Explain what?\" \n\n\"Your behaviour downstairs. What purpose did that serve but to embarrass me?\" \n\n\"I don't know what you mean, Sweetheart.\" \n\n\"There is no need to use the appellation in private. Or in public, in fact.\" \n\n\"Of course; I'm sorry if I embarrassed you, but believe me, that's how couples act.\" She held out her arms. \"Wanna kiss and make up?\" \n\nT'Shul's posture stiffened. \"Thank you, no. When did you learn to speak Vulcan so fluently?\" \n\n\"I don't speak it, really, I only know a few phrases of a lot of different languages. It's a trick I learned from my Dad.\" She started picking her nose. \"It makes me look cultured and sophisticated. Come on, I wanna meet your Grandpa. I haven't embarrassed you to enough people yet.\" \n\n* \n\nThe elderly Vulcan was sitting in a chair in his bedroom, flanked by a gaunt female in a red medical jumpsuit, and an older male in a grey suit with flecks of grey in his hair. T'Shul straightened up as Sasha and she entered. \"Doctor Myrek? I am Strynn's granddaughter T'Shul. This is my... partner, Sasha. Is my grandfather able to accept visitors?\" \n\nThe doctor nodded politely to each of them. \"I was told that the both of you had arrived. Yes, Strynn is stable, with the assistance of his resident nurse, Betreth.\" The woman beside Strynn nodded curtly at them, but otherwise stayed focused on attending to the patient. \n\n\"Those Vulcans afflicted with Bendii will sometimes project their unchecked emotions to those around them,\" T'Shul explained quietly to Sasha. \"And require another Vulcan to provide telepathic support. It is considered preferable to utilising drugs such as Lexorin for telepathic suppression.\" As T'Shul regarded her grandfather, and Sasha could see the other girl's efforts to maintain her own control, she asked, \"Unless there have been more recent advancements towards a cure, Doctor?\" \n\n\"Not that I am aware of. But then it is not my specific field.\" \n\n\"Oh? I thought that you were a doctor?\" \n\n\"I am primarily a medical historian. I have worked with your grandfather prior to his current condition, in helping to decipher the ancient medical texts in his collection downstairs.\" \n\nT'Shul nodded, drawing up to Strynn. \"Grandfather... it is T'Shul. Do you remember me?\" \n\nThe wrinkled Vulcan's gaze narrowed in open annoyance as he looked up at T'Shul. \"Of course I do! I wanted to see you!\" \n\n\"You did?\" \n\n\"Yes! Nak got into my study again today. He defecated all over the rug.\" \n\nShe paused at that, and then looked to Sasha, her voice low and embarrassed. \"Nak was the family sehlat.\" She looked back at Strynn. \"No, Grandfather, Nak is dead. That incident of which you speak occurred 16.43 years ago.\" \n\nThe old man frowned in confusion. \"Nonsense! I saw him! And I saw what he left on my best rug! I was just there!\" \n\nSasha stared sorrowfully. She knew that some diseases still existed which affected the mental capacity of humans, Vulcans and Caitians, but had never met anyone who suffered from them. She thought of her Caitian grandfather Mi'Tree, who had been feeling the physical effects of old age recently, how it had eroded his confidence and boisterous personality, leaving him at times bitter. But at least his mind remained active; it must have been worse to be physically fit, but to lose one's memory, one's mental strength and dexterity... especially for a Vulcan... \n\n\"T'Shorel?\" Strynn asked tentatively, looking up at Sasha now, his confidence growing with apparent recognition. \"T'Shorel! There you are!\" \n\nT'Shul stiffened, informing Sasha, \"His wife, my grandmother. She died 12.8 years ago.\" \n\n\"T'Shorel!\" he repeated, more demanding now, holding out his hand to Sasha. \"Where have you been? I was worried about you! Come closer, My Wife!\" \n\nT'Shul looked uncomfortable now. \"If you wish to wait outside-\" \n\nBut Sasha stepped forward, kneeling down beside the old Vulcan and taking him by the hand, looking into the man's eyes. \"I have been away on business in ShiKar, My Husband, but I came home as soon as I could. I trust you have not caused your doctor and nurse any difficulties in my absence?\" \n\nT'Shul stared. \"What are you doing?\" \n\nSasha ignored her, as Strynn frowned at Sasha in a very un-Vulcan manner. \"What? No, of course not! Just ask them!\" \n\n\"No need, I trust you. Now I must go see about Nak, I heard he defecated in your study again. I will speak with T'Shul about keeping a better control over him.\" \n\nAwareness, or the semblance of it, crossed his features, and he nodded at her, squeezing her hand. \"You do that, My Wife. I have that paper to finish about the Histraack Mutations! That idiot Tihir still believes they did not fully emerge until the Osir Dynasty!\" \n\nSasha nodded, patting his hand. \"I look forward to reading it, My Husband, and seeing you enlighten Tihir with your wisdom.\" \n\nAnd now he smiled, with unabashed affection; even moisture welled up in his eyes, as he raised her hand to his lips, kissing it. \"I love you, T'Shorel. I don't tell you that enough.\" \n\nSasha felt her own emotions rising within her. \"You don't need to, My Husband. I love you too. Now, stay calm and rest, we'll speak later.\" \n\nAs she rose, T'Shul glared at her, but Sasha ignored it, turning to Myrek and Betreth, needing to get out. \"Please excuse us, we'll take our leave.\" \n\nIn the corridor beyond, T'Shul stopped Sasha, with tight, barely-concealed rage. \"How dare you?\" \n\n\"Excuse me?\" \n\n\"Mock me all you want, but I will not have you ridicule my grandfather! Not in his current state!\" \n\nSasha was wiping the tears from her own face; she hadn't expected that, hadn't been ready for it. He had reminded her so much of Mi'Tree. \"I wasn't ridiculing him! I promise!\" \n\n\"No, she wasn't,\" confirmed Dr Myrek from the doorway, approaching them quietly. \"She was preserving his dignity. People with these illnesses can often recall events from decades ago with crystal clarity, but not realise what day it is or who we are now. Had she or any of us tried to correct him, it would have just left him confused and upset.\" He looked to T'Shul. \"I understand that seeing him in this condition can be difficult for our people. Having known him for longer than you have been alive, I know that I find it emotionally arduous.\" \n\nNow he turned to Sasha. \"The human capacity to openly deal with such emotional issues has its advantages at times. You understood that it would be pointless to correct him. You allowed him to retain his self-respect. I thank you for that, on his behalf, and on behalf of his family.\" \n\n\"The honour was mine, Doctor.\" \n\nAs Dr Myrek returned to Strynn's rooms, T'Shul faced Sasha again, no longer appearing angry, but contrite, vulnerable. \"I... ask your forgiveness. I reacted emotionally, irrationally. When I believed you were taking advantage of him, I...\" \n\nSasha breathed in, recovering herself quickly. \"I understand. If I thought someone was mocking my grandfather, I'd have kicked their ass before now.\" \n\n\"I cannot of course advocate physical violence to the posterior.\" But T'Shul gathered her reserve. \"I believe now is the time to face my soon-to-be former fianc\u00e9 and settle this matter once and for all.\" \n\n* \n\nThey awaited them in a large main room, dominated by a large hearth, within which smouldered a pile of red coal-like rocks beneath a viewscreen. Numerous wooden chairs and couches were placed here and there, not of them looking comfortable to Sasha. \n\nOr perhaps she was reacting to the hardened expressions of the Vulcans in the room: a short, broad-faced, olive-skinned Vulcan male about Sasha's age, and a taller, older, thinner woman with an aristocratic clothes to go with her bearing, and undisguised disdain as she scrutinised Sasha, while Prath made the introductions. \"Lieutenant Sasha Hrelle, this is Lady Valtis, mother to Sulkek, T'Shul's fianc\u00e9.\" \n\n\"Former fianc\u00e9, Mother,\" T'Shul corrected. \n\n\"We shall see,\" Valtis informed them all, focusing with disdain on Sasha. \"You are her alleged human lover?\" \n\nSasha stared back. \"I guess that depends, Milady. Do you mean alleged lover, or alleged human?\" \n\nT'Shul started beside her, recovering with, \"As she demonstrates, her sense of humour marks her as very human.\" \n\n\"Yes,\" Sasha agreed, keeping her gaze on the other Vulcans but slipping an arm around T'Shul's. \"It's what first attracted her to me. Well, that and my boobs.\" \n\nSulkek bristled at the joke, and a seeing the physical contact between the young women, but Valtis raised her chin archly. \"You mock. You are responsible for sabotaging a union that has been planned for decades, and you mock.\" \n\nChadok entered the room from another doorway, as T'Shul self-consciously released Sasha's hold on her arm. \"Sasha is merely a catalyst to my own decision to annul the betrothal, as I have tried to convince both you and my parents.\" She looked to Sulkek. \"This is not a reflection on you, and should not be taken as such. But I have built a new life away from this Province. I am in Starfleet, and I am planning a career which may take me off-world for extended periods.\" \n\n\"And of course she prefers women,\" Sasha added, indicating herself. \"Which might be a bit of an impediment if you happen to be blessed with a penis. Which I'm assuming you do, Sulkek.\" \n\nThe young Vulcan man glared at the human. \"She is obviously mistaken about her preferences.\" \n\n\"Indeed?\" T'Shul retorted archly. \n\nNow he looked at her. \"Of course. When we first mindmelded, there was no indication of this preference in her thoughts.\" \n\n\"We initiated one low-level telepathic link, one, seven years ago, a link that lasted for only several minutes,\" T'Shul reminded him with open indignation. \"Hardly enough time for you to make such a judgement.\" \n\n\"It is recognised that for many young persons,\" Chadok pointed out. \"Their sexual orientation is often not fully developed until they reach your current ages.\" \n\nPrath shot him a look for his contribution to the argument, as Valtis responded. \"Still, there is no legal impediment keeping them from marrying regardless of their sexual preference.\" \n\n\"Wouldn't that be considered deceitful, Milady?\" Sasha chided, stunned at how far the woman was willing to go to get her son hitched. \"I wouldn't expect that from Vulcans.\" \n\nThe old woman looked at her disdainfully. \"You assume that love is an essential component to a successful marriage. Perhaps that holds true for human marriages, but it is arrogant to apply your standards to other cultures. Especially ones far older than your own.\" \n\nThat caught Sasha off-guard, as she recognised that the woman might have had a point. She looked around. \"My apologies if I've done that. But I've grown to know T'Shul, and I know how strongly she feels about not marrying. Whatever plans you may have made for her when she was a child, they should no longer apply now that she is an adult, capable of making her own decisions.\" \n\n\"This is absurd,\" Valtis declared, looking to Prath and Chadok. \"Why did you even allow this alien into your household?\" \n\nT'Shul stepped up closer to Sasha, holding out her two fingers. \"You are speaking of my lover, Milady.\" She looked to Sasha expectantly. \n\nSasha raised an eyebrow as she met the gesture, noting how Sulkek's ire seemed to double, and his face turn a darker shade of green. \n\n\"I must agree with my daughter,\" Prath declared, albeit sounding reluctant to do so. \"Whatever else the Lieutenant is, she is a guest in our house.\" \n\n\"Pardon my interruption,\" came a familiar voice from the bottom of a nearby staircase, as Dr Myrek descended to join them, hands hidden in the folds of his robes. \"But I thought it might interest you all to know that Professor Strynn is resting comfortably; I believe the help and support Lieutenant Hrelle provided him was most beneficial. However, Nurse Betreth finds herself fatigued from her efforts, and excuses herself from evening meal.\" \n\n\"Thank you, Doctor,\" Chadok replied, almost sounding relived at the distraction as he looked to the others. \"I will have food set aside for her for later. Perhaps we can all repair to the dining room now? Our servants have returned to their homes to be with their families for the weekend, but I find I still know my way around the kitchen, in a proverbial as well as a literal sense.\" \n\n* \n\nThe storm outside continued to howl and pound against the thick stone walls. It seemed louder with the silence around the dining room table. Sasha wasn't certain if this was normal, to be quiet while eating, or whether it was a result of the overall tension among them. \n\nStill, she couldn't keep herself silent for long, looking to Chadok. \"This is very tasty, Sir. Pok Tar, isn't it? And you prepared it yourself?\" \n\nT'Shul's father nodded. \"Yes, Lieutenant. It was a practice my parents taught me, to ensure I did not neglect my nutrition while studying business at University.\" \n\nSasha smiled. \"Well, this is as good as any I've had in the big restaurants in ShiKar. You would have had a great career as a chef if everything else failed, Sir.\" \n\n\"My husband is a very successful businessman,\" Prath informed her coldly. \n\nSasha felt her face heat up. \"Oh, ah, sorry, I didn't mean to imply anything different, Ma'am.\" \n\nT'Shul looked Prath reprovingly. \"It was obviously meant as a compliment, Mother.\" \n\n\"And taken as such,\" Chadok assured them. \"And I thank you for the compliment, Lieutenant.\" \n\n\"It does not taste right,\" Lady Valtis announced. \"There is a minty, peppery tang. Did you use clean cooking utensils?\" \n\nChadok looked to her. \"Of course, Milday. I have experimented with the original recipe, adding a Terran herb called basil. It is popular now among Vulcans in cosmopolitan areas.\" \n\nSasha nodded. \"Do I detect some oregano in there as well, Sir?\" \n\nHe affirmed. \"Indeed. You have a keen sense of taste; is that part of your Caitian heritage?\" \n\n\"Caitian, Sir?\" \n\n\"Yes, T'Shul has mentioned that your father is a Caitian captain in Starfleet. Was this incorrect?\" \n\nFor a moment, Sasha was distracted by Sulkek, who ignored his food, seemingly too focused on staring at T'Shul, who clearly felt uneasy at the intensity of his attention, but also clearly unable to speak up about it. Then Sasha responded. \"No, Sir, not exactly, but I can understand the confusion. My biological parents were both human, but I never knew my father, my mother marrying Captain Hrelle when I was six, so in my heart he's my real Dad.\" \n\n\"This explains much,\" Lady Valtis noted tightly. \"Having your upbringing polluted by alien influences will naturally leave you ill-equipped to appreciate family obligations.\" \n\nSasha looked back at the older woman, setting down her eating utensils. \"On the contrary, Milady. My 'polluted' upbringing has led me to become a fully-fledged member of a large Caitian clan. I have gained 137 grandparents, uncles, aunts, cousins, nieces and nephews. I may not look or smell like them, but I am one of them. And should any of them need me for anything, I am at their disposal, even if it means risking my life... confident in the knowledge that they will respect whatever decisions I might make with that life.\" ",
        "Valtis' facial muscles continued to stay tight, until she set down her eating utensils. \"I am done with this. Your Pok Tar was inadequate, ruined by the inclusion of alien ingredients; you should have insisted that your servants remain to prepare the meals.\" \n\nPrath looked to her, her gaze narrowing. \"They are our staff, Milady, not our servants; we would not deny them the right to honour Wan T'naehm with their own families. We explained this much to you when you insisted on remaining here tonight.\" \n\n\"Well, I for one have no complaints about the Pok Tar,\" Dr Myrek contributed mildly, looking to Chadok. \"And I appreciate the variation on the recipe, Prath; it is a culinary expression of IDIC: Infinite Diversity in Infinite Combinations.\" \n\n\"Thank you, Doctor.\" Chadok rose. \"I will bring in the next course.\" \n\nPrath rose as well, beginning to collect the emptied bowls, but Sasha, still seeing how Sulkek was staring at T'Shul, asked, \"Sir, Ma'am? Do you require assistance?\" \n\n\"Thank you, Lieutenant, but no, you are a guest.\" \n\n\"Actually, I was going to recommend T'Shul assist. She's not a guest, after all.\" Sasha looked to her friend. \"Go on, Sweetheart, give them a hand.\" \n\nT'Shul started, before nodding, rising and collecting the remaining bowls and cutlery and following her parents into the kitchen. \n\nSasha waite until the door closed before leaning forward in her chair towards Sulkek, keeping her voice low. \"Listen, Sulky, you keep sitting there giving T'Shul the Evil Eye, and I'm gonna knock you back into the Age of Surak. You got that, Shitbiscuit?\" \n\nSulkek bristled, leaving his mother to retort, \"How dare you? You ruin my son's impending marriage, and now you insult him? Threaten him?\" \n\nSasha never took her eyes off of the youth, seeing - a boiling rage? From a Vulcan? - but responded, \"With all due respect, Milady, there was always more than just one person involved in this change to your arrangements. T'Shul was trying to get out of it before I came into the picture. How about you, pal? Do you really want to be married to someone who doesn't want to be married to you? Where's the logic in that?\" \n\nThe young man answered through clenched teeth now. \"Do not speak to me of logic, Offworlder. T'Shul is mine. She belongs to me!\" \n\n\"T'Shul is her own woman, Sulky. Get used to it.\" \n\n\"Young man,\" Dr Myrek interjected, scrutinising him with disapproval. \"You are allowing your control to slip, to draw you into the Plak-tow. Perhaps you should excuse yourself to meditate, or take a suppressant-\" \n\nSuddenly Sulkek rose to his feet, hands flat on the tabletop as if needing the support, glowering at Sasha as he declared, \"KAL-IF-FEE!\" \n\nSasha rose as well, seeing the fury, the danger, in the Vulcan's eyes, and feeling her hackles rise. \n\nValtis rose now, concerned for her son. \"Sulkek, please, perhaps the doctor is correct...\" \n\nMyrek rose beside Sasha, his low voice laced with caution. \"Lieutenant, proximity with the woman Sulkek was to be bonded with has triggered the Plak-tow, the Blood Fever. It is traditional for them to issue the Kal-if-fee, the Challenge, to any potential rivals of their intended mate. Be warned: they can be... dangerous at these times.\" \n\nSasha never took her eyes off of Sulkek, but in her peripheral vision saw T'Shul and her parents return to the raised voices. \"Thanks, Doctor... but so can I. As for you, Sulky, I'm not taking your precious Challenge. T'Shul is not a possession to win over in a match. She's her own person, with a right to choose whom she calls Partner - I just happen to be very fortunate to have been chosen. \n\nBut as much as I want to respect your traditions and beliefs... this particular aspect of it can kiss my tailless ass. I won't perpetuate this cultural misogyny of yours by fighting you.\" She leaned forward. \"Also, I'm a trained Starfleet officer who knows about 47 different ways of humiliating you in front of everyone. So, I suggest you go off, take a suppressant or a cold shower, or settle down for the night with some porn, or whatever else you need to do to shake this off and stop acting like a putz.\" \n\n\"You insult the Vulcan people,\" Valtis accused. \"I will lodge a formal complaint with Starfleet Command! You slur a tradition that dates back millennia, a tradition that-\" \n\n\"A tradition that is hardly ever practised now, Lady Valtis,\" Myrek interrupted sharply. \"At least, hardly practised outside of certain families who still retain a hold on outdated aristocratic claims abandoned by all right-thinking Vulcans.\" \n\nValtis practically seethed at his words. \"I expected better from a doctor of such redoubtable reputation.\" She looked to Chadok. \"My son and I will retire for the evening to our rooms.\" She spared Sasha and Myrek a final glare. \"We will no longer keep company with Offworlders... or parochial radicals.\" \n\nSasha watched as Valtis led her son away from the table and towards the steps to the guest quarters. \n\nAll eyes then turned to Sasha, Prath speaking first. \"We had left the room for only 1.6 minutes. How did you manage to provoke half of our guests into departing in such a brief moment?\" \n\nNow Sasha felt her face burn. Had she provoked matters? She was always too passionate about defending her friends. Could she have handled that better? \"I- I'm sorry-\" \n\nBut then Myrek affirmed, \"Lt Hrelle does not need to apologise. The young man had been behaving inappropriately with regards to T'Shul; she was merely defending her partner. I would hope that my own child will someday find someone who is equally protective of him.\" He looked to Chadok and Prath. \"Now, am I detecting the aroma of Rumall Casserole from your kitchen?\" \n\nT'Shul's mother nodded. \"Yes, Doctor.\" \n\n\"Then we should continue our meal, as Rumall is best eaten when fresh from the pot.\" He sat down again. \"If, of course, none of you have any issues about dining with a parochial radical such as myself?\" \n\nSasha smiled. Yeah, she definitely liked him. \n\n* \n\nThe study was unusually-shaped, like an irregular trapezoid, with a large curved stone desk with strong overhead lights, fixings, and several computer terminals, the only obvious concession to modern technology. The walls rose up nearly three metres, with shelves from floor to ceilings containing hundreds of stacked cylinders, each about ten centimetres in width. \n\nOne cylinder was open, and its single content - an emerald-green crystal shard, now rested on an interface unit beside one computer terminal, which now presented text and diagrams in Vulcan script. Sasha sat in a padded wooden chair in front of it, fascinated - not in the content of the script, which she couldn't read, but in the origin behind it. \"And this is a medical text from sixteen hundred years ago?\" \n\nStanding behind her, Myrek replied, \"1,540 years ago, to be precise. Vulcan technology had been advanced to the point of achieving interstellar travel by that stage, but our passions led us to almost destroy ourselves through nuclear war, much as Earth did only three centuries ago. The militant factions fled in starships, believing our planet's biosphere irreparably damaged, and they of course eventually founded the Romulan Star Empire. \n\nThe remaining Vulcans, meanwhile, as they repaired the planet, began to embrace the teachings of Surak, of logic and discipline... even as the doctors of the day noted the emergence of telepathy among their offspring, believed to be the result of mutations from the increased background radiation following the war. Surak's disciplines assisted those afflicted with telepathy in controlling them, thus reinforcing the acceptance of his philosophy.\" \n\nShe looked at the crystal, as if she could stare inside to see the liquid floating within. \"And these aren't copies? They're original data drives from that time?\" \n\n\"Yes. Much of our history was lost immediately following the war, as most contemporary data were electronic- or magnetic-based, and thus susceptible to damage or degradation after only a few decades. But a select few at the time chose to store their data organically, in DNA strands suspended in organic fluid housed inside hermetic crystals accessed through trellium interfaces. It was considered a slow and expensive process compared with others employed, but it was one guaranteed to maintain data integrity for centuries.\" \n\nSasha was genuinely fascinated - and appreciative of the distraction Dr Myrek provided her, while T'Shul had a moment alone in the adjacent living room with her parents. With the departure of Lady Valtis and Sulky to their rooms, the tension among them had lightened considerably, at least as far as Sasha could tell. But it could easily twist. She glanced over her shoulder. \"Hope she's okay in there.\" \n\nMyrek drew in, removing the crystal carefully and placing it back into a suspension harness inside an empty cylinder. \"I am certain that the matter will resolve itself.\" He faced her again. \"You are not her genuine partner. You may be friends with her, but she asked you to pretend to be more, to assist her in annulling the betrothal. Am I correct, Lieutenant?\" \n\nSasha felt her face flush. For a moment, she wondered if he was trying to trick her into confessing so he could inform T'Shul's parents, but then thought better of him. \"Is it that obvious?\" \n\n\"No, it is not; you play the role of partner well, and Vulcans such as T'Shul's parents are not so accustomed to dealing with humans that they can discern the truth adequately. But unfortunately I have seen similar situations arise with other Vulcan families who choose to practise such antiquated traditions. I of course will say nothing; as an unrelated guest, it would not be my place to interfere anyway.\" \n\n\"Thank you, Doctor.\" She rose to her feet, secretly relieved that there was someone else here who not only understood, but supported them. \"I tried to tell her just to be direct and honest with them, but they... intimidate her, threatened her with being disowned. I think she wanted a win-win situation, where all parties would come to an understanding and walk away satisfied.\" \n\nMyrek nodded sagely. \"A laudable intention, but I fear an unrealistic one.\" He paused, seemingly hearing the voices from the other side of the door. \"I believe now would be an opportune moment for you to rejoin the family. T'Shul's parents have graciously allowed me access to Professor Strynn's work here, so I will take my leave of you now and continue my work here. I believe 'Good Luck' is the appropriate declaration at this juncture.\" \n\nShe smiled. \"Thanks, Doctor. For everything.\" \n\n* \n\n\"Your relationship with the human is dangerous,\" Prath informed her daughter, as they continued to stand in the living room, facing each other. \n\nBeside Prath, Chadok looked to her curiously. \"I... would not necessarily employ the adjective 'dangerous', My Wife.\" Then he focused on T'Shul again. \"But she has acted in a disruptive manner.\" \n\nT'Shul stiffened, tightening her formal posture. \"I believe it is more accurate to say that she has reacted, and in a protective manner, towards the insulting and aggressive provocation we have received from Lady Valtis and Sulkek.\" \n\n\"Their reaction is completely understandable,\" Prath insisted. \"Given your refusal to see logic, an obvious side effect of your association with non-Vulcans.\" \n\n\"There is nothing wrong with me,\" she countered. \"I simply refuse to see... their logic...\" She paused, frowning to herself. \n\n\"Is there something wrong, Daughter?\" Chadok asked. \n\n\"No, Father... I am simply reminded of an exercise I took today, where I learned that logic is not a universal constant. And it is true. Your logic, that I should fulfil my family obligations and marry against my will, disagrees with my logic, that my right to choose my own destiny is paramount.\" \n\n\"Your logic is obviously flawed,\" Prath accused. \n\n\"Of course it is. Because yours must obviously be flawless.\" \n\n\"Petulance ill-becomes you, Daughter. You cannot be satisfied by a relationship with a non-Vulcan. The racial and cultural differences must be insurmountable.\" \n\n\"That is patently absurd, given that ours is not the first relationship between Vulcans and non-Vulcans.\" As the study door opened and Sasha entered, T'Shul. \"She satisfies me greatly, both intellectually and physically.\" \n\nSasha approached. \"I hope you're talking about me.\" She looked at the tense faces. \"If I've interrupted, I can wait in the bedroom-\" \n\n\"No,\" T'Shul declared, still staring at her parents. \"I want you present. Mother, Father, why can't you accept that Sasha gratifies me, as both a friend and a lover? Do you require a demonstration before you of her skills?\" \n\n\"I'm sure they don't,\" Sasha assured quickly, feeling her face flush. \n\n\"Rudeness is not required in a civilised conversation,\" Chadok scolded her. \"But we are naturally concerned that you are abandoning a potential relationship that can last for the rest of your life, for one that might only be short-term.\" He looked to Sasha now. \"What do you see in our daughter, young woman?\" \n\n\"You do not have to answer that-\" T'Shul started. \n\nBut Sasha shrugged. \"I don't mind. It's actually an easy one to answer.\" She looked back at Chadok. \"From the moment I met your daughter on the Advanced Command Training Course, she... has been a royal pain in my ass. She has questioned and objected and argued with every answer I gave, every decision I made, in every class we've shared. When I was alone in my quarters, I would curse her very existence. Actually, when I come to think of it, I was cursing her to her face, too. I thought I hated her. \n\nBut then I began to see the motives behind her method. She wasn't being destructive, she was being constructive. She saw my potential, and wanted to help me fulfil it. She wanted me to be a better Starfleet officer. A better person. \n\nAnd thanks to her, I have become better. For her, as well as myself.\" \n\nShe held out her fore- and middle finger, offering it to T'Shul. \n\nThe girl, already focusing on controlling her reaction to Sasha's words, extended her own fingers. They touched, briefly. \n\nThen Sasha lowered her hand. \"Also, she's amazing at Karaoke.\" \n\nT'Shul reacted to the additional comment, as Prath asked, \"I am not familiar with that term. Is it a branch of the Sciences?\" \n\n\"Sasha is just being facetious-\" T'Shul began explaining. \n\nUntil Sasha butted in. \"Karaoke is a Terran recreation, Ma'am, where participants go onstage and sing, as a machine provides them with the backing music and the lyrics. There are Karaoke facilities at an Offworlders bar in ShiKar, where I managed to convince my Beloved here to give us a few numbers.\" She looked at T'Shul and smiled. \"She has quite a singing voice, and always has a good time up there.\" \n\nT'Shul's expression was a mask as she looked back at her parents. \"She exaggerates. I merely perform the minimum required to appear sociable among non-Vulcans. I do not have a 'good time up there'.\" \n\n\"You did possess an accomplished singing voice as a child,\" Chadok pointed out. \"As a member of the nursery school choir.\" \n\nSasha leaned forward, eyes bright with amusement. \"She was in a choir?\" She looked to T'Shul. \"You kept that quiet, Sweetheart!\" \n\nT'Shul bristled, as she explained, \"It was not a choir as humans might understand the term, but more a linguistics course; many pre-Reformation Vulcan languages were musical by nature, and the songs taught were designed to reinforce and strengthen our communications skills. Nothing more.\" \n\n\"That is not how I remember it,\" Chadok noted wryly. \"I am certain I saw you enjoying yourself.\" \n\n\"And I am certain you only saw the lack of emotional control typical for a child of that age, Father.\" \n\n\"Too bad you don't have any recordings,\" Sasha commented, grinning. \n\n\"We do,\" Prath corrected her. \"Are you interested in viewing them?\" \n\n\"Yes!\" \n\n\"No!\" T'Shul declared flatly. \n\nBut she was overridden. \n\nThe evening had progressed from there, with T'Shul appearing chagrined while her parents played the aforementioned recordings. Sasha sat beside her, looked at her expression and laughed. \"You look like you did when Khlaris shot you in the head! Parents have an innate ability to humiliate their cubs! Give my Dad a chance, and he'll tell you stories about how I wet myself while onstage in a school play, or how he heard me losing my virginity in the sleeping compartment of the runabout he was piloting.\" \n\nT'Shul tightened her jaw and said nothing \n\nBut Sasha had begun to think her parents were finally warming up to her... until she started talking at length about her Dad, and their adventures on the Surefoot. And then she saw the apprehension in their expressions, saw the looks they exchanged with each other. And Sasha recognised what was being planned. \n\nHer suspicions were confirmed as Prath said, \"T'Shul, go to the kitchens with your father, help him prepare some chilled gespar slices. Your friend might appreciate a cool refreshment on this hot evening.\" \n\nThe woman nodded and rose, following her father out. Sasha watched them go, waiting to see how long it would take for Prath to reveal her true intentions. \n\nNot long, in fact. \"Young woman, I must admit that you are... not what I expected. You are not unpleasant.\" \n\nSasha looked across at her. \"That's literally the nicest thing you've ever said about me.\" \n\n\"You seem to know our daughter... and genuinely care about her.\" \n\nSasha stopped joking and looked at her soberly. \"Yes, Ma'am. I do.\" \n\n\"Then let her go. Let her marry Sulkek, or someone else. It will be for the best, for her.\" \n\nSasha frowned. The woman just wouldn't let up, would she? \"Are you kidding me? Do you think that if I wasn't in the picture that she would suddenly start feeling like marrying- wait? 'Someone else'? Is this because of me? Because you don't want her involved with a human?\" \n\nPrath rose to her feet \"My husband and I are preapred to offer you financial recompense if you end your relationship with our daughter.\" \n\nSasha felt her jaw drop. \"Are you trying to bribe me now? Really?\" She rose to her feet as well. \"I thought this meshuggenah business about arranged marriages was bad enough, but not you're trying to buy me off?\" She almost blurted out how her relationship with T'Shul was a sham, except that it wasn't her deception to expose. Instead, she let the tight outrage she felt draw her close to the Vulcan woman and declare, \"You can't buy me. Understand?\" \n\nIt was then that T'Shul and Chadok returned, with small silver bowls of the chilled Vulcan fruit, but immediately noticed the change in the room, T'Shul asking, \"What has occurred?\" \n\nSasha almost told her - except that such a reveal would only open the proverbial can of gagh, drawing Sasha into a domestic brouhaha that she had no stomach for. She visibly calmed herself to reply, \"Nothing. The day, and the heat, has caught up with my weak human frame. I'm going to bed. You can stay up with your folks if you like, I'll understand.\" She spared a glance at the parents. \"Good night. Thank you both for your hospitality, your food and your company. You've made me feel very welcome, and have done honour to your people.\" \n\n\"Sasha-\" T'Shul began. \n\nBut Sasha made her way around them, disgusted on behalf of her friend as well as herself, doubting that this was her best response to the ongoing family crisis, but needing to get away regardless. She ascended the stairs and towards T'Shul's rooms- \n\n\"You.\" \n\nShe stopped, turned and saw Sulkek standing in another doorway. He was bare-chested, clad in baggy black pyjama bottoms; his torso was swarthy and smooth, his arms thin and his face taut as he clutched the sides of the doorway as if for support. ",
        "And she wasn't in the mood for him, certainly not now. \"Stroke off, Sulky.\" She turned to continue onwards - even as a part of her remained alert, listening and feeling for what seemed inevitable- \n\nShe turned as he charged at her from behind, but he was quicker than she expected, striking the side of her head even as she drove her boot into one of his knees. He fell forward, she backward; the hallway was narrow, and she banged the back of her head against the stone wall, but forced down the pain to adopt a defensive stance, watching him twist about, driven by the Blood Fever, white teeth clenched, eyes wide, hands balled into fists. \n\nHe charged again, and the restricted space also restricted her defensive options, settling for a Roylan Aikido move, fighting back her ringing head to try to drop and flip him over, twisting his arm behind him until he cried out, while she smacked her boot tip into the back of one of his knees, driving him downward. Nearby, Valtis approached, kneeling by her son. \"Release him!\" \n\n\"Stroke off!\" Sasha spat, trying not to throw up or release him. \"You better calm him down, or I'll break his arm!\" \n\n\"Out of my way!\" \n\nSasha looked up to see T'Shul and her parents there, but it was Betreth who spoke, pushing past them to draw a hypospray into view and pressing it against Sulkek's neck. In seconds, the young man's struggles died away, leaving him bent over, gasping to control his staccato breathing. \n\n\"You can ease up on him now, Lieutenant,\" the nurse informed her. \"Lexorin. That will take the fight out of him.\" \n\nSasha wasn't entirely convinced, but knew she couldn't stay there indefinitely, and tentatively release her hold on Sulkek, stepping back and allowing his mother and Betreth to help him back to his feet. Valtis shot daggers at Sasha. \"You are the cause of this!\" \n\n\"Me? I was the one who was attacked!\" \n\n\"Your very presence is a challenge! One he could not resist!\" \n\n\"Oh really? Blaming the victim, huh? Why am I not surprised this is part of your cultural repretoire?\" \n\n\"T'Shul was his! And then you came along!\" \n\n\"I am no one's,\" T'Shul declared resolutely. \"I am not yours, Sulkek. And I am not Sasha's, either. I am my own woman.\" She pointed to Sasha. \"I have no interest in women. She is my friend, nothing more. She agreed to accompany me and pretend to be something more.\" \n\n\"What?\" Chadok exclaimed. \"You lied to us? Your own parents?\" \n\n\"Yes. It seemed necessary, given yours and Mother's stubborn refusal to accept my unwillingness to marry Sulkek.\" \n\nHer parents looked to each other, as Valtis sneered, \"You would rather have pretended to prefer women, than marry my son?\" \n\n\"Yes, Milady; consider that a reflection on your son.\" \n\n\"T'Shul,\" Prath declared quietly. \"This deception was an outrageous act on your part.\" \n\nT'Shul nodded gravely. \"I agree completely, Mother... given that my friend has been injured as a result of my deception.\" She looked to Sasha. \"Come.\" \n\n\"This is not finished, Daughter,\" Chadok promised her. \n\n\"I agree, Father. We will talk again in the morning.\" \n\n* \n\n\"Sit,\" T'Shul ordered as she strode to her dressing table. \n\n\"Yes, Ma'am,\" Sasha quipped as she sat on the edge of the bed, her head still ringing as she watched the Vulcan woman retrieve something from a drawer. \"Are you okay?\" \n\n\"Yes. But you need to get treated.\" She returned to her with a small case, opening it and producing a pocket protoplaser, switching it on and nodding with satisfaction as it reached full power. \"I was secretly training myself to pass the physical fitness requirements for Starfleet Academy by hiking and climbing in the Fire Plains. I received numerous cuts, scrapes and sprains that I would heal myself.\" As she began repairing the damage she found, she continued. \"I am sorry, Sasha. You were right from the start. I should have been stronger. And you were almost seriously hurt.\" \n\n\"Don't kick yourself too much,\" Sasha told her, appreciating the warm, tingling effects left by the protoplaser as it did its work here and there. \"Sometimes we don't understand how strong we really are. Occasionally we need others to remind us.\"  \n\n\"What were Mother and you talking about downstairs? What made you leave so abruptly?\" \n\nSasha paused, delaying answering by pretending to be distracted by the pain in her head - which wasn't that much of a pretence - before finally offering, \"The details aren't important. But I got the distinct impression that your parents are willing to marry you off to Sulkek, to anyone, rather than continue to be with a human.\" \n\nShe looked up. \"Did she insult you?\" \n\n\"No,\" Sasha lied. \n\n\"They have never expressed any bigoted opinions before.\" She rose. \"I will speak with them-\" \n\n\"No!\" Sasha shot up as well... and immediately regretted it, sitting down again with T'Shul's help and bending forward. \"Fix my head. And follow your own advice and leave it until the morning. Let cooler heads prevail.\" She grunted. \"Never thought I'd have to advise a Vulcan that.\" \n\nT'Shul acquiesced, drawing the protoplaser over Sasha's head. \"They will disown me after this.\" \n\n\"You don't know that.\" \n\n\"I know them. They will disown me. I will be alone after tomorrow.\" \n\nSasha reached up and gently grasped T'Shul's wrist, looking up at her friend. \"Firstly: there's no point in worrying about something unless and until it happens. Secondly: speaking from my own experience, you never know your parents as well as you think you do, and they can surprise you as much as you can surprise them. And Thirdly: you will never be alone. I promise.\" \n\n\"Thank you,\" T'Shul finally replied. She continued. \"A pity we retired for the evening before sampling the gespar. Someone with your love of food would have appreciated the taste, and its low caloric content would not significantly add to your already-ample waistline.\" \n\nSasha smiled. \"You know, all that sweet talk just before we go to bed could get you into trouble, Darling.\" \n\nT'Shul stopped treating her and stepped back. \"There. Do you require help undressing?\" \n\nSasha shook her head, bending forward and removing her boots and shoes as T'Shul returned th medical kit to her dresser. \"Thanks for fixing me up.\" \n\n\"Thanks are unnecessary. Shall I retrieve your sleepwear from your bag?\" \n\n\"I don't have any.\" \n\n\"But what do you wear to bed?\" \n\n\"Usually just a smile.\" Their eyes met. \"And if I don't have one when I go to bed, I usually end up with one before I fall asleep - if you know what I mean.\" She grinned, winked and made clicking noises with her mouth as she rose and slipped out of her uniform. \"Unless you think lying beside my nekkid body all night will be too much of a temptation?\" \n\n\"No.\" \n\n\"Are you sure? Aren't you worried that the sight of my scars and hairy pits and legs will get you all Plak-Tow?\" \n\n\"I will endeavour to control my passions.\" \n\n\"Damn. I was afraid you were gonna say that.\" \n\nThey climbed in under the sheets, Sasha chuckling. \"This feels good. It's been a long day, making peace with Klingons, getting into fights with Vulcans, hopping into bed with a beautiful woman.\" She looked to T'Shul, who was lying there, still, staring up at the ceiling. \"What's wrong?\" \n\n\"This is my first instance of sharing a bed with another person. I am not accustomed to it. How does one usually adjust to it?\" \n\n\"Tire yourself out with sex?\" \n\n\"Any suggestions more likely to occur?\" \n\n\"You'll get used to it. You might even learn to like it. If there's anything I can do to help, just ask.\" \n\n\"Very well: confirm once more than coitus will not be attempted.\" \n\n\"Confirmed.\" \n\n\"And do not be overly possessive of the bedcovers.\" \n\n\"No problem.\" \n\n\"And do not produce any flatulence.\" \n\nSasha paused. \"Your family feeds me a four-course all-vegetable meal, and you expect me not to fart?\" \n\n\"You should be able to control your bodily functions.\" \n\n\"You're quite right.\" \n\nThen Sasha farted. \n\n\"I believe I was quite explicit in my instructions,\" T'Shul informed her. \n\nSasha farted again in reply. \n\n* \n\nSasha was uncertain how long she had been asleep, but didn't think it had been long, before she bolted upright in the dark, T'Shul sitting up as well, drawing the bedside lights back to life as the knock they heard on her door repeated. \"Who is it?\" \n\nThe door opened, and T'Shul's mother appeared, pausing and reacting to the two women in bed, before explaining, \"Forgive the interruption, but something has happened in the study where Dr Myrek has been working.\" \n\n\"What is it?\" T'Shul asked. \"What has happened?\" \n\n\"I was in the living room, meditating after your father retired to our rooms, when I heard a noise from behind the study door. The door is locked from within, and he is not responding to repeated attempts at communication. I am concerned for his safety.\" \n\nBoth women rose from bed for their clothes, Sasha asking, \"I take it you don't have a key to open the door from the outside?\" \n\nPrath looked away from the girl, but replied, \"It is electronic, and it appears to have malfunctioned. Chadok has attempted to open it, but perhaps your Starfleet training might prove efficacious?\" \n\nSasha knelt and rummaged through her bag, producing a tricorder, slinging it around her neck as T'Shul asked, \"Have you contacted Emergency Services?\" \n\n\"It seemed pointless, given that they cannot travel with the storm still strong outside.\" \n\n\"But we do not have the expertise to open such a lock.\" \n\n\"I can do it,\" Sasha declared, back in uniform and striding up to Prath. \"Take me to the study.\" \n\nThe older woman looked between the two girls, before nodding and leading them out into the corridor, Sasha ignoring the curious look T'Shul was giving her. \n\n* \n\nSasha found T'Shul's father standing in the living room, by a plain black door at the far end. Nearby, Sulkek, his mother and Betreth were present, witnessing, and parting as the two Starfleet officers approached, Sasha kneeling beside the door handle and activating her tricorder. \n\nT'Shul stood beside her. \"This is pointless; a standard tricorder will not assist in unlocking a door.\" \n\n\"I agree,\" Sasha noted absently, making adjustments to the interface to a Security submenu. \"Fortunately this is not a standard tricorder.\" She smiled to herself. \"It's been Jonased.\" \n\n\"I am not familiar with that term.\" \n\nSasha initiated the unlocking cycle, watching the readouts as the tricorder's programs ran through the possible combinations. \"Jonas: Verb, meaning to have improvements made to a ship or device by an incredibly talented young man called Jonas Ostrow... whom I have been extremely honoured to know and command in my day. Take my advice, T'Shul: if you ever find him as a member of your crew, hang onto him.\" The door locked before her clicked, and she stepped back, letting T'Shul and her parents enter, being content to stay there until T'Shul called her name. \n\nShe entered. The study was just as she remembered it from earlier that night - only the chair was overturned, the ladder against the shelves was askew, and there were cylinders and data crystals scattered on the stone floor. \n\nAnd Doctor Myrek's body lay there. \n\nSasha immediately knelt beside it, checking the pulse with one hand while adjusting the settings to Medical on her tricorder with the other, seeing the injury on the left side of the man's skull, where dark green blood pooled under the exposed skin and had trickled out onto the floor. \n\n\"He's dead?\" Lady Valtis asked. \n\nSasha and T'Shul exchanged glances, before Sasha nodded sadly. \"Yes.\" Sorrow suffused her; the man had been friendly, sympathetic, charming, dedicated... a decent person. She looked up at Betreth. \"Do you wish to confirm?\" \n\nThe nurse nodded, knelt beside the body and touched the same place Sasha had. After a moment, she announced, \"Yes. It was a tragic accident, and his death will be a loss to historical research.\" \n\n\"And his family,\" Chadok added. \n\nSasha looked at the ladder. The nurse was right; it was a tragic accident, especially when she considered that if Myrek hadn't locked the door when Prath had heard him fall, they might have come in sooner and rendered first aid. \"You'll definitely need to contact your local Constabulary and report this.\" \n\n\"With the storm still ongoing, they won't be able to arrive until morning,\" T'Shul added. \"We should record the scene for forensic purposes, and then move him to his rooms.\" \n\n\"Agreed,\" Sasha said, looking up at the other Vulcans. \"Could someone go make that call, please, and give us some space to make our recordings, please?\" \n\n\"I will contact the authorities,\" Betreth volunteered. \"And check on Professor Strynn to ensure he hasn't awakened.\" She departed. \n\n\"And when you have completed your work,\" Chadok announced, \"I will move Dr Myrek's body.\" \n\n\"That won't be necessary, sir, we'll do it.\" \n\n\"But- I understand that might be emotionally arduous for you-\" \n\n\"Thank you, sir, but I've dealt with the dead before.\" To T'Shul she asked, \"Get your own tricorder, I'm sure will be calibrated to work better with Vulcan script and computers than mine.\" \n\n\"Agreed.\" \n\nAs she left, her father started bending down to retrieve the scattered crystals, but Sasha said, \"Please, sir, don't move or touch anything just yet. I know they're ancient, and valuable, but we need to keep things untouched until we've scanned and recorded the scene. Standard procedure.\" \n\n\"Of course.\" As he straightened up again, he asked, \"Lieutenant, you mentioned having 'dealt with the dead'. I understand you have only just graduated. Where-\" \n\n\"I served onboard my father's ship while I was still studying, as part of an advanced training program. We encountered a freighter that was smuggling a group of Malurian children abducted for slave labour. We freed them... but some of them had died while in transit. And there have been a few other incidents. Fighting Nausicaans, Ferasans, Vlathi-\" \n\n\"And is it the practice of Starfleet to put their cadets in such hazardous situations?\" \n\n\"No, sir. It's the practice to prepare them for facing hazardous situations. Because the hazardous situations will come, whether they're prepared for them or not.\" She frowned at some of the readings on her tricorder. \"Sir, how long has Dr Myrek been staying with you?\" \n\n\"This was to be his fourth and final evening.\" \n\n\"And he used your study often?\" \n\n\"Yes.\" \n\n\"Alone?\" \n\n\"Yes.\" \n\nShe knelt beside Myrek's body and reran her scans. \"And did he ever lock the door before?\" \n\nChadok paused. \"No. In fact...\" As she looked up, he elaborated, \"I had attempted to unlock it from the outside, but he had changed the combination from the inside. I do not understand why.\" \n\nNeither did she, saying nothing but continuing to study her readings until T'Shul returned with her tricorder. Then she asked, \"Sir, would it be possible to have some tea, please? I'd love some, to calm my nerves.\" \n\n\"Lieutenant, with respect, I do not believe your nerves need calming. I believe you are attempting to give me something to do which will let you two proceed without interference.\" \n\nNow Sasha looked up. \"That's an interesting theory, sir. Perhaps you can make us a cup of tea so we can consider it?\" \n\nChadok raised an eyebrow. \"You have a singular partner, My Daughter.\" \n\nAs he left, T'Shul looked to Sasha. \"What did you talk to my father about?\" \n\n\"We'll talk about it later. The computer is turned off. Could you turn it on, please, and run a comand audit for the past day?\" \n\n\"May I ask why?\" \n\n\"Look around. It looks like Dr Myrek had an accident in the middle of his research. Who switched off the computer?\" \n\nT'Shul frowned. \"He may have switched it off himself, in preparation for finishing for the evening, and had his accident while putting away the crystal drives. Or, there may be an autoshutdown program in place if the computer is not used within a predetermined period.\" \n\n\"Maybe. Find out, please.\" She examined the new readings from Myrek's body. \"When I recovered from the Vlathi attack, I took an elective Academy course on Forensics, under the Surefoot's Chief of Security. Someone had tried to claim killing the Vlathi himself and saving my life, but our Chief revealed the truth through the evidence at hand, and the subject interested me.\" She looked up at T'Shul. \"Something's wrong with this scene. The business with the computer. And your father said the doctor never locked the door when he was in here before.\" \n\nT'Shul looked ready to respond, when the computer came to life, producing Vulcan script, and she focused on the task in hand, while Sasha carefully picked up the scattered crystals and carefully set them aside on a table, before returning to Myrek's body, setting his hands up onto his chest. There was no rigor, not yet, at least not externally, and the skin wasn't as hot as it should have been. \n\n\"I have the audit,\" T'Shul announced. \"There is no autoshutdown in place. And the last command was to copy the contents of the computer onto an external drive.\" \n\nSasha glanced around. \"I don't see any around.\" She patted down Myrek's pockets, shaking her head. \"Come on, let's move him upstairs. You take his legs.\" \n\nShe saw as they walked out through the living room that T'Shul's parents have been joined by Lady Valtis and Sulkek. Upstairs, they entered Myrek's rooms and rested his body on the bed, straightening him out one more time. \n\nThen she whispered the words under her breath. \n\nT'Shul looked to her. \"Are you praying?\" \n\n\"No. I don't believe in religion. I'm just... thanking him for the opportunity of knowing him, if only for a short time. \n\nAnd I'm promising him that I'll find out what happened to him.\" \n\n* \n\nIn the living room, the others had been rejoined by Betreth, who reported, \"The Emergency Services will arrive as soon as the storm had abated, which they estimate will be in 8.2 hours.\" \n\nLady Valtis rose to her feet. \"I shall summon a vehicle at that time as well, and my son and I will take our leave. Sulkek, attend me.\" \n\nThe young man rose as well, but Sasha held up a hand. \"A moment, please, Milady. There's a few questions about what happened to Dr Myrek that need answering.\" \n\nThe older Vulcan added a few more wrinkles to her face. \"What is there to question? He was the victim of a tragic accident.\" \n\nSasha deigned not to respond, turning to Prath. \"Excuse me, Ma'am, but how long was it from when you heard the sounds in the study, before you came for us?\" \n\nPrath looked to her husband, before asking, \"I must concur with Lady Valtis' sentiments. What is the point of this?\" \n\n\"Mother,\" T'Shul prompted. \"How long? Approximately?\" \n\nThe woman seemed to consider the question. \"Twelve minutes. After repeated failed attempts to gain Dr Myrek's attention from out here, I summoned your father, and when he proved unable to open the door, I came for you.\" \n\n\"Thank you, Ma'am.\" Sasha returned to check her earlier readings, using what Prath had said as a baseline. \"There is only one entrance into the study, correct? No one can enter without being seen here in the living room?\" \n\n\"Correct.\" \n\n\"And you were here all the time after T'Shul went to bed, and you saw no one enter?\" \n\n\"Also correct.\" \n\nSasha looked to Sulkek and Valtis now. \"And you stayed in your rooms after you left us? You didn't leave or see the doctor at any point after you had left us?\" \n\n\"What are you doing?\" Sulkek demanded. \"Why are you asking all of these questions? You are in Starfleet, not Vulcan Security.\" \n\n\"My son is correct,\" Valtis confirmed archly. \"This was a terrible accident. Why are you interrogating us as if this were a crime?\" \n\nSasha started to reply, but instead set down her tricorder and reached for her cup of tea, relishing the warmth radiating from it through to her fingers, and the mint scent of the dark, steaming liquid within reaching her nostrils. She looked to a still-bemused T'Shul, asking quietly, \"Could you look at the comparison I have on my tricorder, for verification?\" As T'Shul nodded and complied, Sasha explained to the others. \"If the data and Prath's account is correct, then Dr Myrek somehow managed to copy the data on the study computer into an external drive, and then shut down the computer, about three minutes after he died.\" ",
        "Chadok frowned. \"That... is not possible. Your data is mistaken.\" \n\n\"It is not, Father,\" T'Shul announced, looking up from the tricorder. \"I've confirmed it. Sasha's tricorder has some... unorthodox customised programs, and they've rechecked the findings.\" \n\n\"So someone must have been in there with him,\" Sasha concluded, taking her tricorder back and calling up another program, confirming it was complete. \"Damn. I was afraid of this.\"She handed the tricorder back to T'Shul. \"Can you project this onto the screen?\" \n\nT'Shul nodded and rose. Seconds later, the large screen over the hearth produced a series of still images, both of the surface area around Myrek's injury, and scanned images below it, revealing a series of patterned fractures radiating from a central point. Sasha moved up to it, indicating the fractures. \"We went into that study, saw Dr Myrek on the floor with the crystals scattered around him and the ladder askew, and naturally assumed that he had fallen, hit his head on the floor and died. \n\nBut the coup-contrecoup pattern doesn't support this. In head injuries, a coup injury occurs under the site of impact with an object, and a contrecoup injury occurs on the side opposite the area that was hit. In forensics, the coup-contrecoup patterns tell us it could be used to determine whether the head or the impact object was moving at the time of the injury.\" \n\nSasha swallowed, not believing she was saying this. \"Dr Myrek didn't strike the floor. Something struck him.\" \n\n\"This is preposterous,\" Lady Valtis declared. \"You are seeking a mystery where none exists. This is no game, child.\" \n\n\"Milady,\" Sasha replied, \"I agree with you, this is no game. If I'm wrong, and someone can show me where I'm wrong, then I'll admit it and walk away. But there are too many questions. The computer, the injury...\" She looked to T'Shul. \"Go back into the study with your tricorder, search for anything with his DNA on it, something that could have been the murder weapon.\" \n\n\"Murder?\" Prath echoed, as T'Shul played along. \"How? Why? There is no point to this.\" \n\n\"I- I don't know yet.\" \n\n\"Because you're making this all up!\" Sulkek accused. \n\n\"No.\" T'Shul returned. \"I can confirm that Dr Myrek was murdered. I found slight traces of his blood on the corner of the Kir'shara in the study. It had been wiped down and returned to its proper place, but not cleaned thoroughly enough.\" \n\n\"The Kir'shara? What's that?\" \n\n\"A stone object,\" Chadok explained numbly. \"Inscribed with the writings of Surak; every Vulcan home has one. And someone would dare use that as a killing weapon?\" \n\n\"Yes, Father.\" T'Shul looked to Sasha once more. \"And there's something more. I ran a particle scan of the room for evidence of a transporter trace, to see if someone might have beam in and out. I found none, but I did pick up this.\" She offered her tricorder. \"Can you explain it?\" \n\nSasha frowned at the screen. \"Chroniton particles? Show me where.\" \n\nThey re-entered the study, T'Shul leading her to a wall beside the shelves, holding up her tricorder. \"Here, concentrations in a symmetrical pattern.\" \n\nSasha scanned the area herself, confirming her friend's findings. \"Weird.\" \n\n\"Why? Why would there be chronitons here, of all places?\" \n\n\"I'm... not sure.\" She sought her memory for all references to the subatomic particles she had read about: time travel, wormholes, Romulan cloaking devices, interphasic generators, Borg transwarp corridors- what the hell would any of those be doing here, involved in the murder of a medical researcher? \n\n\"Sasha,\" T'Shul whispered. \"What has happened here? How was Dr Myrek murdered? And why?\" \n\nSasha glanced around, scanning once more with her tricorder. \"There are no other ways in here that you know of?\" \n\n\"No.\" \n\nSasha looked back at the wall with the particle saturation. \"What's on the other side?\" \n\n\"It is the corridor to the steps that lead to the guest quarters.\" \n\n\"Go around to the corridor, check for more chronitons.\" \n\nT'Shul nodded, Sasha following her back out to the living room but approaching Plath. \"Ma'am, we need to update the authorities immediately, confirming that Dr Myrek was murdered.\" \n\n\"Of course, follow me to the communicator terminal-\" \n\n\"You are not going to continue to indulge this child in her fantasies, are you?\" Lady Valtis interjected. \"She has no authority on our world, in this house - and she has conspired with your own daughter to deceive you, to deceive us all!\" \n\nPrath stopped, regarding Sasha once more. \"Lieutenant...\" \n\n\"Madame, I'm sorry I played a part in lying to you about T'Shul's relationship with me. But this is no lie. What happened to Dr Myrek is real. I swear to you... on my father's life.\" \n\nPrath's expression softened. \"Follow me.\" \n\nSasha kept running scans of the rest of the house as followed with T'Shul's mother, wondering if there was perhaps someone hidden within the walls, unseen, unknown. But if there were, her tricorder wasn't picking them up, even with the enhancements Jonas added to it. She tried to open a subspace datalink through her tricorder to access the main computer back at Starfleet HQ, but she couldn't get a channel. Could it have been the sandfire storm? \n\n\"I do not understand,\" Prath said aloud, noting the error messages on the screen. \"Betreth did not mention any problems with the communicator when she initially contacted them. The storm might have increased in intensity since then.\" But she looked up at the ceiling. \"Except that, if anything, it is ebbing.\" \n\n\"You're certain?\" \n\nPrath nodded. \"I have lived in this Province all my life, and have experienced forty-seven such storms. It is ebbing.\" \n\nSasha nodded. \"I'll take your word for it.\" She removed her combadge, dropped it to the floor - and stamped on it repeatedly with her boot. \n\n\"What are you doing?\" Prath asked with mild alarm. \"This is not the time to lose control-\" \n\nShe stopped, bent down and picked up the pieces. \"Starfleet combadges are designed so that if the casing is ever cracked, an emergency distress signal is emitted over Priority subspace channels, to help searchers locate victims of disaster.\" \n\n\"Oh. Forgive my ignorance.\" \n\n\"Nothing to forgive, Ma'am. Pardon me for asking, but those ancient crystal data drives in the study: are they valuable, or contentious among Vulcans?\" \n\nShe seemed to consider the question. \"As historical relics they certainly have value, though I am uncertain as to their monetary worth. As for contention, there have been no historical controversies since the original Kir'Shara was uncovered in 2154, triggering the latest Reformation. Why do you ask?\" \n\n\"I can't yet work out Who killed Dr Myrek, or How, so I was hoping for Why. I don't suppose there are any weapons in your house?\" \n\n\"No, of course not.\" \n\n\"Then we need to get everyone together and keep an eye on each other, until the authorities arrive in the morning and take over. It's the only way to be sure that the killer doesn't strike again.\" \n\n\"A killer, in my house...\" The woman frowned. \"It makes our disagreement with my daughter seem trivial.\" \n\n\"A 'disagreement'? Is that what you call threatening to disown her for not marrying a Vulcan man and pumping out some grandchildren?\" \n\nPrath stiffened. \"You are mistaken. She can marry whomever she desires, and have as many or as few children as she would prefer. She does not even have to marry, so long as she stays alive here on her homeworld.\" \n\nNow Sasha stopped and stared, frowning. \"'Stays alive here'? Not 'stays here'? Why would you say it like-\" Then she understood. \"You're scared for her.\" \n\nThe Vulcan woman raised her chin. \"You are mistaken, Lieutenant. Fear is an emotion.\" \n\n\"Yes. Yes, it is. And you're afraid for her, you and Chadok. That's what this is all about!\" \n\n\"You are...You...\" Prath almost looked ready to protest further. Then a wave of fear ran through her, before she recovered herself, looking confused now. \"What is happening... my discipline is eroding...\" \n\nSasha lifted up her tricorder and scanned the Vulcan. \"Your psilosynine levels are elevated.\" Then she set it aside. \"Ma'am... please, be honest with me.\" \n\nPrath tightened her expression again. \"Yes, Lieutenant; our logic fails us where our daughter is concerned. Chadok and I fear for the safety of our child. The galaxy seemed a safer place not that long ago, when T'Shul joined Starfleet Academy and studied here on Vulcan. Now the Klingons are at war with us, the Dominion threatens the Federation... the possibility is very real that she can leave Vulcan and be injured, or killed.\" She averted her eyes. \"You are too young to understand-\" \n\nSasha smiled, relieved at the revelation. \"No? It works the other way. I have a Dad, and a kin-mother and little brother out there on the front lines. I worry sick about them. And they do the same about me. It's the nature of our business, the responsibilities we've taken on and the lives we've chosen.\" \n\n\"No- she cannot understand the dangers she might face-\" \n\n\"Yes, she can. They've drummed it into us from the start. They show us our possible fates, how we can end up... and then train us as much as possible to do everything we can to avoid it. We might still be killed, but it won't be for lack of preparation.\" \n\n\"She would be safer here.\" \n\n\"Maybe. On the other hand, you have a killer in your house.\" \n\nPrath paused and regarded her. \"Lieutenant... you understand the dangers you face... but you still face them. Why?\" \n\n\"Because it has to be done.\" \n\n* \n\n\"I don't want to get up!\" Strynn groused with a loud annoyance from his bed, smacking Betreth's hand away. \"Want to sleep!\" \n\nThe nurse stepped back, looking to Sasha again. \"Further entreaties to him will be pointless. As I attempted to explain to you, I had administered a sedative to him earlier, so he will be irritable now for being awakened.\" \n\n\"I understand. Why don't you go downstairs and wait with the others? I'll talk with him.\" She smiled wistfully. \"He might listen to his 'wife'.\" \n\nBetreth hesitated. \"I should remain- he may become violent-\" \n\nSasha shook her head. \"No. And even if he did, you already saw how well I could handle myself with Sulky downstairs. Go on, we won't be long.\" \n\nThe nurse hesitated further, but then nodded and departed. \n\nSasha paused near Strynn's bed, watching the screen on her tricorder detail Betreth as she descended the stairs and into the living room. \n\nThen Sasha went to work, first running a scan of Strynn's blood, even as she settled him back down into his bed again. Then she checked the other guest rooms, finding exactly what she was looking for. \n\nMoments later, she returned to the living room, looking at the bemused, expectant faces standing or sitting around, reminding herself of those Terran mystery vivids where the suspects were gathered for the denouement from the hardboiled detective. T'Shul looked to her. \"Are you not bringing Grandfather down with us?\" \n\nThere was a rumble outside, one that sent tremors through the thick surrounding walls. \"No, there was no need to disturb him. But...\" She leaned in and whispered to her. \n\nT'Shul nodded and lifted up her tricorder, moving around the others in the room. \n\n\"What are you doing?\" Lady Valtis demanded. \"This is a farce I will no longer support. Come, Sulkek.\" \n\nHer son rose, but Sasha pointed a finger at them. \"Stay, please. You'll want to hear this.\" She looked to T'Shul. \"Well?\" \n\nThe Vulcan girl looked up and nodded. \"There are increased psilosynine levels in most here.\" \n\nThen she nodded again, saying nothing further. \n\n\"Psilosynine?\" Chadok asked. \"What is that?\" \n\nSasha looked to Betreth. \"Care to explain, Nurse?\" \n\nThe woman straightened up. \"Psilosynine is a neurotransmitter found in varying amounts in most humanoid brains. Its levels are affected by telepathic contact or activity.\" \n\n\"But I certainly have not been in any telepathic contact of late,\" Chadok announced. \n\n\"Not that you're aware of, Sir. But you have. Most of you, in fact, if you've had moments of unexplained loss of emotional control, however brief.\" She looked to Sulkek. \"Even those whom we assumed were merely being affected by the Plak-Tow. \n\nBut I don't want to talk about that now. I told you that I've been working on who had killed Dr Myrek, how and why. We've worked out the How. \n\n\"How could the murderer get into a room that was locked from the inside, with witnesses on the outside of the only door, and with no other access or transporter ability. After all, it's not like you can just walk through walls, can you? \n\nExcept that you can. Under the right circumstances.\" She held up the object in her hand: a palm-sized, disc-shaped object in black metal. \"This is one of four perimeter setters on a phase matter shifter.\" \n\n\"What is that?\" Prath asked. \n\n\"There has been research done over the years on phase shifting technology,\" T'Shul explained. \"It has been a part of many types of cloaking devices, but it was theorised that an adjustment to a phase shifter would allow an object or even a vessel to not only be undetectable, but allow it to pass through solid matter.\" \n\n\"Or,\" Sasha continued, \"In the case of this and four other setters, create a field through a solid object like a wall, allowing matter to pass through it. It has the side effect of accruing and depositing chroniton particles. T'Shul and I detected these particles on the wall between the study and the corridor leading to the guest rooms of your house.\" \n\nShe held up the device in front of Valtis as she drew even closer. \"The killer could plant these on the corridor wall, step through, murder Dr Myrek, set it up to make it look like an accident, step back out again, retrieve the shifter devices, and return to her room without being detected by those still here in the living room.\" She set the emitter down on an adjacent table. \"I found this and the other pieces of the phase matter shifter in a case under your bed, Lady Valtis.\" \n\nThe woman's eyes narrowed, reflecting the undisguised shock from everyone around her. \"You... accuse me of murder? It is ludicrous!\" \n\n\"Yes,\" Sasha agreed. \"It was a merely a distraction, a delaying tactic on the part of the real killer, because when I opened the case and found the emitters, I found the killer's DNA, not yours or Sulkek's, on the inner workings. She turned to the nurse. \"Betreth?\" \n\nThe nurse drew a small disruptor from her coat pocket, taking a step back from the others but keeping an eye on Sasha, her manner cool. \"Very good, Lieutenant.\" \n\n\"Betreth?\" Prath mouthed incredulously. \"You murdered Dr Myrek?\" \n\nThe nurse ignored her, focusing on Sasha. \"I'm curious as to what gave me away?\" \n\nSasha clutched her tricorder, still hanging on a strap under her arm. \"Nothing definite - at first. You couldn't account for your whereabouts at the time of the murder, but then a few others here couldn't either. You volunteered to call the authorities, but no one verified that at the time, or thought to even do so. Not until we checked the call audit on the house communicator and confirmed a call did go out, but to an unknown private number, presumably your associates elsewhere on Vulcan or maybe even in space, advising them to come collect you when the storm passed. \n\nAnd then there's the psilosynine. The contact triggering it has been leaking out from Professor Strynn. You were hired to provide telepathic support to prevent this, but when I scanned his bloodstream, I confirmed that you've been drugging him with Lexorin instead, a less effective alternative. You couldn't provide telepathy. \n\nBecause Romulans don't have that gift.\" \n\n\"Romulans?\" Lady Valtis exclaimed. \"On Vulcan? They wouldn't dare!\" \n\n\"You're a blinkered, foolish old woman,\" Betreth sneered, glancing at T'Shul. \"Better for your misbegotten race that you chose not to breed with her idiot son and produce more effete degenerates like them.\" \n\n\"Phase shift technology is part of Romulan cloaking devices,\" T'Shul continued, ignoring the jibe. \"And the equipment could be hidden among the medical technology brought to monitor my grandfather. With him incapacitated from Bendii, she could sneak into his study undetected and begin extricating data from his collection of crystal drives.\" \n\n\"But why?\" Chadok asked. \"Of what interest could they be to the Romulans?\" \n\n\"The human herself said it,\" Betreth replied. \"Romulans do not possess telepathy. It was a cruel fate that we had left this world before it developed within us, while you... pacifists... chose to suppress and squander it, when you could employ it to make yourselves the Masters of the Galaxy. We have long since attempted to develop it ourselves, through technology, genetics, forced interbreeding with Vulcans and other inferiors... all with no or limited success. \n\nWe believed the key lay with the ancient files in the crystal drives, so we contrived to get myself placed here, to care for that doddering old fossil upstairs, and copy the files. But it took longer than expected.\" \n\n\"But why kill Doctor Myrek?\" \n\nBetreth sneered again. \"Unlike these ignoramuses, Dr Myrek had the potential to recognise my limited treatment of Strynn. Further, he had been collecting related data and collating it with what he learned here. It was an opportunity too good to pass up. Unfortunately for me, you were more perceptive than I had anticipated, and equipped with that tricorder. \n\nOh, speaking of the tricorder, may I have it, please? I know you've been recording all of this.\" \n\nSasha started, glanced at T'Shul and sighed, slipping off the tricorder and holding it out. \"Don't blame for trying, do you?\" \n\nBetreth accepted the equipment. \"On the contrary, I applaud your efforts. I will genuinely regret having to kill you with these others.\" \n\nThe room tensed, people looked at each other, but Sasha stayed fixed on the Romulan. \"You don't have to do that. You have the data you wanted now, your people will be here shortly to collect you and it.\" \n\nBetreth shrugged, not looking too sorrowful. \"Leaving Vulcan will take longer than expected, we can't be delayed with possible witnesses. After you're all dead, I'll set explosive charges to make it appear at first as if the storm had collapsed the building around you. By the time they examine your bodies-\" \n\n\"You can't kill us,\" Sulkek mouthed in disbelief. \"We've done nothing...\" \n\n\"He's right,\" Sasha affirmed. \"Romulans have honour, and courage, and compassion, I know this, I've seen it. You disabled the communications, no one will think to contact or visit us out here, you'll be long gone. Please.\" \n\n\"Sorry, Lieutenant. It's nothing personal, I can assure you.\" \n\nSasha made a sound at that. \"You know what we'd call you in Yiddish? 'Meshuggeneh'.\" \n\nHer tricorder heard the word, and triggered a sonic alarm that made Betreth and the other Vulcans gasp and wince in pain, the Romulan dropping the tricorder but still attempting to raise the disruptor towards Sasha. Sasha felt the sound inside her skull as well, though not to the degree of the others, and torpedoed towards Betreth, slamming into her and knocking the weapon from her hand, before delivering a volley of punches and kicks to various vulnerable points on her opponent. \n\nBut Betreth proved equally trained, driving Sasha back, just as the noise from the tricorder ceased. Betreth scanned the floor for her dropped weapon, before lifting up a stone ornament from a nearby table and raising it up towards Sasha, who lifted up an arm in a defensive posture- \n\nOnly for Betreth to drop the ornament, as a disruptor bolt struck her arm, sending sparks and smoke flying. She cried out and dropped to her knees, while T'Shul drew up behind her, keeping the disruptor aimed at the back of the Romulan's head. \"Do not move. At this range, a disruptor beam to your brain will be fatal. But I will employ it.\" She looked across at Sasha. \"Are you okay?\" ",
        "Sasha nodded, looking to the civilians. \"All of you?\" \n\nThe civilians were helping each other onto their feet, still appearing to be feeling the effects of the sonic alarm. Prath held onto her husband, but nodded. \"We will recover. And we will live... thanks to you.\" She looked at T'Shul, with undisguised admiration. \"And to our daughter... who has proven to us how capable she is of protecting herself against the dangers she might face.\" \n\n* \n\nSomeone checked on Strynn; he was still asleep, still drugged and out of range of the tricorder alarm to have been affected. \n\nThere was some initial talk of undoing the sabotage to the house communicator and calling for help, but help arrived anyway, from the emergency signal sent by Sasha's broken combadge: armed, black-uniformed members of the V'Shar, the Vulcan Security Services, beamed in unannounced. The others were interrogated and treated. \n\nBetreth was taken into custody and beamed away. So was Sasha. \n\nSasha had protested, but she was ignored as she was kept alone in a stark windowless room for several hours, her confusion and anger growing. She had helped catch a murderer, and this was how they were treating her? Where was T'Shul, her parents? Every attempt at getting answers was ignored. \n\nThen the door to her room opened, and an older Vulcan male with two armed guards entered. The male wore a crisp grey suit with Vulcan lettering along one side indicating someone of high rank, and a tight gaze from a narrow face topped with pepper-grey hair. \"Lieutenant Hrelle, thank you for your patience.\" \n\nSasha stood there, controlling herself. \"I didn't have much choice but to be patient, Mister...\" \n\nThe male took the prompt. \"I am Minister Satok, head of the V'Shar. And we have much to discuss regarding the murder of Doctor Myrek, and the Romulan agent responsible.\" \n\n\"Of course. What about Lt T'Shul, her family? Lady Valtis and her son? Is everyone alright-\" \n\n\"We will be asking the questions, Lieutenant. You will be detained indefinitely until we conclude our investigation.\" \n\nShe tensed. \"For how long, Minister? I mean, I'm willing to cooperate, of course, provide a statement, hand over the evidence gathered in my tricorder-\" \n\n\"We have already confiscated your tricorder,\" Satok informed her. \"And have questioned and released the other occupants of the residence at the time of the incident. But we have further questions for you. Your tricorder, for instance, is not standard Starfleet issue. And you have exhibited knowledge beyond the normal training for someone of your rank. We want answers.\" \n\n\"And I'll provide them! Willingly! You don't have to strong-arm me! Just let me talk with my commanding officer here, let him know what's going on-\" \n\n\"Communications are prohibited. You will be relocated to an interrogation facility; I must warn you that our methods are effective, but the experience will be less arduous for you if you don't resist.\" \n\nShe was beginning to panic. \"I'm not resisting you, Minister! But you're treating me like a criminal! I have rights-\" \n\n\"Your rights are suspended under our Security Directives-\" \n\nThen the door slid open again, and a more familiar figure entered, nodding to Sasha. \"Lieutenant.\" \n\nShe brightened. \"Commander Haluk!\" \n\nThe senior officer ignored her and faced Satok, standing formally. \"Lieutenant Hrelle will be released immediately, and her possessions returned to her. She will provide me with a statement of her actions at Lt T'Shul's family residence, of course, which I will forward to you. But you will not question her any further.\" \n\nSatok drew up, as if trying to gain centimetres of height against the taller Haluk. \"Commander, I am aware of your enhanced duties, but this is a matter for the V'Shar, and Starfleet has no jurisdiction here. You will depart at once.\" \n\nBut Haluk merely drew his hands behind his back and announced, \"Lt Hrelle is the granddaughter of Ma'Sala Shall of Cait.\" \n\nIn Vulcan terms, it was the equivalent of seeing the Minister's jaw drop to the floor. He looked at Sasha with something approaching outrage. \"The Mother's Claws have no right to conduct an operation on Vulcan without my authorisation!\" \n\n\"Lt Hrelle is not a member of the Mother's Claws,\" Haluk informed him calmly. \"And they are not conducting an operation here. It is merely a coincidence that she became involved in this. And a fortunate coincidence, too, given her apparent aid in the proceedings, as I understand it.\" \n\nHe drew closer. \"Minister, word will soon reach the Claws about Lt Hrelle's detention here. I shouldn't have to remind you of what happened to the Obsidian Order unit who had detained Fleet Captain Shall's daughter ten years ago and tried to mind probe her for intelligence on her high-ranking Counseling patients at the time.\" He paused at Satok's blanched response and clarified, \"Not that I believe you would share their fate. Probably. But of course one cannot be certain of these matters when a Caitian Matriarch protecting her clan members is involved.\" \n\nSasha watched in confusion as Satok reacted to that, by glancing at the human once before silently departing with his guards. \n\nThen Haluk brought his forefinger to his lips in an approximation of a human silencing gesture, before lowering it again. \"Follow me, Lieutenant, and we will obtain your possessions and depart.\" \n\nSasha took the hint and stayed silent, until they stepped outside, and the heat struck her. She adjusted her shoulder bag and glanced around, recognising the skyline of the surrounding city. \"We're back in ShiKar.\" \n\n\"Indeed. Come, we shall walk along the aqueduct; it is quiet this time of morning, and we can talk without being monitored.\" \n\nMinutes later, they were away from the V'Shar building and walking along a marbled pathway near a wide, winding aqueduct that snaked through the city. Finally she broke the silence. \"Sir, is T'Shul free? Her family and the others?\" \n\nHe nodded. \"Everyone but the Tal Shiar agent, of course. Lt T'Shul is back at her quarters, and her family and their guests have been returned to their respective homes.\" \n\nSasha felt relieved, though she remained thoroughly confused. \"Commander, what was that all about back there, about my grandmother? You and the Minister mentioned the Mother's Claws. Fleet Captain Shall is in the Caitian Militia, not the Caitian Security Services. Isn't she?\" \n\nHe raised a hand, indicating a railed protrusion extending out over the aqueduct, where they walked; Sasha recognised it as one of the ubiquitous spots in cities throughout Vulcan where citizens can stop to meditate in quiet; she had quickly learned to treat such places, and any people using them, like prayer rooms. \n\nHaluk rested his hands on the stone railing, looking out at the water, but speaking in a confidential tone. \"I cannot confirm nor deny that I know your grandmother personally, nor that I have worked with her for many years, liaising between Starfleet, the V'Shar... and the shadow organisation she commands over and above her official role in the Caitian Militia. \n\nI can confirm that it would be for the best if you forget what you may or may not have heard about her. If she wishes for you to know anything about herself, she will tell you directly.\" \n\nSasha swallowed; her own limited experience with Starfleet Intelligence, Admiral Trenagen, her dealings while on the Surefoot and at the Academy, told her that such secrecy was possible. Very possible. She finally nodded and looked out at the slow-moving water below. \"I... understand, Sir.\" \n\n\"I should not have to also remind you not to speak of the events of this weekend with anyone else.\" \n\n\"No, Sir. Commander... if it's allowed, I would like to attend Dr Myrek's funeral, speak to his family. I would not reveal anything, of course, but I wanted them to know how honoured I was to have known him, even for such a brief time.\" \n\nHaluk nodded. \"I will see what can be arranged. On your return to your quarters, you will prepare and transmit to me your statement of the events at Lt T'Shul's family residence. During the remainder of your time on Vulcan, if you are contacted by any member of the V'Shar, on this or any other matter, you are to report it directly to me.\" \n\n\"I understand, Sir. Thank you for your help back there. I don't know what would have happened if you hadn't arrived.\" \n\n\"It was my honour, Lieutenant. And, please do not hesistae to contact me should you ever require a confidential ear.\" Haluk looked out at the water. \"Thank you for not making a joke about Vulcan ears.\" \n\nShe suppressed a smirk. \"It seemed a little too obvious, Sir. Even for me.\" \n\n* \n\nShe'd slept like a hibernating bear on her return to her quarters - as soon as she had completed her statement, tagging the data from her tricorder before sending it to Commander Haluk. As Sasha recounted the events, she began wondering about all the people she knew in her life, in and out of Starfleet, and if any of them had experiences like she just had, but could never tell anyone. What secrets did they keep within them? \n\nAnd how could she have another conversation with her grandmother without mentioning this? \n\nHer door chimed. She bolted up from her bed. \"Enter.\" Then she brightened. \"Hi, Girlfriend.\" She smirked. \"You know I get to call you that from now on, for the rest of our lives?\" \n\nT'Shul strode in, dressed, not in her usual uniform, but more casual clothes. She ignored the surrounding mess to focus on Sasha. \"I have no doubt, and take comfort that you could have chosen a more embarrassing appellation. Are you well?\" \n\nSasha smiled and nodded. \"And you, your family? Lady Valtis and Sulky?\" \n\n\"They were released and returned home after providing their statements. I believe Lady Valtis and Sulky were relieved to be returning home; with the betrothal formally broken, I believe they will be satisfied to avoid any further murders and controversies that may arise by any association with me.\" \n\nSasha grinned. \"You called him Sulky.\" \n\nT'Shul raised an eyebrow. \"I am certain I would not be so petty as to employ such a derisory epithet.\" \n\nSasha leaned against her wall, arms folded across her chest. \"Yeah, right. How about you and your parents?\" \n\n\"We have come to an understanding. They have agreed to let me remain in Starfleet without further argument. I have agreed to let them pester me on frequent occasions to confirm I am keeping myself safe.\" \n\nSasha smiled. \"That's sounds like a healthy parent-child relationship.\" \n\nMore seriously, T'Shul continued, adopting a formal pose. \"Sasha... thank you. Thank you for accompanying me. Thank you for being honest and supportive of me. And thank you for uncovering the truth. About Dr Myrek. And my grandfather.\" \n\n\"Your grandfather?\" \n\nT'Shul nodded, her expression brightening. \"He was examined again following the investigation, to detail the types of drugs employed by Betreth. It turns out he was misdiagnosed; he does not have Bendii Syndrome.\" \n\nSasha straightened up again. \"He doesn't?\" \n\n\"No. Apparently the Vulcans who created the crystal data drives in his study included traces of an insulating mineral called Trellium-B, which is apparently neurotoxic to Vulcans, causing a gradual neural pathway degradation that exhibits identical symptoms to Bendii. He is already being treated and is quickly recovering.\" \n\nSasha brightened, laughing. \"That's... wonderful, girl!\" She moved towards T'Shul, arms outstretched, before stopping herself. \"Sorry, forgot myself.\" \n\nSomething almost approaching a smile raised one side of T'Shul's mouth. \"I believe, in this one instance, a moment of tasteless affection would be appropriate.\" \n\n\"Yeah, yeah, any excuse.\" She moved in again, wrapping her arms shamelessly around the Vulcan. After a moment, she advised, \"They work best when the other person hugs back. Otherwise it's just weird.\" \n\nT'Shul raised her arms and applied appropriate pressure. \n\nWhen she parted, Sasha made a show of checking herself. \"Damn, you never even tried to grope me. I feel cheated.\" \n\n\"Then perhaps I can make reparations, by agreeing to sing Karaoke with you.\" \n\nSasha's eyes widened. \"Really? You're gonna love Don't Go Breaking My Heart!\" \n\n\"No. I will not perpetuate any notion that we are romantically or sexually involved. I have, however, accessed the Karaoke database and found one more reflective of our relationship.\" \n\n\"Oh? Hit me with it.\" \n\n\"You've Got a Friend in Me.\" \n\nSasha smiled. \"Well, it's not very sexy, but it'll do...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL RETURN IN... SECOND CLASS"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "star trek fanfic",
        "star trek fan fiction",
        "starfleet",
        "surefoot",
        "caitian",
        "vulcan",
        "romulan",
        "lesbian"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-36-my-summer-on-vulcan"
}