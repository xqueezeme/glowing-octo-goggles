{
    "title": "Just the Six of Us Ch. 16",
    "pages": [
        "Hello loyal readers, a few quick words before you get to the good stuff.\n\nPlease realize how much work this takes. This chapter is 31 pages in Microsoft word, single spaced, arial font, 12pt, 11752 words. I can't really just churn that out in a couple of hours. To get it written, edited, finalized, and submitted in a week, is pretty damn good considering I have a full time job.\n\nSecondly, if you want a response from me, please include an email address.\n\nThird, thanks for making Chapter 15 the most popular incest story on Literotica.\n\nKeep checking my profile for updates!\n\nLastly, thanks to ZexxWizard, yet again! \n\nFinally, we've been working on some twists and turns for our family that will give us lots more chapters to explore. I honestly can't wait to write it!\n\nThanks for reading\n\nChapter 16\n\nMike showered and got dressed, pulling on his customary shirt and shorts. Heading downstairs, he entered the kitchen. Sarah was at the sink washing a pan.\n\n\"Morning sleepyhead,\" she said with a smirk on her face. \"I figured that you'd be sleeping in with all your... activities, yesterday.\"\n\nHe chuckled and shrugged. \"I do have to rest, you know.\"\n\nShe smiled and nodded as he came around wrapping his arms around her in a hug. \"Just don't forget to take care of your big sis, okay?\" she said, pulling his face down and kissing him.\n\n\"Grab her tits and then run a hand down to her pussy.\"\n\nMike reached down with both hands and hugged her from behind. Her full breasts in his hands, he kissed her neck and gently squeezed them, fondling and playing. She sighed happily in his arms and patted his wrist as it snaked downwards. \n\n\"What are you doing?\" she said as he pushed his hands underneath her pajama shorts, but sighed as he tenderly pushed a finger into her pussy. \"You're playing with fire, sweetie,\" she said, as she slightly spread her legs.\n\n\"That's funny, I thought I was playing with you,\" he chuckled, then added, \"But 'playing with fire' would apply as well, wouldn't it,\" drawing a giggle from her as she closed her eyes. \"Where is everyone?\"\n\n\"Asleep still, I think,\" she said, sighing happily as he fingered her, his other hand rummaging around beneath her shirt. \"You know if you get me all worked up and then don't finish, I might have to start tormenting you again.\"\n\n\"Throw her to the floor and fuck her brains out.\"\n\nMike rolled his eyes. 'Seriously, come on. I might hurt her, and then she wouldn't fuck us.'\n\n\"Good point, uh... strike that. How about, you tell her that she's got nice boobs.\"\n\n'You're acting like a thirteen year old at his first junior high school dance.'\n\n\"I am not.\" \n\n'Are too,' Mike chuckled, mentally.\n\nHe tenderly bit her neck, eliciting a gasp of pleasure from her as he gently pinched her nipple, and then ran his hand over to the other breast, all the while gently rubbing his finger inside her pussy.\n\n\"Okay, so I don't have some fucking master plan for today. I was just so excited I'd won, that I never really thought about what to make you do. It'll come to me, though.\"\n\n'Oh, I've got complete faith in you,' Mike thought, as sarcastically as he could.\n\n\"Uh... pull her pants down.\"\n\n'That's more like it,' he thought.\n\n\"You've got to be crazy,\" Sarah said as she felt his hands start to pull her shorts down. \"You're gonna get us caught,\" she warned, but giggled as he slid them off her hips.\n\nHe ignored her and knelt, letting her shorts fall around her ankles. He lifted her panties to the side and began to lick her pussy lips from behind. She moaned, and leaned forward slightly, then to the left, looking back at him curiously with an impish grin, and said only, \"Oh, yeah.\" \n\nThen the sound of footsteps on the stairs caused him to stand quickly, and Sarah to yank her shorts hurriedly back up, putting a frown on her face. She glanced back at him as he headed for the cabinet as Emma stepped onto the ground floor. The other sisters followed and breakfast began.\n\nThe four sisters began their chatter as Mike began to tune them out. He was watching Beth, who surprisingly, glanced over at him and smiled. Normally when something happened that embarrassed her or stressed her out, Beth didn't speak. She internalized all of her problems and worked them out in her own head, closing herself off socially, emotionally and physically.\n\nShe was smiling and laughing with her sisters this morning, though. Mike smiled back at her and kept eating, until something caught his ears and registered on his brain.\n\n\"...slumber party before school starts back up,\" Emma was saying.\n\n\"Slumber party? I heard 'slumber party', did you hear slumber party? Tell me you heard slumber party. She said slumber party, didn't she? OH MAN, what luck... Bro, if you fuck this up I'll kill you, then I'll bring you back to life so I can torture you then kill you again. There's gonna be pussy everywhere. Tune back in and find out when.\"\n\n'Calm down,' Mike thought, chuckling. 'They might not even want us here. Men usually have to make themselves scarce during these.'\n\n\"OH NO MAN, you gotta get us in... Dude.\"\n\nSarah smiled and nodded, suddenly excited. \"That sounds great!\" she said, and was echoed by Danni.\n\n\"I think we'd all love to have some friends over, it'd been fun. What with all that's going on around here, some outside contact would be nice for a change.\" Danni said, with a giggle. Sarah slapped her leg underneath the table.\n\nBeth bit her lip and tried to stifle a giggle as well, glancing over at Mike, who was blushing.\n\n\"So,\" Mike said. \"You're planning a junior high slumber party,\" trying his best to sound disinterested.\n\nEmma turned back to Sarah. \"Tonight's not too soon. We can all invite some friends over and watch some movies, and play some games.\"\n\n\"Yeah, we can't really go on vacation again, though that'd be fun too,\" Sarah said, looking over at Mike.\n\n\"Why can't we?\" Danni asked, grinning ear to ear.\n\n\"Because not all of us had as much fun as you did,\" Sarah said, and Danni slapped her under the table. \n\nAll of this began to be too much for Mike, so he went upstairs and closed the door to his room.\n\n\"What the fuck are you doing?\"\n\n'I can hear them from here,' he thought, 'and they show no indication of asking me to make other plans, which would of course include you, taking you out of the game. I'm playing it safe, keeping a low profile.'\n\n\"Oh yeah, well, it better work.\"\n\nBack downstairs, the girls decided to invite a few friends each, and began making plans as to games and such. Mike wondered what surprises the night might hold for him, and decided to head outside to make the back yard presentable, just in case the girls ended up back there.\n\n\"What about my 'free day?' I can't very well use it to make you do anything while you are doing chores and shit.\"\n\n'Well, no. But don't you see the opportunities that tonight might present? Who knows what will happen. Girls can get awful freaky at slumber parties.'\n\n\"Freaky?\"\n\n'Yup.'\n\n\"Well, alright. You get a reprieve for one day on our bet. But, you've got to start listening to my suggestions more. You saw what happened with Beth. We were right there.\"\n\nMike smiled, but didn't answer. He dressed and went downstairs to clean the yard, pool, and hot tub.\n\n******\n\nThe girls all began to make phone calls, and texting friends. Emma had three friends that were coming over, Becca, Ashley, and Tina. Danni asked Megan to come, as well as another of her friends, Lynn. Sarah was bringing Sally, and finally, Beth asked her friend Susan to come. Danni and Sarah headed out to the grocery store to get some party snacks and several movies. Beth and Emma were cleaning the house, though it didn't really need too much attention, since Sarah kept it all pretty well cleaned. \n\nBeth kept glancing over at Emma every once in a while, and hadn't talked to her at all. Something was on her mind, Emma could tell, though she hadn't said anything.\n\n\"What's the matter?\" Emma asked finally, when the uncomfortable silence between them got too difficult to bear.\n\n\"What?\" Beth said, feigning ignorance.\n\n\"Beth, I know you.\" Emma said, looking at her concerned, \"There's something bothering you. What is it?\"\n\nSitting on the couch, Beth sighed. She began to twirl a finger in her hair nervously and sat quietly for a few moments. Emma, growing a little concerned said, \"I'm here if you need some help with... well, anything.\"\n\n\"I saw you and Mike on vacation,\" Beth said finally.\n\nEmma sat quietly for a few moments, and then admitted, \"I know. I saw you and Sarah watching us.\"\n\nA few more long silent seconds passed between the two. Then Emma asked, \"Did it bother you?\"\n\nBeth shrugged her shoulders slowly. Then, raising her head to look at her younger sister, she said, \"It didn't bother me, exactly. Affected me would perhaps be the accurate way to put it.\"\n\nEmma tilted her head and looked at her curiously.\n\nThen Beth tried to explain, \"I've been trying to figure out why all three of my sisters have found it necessary to engage in sexual relations with our brother. I know it's been going on for several weeks now. Summer is almost over, and I'm not any closer to solving the why of the situation. In fact, I was very close to becoming a part of the equation myself earlier today. Mike and I... we were in the bathroom and I... well, we didn't mean to... but...\" She fell silent as the words seemed to fall out of her mouth half jumbled.\n\nEmma sat quietly, knowing it was best to just let Beth speak. Go ahead and let her get it out in \"Beth\", and then try and translate it after the fact.\n\n\"I've been feeling... differently towards him, and truthfully about myself too. I mean, I've never really thought of myself as an attractive woman, but the way Mike is responding to me... Well, all this has me a bit perplexed.\"\n\nEmma smiled at her. \"He has had that same effect on all of us.\" she said finally.\n\nBeth looked up and smiled at her. \"He walked in on me in the bathroom this morning fresh out of the shower, and obviously not by accident. It was pretty apparent that he wanted to see me naked. One thing led to another and we ended up making out against the bathroom door. His... you know... slipped just barely inside me, and I...\" She turned red and lowered her head again.\n\n\"Did he...\" Emma started.\n\nBeth was already shaking her head. \"No, I'm still a virgin. But, using him like I did... I mean... I had my first orgasm,\" she said, looking Emma dead in the eye, \"I've never felt anything that good.\"\n\nEmma nodded her head, finally understanding. \"So, what's the problem then?\"\n\nBeth looked up at her incredulously. \"What's the problem? I almost let my brother take my virginity. His... you know, thing, was almost inside of me, his own sister! Sometimes, I want to tear his clothes off and just let him take me right then and there, and then other times I wonder what the hell is wrong with all of us and why aren't we locked away.\"\n\n\"Beth, there's nothing wrong with you,\" said Emma, \"it's just an attraction. Did you find Mike attractive before all of this?\"\n\nShe thought silently for a moment and then shrugged, \"I've never really thought about it.\" \n\n\"I don't really know what to tell you then.\" said Emma, \"I've always thought of Mike as handsome. I mean, we're twins, so he's gotta be considered at least as good looking as me.\" She reached out and pinched Beth playfully.\n\nBeth giggled, feeling better. \"I just can't get the thought of him out of my head, you know?\"\n\n\"Oh, trust me,\" Emma replied, giggling, \"I know. We all do.\" \n\nThey began to move around the house, cleaning up and chatting quietly. \"So what's your favorite part of him?\" Beth said, at length.\n\nEmma stopped and looked at her curiously for a second. The look on her face told Beth that the question bordered on the idiotic. She answered, \"Well, besides his cock, he's got a nice ass, and his stomach is all muscled and yummy.\" Emma licked her lips and grinned.\n\nBeth giggled and conceded the point. \"Okay, fair enough, but what's your favorite part of... being... with him?\"\n\n\"My favorite part of fucking him you mean.\" Emma said, laughing, \"It's okay Beth. You can say it.\" \n\nBeth returned the laugh and blushed slightly. \"Fine, I'll start saying... that.\"\n\nBut Emma wouldn't relent. \"Come on, let me hear it. Say 'I want to fuck Mike' or I won't answer the question,\" she said with a wicked grin on her face.\n\nBeth blushed again and fell silent, but Emma carried on with her threat, not saying a word and headed off to clean something else. Beth sighed and shook her head.\n\n\"Okay, okay. Fine,\" she said. Then in not even quite what one could call a whisper, she added, \"I... wanna... fuck... Mike.\"\n\n\"Can't hear ya,\" Emma said. \"What was that?\"\n\nBeth shot her an angry look in jest, but Emma wouldn't give in, and cupped a hand to her ear.\n\n\"I wanna fuck my brother,\" Beth yelled at her, \"okay?\"\n\nEmma burst out laughing, which caused Beth to start laughing as well. As the laughter subsided Emma finally started to answer the question.\n\n\"My favorite part of fucking my own brother?\" she asked herself, \"Now, that's a tough one. There's so much to love. I mean, he's got a great body, and he always seems to know when to be gentle and when to turn it up a notch or even plow right into you. At our most recent fuck fest, after he succumbed to our tormenting, it was like he was being driven by this powerful force that knew exactly what it wanted, and it was going to get it no matter what.\"\n\nContinuing, Emma added, \"It was so hot, having his strong arms positioning me and throwing me just whichever way he wanted. It felt like he could have done whatever, and I was powerless to stop him. But at the same time, he was all about giving me pleasure. I was his, totally. But, it was like he drew his pleasure from fulfilling my desire.\" she got a faraway look in her eyes, then said, \"Wow! 'I' hadn't even thought about it like that.\"\n\nBeth fidgeted in the seat that she had taken while Emma had been explaining, but then said, \"Yeah, wow is right.\" Then went around to the couch and began to straighten pillows. \"So, what do you do when he... you know... finishes.\"\n\nEmma furrowed her brow, \"Roll over and go to sleep? What do you mean?\"\n\n\"No, I mean, when he finishes.\" Beth said again.\n\nFinally understanding, Emma let out a very Beth-like, \"Ohhhh.\"\n\n\"Do I let him come inside me?\" Emma stated in a questioned tone. \"That's one of my favorite parts, feeling him shoot all up in me. If not that... all over my skin, or in my mouth, especially in my mouth if not deep inside my pussy.\"\n\nBeth turned and glanced at her younger sister. \"Doesn't it taste bad?\"\n\nEmma chuckled. \"Well, it should, I suppose. But it's Mike. I mean, it doesn't taste like chocolate or anything, sadly enough, but I love him, so somehow it doesn't.\"\n\n\"Did it hurt the first time?\" she asked.\n\n\"The first time we fucked?\" Em asked.\n\nBeth nodded.\n\n\"It was just a little uncomfortable at first, but only for a little bit,\" said Emma, \"He was very gentle, and didn't rush things. Both Sarah and Danni had it rough their first times from what they both told me. But Sarah coached Mike a little bit before he... took my cherry. Huh, that's the first time I thought to say that,\" once again, with a faraway look, then added, \"That made it all the more incredible.\"\n\nBeth nodded, hanging on every word and taking in all the information. She continued moving around the room and cleaning here and there with Emma, asking questions about intimacy with her brother.\n\nFinally, seemingly having run out of questions, Beth fell silent. Emma glanced over at her. She was wearing a thin shirt and shorts, her large breasts pressing against the fabric.\n\n\"So, did my tormenting Mike with your body, bother you?\" asked Emma.\n\nBeth glanced over and then down at her breasts, remembering Emma's brazen actions towards her. She remembered her popping out a breast and licking batter off her nipple. The thought sent a tingle up her spine and she closed her eyes for a second.\n\n\"Not exactly,\" she finally answered.\n\nBeth lowered her eyes again, embarrassed. Emma came over and they sat down on the couch next to her, and put a hand on her knee. \"I'm sorry if I embarrassed you, Mike was being a shithead and needed to be reminded exactly who has the power, even if he does hold reign over most of the control.\"\n\nBeth was shaking her head. \"No, it's not that. To be honest, it was... exciting really.\"\n\nEmma looked surprised, \"You liked it?\"\n\nBeth nodded again, and turned to regard her. \"Yeah, I guess you have a pretty persuasive tongue,\" she giggled.\n\nEmma burst out laughing and hugged Beth tightly. \"I love you, sis.\" she said, squeezing.\n\n\"I love you too,\" Beth replied, returning the hug, \"and your tongue.\"\n\nThere was a noise at the door, and Sarah and Danni came in, both carrying groceries. Emma and Beth rose to help carry the party stuff in.\n\n******\n\nMike stayed occupied for most of the day, cleaning, mowing, and getting the outside of the house looking spectacular. Danni came outside to chat with him while he was trimming the hedge.\n\n\"So, are you gonna be able to handle all the women that are coming tonight?\" she asked.\n\n\"Hot damn, we get to stay for the festivities. You betch'a babe, just line' your pretty asses up.\"\n\n\"What do you mean by handle?\" he said, a wry grin on his face, playing off the voice.\n\n\"No, you big goofball,\" Danni said, shaking her head at him. \"Three sex craved sisters aren't enough for you?\"\n\nMike laughed. \"I didn't mean it like that.\"\n\n\"Yes we did. Or I did. HEY!\"\n\n\"Honestly?\" added Mike, \"Having three beautiful women after me day after day is great. But I'd be fine, if all I had was you.\"\n\n\"Oh, you've got to be kidding me. (Gag)(Puke) Just stick with the current program, Slick.\n\nDanni's smile widened and her heart began to beat a little faster. \"Aw, thanks honey, that's so sweet. What I meant was, are you gonna be able to handle all the estrogen and silly girly things that are going to take place tonight. I didn't mean you were gonna get to fuck everyone, or anyone for that matter. This isn't a sex party for Mikey, after all.\"\n\n\"Whoa. Hold on a fucking minute. Nobody?\"\n\n'Down boy, I'll take care of this.'\n\nMike laughed again and shook his head. \"I know, I know. I was kidding. I'll be fine. I'm probably going to be relegated to waiter anyway. I'm already the grounds keeper.\"\n\nDanni glanced over at him and smiled. \"And are you gonna be able to handle sleeping alone?\"\n\n\"WHAT? We don't even get to sleep with our regular snatch? This is getting worse by the minute. You said...\"\n\n'Hang on,' thought Mike.\n\nBut that question brought Mike up short too, he hadn't thought of that. Danni couldn't very well climb into bed with her own brother with all the extra company filling every part of the house. She'd even have Megan and Lynn to keep her occupied, but Mike knew now he'd be a little concerned. It'd be strange having to sleep alone again after all that had happened.\n\n\"Damn fucking right.\"\n\n\"Yeah, I think so.\" Mike said.\n\n\"WHAT? ARE YOU OUT OF YOUR FUCKING MIND? No pussy? None? DAMN IT TO HELL. A house full of pussy and we don't get any of it? SHIT, I'M GONNA...\"\n\n\"What about you, though?\" he asked. \"You gonna be okay without all this?\" he asked, gesturing to himself.\n\n\"Yeah, you tell her Stud.\"\n\nDanni rolled her eyes and slapped him on the shoulder. \"Okay, Mr. Fabulous.\"\n\nShe knew he was kidding, but there was a hint of genuine concern in his voice. She came close to him and gave him a hug, as platonically as they could manage as they were outside. \n\nShe looked up at him as he hugged her, and said, \"I'll be okay. Besides, it's just for one night.\"",
        "\"Just one night? She can't be serious. This is a joke right. They've got some kind of scheme cooked up, and are going to surprise us, right? RIGHT?\" \n\n\"What do you think ya'll will do tonight?\" Mike asked with a smile. \n\nDanni shrugged. \"Just the regular slumber party girly stuff, I'd imagine. We'll try on lingerie, model it for each other, play with each other's boobs, beg each other to lick each other's pussies, talk about how much we love dick, and talk you into just watching us do it all. Stuff like that.\"\n\n\"Wait, is she serious?\"\n\n\"Smartass,\" Mike laughed and shook his head, and went back to clipping the hedge. \n\nDanni laughed. \"Movies, talking, maybe some swimming.\" she said.\n\n\"Sounds like a real hoot,\" Mike said.\n\n\"Hoot, my ass.\"\n\n\"Yeah,\" added Danni, \"I'm sure you're going to just hate having to watch out for a bunch of nineteen to twenty-five year old girls running around in their underwear, bikinis or maybe even skinny dipping.\"\n\n\"Underwear, bikinis, AND skinning dipping? And no pussy? Man, you're going to be so fucking sorry when all this is...\" \n\n\"Skinny dipping?\" Mike said, his interest renewed.\n\nDanni laughed. \"Stranger things have happened around here,\" she said with a laugh.\n\nMike smiled, turning back to the hedge. \n\n\"So,\" she asked, changing the subject, \"did you register for all the classes you wanted?\"\n\nMike nodded, as the conversation turned more banal.\n\n\"You are so fucked... the bad way.\"\n\n******\n\nThe day wore on and Mike finally finished with his self imposed chores before going back inside. He was soaked with sweat as he headed upstairs to his bathroom. He went in and pushed the door behind him and kicked off his shoes. Lifting each foot he stripped off his socks.\n\nThere was movement behind him and the door opened again. Beth came inside and glanced up.\n\n\"Oh, sorry,\" she said. \n\nMike had his shirt around his stomach and had been in the process of lifting it off. He glanced back at her and smiled. The shirt, still soaked with sweat, was sticking to his skin, red, warm and shiny.\n\n\"Here, let me help,\" she said, reaching forward and pushing some fingers underneath the shirt as he turned towards her.\n\nTheir eyes locked and he raised his arms over his head as she began to roll it upwards. She helped keep it going in that direction until it was at his neck, and then helped him pop it up and over his head. He tossed it towards the hamper and felt her hands on him again.\n\n\"If you don't fuck her, I'm gonna just freak the fuck out.\"\n\nBeth ran a hand along his chest, over the right pectoral and traced the muscle down and around, and over to the other muscle. Sweat glistened over his body. She ran a hand along the center line of his stomach, between his stomach muscles and to the edge of his jeans.\n\n\"So, this is kind of a dangerous room for us, huh,\" she said.\n\n\"Now that's the understatement of the millennium. She has no idea how dangerous right now. Damn it, if I had a direct line of communication, I'd...\"\n\n'Hush,' Mike thought.\n\nShe ran one of her hands along the top of his jeans and around, the other hand came up and moving around behind him, then pulled him close. She looked back up at him and leaned forward, lifting her face and closing her eyes as he pressed his lips to hers, his tongue beginning to dance with her own.\n\nHe broke the kiss briefly. \"Yup,\" he said, and dove excitedly back into the kiss, his hands roaming over her back and gently squeezing her rump. She whimpered softly in his arms and smiled, his warm tongue filling her mouth.\n\nShe broke the kiss again, letting his lips move over her neck and across to the other side of her head, up to her ears and her cheeks. \"Here,\" she said at length, her hands coming back around to the front of his jeans. \"Let me help you get those off so you can take a shower.\"\n\n\"Get them off, and then get us off, to hell with the shower.\"\n\nShe popped the button on his jeans and pulled them apart, biting her lip and glancing upwards at him before pulling them out a bit, along with his underwear, and pretending to inspect the contents like a scientist.\n\n\"If this doesn't go somewhere reeeeally significant, I'm going to be reeeeally pissed.\"\n\nHe chuckled at her as she began to work his jeans off, slowly pulling them downwards along with his boxers.\n\n\"I know how hard it is to get these off,\" she joked, grinning at him.\n\nMike chuckled again, his pants and boxers traveling down off his hips and freeing the angry red beast that was caged within.\n\n\"Oh yeah, now we're ready.\"\n\nBeth stood back up. \"I think I'll go make lunch,\" she winked, and turned towards the door.\n\n\"WHAT...? FUCK!! Don't let her get away, Prick!!\"\n\nMike groaned. \"You are so evil,\" he said, coming forwards to wrap her up in his arms, his rock hard cock pressing up between the cheeks of her ass, his hands immediately groping her breasts and pressing her into the door. \"If you weren't so sweet and pure, I'd pull your pants down right here and have my way with you.\"\n\n\"Do it Dude. That's what she wants.\"\n\nBeth giggled, and then sighed as she whispered back behind herself to him, \"A big part of me wants you to do just that,\" pushing back against him as he ground his cock into her ass. She reached around behind with a single hand and wrapped it around his dick, stroking it slowly.\n\n\"SEE...? Oh Yeah. Just keep doing that. We'll take care of...\"\n\n\"God I can't wait to feel that again,\" she said, remembering that morning's encounter.\n\n\"Just have her bend forward.\"\n\nMike sighed and slowly extricated himself, knowing that if he didn't stop himself now, in a few more moments, neither of them would be able to.\n\n\"WHAT? SON-OF-A-BITCH. I'm gonna find a way to make you punch YOUSELF in the face. There's gotta be a bundle of nerves somewhere that I can trigger.\"\n\n'Will you trust me?' Mike thought. 'Have I ever let you down?'\n\n\"Are you fucking kidding me? Constantly. Every fucking time you let one of them get away, when they're not really wanting to get away. And tonight this house is going to be wall to wall with pussy. You're working yourself into an unprecedented and perpetual case of blue balls Jack.\"\n\nMike ignored the voice. Beth turned and leaned back against the door, slowly opening her eyes, then watched her brother turn the water on.\n\n\"Better make it a cold one,\" she said, looking longingly at the large cock still protruding from its base. \"The things that little fucker right there makes me want to do,\" she said, eyeing him. \"Mmm.\"\n\nHe laughed; surprised at the way Beth had changed. He turned the water on, full cold and stepped inside as she closed the door behind herself. \n\n\"Damn it, I thought we understood each other. I tell you to go get pussy, you go get pussy. I've already proven that I have our best interests at hard.\"\n\n'That's at heart.' thought Mike.\n\n\"No, at hard, as in hard-on. Asshole.\"\n\n'Calm down, buddy. I'm trying to make her want me... us, so bad that she comes to us. I can't go to her or it will look and feel like I'm forcing myself on her. It has to be something she wants to do. Just trust me.'\n\n\"She just proved she's almost overcome with thoughts of fucking us.\"\n\n'Almost,' he thought, 'Just trust me. You won't regret the results.'\n\n\"SHIT, I'm so horny.\"\n\n'Me too,' Mike thought as he showered in the cold water.\n\nAfter several minutes, he got out feeling a bit more refreshed, but still sore from all the work he'd done. He went downstairs and heard Sarah call him from the wash room. He turned and headed through the door and peered in. She was throwing clothes into the washer from a hamper and looked back at him for a second. \n\n\"Do you mind?\" she asked, nodding at the soap in the cabinet. She had a stool that he'd made for her, so he knew perfectly well that she could reach the soap. He decided to play along anyways, though.\n\nHe reached up and over her, grabbing the jug of detergent and lowering it to the washer. He felt her hands on his stomach and smiled as she pushed past the waist band of his shorts and wrapped around his cock.\n\n\"Hey there big fella,\" she purred looking down into his pants.\n\nShe glanced up at him and grinned. Then dropping to her knees, she pulled his shorts down a bit to allow the 'big fella' out. As it throbbed to life, he felt her mouth swallow the tip and her tongue begin to wash over it, it's soft warmth seeping into his cock as she sucked gently, pulling him in and out of her mouth.\n\n\"Now this is more like it. Ahh, Yeah...\"\n\nHe swelled to a full erection as she pumped back and forth on his cock, and he ran a hand through her hair, pulling it up off her neck. She sucked hard on him as she pulled him deep within her throat, gagging before pulling him back out. \n\n\"We don't want you all worked up before we get all these other women in our house now, do we,\" she said.\n\nShe pumped his cock up and down, her mouth working over the tip and down the shaft, jerking him off as she swallowed his cock.\n\nShe pulled him back out again, \"We don't want them getting any of our cock now do we.\" \n\nMike shook his head, smiling as his sister pulled him back into his mouth, her tongue running around the tip and then down the shaft as she pulled it into her mouth farther. She sucked on him again as she pulled him deeper into her mouth, touching the back of her throat and gagging again. Then there was a sudden noise behind him and she stood quickly, as he pulled up his shorts and started straightening clothes.\n\n\"FUCK. What do I have to do to...\" \n\n\"Thanks hun,\" she said, dismissing him as Emma came in, handing her a pile of clothes. Mike followed her out and started to head back upstairs to let his erection subside.\n\nEmma was on the steps in front of him and turned, smiling. \"Do I need to finish what she started?\" \n\nMike chuckled and shook his head with a resigned sigh.\n\n\"DAMN!\"\n\nEmma leaned forward and arched her back, pushing her ass out until it was directly in front of his face. He could smell her intoxicating scent and had a sudden urge to throw her to the floor.\n\n\"Ohh, that ass. Smell that? I guess you're going to turn that down too, aren't you? Damn, we're going to have the bluest pair of balls in history before this slumber party is fucking over, and I'm going freaking fucking bat shit crazy.\"\n\nShe smiled at him wickedly and winked, \"Aren't you gonna come get some of this?\"\n\nThey both heard Beth's door open and quickly went to their respective rooms as she headed down the stairs passed them. Mike stayed there for the rest of the afternoon.\n\n\"IDIOT!!\"\n\n******\n\nTheir friends started arriving just before dinner and every one that was coming had all finally arrived by around 6:30. The house was full of yammering banter that Mike barely understood. Sarah and Sally were in the kitchen making some kind of mixed drinks. Tina, Ashley, Becca, Danni, Megan, Lynn, Beth, Susan, and Emma were all in the living room. Mike thought they sounded like a pen full of chickens.\n\n\"I wouldn't mention that to them. Not that it would make any difference now.\n\nMike sat on one couch, Danni's friend Lynn sitting next to him, but not paying any attention to him in the least. They were talking about boys, hairstyles, reality TV.\n\n'Boring shit,' Mike thought. He had the remote control though, and quickly flipped to ESPN.\n\nHe kept feeling like a fifth wheel, and quickly decided that it was best to leave the room. Sarah saw him heading upstairs and called out after him, \"Pizza in about twenty minutes.\"\n\n\"Alright,\" he called back down, and quickly shut his door behind him.\n\nBack downstairs, the girls were really getting into the conversational portion of their evening. Sally was still questioning Sarah in the kitchen, demanding to know the identity of her knew lover and begging for her to share. Sarah, thoroughly enjoying having the upper hand, kept shaking her head, never giving an inch.\n\n\"Oh come on,\" Sally was saying. \"I'll bet he'd love to have the both of us, any man would.\"\n\nSarah bit her lip to keep from bursting out laughing, or even screaming, 'Already did that!'\n\n\"Sally, I'm not gonna tell you,\" Sarah said, smiling wickedly.\n\n\"Then I'll just have to stalk you and find out on my own,\" she said with a grin.\n\nIn the other room, Ashley had begun gushing over Mike as soon as he'd disappeared. \"Oh my god he is soooo cute!\"\n\nShe had always been taken with Mike, and had a serious crush on him. She was a cute little redhead, small framed and almost no breasts, skinny, but still, very cute.\n\nEmma rolled her eyes as she had been expected to, keeping up the appearances of the disgusted sister. \"It's just Mike,\" she said, glancing over at Danni who was biting her lip and trying not to laugh.\n\n\"Come on Emma, he's so hot.\" Tina said. Tina was a dark-haired Asian girl, but had dyed parts of her hair purple. \n\nEmma made a face and glanced over. \"He's my brother for crying out loud. I don't think anything about that.\"\n\nBecca laughed. \"He really is cute,\" she agreed, \"but even you have to admit, he's got a great butt.\" she giggled, and the rest of the girls started laughing along with her.\n\nBecca had raven black hair and was thin, though not as thin as Ashley.\n\nDanni stopped laughing finally and turned to Becca. \"I'm sure Mike is well put together, but he's our brother. We just don't look at him like that,\" she said as she winked at Emma.\n\nBeth and Susan were smiling and laughing with the other girls, but were more withdrawn and talked amongst themselves more than with the others. Susan wasn't as attractive as the other girls and had brownish hair pulled back into a pony tail and wore thick glasses.\n\nSally was a tall blonde with a raucous laugh which could be heard throughout the house. She and Sarah came back into the living room and joined in the conversation.\n\nMegan had short dark hair, neck length and was about Danni's height, but she had larger breasts than Danni, maybe even a little larger than Beth's. Lynn was cute, had a thin face and blonde hair, and had a small frame and small breasts. \n\n\"He's so damn yummy,\" Ashley blurted out, causing everyone to burst out in laughter. \n\nUpstairs Mike just rolled his eyes, being perfectly able to hear all of their comments once the volume of their voices had risen above the norm.\n\n\"I think we have an opportunity here. Almost all of them down there like 'The Mike'. Why don't you go downstairs instead of hanging around up here and hiding? Besides, all the pussy is... DOWNSTAIRS, Idiot.\"\n\nMike ignored it, and a few minutes later he heard the doorbell ring. 'Pizza's here,' he thought, and had little choice but to do just that.\n\nAs eleven women crowded around the table to grab a slice of pizza and pour themselves drinks, vodka and some fruity pink stuff, Mike went to the fridge and grabbed a soda and threw a few slices of pizza on to a plate.\n\n\"Accidentally dump your drink all over the one in the white shirt.\" \n\nKnowing the voice was making a reference to Lynn, Mike thought, 'Did you evolve in my head out of an underdeveloped and handicapped third grade brain cell and end up not being able to age with me somehow or something?' Mike wondered.\n\n\"Alright, that was lame, sorry.\"\n\nMike headed to the deck to eat, and was thankful that the gaggle of girls that were still yapping their heads off inside had stayed there and had no interest in him, other than as a topic of conversation anyway.\n\nHe spent a few minutes eating his pizza in silence and decided to hop in the hot tub. He didn't really want to head upstairs, since that would involve running the gauntlet of tits and asses inside. He went over to the hot tub and glanced at the deck and the patio door. He could see the girls but without turning on any lights, and they couldn't see him in the darkness that covered the back deck.\n\nSmiling, he stripped off his pants and turned on the water jets. The people who had owned their house previously had really splurged and installed a very nice pool and hot tub. It was very large for a hot tub, and would easily hold all the guests at the party that evening.\n\n\"This isn't a bad idea. Yeah, I like it. They'll all come out in bikinis, give us a show, and then BAM, orgy time.\"\n\n'You are such an idiot.'\n\nMike eased himself down into the water, clad only in his boxers, and sighed in relief as the warm water began to cascade over him, massaging his muscles and relieving the stress of the work he'd done earlier.\n\nHe began to fall asleep, and was nearly out when he heard the dull murmur from inside get suddenly louder as the door opened and the girls came out, all clad in their swimsuits. Most had two piece bikinis, a couple quite skimpy, but a couple of others had modest one pieces. A few were carrying pitchers of different mixed drinks and every one of them had a glass in hand, and they were headed straight for him and the hot tub.\n\nHe suddenly realized his situation. In his boxers, in the hot tub, his sisters and their friends rapidly closing in, he was stuck and had nowhere to go. He'd just have to outlast the girls and stay out here until they went inside. Then giving it a little thought, he figured that wasn't a bad idea, since they were drinking. He didn't want to have any accidents in the pool or hot tub attributed to alcohol.\n\n\"Accidents like an accidental orgy?\"\n\n'Shut up.'\n\nThe girls all began to slide into the water, spreading out and just continued giggling. Ashley slid up next to him and he mentally rolled his eyes, but he smiled at her. Tina slid up next to him on his right side, much to his chagrin. It was getting dark out and Sarah turned on the lights to the deck to give them just enough illumination to enjoy themselves, but not enough to see under the water.\n\n\"So, are you looking forward to school starting back up, Becca?\" Emma asked, taking a long drink of her cocktail.\n\n\"I'm looking forward to meeting some new guys,\" she said, and laughter echoed off the back of the house. As the laughter subsided, Ashley turned and looked at Mike, doe-eyed and asked, \"What about you, Mike?\"\n\n\"Sorry Ash, I'm not into guys,\" he said, and the girls burst out laughing again.\n\nAshley's tittering laughter echoed the longest and she slapped him on the shoulder. \"You're so funny.\"\n\nThere was a long silence and finally Danni broke it. \"Let's play something. I know it sounds so Jr. High, but I think it'll be fun.\"\n\n\"Truth or dare!\" all the girls shouted in unison, causing even Mike to chuckle.\n\n'Now, how planned did that look?' Mike thought.\n\n\"Now we're talking.\"\n\nSarah waved her hands for a second to quiet everyone down. \"Sounds fun, but first and foremost, don't try and make any of us do anything to family.\" They all agreed that family was out of bounds and agreed to not dare anything of the sort.\n\n\"FUCK. That takes most of my fun out of ANY game.\"\n\n\"So who goes first?\"\n\nSeveral sets of hands pointed at Mike who began shaking his head and waving his hands. \"I didn't intend to join in on any of your party stuff, I was just going to have a soak. You girls go ahead.\"\n\n\"Awww, come on,\" several of them said. \n\n\"Come on, Mike, it'll be fun,\" Emma said, winking. \"Besides, you did all the cleanup work on the back yard, pool and the deck, it's only fair. Please?\" she asked, and pouted.\n\nTen other heads turned and looked at him and began pouting simultaneously and he started chuckling. He waved his arms in surrender and nodded his head. \"Okay, okay, I'll play.\"\n\n\"So does it matter who I choose first?\" he asked, glancing around the hot tub. Sarah shook her head. \n\n\"Just start with Ashley,\" she said, winking at the tiny red head.\n\nMike glared at her briefly but turned to Ashley, \"Truth or dare?\"",
        "\"Dare!\" she yelled, a little too quickly and loudly, causing the rest of the girls to giggle. Mike thought for a moment.\n\n\"Make her give you head!\"\n\n'No.'\n\n\"Make her show you her tits!\" \n\n'She doesn't have any tits.'\n\n\"Oh right. Well, make her kiss Becca.\"\n\n'No.'\n\n\"Fuck, well make her do SOMETHING resembling anything worth watching you shithead!\"\n\nMike laughed inwardly, then smiling to Ashley he said, \"I dare you to dive in the pool and swim across and back, then you can get back in the hot tub.\"\n\nThe other girls all agreed that this was a lame dare, but Ashley shrugged and got out anyway. She wiggled in her light blue bikini as she crawled from the hot tub, and then headed over to the pool. \n\nMike winked at Becca when she looked at him questioningly, \"I know what I'm doing.\" he said as Ashley leapt into the pool.\n\nWhen she surfaced, she came up sputtering and screamed. \"Oh, God that's so fucking cold!\"\n\nAll the girls burst out laughing as she jumped out and leapt back into the hot tub, almost cuddling up next to Mike this time. He was laughing pretty hard and she thumped him on the shoulder weakly.\n\n\"Paybacks are a bitch, Mike,\" she said, glancing up. \n\n\"Sorry Ash, I just couldn't help it. I topped off the pool this afternoon and the heater hasn't been on in months. I knew it'd feel like it was freezing coming straight out of the hot tub.\"\n\nAshley was shivering even slid right up against Mike, who relented and put an arm around her to warm her back up.\n\n\"Your turn,\" Megan said to Ashley. \n\nShe briefly glared at Mike, but thought better of making him do anything that would remove his arm from around her and take him from her side.\n\n\"Becca,\" she said, indicating the girl sitting next to her. \"Truth or dare.\"\n\n\"Truth.\" she said. \n\nAll the girls let out a disappointed 'Awwww.'\n\n\"Alright, fine then, dare.\"\n\nAshley thought for a second and then smiled, \"Stand on a chair and do the chicken dance.\"\n\nBecca began to turn red and started to shake her head. She was very shy and this would be pretty hard for her to do.\n\n\"So what's the penalty if someone fails the dare?\" Emma asked.\n\n\"Drink,\" Sally declared. Everyone else agreed and they made the penalty a five second drink of the cocktails they had made.\n\nBecca groaned, but slid out of the water. \"Ya'll this is so dumb,\" she said but stood on the indicated chair as the other girls and Mike began to clap and hum the chicken dance.\n\nBecca covered her face and began to laugh as she wiggled her hips and flapped her arms like a chicken as everyone began to laugh and applaud.\n\nShe quickly jumped back into the water and covered her face briefly, then turned to Lynn, who was beside her.\n\nLynn was dared to sing and in turn, she dared Emma. Then it was Danni, and Megan, Susan, and then Beth, who dared Sally and then Sarah, and then finally it came all the way around to Tina. \n\nSarah had a wicked look on her face as she tried to think of a suitable dare. Up until now, the dares had been tame, dancing, singing, embarrassing each other.\n\nSo to liven things up, Sarah said, \"I dare you to kiss Becca for five seconds.\"\n\n\"Woo-Hoo! Girl on Girl...! Yeah, get it started Sarah. Atta girl! orgy time!\"\n\nMike groaned inwardly. The girls were cackling in laughter and Becca was turning bright red, as was Tina. Tina wimped out, however, and took the five second drink of the cocktail instead. As she set the pitcher back down on the side of the hot tub, she sat back and began to sway a little, her eyes going glassy and a soft, \"whoa,\" passing her lips.\n\nThe girls giggled and Becca turned to Sarah. \"How much alcohol is in that?\"\n\n\"Tons,\" Sarah giggled, and the others filled the back yard with the sounds of laughter.\n\nTina shook herself back to reality and looked at Mike. \"Truth,\" he said, not willing to subject himself to getting out, lest they see his boxers, and quite possibly, his dick peeking through or even out.\n\nDisappointment sounded throughout the backyard, but Mike wouldn't budge. Tina thought for a second, swaying gently, then asked, \"How many girls have you had sex with?\"\n\nDanni, who was taking a drink from her glass, spat it out in surprise, and laughter bounced off every structure in the backyard. Mike began to turn red and glanced over first at Danni, then Emma, and finally Sarah. They were laughing so hard they couldn't see straight.\n\n\"Wait, what kind of sex are we talking about,\" he asked. \n\nThat made all the girls laugh even harder and louder. Then he realized after he'd asked the question that the type of sex didn't matter. He'd only had sex with three women, and only had oral sex with those same three as well.\n\n\"Whatever,\" he said, shaking his head, \"three.\"\n\nAshley chose a dare, and as she did, the girls made a new rule that they were just playing dare now. \"I dare you to kiss Emma,\" Mike said quickly, knowing full well what he'd wanted to dare next.\n\nAshley turned slightly red, but knew that she'd likely pass out if she had to chug any more of the powerful alcoholic concoction that Sarah had made. Emma was glaring at her brother, a smirk on her face but she leaned forward and took the decision out of Ashley's hands. She grabbed both sides of her face and quickly pulled her face to her own, kissing her full on the lips and drawing a squeal of surprise from Ashley. Again, laughter echoed around the backyard.\n\nEmma sat back and quickly decided to change the rules. \"Let's just say that you can dare whoever you want to now. It'll get boring if we just keep going around in a circle.\"\n\nAshley sat back and briefly pouted as Mike scooted to allow her in, but without returning his arm around her shoulder.\n\n\"Okay,\" Ashley said, and looked around the pool.\n\nMike smiled and sat back, thoroughly pleased with himself. He felt Ashley next to him and then her hand suddenly on his leg. She squeezed it gently, causing Mike's cock to begin to stir.\n\n'Oh, shit no,' he thought.\n\n\"Oh, HELL yeah. Let'em get a good look at...\"\n\n'Shut up.'\n\nAshley was a little irritated with Mike, and quickly decided to see how difficult she could make things on him. First he'd admitted he'd been with other girls. Now he'd asked her to kiss someone besides him! The nerve!\n\nAshley glanced around the pool and quickly judged who had the largest breasts. It was a tie between and Beth and Megan, and she quickly chose Megan as the obvious choice to \"release the girls\".\n\n\"Megan,\" she said, turning and facing the brunette. \"I dare you to take off your top.\"\n\nThe girls cackled and clapped. Megan, as wild as Danni used to be, didn't mind at all removing her clothes, as alcohol always loosened her already loose inhibitions. She shrugged between giggles as she looked over at Mike and winked. \"Don't strain your eyes now,\" she said as she sat on the edge of the hot tub and reached behind, freeing her massive breasts.\n\n\"Oh... My... God.\"\n\nMike tried, quite unsuccessfully, to pry his eyes from them. The girls went into a laugh fest, and finally had to shake him back to reality.\n\n\"Sorry,\" he muttered with a grin at Megan. \n\nShe laughed and whispered something to Danni, who winked at Mike, mirth ringing her eyes.\n\nMegan grinned and looked back at Ashley. She hadn't minded the dare, but was determined to get the little devil back for it. \"I dare you to remove your top, Ashley.\"\n\nAshley hadn't thought of that, and started to reach for the pitcher, but then changed her mind and sat on the edge of the hot tub. She kept glancing at Mike as he pointedly looked anywhere but at her, as she reached to her back and untied the knot in her bikini top. She smiled as he glanced around after tossing her top to the floor, her small pink nipples hardening quickly in the cool air. She slid back into the water and quickly replaced her hand on Mike's leg.\n\nShe looked around the pool and smiled at Beth. Beth was still giggling as she saw Ashley looking at her, and immediately began shaking her head. Ashley giggled and nodded. \"I dare Beth, to remove her top.\"\n\nBeth turned red and shook her head, reaching for the pitcher and taking 'a five.' She was physically larger than Tina, and it didn't have quite the same effect on her as it did the smaller girl. She swayed slightly and slid back into the water, licking her full lips and looking around. She giggled at Susan and dared her to kiss Megan. Susan was quiet, and a bit of a dork, but she looked sexy enough in a bathing suit. She leaned over and quickly kissed Megan.\n\nSusan chose Sally and dared her to kiss Sarah, and she did, quickly. Sally in turn, dared Becca to take her top off, but the thin girl was too shy and took 'a five' of the cocktail as well.\n\nMike felt Ashley's hand roaming under the water and suddenly, it was in his lap, squeezing his now rock hard erection. Mike bit his lip and froze, glancing over at her. She smiled innocently at him and carefully pulled his dick out through the hole in his boxers, then gently began to rub the length of his shaft.\n\n\"Fucking A, Dude. Now we're getting somewhere. We're going to get some pussy yet.\"\n\nThe girls kept daring each other to remove pieces of their swim suits and kiss each other, and pretty much ignored Mike for a several minutes, except for a couple of kisses from his sisters' friends, and one having rub her boobs in his face. A couple were dared to fondle each other's breasts, and Sally even accepted to have Megan lick up her pussy. Pretty soon all the girls were naked, when the dare came back to Emma.\n\nAfter she kissed Tina, she looked at Beth. \"I dare you to sit on Mike's lap.\"\n\nMike groaned and weighed his options. He hoped that Beth wouldn't go through with the dare, but much to his chagrin he saw that she was tipsy enough to do just that. He quickly looked over at Danni for help, but she just shrugged and smiled at him. She had a grin on her face, and quickly understood that he'd gotten erect from all the now naked bodies in the water.\n\nBeth grinned as she came over, and Mike felt Ashley struggling to get his dick back in his pants, and he pushed her hand away and quickly just got it back in his drawers as Beth sat down.\n\nBeth bit her lip to hide her grin as she felt his hard cock pressing into her butt cheeks, but leaned back and lay down on his chest. Ashley was laughing uncontrollably at his discomfort of having his naked sister sitting on what she knew was her own brother's erection, and glad to finally have her revenge.\n\nBeth laid her head back and put her mouth next to his ear. \"Sorry, baby.\" She leaned forward again and as she did, the head of his cock slid upwards and pressed into the crease of her pussy. She bit her lip and covered the movement by leaning farther forwards and lifting slightly to get her drink. Mike's cock floated upwards through the slit in his boxers and Beth felt it as she gently sat down, feeling it pushing gently upwards and finally sliding forwards, as she sat down directly on top of it.\n\n\"Fuck her, fuck her now.\"\n\nThe game continued for a few more rounds as Beth took every opportunity to gently massage her brother's cock with her pussy lips, relishing every time that it desperately tried to penetrate her. She would lean forward slightly, stretch her arms and neck and let Mike rub his hands on her shoulders, and then ease herself backwards, his cock sliding up her slit and sometimes gently pushing at her lips, only to slip past a second later and rub against her clit.\n\nNo one seemed to notice, other than their sisters, who had no doubts whatsoever as to what was going on just beneath the water of the hot tub. Finally, Emma let Beth resume her original seat. The game had gone several more rounds and it came back to Tina. She knew that Ashley had a huge crush on Mike and drunkenly decided to \"help.\"\n\n\"Ash, I dare you to sit on Mike's lap.\" She was still swaying slightly from side to side as tried to focus on Ashley. \n\nThe thin red-head giggled excitedly, unable to contain her enthusiasm and stood, her small breasts poking outwards, nipples hard in the cool air.\n\nShe sat down on him and he immediately felt her hand rummaging around for his cock again. It was poking downwards between her legs and she quickly began massaging it back and forth as he kept whispering for her to cut it out. She just giggled and gently shook her head.\n\nMike groaned as he felt her pull his cock upwards and rub it on her pussy and not being subtle about it either, causing the water to ripple repeatedly with her efforts. Mike didn't know what to do other than hold as still as possible. In short order he soon found that was a mistake as well.\n\n\"What do mean 'don't know what to do'? Let her fuck you, asshole. She wants it, you want it, I want it, and all the girls already know all about it. It's all part of the fun that comes with the game, no pun intended. What's the fucking harm in it? Lay back and enjoy, Prick.\"\n\nSuddenly, he felt a different type of warmth. The envelopment of his member by flesh made him realized that she'd managed to ease his cock into her channel. She gently but quickly slid down his length as his body pushed all the way up and inside her out of instinct. She made only three short passes up and down his length when her body shuddered in orgasm.\n\n\"Oh, Yeah...\"\n\nApparently, as she had been \"handling\" Mike, she had been frigging herself with her other hand, and had already brought herself close to coming, and it was all suddenly too much for Mike. He pushed her gently aside, removing his member from her convulsing pussy. As he did, the head of his shaft glanced her clit, and she bucked in one last spasm with a gasp.\n\nHe stood quickly, his cock poking through his shorts and looking enormous, engorged and as angry as a dragon that had been disturbed. Leaping out of the hot tub, he bolted for the house and upstairs to the shower, reaching immediately for the cold water. \n\n\"YOU FUCKING IDIOT!! That was the single most brainless thing you have ever done.\"\n\nThe laughter from outside told him all he needed to know. The girls were shocked, but couldn't really blame Ashley for what she'd done. She was drunk as were they all, and had always had a huge crush on Mike. Therefore, given the opportunity, she had made the most of it.\n\nEmma, Danni, Sarah, and Beth however, all felt the sharp stab of jealousy as they realized what she had done, but they couldn't very well say anything without giving away the family secret, and that was the last thing they could do. As a result, they just played along with their guests, laughing and joking that Ashley had been able to 'get her some' of Mike.\n\nMike jumped into the shower and let the cold water shock him back to reality. After a few minutes and clearing his head, he got out of the shower to latch the door and propped the hamper under the door handle to prevent anyone from entering. Then he climbed back under the spray and let the water course over his body and cool the heat coursing through his veins.\n\nHe glanced out over the shower door at the clock. It was near midnight so he got out and headed to his room. After getting dressed for bed and climbing between his sheets, he lay there listening to the murmur of the girls still in the hot tub. After a while, he heard them gather themselves, and return to the house.\n\n*******\n\nHe listened as the noise level diminished over time, then quietly climbed out of bed and exited his room and made his way downstairs. He glanced at the couch as he came into the living room and Tina was passed out there. He went to peek in on Sarah, and she and Sally were snoring quietly together in her bed. He headed quietly back upstairs and took a peek into Emma's room where he saw three more sleeping forms and quietly closed the door.\n\nThen he headed to Danni's room. Glancing in, he found three girls inside sleeping quietly, so he closed the door behind himself again. Finally he headed to Beth's room. He slowly opened the door enough to see Susan laying in bed and Beth next to her. He quietly closed the door and headed back to his own room, satisfied that all the girls were safe and hadn't passed out in the hot tub.\n\n\"Eleven drunk, hot and horny females filling every bed and couch in this house except ours, and we couldn't get laid? Now they're all passed out. This is really lame man. I'm going to hunt up that bundle of nerves that's connected to your fucking reasoning center, literally. There has got be a malfunction in the circuitry.\"\n\nAs Mike lay back down in his bed, he heard a sound coming from down the hall. Then the sound turned into soft footsteps and the door to his room swung slowly and quietly open.\n\n\"Wait a minute. Hold everything. Don't fucking move, bro. You may have just been given a reprieve and a second chance. If so, you better not fuck this one up Dude.\"\n\nMike could barely make out a slender form in the door before it closed. He felt the mattress shift as whoever it was came forwards and practically jumped on him. She was heavier than Ashley and a little larger too, as the redhead was waifish.\n\nThe girl now in his bed was soft and warm, and pressing into his chest as he felt lips press into his cheek, searching for his own. He ran his hand along her back and down to her ass. It was firm, but not muscular, so it wasn't Emma, or any of her friends.\n\nHe ran a hand up her back and through her hair. He felt her lips press into his and felt her breasts pushing into his chest. Her tongue was warm, excited and searching his mouth for his, as she found it; they danced in each other's mouths. \n\nMike gently turned her over and wrapped an arm around her waist, pulling her tight up against himself as she whimpered in his arms, her lips locked on his for a second before he broke the kiss and ran his lips down her neck to her chest.\n\nHe gently lifted her up and pulled her top off, her breasts spilling free and into his waiting hands. He leaned down and met her nipple with his tongue, drawing it forth and into his mouth, biting gently and smiling as it responded to his probing. Moving over to the other breast, he pulled that nipple inside and sucked gently, his tongue running circles around it as well.\n\nThe mystery woman reached down and grabbed onto his already throbbing and hardened cock. As she gently began to massage up and down its length Mike moaned as he felt her hand on his shaft, warm and soft, gently massaging every inch. She stroked him up and down and with her other hand she pulled at his boxers, freeing his cock completely and pushed his boxers as far down as she could.\n\nHe kicked them to the end of his mattress and hurriedly began to pull her underwear off. 'Sarah?' he thought, as it almost had to be her. She'd probably woken up when he'd gone downstairs.\n\n\"I... don't think so Dude. But we don't give a shit who it is. It's pussy, ain't it?\"\n\nHe felt her hand on his ass gently try and push him upwards, begging his cock towards her mouth. She moaned excitedly as he complied, and then began licking the tip of his cock, and pulling him into her mouth. She started to bob up and down on it, her tongue working in circles around the tip, and tasting his pre-cum. \n\nShe was pumping his cock into her mouth with both hands, stroking quickly and bobbing her head up and down as he knelt over her. As he glanced down to see his cock re-enter her mouth, her face caught the dim moonlight coming from the window as it angled to take him deeper. He was shocked to see that it wasn't Sarah.\n\n\"I told you! I was expecting one of the strays, though. This is better. The angel has arrived.\"\n\n\"Beth!\" he whispered. She looked up at him and winked, pulling his cock back into her mouth as she pumped it, as if she wanted him to come right then and there.\n\nHe pulled out and dropped his face to hers, kissing her quickly, excitedly, and their tongues began dancing again. He felt her pulling him towards her pussy, desperately yearning for his pulsing cock to be inside her.",
        "He knelt between her legs and gently ran his cock up and down her slit, looking up at her. \"Are you ready?\" he asked.\n\nShe smiled as she nodded, then kissed him long and hard as she ran her fingers through his hair. Breaking the kiss, she said, \"Oh Mike, I've never ever wanted anything more,\" she rasped, pulling him forcefully towards her. \"I'm aching for you, and I don't want you to have anyone else until you've had me. Just... just...\"\n\n\"I know,\" Mike said, leaning forwards for another kiss. \"I promise, I won't hurt you.\"\n\nHe eased his cock into her slit, gently rubbing the wetness up and down, before sliding forwards until the head of his shaft met the familiar barrier that he'd felt when making love to Emma. \n\nBeth closed her eyes as she felt her brother's cock at the very door of her virginity, and then there was a slight flash of pain. She winced as he thrust slowly into her, gently pushing his way past and stopping as she needed him to.\n\n\"Okay, a little more.\" she said.\n\nHe began to thrust gently deeper, then pulled out slowly, and with each thrust, her pain obviously began to subside. He knew that she was finally okay when she began to moan softly in pleasure instead of pain. He continued to take it slow, however, and kept pumping gently in and out of his sister's pussy.\n\nBeth moaned audibly, finally understanding what her sister's had been enjoying so much, and vowing to enjoy it just as much and as often as they did. Mike felt huge inside her; though she knew he was perhaps just slightly above average. His cock seemed to angle just right within her channel to hit one of several very sensitive spots, and with every thrust her pleasure increased and her pain subsided.\n\nShe began to feel another orgasm building in her, like the one she'd had that morning but this one obviously more powerful, and perhaps even more satisfying. Subconsciously she began to dig her nails into his back and bite her lip as she spread her legs wider and pulled at his body, wanting nothing else but for it to become a part of her own. \n\nMike began to take longer, slower strokes as he felt the walls of her pussy start to contract. She moaned quietly beneath him as he continued to piston himself inside her womanhood, his cock twitching with sweet delight each time she took in every satisfying inch, the full length drawing a mountain of ecstasy from within both of them as he bottomed out. She began rocking her hips, and bucking as he thrust into her and increased his speed. After several minutes of absolute bliss, she found what turned out to be the beginning of her climax as finally his orgasm released itself into her. \n\n\"Oh, god yes, baby, right... (gasp) there,\" she moaned, as her orgasm hit her. It didn't erupt, then subside or pass, though, but latched itself on to her senses and refused to let go.\n\nMike's shaft spewed hot cum deep inside her. She knew exactly how dangerous this was, but she didn't care. She'd wanted it inside her. She wanted to feel him deep inside her and her brother's semen filling her as his body emptied itself into her. \n\nFinally, after Mike had stopped squirting his warm, gooey fluid deep into her pussy, he collapsed on top of her. Her cunt however kept convulsing around his shaft, seemingly trying to milk it as if just in case he wasn't completely spent. Her orgasm didn't seem to want to end, and she just kept coming.\n\n\"I love you.\" he said, smiling and kissing her again.\n\n\"Oh, god I... (gasp) love you too, Mike,\" she said, smiling and returning his kiss. Then surprising him, she rolled him over, her pussy still grasping at his shaft.\n\n\"Damn it, I love this fuckin family.\"\n\n\"Can you... go again?\" she asked, not feeling as though she was finished, but not knowing exactly what else to do, or to do about it.\n\n\"Hell yeah, we can go again.\"\n\nMike had determined that she'd found herself in the grips of post-orgasmic-spasms just as he'd seen Sarah experience on a small scale, but Beth's had apparently taken over her wanton need. He wanted to comply but was forced to answer, \"I don't know.\"\n\n\"Well I'm going to see.\" Beth said, \"Wow,\" she said, giggling with delight, her face becoming red and actually almost glowing. It was flushed from her orgasm, but her body continued to shudder atop him, one right after another.\n\n\"I haven't gone down yet,\" he pointed out, \"and you're so beautiful, and... arousing. God you are so sexy. But it's going to take me longer to come.\"\n\n\"Oh, I can...(gasp) ride you,\" she said, as she continued sliding up and down on his still rigid shaft, \"for as long as it takes. Oh... yeah. I don't know what... you've (gasp) done to me, or... what these are, but I'm gonna find... (gasp) out... OH, sweet angels of mercy, Mike... oh yes. OH... Damn it, that's so good... I've never... (GASP)! Oh god Mike... That is like nothing...\" she said, kissing him full on the mouth, her tongue again searching his out while still giggling with excitement as she humped and hunched her pelvis repeatedly onto his own as fast as a hula dancer shakes side to side, thrusting her pussy down onto the base of his shaft. \n\n\"That's right. Yeah, baby! Ride that cock. Ride it to your heart's content!\" \n\n\"Ah, fuck me,\" Mike groaned to himself, not realizing he had done so out loud. \n\n\"Oh... baby, I'm (gasp) going to,\" she said almost breathless, as she ground her breasts into his chest and worked her pelvis to pull him in and out of her pussy, \"you just... lay there and hold still. This... (gasp) might take a little while, I... (gasp) hope,\" as she began to ride him faster and harder. \"Oh, God... yes... (GASP) MIKE. I... (GASP), God, I...(GASP) love you.\"\n\n\"Whoa, she's really enjoying this, isn't she. She could be the wildest of them all.\""
    ],
    "authorname": "Mentalcase",
    "tags": [
        "brother",
        "sister",
        "beth",
        "truth or dare",
        "voyeur",
        "exhibitionism",
        "slumber party"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/just-the-six-of-us-ch-16"
}