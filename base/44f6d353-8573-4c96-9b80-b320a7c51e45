{
    "title": "A New Start with an Old Friend",
    "pages": [
        "My name is Alex. Ten years ago, when I left for college, I moved from Chicago to Boston and never came back. Until now. It wasn't intentional. It wasn't my plan. I wasn't running and hiding from anything. Not really.\n\nMy family thinks I left at 18 and never came back because the very last thing I did at home was come out as gay. I literally told them all the day before I left for college. I know...super brave, right? The thing is, I didn't know how they'd take it. I knew they loved me, but my family is very catholic. Like grace every night, mass every week and kids go to the catholic schools -- catholic. I figured my brothers would be cool, but I didn't know what having a gay son would mean to my conservative, religious parents.\n\nIt turned out; they were okay. Shocked, but okay. A little afraid of the tougher road I faced, but as accepting as I could have hoped for. So, I stayed in Boston for ten years, but not because of my family. Boston didn't seem to want to let go of me.\n\nBefore I even graduated, I was offered a summer internship with a new tech start-up company. The internship turned into a real job offer that I couldn't turn down. The money was great and I liked Boston enough, so I stayed.\n\nI had no family in Boston, and no real friends either, so I threw myself into my work. I was rewarded with huge bonuses and equity in the company. The company that has now sold, leaving me with a sizable bank account the chance to do something new.\n\nAt age 28, I have the opportunity to go and do whatever I want in this next phase of my life. I could go to New York; I could go to Silicon Valley or anywhere in between. I decide on the in between. Back home to the suburbs of Chicago.\n\nMy parents offered me my old bedroom to stay in while I transition into my new life. I politely declined. I'd feel like a teenager again -- in a bad way. My kid brother offered me the couch in his one-bedroom apartment. I'll always love my kid brother, but I want to keep liking him too and living with him would not be the way to do that. Besides, he has a new girlfriend and I just know that half the time I'd come home to find his stinking sweat sock tied to the doorknob.\n\nI accepted the offer to stay with my former best friend -- Mac. He has a two-bedroom apartment less than ten minutes away from my parents' house, less than ten minutes away from my brother's place...right where I want to start my new life.\n\nMac moved to town and started at my school at the beginning of sixth grade. Our school was 97% white, 97% heteronormative and 97% boring. Since I was in the closet until after high school graduation, I was assumed to be a part of that 97%. Mac was in the 3%. Mac is black. Multiethnic, actually. His dad is black and his mom is Italian. Our school was full of assholes and they all pretty much ignored Mac from day one. I was happy to befriend him. I was drawn to him from the moment I met him.\n\nI was young when I figured out that I was gay. It was sort of surreal to make that discovery before even really knowing what being gay was. From whatever age you are when you first notice that you're enticed by the allure of another person; an awkward meeting of the eyes, a crooked smile, a stolen glimpse of a strip of bare skin, a brushing of incidental contact... Those little moments that send an electric jolt of excitement through you. Those attractions and exhilarations, for me, have always been brought on by other boys. At first, I didn't understand it and I tried to ignore it. I tried to manufacture the same feelings about girls. I really tried. I really failed. And then I just knew.\n\nI was eleven years old on the first day of sixth grade when I saw Mac for the first time. He was cute. Really cute. He had jet black hair that was buzzed close on the sides and back, but was tufted in loose waves atop his head. He had dark caramel skin and these surprisingly striking blue eyes that seemed to see straight into me. Those eyes were like a superpower and whenever he held my gaze, I'd eventually have to look away.\n\nHe was assigned to sit next to me and when he got to within ten feet of me, the air in the room changed. He just had this energy all around him, though, at least in that room, I was the only one who felt it.\n\nBut none of that mattered. There were plenty of cute guys in my class. I didn't like those guys because they were cute, I hated them because they were assholes. I didn't like Mac either because he was cute. I liked him because he was kind, funny, smart and generous. The fact that he was so cute was a negative. A distraction. I needed a friend much more than I needed another empty, dead-end crush. Mac became my lab partner, my study partner, my friend and my best friend. I spent seven years trying my hardest to ignore his cuteness.\n\nThen life separated us. We graduated high school, turned 18 and went off to college on different coasts. The difference is, Mac eventually came back home. I didn't. Until now.\n\nWe did stay connected through social media over the years, but knowing Mac in real life is a completely different experience. In my mind, he's still my best friend, despite not having seen him in a decade. I obviously could afford to rent or buy whatever I want, but when Mac got wind of my pending return, he invited me to use his spare bedroom while I figure things out. I saw it as an opportunity to reconnect with my old best friend. I figure I'll stay a few weeks, maybe a month.\n\nAs I ride up the elevator in his building to unit 6B on the sixth floor, I feel kind of nervous. And I know why. It wasn't just my family that I came out to on my last day before leaving Chicago and not coming back. I also dumped my true sexual identity on Mac that last day too. Mac, being Mac, was unphased. He hugged me, as usual, and basically said, \"So what.\" I was still me and he was still him.\n\nWhat do I know about Mac today? I know he works in the financial world and usually works from home. The money is good and his hours are flexible. I also know he's Mac...he's my friend.\n\nThe elevator deposits me at my destination and I find the door marked 6B. I take a deep breath and raise my hand to knock, but before I could, the door swings open. There he is...Mac. Live and in person. That Mac-energy practically assaults me in the hallway.\n\nI don't know exactly when it happened, I wasn't here to witness it, but sometime over the last ten years, Mac stopped being cute. He's abso-fucking-lutely gorgeous. Devastatingly so. And those piercing eyes (natural, not lenses) are as sky-blue as ever. His haircut is the same as it was ten years ago, but it works on him. Oh, does it work.\n\nMac smiles at me and my heart flutters with butterflies. He says, \"Alexander!\" and wraps me in a bear hug. Mac is an affectionate, make-contact kind of a guy. He greets with hugs and he gives these little touches on the arm, the shoulder, the knee, the small of the back, wherever. Each touch always packed a buzz of electricity when we were friends as teenagers. Today's hug in his hallway surpasses buzz and lands on jolt.\n\nMac is the only person I have allowed to call me Alexander. Everyone else I immediately correct to \"Alex\", but when Mac does it, it feels right. It feels special.\n\nI step inside and slip out of my Nikes, leaving them next to a pair of his well-worn VANS. I can see a fading, but still visible \"11\" in the heel. I wear a 10. Now that we're both shoeless, I can also see that Mac still has a good inch on me. I'm 5' 10\". He must be just shy of six feet. He also appears to spend much more time working out with weights than I do. He's wearing shorts and a t-shirt, so his well-toned arms and legs are on display.\n\nI am a runner, but I stop at cardio. The weights aren't my thing. I think I look okay; I'm just kind of average. At 150 pounds, I'm healthy and thin, but not toned. I have light brown hair, that lays flat on my head, and green eyes. I'm just kind of average.\n\nMac has a good 25 pounds on me, but none of it is flab. He should probably quit his job in the financial sector and just become a model.\n\nWe look each other up and down. He says to me, \"It's so not fair. It's been 10 years but you still look like you're 18. You're that person who will still get carded for alcohol when you're 50!\"\n\nHe's still smiling at me as his eyes move all over my body. Suddenly I'm blushing a crimson red.\n\nLooking around, I say, \"I love your place.\" I turn, face him and smile, \"Okay, what are the house rules?\"\n\n\"There are only two and you're already complying with both of them.\" He looks down at my shoeless feet in white Nike crew socks. \"Rule #1, leave your shoes at the door.\" He puts his arm around my shoulders and guides me into his narrow galley kitchen. He opens the fridge and hands me a bottle of Fiji water.\n\nI twist off the cap and ask, \"Rule #2?\" I take a long swig.\n\nMac says, \"Wear pants.\"\n\nI snort and almost spew water on my new roommate. I point out, \"You're wearing shorts.\"\n\n\"Shorts are fine. They count. Shirtless is fine, barefoot is fine, just don't be bottomless.\" He grins, \"Keep the mouse in the house.\"\n\nI grin back, \"Those are some easy rules.\"\n\n\"I'm an easygoing guy.\"\n\n\"Don't worry about me. And I can almost guarantee that you won't find me barefoot or shirtless either.\"\n\nHis eyes reexamine my body and he says something under his breath that I swear sounds like, \"Too bad.\" I blush again.\n\nI say, \"I'll unpack later. Can I take you to lunch? Or rather, can you take me to take you out to lunch? Unless we walk. I need to buy a car like tomorrow.\"\n\nLiving in the heart of Boston for 10 years, I walked. And if I couldn't walk -- trains, buses, Lyfts... Public transportation in the Chicago suburbs is close to nonexistent.\n\nAt lunch, I start to tell him about my post-college professional endeavors but he stops me.\n\n\"Not that I'm a stalker or anything, but we've been connected on social media since high school. I know all of that stuff. I've watched. I've paid attention. You're actually quite amazing, but I've known that for 17 years now.\"\n\nI blush again. Dammit.\n\nHe continues, \"Tell me about you. The personal stuff. The stuff you don't post online.\"\n\nThe waitress comes by and takes our orders. I say, \"Okay, well that won't take long. In many ways I'm the same guy I was in high school. I still like to run. I still try to avoid sugar and carbs. In Boston, I didn't have a boyfriend or really any friends. I just worked. A lot.\" Embarrassed, I add, \"I kind of still think of you as my best friend.\"\n\nI shift in my seat and our knees bump under the table. I adjust again and now I'm toeing his sneaker with mine.\n\n\"So, that's me. I'm sorry to dump this on you and I'm sorry that I keep playing unintentional footsie with you under the table.\"\n\nMac laughs. \"You're good. I like blunt and direct. And honestly, I don't mind the footsie either.\" He grins at me and I think blushing red is just going to be my new skin tone.\n\nI ask him, \"What about you? What don't I know?\"\n\n\"Hmm. Well, I have made friends. A lot of friends. Maybe too many. But like you, I've been saving the elite best friend title for your return.\"\n\n\"What about a girlfriend?\" I ask.\n\nHe gives me a wide grin, \"Not presently.\" He holds eye contact an almost uncomfortably long time. I lose the game of chicken and look away first.\n\nOur conversation lightens as we finish our lunch. We're walking back when I ask, \"What do I owe you for rent?\"\n\nHe shakes his head. \"You're my guest.\"\n\nI say, \"I have money. I'm not destitute. I can pay my way.\"\n\n\"That's not the point. Look, you just bought me lunch. We'll figure it out as we go.\"\n\n\"Lunch and rent are two different things.\"\n\n\"I didn't invite you to stay here because I wanted to cut my rent in half. Just take the summer and fall to settle in and figure things out. If I'm as awesome as I think I am and you want to keep living with me longer-term, then we'll figure out how to split expenses down the road. In the meantime, ease in. Relax. Don't worry about anything.\"\n\nThere is no doubt Mac is as awesome as he thinks he is. I look at him as we continue to walk. \"Why did you invite me to stay here? We haven't seen each other in 10 years.\"\n\n\"I like you, Alexander. We were best friends as kids. I'd like to try being friends as adults.\"\n\nAs we enter the building, he gives me keys and explains the doors, the locks and the mailboxes. He asks me, \"I'm sure you had other options: your parents, your brothers... Why'd you choose me?\"\n\n\"Because I knew you wouldn't take my money.\"\n\nHe laughs.\n\n\"Honestly, the same reasons. This whole thing is a little weird. It's a new start in an old place; a new friendship with an old friend.\" I toe the carpet in the elevator. \"That made more sense in head before I set the words free.\"\n\n\"No.\" He puts an arm around me again, \"I know exactly what you mean.\"\n\n~~\n\nThe next morning, Mac and I go for a 6-mile run. After, he takes me into the fitness center.\n\nMac says, \"If it's ever too hot, cold or rainy, there are treadmills and ellipticals in here. After a run, I like to do a little weight lifting. How about you?\"\n\nI always stick to just cardio. \"Umm...\"\n\nHe looks me up and down. \"We can start slow.\"\n\n\"I never do weights. But okay. I saw my family last night and everyone kept telling me I'm too skinny.\"\n\nHe holds my eye. \"You're not too...anything. Follow me.\"\n\nHe spots me on a few machines that are like nothing I've ever used before. He has to demonstrate them for me. It seems like I do half the weight and half the reps he does on each one. He leads me to the floor mat and asks me to hold his ankles while he does his sit ups. I grip him around his crew socks which are damp with his humid, manly sweat. I flush while he pounds out a set of 100. When he's done, he grabs my ankles and says, \"Go.\"\n\nI look at him like he's from Mars. \"Mac, I might be skinny but a lack of fat does not mean the presence of muscle.\" I pat my flat but soft middle. \"I don't have an eight-pack. Or a six, a four or a two either. I barely have a zero-pack.\"\n\nHe laughs, \"Hey, I could be your personal trainer!\"\n\n\"I've been running 6 miles, 5 days a week for 13 years. Why do you think I need a trainer?\"\n\nHe pokes me in the belly, like I'm the Pillsbury Doughboy, making me squirm. \"That's why.\"\n\n\"Point taken.\" He takes hold of my ankles again and his strong grip feels good. I don't want him to let go, so I start a set of sit-ups. Unfortunately, I collapse in defeat before I hit 25.\n\n~~\n\nI buy a new Honda Civic Type R. When I was in high school my dad's car had a manual transmission. I loved driving stick. It was a skill not many kids had and it made me feel cool. I was very not cool in high school.\n\nI text Mac from down in the building's parking lot. \"Come check out my new wheels.\"\n\nAfter replying that I can't pull off saying \"wheels\", even in a text, he says he'll be right down.\n\nHe looks from the car to me and back to the car, grinning. All he can say is, \"Dude...\", but somehow, under the circumstances, that feels like an accurate, articulate response.\n\nMac says, \"You're totally teaching me to drive stick before the summer's over.\"\n\n\"We'll see,\" I tease. \"I won't let just anybody drive my baby.\"\n\nHe plays hurt, \"I'm 'just anybody' to you?\"\n\nHe's totally not.\n\n~~\n\nI wake up in the morning on Mac's couch. We had stayed up really late the night before talking and catching up. I guess I fell asleep. There's a blanket covering me and a pillow under my head. How? I sit up and find my socks in a neat pile on the floor. Mac. I yawn and stretch before grabbing my socks and heading toward my room.\n\nI run into Mac in the hall, dressed for a run. He says, \"Let's go Alexander. I let you sleep in too long already.\"\n\n\"You let me?\"\n\n\"I'm your personal trainer, remember?\"\n\n\"Did I actually agree to that?\"\n\nHe laughs, \"It was a binding nonverbal contract.\" He looks down at my feet and smiles, \"And you said you wouldn't be barefoot in the apartment.\"\n\nI smile back, \"Does it count if you're the one who pulled my socks off while I was asleep?\"\n\n\"I know I can't sleep with socks on. I was just helping you out.\"\n\nHe's right. I can't either. Not even on the coldest Chicago or Boston winter nights.\n\n\"And yes. It totally counts.\" He winks at me, \"One down, one to go.\"\n\n~~\n\nI fully expected to be sore this morning, but I'm not. Between yesterday's weightlifting and sit-ups, things I literally never do, how is this possible? Maybe Mac is just this good. Maybe he should become a professional personal trainer.\n\nWe breeze through our run and head into the dreaded fitness center where the ominous equipment of doom awaits me. Mac remembers exactly how much weight I lifted and how many reps I did on each machine yesterday. Today he pushes me ten percent harder on both counts. I'm completely spent and drenched in sweat when he reminds me that we haven't done our sit-ups yet. I make it to 40 today and collapse on my back on the mat. Mac sits next to me.\n\n\"Remind me, why am I doing this?\" I ask.\n\nHe lightly slaps my tummy and I grunt. \"You said you have no packs.\"\n\nI prop myself up on my elbows in time to see Mac lift his shirt and wipe his brow. Since he's sitting, I can't tell if his is a six or an eight, but he definitely is not pack-less. I could make working out my full-time job and I'd never look like he does. I avert my gaze, hoping to not get caught ogling his sculpted physique.\n\nMac says, \"Today we're adding the pull-up bar to your routine.\"\n\n\"Why would I want to do that?\"\n\n\"It's a great workout for your biceps.\"\n\nI look at my right arm, \"I don't have biceps.\"\n\nHe laughs.\n\nWe walk over to the pull-up bar and Mac begins an effortless set. He has to be at least twenty in when I ask him, \"Why is everything an 'up'? We lift the weights, we do sit-ups and pull-ups. Doesn't it seem like 'downs' would be so much easier? Dropping weights sounds painless and simple. And I'd so much rather sit down than sit up.\"\n\nMac, who had been seriously focused on his set, releases the bar and drops to the floor laughing. \"You're such a dick.\"\n\n\"What did I do?\" I ask, all innocent and na\u00efve.\n\n\"I hadn't even hit twenty-five yet and you made me laugh.\"\n\nThe 25ish pounds Mac has on me is all muscle. Don't get me wrong, he's not some grotesque, musclebound freak. He's just a very good-looking guy in really good shape. As a runner I've always been healthy. I have good legs, a strong heart, skinny arms, a narrow chest and nonexistent abs. I look up at the pull-up bar and wonder just how embarrassing this is going to be.\n\nThe first pull-up is almost easy. The second is a struggle. By the third, I'm swinging and flailing around like a fish out of water. Mac, behind me, puts his hands just above my hips, steadying me. He takes on a little of my weight and guides me through a set of 10. Somehow his strong hands ended up under the hem of my shirt, on my skin. His grip tickles.\n\n\"Great workout today,\" he says with no hint of sarcasm.\n\nI eye him suspiciously, still catching my breath. \"Seriously?\"\n\nHe raises an eyebrow, \"Yeah, why?\"\n\n\"The struggle was real.\"\n\nHe laughs, \"Do you have plans for Sunday?\"\n\n\"No. What's up?\"\n\n\"Score!\" he fist-bumps me. \"Keep it free. All day and night.\"\n\n~~\n\nTonight, we're having with dinner an old high school classmate -- Jonah. Jonah was a decent guy in high school; nothing like the most of our other classmates. Since he was cute and not an asshole, I had a secret crush on him through the 12th grade. He was on the basketball team. Mac, naturally good at every sport known to man, played neighborhood pick-up games, but refused to be on the school team because of the assholes it was comprised of (save for Jonah). I am not athletically inclined in general, but I can shoot the ball. I can't explain it. I can't dribble, I have no footwork, I can't protect the ball on offense, I can't guard anybody on defense, but damn I can shoot all day long. Again, I can't explain it.",
        "On the way there, Mac reminds me to not be surprised that Jonah has a kid. He had gotten his girlfriend pregnant right after high school.\n\nWe're in my car and I explain stick shift. Mac watches me work the clutch and the gears and says he's ready. He wants to drive us home later. As I drive, Mac places his left hand on top of my right hand as I shift. He's a little bigger than me and his hand envelopes mine. The warmth of his touches causes me to flush and I feel small beads of sweat prick at the back of my neck.\n\n\"I'm getting used to the feel,\" Mac explains.\n\n\"You do realize that you'll be using your right hand?\"\n\n\"Right.\" He removes his left hand, puts it on my right shoulder and places his right hand on mine. He has to lean in to reach and I can feel his cool, minty breath on my right ear. A batch of goosebumps flashes on my right thigh and arm.\n\nI say, \"This will be better.\" I slip my hand out from underneath so his hand is directly on the stick shift. With my hand on top, I guide him through the gears. I can feel his veins against my palm. As we work the gears up and down, our fingers lace together. Mac watches my footwork as I orchestrate the trio of pedals. I hope he can't tell that his proximity is causing a bit of a swelling in my pants.\n\nWe get to Jonah's house and park in the long, narrow driveway. Mac and I climb out of the car and a sandy haired boy who looks to be about 9 appears from the back yard. He looks just like miniature version of the Jonah I remember. He's carrying a basketball. Of course he is. The kid dribbles towards us and stops a few feet away. He looks up to me and asks, \"Are you Alex?\"\n\nI admit it.\n\nHe balances the ball between his hip and left arm and sticks his right hand out to me. \"I'm Joe, nice to meet you.\"\n\nJoe is a well-mannered and adorable young man. I shake his hand. \"It's nice to meet you too Joe.\"\n\nJoe takes two steps to his left and says, \"So you must be Mac,\" offering him the same hand.\n\nMac shakes it too, \"Indeed I am.\"\n\nJoe asks Mac, \"Do you play basketball?\"\n\nMac offers the trademark Mac smile and Joe can't help but smile back. \"I love basketball, Joe, but I was never on a team like your dad was.\"\n\nJoe says, \"That's okay. The team isn't for everyone. If you like basketball, playing for fun is way better than being on a team anyway.\"\n\nI've known Joe for all of sixty seconds, but I really like him. Whether he'll ever know it or not, in the years ahead, he'll be the object of numerous secret crushes from lots of girls and probably a few boys too.\n\nJoe, still talking to Mac, says, \"My dad told me that the best shooter in his school was never on the team. Did you know that Alex is the best shooter my dad ever saw?\"\n\nMac sighs, \"It's really not fair, Joe. Alexander isn't a basketball player. He doesn't practice, he doesn't train. He is naturally good at something he has no business doing.\"\n\nJoe giggles like Mac was kidding. The thing is, Mac is very competitive and hates losing. He's hamming it up for Joe, but he's only partly kidding.\n\nJoe bounces me the ball and says, \"I could use some pointers on my jump shot. Can you show me Alex?\"\n\nAs much as he hates it, he loves it too. Mac has a huge shit-eating grin on his face. He takes his phone out of his pocket with his left hand and puts his right hand on Joe's shoulder, \"Yes, Alexander. Please educate us.\"\n\nMac is enjoying himself way too much. He so doesn't deserve this right now but Joe does. I'm not going to turn down this polite, cute kid. From where we stand, the hoop is really far. Close to fifty feet. I tell Joe, \"I'm doing this for you, Joe. Not him.\" I gesture toward Mac but his smile only gets goofier. I bend a little to get closer to Joe's level, \"I have to tell you, Joe, I haven't shot or even touched a basketball since before you were born.\"\n\nJoe's eyes bulge, \"No way!\"\n\n\"Way!\" I bounce the ball a few times. It feels good in my hands. \"Just for you, I'll give it a shot. Alright, where do want me?\"\n\nJoe starts walking closer to the hoop, but just then, Jonah appears from around the same corner that produced Joe a few minutes ago. Jonah tells his son, \"Don't let him take a single step closer than where he is right now. He can make the shot from where he stands.\"\n\nJoe actually jumps in the air, \"Seriously?\"\n\nJonah says, \"For real. He knows he can do it. He's just being modest.\"\n\nI haven't seen Jonah since high school graduation day. He looks very much the same as he did back then, which means he looks good. He might be the same weight, but a few of the pounds -- not many, but a few -- have transitioned from upper-body muscle to middle-body cushioning. It suits him. He looks happy. He looks like a dad. He winks at me and says, \"Come on, Alex. Shoot it!\"\n\nI can't help but smile. I bounce the ball a couple more times and without thinking about it, I set my feet, jump and let a high-arcing, two-handed shot sail from my spot on the driveway. I hold my breath and we all follow the trajectory of the ball as it rises, peeks and falls, ultimately swishing through the hoop.\n\nThe three of them cheer and Joe's eyes look like they're about to pop out of his head. He rushes me and gives me a leaping high-five. \"Nothing but net!\" he squeals.\n\nAs Joe tracks down the ball, Jonah steps over and gives me an enthusiastic handshake. \"Hi Alex. You look exactly the same.\" His eyes sparkle.\n\nI always wondered why people feel the need to comment on looks when reunited after many years. What if I thought he looked bad? Would I lie? Fortunately, it's a moot point because we all look great. I comply with the social norm and tell him, \"You too.\"\n\nHe scoffs and pats his softening middle, \"Not quite.\"\n\nNo, he's not as skinny as his high school days, but so what. Maybe 10 years from now he'll want to lose like 3 pounds, but right now, my former secret crush looks damn good. I say, \"You don't need me to tell you this, but you've got a great kid there.\"\n\nJonah's smile expands to beaming and he shakes Mac's hand.\n\nJoe reappears with the ball, \"How about a little two-on-two?\" He steps next to me, \"I want to be on Alex's team.\"\n\nJonah says, \"Well son, I don't know if our guests realized they'd be roped into a basketball game when they came here tonight. I'll tell you what. Go get washed up for dinner and we'll talk about it a little later.\"\n\nJoe turns to me, \"Even if we don't play a game, would you take a few more shots before you go? I want to record you and study the video.\"\n\nMac leans in close and says, \"I'll be taking more videos as well.\"\n\nI give Mac a playful shove. \"I'd be happy to, Joe.\" I put a hand on his shoulder, \"Just so you know, there's a reason I never joined the team. I stink on defense and I have rotten footwork. I can shoot, but I turn the ball over all day long. If you want to win, pick your dad. He can beat Mac and me with his eyes closed.\"\n\n\"I play with him every day,\" Joe says dismissively. \"I don't care if I win. We don't even have to keep score. I just want you to shoot more. If you were on my team, I'd pass you the ball every time. Remember what I said about having fun?\"\n\nI can't say no to that kid. \"All right Joe. You got it.\" Knowing Jonah was a forward in high school, I tell Joe, \"But you have to take the front court, okay? You can teach me how to play down low.\"\n\nHis smile is exploding now, \"Deal!\" He flips the ball to his dad and dashes inside.\n\nAll three of us are left grinning in his wake.\n\n~~\n\nMac drives us home. It's easy to forget that this is his first-time driving stick shift. He's a natural. It's actually kind of freaky how easily things just come to him. It's slightly annoying too. Irksome. A red light turns green and we jerk a little as he finds the clutch's release point. He'll smooth things out with a little more practice.\n\n\"Jonah has a nice little life set up there.\"\n\nI say, \"True dat.\"\n\nMac laughs, \"Don't.\"\n\n\"What?\"\n\n\"Just don't. There's a list of things you can't pull off. Add that to the list.\"\n\n\"I'll ignore dat,\" I say grinning.\n\n\"Wow. Didn't you ever learn you're not supposed to antagonize the driver?\"\n\nI laugh. \"You're just grumpy because Joe and I kicked your ass in basketball.\"\n\n\"Don't make me pull this car over!\"\n\nI'm still laughing. \"I sank teardrop after teardrop and all you could do was sit there and wipe away your own teardrops, watching my three-pointers rain down on you.\"\n\n\"You are so going to pay when we get home.\" He glances at me, unable to conceal his smile, \"You do realize that I wasn't really guarding you, right? The kid wanted to see you shoot, so for his sake, I let you.\"\n\n\"Ooh...you 'let' me.\" I make air quotes around the word \"let\".\n\n\"Wow. If he had wanted to see me completely shut you down with dominating defense, believe me, he could have seen that show too. I would have been on you like glove. Like a cheap suit. You were basically playing HORSE alone in the open court.\"\n\n\"If that's what you have to tell yourself to be able to sleep tonight.\"\n\nMac just shakes his head. I've poked the bear.\n\n~~\n\nBack at the apartment, Mac hands me a beer.\n\nHe says, \"You earned it.\"\n\nI take the cold, drippy bottle, \"When I mopped the floor with you playing basketball?\"\n\nHis head drops like a marionette who's string was just cut. \"I already told you I'd get you back when we got home. How bad do want to make it?\"\n\n\"Maybe we should invite the neighbors over. I think I could use some witnesses.\"\n\n\"Or maybe my revenge will come in the fitness center tomorrow morning.\"\n\n\"No! Please! I'm sorry!\" I plead, \"I was just kidding. You heard me tell Joe that I have no ballhandling skills. You're crazy competitive and I was just teasing you. It was all a joke.\"\n\n\"That's more like it.\" He places his hand on my right leg above the knee and squeezes. I squeal and my leg kicks out. He grabs my ankle with his other hand and contemplates my captured, socked foot. \"I accept your apology but you still deserve a small punishment.\"\n\nHis grip is strong and I can't pull free, though I admit I don't try too hard. He keeps ahold of my ankle and uses his other hand to stroke up and down the arch of my foot three times. I squirm as I stifle a scream. He releases me and I relax. Mac has no way of knowing this, but I am extremely ticklish. And not just my feet.\n\nIt's almost like he's reading my mind. He gets a maniacal look in his eye and suddenly he's on me. He has me on my back and he straddles me just below the waist. Mac is significantly stronger than me and he easily pins both of my wrists together in just his left hand and raises my arms high above my head.\n\nI figure that telling him I'm ticklish will make this worse rather than better, so I say nothing as I twist and writhe under his weight.\n\nWith my arms way above my head, my shirt has ridden up to my ribcage and the full expanse of my stomach is exposed. I can feel the cool air of the room and Mac's eyes on my skin. It's like his eyes and round innie belly button are in a staring contest with each other.\n\nHe places his free right hand on my stomach and I inhale sharply. His big strong hand begins to examine my soft, innocent stretched out tummy, like he's checking fruit for ripeness. He prods, squeezes and pokes all around as I laugh and tears stream down my face. It tickles so much that I'm gasping for breath, afraid I might pass out. Next, he swipes back and forth across my lower abdomen, above the waistband of my shorts and I quiver from the sensation. I just barely manage to not scream.\n\nSuddenly, Mac stops his attack. Like he just realized something. I am now horrified as I realize what he already realized -- I am rock hard and my erection is pressing against Mac's ass as he still straddles me.\n\nHe releases my hands and moves off me. Clearing his throat, he says, \"That's enough punishment for today, but I hope you learned you lesson. Next time, I won't be so nice.\" He sips his beer, \"Next time, the socks come off.\" He gives me a wink.\n\nI think I hope there is a next time.\n\n~~\n\nToday, it hits me. The pain. Excruciating, blinding pain in my...everything. I've never been in a sauna, in a hot tub or had a massage but right now, I need all three. I pour myself out of bed and stumble into the hall, like a baby giraffe taking its first tentative steps.\n\nMac laughs when he sees me, \"I thought today might be the day.\"\n\nI glare at him, \"Did you now?\" I try to straighten, but I can't. \"You did this to me.\" What the fuck? Even my eyebrows hurt.\n\n\"It's never the first day after a hard workout, it's always the second day.\" He's enjoying this.\n\n\"Mmm hmm. Right. It's also the first day after the last day.\"\n\n\"No, Alexander! Quitting is not an option. In a day or two, the pain will be gone and you'll be stronger than ever.\"\n\n\"I would punch you so hard right now, but I can't move my arm.\"\n\nMac chortles, \"I bet you're thinking you want to take today off from working out.\"\n\nMy eyes widen, \"Are you insane? 'Want' has nothing to do with it. I'll probably need help wiping my own ass later.\"\n\nHe barks out another laugh and hooks his arm around my shoulders. \"If you think that's a real possibility, might I suggest fasting today? Or at least a liquid diet?\"\n\nI snort. \"Fuck. Don't make me laugh. It's like a knife stabbing me everywhere.\"\n\nHe says, \"The worst thing you can do today is to do nothing. Movement is key. Why do you think you weren't sore until after a night of still sleep?\"\n\n\"I slept the previous night and was fine yesterday.\" I try to look at him, but I seriously can't turn my head. \"You're just making this shit up as you go, aren't you? You don't know.\"\n\n\"I might have read something, somewhere, sometime.\"\n\n\"Uh huh.\"\n\n\"Let me take you out for breakfast. After that, we'll go for a walk on the Prairie Path. You can have one day off from the weights.\"\n\n\"You are too kind. Whatever did I do to deserve you?\"\n\n\"You're just lucky, I guess.\"\n\nHe's still smiling at me, still enjoying this way too much. I can't help it. I smile back. I think I am lucky.\n\n~~\n\nWe walk for several miles and I'm loosening up ever so slightly. When we get back to his apartment, Mac leads me to my room and tells me to lie face-down on my bed. It takes some effort but eventually, I do. He starts to massage my neck, shoulders and back. We didn't talk about this and I didn't ask for it, he's just doing it. He slips the shirt right off me and goes to work in earnest.\n\nHe works up and down both sides of my spine before moving on to my biceps and shoulders. Next, he works my thighs and his strong hands work lower, across my calves before finding their way inside of my socks. Then my socks are off and he's doing things to my feet that I never thought were possible. He's not tickling me, but my feet are like clay and he's a sculptor. I'm 28, but I've never been massaged before. Oh, have I been missing out, though I suspect that half the pleasure comes from knowing it's Mac doing these things to me.\n\nEventually, he tells me to flip over. Despite the bulge in my shorts, I do as I'm told. Mac works his way up from my feet, up my shins, rubs my knees, kneads at my thighs and his hands work their way higher inside the legs of my shorts. He's still not tickling me, but twice his finger tips graze my scrotum, causing me to gasp and flinch.\n\nHe then massages each arm from my hands up to my shoulders. Who knew that rubbing hands could feel so good? He finishes by lavishing attention on my chest and stomach. Again, no tickles, but he strokes and caresses my torso making my cock so tight in my shorts, I feel like I'll bust through like the Incredible Hulk.\n\nThe hurt has replaced by tingles and I know I couldn't suppress several embarrassing groans of pleasure.\n\nWhen it's over, Mac walks out of my room without a word. I check my phone and realize that my straight friend Mac just spent more than 2 hours touching and caressing his gay friend in a very intimate fashion.\n\n~~\n\nI hate to admit it, but Mac was right. The next morning and I'm hardly sore at all. His massage and the million miles of walking we cured me. That was my first massage...ever. I had never been touched like that by anybody before in my life. His fingers, his hands and his arms were magical. He knew when and where to be rough and aggressive. He knew when and where to be tender and gentle.\n\nLater that day, I meet my brother and his girlfriend for lunch. He asks me all about my first week back and tells me that his couch is still available if I change mind.\n\nAside from buying the first car I've ever owner, all I've done so far is spend time with and reconnect with Mac. As I update my brother, I realize that I can't stop smiling. The kid sees it too. He calls me on it.\n\nI say, \"There's nothing going on there. Mac is my friend. My best friend. My straight best friend.\" Right?\n\nMy brother's only reply is a cocked eyebrow.\n\nIn the parking lot, I show him my car. My brother is three years younger than me and gets a kick out rubbing that in. Yes, I'm still in my twenties, but I'm the butt of his old-man jokes, despite the fact that our older brother is 32. He tells me that my car is too cool for me and that between the sporty car, moving back home and being unemployed, it's obvious I'm going through a midlife crisis.\n\nI'm about to argue that I've only been \"unemployed\" for less than two weeks and after a huge buyout that's allowing me to take some time off after not having a vacation in 5 years. I'm about to say all of that, but I notice the huge grin his face. He's just giving me shit like brothers do.\n\nI give him a playful shove, then hug them both goodbye.\n\n~~\n\nThat evening, Mac and I are in my car, headed to dinner. Since teaching him stick a couple days ago, Mac insists on driving everywhere we go together.\n\nI watch my friend grip the gear shift and I'm jealous of my own car. In middle and high school, I focused on Mac the friend and pushed away all thoughts about Mac the cute guy. Having reconnected with him as an adult, I'm kind of crushing on him hard.\n\nI tell him, \"This is the most serious question of the day. Think carefully before you answer. Do you think this is a midlife-crisis car?\"\n\nMac chuckles, \"Is that what your bother said? You can do better than sixty. Let's call it a third-life-crisis.\"\n\n\"Rude.\"\n\nHe laughs, \"Who cares? I love this car. Whether or not you bought it to prove something is just a matter of perception. I'm sure your brother was just giving you shit...like brothers do.\"\n\n\"You're right. I don't care what he says. But if you think I look like an idiot in this car, I-\"\n\n\"You don't.\" We pull into the parking lot. \"You're only 28. We're only 28. And look at you all baby-faced. You could pass for a college student. Call it a quarterlife-crisis.\"\n\nI sigh, \"But why is it a crisis at all? It's the first car I've ever owned. I just bought the car I wanted.\"\n\nMac sighs back, \"It's not. I'm sorry. I just like seeing you squirm.\"\n\nEchoing Mac from the other night I say, \"I accept your apology, but you still deserve a small punishment.\"\n\n\"I look forward to your attempt.\"\n\n~~\n\nThe restaurant is really nice. And pricey. Mac ordered an appetizer and I pop a shrimp thing in my mouth. It's exquisitely delicious. We each have glasses of both red and white wine. I am no sommelier, but I think I'm meant to sip the white wine with seafood. It goes down smooth and easy. I'm not a big wine drinker but it's probably the best wine I've ever had so I know it must be expensive. To my unsophisticated palate, wine can taste like paint thinner.\n\nI say to Mac, \"Please let me pay for dinner.\"\n\n\"I invited you. You're my guest tonight.\"\n\n\"I'm your guest every night.\"\n\nHe smiles, \"And I couldn't be happier.\"\n\nWe each take another shrimp-guacamole-sweet potato appetizer thing. \"I could just eat like a dozen of these. They're so freaking good.\"",
        "When Mac is looking away, I sneak a sip of the red wine. It's just as incredibly smooth and delicious as the white. Not at all like battery acid.\n\nStill not looking at me Mac asks, \"How's the red?\"\n\nBusted.\n\n~~\n\nBy the time we finish the appetizer, the bread, the soup and the salad, I feel like I've already eaten a whole meal. I tell Mac this and he laughs.\n\n\"You better loosen your belt. Dinner and dessert are up next.\"\n\nI don't know why, but I reach out and take his hand, \"Thanks for everything since I've been home. You've been so generous with your time. I feel like I've insinuated myself into your life and basically taken over.\" I notice a guy a few tables away looking in our direction, visibly disgusted. I realize my hand is still on Mac's. I pull it away.\n\nMac looks down at his own hand, where mine had just been. Is there a chance that he felt a little jolt too? Like the ones I get every time he touches me? No.\n\nHe says, \"You can pay me back by letting me drive your midlife crisis whenever I want.\"\n\nI say, \"Fine, but we both know you'll never look as cool as me driving it.\" I wink at him.\n\nHis smile widens, \"First of all, don't wink. Winking needs to be at the top of your I Can't Pull This Off list.\"\n\nI snort.\n\nWe're eating perfectly medium-rare strip steaks with steamed spring vegetables. I keep drinking wine and my glasses never seem to get any lower. I finally realize that the wait staff is refilling our glasses as fast as we sip. I have no idea how much I've consumed. I'm not a drinker. I should slow down.\n\n\"Mac, do you remember the first time we met?\"\n\n\"Sure. The first day of Sixth Grade.\"\n\nChrist the King. Grades one through eight. The school was one hall with eight rooms, a gym and a church.\n\n\"A bit of a change from the public elementary school you'd gone to. You were in a tough spot,\" I say.\n\n\"It's funny. All those hundreds of kids in the public school and if there were any assholes, I didn't know it. It took transferring to the private Catholic school for me to even realize that there was such a thing as bullying.\"\n\nI nod, \"At Christ the King, the thirty kids in each grade share one classroom all day, every day, year after year. It's not easy for a newbie coming in off the street. You impressed me right away.\"\n\nHe cocks an eyebrow, \"How so?\"\n\n\"If any of the shit you had to deal with bothered you, you didn't let it show. You never let them see you sweat.\"\n\n\"That wasn't bravery,\" he says. \"I physically didn't sweat back then. It was a glandular problem.\"\n\nI laugh.\n\n\"The day I knew I wanted to be your friend was about a month later when we were assigned to be lab partners. You were one of only a few people who didn't make assumptions about me based on my being...\" he trails off.\n\n\"The only person of color in our class?\" Mac is mixed race.\n\n\"Right.\"\n\n\"You know what it was for me?\" I ask.\n\n\"What?\"\n\n\"It was right around that same time. We were working on our science lab and one of the class assholes 'accidentally' bumped into our station and ruined our experiment. You turned to me and asked, 'So, why were you sentenced to hell?' I loved the clever association of Catholic school with hell. Most eleven-year-old boys make each other laugh by telling fart jokes. Yeah, Mac, you were different. You were different because you were smart, you were funny and you weren't an asshole.\" I take another satisfying gulp of red wine but I cover the glass with my hand to prevent further replenishment.\n\nNext, I say, \"Tell me about the most serious relationship you've ever had.\"\n\n\"Romantically?\"\n\n\"Yes.\"\n\n\"That's easy. It hasn't happened yet.\"\n\n\"Oh, come on.\"\n\n\"I'm serious. I'm telling you the truth.\" He drains his red but it's refilled almost before his glass hits the table. \"You know I've dated. Hooked up from time to time.\" He forks a spear of asparagus. \"I can't speak for the other people, but for me, there was never a real emotional connection. That's what I've been waiting for. I don't want to settle.\"\n\nI say, \"Mac.\" He looks up. \"Dude, you're the best friend and the best person. You deserve the best and you shouldn't settle for less.\" I sip more wine so my voice doesn't crack. \"Anyone lucky enough to be in your life knows this.\"\n\n\"What if this person that I deserve, the one who's 'the best', what if I already know who that person is?\"\n\nWhile we've been talking, I've kept half an eye on the guy from a few tables away. He signs his bill and pockets his credit card before leaning toward his date and whispering something in her ear. She smiles and he stands and starts walking our way. I can see now that he's a big, shiny, muscular fucker. He's coming from behind Mac, who's completely oblivious to this asshole's existence. I say, \"Shit.\"\n\nMac says, \"What?\"\n\nThe guy sidles up to our table and says, \"You know, if you two wanna be fucking faggots together, then that's fine with me, but you should really stay home and order in. The rest of us are trying to enjoy our meals.\"\n\nI had seen the guy coming, but Mac, taken by surprise, says, \"We're just having dinner, asshole.\"\n\nThe asshole places his fists on our table, leans down closer and growls, \"Keep it behind closed doors.\"\n\nSatisfied that he's made his point, he turns to walk back to his waiting date. Totally not at all on purpose, I kick my left leg out and trip him. He lands hard. The floor actually reverberates. He'll probably end up with a little road-rash on his nose and forehead. I quickly jump up to offer my assistance, but in my haste, I accidentally stand on the asshole's fingers, crushing and grinding them into the floor, causing him to yelp in pain.\n\nSquatting next to him, I say in a low voice, \"You are going to stand up, apologize to my friend for being such a clumsy, ignorant douchebag and then walk back to your girlfriend or your cousin or whoever the fuck your unlucky date is that you're failing to impress before I do something to truly embarrass you.\"\n\nThe asshole stands and gives Mac a tentative wave of the hand as he says, \"Sorry.\"\n\nJust then, the manager comes by, \"Is everything okay here?\"\n\nThe asshole puts up his hands in surrender and says, \"Yes. We're all good.\"\n\nBut I disagree, \"Actually, sir there is a problem. Maybe you could help. This nice gentleman overheard that today is my friend's birthday and he came over to offer to pay for our wine. Is there a way to credit our bill and charge the wine on a separate check to this kind gentleman?\" I turn up a palm and indicate the asshole to respond.\n\nHe sighs softly and says, \"Yes. Please let me pay for their wine.\"\n\nI thank the manager, wink at the asshole and sit back down across from Mac. I have to admit, my heart is pounding, my forehead is beaded with sweat and my cheeks feel fire engine red.\n\nMac's eyes are bulging and his jaw has dropped practically to the table. When he finally manages to form words, he says, \"Alexander! Wow! Where the fuck did that come from?\"\n\n\"On the sliding scale of ignorant assholes, this guy is off the chart. I couldn't let this fucker go. He saw me touch your hand before. I saw it on his face then. No matter what else did or didn't happen after that, he was going to put on a show to impress his unfortunate companion.\"\n\n\"You mean his cousin? That was a nice touch. It took everything I had to not laugh. And I was wrong earlier.\"\n\nMy napkin had been in my lap. I pick it up off the floor and dab at the beads of perspiration on my brow. \"What about?\"\n\n\"I told you never to wink. That you couldn't pull it off. I was totally wrong. That might have been the most awesome, perfectly executed wink I've ever seen.\" Mac is still grinning in a suspended combination of shock and glee.\n\nI take in a deep breath and let it out slowly. My heart rate is gradually returning to normal.\n\nMac asks, \"Are you okay?\"\n\nI nod. I'm not sure of I'm closer to laughing or crying.\n\n\"That was a pretty big dude. I can't believe you did that.\"\n\n\"I'm the middle of three brothers. I learned a few things growing up with them.\" I drain my glass of white wine. \"The thing about an asshole like that: He's a big guy, right? But he's all talk. The last thing he's expecting is a physical response. When he gets one, he doesn't know what to do. Fucking ignorant coward asshole.\"\n\nNow Mac takes my hand, \"Are you sure you're okay?\"\n\nI look at his dark fingers laced in between mine and I feel that spark again, \"Better than.\"\n\nJust then, two obnoxiously huge slices of seven-layer chocolate cake with vanilla ice cream and whipped cream are set down in front of us.\n\n\"Here comes the sugar coma.\"\n\nMac laughs.\n\n~~\n\nRiding up to the sixth floor Mac says, \"You know, that wine was really expensive.\"\n\nFortunately, we're alone in the elevator because the emotion finally spills out. I'm so relieved that it comes in the form of laughter rather than tears. \"I know.\" I'm gasping for air and hanging on to Mac's arm as I almost fall to the floor in hysterics.\n\n\"I could tell because it was so good. I don't usually even like wine. Happy birthday!\" The last part is all breathy gasping, but I think Mac understands me. \"I'm not drunk, I swear,\" I manage in between fits.\n\nMac is laughing too. \"My birthday was two months ago.\"\n\n\"I know.\" I'm still hysterical, \"Belated.\"\n\nTears are streaming from my eyes. As we get closer to our floor, I untuck my shirt and use it to wipe the wet streaks from my cheeks. Mac and I know they're tears of laughter, but random strangers in the hall won't know that. Did Mac just sneak a furtive peek as I lifted my shirt? I must have imagined it. I'm not the sort of person to draw peeks of attention from others.\n\nBy the time the elevator doors open, I'm down to sparsely scattered giggles. Mac guides me down the hall with a hand on the small of my back. Safely inside his apartment, I say, \"I'm sorry about all that.\"\n\n\"What are you sorry for? That was amazing! He deserved way worse.\"\n\n\"Not him. I'm not sorry about standing up to that homophobic coward. If I ran away from dicks like him, I wouldn't be able to face myself in the mirror. I'm sorry I lost it in an embarrassing, emotional tsunami.\" I slip my shoes off and sit crossed-legged on the couch. \"I promise, I'm not drunk.\"\n\n\"I know you're not drunk. And you feel the way you feel.\" He sits next to me, \"At least that homophobic fucker wasn't a racist too.\"\n\nI consider this, \"We don't know that. Maybe he was choosing from a menu of hateful prejudices. He spun his wheel of misfortune and faggot won out over interracial.\"\n\n\"Either way, you were amazing tonight. Truly.\"\n\n\"Except for a brief five minutes that were totally out of our control, tonight really was awesome. You spent too much, but it was fantastic.\"\n\n\"It's healthy to splurge a little once in a while and you did just save me hundreds by taking care of the wine.\"\n\nWe both laugh.\n\n~~\n\nAs we're headed to bed for the night, my body starts shaking uncontrollably and I drop to my knees in hall. Mac is there, hands on my shoulders asking me if I'm okay. Suddenly my cheeks are streaked with tears and I'm balling. Mac picks me up like a wounded soldier and carries me to my bed. He tries to sooth and comfort me, but through my bleary tears, I see the concern on his face.\n\nComposing myself, I tell Mac what happened. The weight of the incident earlier in the restaurant finally caught up to me. It's not about fear of the musclebound douchebag or what he could have done to me. It's also not about what I did do to him. It is about what I almost did. I tell Mac about how it was my own rage that scared me. How I came an inch away from kicking the fucker while he was down; cracking his ribs, breaking his jaw or his nose. It actually took amazing self-control to not do those things.\n\nMac is rubbing my back in circles. \"Alexander, that asshole isn't worth getting upset over. You were a hero tonight.\"\n\n\"Hardly.\"\n\n\"No, seriously. It's not just about taking him down and embarrassing him this one time. He'll think twice before trying shit like that again. You changed his future behavior. Imagine all the future altercations that won't happen now because of what you did. You're a superhero.\"\n\n\"But there are many ways to make a point,\" I say.\n\nMac shakes his head, \"Not with this guy, not on this night. He wasn't open to reasoning. No words would have changed his mind. You reached him the only way he could be reached.\"\n\n\"But what I did didn't change his mind either. He'll always be a homophobic asshole.\"\n\nMac, still rubbing my back leans his shoulder into mine, \"Right, but next time, he'll keep it to himself. Isn't that just as good? It's the best we can hope for.\"\n\nI offer a weak smile.\n\nMac says, \"I'm not leaving alone tonight. How old were we when we had our last sleepover? Fourteen?\"\n\n\"Mac, I'm fine.\"\n\n\"I'll sit vigil in your doorway if I have to.\"\n\n~~\n\nI slept with Mac last night. Unfortunately, we literally slept together. No messing around, no tickle fighting, no teasing...just Mac holding me, spooning me, making sure I was safe. I was glad he was there. He kept the demons away.\n\nI turn over and look at the still-sleeping-Mac, the best person I know. I was able to tamp down my desires for Mac when we were teenagers. Why is it so hard now? He's lying next to me on his back in nothing but a pair of boxers. He is irresistible.\n\nI take a finger and trace lightly down his arm and back up again. Mac pretends to still be asleep, letting me have my fun. My finger continues its random journey across his shoulder and neck before migrating down his chest. I follow his sternum slowly down the path to his navel where I draw a few invisible circles before letting my fingers dance above the waistband of his boxers. There seems to be some sort of movement happening inside of those boxers. He can't keep up the act anymore. His belly quivers and his lips smile.\n\nHe grabs my hand and rolls on top of me. Our noses are almost touching. He says, \"If you want to play a game of chicken with me, keep in mind that I never lose. The best you could hope for is a tie.\" He brushes his mouth across my ear, down my neck and hovers half an inch above my lips. Our eyes lock for a few intense seconds and then he rolls off me and out of the bed. In the doorway, he pauses, turns, smiles and says, \"Gotcha back.\" He winks and disappears into the bathroom. I need several minutes to recover before I can get up.\n\nHe might have gotten me back but I can't stop smiling. I made Mac...I turned Little Mac into Big Mac!\n\n~~\n\nIt's 8:00am on Sunday morning and I'm sitting in the passenger seat of my own car. I still don't know where Mac is taking me. He had told me to pack workout clothes, a swimsuit, dinner clothes and my toothbrush. Mysterious Mac.\n\nI regard my traveling companion and observe, \"You've driven more of the miles on my new car than I have.\"\n\nHis only response is an ear-to-ear grin.\n\nMac drives on and I get lost in my thoughts. The thing is, these days, my thoughts are mostly filled with Mac. How did this happen? I've been Mac's roommate for mere days. Mac, who I hadn't in 10 years. Yes, there was social media and the occasional text message, but still. Why am I so...I don't even know. Taken by him? Drawn to him? What do I even want to happen? He's my friend Mac. Do I want friendship? Do I want more?\n\nI think I might want more. But he's straight. He's not shy about putting hands on my body, but some straight guys are like that. Right. And Mac has always been a hugger and a toucher. Not necessarily of every square inch of my body...but still.\n\nAnd every touch from Mac gives me that jolt of electricity. I think about how he slept with me and kept me safe when I was upset. There was also the massage he gave me when I was sore, the oddly intimate stick shift lesson, the time I was teasing him about the basketball game and he grabbed my foot before assaulting my vulnerable belly... If I'm honest with myself, I felt it from the early moments of that first day when I took him out to lunch, our knees and toes kept accidentally bumping under the table -- I felt the spark then.\n\nExcept I really have no idea how Mac feels about me. Maybe he wanted nothing more than to reconnect with an old friend when he invited me to stay with him. Maybe all the feelings I'm experiencing are completely one-sided. Maybe the things he says, the things he does, his commitment to everything...maybe that's just Mac being Mac. He goes all-in. That's who he is. He's just so...extra.\n\n\"Are you okay?\" It's Mac, snapping me out of it and bringing me back into the present.\n\nI realize that my right hand is gripping the armrest and my left is in a white-knuckled fist. I unclench, \"I'm good.\"\n\n~~\n\nI never knew places like this existed. It's a state-of-the-art fitness center, spa, hotel combination kind-of-a-thing. I peruse the brochure while Mac checks us in. What don't they have here? They do have indoor and outdoor tracks, tennis, Peloton Spin Bikes, Ellipticals, weights, indoor and outdoor pools, saunas, hot tubs, professional masseurs, spas...\n\nI'm still staring at the brochure when Mac hands me a keycard. \"We have a full day ahead of us. Let's get changed.\"\n\nI follow Mac to the elevator and wonder if our rooms are next to each other. Maybe there's one of those interior adjoining doors. He presses the button for the seventh floor. That's a good start since the number on my keycard is 711. He leads us down the hall and stops at room 711. My pulse quickens slightly as he swipes his card. The door opens to reveal a large suite with two queen size beds.\n\nHe says, \"I hope you don't mind sharing. We'll hardly be in the room at all so it seemed like a waste to get two.\"\n\n\"This is fine,\" I say light and casual as I angle away from him to hide my reddening cheeks.\n\n\"Here's the plan,\" he begins as he sits on one bed and I sit on the other. \"Today is all about hard work and hard play. Pain and pleasure. Yin and yang. I'm gonna work your ass off on the track, in the weight room, swimming laps, on the bikes and on the tennis court.\" He slips out of his old, worn VANS and crosses his legs on his bed. \"On the flip side, we're gonna relax in the sauna, in the steam room and in the hot tub. We're getting facials, massages, manicures and pedicures. Don't look at me like that. Men do such things. And we're going to eat delicious food. I'm telling you right now, there are no dietary rules today. Got it?\"\n\nIt sounds like I don't have much choice, but I gave my day to Mac. I've trusted him this far. I slip off my Chuck Taylors, cross my legs and mimic his position, \"Got it, sir!\" I salute like a well-trained cadet.\n\nMac laughs, takes one of the too many pillows on his bed and throws it at me. \"You're such an idiot.\"\n\n~~\n\nSo, we do all of those things. Mac did not exaggerate. He drives me hard during the \"work\" part of the day. We run longer and push harder at everything.\n\nWe grab lunch in between activities, sitting at an umbrellaed table on the outdoor patio. We have light club sandwiches and side salads with glasses of water and iced tea. I usually hate iced tea, but for some reason, here in this place, it's delicious. I suspect that the reason has a name: Sugar, but I push that out of mind. The sandwich is good too. I try not to think about the bread that I would never eat under normal circumstances. It's not that I don't like bread. Who doesn't like bread? It's just that it's so bad for you. But I agreed to Mac's terms, so I don't mention it. Instead, I look inside my sandwich and ask, \"Do you think they repurpose their cucumbers?\"\n\nMac stops chewing and looks a question at me.\n\n\"Do you think these cucumbers were on other people's faces in the spa yesterday?\"\n\nMac laughs so hard he almost chokes. With red, watery eyes, after his coughing fit subsides, he says, \"Such a fucking idiot.\"\n",
        "~~\n\nOur final activities of the day, in order, are: tennis, massages, facials and mani-pedis. On the tennis court, I say to Mac, \"So your plan was to wear me out with everything else first so I couldn't kick your ass in tennis.\" I figured out the other night when we played basketball with Jonah and Joe that Mac is actually quite competitive. I personally don't care, but it's fun riling him up. I have to poke the bear.\n\nMac attempts to set the tone from the start, \"Tennis isn't a game. This is a real sport. Sports are what I do.\"\n\n\"It is too a game. It's ping pong. We just happen to standing on the table.\"\n\nHe laughs again and points his racket at me, \"You're funny. But you're about to get schooled.\"\n\nIt turns out that tennis and ping pong are in fact two different things. Nevertheless, I'm good at it. Mac and I are pretty evenly matched. The difference is, Mac is working really hard for it while I easily glide across the court and effortlessly stroke the ball.\n\nMac grunts and strains and sweats out every point. I can tell that he really doesn't want to lose. In the middle of our set, he asks me, \"Are you hanging in there okay, Alexander?\"\n\nI just smile and say, \"I'm cool as yesterday's used cucumbers.\"\n\nHe laughs again.\n\nIt takes a thirteenth game to decide our one-set match. We've each won six games and now the tie-breaker game is tied six points each. Mac looks spent. I look like we just started. It takes another twelve points but I finally beat him, 13 -- 11 and win the set 7 -- 6. I decide to not gloat right now. I can take the high road. Besides, I like the idea of having this moment in my back pocket for future use.\n\nAs we walk to the spa center for massages and beautification, Mac hooks a sweaty arm around my shoulders and says, \"I gotta hand it to you Alexander. You were pretty damn good out there. We could have gone on forever if I hadn't decided to let you win.\"\n\nI'm about to explode my incredulity at him when I turn and notice his huge grin. Instead, I smile too and simply say, \"Bullshit.\"\n\nHe laughs and gives my shoulder a light squeeze.\n\n~~\n\nAfter dinner and back in our room, I sit on my bed across from Mac and say, \"Last night at the restaurant, our conversation was interrupted. We were in the middle of something before we were so rudely interrupted. I have to admit, I didn't hear the last thing you said. I was steeling myself for the situation unfolding behind you.\" I lean forward, closer to Mac, \"What were you saying?\"\n\n\"Oh, I don't remember,\" Mac drops his eyes. \"I'm sure it wasn't important.\"\n\nI point at him, \"Wow. Good people are bad liars and you're the worst. Come on. Spill it, Mac.\" I won't let it go, \"We were talking about emotional connections. I told you that you deserve the best and not to settle. And then you said something. Or at least started to say something. What was it?\"\n\nHe looks up and meets my eye, \"I said, what if this person that I deserve, the one who's 'the best', what if I already know who that person is?\"\n\nI think my heart misses a beat. \"That's...great? Have you told this person how you feel?\"\n\nHe shakes his head, \"Not yet.\"\n\nThere's a slight hitch in my voice, \"Why not?\"\n\n\"I never had a chance. This person did a very brave thing 10 years ago. He was vulnerable and trusted me enough to reveal his secret. His true self. And then life happened and we were separated for a decade.\"\n\nMac has held my eye this whole time. It's taking all of my strength to not look away. I wanted a clue as to how Mac feels about me. Here it is. Maybe this isn't so one-sided after all. The sudden silence is deafening.\n\n\"The thing is,\" Mac continues, \"I've felt this way for way longer than this person can possibly imagine. I might not have realized or understood my feelings at the time, but it goes all the way back to middle school. I took too long to really understand myself. By the time I did, this person was gone. And now that he's back, I don't know how he feels or if there's even a flicker of interest there.\"\n\nI clear my throat, \"There's much more than a flicker.\"\n\n\"You think?\"\n\n\"I'd bet my life on it.\"\n\n~~\n\nMac had undressed and brushed his teeth first. By the time I exit the bathroom in my boxer-briefs and an undershirt, Mac is lying face-down on his bed, propped up on his elbows reading his book. He's again wearing nothing but a pair of boxers. As I pass by the foot of his bed, an impulse overtakes me. I leap on his bed, straddle his legs and proclaim, \"This is the payback I promised for calling my car a crisis.\" I swipe up and down the soles of his feet. He should be trapped. He should be at my mercy. He isn't.\n\nMac, nobody's victim, is stronger than me. He easily flips right-side-up, hooks his arms through mine and wraps his hands together behind my head in what I imagine to be a half-nelson wrestling move. I could be wrong though. I know as much about wrestling as I do about golf or inorganic chemistry. He pulls so we both fall backwards on his mattress.\n\nHe neatly slips out from under me and uses just his left hand to clasp both of my wrists together, pinning them high over my head. This is the same position he had me in a few nights ago. I'm already starting to respond. His body is on mine and I'm trapped. There's literally nothing I can do, so I stay still and await my punishment.\n\nFor a few seconds he does nothing. He's probably planning his attack. His right hand finds its way under my t-shirt and his palm rests flat on my bare stomach. I quiver in anticipatory fear. His eyes are boring into mine and our faces are just inches apart. Suddenly he releases my wrists and shifts his weight off me. He's still staring into my eyes, our noses almost touching, but I'm no longer trapped. I could get up, if I want to. I could leave his bed, if I want to. I don't want to. He lowers his head and gently kisses me. It's like a test kiss. A sample. He lifts his head back up, looks me in the eye and wordlessly asks. I hold his eye and wordlessly consent.\n\nHe tells me, \"It's always been you, Alexander,\" and he kisses me again, deeply this time. Even more than his kiss and his touch, those words cause a warmth and a tingle to spread through my whole body. His right-hand slides further up my stomach while his left traces down my inner arm. I wrap my leg around his and entangle my fingers in his hair.\n\nHe frees me from the constraints of my t-shirt and he stares down at exposed upper body. My inclination is to fold my arms over my chest and cover myself in any way I could. I know what I look like and I'm particularly impressed. I am not my type. I'm too skinny, too soft, except for a light trail from my navel that disappears below my waistband, I have almost no body hair... If I were someone else, I would pass me right by. But Mac? He's looking at me with a lusting and a hunger that makes my heart flutter and my face flush. But my face couldn't possibly show too much of a flush because it feels like 90% of my body's blood is concentrated on the most raging erection I've ever had in my life.\n\nMac says, \"I could look at you all night.\"\n\nI squirm a little and become aware of the cold, sticky wet spot on my underwear. I look up at the man kneeling between my legs. He towers over me. His arms and shoulders and chest are textured and contoured by the curves of his muscles and bones. He doesn't have a lot of body hair either, but more than me. Just the right amount, really. His caramel skin is rippled over washboard abs that surround his perfectly circular innie belly button. His underwear strains and protests over its prisoner, desperate and fighting to escape. If I were to design the physically perfect man, Mac would be my mold. He's...flawless.\n\nI reach out to touch him but he stops me buy taking my wrist. He turns it over and kisses the palm of my hand. He says, \"We're gonna go slow. We have all night. I'm going first. Reach up, grab the headboard and don't let go.\"\n\nI do as I'm told.\n\nWith my arms up, my skin is pulled taught and my belly button is pulled into a vertical oval. Both his eyes and his grin widen even more. He really does like what he sees.\n\nHe starts his fingers up at my wrists and slowly glides down my inner arms. My whole body pops with goosebumps. As he gets to my arms pits, I worry that I might be subjected to another tickle torture, but that doesn't happen. He strokes gently by and I quiver at his caressing touch. His glide continues down my ribcage and down my sides, all the way to the waistband of my boxer briefs. He makes two 90 degree turns and his fingertips stroke my lower abdomen. I involuntarily quiver some more. My stomach is my most vulnerable, sensitive spot, but Mac still isn't tickling me.\n\nHe places both hands palms down on my stomach and slides up, like he's smoothing out sand on the beach. He leans down and kisses me again, this time parting my lips and finding my tongue with his. Mac tastes amazing. He tastes good, he smells good, he feels good... I want to wrap myself around this perfect man on top of me, but I keep ahold of the headboard, not defying my instructions.\n\nHe lowers his weight onto me and the kissing intensifies. We kiss and kiss and kiss some more. It's wet and sloppy and the most amazing hour of life, although I suspect its crown will be lost to the next hour that's about to follow.\n\nHe slides his mouth across my cheek and down to my ear, giving me a fresh round of goosebumps. His tongue travels to my neck where he stops for almost too much kissing, licking and sucking. I never knew how sensitive my neck was. At this point, anywhere Mac touches me with any part of him, I pretty much turn to goo.\n\nHe lifts his weight back onto his knees and his warm, wet sucking mouth finds my chin and begins a long southward journey. By the time he's down to my Adam's Apple, his hands fumble around down below until his thumbs hook under the waistband of my boxer briefs. Suddenly my underwear is around my ankles and my erection has sprung free.\n\nHis mouth is past my neck and at the top of my sternum when one of his strong, rough hands grips my shaft. I gasp from the shock. Mac does not hurry. The decent of his mouth is long and slow as he continues to stroke my throbbing cock.\n\nWhen he finally reaches my navel, he takes even more time. Like I'm a sampling platter he ordered off a tasting menu, he kisses, nuzzles and sucks all around. Aside from physical sensations, Mac is making me feel desired...wanted...lusted after...loved. A few hours ago, I was happily having dinner with my straight best friend. I had no idea that I would be his dessert. Or that I could ever be this happy.\n\nFinally, he resumes his southbound journey. His gripping hand releases me, but that warm, wet mouth takes me in. I think about average size down there. 5 3/4 inches -- yes, I've measured -- just shy of 6 inches. At any rate, I'm not particularly large, but I'm not small either. Mac has no trouble taking all of my length in as his lips and nose press into my pubic hair. One of his hands begins to stroke my scrotum and my eyes roll back into my head.\n\nSuddenly, he's doing something different. I don't know what it is or how he's doing it. He still has my whole length enveloped and his tongue is pressed against my sensitive underside. His tongue begins to ripple and roll like magic fingers in a massage chair. How is he doing this? I never dreamed that sensations like this existed. Mac has had me more turned on than I've ever been in my 28 years for more than 3 hours now. I can't hold out any longer. I'm about to explode, literally. I want to grab the back of Mac's head and entangle my fingers in his hair, but instead I grip the headboard tighter.\n\nI let out a warning moan, alerting Mac to the tsunami that's about to follow. Mac does not stop. His relentless tongue action continues all through the most intense orgasm of my life. My body rocks and quakes and my toes curl as Mac sucks me dry. He knows the exact right moment to stop; long enough that there's zero mess to clean up, but just before pleasure turns to pain.\n\nMac is back to a kneeling position and he's grinning as he peers down at me. I'm still gasping for breath and my body still racks sporadically as I slowly come down from my natural high. His eyes continue to hungrily move all around my body and he says to me, \"Alexander, you are the most beautiful man alive.\"\n\nPermission or not, I let go of the headboard and wrap my arms around the man of my dreams.\n\nMy bed spends the night cold and alone.\n\n~~\n\nThis is the second morning in a row that I wake next to Mac in the same bed. It's surreal. It's amazing. I gave Mac his turn last night, but he spent so much time on me that we were both pretty exhausted. I did right by him, but I feel like I owe him another turn. Right now.\n\nLike yesterday morning, Mac is pretending to still be asleep. I carefully peel back the sheets and reveal Mac's naked body. Just the sight of the Adonis lying next to me and there's an awakening in my own crotch.\n\nHe seemed to respond yesterday when I finger drew on him, so I start with more of that. I start at his chin dimple and go down his neck. I can already see the beginning of his response. I draw around his neck for a while before crossing over to his shoulder. Why do I find his shoulders to such a turn-on? His arms, his chest...I'm in bed next to a sculpted work of art. The bed sheets are white and Mac's brown skin pops in stark contrast. I trail down his bicep then his forearm and check on my progress. Mac officially has a semi-erection at this point. He keeps his eyes closed.\n\nI sit up next to him with crossed legs and use both hands. I circle around his chest and see another tick up in his \"status\". I gently squeeze his nipples and he bobs up another degree taller. My hands roam down to his abdomen. His abs are like a cobblestone road, but fortunately, they frame a beautiful, round innie. Outies gross me out, though I'm sure if Mac had an outie, he'd convert me. As I gently strum those abs, he continues to grow.\n\nI draw circles around that perfect innie and, though he fights it, Mac's lips begin to show a small smile. I look at my progress and he's now at full mast. On my first day back, I noted that Mac is a full shoe size bigger than me and a full inch taller than me. He's got me beat by a full inch somewhere else too. Lucky me!\n\nI spend a long minute just admiring my accomplishment. I turned Little Mac into Big Mac without directly touching it. It's a little like a magic trick. I feel proud. I think he genuinely likes me. I mean, come on. I'm staring at 7 inches of proof.\n\nLast night, I gave him a blow job. I don't yet have Mac's mad skill set. My tool box isn't as full as his, but I'm a willing and eager student. But not right now. This morning, I just want to use my hands and watch the show. I want him to keep pretending to sleep while I have my fun.\n\nI maneuver myself between his legs, face to face with his sensitive underside. I wrap my hands around his ramrod stiffness and he again can't completely conceal his reaction I gently twist my hands, like I'm rubbing pine tar on a baseball bat and Mac's hands grip the sheets. I thought he fully erect, but he just got a little harder still.\n\nI use my fingertips to gently run up and down while my other hand strokes his scrotum. His ball sack contracts from the sensation and his lips smile again. Like Mac last night, I take my time. I play, I caress, I massage and most of all, I enjoy the view. Mac's naked body splayed out in front of me is better scenery than any vacation I can imagine.\n\nHis breathing begins to intensify and I switch to clockwise circles with mu thumb just below mushroom cap. I can tell it's just a matter of moments now. His grip on the sheets tightens, his back arches and he lets out moan of pleasure.\n\nLike Mac last night, I continue my attention until he's completely milked dry, but stop short of going too far. I tell him not to move. I get up, head to the bathroom and return with both damp and dry towels. I tenderly and lovingly clean up the mess I made on him. When I'm done, cuddle into the crook of his arm and lie next to the sexiest man on earth.\n\n\"Are we supposed to be getting up and running or something?\" I ask.\n\n\"I think we worked hard enough yesterday that we earned a day off.\"\n\nI playfully elbow him in the ribs, \"I'm not sure that's the attitude I want in my personal trainer.\"\n\nHe starts to get up, \"Well, if you insist-\"\n\nI grab his arm, pulling him back into the bed, \"Kidding. I'm good just like this.\" I slide my big toe up his shin.\n\nMac focuses his lake blue eyes on me, \"I suppose it's time I officially tell you that I'm pansexual.\"\n\nI smile so wide, my cheeks hurt, \"Thank you for telling me. Although, by about an hour into your examination of every part of my body last night, I began to suspect that you might be somewhere on the spectrum. The queer spectrum, that is.\"\n\nMac laughs and hugs me closer. He tells me that we don't have to check out until noon. We have three more hours to continue taking turns.\n\n~~\n\nThat night, I take Mac to the Cubs game. I haven't been to one in 10 years and it's been even longer since it was a night game.\n\nOnly residents can park in the street after 6:00. I pay $50 for a spot in a private garage in an alley over a mile away from the ballpark. It's all part of the charm of the neighborhood. I say to Mac, \"Maybe public transportation wouldn't have been such a bad idea.\"\n\nThe Cubs are not awesome this year, but just for us, they win tonight.\n\nWe make our way to the garage that holds my car, but before getting in, I wrap my arms around him. \"You're a pretty fun date.\"\n\nHe smiles, \"Here's the best thing about being dating roomies. The date isn't actually over until we fall asleep.\"\n\nLeaning against the passenger door of my car with my arms around his neck, I ask him, \"How do you feel about PDA?\"\n\nHe pulls me against him, \"With you by my side protecting me from giant bullies...yeah, I'm good with it.\"\n\nI shake my head disapprovingly, even though a smile creeps onto my lips.\n\nMac asks, \"Too soon?\"\n\n\"Just a skosh.\"\n\n\"Sorry. It was a serious question and I made an inappropriate joke. It was only partly a joke though. With you by my side, in most circumstances, I feel pretty damn good about it. I never had to consider it before you.\"\n\nI press my forehead to his, \"I feel the same way.\" I take a furtive glance around the alley then find Mac's mouth with mine. \"This is going to be the longest drive ever and not just because of the traffic. I want to be at home with you right now. Can you try that genie thing? Wiggle your nose, fold your arms and blink us back.\"\n\nMac laughs before actually giving it a try. He gives me one more kiss then pushes me into the passenger seat. \"Just relax and let me battle the city congestion.\"\n\nNot that he'd let me drive my own car anyway, but I wasn't gonna argue. I titled my seat back a little and closed my eyes. I put my hand on Mac's as he shifted gears. It didn't feel thrilling and dangerous like it did the other day; it felt even better. It felt comfortable and right. It felt like affection. PDA. A private display of affection.\n\nMac says, \"I wanted to become your friend in sixth grade, the day I met you. By high school, I was crushing on you big time.\"\n\nI look at his profile, \"If we had known that about each other back then, imagine what might have been. If we had been braver, who knows what could have happened?\"\n\n\"Or...we could have tried, failed and wasted our chance,\" Mac says. \"It took me too long to figure out who I was and catholic school didn't exactly make things easier for us. Eventually, I wanted to ask you to prom, but I didn't know for sure if you were...\"\n\n\"Open to such things?\" I try.\n\n\"'Into dudes', I was going to say.\"\n\nI snort.\n\n\"But like you said, maybe the timing wouldn't have been right.\" I tighten my grip around his hand. \"You are the one. And let's set aside for a moment how indisputably gorgeous you are. Not that that's something I could easily ignore or deny, but it's Mac the person that I've been falling in love with for, what, over a week now? You had me from that first lunch on that first day. Hell, I felt in your hall when you first opened your door.\"",
        "He looks at my hand on his on the gear shift, \"I'm not still learning anymore.\"\n\n\"I know. Am I bothering you?\"\n\n\"Not even close.\"\n\nWe are far enough away from Wrigleyville at this point that traffic is normalizing. Normalizing. A weird word. Maybe I am finally normalizing. Whatever the fuck that means.\n\n~~\n\nFinally home, I close the door behind us, turn around and Mac is right there. Against me. His hands are on my hips and mine are in his hair; fingers entangled in his dark curls. He grabs ahold of the hem of my shirt, and in one smooth, skillful motion, pulls it right off.\n\nHe takes a step back and appraises me. I suddenly feel self-conscious but, based on the smile on his lips and the hunger in his eyes, it seems as though he likes what he sees. \"I knew I'd find you shirtless in the apartment sooner or later.\"\n\nI laugh, \"Like with the socks that time, I don't think it counts if you're the one who took it off me.\"\n\n\"I'm a Utilitarian,\" he says with his eyes dancing all around me. \"It's only the end result that counts. The 'whys' and 'hows' don't matter.\"\n\nI go to remove his shirt too, but he stops me. \"Give me just a minute here.\" He examines me head to toe. \"You are one fine looking man.\"\n\nI blush a deep red, \"Stop it.\"\n\n\"It's true. Alexander, I'm not sure what you think other people see or what you just don't see in yourself, but you are...there are so many adjectives to pick from. Gorgeous, adorable, hot, stunning, alluring, beautiful, cute, incredible...I could go on.\"\n\n\"How about 'on fleek'?\"\n\nHe laughs again, \"Especially on fleek.\"\n\n\"I'd never spoken those words before. I just wanted to say that once.\"\n\n\"You have an irresistible runner's body. Remind me, why are we doing all this weight room shit every day?\"\n\n\"Because I have no biceps and zero packs, remember? I was told one too many times that I was too skinny.\"\n\n\"Never by me.\" He puts his fingertips on my flat but ab-free stomach and I tremble from the touch. \"You have biceps. And no one needs rock-hard abs. If you want a six pack, go for it. If there's something you want to change about yourself, then by all means, do it. But only do it for you. Not for anybody else. I only volunteered to be your personal trainer because it meant spending more time with you. You've gotta know, your fucking perfect the way you are.\"\n\nHe slides his hands around to my waist, his caramel fingers on my pale skin. I sizzle at the points of contact. He pulls me in up against him and our mouths meet again. Minutes go by. Except for the growth inside my pants, we don't move at all.\n\nEventually, we come up for air. Mac turns the bolt on the door and slides the chain in place.\n\nHe leads me to his bedroom where he spends the night proving to me that he meant every word he said.\n\n~~\n\nThe next afternoon, I find myself feeling guilty for not having a job.\n\nI've worked hard for 6 years and never took a vacation. I have plenty of money and Mac isn't charging me rent. I so deserve this time off right now, but I can't help perusing online job listings...just to see what's out there.\n\nI sit on my bed with my legs stretched out and my laptop open. I'm scrolling through the results when Mac pops his head through the door. When our eyes connect, he smiles and I flush with a tingly warmth that is totally involuntary. He sits down at the foot of the bed, picks up my right foot and puts it in his lap. He starts a gentle massage.\n\nHe asks, \"Do you mind some company?\"\n\n\"As long as it's you.\"\n\nHis mindless, gentle massaging gradually intensifies. I'm...responding. Unexpectedly, my sock is off and my foot is his new project.\n\nI'm suddenly concerned, \"Mac, did I do something wrong?\"\n\n\"What? No. Why?\"\n\n\"When you 'punished' me the other night, you said that next time the sock would come off.\"\n\nMac laughs. \"I'm not here to punish you.\" He eases up and settles into a mindless stroking.\n\n\"Go back to your search. I'll leave if you want me to.\"\n\nI say, \"No, stay,\" while I think: and don't stop what you're doing.\n\n\"Totally up to you, but if you want to read them out loud, I could be a second set of ears.\"\n\nNow my left sock if off too. This foot, neglected to this point, is fresh and extra susceptible. Mac smiles as his attention causes involuntary jerks until it desensitizes.\n\nHe closes his eyes and leans his head against the wall while I slowly recite job titles.\n\nAfter about ten minutes, there's a knock on the apartment door. I look a question at him and he shrugs. \"It must be a neighbor, because the lobby buzzer didn't sound. I'll get it,\" he says, and he's suddenly gone.\n\nIt's so weird how different the room feels without Mac in it. It's not just his physical touch, as electric as that is. He brings an energy and leaves a void. I continue to peruse.\n\n~~\n\nI'm shocked when I recognize the voice at the door. It says to Mac, \"Is Alex here?\"\n\nI spring off my bed and run to the door, \"Bobby? What are you doing here?\"\n\nHe flings himself at me and wraps me in a bearhug. \"I have an aunt who lives in the city. I'm visiting her for a couple days. I needed to see you.\"\n\nHe backs up and looks down at my naked feet. \"Where are your socks? You hate being barefoot.\"\n\nMac cocks an eyebrow at me.\n\nI tell Mac, \"This is Bobby.\"\n\nMac says, \"That's been established.\"\n\n\"He was my next-door neighbor in Boston.\"\n\nBobby sticks his hand out to Mac. \"Alex told me he would be staying with his best friend. If Alex considers you to be his best friend, then you must be a fantastic human being.\"\n\nMac smiles warmly and accepts Bobby's offered hand.\n\nI say, \"I still don't understand. Why couldn't you have called or texted or messaged or something?\"\n\nBobby looks me in the eyes and says, \"I know Boston wasn't really your home. I know you felt like it was time to leave. And I know we said our goodbyes, but there's something that I didn't say. Something that I have to say.\" He takes my hands, \"I'm in love with you.\"\n\n~~\n\nI told Bobby to wait for me at the Starbucks across the street. I'll deal with him later. I have to talk to Mac first.\n\n\"You told me that you didn't leave anyone behind in Boston. No boyfriend...no friends even.\"\n\nI'm next to Mac on his sofa as I pull my socks back on. \"I know that seems like a lie right now given what just happened, but I swear, I meant every word I've said to you.\"\n\nMac fold his arms, \"The truth is, you don't owe me anything. I invited you to stay here based on us being friends. You accepted my invitation based on us being friends. The events of the last couple days were unanticipated by either of us.\" His striking blue eyes glisten with pooling tears.\n\nI put a hand on his forearm, \"Okay, slow down. I haven't even told you about Bobby yet. I know I don't owe you anything, but I'm not sure he knows that he doesn't owe me anything.\"\n\n\"He's cute,\" Mac says.\n\n\"Is he? I hadn't noticed.\"\n\nMac scoffs. \"Right. That's kind of not a matter of opinion. Bobby is a cute guy. Or kid. How old is he?\"\n\n\"He's 25.\"\n\n\"Look, Alexander, I won't stand in your way. I'm your friend first, above all else. If your best future is with Bobby, you need to take it. It's right there across the street waiting for you.\" One tear escapes his left eye and trails down his cheek.\n\n\"Stop stopping me! Listen! Bobby is not and was never my boyfriend. Really, I never even thought of him as a friend at all. He's like my kid brother. He's the same age as my kid brother even. That's how I think of him. I'd never describe my brother as cute. He might be. I know his girlfriend thinks he is -- but I don't. He's just my brother and that's how I think of Bobby.\"\n\nSo, I tell Mac the story. Three years ago, when I was 25, Bobby had just turned 22 and had just graduated from college. He had an entry level job already lined up and had planned to continue living with his parents for at least a year while he saved his money acclimated to adulthood.\n\nThe problem came along when he decided to come out to his family. They had no interest in having their 22-year-old gay son in their lives or in their house. They kicked him out. With just his meager savings account and one suitcase of clothes, he was suddenly homeless. But he was employed, so he filled out a rental application and was approved for an apartment in my building -- the one next to mine. After couch-surfing with friends for a few nights, he moved in.\n\nMy work was crazy at the time; I was averaging 70-hour workweeks, but I met Bobby in the hallway during his first couple days. I invited him to have dinner with me and he accepted. He was a proud kid and he didn't tell me his story right away. I dragged and pulled it out of him.\n\nHis job was a great experience to start his career, but it was entry-level. He was barely making enough to cover rent, not to mention buy the clothes he needed or even food to eat. So, I looked after him. I helped him out. I bought him a couple suits and pairs of dress shoes. Whenever I was home, I invited him to eat with me. I bought him some dinners, I took him to a few movies. I helped him to figure out how to be a grownup. How to pay bills, set budgets and manage his finances.\n\nI didn't have a ton of spare time, but most of it went to checking in on and helping Bobby. I placed a grocery order for delivery every week and I always ordered extra for him. I gave him my spare key and he was always welcome to over to my place and use my laptop, watch my tv...whatever. He was...is...a good kid. A sweet kid. What was I supposed to do? Let him flounder? Let him starve? Let him get evicted?\n\nI helped him a lot in those first 18 months, but then he got a promotion and a raise and suddenly he was able to cover his expenses on his own. One day he brought me a document with a long list of shit and told me that at a rough estimate, he owed me $10,000 for the help I gave him. He wanted to make a plan for how to pay me back.\n\nI laughed and told him that if he wanted to pay me back, all he had to do was tell his parents to fuck off and then go on to live his best life. Even though he was covering everything on his own at that point, it would have taken him 10 years to pay me back. I didn't need his money. He needed it to start saving for his future.\n\nSo, the second 18 months, he didn't need my financial support anymore, but we kept up with meals and the occasional movie. Again, I felt like his big brother. Actually, if I'm honest with myself, I feel kind of paternal toward him.\n\nAfter I finish the story, Mac says, \"I already knew you were one of the best people I knew, but...wow! You're amazing.\"\n\nI wave off the compliment, \"I just helped a little. Bobby is actually the strong, amazing one. I can't even imagine not having the love and support of my family. He persevered in the worst of circumstances.\"\n\nMac puts a hand on my shoulder, \"I think you did a lot more than 'just help a little'. That amazing young man flew halfway across the country to tell you that. How can he not feel like he owes you something?\"\n\nI put both hands on Mac's shoulder and lock eyes with him. \"Mac, it's you. You're the one. I want you. Bobby is a good guy who will make some guy really happy someday. But I'm not that guy. My heart's taken. And, I can't say this enough times, he's like family to me. Not a lover, not a friend. I feel like some weird fusion of the kid's uncle, father and brother. Let me go tie up this loose end.\"\n\n~~\n\nIn Starbucks, drop into the seat across from Bobby and look into his damp, red eyes. \"Hey, are you okay? What's going on?\"\n\n\"Nothing's wrong. I know we said our goodbyes, but you're like gone. It just kind of hit me.\"\n\n\"Bobby, you haven't needed me for a long time now. People will come and go your whole life. I'm just one of those people. One day, you're gonna meet the right guy and be happier than you could ever imagine.\"\n\n\"And how do you know you're not that guy? While you were in my life, I never thought of you that way. You were just Alex. You were like my gay mentor. And you kind of saved my life.\"\n\n\"You're exaggerating. I-\"\n\nHe cuts me off, \"No! You did. But this is not a case of hero-worship. It took you leaving for me to realize how I feel about you. I'm in love with you.\" He leans in to kiss me.\n\n~~\n\nAfter leaving Starbucks, I look up to what I think is the sixth floor and what I think is Mac's balcony. From this distance and angle, I can't tell if he's out there. I cross the parking lot, feeling a little on display as I perform the humiliating walk of shame.\n\nIt's like the elevator knows. It's punishing me. It's purposely taking an excruciatingly long time to make its deliberate ascent before finally depositing me at my sixth-floor destination. Thankfully, the hall is quiet.\n\nI open the door and look down. I see Mac's well-worn VANS, lonely and abandoned. I slip out of my own shoes and leave them to keep his company. Lined up next to his, his more road weary and a full size bigger, it's like they're protecting mine. Keeping them safe. Like he does with me.\n\nI see that Mac is in fact on the balcony. I flip the bolt lock and slip the chain into place. There can be no audience for this. And no interruptions. I just have to do it. I grab two waters from the fridge and join Mac on the other side of the sliding glass door. \"Hey there.\" I hand him a water and he smiles at me.\n\nMac said that if Bobby is who I was meant to be with, then that's the choice I'd have to make. He said he'd understand and he'd be happy for me. He said he wanted me to live my best life.\n\nI sit in the chair next to Mac's and we each take a long pull on our waters. It's a warm late June, early summer afternoon. I could tell Mac anything right now and if he thought that I was okay and that I was happy, then he'd accept it. The fact of the matter is that I am happy. Happier than I ever thought I could be. Happier than I deserve to be. It's time to tell Mac.\n\nThe thing is, I'm human. I fuck up. Just like everybody else, I make mistakes. I am not immune to making the wrong decisions and doing the wrong things.\n\nI'd never broken anyone's heart before now. At least not knowingly or intentionally. The look of devastation in his eyes was almost too much for me to take. I never wanted to be responsible for putting that look on someone else's face. I can never unsee that look or unsay those words.\n\nAnd who the fuck am I? Bobby and Mac are both exemplary human beings, both deserving of way better than me. I find myself irrationally angry to even be in this position in the first place. I didn't ask to hurt anyone. I certainly didn't want to hurt anyone. Why should anyone give a shit about me? Who the fuck am I?\n\nI am not the kind of person to find himself in the middle of a love triangle. Not me. And if I ever was, I would be the one left out in the cold, alone. Not the one in the middle of it all.\n\nSo, I broke his heart. Two weeks ago, I would never have imagined being in this situation. I had surprised myself with how much I'd changed in such a short time. I had to tell him that while I love him, I'm in love with someone else.\n\nAnd now I finish telling Mac. I tell him how Bobby's kiss never landed. How I dodged it. How I heard his words and I saw his eyes and I broke his heart. How I told Bobby that there was someone else. Someone I was madly in love with. Someone who I think about night and day. Someone who I want to share forever with. Someone named Mac.\n\nI twist in my chair so I'm facing him straight on, \"We said a lot of stuff the other day after the Cubs game. It was all true and I know you don't need me to repeat any of it, so here's some new stuff. When I chose to room with you when I came back home, I hoped to reconnect with my friend. I had no idea that you'd bring me back to life and pull me out of the dull, dreary shitshow that my existence had become. I had no idea I'd fall in love with you -- you woke me up.\"\n\nI touch his arm, \"You told me before that I can tell you anything. Here it is. I want to do things -- everything...with you. I want to hang out with Jonah and Joe, with you. I want to go where I've never been before with you. I want to show you Boston. I want to go to my brother's one-day wedding with you. I want to kick your ass in tennis and get my ass kicked by you in every other sport known to man. I'm not trying to scare you off here. I probably sound like an insane lunatic, but I want to know that one day we can talk about our own wedding.\"\n\nI nudge his toe with mine. \"I know I've only been home a short time but really, I've known you for 17 years. I want to maybe someday buy a house with you. I want to talk with you about being fathers together. Adoption? Surrogacy? Fostering? Owning a dog? All of those? None of those? I want to know that anything's possible with you. I want to know that we can do whatever the fuck we want to do. That we can pick and choose our best life together. And right now, I want to tell you to take today off of work and come with me to Starved Rock. I want to make a day of it and explore the canyons with you.\"\n\nIt occurs to me that Mac hasn't spoken one single word yet. He has just watched and listened, silently from the moment I walked out onto this balcony.\n\nI get up, take two steps to my right and sit down again. Right in his lap. If he tries to not smile, he fails miserably. I put my arms around him and put my lips right up to his ear. \"Mac, you are not my second choice, my Plan B or my consolation prize. It's you. You're the one. You're who I want to talk about forever with.\"\n\nI nibble his earlobe and he rewards me immediately by sprouting goosebumps everywhere. \"I am irrationally, insanely, ridiculously, idiotically in love with you.\"\n\nHe finally speaks, \"That was a beautiful speech. You said some very nice things. You want to know the truth?\"\n\nDo I? I stop breathing. Did I take too long? Did I say too much? How did I fuck this up? Maybe he's not this far in yet. Am I a crazed freak? If I tried a verbal response right now, I'm not sure what noise would escape me. I just gulp and nod with bulging eyes.\n\nHe clears his throat, \"The truth is, when you came through that door and handed me this water, I was good. Don't get me wrong, I loved every word you said. I just didn't need any more than to look into your sparkling green eyes and know that you were home.\" He wraps his arms around me in reciprocation.\n\nI squeeze him tighter.\n\nMac says, \"You had shit you had to take care of. I get it. I understand and I trust you.\"\n\nRight now, I kiss Mac long, slow and deep. I swirl my tongue along his and I feel his organ stiffen against my leg. I say, \"This is pretty fucking perfect.\" I slip my hand down his torso and find my way under his shirt. He trembles as I grope around. Mac is ticklish! That's something to explore more later.\n\nI'm still sitting in his lap and the chair under us creaks in protest. He says, smiling, \"You know, we're basically sitting on a flimsy $10 piece of plastic.\"\n\nI laugh, \"And thanks to my personal trainer, I've gained five pounds of muscle.\"\n\nOne of his hands snakes its way under my shirt and he prods at my tummy, \"Hmm, I'm not finding them here.\"\n\nI quiver and giggle from his gentle, exploring touch. \"Not there...I said it's all muscle.\"\n\n\"I see,\" he says, continuing his examination. \"Just to be clear, you're my first choice too. My only choice.\"\n\nI tighten my grip around him even more. I should have come home sooner. I stand up and lead him inside.\n\nOnce he has the sliding door closed, I spin him around and I sink to my knees. My hands work at his button and zipper and his shorts fall to the floor. I can tell through his boxers that he still has a partial from the kissing on the balcony. I slide those boxers away and his hardening manhood bobs in front of me keeping time with his pulse.\n\nI don't touch him yet. I feel like a magician again, because using nothing more than eyes, I bring him to full erection. It is the biggest turn on in the world to know that not only did I do that to him, but it happened just from him knowing I was looking at him. His emotions for me generated a physical response.",
        "I still don't know all of Mac's secrets and techniques, but I go at him in earnest with my own repertoire. It only takes a few minutes for me to reduce him to little more than a puddle on the floor. He needs a moment to catch his breath.\n\nEventually, still gasping for air he manages a, \"Wow!\"\n\nI grin at him, \"I didn't owe you that. I wanted to do that.\" I stand and offer him my hand, \"Let's go.\"\n\n\"Where're we going?\" he asks, still panting.\n\n\"Starved Rock. Duh.\"\n\n\"What about your turn?\"\n\n\"I have no doubt you'll blow my mind later. We have forever to make up turns. With you Mac, I'm always looking forward to 'later', but right now, I'm kidnapping you.\"\n\nA smile forms, \"You were serious?\"\n\n\"I didn't say one single thing that I didn't mean. I want to explore every trail, every path and every canyon with you. Both literally today at Starved Rock and metaphorically for the rest of our lives. And I want to start right now.\"\n\n\"I haven't been there in years.\" He kisses me, \"Let me get my hikers.\" He disappears into his room and comes back with the perfect shoes. Of course he has the perfect shoes. He says, \"If that cupcake store is still there, you're absolutely eating a cupcake today.\"\n\n\"Cupcake?\"\n\n\"Right outside of Starved Rock in North Utica is a little cupcake shop. It has the best name ever. Two Girls and a Cupcake.\"\n\nI snort, \"You're kidding.\"\n\n\"Nope. Clever, right?\"\n\nI laugh, \"Cupcakes it is.\" He leads me out the door.\n\nBefore we make it to the elevator, he pauses, looks me in the eyes, my green and apparently sparkling eyes, and says, \"Yes, it's all possible. Everything you said. I want all of it too. Every bit of it. So, we're gonna have it.\" He takes my hand and I again feel that Mac-jolt of electricity. Decades from now, I'll still feel the buzz of his presence in the room and the sizzle of his touch on my skin. I am so totally fucking in love with this man.\n\nMac says, \"In case you hadn't figured it out yet, I'm also foolishly, senselessly, laughably, stupidly and backasswardsly -- yes it's a word, shut up -- in love with you too. I always have been.\" A tear of joy pools in his eye, \"I need to buy a lottery ticket today.\"\n\n\"Oh?\"\n\n\"Right now, in this moment, I'm the luckiest idiot alive.\"\n\nMac kisses me again and my toes curl in my sneakers.\n\n\"I call driving,\" he says.\n\nOf course he does. I toss him the keys, grinning, \"Mac, I'll take shotgun with you every day.\"\n\nHe gives my hand a solid squeeze and we head out. For today and forever."
    ],
    "authorname": "Str8SensitiveGuy",
    "tags": [
        "m on m",
        "love",
        "tickling",
        "belly button",
        "best friend",
        "coming home",
        "interracial",
        "lust"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/a-new-start-with-an-old-friend"
}