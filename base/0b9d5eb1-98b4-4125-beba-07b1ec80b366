{
    "title": "Double Duty Pt. 02",
    "pages": [
        "I had several requests to continue this story, so here you are. Bailey and Eddie are back together. \n\nThanks for taking the time to read my ramblings. I appreciate the opportunity to tell the story. \n\n~~~~~~~~~~~~~~\n\nI was sitting in the theatre, watching the credits roll upwards on the big screen. Most of the people who had been watching the movie with me had already left, but I stayed in my seat. \n\nI was here alone today. That really wasn't usual for me, as I often attended movies alone, even if I had a girlfriend, which wasn't the case right now. I hadn't been able to keep a woman in my life for the last two years, at least, not for longer than a few weeks at a time. That coincided with my increased interest in the movie business. \n\nAh, there it is...the reason for my distraction in terms of female companionship. The name, moving slowly up the screen, lost amongst the hundreds of other names to most, but glaringly obvious to me...and half the reason I wanted to see this movie in the first place. \n\nI said 'half the reason', and it was relatively true. I always had a thing for Scarlett Johansson, which I'm sure puts me in a club with the majority of men on the planet. That 'thing' began long before I met her...I still have the pictures of that day at lunch on my phone to prove it...and before I slept with her stunt double. Given the resemblance between the two, I suppose the name on the screen now might be given more than half the credit for my attendance today. \n\nBailey Lewis. Now that was a great memory. A couple of weeks of incredible sex, in various interesting places. Lunch with Scarlett. It was, to say the least, fun. \n\nFun I wouldn't mind getting a little more of. It had been two years, but if you don't ask, you'll never get an answer. I tapped my phone, waking it up, and scrolled through my contact list, stopping in the 'K's. There was the person who might be able to answer my question. \n\nI suppose it was hardly fair to ask any woman to match up with my memories. That's the real reason I hadn't been able to keep a girlfriend in my life since Bailey. It's almost as though I had really been with Scarlett, as the line between them was a little blurry, especially when I kept seeing her over and over on the big screen in various movies. By 'her', I mean Scarlett...or Bailey. I was having a problem with who was who. In my mind, it was almost as though Scarlett was Bailey's stand-in. I knew who really did the hard stuff, and who was the on-screen eye candy. \n\nMy phone crackled to life, and I heard it ring three times. \n\n\"You got Keith,\" I heard. During the time Bailey was in town, I had been folded into her circle of friends, which included a few of her fellow stunt performers...and the hulk, Keith, who had maintained contact even after the rest of the travelling circus had left town. You can never have too many friends, especially those who are as big as your basic silverback gorilla. If nothing, he'd be handy should I ever need to move a piano. \n\n\"Yo! Dude...how's tricks?\" I laughed. \"Lift any cars lately?\" It was more than witty banter, as Keith's physique was more than just show. He participated in 'strongest man' competitions, and was getting a reputation for it. I had a feeling his set security days were numbered. \n\n\"Eddie!\" he rumbled back. \"What's up, you scrawny, lucky little turd?\" It was said with affection, or at least the 'bro' version. He had called me variations of the 'lucky turd' moniker ever since we met...and I had benefited from Bailey's attention. To him, she was like a little sister, so it wouldn't pay to make her unhappy, and have to deal with an angry Keith. \n\n\"I'm at the movies, and just saw Bailey's name scroll past,\" I said seriously. \"Have you heard anything from her lately?\" It got quiet on the other end. \n\n\"I'm not sure I can answer that, pal,\" he said, like distant thunder. \"I kind of promised I wouldn't.\" I suppose he realized that his comment might sound like she didn't want to see me, and clarified. \"She's not ducking you, bud.\" Another silent pause followed, then he continued. \"I guess I could tell you they're starting work on a sequel in a couple of weeks. Someone we both know will be back in town then, for a month or so, but you didn't hear it from me. That someone wanted her presence to be a surprise, and she'll have my balls if you wreck it.\"\n\nI still found it amusing that a 5'4\", 130 pound woman could intimidate a monster over a foot taller and 200 pounds heavier. I mean, she was intimidating... she intimidated me, a little... but for different reasons. Personal ones. \n\n\"My lips are sealed,\" I smiled, \"but thanks for not telling me. I owe you one.\" \n\n\"Bring me a coffee sometime and we'll call it even,\" he laughed. \"Talk to you later.\" The line clicked off. \n\nTwo weeks. I could wait two weeks. For her? No problem. \n\nI just hoped I could sleep until then. \n\n***\n\nTwo weeks is a long time to be excited. After a week or so, I felt like a kid before Christmas, knowing she was coming back to visit. \n\nI ran through the memories of two weeks, nearly two years ago. That visit had been cut short...Bailey had been called away on another production, one that only needed her stunt performance, and not her closeup double work for Scarlett. I hoped this time would make up for it, and she would be here longer than scheduled. \n\nBailey had spent several nights in my bed last time around, and not just on the occasion of her doing a stunt and needing a release afterward. I had the distinct impression that we were becoming more than just physical, but never had the opportunity to explore that thought before she left. Maybe this time... \n\n\"Who the hell is that?\" I cursed, as a loud knock on the door interrupted both my thoughts, and the TV show I wasn't really watching. I stood, and went to the door, looking out the peep hole. \n\nNothing. Just empty hallway. I opened the door quickly and stepped out, looking down the hall toward the elevator, expecting to see...I don't know...maybe someone delivering flyers or something. No one was there. I muttered under my breath and turned back, retracing the three steps I had taken in that direction. I was still grumbling as I closed the door behind me. \n\n\"Hi!\" the cute blonde chirped from her seat on my couch. \n\nThe voice surprised me, and I jumped, eyes wide, until I recognized who it was. \n\n\"Bailey!\" I gasped, looking around comically, wondering how the hell she got in. Apparently, she had added 'ninja' to her skills list, slipping silently past me while I was looking the wrong way down the hallway. \n\nShe laughed, and walked over to where I was trying to get my heart started again. \"How? What? When?\" I blurted. \n\n\"First...I'm sneaky. Second...you know what, and third...about an hour ago,\" she smiled, stepping into my arms. \"Surprised to see me?\" \n\nSurprised? Yeah, you could say that, and I knew you were coming...just not so soon, and certainly not so quietly. My mouth wasn't making noises, hanging open, so she took charge. \n\n\"I'm sorry,\" she giggled. \"I should have called. Oh my! I'm not interrupting someone, am I?\" she asked, suddenly realizing that I might have been with someone. Like that could happen. \n\n\"No!\" I gulped, snapping back to consciousness. \"No. I'm...I'm alone. I just...wow, you surprised me.\" I pulled myself together, and pulled her closer. She felt...perfect, almost as though she never left. The firmness of her body erased the time between our last embrace and this one in an instant. \n\n\"I've missed you,\" she whispered, holding me tight. Her lips searched for mine, finding them right where she left them, and every bit as receptive as ever. \n\nThe kiss was...hmmm...how do you describe heaven? Her lips parted almost immediately, and my tongue soon had company in my mouth, tangling with hers like two amorous boas in a steamy jungle. My hands wandered across her back, from her neck down to her much more interesting and incredibly tight backside. I came up for air, trying to remind myself that I wasn't supposed to be expecting her at all. Better not get Keith in trouble. \n\n\"So...what are you doing here?!\" I gasped, finding it easy to convey the surprise I was still feeling. \"Got any new boo boos for me to kiss better?\" \n\n\"No,\" she giggled, smiling brightly, \"No new boo boos...although I want you to feel free to kiss whatever you like. You know...preventive medicine...that sort of thing.\" She hugged me tight again. \"I'm here for a shoot, but it doesn't actually start until late next week. I thought I'd make up for being torn from your arms early last time. You're sure I'm not getting in your way?\" \n\nLet's not open that can just yet, I thought. It's a conversation I really, really want to have before you vanish on me again, but I have a feeling that now might not be the time for a deep evaluation of emotional attachment. It'll take a while, and probably delay getting to the much more enjoyable stuff I want to do right now. I'll just remember you said that you had missed me. \n\n\"You could never be in the way,\" I replied, crushing her in an overly emotional hug. \n\n\"Ooof! Easy, there, honey,\" she groaned, pecking my cheek. \"I'm not wearing any of my protective gear.\" I relaxed my grip, and she made eye contact. A very Scarlett-like crooked grin crossed her face. \"Or underwear, for that matter.\"\n\nBailey always was full of surprises. From that first time, in her trailer shower, she had always been ahead of me. A modern woman, in a man's game, I suppose it went with the territory. I didn't mind, in the least. \n\nShe had pirouetted out of my grasp, and was now wiggling her ass at me as she slowly crept down the hall toward the bedroom. A pause at the door. \n\n\"Come hither, my darling,\" she smiled, and disappeared around the corner. \n\nTwo years? Seemed like yesterday. \n\n***\n\nSweat and sex. That's what the room smelled like, and rightfully so. We were well and truly into it. \n\nBy the time I made it into the bedroom, she had been dropping her clothes... a warmup jacket and stretchy yoga pants, no underwear, as advertised... on the floor. I had quickly shed everything and joined her under the sheets, and we had immediately begun pawing each other into flaming passion. I had soon moved to eat that delicious pussy again, spending several minutes grazing between her thighs. I'm proud to say I brought her off twice, before she turned the tables, and swallowed my cock eagerly. A few minutes of sensual sucking led to the application of a condom, then she mounted me, fucking me with obvious need. She came again, with a muffled scream, and I rolled us over. \n\nNow, sweat was dripping off my nose, as I drilled her receptive cleft firmly. She had a full glow going herself, beads of feminine exertion covering her body from top to bottom. \n\n\"Oh fuck, Eddie,\" she gasped, gazing deep into my eyes. \"You're so good for me.\"\n\nI kept spearing her damp depths furiously, but my mind had other thoughts. Inappropriately timed thoughts. \n\nI wonder how many other guys have been 'good for you' in the last two years? I remember the reason you initially let me into your life ; to release the tension following your stunt gig. Back then I had just been happy to get laid, but two years of thinking had added layer upon layer of complexity to the situation. Now, I had to wonder. How many other 'tension relievers' had there been since? \n\nNot now! I demanded of my brain. Just enjoy the moment...the sensation of her incredible body under yours, and her pussy gripping your cock. Cross that bridge later, after you finish fucking her brains out! \n\nAnother drop of sweat splashed across her upper lip, and she smiled, pulling me down for another scorching kiss. I pounded her into the mattress, listening to her squeaks and moans of bliss as she built toward another orgasm. Mine was equally near. \n\n\"Fuck me Eddie!\" she squealed. \"Fuck me! Make me cum, again...I'm begging you...then spray that hot juice of yours all over me! Do it!\" \n\nWords became animal noises of ecstasy, as she went over the top once more, driving me over with her. I yanked my cock out, and an elastic snap signalled my desperate removal of the pesky prophylactic. My balls pulled up tight, and I deluged her, squirting ropes of hot semen across her panting chest, neck and face. The goo slid across her sweaty skin, pooling in the low areas. \n\nIt was well worth the two year wait, but I hoped to increase the frequency a bit, from here on out. \n\n\"So I guess you missed me, too,\" she smiled, playfully tracing her fingertips across her cum-slicked chest. She dragged my semen from the areas where it had collected, and painted the spots I had missed, including her tall, stiff nipples. Again and again, she dripped my discharge from her delicate, painted nails, drizzling it like icing over her nips. \n\nI didn't feel the need to answer her...not with words, anyway. I leaned closer and kissed her softly. Her lips quivered against mine, sensing the emotions I was trying to convey in the embrace. \n\n\"Mmmmm, that's a yes,\" she giggled. \"No doubt about it.\" \n\n***\n\nSaturday morning dawned, and I rolled over, turning my back to the decidedly too bright side of the room. It had been an energetic evening, and I was still recovering from round 3.\n\nSomething was wrong. I should have bumped into...\n\nI opened one eye. Her pillow was empty, and the sheets were rumpled in her absence. \n\n\"Bailey?\" I called groggily, rolling out of bed. I staggered out to the living room. \n\n\"Hi honey,\" she smiled. She was sitting at the dining room table, tapping at her laptop. She looked up from the screen and grinned. \"Nice outfit.\" \n\n\"I like yours too,\" I laughed. Yes, she was as naked as I was. \"What's up?\"\n\n\"Nothing really. Just couldn't sleep, so I thought I'd check some numbers,\" she answered. \n\n\"Lottery numbers?\" I asked. \"You mean I could be sleeping with a millionaire?\" \n\n\"Sorry to burst your bubble, but no,\" she giggled. \"I'm checking on one of the stunts I have to do. It's kind of intimidatIng.\"\n\nThat got my attention. This is the woman who casually bounced off the hood of a speeding car twelve hours after I met her. If she was intimidated, it had to be big. \n\nI sat beside her and focused on the screen. It was all numbers, not at all what I was expecting. \n\n\"Um, this looks, uh, confusing,\" I gestured. \"What is it?\" \n\n\"It's a program that calculates the details of a stunt,\" she smiled. \"Can't you see that?\" A grin tickled her lips. There was nothing on the screen beside the columns of numbers. \"Isn't it obvious?\" \n\n\"Oh yeah...sure it is. I was going to say that,\" I laughed, playing along. \n\n\"Well, that's what it is,\" she giggled, typing in a box. \n\n\"You mean there's actually a program for that? I thought you lunatics just did it by feel,\" I smiled. \n\n\"Only on the Internet, honey, and we call those guys 'idiots',\" she said, referring to the plethora of YouTube morons who are ensuring they will not procreate, by slamming their testicles into the nearest hard object. \n\n\"Seriously...there's a program for that?\" I repeated. \n\n\"Baby, there's a program for everything. It's just a matter of paying the right egghead. As far as stunts go, it's all physics. Forces, acceleration, vectors, trajectories...all that exciting stuff.\" She pointed at the screen. \"See? That's me,\" she smiled. \"Don't you recognize me?\" A theatrical gesture to her spectacularly nude body, before she continued. \n\nThe number she pointed to said '58.05', and it was at the top of the column. Below it, a vertical list of numbers began with '1.0', and grew steadily higher. The column colours changed from green, to yellow, to red. Another parallel column also had growing numbers, from 1 to 150. A few other text boxes had variables in them, which she was changing repeatedly. \n\n\"So you're 58.05?\" I joked. \"I had you pegged more as a 98.3 kind of girl.\"\n\nBailey snorted, and nearly peed herself laughing. \n\n\"Boy are you ever gonna regret that when you find out what it means!\" she howled. And howled. Finally, she got herself under control. \n\n\"Okay! Shit, that's so funny!\" she gasped, catching her breath. \"I assume you're giving me a grade, out of 100?\"\n\n\"Um...yes?\" I said sheepishly. \"I would have given you 100, but your left little toe is crooked.\" She looked at her foot. \n\n\"Uh huh. Okay. No. It's my weight, dummy!\" She watched my face as I realized that she hadn't weighed 58.05 pounds for decades. So... \"It's in kilograms. Wanna retract your statement?\" \n\nDamn metric system. Let's see...kilos to pounds...times 2.2...carry the one...except on a leap year, or during an eclipse. Oh shit! 217 pounds! \n\n\"Yes please,\" I begged. \"Would you believe 55?\"\n\n\"Awww...aren't you sweet.\" She kissed me softly. \"So,\" she pointed, \"me, height of drop, time, g-forces...these green numbers are safe. Yellow is dangerous, and red is...\"\n\n\"DEAD!\" I gasped. \"I don't like dead. I rather like my girlfriends alive and kicking.\"\n\n\"Girlfriend? I like that,\" she smiled. \"I agree. Dead is no good. So we use a bigger airbag.\" Her fingers changed a few values. The green now reached further down the column, as did the yellow. The red zone was now just the last few rows. \"Much better. Still scary, but doable.\" \n\n\"I still don't like it,\" I said. No smile this time. I was serious. \"How high?\" \n\n\"I'd rather not say,\" she replied, and kissed me. \"It will only make you worry, and I was trying to avoid that. That's why I came out here while you were asleep. You weren't supposed to wake up, and catch me.\" \n\nI grabbed the laptop. Now that I knew what to look for, I could read the jumble of figures. \n\n\"It's in the green, though, right? Please tell me it's in the green!\" I said desperately. The green went down to 90...meters! It's hard to believe that a fall from almost 300 feet could ever be considered 'safe'. \n\n\"I'd like to honey, but that would be a lie,\" she said looking me in the eye. She suddenly looked so small, and delicate, despite her confidence. \"102,\" she relented. \n\n102 meters... 334 feet was well into the yellow zone...and closer to the red than I cared to think about. \n\n\"ARE YOU FUCKING NUTS?!\" I bellowed. It came out harsher than I intended. \n\nBailey sat there calmly, naked, legs crossed, arm across the back of her chair. Her eyes were placid...peaceful even. When she spoke, it was with a confidence borne of experience. \n\n\"Eddie, honey...I know you're worried, but please don't say stuff like that. I've done this before. This is higher, but I've done it before, so please trust me when I say I'm sure it will be fine. I don't take uncalculated risks. I have every intention of rolling out of that airbag, waving at the helicopter, and going to lunch with you.\"\n\n\"Helicopter?\" I asked, still unconvinced. She rolled her eyes, and stood up. \n\n\"Oy! Look honey, it's almost three weeks away. Now, you can worry about it for three weeks, and waste our time together, or you can trust me, and get your ass in the bedroom. I could use a good pounding with that big dick!\" She walked slowly away, turning into the bedroom. She stopped and looked back at me, extending her hand. \"Come on, baby.\" \n\nI glanced down. My penis was soft, shrivelled, and scared...hardly 'big dick' material. \n\n\"Okay,\" I nodded, starting toward her, \"but I think I'll need some help. My little buddy is worried, too.\"\n\n\"Mmmmm. I think I can handle that,\" she smiled, as I took her hand. \"After all, I'm a professional.\" \n\n***\n\nShe did. Handle it, that is. Also suck it, which was a marvellous distraction from the ghastly images racing uncontrolled through my head. Eventually, she sucked those images right out of my skull, and replaced them with much more pleasurable ones. \n\nThere's one now. I was looking up at her marvellous tits, as they weebled and wobbled with her movements. She was rising and falling smoothly, skewering herself on my prong. Her eyes were locked on mine, peeking through the gaps in her blonde hair as it dangled across her face. Her plump lips, so moist and delicious, were parted as she panted through her exertion. This was much better than the thought of her twisted, broken body, after the unsuccessful high fall stunt. ",
        "There I go again, ruining the moment with things better left unthought. She's here, she's alive, and she's one helluva fuck. Isn't that enough for right now? \n\nThe internal argument began, as the practical me fought with the part that really wanted more from this relationship. The part that cared more about Bailey and her safety than I would admit. \n\nThis whole point is moot. You knew what she did before things started. Hell, remember watching the car hit her? Wasn't that scary? This is what she is, and that's part of the appeal. No strings, lots of fun, great sex, and she's gone for a while. The perfect girlfriend. \n\nYes I know that. I don't expect her to stop being her. She's a wonderful woman, and that's why I'm falling in love with her. I do trust her. She is a professional, and always is well prepared for her gigs, but I can't help worrying about her. How could I not? It's a dangerous business. \n\n\"Helloooo? Are you in there?\" I heard. Bailey's pretty blue eyes penetrated the haze. She was leaning forward, resting her breasts on my chest, and squeezing her pussy around my shaft. I focused again, and she smiled. \"Ah, there you are! I thought I lost you.\" She pecked me on the lips. \n\n\"Sorry, honey. It's a lot to digest. Please don't be angry,\" I said softly. I'd never had a woman stop fucking me because of distracting thoughts before. Of course, I'd never had a woman like Bailey before, either. \n\n\"Angry? Because you care about me, and my safety?\" A soft smile crossed her lips. \"I'm still a woman, you know? It's nice to be cared about. I'm not angry. I just don't know what more I can do to ease your mind.\"\n\n\"Dar Robinson did this, didn't he?\" I asked her. She smiled. \n\n\"You've been searching the Internet, haven't you?\" she giggled. \n\n\"Well, my girlfriend is a stunt performer. I was curious.\"\n\n\"There's that 'girlfriend' word again,\" she grinned. \"It's going to go to my head.\" She was still resting on my chest, gazing into my eyes from inches away. She traced a fingertip over my lips, then kissed me. \"Yes, Dar did this, several times. Successfully. He set the standard. He also showed us what not to do. He died doing a stunt he'd done a thousand times. It was nothing, a milk run, on a motorcycle. He made the mistake of taking it too lightly. No matter how many times you feed a tiger, it's always going to be a tiger, and always capable of taking your life. If you remember that...and I do, every day...you stay in control.\" Another kiss followed. \"Trust me, please. I know it's dangerous, but that's the point. I won't take anything for granted, and I won't do it until I feel absolutely comfortable with the setup.\"\n\n\"Comfortable? Somehow that wouldn't be my choice of words,\" I laughed. \"334 feet from a helicopter is a long way down. How long will you be in the air?\"\n\n\"About six or seven seconds, but they shoot it slightly faster than normal, so it looks longer. It's actually kinda fun, and one hell of a rush.\"\n\nIt occurred to me that I would never be comfortable with the idea of her doing what she does, and she would never stop doing it to make me comfortable. That left me with a simple choice to make ; trust her to be in control of her own safety, or...walk away. \n\nAnd...I didn't want to walk away. I had become attached to her. This conflict proved it. I took a deep breath, and let it out slowly. \n\n\"Okay. It's going to take a bit of getting used to,\" I smiled, \"but I'm with you. I trust you.\"\n\n\"Good. Now...\" she whispered, flexing her pussy around my cock, which had softened, but was still inside her, \"...Where were we?\" \n\nBailey leaned closer, and kissed me again. Her soft, luscious lips tasted so sweet, and she playfully pulled back several times, not allowing my tongue to reach hers, despite my repeated attempts. Finally she relented, and we locked together. The passion of the embrace did the trick, flipping my internal switch from 'concerned' to 'aroused', and causing a corresponding reversal of blood flow to my penis. It began to swell again, and she noticed immediately. \n\n\"Ooooo...he's baa-aaack!\" she giggled, giving it a pelvic squeeze. \"I love that feeling of it growing while it's already inside me.\" She resumed the kiss, waiting until I was fully hard before she began to stroke herself again. Soon she was sitting up again, high in the saddle. I was the horse, and I watched her bounce enjoyably on my very appreciative erection. \n\nBounce was the word. If you've been paying attention at all, I'm sure you can guess why, and that I found it hypnotic. Bailey's perfect breasts dangled in my face, jiggling jauntily, and urging me to partake in some nipple stimulation. I was happy to do so, and gathered one of the stiff little nubs into my mouth, suckling deeply. She moaned softly, and stroked my hair. \n\n\"That's my good boy...all stiff and hard for me to ride, and sucking my tits so nicely,\" she smiled. \n\nWith my fears somewhat assuaged, and pushed aside by my libido, a certain level of normalcy returned to our day, and to our relationship. Well, normal for us, anyway. \n\nWe reconnected, and for about a week, we were just like any dating couple. Walking arm in arm, dinners out, movies...all the usual stuff. \n\nMostly we had sex, though. Lots of sex. Lots of deeply satisfying sex... satisfying on more levels than merely the physical. It was lovely, and confirmed the thoughts and feelings of the last two years in her absence. \n\nShe had me hooked. \n\n***\n\nI had some vacation time coming, so I took a break from pointlessly shuffling papers at my office job to become more involved in Bailey's stunt. By 'involved', I suppose I was being ambitious in my description, as I was merely in attendance while she did the work. She was all for me being there, confident that I would feel better about things if I was able to see all the planning that went into the preparation. \n\nShe was right, of course, but feeling better was a relative term. On a scale of 1 to 10, where 1 is totally relaxed, and 10 is scared shitless, I went from a 46 down to 18. A huge improvement, but it fell well short of giving the whole thing a glowing recommendation. \n\nIf it wasn't totally comforting, it was at least interesting. Very interesting. I was amazed at how much technology was involved. And math, lots of math. Next time someone complains about things they learned in high school that they've never used, smack them up the side of the head for me. Of course, a lot of this is brought about by the fact that it's difficult to hang a plumb bob from a helicopter 334 feet in the air, and say 'put the airbag here'. Even if you could, it would be hard to put the chopper back over the exact same place again. That's where GPS comes in. \n\nYes, it's good for a lot more than finding your way to Grandma's house. As the technology has matured, it can now do more than tell you to turn right on Main street, and with a sensitive enough receiver, it is possible to know your exact location on the planet, in three dimensions, within 5 meters. \n\nHowever, 5 meters is an awfully big error from 102 meters up. It's partially because of the lag required to process the signals from satellites that are so far away, and moving relative to the receiver. \n\nSo, for purposes of avoiding a disastrous miss of the target, they create their own signals, aimed up, instead of down, from a set of four transmitters placed in extremely precise locations around the dead centre (there's that word again...dead) of the airbag. Those signals are strong, direct and on a discrete frequency. They allow the pilot to know the exact height of the helicopter to within inches, and the position over the target with equal accuracy. \n\nThat's accuracy I can live with. Bailey even took me for a ride in the chopper to show me the system at work. It was pretty impressive, especially when she dropped a paint marker as we hovered over the zone. \n\nOnce we landed, she walked me over to the markings on the ground where the airbag was to be placed. The area was about to size of a small single story house, about a eight hundred square feet, with lines that crossed diagonally from corner to corner, marking the exact centre. \n\nThe paint blot was only a foot and a half off centre. \n\n\"Feel better?\" she asked. \n\n\"Much,\" I smiled. Down to about an 11. \n\nNow that I knew her beautiful body wasn't going to miss the target due to error, there was only one real issue ; the target. \n\nPerhaps you've heard the saying 'it's not the fall that kills you, it's the sudden stop'? Truer words were never spoken. The emphasis should be on the word 'sudden'. \n\nYou can fall thirty feet onto concrete and die. Very sudden stop. You can also fall a hundred feet into water and live. It's not just that water is softer. Ask anyone who's done a belly flop in a pool how soft water is. It's also that it spreads the deceleration over a longer duration, and that reduces the g-load to survivable levels. \n\nThat's where the airbag comes in. The trick is to adjust the deflation speed so that it's not too slow (she'd just bounce off) and not too fast (splat). It has to be in the appropriately named 'Goldilocks' zone ; just right. \n\nTo make sure that was the case, Bailey ran several trials, tossing a g-sensor equipped dummy out of the helicopter, then checking the data. The deflation gates were adjusted, and the test was run again, over and over until the g-loads were well within the green. WELL within. \n\nMy anxiety level dropped into the green, as well. I trusted Bailey, but in truth I needed more than just 'trust me because I say so'. She knew that. \n\nThat's why she wanted me to see her process in action. Now that I had the understanding, I could relax. \n\nAt least, until the day I would have to watch my darling throw herself out of a helicopter. \n\n334 feet. \n\nFuck. \n\n***\n\nJust to prove the equipment was functioning perfectly, Bailey spent some time every day in the chopper, tossing paint markers of various colours out of the open door. By the time she was done, there was a multicoloured paint blot three feet in diameter, in the centre of the cross hairs. She was satisfied, so I was, too. \n\nI would prefer the only falls she took be into our bed, from my arms... but if she had to do it, at least I knew she was well prepared. \n\nAs if my anxiety level wasn't high enough dealing with the 'big fall', Bailey's physical talents were required for another stunt, as well. \n\nThis one was a car stunt, pretty simple, but still dangerous. \n\nAccording to the script, Scarlett's character is driving the car, and fighting with her passenger, one of the antagonists in the film. After an elbow to the head that stuns the bad guy, she opens the door and bails out, just as the car goes off the road, and over an embankment. \n\nIt was a perfect example of how the movies trick us, because that one scene was a combination of several shots. Some were using Scarlett herself, in a car on a trailer. Some were externals, and close ups. Then there was Bailey's bit, a relatively small section, if you went by time. But without it, there was no conflict resolution, and Scarlett's character dies along with the baddie. \n\nCompared to the high fall, this one was simple. That's also what made it dangerous. As Bailey had said, Dar Robinson took the stunt that killed him too lightly, made a mistake, and died. She promised not to make that same error, but she had to be distracted by the much more difficult action to come. \n\nI was so proud of her. She truly was a consummate professional, and walked through this gig with her usual, thorough attention. Only when she was totally satisfied did the cameras roll, and I watched her tumble out the drivers side door with perfect timing. The camera just below caught both Bailey and the car as they arced through the frame, and another recorded the car as it flipped and crashed down the hill. \n\nBlocked from view by strategically placed bushes, a landing pad and net accepted Bailey's body on its ballistic trajectory, and brought her to a safe stop. \n\nPiece of cake. Next. \n\nA few clean up shots with Bailey running and diving down the hillside into those bushes followed. Later, Scarlett would do close ups amid branches and flying dirt, looking pretty and exciting for the audience, but I would always know who really risked her life for our entertainment. \n\nWith her day complete, I took my girl home. I had my own job to do for her. \n\nThe shower in my apartment was more spacious than the one in her trailer. Within minutes of arriving at home, we were both under the soothing spray, and I was inspecting her for damage. Two bruises, and a small abrasion on her hip left me a very short list of places that required my boo boo kisses, and I quickly moved on to areas I was kissing for pleasure alone. That was a much more comprehensive process. \n\nAfter I dried us off, we retired to the bedroom, where I resumed my duties. \n\n\"Would you like a massage?\" I asked her. \"I'm not a pro, or anything, but I'm willing to give it a shot.\"\n\n\"Well duh!\" she giggled. \"I make it a rule never to turn down a massage.\" She arranged herself on her stomach quickly, just in case I changed my mind. \"Please. Do me.\" \n\n'Do me' gave me a lot of latitude. Okay honey. Prepare to be done. \n\nI put some lotion on my hands, and began with her upper back and shoulders. Despite her feminine appeal, she was very strong and muscular. I didn't hold back, leaning into my hands fully. I knew she wouldn't break. \n\n\"Mmmmm,\" she groaned. \"I could get used to this. Okay, you're hired.\"\n\n\"We didn't even discuss salary,\" I said quietly, digging into the base of her neck. She moaned deeply, and exhaled. \n\n\"Oooooooooo, I think you'll find my...ohhhhhhhhhhhhhhh...bennnnnefit package is woooooorth whiiiiiiile,\" she smiled. \n\nBenefit package? Cute. I liked it. \n\nAs I continued to work on her, it occurred to me that this might be the perfect time to ask some of those questions I wanted ask. Relaxation should get me some answers. \n\n\"So honey, you said you missed me?\" I asked her. \n\n\"Huh?\" she moaned. \n\n\"When you arrived at my apartment...remember?\" I said, still kneading her shoulders. \"That night, you said you missed me. Did you?\" \n\n\"You're asking me about that now?\" she giggled in a lazy, almost sleepy voice. \"It's been weeks.\"\n\n\"Well, I forgot about it, and just remembered,\" I smiled, moving down her back. She groaned again. \n\n\"Yes honey, I missed you,\" she breathed. \n\nOne down. Now the harder one. \n\n\"How many other 'tension releasers' have you had the last two years?\" I asked, hoping it didn't sound too accusatory. \n\n\"Are you sure you want to ask me that?\" she whispered. My hands were working her lower back, just about to move onto her ass. \"How many girls have you had?\" \n\n\"Three,\" I answered freely. \"I kept comparing them to you, and they didn't match up well. You're a tough act to follow.\" \n\n\"That's very sweet of you to say,\" she sighed. I was now kneading her muscular behind, and occasionally dipping into her crack to tease her a little. \"Two,\" she breathed, \"for largely the same reasons.\"\n\nShe turned her head in my direction, and opened her eyes slowly. \n\n\"You're hard to follow, too,\" she smiled. \n\nAs well as pumping up my ego, and my dick, her admission gave me hope that she was feeling that same way I was...that we were more than just the physical act to each other. \n\nMy hands had paused while she was speaking to my heart, and now I resumed, shifting down to massage her feet. I had never known a woman who didn't melt during a good foot massage, and Bailey was no exception. \n\n\"Oh god, yes honey,\" she groaned. \"That's so good. I love it. Keep going, please.\"\n\nNow, don't get me wrong, but...rubbing her feet was as far away from the bits I wanted to touch as I could get. As much as I loved pleasing her, I wanted a little something myself. \n\nI switched feet often, eliciting the moans of joy I was seeking. Moving up her legs, my hands worked her calves deeply. Based solely on her vocalizations, I'd say she was enjoying this as well, and when I began to move north again, she spoke. \n\n\"Are you sure you're not a professional?\" she sighed, \"because this is heavenly. I think I love you.\"\n\nI froze for a second, then kept going while considering my response. It took me a few seconds to sort it out, and she beat me to the punch. \n\n\"I hope that didn't come out wrong,\" she said quietly. \"I don't want to put extra pressure on you, and I know that my career would make any man think twice before making an emotional commitment...\" \n\n\"Shut up,\" I laughed, smacking her ass. \"I love you too, so stop making excuses.\"\n\nBailey giggled, and lifted her butt a few inches. \n\n\"Want to spank me again?\" she asked, flexing her firm glutes. \"I'm a very bad girl.\" \n\n\"Yes you are,\" I smiled, rubbing her thighs deeply. \"That's one of the things I love about you.\"\n\nShe laughed again, and relaxed, lowering her backside to its resting position. Her thighs spread a few inches, giving me more access as I continued working her hamstrings. I could feel her beginning to shiver. \n\n\"Cold?\" I asked, pausing my actions. \n\n\"Horny,\" she replied, spreading her legs a little more. \"Don't forget to rub... everything.\" \n\nHmmm, let's see...neck, back, butt...feet, calves, thighs...I had covered everything on this side...except... \n\nI dipped my hands between her lean yet muscular thighs, and slid upward. She inhaled in anticipation, and groaned as I just grazed her labia, on the way to tease her tight little sphincter. I ran my fingers over it several times, plucking the rim gently. Bailey sighed, and her ass did a little dance under my digits. One hand reached back, and captured my hand, pulling it away from her puckered rosebud. She rolled over deftly. \n\n\"Darling, it's not that I don't like having my back door pleasured,\" she smiled, arranging herself for comfort and free access, legs spread. \"Someday, I might let you break it in for me, but today, I'd like it in the traditional opening.\" She put my hand on her mound, then pressed her fingers over mine. She hooked my fingers between her puffy, slippery lips, then left me to it, reaching for my own obvious arousal. \n\n\"You play with mine... I'll be checking out yours,\" she giggled, pulling me closer, and twisting her body to bring my weapon within range. She smiled, and licked the head of my cock. I watched her lips open, and slide so deliciously over my shaft. \n\nIt's a good thing that my bed sits quite high, otherwise this could have been an uncomfortable exercise of contortions. As it is, her body was laid out nicely on a platter, and I was hungry for a taste. \n\nMy right hand burrowed deeper between her thighs, my two middle fingers worming inside her damp cleft. My cock was disappearing into Bailey's mouth, and her moans vibrated through my loins, encouraging me to probe deeper still. \n\nMy left hand was stroking her beautiful blonde mane, but... If I turned my shoulders just a bit I could reach her breasts. Mmmm, so soft, yet resilient, and enough to fill my hand beyond capacity. So now I had both hands busy, giving a decidedly personal massage, and receiving one as well. \n\nMy fingers plunged in and out of her pussy, and she was sucking me furiously. It was an unspoken race to see who would pop first. She was winning, but I had a little trick that might turn the tide for me. Now... where is that...ah, there it is. A patch of texture, deep inside, on her anterior wall. \n\nI rubbed across it firmly, pressing in harder, and causing her to gasp around my cock. A deep groan followed, and what I interpreted as 'oh my god', mumbled past her cocksucking lips. Target acquired...full speed ahead. I began to stimulate her mysterious, mythical, but totally real g-spot, pressing, rubbing and thrusting at warp speed. ",
        "My cock fell out of her mouth as she tilted her head, and screamed. \n\n\"Oh shit, oh shit, oh shit! That's it! Ohhhhhhhhhhhhhhh fuuuuuuuuuuuuuuck!\" \n\nHer body bucked, and she came. Bailey didn't squirt... at least, I hadn't made her squirt yet, but I'd keep trying to coax Old Faithful into action. I guess the best description would be a gush, and my hand was quickly coated in her warm, delicious honey, while wet sucking sounds came from her pussy. My fingers were awash, but kept torturing her spot, prolonging her orgasm. \n\nHer nipples were standing up like radio antennae, and she was screaming unintelligible words of joy, until she couldn't take any more. Grabbing my wrist with both hands, she yanked my fingers away, then melted into the bed, gasping for air. \n\n\"So...\" she panted, \"... You're worried I... might get...get, um... hurt... doing a...stunt...and then you try...to kill...me?! There's no software to prepare...for you!\"\n\nThere she goes again, stroking my ego. Also my cock. She pulled me into her mouth once more, and tilted her head back, giving me a straight shot down her throat. \n\n\"Fu' m' mouf,\" she moaned, and grabbed my hands, placing them on her breasts. \" 'um 'n m' 'oobs.\" \n\nPretty sure I got the first one... 'fuck my mouth'. The second one involved her boobs somehow, but I'd figure that out as I went. \n\nI loved it when she did this, taking me all the way down her throat. Blowjobs are incredible, but this routine was even better, and she knew that I was powerless to resist. Her hands reached around and grabbed my ass, pulling my shaft in until my balls rested on her nose. I grasped her perfect tits, and began to thrust gently, while she moaned encouragement. \n\n\"Oh fuck, baby, that's so fucking good,\" I grunted. \"Gonna cum soon!\" \n\nBailey's hands left my ass, and gestured, pointing at her chest frantically. The light bulb went on over my head. Oh...cum on my boobs! Got it. \n\nA few more strokes into her sucking mouth, then I pulled back, and went to manual control, fisting my shaft while she licked my balls. The added stimulation pushed me over the edge, and I aimed at the centre of her cleavage. \n\nSeveral spurts of gooiness leapt out, landing with a 'splat' across her curves. Over and over, my nuts surged, and ropes of cum painted her tits. She dragged her fingers through the creamy mess, then licked them clean. \n\n\"Mmmmm mmmmm, good,\" she smiled. \"Thank you for relaxing me, darling.\" \n\nI was something of an expert on relaxation right now, as all my bones had apparently turned to jello, and I was collapsed in a pile on the floor. \n\n\"You're welcome,\" I replied. \n\n***\n\nIt was time. \n\nI watched the helicopter lift off. Bailey waved, and blew me a kiss, then went back into concentration mode. I heard the chatter on the radio between Bailey and the pilot, as he called off the altitude and range. \n\nA huge hand thumped across my back, and I turned to see Keith smiling down at me. Moral support. He knew how much she meant to me, without ever asking. \n\nThe cameras started to roll as they neared the drop zone. The tension was very high on set. Everyone knew this was dangerous, and I wasn't alone in my concern for her safety. \n\nBailey's voice penetrated the silence, loud and clear on the radio. \n\n\"Ohwha... Tajer... Kiam!\" she intoned, then repeated the mantra. Members of the crew joined in, softly, as she sped up. \"Ohwha... Tajer... Kiam! Ohwha... Tajer... Kiam! Ohwha tajer kiam! Oh what a jerk I am! Geronimo!\"\n\nAs I craned my head upwards, a figure leapt out of the hovering chopper. I knew who it was, and my ass puckered tight, as I held my breath. My heart raced, and I said my own little prayer. She kicked, and flailed wildly as she fell, part of her performance, and only as she neared the bag did she pike neatly and flip onto her back. \n\nWhuuuuuuuump! \n\nI felt the blast of air as it exited the airbag, even from fifty feet away. The gates fluttered and extended like party favours, until they had performed their function. \n\nThe safety crew...with me hot on their heels...was on the move before the director yelled 'cut', reached the edge of the bag within seconds. I held back, and let them do their jobs. \n\nIt was the longest ten seconds of my life... until Bailey crawled out of the tangle of nylon, and stood up. As promised, she waved to the chopper. Everyone broke into a loud cheer, and applauded. She was fine. Undamaged. Exhilarated. \n\nShe pounced on me, first giving me a hug that would make an anaconda jealous, then a kiss that made several crew members cover their eyes in mock embarrassment. \n\n\"See?\" she giggled. \"Told you there was nothing to worry about!\" We began to walk off the set, side by side. \n\n\"I know, I know,\" I smiled. \"I guess I just worried about being a widower before I got a chance to ask you to marry me.\" \n\nOops. That wasn't supposed to come to light quite that way. I had planned to ask her tonight, when we were alone, in some romantic fashion, not when we were both overdosing on adrenaline after the most stressful and exciting day of my life. \n\nShe froze, and turned slowly to face me. She looked more nervous right now than she had throughout the whole process of planning to jump out of the helicopter. Her face was pale. \n\n\"Eddie...did you just...?\" she asked, and staggered slightly, nearly fainting. \n\nWe were still quite close to the safety crew, and when she looked unsteady, they were on her instantly. Four medical staff members were suddenly pushing me aside, as they swept her away. \n\nBefore you could say 'marry me Bailey', they had her on a gurney, with people taking her blood pressure, pulse, and checking her perfect blue eyes while they rolled her along toward the waiting ambulance. \n\nThroughout the journey, Bailey protested. The oxygen mask muffled her words. Those words became laughter, as she realized resistance was futile in this case. She laid back and let them do their thing. \n\nFrom the periphery of the scrum, I watched and listened. I was amused, but a little concerned. It was possible her near faint was related to the stunt, and not my clumsily worded proposal. The medical staff hadn't heard our conversation, so when they saw her unsteady on her feet, they reacted accordingly. When in doubt, they erred on the side of safety. I appreciated them looking out for my girl. \n\nAccording to what I was hearing, Bailey's pulse was a little high. Understandable, even without the proposal. Her blood pressure had been low for a few seconds, but had now returned to normal levels. Her eyes were clear, she showed no signs of a concussion. She was talking to them quietly, and gestured to me. Two of the EMT's looked over at me, then back to her... then back to me with smiles on their faces. One of them nodded, and started to walk in my direction. \n\n\"You're Eddie?\" she asked, as she stopped in front of me, adjusting her stethoscope. I nodded. \n\n\"Is she okay?\" I asked in response. \n\n\"Her vitals are all good now, but we're going to take her in for observation anyway, just to be safe. The drop in blood pressure has us concerned, but it's fine now,\" the pretty brunette said, then smiled, \"and I think we have a possible reason for it. She says you sort of...asked her something... something important?\"\n\nI smiled, and nodded. She smiled back. \n\n\"Well, I've been asked to tell you that the answer is 'yes', and she asks you to meet her at the hospital.\" With that, she patted my arm, and went back to the ambulance. \n\nYes. She said yes. Well, at least we'll always have an interesting story to tell about the day I proposed. \n\n***\n\nIt took me longer to get out of the area than it took the ambulance, for obvious reasons. I was in no major rush to get there. They'd have her quite sequestered for a while, doing all that medical stuff that they had to do. I took my time. I had to go home anyway, to get the ring. \n\nAlong the drive, I had time to relax and think. Now that I was emotionally invested in her, I found her career mentally exhausting. I doubted that I would ever get used to the woman I loved being in such dangerous circumstances. The buildup of anxiety and tension beforehand was overwhelming. \n\nAfterward, though, I was surprised to find that I felt not only relief, but exhilaration, almost as though I had been with her throughout. If this is what she feels, I can understand the attraction. Adrenaline is a very powerful drug. I could also understand her need to get that release after the fact. Just now, I hoped to be the only one providing it. \n\nArriving at the hospital, I checked at the nurses station to see where she was. I was directed to a room down the hall, where I was told they had her wired for every function known to medical science. \n\nIt seems that on her initial examination, everything had been well within normal ranges. The doctors were questioning why the EMT's even brought her in. Upon hearing about the long freefall, and the near faint, it was decided she needed more observation, just in case there were internal reasons for her faint. \n\nThe information about my proposal was omitted. They assumed that reason had to be physical, not emotional. I hoped they were completely wrong, and would gladly take the blame. \n\nI walked down the hall, and stopped in the doorway, leaning against the jamb. She was laying in bed, and indeed looked like she could get HBO beamed directly to her brain, with wires coming out of nearly every part of her. Half a dozen monitoring devices beeped and whirred in the corner. She looked small and delicate again. Also kind of sexy. \n\n\"Some big tough stunt woman you are!\" I laughed, and she snapped her head in my direction. A smile. \"Hit by a car? No problem. Jump from a helicopter? Piece of cake. But...make one little proposal, and you faint. I'm disappointed.\"\n\nBailey looked at me and pouted, like a child being chastised. \n\n\"I wasn't prepared,\" she smiled. \"You surprised me. Next time, warn me beforehand!\" \n\n\"Next time?\" I asked rolling my eyes. \"How many times do I need to ask you to marry me?\" \n\n\"Maybe just once more,\" she giggled. \n\n\"Okay, fine...\" I sighed. \n\n\"Don't forget to warn me,\" she reminded me, grinning like a Cheshire cat. \n\n\"Right. Fair warning. Are you prepared?\" I asked. She nodded. I dropped to one knee. \n\n\"Oh my god!\" she gasped. \n\n\"Bailey...will you...?\" \n\n\"Yes, yes, yes!\" she blurted, cutting me off mid sentence. \n\nI was going to drag it out a little longer, but the poor girl had been through enough already today. So had I. I cracked open the box, and retrieved the sparkling solitaire from inside, placing it on her offered finger. She tittered happily. \n\n\"Ah, there's the reason,\" a voice said from behind me. \n\nWe both looked in that direction, to where two nurses were standing, looking into the room. I was still on my knee. Their concerned faces were slowly melting away, to leave smiles instead. \n\n\"We monitored an increase in pulse, respiration, and blood pressure. Now we know why,\" the taller nurse laughed. \"Carry on. Don't let us stop you. What's the answer?\" \n\n\"I said yes,\" Bailey replied, as I stood again. She pulled me closer, and kissed me. \n\n\"Well then, congratulations,\" she smiled. \"I'll make a notation on your tracing ; 'vitals momentarily elevated due to marriage proposal. Affirmative response'.\" With that, they left us alone. \n\n\"You are so going to get fucked when I get out of here,\" Bailey purred, holding her hand up to admire the bauble. \"With any luck, that'll be in an hour or so, unless you have anything else to say that might make me faint?\" \n\n\"Hmmm,\" I smiled, counting on my fingers. \"Did I mention that I'm pregnant?\" \n\nI'm not sure what effect laughter would have on her diagnostics, but they probably heard us from down the hall anyway. I thought she was going to pee herself again. That laughter was the best medicine for both of us, releasing all the remaining tension from a day that was chock full of it. \n\n***\n\nBailey's estimate of her release time was a little optimistic, but the exact time didn't really matter. She was perfectly healthy. No concussion, no internal bleeding, no broken bones...not a scratch. Other than agreeing to become my wife, she was the same beautiful, sexy woman who woke up in my arms this morning. \n\nWe strolled out of the hospital entrance, with her holding her left hand out. The diamond shone on her finger, and she giggled like a schoolgirl, pressing herself against me. She felt wonderful, as usual. When we reached the car, I opened her door, and she looked up at me lovingly. Her arms circled my neck. \n\n\"You know, just because you proposed, it doesn't mean you get out of doing your job,\" she kissed me softly. \"I could really use a release of tension, tonight.\"\n\n\"Yes Ma'am,\" I smiled, caressing her back as she snuggled into my chest. \"Home?\" \n\n\"Eventually,\" she breathed, \"but I'm feeling al fresco. Can you think of a place where we can satisfy that feeling?\" \n\n\"I've got just the spot,\" I laughed. \"It'll take about an hour, but the wait should be worth it.\" \n\n\"Well, what are you waiting for,\" she grinned. \"Tally ho!\" \n\n***\n\nAs it happens, I was off on the time it took us. Traffic had been light, and we rolled to a stop in the parking area high in this little coastal village overlooking the ocean inlet. I had lived in the village years ago, and used to make this short hike often. \n\nWalking together further up the mountainside, through the heavily treed area, I held Bailey's hand. She was quiet, and I had little to say as well. \n\n\"Are we there yet?\" she giggled, her first comments since we started up the trail. \n\n\"Getting close,\" I answered. \"If memory serves, it's just up ahead a bit. I think it will be worth the effort.\" \n\nA few minutes later, we had reached the plateau, and cleared the trees, stepping out into the open. Bailey stood silently, awestruck. \n\nWe were probably almost a thousand feet up, looking out over the inlet through a wide vertical ravine. To the left, trees provided a framing element for the view. To the right, vertical rock set the boundary. Dead ahead, we were staring down the barrel of a spectacular sunset, just beginning, as the mountains and wispy clouds to the west began to cast their shadows. \n\n\"Wow...\" she whispered, and turned to face me. A bright smile crossed her face. \"Maybe just once more?\" she asked. \n\nIt took me a minute. Once more? Once more for what? She wasn't helping, so I had to figure it out. Something I've already done, probably today? Ah, of course...\n\n\"Bailey, will you marry me?\" I asked, for the third time today, sort of. As long as the answer was the same, I'd be happy to ask her a few more times.\n\n\"Yes,\" she smiled, and kissed me again. There was a large shelf of rock that stepped down the cliff face, and she took a seat on the edge, patting the warm, sunlit spot beside her. \"Let's watch the sunset for a few minutes. Then you can...\" she arched her eyebrows, \"you know.\" \n\nI had a better idea than merely sitting beside her. I stood on the next ledge down, about four feet below, and leaned back against the vertical surface, facing the sun as she was. Bailey wrapped her arms around me from behind, and leaned forward, resting her big soft breasts against my neck. She toyed with my hair, and kissed the top of my head. \n\nSilently, we watched the sun slipping slowly behind the mountains. Standing, wrapped in her loving embrace, with the warmth of the sun spotlighting us, in this beautiful, idyllic setting... It could hardly get better than this. \n\nWell...actually it could, and that's exactly why we were here, wasn't it? \n\nI let her decide when she had seen enough romantic sunset. Personally, I would have had her naked by now, and bent over a convenient boulder, but she wanted to let the moment sink in, so it was her choice when it should end. Fortunately, I knew she was every bit as horny as I, and wouldn't need to wait long. \n\nI felt her shifting position behind me, then her tongue was teasing my ear, and her hands were rubbing my chest. \n\n\"Now,\" she whispered, \"I assume you brought me out here into the wilderness to get me alone, and take advantage of me.\" I turned in her arms, and looked at her smile. \"Or would you prefer I take advantage of you, instead?\" \n\nShe giggled, and kissed me deeply, pulling me close to her chest. This position was a little too high for actual sex, but for necking and playing with her body, it was nearly perfect. My hands wasted no time unzipping her jacket, and sliding inside to fondle her breasts softly. She shrugged the jacket off, and pulled her t-shirt out of the waist of her jeans. Our lips continued to feast on each other hungrily. \n\nSoon, she had peeled the shirt off over her head, and I had only her bra between my hands and her perfect breasts. That lasted seconds, before it joined her jacket and shirt in a pile on the rock behind her. \n\nHer nipples were standing up, thick and tall. It could have been the cool breeze, but I chose to believe it was me, and her arousal. Either way, since she was so conveniently positioned for nipple nibbling, I leaned in and grabbed one of her stiff, pink buds with my lips, suckling softly. \n\n\"Ooooo, that's nice, baby,\" she smiled, stroking my hair and holding my head close. I grazed on her nips for a few minutes, while my hands worked on unzipping her tight jeans. She helped, then untied her shoes, tossing them over her shoulder. \n\nLifting her hips, she skinned her jeans off, letting me tug them off over her feet. She knew where I was going, and moaned a few words of encouragement, laying back on her pile of clothes. The panties that matched her bra were too pretty to rip off, so I gently peeled them up her thighs, and off. \n\nBailey was a professional athlete, of a sort, so her body was not only firm and strong, but also flexible. She spread her legs wide, holding them high and straight. \n\n\"Ah,\" she breathed, \"there's something about being naked in nature that makes me very wet.\" She dipped a finger between her puffy labia, and offered it for me to taste. It was slick to the second knuckle. \"See?\" \n\n\"I'd rather taste for myself,\" I laughed, hooking her legs over my shoulders. She sighed, and laid her head back, licking the wet digit clean herself. \n\nShe was wet, and as always, delicious. I buried my face deep in her gash, worming my tongue in further to drag more of her ambrosia out. \n\nThis was a unique situation. I'd never eaten a woman's pussy in broad daylight, and full view, before. Okay, the light was waning, and we were alone and isolated, but this trail was well used. If people were coming down the mountain before dark, we would be hard to miss...a naked goddess, legs splayed wide, with a man feasting on her gaping, oozing pussy. I suppose that thought had crossed her mind as well, and may have contributed to her dripping wet condition. \n\nMy tongue and lips worked their magic, teasing her succulent lips, nibbling on her clit, and probing her sopping wet depths. I knew from experience that if we were home, in my bedroom, she'd be screeching her bliss at the top of her lungs from the first lick. Here though, she was trying to stay quiet, and that was only making me more determined to get her to scream. \n\nI added two fingers to the package, and within seconds she was quivering. A puddle was accumulating on the smooth rock under her butt. She was moaning softly, and her stomach was clenching tight under my hand. The orgasm she was fighting back was a doozy. \n\nI flicked my tongue rapidly across her clit again, and was rewarded with a yelp, so I latched onto the engorged button and sucked hard. Her thighs shook, and... \n\n\"mmmnnaaghhhnnoooOOHHMMMYYYYYYGODDDDD!!\" she shrieked, twisting and bucking in my grasp. Her abrupt scream echoed off the stone around us, but I was too busy slurping up the honey she was gushing out to care. She tripped seamlessly from the first orgasm, to the second, and the third, each marked by another screeching yelp, and a fresh wave of her juices. I would have kept going, but Bailey's hands pushed me away desperately. She had reached her max. ",
        "I stood up, and wiped my chin with the back of my hand. Only then, did I realize how dark it had become. The sun was gone, and the shadows were deepening rapidly. Bailey's body was hanging limp,, her legs dangling over the edge of the rock that had lifted her to a comfortable munching height. She was still catching her breath, gasping and panting. \n\n\"Oh my fucking god,\" she mumbled, \"you did it to me again.\" Her eyes fluttered open. \"Shit, it's almost dark, and I didn't get to return the favour.\" \n\n\"No problem, honey. You can pay up later,\" I smiled, helping her to sit up. She pulled me in for another kiss. \n\n\"Mmmmm, you taste like pussy,\" she giggled. \"I'm quite tasty, aren't I?\" \n\n\"Absolutely.\" \n\nTogether, we fumbled around in the near darkness, locating her clothes piece by piece. Her panties, and one shoe took a few minutes to find, but we managed. At last she was ready for the walk down. \n\nIt took more than twice as long to get down. Lit only by the feeble light of our cell phones, and being extra careful of our footing, we were still caught out a few times by loose stones, sending us sliding momentarily. \n\n\"Careful honey,\" I laughed, holding her hand. \"No airbags to break your fall, here.\" \n\n\"I thought that was your job,\" she smiled. \n\nFortunately, we didn't have to test that theory, and made it slowly back to the road. The car was still there, and we took our seats. \n\nBailey immediately reached for my belt, and began to free my cock. She grinned, and winked at me. \n\n\"You drive. I'm going to make a down payment,\" she giggled, and began to lick my burgeoning erection like a stick of candy. \"After all...I owe you, and I always pay my debts.\" \n\nShe did pay in full, later that night in my bedroom. \n\nSorry, I guess that should be our bedroom, shouldn't it? \n\n~~~~~~~~~~~~\n\nThanks for reading. I hope you enjoyed it. \n\nPlease cast your votes, and I eagerly await your comments and feedback."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "big tits",
        "blonde",
        "celebrity lookalike",
        "outdoor sex",
        "oral sex",
        "romance"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/double-duty-pt-02"
}