{
    "title": "The Network",
    "pages": [
        "I sat up at the edge of the bed still naked. I rubbed my sleep filled eyes waiting for them to adjust to the attack of the morning sun. Why don't hotels have curtains that fully black out the windows? I was starting to calculate the possible monetary reasons when I figured it was too late to matter now. I was awake an hour earlier than I desired but, awake none the less. Why I chose to go out Monday night was beyond me. Luckily, there was nothing pressing to hurry me on my way.\n\nI stood and glanced over at the other side of the bed. I smiled while admiring the naked beauty half cover in sheets and sound asleep. She had covered her eyes with one of the extra pillows. Smart girl, I should have thought of that. Her red curls stuck out from under the pillow. They were no longer as tidy as they were when the night began. I wondered if it was her true color. I really loved red hair. I always felt it made a woman look alive and happy but, allowed them to remain intelligent. Blond hair made them look dippy. Brunettes leaned toward the mean side. I knew hair didn't dictate personality but, that didn't matter. This redhead was paid for and last night she was alive, happy and seemed so intelligent.\n\nI briefly thought of waking her up for a quicky. Hell, she cost enough and I was sure she would indulge me. But, then, I knew my limits. I wanted to see her again. She was fresh to me and I could quickly bore myself if I over indulge. Watching her sleep was nice. She looked so lovely and peaceful. If I had her again this morning, that image would be altered and I would begin to know her too well. It was best that I just showered and began my day. \n\nI walked into the large bathroom and stopped in front of the mirror. My light brown hair was going in every direction and refused to conform to my natural part. I must have been tossing in my sleep. My forty year old body was starting to show signs of ware. I have put on few pounds, nothing obnoxious I thought but, more than I should be carrying. But, what did it matter. I was an average looking guy of average height with an average dick. I had long convinced myself that I wasn't below average and no one was ever rude enough to disagree. \n\nLuckily, I had a way above average wallet. I had more money than I could spend in 2 lifetimes and no family breathing down my neck for handouts. I liked it that way. I didn't want to depend on anyone and I really hated having to depend on anyone else. With my wealth, many women had tried to latch on. They all bored me in time. I finally admitted to myself that I was incapable of love. Lust, on the other hand, was an emotion I felt very strongly about. I did enjoy sex and I could afford to enjoy it alot. I always knew exactly where I stood with a prostitute. It was a business transaction and I understood business. No emotional entanglements to screw up my enjoyment. \n\nI hopped into the shower as soon as it was warm enough. I could still smell the redhead on my skin and it brought a smile to my face. I knew I would see her at least once more. My cock began to show some activity as I remembered back to last nights activities. I ignored it knowing it would keep me excited until my next date with the redhead. I washed until I could no longer smell the fantasy. \n\nI dried off and hauled my naked body back into the main room. Darla, at least that was her working name, was sitting up rubbing her eyes. No one is immune to the vicious morning sun. She smiled when she saw me.\n\n\"You were quite the animal last night,\" she said sweetly as she attempted to straighten her hair. \"Been awhile for you hon?\".\n\nDamn, she called me hon. I hate when they do that. It always reminds me of an old waitress and there is nothing exciting about that. \"Nope, it's your red hair. It is my achilles heal when it comes to women.\" I tried to let the 'hon' pass and gave her a genuine smile. \n\n\"It was a little dark last night but, I am all natural,\" she said as she slid the sheet off her torso to reveal a small patch of beautiful trimmed red hair just above her pussy. She was smiling as she glanced down, obviously proud of her main asset. \"Sure you don't want to cuddle a bit before you take off sweety?\"\n\n'Sweety' was bit better than 'hon'. It was more endearing and I liked the fantasy that she cared. \"You were fantastic last night Darla,\" I needed to get out of there before she called me 'hon' again, \"I have appointments to keep and all good things must come to an end.\" I knew she was inwardly happy that she didn't have to perform again. She got paid the same either way. I was glad she asked. It showed a work ethic and waiting till after I showered showed intelligence. I was inwardly proud of her. I knew I wanted to see her again so I made sure she was available.\n\n\"The room is paid until tomorrow. Help yourself to room service or the spa. They know where to send the bill.\" I smiled as I began to put on last nights clothes. \"I understand they have a wonderful pool and jacuzzi. Ask Rick, the concierge, if you want to partake and he will get you a swimsuit.\" She seemed a little surprised with my gifts. I loved giving large tips to people who weren't used to them. \"There's $3,000 in the envelope on the nightstand,\" I continued, \"$1,000 for last night, $1,000 because you were wonderful and another to make sure you're free this Friday.\" I ended with a 'I do this all the time' tone.\n\nDarla sat up straight and her gorgeous breasts did a little dance for me. Very lovely I thought. \"Of course I'm available,\" she said with new found enthusiasm, \"I am available any time you need me.\" \n\n\"Good, we can meet at McDewitts Friday, let's say around six,\" I was happily committed, \"we'll get a bite to eat, you can laugh at my dancing and then we can cuddle the night away.\"\n\n\"That sounds wonderful. I'll wear something that accents my hair.\" Yes, she was a smart woman. She might just make it to a third date. \n\nI finished dressing and gave her a kiss on the cheek. \"You have fun today, the spa is supposed to be fantastic. Rick will get you a car tomorrow when you're ready to leave.\"\n\n\"Thanks Robert, I will make sure we have a great time on Friday.\" Her face was all a glow as I exited the room. I left instructions with Rick that Darla was to be pampered and slipped him a $100 for his troubles. He pocketed it quickly while informing me that all his guests get pampered. I smiled and he winked as he picked up the phone to clear some time at the spa. \n\nI was happy driving home. I knew it wouldn't last but, for now I was blissfully unaware of the problems of the world. Unencumbered sex did that for me. It was also pleasurable to reward Darla with much more than she expected. She never said thank you which, impressed me. She just stated that she would work harder making the next date more pleasurable. That was business, I made sure I got what I wanted and she profited well by delivering. No commitments beyond the transaction. Perfect as far as I was concerned.\n\nMy home was empty of course. It usually was. It could house a family of ten comfortably but, it only held me. I bought it because I could. It had an indoor pool, fully accessorised exercise room, rec room with a fully stocked bar, kitchen and baths that any woman would die for and more closet space than anyone had a right to fill. It was built by someone with a lot more taste than I. The tile and wood accents were obviously chosen by a designer. It was perfect, except when it needed to be cleaned. \n\nI didn't take maintenance into account when I purchased the property. It just didn't dawn on me how hard it was to find people to take care of the place. I found it annoying to have to fit them into my schedule. It would have been alright if it was infrequent but, this house and it's grounds required weekly attention. I also didn't like having all those different people in my place so often. I had to act differently when they were around which was really annoying. My life was basically at a stand still when help arrived. If it were smaller, I would handle it myself. I just didn't have the time to devote to the place. Unfortunately, I had become somewhat attached. It was a really comfortable house. \n\nThe solution was obvious. I needed a live in caretaker. Someone who devoted him or herself to the 24/7 care of the house. The person would have to make themselves scarce when desired, be discrete and be trusted enough to be in the house alone. I figured I could buy the trust. I wasn't sure I could buy the discretion. I have business dealings that needed to remain private. I am also very used to living alone. If I want to run around my own house naked, than that's what I do. If I want to fire up some porn and relieve myself, gosh darnit, I do. I really wasn't liking the idea of giving up my freedom. I also didn't relish the idea of someone being privy to my indiscretions. I feared I might have go the illegal route. Hire an undocumented worker who would need to keep his/her mouth shut or be deported where their words could do no harm. \n\nFirst I would try finding a legal caretaker. I had a service advertise the position and filter the resumes down to five for my review this afternoon. They removed all the ex cons and verified the references. The selections were waiting in the mail when I had arrived home. I wasn't confident I could sense the necessary level of discretion in a single interview but, nothing ventured, nothing gained. I was prepared for a day of interruptions. Luckily, Darla had me quite relaxed and nothing was going to seem overburdensome today. The first would arrive at noon, giving me a few hours to glance over the resumes. \n\nBy the names, I figured the first four were two women and two men. They all seemed to be ex-nanny types with various job histories that seemed relevant to the task. Some of them had worked for wealthy family names I recognized. They all seemed a bit on the old side which I began to think might be a good thing. Maybe they had seen it all and could care less about my personal indiscretions. I had used the headhunter service before and they had always come up with good solutions for my businesses. It could be that they sensed what I was looking for and once again found good matches. I was feeling a bit more confident.\n\nThe fifth resume was the strange one. It referenced two females; Samantha and Rebecca Jones. I had never seen a resume for two people in all my years of business. A caretaker team I laughed to myself. I could barely force myself to accept one intrusion in my life much less two. I humored myself by reading further. They had no job history but, had quite the educational background. Both had done undergraduate work at Vassar with masters of business from Harvard. These two should be working on their first million for a fortune 500. Why would the service send me anyone with these qualifications without a job history? Why would they send me a resume with two people in the first place? I got to salary requirement portion of the resume and did a double take. This was the true definition of sticker shock. All the other applicants were asking for between 25-35k plus room and board. This pair wanted 150k plus room and board and full medical. \n\nI began to think that someone screwed up and I received the wrong resume. This wasn't an entry level position and I certainly wasn't looking for two people. I especially wasn't willing to go way over the going rate. I was considering calling the service to clear up the issue when I hit the references section. It was a page right out of the who's who list of the rich and powerful. These two were obvious pedigrees. This was an obvious mistake. \n\nThe first name Thomas Thornbird, a man I have recently had some very successful dealings with. His wealth made me look like a panhandler but, then again, he had about 20 years on me. All though the address was his business offices, I thought I recognized the phone number. I grabbed my phone and scrolled the contacts. Sure enough, it was his private mobile line. A man like that didn't give out his private line unless there were millions at stake. These two must be very close friends of the family. \n\nI scan the list further and saw a General, a Federal Judge and the Secretary of State for these United States among other well known figures. None of this made any sense. I no longer thought this was accidental. I could smell business tactics a mile away. I was meant to see this resume but, for what reason? Obviously, someone wanted me to meet with these two. I really don't like being maneuvered without knowing the end game. Looking at the list of names again made me feel way out of my league. I was an orphan who made good, not old money and power like this list. I was being set up for something. I disliked being in the dark. \n\nI tapped on Thomas Thornbird's entry on my phone. Might as well call someone I have dealt with before. Not sure the Secretary of State would even take my call. It rang a couple time before he answered.\n\n\"Robert, I was wondering when you were going to call.\" Caller ID was all the introduction he needed. \n\n\"Hi Tom, I guess you know I am calling you about this resume I have in my hand.\" I left it an open question. I didn't want to sound too ignorant with a man like this. \n\n\"Kind of took you by surprised did it?\" I could hear the humor in his voice. Why was he playing with me? Our last dealings were cordial but, very business like. He didn't really seem to want the relationship to go past the millions we were making. \n\n\"Yes it did. Not quite what I was expecting but, your name made me question discounting it immediately.\" I wanted him to know that I respect his opinions. If there were future deals between us, I didn't want to alienate them here.\n\n\"I appreciate your confidence in me Robert. Your business acumen is quite close to mine and I figured you would appreciate meeting Samantha and Rebecca.\" I was being butter up for something and I feared I wasn't going to be able say no. \"I am the one who made sure that resume was in your stack.\"\n\n\"I would really like to know how you knew there was a stack to put it in.\" I tried to sound relaxed but, I suddenly felt kind of raped. Who else knows about my private business? \n\n\"Don't take it personally Robert. I was impressed with that oil deal you brought me in on. Not many people could have put together that regulatory side step. All my lawyers and accountants told me I was going to take a bath. Instead, we made quite a tidy profit.\" He let the compliment sink in before he continued. I was still waiting for how he found out my business. \"I watch people like you Robert. The staffing company you use is a wholly owned subsidiary of one of my acquisitions.\"\n\n\"You have been spying on my activities.\" I was flabbergasted. I knew men like him liked to have their advantages but, this leaned a little too far onto the wrong side of the ethical divide. \"I'm not even sure what side of legal you're on.\"\n\n\"Spying is the wrong word Robert. I would use the term studying. I wasn't trying gain an unfair advantage. I was trying to vett a future business partner. You only seem to hire the best and your retention rates are high. All good indicators of strong leadership and business savvy. Your caretaker position just happened to cross my desk with the rest.\" He sidestepped the legal insinuation, complimented me and dangled future deals all in a few seconds. \n\n\"I'm not sure if I should feel complimented or insulted.\" I didn't want to fully let him off the hook. I was miffed at the intrusion. \n\n\"You asked how and I answered. There are very few people in the world who would have gotten that straight of an answer. If I didn't respect you and your skills, you would have never received that resume.\" He was complimenting me again and drawing me back to the original issue. He was a master at negotiation. The problem was, I did feel a bit proud that he singled me out. Ego is a bad place to negotiate from. \n\n\"I don't quite understand why you felt that two obviously highly educated women would be a good fit for this position.\" I dropped the personal intrusion issue. He was done talking about it and pushing it would only cause problems that were no help to anyone. I added a new staffing company to my mental todo list.\n\n\"They are more like personal assistants then caretakers. You will find them invaluable in all aspects of your life.\" I found myself questioning his sincerity. Could he be imbedding spies or someone to control me? I didn't like feeling paranoid but, I was always wary of people with power. He continued, \"They are intelligent, discrete and fiercely loyal. Before you ask, that loyalty would be to you. I know you may doubt that now but, I assure you, I am not trying to get another tentacle into your life.\" I believed him. Using the word 'another' he was admitting that he knew that the staffing service was intrusive. \n\n\"Tom, I wasn't really looking for a PA, much less two of them. I am just trying to find someone to take of the house and grounds. I'm not sure this a good fit. Do they even know what they are interviewing for?\" I was trying to lay the groundwork for disappointment. These ladies obviously meant something him and I didn't want this to create a lot of friction between us. \n\nHe laughed. It felt kind out of place. \"They are more aware than you are. Just meet with them Robert. As a favor to me, meet with them and hear them out. If you don't hire them, so be it. It won't stop me from making money with you in the future.\" Good, he left me an out. I didn't quite understand why they would be more aware than me but, his last statement made me feel much better. It was time to seal the deal. \n\n\"For you Tom, I will give them a fair hearing.\" Let's make sure this is me doing a him a favor. \"I am not all that certain it could work out but, I am intrigued.\" I just gave him a big qualified maybe. I really hope he meant what he said and won't hold any rejection against me. \n\n\"I know you won't regret it, Robert.\" That is about all the thank you I will ever get out of him. \"On another note, my pipeline guys have a proposition you might be interested in. I would appreciate you taking a look at the deal and see if you would like a piece. I would appreciate another set of eyes and a share of the risk.\" He really wants me to meet these girls. \n\n\"If it's that northeast alignment, than I would be very interested.\" Paybacks a bitch I thought. I wondered if he was just feeding me a bone.\n\n\"Now who's spying on who. We need to have lunch so I can find out how you know anything of my supposedly secret alignment.\" I could almost feel the smile across the phone. My ego was pumped again. \"I'll have them put together an informational packet send it over next week. You have a nice day, Robert.\"\n\n\"You too, Tom.\" The call ended and for some reason I felt like I won. I know he maneouvered me into doing what he wanted but, he let me feel like the victor. The pipeline was a long term deal with many hurdles and lots of risk. The payoff would be immense if it could be completed. It is just wise business to seek out multiple investors to share the risk. Why did I feel special when he asked me to jump on. I really had to learn to not be so impressed with people like him. \n\nThe first four interviews went as well as expected. Two of the applicants were more impressed with me than the job. I think they were just looking for a nice place to be for a couple of years. Not quite what I was looking for. Finding someone to trust is hard enough, I certainly didn't want to repeat the process every couple of years. \n\nOne of the ladies, Pam, seemed a bit more permanent. She had run a large house for many years and only left when the family downsized and moved south. She did seem a bit controlling. That is a good feature when dealing with third parties but, I felt we might clash. I asked her if she would have any problems keeping anything she might see or hear private. ",
        "\"I have been doing that for 30 years and no perversions have left these lips yet.\" She said as if she disapproved but, was resigned to her place. She had an expression like a disappointed grandmother. She caught my drift immediately and her response left me cold. I wasn't going to hire her so I covered my tracks. \n\n\"I was speaking of business dealings, Pam. Although, it is good to hear you are discreet.\" I tried to remain neutral in my tone. \n\n\"I didn't mean to insinuate anything Mr. Timmons. I was speaking of my past experiences.\" She lost some of her confidence. She sensed that she answered incorrectly and was trying to undo her last statement. I wasn't going to let on that her original read of my question was correct. We finished the rest of the interview cordially and I sent her on her way. \n\nBruce, the fourth interviewee was by far the best. He had been a butler to a very well connected family for many years. He ran their house with his wife and came with the perfect references and hand written letters of recommendation. The untimely death of his wife had driven him from his past position. He told me he kept expecting to see her around the house which kept him from moving on. He needed a new environment, away from his old memories. I asked the same question of him as I did of Pam.\n\n\"If you hire me to take care of the house sir, that would be my only concern. Everything else will be ignored.\" He gestured around his surroundings, \"a house of this size would keep me busy enough.\" I sensed he knew the breath of my question and he answered perfectly. He told me that my business is my business and he would leave me to it. I wouldn't have to walk around this man, he would walk around me. We talked a for about an hour and I was getting more certain that he was the one. He was looking for one last job, a ten year position where he could work until retirement. Perfect. We said our goodbyes and I left him with a positive impression of his prospects. \n\nI had almost forgotten about my agreement with Tom when the doorbell rang at exactly seven. My first thought was to think how nice it would be to have Bruce answering the door. I sighed, it was only going to cost me an hour of my time and then I could get back my life. I moved to the front door to greet them and begin the last interview. \n\nI opened the door and caught my breath. Before me stood two young women impeccably dressed in the exact same outfits. It made sense because from head to toe they were completely identical. Not only were they twins but, they were my dream twins. Someone went to an awful lot of trouble to set this up. I was once again suspicious of Tom's motives. \n\nThey were both sporting very rich red hair pulled back severely into very cute buns. Their deep green eyes were covered with conservative metal framed glasses that gave the air of intelligence I found most intoxicating. They were wearing identical conservative smiles that were perfect for a first impression. Symmetrical cheeks, soft chins, rosy lips and cute little button noses sprinkled with freckles completed the look. Thier soft white blouses were conservative and obviously tailored. One stitch tighter and it would have moved from business to sexy. They were both wearing tan pencil skirts that terminated at the knee. Their gorgeous milky calves were exposed atop very nice yet conservative tan heels. I suddenly realized I was staring and hadn't even said hello. \n\n\"Mr. Timmins, I believe we had an interview at seven.\" The one on left said without releasing her smile or my eyes. \n\n\"Of course, of course,\" I closed my mouth and attempted smile nicely, \"you must be Samantha and Rebecca. Please come in.\" I tried to send my mind back to business as I pointed the girls to the living room and followed them in. They both walked with the exact same confidence and looked just as fine from the rear as they did from the front. Athletically trim with a practiced stature. If anything, this interview will be visual treat. I motioned them to sit across from me on the couch as I picked up their resume and glanced at it to collect my thoughts. Their appearance was very disconcerting. For some reason I was expecting a less refined pair of ladies and certainly not twins. It caught me by surprise and threw me off my game so I tossed away my original plan of a phony interview and went straight for the truth. \n\nI looked up from the resume, \"I was rather surprised to get a resume with two names of on it for a position that requires only one. If it wasn't for your references, I would have canceled this before it began.\" I tried to leave the statement with an air of curiosity. I was expecting them to explain to me why they would ever apply for this job. They picked up on it immediately. \n\n\"Yes, Mr. Thornbird can be quite persuasive.\" The one on the right spoke with the exact same voice as her sister. She was letting me know that she knew exactly why this interview was happening. \"He is a dear family friend and is invaluable when it comes to introductions.\"\n\n\"Please be assured Mr. Timmins, we are here of our own volition, not his.\" This was added by the one on the left. Left, right, girl one, girl two, I smiled at my struggling internal listing system. \n\n\"I'm sorry, you both were not what I convinced myself to expect. I have been amiss in the introductions,\" I tried to lighten up a bit and rebuild the interview aspect, \"please call me Robert and which one of you is Rebecca and who is Samantha.\" Both were sitting identically with dainty crossed legs and their hands in their laps.\n\nThe one on the left said, \"I am Rebecca and of course my sister is Samantha.\"\n\nI was hoping they stayed right where they were so I could at least reference them by name without guessing. \"Well, Rebecca and Samantha, why would two obviously well connected, well educated women want to take care of my house?\" I felt kind of good putting them on the spot. Someone obviously was trying to make it hard on me. I could at least return the favor. I expected them to stutter through a response to the blunt question but Samantha answered confidently. \n\n\"We could interview with a large firm, even use our connections to guarantee a placement. We could use those same connections to seek out rich husbands. We desire neither.\" \n\nRebecca pickup without missing a beat, \"We prefer to be behind the scenes, together.\" She smiled at her sister, \"We are quite skilled at removing all impediments in life so that the successful can be more successful.\" \n\nSamantha took over again, \"We dislike the limelight, in fact, we avoid it with vigor. We have no need of tremendous wealth but, we do enjoy our comforts.\" She said this with a smile as she looked around the house briefly. Something didn't make sense. \n\n\"Most of planet would consider your salary requirements as wealthy.\" I said trying to poke holes in their statements. Rebecca chimed in.\n\n\"Wealth, as defined by those that do not possess it is very different than how you, or we, define it. We have become used to certain comforts. We are confident that we would earn our pay many times over.\" Why this didn't sound snobbish I wasn't sure. Her delivery was smooth and confident without a hint disdain for the general population. I wasn't close to accepting their arguments as a solution to the position but, I was curious.\n\n\"The duties of this position can easily be handled by one person at a third of the price you are asking. I don't see how I could justify your salary request. I am not saying you couldn't be the best caretakers in the world, I am just not sure that second best isn't good enough.\" I had begun laying the groundwork for the rejection. As lovely as they were, I won't allow my business sense to be steered by my dick. I laughed inside thinking about me running around naked with these two in my house. No, this would never work. \n\n\"We are more than caretakers although, you would never have to worry about the house again. We facilitate all the petty aspects of life. Your only worries would be the next business deal without life's baggage to clutter your thoughts.\" Samantha wasn't pleading, she was informing. \n\n\"I am not really looking for personal assistants, Samantha\", thank god they had remained in their original seats, \"I just need someone to take care of the house. I don't think I would enjoy having someone intrude into the more personal aspects of my life.\" Especially these two beauties. For the first time, I was kind of embarrassed about thinking about my private perversions.\n\nRebecca smiled, \"Of course Robert. We can understand your reservations. It is a hard thing to understand without experiencing the benefits. Can we ask you to defer your decision until Monday?\"\n\nI smiled, \"Rebecca, I know you two have tremendous connections but, I don't think that kind of pressure will work on me. I gave you the hearing I promised Mr. Thornbird. I just don't think you understand my needs.\" I hated to put the nail in the coffin. For some reason, it just didn't feel good turning them down. It kind of made my stomach turnover. A very alien sensation. \n\nSamantha mirrored Rebecca's smile, \"No one will call. Mr. Thornbird was only an introduction not pressure for the hire. In fact, he would be very upset if we insinuated otherwise. We would be grateful if you took the weekend to think about it. If on Monday you are still committed to a different course, you won't hear any arguments from us.\" \n\n\"I am not sure how that helps you but, I can wait till Monday.\" I suddenly felt better. My body seemed to like agreeing with these two. Another reason to not hire them, I can't have my reason being steered by a bowel movement. \n\nThey both stood in unison maintaining their pleasant smiles. Rebecca spoke, \"That is all we can ask Robert. We really want to thank you for your time. I wish we would have been more convincing but, who knows, maybe time will be our friend.\" She seemed more confident than her statement let on. I still sensed that someone was taking me for a ride. My stomach turned again. I must have eaten something bad or possible getting ill. \n\nI headed to the door trying to beat them there so I could be the gentleman. I open the door and feebly said, \"It was truly a pleasure to meet both of you.\" We shook hands. Both hands were soft and comfortable. I may not want to hire them but, I really would like to see them again. I knew that wasn't an option and I was slightly depressed about it. I must be getting ill. I watched as they headed toward their car and quickly closed the door before they realized I was staring once again. I realized I was holding my breath and sighed. \n\nSurprisingly, Friday rolled around with no high pressure calls from the whos who. I have been trying to find a reason to justify hiring the two until I realized it was my dick doing the thinking. Those two gave me no reason to think I was even slightly desirable. I kind of fished a bit lower than those two. Girls who were blinded by my wealth suited me just fine. Tonight I had a date with Darla and I would soon forget about the whole problem. I remembered what she looked like Tuesday morning and smiled inwardly. Yes, I would have fun tonight. Shit, I forgot to get a reservation at the Barklays. There was a good chance they wouldn't have any rooms over the weekend.\n\nI prayed that Rick could deal with this as I dialed his number. \"Rick, it's Robert Timmins, I really hate to put this on you so late in the day but, I neglected to book a room for tonight. Think you can work your magic.\" Always slip in a veiled compliment to grease the wheels.\n\n\"I am a little confused Mr. Timmons. You're booked for two days in the presidential.\" Now I was confused. I don't forget things like that very easily. Did I book it before I left Monday? Well no point in trying to slide this by Rick. \n\n\"I certainly don't remember booking it.\" I really hated admitting weakness, especially mental weakness. \"I won't look a gift horse in the mouth. I do need the room.\" I said chuckling. Hopefully my levity would lighten the stupidity. \"I won't be checking in until late so make sure they hold it.\"\n\n\"Mr. Timmons, I am concerned that something is going on. Your guest from Monday, Ms Darla, already has you checked in. I assumed you agreed to this. I apologize if I overstepped your intentions.\" What the fuck. Did she really believe my throwing money around gave her carte blanche to act in my name. I tried to remain calm.\n\n\"No Rick, you acted correctly given the circumstances. Darla is the one who overstepped. Ring the room for me, I need to have a word.\" I was trying to not upset Rick. I truly liked the guy and he had never let me down in the past. \n\n\"She already left saying she was going out to meet you. I must say Mr. Timmins, she was quite stunning. Anything you want me to do on this end.\" She may look good but, she was about to be crushed down to size. I was trying to think back to our last conversation. Was there anything I said that would have given her the impression I would allow her to take these types of liberties with my name. Hell, I pay them to stay out of my life not entangle themselves into it. \n\n\"No, Rick. Leave it be. I will deal with this myself. Thanks for all your help.\"\n\n\"Of course Mr. Timmins.\" I said goodbye and took a slow breath. I was supposed to meet her at McDewitts. Certainly, not the place to go all ballistic. I needed to calm down. Darla, wasn't worth a public argument. I ran through a bunch of dialog until I settled on a succinct quiet laying down of the law and a goodbye. Guess she didn't even make it to the second date. \n\nWhen I entered McDewitts, a thought struck me. I tested the theory when I arrived at the head waiters desk. \"Reservation for Timmins.\" I asked. Sure enough he nodded and smiled. She had pushed it to the limit. \n\n\"Welcome Mr Timmins. Your companion has already arrived and has been seated. He reached under the desk and pulled out a single red rose and handed it to me. \"A rose as you requested. And if you don't mind me saying, she looks absolutely stunning. Is there some special occasion we should be aware of?\" I looked dumbfounded at the rose. Something was wrong. I could imagine Darla taking liberties with my name but, buying her own rose didn't fit her profile. \n\n\"No, just a second date.\" I said with little confidence.\n\n\"As you say sir, let me show you to your table.\" He headed off into the main dining room. We only made it past a couple of tables before I spotted Darla's smiling face. She stood when she recognized me. Stunning was an understatement. Her red curls were pulled by a green ribbon and styled to cascade down her shoulders. Her soft green dress fit perfectly and tastefully accented the curves of her body. It dropped below her neck to reveal the smallest portion of cleavage without advertising. It was mouth watering. A thin burgundy belt was accenting her hips and perfectly breaking up the design of the dress as it dropped to just above her knees. The burgundy heels defined her shapely legs. The color pallet was perfect on her. It set off her hair perfectly. \n\nI wasn't the only one admiring Darla. Every person in the place glanced over when she rose. The men lingered longer than the women. I could only imagine the struggle they faced attempting not to stare. My anger had dissipated in that first look. I wasn't confident in my ability to control the situation. I certainly didn't want to start an argument with her here. I didn't want to argue with her at all. I approached and did the only thing that made sense, I handed her the rose.\n\n\"You look stunning Darla,\" I said it with reverence as I looked into her lovely brown eyes. Even her understated makeup was effective. She was like a painting. She smiled at the compliment and leaned forward and kissed my cheek. Her musky perfume wafted to my nose like a spring breeze. It made her more desirable. \n\n\"Thank you Robert,\" she whispered in my ear \"I feel wonderful and tonight, so will you.\" She sat demurely into her chair and gave me a devilish smile. I now had no desire to chastise her methods. We had a delicious meal and wonderful conversation. She laughed at all my lame jokes and flirted insistently. My blood was boiling. \n\nAs promised, I took her dancing and she laughed lovingly at my clumsy attempts at the art. She enjoyed improving my steps and tempted me during every slow dance. I was the center of her universe that night and I was the envy of every man who saw us. I was having the time of my life. \n\nWe returned to the hotel late. Rick was there waiting for me. He usually went home will before midnight. Out of earshot of Darla, Rick asked \"Is everything OK Mr. Timmins?\"\n\nI smiled, \"She is stunning Rick and I am only a man.\" He smiled and nodded. I think he was happy everything worked out. He didn't want to be party to any games on my account.\n\nDarla opened the door to the suite and pulled me in by my hand. With a sultry swagger, she pulled me to the bed and gave a sexy controlling push to the chest. I allowed myself to fall backward as she reached up to undo the band that was holding her hair in place. Her curls exploded from their confinement and she went from a sophisticat to wench. The belt hit the floor followed quickly by the dress. She stood before me in what I believed was the sexiest lingerie I had ever seen. The same soft green that painted her dress was now in soft lace. Her breasts were advertised seductively, barely contained by the translucent material. She let me stare for a moment, proud of her new look. She looked better than naked. I was highly aroused. \n\n\"You treated me like a queen tonight. Now it's my turn.\" She slide down to her knees overusing my thighs for leverage. She giggled removing my shoes and socks making a statement by throwing them randomly behind her. She slowly removed my belt and pants making sure her cleavage was wiggling in my eyes with her struggles. She smiled at my tented boxers, reached out and began to caress my cock through the thin material. \"Someone likes my new look.\" she said while looking at my clothed boner. She grabbed the elastic on the sides and relieved me of my shorts. \n\nShe pushed my cock flat against my shirt. Her eyes locked on to mine and she dragged the flat of her tongue from my balls, along the exposed underside to the tip of my tool. She engulfed the head while holding my eyes and began to massage it with her tongue. It was a wonderful view looking beneath her eyes to her green laced encased breasts tightly swinging between her arms. This was the most erotic scene I have ever been part of. She closed her eyes and dropped her lips down my shaft engulfing half my member in slow ecstasy. She rose back up and then back down taking it all the way to the base. I moaned my satisfaction. I had a desire to grab her delicious hair and control the action. For some reason, I felt it would be insulting and held back as she slowly raised her mouth back up and off my cock. \n\nShe placed her index finger in her mouth and dreamily sucked it wet. We locked eyes again, \"Cum for me Robert.\" Her mouth returned to my cock and the slow descent began again. Her index finger found my rectum and started painting circles. When she had me in her throat once again, I lost it with a mighty groan as my hips attempted to drive my cock deeper. I empty what felt like a gallon of jism into her mouth and she allowed none to escape. She released my cock with a smile and seductively licked her lips. \"Someone is having fun,\" Darla said as she tenderly stroked my relaxing member. \n\nI laughed, \"That someone is me.\" I sat up and removed my shirt and threw it to the floor. I lifted her head till we were eye to eye, lip to lip. \"You are phenomenal. \" I said honestly as I dipped my head for a passionate kiss. At first instant she was stiff lipped with surprise. Then she relented and returned the kiss pulling me closer with her hands stroking the back of my head. I could taste myself on her tongue and I didn't care. I just wanted to have more of her. I no longer cared that she was a prostitute.",
        "I twisted our bodies until she was lying on her back and I was in control. I had a desire to make her cum. Not one of those phoney orgasms I usually receive. I wanted to be the man that deserved this fantasy. I dropped between her legs and began kissing her ankle and slowly worked my way down her leg. I enjoyed the confusion in her eyes as I neared her lace panties.\n\n\"Robert, you really don..\" I didn't let her finish.\n\n\"I want to,\" I injected as I reached my destination and kissed the lace.\n\n\"Oh God,\" she quivered. The material was as soft as it looked. I caressed it with my cheek and inhaled her womanhood. It only increased my determination. I slowly dragged the heavenly cloth down her thighs and off her legs. I returned to my target and was rewarded with the cutest bare pussy I had ever seen. I caressed where that small patch of red hair was a week ago. It was warm, smooth and oh so soft. I was rewarded with moan. I leaned in and kissed the newly bald area and circled the area with my tongue. She responded by lifting her knees and spreading her legs giving me better access. I circled her sex with my lips, lightly across her inner thighs leaving wet kisses. Her scent was intoxicating.\n\nI traced the lips of her sex with my tongue from bottom to top. I was rewarded with an involuntary tremor in her legs. I purposely avoided her clit and tickled its hood softly with my finger as I retraced her opening from top to bottom. I tasted her as her lips became engorged and her flower began opening its glistening folds. She had a sweet, lingering flavor that made me explore further. I looked over her lacy breasts to see her head thrown back. She wasn't used to this type of unselfish attention. \n\nWhen I dragged my tongue between her folds and deep into her, a moan escaped her lips. It was deep and unrehearsed. She was incredibly wet and her hips were lifting slightly off the bed to help me go deeper. I replaced my tongue with first one then two fingers and began to softly, but firmly massage the inside of her pussy. When I curled them up and rubbed the top of her channel her hips went into overdrive, involuntarily thrusting upwards trying give me better access. I smiled and placed the flat of my tongue on her ignored love button and rubbed it back and forth. \n\n\"Oh god, Robert...Oh shit, Oh Shit... Robert...\" Her hips locked about a foot above the bed. Her legs started shaking and she held my head in place with her hands. My hand was becoming soaked with the spasm of her orgrasm. I continued tickling her bud with my tongue in an attempt to lengthen her experience. Suddenly her hips dropped and she began pushing my head away from her pussy. \n\n\"Fuck, fuck...Fuck.\" Her whole body was shaking. I tried to follow her sex but, she moved to quickly and clamped her thighs shut and curled into a quivery ball on her side. \n\nI hadn't seen this before. I was concerned I might have hurt her so I moved to her side and caressed naked hip. \"Darla, are you all right? I didn't mean to hurt you?\" I tried to say this quietly, for some reason a whisper seemed appropriate. \n\n\"Too sensitive,\" She was panting \"give me a second.\" She was taking deep breaths still guarding her pussy. The tremors had ceased but, her skin was covered by goose bumps. I curled against her to share my warmth. My cock, now back to full mast, rested along her ass crack. She absently reached back and gently stroked it. It felt heavenly. \n\nShe turned her head to look at me. Her eyes were watering and the most wonderful smile graced her lips. \"That was intense. I have never cum like that.\" She whispered then turned her body to mine and kissed me deeply. She pulled her lips free and looked into my eyes. \"Oh, am I ever going to rock your world.\" She rolled me on my back and took control again. She mounted my cock and lowered her soaking pussy down the shaft. I groaned as her pussy muscles went to work. \"I have laid with other men,\" she panted as she rode my cock, \"they were all boys compared to you.\" She was caressing my ego as she massaged my shaft with her pussy. \"You wonderful man you.\" Her hips were steadily moving up and down as she undid her green lace bra and threw it across the room. Her gorgeous breasts began to swing free to my visual delight. \n\nShe grabbed my hands and directed them to her breasts. \"I can't believe I want you in me. I mean I really have to have you in me.\" Her panting was increasing as she professed her lust. She was getting giddy as her hips continued to work their magic. She was smiling as she looked into my eyes. \"I want your cum in me. I want to feel your cock exploding in my pussy.\" She dropped her lips to mine and drove her tongue into my mouth. I blissfully lost control and spasmed into her cunt filling her with everything I had. It was a lust filled dream, a beautiful woman coaxing out my cum for the second time in one night. She made me feel like my sperm was a precious gift as she cooed during my orgasm. She didn't fake her own pleasure, she just made sure that I knew that this one was for me. What a wonderful girl. \n\nWe laughed and teased through a shower. Made love again and showered again. All in all it was the deepest sexual experience I had ever had with a woman. I finally fell asleep in her arms. I think she beat me to dream land but, only by moments. \n\nMorning, as always, brought clarity to my thoughts. I woke once the sun attacked my eyes. Damn curtains. I never seem to get enough sleep. Darla was still spooned into my body with the end of a pillow covering her eyes. I smiled at her planning. She really knew how to hold onto her sleep. I slowly unraveled from her sexy body trying to not wake her. I realized I failed when I heard a drawn out soft meow from her as she rolled onto her back. \n\n\"Well I didn't really expect the night to go like that, it was beyond lovely.\" She was smiling dreamily at me with her face framed beautifully by her disheveled red curls. \"I mean she told me it would be nice but, I didn't really believe her. Your people really know you Robert.\" \n\nI jumped out of bed forgetting my nakedness. Darla seemed shocked at my quickness and looked on with concern. \"Did I say something wrong?\" She questioned as she sat up forgetting her own nakedness. I was playing back her statement in my mind making sure I didn't misunderstand.\n\nI looked at Darla and carefully said \"Who is she, Darla?\". I think it made it sound a bit more ominous than I intended. Her expression changed from confusion to one of fear. \n\n\"You're scaring me Robert.\" she was shaking slightly as she pulled the sheet over her breasts. \n\nI realized quickly that she was not my enemy. She had given me an amazing night I must have looked like I was about the punch her in the face. I relaxed my shoulders and slowly sat next to her on the bed and reassured her. \"Oh Darla, last night was lovely dream. I am certainly not angry at you.\" I hugged her close and she relaxed in my arms. \"You just surprised me. I was confused by what you said. Hell, I am concerned about how all of last night happened.\" I was caressing her back as I attempted to undo her panic. \n\n\"You didn't send Rebecca to me?\" Shit, the interview, how the fuck did they find out about last night. I felt a shudder in Darla's body and I realized she was crying. I pulled back and saw tears as she realized that I was unaware of Rebecca's intrusion. \"She said it would be my last time,\" her breath was halting as she sobbed, \"I knew it was too good to be true, she promised to much. A person like me doesn't deserve anything like that.\" She was bawling and I was lost. I had always been able to avoid situations like this. After last night, I couldn't walk away. Fucking empathy. I did the only thing that made sense, I pulled her close and held her. There was going to be hell to pay and I resigned myself to make sure Darla didn't suffer because of it. \n\n\"What did she promise you, Darla?\" She was sobbing and pointed to her purse on the night stand. I handed it to her and she pulled out an envelope. \n\n\"A silly dream,\" she sobbed, \"she played me well. I'm sorry Robert. I am so fucking stupid, I should have known better\". She was sobbing again obviously crushed by what had happened. Why did I feel worse about what they did to her than what they did to me. I opened the envelope and pulled out an official looking letter with an embossed sorority label at the top. 'Dear Susan Howard,' it began. \n\n\"Susan?\" I questioned. \n\n\"My real name.\" She responded with tears running down her cheeks, \"how the fuck did she know my real name.\"\n\n'We are pleased to inform you that are this years recipient of the Gloris Newark scholarship.' It continued for many paragraphs explaining that it was a full ride for Vasar awarded by the same sorority that graced Rebeccas and Samantha's resume. I was stunned. \n\n\"Susan, I certainly didn't send Rebecca to see but, I think this is real.\" I said slowly as I lowered the letter to the nightstand. Susan looked up to me with red eyes.\n\n\"What do you mean real? Please don't fuck with me Robert, I can't take much more of this.\" She was serious. \n\nI picked up the phone and called the desk, \"This is Mr. Timmins in room 534. Is Rick in yet?\" They said he wasn't due for another hour. \"Thanks, can you switch me to room service please.\" They did and I ordered a large breakfast for two with a large pot of coffee. \n\n\"No matter what happens Susan, I will make sure that doesn't come back to bite you.\" She smiled weakly, not really trusting me or anything else at the moment. \"Why don't you start at the beginning, when did Rebecca first contact you?\"\n\nI found out that Rebecca contacted Susan the day after the interview. She spoke with enough authority that Susan was convinced she was my assistant. I asked her if she ever said she was my assistant. She realized that Rebecca only said that she was acting on my behalf and never actually stated she was in my employ. \n\nSusan explained how Rebecca took her shopping. Susan was animated when she described how much fun it was shopping with Rebecca and how she was impressed with Rebecca's knowledge of fashion. They visited numerous shops before they found the dress and had it tailored to fit. They spent Thursday discussing the itinerary for Friday evening and Rebecca gave her talking points and stressed that she should only call me by my first name. No 'honey' or 'baby' just 'Robert'. I was enthralled with the detail that Rebecca intrusted with Susan. She did it all while endearing herself to Susan. I sensed that Susan wanted to please Rebecca more than than me. \n\nBreakfast arrived and we realized we were famished. We sat in Barklay robes and gorged on fresh fruit and pancakes. Once we began to fill up, I had her continue.\n\nSusan was picked up Friday morning and taken to stylist who completed her hair and makeup. They gave her a designer scent that they claimed was created just for her. I could see that Susan had never been handled like this before and she adored the experience. At lunch, Rebecca had handed her the scholarship letter and told her that this would be her last night and I would be her last customer. Susan was getting teary again, I guess she was having second thoughts about trusting Rebecca's word. When she described what happened when she walked into the restaurant I knew that I wasn't going to let Rebecca and Samantha let her down.\n\n\"I mean, I have always had men look at me before but, rarely above my tits. I walked into McDewitts and I felt like a lady. Men were looking in my eyes and the women smiled. Walking to the table took forever, I think I was 50 shades of pink by the time I got there. And when I saw you with the rose, I nearly died. You were beaming and everyone knew you were there to see me. I almost forgot I was working girl.\", she was animated again. She looked so cute remembering the previous night. \n\nThere was a knock on the door. I let Rick in the room and he embarrassingly nodded to Susan and said \"Good morning mam.\" Susan smiled at the honorific and returned a good morning. \n\n\"We are trying to figure out few things from last night, Rick.\" I said, \"was my assistant the one who booked the room?\" I think I knew the answer so I worded as such.\n\n\"Yes, Samantha stopped in on Tuesday and made all the arrangements. She also made sure that the car was available for Ms. Darla. She was quite efficient. She asked me to stay on post til you returned from your evening. Just to see if you two needed anything.\" He realized what must of happened and interjected, \"Did she forget to touch base with you before Friday, is that how we all got confused?\" \n\n\"Something like that.\" I smiled, \"I will make sure you're compensated for your efforts Rick and I want to thank you for your continued discretion.\" \n\n\"No need, Mr Timmins. Samantha already got me two tickets to that sold out Russian ballet thing downtown.\" he laughed , \"I hate the ballet but, my wife hasn't stopped thanking me. I'm kind of her hero right now which is better than gold these days.\" I didn't even know he was married. How did they know that tickets for his wife was the way to go? They were good, real good. \n\nI thanked him again anyway and he left with the remnants of our breakfast. Susan looked at me, \"Who are these women?\" I now knew Susan's secrets and I saw no issue with her knowing some of mine. I explained the strange interview and desire to have me wait until Monday before making a final decision. \n\nShe listened to the story and came back with an succinct observation. \"Fuck, thank god they weren't working against you.\" She was right. I still had no clue how they figured out so much about my dealings. But what bothered me the most is how they guessed what was in my head. I began to wonder if I could have them running loose in the world. A pleasant thought ran through my mind. It was time to throw a wrench in the works. \n\nI called down to Rick and told him I forgot my phone and asked if Samantha happened to leave her number. She did, efficiency would allow no less. I gave Susan a devious smile and dialed the number. Samantha answered and I place her on speaker. \n\n\"Samantha, you are on speaker with Ms. Howard and myself.\" I cherished the imagined expressions, \"Does Rebecca happen to be there.\" There was a slight pause as the their phone as put on speaker.\n\n\"I am here Robert\", she answered tentatively, \"We were expecting your call but, I must say we were not expecting Ms. Howard to participate.\" I was jumping happily inside. I didn't want to be as predictable as they had proved last night.\n\n\"I have just offered a Ms. Howard a temporary position with my firm,\" Susan was shaking her head no while trying to figure out where this was headed. \"She is my current head of staffing and will be conducting the final interviews for the position.\" I was smiling ear to ear watching Susan's questioning look. \"She has a few questions for you.\" I leaned into Susan's ear and whispered, \"Get all the answers you need.\"\n\nSusan was silent for a moment then found her confidence asked flat out. \"Rebecca, did you lie to me?\" Direct, just as I hoped. If these two were going to fuck with us, they deserved to be brought to task. There was a short pause before Rebecca came back with a response.\n\n\"No Ms. Howard, I never lied to you. I will admit that I left out some important facts but I never lied.\" It sounded sincere.\n\n\"Vasar is real?\", That's my girl. Keep them on their toes. \n\n\"Absolutely, we would never falsify that. Two of our sisters at Delta Phi have been tasked to acclimate you to the environment if you choose to follow through. They are unaware of your history but, they have been informed that you haven't been exposed to some of the things you will encounter there.\" Damn, they are thorough. They planned more than her attendance, they were laying the groundwork for her success. \n\n\"Why would you do this for me?.\" A valid question. Looking for motive before applying trust. Smart girl. Rebecca wasn't caught off guard.\n\n\"It took us only two days to realize you are in the wrong profession. You have dreams beyond your means and have the brains to achieve them. Truthfully, your past is the only thing standing in your way. We didn't feel right about leaving you with only one path in life.\" Rebecca didn't even fumble the answer. \n\n\"How did you know so much about me? How did you find name?\" I was really interested in the answer to this one. Keep digging girl. \n\n\"Um, I guess I have to apologize about that.\" Susan was intrigued, \"While we were shopping and you were trying on clothes, you left your phone on the bench. It was fairly simple to identify your mothers number. Your hometown libraries collection of high school yearbooks gave us a good start. It didn't take us long to put your past together after that.\" Resourceful simplicity. I was kind of impressed. I was also trying to think about what clues I had been leaving around. Susan didn't seem impressed. .\n\n\"You didn't speak to my mother did you?\" Susan looked and sounded angry. \n\n\"No, we would never do something like that.\" Susan relaxed. I suspect her mother was blissfully unaware of her current profession. Susan calmed and switched gears. \n\n\"We both feel that we have been deceived. What made you believe this would improve your employment prospects.\" Bam! Lay it on the line. I only hire the best I smiled to myself. \n\n\"Deceit is a strong word. I believe you both were intending the same evening you experienced before we augmented it. We didn't make any of the major decisions and we certainly didn't change any of the plans. If we had failed in improving the evening I suspect we wouldn't be talking now.\" She was prepared for the question, \"Did you not enjoy the evening?\" she pushed it back to Susan.\n\n\"It was as wonderful as you suspect but, the mornings revelations were a bit traumatic. Are saying that future employment with Robert will be wrought with second guessing and more traumatic mornings.\" She was getting good with this. She might make a good lawyer. \n\n\"No, there is quite of difference when you know what's coming. We would never keep our manipulations secret once employed. We will simply remove the trivial considerations of his life and allow him to enjoy the rest.\" Rebecca made a good point. I had to admit that last night was whole lot nicer when they stuck their noses into it. \n\n\"How does Robert know that you will remain loyal. Secrets like last night have a way of coming back and ruining a man. You would be in a great position to maximize damage.\" Sarah was thinking ahead. The girls were right when they said she had a good head on her shoulders. \n\n\"Unfortunately, trust can only be built over time. Last night was an example of our commitment to Robert no matter the subject. We could have attempted to use it as leverage but, instead we participated and enhanced its execution. We will be loyal to Robert alone and in time Robert will recognize that for the fact that it is.\" Susan was undeterred. \n\n\"Why Robert?\" \n\n\"He is successful, unattached and has no family. He doesn't want a wife or any of the emotional attachments that type of commitment brings to the table. We can work best in that kind of environment. As you could tell last night, it is difficult to remain objective when your loyalty has to stretch to multiple people.\" Susan nodded her head and continued. \n\n\"Your target criteria and that of a gold digger seem aligned.\" Susan left the comment open and waited for response.\n\nRebecca and Samantha laughed. I was no longer sure who as answering. \"We would not have choosen Robert if it was that easy to part him from his money. We really have no need of his fortune. Our references should attest to the fact that we come from very old money. Our family is very well connected. If employed, we would have a vested interest in making sure that Robert remains wealthy and lives a long life.\" They were answering everything but, not really answering anything at all. I was only certain that I didn't want these ladies as enemies. ",
        "\"Would you like my recommendation, Robert.\" Susan also recognized the futility of asking any more probing questions. \n\n\"Of course.\" I folded my arms across my chest. \n\n\"They worked for four days without your knowledge or consent. Last night was the result of their talents. If you measure employability by achieving and surpassing goals, they hit a homerun. It is only logical that their successes will only improve with your consent. If you don't hire them, you take the chance of their talents being used against you. I feel this as a very low possibility. I still question their motivation but, I don't believe their true reasons are nefarious.\" Susan was checking off her fingers as she emptied her mind. \"After last night, I realize I care what happens to you. I have full intention of going to Vasar and strangely, it would give me a sense of comfort if I knew these two were looking out for you. I recommend you hire them.\" Susan finished while looking me eyes. I had no idea why it touched me that a prostitute cared about my future. Then again she just quit the business. There was really only one resolution to this situation. Sorry Bruce. \n\n\"I am not one for second guessing my consultants. Your salary requirements are acceptable ladies. Can I expect you Monday morning?\" I smiled to Susan who seemed a little shocked that I allowed her to make such a life changing decision. \n\n\"Thank you for your trust. We will be there Monday, Robert.\" I had no idea who just answered. I was going to have to get them name tags. I will never be able tell them apart. \n\n\"Remind me to inform HR of Susan's contribution to the company. I believe twenty percent of the first years salary is the standard finders fee.\" I was smiling at my brilliance and felt good about adding to Susan's change in fortune.\"I leave it to you two to gather her vitals.\" I wanted to give the girls a good reason to check up on Susan.\n\n\"That is the standard commission and will be the first thing on our list. We will see you Monday.\" I suddenly remembered that they will be running around my house. So much for privacy. Then again, my night with Susan didn't seem to phase there sensibilities a bit. Might just have to keep a door closed once in awhile. I canceled the call without saying goodbye. Have to start letting them know who is boss. I turned to Susan whose mouth was hanging open.\n\n\"Did you just give me thirty thousand dollars?\" She was obviously way out of her comfort zone. \n\n\"Actually, it was more like twenty. The government is going to take their cut.\" I was relishing her shock. She was simply adorable when she didn't know which direction to go. \n\n\"That is way too much. We were only on the phone for five minutes. Robert, I really appreciate the gesture but, I can't accept it.\" She was seriously trying to turn it down. She had already mentally quit her job. There was no way Darla would have passed on the money.\n\n\"You can and you will. There is no way I will allow you to enter Vasar without a new wardrobe. Those rich socialites will have to find a different reason to raise their noses. Face it, you now have three benefactors who wish to take pride in your success.\" I wasn't going to let her not accept my help. \"If you think I am going to give you a dime for last night, you are sadly mistaken. It felt like a real date and pleases me to keep it that way. I know it is a trivial distinction but, I will only pay you for your consulting and in truth, it was valuable to me.\" Susan started to tear up again. Damn, why do I let her affect me. \n\n\"It was a wonderful night. Best time I have had in a long time.\" She leaned over and hugged me placing her head over my shoulder. I think she was hiding her tears. \"I mean, I know that there is no 'us' in the future but, last night felt so good.\" Smart girl. I am mister non-commitment. Last night was our last date. Another date would never measure up.\n\n\"This is going to sound a little strange coming from me. When I feel like I have lost control of things, I get a little antsy.\" Here I was confiding in her again. \"There is one thing I do that always returns me to earth.\" I suddenly felt ridiculous and last part came out less the confident. \"Would you like to go with me to the zoo?\" \n\nShe pulled back from my shoulder beaming. \"What a wonderful idea. I haven't been to a zoo in years.\" She was bouncing as she headed for her overnight bag. \"Did you bring a change of clothes?\" She asked as she pulled out shorts, tshirt and tennis shoes. \"Rebecca mentioned I should drop off a change of clothes when I checked in yesterday..\" She slowed as she thought about the preparations. \"Damn, they're good\".\n\nI couldn't go in my dress clothes and the zoo was not on the way to my house. Didn't matter, what's the point of having all this money if you can't do what you want. The hotel had a small, all be it, expensive clothing store usually reserved for those who forgot their tennis or swimming apparel. I called down to Rick to make sure it was open on Saturday. \n\n\"Not until after lunch Mr. Timmins. Samantha had me put an ensemble aside for you yesterday in case you needed it. She assured me it that they were the correct size. Would you like me to bring it up?\" Now it was getting scary. I told him that would be fine and hung up the phone. I looked at Susan, \"Damn, they're good.\"\n\nThe zoo had been one of my favorite places since childhood. No matter what kind of problems I was having, the animals never failed to entertain. I have always made donations when they called and even ponied up big when they were trying to build new exhibits. Zoo's and prostitutes were my only real indulgences. I had no idea why I was sharing my private joy with Susan, but her enthusiasm was contagious. I kind of felt like a grandfather taking a grandchild to the zoo for the first time. It was to bad the monkey exhibit was closed. They were my favorite to watch. I always thought of them like little people with no moral inhibitions to reign in their freedom. A new facility was under construction and the contributor letters said it wouldn't be open until the residents were given time to acclimate to the new surroundings. Luckily, there was plenty of other animals to gawk at. \n\nWe walked up to the ticket booth and I handed my season pass through the window and mentioned I had a guest with me. The attendant glanced at my pass and wheeled his chair back to a phone on the wall. After a brief conversation he returned and pulled a manilla envelope out of drawer and handed it to me. \n\n\"Ms. Howard's pass is inside as well as the park maps, train pass and 2 tickets to the sealion show at 1pm.\" he said all this as if I should know what he was talking about. \"If you will wait by the elephant statue,\" he was pointing to the left just inside the park, \"Dr. Franklin will be with you in just a moment.\" He returned to counting ticket stubs like when I first walked up. I didn't have to ask how they knew Susan's name. I just walked like a zombie to the elephant statue. \n\n\"Well hello Mr. Timmins.\" I stout elderly gentleman with a trimmed white beard was holding out his hand. I shook it. \"And you must be Ms. Howard.\" Susan shook his hand. \"I am Dr. Franklin but, please call me Doug. I was so pleased when your assistant called and told me you were planning a visit.\" He seemed sincerely happy. \"Your contributions have been most helpful and I wanted to thank you personally. I seem to have missed you at the donor dinners.\"\n\n\"No offense, I kind of avoid those things.\" I was trying to avoid admitting I only knew half of what was going on.\n\n\"I would avoid them to if I could.\" He laughed jovial, \"I thought you and Ms Howard would like a personal tour of the new monkey house. It won't be open to the public for a few more weeks but, it will allow us to show our gratitude.\" Susan smiled feeling a bit privileged.\n\n\"We would love that.\" I really meant it. Never thought of calling ahead and leaning on my contributions. \n\n\"Well follow me then. We have to take a few back alleys into the bowels of the zoo.\" He stepped off at a brisk pace toward an employee only sign. I felt like a five year old at Christmas. I grabbed Susan's hand and leaped after Doug. I didn't want to miss a thing. \n\nSusan looked at me and smiled, \"Damn, they're good.\" She, like me, no longer cared how they surmised our destination. \n\nMonday was too soon in coming. I reluctantly said goodbye to Susan Saturday evening and wished her the best at Vasar. I had no desire to be intimate with her again but, we shared enough secrets to make me comfortable around her. I do like my comfort.  \n\nAt exactly eight AM the door bell chimed. I didn't think I had anything scheduled until that afternoon so I was still in my robe. I opened the door to see Rebecca and Samantha in matching cutoffs and t-shirts, moving clothes. \"Good morning Robert.\" I had absolutely no idea which was which. They both smiled and entered the foyer. \"Rebecca is going to open the back door so those gentlemen can move our belongings into our room without disturbing you.\" Process of elimination, it was Samantha speaking and gesturing to the moving truck in the drive. I didn't remember telling them which room would be theirs. The events this weekend had me quite convinced that they already knew which one I had allocated. Rebecca headed off to the rear of the house ignoring my halted directions.\n\n\"I notice a bunch of discarded furniture stacked in the garage.\" I didn't remember leaving the garage door open. \"Would you like these gentleman to haul it away?\".\n\n\"Well yes, I have been meaning to get rid of it. It was left here by the previous owners when they staged the house.\" Why did I feel it necessary to explain it's existence?\n\n\"There is a resale shop across town, the zoo is having a charity auction this weekend or we can donate it to salvation army.\" She ticked off the options on her fingers and waited for my guidance.\n\n\"If zoo can make use of it, give it to them. Oh, and thank you for Saturday. It was ... special.\" I admitted hesitantly. I didn't want to admit that it was the best time I had ever had at the zoo. \n\n\"We are glad you enjoyed yourself. Dr. Franklin was wonderful. He was genuinely pleased to escort another animal lover around the park.\" She said this matter of factly as she moved toward the kitchen. I followed closely, wondering how she was going to inform the movers about the furniture from the kitchen. Instead, she opened the third cupboard, bypassed three different types of fancy coffee and grabbed the plastic container of Folgers and the filters next to it. She pulled the coffee maker away from the wall and began making coffee like she had lived here her whole life. I was mesmerized. That fancy crap was the result of gifts over time. I grew up on Folgers and, unless I am on the road, it was all I drank. \n\n\"I already spoke with Maggie this morning. You have a conference call at ten with your department heads.\" Crap, nothing like a nice weekend to make me lose track of my commitments. \"She faxed over the agenda and a set of handwritten notes on the subject that you left in the office. They should be waiting in your office here.\" It would have been a bit embarrassing forgetting my own meeting. Suddenly a bad thought entered my head. \n\n\"You two are not thinking that Maggie is redundant are you?\" Maggie has been my secretary for ten years. We have gotten very used to each other. She is very loyal to me and in turn, I am loyal to her. \n\n\"Oh heavens no. She is our eyes and ears at corporate. We wouldn't be near as effective if we lost her.\" The pot began to blow steam as it dripped fresh coffee. \"She is taking care of Susans processing for you. Pam in HR was hesitant in dealing with us directly until she got word from you.\" They already have already found their way into my corporate umbrella. How did they convince Maggie? Samantha continued, \"It's Maggie's twenty fifth wedding anniversary today. She is really proud of it and in this day and age, who can blame her. She and her husband will be having dinner at Vitolini's tonight. The maitre d has been instructed to surprise them a nice bottle of champagne with a short violin serenade with your compliments.\" She smiled, \"Every woman likes to be the center of attention now and then.\" I remembered Susan's transformation and her description of walking in the restaurant. \n\n\"How thoughtful of you Samantha.\" I realized I was grinning.\n\n\"Well actually, it will come from you.\" She was grinning back. \"That reminds me,\" She held up her hand in the standard high five position. I complied. \"That's from her husband Frank. He hates frilly surprises and wanted to thank you for letting him in on it so he didn't look like a 'dork' as he put it. Sweet guy really.\" Did I just do some male bonding through a gorgeous redhead? I am going to look like a hero and all I did was sleep in. \n\nShe continued to fill me in while pouring me a cup of coffee. \"We found Bruce Wilkerson a great position with the Havertons. We couldn't leave such a talented man out in the cold at our expense.\" These ladies have a talent of leaving everyone they touch a bit better off. \"Go ahead and relax, I'll go get you those notes so you can prepare for your ten o'clock.\" She moved off toward my home office. Why was I not surprised that she knew where it was. \n\nCuriosity got the best of me. \"Aren't you going to tell the movers about the furniture in the garage?\"\n\nShe gave me mischievous smile. \"They already know. Now if you would have chosen a different option, then I would had to talk with them.\" I laughed to myself. They have been in my employe for a total of ten minutes and I already didn't know how I got by without them. \n\nJust before ten, Maggie called. \"Are you ready to be put into conference Mr. Timmins.\" \n\n\"One moment Maggie,\" I valued her opinion, \"What is your opinion off Rebecca and Samantha?\" \n\n\"They are very competent and will be a great asset to you, Mr Timmins.\" What a line of bull. She was feeding me the corporate line like she felt I wanted to hear. \n\n\"Maggie, there is no one else here with me, what are your honest impressions?\" I tried to emphasize the word 'honest'. \"I don't want you to dress it up.\"\n\n\"Well frankly, Mr Timmins, its about damn time you got some help. They are wonderful. This is the first morning I felt that we were on track together. I am usually frazzled on Monday because I never know what you remember from the week before. It is really difficult when you work from home so much. Today, I think we had your day organized before you even got out of bed.\" They already had her using the word 'we'. They bonded as a team and have my favorite employee eating out of their hands before the ink in their contract is dry. \n\n\"So you think I should keep them?\" I was smiling openly playing Mr Obvious. \n\n\"Are you playing with me Mr. Timmins?\" She wasn't biting.\n\n\"Maggie, my name is Robert. All my friends call me Robert and so should you. And yes I was toying with you. I was just making sure you agreed with my decision to hire them since you will be working closely with them.\" I paused a bit, \"Oh, and congratulations on reaching twenty five. Pretty impressive this day and age. Although, I can't imagine any guy ever letting you go.\" \n\nI could feel the smile beaming across the phone. \"Thank you Robert, were hoping for another 25 if we should be so lucky.\" she paused, \"Would you like me to put you through now?\" Thank you Samantha. \n\nI added one agenda item to the meeting. I informed all the department heads that Rebecca and Samantha were my personal assistants and I would appreciate all of the departments cooperation. Pam apologized about being hesitant earlier. I hired Pam because she was a stickler for processes and protocol. She was, in a sense, a bitch at her job. Just the sort for HR and I wanted to keep it that way. Payroll was one of my biggest expenses and I needed someone to watch it like a hawk. I thanked her for not to making any changes before she was authorized by me. I also told her she was now authorized to take my direction through Rebecca and Samantha as she does through Maggie. The girls were now full integrated. \n\nThe meeting took longer than planned. Some zoning issues had cropped up that were slowing down a development we were working on. My construction folks were concerned we would lose our timing window with the cement company. One thing screws up and it could snowball until we fell months behind schedule instead of days. Unfortunately, we couldn't resolve the issue at this meeting and planned another meeting for tomorrow when we had more facts. \n\nIt was time for lunch and since I usually just drink breakfast, I was starved. I headed to the kitchen to make a sandwich and wasn't surprised to see a fresh ham and cheese waiting on the counter. Next to it was mug with and unopened bottle of beer next to it. One of the reason's I like to work from home is I can enjoy a beer in the middle of the day. Wouldn't set a good example if I were to partake at the office. I grabbed the sandwich and lifted the bread. No mayo, perfect. The rest of the world loves mayo, I hate the stuff. I popped the top off the beer, emptied it in the mug and sat back to think about what could be done about the zoning issue. \n\nOne of the girls sweep through the kitchen. Grabbed the empty bottle and placed it in the recycle bin under the counter. Weird, before today I didn't have a recycle bin. I guess I am more earth friendly now. \"Maggie just sent a bunch of construction project info over. Samantha is doing some additional research and you should have it all by the time you're done with lunch.\" And off Rebecca went. My mind returned to the zoning issue.\n\nTrue to her word, the pool table in the rec room was covered in information when I finished lunch. I had the original project schedule, new forecasted schedule and a worse case schedule along the left side. I had the construction plans, maps and zoning issues in the center and pages of the people involved running down the right. I looked like our planned opening in early October will be pushed to the February, March time frame. Worst case was early summer. The cost increases were stiff due to the loss of revenue time. \n\nI glanced through the people on the zoning board and thought briefly about greasing some palms. I let it pass. I had skirted the edge of the law many times, I just refuse to cross the line. Samantha had developed a page of politicians who have a direct interest in the area. Looking over the information, I didn't immediately recognize any of the names so any calls I made would be cold. I wondered if some carefully placed campaign contributions might get me an ear or two. She included tenure information for the offices and I noticed a pattern. The mayor and half the city console was up for re-election in November. There was a note in the margin next to the mayor that he has serious opposition for the election. Thank you Samantha.\n\nI immediately placed a call to the Mayor since Samantha saw fit to include contact information. \n\n\"Mayor Donaldson, this Robert Timmins. I am building the Phillmore project downtown.\" I am sure someone on my staff had spoken with him or his people before. I wasn't sure if he could connect my name to the project. \n\n\"Robert, it's good to finally speak with you. I was happy to see someone tearing down that old eyesore and putting the land back into production.\" \n\n\"Good, I am happy to hear you feel that way. I'm calling to try and put together a ribbon cutting in October. We would like to do something in the press to make sure the public is aware and helps to make it successful. My people have forecasted 120 permanent jobs and a sales tax increase to the city of just over a half million. It would really help to have you put together a small speech in support of the project and maybe help cut the ribbon.\" I know he only heard October, jobs, money and speech. I was baiting the trap. . ",
        "\"Why, I would be happy to help put the project afloat. I have always said that government needs to work closely with business to guarantee our cities future.\" He had one foot in the trap. \n\n\"Great, I was hoping you would help. I will have one of my PR guys coordinate with you about time, place and agenda. I personally like to keep a low profile on these things so, I would just as soon introduce you and let you handle the rest if you don't mind. After all, these projects can't even get off the ground without help from folks like you.\" I knew the Mayor was contemplating how he could maneuver this into real votes. I just gave him permission to take credit. \n\n\"Robert, a good politician is always been happiest behind a microphone.\" I heard a false chuckle, \"Just give me a time and a place and I will be there.\" That was the second foot. Now to spring the trap. \n\n\"We are planning for October 12th. We have some zoning issues that may delay it for a few months but, it will be a good event no matter when its held.\" Snap goes the cage. Then something I didn't expect. Laughter, a full belly laugh. \n\n\"You set me up you old dog. I was eating it up and you just feeding me more.\" More laughter. I guess I thought a small city Mayor were a little less worldly. \"Well you got me. There will have to be a couple of council members at the podium to help grease the wheels. I can only promise you that the city planning committee will expedite the permit evaluation, if there isn't any legal issues, you will have your permits when you need them.\" More chuckling. \n\n\"I leave it to your judgement as to who should be at your side Mayor.\" I now knew this guy was a smart politician and I wanted to give him as much leverage as possible. \n\n\"Robert, next time just flat out ask. Although, I must say I really enjoyed the game. In truth, this city needs projects like yours. If I have to kick some ass to clear the red tape, I won't hesitate. I'll send over a copy of the speech. Have your people review it. Just make sure I don't say something that will bite me in the ass later.\" He is a very smart politician. He was going to take as much credit as I would allow him to have. He wanted to make sure I wasn't going to contradict him later. \n\n\"Sounds like plan Mayor. I wouldn't mind catching lunch with you in the future. There are some other parcels we may be interested in if there can be some accommodations made.\" I liked this guy. No bullshit, just progress. \n\n\"I would be happy to meet after I get re elected. Otherwise, it would just waste our time. You have a good day Robert, I'll be in touch.\" He didn't wait for my goodbye. I got what I wanted and he got what he needed. Samantha's research was gold. \n\nI was returning to the kitchen when I saw a man on a ladder in the pool area repairing one of the upper window vents. The damn thing wouldn't open and I really didn't know who to call to fix window vents. One of the girls was below the ladder directing the action. Another thing off my mental list of things I meant to do but would never had gotten done. \n\nThe other one was sitting on a stool in the kitchen having tea. I was seriously contemplating name tags again. \"Rebecca's working with the window company to get that vent fixed.\" I just realized they have been telling me their names by informing me what the other is doing. \"Did you come up with a solution to the zoning problem.\"\n\n\"Yes, and thank you for your research. Sometimes solutions are just hiding in the data.\" I was sounding kind of proud of myself. Samantha smiled acknowledging my pride. \n\n\"Have to make a contribution?\" Whoa, did I do something these two mind readers didn't think of? I began to relish the moment.\n\n\"Nope, found a better solution.\" I didn't want to just give it out. For some reason I wanted to her to ask me. I wanted to be acknowledged as unpredictable. \n\nShe placed here teacup back in it's saucer and just looked at me. I wasn't giving in. Exasperated she shrugged her shoulders, \"I got nothing. How did you do it?\" Victory was mine. I know it was infantile but, I was loving every minute of it. \n\n\"Traded an election speech for the fast track. Going to let the Mayor take credit for the project.\" I was smiling ear to ear. I must of looked the ripe fool but, I was more proud of coming up with a solution that they didn't foresee. \n\n\"I must admit, that is a lot smoother than I envisioned. I thought the zoning commission itself was a better target.\" I could see her mind shuffling the tactic away for future consideration. \"Never thought you would use the election data that way. But, that's why I gave you everything.\" she smiled giving herself a small pat on the back. \"And yes, we are proud of you too.\" It sounded almost motherly but, what followed didn't. She gave me a quick hug and I felt a slight shudder run through my body. All I remembered from the hug was her breasts pressing into my chest. It was nicer than I wanted it to be. \n\nWhen I first meet the girls, I only noticed how hot they were. When I questioned their motivations, I just wanted to send them packing, after a quick romp of course. When I finally realized how much I needed them, how wonderful their minds worked, I stopped thinking of them as sexual beings. They had become useful tools for my life and business. They had only been here half a day and I was richer in more ways than the obvious. I enjoyed taking them for granted. That hug pulled my mind back to the sewer and I didn't want to go there. I wanted to remain comfortable and happy. Sex has always led to me getting bored with the object of my affections not to mention the emotional crap that always ensues. \n\nShe grabbed her empty cup and saucer, rinsed them and placed them in the dishwasher. She headed off to work on something else oblivious of what her hug had created. I hated myself for suddenly being mesmerized by her cute little tushy as it headed to the back of the house. Self conscience, I realized that I have been in my robe all day. I hadn't even showered, shaved or combed my hair. It is not that it was abnormal, it just didn't feel right with the girls running around. Why do I suddenly feel uncomfortable in my own house. Shit, it was only a hug. \n\nI spent the rest of the afternoon brooding. I sat in front of stupid tube, still in my robe, with the news on. There was half a warm beer next to my Easyboy and I was rereading the same paragraph in the Wall Street Journal for the third time. I was purposely avoiding contact with the girls. I feared I was about to fuck up a perfect thing. I simply couldn't get those breasts out of my head. I was thinking of hiding in the bathroom to relieve myself. Maybe if I rubbed one off, it would remove the edge and I could get those breasts out of my head. The girls picked that moment to appear. \n\n\"Samantha and I are going for swim. Would you like to join us.\" They were both in matching robes carrying towels. A picture of those two in matching bikini's entered my head. I was becoming aroused just thinking about it. Now I had bikini's and breasts in my head. I had to take my perverted ass to the bathroom before I did something stupid. \n\n\"No, I think I will pass tonight. Thinking of turning in early.\" Visions of skimpy bikini's were whipping through my mind. I had to get out of there. \n\n\"Ok, let us know if you need anything.\" Samantha said. They turned to walk toward the pool and in unison dropped their robes on the rec room floor. All the Sports Illustrated swimsuit issues in the world did not prepare me for what was ten feet away. Two of the most beautiful bottoms in the world walking away naked as the day they were born. They never looked back, they just kept walking through the sliding glass door that led to the pool. I suddenly decided that I could use some exercise.\n\nI got quick flashes of perfect breasts as they dove in ahead of me. I had picked up their robes and deposited them on one of the pool loungers. I added mine as well. I must have been a sight, standing there unshaven, unkempt hair with my tented sleep shorts. There was no hiding the fact of my arousal so I just dropped my drawers and walked to the edge of the pool. \n\n\"You decided to join us Robert?\" I lost track of who was who and there was no place to pin name tags now. I didn't answer, I just jumped in. \n\nIt wasn't the experience I was expecting. My dreams always had me in the throes of selfish passion when it came to two naked women. It turned out to be more like a high school pool party. Lots of laughing, splashing and underwater antics. Body rubbing was unavoidable but, none of it was overtly sexual. The constant flashing of the perfect female form kept me with a raging hardon but, the need to relieve myself immediately had faded away in the fun. Neither made any indication that they noticed my obvious condition. They simply played. It was adorable and I must say I enjoyed myself immensely. After about an hour, they had me breathing so hard I had to call it quits. I simply didn't have their endurance. I had no idea what game we were playing but, they won. Somehow, I was happy and comfortable again. \n\nWe all dried off together on the deck. Neither girl showed any hesitancy to my roving eyes. Nor did they try to show themselves off. We were just three naked people having a normal conversation. I just ignored my dick which was pointing straight as an arrow and headed off to take a shower. I was relaxed and had full intention of jacking off in the shower thinking of my darling play things. The visions running through my brain weren't my normal porn driven fantasies. I was getting off just by imagining being with them. Just being there. Strange, different and a pleasant change from my cruder fantasies. \n\nI cranked up the hot water and stepped into the stream. Leaned my head back and began to remember a few moments back when the girls were laughing with me. I smiled because I knew this was going to be a good one. From out of no where I felt an arm encircle my chest, the hand pulled me slightly back til two firm breasts pressed into my back. It was a perfect feeling for my imagined visions. I began to open my eyes to see which angel was behind me.\n\n\"Shhhhh,\" she said softly in my ear as she held me snuggly. I knew she wanted me to stay just as I was. I kept my eyes closed and let her envelope me in her softness. \n\n\"Rebecca?\" I questioned softly.\n\n\"Does it matter?\" She whispered into my ear followed by a soft flick of her tongue. I decided it didn't. A tender hand wrapped around my shaft and slowly caressed it in the warm water. I wasn't going to last long and for some reason I had a strange desire to release quickly. She couldn't have given me a more perfect luxurious feeling. I needed to reward her. To let her know how wonderful it felt so I let myself go. My hips were shaking as shot after shot hit the tiled wall. It was intense, the whole time she was caressing my neck with her lips. I didn't want to open my eyes for fear of breaking the spell. \n\n\"That was wonderful Rebecca.\" I whispered. I had know idea how I knew it was Rebecca. I just knew and I was certain beyond a doubt. It was my wonderful Rebecca. I felt tremendous joy. Not my joy but hers. It wasn't something I sensed, it was something I knew and I was filled with it. I was elated and opened myself up to her and shared. I don't know how, but I gave her my joy. Something stronger came back, more substantial. I barely questioned the idiocy of the concepts pouring through me. I just knew she was part of me and I was part of her. I didn't understand what was happening but, it wasn't wrong. This whole time my eyes had remained closed with warm water caressing my body. \n\nShe turned my head to hers, lips to lips. I open my eyes to see two pools of green alive with impossible love. I kissed my goddess and let loose a flood of passion from my soul into hers. I wanted to share more and deeper. How did I ever live without this.\n\nShe broke the kiss with surprise in her eyes. \"Whoa, you learn fast.\" I wasn't quite sure what I was learning. \"So much, so fast. You have such a beautiful soul.\" She pulled away while send little bursts of love straight to my heart. \"We have whole lifetime, Robert and you're exhausted\". \n\nI knew she was right. I felt like I had just ran a marathon. My whole body inside and out was spent. I pulled back some of myself but, couldn't find it in my heart drop it all. I kept some of her as well which pleased me. She smiled softly and said. \"That's better. I'll see you in the morning.\" She gave me a peck on the cheek and grabbed a towel off the rack to wrap around her chest and headed out the door. Her cute little butt was half exposed under the towel so I shared with her how tempting it looked. A series of little flirts tickled me back as she left the room.\n\nI barely made it back to my bed. It was like alcohol. One drink makes you feel good and two makes you feel better but ten puts you on your back. My body was sapped. The last thing I remembered was feeling for Rebecca and her feeling back. I fell into a black sleep and my body recovered. \n\nI awoke late the next morning of my own volition. There were new shades behind the drapes on my windows that didn't allow the morning sun to violate the room. I smiled and felt a pulse of love poke me. I sensed Rebecca in the kitchen and could almost smell the coffee. I sent a smile back at her and rejoiced that last night wasn't a dream. \n\nThe door to my room opened and Samantha walked in wearing only a pair of pink panties and carrying a bowl of water that she placed on my bedroom desk. She looked adorable. Rebecca sent me a giggle and I knew I was leaking my thoughts. It wasn't followed by jealousy so I felt relieved. \"Rebecca told me you were up. We spoke with Maggie and you are scheduled for a meeting at corporate this afternoon. She also penciled in Pam who has been wanting a chat with you.\" Damn, I have a job. She was headed to the bathroom and grabbed my blade, shaving cream and towel. \"I have been tasked to make you presentable.\" She smiled as she pulled out the armless desk chair and gestured for me to sit. \n\n\"I'm sure I can shave myself Samantha.\" I said. I wasn't sure why but, I was a bit nervous about being naked and was hesitant about getting out of bed. Samantha didn't seem to mind but, I felt Rebecca and I was suddenly worried it would upset her. A giggle slammed into me about my shyness. I was leaking again. It was wrapped in love but, it was still a laugh at my expense. I sent back a sense of boldness and threw back the sheet. I stepped up out of the bed secretly happy I wasn't sporting any morning wood. I sat my naked ass down in the chair and lifted my chin up. \n\nSamantha surprised me by spreading her legs and sitting right on my lap facing me. She kind of felt nice and I struggled to not leak. It didn't work as I felt another giggle tickle my heart. Strangely, Samantha smiled in time with the giggle. I tried desperately to not look at her breasts. I had no idea why I felt I was cheating since Rebecca knew exactly what was happening. Strangely, I received what I could only describe as a tender 'OK' from Rebecca. No more teasing just an acknowledgement that everything was fine. I glanced at Samantha's breasts and just like Rebecca's they were wonderful. I have always been a visual guy and the sight of her chest was getting me aroused. I felt a flood of love from Rebecca which made me harder. \n\nSamantha dipped the end of the towel in the water and tenderly wet my shadow. The water was warm and felt good. Rebecca felt the warmth and Samantha smiled. Samantha sprayed the shaving cream in her hand and applied way too much to my growing beard. I tried not to smile, women always think you need a lot. Must be those stupid commercials. A brief look of frustration crossed Samantha's face and then she smoothed out the cream with her clean hand while scooping away the excess, leaving a more manageable amount on my face. How did she pick up on that? I felt another pulse of love which, of course, distracted me. \n\nAfter wiping her hands, Samantha went to work with razor. As she shaved my face, her nipples would inadvertently scrape across my chest causing the most delightful tickling sensation. My arousal was more apparent laying against her tummy now as she worked. I was again getting uncomfortable leaking this to Rebecca and struggled to hold back. Love flooded me again, Samantha smiled and I got harder. \n\nSamantha had just about finished and was left to the tricky moustache portion. She tilted my head back raised up on her legs a little to get leverage. This of course dragged her panty clad pussy across the underside of the cock. I felt wetness glide across my member and found it hard to hold my erection still. I wanted more friction but, it was like Rebecca was there. Rebecca found my suffering humourous and at the same time Samantha was having trouble holding back her own chuckles as she began to slowly stroke my hardon with her crotch. I have been had. \n\nI sent a flood of love to Rebecca laced with the knowledge that I sensed she was sharing with Samantha. Rebecca flooded me with love and passion. I knew it was true. Samantha dropped the razor and looked me deep in the eyes. She pulled the gusset of her panities to the side, mounted my pole and slowly slid down it's length. I let Rebecca feel it all and I sensed her acceptance as she moved toward us through the house. \n\nA strong feeling of bliss burned through my soul and it was neither Rebecca or I. Samantha slowly climbed back up my cock and then descended more quickly and I was hit with tremendous passion which swelled my cock to new heights. It was followed by Rebecca's love and concern for my confusion. I realized I was sharing with Samantha and it felt like heaven. They were wrapping my soul in pure love. I felt them both as Samantha, once again, lowered herself down my shaft. It was beyond beautiful and I didn't want it to stop. I reached out and entwined them both in my love. Flooding them with everything.\n\n\"Oh, God.\" Samantha began shaking uncontrollably, as I exploded both seed and my inner self into her. I pulled in Rebecca's soul and braided it with Samantha's as she climaxed and we held her together. Samantha was collapsing backwards as her orgasm waned and I feared she would drop to the floor as I tried feebly to recover and catch her. Rebecca was there, kneeling behind her grinning sister and caught her at the shoulders. \"You were right, so beautiful.\" Samantha whispered to her sister. They surprised me when the shared a tender passionate kiss and shared with me how wonderful it felt. \n\nRebecca turned her head to me. \"We are one.\" \n\n\"We are one.\" I agreed. My whole body tingling with the new connection to Samantha. My physical connection to her seemed secondary. I felt her vaginal muscles give my cock a little squeeze, reminding me of what we just did. I grabbed her arms and lifted her from Rebecca and wrapped her in my arms. \"It was so beautiful.\" I whispered in her ear. Rebecca leaned forward and caressed her sisters back and gave me a loving smile. \n\n\"Time for a shower mein fuhrer.\" Rebecca's face held humor as she retrieved the razor to finish under my nose. Samantha leaned back and laughed. I guess I was left with a little white Hitler mustache when the shaving got interrupted. Samantha held my face and Rebecca finished in two strokes. I was now privy to their link and how efficiently they could work knowing what the other was intending. I began to understand some of the mystery of the past few days. I wanted to know more. Who are they and why I was linked. \n\n\"Just enjoy it for now. In time you will understand it all.\" I had leaked my thoughts and Samantha had responded. Rebecca distracted me with a kiss and they both sent reassurances to my soul. I realized I was willing to wait awhile and I shared back. ",
        "Samantha raised off my lap and I felt a flood of warm goo on my thighs. She stumbled backward around my legs and I saw the cutest little pussy leaking my discharge down her thighs. Rebecca grabbed the towel and began cleaning her sister before it all hit the floor. I found the scene incredibly erotic, two beautiful women in total sync caring for each other. I tried to keep it private but, this was all too new and I leaked like a sieve. I was hit by a series of tiny flirts as Rebecca decided to exaggerate her movements between Samantha's legs. Samantha moaned seductively and I could tell she was acting. I blushed at my indecent thoughts. The girls laughed and Rebecca began to clean up my lap. Small tendrils of love surged through my mind to soften the kidding and Samantha grabbed my hand and lead me to the shower. \n\nWaiting on the kitchen counter was a cup of hot coffee, the Wall Street Journal and a bowl of cut up strawberries intermixed with blueberries. Not being much of a breakfast eater, I pushed the fruit aside to make more room for the paper. I was glancing at the front page and sipping my coffee when I suddenly felt that a piece of fruit might taste kind of good. I absently grabbed a strawberry halve and slipped in my mouth and enjoyed the sweetness. I grabbed another and it had an almost sensual quality to it. I was reaching for the third when I realized what was going on and started to laugh. I located two really soft strings of thought tweaking my taste buds and sent a tickle back. I was flooded with concerns for my health and how I should be eating better. I grabbed a handful of fruit and shouted \"I love you too,\" and filled my mouth. \n\nAfter I finished the paper, Rebecca came by and grabbed my empty cup and bowl. She shared her pleasure at seeing the empty fruit bowl. Out of no where 'Nag, nag, nag' entered my brain and leaked out. I didn't mean it, I just kind of felt like a couple, or a triple, and it just seemed to fit the situation. I was just sort of joking with myself. My link to Rebecca slowed and I felt an 'Oh, oh' smile from Samantha. I looked up and Rebecca had her hands on her hips and a scowl on her face. I sent a tentative 'I love you' apology down the pipe and tried for puppy dog eyes. She didn't budge.\n\n\"This is not fair. I leak all over the place and I can't help it.\" I was pleading for forgiveness. \"Thoughts just pop in my head. I don't know how to stop sharing them.\" Of course that is no defense for thinking them but, what's a guy supposed to do. I felt Samantha laughing at the back of the house and then she shared her channel with Rebecca. How she did it, I have no idea but, I owed her one. Rebecca wasn't mad, she was teasing me again. \n\n\"Samantha you are so dead.\" Rebecca shouted as she took off running with a smile on her face. I wasn't quick enough so I sent visions of a good spanking on a very sexy bottom. I guess it was vivid because I saw her hand quickly cover her butt when she rounded the corner. Little pings of love fired between us but, Rebecca still kept her distance just in case. I really had to learn to control my sharing. \n\nSamantha saw me off by handing me two front row seats to this Saturdays Laker game. \"You're going to need these.\" I put them in my shirt pocket and never questioned the need. I was sure it would become apparent in time. I had no need to clutter my mind with the details when I had two others thinking about it already. Last week I would never have been contemplating that level of trust or lack of control. I got a peck on the cheek and Rebecca added her own remote kiss. I sent a vision of me caressing her behind to let her know I wasn't going for revenge. She sent a vision of herself caressing something else. What a flirt. I think I saw Samantha blush. \n\nI arrived at the office and stopped in on Maggie to verify my schedule. She looked down the hall to make sure it was empty and shocked me by giving me a big hug. \"Thank you so much for the Champaign and serenade. It was beautiful.\" I think there were tears in her eyes. I received two remote \"ahhhhhs\" from my better two thirds. I realized I was leaking again. \"Frank gave me a rose when the violinist started and told me he'd marry me all over again. I can't believe Mr. steak and potatoes got all romantic.\" I felt the girls surprise that Frank stepped up. Maggie let me go. \"Sorry about the hug.\" She straightened her dress and moved back to her desk. \n\nI couldn't think of anything to say. I felt like two feet were tapping on my soul as the girls waited patiently for me to say something. I'm a guy, not a romance novel, so I said a guy thing. \"Sounds like Frank is trying to book another 25 years.\" The girls were exasperated. I quickly headed past Maggies desk in hope the conversation was over. \n\n\"Yes he was and boy, did he prove it later.\" Maggie blushed when she realized she said that out loud and covered her mouth. I was way out of my comfort zone so I just gave her a smile pretending I didn't fully grasp the comment and entered my office. The girls seemed very pleased with themselves. I was just happy that Maggie was happy.\n\n\"Pam is going to stop by in a few minutes. She was asking for 15 minutes of your time.\" Maggie called from the front. I realized I hadn't had a good sit down with her in awhile. Every once in awhile you need to be face to face to maintain a relationship. People need to know you value their work. I leaked. The girls agreed. I smiled. \n\n\"Give Pam a head's up Maggie. I'll meet her in her office.\" I said as I headed down the hallway. Sometimes it's better to not sit behind the throne. \n\nPam was straightening up her desk when I knocked on the wall next to the open door. \"You wanted to see me Pam.\" I said with what I thought was a charming smile. I entered when she acknowledged my presence. \n\n\"I was just about to head to your office Mr. Timmins.\" She said trying to seem subordinate. \n\n\"It's Robert, Pam. No worries, I needed to take a walk around anyway. What's up?\" I tried to make it more casual for her. She was such a stickler for protocol. I took a quick look around her office and realized I really knew nothing personal about this woman. She had a few pictures of her and a good looking friend or sister at various sporting events and other events on her shelf. She's gay Robert was piped into my mind. Sometimes leaking was informative. \n\n\"Ah, Robert I am not quite sure how to bring this up.\" She was hesitant. The tone brought my attention back to her. \n\n\"Just shoot Pam. You've got my ear.\" I locked my eyes on hers to make sure she knew she had my attention. Unfortunately, I think it made her more uncomfortable so I sat down across from her desk to give her a brief moment more. \n\n\"I am a little uncomfortable with these new hires. I usually visually verify the Id's to make sure everyone on the payroll really exists. I know they are working for you directly but, I wouldn't have any support if inquiries were made.\" She was nervous but determined. \"I just cut a large check to send to a consultant at a sorority house at Vasar. Most unorthodox.\" She was correct. The only reason she let it go this far was because I directed it. I would have to fire her if she allowed this with anyone else in the company. I certainly didn't want her to take her ethics somewhere else. She was the best benefits manager in the business. \n\n\"Why I didn't even realize the position I was putting you in. You are of course, absolutely correct. I will have Rebecca and Samantha make an appointment to see you as soon as possible. You might have to wait for a bit longer for Susan Howard. Would a conference call suffice until she returns to town?\" While I was saying this, I was sending an image of Pam's girlfriend to the girl's trying to ascertain a name. I got back 'Rachel'. Last weekend was becoming less mysterious every moment. \n\n\"That would be fine Robert. I can't tell you how relieved I am. I know there wasn't anything nefarious going on but, I couldn't prove it and it just didn't sit right in my HR brain.\" She was smiling now that all of her apprehension had disappeared. I carefully picked up a picture of Pam and Rachel in front of the Wrigley Field sign. \n\n\"Do you and Rachel go to a lot of games.\" I caught her by surprise. She didn't realize I knew any personal information about her much less her girlfriends name. \n\n\"Well... yes we do. It's kind of a hobby. We have a goal to visit every sport venue in the US. It started by accident when we were on a trip and ended up with a selfie at Yankee Stadium. It just sort of grew from there. We have a lot more pictures at home.\" She was having fun telling me about how she spends her free time. I don't think she has many friends here. HR rarely does. \n\n\"Ever been to the Staples Center?\" I queried. I was quite sure of the answer since I was holding two tickets to the Lakers game. \n\n\"Nope, it's on our list though.\" It's funny how people always seem to miss the things closest to home.\n\n\"Well than this will work out well. I was given two tickets to Saturday's game and I can't make it. I would feel much better if they didn't go to waste.\" I reached into my pocket and handed her the tickets. I might as well handed her gold bars the way her eyes lit up. \n\n\"Oh my God. Rachel is going to freak.\" Pams business voice was gone. I think I just made her weekend. She looked back up to me excited. \"Did you know these are front row seats?\" \n\n\"Should make one hell of a picture.\" I smiled at her infectious enthusiasm. \n\n\"Oh it certainly will. I don't know how to thank you.\" You know when you have given someone something they really really want. They don't even attempt the 'I can't accept this' speech. Rebecca and Samantha were two really smart women. I realized I leaked when obnoxious agreements flowed in. \n\nI got up to leave but, turned and added. \"Don't let me leave in a lurch like that again. I hired you to be head of HR and I expect you to hold everyone, including myself, accountable.\" I smiled when I included myself. \n\n\"Absolutely Robert.\" Her eyes never left the tickets. Good job girls. \n\nI had a short meeting with the Philmore project team. They all came prepped with idea's to solve the zoning issues. I got to shock them by telling them it was already solved. It always fun being the smartest guy in the room even if it is was only for one meeting. Luckily, someone brought doughnuts and they knew I loved the jelly filled. I leaked the doughnuts and got a mind full of how bad they were for me. I decided that jelly doughnuts was the place to draw the line. I bit into it and sent the heavenly flavor flowing. I think the team may have thought I was losing it when I seemed to smirk for no reason as visions of my ass being paddled filled my brain. As a consolation, I only ate one. \n\nI spent the rest of the afternoon with a the new pipeline team going over Thornbird's proposal. It was complex and fraught with political bottlenecks. It was getting late so I told the team to get the data and any insights over to Maggie and I would study it at home.\n\nHeading home, I thought about just partnering up with Thornbird without the analysis in return for him insisting I see Rebecca and Samantha. I was leaking again and a little love pulsed my way. I was an open book to my new loves. \n\nAbout half way home Samantha began to leak. She was reading a human interest article in the local paper about woman who was comatose in the Hospital. Her husband beat her near to death for attempting to leave him. The article keyed on the fact that the local woman's shelter was out of beds and had turned her away. Having no where else to go, she returned home to an irate husband. The shelter was of course devastated. The woman was too shammed to tell them she had no where else to go. They had been working to raise funds to expand the shelter for two years and were only half way to their goal. I could feel Samantha's pain. She was near to tears thinking about the hospitalized woman. \n\nI sent a comforting nudge. I realized I was meant to feel her pain. I had always told myself I would save the world if I became wealthy. I just never seemed to get around to it. Now I had target painted by angel. \n\n\"Call Mark Peters, home.\" My cars computer repeated. \"Calling Mark Peters home.\" Mark was a born again environmental hippy. I hired him a few years ago to handle the environmental groups. He went farther than the lawyers said we had too and allowed us to avoid a lot of protests that other firms dealt with. He was always able to come up with a compromise that both the accounts and environmentals could live with. His world loving ways made him perfect for what I had in mind. \n\n\"Hello.\" It was Mark.\n\n\"Hi Mark, it's Robert. Sorry to call you at home.\" \n\n\"No problem, what do you need.\" I think he enjoyed his paycheck almost as much as saving the planet. Hippies need money too. \n\n\"There is a woman's shelter in Augustine that's having trouble trying to expand.\" He interrupted. \n\n\"I think I know the one. They turned away that lady who ended up in the hospital. I just read about yesterday. It pissed me off. I sent that Martha lady $100.\" I should have known. He was always up to date on the current causes.\n\n\"I need someone to head a project to solve their bed issue. We are going to donate five k plus whatever team hours are needed. If your interested, I would like to offer it to you.\" It is like giving a puppy bacon.\n\n\"Shit ya. Of course I would love handle this. This is beyond generous Robert. You'll let me bring in Brandon on this?\" The wheels were turning already. I just made his year. \n\n\"Brandon and anyone else you need. Everyone gets paid. We'll write it off and make the government pay some.\" More candy for the hippie. \n\n\"All right! Is this public yet, I would like to consult with Martha 'whats her name' as soon as possible.\" Time to let him loose. \n\n\"As public as you need it to be. Totally your call. Just make sure no more women get turned away.\" \n\n\"Yes sir! This is fantastic. I don't know who to call first. I'll send daily reports to Maggie as usual. I'll get started right away.\" There was a click and I chuckled. I bet he didn't even realize he just hung up on me. \n\nI felt a tremendous warm surge enter my soul. It was Samantha and Rebecca sending an erotic stream. I was seeing Rebecca through Samantha and visa versa. They were standing naked in the living room moving seductively toward each other. I felt both their desires as the began to caress each others faces, necks, shoulders and breasts. They leaned in tilting their heads and meet lip to lip, tongues entwining. I shuddered in time with them as my arousal became apparent. Their matching nipples met as the kiss deepened and I felt all the sensations. \n\nMy car drifted onto the shoulder and hit the rumble strip. I came back to reality and swerved back into my lane. \"Hey, I'm driving here!\" I said out loud. I felt laughter and the vivid streams returned to normal. \"Great, now I'll be hard all the way home.\" I leaked my frustration as I said the words. I was thrown a kiss and 'as long as you're hard when you get home.' I hit the gas. \n\nI returned home thirty minutes later than planned, my hardon gone, waving a pink slip. \"A speeding ticket. Look what you made do. When that punk of cop asked me what my hurry was, I almost told him.\" Embarrassed laughter hit me and I knew they were hiding in the hallway. \"You two are paying the fine. A hundred and twenty five bucks. It's not the money, you know, it's the principle.\" I felt pouting and false sorrow. \"Don't give me that. I want an apology.\" \n\nMy insides turned to rubber as a dual blast of passion flooded in. Two angels rounded the corner dressed in virgin white teddies that were almost see thru. Their glowing red hair blown back with taut nipples pointing toward me. A look of seductive seriousness graced their faces as they strutted like models down a runway. I wasn't breathing and the ticket was floating to the floor. As they approached they snapped their heads upward slightly. The passion instantly doubled, they were making love to me from the inside. It was so intense I didn't want to move. I just wanted to bask in it's glory. \n\nI barely noticed them undressing me. Physical sensation was superseded by the mystical. I felt a tongue at my ear. Rebecca whispered ever so slowly, \"Breath.\" I exhaled and drew another breath, it was hard, I was afraid I would disturb the bliss. Hands and legs were tenderly caressing my body and thoughts were ravishing my soul. Samantha dropped to her knees and her sweet lips slowly enveloped my now raging member. The passion had now evened to both physical and mental as her head slowly moved back and forth. I looked down and was meet with those two green pools truly looking directly into my soul. I released my love in waves and the passion increased again and I had to pull back. I realised this was for me, their only pleasure would be in giving me pleasure. \n\nRebecca's tongue returned to my ear. \"Cum for us my love.\" Her hand tickled its way down my back giving me external shivers to go with the internal ones. I began to make short gasping sounds as my orgasm neared. Her hand continued following the crack on my butt to just behind my balls. She ticked my crotch from balls to anus and my knees started getting weak. \"Cum for us.\" she repeated. My cock exploded, the spasms coming from the center of my being and massaged by the passion emanating from my girls. It keep reverberating through my body as I filled Samantha's mouth. My head fell back and I felt Rebecca steading me while my legs began to shake. I never felt anything so pleasurable, so deep. The passion receded with my diminishing spasms and was replaced in equal quantity by love. So much love.\n\nI weakly flooded my love into the girls and I felt their smiling response. My whole body began to relax, all tension drained far away. I felt Samantha's lips leave my cock and then returned to the crown for a little kiss. She rose and looked me deep in the eyes and Rebecca moved in to share an open mouthed kiss and my seed. I was again flooded with their love and they allowed me to feel the sharing between the two of them. Rebecca broke the kiss and turned to me. She leaned in and we shared a similar kiss. I could taste my cum as our tongues danced. I was surprised that I didn't find it offensive at all. Samantha hugged us both and said, \"We are one.\" I sent my love in acknowledgement.\n\nThey led me to the couch and they allowed me to collapse between them. They continued to softly stroke my body and were running their fingers through my hair. I caressed their thighs in return. \"That was one hell of an apology.\" I stammered, still exhausted by their manipulations. \n\nSamantha smiled. \"That wasn't an apology. We can't help that you're a bad driver.\" She sent a small poke of love to take the edge off her statement. \n\nRebecca kissed my cheek. \"That was for all the woman Augustine who won't find themselves in the hospital.\" I felt a surge of warmth that was reinforced by Samantha. \"What you started tonight will change the world for the better. So few of us have that kind of power.\" I felt pride, mine and theirs. Ours. \n\n\"So which of you is going to pay the ticket.\" I kept a straight face but, I was sure I was leaking my humor. I received a series of playful slaps as they stood and dropped their teddies. I began to rise and made a grab for my naked girls. They jumped out of the way laughing and ran to the pool. I followed the cute little butts into the water and we happily played until I was again exhausted. I grabbed the side of the pool and propped my arms up to rest. I suddenly realized what was going on. \n\n\"You've got me exercising.\" I felt a little pulse of love from Rebecca. Samantha swam up to me and pressed her breasts into my chest and kissed my cheek. \n\n\"We have to keep you healthy somehow. Anyways, its your own fault that you like to chase naked women around.\" She kissed the other cheek and pulsed some love. ",
        "I looked her in the eyes. \"Why are we one?\" \n\nShe slid to my side and let Rebecca curl into the other. \"Isn't enough that we are?\" \n\nI thought about it. \"Yes,\" I could live without knowing. \"That doesn't mean that I don't sense a plan. Something bigger than us.\" \n\n\"Can you trust us enough to wait?\" Rebecca's statement validated my suspicions. We were just one piece of something else. Rebecca then opened herself and blocks I didn't know were there shattered. I gained no direct knowledge but, I saw her emotional whole including the flaws I didn't think she had. Samantha followed opening herself as well. It was amazingly intimate and the trust it demanded I began to fear, I didn't deserve. \n\n\"I'm open like that?\" I asked. \n\n\"In time you won't be.\" Samantha answered some what hesitantly. \"We were born sharing each other. We worked our whole life to share with you.\" I knew it was true and I felt her fears of possible rejection followed by Rebecca's same weaknesses. Their fears were unfounded. Maybe a week ago I could have ignored their charms but, now I was merged with their true beauty. I wrapped part of myself around their fears and added my eternal resolve. I was theirs and they were mine. We were one. \n\n\"If you wish me to wait, I will wait to the end of time.\" I knew I could live without the information if need be. It would be difficult since It was in my nature to know. I took the little curiosity itch and placed it inside the same type of barrier I felt break in the girls. It was effortless and dulled the itch dramatically. The girls were still fully open and surprise was thrust to the forefront of our links.. \n\n\"That takes years to learn.\" Rebecca was astonished. Once I saw their blocks it seemed trivial to me and I was a little surprised by their reaction. It was like a switch that makes part of you dark. You can turn it on and off and change how deep the darkness reached. I decided to see how much can go dark. \"No!\", Rebecca and Samantha screamed in unison but, it was too late. I had already committed.\n\nIt felt like my limbs were ripped from my body. Both my angels left my mind in that instant and I was falling into a bottomless pit. The emotional pain was unbearable. Death was preferable. I feared I may have Iost them forever. It was less than a second before I destroyed the barrier but it was ten lifetimes of pain. When the barrier broke both girls slammed back into me. I was crying and slipped under the water into a ball. They had felt the same pain. How could I have done that to them. My fear and guilt became paramount and I questioned the need to resurface. \n\nTwo sets of hands grabbed my arms and pulled me back to the surface. Both were visibly crying as they slammed me with concern. I might as well have pulled a gun and shot them. \"I didn't know, I didn't know\" I kept repeating with tears streaming from my eyes. My heart was pounding so hard I thought it may burst. Warm love began to flow into my bones reminding me the connection was back. I sent love back mixed with the fear I couldn't control. I was sure that this would change them toward me. I should have pulled a gun and shot myself. More love flowed, this mixed with the knowledge that they didn't blame me. My breathing slowed and the internal shuddering ebbed as I let their love blanket my sin.\n\n\"God that was horrible.\" There was no need to state it but, I said it anyway. They had pulled me to the shallow portion of the pool and we were just holding each other. \"I so sorry, I am moving to fast. I always move to fast. I'm a fucking idiot.\" \n\nRebecca stroked the side of my face. \"We know. You aren't going to ever lose us.\" She reassured me, \"We are one and we can't change that now.\" Suddenly I realized what those words meant. I was twenty years their senior. Some day I will break the link by dying on them. It will be more than a second, it will be forever. Whether I liked it or not, sometime in the future, I was going to be responsible for inflicting massive damage. I knew they would likely die. I retreated into myself. \n\n\"Baby, baby, you're not supposed to know all this yet.\" Samantha was crying again and Rebecca was squeezing us tight. Love was streaming in and I was pushing it away. I wasn't worthy of it. I only saw the pain I it would inflict on my angels. \"We have known all along. It was our choice not yours.\" They were trying to break through the barriers I was erecting. I was walling off the guilt as it grew and the fear and most everything else that made me me. \"Oh god, don't hide from us.\" I felt their pain as I built my walls. Shit, I was doing it again. I dropped them all and opened myself up to them. I opened everything including my guilt which was still growing. I didn't know how to stop it. I wasn't worthy of their trust or their love.\n\nI felt their relief when I released the blocks. My guilt became our guilt as they shared the knowledge of the choice they had made. They had given up so much to become one with me. I knew now that I had to earn their love everyday. They tried to take more of my guilt and fear onto themselves. I wouldn't let them. They had enough pain coming and between now and then I owed them as much happiness as the time would allow. I released my love into them, more than I knew I possessed. I filled every channel, even the small thin ones I didn't understand. Until my dying day, I was going to earn the privilege of being with them. There was no more me, only us. Somehow, I sensed relief that did not come from us. \n\nMy angels glowed inside. I helped them out of the pool and passed out the towels. I helped them dry off before I saw to myself. They laughed and grabbed my towel and tenderly took care of me. We would take care of each other. I left myself open and vowed to never close to them. I collapsed onto my bed, an angel blanketed on each side. I slept away my fears.\n\nI awoke slowly and the weight of last nights revelations still hung on me. It no longer felt like an anvil but, I knew it would never go away. Rebecca stirred next to me and spooned into my butt with her soft breasts pressed into my back. Her hand reach around and absently caressed my stomach. She was still waking up herself. I smiled as I squirmed in her arms, her naked form arousing me so quickly. I visualized making love to her and let it leak. She responded by reaching lower and stroking my growing manhood. I felt Samantha share her delight from the kitchen. I knew she wasn't going to join us physically but, we would share with her none the less. \n\nI rolled around to face Rebecca and ran my hand down her curves. She purred as I sent my passion down the link. She lifted her leg slightly to give my hand access to her sex. I kissed her deeply as I lightly scraped the inside of her thighs with my finger tips. I could feel the warmth emanating from between her legs. I ran a finger lightly along her opening and found her wet. I flooded her with my desire as I slowly caressed her womanhood never quite reaching her love button. I sensed a little frustration as she tried to return her hand my cock. I had other ideas.\n\nI rolled her onto her back and lowered my lips to her breasts, lightly kissing my way down. I continued my descent kissing her taut belly leaving light tongue tickles along the way. I had her cooing. Last night improved my knowledge of sharing dramatically. I began to understand the possibilities and the drawbacks. I dropped lower and began to kiss the inside of Rebecca's thighs giving her goosebumps. At the same time I followed my passion along the link and snuck into her senses. It was incredible feeling what she was feeling. I wrapped the link with love and sent it to Samantha just as I ran my tongue along her pussy lips. I heard Rebecca gasp in passion and I felt Samantha gasp in surprise. \n\nSamantha let me know she was cutting fruit and feared for her fingers. I added passion to the mix and sent Rebecca's sensations again. This time my tongue split Rebecca's flower and tickled the pink insides. Samantha gasped in time with Rebecca and attempted to frantically build a block. I understood the barriers now and I disassembled it just as quick. My tongue went deeper on the next stroke never touching Rebecca's taut button now sticking out proudly from its hood. I wrapped this sensation with the image of my speeding ticket. Rebecca's legs were beginning to twitch and I knew I she was getting closer. Her hips were trying desperately to align her clit with my tongue. \n\n\"Ok, I'll pay the ticket.\" Samantha sent . Rebecca was too close to care about my teasing, she just wanted relief. I dropped the sensation link to Samantha and sent her peck of love. I moved ever closer to Rebecca's clit, sending my tongue deeper on every up stroke. I heard a knife clatter on the counter and Samantha opened herself fully. \"You've already ruined my panties, pay your own damn ticket.\" She plopped to the floor sending the challenge. I hooked into Rebecca's sensations drove passion into it and threw it at Samantha. At the same time, the flat of my tongue reached Rebecca's button and her hips shot high. I felt her orgasm begin and it was incredible. Similar to what I knew as a man but, so much more full bodied. Samantha followed Rebecca spasm for spasm. I froze my tongue as they reached a peak. As they came down, I dragged my tongue back across and sent them flying high again. I could feel every peak and valley and began to think I could keep them flying forever. \n\nI was controlling two womens orgasms at once and enjoying every minute of it. I felt them tiring but, they weren't exhausted. I was going for exhausted. I added more passion to my streams as another valley approached. I began to drag my tongue and felt an almost electric shock shoot through Rebecca's pussy and follow the stream to Samantha. Rebecca's snapped her hands to my head and started pushing it away. Her hips were trying to bury themselves into the mattress to hide from my tongue. \"Stop, please stop\", She was laughing while struggling to get away, \"it's too sensitive. please stop.\" \n\nI lifted my moist face from between her legs. I was sporting a huge grin as I mentally patted myself on the back. She pulled my face to hers and floored me with deep kiss. \"That was incredible. I didn't think it would end.\" Her green eyes were alive with love as she extolled my talents. \"I want to wake up that way every morning.\" She grabbed me close and smashed her breasts into my chest. I felt less love behind me. \n\nI rolled to Rebecca's side and looked toward the door. There was Samantha with hands on her hips and a serious scowl on her face. She had on a t shirt and pair of light grey cotton shorts. Her crotch was obviously soaked. It looked like she peed herself the way the stain covered the inside of her thighs. I said the first thing that came into my head. \"At least you weren't driving\". I sent some love to take the edge off. Rebecca grabbed a pillow to muffle her laughter.\n\nSamantha gave me a mischievous smile. \"This isn't over by long shot.\" She peeled off her shorts and climbed over my raging hardon. She yanked the pillow from Rebecca's face. \"And you, my dear sister, helped him.\" Rebecca was trying very hard not to laugh. \n\n\"I didn't know he could do that and I was in no position to stop him.\" Rebeccas defended her self weakly. \n\n\"You didn't even try.\" Samantha lowered herself on my pole and stopped moving. It felt wonderful but, I wanted the friction of movement and tried to move my hips. She moved with me making sure there was no sensation beyond the blissful heat from her soaked pussy. \"I tried to block him and he just broke through. Such a naughty boy.\" My cock was straining. \n\n\"Did you feel how he latched on to me. He felt everything. A real man wouldn't need to cheat to keep me going.\" Rebecca was switching sides in support of her sister. My cock was trying to grow bigger and I felt the muscles straining at the base of my legs. I grabbed Samantha's hips and tried to move her. I just didn't have the leverage. \n\n\"That was just rude. I think we deserve an apology.\" Samantha was working hard to make sure my cock remained motionless. I was being double teamed. Rebecca brought her feet around and laid her side across the my chest leaning on her elbow. Her gorgeous breasts just inches from my face. I was pinned. I smiled and sent love down the links. \n\n\"Well, that was sweet but, It didn't feel like an apology.\" Samantha wasn't going to let up. I had to crack and give her the win. \n\n\"OK, I'm sorry for messing up your shorts.\" I tried to move my hips again to no avail. She wasn't done with me.\n\n\"And do you promise to never do that again?\" both Rebecca and Samantha were sporting evil grins. I wasn't biting.\n\n\"Hell no, I fully intend to try that again.\" Blue balls be damned. That was way too much fun to promise away. Passion surged through me and I felt my balls tighten. \n\n\"Right answer.\" Samantha raised herself up, tucked her hips in and forced my cock deep into the confines of her belly. Rebecca added her passion and our lips met. I exploded into Samantha's womb. I was in heaven with both my angels on top of me.\n\nI got a call from Mark Peters while I was eating my fruit. \"I just got off the phone with Tom Thornbird. He said he wanted to double what we're putting into the Augustine project. I wasn't sure how to answer him.\" How the hell did Thronbird find out about this so quick? I felt a couple of little suspicious pokes. I had my answer about who leaked, someday I had to find out how. \n\n\"You didn't tell him no, did you?\" Leave it to a Hippy to turn down a gift horse.\n\n\"Well, no, I told him I had to talk with you.\" He was hesitant to take charge. Learning when to make decisions is all about experience. Mark was about to learn a lot. \n\n\"This is your project and I gave you a budget, Mark. If you think his money will help, grab it.\" He'll never grow if I don't leave it up to him. \n\n\"Hell yes it would help. I guess I felt I was overstepping. I'll call him right back.\" Good, he needs to accept more responsibility. \n\n\"Just a suggestion. If you accept his money, keep him up to date on the progress. Another set of vested eyes couldn't hurt.\" I would have to make sure that happened in case Mark dropped the ball. \n\n\"Makes sense, I'll see if he wants any of his people to sit in on the meetings.\" Bingo, that's thinking 101. \n\n\"Sounds good. Thanks for the update Mark.\" I let him go a bit more empowered than when we started. Two gorgeous sets of lips pecked at a cheek each. I guess I had done well. \n\nIt wasn't long before I realized I had been basically married to my angels for over a year. Each day was better than the last. There were no more bouts of doubt. I ate better and exercised more. I needed to live a long life, for them. I had lost twenty pounds and was in the best shape of my life. They were so proud of me that they decided to reward me. I came home one day to find Rebecca naked on the carpeting with a jelly doughnut between her legs. Samantha had a can of whipped cream and was busy covering her breasts. It was best dessert I had ever had. what a mess we made that day. \n\nI had increased my skills with our sharing. I could shatter any block they could set up but, I never peaked behind what they held dear. I began to see thin strands of links where there shouldn't be any but, I stayed away. I knew they wanted me to wait. After the disaster of the full block, I was willing to give them some faith. I found my self contented. My sex life was out of this world and showed no signs of getting boring. My company was making more than it ever did before. Lucrative deals just kept presenting themselves. I was also working on six large charity projects all but one singled out by my angels. \n\nI was in New York trying to shore up political support for northeast pipeline project when I sensed the end of everything. Something was wrong with my share to Samantha. It was there and strong as ever but, slightly darker than usual. It just seemed wrong. I followed it back with my mind trying to find the difference in today from yesterday. I didn't let on that I was probing, I was now able to hide myself better than they ever could. I saw nothing emotional, she was as content as I. \n\nI was able to identify the darker strands. I followed them through her beautiful soul up through her core toward her brain. There was something that didn't belong. I had no idea what was supposed to be there but, I knew instinctively what wasn't. It was a mass of blackness tucked at the right side of her brain. I withdrew too quickly and slammed blocks on my fears. She noticed and sent a pulse of love thinking I was just checking up. I returned the pulse while hiding my watering eyes. \n\nI opened to Rebecca while inserting blocks on her link to Samantha. She felt my fears and ignored the fact that I could now build blocks for her. I told her to get Samantha to the hospital and I was flying back immediately. Rebecca was confused, 'she's right next to me and is fine, Robert'. My eyes were watering when I showed her what I knew. Rebecca couldn't see the darker link that was so obvious to me but, felt my fear and shared my concern. \n\n\"Samantha, Robert thinks we should go to the hospital.\" How do you tell someone about that. Rebecca didn't want to share my fears with her. She was trying to remain calm. I felt a pulse from Samantha and I sent back my agreement with Rebecca. \n\n\"Someone get hurt?\" This was going to be tougher than I thought. Rebecca knew her sister better than I and decided truth was the best method. \n\n\"Robert thinks something is wrong with you. He's coming home immediately.\" She didn't understand it herself so it was difficult to sound convincing. \n\n\"That's silly I feel fine.\" \n\n\"Honey, we need to go now!\" Rebecca sent me images of Samantha's nose bleeding. I was trying hard to hold it together as I fed my strength to Rebecca. Rebecca leaked the nosebleed and Samantha absently wiped her nose and looked at her hand. \n\nSamantha's linked faded fast and I felt Rebecca scream. I dropped every barrier I possessed and slammed into Samantha. I followed a sliver so small I almost thought it wasn't there. It to was fading so I straightened it, fed it with myself. Rebecca was lost in pain and would never see the sliver. I brought Samantha through me and Rebecca felt her sister again. \n\n\"Oh god, she's dying Robert.\" She was distraught and I needed her strength. I blocked my trepidations and sent her my love and strength. \n\n\"I got her but, you need to get her to the hospital. I'm leaving the hotel now.\" I didn't check out, I just hopped in a cab. I called Maggie at home and filled her in. She said she would get me quickest way home and to just go to the airport. I felt my strength waning on the way, I knew I could feed the link for a while but, I didn't know how long. I needed more power so I searched myself looking for reserves and found the same micros strands I noticed in the girls. I drew some strength from it, a very tiny amount. There were many more and one by one I added their small contributions. I began to sense they were souls, many souls from around the world. I stopped pulling and I begged for Samantha. To my surprise, they fed me strength and I added it my own. \n\n\"This must stop.\" The message came from what I could only describe as an old soul. \n\n\"Mother it's for Samantha.\" It was Rebecca pleading.\n\n\"I can't allow you to...\" I slammed her out. I felt her try to come in through Rebecca. I slammed that shut also. I wasn't interested in any negative opinions. It was difficult enough to hold my concentration and continue to feed Samantha. \n\nThe cabby was having a conversation in spanish with his dispatch. When he finished he gave me a glance over his shoulder. \"I am to bring to the military annex at the south gate. Someone named Thornbird talked to someone named Maggie?\" He questioned in broken english. ",
        "\"Just follow the directions.\" Maggie was working overtime. I reached in my wallet and pulled out three hundred dollars and dropped it in the front seat. \"That's if you get a speeding ticket.\" The cab accelerated. \n\nWe got to the annex gate house and I was immediately confronted by a captain. \"Mr. Timmins?\". I confirmed. \"I am Captain Treavers, I have been tasked to get you to LAX as quickly as possible. The generals transport is fueled and waiting. The FAA has authorized a priority flight plan and the tower has cleared our departure. Follow me sir.\" He took off at a jog and I followed. A sleek corporate jet with Air Force insignia was warming up waiting for us to arrive. I was plopped into the seat and buckled down. The wheels were already moving before Treavers was buckled in. \n\nI was rather shocked by the quickness that this was all put together. \"Does this happen a lot Captain?\" \n\n\"No Sir, never seen it before. I was just informed that you are a priority and my bars depend on the success of the mission.\" I thanked him. What else could I do? \n\nOn the flight I recognized a concerted attempt to break my micro links. Someone would drop and I had to find others to replace those that were lost. I spent almost the whole flight replacing my losses and maintaining my feed. I landed and was surprised when a police car was waiting for me. Lights blaring, I was at the hospital in no time. \n\nSomeone at the front desk asked if I was alright. My forehead was sweating pretty badly. The strain was beginning to show. I sensed Rebecca on the second floor and headed for the stairs without answering. I felt her crushed spirit and sped to the office where I knew she was. She felt me coming and met me at the door.\n\n\"They say she's gone Robert. I can still feel her but they say she's gone.\" Rebecca, my angel, I looked her in the eye and feed her strength I couldn't afford. \n\n\"I caught her. She's still here.\" I was getting a headache. The strain was becoming worse. Rebecca held me and cried into my shoulder. I looked past her to two doctors, one behind a desk and another standing to the side. \n\n\"Mr. Timmins, I am Dr. Lemen the neurosurgeon on call when Ms. Jones was brought in.\" He looked a little uncomfortable. I could tell he had bad news. \"As I regretfully told Ms. Jones,\" he was pointing at Rebecca, \"her sister has a large tumor on the right side of her brain. If we had found it a year ago, we may have been able to remove it.Today the tumor is so large I am not sure it would be ethical to operate. We would have to remove too much of the good tissue. Frankly, we don't even understand how she is holding on.\" \n\nI looked at the doctor behind the desk. Obviously an administrator. \"Get me another doctor. Cost is not an issue.\" I wasn't settling for defeatism. \n\n\"Dr. Lemen is the best neurosurgeon in the city. Probably the country. I don't think...\" I didn't let him finish. Someone else entered the room. I ignored him.\n\n\"Who's the best in the World.\" I wasn't going to spend time arguing. Solutions are the only thing I was interested in. Dr. Lemen answered.\n\n\"That would be Dr. Tuluoi. He is in France. I can get him to consult but, I don't think he could get here before Ms. Jones expires.\" A voice behind me spoke up. \n\nIt was Thornbird. \"Dr. Tuluoi has cleared his scheduled. He is awaiting your call Dr. Lemen.\" Thank god someone was moving faster than me. \"If you like your job Thompson, an operating room better be being prepared for Dr. Lemen.\"\n\n\"Of course Mr. Thornbird.\" Obviously the administrator has dealt with Tom before. \"Dr. Lemen, operating room two. Put together the best team you can in two hours.\" The doctor left the office quickly with his new mission in mind. Thompson made an excuse and left the office for our privacy. \n\nTom looked at Rebecca, \"Mother is on the way and she is going to try and stop this.\" Rebecca looked torn and Tom looked back at me. \"This may not end well but, if she has her way it is guaranteed to be worst case. For us at least.\" \n\n\"Why would their mother try to stop this?\" I was exhausted but, I knew sleep would be the end of Samantha. \n\n\"Not the girls mother, The Mother. You've lit up the whole network Robert. How many people are you linked with?\" What the fuck is the network. \n\n\"Two maybe three hundred. I don't know, but I am going to need more soon. I running out of steam.\" I hope I didn't sound as bad as I felt. \n\n\"Dear God man. Your girls are exceptional and they can at most handle five. Mother maybe ten. How are you doing this?\" Rebecca open herself to me and released blocks that I never had the heart to break. Everything became clear. I also realised I needed Mother. \n\n\"He shut Mother out. She tried to stop it earlier and he just blocked her and then blocked her from me. I only know Samantha through him now.\" She was crying again. I pulled her close and sent my love flowing in. I now understood the network and why my angels didn't want to tell me. It's not that they didn't trust me, they had to make sure thousands trusted me. I had knowledge and I needed power for my baby. I reached out now that I knew what I was looking for. I could have just pulled it in but, I asked for it to be pushed. I begged, I pleaded and thousands relented. I had power when Mother walked in the door. \n\n\"What are you doing here Thomas?\" Mother looked ancient. She walked with confidence, unlike what her looks would suggest. She was a small woman dressed in an old brown tweed skirt suit. She continued into the room as if she owned the place. \n\n\"You know why I am here Mother. You also know why I won't leave.\" Never heard Thornbird explain himself to anyone. He was still reverent to her even though he was putting his foot down. \n\nRebecca released another block and I became aware that my girls were Thornbirds daughters borne of an ancient breeding program. I sent more love to Rebecca so that she knew that it didn't change things between us. \n\n\"Rebecca, you need to get him to stop.\" Mother was not addressing me directly. \"Your sister is gone, we can't change that. You will follow her down and take Robert with you.\" I took my new strength fed some to Rebecca. Her head snapped up with confidence. \n\n\"We are going to save her.\" She looked at me and stroked by soul. \"We will never abandon Samantha.\" That's my girl. Mother finally turned to me. \n\n\"You're going to kill Rebecca.\" She didn't mince words. \"This is futile, you are powerful but, you can't fix death.\"\n\n\"I need your knowledge.\" I wasn't going to argue with the woman. She either helped or she should just get out of the way. \n\n\"I suppose you'll just take it if I say no.\" That was one hell of a bitchy assumption. One of my angels was dying and this woman was playing word games. I linked with her and busted through five blocks just to prove I could, then pulled myself back. She gasped. I can be an asshole too. \n\n\"If you won't help us, you need to stay out of the way.\" I needed her but, I wasn't going to rape her mind to get it. \n\n\"Only the ancients knew what you want and we lost that during the purge. What healing I know costs. What you need will cost lives. Think of the hundreds you're linked too, do you think they're ready for that kind of sacrifice. Think how their pod will suffer when you rip one of them out.\" She was no dummy so I increased her knowledge. \n\n\"I am linked to thousands now. I won't risk anyone.\" I heard Thornbird suck in his breath. \n\n\"The math doesn't change. Nature is a zero sum game. Even if you can figure out how, how many souls are you willing to sacrifice to return her to you? Most likely you will fail and others will die anyway.\" She was pleading with me now.\n\n\"Show me what you know.\" I asked her again. She knew I could just take it but, I wouldn't. I gave her all the cards. \n\n\"Please Mother.\" Mother turned to Rebecca as she pleaded. Mother moved closer and lovingly placed her hands on the sides of Rebecca's head.\n\n\"I am so sorry sweety. I loved Samantha too but, she's gone. You have to show Robert how to break the link.\" She was caressing her cheeks and pushing her disheveled hair back behind her shoulder. \n\n\"He broke the link on accident the second day after bonding. He .. we will go with her before we destroy the link again.\" Rebecca was as resolute, \"He is the link now. I feel her through him and I can feel the others helping.\" Her face shifted to serious. \"We are one or we are none.\" Mother dropped her arms and staggered back. She was beginning to understand our determination and was shocked that Rebecca's bond superseded the needs of the network. \n\nI opened myself to Mother, I let her feel the power of the thousands I gathered. She sensed their willingness, all there of their own free will. She reached to Samantha through me and felt the structure of the fed that was holding her here. She saw that it was intuitive to me. She learned more in those few seconds than a lifetime of practice and she knew I needed more. When she saw my love for my angels tears filled her eyes and she sat heavily in a chair. Talking was futile, I would succeed or die trying. She sensed what I was. One of my power hadn't existed for over five hundred years. She opened herself to me.\n\nI learned. Most was history of the network going back hundreds of years. Her memories were mixed with those of hundreds before her, passed down from Mother to Mother. The memories were truncated at the great purge when we were known as Druids. We hid our ceremonies in the woods to hide from the growing christian power. In less than fifty years, we were almost wiped out before the network was taken underground. Most of the knowledge was lost. \n\nDruids only goal is to bring harmony to the world. Leave everyone and everything they touched better. Capitalism was just another tool for them. I was a perfect candidate for philanthropy. In exchange for helping to save the world, my angels bonded with me. The more people I help, the deeper the bond. We were one. One of many. \n\nI saw the needs of healing and realised that the cost of repairing Samantha was as high as Mother had said. I could now mend a bone by trading some of myself or very little of many. To mend Samantha, I would need hundreds of thousands and I would still take too much. I felt Mother try to sooth me as I understood the costs I would never pay. \n\nI tossed aside Mother's assumptions about the history and separated what I now knew was fact. I smiled as I realized Mother didn't fully understand her own memories. I saw what I needed and walled off the solution from Rebecca and Mother and, out of respect, I thanked Mother. It was obvious once understood but the cost would still be high, just not as high as Mother surmised. I sent optimism to Rebecca and flooded her with love and happiness. Our links grew as her trust in me began to erase her grief. \n\nI closed my link to Mother and my eyes to the world as I searched deep inside. I knew they were there, I expected them to be even smaller than the network as Mother understood it. I looked deeper since my first search failed. At first, I only sensed them. Then they became more apparent to my inner sight. They were like little hairs that were always there, but never noticed. I smiled when I realized the never ending amount of them. They were infinite to my mind and beautiful to my soul. \n\nI picked one at random and gasped as I connected. It was an old soul, sluggish but powerful. It was like a warm blanket as my mind melded with its. It had knowledge it didn't care about and it shared with me. My blocks were useless as its essence just went around them and knew all of me. Surprisingly, it did not follow the thousands who were channeled to me. I sense it wanted permission, not really a moral thought, more of a 'just the way it was' thought. It filled me with power, more than I expected. I replaced some of Mother's network. I connected to another, younger soul. It wasn't as strong but still added to my power and shared all. They both understood my goal and had no issue with the task or the cost. They simply accepted my free will as my own, something that should not be toyed with or questioned. \n\nI connect to more of the hairs, some young, some old and others ancient. More power streamed into me and I dropped more of the modern druids from the network. Some of the hairs were too distracted to connect to. I sensed they were entranced by young minds, possibly children. I left them and went on to others. Within seconds I had replaced the old network with my new one and added power well beyond what I thought was possible. My mind was racing as I realised what could be done. I had knowledge of ancient minds, my ancestors thoughts. They were not complete and were provided by those who didn't care to understand. I now knew my baby would survive.\n\nI was having trouble concentrating. I felt Samantha being prepped for surgery and could feel her and see her. I was looking through Dr. Lemen's eyes. Other images kept intruding. There were too many people here at the hospital and way too many thoughts running through my brain. I was putting up blocks but, it took too much attention as the power continued to overflow. I smiled when I thought of Mother's memory of the ceremonies in the woods. They weren't hiding. I opened my eyes and looked at Mother.\n\n\"I need your help.\" I made it sound like a request, not a demand. She didn't hesitate and probed into me. I opened and I heard her gasp. The power I was channeling was immense. I educated her quickly as our links would allow. I taught her how to build blocks in others and she began to close off my random thoughts from the power. She was talented and learned fast. She never questioned the source of the power and just trusted. My mind was clearing. I was gaining the tunnel vision that was required. \n\nI probed into Dr. Lemen's mind. Mother frowned internally at that but, didn't try and stop me. It was like pushing water through a rock. The pores were there but, the rock fought me the entire way. I looked deep, I needed his medical knowledge of the tumor. I couldn't fix what I didn't understand. I saw his concerns and the challenges he was facing. The scalpel was a hundred times to thick for the job. I saw the tumor as he expected to see it. I saw the brain tissue as it should be. I saw the veins he expected to be too entwined with the growth to be properly separated. He thought he was going to kill her faster or at worst, leave her as a vegetable. He saw no upside, quite possible the worst day of his life. It cost me a lot but, I pumped confidence into him. I had no link to fed him with, I just had raw power and I shoved as much through as he could absorb. He started thinking sharper and began to ignore the negative. It was the best I could do. \n\nI followed the link to Samantha and quickly located the mass. I identified the good tissue and the bad and I detected where they met. I saw how they bonded to each other. I followed the good tissue and began breaking the bonds with the bad tissue. It was like scraping old paint off a house. Little specks tried to hang on but, I was relentless. I bypassed the veins at first. Dr. Lemen had been particularly concerned of this aspect. I continued to free the rest of the tumor which seemed to take forever. After I finished one section there was always another gripping tight. By the time her skull had been opened by Dr. Lemen, I had completed the bulk of the task. The opening had released the pressure on Samantha's brain and her link grew stronger. I felt Rebecca cheer internally as she flooded her sister with love. \n\nOnly the hard part was left. I needed Mother more than ever now. She knew what to do. My angels would survive but there was a cost they wouldn't understand. I released the block on the solution to Mother. In an instant she merged it with her memories and saw from where the power was drawn. Then she saw the cost.\n\n\"Oh god.\" Mother jumped up and ran to Rebecca and embraced her. I rebuilt the sisters connection between them. At first Rebecca was ecstatic. I flooded her with all my love and said goodbye. Rebecca screamed and Mother flowed into her.\n\nI ripped hundreds of entwined veins within the tumor and gave all of myself to rebuild them. Creating living matter cost power and soul, I gave it mine as I channelled the immense power given to me freely. I had trouble hanging on and feared I wouldn't finish. I felt other hairs connecting and I let them in and more power roared through my mind as the last vein sealed. I faded as I felt Mother telling me she had them. My angels were safe. Everything went black.\n\nDr. Lemin looked at the tumor and sighed. The mass was too big. The skull was open now, so he would try but, experience told him it was hopeless. He secretly hoped he would hit a vein and spare this poor woman any suffering. The nurse handed him the scalpel and probe and he dropped the lense over his eye. He placed the probe at the side of the growth and lifted carefully to expose the good tissue and give him a target for the separation. Unexpectedly, the tumor kept coming. It didn't seem to merge with the brain at the end. He was encouraged as he lifted further and flabbergasted when he rolled it right off the brain. He inspected the surface of the brain and found it fully intact. No damage. The bottom of the tumor was shredded. He began to think that it had been a long time since he attended church. \n\nMy mind began to return to me and I tried to open my eyes. Light flooded and I closed them again. I wasn't sure if I had attained heaven or hell. Two shares slammed into me. One loving and one angry. Still not enough information to pick between the two. \n\n\"Robert, are you with us?\", it felt like Samantha, it must be heaven. \n\n\"You better wake up and explain yourself. How dare you try to die on me.\" Maybe it was hell. \"I felt you leave me again. You know how that feels, how can you die without me.\"\n\n\"It's over Rebecca. Let it go.\" Samantha seemed sensible to me. \n\n\"You were out cold. You didn't even feel it.\" She was crying. \"I thought I lost you. I wanted to die and Mother wouldn't let me.\" I wasn't prepared to survive. Strangely, I felt like shit for not dying. I felt inside and sensed the hairs subtly connected. Not overt like before just there and quiet. Almost like they were just listening. I opened myself and sent a steady flow of love to my angels.\n\n\"I'm sorry Rebecca. I couldn't bare your death. It was selfish but, I couldn't do it.\" My voice sounded horse, my mouth felt like it was full of cotton. \"...and I couldn't leave Samantha alone.\" The light was still too bright to open my eyes. I felt a straw against my lips and I pulled in cool water. I heard curtains being drawn and the light dimmed. I opened my eyes slowly and they adjusted to the dimmer light. \n\nBefore me stood a smiling Samantha, her beautiful hair replaced by stubble . It would have given her a kind of punk look if wasn't for the scar. I tried to smile and my chapped lips began to crack so she only got half of one. To the right of the bed was Rebecca. Her eyes were bloodshot and tears had drawn trails down her cheeks. I was swimming in guilt for not dying. How could I have done this to her and survived. \"You have to forgive me angel.\" I felt my eyes water. She started bawling then collapsed on top of me. She was gripping me hard so tried to hug her back my muscles didn't want to cooperate. I was awfully weak. \n\n\"You're lucky you didn't wake up two weeks ago. She was waiting with a baseball bat.\" Samantha inserted with a bit of humor in her voice. \n\n\"I would have never hit him. Just scare him like he scared me.\" She was shaking and I tried harder to hold her. My body wasn't cooperating but, my mind pulsed my loved laced with contrition into her soul. \n\n\"I deserve the bat.\" I let her down after her 'all or none' statement to Mother. I was with her until I saw that I could save them both. I just couldn't let my angels die.",
        "\"And you'll get it if you ever try that again.\" I felt her control returning as link got lighter and felt her love laced with less anger. I got images of myself across her lap having my bare ass beaten by a baseball bat. She had obviously put a lot of thought into it, they were very vivid. Samantha laughed and covered her mouth. I decided to risk a stupid statement.\n\n\"Oh baby, that looks so kinky.\" I figured I looked a mess with chapped lips and sleep encrusted eyes but, I tried to make it sound sexy. The anger in the link dissipated. I knew I would pay for making light of her pain but, I would pay later in much more agreeable ways. \n\n\"I am just glad you screwed up and didn't die you pervert.\" More loved flowed in and I knew I was forgiven. She pushed off of me and gave me smile a which seemed out of place with her watery green eyes.\n\n\"Are you okay.\" I said to Samantha, \"I wasn't sure I finished. Did I get it all?\"\n\n\"Yep, clean bill of health. I think I was the only one not affected by the whole thing since I was out cold. That's if you don't count my hair.\" She did seem to be the rational one. \n\n\"Well you scared the crap out of us. If it wasn't for Mother, none of us would have made it.\" My voice was coming easier now. I made a feeble attempt to sit up but, decided laying down was a better idea. I just noticed there was an IV in my left arm. \n\n\"Don't try to move to fast Robert. You've been out of three weeks. They can't explain you're collapse but, Tom has convinced them to keep it private.\" Rebecca reset the sheets and sat down lovingly next to me. She placed a straw back in my mouth while holding the glass. I drank some more and realized how hungry I felt. \n\n\"Where's Mother.\" I needed to apologize for not telling her everything until the end. Without her, it would never had worked. \n\n\"She's been kind of off since the surgery. She said you taught so much about what was forgotten. She somehow helped you by making promises but, she wouldn't say to who.\" Samantha seemed a little worried. \"The network is concerned, Robert. She has been seen talking to trees.\" I smiled as well as I could. Mother was a smart woman. I really liked smart women. \n\nI felt out for Mother. It was easy now, kind of like riding a bike. I found her just north of San Francisco. I sensed frustration and tenseness that wasn't apparent in our earlier link. It just didn't fit her soul as I knew it. I sent calmness as I strengthened the link. \"Stop that, you want me to tell the girls you're sharing.\" I smiled at the thought of the girls being jealous of the old woman. \"And I'm not that old!\" In my weakened state I was sharing more than I intended. It didn't bother me much since we both knew too much of each other already.\n\n\"I'm breathing so I must be in your debt.\" I still sensed her agitation.\n\n\"And you're going to pay my dear boy. When I saw what your were doing I was able to find a particularly old soul with so much knowledge. His roots ran deep and he brought so much power I thought our link was on fire. When I shared your attempted sacrifice, he triggered the burst. They all knew what was needed. It was costly for them, not like what it would have been for you but, costly none the same.\" She paused a moment before continuing, \"Trees only want three things Robert, water, sun and children.\" I sensed more frustration, \"Nature gives them the first two so I promised the children.\" I remembered the trees I couldn't connect to, the ones distracted by the young minds. They were enthralled and loved the eclectic, unfiltered thoughts that burst from their minds. Her agitation increased.\n\n\"What's upsetting you Mother.\" I could have just pried into her but, I felt I had done enough intruding for a life time. I had promised myself to only see what each soul wanted me too. \n\n\"I'm on a bus with thirty five kindergartners. It's a damn field trip to the Redwoods to pay my debt. I have to watch these little rats all afternoon. Even with the teachers I run ragged keeping them in line. No discipline whatsoever.\" Her frustration increased as she described her duties. \"The old one loves it, I can't even share with him when they are running around him. God, he is insatiable, this is my third trip.\" I was trying to hold back my laughter. Imagining Mother, the strength behind the druid network, having to manage unruly and unlinked kindergartners was too much. \"Laugh now Robert, they loved your soul. They haven't felt an Arch Druid in over five hundred years. Your children will be a particular delicacy.\" I laughed out loud kind of freaking out Rebecca and Samantha. Me, with kids, like that was ever going to happen. My soul belonged to my girls and I wasn't going to complicate my life with rug rats.\n\n\"What's so funny Robert.\" Rebecca sensed my link with Mother. She was concerned that something may be wrong. My laughter seemed out of place. \n\nI was trying to recover from the laughter so my statement was halting but I had to share it with the girls. \"Mother...thinks it's time ... we had children.\" Me a father. I would suck so bad it was laughable. My sides were hurting. \n\nA sudden warmth filled my soul. Love swamped out my laughter and passion filled the void. It was an intense solid love, a love of need, a love of want. It was blissful and full of promise. It was instinctive with little control behind it. It was so powerful it leaked around everything. I couldn't have blocked it if I tried. \n\n\"Babies would be so wonderful.\" Samantha was in heaven. I felt her as a mother loving, bonding and cherishing. \n\n\"They would be so beautiful.\" Rebecca was on the same cloud if not a bit higher. I was fucked.\n\nMother smiled, \"Who's laughing now, Daddy.\" and severed the link."
    ],
    "authorname": "DreamCloud",
    "tags": [
        "sisters",
        "mystery",
        "bonding",
        "love"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-network-1"
}