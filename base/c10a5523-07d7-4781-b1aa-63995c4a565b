{
    "title": "Arcanum - Of Steamwork and Magic Ch. 13",
    "pages": [
        "July 9<sup>th</sup>, 1885 \n\nThe town of Stillwater appeared, after the past week of marching through sticky, humid temperature and the occasional flurry of summer rains, like a paradise upon the gods green earth. I, Virginia, Maggie, Sally, Gillian, the ever faithful Dogmeat and the members of the Stonecutter clan who had decided to emigrate back to the Wheel Clan all trudged into town stinking of long travel and the still omnipresent smell of zombie. As we came to stop near the central statue that marked the middle of the town, watched by all the gathered villagers, I turned to face Herod Iron Heart. \n\n\"So, again,\" he said, his voice anxious behind his beard. \"I am sorry about all the nonsense involving the zombies and the reanimated dogs and the insane golem and-\" \n\nI mutely pointed off to the east. \n\nThe dwarf we had been sent to deliver nodded, turned, and hurried off with the rest of his clansmen. \n\nA gentleman in the uniform of a Tarantian constable walked slowly over towards us, eyeing the party that did not immediately set off for the Wheel Clan's hidden stronghold. He opened his mouth, clearly about to ask a question, but I raised a grime splattered hand. \"I don't want to talk about it,\" I said. \n\nThe only member of our party that seemed happy with their current state was Dogmeat \u2013 and that may have had something to do with the sheer number of bones he had gotten to play with while in the depths of the Stonecutter clan's mines. The constable shook his head slowly, then jerked his thumb over his shoulder. \n\n\"The Bleeding Rose has beds and baths for a few crowns,\" he said. \"With hot water, too.\" \n\n\"Oh praise Nasrudin,\" Virginia groaned as the constable took his leave. \n\n\"You're welcome,\" I said. \n\nVirginia kicked me in the shins. \n\nThe innkeeper himself \u2013 a blustery faced, balding halfling \u2013 looked quite askance at the lot of us until I laid out the golden coins that I had. They were becoming an increasingly motley example of the financial practice, as several bore the bespoked icon of the Wheel Clan, several were ancient Black Mountain coins, and the rest were a combination of Tarantian and Caladonian mintings. However, each weighed about the same, and they had a salubrious effect on the halfling, who held out a set of keys to us. \n\nSomething small wriggled in the back of my mind \u2013 a half remembered thought. It was only once I took the key did it spark in my mind: \"Oh! Some months ago, an older human woman with hazel eyes, a facial scar and the robes of a Panarii priestess must have visited. Has she remained staying here?\" I asked, recalling the descriptions of the Elder Johanna that Virginia had given me. Virginia started at the mention of her mentor \u2013 clearly, she had forgotten as I had that Johanna had said to seek her in Stillwater in the telegram we had received months before. \n\nThe innkeeper's eyes brightened. \"Ah! You are Virginia?\" he asked, looking at Virginia, who nodded quickly. The innkeeper held up a single finger. \"Beg pardon, I must retrieve something from the lockboxes.\" \n\nHe turned and scampered into the back rooms. As he did so, I murmured to Virginia. \"Seems we missed Johanna again.\" \n\nVirginia nodded, her eyes impossible to read. The halfling emerged from the back of his inn and brought with him a thickly bound red book with a clasp that was sealed with a tiny key. Held against the cover with his thumb was also an envelope, sealed in wax. He held both to Virginia, who took them with a quiet thanks. Thus equipped, we all headed back to our rooms. Feeling absurdly bashful, I entered into the room I had acquired for Virginia and I, trying to ignore the salacious smile sent our way by Sally Mead Mug. Once within, I took stock. The room defined rustic and pleasant \u2013 bringing to mind the room at the Shrouded Hill's inn. Though, unlike that, this room lacked corpses. \n\nVirginia shucked off her traveling coat and tugged off her chain mail, wearing only her cotton undershirt and her leather leggings. \"So, uh, what does the letter say?\" she asked as she walked into the rear of the room, where an iron wrought tub sat, already filled with water. She put her finger into the water and hissed with happiness and pain both, jerking her hand free. \"Piping hot.\" \n\n\"Who gets the bath first?\" I asked. \n\n\"Oh, uh...you!\" Virginia said, her cheeks darkening. \n\n\"Nonsense!\" I said. \"You're my bodyguard. Shouldn't you...bathe...first?\" \n\n\"That is poppycock and...and folderol!\" she said, flipping one hand. \"I can't protect you in the bath!\" \n\n\"And I won't have you catching a cold after I soak all the heat out of that bath,\" I said. \"This is the mountains, you know.\" \n\n\"In July?\" Virginia crossed her arms over her chest. \"I'm afraid I must insist, sir, you get the bath first!\" \n\n\"Absolutely not,\" I said, setting the book down on the bed. \"I offered it, and it would be priggish and ungentlemanly to simply take the honor from you. After all: Ladies first.\" \n\n\"Oh, I'm a lady now!?\" Virginia asked. \n\n\"...yes?\" I blinked. \n\n\"I mean...like...I'm...\" Virginia spluttered. \"Fine!\" She grabbed her shirt and tugged it over her head with some fierceness, throwing it directly into my face. It was rich with her scent \u2013 unfortunately, her scent included the now week old gore of several zombies she had decapitated while delving in an underground dungeon. I tugged it from my face and threw it to the ground in time to see that Virginia had sunk up her chin in the bath, her knees drawn almost to her nose. Her hair had been frazzled by the progress of her shirt, giving her a wild-woman look to match the peevish glare she sent my way, which contrasted sublimely with the poorly concealed look of bliss that came from soaking in a piping hot bath. She groaned quietly as I sat upon the bed, opening the wax seal on the letter with one fingernail. I tilted the envelope and found more than just a folded piece of paper covered in cursive scrawl: There was also a tiny golden key with a death's head motif on the bow. \n\n\"What does it say?\" Virginia called from the bath. \n\n\"Give me but a moment, old girl,\" I said, using a thumb to open the letter up and hold it before me. I tilted it to catch the light from the oil lamp in the room. \n\nV. \n\nThe men trying to kill you seem to be the remnants of the Molochean Hand, who, long ago, were assassins for the Order of the Dead (Derian Ka). I found this ancient but incomplete text concerning their history...they don't seem to be bad fellows, perhaps just a bit misdirected. Things are too dangerous right now...I shouldn't have even had you come here. I'll find you. \n\n-J \n\nI finished reading it aloud to a loud snort from Virginia. \"Not bad?\" she asked, sloshing in the bath slightly. \"What, pray tell, do these fellows have to do to be villains? Kick puppies? Drown kittens in the bathwater?\" \n\nI chuckled. \"Well, let us see what we can see...\" I said, lifting the book and checking the spine \u2013 only to find that the lettering had worn away to indecipherablity. I pursed my lips, then tried the key on the clasp. A faint click sounded and the book opened before me and I saw what the Elder Johanna had meant by 'incomplete.' Large swaths of the book were illegible \u2013 the page eaten away by time, or damaged by water. I turned even these useless pages with great care, not wanting to harm the tome anymore than it already had by time. At last, I came to some text I could read \u2013 and began to do so aloud. \n\n...lost histories of the Molochean Hand. Their separation from the Order of the Dead was always a mystery, but translations of the scroll of Trellian, First Assassin of the Hand, have brought to light their enigmatic reasons for leaving. A half-torn excerpt from the scroll reads... \n\n\"...and the writings of the great Necromancer were found by me, and his madness and abominations were made clear, and I threw myself to the ground with great sorrow and gnashing of teeth. How evil were the men to whom we had pledged our hearts and our swords? I vowed to make war, and we set ourselves upon them and the Gray Legions on the plains of Vooriden, and we broke them, but were also broken upon them. My heart burns...\" \n\nObviously, there were doctrinal differences between the Derian Ka and their order of assassins. The 'great Necromancer' referred to is obviously Kerghan the Terrible, after whose death was formed the Order of the Dead. The 'writings' that Trellian refers to are unknown, but its been surmised that they were some sort of personal journal or log book. One of the scrolls of Trellian also refers to '...the master's place of dark secrets set among the stones...\" which may or may not have referred to Kerghan's lost laboratory, spoken of cursorily in both the writings of Belaak and Ysered. \n\nThe final page showed the drawing of a human's face \u2013 lantern jawed and sunken eyes, with a perpetual sneer on his lips and a mop of unruly hair tied back into a pony tail. Beneath it was the inscription: Kerghan the Terrible, before his execution. \n\nI closed the book and Virginia and I sat in silence, our thoughts dark. \n\n\"Well...\" Virginia said. \"This Trellain fellow at least seems to be a good chap. Anyone who stands against something called the Order of the Dead is a good one in my book.\" She chuckled nervously. \n\nI stood and began to pace, letting the book lay on the bed. \"Trellain the First Assassin, I must remind you.\" \n\nVirginia tensed in the bath, her fingers gripping onto the wrought iron edges. Her voice grew soft. \"Yes. Well. We're none of us saints, are we?\" she asked, her voice soft. \n\nI looked to her \u2013 from my vantage point, I could see her slipping slowly lower into the bath, her hair seeping into the water. She closed her eyes, and for the moment, only her face was visible above the water. For just a moment, I could see only her face \u2013 the liquid reflecting the light of the oil lamp as it had become silvered. Virginia looked deeply at peace at that moment \u2013 and yet a deep, intense horror filled me. I had to say something, to break the momentary illusion: \"Indeed.\" \n\nVirginia lifted her head, nodding quickly. Her hair, slicked back and soaked, looked nearly raven black, rather than the normal chestnut hue she was normally had. \"Ray...\" She brushed her fingers through her hair, her eyes unwilling or unable to meet mine. \"T-There are some things that happened to me, some things I should tell you...\" She shook her head. \"They happened because I was a fool. Or a coward. Or...\" She sank deeper into the water. \"Burdens like mine don't go away. They always come back, to collect what is due them. Someday, the balance will have to be paid.\" \n\nSilence hung in the room. \n\n\"Virginia,\" I said, my voice soft. \n\nVirginia ducked her head forward \u2013 and I saw her looking purely and utterly miserable. My past as a bandit was not unstained by blood. But, by and large, I had done my best to simply take gold, not lives. I wondered if her past was nearly so clean. And seeing her misery decided me. I stepped to the side of the bath, then knelt down. I placed my hand on her shoulder, squeezing. \"You need not tell me a thing, Virginia. I can wait to hear.\" \n\nVirginia sent me a watery smile. \"Thanks,\" she said. \n\nQuietly, she added: \"You smell really bad.\" \n\nI dunked her beneath the water. \n\n*** \n\nThe next morning dawned and I left Virginia to lay in bed, a satisfied smile upon her lips. I headed down to the common room in the inn and put in a request for some breakfast for me and my compatriots. Seeing other travelers who had come to Stillwater, I ambled over, then took a seat at the common table, striking up a conversation with a half-elven woman, who quickly told me her name \u2013 Maria \u2013 and her reason for coming to this town \u2013 hunting in the Glimmering Forest. This led to me telling me her what had brought me here: The hunt for the route to the elven city of Quintarra. \n\n\"There's an elf in town who knows the exact way, I believe,\" she said, sipping on a cup of piping hot coffee. \"Myrth, he lives north of the blacksmith, he's from Quintarra.\" \n\n\"Ah, my thanks,\" I said, smiling to her. \n\nThus equipped with fresh intelligence, I set out with Virginia at my side, once she had been fortified by a stiff cup of sweetened coffee. We set to the middle of town first, and here, I actually got a chance to survey the statue that made the center of the town so easily found. It was a hideous, wrought iron statue in the shape of a humanoid figure with a pair of antler-like horns, a wide, squat face, and broad shoulders that looked fit to give a half-ogre a run for their money. At the base of the statue was the name: The Stillwater Giant. \n\n\"Ah,\" I said. \"Like in H. T. Parnel's Museum!\" \n\n\"So, I'm beginning to doubt the veracity of H. T. Parnel's Museum,\" Virginia said, her voice dark. \n\nI took a glance about the center of the town and spied the local blacksmith. He was a human gentleman with a clean shaven face, a furrowed trio of scars across his scalp, as if some kind of beast had struck him a glancing blow from overhead, and muscles slabbed atop a growing shroud of girth. His hair, which grew in patches around his scars, was sleet gray. Despite his advancing years, he swung his hammer with a steady rhythm, beating out a brilliant red blade upon his anvil. He quenched the blade in a pail of oil \u2013 filling the air with hissing and spitting sounds as I approached. \n\n\"Good day,\" I said, my hands sliding into my pockets. \n\nThe man looked at me with the skepticism I was used to. But he did incline his head in a very faint nod. \"How might I do you for, greenskin?\" he asked. \n\nI sighed. \"I heard that an elf lived nearby \u2013 a Mr. Myrth?\" \n\n\"Aye, I know him, he's four houses that way,\" the blacksmith said, pointing with his finger. \"Why you looking for him? Does he owe you money?\" \n\n\"Oh, no, no,\" I said, shaking my head. \"We're seeking a route to Quintarra.\" \n\nThe blacksmith nodded once, then drew his sword from the oil. He looked at it, and rather than the look of pride and contentment I expected, his face instead twisted into an irritated frown. \"Whatever is the matter?\" I asked. \"That's a fine blade. My friend, Magnus, has told me something of the forging art, and that is somewhat dwarven in the make...quite an accomplishment for a human blacksmith, isn't it?\" \n\n\"Aye, it is,\" the blacksmith said. He set the sword down. \"But it is the fifth half finished sword I've made this week \u2013 do you know why people come to Stillwater?\" \n\n\"The giant?\" I asked, jerking my chin to the statue. \n\nThe blacksmith spat. \"That poppycock,\" he said, scowling. \"Leave it to Stanley to talk up a delusion and drink and get tongues wagging across Arcanum about it. The Stillwater Giant is fake. Made up. Fairy tales. Nonsense. How many times do I have to tell this to tourists from Tarant and naturalists from Caladonia and knights from Cumbria?\" \n\n\"A few more times may do the trick,\" Virginia muttered to me. I stifled my chuckle. \n\n\"People come to Stillwater for her swords,\" the blacksmith said. \"For Richard Leeks' work. That's me.\" \n\n\"A pleasure,\" I said, bowing my head to him. \"And very fine swords they look.\" \n\nRichard grinned at me, showing he was missing a single tooth. \"The forging's half the work, greenskin. The other half's putting spells on them. A revolver might kill a man from a dozen yards off, but only a magick sword will slay the undead. Plus, there's mages aplenty who still want a bit of steel to hold them safe when they're outta mana. The Caladonian Guard want a full shipment to give their Dragoons.\" \n\n\"A strange kingdom, buying magick swords while building machine guns,\" I said. \n\n\"If you ask me, Arland's got the way of it.\" Richard said. \"I hammer on steel. That's basically what those factories in Tarant do. But my steel gets magicked and can serve a point. And that won't stop me from hunting game with a rifle, or riding on the railroad. Pretending there's any sense to ignoring half the world and pretending the half you staked out is the best part is just blind foolishness, if you don't mind me saying.\" \n\n\"Hear hear!\" Virginia said, quite forcefully. She shot me a significant look. \n\n\"I don't ignore your magick talents, Virginia,\" I said. \n\n\"Oh, no. You just refuse to take advantage of them,\" she said, a distinct grumble in her voice. \n\n\"Believe you me,\" I said. \"If I could make your healing spells work more often, I would.\" I patted my chest. \n\nVirginia laughed and I jostled her shoulder. \n\nRichard was looking at us with a faint suspicion. The gleam in his eyes reminded me, in a way that months in the wild and in dwarven catacombs did not, that most of the civilized world viewed the relationship between Virginia and I as a direct threat to the proper order of things. A good half of the hatred and bile piled upon my head had less to do with the orcish part of my blood and with the human part. The idea of a human woman consorting \u2013 willingly or not \u2013 with a green skinned man was loathsome to many. I felt a deep sadness settling over my good mood and contrived to hide it by asking Leeks: \"So, you need these blades magicked?\" \n\n\"Aye, yes,\" Leeks said. \"But the mage who does it hasn't visited since Monday.\" \n\nI frowned. \"Have you gone to his house to check?\" I asked. \n\n\"And get turned into a toad?\" Leeks snorted. \"Cyrus is a crazy old gnome, I'm not about to risk that.\" He frowned. \"Say...\" He looked suspicious again, his eyes boring into Virginia, who seemed to become aware of his thoughts and was glaring back at him in a way that seemed designed to clearly announce her feelings about me. And so, once more, I headed off at the pass. \n\n\"Then might we?\" I asked, smiling. \n\n\"If you would, I could see about giving you one of the swords,\" Leeks said, his voice brusque as he looked at me. \n\n\"Capital!\" \n\nVirginia and I set through the town to find Mr. Cyrus' home. This was easier said than done, for the old wizard had taken to the habit common to wizards throughout the millennia and built his home as far from the center of town as possible. As we stomped along, Virginia fumed, grumbling under her breath: \"Small minded bigot, red nosed teetotal-ing, puritanical-\" \n\nI held up my hand. Virginia stopped, her mouth snapping shut. Her hands gripped the hilt of her magick sword as she saw what I had seen: For both of us were standing before the small house that had once been Cyrus' home, and both of us could see that the front door had been shattered inwards. The lock was broken and the interior of the house was dark. I strode forward, drawing my revolver with my free hand. The two of us advanced towards the door, and when I peeked inside, I saw that the bed had been tilted over, the table had been smashed in half, and the wall was scorched with what appeared to be serious magickal discharges. \n\n\"Sir!\" Virginia called out. \n\nI turned from the door \u2013 and saw what she was pointing down at the ground, where thick footprints had stomped down the grass. Very large footprints. \n\n\"Stillwater giant?\" I asked. \n\n\"Giants are supposed to be fifty feet tall!\" Virginia hissed. \"And extinct.\" \n\n\"We're currently on the hunt for a missing dwarf tribe captured by a two thousand year old elven megalomaniac,\" I pointed out as I started to follow the footprints. \"Hunted ourselves by an ancient cabal of assassins who once served the first Necromancer.\" \n\n\"That's irrelevant, sir!\" Virginia called after me \u2013 before hurrying to catch up. \n\nThe two of us made our ways deeper into the mountains, where the thick summer growth and underbrush made tracking the large creature and their stolen gnome fairly easy. Here, there was a scrap of cloth caught on a branch. There? Another brush crushed into paste. After a mere ten minutes of walking, Virginia and I came to a narrow cave sunken into the side of the mountains. Virginia lifted her hand to create a shimmering glowing orb in the air, illuminating the interior of the cave. It was dotted with bones \u2013 most of then animal in nature, but a few looked close to human. All had been cracked open by great big teeth, and the bone marrow had been sucked from them with gusto. At the very back of the cave was a small gnome, tied up with his hands and feet bound, his mouth filled with a crude gag. He wriggled upon seeing us and we both ran forward. ",
        "Kneeling down, I yanked his gag off and Virginia began to cut the bindings. The gnome \u2013 Cyrus, I presumed \u2013 coughed and spluttered once his mouth was free. \"Thank the gods!\" he gasped out, his eyes wide. \"That bastard finally went and did it!\" \n\n\"Who did what?\" I asked as Virginia cut his feet free. Cyrus stood, then immediately fell. I caught him before he could crash face first into the ground and stood, helping him keep his feet. His face was a mask of pain, and I could see why: His fingers and his feet had turned nearly black with the loss of circulation. Virginia began to press her hands to his side, and healing magick flowed through his body. As the magick did its work, Cyrus explained his predicament. \n\n\"The ogre \u2013 Orok Black Tusk,\" Cyrus said. \"He's been living in this cave for years, never hurt anyone. But he gets so very hungry, and sometimes, he comes about my house, rattles the windows. I've scared him off before, but this time...\" He shook his head. \"He carried me off, and has been working for the right time to eat me whole.\" \n\n\"A half-ogre!?\" Virginia asked, her eyes wide. \n\n\"No, a full ogre!\" Cyrus hissed. \n\n\"And you didn't tell anyone?\" I asked. \n\n\"I didn't need help!\" Cyrus snapped. \n\n\"Fee...fi...foe...fum...\" A bass voice rumbled from the front of the cave. \"Who has freed the gnomish one?\" \n\nI stepped away from Cyrus, lifting my pistol. The shape filling the end of the cave was everything I had seen in Sally, exaggerated to a grotesque extreme. I had had no idea how much human blood was expressed within a half-ogre until I saw the lack. Black Tusk was nearly twice the height of Sally, and even more muscular. Lit by the pale glow of Virginia's cantrip, his face was hideously broad and squashed. He looked almost malformed. I did not quite aim my weapon at him. Instead, I called out to him. \n\n\"Black Tusk...this does not need to end in bloodshed,\" I said. \n\nBlack Tusk considered these words. Then he roared and charged at me. His feet hammered into the ground and the ceiling shook with the weight of him. Dust pattered down as I fired two shots into his chest. The accelerator pistol bucked in my arm and slammed into his chest, staggering the ogre as he sprinted forward. Blood painted the walls and ceiling behind him. But rather than falling, despite the massive holes ripped through his body by the hyper-accelerated bullets, Black Tusk merely roared and swung at my head. Virginia's blade passed through the air with a darting swiftness, hewing him to the wrist bone before her blade caught. \n\nBlack Tusk jerked his hand back and roared, the blade sticking from his arm like a splinter. I dove to the side, firing round after round at him. Two missed, but one struck his belly, staggering the beast as he shook himself. Virginia, once my firing had ceased, leaped forward and took hold on the hilt of her blade. She jerked it free with a scream of fury and then brought it slamming into Black Tusk's thigh. When she ripped the tip free, blood poured into the floor in great, gouting spurts. Black Tusk backhanded her, but the blow lacked strength and merely sent her rolling away with a groan. \n\nI fired two more shots into his chest, centered around his left lung. Black Tusk opened his maw and black blood dripped along his chin and pattered to the floor \u2013 before he wobbled, then at last, fell face first to the ground. \n\n\"Virginia!\" I shouted over the ringing in my ears. \n\n\"Quite all right, sir!\" she shouted back. \n\nI turned to face Cyrus, smiling at hi. \"Are you able to walk, sir?\" \n\nHe nodded, slightly. \n\nIn the ringing silence, he said: \"Remind me to never anger any of you adventuring sorts.\" \n\n*** \n\nLeeks held out the sheathed blade to me and I took it, feeling the lightness and grace of the weapon, even with the weight of leather bearing it down. I smiled. \"I believe I know a gentlewoman who will find this of great use,\" I said, thinking of Gillian. \n\n\"I'm just glad the old bugger is all right,\" Leeks said, his voice gruff. \"And...thank you.\" He nodded. \"What's your name boy?\" \n\n\"Rayburn Cog,\" I said inclining my head to him. Leeks nodded his head back to me and I turned to go. Virginia had headed back to the tavern to drop off the loot we had found within the ogre's cave \u2013 while he had clearly withstood the impulse to eat the gnomish wizard, he had not restrained himself when it came to predating on other travelers. The number of humanoid bones we found, mixed with the odds and ends that were salable, made my heart sick. Not only at the loss of life, but on...a haunting reminder that sometimes, bigots were right. \n\nBut...not about me. \n\nAnd not about Sally. \n\nNo. Not about anyone. I shook my head. I had to believe that. If I didn't, then...what was I doing any of this for? \n\nSo absorbed was I in this thought that I barely noticed that I was about to walk into another person before I did. I started backwards as the other individual flailed brightly clad limbs and let out a squawk of surprise. I caught their wrist and stopped their fall before they plunged into the dirt \u2013 then blinked in surprise. For the person I had bumped into was a woman. And as she tossed her head to send her hood skirting back behind her head, I realized that she was a beautiful woman. Her face was heart shaped and welcoming, while her hair was luxuriously thick and curly and the same hue as a golden dawn. Her eyes were the blue of her robes, and...those robes, now that I could actually take them in, were cut... \n\nSheer. \n\nExtremely sheer. \n\nWhich meant it was quite easy for me to see that her breasts were nearly the size of Sally's \u2013 and quite a bit more perky. Her rump was thick and heart shaped and taut like a drum, while her thighs and her shoulders both formed the base and the top of an hourglass, the center being her belly. She was, in a word, the ideal put forth by magazines and dock workers as the perfect woman. I liked to say that I had a broader mind than most of the human race \u2013 but even I had to admit... \n\nDamn. \n\n\"I beg your pardon,\" I said, bowing to her. \n\nShe beamed at me with the force and dazzling brilliance of the noon day sun. \"Oh, do not worry about it, brother,\" she said, her voice a cheerful one. \"How are you enjoying Stillwater, the home of peace and harmony?\" \n\nI chuckled, softly. \"Isn't it famous for its swords?\" \n\nThe blond girl laughed. \"Oh, but those swords are made with love, aren't they Leeks?\" She called this to the blacksmith, who looked at her. His expression was sour \u2013 but it was the playful sourness of a man trying to seem gruff to impress a girl. She looked back to me, her smile growing wider. \"And they are used to smite evil, are they not?\" \n\nI inclined my head. \"That's a fair point, my lady.\" \n\n\"Oh! Please!\" She laughed. \"Call me Bridgette. Come with me, brother!\" She took my hand and suddenly, I found myself dragged after her \u2013 heading towards a large, broad building that had the look of a church. Though, unlike the Panarii temples I had seen, this was not made of stone. Rather, it had been recently fashioned of wood, and as we came through the front doors, I saw that the interior of the building was decorated with braziers for heat and a faintly musky incense, broad pillows, cushions, and silken sheets. \n\n\"You do seem to be in a cheerful mood,\" I said, a bit nervously. What was this place? \n\nBridgette stopped as if she had been slapped. Her voice breathed out in a slow sigh and she shook her head. \"Your words are very kind, stranger,\" she said. \n\n\"Ray. Rayburn Cog,\" I said, quietly as she turned to face me. Her eyes brightened and once more, that huge smile was beamed in my direction. \n\n\"What a lovely name!\" she said, happily. \"But...I'm sorry I'm so down and depressed...\" Her smile went from sun like in its brightness to merely incandescent. \"I am trying my best to stay happy and joyful, as stated in the teachings of my goddess, Geshtianna. But...I am filled with sorrow instead.\" her smile actually faded to nearly nothing. She turned, then opened a door at the back of the temple, showing me a beautiful garden \u2013 containing a large stone altar that seemed more like a bed than a religious structure. Behind the alter was a circular plinth that looked strangely barren. She pointed to the plinth, and her voice grew soft. \"The statue of our goddess has been stolen.\" \n\nI admit. \n\nI had a hard time noticing any of these details, for Bridgette had stepped forward enough that I could easily see the perfect form of her rump, which was clearly outlined by the incredibly sheer, thin fabric of her robes. \n\nI coughed. \"I believe I, uh, can find this statue for-\" \n\nBridgette tackled me. Her arms wrapped around my shoulders and squeezed me tightly as she molded her breasts to my chest, nuzzling her nose against my neck. She murmured against me, her voice a breathy promise of things to come. \"Oh thank you, Rayburn Cog. Thank you thank you thank you...\" She drew back, her hands sliding along my chest as she beamed at me. \"If you do, the goddess will bless you. Of that I can promise you.\" Her eyes became quite...deep as they met mine. \n\n\"Oh.\" I coughed. \"Uh, how?\" \n\nShe beamed. \"By filling your heart with such joy that all others will find you as beautiful as I do!\" \n\nI nodded, a bit awkwardly. \"Which is...everyone. Right? You find everyone beautiful?\" \n\n\"Of course!\" she said. \n\nI grinned, somewhat ruefully. \"Let me go hunting for the statue.\" I paused. \"Does it have any properties? Anything that might make it easy to track?\" \n\n\"Oh, no, none,\" Bridgette said, shaking her head. I frowned, slightly. Well, that made my job somewhat harder. \"Well, other than making any who have it in their possession unbelievably beautiful thanks to the blessings of our goddess!\" \n\n\"Ah!\" I said. \n\n\"And you want us here to help why?\" Virginia asked me as I took my seat on the edge of the Stillwater Giant statue's base. She, Sally, 'Magnus' and Gillian were all seated in similar ways, all of them looking out at the villagers who were walking by. It seemed taking a constitutional upon the statue's broad, granite base was quite normal, for none gave us more than a passing glance. \n\n\"This statue's magic is unclear to me,\" I said. \"Does it work on only the members of the opposite sex? If so, I'd want women here to see the effect if it was stolen by a man. If it was stolen by a woman, then I and Magnus can spot the change. If it effects both equally, then more eyes are better than just mine. And, finally, if it is magickal in nature, having magickal eyes \u2013 such as yours \u2013 would do a high sight better than just my pair.\" I smiled at Virginia. \n\nShe nodded. Then, faux jealousy: \"So, how did this Bridgette woman look.\" \n\nI coughed. \"Ah, look, more farmers in from the field!\" \n\nWe sat there as the sun slowly drifted by, clouds coming and clouds parting. People came and went, and the time seemed to drag on its hands and knees. I considered the events of the past few months \u2013 juggling together pieces and clues, trying to find some coherent picture. But none yet had come to form. And so, I simply thought of the adventures I'd had...and realized that I would not trade them for the world. While my life had been in danger many times, my life had been in danger before. But before, I had been merely a half-orc living on the edge of society, by my wits and by my gun. But now? Now I was someone. \n\nThat was worth it all, really. \n\n\"Oh my,\" 'Magnus' squeaked, her voice nearly breaking with excitement. Sally snapped her head up and let out a very wolfish whistle. Gillian's brow furrowed and she looked like she was ready to reprimand the sailor ogre for her crassness \u2013 but then Gillian squeaked and her green skin turned nearly black with a flush. Virginia simply gaped. Even Dogmeat \u2013 who was sprawled on his belly beneath our feet \u2013 lifted his head, then started to pant excitedly. I followed their sightlines and saw... \n\nUh... \n\nOh my. \n\nI had only been tempted by the crime of sodomy once before \u2013 unlike my old friend Don Throgg, who had been a complete reprobate when it came to such things. In fact, the man who had tempted me such had been Don, something I had never had the courage to admit to before he had been shot and left for dead. But this man? This man did far more than tempt me to sodomy. He tempted me to be the victim, so to speak. It was hard to place my finger on exactly why he was so mouth-wateringly desirable. It was not the face, which was potato shaped and squat nosed. It was not his eyes, those were watery and indecisive. Nor was it his chest, which was neither muscled nor lean. \n\nIn fact...it was nothing about his person. \n\n\"He's just hot,\" Sally said, quietly. \n\n\"Yeah,\" Virginia said, coughing. \"S-Sir, you can watch if...\" her finger went to the collar of her chain-mail suit. \n\n\"He's got,\" I said. \n\nEach woman blinked. \n\nThe transformation on their faces was as stark and sudden as their initial expression had been, though each showed differently. 'Magnus' practically vanished into her faux-beard and started to grumble as gruffly and in as masculine a manner as she could contrive. Virginia scowled. Sally looked faintly wistful, as if she was trying to recapture the wanton feelings she had felt before and was somewhat loathe to admit that she couldn't. Gillian, meanwhile, assembled an expression of pure haughty disdain. \n\n\"What are we going to do to him?\" she asked, her voice as chill as Stillwater during the winter. \n\n\"Nothing,\" I said. \"Well. Talk. We're going to talk to him.\" \n\nI stood, brushing my hands along the seat of my pants. \n\n\"Talk?\" Sally asked, miming a masturbatory gesture. \"Or...talk?\" she punched her knuckles into her palm with a sound more similar to a meat cleaver plunging into a chunk of beef. \n\n\"Just talk,\" I said. \n\nSally frowned. \n\nI smiled. \"If he proves to be an uncouth lout in person, then you may...\" I slammed knuckle to palm. \n\nSally beamed. \n\nTogether, we followed the mysteriously attractive gentleman through the town of Stillwater to his house, which was situated at the edge of town on nearly the direct opposite edge from the unlucky gnome Cyrus. I waited until he had entered before I darted out from the alleyway I had stopped in. I stepped up to the door and rapped on it with my knuckles and a short moment later, the door opened and I found myself face to face with the unsightly beauty. Breaking the line of sight and seeing him once more had proved to be a tactically poor decision, for it allowed the beautiful blessing around him to smite me as fiercely as it had before. \n\nHowever, the expression of sudden terror on his face helped to jar me out of my sudden infatuation. Seeing fright on the face of someone I was about to seduce was never arousing. He started to close the door, but instead I slid my foot forward, catching the door before it fully shut. \n\n\"We must talk, sir,\" I said. \"About the statute.\" \n\nHis face fell...but I smiled at him, holding up my hands. \"I'm not here to fight you about it. I just want to talk.\" \n\nThe man's eyes wavered...and then he opened the door. \"Come in,\" he said, his voice a husky groan. I stepped inside, glancing over my shoulder at my women, who waited at a safe distance. I shot Virginia a look that she immediately grasped and she held out her hand to stop Sally from charging in after me. The door shut and I saw the interior of the house had little to recommend it: The walls were simple wood, and the bed was only barely large enough for the man himself. There was, however, a door to a room in the back which looked like...well, the most fuckable door in the history of Arcanum. I could imagine myself sliding my tongue along every inch of that splintery surface, grinding my hard green member against the knots and the gnarls in the frame...I... \n\nI shook my head. \n\nSeeing my look, he smiled sheepishly. \"Y-Yeah. It's back there.\" \n\nI sighed. \"Well, lets begin with introductions then.\" I held my hand out to him. \"Rayburn. Rayburn Cog.\" \n\nThe man looked at my hand as if it were a threat. Then he took it. \"Marley,\" he sad. \"Marley Jacobson.\" \n\nI nodded. \"So, why did you steal the statue, Marley.\" \n\nHe gestured to his face. \"Look at me, Mr. Cog. I'm less likely to woo the lassies than you are \u2013 and you're a greenskin!\" He shook his head slightly. \"For my whole life, I've been mocked and scorned and spat at. I've never had any chance. Any luck. Nothing at all! I've never had any love before I stole the statue.\" \n\n\"That's a sorry story, old boy,\" I said, shaking my head. \"Rejection is a heavy weight to bear.\" \n\nMarley blinked. \"Oh. Uh. Yeah.\" He looked slightly shifty. \n\nMy brow furrowed. \"You...you did ask women, yes? To go for walks in the park, or to take them to the tavern?\" \n\nMarley's voice contained an edge of a whine. \"They'd never have said yes.\" \n\n\"They never say yes if you never ask!\" I said, shaking my head. \"Marley, old boy, women are never going to be interested in a man who is full of wheedling, whining and recriminations. Even men who are less handsome can win by on personality, conversation, wit! Confidence can carry the day farther and more surely than good looks.\" \n\n\"Easy for you to say...\" he muttered. Then, quietly. \"The Geshtiannaites want their statue back, don't they?\" \n\nI took his shoulder, squeezing. \"Aye, they do, Marley. But this need not be a grim end for you.\" I smiled. \"Bridgette said she would bless me for returning the statue. A blessing that will make me seem more beautiful than before. She's a generous and kind soul \u2013 I wager if I ask her to bless you, she'll do just that.\" \n\nMarley's eyes widened. \"Really?\" \n\n\"And!\" I said. \"I can show you some tips and advice-\" \n\n\"To gain the hearts of women!?\" Marley gasped. \n\nI shook my head. \"No, Marley.\" I squeezed his shoulder again. \"The only person who can give you the heart of a woman is the woman in question.\" I grinned. \"Rather, I'll try and show you how I carry myself with confidence \u2013 that and a blessing should get you lucky at least once.\" \n\nMarley smiled at me. \"Really?\" \n\n\"I swear upon it as a man of honor,\" I said. \n\nMarley sniffed, then threw his arms about me, hugging me tightly. I sagged slightly under his weight as he buried his face into my shoulders, weeping openly. I held him gently, then patted his back, smiling slightly. \"It's okay, let it out, let it out.\" \n\nOnce Marley had wept out several years of frustration and humiliation, he opened the back door of his house and there, I beheld the statue of Geshtianna. I and Marley stood there, looking at the brilliant golden formation of carved muscle and flesh, forming into an echo of the hourglass perfection of Bridgette, with long tresses of golden hair spilling along her back, silver-capped nipples carved to be perfectly erect, a golden labia carved with an elven purity. I coughed softly, feeling a curious mixture of emotions roiling inside of me. \n\n\"...yeah...\" Marley said quietly. \"It's, uh, actually quite pleasant too-\" \n\n\"You cleaned it, right?\" I asked, my voice tight. \n\n\"E-Every time!\" Marley said. \n\nMarley had stolen the statue via a small cart and a wooden box. Loading the golden statue into said box and then dragging the statue out made things easy \u2013 but as I emerged from the house, I was nearly immediately mobbed by my entire party. Sally pressed against my left, Virginia to my right, while Maggie and Gillian crowded up to my front. Sally's breasts nearly enveloped my head as Virginia purred in my ear. \"Hello, sir,\" she said, her voice freighting the honorific with a kind of submissive warmth that set my ears nearly aflame \u2013 especially when paired with Sally's finger coiling through my hair. ",
        "I let go of the cart's handle. \n\nNearly immediately, each woman stepped back, save for Sally, who continued to enfold her breasts around my head until I pressed my freed palm against her belly, then gently shoved her back. Virginia, her face beat red, said: \"Well, I see that you have found the statute, the magickal statue, that does magickal things!\" Her voice was nearly a shout. \n\n\"Yes, indeed!\" Gillian added. \n\nSally snickered. \"Like he wasn't already hot.\" \n\nI sighed, then rubbed my palms along my face. \"Sally,\" I said. \n\n\"Yeah, boss?\" she asked. \n\n\"Can I have the rope you used as a belt before we got you proper clothes?\" I asked. \n\n\"Like she still has th...\" Virginia trailed off as Sally held out the rope to me, having fished it from her backpack. I took it with a smile. \n\n\"My thanks,\" I said, starting off by tying the rope to the handle of the cart. I took hold of the rope as, behind me, a hurried conversation in whispers took place. \n\n\"Why do you still have a rope belt from half a year before!?\" Virginia hissed. \n\n\"You always -hic- need a rope!\" Sally pointed out. \n\n\"I...well, fine!\" Virginia said as I finished tying off the knot. I gripped the rope in both hands and looked at the women around me. \n\n\"How is that?\" I asked. \n\n\"You're still drop dead gorgeous -hic- boss,\" Sally said, beaming at me. \n\nI brushed my finger along one mustache, drawing it into a fine, elegant point, and smiled at the rest of them. Gillian and 'Magnus' looked able to comport themselves, while Virginia looked ready to kick Sally in the shins, but reconsidered only because Sally had the constitution of a mountain. I nodded, then started to walk down the road, the rope drawing taut and bringing the cart behind me. \"All right then,\" I said. \"Off to the temple.\" \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "steampunk",
        "adventure",
        "action",
        "romance",
        "cult",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/arcanum-of-steamwork-and-magic-ch-13"
}