{
    "title": "My Mystery Mate Ch. 15-17",
    "pages": [
        "Lynn had woken up about halfway through the plane ride, and her neck was rapidly healing due to her Panther nature. Linda had her shift back and forth a few times to help with the healing process, and now the surgical scar was just an angry red line. \n\nMom was getting all the time with her she could, knowing that this might well be the last. She was relieved to have the CIA out of the way, but it wasn't like there were no threats left. She hugged her tight to her chest, vowing that no matter what, she would be safe and have a normal life. Joe felt her emotions through their bond, and he squeezed her shoulder as the Lynn sandwich squeezed tighter. \"Honey, we need to talk about what is going on.\" Lynn looked up, her eyes starting to fill with tears as she realized what was happening. \"You know Joe and I love you, and will do anything to keep you safe. Well, part of that is going to be sending you to live with another couple while we try and make things safe for us all again.\"\n\n\"But... I just got you back! Don't leave, Mommy!\"\n\nNow it was Linda's turn to start crying. \"I wish I could, but I need to know you are safe. The men we have to take on are dangerous, more dangerous than before. They want to kill me, to kill Joe, and they probably will. I have to do the best thing for you, that is why we have picked a family for you. If we return, they will have taken care of you for a while, but if not, they will be your new parents.\" Lynn started to cry harder, pressing her face to her chest. \"They are good people, Joe knows them. You will get to grow up with two parents, go to school, and have lots of friends and classmates in the Gila pack.\"\n\n\"Pack? Aren't those wolves, mommy?\"\n\nJoe kissed her head. \"Yes, they are wolves, and they are people I trust with the things most precious to me. You won't lack for love there, and they will help you grow strong.\"\n\nLynn looked back up at her mom. \"Why can't I just stay with Daddy?\" They knew this question was coming, they had discussed it but something about Trevor just seemed... off. Joe had convinced her that a mated couple would be a more stable environment than with a long term bachelor panther.\n\n\"Panthers aren't like wolves, dear. Male panthers don't form mated pairs, and they don't care for children. Trevor was taking care of you when he thought I was dead, but only until he could find another female panther to foster you. He is your Daddy, but he will never raise you.\" \n\nJoe pulled up a photo Enrique had emailed to him. \"This is Caleb and Maria Forrester, they will be taking care of you for us.\" He flipped to the next photo, their new home on Gila pack lands. \"They have plenty of room for you to run and climb, and they can't wait to meet you.\"\n\n\"When?\"\n\n\"In about twenty minutes we land. They will join us on the plane, it isn't safe for Mom and I to show ourselves in public. Now I need you to promise me something, all right?\"\n\n\"What, Mr. Joe?\"\n\n\"Promise me that you'll believe in your mother, believe that she and I will do everything in our power to come back to you.\" She nodded her head. \"And if you find out we didn't make it, know that we love you.\"\n\nLynn turned and hugged him. \"I love you too.\" They all snuggled together until the pilot's voice came over the speakers telling them to prepare for landing. They hadn't seen the pilot, and the pilot wouldn't see them, it was just the way they did things.\n\nTwenty minutes later, they had taxied to a remote hangar and the engines shut down. When the door closed, they opened the door and the stairway went to the ground. A young man of 19 climbed up, he was broad of shoulder and clearly still growing, then he turned back and held the hand of a short Hispanic woman as they entered. Joe was waiting for them, he gave Caleb a big hug then offered his hand to Maria. \"Caleb and Maria, may I introduce my mate, Linda, and our daughter, Lynn.\" \n\nBoth came forward and shook the hands of the couple, but when Maria met Lynn she dropped to her knees and gave her a hug. \"I'm not your mommy, but I'm going to be like one for you, all right?\" Lynn nodded. \"Does she have any luggage?\"\n\nJoe shook his head. \"No, we didn't have time when we left home.\" He handed Joe an ATM card and a piece of paper. \"There is about 10k on this card, use it to get her set up with what she needs. The other paper is a bank account, if we don't return it is hers, but you can use it for any of her expenses including school until she is 21.\"\n\n\"Not a problem. We will stop in town and get what she needs before we head back.\" The speaker told them the refueling was complete and they would be ready to depart in 15 minutes. \"Stay safe, Joe, and come back to get her soon. She'll be in good hands.\" They all embraced again and Joe and Linda made their final goodbyes and they walked out. Linda started to cry, so Joe sat with her, looking up only when the new passengers came on board.\n\n\"Hi Joe, good to see you again!\" Joe got up and embraced Enrique then his mate Anna, both had become good friends and had helped him through his grief. He introduced Linda just as another woman walked on board. Joe looked up, shock then resignation on his face. \"Madam Alpha Renee, I did not expect to see you.\"\n\n\"You haven't seen me, Joe. After all, I'd have to arrest or kill you if I saw you.\" \n\nJoe raised his head, smiling, and brought Linda forward. \"Alpha Hastings, allow me to introduce my mate Linda.\" They hugged briefly, each scenting the other and finding no deceit or danger in the scent they stepped back smiling. \"What can I do for you?\"\n\n\"Joe, you know you can be a real pain in the ass when it comes to Pack matters, and this one is no different.\" Joe looked up, grinning. \"We've been looking into the Telluride pack, and something is wrong. You told Enrique that you stole a bunch of cash from their safe, correct?\" \n\nLinda nodded. \"Yes, but I dropped my backpack during the chase, so they got it back.\"\n\n\"Not according to my sources. The Alpha declared that you had stolen the money and must have given it to a traitor in their midst, because when they recovered the bag the only thing in it was your clothes and some burglary tools. A few days later, a low level Omega was executed for treason, but they never found the money.\"\n\nEnrique picked it up. \"Amazingly enough, the day after your attack a large deposit, in cash, was made. It covered the money withdrawn a week earlier we suspect was used to pay the Torchellis for your services. So we started thinking, who would be able to pull off such a scheme and why?\"\n\nJoe got the answer immediately. \"The Betas would have to get together, Pack accounts require multiple signatures so there must have been a couple conspirators to pull this off.\" He turned to Linda, she didn't understand Pack dynamics yet. \"After Wolfstock, the Alphas made rules regarding challenges to the Alphas. The Telluride Alphas were good leaders, well respected, their Luna was universally loved. There was no way anyone was going to win a vote to replace them, and if the Beta killed them off, the Council would execute him.\"\n\nLinda thought it over. \"But, if an outside person killed them, someone like Black Ker...\"\n\n\"Then no one would be suspicious.\" Renee sat down in one of the chairs. \"We think the new Alpha and Beta were responsible, but we can't prove it yet. Enrique and I will keep working on this, but right now I don't have enough to call off the dogs, so to speak. I need you two to stay alive until we can get enough evidence to allow a Council trial.\"\n\nLinda looked nervously at her mate, then to Renee. \"Will that help us?\"\n\n\"I don't know. Regardless of your motivation, you stole from the Telluride pack and have killed fighters in two packs. We need more before I can bring you in.\" Renee stepped off the plane and Enrique pulled the stairs up, locking them for takeoff, and they took their seats. It was time to plan their attack on the Torchelli family. Enrique pulled out his laptop as they took off and started to explain what they had found so far while Anna pulled lunches out of the basket she had brought.\n\nGila Pack Alpha Office\n\nNew Mexico\n\nThe next morning, Renee had just finished feeding her twins when she was called by her mate to the office. Walking in, she found Robert behind his large desk, and a scared young woman sitting on the couch. She moved over to the couch, sitting next to the woman and pulling her into her arms, letting the calming power of her Luna position ease her worries. The woman's face was buried in her shoulder, so she looked up at her mate. \"What is going on?\"\n\n\"She is from the Telluride pack and is requesting asylum. She showed up at the border an hour ago, alone.\" As Renee was comforting her, he could see that she still had bruises from what must have been a savage beating; she quickly learned to avoid the sore spots and focused on her neck.\n\nShe waited until the woman stilled, then lifted her chin up so she could see her face. \"What is your name, my young Omega, and why are you here?\" Her Alpha could recognize her pack rank, and her behavior was a giveaway. She didn't have an aggressive bone in her body. She sat up a little, moving the back of her head to rest against Renee's shoulder while facing Alpha Robert, yet not looking him in the eyes.\n\n\"My name is Kieran Jones. My mate... Joseph... he was killed by Alpha Francis. They said he was a traitor, that he helped Black Ker in the attack, but he was innocent. He was with me until the alarms sounded, then we went to the safe room.\"\n\nRobert sat up in his chair, he hadn't liked the reports he had been getting since David Francis has assumed the Alpha position. \"Didn't you testify to that at his trial?\"\n\n\"There was no trial.\" She started to hiccup as the emotions surged forward, Robert got up and got a bottle of water from the fridge in the corner and opened it for her. She took a long drink as he sat next to her. \"Beta Mike Donaldson found evidence in our rooms, some of her safecracking tools, even some money. Alpha Francis dragged him to the challenge circle, pronounced his crimes and tore his head off with his bare hands.\" She started sobbing even harder, and it took a few minutes for her to calm down again before she could continue. \"I tried to stop it, but the Beta and his cronies grabbed me and beat me up. As soon as I came to, I found myself at the Pack border. Alpha had banished me.\"\n\nRenee thought it over in her head, it didn't match with the story she had from Linda, and she knew after talking to her that Linda wasn't lying. \"What do you think happened to cause the Alpha to kill your mate?\"\n\n\"I don't know. Like I said, we were all in the safe room. The Luna was there, she was calming all the children and I was helping out with the babies. The only thing Joseph did was to fetch food and drink like Beta Donaldson told him.\"\n\n\"So you were in the safe room with the Luna, how was she when you arrived?\" Renee was desperate to fill in the gaps.\n\n\"She was fine, she was in a good mood even though her mate and the warriors were out chasing the intruder. She was comforting the mothers, telling stories to the young ones... you know, Luna stuff. Everything was fine for about 90 minutes, then she started to get ill. Her face went white, she was having severe abdominal pains, and before the Doctor could even do his examination she had died. After that, it was pandemonium. When they finally released us, we went back to our room, I was really upset. I loved our Alphas, and to feel those bonds break, it was like my heart was getting ripped out of me.\"\n\nRenee and Robert communicated silently, agreeing she was telling the truth and no threat to the pack. Robert took her hands. \"Your request for asylum is granted, welcome to the Gila pack.\" He and Renee placed their hands on her head, she smiled as the Alpha bond formed with her wolf. \"Report to Beta Nichole in the kitchens, she will find a place in the Pack house for you to stay, and assign you a job for now.\" \n\nShe thanked them and got up to leave. As she was opening the door, Renee thought of something. \"Kieran... when you were in the room, did the Luna eat or drink anything?\"\n\n\"Well, yes... she had a large cup of coffee.\"\n\n\"Did Joseph give it to her?\"\n\nShe thought. \"No... Joseph brought in a large pot of coffee and some cups, but it was Beta Donaldson that gave it to her.\" She paled. \"Oh my Luna! Did the Beta poison her?\"\n\nRenee nodded. \"Someone did... and it wasn't Black Ker, nor was it your mate.\"\n\nCIA Jet\n\nSomewhere over Oklahoma\n\n\"I need you to be my Alpha.\"\n\nJoe looked over at Enrique with shock, his head wasn't taking it in. \"What? Why?\"\n\n\"Because it makes sense, Joe, and we will need it soon.\" Enrique sat up, his hand joined with Anna's as they sat in the seats across from Joe and Linda. \"First off, you no longer have a pack, you can't go back to Alpha Merino after what you did to get Linda out of there. Without structure, you'll start to lose your wolf.\"\n\n\"Because wolves need a pack for stability, right?\" Enrique nodded to Linda. \"Panthers don't have that issue.\"\n\n\"But that isn't all. Anna and I need an Alpha as well.\"\n\nNow it was Linda's turn to act shocked. \"Wait, I thought you were happy with the Gila pack? Joe spoke so highly of them, and Renee is a good Alpha.\"\n\n\"That is all true. The problem is that my cover has been blown. Sooner or later they'll trace me to the Gila pack, and when they do I can't be there. Robert and Renee made a deal with the government, but that deal doesn't cover future acts. Now that they know I'm alive, I'm still wanted. Harboring a fugitive puts the whole pack in danger, and I... WE can't allow that. And what other Alpha would take us in but you? I mean, it's not like you're going to be double secret wanted dead or alive or anything.\" They all laughed. \"There is another reason, though. We need to be able to communicate mentally so I can help you during the attack, and the only way that happens is if we are Pack.\"\n\nJoe sat back, he knew he was right but the thought of being Alpha scared him. \"It could be the shortest Alpha reign ever. Are you sure about this?\" They nodded. \"What about Alpha Renee and Robert? Won't they be upset with this?\"\n\n\"I spoke to Renee before getting on the plane. She understands, and she couldn't think of another way either.\"\n\n\"Anna, are you all right with this?\" Joe looked over at the woman plastered into Enrique's side.\n\n\"Yes. I will do whatever it takes to keep him and my Pack safe, even if that means I have to leave.\" \n\nJoe sighed. \"All right, let's do this.\" He placed his hands on the heads of Enrique and Anna, and with a mental nudge Linda did the same.\n\n\"I sever my ties with the Gila pack, and request to become a member of your Pack.\" Enrique went first, then Anna repeated it.\n\n\"And we accept you in our Pack as your Alphas.\" There was a tingling in his fingers as he said the words and felt the Pack link form. It was a shock mostly to Linda, she had just started to get used to having a mate and now she had a Pack bond as well.\n\n\"This is freaky,\" Linda thought to herself.\n\nThe voice in her head shocked her. \"You'll get used to it,\" Anna said. \"It can come in real handy when we don't want the men to hear us gab.\"\n\nAnother voice came in her head. \"Like we'd want to listen in on that,\" Enrique said. \"Anna, can you work with Linda on how to use the link? She needs to learn how to control it, how to limit it to the people she wants.\"\n\n\"Sure. Switch places with her.\" Enrique got up and went to sit next to Joe, taking his laptop with him. \"You know, now that we are a Pack we need a cool name. I'm sorry, but the Miller Pack doesn't strike fear into anyone.\"\n\nJoe laughed. \"Well, we don't have a territory so we can't use that. I want something cool, maybe we can make up T-shirts.\"\n\n\"The Castoffs? The Rebels? The Outlaws?\" Anna was free associating, but nothing felt right.\n\nLinda jumped in. \"Maybe the 'downpour' pack, since it's raining cats and dogs.\" They all laughed. \"Yeah, that will cause people nightmares.\"\n\n\"THAT'S IT!\" Joe pumped his fist. \"The Nightmare pack. Cross us and we'll be your worst fucking nightmare.\" The others smiled and they bumped fists. A new Pack was born.\n\nGila Pack Offices\n\nNew Mexico\n\nAlpha Renee walked into the room where her Pack investigators, William Post and his mate Melody, had set up their investigation of the Telluride Pack. The walls and whiteboards were covered with pictures, notes and diagrams. The former JAG lawyer and the FBI agent were nothing if not thorough. \"How are we doing?\"\n\nWilliam looked up and smiled. \"We are making progress, Alpha, but it is slow. We can't directly approach anyone without tipping off their leadership, so we are working with those who we can via family members and working from there. So far, no one has refused to cooperate. That's probably because none of them really like their Alpha.\"\n\n\"Have you asked why they don't just petition to have an election for a new Alpha?\" It didn't make sense for a Pack to suffer under poor leadership, that was the point of the reforms she had pushed through at Wolfstock.\n\n\"There's no one left to take the job,\" Melody replied. \"The remaining Betas are firmly in the Alpha's corner, and those that weren't have been purged. Evidently Kieran's mate wasn't the only one. They are using the attack and the specter of a traitorous plan to rid themselves of any competition. All in the name of justice for their former Alphas, of course.\"\n\nRenee paused, this was rapidly becoming a headache for the Council as well as for Joe Miller. \"I know you've interviewed Kieran, have you been able to verify any part of her story?\"\n\n\"Yes, actually quite a bit of it.\" Melody got up and walked to a list on the wall. \"Using her recollection and others, we've compiled a list of everyone who was in the safe room during the attack and was an adult.\" She pointed to the check marks by about a dozen names. \"These people we have talked to, and they have confirmed the behavior and the timing of everything. The only thing we don't have is confirmation that Beta Donaldson handed the Luna the cup of coffee.\"\n\n\"Shit. That's kind of a key piece of information to have. I take it the physical evidence is long gone?\" They nodded. \"Medical reports?\"\n\n\"We haven't contacted the Pack Doctor yet, we thought that would be showing our hand a little too early.\"\n\nShe walked over to show her Alpha the wall that traced their theory- that the current Alpha and Beta conspired to hire Black Ker to hide their murder of the Luna- and pointed at the holes. \"We need to be able to prove each of these things if we go to a Council trial, and I'd like to do it without having to involve Linda in the process. We are hopeful, but in order to really prove it we will need to flip one of the conspirators, get him to testify against the others.\"\n\n\"And we have to do that without tipping off the Alpha of what we are doing.\" Renee leaned against the door. \"How in the hell are we going to do that?\"\n\nDefense Department Airfield\n\nEastern Shore, MD\n\nBy the time the plane had landed, Enrique had briefed everyone on the intelligence they had on the Torchelli compound and its security. Since it was a Mob property, it was heavily defended by physical barriers such as walls and gates, electronic and video surveillance, and guards. Unlike the remote location where Linda and Lynn had been held, this was a large estate with a significant ocean frontage. Privacy was ensured by long, curving drives and extensive tree cover.\n\nThe trees were the key to evading the surveillance, and quickly everyone understood why Black Ker was able to get into anywhere. \"They have lots of security and motion sensors,\" Linda explained, \"but everything is oriented towards an assault from the ground. Their cameras and motion sensors will be adjusted to read low, as they don't want false alarms from the leaves and branches moving in the wind.\" She pointed to a path leading from near the back gate nearly to the pool area. \"I can move through the trees, get to this point. The problem then is getting to the house without tripping the alarms or being seen.\"",
        "\"I can give you ten seconds.\" Enrique smiled, and Linda said that would be enough. \"So the tasks are set; Anna will drive the van, I will run comms and surveillance, Joe is backup in case something goes bad and Linda gets to have all the fun.\" They all were in a good mood as the plane taxied to a hangar, right up to the point it was surrounded by armed men.\n\n\"What the hell is this?\" Joe was annoyed and worried, surely they hadn't come this far to be captured now. The airplane engines shut down and the door closed. \"Wait here, but make sure you are ready. Come out shooting if I tell you.\" \n\nJoe got up and moved to the door, opening it and extending the ladder he poked his head out carefully and looked around. One of the heavily armed, black clad men walked forward and stopped in front of the stairs. \"Joe Miller?\"\n\n\"Yes?\"\n\n\"Welcome to Maryland. My name is Hawk, I'm the leader of this team. The Director has asked us to assist in your operation. Apparently, he's a little pissed off right now.\"\n\nJoe laughed. \"What now?\"\n\n\"Well, in addition to shooting up and blowing the cover of a CIA clinic, we've done some digging since he came to our attention. It seems he has ties to the Russian mob, and some of the jobs he sent Black Ker on... well, let's just say they weren't in our national interest. We've been placed at her disposal.\"\n\nJoe mentally called for his team to come out of the plane. \"What are your orders?\"\n\n\"Stay out of the way so Black Ker gets the blame, but clean out every computer, document and safe. Oh, and make sure no one escapes.\"\n\nLinda laughed, they had been following along via the bond. \"I can work with that.\" They made introductions, the CIA team members didn't give real names but code names and specialties. In the group they had four snipers, two explosives experts, and an electronics guru. \"Enrique, you should work with their computer guy. He's got better equipment than you.\" Enrique laughed, but had to admit she was right. They walked off to the surveillance van. \"You guys have a tactical vehicle?\"\n\n\"Hell yes,\" Hawk said. \"It looks like a panel van, but it is fully armored.\" She directed Anna to work with the driver; since she was Pack, she could be with the tactical team in standby and keep them up on what was going on. Joe was going to cover her entry and exit.\n\nThe group loaded up and was on the road shortly after, with Enrique briefing them all on the plan and the CIA men adding things when they could. They ate the meals provided along the way, arriving at their destination just after midnight. By three AM, the teams were in position; snipers covered the ocean and three sides, while the tactical team was stationed near the main entrance, Joe near the rear.\n\n\"Stay safe, love.\" Joe kissed Linda possessively as they got ready to shift. \n\n\"You too.\" They stripped and shifted, she rubbed her face against his, they each sniffed their mate's neck to calm down. Using Velcro straps and a harness originally made for working dogs, Hawk attached packs with clothes, weapons and the supplies Linda would need to penetrate the security. Over the link, she verified Enrique, Anna and the other groups were ready. \"Let's do this.\"\n\nHawk opened the door of the panel van, and a black panther and a huge black and tan wolf trotted off through the woods. Joe watched her disappear into the trees as they neared the fence, then he shifted and climbed one himself. It was payback time.\n\nJoe watched as his mate moved silently through the trees until he could make out nothing under the pale moonlight. He was in a tree near the fence, naked and waiting to shift and leap down onto the grounds at the first hint of trouble. \"Enrique, anything yet?\"\n\n\"Nothing, Alpha.\" Joe winced at the title, he wasn't used to it. \"We've hacked into his security feed, I can't disable it but I can monitor his alarms and cameras. Everything is quiet right now.\"\n\nJoe hated waiting, he was a man of action, but having his mate out there was keeping his anxiety level up. \n\n\"Relay, love, this is what I do. I won't get caught, I'm a ghost.\" He could sense Linda's confidence through the bond. \n\n\"I know you're good at it, I just worry.\" \n\n\"All right, I've made it to the last trees. I count four hostiles, one on the roof, one by the front door. One is circling near the house, the other near the treeline.\" She waited patiently, timing their patrols. Finally, it was time. \"All right, Enrique, at the count of three you cut their power. One... Two... THREE!\"\n\nThe lights went out as the local transformer locked out, Enrique having hacked into the local power grid causing the nearby substation to de-energize. Linda was off like a shot, jumping to the ground and tearing across the open yard as she kept a count in her head. At six she had reached the house, leaping up to the roof of the outdoor kitchen. At eight she was on the third floor roof, and was hidden again by the count of nine. At ten, the backup generator kicked in and the lights came back on. Linda remained still while the guards looked around, but they didn't see anything. Enrique watched as they reset all the alarms, and it was all quiet. She stayed in place for another ten minutes before she moved.\n\nShe shifted out of her panther form and pulled on black yoga pants, black climbing shoes and a long sleeve black shirt. Digging deeper into her bag, she pulled on gloves and a ski mask; her skin was now completely covered. A belt and silenced pistol with two extra magazines was next. Tying the rope to a large drain, she attached a motion sensitive explosive nearby. She wouldn't be coming back this way. Moving quickly as the timer was only good for 60 seconds, she slung the rest of her supplies over her head and started to lower herself down.\n\nVito Torchelli's bedroom and private office were the top floor of this wing. She had lowered herself to one of the windows in his office; once there, she removed a glass cutter on a suction cup, with a quick rotation she had cut a hole through the first pane and removed it. She placed the disc of glass in her bag, then punctured the film and made a cut on the inside pane. When both were removed, she reached in and unlocked the window, sliding it carefully up.\n\nSince the window was three stories up, they hadn't alarmed it. \"Enrique, I'm in.\"\n\n\"Copy that, no alarms. Drone shows two heat signatures in the bedroom, the rest of the suite is clear.\" One nice thing about working with the CIA, she thought- access to drones. She set her bag down and pulled out the pair of hypodermic needles, then made sure everything was ready before she moved to the bedroom. She opened the door silently, then moved across the thick pile carpeting to the bed. Victor was asleep on his stomach, empty liquor bottles on the night stand and a blonde in his bed. Moving to his side, she counted down until she had found the correct vertebrae in his neck for the injection; too high, and the paralyzing agent would cause his breathing to fail. She moved quickly, pushing in the injection while holding his head to the pillow so he couldn't cry out. The injection worked immediately, unlike a normal sedative this one worked like a spinal block. In a moment he had lost control of all the muscles from his shoulder down. As soon as her hand was free, she placed a gag over his mouth then went to the other side of the bed.\n\nThe woman got the same treatment, she would let the CIA figure out what to do with her. \"Targets sedated, moving on.\" She unholstered her silenced pistol, the rest of the work would be quick and violent. Moving from the suite of rooms, she started making her way across to the opposite suite on that floor. \n\n\"Linda, one target in Sammy's room, in the bed, no alarms.\" Linda moved quickly and silently, making her way to Sammy Torchelli's room. Opening the door, she saw him asleep; moving to his bedside, she pointed the silenced pistol at his temple and fired. The sound was muffled, like someone had opened a can of soda; the subsonic .22 caliber round had little power but it didn't matter when she had placed it so. Sammy's body twitched then went still. It was a quick and painless death he didn't deserve, he was a sadistic bastard who had enjoyed threatening Lynn when she was reluctant.\n\n\"No time for that, honey, you need to get to the basement.\" Joe's voice in her head snapped her back, she moved out and to the stairway. When they had analyzed the security, it had a fairly common fatal flaw. The Torchellis didn't want people inside to see them and what they did, so all the security was facing outward. There weren't even cameras in the house except for the common areas on the first floor and the entry to the security area. \n\n\"No targets on the stairwell, you are clear to the basement.\" Enrique verified as she made her way to the utility staircase. Moving to the hallway, she knew she would have to move quickly. \"Code is 8787.\" There were not motion sensors, but there was a camera on the door. She moved to the keypad, entered the code and opened the door before the men noticed that she was there. Raising her pistol, she put two into the first man, then one into the second just before he could trigger the alarm. She pulled the men out of the room, one shot each to ensure they were dead, then went back inside. She opened the vehicle gate using the controls.\n\n\"Security room clear, you are GO to come in.\" With that, Joe and the tactical team made their entry. The tactical team shot the guard at the main gate, he had foolishly left his cover to see who was coming. The panel van drove through, making its way to the main house slowly, while the snipers jumped the fence and ran into position. Joe had already located the roving patrol at the edge of the woods. Moving quickly through the trees, he chased the man down from behind. His huge wolf leaped onto the man's back while his jaws clamped down on his neck. With a twist, there was a snap and the man fell to the ground. \n\n\"Snipers, take out the guards outside.\" It didn't take long, there were two shots and both men were down. The panel van made it to the main entrance, where the tactical team exited and moved into the main hall.\n\nIn the few minutes it had taken them to arrive, Linda had moved through the house. The only targets she hadn't taken out were in the staff quarters. Enrique had relayed her location, and they caught up with her in the hallway. She let the team move in, there was a hail of noise and bullets as they cut down the remainder of the people. No survivors.\n\nJoe had made it to the house, and had changed back to human form and dressed. Moving to his mate, he kissed her deeply. \"Victor?\"\n\n\"Yes, let's go get him.\" They told the CIA they had run of the house except for the bedroom, they wanted Victor first. The CIA team medic went with them into the room. The woman was hoisted over Joe's shoulder and taken downstairs, after some discussion there was a single gunshot. Joe returned a moment later.\n\n\"I'll get a recording going, we will need this for evidence.\" He set up his cellphone on a stand in front of a chair. Victor's eyes were watching everything, he was trying to shout past the gag but it didn't do anything. He had no control of his limbs, so it was a simple thing for Joe to move him to the chair. Using ropes the CIA man brought in, they quickly had him tied in place. Joe started the recording, then took off the gag.\n\n\"Hello, Victor.\" Victor answered with shouts and threats, some of which were physically impossible but humorous. Joe backhanded him, hard, to shut him up. \"Allow me to explain the situation. You remember Black Ker, right?\" Linda approached, Victor recoiled but remained defiant.\n\n\"It's good to see you again, Victor. I've already seen everyone else. They're all dead.\" Victor shook his head, shouting for his brother. \"Yell all you want, the only people within a mile of you right now are with me. I put a bullet in Sammy's head a few minutes ago.\" Joe had moved off while they were talking, the medic was behind him. He drew out a hypodermic and moved up; injecting it in the same spot, he nodded and left them to it.\n\nJoe grabbed his hair and forced him to look at him. \"That shot does two things, Victor. It will counteract the short term sedative we used on you, so you can feel and move your body again. Of course, you won't move much. You know how the drill goes, you've done it enough.\" He watched as the feeling came back to his hands, Victor was fisting and relaxing them as he regained control. \"We are going to ask you questions, and you are going to answer. If you don't answer truthfully, you will get pain. That's the second part of this shot. Your nerves are becoming super sensitive.\" Victor looked up in recognition, it was becoming uncomfortable just to sit, the chafing of the ropes was already painful. \"So when we break a finger, it's going to feel so much worse. It's unimaginable. And it won't let your body shut down, either.\" Joe grabbed his pinky and bent it back, there was a loud snap as it broke and Victor howled in agony.\n\n\"There are nine more, Victor.\" Linda got up close and personal with his face. \"First question...who paid you to do the job on the Telluride pack?\" \n\n\"FUCK YOU, BITCH.\" Victor struggled against the restraints, only to scream at the pain it caused him to do so. She let him figure it out and settle down.\n\n\"Now, that's not a nice way to talk to my mate.\" Joe pulled a small knife out of his belt, holding it up to his face he slowly moved it down his naked body. \"You see, a scrape from this will feel like I'm cutting you open, a stab like I'm removing the limb. No one is here to save you, Victor. We have all the time in the world to get out answers.\" He carved a line down his chest, Victor screamed in agony. \"Now, who paid you for the Telluride job?\" Victor shook his head, his will was to remain silent. Joe carved another line; the cuts were not deep, and the bleeding wasn't bad, but to Victor the pain was unreal. \n\nLinda moved over and took the knife, scraping it down his stomach to his cock. \"Victor, Victor, Victor. I could give you a handjob right now and it would feel like I'm scraping your dick off. How painful is it going to be when I remove your balls and hand them to you? I want an answer.\" He screamed as she drew the knife tip to his sack, he was shaking his head and she wasn't surprised when he finally broke.\n\n\"DAVID FRANCIS. IT WAS DAVID FRANCIS.\" \n\nLinda smiled. \"That wasn't so hard, was it?\" Victor was breathing heavily. \"What did he pay you to do?\"\n\n\"You were to kill the Alpha and Luna in their bedroom.\"\n\nLinda put the knife back to his nuts. \"Victor... that's not what you told me to do. What were my orders?\"\n\n\"To steal the money from the Pack safe. They had millions in cash in there, they never deposited some of their distribution.\"\n\nJoe looked at him. \"That wasn't very nice, to double cross them like that. Why did you do it?\"\n\nVictor sighed. \"I was told we could play each side, make more money that way. We made a recording of the phone conversations with David Francis. That's what was in the envelope I had Ker leave behind in the safe. We get the fee and the money in the safe, and the Alpha takes care of his traitor. Easy money.\"\n\nJoe moved in front of him. \"Why did you kidnap Black Ker and her daughter and force her to work for you?\"\n\nVictor laughed. \"MONEY. All those jobs she went out on, she made us millions. She was one of my best assets, and all I had to do was keep her precious child hostage. It was a gravy train I wanted to ride until her replacement was ready.\"\n\nLinda looked up. \"My replacement?\"\n\n\"Yes. Eventually you would mess up, that's why having your daughter was so important. She was going to be trained to replace you, to be better than you ever were.\"\n\nLinda took the knife and held it to his face. \"WHO was going to train her?\"\n\nVictor laughed maniacally. \"The same man who gave you up, told us what you were and where to find you. The man I paid millions to for his cut in every job you did.\" He looked at the camera. \"Trevor Madison. Your baby daddy.\"\n\nLinda sat back, shocked, then screamed with rage. The knife she was holding moved back for a moment, then with a savage growl she changed into the Panther form. She roared into his face, then tore his throat out."
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "werecat",
        "pack",
        "alpha",
        "mob"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-mystery-mate-ch-15-17"
}