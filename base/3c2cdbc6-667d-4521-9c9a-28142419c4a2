{
    "title": "Dream Drive Ch. 05",
    "pages": [
        "Author's Note:\n\nI'm not really sure how to react to the massive wave of support for my writing. Thank you very, very much.\n\nA few people have asked me if I could give more regular updates on the progress of Dream Drive; many of the same have wanted to know if I've written anything else. The answer to both of these questions is yes. Please see my note at the end of the chapter for details.\n\nLet it be known to all that my editor, Expoh, suffered through my typos so that you might be spared.\n\nAll aspects of the story are fictional. All characters that participate in sexual activity are over the age of 18.\n\n<center>****</center>\nStrength - 100 +10 (+10%)\nVitality - 185 +19 (+10%)\nAgility - 43 +2 (+5%)\nCompulsion - 0\nPersuasion - 0\nSpirit - 40 +10 (+25%)\n\nHealth - 69.45/248.00\nEssence \u2013 15\nCarry Weight - 25.1/59.0\n\n<center>****</center>\n\nThe air in the static-filled cavern was warm, but Jackson felt cold.\n\nHe stood on the winding walkway above the shadowy pit that filled the floor of the cavern. The purple-hued metallic surfaces of the walls felt like teeth that were closing around him.\n\nRachel had left.\n\nAfter all that, after they'd fought through the ruins together, after he'd saved her from the rattok - twice - she'd taken the box and run. She must have been after it from the start.\n\nHe felt betrayed. Maybe he shouldn't. Maybe he should have seen this coming.\n\nWas it something about him? Why did people keep doing this? What was he doing wrong? Why couldn't he - \n\n\"Storage protocol violated. Activating passive defense drone.\"\n\nJackson flinched at the sound of the robotic voice. He whipped around, gripping his spear in both hands.\n\nSuddenly, red light. It bathed him like a spotlight, washing out the ambient violet glow that coated the rest of the strange metallic cavern. He glanced at his arms and legs, then looked up.\n\nThe slit of daylight coming from the exit at the end of the walkway wasn't nearly enough to illuminate the crevice above. A shining red orb stared down at him from the darkness. It looked like an eyeball, watching him.\n\nThe thing moved. It looked like part of the ceiling had detached. A pile of metal collapsed to the walkway in front of him, throwing up a little curl of dust. Jackson shielded his face.\n\nThe thing made out of the violet steel flashed with red lights. Metallic limbs began to unfold from the center.\n\nAnd then it slowed. A groan echoed from the center of the machine. It sounded like rust scraping against rust. The red lights flickered erratically, then shut off altogether.\n\nThe construct, off-balance, began to tilt. Jackson stood there and watched it topple into the black abyss below the walkway. It slipped into the darkness with a soft rush of wind, and was gone. He inched as close as he dared to the edge of the path. He didn't hear it hit the bottom.\n\n\"Activating secondary defense droids.\"\n\nAnother beam of red light flashed on the walkway. It zipped back and forward, a maroon flashlight seeking prey. He heard something moving on the ceiling.\n\nJackon turned on the spot and ran as fast as he could. The walkway wound back and forth at sharp diagonal angles. He took a short stair two at a time, wobbled on the landing, kept going. The formless abyss stretched on either side of him, eagerly urging him to stumble.\n\nA whirring patter beat the air behind him. It sounded like an engine, a motor. He could hear something crackle. He didn't look back.\n\nAlmost there. The thing behind him was catching up, but he was going to make the exit.\n\nThe light started to fade.\n\nJackson's eyes widened. The metal door was shutting, top to bottom. It was going to seal him in.\n\nHe abandoned caution and ran flat-out across the walkway, jumping over a bend in the path. His foot caught the edge of the gap on the way down. He churned his feet to keep his weight centered; his speartip dipped and scraped the steel path. He fixed his grip on it and threw his head down, sprinting as fast as he could.\n\nThe red light of his pursuer flashed behind him, following his progress. A maroon shadow wavered and jumped as the light danced across his moving limbs. Jackson's moccasins slapped on the walkway, thudding hard in his ears.\n\nThere were a paltry two feet between the bottom of the closing door and the floor. Jackson leapt forward and landed in a slide. His leather clothes let him coast across the polished steel path as if he was on ice.\n\nI can't make it!\n\nJackson broke his momentum at the last minute. He crumpled against the doorway feet-first. It fell shut, and the only light left was the purple haze of the steel cavern and the red glow of his hunter.\n\nJackson scrambled up and put his back to the door. The walkway ended in a small hall that led to the exit; his gamble had backed him into a tight corner.\n\nThe red light was growing fast.\n\nJackson held his spear tight. The drone was an orb of rusted iron. It almost looked like a TOM, but bigger, about half again the size of a basketball. Red lines fractured its surface like pulsing arteries. Its power source whined and putted; it sounded like it was struggling to stay afloat.\n\nA single mechanical arm dangled beneath it. It blazed with a flickering red light. The machine slowly drew in, extending its taser threateningly.\n\nJackson raised his spear up and back, as far as he could in the small space. The tip of his weapon shone white. He held it there, waiting. He only had enough essence for one shot.\n\nThe robot came in range. Jackson used Polearm Swing. His speartip sliced a white trail through the air, smashing through the rusted steel casing with a wrenching crunch. The drone slammed into the wall and dropped to the floor.\n\nThe power source complained as it tried to fight gravity. The robot twitched a few times, red lights flickering, then died.\n\nJackson watched his essence counter tick up to 4. Great. I spent 15 essence trashing an old robot. I probably didn't even need to -\n\n\"Warning: Danger Level Increased. Activating all Passive Defense Drones.\"\n\nA hundred red lights blazed to life on the ceiling of the cavern.\n\nSome of the drones fell like rocks, flickering and making ugly put-put-put sounds as they plummeted into the abyss. The vast majority floated down, leveled off, and came toward Jackson in a wall of crackling red lightning and steel.\n\n\"Fuck!\" Jackson shouted. He turned and started smacking his fist on the wall. The door didn't budge. A few inches of steel were pinning him down against a tidal wave of the robots.\n\nHe turned back around, trying to think. Maybe he could try to take the hits. Put his arms up, break through, and find another exit.\n\nNo, that wouldn't work. He didn't know how much damage those tasers did. Even if the hits didn't kill him, they could float as fast as he could sprint. They'd catch up and cook him. Or worse, he'd be trapped between them and the rattok he'd left behind in the ruins. \n\nThere were only a few seconds until the first of the drones reached him. Jackson put a hand on the wall to steady himself, trying to get a sense of the space around him. He had to use his spear, keep them at bay \u2013\n\nThe wall under his hands shifted. Jackson almost leapt out of his skin.\n\nA pentagram blazed in white light on the wall. It was etched on a drawing - another image of the giant tree, like the one in the first room. He hadn't noticed it in the dark. The wall began to slide open, revealing another room.\n\nJackson wedged himself into the opening and slipped through. The robot just behind him rebounded; it was too fat to fit through after him. That wouldn't last long \u2013 the door kept sliding wider.\n\nInside the room was another pedestals, identical to the one holding the black box in the larger cavern. Atop it rested a solid gold cylinder, about the length of his forearm, and twice as thick around. It was as smooth as the steel it sat on.\n\nJackson's eyes flicked past the cylinder. There was a black rack set against one wall. Most of the slots were empty, but one had an occupant - a metallic tube that tapered to a fine point. The back end thickened into a claw-like appendage. With the short handle jutting from the center, it looked somewhat like an oversized pistol.\n\nJackson licked his lips and glanced around for other security measures. He didn't want to screw around with more sacred artifacts, but the growing din of the attack drones was reverberating off the walls. If he stood there, he was toast. \n\nHe went for the mundane-looking rack. He lifted the metal tube by the handle and held it with the thin section pointing out, thinking the claw was some sort of scope. He peered into it, but there was no lens.\n\n\"Uh...\" Jackson shifted his head around the object. No trigger. He shook it. No rattling. \"Fire! Shoot! Activate! Do something!\" He smacked the gun on the pedestal. Nothing happened.\n\nThe first drone was grinding through the gap, scraping its sides on the door's edges. It popped into the room. The business end of the flashing arm rotated to face Jackson.\n\nJackson backed against the far wall. It wasn't very far. He only had seconds. He gripped the gun in both hands, propping it against his shoulder.\n\nThe claw on the butt of the gun sunk into his skin. \"Shit!\" Jackson let the tube go. It was held in place by the stinging grip on his flesh. He grabbed it and tried to peel it off, but it was twisted in tight, almost embedded inside his body. Trying to wrench it free made it feel like someone was holding a lit match on his skin.\n\nA prompt with blue cursive letters on a tan background appeared in front of him. An Isis game message. There were two options.\n\nEssence\nLife Force\n\nJackson looked at the drone that was only two feet away. He looked at his 4 essence. He looked at his 69 health. He looked back at the prompt.\n\n\"Life force!\"\n\nThe claw snapped and clicked in tighter. The air whooshed out of his lungs, as if someone had kicked him in the gut.\n\nHis health dropped from 69.45 to 5.\n\nA thin beam of dull grey energy lanced out of Jackson and pierced through the robot as if it were made out of paper. It exploded, shattering into a blizzard of rusty shrapnel and crackling red magic. The force slammed Jackson into the wall, and he collapsed. The gun clattered across the floor. \n\nThe beam continued on through the door, slicing through the drones crowding the hallway all trying to get at Jackson. One after another, they detonated like landmines, some dropping after being battered by shards of their fellows, others eviscerated by the grey light.\n\nJackson saw the beam bend - it curved around the door. Explosions rocked the room. Jackson covered his head with his hands.\n\nThe sporadic detonations turned into a solid roar. With nowhere to go, it all echoed off the cavern's burnished walls, reverberating louder and louder until the floor was shaking and his teeth rattled in his jaw. It sounded like the world was ending.\n\nAnd then, it stopped. His essence began to jump as the scraps of magic from each robot was absorbed by the cursed mark on his hand. It skipped up by fours and threes, until it rested at 123. He had more Spirit, now, so it didn't leak away \u2013 his capacity was increased.\n\nThe intercom-voice was back. It stuttered like a broken record. \"Pa-pass-pa-passive def-def-def-disabled.\"\n\nJackson groped for his spear. He propped the butt of it against his abdomen and pointed the tip toward the door. It was a feeble defense against anything that floated into the room, but he felt too nauseous to stand up straight. The buzzing alarm of low health seemed to amplify his headache.\n\nNo drones made an appearance. He didn't hear the putter of magic engines. No more explosions. He let the spear slip out of his grip.\n\nThat had been a little too close.\n\nHe felt exhausted. His body wanted to lie there and forget about everything. Too much input, not enough neurons.\n\nHe thought back to the blast of energy. The machines had exploded, but it almost seemed like the beam caused them to explode, rather than the damage incurred, as if it destabilized them when it touched their surface.\n\nIt struck him that the beam was the same color as the runes he could draw in the air. It must have something to do with his life force.\n\nHe saw light. Not red light, not purple light, not more magic - daylight. It slowly filled the hallway outside the storage room. The door was opening.\n\nJackson sat back and breathed. His health was going back up at a steady rate. He just had to rest for a minute.\n\n\"Heh.\" Jackson let his head fall back to the iron wall. He wiped sweat off his forehead with the back of his hand.\n\nHe tried to look on the positive side of the experience. Sure, he'd almost died, several times. That was just a healthy reminder of his mortality.\n\nHe was stronger. While catching up with Rachel, he'd dumped a lot of essence into his stats from killing all those rattok - but there was still so much about this world he didn't know. He had to be careful. He had to assume everything intended to kill him, and that it could, given the opportunity.\n\nThen again, that was most video games.\n\nShe'd run away. He went back for her, and she thanked him by skipping out on him. He should have seen it coming. She was erratic \u2013 crazy, even.\n\nHe wiped his hand across his face. He took the feeling of frustration and did the same thing he'd been doing for the past handful of days; he ignored it.\n\nIt still hurt.\n\nJackson waited the few long minutes until his health ticked back up to 100 points, and then he hauled himself off the floor. The nausea was gone, and the weakness that followed having very low health had vanished.\n\nJackson stretched his arms a bit, then collected the gun from the floor. He turned it over in his hands, careful to keep the claw-end from touching his skin. Definitely useful - but it had almost sucked him dry. It didn't appear to have any feature that could dial down the effects. He tucked the barrel inside the waistline of his pants and approached the other pedestal.\n\nThe golden cylinder sat before him. He squinted suspiciously. Now that he had all the time in the world, it looked several times more threatening than the gun. The surface was completely flawless and polished to a near-reflective shine.\n\nThat, more than anything, set off alarm bells. Everything else here was rusty and old and about to fall apart. This thing was like the box \u2013 it was different. It didn't belong.\n\nJackson decided to perform the only experiment that seemed appropriate: he poked it with a finger.\n\nNo reaction. He poked it a few more times, then, satisfied that it wouldn't suck the life out of him, he hefted it, grunting. Heavier than it looks.\n\nHe held it at either end, rotating it in his fingers. Nothing stood out about it.\n\nWait. Inventory system.\n\nBack when he'd first entered the game, he'd examined the objects he was using to find out more about them. He'd learned that rattok were called rattok from the item descriptions. He hadn't had much need for it lately, but the time of exploitation was nigh.\n\n\"Game menu.\" Jackson glanced up as the tan panel shot into view in front of him. His rotating image was coated in dried blood from his earlier fights, just as he was. Always with the blood.\n\nThe gun was shown at his waist, as well as the cylinder in his hand. He tapped the gun first.\n\nEnergy Conversion Cannon\nAn ancient device discovered by Jackson in long-abandoned ruins. It can convert life force or essence into a powerful blast of energy that ricochets between foes; weaker enemies may be destroyed outright. The more energy it can access, the more powerful the effect, but the backlash leaves the user severely weakened. Repeated use is not recommended.\n- Rune Slots \u2013 None\n- Durability - Extreme\n\nJackson raised an eyebrow at the last line. There was a sort of wry sense of humor inserted there. Was this an item description, or an infomercial?\n\nIn any case, he had a sort of one-shot last-ditch weapon. The description also explained his nausea; he'd felt even worse than he had when he was first low on health, barely able to hold his spear up. The cannon didn't have any rune slots; it came as-is, no upgrades. It would be useful as hell in a pinch, for sure.\n\nHe closed it and tapped on the gold cylinder.\n\nI9*#tem(@20.13(*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n- Rune Slots \u2013 50\n- Durability \u2013 Invincible\n\nJackson stared at the screen, and then he gave the cylinder a long, calculating look. The name was totally garbled; the description was a bunch of percent signs. It was classified as invincible, and it had 50 rune slots \u2013 way more than anything else he'd encountered so far. It was exactly the kind of thing that made any intelligent gamer shut down the console and reload the last save so the save file wasn't corrupted.\n\nJackson grinned and tucked it under his arm.\n\n<center>****</center>\nRachel rode her horse like a woman that would experience extremely painful consequences unless she traveled at as fast a speed as possible - which was exactly what would happen to her so she ran that horse like she'd been doing it all her life.\n\nBut not really, because the saddle was bumping and jostling her thighs so much it felt like her skin was getting rubbed off. She really didn't know what she was doing. She gripped the reigns tighter and dug her heels into the sides of the animal. She pressed close to the horse's neck.\n\nWhat was the animal's name? The groom had told her. She'd forgotten.\n\n\"Come on, horsey!\" Rachel said. \"Keep going!\"\n\nThe sun was almost over the horizon. A thin golden line marked where it would soon vanish. The sky was orange. \n\nThe plains went on for miles without a single landmark \u2013 just flat, open fields, all with the same shoe-high grass. But Rachel knew the direction she had to ride. The collar told her. It was a sharp blade pressed to the back of her neck, the needle of a sadistic compass.\n\nThe wind whipped her hair behind her, now crusted and dry with the old oil from the rattok's pool. Her black leather armor was splattered with blood. She would have cut off an arm for a hot bath. A long, hot, steaming shower. At the very least, she could have jumped in that lake back in the woods.\n\nBut the collar tugged her forward, and she forced the bile in her throat down and ignored the filth that was covering her like a second skin as best she could. Her best was not that great.\n\nThe horse was panting, sweating. She was sweating almost as much. She tried to pat its rump and speed it back up. If it noticed, it didn't give any sign; it kept on at a hasty half-gallop.\n\nRachel liked animals, unless they were slimy or icky or disgusting. A horse, though - that was a beautiful animal. Sometimes she drew horses. She'd always wanted to see one.\n\nThe poor thing was struggling to obey her commands, straining to answer the press of her feet on its sides. It was very well trained. As much as she wanted to, she couldn't slow it. The spell on the wooden collar would fry her insides with pure, unfiltered pain. So much damn pain.\n\nLord Hale's words shot through her brain over and over. As quickly as possible. As quickly as possible. As quickly as possible.\n\n\"Fuck that fucking fucker and his fucking fuck command!\" Rachel growled. \"Faster, horsey! Come on, you can do it!\"\n\nThe horse was slowing from its half-gallop to a hasty sort of trot. Rachel slapped the reigns a bit, trying to incur a sense of urgency. The steady loss of speed continued.\n\n\"Fucking shithead had to be specific. Had to say the words just like that. Goddammit. Goddammit!\" Rachel's fists tightened on the leather rope. It was the only thing she had to hold onto.\n",
        "The horse finally leveled out at something that was probably about as fast as Rachel could run.\n\nThe collar pulsed ominously.\n\nNo, she thought at it. I'm not getting down and running. The horse is trained for this sort of thing. I'd sprint for half a mile and die. The horse can do this forever.\n\nThe collar stopped thrumming.\n\nRachel's face shriveled faster than if she'd just drank a gallon of prune juice. She looked down at the wooden band. That seemed way too good to be true. But it was true \u2013 the collar had responded to her own rationalizations.\n\nWhat did that mean? Something important. She had to figure it out before she got back to Hale. Smoke rising in the distance informed her that would not be a very long interval of time.\n\nA few scouts, bodies flat to the plain, stood up as she rode close. They recognized her quickly and returned to lying prone, eyes on the horizon. She passed into the empty space between the outer rim of soldiers and the campsite proper, finally letting the horse drift to a slower pace. It wheezed through its nose.\n\nThe collar hummed. She wasn't galloping at Hale's tent.\n\nI'm going as quickly as possible, Rachel thought. I can't run people down and screw up the camp.\n\nThe collar stopped again.\n\nShe could control it. She could control the collar. What was she missing? It was reacting to something, her thoughts, her...\n\nFor some reason, the Dream Hub tagline was spat up from the bowels of her memory. Perception is reality.\n\nPerception! That was it. The collar responded to her own perception of whether she was following Hale's orders or not. If she could make a reasonable argument to herself, then the collar followed suit. Finally, after two days of slavery, she'd found the crack in Hale's suit of armor.\n\nIt wasn't very much wiggle room. She couldn't take the collar off herself, or damage it, or do anything to it \u2013 that was a direct order. Couldn't squeeze out of that one.\n\nRachel had her parameters; she had a goal. The variables were defined. She just had to implement. Just like writing a program. No sweat. I got this.\n\nWhat were her standing orders? No touching the collar. No talking about the collar. Address Hale properly. No discussing the details of Lord Hale's plans regarding his magic, troops, or holdings in any way that could damage his standing in the empire.\n\nThat last one. His standing in the empire. It was vague. He'd given it with the air of someone who had said the words to a dozen other slaves, and his wording had gotten a tad lazy. It had a weakness - she just had to find it.\n\nShe reached the camp proper. It was an angular, strictly organized affair. The brown tents were in long, even rows; the soldiers had already tramped down major paths between them. Latrines were dug in the distance on the other side of camp, away from the supplies and horses.\n\nOfficer tents were not clustered in any particular area, but rather, scattered throughout the normal tents, and they weren't marked by anything special. The air was subdued, quiet. No drinking, no gambling. A few huddled conversations, some laughter, but no disorder. She rode by several on-duty guards. They were always posted in pairs.\n\nCommander Tell'ad was a bit high on himself, but he sure knew how to run an army.\n\nRachel ignored the big tent in the center flying Lord Hale's green-and-black standard. That was the decoy tent for would-be attackers or assassins. Accidents could happen, especially while a lord was away from home.\n\nInstead, she went for a slightly larger-than-average tent. The size marked someone of notable military office, but nothing too important. Her collar \u2013 and the ten-odd guards positioned at shadowy spaces between neighboring tents \u2013 told her this was Hale's temporary residence.\n\nShe brought the horse to a halt and slid off the saddle. Her legs shook; her knees wanted to collapse. She needed to sit, rest, let the video game part of her life do its magic. But the collar wouldn't let her stay. A man came to attend to her horse, and she started to trudge forward.\n\nThat was the groom. Rachel slowed and turned her head. \"Yo, dude.\"\n\nThe groom gave her a look that said she's-important-so-I'll-just-go-with-it. \"Ah...my lady?\"\n\nRachel's collar hummed again. She ignored it. \"What's that horse's name, again?\"\n\nThe groom glanced at the horse for a moment, then back at her. \"Juniper, my lady.\"\n\n\"Thanks. Juniper was great. Give him a carrot or something. Is there a girl horsey he likes? He deserves \u2013\"\n\nRachel tripped. The collar felt like it was stabbing into her neck. She stumbled across the ground toward Hale's tent, falling to her hands and knees as that blade was drawn back across her spine.\n\n\"My lady?!\" The groom dashed forward. Several of the guards shifted, uncertain if helping her was more important than keeping their posts.\n\nSmall-dicked little pissy face-fucked faggot munching ass wiper bitch shithead FUCK.\n\nThe pain was fading. Rachel held up a hand. \"Just...headache. Bad headache. I get them. Thanks for...Juniper.\" She stood straight and strode for the canvas. \"I'll visit later. Him. The horse. He's cool.\"\n\n\"Um...yes, my lady.\"\n\nRachel brushed aside the tent flap without bothering to announce herself. Hale would know she was there.\n\nHe was shirtless, and shaving. He wasn't muscular, but he had more muscle than fat. He was taller than Rachel, but almost everyone was taller than Rachel, except for those with clinically stunted growth, so that wasn't really saying much. His hair was jet black and short.\n\nHale used a straight razor. Rachel noticed he did that twice a day, when he could. He was very quick \u2013 he lathered and shaved his entire face, twice, in less than ten minutes. Apparently the second pass made a difference. Rachel didn't really see it.\n\n\"Rachel,\" he said. He was at the wrong angle to see her in his mirror, but he didn't need to see her to know she was there. \"You were successful.\"\n\nHe had the same presumptuous tone he usually did. It was less his voice and more the word choice. You are this. You were that. You did this, otherwise you would not waste my time with your presence, because as we all know, my time is better than yours, because I'm a big fat fucking asshole.\n\nRachel swallowed, and nodded. \"Yeah.\" She caught herself. \"I mean, yes, Lord Hale.\" She dug into her pocket and drew out the small black box. \"So, my Lord, what the hell is this thing?\"\n\nHale didn't answer immediately. He swept his razor across his chin, flicking the lather off his face and into the small basin under the mirror. He splashed a bit of water on his neck to clean the remainder off, then pulled his shirt over his head.\n\nHe faced her. His face was like his hair \u2013 neat, clean. Too clean for an asshole like him. He held out his hand. \"The box.\"\n\nRachel handed it to him. He raised it up, pinched between his thumb and forefinger. The lantern light in the tent faded in its presence. \"Incredible. This might just be a primary sample.\"\n\n\"Of what?\"\n\nLord Hale looked at her.\n\nRachel held in her sigh. \"A primary sample of what, my lord?\"\n\n\"Within this box,\" Hale said, \"is contained the encapsulated authority of the creator, the Word of God Himself.\"\n\n\"...oh.\"\n\n\"Oh?\" Hale made a sort of self-satisfied chuckle that made Rachel want to punch him in the face. \"Oh, she says. As if it's not a penny in her well.\"\n\nHale strode toward her and gripped her chin in his hands. He turned her face from side-to-side, inspecting her like he inspected the box.\n\nRachel thought of Jackson's hands, and how gentle they were when they cleaned her off.\n\nStupid. Thinking about shit like that. Focus.\n\n\"Something happened in the rattok caverns,\" Hale said.\n\nRachel said nothing.\n\nHe glanced to the entrance of the tent without following up on his statement. \"Fetch me the commander.\"\n\nA voice answered from outside the tent. \"Right away, my lord.\"\n\nHale still hadn't released her chin. Rachel was starting to loathe his grip. She imagined clamping his arm to a table and chopping off his fingers one at a time. It helped.\n\nHe faced her again. \"The Word of God,\" Hale said. \"Do you understand what I mean?\"\n\nHis grip wouldn't let her shake her head. She shrugged instead. \"I told you, we don't have magic in my world. My lord.\"\n\n\"It is said that demons made these containers.\" His fingers tightened, squeezing her skin painfully. \"They lost the war for control of the Higher Plane, but even in their defeat, they were cunning. They wanted to preserve His power for their own use, even that which echoed around them as they were cast down. And so they used these constructs to trap His very words, to be released at time of need.\"\n\nHe finally let her chin go and raised the inky box again. \"Perhaps that is just a legend; there may be some other arcane source. Regardless of their origin, we do not know how they are made, these originals. But we can copy them. And we can copy those copies - but the power contained is lessened with each duplication. The lesser formats are said to be magical dilutions.\" He rubbed the top of the box with his other hand. \"The closer to the original, the more powerful. More potential, if utilized properly.\"\n\n\"How is it utilized, my lord?\" Rachel asked.\n\n\"Through runes,\" he said. \"Runes are crafted about the box itself. When released, the box absorbs them. There are limits, of course. The runes must somehow use the power of the given word. Runes alone cannot forge fire from water, but they could turn the Word water into a pressurized jet, or a rolling wave. The crafting of runes into a particular spell is a delicate process, one that involves embedding part of it into the soul itself. Collectively, the finalized runic enchantment and the box's power are termed a single Word. Even I can only hold four at a time.\"\n\nRachel blinked. Usually he wasn't so up front with sensitive information. \"Why is that, my lord?\"\n\n\"Words are as enchantments upon the soul,\" he said, \"and a soul can only bear so much. Only a lifetime of training has enabled me to carry such.\"\n\n\"I see.\"\n\n\"You're confused as to why I'm telling you these things,\" he said.\n\nRachel's teeth ground in the back of her mouth.\n\n\"And now you're wondering how it is I can read your thoughts,\" Hale whispered.\n\nRachel shivered.\n\nWas it true? Did the collar tell him everything? She wasn't sure. Between the pain, and the chaos of her life over the past few days, she couldn't tell. Her entire soul might be laid bare for him to read like a book.\n\nNo. He didn't know everything. She'd found a loophole in the collar: his orders were subject to her interpretation.\n\n\"Well, my lovely Lady Ransfeld,\" he said, \"I'm glad you returned in one piece. You seem to have had a time of it.\" He trailed a finger down her oil-encrusted hair. \"My golden-haired warrior. You are such a cute, delectable little thing.\"\n\n\"You have a point, my lord?\" Rachel growled.\n\n\"Oh, my,\" he said, withdrawing his finger. \"I forgot. You don't like it when people touch your hair. We still have to fix that, don't we?\"\n\nPain shot through Rachel. It ran up her right leg like a line of fire. Her knee buckled. She fell onto all fours.\n\n\"Now,\" Hale said, \"let's repeat our mantra.\"\n\nRachel gasped. The pain lingered; it throbbed, receded, throbbed again.\n\n\"Don't keep me waiting.\" His voice had a dangerous edge.\n\n\"I serve...Lord Hale,\" Rachel said.\n\n\"Very good. How do you serve me?\"\n\n\"With my body and heart and soul.\"\n\n\"Repeat. All of it.\"\n\n\"I serve Lord Hale with my body and heart and soul.\"\n\n\"Again.\"\n\nRachel's lips drew back over her teeth. \"I serve,\" she said, \"Lord Hale. With my body, and heart, and soul. Are you satisfied yet, my lord?\"\n\nRachel shrieked and fell to the ground. She could feel it, feel the cold sharp steel of a blade sliding through her body, cutting and slicing the skin. And then it was gone. She shivered, curling up on the ground in her blood-covered leather and torn up cloak.\n\n\"Let's avoid such improvisation in the future,\" he said calmly. He moved so his feet were at her face. An ugly frown stained his clean-shaven face. \"Once more. With feeling.\"\n\n\"I serve Lord Hale with my body and heart and soul,\" Rachel whispered.\n\n\"Yes, you do,\" he said. \"You'll be my finest servant, Rachel. I promise you that. Limitless untapped potential. You are the tool I will use to dominate this tiny little world. The plains, first, once I scour them of their infestation, and then the empire.\"\n\n\"My lord.\" It was the commander's voice. \"I have come.\"\n\n\"Enter.\"\n\nTell'ad brushed aside the tent flap. His greying hair was unkempt; he must have been sleeping. His eyes went to Rachel, watched her breathing through the grass and dirt. He looked back to Lord Hale. \"Was there something you wanted to discuss?\"\n\n\"Indeed. My preparations are far enough along to time well with our attack.\" Hale considered the box, apparently not caring if Tell'ad saw it. \"We march tomorrow morning. This spy of yours - he said this Mountain Meet will last several days?\"\n\nTall'ad nodded. \"A week, my lord. Often longer. It will take at least that for the closest tribe to get there.\"\n\n\"That gives us an excellent timetable,\" Hale said. \"Don't tire the men, but keep the scouts extended far in all directions. I do not want them to get wind of this attack. We have quite a few advantages, but they still outnumber us. I want to lose as little as possible in this endeavor.\"\n\n\"Yes, my lord.\" Tall'ad looked at Rachel one more time; there was a brief flicker of pity in his eyes. And then he bowed, and slipped out of the tent.\n\nI don't want your fucking pity.\n\n\"Now, back to more important matters,\" Hale said. He took a knee and put a hand on Rachel's cheek. She clenched up. \"There, there,\" he said. He stroked his hand along her face. \"Rachel, Rachel. Rachel. I know it's hard. I know you're still trying to think about how you'll get out of this. But eventually, you'll be casting spells alongside me. You'll wonder why you ever thought to leave my side. You'll be my everything...everything I need you to be. You're the woman I've been looking for. A woman enough to be my partner.\" He tapped her nose with his finger. \"You just need to learn a touch more obedience!\"\n\nRachel made a sound in the back of her throat that she hoped was defiant. If she didn't use words, she didn't have to call him Lord Hale.\n\n\"Come, be reasonable,\" he said. \"If I can deliver pain...imagine what kind of pleasure I can give you.\" He trailed his hand down her torso. He cupped her small breast through the hard casing of leather. \"I'll make an empress of you. I'll give you the whole world. You'll make good use of it; you're an intelligent woman. If you weren't, I would've already discarded you.\" He let his hand slide down further and clenched hold of her ass. \"You're quite beautiful, too. I'll truly enjoy that part of our -\"\n\nRachel threw herself at him, going for his throat with her teeth.\n\nShe collapsed halfway. The pain struck her down, destroyed her nerves, rebuilt them, and destroyed them again. She screamed. Her body twitched and spasmed against her will.\n\nIt stopped. The pain just turned off, but her body still roiled, shivered, as if it couldn't believe that things had changed so quickly.\n\n\"Don't do that again,\" Hale said. \"That's an order.\"\n\nRachel felt the collar shift. Another order; another limitation. But he hadn't said not to attack him \u2013 just not to attack him like that. She just had to bide her time for round two. I've been a programmer longer than you have, Hale.\n\nHale took her hand \u2013 her star-scarred hand. He traced a finger across the inverted pentagram dug into her flesh, as if memorizing the pattern. \"You're still holding onto something. Tell me what it is.\"\n\nRachel was silent. She kept herself relaxed, letting him play with her hand. She was an empty doll. She wouldn't struggle. She wouldn't give him the satisfaction.\n\n\"Tell me,\" he said. His voice had the edge again.\n\n\"Yes, my lord,\" Rachel said. \"I still think I'm going to escape you.\"\n\n\"It's because I gave you a little room to work with, isn't it?\"\n\nRachel had built a little territory inside her mind, a little space of safety. She had weapons; she had tools. She could resist him.\n\nWith just that one sentence, he buried all of it under a black tide of helplessness.\n\n\"You think I don't know how my own spell works?\" he asked. \"You think I'd just casually give you slack to play with? Did it feel good, when you thought you'd figured it out?\" He leaned in closer. \"I'm engineering your behavior, Rachel, right down to the conclusions you think you're making on your own. It's one thing to force you to obey me. It's another entirely to crush the hopes I allow you to form.\" He sat back up, still petting her hand like she really was a doll. \"You'll learn, Rachel. This is the way it has to be right now. You'll thank me later. Now. What happened in the caverns?\"\n\n\"...I killed a lot of rattok, my lord,\" she said. \"And I got the box.\"\n\n\"And what else?\"\n\n\"And it was moldy and cold and bloody,\" she said. \"I didn't enjoy it.\"\n\nHale fixed her with a stare. His eyes pierced through her core. He could see everything.\n\nDon't believe him. Don't believe him. I can't believe him.\n\n\"There was a lot of stuff,\" she said.\n\n\"I want you,\" Hale said, \"to tell me every detail about your journey, from beginning to end. Or I will make you wish you had.\"\n\nRachel started talking.\n\nShe described the forest, the ruins, and told him about the rattok. She detailed him how many she killed and how she killed them; how much essence she collected, and how she spent it, along with any and all abilities she used. She spared no grisly moment of the ceremony that transformed captive people into rattok.\n\nAnd then she fed him a load of bull about how she'd gotten her hair soaked in oil, singlehandedly killed the rattok mage, discovered the box, and escaped the ruins.\n\nShe did not mention Jackson.\n\nHale didn't notice.\n\n<center>****</center>\nJackson reached the Windseeker camp after nightfall.\n\nChaki was waiting for him at the edge of the tents. Shaka was standing next to her, arms folded. Jackson urged Smallgrass up at a gentle canter.\n\nHe gently pulled on the horse's neck, bringing it to a stop. He slid off the side of the animal. His feet hit the ground hard. His body told him it was ready for action, but his mind argued otherwise. He was tired of reacting, tired of jumping; his brain was fried from being on high alert all the time.\n\nChaki and Shaka didn't move; they were quiet. He had felt Chaki's presence grow in his mind for some time as he'd approached the tipis. He gripped that feeling tight.\n\nThe bond told him Chaki was a tight ball of fire. Her brown eyes were sharp in the oncoming night. She faced him, watching him, but not saying anything.\n\nJackson walked forward to hug her.\n\nShe raised her hand and smacked him on the side of the face. \"You idiot!\" she shrieked.\n\nJackson reeled, both from the stinging and the exploding bond inside his head. He felt so much from her he wasn't sure what he was feeling. Worry, anger, rage, concern, helplessness, desperation, fear; all shot at him like boiling arrows.\n\nAnd then her arms were around him. She was crying on his shoulder. \"You - you are never, ever, doing something like that again! Ever! Are you listening, Jack!?\"\n\n\"I heard you,\" Jackson grunted. His cheek throbbed. He managed to hug her back.\n\n\"Good!\"\n\n\"Missed you too.\"\n\n\"You smell like those things,\" Chaki said. \"I'm surprised Smallgrass carried you.\"\n\n\"Me too.\"\n\n\"Throw yourself in the creek, and then come see me. We will talk.\" The last was said with the authority of a queen telling her general he was about to be sent to the guillotine. She turned on the spot and stalked back into the camp.",
        "Jackson rubbed his forehead. The confused flame inside of the bond bobbed and weaved, but it faded a bit as she distanced herself. He looked at Shaka. \"I don't look that bad, do I?\"\n\n\"You've looked better,\" Shaka said.\n\n\"What happened? She was...\"\n\n\"What happened, Jackson,\" Shaka said, \"is that her half of your bond activated when you found yourself in danger. She was bringing water to the camp, and suddenly, it weighed less than a feather, and she could run at twice her normal pace. She came to me.\"\n\n\"Oh.\"\n\n\"Oh is right,\" Shaka said. \"And then I had to deal with your wife-to-be, who was stuck dozens of miles away from you while your life was at risk, filled with enormous strength and unable to lift a finger to help you.\" Shaka fixed him with her spirit-guide-glare. \"Do not do that to me again. I do not believe my tipi will survive another event such as that.\"\n\n\"Um...ok.\"\n\nShaka nodded. \"Now. You have the look of someone with much on their mind.\"\n\n\"Shaka, a lot happened,\" Jackson said. \"A hell of a lot. And...\"\n\n\"Get yourself cleaned up, and we'll discuss it,\" she said. \"I will take Smallgrass back to the herd, then wait with Chaki so that she does not burn the camp down.\"\n\nJackson went off and threw himself in the creek. His bison-skin shirt and pants sloughed off most of the blood and grime surprisingly well, only leaving a dim stain. The People-Under-The-Mountain made their clothes to last.\n\nOnce he'd scrubbed himself off, he donned his wet clothing and made his way back to Shaka's tipi. She was waiting with a fresh outfit. He changed in her tent, grateful for the new belt, then set his other set of clothes to dry near her fire.\n\nHe wasn't surprised to see Chaki waiting for him when he went outside. This close, he could feel her constantly, fading as she moved away, growing as she closed in; a candle that was drifting up and about. Her mood had settled to an ashen glow.\n\n\"I am sorry,\" she said, \"that I struck you.\"\n\n\"It's ok,\" Jackson said. \"I think I'm getting used to being slapped in the face.\"\n\nChaki hacked a laugh. She looked at the fire, then at the dim sky, now the purple-blue of sunlight almost gone. \"I was worried. More than I thought I would be. Than I should be.\"\n\n\"Sorry.\"\n\n\"You're not sorry you went.\"\n\n\"No,\" Jackson said. \"I'm sorry I made you upset.\"\n\nChaki considered that for a moment, then nodded. \"That much was honest.\"\n\nJackson moved around the fire and sat next to her. He gently placed his hands on her elbows. \"So what do I do next time?\"\n\n\"Don't go off on your own again.\"\n\n\"I can do that.\"\n\nChaki nodded. He hadn't fixed it, not entirely - but she seemed satisfied for the moment.\n\nHe wasn't sure if he wanted to fix it all the way.\n\nSomething dark curdled in his heart. It had been a long ride back from the rattok nest, a long time to think. Would Chaki leave, like Rachel did? When she saw him for what he was, would she abandon him?\n\nHe had to expect the worst. He had to steel himself against it. All he had to do was break it off before she did. \n\nBut she felt so good in his arms. Her eyes stared up into his; he sucked in their deep brown color. His brief resolve crumbled.\n\nWhat was wrong with him?\n\nJackson smiled; Chaki returned it. Her teeth were bright in the light of the fire. \"I'm glad, Jackson.\"\n\n\"At least you two have the good sense to communicate,\" Shaka said. \"I don't know how many couples I've gone through that don't grasp the basics. Giving guidance is hard work.\"\n\n\"Thanks for all the help, Kemosabe.\"\n\n\"I take it that this is a compliment?\" Shaka asked.\n\n\"That one would take a while to explain,\" Jackson said. \"But basically, yes.\"\n\n\"Shaka said you had a lot to tell us,\" Chaki said.\n\n\"Yeah.\" Jackson sat on the ground, and Chaki sat with him. She kept a hand on him, as if afraid he'd vanish. Shaka sat a few feet away, on their side of the fire. \"So, first thing's first. I made a new friend. Sort of.\"\n\n<center>****</center>\nBy the time Jackson was done, it was the dead of night. Chaki had moved to sit with her arm twined with his, leaning on his shoulder. Shaka stared into the campfire, watching the crackle of dry heat.\n\nTelling the story did not make Jackson feel better. He did not feel like he had gotten something off his chest; rather, it seemed to reinforce the weight that was already there. It made Isis more real.\n\nHe felt a gnawing exhaustion. It wasn't sleep he needed; it was time alone. He felt an urge to go into his room, perch in his swivel chair, and waste time on his computer.\n\nJackson didn't like explaining himself. The longer he went without a recharge, the more of a hassle the effort of making his thoughts and ideas comprehensible to other human beings became. Every conversation became a rough hike; they had since mutated into full vertical climbs.\n\nHe was tired of talking; he was tired of people. He was tired of even looking at people. Most of all, he was tired.\n\nEven Chaki's arm was starting to feel like a chain.\n\n\"Jackson?\" Chaki asked.\n\nJackson made a noise.\n\n\"You seem tense.\"\n\n\"Fine,\" he said.\n\nChaki looked at him a moment. \"So...another warrior like you. What does it mean?\"\n\n\"It means that a time of great change is upon us,\" Shaka said. \"Shakhan has summoned Jackson to deal with the threat to the Tower of Babel and strike down the demons.\"\n\n\"Yes,\" Chaki said, \"but what I don't understand is why this Rachel ran away. I thought you were getting along, and you did save her. Rather like us, really.\"\n\nJackson shrugged. \"I don't get it either. She was a little weird, but she was nice, once you got past the...well, a lot of stuff. But I thought we might be able to work together.\"\n\n\"She placed a higher value on the magical container than your friendship, apparently,\" Shaka said.\n\nJackson frowned. He looked at his folded legs.\n\nWhat Shaka said was logical. But something felt off. Rachel was definitely impulsive enough to do something like that, but...\n\nBut nothing. He'd simply misjudged her. It wouldn't be the first time he'd held out for someone and come up with nothing but air. He wondered how many times he'd have to be disappointed before he stopped hoping for people to be better than they were.\n\nHe squeezed the bridge of his nose with the arm Chaki wasn't using as a headrest. His life had been so simple just a few days ago. Sleep. Eat. Play games. Work on his computer. Now he had all this crap to deal with. This was why he stayed in his room. This was why he didn't bother.\n\nThere was one common denominator that stretched through his life, and that was him. There was no escaping that. Rachel picked up on it \u2013 she stuck around long enough to benefit, then hightailed it out of there.\n\n\"Jackson?\" Chaki asked.\n\nHe looked up. Chaki was looking at him again. He felt her warmth in the bond. Concern.\n\nJacked heaved a sigh. \"She was cool,\" he said. \"I just can't believe she went and did that. You think I'd be able to stomach it by now. I can't stop myself from hoping.\"\n\n\"There must be more we don't know,\" Chaki said.\n\nJackson made a sort of half-smile. \"I dunno. Thinking about it, it made sense for her to cut and run. Grab the treasure and skedaddle. It's probably why she was there. She tricked me into letting her touch it first. She probably knew something about it.\"\n\n\"You should trust your own judgement,\" Chaki said. \"If you think there's more to this, than there probably is. Perhaps we'll meet her again, later, and you can ask her for an explanation.\"\n\n\"...thanks, Chaki.\"\n\n\"A good wife supports her husband.\"\n\nJackson looked into the fire. He was a husband. Or, at least, he would be. A husband with a wife that deserved better.\n\nWould all this lovey-dovey honeymoon stuff crash down around him? Should he not worry about it, and just enjoy it while it lasted? Should he stop caring?\n\nIt was too late, in part - he cared about Chaki. Hell, he'd seduced her. He threw all his concerns away and just went with his impulses.\n\nIt had been easier when Isis was a video game come alive. But now it was settling in. This wasn't unreality \u2013 it was just a different reality. His forehead felt like it was bending under the pressure of trying to outthink the way this world worked.\n\nChaki just didn't get it. She had no concept of Earth. She refused to think anything bad about him. She didn't even know who he was.\n\n\"I will think on what you have said,\" Shaka said, breaking the silence. \"There isn't much to be done until we reach the mountain. I will trust you two not to commit further dalliances.\" She gestured to the thin cannon and the golden cylinder. \"Keep those safe and wrapped in cloth. Speak of them to no one.\" Shaka ambled away from their fire at the edge of camp, returning to her tipi.\n\nChaki waited until she was out of earshot before speaking. \"You are bothered,\" she said. \"I felt it earlier. It's circling inside of you like a hawk.\"\n\n\"...I'm fine.\"\n\n\"You make a poor liar.\"\n\n\"I'm not lying.\"\n\nJackson felt as though the bond had been dipped in ice. Chaki let his arm go and walked away from the fire. She stood a few feet away, her back turned, arms folded. Jackson remained sitting. \"You've already broken your promise to me.\"\n\n\"What are you talking about?\"\n\n\"You said you would not go off on your own,\" Chaki said. \"Apparently you did not include the space within your heart.\"\n\n\"What was that Shaka was saying about communication?\"\n\n\"You are the one that isn't communicating. I want in, Jackson. And I want in now.\"\n\n\"You don't just get to kick someone's door in and stomp over their carpet with muddy shoes.\"\n\nChaki turned her head, half-looking at him. \"I thought I was already inside. But as soon as I let you wander away, I'm a stranger again.\"\n\n\"There's nothing to tell,\" he said. \"I'm fine.\"\n\n\"This is a pattern that keeps repeating itself,\" Chaki said. \"Just be honest with me.\"\n\nJackson said nothing.\n\n\"I won't judge you for the truth,\" she said. \"You have no self-confidence.\"\n\nJackson felt a sting that had nothing to do with his cheek. \"Yeah, well, news at eleven.\"\n\n\"What does that mean?\"\n\n\"It means you stated the obvious!\"\n\nChaki wheeled and marched back toward the fire. \"I'm sick and tired of your angst. I was stuck here, alone. I thought I wouldn't see you again. I thought I'd let you ride to your death! Give me the dignity of the truth!\"\n\n\"Let's inject a little realism into this situation,\" Jackson said. \"It means a lot to me that you're so concerned. But you've known me for what - three days? You're obsessed with this husband-wife thing. And if you haven't noticed, it's kinda freaking me out.\"\n\n\"Is that it, then?\" Chaki said. \"You think I'm a fool caught up in romantic expectations? You're a liar, Jackson. You feel the same way I do.\"\n\n\"How would you know?\"\n\n\"Because I can feel it!\" Chaki said. \"I can feel it in your heart. I felt it last night. The bond tells me it is so.\"\n\n\"If you're so in tune with my feelings, then stop asking about them.\"\n\n\"I can't read your mind.\" Chaki glared down at him. \"There's something inside of you. Something that's bothering you. I have no other words to describe it; I cannot know it unless you tell me.\"\n\nJackson's gaze retreated to the fire. He pinched a clump of grass between his fingers, ripped it free, and tossed it aside. \"Some people are open books. I'm not one of them.\"\n\n\"I will have it from you.\"\n\n\"There's nothing to have.\"\n\n\"Liar.\"\n\n\"What the hell is your problem?\" Jackson said. \"Can't you take a hint? I don't want to talk about it. I don't talk about it. So back off!\"\n\n\"You won't go off on your own again,\" Chaki said. \"Isn't that right? Or maybe you just said that to make your obsessed wife happy for a moment!\"\n\nJackson heard his own words tossed back at him, but his anger blunted the blow of his hypocrisy. His fists were clenched. His lips were drawn back, and he felt just about ready to explode. She had no idea what she was talking about.\n\nHe was afraid that telling her would make her go away.\n\n\"You had concerns when you bonded me,\" Chaki said. \"You waxed poetry about your inability to protect me, your uncertainty about what I was getting into. But I could see you, Jackson. You're like steel, at your best - but parts of that metal are weak, rusted abscesses, gaping breaks in who you are. Whatever made those is what makes you hesitate. Whatever made those is what makes you cringe away from me like a child!\"\n\n\"You want to know how I feel?\" Jackson climbed to his feet and locked eyes with her. Chaki swallowed and leaned away from the expression on his face. \"You want the truth?\" he said. \"You want to know who I am? Because it's not what you imagine in your head, I can tell you that much.\"\n\nChaki regained herself. \"I will take you as you are, Jackson.\"\n\n\"What I am,\" he said, \"is a loser.\"\n\n\"You are not \u2013\"\n\n\"Shut up!\" Jackson shouted. \"What the fuck would you know, would any of you people know?! Did you live my life?!\"\n\nChaki's eyes were wide. Her mouth fell open. She waffled there, silent.\n\n\"Everyone in this camp has been telling me how great I am,\" he said. \"You, Hanta, Shaka, Landri. Oh Jackson, thank you. Oh Jackson, you're so wonderful. We believe in you, Jackson. It's nice, sure, but it's also a load of horseshit. None of you actually know me.\n\n\"When my father died,\" Jackson said, \"it broke my mother. I thought I had to take his place; I had to make it better. So I tried to shake her out of it. I tried for years. She came back every night so drunk I could smell it as soon as she opened the door. Sometimes her clothes were torn, and she had bruises. She was beaten, maybe even raped - if she was, she never told me.\n\n\"She would get so drunk she would sleep in her own vomit. And then she went back out again the next night. She would steal my things and sell them so she could buy more alcohol. She found where I kept my money three times before I wised up and put a lock on my door.\n\n\"I was too young to figure it out at first, but eventually, it worked its way through my skull. She was doing it to herself on purpose. She didn't want to live; she didn't want to feel anything. So I gave up on her. I gave up on my own fucking mother.\" Jackson leaned forward and forced the words through his teeth. \"And you know what I did then? I crawled into my room and locked the door. I don't have any family besides her; there was nowhere else to go to. It was easier to run away, so that's what I did.\n\n\"No one at my school cared about me. They bullied me because I was different, because I had the gall to actually try and go after something, because I was smart, because I was poor, because I had a job so young, because I walked to school instead of arriving in a car, because I was an easy target - for any reason they thought made a good enough excuse. I was \u2013 I am - a social outcast. I'm one of those people no one associates with because they don't want to be contaminated with whatever mental disease I must have. The teachers ignored me. They weren't paid enough to pay attention to bullshit like that.\n\n\"People used me. So many people I thought might be my friends, they all used me. I had to get my own job to stay alive, because my mother did nothing, and they took me for even the little bit I had to spare. I worked in an electronics hardware shop, I picked up a few things; they used me for that, too. You know what one of my best friends did to me? He had me make a machine for a group of people that raped women for sport. It kept them from being discovered.\" Jackson raised his hands up, then let them fall. \"He didn't tell me what it was for until after the fact. That was someone I considered a friend. That's what a fantastic judge of character I am.\n\n\"I made sure those guys got what was coming. But do you think I confronted my friend, that I stood up for myself? Not even for a second. I crawled right back in my room, turned the sound on my headphones up, and ignored it! I took my beating, I ran, I hid, I avoided everyone I could possibly avoid. I hate people. I. Hate. People! I said it, there it fucking is! I've spent my entire life fucking cultivating apathy because I couldn't stand to give a shit about what happened to me or anyone else for one more fucking second!\n\n\"And what's even more pathetic than that,\" Jackson said, \"is that I ran as far as you could possibly go. I shoved my head into games \u2013 time-wasting bullshit that won't get you anything in real life. I buried myself in them. I came here because this was supposed to be the best game ever made, because it was supposed to be a whole world you could lose yourself in. It was supposed to be my escape. I thought Emil Mohammed understood that. He knew the score. It was finally here, prepackaged and factory sealed, and instead...it's real. And now I'm the one that has to deal with it.\n\n\"So when you come and tell me that I don't have any self-confidence \u2013 you're right! That's the most accurate thing you've said about me yet, Chaki. That's hitting the nail right on the head. Every single time you've proclaimed my greatness, named me your savior, it was like you were twisting the dagger a little harder into my stomach because I knew all along exactly what kind of a person I am. A loser. I'm a loser with no life, no accomplishments, nothing to speak of, no honor or dignity or any of that stuff, nothing. Or whatever values you think are good - I don't have them. For once, with you, your brother, and Shaka, I just happened to be in the right place at the right time. I'm glad it happened, but I didn't magically transform into a different person because I got a few special powers and did one good deed. I'm not a fucking hero. I'm just me. And now you know what that is - a do-nothing sack of melodrama and bullshit.\"\n\nJackson settled back on his heels. He breathed as if he'd run a mile.\n\nHe hadn't been able to stop it. It had been building all along, all the worries he'd shoved to the back of his mind, all the fears he shelved so that he could focus on dealing with his new life. His brain was busy figuring out Isis, busy worrying about survival, so it had packed all the emotion in a closet at the back.\n\nAs the smoke in his head cleared, he felt a sudden sense of horror. The closet door had finally burst open, and the tangled mess had spilled out right on top of Chaki.\n\nJackson took a step away from her. \"I'm sorry, Chaki,\" he said. \"I...shouldn't have raised my voice.\" He slowly sat down on the ground, faced the fire, and drew his knees to his chest. \"...you should just go. It's fine. You know...I don't deserve you. You're amazing. You're so amazing. You're beautiful. I'm a horny piece of shit that thought he could get away with it. Time to wake up. That's the truth you wanted. All of it.\"\n\nAnd then, it was quiet.\n\nChaki stood where she was, unmoving. Probably still taking it in.\n\nThe fire was low. The sound of the embers was hushed. A wind blew over them, ruffling grass, beating the sides of the tipis. It was cold; it seeped through his clothes. Jackson shivered.\n\nChaki still said nothing.\n\nJackson had an urge to fill the quiet. \"I hope you get it now,\" he said. \"I tried to tell you before. But...I don't know. For a while, I thought I could just be someone different, that I could let all that stuff go. It was almost like I could just lean on you and forget about it. But you can't just change who you are that easy. I can't make you my personal crutch. So, I'll learn magic from Shaka, and then I'll go up the tower and do whatever needs to be done. You can get back to your life.\"\n\nChaki slowly stepped back around the fire. She stopped a few feet away. She sat, curling up until she was like him, knees at her chest, facing the fire. \"Can I sit here?\"\n\n\"...you already are. I don't own the ground.\"\n\nChaki nodded.\n\n\"Do you want to say something?\"\n\n\"Yeah,\" she said. \"I guess I'm just figuring it out.\"",
        "\"Take your time.\"\n\nChaki nodded again. Her toes began to work in the grass. She dragged her foot to and fro, digging a little trench. \"Maybe you were right, in a way. Maybe I want this too much.\"\n\n\"The only person here with things wrong with them is me.\"\n\n\"You don't know me, either,\" she said.\n\n\"Not really, I guess.\"\n\n\"When you were gone...\" Chaki drew her foot back and rested her head on her knees. \"Do you remember, when you said you saw me in the cage - that seeing the hope come back to me made you stay?\"\n\n\"...yeah.\"\n\n\"You saw correctly,\" she said. \"Since father died, I...I don't know. I've done well with Palla, I think. He'll be a strong man. My mother seemed recovered. But I felt distant. Like I was floating. I'd lost something, some sort of anchor that was holding me down, the thing that made me care about life. When I was put in that cage, it was as if the world had finally come to claim me. So I sat down and got ready, Jackson. I was ready to die. I would fight to get Palla free, yes...and then, whatever would happen, would happen. But then, you came, and things...they were different. It was as if my father's spirit had returned to remind me of something \u2013 that he had sent you in his place.\"\n\nJackson shifted, draping an arm over his knee. \"Like I said. Right place, right time. That was it. It was just a coincidence.\"\n\n\"Let's say you're right,\" Chaki said. \"Even if the hand of fate had nothing to do with it \u2013 if my father's spirit has long since departed for another place \u2013 well, so what? What does it matter if it's just coincidence?\"\n\n\"Huh?\"\n\n\"Isn't that everything in the entire world?\" Chaki said. \"Things wouldn't happen the way they did if things were in other places at the time. If that makes sense. Relationships happen because people meet under the right conditions. Everyone that has ever cared for anyone else was just in the right place at the right time.\"\n\n\"I get what you mean. But \u2013\"\n\n\"When you were gone, and I could feel you on the verge of death,\" she said, \"it was as if I was back in the cage. As if I was detached. I never realized how much I hated that feeling until it came upon me again, unwanted. That is why I was angry. I was angry with you, but I was angrier with myself.\n\n\"Maybe you don't think you're anything special. But I think you're amazing. I think it's amazing that you think I'm amazing. And maybe you don't understand why. I don't understand it totally, either. I just feel it. I feel like we have some sort of connection, that we're similar in more ways than you realize.\"\n\nShe glanced to him, looking for a response. Jackson made a shallow nod. \"...alright. So...what are you saying?\"\n\nChaki cleared her throat. \"What I'm saying, is that the reason I...pried, so much, is because those rusty spots - those wounds you have \u2013 they seemed familiar to me. It didn't strike me until you told me what you did, just now. The reason I recognized them was because I, too, have them. I wanted to help you, because I thought that, in doing so, I would have earned the help you gave me.\n\n\"I accepted your bond, Jack,\" she said. \"I convinced you to make it. I did so knowing what I was getting into.\" She half-raised her hand, cutting him off before he started speaking. \"Perhaps I did not understand or appreciate the details of your life. I don't fully comprehend your experience. How could I? But what I saw made me wonder. How can a person that seems so strong be as weak as I feel on the inside? I understood not the nuance of your history, Jackson, but I knew that feeling so well it hurt me to realize it. I told you that I want to be a part of your life knowing exactly what sort of life it was - because I recognized what I had already seen in myself. Maybe that's what drew me to you so strongly.\"\n\nChaki bowed her head lower, hiding her face between her thighs. \"I am sorry I pushed you so much. I should have waited for you to speak on your own, in your own time. I just \u2013 I wanted to be closer to you. I wanted to earn my place at your side. I wanted to inspire you like you inspired me, and I thought I had to get inside your head to do that. But all I've done is shove you away. I'm sorry.\"\n\n\"Don't apologize to me,\" Jackson said. \"Don't ever do that.\"\n\nChaki drew her head up, glanced to the night sky, and then looked back at him. \"You are not what you claim,\" she said. \"Apathetic. You are just trying to convince yourself that you are.\"\n\n\"It's kinda stupid, isn't it?\"\n\n\"It says something very sad about your life,\" Chaki said, \"but it is not stupid, Jackson. I won't hear of it.\"\n\nHe could see the tangle of emotions in their bond. It felt like old coals that left soot on his hands. Worry. Affection for him. Fear. Hesitation.\n\nJackson shoved the feeling of the bond away. He'd had enough magic.\n\nHe shifted closer to her and put his hand on her shoulder. Chaki's head lifted to look at him. He studied the contrast between her rich tan skin and his pale white, sucking in the feeling of the smooth warmth. It might be the last time he felt it.\n\n\"...I don't deserve you,\" he said.\n\n\"I feel likewise,\" Chaki said.\n\n\"I made...\" Jackson's lips twisted. His face felt stretched too tight. \"I assumed you didn't...but you do. You said it exactly how it is. Floating \u2013 I guess that's one way to put it. Like you're in a bubble away from the world, and the landscape is all grey. Because someone turned the colors off and you don't know how to put them back.\"\n\n\"I don't want it to come back,\" she said. \"I don't want it to happen to you again. To either of us.\"\n\n\"It's not your mission to patch me together, Chaki,\" Jackson said. \"You shouldn't abandon your life to try and fix me.\" He rubbed his nose. \"Jeeze. I feel like an asshole, venting about stuff like this. I wish I could just get over it.\"\n\n\"Oh, Jackson.\" Chaki made a small smile. \"I promise that one day, I'll be worthy enough to have you.\"\n\nJackson put the heel of his hand on his forehead. \"I just can't get through to you.\"\n\n\"People seem to think that I'm stubborn,\" Chaki said. \"I think they're right.\"\n\n\"Yeah.\"\n\n\"I want to know you better, Jackson,\" she said.\n\n\"...that might be hard.\"\n\nChaki tilted her head, and made a little smug smile. \"It'll be harder if you keep going off on your own without me.\"\n\n\"Are you sure, Chaki? Really, absolutely?\"\n\n\"Jack,\" she said, \"I'm sure. I won't leave you.\"\n\nJackson wiped at his eyes. \"Alright then, I guess.\"\n\nAnd then, it was quiet again. Wind blew. The coals of the fire glowed as fresh air rolled over them. Strands of Chaki's hair were flicked over where Jackson's fingers rested on her skin. \n\n\"How long has it been since you told someone these things?\" Chaki asked.\n\n\"I've never told anyone this stuff,\" Jackson said. \"Ever.\"\n\nChaki put her hand on top of his. \"Then we have a lot of time to make up for.\"\n\n\"Yeah.\" The fingers of their hands twined together. \"I'm glad it's you.\"\n\n\"Me, too,\" Chaki said.\n\n\"...let's take things slow, for a bit. Let's get to know each other, like you said.\"\n\n\"I think that's a good idea.\"\n\n\"Maybe...\" Jackson thought for a moment. \"I want to go home. Back to my world. Do some research. There's things I need to look into.\"\n\n\"I can't go there, though,\" Chaki said.\n\n\"Well...\" Jackson met her gaze. \"Actually, you can.\"\n\n<center>****</center>\nJackson explained to Chaki how the game had prompted him to bring his bonded back with him when he logged out of Isis. Jackson didn't want to leave immediately; he still wanted to focus on transferring Shaka's runes. Chaki was subdued, after their conversation, but he could see her intense curiosity. She wanted to see his world for herself.\n\nHe wondered what she'd think of it. Nothing good, probably.\n\nThey stayed together for a while longer, then Chaki retreated to her family's tent to sleep. Jackson considered grinding his skills, but he just wasn't in the mood. He crashed in Shaka's tipi. The old woman was sound asleep.\n\nHe didn't need to sleep anymore, but he found that, if he relaxed for a time, he could doze off. His brain was relieved to unfocus for a little while.\n\nIt was almost funny, when he gave it some thought. He'd just spilled his guts to a woman that he'd seduced.\n\nBut it made perfect sense, in a twisted sort of way. When he hadn't cared as much, just feeding the carnal desires was easy. He didn't have to think about the consequences. Now that he knew her a bit better, he appreciated her. He'd gotten attached, and the paranoia and the fear had set in.\n\nShe wasn't going anywhere. She wouldn't betray him. She wouldn't sell him out. She wasn't like the others. He had to believe that, repeat it, chant it in his head like a mantra. He was afraid his body would forget if he didn't.\n\nHe wasn't sure how much time passed as he lay in the tent, listening to Shaka sleep. After taking the time to rest and sort through his thoughts, he felt a lot better, though he cringed when he remembered how he went off at Chaki. He owed her a bit more of an apology than a simple sorry.\n\nStill, he felt like his normal self, physically. He went back out and found the straw targets at the edge of the camp. He'd learned about something new in the caverns \u2013 something he knew would be incredibly important. He had combination attacks.\n\nWhen he'd swooped in to save Rachel, he burned a ton of essence very quickly to stave off the rattok. He ended up killing a lot of them, but his goal was just to delay them. He used his abilities in quick succession, flinging his spear around as fast as he could.\n\nAt some point, he'd used his Power Spin, turning in a circle with his spear to knock back the enemies that had surrounded him. There were so many, he just kept turning, using it a second time in quick succession.\n\nHis spear had flared brighter, and the white circle the tip drew around him thickened. It blasted out almost twice as far as a normal Power Spin. The sheer force of it made even the heavier rattok warriors stumble backward. The game announced the information with its usual prompt.\n\nDouble Power Spin: Combine two Power Spin attacks into a single motion, adding a stronger knockback effect and heavy damage to nearby enemies.\n- Essence Cost: 70\n- Level: 1\n- Progress: 78.9%\n\nHe had a new heading under his tabs. Passive Skills, Active Skills \u2013 and now, Combination Skills.\n\nA normal Power Spin cost 30 essence. The combination attack was extremely expensive, but it had killed one and injured several weaker rattok, as well as blowing back everything around him. In the right situation, it was worth the expenditure.\n\nHe'd played a few games with similar mechanics. Usually combinations could be discovered by combining the right moves, but that wasn't the first time he'd used them in quick succession. They probably had to be used in the right order,and there were likely level requirements for the involved skills to trigger a combination. He wouldn't be surprised if his passive levels had to meet a certain minimum, either.\n\nCombinations opened up a whole new field of potential. Could he make new ones with practice, without using essence? Could he string together more than two attacks? It all made being a tank a lot more palatable.\n\nHe did have that new ability, too \u2013 Spear Toss. It might be handy in a pinch. He'd have to grind it up.\n\nJackson gripped his spear and sighted down his target.\n\n<center>****</center>\nJackson worked through the rest of the night.\n\nHe was able to practice his Double Power Spin without using essence. The experience went up slowly, but steadily. He pushed it up a few levels.\n\nDespite trying out a variety of moves, he wasn't able to unlock any other combinations. After wearing out his options, he settled on trying to use a Triple Thrust followed up with a finishing Power Thrust. His Triple Thrust was level 16, and his Power Thrust was now level 26; on top of that, his spear skill was now level 29. If he had to exceed some hidden minimum to unlock a new combo, those were the best candidates.\n\nHe worked on just that for a good hour, but no luck. He suspected he could only unlock a combination while he burned essence. It might be worthwhile to do it out of combat, but if he was wrong, he'd waste life-saving ammunition. He couldn't quite bring himself to risk the experiment, and decided just to focus on making his fundamentals stronger.\n\n<center>****</center>\nThe next day, the camp moved.\n\nJackson was an accessory to the efficiency of the Windseekers. Most of their things were already packed up; the moving process was a matter of folding up the tipis, which were then placed on triangular wooden sleds. The sleds had no wheels or runners \u2013 they were just dragged along the ground behind the horses. It was a simple system, but the ground was flat enough that it worked.\n\nThe entire camp was moved that way. Some people dragged their own small sleds, or bore packs; Jackson saw a lot of the camp's dogs carrying their own weights. The horses did the majority of the work, pulling along a huge train of possessions and bundles.\n\nThey went at a hard pace, following the creek toward the mountain. A long trail of dust rose around them as hundreds of feet and hooves stepped across the prairie. Many of the tribe wore cloth masks tied tight around their mouths and near their eyes to shield themselves from the dust; Jackson quickly adopted the practice.\n\nShaka had recruited him for her own purposes. He wore her wooden trunk like a backpack, strapped to his body with thick leather belts. He thought he'd tire quickly with the protruding load weighing him down, but he was able to keep up without problems \u2013 with ease, even. He didn't have any sense of super strength, but the weight felt very...even. As if his body just knew how to carry it without a struggle.\n\nOut of curiosity, he checked his game menu. His carry weight, wearing his outfit, his spear in another strap under the trunk, the energy cannon, and the strange gold cylinder, was 28.4/59. With the trunk on his back, he was up to 52.3 \u2013 not enough to be overburdened.\n\nCome to think of it, he didn't know what would happen if he tried to carry more than he could hold.\n\n\"Hey, Shaka.\"\n\nJackson didn't know how old the woman was, but she was carrying more than her fair share. The triangle-sled roped to her waist and shoulders was teetering with leather bundles and bladders holding water. Gnarled old muscles moved under her dress to pull the load. She wasn't even breathing hard.\n\nShe looked up at him. \"Hmm?\"\n\n\"I'm going to try something for a second,\" he said. He started taking bundles off her sled. Most of them had their own straps; he slung them around his shoulders. The carry weight on the translucent menu floating in front of him jumped a bit as he took up each new item.\n\n\"I can handle this much,\" she said. \"It's not even noon yet.\"\n\n\"Just trying out an experiment,\" Jackson said. He picked up an oiled water skin.\n\nJackson almost tripped. It felt like lead bars had dropped on his feet. A low alert tone played in his ears. His carry weight was at 59.6/59 \u2013 and was now highlighted in yellow.\n\nJackson felt the strain quickly. Just a moment ago, he could have kept walking forever. He was forced to take deeper breaths to relieve his muscles; he had to mentally drag his feet forward. Sweat beaded on his neck and forehead.\n\nShaka frowned at him. \"Jackson, are you alright?\"\n\nJackson grunted. \"Fine.\" He stopped for a moment. Shaka stopped with him, a confused look on her face. The rest of the tribe walked around them like a river flowing around a rock. They got a few looks, but no one said anything.\n\nJackson gathered his legs and jumped. He only got an inch or two up before he was dragged back to the ground. And he could feel it; a force was actively pulling him down. It felt like being on an elevator just when it started to rise \u2013 everything was heavier.\n\nJackson reached for another pack, adding it to his load. His carry weight jumped another point, but he didn't feel any change. He took another, and another, until bags and parcels were swinging from his shoulders and elbows.\n\nAnother satchel brought him to 65.3/59. The tone played again, louder, and the number flashed red.\n\nThe lead bars had attacked in force, but now they felt tied not just to his feet, but to his legs, arms, and back. Even his neck wanted to stoop. Jackson sucked in more air as his body tried to compensate.\n\nHe could still move, but it was like trying to walk underwater. He made as if to jump, but now he couldn't even get off the ground. The game was stopping him from jumping.\n\nHe dropped the satchel, and his number flashed back to yellow. The burden lifted. He straightened out, blinking in relief.\n\n\"Mother Earth, boy. What are you doing?\"\n\n\"Uh...\" Jackson thought about trying to explain, and then he just shrugged. \"Don't worry about it. It's a matter of Shakhan.\"\n\nShaka gave him an odd look. \"...then I'll just not ask.\"\n\nJackson reloaded Shaka's sled, though he kept one of the water bottles for himself. He felt very thirsty. Once he'd gotten his carry weight in the black, he recovered with his usual video-game speed. They started walking again, now much further back in the tribe's long train. Shaka pushed hard to retake lost ground; as spirit guide, she was supposed to be near the front.\n\nJackson did some number crunching in his head. Yellow seemed to come immediately \u2013 that was the penalty for going overboard. Red had taken a little bit more. What number would make sense for a programmer? Something nice and round.\n\nHe nodded to himself. Ten percent excess was the limit. 10% of 59 was 5.9 - added to his maximum capacity, that made 64.9. He'd turned red after jumping over that gap. He didn't have it down precisely, but he was sure that was the number.\n\nIf his weight capacity worked one way, would it work the other? He hadn't noticed changes before, when he wasn't carrying as much around \u2013 but then, he didn't have his Strength as high. If he raised his carry weight capacity to the point that he only used a small fraction of it, he might get a speed bonus. In other words, if he dumped a lot of points into Strength, he might stand to gain Agility as a side effect. He would have to run tests.\n\nThey walked quietly for a time, Shaka with her sled, Jackson hauling the trunk. He took another sip from the water bottle and offered it to her. She waved it off, and he tied it to his belt.\n\nThey made the front of the train. Yukutan and Boonta were off to their left. Shaka and the elder exchanged nods. Jackson and Boonta exchanged stares. Shaka drifted to the side of the column, away from the father and son pair; Jackson followed.\n\n\"Jackson,\" Shaka said.\n\n\"Yes?\"\n\n\"I heard your conversation with Chaki last night.\"\n\nJackson heaved a sigh. \"Seriously?\"\n\n\"I set that campfire so the three of us could speak in private, but my tipi wasn't that far away. You were loud.\"\n\n\"...alright,\" Jackson said. \"I guess you probably have some advice you just can't wait to get off your chest.\"\n\nShaka shook her head. \"Not in particular.\"\n\n\"...then why bring it up?\"\n\n\"It weighted on my conscience,\" Shaka said. Her eyes studied him through the strands of her grey hair. \"What was said was very personal to you. It is better that you know that I know. That way, when we speak, we do so on even terms.\"\n\nJackson was surprised. Shaka hadn't eavesdropped, really. It would have given her leverage to come at him knowing more than what Jackson thought she knew. She wanted him to stay with the tribe; she wanted him to fight the iron men. If he and Chaki were on the rocks, she might use his past to try and keep him around some other way.\n\nBut she didn't. She threw that away because it railed against some sense of fairness. Just like she'd told him she wanted him to fight the iron men upfront. Just like she'd told him she'd intentionally set him up with Chaki. She was just that honest.",
        "Jackson looked away. \"You're a good person, Shaka.\"\n\n\"So are you.\"\n\n\"If you heard what I said last night, then \u2013\"\n\n\"Be silent.\" Shaka waved a hand dismissively. \"As a spirit guide, I have decided to make my own judgments about the character of those I choose to shelter, rather than trust the wild thoughts of passion-filled young men.\"\n\n\"My thoughts aren't...\" Jackson made a face. \"...wild.\"\n\n\"You are in a time of growth and change,\" Shaka said. \"It is only natural to have doubts. Doubts are healthy; they stop you from doing stupid things. But doubts also deeply color your opinion of yourself. You should know better than anyone not to take the word of an overly self-conscious young man at face value.\"\n\n\"So, what you're telling me,\" Jackson said, \"is that I can't judge myself to be a piece of shit, because I'm a piece of shit?\"\n\nShaka fixed him with a gaze that made Jackson want to crawl under a rock. \"Do not speak to me with a foul tongue, boy.\"\n\n\"...sorry.\"\n\nShaka nodded, accepting the apology. \"And don't put words in my mouth. What I'm telling you is that constantly living from the inside-out will only cause you grief. It is important to seek balance in the inner world, but that itself must be balanced with the outer world.\"\n\n\"I thought you didn't have any comments.\"\n\n\"None on your talk with Chaki, no,\" she said. \"We are having a conversation about you.\"\n\n\"So...um...\" Jackson tapped the sides of his legs with his fingers. \"What did you think about that, anyway?\"\n\n\"It was a talk you two needed to have.\"\n\n\"...that's it?\"\n\n\"Ah,\" she said, \"you seek the comments you so quickly declared you did not wish to hear.\"\n\n\"I never said I didn't want to hear them.\"\n\n\"You did not say it,\" she said, \"but you said it.\"\n\n\"What does that mean?\"\n\nShaka sighed. \"Despite my advancing age, I am neither blind nor deaf. I can hear the tone of your voice. Your mood is written by the way you speak and move, not the words you use.\"\n\nJackson looked down at himself as if, by doing so, he could see his own body language. His feet stepped across the grass in rhythm. He glanced back to her. \"Most people tell me I'm not expressive.\"\n\n\"That's what they tell me, too.\"\n\nJackson smiled. He liked the idea that they were similar. \"I didn't know.\"\n\n\"Will you still marry her, once we reach the mountain?\" Shaka asked.\n\n\"...I don't know. Not right away.\"\n\n\"I see,\" Shaka said. \"You should be sure to make that clear to her. It is acceptable to extend the terms of your promise, if you feel hesitation. Marriage should not be a forced thing.\"\n\n\"Cool.\"\n\n\"How is it cold?\"\n\n\"Uh...that's an expression,\" Jackson said. \"Something that's cool is good.\"\n\n\"What an odd manner of speaking. Why would ideas be compared to the temperature?\"\n\nJackson shrugged. \"I don't know. I didn't make it up.\"\n\n\"I suppose not.\"\n\n\"Hey, something I wanted to ask you.\"\n\n\"Ask.\"\n\n\"I haven't actually seen Hanta yet,\" Jackson said, \"but I busted his bow while I was fighting the rattok. Is there some way I could replace it, or make it up to him?\"\n\n\"Hmm.\" Shaka rubbed her chin. \"Unfortunate. You might help him hunt, and allow him to take your share of the game until he is satisfied. Otherwise, a gift that surpasses the value of what you ruined would be appropriate.\"\n\n\"How about an essence crystal?\"\n\nShaka slowly looked at him. \"You have another?\"\n\n\"Two, actually.\"\n\n\"Keep them safe,\" she said.\n\n\"They're in my pocket right now. They aren't going anywhere.\"\n\nShaka nodded. \"No, they aren't. I sewed those pockets. Now then \u2013 we can use that crystal. Only those with magical talent can charge and drain essence from these.\" She indicated the uncut rubies dangling from around her neck. \"But anyone can use an essence crystal. They are less refined, yet more accessible. They can't be recharged, but it's a valuable property nonetheless. I will enchant a spiritual shield for Hanta, and we can use the crystal to power it.\"\n\n\"Is that common?\"\n\n\"I often make such shields,\" she said. \"They are needed for vision quests, and are often taken by warriors to battle as a symbol to protect their spirits against the hatred of enemy combatants. It is very rare that I imbue them with a crystal; I can count the times I have done it on one hand.\"\n\n\"What's the point of enchanting it with runes if someone can't use the magic without a crystal?\"\n\n\"Symbolism is important, Jackson,\" she said. \"Faith, belief \u2013 these things can protect in ways that magic cannot.\"\n\nJackson raised an eyebrow. \"If you say so.\"\n\n\"This shield will be still more useful - it will deflect evils both physical and spiritual. That will more than repay your debt.\"\n\n\"Thank you, Shaka. You're really going out of your way for this.\"\n\n\"I won't have a guest of mine land himself in trouble,\" Shaka said. She smacked his shoulder. \"That said, you ought to be more responsible with other people's possessions. Hanta used that bow for many years with great success.\"\n\n\"Sorry.\"\n\n\"Don't apologize to me, apologize to Hanta.\"\n\n\"Yes, Shaka.\"\n\n\"That is what I wanted to hear. Now, we have work to do.\"\n\n\"We do?\"\n\n\"Runes, of course.\"\n\n\"Uh...\" Jackson glanced back over his shoulder. A column of dust churned by hundreds of feet and thousands of hooves rose into the blue sky behind them. \"I can't just log out here.\"\n\n\"We will review what you have learned so far,\" she said.\n\nJackson chewed on his lip a bit. \"I haven't really worked on it much. I've just been storing them away.\"\n\n\"And what good does that do you?\" Shaka asked. \"You need to be able to draw them at a moment's notice. Not every situation will give you the luxury of vanishing into the nether and crawling through them like a slug. I thought your experience in the ruins made this clear.\"\n\n\"Well, yeah. You're right. But \u2013\"\n\nSuddenly, there was a wooden cane in Shaka's hand. Where had she gotten that? \"Draw the symbol for storm.\"\n\n\"Now?\"\n\n\"I'm not getting any younger,\" Shaka said.\n\nJackson thought hard. It was the rune for lightning, which was easy enough, combined with another shape.\n\nHe did his best to recreate it. A shimmering grey line trailed his finger, lagging behind his attentions. It floated in front of him, moving as he walked forward. That was interesting. He seemed to be able to either keep the runes floating near him, or leave them where he drew them, depending on -\n\n\"Wrong,\" Shaka said. A sharp smack whipped the air as the wooden cane struck his wrist.\n\nJackson winced and drew his hand back. \"What the hell?! That hurt!\"\n\n\"Every time you get a rune wrong, someone dies,\" Shaka said. \"That is what you should be thinking.\" She drew the correct symbol for storm, and then released her essence, causing the rune to vanish. \"Now, do bison.\"\n\n\"Uh...umm...\"\n\nJackson ended up with a sort of four-legged squiggle. His wrist was rapped on again, right on the bone. He cringed away from her.\n\n\"Wrong. Like this.\"\n\n\"...I almost had it.\"\n\nJackson was still protecting his hand, but that didn't stop her from landing a thumping blow on his side. He grimaced and rubbed his waist. \"Almost,\" she said, \"will get someone killed. Magic does not grade your performance. Wrong is wrong. Draw it correctly, and then draw the rune for animal.\"\n\nJackson accumulated painful welts at an alarming rate. For some reason, slaps and strikes that weren't immediately life-threatening hurt more than horrible flesh wounds. She was hitting hard enough to take his HP down a sliver. At least he regenerated the health back faster than she was knocking it down.\n\n\"Wrong, wrong, wrong!\" Shaka said. Jackson shielded himself from a barrage from the wooden cane. \"Weren't you paying any attention at all? What a stupid husband Chaki will have.\"\n\n\"You gave me hundreds of runes!\" Jackson protested. \"How was I supposed to memorize all of them?\"\n\n\"That isn't my problem,\" she said. \"It's yours. You shouldn't have taken them on if you weren't prepared to embed them in your heart. If you want to save your hands, you had better start to use your brain. Until then, I will beat your offending digits until they are so swollen they can't draw the runes that you so clearly do not deserve! Now! Draw a tree, and get it right!\"\n\nThat one Jackson remembered, and for a minute, he was spared the cane.\n\nHe got the next one wrong. Shaka showed no mercy.\n\nTheir lessons were a painful experience. But for some reason \u2013 even though his wrists and hands stung like crazy \u2013 by the time they were finished, Jackson found himself smiling.\n\n<center>****</center>\n\nThey passed two days on the road.\n\nBy day, Jackson recited runes with Shaka, and at night, he logged off and crammed them into his files. Each daily visit to his computer was greeted by a flood of notifications, alerts, unread emails, blog updates, hardware tech, new game releases, and the headline stories of current events.\n\nJackson ignored it all. For the time being, Earth consisted only of his computer and his room, a functional space designed to assist his endeavors in Isis. There was nothing he missed in the real world, nothing he pined for. He definitely wanted to get his hands on the new P-Cop full-fiberoptic channeling boards that promised to increase his CPU speed, but that could wait. He was learning magic.\n\nIn-between getting his hands bruised by Shaka's cane, Jackson walked with Chaki on the road. They talked. And they talked. And then they talked some more.\n\nJackson never realized how much there was to say until he met someone who lived an entirely different life. For Chaki, the ideas of quarks, electrons, and atoms were alien. The fundamental forces of nature were freakish outgrowths of interacting invisible particles that may or may not have existed. She accepted gravity easily enough \u2013 she could test that by dropping something on the ground \u2013 and Jackson suspected she liked the idea that everything pulled together. The electromagnetic and nuclear forces, however, were going to take some doing.\n\nIn turn, Chaki told him about the spirits of the land, the legends of her people. Her own race was frankly termed the People-Under-The-Mountain; their spirits were named just as literally. There were creatures in the earth: the Holder-of-Rocks, the Weaver-of-Rivers, the Creekling, and the Grass-Giver. There were many flighty sky spirits: the mighty Thunder Hawk, the Rain-Wringer, and the Dust-Runner, which together created storms; another was the Wind-That-Brings-The-Cold, the entity responsible for winter. And there was his namesake, too, the White Bison, Tatanka Ska, a representation of the link between the People and Mother Earth.\n\nThe One-Above-The-Sky was the creator of the world, and husband of Mother Earth. Just below him was the Sun, guardian of the skies, and then Shakhan, who was the child of the Earth and the Above, and the gatekeeper of the Beneath. Shakhan Herself gave birth to the angels by mating with the Sun, and the angels, in turn created the spirits. However, Mother Earth alone granted life to mankind.\n\nSpirits and angels had free will; some served the One-Above or Shakhan. A few particular spirits, like the White Bison, were sacred, and often worshipped in order to seek out their blessing. Others, like the Wind-That-Brings-The-Cold, were neither good nor bad, but simply existed in rhythm with Mother Earth.\n\nAngels and spirits which had turned against mankind \u2013 for perceived insult or of their own fault \u2013 were called demons. Among them were Blights-Of-Life, Bringers-Of-Fever, and Black-Death-Walkers.\n\nHer world was a strange place \u2013 fantastic in its stories, random at times. Most of their legends involved chance encounters with powerful spirits, and the resulting effects on the People, as well as their relationship with Shakhan, the One-Above, and Mother Earth. Some stories related struggles between brave warriors and demons that came to strike down tribes.\n\nJackson was particularly fascinated by the Death Walkers. They were beings of immense strength that could only be defeated when a spirit guide used her magic to enhance the abilities of a warrior. They were described as hulking, erratic things, more insectoid than human.\n\nJackson compared her stories to the three major religions on Earth \u2013 Christianity, Judaism, and Islam. They both saw the similarities; her stories shared the idea of angels and demons, as well as a sort of primary creator, though her own beliefs deviated the most.\n\nThey were walking in the center of the train of the Windseekers. Packed sleds and dragged tipis crowded around them; most walked with their horses. Palla led his family's small herd with Smallgrass at the head. Shaka and Landri lingered nearby; they were talking with another woman, a tall lady that reminded Jackson of Malaki. Maybe it was her mother. \n\nHe watched the ground at his feet. By the time they reached it, the grass was already pummeled to the ground by the people and horses up front. The prairie was hardy, though. The tribe passed up and down along this creek many times over the season, following the bison. The grass always grew back within a week, and even faster after rain.\n\nTheir conversation about gods and spirits wound down. They were quiet for a time.\n\nEventually, Chaki spoke. \"You told me many of your world's legends, but you people are divided up amongst them. Which of them do you believe in?\"\n\nJackson shrugged. \"I'm not really affiliated. I mean, it's like you said. They're pretty much the same when you get down to the bare bones. Worship the creator, do good deeds, don't be a jerk. If you're good, you're rewarded when you die. If you're bad, you're punished.\"\n\n\"Hold a moment,\" she said. \"Even if they are all related, surely you accept some form of the story. Doesn't one stand out to you?\"\n\n\"My family never went to church.\"\n\n\"Church?\"\n\n\"Churches are special buildings where Christians worship,\" Jackson said. \"The religions all have buildings like that.\"\n\n\"A building for worship?\" Chaki started laughing. \"Mother Earth is everywhere. The Sun is always in the sky; the One-Above is always with us. You don't need to go anywhere to worship.\"\n\n\"Well, it was a gathering place for people to conduct the ceremonies they thought were important. I mean, we're all going to the mountain for the Meet, right?\"\n\n\"That is because the tribes gather to interact, and the spirit guides need to go to where Shakhan lives.\"\n\n\"Well, it's like that,\" Jackson said. \"Churches are symbols. People feel closer to God when they're there. It's like a shelter from the world.\"\n\n\"You sound like you know an awful lot about it for someone that isn't affiliated.\"\n\n\"I'm just trying to explain the mindset.\"\n\n\"Ah,\" Chaki said, \"I have it. You believe in something else - your science. Atoms, and electrons.\"\n\n\"I don't have to believe in reality,\" Jackson said. \"It's just there.\"\n\n\"So is the sun.\"\n\nJackson raised an eyebrow. \"The sun is a massive fusion reactor. Atoms collide and form larger atoms, which releases energy. That energy reaches us as light and heat.\"\n\n\"Always circling back to your atoms,\" she said.\n\n\"I'd rather trust things that can be measured than invisible water spirits,\" Jackson said. \"Clouds condense from moisture in the air. Water falls when that moisture reaches a saturation point. It gathers in low places and flows downhill. That's all rivers are.\"\n\nChaki nodded sagely. \"Oh, yes, I see now. Do your atoms make up the soul, as well?\"\n\n\"...I don't know,\" Jackson said. \"If they do, we haven't proved it yet. We haven't proved there is a soul at all.\"\n\n\"What do you think essence is, Jackson? How can magic work if you have no soul with which to forge your runes?\"\n\nJackson had no answer to that.\n\nChaki's eyes glinted. \"I've backed you into a corner.\"\n\n\"Well, magic doesn't exist on Earth,\" he said. \"But...\"\n\nBut maybe it did. Emil Mohammed had found some, apparently \u2013 enough to create Isis. What the hell was that guy thinking, anyway? Sending out Isis chips to winners in the competition?\n\n\"But it does,\" Chaki said, \"or you wouldn't be here in the first place. Isn't that right?\"\n\n\"I didn't give you permission to read my mind.\"\n\nChaki looked smug. \"Perhaps the One-Above, or God, or whatever he is to be called, is responsible for both your atoms and the power of the spirit. Have you considered that?\"\n\n\"They don't have to be mutually exclusive,\" Jackson said, \"but the burden of proof is on the claimant.\"\n\n\"Then prove atoms exist.\"\n\n\"I don't have the equipment to do that,\" Jackson said. \"They're so small, so fundamental, that you can't see them with the naked eye. Their properties as molecules can be observed indirectly through chemical reactions of particular substances, and you can observe them directly with a strong enough microscope.\"\n\n\"A microscope is a tool used to see atoms, then?\"\n\nJackson tried to think of a way to explain a microscope to a person that had hunted bison all their life. Every idea that crossed his mind had five other things that required explaining, which all themselves needed explaining. He settled on keeping it simple. \"Yes. It's a tool to see very small things. Powerful microscopes can see atoms.\"\n\n\"Aren't microscopes themselves made from atoms?\"\n\n\"Well, yeah. Everything is.\"\n\n\"Doesn't that seem like cheating?\" she asked. \"Using atoms, which you haven't proved exist, to see if there are atoms?\"\n\n\"What else are we supposed to use?\"\n\n\"Magic,\" Chaki said.\n\nJackson opened his mouth to protest, then stopped when he saw the amused look on Chaki's face. \"Oh, har-har, very funny.\"\n\n\"You're so easy to tease.\"\n\n\"I'm a man of fine-tuned precision,\" Jackson said. \"Small bumps can throw me off more than earthquakes.\"\n\n\"Maybe you take yourself a little too seriously.\"\n\n\"You dare question the chosen warrior of Shakhan?\" Jackson said.\n\n\"The faithless wonder suddenly professes his belief in the guardian of the Beneath,\" Chaki said. \"Why am I not surprised?\"\n\n\"Someone's getting uppity.\"\n\n\"Maybe you need to teach me a lesson.\"\n\nTheir eyes met. Chaki wore a tight smile.\n\nHe felt their bond flash. He was learning to ignore it when he didn't need it; he didn't want to be in Chaki's head all the time. It tended to prod him when a strong mood struck her.\n\nRight now, she was smoldering like little red coals at the bottom of a fire.\n\n\"...maybe,\" Jackson said.\n\n\"Is that all?\"\n\n\"What do you want me to say?\"\n\n\"I think you know,\" Chaki said. \"I'm a smart girl, right? You said you knew what sort of words smart girls liked.\"\n\n\"I do.\"\n\n\"I'm not hearing any.\"\n\nJackson glanced to where the ladies were talking; they were engaged in their conversation. Palla was riding Smallgrass, fiddling with leather straps, trying to get something out of a pack. He looked back at Chaki. \"There's something more serious I wanted to mention to you.\"\n\nChaki's coals faded slightly. \"Alright. Go ahead.\"\n\n\"About our...marriage,\" Jackson said. \"I don't \u2013\"\n\n\"Stop.\" Chaki had raised a hand. \"Stop there.\"\n\n\"This is something I have to say, Chaki.\"\n\n\"Wait until we reach the mountain,\" she said. \"If you mean to delay things, make a decision then.\"\n\n\"Why?\"\n\n\"I want to see your world, first,\" she said. \"I want to experience that with you. Tonight, if that's fine.\"\n\nJackson rolled his shoulders. \"I was thinking of doing it tonight, anyway.\"\n\n\"...I haven't been sleeping well,\" Chaki said. \"I've been feeling all wrung-out, but I'm not tired. It's the strangest thing. I thought a trip to your world might help - something to exhaust me.\"\n\nJackson didn't like the idea that she was stressed, but that sounded less like a mild case of insomnia and more like what had happened to him. \"I told you Shakhan took my need to sleep, right?\"\n\n\"You did.\" Chaki's expression shifted as she put it together.  \"You think it's affecting me?\"\n\n\"It might, through our bond,\" Jackson said.",
        "\"Ah. I'm...not sure what to make of that.\"\n\n\"It's like I said.\" Jackson sighed. \"This magic is changing us in unpredictable ways. I'm sorry, Chaki. You can doze off, though, if you just relax. But...look on the bright side. You have a lot more time on your hands, if you want it. It's given me plenty of time to practice with the spear.\"\n\n\"Maybe I'll join you,\" she said, \"if it persists.\"\n\nShe seemed to think a moment. Suddenly, the coals of the bond glowed white, as if about to catch fire. Jackson whipped his head at her, thinking something was wrong.\n\nHer eyes were as heated as the bond. \"You know,\" she said, \"come to think of it, not needing to sleep, barely needing to rest at all...it gives a woman quite a bit of spare time.\"\n\n\"Yeah,\" Jackson said, keeping his tone cautious. \"I guess it might.\"\n\n\"Plenty of time for practicing.\" Chaki's footsteps closed the gap between them as they moved forward along the caravan. Her hand twined under his arm. \"With spears.\"\n\n\"...what kind of spears are we talking about?\"\n\n\"The kind with a strong shaft.\"\n\n\"I thought we were taking it slow.\"\n\n\"Slow...emotionally,\" she said. \"But not physically, surely?\"\n\n\"I've created a monster,\" Jackson muttered.\n\n\"I think it was more like you discovered the monster already inside of me,\" Chaki said. \"If I can't get to you with words, I'll just seduce you into marriage.\"\n\n\"Uh...\"\n\n\"It's a good technique. That's how Shaka caught her husband.\"\n\nJackson had the strangest image of himself dressed in a tiger suit and sitting in the middle of a cage. A Chaki dressed in a safari outfit snapped a lock shut over the cage door. She unrolled a whip from her sleeve.\n\n\"Catch?\" Jackson asked.\n\n\"Mm-hmm.\" Chaki's hand slipped down over his waist. She rubbed in little circles where his thigh met his torso. She pressed into his side, leaning her body into him as they continued to walk forward. \"So, you've gotten better with the spear, thanks to Shakhan, yes? Will you show me how to use it?\"\n\n\"...maybe.\"\n\n\"Aww...just maybe?\" Chaki grinned. \"Maybe you need more convincing.\"\n\n\"Chaki, you're coming on a little bit \u2013\"\n\n\"Dirty?\" Her words fell into his ear. \"Sexy? Hot?\"\n\n\"Uh...\" The reptile portion of Jackson's brain bit at his frontal lobe as Chaki's breasts squeezed around his arm. \"Yeah. Those. Words.\"\n\n\"I like that you like this,\" she said. \"You're best when you focus on one thing. That should be me. I want you to think about these things when you think about our relationship. Think about all you'd give up,\" she said. Her tone got more serious. \"You just have to show a little faith in me, a little trust. You know you can trust me.\" And then her voice morphed back into the seductress. \"And then you'll be able to make me squeal all the dirty, nasty things you want.\"\n\nHer hand whispered across the front of his pants, brushing his erection. Jackson swallowed. Damn. She does learn fast.\n\nBefore he could rally a response, Chaki left his arm and stood straight. His left side felt chill without her body heat. She trotted along, head high. \"But, if you insist on taking it slow, then...\"\n\nJackson adjusted his belt, trying to compensate for his hard-on. He felt the duel frustrations of discomfort and dissatisfaction. \"That was not nice.\"\n\n\"You shouldn't have raised your voice to me.\"\n\n\"...fair enough.\"\n\n\"And now that little reminder will sit there for a time,\" she said. \"I'm glad you taught me so much, Jackson. It's easy to pull you around.\"\n\n\"You're enjoying yourself, aren't you?\"\n\n\"A bit,\" she said. \"But you know...there's something else in the bond, inside the steel and the rust.\"\n\nJackson frowned. \"What?\"\n\n\"Molten iron,\" she said. \"Lava, sitting in you like a furnace. I like it. I think you ought to use it more.\"\n\n\"So you're going to taunt me intentionally?\"\n\n\"Oh yes,\" Chaki said. \"I'll drag it out, and then...I'll be punished for being such a tease. Don't you like that idea? I do.\"\n\nJackson's erection told him that he liked that idea very much, but, after raising such hell with her just a few days ago, he couldn't admit it. It felt a little too close to the patches of rust. So he said nothing.\n\nChaki's gaze lingered on him a little while longer, and then she made her way back toward Palla.\n\n<center>****</center>\nWhen the sun dropped below the horizon, and the sky turned pink, Yukutan called a halt to their trek. Camp was assembled with the ease of those who spent a lifetime practicing. Tipis blossomed out of the prairie like flowers of wood and leather.\n\nChaki helped her mother and Palla set up their own tipi and water the horses. After a brief meal, she joined Jackson in attending to Shaka's tent.\n\nThe spirit guide hadn't bothered to start a fire; it was a warm night. A sticky moisture that promised rain hung in the air. They sat cross-legged within the dark confines, Jackson doing the work of explaining where they were going.\n\n\"I see,\" Shaka said. \"When will you return?\"\n\n\"It'll probably take at least a few hours,\" Jackson said. \"Maybe more. I need some serious computer time.\"\n\n\"I'll leave it to you,\" Shaka said. \"I trust...\" Shaka's gaze flicked to Chaki, then settled back on Jackson. \"...that nothing untoward will occur while you are alone?\"\n\nChaki looked away and began to study the tipi's ventilation flaps very carefully. \n\n\"Give me a little credit, Shaka,\" Jackson said. \n\n\"You're telling me to make a loan to the man that can't remember a single rune and breaks the bows of his friends. Of course.\"\n\n\"Why do you wound me so?\" Jackson said.\n\nShaka snorted. \"Go. I shall work on Hanta's shield until your return.\"\n\nShaka leaned over to open her trunk, and withdrew a wooden ring that had a strip of leather pulled tight around its sides, creating a sort of drum. A pattern was already stitched on the front \u2013 several runes of great physical and spiritual protection. Chaki recognized that the sentences were only partially completed, but even this early it was something to admire. Shaka set up runes like everyone else set up their tents.\n\n\"Thank you for doing that, Shaka,\" Jackson said. \"I appreciate it.\"\n\n\"Why I indulge you, Jackson, is a mystery,\" she said, \"though I suppose you did save my life.\"\n\n\"How much is that worth, exactly?\"\n\n\"Not that much.\"\n\nJackson made a face. \"How about an essence crystal?\"\n\n\"No.\"\n\n\"Come on. I know you've got a few stashed back there.\"\n\n\"I'm already teaching you magic and helping you make up your debt to Hanta.\"\n\n\"Please?\"\n\n\"Stop pestering me.\"\n\nChaki wondered at their banter. It was true that she herself had been more casual with Shaka, lately; but then, she had come into womanhood and grown more independent. It was natural for her to move from being Shaka's student to being her equal as her skills leveled out with the spirit guide's experience.\n\nBut Jackson \u2013 he was informal. Too informal. One didn't joke around with the spirit guide. You listened to the spirit guide, nodded your head, and followed her instructions exactly. When she asked for something, people competed to obey to earn her approval. She was revered; she was their direct connection to Shakhan, Mother Earth, and their very livelihood. She was the force that kept the tribe in balance with the world and in the good graces of the One-Above. She was the power that kept demons at arm's length; she sensed and ended problems of the spirit before they could take root.\n\nBut while Jackson, as Tatanka Ska, was a member of the Windseekers, he was still very much a stranger. He did not appreciate the social nuances of Chaki's people. And yet, for that very reason, his bluntness carried an honest, refreshing sort of informality that seemed to bash aside the rigid habits that no one else wanted to break.\n\nShaka was not shy about correcting those she deemed had overstepped their bounds. She was sharp with Boonta; she could be incisive with Drana. Shaka had very high expectations of Chaki; when she was younger, she had been wacked into shape almost every day. Shaka had even criticized Malaki's behavior straight to Malaki's mother \u2013 in relative privacy, yes, but with a brutal directness.\n\nDespite all this, she did not correct Jackson. It was not to spare his feelings; of that, Chaki was sure. The reason she let him slide was an enigma.\n\nJackson gave a long, drawn-out sigh. \"Well...if you say so. I guess I'll survive the trials of the Tower of Babel somehow.\"\n\nShaka rolled her eyes. \"I long for the day when your whining vanishes from my ears.\"\n\n\"Ouch. That was cold.\"\n\n\"Next time,\" Shaka said, \"don't run around behind my back. And memorize your runes, for the sake of Shakhan.\"\n\n\"I don't know,\" Jackson said. \"I'm kinda getting used to the cane. It's good exercise for you, right? Gotta work those biceps.\"\n\n\"What upon Mother Earth is a bicep?\"\n\n\"This muscle,\" Jackson said. \"Here, see?\" He flexed his arm. For a moment, he stared at the muscle, frowning.\n\nShaka missed his expression. \"So my continual punishment of your fingers is in fact a method for me to train my arm strength. How generous of you to avoid studying on my behalf. Such a twisted explanation of poor behavior I have not heard in all my years. Make improvements, or I shall teach you no more.\"\n\n\"Hey, come on!\"\n\n\"I'm serious, Jackson,\" Shaka said. \"You are incredibly intelligent. I expect more from you. I expected more from you yesterday. Now hop to it.\"\n\nChaki could see the debate inside Jackson's head just by watching his face. It was the small things \u2013 his eyes moving as he thought, his nose twitching in annoyance. But at the end of it, his answer was simple. \"Yes, Shaka.\"\n\n\"You're improving already,\" she said. \"Now, leave me to Hanta's shield. Your trip is of importance, yes?\"\n\nJackson nodded. \"We'll be back soon. Game Menu.\"\n\nChaki finally understood why he kept saying that strange phrase. The game within Jackson's magic appeared before him at that command, the wood-colored panels backed with blue writing. He used a finger to manipulate the screens, then hit a button that said 'log out'.\n\nThe world went black. Chaki lingered in the darkness. Her arms and legs felt numb; they barely felt at all. She tried to ask for Jackson \u2013 but she wasn't sure if her lips moved. She couldn't hear her own voice.\n\nAnd then the darkness was gone, and she was lying on something hard.\n\nChaki climbed to her feet. She was in an enclosed space; a room. The walls were the color of pale leather, and the floor seemed made of cut wooden boards. There was a strange sort of rectangle that was filled with more rectangles. It took her a moment to think of what they were \u2013 books, stacked on shelves. Jackson had described this to her.\n\nWhat struck her about the space was the smell \u2013 or rather, the lack thereof. She drew a breath through her nose. No dew, no grass, no dirt, no leather, no horseflesh, no sweat. It was almost sharp in her nostrils, the sense of absolutely purified nothing.\n\nHer gaze turned. There was a sort of platform set into the walls, and on top of it was a blinking flashing thing that seemed made out of metal and wood. It had various colorful parts that were all connected by thick strings. A panel filled with bright light sat open. A word on the front of it had the characters g-o-o-g-l-e.\n\nThe gift of language that the bond with Jackson granted her was an odd thing. She could recognize that the word was a word, and she simply knew that the word was made of letters from an alphabet. But it was as if her brain could only comprehend these things as ideas. She couldn't have written the alphabet if she tried. She could break down and comprehend, but not create.\n\n\"Welcome to my home. I guess.\"\n\nChaki turned. Jackson was lying on what looked like a raised square of blankets and clothes. He had a red helmet tucked under his head \u2013 though it was nothing like any helmet Chaki had ever seen; it was bright red, and had a reflective shine. He was wearing strange clothes \u2013 a short white shirt, with the sleeves cut high on his arms, and baggy blue pants.\n\n\"It's an odd place,\" Chaki said. \"Is that where you sleep?\"\n\n\"Yeah.\"\n\nShe pointed. \"What's a gogg-lay?\"\n\n\"Google,\" Jackson said. \"It's a way to search the internet for specific information.\"\n\n\"Of course,\" Chaki said. \"You did say it was big. So, is this long contraption your computer?\"\n\n\"You got it.\"\n\n\"I imagined it bigger, somehow.\"\n\n\"Usually they're smaller than this. Mine's a heavy-duty version. And still under construction, technically.\" Jackson got up from his bed and sat down at the seat in front of the bright panel. A light shined, and something floated in midair in front of him \u2013 a series of buttons that held the characters of the alphabet, along with other symbols and numerals. His fingers flew across the pad. \"I'll just be a second. Just need to confirm where we're going.\"\n\nChaki nodded. \"Jackson.\"\n\n\"Hmm?\"\n\n\"Is there something wrong with your arm?\"\n\nJackson looked over his shoulder. \"...what makes you say that?\"\n\n\"When you explained what a bicep was, you had this strange look on your face.\"\n\n\"...yeah.\" Jackson looked at his lap. \"The passive statistics are...changing me,\" he said. \"It's not a big difference. But it's there.\"\n\n\"What do you mean?\"\n\nJackson turned slightly in the chair. \"It's bigger. Not by much, but my muscles have grown. I probably wouldn't have noticed it, but I never had much of a bicep.\"\n\n\"It only makes sense,\" Chaki said. \"Isn't it a good thing, besides?\"\n\nJackson mulled it over for a moment. His nose twitched. \"I guess. Just...disconcerting.\" He turned back to his device.\n\nChaki continued her inspection of his living space. There was a strange opening cut into the wall, a portal that gave her a glimpse of a set of a grey color that was different from the room. \"What is that?\"\n\n\"Window,\" Jackson said. \"It's made of glass, a material that you can see through. That's the next building over.\"\n\nChaki walked up to the window and reached out with her hand. Her fingers smacked something solid where there should be only air. Closer inspection revealed the hint of light reflecting off the invisible material. \"That's incredible. Is it magic?\"\n\n\"No,\" Jackson mumbled. Chaki glanced up at his half-answer. He was bent over his computer, involved in his buttons and screens. They were flashing and changing at an alarming pace. He didn't seem fazed by the speed; his took it all in with an even, almost bored gaze.\n\nChaki moved to the bookshelf. She read a few of the titles. A Brief History of Time: 100th Anniversary Edition. Where the Red Fern Grows. Neuromancer. 1000 Video Games To Play Before You Die. And then there was one that really sent her mind reeling: Principles of Optical Systems Engineering: The Bridge to Fully Realized Quantum Computing. And another freakishly incomprehensible title: Mechanical Prosthetics and Augmentations: The Leading Edge of Transhumanism.\n\nShe wondered about the History of Time. How could time itself have a history? She drew the book from the shelf. Its companions flopped over into the empty space left behind, shattering the neatly-packed row. She threw a worried look over her shoulder \u2013 disturbing the nothing-neatness of Jackson's most personal space seemed like some sort of violation.\n\nShe needn't have bothered. He was still hunched over his device, concentrating with as much focus as when he'd practiced with the spear. He's rather cute when he does that.\n\nShe perused the contents. There was a section titled Original Introduction by Carl Sagan. It seemed as good a place to start as any. She noted that he had two names, like Jackson. It seemed it really was their convention to name people like that.\n\nShe flipped the pages with thumb and forefinger to the right spot and set to reading.\n\nWithin a few paragraphs, Chaki felt overwhelmed. He asked enormous, mind-bending questions, one after the other, like shots from bows thumping into the skin of a bison. What is the smallest thing that exists? Can time flow backwards? How could the orderly modern world be formed at all from the chaos of an unformed beginning? Why is there a world at all?\n\nDespite that wonder, Chaki was instinctively compelled. It was as if, as the man posed each question, she was a child, longing to hear the answer. It was such a strange feeling, holding this leather-tied packet of razor-thin wooden strips, sucking in information from runes written not for magic, but to communicate to another person.\n\nShe read on, and she came to the end of the introduction. Her eyes widened as she took in the words.\n\nThis is also a book about God...or perhaps the absence of God. The word God fills these pages. Hawking embarks on a quest to answer Einstein's famous question about whether God had any choice in creating the universe. Hawking is attempting, as he explicitly states, to understand the mind of God. And this makes all the more unexpected the conclusion of the effort, at least so far: a universe with no edge in space, no beginning or end in time, and nothing for a Creator to do.\n\nChaki reeled back from the pages. He was implying so many things at once her brain had to take them in turns. The nature of the universe was the nature of God; its very nature seemed to point out that God had no place in the universe. Science is the attempt of man to understand the mind of God, and thus far, it had come up rather short.\n\nBut within the clinically faithless words, Chaki recognized something. This Carl Sagan was a man that was absolutely unsure if there was a God or not. There was a modesty to the way he phrased himself, how he couched never in absolutes, but in compromises. He hinted the universe and God and science were as spiritual and sacred as could possibly be \u2013 but that there simply wasn't proof of anything.\n\nChaki moved into the first section written by the main author, Stephen Hawking. And there she found something even more astounding. Within three paragraphs, he mentioned the North Star \u2013 the title of her bond with Jackson. Her title.\n\nHe discussed how men of earlier times postulated that the Earth was round. They had several arguments; one of these was that the North Star \u2013 which lay over the pole of the rotating Earth, as Jackson said \u2013 appeared lower in the sky in southern regions than in northern regions. This made sense only if the observers were in fact standing on the surface of a sphere, and as they traveled down along it, the star thereby seemed to dip lower and lower to the horizon.\n\nMen had used simple observations to discern the nature of the Mother Earth. It was so obvious, but so incredible. Her people had no North Star, no Polaris, so perhaps they had an excuse - but still, she found herself wondering why the People-Under-The-Mountain did not ask these questions.\n\nThe answer came to her quickly. The Windseekers were well off, for the time being, but the prairie was not always so forgiving, especially in winter. When survival rested on the killing of bison before winter, one simply lacked the time to wonder about such things. \n\nChaki felt a strange swell of pride. This was the foundation of all of Jackson's knowledge; all the knowledge of his people. She was named after this \u2013 something that was clearly of great importance to him. He'd gone on for hours about science. He'd chosen this name for her knowing all of this.\n\nChaki had been worried since his outburst. She tried to cover this up with confidence, with womanliness. She had tried to distract him. She might have been a little successful, but the core of him was not so easily swayed. Jackson was comforted after she had decided to persist in her affections, for the time being, but he did not fully believe that he was any different because of that. He thought so little of himself that it was scary. She had begun to fear that he would push her away in some sort of self-sacrificial foolishness."
    ],
    "authorname": "Over_Red",
    "tags": [
        "dream drive",
        "virtual reality",
        "sci-fi",
        "fantasy",
        "action adventure",
        "video game",
        "video game",
        "cyberpunk",
        "romance",
        "thriller"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dream-drive-ch-05"
}