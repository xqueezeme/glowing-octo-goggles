{
    "title": "A Shepherd Afield Pt. 01",
    "pages": [
        "Author's Notes:\n\n'A Shepherd Afield' is a continuation of 'A Shepherd in France' which continued the story of 'The Shepherd of Ashburn Court'. Minimal effort is made in this tale to explain the backstory so please read the other stories first.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 1\n\nThere was something about working with your hands, taking raw materials and building something new, seeing a need go from conceptual design to physical reality that satisfied the soul like nothing else. Well, it was certainly the second most spiritually satisfying activity Ben could think of at the moment.\n\nHe sat in Trish's kitchen taking in his handy work. He'd spent the better part of September installing a beautiful new bay window over the kitchen sink, new cabinetry with granite countertops, and French doors leading out of the kitchen to a brand new deck complete with a built in barbeque grill and a large built in hot tub. The deck hadn't been part of his original plan but he'd discovered the old one had some rotted decking.\n\nIf he was completely honest with himself, and he was compelled to be, he could have left the existing deck but he wouldn't have been able to add the hot tub and cooking center... and he needed the distraction of the renovation work.\n\nThe press hadn't left him alone since they'd tracked him down to his neighborhood. His daring rescue of the five young women from the slavers in Cannes, France followed by the televised unveiling of the four foot tall brass sculpture of him, in all its anatomically correct, naked glory caused such a firestorm in the media that the public hadn't lost interest yet.\n\nWorst yet were the constant references to him as a hero.\n\nBen ground his teeth and surged up to his feet once more. He glanced around to see what was left to do but the job was done. His agitation was making his nerves buzz. He had to keep his mind from going down that path. Something he'd learned in his sessions with Dr. Granger.\n\nHe'd cancelled his appointments with the good doctor when he'd had... a difference of opinion over her method of treatment. She claimed she was making progress with the hypnotherapy but all he knew was he was becoming miserable to live with at home. After the sessions he'd have terrible mood swings and his temper was almost violent. He couldn't put his family through that. He'd had... words with the woman and hadn't returned to see her since that blowout. Hanna was terribly disappointed in him and refused to talk to him until he came to his senses. That hurt more than he thought possible. He realized his mood was beginning to swing down. Gotta keep busy! He considered going downstairs to at least spec out the next reno the house needed.\n\nHe heard the front door open and a voice called out.\n\n\"Ben? Are you still here?\"\n\n\"In the kitchen Trish,\" he replied, a feeling of relief washing over him as he was no longer alone with his thoughts.\n\nThe red head bounced into the room loaded down with grocery bags. Her strong, hard muscles stood out on her arms and he let his eyes roam over her fit body. Trish was a serious exercise junkie with energy to spare.\n\nHe caught the glitter of diamonds and the flash of the large ruby on the ring he'd presented her with when he returned from Paris. It was her constant companion and a reminder of how much she meant to him.\n\nShe set the bags down on the new island and grinned as she took in the new work surfaces once more.\n\n\"Holy fuck this is one gorgeous kitchen Ben!\" she gushed.\n\nHe returned the smile. \"Glad you like it!\"\n\nShe looked around and suddenly realized his tools were all packed away. \"You're done?\" she said with an odd tone in her voice.\n\n\"Yes, all done,\" he returned as he watched her expression.\n\nShe bit her lower lip as she nodded taking in the sparkling new fixtures and appliances. She racked her brain to think of something else he could fix but it all looked so good! She just wasn't ready for him to not be around every day. Then she recalled something Ben said earlier and she smiled. \"You mentioned you had ideas for the basement?\"\n\nBen smiled as he realized what Trish was up to. \"Yes, I did but that's going to have to wait. The contractors are finally going to be available to help me with Barry Walker's house next week.\"\n\nTrish pouted looking up at the big man. She'd managed to distract him from the renovations a number of times over the past few weeks and the sex was so damn good! She started to get that tingly feeling once more. She began to put away the groceries distractedly.\n\nBen washed his hands in the sink then moved to help her. Unable to resist Trish occasionally brushed up against him with her hip, ass, or breasts. He caught her grinning as she turned away after a very blatant grope. He saw the perishable foods were stored away so he decided the rest of the groceries could wait and he knew what she was after. As she walked past the island he stepped up behind her and pinned her to the cabinet, his hard bulge pressed tight against her ass. She gasped as he ground against her and squeezed her tits in his hands.\n\n\"OH FUCK!\" she gasped.\n\nHe gave her no time to prepare as he reached down to yank her running tights and panties down. He pushed her over onto her stomach on the granite work surface and her feet left the ground. He gave the taught muscles of her ass a quick slap to ignite her pleasure then squeezed the muscular orbs in his hands as she moaned. As that sensation poured through her he dipped down to stroke her pussy roughly with his tongue again and again.\n\n\"GEEZUS! FUCK! FUCK!\" Trish jolted and her legs shot outwards but she had no purchase. When Ben drove two fingers deep into her pussy her mouth shot open in a silent scream and her body shook.\n\nBen undid his pants with his free hand and stood up quickly. He pulled his fingers out and rubbed her juices over the thick head of his cock. She tried to look back but he was already pressing forward forcing her wide open with his hot flesh.\n\n\"OH GOD YES!!!\" she groaned as she tried to push back. He had her pinned to the island and she shivered at the feeling of complete submission.\n\nHe'd slid in a third of his length when he reversed direction. She whimpered with need and once more tried to pull him inside with her legs as she wrapped them around him. This also had the benefit of opening her wider. Ben pulled out to the tip, feeling her hot wetness trying to suck him back inside. Her pussy was dripping wet from her excitement and her legs trembled. He dipped the head in and out of her opening and she squealed.\n\n\"FUCKING TEASE! GIVE ME THAT- AAAAAAAAA FFFFFUUUUUUCCCKKK!!\" she screamed as he slammed forward, driving his cock deep inside and slapping her ass with his pelvis. He drew back and began to drive himself into her pussy, hard. He knew Trish liked it rough and fast. And with her, he did too.\n\n\"Mother-fucker-so-good-Uhhh!-FUCK!-Ooo!-Fuck!-Fuck!-Fuck!\" she chanted with each stroke of his cock. Her ass was beginning to turn pink from the repeated slaps as she pinched and tugged her nipples roughly.\n\nBen slid his hands up her back under her tight spandex top, forcing her down on the granite surface. He felt her tremble at his touch and she reached back to pull at his arms to direct his hands to her big fake tits. With her constant exercise she'd burned off most of the body fat so her late husband gifted her with some rather large implants. She enjoyed teasing Ben with her abundant cleavage but she really enjoyed his hands on them. He knew what she liked so he gave it to her. He roughly rolled and tugged on her thick nipples and her gasps told him she was almost there. That was good because so was he.\n\nTrish shoved a hand down under herself and rubbed her clit in circles as she moaned. Ben had bounced her mound against the hard surface of the island but she needed this extra stimulation to really set off the nuke this orgasm was becoming.\n\n\"UHHH!-OHHH-GONNA-CUMMM... BENNNNNnnnnnnn!!\"\n\nHe sped up his thrusts and pounded Trish's pussy with his thick cock which swelled in preparation of his release.\n\n\"FUCK! OH FUCK! YES! THAT'S IT! YES! AAAAAIIIIIEEEEEE!!!!\" her screams got louder and higher in pitch as the blast wave rolled over her body.\n\nBen slammed himself deep one more time and felt himself jetting stream after stream of hot cum deep inside her. He held her tight against his body and basked in the glow. He wasn't worried about her getting pregnant. His sperm count was extremely low, for all intents and purposes zero, and Trish was on the pill. She had been ever since Tina's return from France with the news of her miracle pregnancy.\n\nHe released her nipples and massaged her back muscles and she shuddered and shook through her orgasm. He was surprised how long this one was lasting for her. It brought a smile to his lips. She was so in touch with her body and it responded for her like a finely tuned sports car. The flip side to that was its frequent need to be... fueled with aggressive sex. When her husband died in the plane crash she'd found relief from her long drought with Ben and had turned to him ever since. He grinned as he thought of how often recently she'd managed to distract him from his work. He was a little concerned that she might try to maintain that frequency. With the other demands on his time that really wasn't going to be possible. He would always make time for her when he could as she had his heart but his time wasn't infinite.\n\nBen mischievously rubbed his thumb over her puckered asshole and Trish's body clenched as it spiked through a second series of releases.\n\n\"Ben! No more... I'm done... Shit! That was... fucking awesome!\" she gasped out.\n\nHe grinned at her coarse language. She was an intense woman and her language was often peppered with curses, shouts and growls. He pulled his semi-hard cock from her and gave her ass a playful spank causing her to shudder through one more aftershock.\n\n\"AH! You dirty fucker,\" she whimpered as she sagged against the stone countertop. She turned her head to look at him over her shoulder and he saw the love in her eyes which took his breath away. He suddenly scooped her off the counter into his arms and kissed her deeply. She squealed then purred as the kiss went on.\n\nFinally he pulled back and Trish's eyes had a dreamy look in them.\n\n\"You aren't really mad at me, are you?\" he teased.\n\nShe quirked a crooked smile at him. \"Livid. Your only chance at redemption is to do it again.\"\n\nHe grinned, kicked his pants off and hoisted her over his shoulder as she screamed. He grabbed his pants from the floor and headed for the stairs up to the bedrooms as she squealed and giggled in protest.\n\nAs Ben walked down the hall to the base of the stairs Lily entered the front door and froze at the sight of Ben's and Trish's naked... parts. Ben moved his pants in front of himself and blushed at the young woman's shocked expression. He turned to hustle up the stairs and Trish squeaked when she saw Lily standing there staring at them.\n\n\"What are you doing home so early!\" Trish called out.\n\n\"The prof called in sick so the lecture was cancelled,\" Lily called out as they disappeared down the hall.\n\nBen headed directly for Trish's bedroom and pulled the door closed behind them. He walked into the bathroom and set Trish down on her feet. She gently pummeled his chest as she playfully scowled at his deeply blushing face.\n\n\"Lily got a good look did she?\" she quipped as she kicked off her pants and panties.\n\nHe nodded with a frown. Trish pulled his shirt up and off and dropped it on the counter on top of his pants. Ben helped her off with her own top and followed her into the shower. She got the spray going on the surround heads.\n\n\"Ben, I haven't told you enough how much I love this shower!\" she purred as the hot water massaged her skin.\n\nHe grinned and worked the soapy lather over her body.\n\n\"God! I love your hands on my body more,\" Trish sighed.\n\n\"That's good because I love touching you,\" he said, voice rumbling with his need.\n\nTrish's eyes flashed up to his as she heard his desire. Her smile got just a little wider as she turned to face him and tilted her face up to accept his kiss.\n\nBen brushed her soft lips with his and felt her tremble in reaction. He sucked her lush lower lip between his and caressed it with the tip of his tongue. Trish gasped and thrust her tongue into his mouth as her arms went around his neck. He grabbed her ass with his hands and lifted her up against his chest causing her to squeak into his mouth. His cock was already hard as iron and rested against his stomach squeezed between their bodies. She moaned feeling the heat from him pressing against her clit. Trish pulled back from the kiss to look into his eyes, her own need consuming her.\n\n\"Ben! Fuck me!\"\n\nHe lifted her slowly, dragging her clit up his cock, feeling her twitch and shake until he was positioned with the fat head being kissed by the puffy lips of her dripping pussy. She struggled to force herself down on him but he held her ass in his iron grip and gently bobbed her on the tip.\n\n\"You're such a fucking TEASE! FUCK ME!\" she growled.\n\nBen slowly lowered Trish over his cock, loving how her inner walls caressed his flesh and how they trembled as they squeezed him tight. He took his time while she desperately tried to rush the process. Finally his cock was fully inside her and he pulled her tight against him, rocking against her clit.\n\nTrish's legs jolted as her pleasure spiked and she cried out.\n\n\"Motherfucker! Oh geezus that feels so good!\" she moaned and gasped.\n\nHe began a slow withdrawal but this time he kept her tight against his body to maintain the pressure on her clit as she rose up.\n\n\"OH SHIT! OH SHIT! MOTHERF- OH GOD!\" Bolts of pleasure were stabbing through her and she couldn't think straight. She felt like she was approaching her release but it just wouldn't tip over the edge.\n\nWhen the tip of his cock was once again being kissed by her pussy lips he surprised her by slamming her down on his cock. Her release was immediate and intense. She gurgled incoherently as wave after wave of almost violent bliss screamed through her nerves.\n\nThen he began to lift and drop her on his cock which still had the rigidity of an iron rod.\n\nTrish was unable to speak. Nor could she participate in the movements as her muscle tone was lost in her body's explosive release.\n\nTen more strokes and Ben's orgasm crested. He held the panting woman against his chest and rode the waves of his pleasure until they ebbed and calmed.\n\nTrish rested her cheek against his shoulder and shivered gently as his softening cock slipped free of her.\n\n\"Oh fuck... that...was almost... too much,\" she sighed as she tried to catch her breath.\n\n\"I've managed to satisfy the insatiable?\" Ben chuckled.\n\n\"Mmmm... don't get cocky. HAHaha- Ohhhhh!\" Trish's laughter turned into a moan as her body protested her jolting by sending sharp spikes of sensation through her sensitive bits.\n\nBen rinsed them both off under the spray then turned the water off. He set Trish on her feet and held her until her legs would support her. Then they dried off.\n\n\"I have to apologize to Lily,\" Ben said with a frown.\n\n\"I'm sure she wasn't too upset to see your big cock swinging free,\" Trish grinned.\n\n\"I shouldn't have been walking around in your house without my pants on,\" he grumbled. \"What if your son had come home early? It was damn irresponsible of me!\"\n\nTrish reached up and took his face between her hands.\n\n\"Ben! Stop being so hard on yourself! We were just having a little fun. No one got hurt! Relax,\" she finished with a smile.\n\nHe nodded then kissed her palms.\n\n\"No! No more... tonight! You are too damn sexy and you'll get me all fired up again!\" Trish protested as she pulled her hands away from Ben.\n\nHe grinned and put his clothes back on. Trish walked out into her bedroom and slipped her robe on. She looked back at Ben with a pout. \"So, I'm not going to have you all to myself during the day anymore.\"\n\n\"Not for a little while at least. There is a lot of work that needs to be done on the Walker place. That doesn't mean I can't stop by occasionally to enjoy that awesome new hot tub I installed,\" Ben responded with a smile. That got a grin from the red head.\n\nThey went downstairs and back into the kitchen where Lily was sitting doing her homework. The remaining groceries had been put away as well.\n\n\"Lily, I am so sorry you had to see that. I wasn't thinking and I got a little carried away...\" Ben said contritely.\n\n\"It's OK, Mr. Shepherd.\" Lily was the only neighbor who continued to call him that no matter how much he protested.\n\n\"No, I promise to be more careful in the future.\"\n\n\"We have company again in the court. Thought you should know,\" Lily said, changing to a more comfortable subject.\n\nBen rolled his eyes. \"Someone we know or someone new.\"\n\n\"I haven't seen this car before. Sporty little red coupe. I think there's a woman inside based on what I could see of her rather large hair. She's parked outside of your place.\"\n\nBen sighed and nodded to the young woman. Likely another reporter. He'd refused each and every request for an interview and he'd been called by guest coordinators from all of the major night talk shows and morning news shows. Unfortunately his silence didn't have the effect he'd hoped for. As there was a definite lull in titillating gossip and rumor at the moment the media was keeping the story alive of the 'mysterious hero'. He'd been photographed and videoed while going about his business and almost came to blows with a news camera crew who blocked his car in a parking lot of a renovation supply store. Luckily the customer parked in front of him left allowing Ben to drive forward and away from the reporters.\n\nHe needed to talk to someone about it as he was quickly losing his patience with their invasive behavior.\n\nBen picked up his tool box and with a final kiss for Trish at her front door he pulled on his jacket and headed out to walk home. Sure enough there was the red sports car. As he got closer the driver's side door opened and a long shapely leg stepped out followed by its twin. The woman getting out of the car was tall and curvy and wore a stylish red jacket over a crisp white blouse showing a daring amount of cleavage, and a tight black pencil skirt. Lily was spot on with her observation of the woman's hair. It was a rather large hairdo but not unattractive. It certainly drew the eyes up to her face. She walked up to him on the sidewalk. Dark chocolate color skin, lovely brown eyes, deep red lipstick on full lips which were smiling now, revealing her brilliant white teeth with just a slight part between her front teeth.\n\n\"Mr. Shepherd? I'm Naomi Klassen, Culture Couture Critic.\"\n\nBen set his tool box down and shook her offered hand. He noticed the softness of her skin, the firmness of her grip, the expensive manicure, and the sizeable wedding rings on her left hand. Her outfit was designer and her car was a classic so there was some serious money invested here.\n\n\"How can I help you?\" he said hesitantly, glancing at his home which was only steps away.\n\n\"I think the question is how we might help each other. You've been the center of attention for quite a few weeks. Based on your continued reluctance to speak to the media I can only assume you'd prefer to be left alone. I apologize for seeming to be one more intrusion in your life,\" she said calmly and smoothly. She had a very soothing voice but Ben's nerves kept him on high alert. It was no surprise to him that he was reluctant to just blow past her as just another nosy reporter. Here facing him was his Achilles heel and maybe the media had finally caught on to that fact.\n\n\"Seeming to be. How will your pitch be different?\" he asked.",
        "\"Our voice is very much self-aware. We comprehend the nature of our audience and the impact our dialogue has on the lives of those we speak for. You would be fully involved in the process of telling your story, ensuring the truth is front and center and preserving as much of your privacy as can be done now that you've reached this level of... notoriety. Celebrity is a cruel mistress. We can work with you to limit your exposure,\" she smiled. \"In your case perhaps a more accurate target would be to redirect attention away from your over exposure,\" Naomi suggested.\n\nBen squirmed under her gaze of frank appreciation.\n\n\"I'd prefer to be completely ignored,\" he muttered.\n\n\"Yet the public has seen much and hungers for more after hearing of your heroism.\" Ben scowled and Naomi's keen eye caught that reaction and filed it away. \"The phrase about nature abhorring a vacuum applies to the public's desire for information about people they have hoisted up onto a pillar.\"\n\nBen's expression was bleak as he contemplated the no win situation he was being cornered in.\n\nA car swung around the circular court and stopped next to the curb beside them.\n\n\"Ben, is everything alright?\" Rochelle asked as she shut her car off.\n\nHe looked over and saw his neighbor looking at him from her car's open window.\n\n\"Hi Rochelle. Yes, this is Naomi Klassen. She was suggesting she might be able to help me limit the public's attention.\"\n\n\"Naomi? Naomi Grant?\" Rochelle gasped as she recognized the woman with Ben. She stepped from the car.\n\nNaomi turned her face completely towards Rochelle and her expression froze. \"Rochelle Jameson?\"\n\nBen's eyes moved back and forth between the two women. \"You two know each other?\"\n\nNaomi quickly turned to face Ben and her smile was back in place but there was a nervous quality to it.\n\n\"Yes, we went through College together. We had some mutual friends-\" she began when Rochelle's barking laugh cut her off. The shorter woman moved next to Ben and looked up at Naomi.\n\n\"You slept with my boyfriends.\"\n\nBen's eyebrows went up.\n\n\"Yes, that wasn't a very bright moment in my life. I was suffering through some pretty bad self-esteem issues. I'm terribly sorry for my past behavior and for any pain I caused you at the time,\" she said with a sincere tone.\n\nRochelle was still looking at her with a scowl but she accepted the apology as gracefully as she could. \"Klassen?\"\n\nNaomi smiled and seemed to relax a little. \"I finally got married about a year ago. How about you?\"\n\nRochelle looked at Ben then back to the woman. \"I'm Rochelle King now. Widowed. I have a 21 year old daughter and an 18 year old son.\"\n\nNaomi gave Rochelle a sympathetic look and saw Ben was beginning to fidget. She had to bring the conversation back to him. She needed his story. It would be a huge feather in her cap if she could get the exclusive.\n\n\"I was telling Ben that the media house I work for, Culture Couture Critic, could help defuse the media frenzy with a controlled and discrete delivery of his story,\" she said with a smile.\n\nBen's head twitched back at the idea of sharing his story with strangers.\n\n\"I just want to be left alone. Can you make them do that?\" he grumbled.\n\nThe tension was back. \"I don't think anyone would be able to put the genie back in the bottle and as long as the mystery remains people are going to want to know. Your best avenue back to some sense of normality would be to deliver enough information to quench their hunger sufficiently. We could do this for you and protect you from being hounded by the other media outlets... if we had the exclusive,\" she said carefully.\n\nRochelle smiled. \"There she is.\"\n\nBen looked to her as she turned her eyes to him.\n\n\"Naomi needs the exclusive. That would give her career a significant boost if she landed an exclusive with you considering your refusal to speak with anyone in the media.\"\n\n\"So you think I should maintain my silence?\" he asked his friend.\n\nShe looked at him in surprise. Rochelle hadn't expected him to put such faith in her. She felt incredibly flattered and that pleasure showed in her smile. She placed her hand on his arm as her face warmed up. Naomi looked a little peeved.\n\n\"I think that's a decision you need to consider a little more carefully. Maybe speak with Gabriella as well. She's always had a level head for important decisions like this. Naomi may have a point about controlling the information being delivered. How much editorial control you would have over the 'story' is still a question she needs to answer.\"\n\nBen nodded to Rochelle. He looked back to Naomi. \"I'm going to follow Rochelle's advice on this and take a little more time to consider the options. If you have a business card I'll let you know if I choose to give an interview. That's the best I can do for now.\"\n\nNaomi pulled a white card from her jacket pocket and handed it over to Ben. \"Thank you Ben. Please feel free to call me any time with your decision. I hope we can work with you on this.\"\n\nBen shook her hand once more and she held it out to Rochelle who only hesitated for a second before she gripped the woman's hand. With a final smile at the two of them Naomi walked back to her car and drove away.\n\n\"Thanks for stopping Rochelle. This whole situation is a mess,\" he gave her a hug and she grinned up at him. \"How are you doing? You're home early today!\"\n\nRochelle's smile faded. \"I had to come home as the police are bringing Jayden back to the house. He's under house arrest and will be wearing an ankle monitor.\"\n\n\"What? What happened?\" Ben exclaimed.\n\n\"I didn't want to bring it up as you were going through so much when you got back from your trip, what with the adoption and your sessions with Doctor Evil.\"\n\nBen rolled his eyes. \"It's Dr. Granger. She's- she's not evil. Now about Jayden, talk to me.\"\n\nRochelle glanced down to the end of the block where a police cruiser was turning onto their street. \"Sorry Ben, I'll have to take a rain check. He's home.\" She patted his arm and rushed back to her car.\n\nBen watched her drive around the loop to her driveway and park. The cruiser followed her in and two officers got out. They helped Jayden out of the backseat and walked the sullen young man into the house behind his mother. Ben picked up his tool box and headed up his own driveway. He went into the garage and put away his tools.\n\nEntering his home from the garage he took a deep breath and his mouth immediately began to water. Tina had worked her magic again.\n\nHe walked into the kitchen and saw Tina moving around the kitchen with her usual efficiency. She glanced up as he entered and a smile flashed onto her lovely face. Pregnancy was really agreeing with her. She positively glowed with health which was a sharp contrast to the first month.\n\nThe diamond ring he'd given her when he proposed to her on the Eiffel Tower glittered and gleamed on her finger. He'd had it resized when he got home and she wore it constantly. They hadn't set a date for the wedding yet as she'd wanted him to finish his sessions with Dr. Granger. They had to readdress the date now that he'd stopped going. That was an outstanding issue.\n\nTina was supposed to be attending University this fall after taking some summer courses but with Ben's injuries and her pregnancy she decided to reschedule for the following year. That would give her enough time to spend time with their new baby.\n\nHer son Christopher was enjoying himself in Daphne's daycare though Tina didn't take him there every day. Speaking of which, Ben glanced at the clock. It was just about time to pick him up. As Tina looked busy he would do it. He walked over and gathered Tina in his arms. The petite woman tilted her head back and he kissed her tenderly. She trembled a little in his arms and once he pulled back her expression was dreamy.\n\n\"I'm going to go pick up Christopher,\" Ben said with a smile.\n\n\"Thank you Ben.\"\n\n\"Dinner smells amazing!\"\n\n\"I made lasagna, Penny and Karen's favorite.\"\n\n\"You're such a good mom!\" he grinned and she swatted his arm with a smile of her own.\n\nHe gave her another quick kiss and let her go. She quickly went to check on the garlic bread in the oven.\n\nBen left the house and walked over to Daphne's place where he could see three cars parked on the street. Parents coming to pick up their children from the daycare. He normally tried to avoid the other parents but he wanted to help Tina.\n\nHe walked into the foyer and sure enough three women were standing there waiting for their kids to get their coats and shoes on. He racked his memory to recall their names. Ellen, Heather, and... Dawn!\n\n\"Hi Ben!\" Dawn greeted him with a wide grin. Instantly the other two turned to beam wide, knowing grins of their own at him. Eyes roamed his body.\n\nHe sighed quietly. They were all aware of the damned bronze statue.\n\n\"Good afternoon Dawn, Heather, Ellen,\" he smiled graciously and their smiles got even wider.\n\n\"Picking up Christopher? He such a sweet boy! He gets along so well with my Sammy,\" Heather exclaimed.\n\n\"Daddy!\"\n\nBen smiled as the boy in question came barrelling into the foyer. Not quite running but faster than a walk, at sixteen months old Christopher was now able to get himself around with surprising speed. More of a controlled fall, he tended to stop himself by crashing against walls, chairs, and in this case Ben's legs. Ben scooped the little man up and gave him a hug and a kiss causing Christopher to giggle wildly.\n\n\"Where's your sweater?\" Ben asked and Christopher pointed back into the daycare.\n\nHe set the boy back on his feet. \"Well, go get it.\" Christopher tottered away.\n\nSammy was tugging on his mom's sleeve but she was staring at Ben, her mind lost in her fantasies. Finally she realized her son was there. She blushed, said her goodbyes and left with her son.\n\nEllen was next and then Dawn who was practically devouring him with her eyes. Then he was alone in the foyer and all of the other kids were gone. Daphne walked out from the back room and grinned at Ben. She came forward and gave him a warm hug.\n\n\"How goes the daycare business?\" he asked.\n\n\"It's a dream come true! The kids are wonderful! We haven't had any real problem cases and they all seem to get along. Christopher is amazing at defusing tantrums. He has such a positive effect on the others. Working with my daughters is wonderful! I don't know what you did and I don't really want to know but they are changed women. Calm, responsible, and really great with the children. I couldn't ask for more.\"\n\nChristopher arrived and Ben's eyebrows went up when he saw the glue on his sweater and his hands.\n\n\"How did you get glue on yourself?\" he said to the boy. He got a shrug as an answer.\n\nDaphne took the sweater and Christopher's hand. \"We'll be right back Ben.\" She led the boy back into the daycare to clean up and find the source of the glue.\n\nBen looked up to see Lisa and Lori approaching. The gorgeous red head twins were dressed up for going out dancing. They were masters of the quick change, able to switch from one look to another. Obviously they had plans tonight. Artfully applied makeup, hair teased up to hang down in ringlets, skin tight dresses that barely covered their asses, and strappy pumps on their feet, they looked good enough to eat.\n\nAn image flashed through Ben's mind. Lisa, flame red hair spilling over his mattress, clawing at the sheets and arching her back in ecstasy as his tongue explored the depths of her gushing pussy. Lori, gasping to catch her breath, her spent body glistening with sweat as she watched him bring her sister to a state of bliss. His pants began to feel a little tight.\n\nAs promised he'd rewarded the twins for their improved behavior the week of his return from France. The night had been... intense and he'd left them exhausted and satisfied. His intention was to wean them off so he'd insisted they go out and mix with their friends and find someone younger than him. They took his instructions as an order so for the past few weeks they'd happily spent a few evenings each week out at the clubs. He hadn't heard them ask for another 'reward' so maybe they'd found more suitable partners.\n\n\"Good evening Ben!\" the two ladies said in unison. It was a trademark move of theirs as was dressing identically to confuse their family and friends. Ben could detect the subtle differences and hadn't mistaken one for the other yet.\n\n\"Good evening Lori, Lisa,\" he said nodding to each. They loved that he never missed.\n\n\"You both look breathtaking tonight! Are you going out with someone special?\" he said, fishing for clues.\n\n\"Girls night out! The gang from University. We'll have dinner then hit the clubs and tease the poor little players,\" Lisa said with a grin.\n\n\"Oh! I thought you might have... met someone at one of the clubs... who you might be interested in dating,\" Ben said.\n\n\"Ben, you don't meet anyone worth dating at a club. Casual affairs only... if they're lucky,\" Lori said with a chuckle. \"The men you find in dance clubs are usually desperate little boys.\"\n\nHe stared at the twins. He liked clubs. Did that make him desperate? \"But... I like dancing.\"\n\n\"Will you come dancing with us tonight? It would be so nice to have a real man at the club for once,\" Lisa purred.\n\n\"Please Ben? I would love to dance with you.\" Lori moved closer until she was gently pressing against his chest. Blue eyes looked up longingly into his.\n\nBen felt her soft warmth against his body and felt his pants become just a little tighter. Then Lisa was leaning against him as well and he throbbed in response. She felt that against her thigh and her eye lashes fluttered as she gasped gently.\n\n\"Not tonight,\" he said, his voice deep and rumbling with his need. Lori trembled as she bit her lip and nodded.\n\n\"But you will come dancing with us soon?\" she asked.\n\nBen gently pushed the two ladies back and looked into their eyes. \"Yes, I'd like to go dancing with you. Just not tonight. Enjoy yourselves.\"\n\nWith hungry looks back at him they pulled their jackets from the closet and headed outside. He sighed. As Ben was alone he adjusted himself to make room in his pants and began to relax. Obviously his plans for the twins wasn't working out as he hoped. Maybe he'd get Tina's advice on this.\n\nChristopher came thumping back into the hall and Ben saw the glue on the sweater was mostly gone. The child's hands were clean at least.\n\n\"Sorry about the mess Ben. One of the kids must have pulled a glue bottle out and spilled some. Christopher dropped his sweater in it. It should wash out,\" Daphne explained. He gave her another hug then scooped up the boy and headed out. They both waved to Daphne who waved back with a smile.\n\nBen was ravenous when he smelled Tina's cooking once more from his front door. Tina poked her head out the kitchen door.\n\n\"Dinner's in twenty five minutes Ben. Karen texted that they were five minutes away,\" she said.\n\nKaren and Penny had fallen in love with having their own cell phones and texting had already become an obsession for both. The bastard that kept them as pets would never have allowed them access to a phone and Ben wanted to be able to reach them at all times. The memory of the squealing they'd done when they looked into his little gift bags and saw the cell phones still brought a smile to Ben's face.\n\nHe set Christopher on his feet and tugged the little sweater off. The child made a bee line for his mother who scooped him up with a huge grin. The sweater went into the laundry bin and Ben went to get changed for dinner. He took a quick shower and slipped on some comfy pants and a clean shirt. He heard the happy noise of the ladies returning home so he headed down the hall to greet them.\n\n\"Ben!\" Penny chirped and leapt into his arms. He caught her and gave her a hug. Karen was right behind her waiting for her hug so he set Penny back on her feet and gathered the blonde in his arms for a squeeze. Both were grinning widely.\n\n\"Dinner's almost ready so go get cleaned up,\" he said and they rushed past to their rooms.\n\nLucy was standing at the door smiling at Ben demurely. His breath caught as she looked so lovely in her new cream colored sweater and light grey jeans. When he'd sent her home from France with Tina all she had was a suitcase of threadbare clothes. Tina and the McKellan twins took her on a shopping trip downtown and outfitted her with clothes she could wear when she went to college.\n\n\"How was your day?\" he asked.\n\nShe stepped forward, wrapped her arms around him, and tilted her head back for a kiss. This was their daily ritual. When Ben told her he would take care of her it was with the condition that she would keep her heart open to finding love from someone closer to her own age. Tina helped Lucy enroll in an Audio Engineering course at the local college when they returned from France. If Lucy met someone there she was considering a relationship with she would simply tell him how her day was. If not she would take her welcome home kiss.\n\nBen's heart did a little flip as a guilty relief flooded through him. He'd grown quite attached to Lucy and would miss her terribly if she were to succeed in finding the love he'd insisted she seek. He took her face between his big hands and kissed her deeply, his emotions running a little too close to the surface today. The young woman moaned and clung tighter to his body as she sucked at his tongue.\n\nHe pulled back when he got control over himself. \"Sorry about that,\" he mumbled, embarrassed by his neediness.\n\nLucy's gaze moved from his mouth to see his unease. \"Ben, don't ever apologize for expressing your heart's desire. That was... wonderful! I look forward to repaying that kiss later.\" She patted his chest gently and stepped back to move around him to head down to the master bedroom to get ready for dinner.\n\nHe had some time before dinner so Ben made his way into the living room and sat in his favorite chair. He grabbed his tablet and reviewed the latest requests on the engineering boards. He answered a few questions, pointing people in the direction they needed to go and came upon a request from a mining company in Melbourne, Australia. They didn't mentioned their name but the nature of the request required some background hence the minimal disclosure of industry. The geographical location must have been a slip as it wasn't pertinent to the puzzle. He read some more and felt his curiosity spark. He could see the edges of a solution for this one. Just a hint but enough to tell him he'd have to work on it.\n\n\"Dinner's ready,\" Tina called out from the doorway.\n\nBen looked up and nodded with a smile. He quickly added a message to the board letting them know he'd taken on the request and would get back to them. Then he shut down the tablet and joined his family at the table in the dining room.\n\nPenny and Karen were sneaking in a few more texts before dinner. With a raised eyebrow Ben signalled it was time to put them away so into a pocket they went. He looked over at Lucy who was wearing one of her old shirts. It was perhaps a little too tight for her large tits and he could see by the obvious impressions of her nipple rings she wasn't wearing a bra. He felt a surge in his pants and shifted on his chair to ease the pressure. A small satisfied smile appeared on Lucy's lips indicating she'd noticed. Ben looked away and into the happy eyes of Tina who placed the large baking dish of lasagna onto the large trivets on the table. She went back into the kitchen and returned with fresh, hot garlic bread and everyone's mouth watered. Penny and Karen lifted their plates with glee and Tina served them some lasagna before she put a large portion on Ben's plate. Lucy was served and Tina took her portion and a small one for Christopher which she cut up fine and blew on to cool down.\n\nEveryone dug in and happy sounds ensued. Ben complimented Tina on her amazing cooking skills and the ladies joined in. Ben looked to his daughters. \"How was school today?\" He'd enrolled them in adult high school to help them get their secondary school diploma. What they did from there? They'd figure that out later.",
        "Penny grinned but Karen looked less enthused. Penny was absorbing knowledge as quickly as she could but Karen was resisting. She'd accepted her place in the world at the bottom of the social structure and either didn't want to try or was afraid to. Penny was the only reason Karen went to school at all. Ben was trying hard not to push but he was worried about her. She'd willingly fall right back into the role of subservient sex toy as long as someone else took responsibility for her wellbeing. Penny wanted more.\n\nBetween the two of them Penny was the one who indicated she wanted to downsize her breast implants from the oversized 1000cc ones she had now. Neither would be getting lip injections so their swollen lips would gradually return to normal.\n\nPenny regaled them with tales of what she learned that day and Ben listened with a smile. Karen occasionally added a comment or correction which gave Ben hope as it indicated she was at least paying attention in class.\n\nLucy was next and described the classes she had. Penny listened with fascination but Karen's eyes returned to her plate and she ate quietly. Ben shared a look with Tina.\n\n\"Oh, Ben! Ashley said that her car is indicating it needs servicing,\" Lucy said. Ashley was attending the university in town as well and drove everyone to and from in the BMW SUV Ben got when he purchased Tina's home and all its contents.\n\n\"Again? OK, it's time to trade that monster in for a less temperamental vehicle,\" Ben complained.\n\n\"What!?! But it's so pretty!\" Karen gasped in surprise.\n\n\"There are plenty of other pretty vehicles out there and they won't be such high maintenance burdens. Best to be rid of this one,\" Ben said. Karen burst into tears, leapt to her feet, and rushed out of the dining room to run down the hall to her room. They heard the door slam.\n\nBen sat with a stunned look on his face. \"What did I say? It's just a car.\"\n\n\"I'd better go see what's bothering her,\" Penny said quietly. \"Thank you for a delicious dinner Tina.\" Then she left as well.\n\nBen was racking his brain, trying to think of a reason for Karen to react so badly to his response about the car. If it meant that much to Karen he'd put up with the maintenance and keep the vehicle.\n\nLucy watched him struggling with the pain of hurting the young woman. \"Ben, I think Karen identifies with the car.\"\n\n\"WHAT?\" he gasped, confused.\n\n\"Pretty, but high maintenance. I think she sees herself that way,\" Lucy said gently.\n\n\"Oh my god! That's- that's not what I meant at all!\" he exclaimed. He pushed back from the table and walked down the hall. He knocked gently on the door of Karen's room. He heard crying.\n\n\"Come in.\" It was Penny's voice.\n\nBen entered and walked over to stand next to the bed. He tried to ignore the clothes scattered all over the floor. Karen was a slob.\n\nPenny was sitting on the edge of the bed holding Karen's hand. She had a sad look on her face too.\n\n\"I wanted you both to be perfectly clear about one thing. I was just talking about the car. I don't consider either of you to be a burden at all and I love having you in my family!\" Penny blinked as she suddenly caught on to why Karen was crying. Her mouth dropped in surprise.\n\n\"I told you in France that I would help guide you to a place where you can take control of your own lives. I never set a timeline on that. It will take as long as it needs to. I don't want either of you to feel pressured or that I don't want to support you. Your future was stolen from you and I'd like to help you get it back. What your future will be is up to you. I'll support you-\"\n\n\"I DON'T KNOW WHAT I WANT!\" Karen blurted out tearfully, her lips trembling.\n\n\"That's ok, Karen. That's why I just signed you up for completing your secondary school diploma. It gives you options. The decision of what to do after that can wait.\"\n\nBen knelt beside the bed and took their hands in his. \"Do you understand?\"\n\nPenny nodded and after a moment so did Karen. Ben smiled and kissed their knuckles. This brought smiles to their faces.\n\n\"Are we ok?\" Ben asked and received nods and smiles.\n\nHe stood and let himself out. As the door closed he heard Karen blurt quietly to Penny \"Is it wrong to be hot for 'Daddy'?\"\n\nBen put his face in his hands and walked back towards the kitchen.\n\n\"Is everything ok Ben?\" Tina asked as he entered the room.\n\nHe looked at her distractedly and nodded with a frown. \"Yes, I got that one issue cleared up but there may be another one. Let's just wait and see.\" He wished he could find Karen a boyfriend but that young man was going to have to pass his approval for dealing with the damaged young woman. He was far less worried about Penny.\n\nBen finished up his dinner and helped Tina and Lucy tidy up the kitchen. He spent an hour in his workshop reviewing the specs for that issue he spotted on the engineering board. He had the beginnings of an idea.\n\nHe came back upstairs and plunked himself in his chair in the living room. He called his contractor buddy Dominic Selleni and confirmed the equipment would be in place on Monday to excavate a large section of the back yard behind the Walker's place for extending the foundation. All the trucks for removing the soil were scheduled as well. The following day the forms would go into place and the day after that the cement would be poured into the forms. He would have the extended basement floor and foundation walls in place by the following weekend. They would remove the roof and the interior walls on the first floor of the existing structure. The bungalow was getting a full redesign and would end up a lovely two story home which would fit in with the remaining homes on the circle. His would be the only bungalow left. Once the demo was done the new framing could begin in earnest. As it was almost October, he didn't have much time to rebuild the main floor, add a second story, get a roof in place, and close it all in before the weather turned bad. Ben had hired his friend Dominic's company to put all hands on deck to push through this project.\n\nHe wasn't sparing any expense on the finish and fixtures. It was going to be a lovely home. He'd shown everyone the plans and Penny and Karen were completely blown away that this was going to be their new home. With five bedrooms upstairs and potentially two in the basement there was plenty of room for renting out to college students. Ben was keeping an option open for Lucy in case she wanted to rent out one of the rooms there if she were to find a boyfriend.\n\nBen yawned hugely and rubbed at his face. He felt a small hand on his wrist and opened his eyes to see Tina standing next to the chair.\n\n\"Come to bed Ben,\" she said softly. He nodded and let her tug him to his feet. He followed her down the hall. Penny's door opened and Ben stopped so she could get a hug and give his cheek a good night kiss. They said their goodnights.\n\nBen stopped in the next bedroom to give Christopher's forehead a kiss as the boy slept. Tina's eyes twinkled as she watched him. Karen's door, which was next to his, opened and she looked up at Ben as he stopped. He gave her a hug and she kissed his cheek. They said their good nights and her words from earlier resurfaced in his mind. He would ask Tina for her advice on this one. There was NO way he was taking either Penny or Karen into his bed. He was their legal parent now. That avenue was closed.\n\nInside his room he headed into the bathroom and Lucy was there with three toothbrushes ready for use. She was also completely naked. He took his toothbrush and turned to see Tina was now naked as well. They brushed their teeth together and Ben enjoyed the view.\n\nOnce they were done the ladies undressed Ben and put his clothes in the hamper as he climbed into bed under the sheets. Tina got into the bed while Lucy walked around to the far side and slipped in. They both snuggled up to Ben's side and he tenderly kissed each of them. They sighed with happiness.\n\n\"I need advice,\" Ben began and they waited for him to gather his thoughts.\n\n\"Lisa and Lori. They haven't shown any signs of moving on. I asked them to go out and have fun with their friends so they could meet and mingle with men but they're just hanging out with their girlfriends and teasing the men in the dance clubs. They aren't actively trying to find someone else. They want me to go out dancing with them.\"\n\nLucy subconsciously rubbed herself against Ben as she thought about the last time she'd gone dancing with him in France.\n\n\"Are you listening?\" he asked her and she jolted to a stop.\n\n\"Yes, sorry Ben,\" she said contritely and did her best to ignore the maddening tingling between her legs.\n\nTina grinned knowing how excited Ben made Lucy. She was a little wet herself but she had better self-control.\n\n\"Do they ask for your time frequently? Has it become troublesome?\" Tina asked sweetly.\n\n\"No... no it's been a while. Three, almost four weeks since the last time I was... with them.\"\n\n\"When you are with them, are they fulfilled?\" Tina asked.\n\nHe looked at her askance. He never talked about what he did with anyone to anyone else.\n\n\"I am not prying. I simply ask if they are ever dissatisfied with the time they spend with you,\" Tina explained.\n\n\"Oh, uh... no, they are usually very happy... afterwards. You understand they now require a very firm hand... I mean, I have to be rough- no, aggressive so sometimes they are exhausted by our time together but I believe they're happy... geez how do I talk about this discreetly?\"\n\nLucy was biting her lip and squirming next to Ben. She wanted what he was talking about so badly. Ben was her dream come true; strong, masculine, sexy as hell and a fierce dom when he wanted to be. When she needed him to be. She needed him very badly now but he wasn't finished talking.\n\n\"You give them exactly what they need and between the times you spend with them you give their lives structure. They sound like they have a working solution. They have discovered in themselves what Lucy and I discovered some time ago. A need to release control and allow another to lend a guiding hand. Yours is a wonderful hand as it can be trusted to protect and discipline fairly,\" Tina explained and Lucy let a moan slip out when she heard Tina mention discipline.\n\n\"I believe Lucy needs to be disciplined for interrupting our conversation with her lusty sounds,\" Tina said firmly but when Ben looked over at her he caught the twinkle in her eyes. Ben felt Lucy trembling on the mattress and her breathing was a little erratic. He smiled at Tina.\n\nBen growled and pulled Lucy to the centre of the bed but flipped her over onto her stomach. He dropped his body over hers and pinned her to the mattress under himself. Lucy gasped as she felt the heat and thickness of his cock growing between her ass cheeks. Tina was smiling broadly seeing how excited Lucy had become. She was caught by surprise and squeaked when Ben slid his fingers into her thick black hair and pulled her mouth to his to take a kiss.\n\nIt was a little awkward kissing Tina over Lucy's head but the auburn beauty was gasping with need and was trying to force her ass back against his cock when he pulled back from Tina's lips. The Korean woman gasped and stared at Ben's lips hungrily.\n\nRaising his ass Ben spread Lucy's legs wide apart and it was her turn to squeal in surprise. He reached down and slid a finger deep into Lucy's wet pussy and felt her readiness. He rubbed his wet fingers over the head of his cock then pushed it against her opening. There was only a small resistance then Ben felt the tip slip inside and he was driving himself deeply into her. She cried out his name when his pelvis slammed into her ass. He felt her pussy walls trembling against him all the way down to his tip.\n\nBen kissed Tina deeply again and she moaned into his mouth. He pulled back and she looked into his eyes.\n\n\"Lie back. Slide your hand under and touch her,\" Ben said to her.\n\nTina's eyes widened but she did as he told her. Lucy threw back her head and looked over at Tina. She wanted to reciprocate but Ben stopped her.\n\n\"Brace yourself against the headboard. Both hands,\" he said to Lucy. She looked back with a nervous expression but he ground himself against her ass as Tina rubbed her clit in circles and Lucy's eyes went glassy with lust. A shudder went through her body and her hands went up to the headboard.\n\nBen braced his body with his left arm and reached over with his right to cup Tina's wet pussy. He forced a finger into her and she cried out in bliss. Then a second and her mouth dropped silently. He began to pat her pussy gently, fingers driving into her wetness and heat. He timed these motions with a rocking of his hips until he was hammering Lucy's ass and pussy with short rapid strokes.\n\nBoth women were moaning and the wet slapping noises were getting quite loud. Ben could feel Tina begin to tremble so he slipped one of his wet fingers down and into her ass. That was all it took to push her over the top. She grabbed Lucy's pussy and her fingers slipped inside as she squeezed the woman's clit. Ben drove himself harder into Lucy as she screamed her release into the pillow.\n\nBen came hard as Lucy's pussy walls rippled against his buried cock and he rocked against the cushion of her ass.\n\nHe leaned forward and lightly kissed Tina's lips then kissed the side of Lucy's cheek as the young woman lay panting under his body. Ben pulled his cock from Lucy and she gasped and shook. He carefully slipped off the bed so he didn't lean on either woman and made his way into the washroom. He quickly rinsed his body in the shower. His cock was still at half-mast so he was reaching to turn off the hot water when he felt the exquisite sensation of lips on his cock. He looked down and there was Lucy pressing her lips against his stiffening flesh. She lifted the head and sucked it into her mouth. Then down her throat.\n\n\"Oh fuck! Lucy!\" Ben gasped.\n\nShe pumped him seven more times from tip to base and his cock erupted into her mouth.\n\nBen shook with reaction as Lucy milked him dry. Afterwards he lifted her to her feet and kissed her. She trembled in his arms and smiled when he pulled back. He shut off the water and they dried themselves.\n\nWhen they slipped back into bed Ben heard Tina gently snoring. He smiled and tucked her against him. She sighed contentedly. He'd have to finish his discussion with her in the morning.\n\nLucy snuggled in on the other side and they were out in minutes.\n\nChapter 2\n\nBen climbed upstairs from his workout feeling better than he had in a long time. The residual tightness from his injuries finally seemed to be gone. His muscles moved smoothly and he'd set a new lifting record for himself this morning. Not bad for an old fart he mused with a grin.\n\nIt was still very early but he heard activity in the kitchen and smiled. Tina making breakfast no doubt. He made his way to his shower and stopped when he saw Tina snuggled under the blankets. Lucy was gently snoring on the other side of the bed. So Penny was making breakfast?\n\nBen took his shower, shaved, and got dressed. Tina was just beginning to stir so he leaned over and gave her gentle kisses all over her face until she grinned, kissed his lips and pushed his face away.\n\n\"What time is it?\" she asked.\n\nBen glanced at the clock. \"It's not quite eight am.\"\n\n\"It's Saturday! Can't you people sleep in on the weekend?\" Lucy grumbled from the other side of the bed.\n\nBen chuckled and left the bedroom. Tina followed wrapping herself in her dressing gown.\n\nStepping into the kitchen he saw the counters were a mess. Karen was looking a little flustered as she struggled with something in the frying pan. Something that didn't smell very nice.\n\nTina reached the doorway and made a squeak noise as she saw what Karen had done to her pristine kitchen.\n\nKaren squeaked as she suddenly realized she had company. She moved the frying pan off the burner and stood facing them as she wrung her hands together.\n\n\"What- what are you doing?\" Tina asked in a shaky voice.\n\n\"I'm trying to make breakfast for everyone,\" Karen said, her voice beginning to wobble as tears appeared in her eyes.\n\n\"That's wonderful!\" Ben said and both women looked at him.\n\n\"It's not wonderful! I don't know what I'm doing and I've made a mess of things!\" Karen gestured wildly. Tina's eyes were taking in the mess and Ben saw her twitch.\n\n\"It's wonderful that you want to try. You wanted to surprise us?\" he asked and she nodded, her bottom lip trembling. \"So it didn't work out this time. That's ok. I'm sure Tina could teach you if you asked nicely... and helped her clean up.\"\n\nKaren looked at Tina who was still staring at the spilled pancake mix and the broken eggs on the counter... and floor. She nodded absently. Ben held his arms open for Karen but Tina held up her hand.\n\n\"Don't step in the egg!\" she squeaked out.\n\nKaren carefully stepped around the egg and crushed herself against Ben's chest as she cried.\n\n\"Shhhh, it's ok. Learning to cook takes time. Tina is an excellent cook as you know. Learn from her.\" He pulled back and wiped the tears from her cheeks with his thumbs. She looked up and gave him a small smile.\n\n\"Can I get a hug too?\" Penny said sleepily from the doorway. Then she saw the chaos on the countertop and Tina wiping up the dropped egg. Sleepy eyes popped open wide.\n\nBen gave Karen's temple a little kiss and gently pushed her to help Tina.\n\nPenny walked over and got a hug.\n\n\"I'm going to go speak with Ashley about her car,\" Ben said and Tina just shooed him away without looking.\n\nHe slipped on his boots and tugged his jacket on. He believed that the Beaumont's were early risers too so he walked over and gently knocked on the door. He looked up at the camera he'd installed and smiled. A moment later he heard the door open.\n\n\"Good morning Ben! This is an early visit for a Saturday!\" Ashley said beaming a wide smile at him.\n\n\"Good morning Ashley. I came to speak to you about your car,\" Ben explained.\n\n\"Your car, you mean,\" she corrected with a raised eyebrow. \"Please come inside. We were just sitting down to breakfast.\"\n\n\"Oh! I'm sorry, I can come back later,\" he said stepping back.\n\n\"Nonsense! March yourself in here and join us!\" Ashley ordered with a grin.\n\nBen stepped inside and kicked his boots off. He followed Ashley into the kitchen and sat where she pointed. Her girls, Madison and Savannah, were all smiles at seeing Ben and he said his good mornings to them. Joshua giggled from his high chair.\n\n\"Have you eaten?\" Ashley asked. Ben shook his head. \"How do you like your eggs?\"\n\n\"Please, you don't have to-\" he began and stopped when Ashley fixed her eyes on him. \"Fried, over easy, thanks,\" he finished and received a smile.\n\n\"You were saying something about the car?\" she said as she turned back to the stove.\n\n\"Uh yeah. I want to trade in the SUV for something else. Do you have a preference?\" he asked.\n\nShe spun around and looked at him. She hadn't thought she'd get to choose. Her face lit up with glee.\n\n\"A minivan! The Japanese one!\" she blurted. Her late husband hated Japanese cars. Hated Japanese anything. Basically he just hated.\n\nThe girls cheered and Ben's face froze. He recalled a certain fish tank on wheels he toured France in and wondered what it was about minivans that women adored.\n\n\"No?\" Ashley asked looking at Ben's expression.\n\n\"Hey, if you want a minivan you get a minivan. What color?\"\n\n\"GOLD!\" Madison squealed.\n\n\"BLUE!\" Savannah yelled.\n\n\"Red,\" Ashley said with a smile for Ben who was looking a little overwhelmed. \"Madison, get the tablet and look up the minivan I was talking about the other day.\"\n\nThe young girl popped up and dashed into the living room and returned with the tablet PC. A few taps later she showed it to Ashley who nodded then turned it to Ben.",
        "\"Ah! Yes, that's a very nice one. If you don't mind I'll swap cars with you until I can pick up one of these.\"\n\nAshley set a plate in front of Ben and he smiled at her, seeing the eggs, bacon and toast she'd made for him. \"Thank you!\"\n\nShe swatted his arm playfully. \"Oh please Ben, breakfast is the least I can do to repay your kindness!\" She put plates in front of the girls and one for herself and sat. They took each other's hand and Madison looked at Ben. He held out his hand to her and Savannah reached for the other one. Ashley's cheeks were going to burst from the smile she wore. They bowed their heads and said their prayer.\n\nEveryone tucked into their breakfast and the chatter was happy and light. Once they finished the girls scooped up the dishes, rinsed them and put them in the dishwasher. Ashley got her purse and they exchanged registration forms for the cars. Ben headed home, drove his truck back and put it in their driveway. They swapped keys and Ben drove the BMW back to his place. He'd head down to the dealership this morning.\n\nHe went back inside the house and heard the bustle of activity in the kitchen. He poked his head in and saw Tina standing next to Karen at the counter. The mess was gone and in its place were neatly organized ingredients for something they were making.\n\n\"Hi, how is it going?\" he asked.\n\nThe ladies turned to look at him with smiles. \"We're making cookies!!!\" Karen cheered.\n\n\"We are learning how to bake properly. Then Karen will help prepare dinner for tonight,\" Tina explained. Karen looked thrilled.\n\n\"Wonderful! I'm going to head down to trade in Ashley's SUV for a minivan she wants,\" he said looking at Karen to make sure she wasn't upset. She smiled at his look of concern and nodded. He gave them both a kiss on the cheek then headed out.\n\nThe BMW drove very well but he found the driver's cockpit to be a little too snug. He pulled into the car dealership and parked up by the front door. The business had just opened so there were no other customers and most of the staff seemed to be getting their coffees and starting up their terminals. As Ben walked inside he saw the minivan Ashley was talking about in the showroom and headed over to take a look at it. It wasn't quite as odd looking as the fish tank had been so it had that going for it. This one was white and wasn't the model with all the nice features. He'd have to ask what was available.\n\n\"Looking for a more practical family vehicle?\" said a woman's voice from behind him.\n\nBen turned and spotted two sales people having a quiet... discussion. Ben got the impression that the two were arguing over who got to serve him. The woman had spoken first. It was a cut throat business. She flashed a grin at her coworker then stepped forward with a smile as he turned to leave.\n\nHer face froze as she got a look at Ben's face. \"I know you!\" she said as her grin widened.\n\nBen groaned inwardly as he expected her next words would be about that blasted bronze statue!\n\n\"You're the boyfriend of Daniel's mother... Burt, no wait... Ben!\"\n\nHe took a closer look at the woman and she did look familiar. Then it came to him. \"Gwen?\" The last time he'd seen her he'd been picking up Daniel from his friends place and Gwen had lit into him about his lifestyle. She'd been wearing tight spandex workout clothes at the time and had a super buff body. The business attire she was wearing now hid those impressive muscles.\n\nHer smile went up a thousand watts as he remembered. \"Yes!\" She moved forward and they hugged. God! He was bigger and stronger than she remembered.\n\n\"How are you doing? You look amazing!\" Ben smiled. Her body felt just as hard and tight as it had been the last time they met.\n\n\"Thanks! I'm in a much better place than I was then.\" She rolled her eyes and smiled. \"I have a new boyfriend,\" she pointed her thumb over her shoulder at the man she'd beat earlier. \"He's a great guy! How have you be-\" she began then she got a closer look at the scar across his face and her eyes went wide. \"What happened?\"\n\n\"Had a disagreement with a knife wielding drunk,\" Ben shrugged.\n\nShe was taking in the scar on his chin and the nicks visible on his forearms. \"Geezus, he was pretty good with that knife.\"\n\n\"Actually he wasn't, thankfully. So, this is a nice van!\" Ben said deliberately changing the subject. She caught that blunt hint and moved with him.\n\n\"It's our best seller! Would you like to take a test drive?\"\n\n\"Sure!\" Ben said. He might as well make sure that it drove well. Ashley told him she'd drive anything but he'd make sure it was safe and comfortable at least.\n\n\"I'll get the tester and meet you out front,\" she said with a smile. Ben nodded and walked towards the front door.\n\nGwen walked towards the back and saw the secretaries looking past her at Ben and pointing at a monitor. Her boyfriend Troy was standing behind them with a grim look on his face. He glared at her and her eyebrows went up.\n\n\"How do you know this guy?\" he blurted.\n\n\"What the Hell? Where is that coming from?\" she barked back at him. He pointed at the monitor so she looked.\n\nThere was Ben in all his naked glory... in bronze. He was... big! Her eyes went wide. \"Oh my god! That's HIM?!? Ben is the bronze god?\" she gasped.\n\n\"Again I ask, how do you know him?\" Troy said belligerently.\n\n\"He's the boyfriend of the mother of one of my son's friends! We met once for like... ten minutes last spring,\" she exclaimed.\n\n\"You met him for ten minutes months ago and you greet him like that?\" he blurted.\n\nGwen was getting seriously pissed with the attitude. \"Yes, he was a really nice guy and made me think it might be possible to meet a nice guy of my own one day. Maybe I was wrong!\" She stormed off and grabbed the key to the van. She pulled it around the front of the building and got out. Forcing a smile on her face she held the keys out to Ben.\n\nHe could see something was wrong. She was smiling but her jaw muscles were clenched. He took the key and got in the driver's side as she climbed in the passenger side while looking back inside the dealership.\n\nHe started the car and pulled it out of the lot. It had good power and accelerated smoothly. He changed lanes and took some corners a little faster than he normally would to see how it handled and it was ticking all the boxes. It felt like a safe vehicle. Normally a sales person would be peppering him with details about the car but Gwen just stared out the window with a frown. Ben saw a nice little coffee shop that sold wonderful homemade cookies. He pulled into the lot and shut off the engine. Gwen came out of her daze.\n\n\"Come on. I'll buy you a coffee and a cookie and you can tell me about it,\" Ben said as he slid out of the van. Gwen's mouth opened to apologize but Ben was already walking across the parking lot. She got out and heard the doors lock behind her. She walked inside and saw Ben sitting in a booth. She slid onto the seat opposite him and a young waitress stepped up to the table. They ordered coffee and cookies as Ben promised and he waited for her to speak.\n\n\"It's stupid,\" she finally blurted.\n\nBen smiled and waited.\n\n\"The ladies in the office recognized you from that bronze statue that was in the news. Troy, my boyfriend, maybe my ex-boyfriend, saw it and started barking at me for knowing you,\" Gwen finally admitted.\n\nBen grimaced and the scar across his face lightened drawing Gwen's eyes. \"That damn statue,\" he growled.\n\nShe looked at him in shock. She was no art critic but she thought the statue was gorgeous. \"I don't mean to pry but what don't you like about that statue?\"\n\n\"It's destroyed my privacy. Everyone thinks they now have a right to my personal space,\" Ben grumbled then shook his head. \"Forget that. I'll deal with it. Does your boyfriend think you're cheating on him?\"\n\n\"This is the first time I've seen him act like this. It's good I found out now that he can be a jealous prick before we got more serious.\"\n\nBen looked out the window and saw Troy sitting in his car looking in the window. Ben gestured for Troy to come inside and join them. Troy spun the wheel and screeched his car into a spot.\n\nThe waitress was going by so Ben ordered another cookie and turned to Gwen. \"How does Troy take his coffee?\"\n\nShe was shaking with rage and blinked at him. \"What? Oh. Black.\"\n\n\"And a black coffee please,\" he said and the waitress left to get his order.\n\nTroy yanked the door open and strode across the room like an avalanche. Ben calmly slid further into the booth and gestured for the man to sit. Troy's eyes flashed with contempt.\n\nBen locked eyes with Troy and scowled. His scar flared and Troy froze.\n\n\"There are moments in a man's life when he discovers himself standing at the precipice of a colossally stupid decision. Most don't recognize it until it's too late. You are having one of those moments right now. You could open your mouth and lose everything or you can open your ears and heart, sit and listen and learn how you almost lost it all. Be the man she needs you to be. Sit,\" Ben's voice was deep and calm.\n\nTroy was still really pissed but the big man was seriously intense. Shit, he could be equally cool. Troy slid into the booth facing Gwen. He froze again when he saw how pissed she was and she wasn't showing any guilt for having been caught having a liaison with him.\n\nA waitress appeared and put a mug of black coffee in front of him and a plate with a cookie on it. He stared at the cookie, confused. What was going on here?\n\n\"The coffee is really good and the cookies are made fresh in the back,\" Ben said and took a sip from his mug.\n\nTroy was feeling totally off balance. He began to speak but Ben locked eyes with him again.\n\n\"You don't know me. You saw that damn statue and you made some assumptions about me. You're wrong.\" Ben wasn't smiling and Troy was beginning to sweat.\n\n\"I've spent approximately half an hour with Gwen including the ten minutes back in May. We're barely acquaintances. The idea that we're having an affair is insulting to both of us. She's in a relationship with you and I have my own. Again, you don't know me. When I met Gwen today the first thing she told me was that she was in a much better place than when we first met and that she had a boyfriend who was a 'great guy'. This isn't the behavior of a great guy.\"\n\nTroy wasn't sure why but he believed Ben. Completely. His rage evaporated like mist and in its place was a sick desperation to repair the damage he'd done.\n\nBen turned his head to look at the glaring woman. \"Gwen, men are fuck ups. Especially when we're beginning a relationship. We read the clues all wrong. It's a woman's burden to see a man's worth behind all his bumbling. If you truly believe Troy can be a good man please consider this as just strike one.\" Troy blinked at Ben as did Gwen.\n\n\"I would hate to think I had anything to do with the break-up of a lovely couple just because of a stupid misunderstanding,\" Ben stressed the 'stupid' while looking at Troy. He had the good grace to nod. \"If she accepts your apology remember you're already at strike one. You have to do better. She's worth it.\" Troy nodded again. Ben raised his eyebrow and tipped his head at Gwen. The man's eyes widened as he caught on.\n\n\"Gwen, I'm sorry I made such a colossal ass of myself. Please forgive me,\" Troy said humbly.\n\nThe woman's eyes got a little shiny with tears as she smiled and nodded. Eyes turned back to Ben.\n\n\"Eat your cookie while it's still warm,\" Ben mumbled as he munched on his own cookie. The couple had big smiles and ate their cookies. He did his best to ignore their admiring glances.\n\nWhen they finished their snacks Ben paid, then drove the van back to the dealership with a very happy Gwen sitting in the passenger seat. Troy held the door open for them when they arrived and the staff who had placed bets on Troy blowing the relationship looked on with disappointment.\n\nBen sat down across from Gwen at her desk. She was trying to get her equilibrium back.\n\n\"So, what do you think of the van?\" she finally managed to say.\n\n\"It's really nice. Does it come in red?\" he asked and her eyes twinkled as she realized she had a sale.\n\n\"Yes, yes it does. Which features are you interested in?\"\n\nBen and Gwen spent the next thirty minutes tweaking the options until they had met all of Ben's requirements.\n\n\"Do you have a trade-in?\" she asked.\n\n\"Yes,\" he said and pointed to the BMW SUV parked by the front window. \"How much will I get for that?\"\n\nGwen's eyes went wide. \"You're trading that in for a minivan?\"\n\n\"Yup.\"\n\n\"You'd get a much better price selling it privately. The dealership can't give you anything close to what it's worth,\" Gwen explained.\n\n\"I have no time to spend on selling it,\" he grumbled.\n\n\"It's fully loaded? Top package? All the toys?\"\n\nBen nodded.\n\n\"Mileage?\"\n\n\"22,000 miles. What will you give me for it?\"\n\n\"Personally I'd give you $30,000,\" she said with a grin.\n\n\"Sold,\" he replied returning her smile.\n\nGwen froze and her eyes went wide. \"You're kidding, right?\"\n\nBen looked curiously at her. \"Were you serious?\"\n\nGwen glanced over her shoulder. \"It's against policy for us to personally purchase trade-ins. That said, I'd kill to get my hands on such a sweet ride for that price. Seriously though you could easily get $50,000 for it if you listed it yourself.\"\n\nBen scowled. \"I don't have the time or the inclination to sell it myself. I'm going to be crazy busy for the next month or so renovating a house in my neighborhood. If you want it for $30,000 it's yours. It needs a tune up.\"\n\nGwen snorted with a grin. \"Sold. We'll put no trade-in here.\" She finished the invoice. Gwen handed Ben a business card with her home number written on the back. \"We'll arrange the sale of your car next week if that's alright with you. I have to sell my beater and arrange the financing. That won't be a problem.\" Ben nodded and pocketed the card.\n\nShe went through the invoice with Ben and he signed on the dotted line.\n\n\"When can I expect to get the new van?\" Ben asked.\n\n\"I'll submit the order and they'll give me an ETA. I'll give you a call then we will arrange the handoff. They've been really responsive lately so I should get an answer later today.\" Gwen stood up and Ben got to his feet too. They shook hands then she gave him a hug.\n\n\"Thanks Ben! For straightening out that earlier issue,\" she said quietly.\n\nBen just shook his head. He walked over to Troy and shook the man's hand. \"Good meeting you.\"\n\nHe got back into the SUV and drove home. He walked over to Ashley's place and pressed the doorbell. He held up the van brochure and invoice. The door opened with laughter and Ashley's grinning face was smiling down at him as the door opened. She pulled him inside and the girls all jumped up and down as they looked at the pretty red van on the brochure. Savannah finally pushed past Ben to look out in the driveway.\n\n\"Where is it?\" she asked.\n\n\"They are looking to see if they already have one built with all the options I selected. If not they will build it,\" Ben explained. \"It might take some time to get it.\"\n\n\"Oh,\" she said with disappointment in her voice.\n\nAshley just grinned and kissed the top of her head.\n\n\"I'll let you know when it's ready. Just thought you'd like to know it's been ordered,\" Ben said.\n\nAshley stepped close and pulled Ben into a hug. He wrapped his arms around her to return it. He felt good for helping them and the hug felt really good too.\n\nThe hug went on longer than Ben expected and he felt Ashley swaying slightly. He looked over at Madison who was grinning madly. Savannah's eyes were growing wider and wider as she watched the endless hug.\n\nMadison couldn't contain her giggles any longer and Ashley jumped as she realized what she was doing. She pulled back quickly and her face was crimson with her embarrassment.\n\n\"It was a really nice hug,\" Ben said gently.\n\nA smile burst across her face and her eyes flashed with happiness. Ben was a little dazzled as he hadn't seen her inner beauty shining out like that before.\n\n\"Ok, I- I guess I'll be going. I'll call when the car calls- I mean when I hear about the van's delivery date.\" It was his turn to blush. Madison's giggles just got louder and Ben headed out.\n\nHe went home and went inside looking for his family. He found a note. Tina went grocery shopping with Trish and took Lucy and the girls. He did see a plate with three cookies on it with a note from Karen saying they were for him.\n\nBen ate the cookies and was pouring himself a glass of milk when he heard the doorbell ring. He went to the door and saw Rochelle standing on his porch with Jayden who wasn't looking too happy. Ben sighed. The young man never looked happy.\n\nHe opened the door. \"Rochelle, Jayden, this is a nice surprise. Please come in.\"\n\nThey left their shoes in the foyer and followed Ben into the living room.\n\n\"What's up?\" Ben asked as Rochelle looked uneasy.\n\n\"As you know Jayden is under house arrest. There is GPS monitoring on him and he has to stay within range of a cell phone which connects to the monitoring center. I've arranged for the range on the device to allow him to be within our neighborhood. That's as much concession as the court would allow,\" she began.\n\nJayden's look was sour.\n\n\"I'm going to need to go back to work and Trish told me you were going to begin renovating the Walker's place this week. Do you think you could use another set of hands on the project? I know it's a lot to ask.\"\n\nBen looked at Jayden who was avoiding his eyes. \"Do you have any skills?\"\n\nJayden's eyes snapped to Ben. \"DO I HAVE SKILLS?\"\n\n\"Do you know how to use a hammer, a drill, a saw, power tools?\" Ben clarified.\n\n\"Yeah, I've done a little of that.\" Jayden's feathers settled and Ben looked at his mother.\n\n\"Not every question is an attack, Jayden,\" Ben said quietly and the boy nodded stiffly. \"Have you ever done any renovations?\"\n\n\"No.\"\n\n\"The first couple of days will be fun for you. We'll be removing all of the fixtures from inside the house to donate then we get to break things. Demo days are highly cathartic,\" Ben said with a smile and Jayden's eyes lit up a little. \"You get to hit stuff with a crow bar.\" A smile cracked on his face for a moment.\n\n\"So Jayden can work with you?\" Rochelle said, sounding immensely relieved.\n\n\"Yes. On the condition that he follows instructions not only from myself but especially from the job foreman and his boss, Dominic Selleni. Construction sights are dangerous places. He'll need proper work boots and a helmet. Dominic's company is doing this job with me as a favor. They don't typically work on projects this small. They do neighborhoods not individual houses. They also don't typically let the home owners work with them. We need to respect their authority on the worksite. Can you do that Jayden?\"\n\nJayden looked at him seriously and nodded.\n\n\"I'll pick up the boots and helmet,\" Rochelle said.\n\n\"Get gloves too. This work can be rough on the hands. And eye protection,\" Ben suggested. He looked back at Jayden. \"What kind of work were you interested in getting into.\"\n\n\"Music. I'm gonna be a producer,\" Jayden said just a touch defensively.\n\nBen just nodded. \"Ok, well this is nothing like that. We start 9AM Monday morning. There may be a lot of standing around for a bit but that's part of this job as well. Some of the guys smoke so if you need to smoke take your break when and where they do. Coffee breaks and lunch are covered. Any food allergies?\"\n\nJayden looked at him in surprise but shook his head.\n\n\"Good, I think you're going to like the lunches. It was so popular with the guys when we renovated the daycare I've booked some gourmet trucks to serve us lunch. The team works really hard so they deserve the perk. I'll expect you to pull your weight as well. Hard work is fulfilling on its own but it also earns rewards.\" Ben looked at Rochelle. \"Shall we discuss compensation?\"",
        "Jayden stiffened angrily and began to rise out of his chair.\n\nBen pinned him in place with a glare. \"I'm talking about your pay.\"\n\nJayden blushed furiously and sat back down.\n\nRochelle was glaring at her son as well. \"He should work for free for pulling crap like that!\"\n\n\"That's your decision but I believe a man gives honest effort when he knows he's being fairly paid for it. I'm expecting Jayden to put in full days of work. He should be paid for that work. He's a beginner but this is a real job.\" Rochelle nodded to Ben who looked back at Jayden.\n\n\"Everyone on the worksite earned their right to be there. You're the newbie. You'll be expected to do a lot of grunt work. Can I rely on you to be professional and mature or am I going to be dealing with this chest thumping bullshit?\" Ben said frankly.\n\nJayden nodded slightly.\n\n\"What does that mean?\" Ben mimicking Jayden's minimal movement.\n\n\"I'll be professional and mature,\" he said.\n\nBen nodded. \"I'll pay you $15 per hour to start and if you make it to the end of the project I'll prorate that up to $20 per hour. I'm expecting this project to last between four and six weeks, at five days a week and eight hours a day. We get the job done early AND done right, there's a bonus which covers the reduced time and then some.\" He stopped to see Jayden's reaction. Mental calculations were happening and struggling. \"You could make close to $5000 in a relatively short time if you do a good job,\" Ben suggested. Jayden smiled at the sound of that.\n\nBen held out his hand to shake. \"Deal?\"\n\nJayden hesitated then gripped Ben's hand and shook.\n\nRochelle looked very pleased. Something else she needed to tell Ben popped into her head. \"One more thing Ben. There's a group of young men Jayden is not to associate with by court order. If he does and the police catch him he goes to jail, no second chances. The police will be passing through the neighborhood at random intervals and will be watching.\"\n\nBen nodded and looked at Jayden. \"How much do you want to avoid jail?\"\n\nJayden looked at Ben seriously. \"Very much.\"\n\nBen nodded. \"If you see them coming, just let me, the site foreman or Dominic know.\"\n\nThe young man nodded.\n\nRochelle stood up and the men stood as well. \"Thank you Ben! I really appreciate this!\"\n\nHe opened his arms with a smile and Rochelle crushed herself against him with a happy smile. Jayden looked on with a conflicted expression.\n\nBen caught the look and frowned. Jayden still thought he was going to hurt his mother. Ben had no clue how to change his mind.\n\n\"I'll pick up the safety wear tomorrow and Jayden will see you at nine on Monday!\" Rochelle said and Ben nodded. They headed home and Ben made his way down to his workshop. He spent the better part of two hours working on the puzzle for the Australian company and felt a solution percolating in the back of his brain. He pushed back from the table and looked at the clock. It was almost dinner hour. He listened and the house was quiet. He walked upstairs and no one was there. They'd been shopping for groceries for over four hours? Something was wrong. He called Trish's house and Lily picked up.\n\n\"Hello?\"\n\n\"Hi, Lily? This is Ben. I'm looking for Tina and the rest of the girls.\"\n\n\"OH! They didn't call you? They're on their way home now. They... maybe I better let them tell you,\" she said hesitantly.\n\n\"What happened? Are they alright? Lily, talk to me!\" Ben exclaimed.\n\n\"They ran into a little trouble with a few reporters who were... persistent about getting information about you. I'd really feel more comfortable if you got the story from them- AH! They just drove by going to your place! Talk to you later!\" Lily hung up.\n\nBen hung up the phone then dashed outside to see Trish pulling up his driveway.\n\nLucy was sitting in the passenger seat and was looking at Ben with a nervous expression. Ben began to feel a little ill. Karen got out of the back seat and reached back inside and pulled out crutches. She glanced at Ben and her lip was trembling. Ben pushed forward and looked in the back seat.\n\nTina was sitting on the seat with her right leg up on Penny's lap. The lower half of her leg was in a cast. She looked over at Ben and he saw the black eye and the split and swollen lower lip.\n\nThe next thing he was aware of was carrying her cradled against his chest, carefully supporting her leg. Trish made it up his stairs before him and held the front door open. He set her down easy on the couch and Trish had the ottoman ready for her to rest her cast on. He knelt next to the couch taking in the bruises.\n\nBen's hands began to shake. \"Tina? Are you ok?\"\n\nShe nodded. \"Our baby is fine too.\"\n\n\"What- what happened? Why didn't you call me?\" Ben asked in an anguished voice. Tina just shook her head and rested back against the cushions. Ben could see the pain on her brow.\n\nTrish was standing behind him. She sighed and rubbed her hands together. He noted the bruised knuckles and a few cuts. His eyebrows went up. Karen and Penny entered the house loaded down with grocery bags and Lucy followed with the rest. They went straight into the kitchen.\n\n\"Trish?\" Ben said staring at the woman.\n\n\"Tina and the girls came over at around 2pm and we spent some time talking then we piled into my car and went to get the groceries. We spotted three reporters following us around, taking pictures, basically being fuckheads. Lucy contacted store security and had them thrown out.\" The woman in question came in and sat carefully next to Tina and held her hand.\n\n\"When we were on the way out of the grocery store they showed up again and the assholes blocked our way. They were talking shit to us about you. Then Tina got up in the face of the fat one and verbally tore a strip from him. It was amazing to see. His face just kept getting redder. We were all stunned until he shoved her away from him. He hit her pretty hard and she went over a display of washer fluid and hit the sidewalk badly. Lucy leapt after her and caught her before she rolled out onto the road. That's when I hit the fat fuck! I put him down quick. The other reporters tried to get some but got a crushed nose and a punch in the balls for their efforts. Store security showed up, dragged them away and called for an ambulance for Tina. We followed the ambulance to the hospital. Her leg is broken but it's not a bad break and should heal well.\"\n\nBen's face was showing his rage. Jaw clenched, muscles trembling, facial scar flaring, he looked like someone's imminent death.\n\n\"This is why we did not call,\" Tina's weakened voice wobbled as she touched Ben's tight jaw. \"You might have killed him or at least injured him badly. Our baby needs a father, not prison visits.\"\n\nBen blinked at her and felt his rage slowly fade. She was right. He would have killed the man. Quickly and without a shred of remorse. He'd done it before. It was easy. That thought gave Ben pause. It was actually a little frightening. He closed his eyes and shuddered. When he reopened his eyes he gently lifted Tina's hand and kissed it.\n\n\"I'm so sorry Tina! This should never have happened. It has to stop. The harassment has to end.\"\n\n\"What are you going to do?\" she whispered nervously.\n\n\"There's a reporter. I met her the other day outside the house. Rochelle knows her or knew her from college. Anyway, she offered to 'tell my story', defuse the mystery about me so the public will lose interest,\" he explained.\n\nTrish snorted. \"Ben, the more I know about you the more I want to know! I'm not sure that's such a good idea.\"\n\n\"Alternately we all run away. Hide in a yurt in Mongolia. I don't think they have the Internet there.\" It was Lucy's turn to snort but she raised a hand to cover her smile. Ben gave her a smile.\n\n\"I think we better put Tina to bed. The doctor gave her some pain killers but not the really strong stuff as Tina won't risk the baby's health,\" Lucy explained.\n\nBen nodded and Lucy went down the hall to prepare the bed. Trish helped Ben carefully lift Tina. Once they reached the bedroom Ben set Tina down on the bed and her brow eased a little.\n\n\"Can I get you something?\" Ben asked. \"Hungry? Thirsty?\"\n\n\"Water?\"\n\nBen immediately brought her some cool water from the bathroom and helped her drink some. Tina nodded and he laid her back on the pillow.\n\n\"I think I will sleep now.\"\n\n\"Of course! I'll just keep an eye on you,\" Ben said but she gestured for them to leave.\n\nTrish and Lucy gently pulled him from the room.\n\nWhen the door closed Lucy touched Ben's chin and turned his face to hers. \"Tina knows you love her. It hurts her to be unable to take care of you as she wants. Please let her rest and get better.\"\n\nBen blinked at her and looked back at the door. He finally nodded and pulled Lucy into a fierce hug. The woman melted in his arms with a happy sigh.\n\nTrish was watching them both with interest. She'd never seen a dom/sub relationship at work before. She was surprised how much control subs had over their dom.\n\nBen suddenly reached out and pulled Trish against him. He kissed her and the intensity took her breath away. It was demanding and emotionally raw. Trish felt herself being drawn into the hurricane force of his passion. He pulled back suddenly and kissed Lucy who whimpered at his need. He ended the kiss and Trish felt his whole body shaking in reaction. He didn't know how to deal with this situation.\n\n\"I want to kill him so badly.\"\n\nTrish heard the desperation in his voice. She shared a look with Lucy whose eyes were wide with worry.\n\n\"Ben, come with me,\" Trish said tugging on his hand. They pulled on their jackets and Lucy watched them get into her truck. She drove them back to her place and led him inside. She paused to speak with Lily and handed her the keys to the truck. The young woman's eyes flashed to Ben then away.\n\nThen Trish led Ben downstairs and into her workout room. The floor was covered in padding as were two of the walls. There was a rack of polished wood staffs of varying lengths. Near one corner was a heavy bag hanging from the ceiling. She closed the door.\n\n\"Take off your clothes except your underwear. You're going to get sweaty,\" she said and Ben made to protest. \"We're not having sex. Trust me, you're in no state at the moment to have sex without hurting your partner.\"\n\nBen nodded and began removing his clothes. Trish moved to the corner and pulled a small stool over to the heavy bag. She stepped up and pulled a pin from the rail above the bag. This allowed her to push the bag along the rail until she reached the center of the room where the rail ended. She used the stool once more and put the pin into the rail to keep the bag in place. She picked up a roll of fabric tape and walked over to Ben.\n\n\"Hands out.\"\n\nBen held his hands out and Trish quickly taped his knuckles and wrapped his wrists.\n\n\"OK, you work out lifting weights. I do kick boxing and a number of other martial arts. This bag is your opponent. We'll start out with some simple punches. I understand you might know how to throw a punch. Hit the bag.\"\n\nBen understood what Trish was doing now and he was grateful for this outlet. He stood facing the bag and bent his knees. He jabbed the bag a few times and got the feel of its weight and response. He threw a few more punches at it and began to feel a little better. Trish watched his telegraphed punches and grinned at the mighty fighter. She wondered what Rochelle had been talking about. She stood behind the bag and braced it.\n\n\"OK, stop giving it love taps. This is the fat prick that hurt Tina. He wanted to hurt her. He enjoyed it. He laughed-\" Trish thumped onto her face on the matt and rolled over onto her back as she wheezed for breath. The bag had hit her, lifting her off her feet to land three feet back with the wind knocked out of her. She struggled to drag a breath back into her lungs as Ben's concerned face looked down at her.\n\n\"I'm ok!\" she squeaked. \"Go- hit the bag!\"\n\nAir finally began to flow back into her lungs as she lay panting on the matt watching Ben release his inner rage. The bag became his focal point and his sloppy punches began to tighten up.\n\nThen Ben's eyes lost their softness and his hands struck the bag faster and harder causing it to swing closer to the ceiling. When the mount began to creak ominously Trish called out for Ben to stop and his concentration was broken. He caught the bag and panted for breath as he blinked at her.\n\nTrish pushed herself up to her knees. Her stomach ached from the hit and she felt a little queasy. Luckily her task was done here. She pushed herself to her feet and walked over to the door. She scooped up his clothes as she opened it and stepped out. \"You can come in now.\"\n\nLisa and Lori McKellan stepped into the workout room, wearing only their bras and panties. They took in Ben's heavy breathing, the torn tape on his knuckles, and his sweaty muscles. A thrill shot through them as he looked so raw and dangerous! They both knelt on the matt and looked up at him.\n\nBen scowled and looked at Trish. She smiled. \"You need to burn off some other energy and these ladies have generously offered to assist you. When they tell me you're ready you can come out for a shower and get your clothes back.\" She closed the door.\n\nHe looked back at the two gorgeous redheads and his cock surged against his underwear. Lori saw this and moaned. She quickly reached back and undid the catch on her bra, slipping the straps down her arms to expose her tits. The small gold rings she was wearing through her stiff nipples gleamed in the light of the room. Lisa followed suit and soon Ben could see how excited both of them were. This triggered further throbbing in his underwear and Lisa bit her lip as she watched him grow. It had been some time since the last time he was with them.\n\nBen took a step towards them, then another, his expression conflicted. He was still dealing with the rage he had for those damn reporters but he... he wanted these two women. He growled at his mixed up thoughts.\n\nLisa and Lori trembled as Ben stalked towards them. His growl shot a thrill through them and they squirmed as the wetness from their pussies began to tickle their inner thighs.\n\nHe stood before them admiring their lustrous red hair and their full sensual lips. Their beautiful blue eyes looked up at him. He thought they were truly lovely.\n\n\"Pull down my underwear,\" he said.\n\nBoth reached up and gripped the waistband. They tugged down rather hastily and his hard cock bounced up and slapped his stomach.\n\nLisa moaned at the sight of his cock. She wanted to take it into her mouth so badly! She glanced towards Lori as she heard her sister moan as well.\n\nWhen Ben's fingers slid into the hair on the back of her head and took a grip Lisa gasped then squealed as his thick cock began sliding into her mouth.\n\nHe was so slow and deliberate about how he fucked her mouth, she felt lightheaded.\n\nBen gestured for Lori to stand. When she did he pulled her against him and kissed her hard, his tongue exploring her mouth, sliding across hers. She felt her tits rubbing across the sweaty, hot skin of his chest and her pussy tingled madly. His scars were rough against the tender flesh of her nipples and the delicious contrast of his bold but soft tongue in her mouth and the scraping of her nipples sent shockwaves through her body.\n\nLisa was close to coming from how roughly Ben was fucking her mouth. His desire was almost out of control and she desperately wanted to touch herself but Ben hadn't given her permission to.\n\nWhen he pulled his cock from her mouth she moaned loudly and tried to get it back but he pulled her head back by her hair. Her eyelids fluttered as she was on the brink of a major orgasm.\n\nBen bent down and kissed her. Blissful sensations flooded her body and her clit screamed for some attention. He suddenly pushed her down on her back.\n\n\"Hold her legs back, all the way,\" Ben growled at Lori and she sank to her knees to grab her sister's ankles. She pulled them back to her shoulders as she sat back on her feet.\n\nBen could see Lisa's pussy was puffy and wet. She was ready so he pressed the fat head of his cock against her pussy lips and forced his way inside. Lisa's mouth dropped open and she began to quake from how he was opening her so wide. He drove himself all the way to the bottom and slammed his pelvis against Lisa's, slapping her clit hard.\n\n\"AH! AH! AH! GOD! OH BEN! CU- CU- IMA- CUUUUUMMMMMMIIIIINNNNGGGGGEEEEEEEE!!!!!!\" Lisa screamed as her orgasm struck. Ben gave her no respite as he hammered her body with his in long fast strokes ending with the hard slap of their bodies colliding. Her mind was leaving her body. The impacts were driving her higher and higher, blending in little sharp jolts of delicious pain. She couldn't focus on anything except the bliss going on between her legs and how the waves spread outwards through her body.\n\nWhen Ben felt her relax completely he pulled out. He was still hard as iron. He looked to Lori and she whimpered seeing the heat in his eyes. She released her sister's ankles and Ben lowered Lisa's legs down to allow her to rest.\n\nBen stood and walked behind Lori. She trembled in anticipation and her nipples felt hard as diamonds. Then Ben's hands were on her tits, squeezing them, tugging on the nipples and she cried out with the sharp pleasure. He gripped under her arms and pulled her up onto her knees once more. Then she felt his hard body settle down behind her, his hard cock pressing between the globes of her ass cheeks. Ben's left arm went around her body under her tits and he pulled her back against the solidity of his chest. He tilted back on his knees and suddenly Lori was being lifted up. She felt Ben gripping his cock under her body and positioning himself.\n\nWhen the hot tip of his cock pressed hard against her tight little asshole, Lori began to hyperventilate. She imagined him impaling her ass with his huge cock and she almost screamed. Then he lifted her a little further on his chest and pushed his cock forward to slip between the hot soft lips of her pussy. She gasped and leaned her head back. He kissed her cheek then dropped her down on his cock.\n\n\"FFFFFAAAAAAAAAAAAAA- FFFUUUUUCCCCCKKKK!!!!\" Lori wailed as he filled her completely. The shock was almost too much and she clung to him until she felt her surroundings return to her.\n\nBen moved his grip to her hips to keep Lori on her knees and flexed his hips to drive his cock up into her pussy. This also had the benefit of slapping Lori's ass with his pelvis. He kept up the pounding until Lori was wobbling on her knees. He rested back and pulled her down on top of him. He rested her there for a moment as she recovered. He moved his hands to her tits once more and gently tugged on the gold rings.\n\n\"Oh shit Ben! Yes! So good!\" she whispered as she squirmed. Tiny sparks were racing between her nipples and her clit. When Ben's right hand moved down to rub her clit as he squeezed her stiff nipple that spark became a bolt.\n\n\"OH GOD YES! BEN PLEASE! YES!\" Lori cried out as his fingers swept across her clit. It felt incredible and she was right there. Then he began to stroke his cock in and out of her by rocking his hips and it was too much for her.\n\n\"BEN! I- IT'S TOO- FUCK I'M CUMMING!\" Lori cried as her body began to clench and shake.\n\nBen needed release but he wasn't there yet. Something was blocking him. He was close but not close enough. Lori wasn't going to be able to handle much more.\n\nLori's gasps told him she was becoming too sensitive. He pulled his hands off her clit and tit and moved them to her hips but she was still squirming. He lifted her off his cock and set her down on the matt next to her sister. He rolled to his feet and stood up. The twins looked at him from the floor and saw his hard cock bobbing with need. Neither had the strength to help him. Lisa grabbed Lori's hand tight as they watched Ben prowl back and forth. He was acting like a caged tiger. Finally he turned for the door.",
        "\"I'm going to take a cold shower,\" he grumbled. He stepped outside and heard a squeak as he collided with a very red faced Lily. She'd obviously been listening at the door and her hand was inside her yoga pants. She yanked her hand out, looked wide eyed at his naked body then down at his hard and almost angry looking cock. She shrieked and ran upstairs. Trish burst out of the washroom to see Ben standing there naked and red faced as Lily scampered up the stairs.\n\n\"You're still hard?!?\" Trish gasped.\n\n\"Excuse me,\" Ben said pushing past her into the wash room to take a quick shower. His clothes were on the counter. He locked the door on his way in so he was left alone. Once he was clean and he had relaxed down below he dried himself off and put his clothes back on. His underwear were still in the gym.\n\nHe opened the door and saw three very contrite looking redheads standing in the hall. The twins were dressed but still looked a little disheveled and wild eyed.\n\n\"Lisa, Lori, come here,\" he said and they moved to stand before him. He could see they were moving a little tenderly so he had caused them some pain. Again, as much as he wanted to he couldn't apologize for that as that's what they seemed to want.\n\n\"You did nothing wrong. You were both exquisite.\"\n\nHe saw them almost sag with relief. Smiles exploded across their faces and he was once again dazzled by their beauty. He reached out and touched their cheeks. They leaned into his touch and he was once more concerned with their attachment to him. He sighed. Truthfully, he was becoming overly attached to them as well. He dipped forward and gave each a tender kiss. They looked up at him with an almost feverish devotion and he had to look away. He focused on Trish.\n\n\"Thank you for suggesting the heavy bag. I think I'm going to pick up one for home.\"\n\n\"I'm so sorry-\" she began but he held up his hand.\n\n\"No, it's fine. You tried to help me and... mostly succeeded.\" He looked towards the stairs with a worried look on his face.\n\n\"Lily wasn't here while I was standing by the door. But I had to use the wash room. I was in there for a while.\"\n\n\"Maybe I should speak with her,\" Ben said.\n\n\"No, I think I'd better do that,\" Trish replied.\n\nHe finally nodded. He went upstairs and the women followed. He walked Lisa and Lori home then made his way home. The lights were off at Gabriella's. He wanted her opinion about the idea of speaking with the reporter. He went in his front door and Lucy rushed to meet him in the foyer.\n\n\"Are you ok?\" she asked.\n\nHe looked at her in surprise. \"Yes, I'm fine. How is Tina?\"\n\nLucy smiled. \"Tina is sleeping.\"\n\n\"How are you doing?\" Ben asked her.\n\n\"I'm better now that I know you are ok. You looked pretty upset when you left. I thought you and Trish were going to go find those jerks and beat them up.\"\n\n\"No, Trish took me to her place to punch a heavy bag in her gym,\" he said.\n\nLucy nodded and looked at him with a smile. For some reason he felt compelled to continue.\n\n\"Then she invited Lisa and Lori over to help me work off some tension.\"\n\nAnother nod.\n\n\"It didn't work.\"\n\nLucy's smile dropped. \"You couldn't get erect?\"\n\n\"No, I couldn't... finish.\"\n\n\"Oh! That must have been frustrating.\"\n\n\"Yes.\"\n\n\"Did you want to...\"\n\nBen smiled. \"No. It's fine. I had a cold shower. I'm good. Thanks though.\"\n\nLucy's smile was sweet and alluring at the same time. Ben pulled her against him for a hug and kissed the top of her head.\n\n\"Are we going to have dinner?\"\n\nBen looked behind himself and saw Karen and Penny, Christopher on Penny's hip, standing in the door of the kitchen. \"Did someone make dinner?\"\n\n\"We bought the ingredients but we got home too late to make it and I'll need Tina to show me how,\" Karen said with a sad look.\n\n\"So we order in tonight. What would you like-\"\n\n\"CHINESE!\" Karen and Penny squealed. Lucy grinned and nodded.\n\n\"I swear they've become obsessed!\" Ben grinned. \"Go ahead and place the order. You know what I like.\"\n\nKaren and Penny skipped back into the kitchen to phone in the order.\n\nBen looked down the hall but Lucy tugged him towards the living room. \"Let her sleep. You'll see her soon enough.\"\n\nHe nodded thoughtfully and let Lucy lead him into the next room.\n\nChapter 3\n\nDominic Selleni was a big man. Physically big, big hearted, and he had a big voice which was currently deafening Ben's left ear. Dominic had Ben in a bear hug and was cheering loudly after hearing the news that Ben was going to be a father for the first time.\n\n\"BEN! THAT'S WONDERFUL NEWS!!!\" he boomed. He release Ben and stepped back. \"So that's why you're in a rush to do this renovation! You need a bigger home as your family is growing!\"\n\nBen grinned at the man. Dominic was a doting grandfather for three kids and children meant the world to him. He had another surprise for the man. \"Yes, but not exactly how you think. I'm not moving. My home has plenty of space for my needs except the spare rooms I used to have are currently being used by the girls I adopted when I was in France. They are going to live in the new build.\"\n\nDominic's face showed his confusion. \"You're rebuilding the house for some kids? They can't live in it alone!\"\n\nBen smiled. He knew this is where the story was going to go off the rails for his friend. \"The girls are 24 years old. They were abducted by a white slaver when they were young. He kept them as pets. Playthings. He did horrible things to them. I'm helping them get their lives back. I signed them up for school and I'm getting them a place to live.\" Ben pointed to the house they were about to work on. \"We'll see what they want to do once they get their secondary school diploma.\"\n\n\"Geezus Ben! People give a little money to charities to make themselves feel better. You go all out.\"\n\nBen saw Jayden approaching. \"Speaking of going all out. Here comes the young man I spoke to you about. I'm hoping working on this project will turn him around too.\"\n\nIt wasn't even 8:30 yet but Jayden walked up with his white hardhat in his hands. Inside were gloves and safety glasses as Ben had suggested. His boots were brand new too. It looked like Rochelle got some advice on the rest of his outfit. It looked like he came right off the page of a catalog.\n\n\"Jayden, good morning! This is Dominic Selleni. Dominic this is Jayden King,\" Ben made the introductions.\n\nThe men shook hands and eyed one another. \"Who's the site foreman?\" Ben asked.\n\n\"Hector.\"\n\n\"He still have that badass mustache?\" Ben asked with a grin.\n\n\"See! Ben thinks its badass!\" said a voice behind them.\n\nBen turned with a grin then quickly acted frightened. \"Holy crap! It's actually gotten bigger!\" he exclaimed.\n\n\"Nah! It's still a sweet 'stache!\" the man said stroking the minimal facial hair with pride.\n\nJayden stifled a snort.\n\n\"Who's this and what makes him think he can outdo such a proud achievement as this. Look at him! He's practically a baby! Peach fuzz!\" Hector barked. Jayden glanced at Ben.\n\n\"Hector Ramirez, this is Jayden King. Jayden, that sounded like a challenge to me. If you think you can grow a better mustache you'll just have to try,\" Ben said with a raised eyebrow.\n\nJayden looked at Ben then a slow smile slipped onto his lips. He nodded. Then his face froze and his eyes went wide as he looked over Ben's shoulder.\n\nBen turned and he saw Karen approaching with Penny. They were carrying something in plastic containers.\n\n\"Good morning!\" Karen said shyly. Her eyes kept slipping past Ben to focus on the young man.\n\n\"What have you brought us?\" Ben asked.\n\n\"Cookies! We made them!\" Penny blurted with a grin.\n\n\"Karen, Penny, this is Dominic Selleni, Hector Ramirez, and Jayden King. Guys, these are my daughters.\"\n\n\"Daughters?\" Jayden gasped and Ben looked back at his incredulous look.\n\n\"Didn't your Mom tell you about Karen and Penny?\" Ben asked looking the young man right in the eye.\n\n\"She- she said you had... more women living in your house.\" Jayden's voice tapered off as Karen looked at him with her light blue eyes. She smiled and he felt himself smiling in return automatically.\n\n\"Right, that's what you heard. Karen Shepherd and Penny Shepherd are my daughters and as any good father would,\" Ben nodded to Dominic who grinned widely, \"I'll be watching out for their best interests.\"\n\nJayden's head snapped back to look at Ben who leaned in a little closer. \"We'll talk about this later,\" Ben said quietly.\n\nKaren handed the containers to Dominic and Penny handed hers to Ben then the ladies hurried over to Ashley's place to get a lift to school. Karen glanced over her shoulder a few times to look back at Jayden who was still frozen like a deer caught in the headlights.\n\n\"You did it all wrong! You adopted girls and moved past all the fun stuff of watching them grow to begin at the hard part of protecting them from boyfriends!\" Dominic's laugh boomed out. Ben grimaced and his scar flared. Dominic's eyes went wide. \"Crap! You can scare them away with that scar!\"\n\n\"Ha. You are a million laughs Dominic,\" Ben said sourly as the man chuckled. He turned to Jayden who was still a little starry eyed. \"Earth to Jayden! If you see any sign of those young men you are not to associate with you find one of us and let us know immediately.\"\n\nJayden nodded.\n\n\"The services are all shut off to the house. No power, water, or gas. We're going in to salvage the existing fixtures. Let us know when the excavation crew arrives.\n\nBen popped open the container and grabbed a few cookies. He offered the container to Jayden who grabbed three cookies as well. Ben left the container on the table Dominic set up beside his truck then they headed inside. He popped one of the cookies in his mouth and chewed the sweet treat with a smile on his face. He looked over at Jayden who was eating with a thoughtful expression. Ben had his tool box inside the front door. He picked it up and they walked through the house to the kitchen.\n\n\"We'll take the kitchen sink, the taps, and the ceiling light fixture from this room. Be careful removing the items so they are in good enough condition to donate. You start with the light. There is a step ladder by the front door. Tools in the box.\"\n\nBen got to work on the sink and made quick work of disconnecting the taps and the sink mount from under the cabinet. He crawled out and saw Jayden was almost done with the light. He helped him bring it down safely then got him to help lift the sink out. They carried the stuff outside to put them in the back of Dominic's truck. Then they stopped to grab a few more cookies.\n\n\"Karen, she makes good cookies,\" Jayden said casually.\n\nBen looked over at Jayden and saw the curiosity burning in the young man.\n\n\"Did your Mom give you the back story for the girls?\" Ben asked. Jayden shook his head. Ben imagined he stopped listening once he heard there were more women in his house. He walked back towards the house and Jayden followed. Ben stopped when they were in the foyer and looked Jayden in the eye.\n\n\"Karen and Penny were likely runaways when they were really young. We couldn't find any information about their abduction or the abduction of children who looked like them in the date ranges we worked out. The bastard who grabbed them abused them, kept them as playthings, forced them to undergo painful operations to change how they looked for his amusement. They didn't have a childhood and next year they were going to be murdered because he'd grown tired of them. They'd become 'too old' at 25.\"\n\nJayden's eyes were wide as he absorbed the story.\n\n\"I'm not telling you this because I want you to pity them. They don't need pity. What they need is patience, compassion, respect, and understanding. Penny is having an easier time picking up a new life. Karen is still trying to find her place. I'm hopeful,\" Ben sighed. \"It's obvious you're attracted to Karen.\"\n\nJayden scowled as he expected Ben's harsh words.\n\n\"Do you think you're the man she needs in her life right now? Do you know how to be?\" Ben asked gently instead.\n\nThe questions caught him off guard and he stared at Ben's back as the big man walked away. After a moment he followed and saw Ben had moved into the only bathroom in the house.\n\n\"We're going to take the taps, the sink, the toilet, the medicine cabinet, the light fixture, the door knobs, and I'm keeping this old cast iron soaker tub. I'm going to fix it up and put it back in the refurbished home. We'll need help carrying this out and from the look of that narrow doorway we may need to do a little demo to get it out.\"\n\nThey spent the better part of an hour removing the items and carrying them out to the truck before one of Dominic's workers informed them that the excavation team had arrived. Ben had just finished disconnecting the tub. He walked out side with Jayden who was looking a little tired.\n\nThe heavy equipment had arrived so it was time to take a break as the excavator made its way to the backyard.\n\nJayden was fidgeting and glancing at Ben. Finally Ben couldn't take it any longer.\n\n\"What?\"\n\nHe paused. \"What- what kind of man would I have to be?\" he finally said.\n\nBen looked at Jayden with a serious expression. \"Before you can answer that you have to ask yourself what kind of man have you been. Be brutally honest with yourself. If you can't be honest with yourself how can you be honest with others? Spend some time on that. When you have that answer come to speak with me. Tomorrow.\" He walked off to speak with Dominic.\n\n\"How goes it with the boy?\" the contractor asked.\n\n\"Early days. He's been a good worker so far though,\" Ben admitted.\n\n\"Hey Ben! The guys want to know if you got the same caterers you had on the daycare job?\" Hector called out.\n\n\"Never you mind the caterers. I don't need a team of fat sluggish workers!\" Dominic called back. When Hector walked away to deliver the bad news Dominic turned to Ben. \"Who did you get to make lunches?\" he asked quietly.\n\n\"You'll just have to wait another hour to see,\" Ben grinned. \"Is it safe for us to go back in yet?\"\n\n\"Just as soon as the dump truck gets into the backyard, sure.\"\n\n\"I'll need some guys to help carry out the tub,\" Ben said.\n\n\"I'll ask Hector.\"\n\nBen walked back to Jayden who wasn't looking too happy. The truck was in so Ben gestured for him to follow.\n\nHe picked up a cordless reciprocating saw and a sledgehammer. Jayden's eyes lit up.\n\nThey made it back to the washroom and Ben handed Jayden the hammer. \"I'm going to cut a notch out of the door frame and I'll need you to break it out into the hallway.\" That got a smile from the young man.\n\nBen use a power driver to remove the hinge screws and Jayden carried the door outside and returned to see Ben making short work of the door frame. He made four deep cuts, two to a side, then stood back.\n\nHe stepped out into the hall and gestured for Jayden to begin. \"Knock out the sections between the cuts. Put your safety glasses on first.\"\n\nJayden's first swing was anticlimactic as the hammer bounced off. He looked at Ben with embarrassment.\n\n\"Not as easy as it looks, right? Take a secure grip on the hammer and swing as hard as you can. Don't aim for the surface. Aim through the wall, about four inches beyond. Keep your grip firm but not a death grip,\" Ben suggested.\n\nJayden nodded and took a deep breath. This time his swing went through the wall, across the hall, and embedded itself in the drywall there.\n\nBen grinned and Jayden's scowl wobbled as he struggled not to laugh.\n\n\"It's slightly euphoric to hit stuff with a big hammer isn't it,\" Ben remarked and Jayden nodded as his smile finally won. \"Try again and this time just a little more death grip.\"\n\nJayden retrieved the hammer and managed to knock out the section of the doorjamb in one swing. Four workers showed up behind Ben and Jayden had it down now so he blew through the remaining section in just two swings. The guys cheered as they knew that demo was the best part of renovations! Jayden smiled at them then helped clear the debris from the hall.\n\nIt took all of them to carefully manoeuver the tub outside and carry it over to Ben's to put it in the garage. As they walked back they saw the gourmet food truck parking in front of the day care. A cheer went up from the crew who hustled over to the truck. A police cruiser followed the truck into the neighborhood. Ben waved them down and walked to the curb. Jayden hung back with a frown on his face.\n\n\"Good day officers. There's been no sign yet of the men Jayden is to avoid. We're all keeping an eye out.\" He received a nod for that. \"If it's lunch time you can place an order at the food truck. It's covered.\" That earned him smiles and the driver shut off the engine as his partner called in. Ben nodded and continued on his way to the truck.\n\n\"You invited them to lunch?\" Jayden hissed.\n\nBen frowned at him. \"I think you're mistaking them for the enemy. I've dealt with more police than you have both here and overseas and I can say that while they're subject to the same human failings as anyone, I'd far rather have the law on my side. Showing respect and courtesy costs nothing and yields good will. We can all use a little more of that.\"\n\nJayden looked troubled as they reached the back of the line.\n\n\"Are you the crime you committed or are you Jayden King?\" Ben asked him quietly.\n\nEyebrows went up as he looked at Ben. \"I- I'm Jayden King.\"\n\n\"I think you're still discovering who that is,\" Ben said.\n\nJayden gave Ben an evaluating look. \"Are you trying to be some kind of Zen Master?\"\n\n\"Depends. Is it working? Are you thinking deep thoughts?\" Ben smiled faintly.\n\nJayden turned away so Ben wouldn't see his smile but Ben recognized the motion for what it was and felt a little burst of satisfaction.\n\nLunch was incredible! Mexican burritos, enchiladas, quesadillas, tacos all with a gourmet flair. Delicious and filling! Ben got huge grins from the crew and Dominic lamented they were being spoiled rotten. This made the team cheer for Ben.\n\nThe excavation crew alternated through the lunch hour taking turns to keep the steady flow of trucks coming and going. Each driver gave his order so when they returned for the next load their food was waiting for them.\n\nThere was an embarrassing moment for Ben during lunch when Lisa and Lori came out of the daycare to speak with him. They were still worried about the state they'd left him in the previous day. Conversation amongst the crew quieted significantly as attention swung to the two beauties who walked up to Ben and gently pulled him aside to whisper their questions. He gave them assurances once more that they'd been wonderful and he was fine. Then he told them they could order lunch from the truck for themselves and the other staff if they liked. They squealed and jumped up to kiss him then looked very contrite as they saw his embarrassed scowl. They rushed back into the daycare and came out minutes later to place the orders. They apologized to Ben but were so nervous they'd fucked up they wouldn't leave until he gave them a kiss.\n\nBen dropped himself on a chair next to Dominic's truck and suffered the man's wide eyed smile. The crew was looking at him in a new light as well.\n\n\"These are NOT your daughters,\" Dominic said quietly.\n\n\"No,\" Ben growled and received a chuckle. Jayden watched his discomfort.\n\nThe dump truck driver called out to Dominic and indicated that was the last load. Now his crew could begin in earnest. He, Hector, Ben and Jayden walked into the backyard once the excavator made its way out. They looked at the plans once more and Ben explained how the new foundation would be integrated with the old and how it would support the two stories. An oversized deck with a six seater hot tub on it would extend beyond the new addition.\n\nOnce they confirmed the plan Ben and Jayden returned to their salvage job inside the house. They spent most of the afternoon removing bits of the house that would be donated to the community housing agency."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "harem",
        "romance",
        "lesbian",
        "anal",
        "threesome",
        "interracial",
        "mature"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-shepherd-afield-pt-01"
}