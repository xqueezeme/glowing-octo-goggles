{
    "title": "The Wanton Flower",
    "pages": [
        "This story is an entry to the 2018 April Fools contest. It centers a lot on Exhibitionism, which is why I feel it belongs in the Exhibitionism & Voyeur category. But it goes (far) beyond exposed nudity. Enjoy! \n\n---\n\nJessica smiled as she watched her husband up on the stage. Undeniably a gifted speaker, Oscar captivated the audience with tales and pictures from his latest explorations.\n \n\u201cAnd here you have it,\u201d he said. \u201cVulvaria splendens.\u201d\n \nA few gasps and giggles traveled through the room. It didn\u2019t take much imagination to see the resemblance between the shimmering flower and female genitalia. The protruding pistil even looked like a clitoris, peeking out between the pink petals.\n \n\u201cIt\u2019s virtually unknown to science,\u201d Oscar continued. \u201cBut the natives are very familiar with the plant. Vulvaria splendens\u2014or \u2018the wanton flower\u2019, as they call it\u2014used to be an integral part of fertility rites. These customs disappeared with missionaries arriving, but an elderly woman I interviewed said they used the flower as part of certain ceremonies. According to their lore, the goddess of sexuality could embody any woman who ate it. She wouldn\u2019t give me much details, but it seems the flower could have some properties that enhance female sex drive.\u201d\n \nJessica couldn\u2019t help chuckling. As much as she liked to support her husband, Medical Anthropology still seemed like pseudoscience to her sometimes.\n \n\u201cThis of course needs to be investigated further,\u201d Oscar continued. \u201cWe\u2019ve just got the permits to start human trials. So, we encourage women who are interested in participating to contact me or my colleague, Dr. Renard.\u201d\n \nThe applause rained down as Oscar wrapped up his talk. People flocked around him afterwards. To them he was the eccentric genius\u2014an academic superstar. To Jessica, he was her husband, and she wanted to take him home. She caught his eye in the crowd, giving him a pleading look. He smiled apologetically, holding up a finger to indicate he would just be another minute. She dangled the car keys, showing she would wait in the car.\n \n\u201cSorry, sorry!\u201d he said when he joined her half an hour later. \u201cMy grad students had some questions about the project.\u201d\n \nAs she often did, Jessica wore her raven black hair pulled back in a tight ponytail, exposing her slender neck. As he often did, Oscar leaned in and playfully kissed a trail from her cheek down to her collar bone. She was skeptical when he decided to grow his beard, but found she liked how it tickled her. He kept it neat, and it gave him a distinguished look, well suited for a young professor.\n\n\u201cAnd I suppose Liam and Adam can\u2019t wait until tomorrow to talk to the genius?\u201d she chuckled. She steered his mouth to hers and kissed him to show she wasn\u2019t actually mad for waiting.\n \nOscar started the car. \u201cAre you sure you don\u2019t mind if I have the guys over tomorrow? We could just meet at the office.\u201d\n\n\u201cI have a well-deserved week off starting tomorrow. As long as I can relax all day, I don\u2019t mind what you do.\u201d\n \n\u201cAnd I told you Ben and Dr. Renard is coming too, right? We need to put the final touches on the expedition, but I thought we could have a barbecue too.\u201d\n \n\u201cDr. Renard?\u201d Jessica laughed. \u201cI\u2019ve known Tony as long as I\u2019ve known you\u2014surely we can drop the formalities by now?\u201d\n\nOscar chuckled. \u201cYes. Sorry, I guess I\u2019m still in professional mode.\u201d\n\n\u201cYou looked good up there,\u201d Jessica said. \n\nOscar glanced at her, grinning. \u201cAnd you look good all the time. I could barely concentrate when I saw you from the podium.\u201d\n\nHe put his hand on her naked thigh. Her dress was short, but Oscar insisted it was appropriate to wear to the fundraiser. The cleavage wasn\u2019t very low cut but enough to offer an appealing presentation of her ample chest. She enjoyed looking good, sometimes more than she cared to admit, even to herself. \n\nOscar\u2019s caress soon wandered to the inside of her thigh. She cocked her eyebrow at him. \n\n\u201cI take it you\u2019re no longer in professional mode.\u201d\n\nHe smiled but kept his eyes on the traffic. His hand lingered a moment before it wandered upwards, pushing the dress along with it.\n\n\u201cHey, mister,\u201d she said, pushing his hand away. \u201cThere are other people around.\u201d\n\nOscar frowned. \u201cThey can\u2019t see from their cars...\u201d\n\n\u201cThey might. And what if it\u2019s someone from the function?\u201d\n\nShe enjoyed when her husband found her irresistible, unable to keep his hands away. But she had been raised in a conservative home. She had become more liberated over the years, but any sort of sexual affection was still, in her mind, something that happened between two people behind closed doors. Sure, wanton desires popped into her mind now and then, but they were just stupid fantasies, and not something she\u2019d ever act on.\n\n\u201cAnd I don\u2019t want to get in an accident,\u201d she added. \u201cWait until we get home.\u201d\n\nOscar accelerated, rushing them home through the streets.\n\n---\n\n\u201cGreat work, guys,\u201d Jessica heard her husband say out in their backyard the next day. \u201cHow did you get so many to sign up so quickly?\u201d\n\nJessica smiled at how obviously stoked the two students were by his appraisal. She put the groceries down on the kitchen sink. Oscar had assured her she didn\u2019t have to do the shopping, telling her to just relax on her day off. But she insisted to sort out the food for the barbeque. She enjoyed cooking, at least when she had enough time for it. Chopping vegetables, she listened with half an ear as Liam and Adam explained how they had handed out flyers around campus to attract female students to join the trials to test the effect of the flower. Jessica wasn\u2019t surprised those cute boys were successful at attracting girls to a study about sex drive. She had a strong suspicion they were quite the heartbreakers around campus. Liam bright blond, and Adam black, they looked like two opposite peas in a pod, both athletically built. They were old enough to have some wits about them, but still possessed some boyish charm.  \n\n\u201cWith this we definitely have enough young female participants,\u201d Tony said. \u201cAnd we have a lot in the forty plus category. What we\u2019re lacking are women around thirty.\u201d\n\n\u201cDon\u2019t look at me. I\u2019m not interested,\u201d Jessica said as she joined them in the backyard, passing out beer bottles.\n \n\u201cThank you, Mrs. Bergman,\u201d Liam and Adam said in unison. \n\nShe smiled at how they insisted on calling her that. \u201cI thought Ben was joining you too?\u201d \n\nOscar kissed her on the cheek. \u201cHe\u2019s running late.\u201d\n\n\u201cSo, you haven\u2019t been coaxed into the study?\u201d Tony asked, giving her a cheeky grin. \n\n\u201cI\u2019m afraid my wife doesn\u2019t believe much in this project.\u201d\n\nTony looked amused. \u201cReally? How come?\u201d\n\n\u201cListen, boys,\u201d Jessica sighed. \u201cIt\u2019s the day before your expedition. I don\u2019t want to bring you down and make you doubt your mission.\u201d\n\n\u201cBut now you\u2019ve made me curious,\u201d Tony insisted.\n\nJessica looked at her husband, who nodded.\n\n\u201cWell then,\u201d Jessica said. \u201cAre you familiar with the Doctrine of Signatures?\u201d\n\n\u201cThe Doctrine of Signatures...\u201d Oscar began, his voice taking on the tone of a lecturer. \u201cThis is the idea that herbs, typically, resembling parts of the human body have therapeutic properties that affect that specific body part.\u201d\n\n\u201cExactly,\u201d Jessica said. \u201cAnd it\u2019s a theological argument. It suggests that some god or gods have left hints about how to utilize their creation. And it\u2019s been disproven repeatedly.\u201d\n\n\u201cSo, you don\u2019t think the Goat Flower works?\u201d Tony asked.\n\nJessica frowned. \u201cThe Goat Flower?\u201d\n\n\u201cIt\u2019s another name the natives used for it,\u201d Oscar explained. \u201cTony believes we should use that as its common name.\u201d\n\n\u201cIt doesn\u2019t look much like a goat to me,\u201d Jessica said, picking up a picture of the flower to study it. Perhaps those petals could be interpreted as ears, but it really looked a lot more like a...\n\n\u201cBut we can\u2019t exactly call it the pussy plant,\u201d Tony chuckled.\n\nJessica put the picture down. \u201cMy point is you\u2019re as likely to turn your participants into goats as you are affecting their sex drive.\u201d\n\n\u201cYou don\u2019t think we can find new medicines from plants?\u201d Tony asked. \u201cOr are you and your big pharma palls afraid we just might be right?\u201d\n\nJessica gave him a lethargic look. Here we go again... The first time she met Oscar and Tony was many years ago at a conference, where she represented her pharmaceutical company and they presented some of their studies on natural remedies. Her and Tony\u2019s debate had started that day, and it hadn\u2019t really stopped yet. \n\n\u201cNo, that\u2019s not what I\u2019m saying,\u201d Jessica said. \u201cWe have plenty of pharmaceuticals derived from plants\u2014painkillers from willow, heart medicine from foxglove, anti-inflammatory agents from chestnut. But in none of these cases does the plant look like what they\u2019re treating.\u201d\n\nThere was a moment of silence as her words sank in. \n\n\u201cWell, we\u2019ll see,\u201d Oscar said eventually, seemingly unaffected by his wife\u2019s rant. \u201cAt least we have an excuse to go back and look for more specimens.\u201d\n\n\u201cIf you\u2019re so sure the plant doesn\u2019t work,\u201d Tony continued, giving Jessica a challenging stare. \u201cThen why don\u2019t you want to try it?\u201d\n\n\u201cI just don\u2019t see the point.\u201d\n\n\u201cMaybe you\u2019re afraid it actually works?\u201d Tony taunted.\n\n\u201cThere is nothing wrong with my sex drive, thank you very much,\u201d Jessica retorted, not showing that even referring to sex in a conversation with anyone but her husband made her uncomfortable. \n\n\u201cUhm, I meant afraid as in it would be a natural competitor to your industrial pharma,\u201d Tony said, grinning at her. \u201cBut thanks for sharing.\u201d \n\nLiam and Adam looked uncomfortable, whereas Oscar seemed unmoved by the bickering between his wife and his colleague. He always seemed to be above it, somehow.\n\n\u201cYou did animal studies, right?\u201d Jessica asked.\n\nOscar nodded. \u201cOf course.\u201d\n\n\u201cAnd?\u201d\n\nOscar shook his head. \u201cNo effect.\u201d \n\nJessica hummed. \u201cBut it didn\u2019t deter you from continuing the study?\u201d\n\n\u201cHumans are more complex,\u201d Oscar said.\n\n\u201cIt\u2019s tricky trying these things on rats,\u201d Tony added. \u201cThey\u2019re kind of horny all the time.\u201d\n\n\u201cBut at least it showed the plant is safe,\u201d Oscar explained. \u201cWe\u2019ve even tried it ourselves.\u201d\n\n\u201cOh, have you now?\u201d Jessica chuckled. \u201cAnd did it work?\u201d\n\n\u201cNo, can\u2019t say it did,\u201d Oscar admitted. \u201cBut the lore said it only affected women, and as you know our team is all male.\u201d\n\nJessica smirked. \u201cMaybe you\u2019re all just horny all the time too.\u201d\n\nShe regretted her comment, especially as it implicated Liam and Adam. They were innocent bystanders. Tony always seemed to drag out the worst in her. \n\n\u201cHow long would I have to eat your damn plant for?\u201d she asked.\n\n\u201cJust a few days,\u201d Oscar assured her.\n\nJessica shrugged her shoulders. \u201cFine. Just give me your precious Goat Flower. I\u2019ll be your guinea pig.\u201d\n\n\u201cExcellent!\u201d Oscar exclaimed. \n\nHe seemed very happy she was going along with this. She shook her head, thinking he\u2019ll be disappointed if he expected she\u2019d turn into some sex hungry monster. \n\n\u201cHere you go,\u201d Tony said, looking pleased as he handed her a vial with capsules.\n\n\u201cThis doesn\u2019t look like flowers,\u201d Jessica said, inspecting the vial. \n\n\u201cWe can\u2019t exactly give our participants a plant to chew on,\u201d Tony said.\n\n\u201cYes, we put ground up flowers in capsules to control the dosage,\u201d Oscar added. \u201cOne per day is enough.\u201d\n\n\u201cAll right then. Here\u2019s to nothing,\u201d Jessica said and swallowed the capsule with a chug from her beer.\n\nThey all looked silently at her, studying her reaction.\n\n\u201cOh, my god!\u201d she taunted, coquettishly placing her hands on her cheeks. \u201cI\u2019m, like, so turned on right now!\u201d\n\n\u201cAm I interrupting something?\u201d someone said from behind.\n\nJessica spun around to see Ben entering from the backyard gate. \u201cGood to see you, Ben. Is Maggie coming as well?\u201d\n\n\u201cWell, that\u2019s the thing,\u201d the rugged captain said, scratching his head. \u201cWe kind of decided to go our separate ways.\u201d\n\n\u201cOh, Ben. I\u2019m so sorry,\u201d Jessica said. \n\nShe gave Ben a supportive hug. He seemed confused, but eventually responded and put his arm around her waist.\n\n\u201cIt\u2019s OK,\u201d he said. \u201cIt was long overdue.\u201d\n\nTo her surprise, Jessica became aware of how Ben\u2019s hard body felt against her own. He wore jeans and a t-shirt and she a thin beach dress over her bikini, and she felt the contours of his muscles against her soft curves. She let go and mentally shook her head at her inappropriate cognizance. All this talk about the effects of that stupid plant obviously made her mind wander.\n\n\u201cAre you sure you\u2019re OK?\u201d Oscar asked, patting Ben on the back. \u201cI\u2019m sure we can postpone the expedition, at least for a few weeks.\u201d\n\n\u201cNo, I\u2019m fine,\u201d Ben sighed. \u201cI\u2019d rather get away for a while. But Maggie\u2019s obviously not coming along for the trip as a cook like we planned.\u201d\n\n\u201cThat\u2019s fine,\u201d Tony said. \u201cWe can sort ourselves out. Unless...\u201d\n\nHe glanced at Jessica.\n\n\u201cThat\u2019s a great idea!\u201d Oscar asserted. \u201cWhat do you say, honey? We always said you should come along sometime. We have a spare ticket, apparently.\u201d\n\n\u201cAs a cook?\u201d\n\n\u201cIt\u2019s not much work, and it\u2019s just three nights,\u201d Oscar assured her. \u201cYou\u2019ll have plenty of time to relax. And perhaps you'd rather do it on a beautiful, tropical island than alone here in our backyard?\u201d\n\n\u201cUhm. I don\u2019t know,\u201d Jessica said. \u201cI\u2019ll think about it. And speaking of relaxing in our backyard, that\u2019s what I was meant to do today. Can you guys sort out barbeque? I\u2019ve prepared everything, so you just need to fire up the grill.\u201d\n\nOscar kissed her on the cheek and went inside to get the food. Jessica stepped over to the pool, feeling the water with her toe. Nice temperature. But she did her laps in there most every morning, and the prospect of swimming in a tropical ocean sounded pretty good. She didn\u2019t mind coming along as a cook, even though it sounded like a demotion for a professional woman with her own career. But going on an excursion with her husband and four other men? She got along well with them, even if Tony sometimes got under her skin. Yet, she\u2019d be the only woman of the expedition.\n\nShe was just about to remove her dress before diving into the pool when she stopped herself. The conversation among the guys had gone quiet, and they seemed to sneak anticipating peeks in her direction. Apart from her husband, none of them had seen her in a bikini before, even though she\u2019d known some of them for many years. She grabbed the hem of her dress and pulled it over her head, pretending to be oblivious to their prying eyes.\n\nOr maybe she was just imagining it. She dove into the pool, thinking she clearly needed to cool herself down. The conversation had resumed when she came up for air. Oscar was starting up the barbeque, and the others studied maps of the islands they were traveling to. Jessica did a few laps before deciding it was time to get some sun.\n\nAgain, the group of men silenced as she climbed out of the pool. They tried to be discreet, but they were undoubtedly checking her out as she approached, breasts swaying in the confines of her bikini top. She had put on the bikini before Oscar\u2019s team arrived, and she now felt she should have changed. The one she wore, a gift from her husband, was made of thin fabric, and her nipples poked out as cheerful buds.\n\n\u201cDon\u2019t mind me,\u201d she said as she sat down on a recliner in front of them.\n\nShe picked up her book and started reading. The guys continued planning the last details of the excursion, but she was sure she caught them glancing at her now and then. Reading in a bikini was so obviously innocent, but with the rest of them properly dressed Jessica felt on display. She couldn\u2019t shake the feeling that she was showing off.\n\n\u201cWouldn\u2019t you rather do that in a tropical paradise?\u201d Oscar said, stepping over to give her a kiss.\n\nJessica closed her book. \u201cOK, I\u2019ll join.\u201d\n\n---\n\nAfter a good night\u2019s sleep and several flights, they traveled by boat to their remote destination. Jessica spent most of the cruise in her bikini, but the sensation of showing off wasn\u2019t as apparent now when the men hung out in nothing but swim trunks. She had known Liam and Adam where fit, but watching the sun reflecting in their sweaty bodies was outright distracting sometimes. She\u2019d never do anything inappropriate with them, of course, but she decided she could at allow herself to some eye candy. Tony was undeniably in good shape too, which shouldn\u2019t have surprised her. He and Oscar spent a lot of time at the gym to stay fit for their expeditions. But it was hard to admit she found that annoying man attractive.\n\nThe island looked even more beautiful than Oscar had described it, with white sand contrasting against the clear, blue water. It was larger than she pictured it, with a decent sized forest extending up the volcanic rock. Her eyes traveled over the green vegetation. She wasn\u2019t going to tell the others, but it felt foolish to travel all this way for some useless plant hiding among those trees.\n\nThe scenery grew even more spectacular as the sun set, painting the sky in pink. What her husband had failed to point out were the sleeping arrangements. Liam and Adam had brought tents to sleep on the beach, Ben had a hammock in the aft, and the boat cabin contained two beds where Oscar and Tony slept on their expeditions. Jessica had no problems sharing the narrow bed with her husband, but had she known they\u2019d be sharing the cabin with Tony, she would have brought something more concealing than a sheer nightgown to sleep in. She worried it might slip during the night to expose her, and she took the wall side of the bed, putting Oscar as a barrier between her and Tony. It was the proper thing to do. \n\nJessica woke up early next morning. Oscar and Tony were still asleep, and she decided to get started on the breakfast. Her husband had always been a heavy sleeper, and she managed to sneak to the bow without waking anyone up. The ocean breeze caressed her skin as she chopped the fresh fruit, and the open water with neighboring islands in a distant sure beat the view from their backyard. She had made the right decision to come along.  \n\nAn unexpected wave shook the boat and set a melon rolling. Before she had a chance to react, it made a splash as it fell into the water. They weren\u2019t short on supplies, but Jessica despised wasting food, and without even thinking about it, she quickly climbed down the ladder into the water. The waves pushed the melon towards the shore, and by the time she caught it, it was shallow enough to stand. She waded ashore, pleased to have saved the fruit.\n\nShe noticed Liam and Adam were awake, heads poking out of their respective tents. Melon under one arm, she waved at them. But they didn\u2019t wave back. Instead, they gaped at her, mouths open.  \n\nThat\u2019s when Jessica realized what she was wearing. Soaking wet, the thin nighty clung to her body like a second skin. Her dark nipples where on clear display. She might as well have been topless!\n\nShe froze. A part of her wanted to cover up, or maybe duck back under the water. But while it wasn\u2019t appropriate for her to present herself like this, tits on display before her husband\u2019s student, sneaking away in shame didn\u2019t feel like the right thing to do either. It would just emphasize her embarrassment.\n\nAnd then there was another voice inside her, like a soothing whisper, telling her they had already seen her. Would it be so bad if she just let them gawk a bit more? Wouldn\u2019t it be kind of fun, even?\n\nShe had to do something. For better or worse, she pretended nothing was out of the ordinary and continued up the shore. Her heart beat as she approached the boys, who stared wide eyed at her swaying tits. They had probably poked their heads out to take in the beautiful morning, not expecting a nearly naked woman to be part of the scenery.\n\n\u201cGood morning,\u201d she said, pleased her voice didn\u2019t betray her. \u201cI brought you some fruit.\u201d\n\nShe handed the melon to a dumbfounded Adam. Without waiting for a reply, she abruptly turned and waded back into the water. Her head was spinning as she swam back to the boat. Why on earth had she done that?",
        "\u201cI don\u2019t know what I was thinking,\u201d she said as she later explained to her husband what had happened. She at least had to let him know about her foolish behavior in front of his students.\n\nHe nodded understandingly. \u201cHmm. What do you think made you do it?\u201d\n\nJessica gave him a confused look. What could she say? That in the heat of the moment, it felt exciting to give the boys a good look? It just sounded too surreal to admit.\n\n\u201cI have no idea,\u201d she said.\n\n\u201cDo you think it was because of the flower?\u201d\n\n\u201cUhm. I\u2026\u201d Jessica started. She had just about forgotten about the plant and its ascribed effect. \n\n\u201cDo you think it affected your behavior?\u201d Oscar asked.\n\n\u201cI don\u2019t know. I chased after the melon without thinking. I think it was just to save it.\u201d\n\n\u201cBut later, when they spotted you\u2026\u201d Oscar pressed. \u201cDo you think it influenced your behavior then?\u201d\n\nJessica shrugged her shoulders in a maybe. She recognized that voice. This was Dr. Bergman talking, curious for clues. Perhaps it was a mistake to participate as her husband\u2019s study subject. But at least he wasn\u2019t upset she had showed off before his students. The prospect that his plant might have an effect seemed to rejoice him. \n\n---\n\nOscar turned out to be right about her duties. She had plenty of spare time between preparing meals, and she spent a lot of time reading under a palm tree. At this rate, she would finish all the books she brought long before the trip was over. Relaxation soon turned to boredom.\n\nTony had taken the students on an expedition to look for the plant the other side of the island, and Oscar was busy cataloging what they had collected so far. She decided to chat with Ben to pass the time. He was sitting in a chair at the beach, listening to the weather report over satellite radio. \n\n\u201cAny storms on the horizon?\u201d she asked.\n\n\u201cNo, sounds like we\u2019re safe.\u201d\n\n\u201cAm I disturbing you?\u201d\n\nBen turned off the radio. \u201cWe get all weather info digitally these days. Just an old habit to listen to the report.\u201d\n\nHe stood up and offered her his seat, the only chair available.\n\n\u201cOh, I\u2019m fine, thanks,\u201d she said, and sat down in the sand.\n\nHe nodded and took his seat again. They stared at the horizon in silence. \n\n\u201cSorry about your marriage,\u201d Jessica said eventually, mainly to break the silence. \n\nBen hummed ambiguously. \u201cSuch is life.\u201d\n\n\u201cYou don\u2019t seem very upset.\u201d\n\n\u201cShe was a friend I was married to,\u201d he said. \u201cNow she\u2019s a friend I\u2019m not married to.\u201d\n\nJessica nodded. That happened to some couples, the spark just fading. She knew Ben was away a lot, so it was probably easy to drift apart. Then again, she and Oscar were apart a lot too, but they always managed to compensate passionately when they reunited. Her husband was very good at making her feel desired.\n\nWhen Ben didn\u2019t offer more, she decided to go for a quick swim. The sun made her wet body glisten as she returned a minute later.\n\n\u201cAre you looking for someone else now that you\u2019re single?\u201d she asked, and immediately regretted it. She didn\u2019t consider them close enough to ask these personal questions, but she felt a need to drive the conversation. Ben was always friendly, but he\u2019d never been much of a talker. \n\nHe smirked. \u201cLooking? Isn\u2019t that always OK?\u201d\n\nShe giggled nervously. \u201cYeah, I suppose it is.\u201d\n\nHis comment made her aware of how little she was wearing as she stood before him. The low-cut bikini top left a lot of her breasts exposed, with glistening droplets in her cleavage. Her refreshing swim had made her nipples apparent through the thin fabric, and somehow the notion that she was on display made them stand at further attention. The seated captain wore sunglasses that made it difficult to see exactly where he looked, but surely he was checking her out? The thrill wasn\u2019t as powerful as when she\u2019d given Liam and Adam a show, and to Jessica\u2019s surprises, she craved more. Placing one hand on her hip, she closed her eyes and slowly ran her other hand from her head, down her neck and onto her chest. Could Ben tell she purposely posed for him?\n\nOscar was sorting out samples and taking measurements further up the beach. He seemed to have stopped his work to watch her sneakily pose for the captain. Realizing what she was doing, she waved at her husband and took off jogging towards him. He smiled as she approached, clearly enjoying the sight of his wife\u2019s swaying body. \n\nJessica straddled him, pushing him back against the sand. She gave him a passionate kiss. Surprised by her unusual public display of affection, he seemed taken aback, but his lips soon responded. She didn\u2019t stop him when his hand moved down over her ass, even though she knew Ben could see.\n\n\u201cYou know\u2026\u201d she whispered. \u201cThere is no one onboard that boat. How about we go and use the cabin for something other than sleeping?\u201d\n\n\u201cOh, I\u2019d love that,\u201d Oscar said, and kissed her neck. \u201cBut I have to finish this before the others get back.\u201d\n\nShe understood, but still pouted.\n\n\u201cThere is a nice little waterfall not far that way,\u201d Oscar said and pointed up the forest. \u201cMaybe you want to check it out if you\u2019re bored?\u201d\n\nShe gave him another kiss before dismounting him. This was a work expedition after all, and as much as she craved his attention, she had to respect Oscar\u2019s other duties. She wasn\u2019t as adventurous as her husband, but exploring a little sounded like a good idea. She grabbed a towel before taking off. If there was a waterfall, maybe she could go for a swim.\n\nThe waterfall turned out to be smaller than she expected, and the pond beneath it wasn\u2019t even knee high. But the pristine scenery was beautiful, with lush ferns and shading trees. She sat on a rock dangling her feet in the water, feeling relaxed and carless. \n\nA thought crept into her mind\u2014wouldn\u2019t it be even more rewarding if she took her top off? She didn\u2019t know where the idea came from. It just suddenly appeared in her head. She discarded the whim, thinking she was being silly. But it didn\u2019t leave her. Could the flower actually affect her this way?\n\nAnd would it be so bad if she took her top off? Lots of women go topless even with people around. Couldn\u2019t she allow herself to do it here, all alone in a tropical haven? Sure, she wasn\u2019t far away from their camp, but that didn\u2019t seem to bother her much. Not giving herself time to change her mind, she quickly unclasped her top. Pulse racing, she placed it on a rock beside her. She scanned her surroundings, both hoping and fearing someone would see her. \n\nAs she adjusted to the sensation, she grew more daring, deliberately shifting away from her top. If someone approached, she wouldn\u2019t be able to quickly put it back on. That was oddly appealing to her. The alleged waterfall was more of a trickle, but it was well suited to shower a tropical naiad. \n\nThere were no practical reasons for her to be topless. The top wasn\u2019t uncomfortable, and the canopy shaded the location enough that tan-lines weren\u2019t an issue. Jessica simply wanted to be topless, despite the risk of getting caught. Because of that risk, even. She felt enchanting as the cool water caressed her skin.\n\nThe sound of a snapping branch cracked through the silence. Jessica\u2019s heart raced. There were no large animals on the island, and it had to be a human coming her way. A man, specifically, given the crew of the expedition. \n\nJessica closed her eyes, pretending not to hear the approaching footsteps. The urge to cover up was barely noticeable, dwarfed by the desire to be seen. What would Oscar think if it was him? He hadn\u2019t been upset when she told him about the see-through encounter with his students, but that had at least originally been incidental. How would he feel about his wife willingly baring her tits, knowing she could be caught by someone from his team? \n\nAnd what if it was someone else? She shivered at the thrill rushing through her body, listening carefully for clues. Was someone staring at her right now, admiring her topless display? She could no longer hear footsteps. Unable to fight her curiosity, she opened her eyes, trying to appear casual. To her disappointment, she couldn\u2019t see anyone. Maybe whoever it was had just passed nearby, heading for somewhere else. Or maybe he\u2019d seen her and quickly turned away. \n\nShe was just about to gather her things and head back when her eyes fell on Ben. The captain was standing behind some ferns, staring straight at her. He didn\u2019t seem to be hiding exactly, but he had stopped at a distance where he wouldn\u2019t disturb her. How long had he been standing there? He seemed frozen in his tracks. Jessica\u2019s nipples stood at full attention, demanding to be admired.\n\nBen\u2019s mouth twitched as their eyes met.\n\n\u201cSorry,\u201d he said. \u201cI didn\u2019t mean to intrude.\u201d\n\nHe spun around and quickly walked away. Jessica remained seated, chest heaving at the thrill. His abrupt departure made her realize how inappropriate she was, willingly letting him catch her with her tits on display. What was happening to her?\n\nEventually she headed back down to their camp. She fought the urge to remain exposed and put the top back on. She found her husband sitting on the beach, staring at the horizon. As he often did, he seemed lost in his thoughts, and didn\u2019t turn as she approached. \n\n\u201cDo you mind if I join you?\u201d she said.\n\nHe lit up as he saw her and gave her a tender kiss. \u201cCould any man mind have you nearby?\u201d\n\nJessica brazed herself. \u201cI think I should tell you something.\u201d\n\n\u201cOh, yeah?\u201d\n\n\u201cNothing bad, I think. It\u2019s just\u2026\u201d\n\nOscar gave her a curious look. \u201cWhat?\u201d\n\n\u201cWell, I took my top off.\u201d\n\n\u201cOK.\u201d\n\n\u201cAnd Ben caught me. He saw me topless. I don\u2019t know if he was spying on me, or just happened to come by.\u201d\n\nOscar nodded understandingly. \u201cI see. That was kind of my fault.\u201d\n\n\u201cWhat?\u201d\n\n\u201cWell, I asked him to go check on you.\u201d\n\nJessica gave him a confused look. \u201cYou did?\u201d\n\n\u201cYou know, to see if you needed anything,\u201d Oscar said. His expression shifted from apologetic to intrigued. \u201cSo, you were topless?\u201d\n\nJessica nodded. Oscar had never been the jealous or possessive type, but she was still surprised his questions lacked any hint of accusation. \n\n\u201cThat doesn\u2019t sound like something you\u2019d do,\u201d Oscar concluded.\n\n\u201cI know.\u201d\n\n\u201cDo you think it\u2019s because of the flower?\u201d\n\n\u201cUhm, I guess, maybe. As you say, I don\u2019t normally do things like this.\u201d\n\n\u201cBut you decided to put it back on?\u201d Oscar asked, looking at her bikini top.\n\n\u201cYeah, but to be honest with you,\u201d Jessica began, and gave him a guilty frown. \u201cI didn\u2019t really want to. At least a part of me that wanted to remain exposed.\u201d\n\nShe felt the thrill rush through her as she revealed her strange desire to her husband.\n\nOscar hummed. \u201cI see. But you could control it?\u201d\n\nJessica recognized that voice. Hello, Dr. Bergman.\n\n\u201cWhat if...\u201d Oscar continued. \u201cWhat if you didn\u2019t control it?\u201d\n\n\u201cWhat do you mean?\u201d\n\n\u201cMaybe the effect of the flower can be controlled through willpower.\u201d\n\n\u201cI suppose,\u201d Jessica said. \n\n\u201cDo you think you could make yourself more open to it?\u201d\n\n\u201cUhm, I guess I can try,\u201d Jessica said cautiously. Wasn\u2019t she already responding strongly to the flower?\n\n\u201cExcellent!\u201d Oscar exclaimed. He gave her a pleased smile and kissed her on the forehead. \u201cYou\u2019re the best.\u201d\n\nThey sat in silence, holding each other as they looked out over the ocean. Jessica leaned her head on Oscar\u2019s shoulder. Supposedly, she was doing her husband a favor by testing his natural stimulant, but it felt a lot like a treat for her. The effect she felt was subtle, and it wasn\u2019t like new desires popped into her mind. She just felt more aware of them. Whims she usually wrote off as stupid or outrageous suddenly felt appealing. And now Oscar wanted her to be more open to these desires. \n\nWhen she noticed Tony and the students approaching, she realized she\u2019d better get started on dinner. It was after all why she came along on the expedition, even if other matters seemed more relevant to her now. Oscar and Tony discussed the daily harvest of flowers, and Liam and Adam listened to their mentors. Jessica asked Ben to help her prepare the food. \n\n\u201cSorry about before,\u201d the captain said eventually. \u201cI didn\u2019t mean to spy on you.\u201d\n\nJessica raised an eyebrow. \u201cI thought you said looking was fine?\u201d\n\n\u201cYeah, but\u2026 Uhm. But I didn\u2019t intend to\u2026\u201d\n\n\u201cWhether or not you intended to,\u201d she said. \u201cYou still did. And finding topless woman in the forest isn\u2019t something to feel sorry for, is it?\u201d\n\nFor once, Ben seemed perturbed. Jessica was surprised by her own audacity. She didn\u2019t usually tease like that. She realized she was bothered by his apology. It didn\u2019t sit well with her, even if he meant well. Couldn\u2019t he just indulge in a healthy voyeur-exhibitionist exchange without implying something improper happened? They went back to chopping vegetables in silence.\n\nWhen Oscar helped her do the dishes after dinner, Jessica told him about her conversation with Ben. She knew she was being irrational, but her husband seemed keen to know how she felt. \n\n\u201cIt\u2019s no big deal,\u201d she assured him. \n\n\u201cNo, I understand,\u201d Oscar said. \u201cIf you are to feel open to the effect of the flower, we have to be accommodating.\u201d\n\nHe wiped his hands and joined the rest of the group, who were enjoying a beer on the beach. \n\n\u201cListen up, everybody,\u201d he said. \u201cFirst off, great job today. We have collected more than two thirds of what we set out to do. Tomorrow morning, Ben will take Tony over to the neighboring island to look for more plants while the rest of us catalog today\u2019s harvest.\u201d\n\nThe others hummed in agreement. \n\n\u201cSecondly,\u201d Oscar continued. \u201cAs you know, Jessica has kindly agreed to be part of our trials. It is crucial we all support her and don\u2019t make her feel reluctant to the flower\u2019s effect.\u201d\n\nThe group nodded cautiously, throwing glances at Jessica.\n\n\u201cDon\u2019t get your hopes up,\u201d Jessica said, and giggled nervously. Her comment was meant to tease them about their buoyant expectations of the flower\u2019s potency, but it could just as well refer to scandalous things they might wish her to do under its influence. Either way, she was no longer convinced their hopes were unfounded.\n\n\u201cOf course,\u201d Oscar said. \u201cBut this is a great opportunity to get some first-hand experience of someone trying the wanton flower. I don\u2019t want anyone discouraging any behaviors it may promote. We can learn a lot.\u201d\n\nThe group again nodded, this time with more enthusiasm. Her husband\u2019s words spun in Jessica\u2019s mind afterwards. What kind of behaviors was he thinking of? All she had done so far was a bit of incidental flaunting. But a hunger had awakened inside her, urging her to push further. \n\n---\n\nWhen it was time for bed, Jessica realized she hadn\u2019t washed the saltwater out of her nighty after her morning dip in the ocean. She thought briefly it maybe was the flower making her forget, giving her an excuse to sleep topless. But she knew enough about biochemistry to discard the idea as nonsense. She put a tank top on instead. \n\nOscar and Tony had given her the privacy of the cabin to get change for bed. She first found it odd, given Oscar\u2019s speech about not suppressing her potential response to the flower. But it didn\u2019t mean they would instigate anything. That was up to her. Her top didn\u2019t cover her ass, and yet she chose to put on a pair of string panties. \n\n\u201cI\u2019m done!\u201d she shouted.\n\nRather than hiding under the blanket, Jessica faced away from the door, and proceeded to brush her hair. Her body tingled with anticipation as Oscar\u2019s and Tony\u2019s voices approached. Their conversation stopped as they entered. Pretending nothing was out of the ordinary, she continued her strokes with her essentially naked ass on display. \n\nTony lay down on his bed, and Oscar on theirs. She guessed her husband could tell her appearance was purposely flaunting. See never wore string panties to bed back home. What excited her the most was showing of her exhibitionism for him. Occasionally, he had hinted over the years she needn\u2019t be shy about showing off a bit. She began to see he had a point. \n\nTony was reading a book, but Jessica could tell he wasn\u2019t very focused. Her hair was thick but straight, and it didn\u2019t need many strokes to sort out. Yet, she continued to prance around. She constantly caught him glancing. Good, she thought. Knowing her body captivated him gave her a strange sense of upper hand in their bickering. \n\nOscar lay in the middle of the bed. It felt to Jessica like he was giving her the choice to either wedge in behind him like the night before, sheltered from Tony\u2019s eyes, or take the edge side, close to their roommate. \n\n\u201cScoot over,\u201d she said, waving Oscar towards the wall side of the bed. \n\nAs he made room for her, she acted on a whim, and grabbed the hem of her top, yanking it over her head. Her boldness shocked her. She kept her back towards Tony, but it still felt daring to stand there in nothing but her string panties. Oscar stared wide-eyed at her. He had admired her tits many times before but having him do it right next to Tony thrilled Jessica on a different level. She grinned at her husband, excited to be so brazen in front of him. He smiled back and invitingly lifted the sheet on her side of the bed. Jessica giggled as she lay down next to him, covering her breasts with her arm until she was covered under the sheet. She pretended not to notice Tony\u2019s hopeful eyes following her every move.\n\nThe stirring prospect the sheet might slip and expose her during the night made it hard to fall asleep. And when she finally did, her slumber was restless. Heavy rain smattered against the roof and woke her up in the middle of the night. Realizing where she was, she looked down to see if she had become exposed, but she had not. \n\nMaybe it didn\u2019t have to happen by accident? Her breath grew heavy as she slowly peeled the sheet down, exposing her chest. Her husband had rolled over during the night, but Tony lay on his back, head tilted towards her. The moon lit up the cabin enough to give him a clear view of her breast, perky nipples pointing to the ceiling. If he\u2019d only opened his eyes.\n\nIn a moment of shame, she quickly covered up. What was she doing, lying there hoping her husband\u2019s friend and colleague would see her exposed tits? This was exactly the type of preposterous whims she normally ignored. It seemed the flower was affecting her impulse control.\n\nBut impulsive could be good, right? The exposing incidents of the day had added an erotic shimmer to her life. And hadn\u2019t Oscar asked her to be more open to the flower\u2019s effect? She yanked the sheet down again.\n\nHer sudden movement made Oscar turn over. Jessica nearly covered back up again, but her husband still seemed to be asleep. And nothing in his behavior so far suggested he would get upset if she flaunted herself again. Increasingly daring, she removed the sheet completely. If Tony woke up, she wouldn\u2019t be able to quickly cover up. \n\nShe felt like in a dreamy state. The combination of somnolence and darkness always gave the night its particular temperament. Now it blended with a sense of divine sensuality. For a long time, she just lay there, relishing her secret exposure.\n\nAs if acting on their own accord, her hands moved softly over her body, spawning goosebumps as they roamed. The first few times her fingers passed over her panties, she merely continued down her thighs or back up over her waist. But eventually they lingered. Her fingers traced the laced hem, mapping exactly how little she was wearing. \n\nAs if cheekily testing the waters, her fingers began nudging the elastic waistband. She bit her bottom lip as she prodded. Titillation spread through her body, taking control of her actions. In a moment of daring lust, she clutched the front of her panties with one hand and stretched the hem down. She gasped as the air caressed her pussy. \n\nHeart beating, she held her exposing pose for a few seconds before releasing the hem. What was she doing, flashing her private parts like this? But the thrill was addictive. Hooking her thumbs into the waistband, she pulled down again. This time she raised her hips and pulled her panties down. She left them around her thighs, and daringly raised her hands to her chest to prolong the time it would take to cover up. ",
        "Her hands roamed again, and her touch felt electrifying against her responsive skin. She gasped as her fingers brushed over her excited nipples. One hand lingered, gently fondling her breast, while the other traveled downwards. She teased herself, fingers running in circles around her pussy, but never quite reaching it. Knowing her husband or his colleague might open his eyes and catch her made her dizzy with excitement. \n\nShe yelped softly as she finally allowed her hand to travel over her pussy. Damn she was wet. Her middle finger traced along her slit, sending jolts of pleasure through her body. She had never before touched herself in secret next to her husband, and now she was doing it right where Tony could catch her too. Her indecent behavior made her lust stir, and her fingers grew zealous, homing in on her clit.\n\nJessica was pleased to see her husband seemed sound asleep. Surprisingly, she wasn\u2019t ashamed of what she was doing, and part of her wanted him to see just how outrageously sinful his wife could be. In fact, she was sure he\u2019d be delighted his flower made her give in to temptation. But right now, she didn\u2019t want to be his study subject. She needed to explore the sensation on her own and familiarize herself with the thrill. She would tell her husband about it tomorrow, giving her an opportunity to relive the experience. The thought of describing to her husband what she had done beside him made her busy fingers intensify. A series of soft whimpers escaped her moth as she pulled softly at her nipples.\n\nHer head flung around as she heard Tony move. Instinctively, she stopped her rubbing motion, and protected her modesty with a hand over her pussy and an arm across her tits. Tony still appeared to be sleeping, but his side of the room was shaded, making it difficult to see if his eyes were completely closed. There was a struggle inside her between the part of her that dreaded he would see her and the part that desired it. But the latter was rising in power, diminishing her will to fight her urges. Staring at Tony, she resumed her self-pleasure, determined not to stop, no matter what.\n\nIncreasingly greedy, she rolled over on her side, face towards Tony. Her panties around her thighs proved an obstacle, and she discarded them before spreading her legs, one bent knee pointing to the ceiling. Her shifting seemed to disturb Oscar, and he rolled over, lying sideways behind her. She gave him a quick glance to make sure he was still sleeping, but she barely cared anymore. All she wanted was to give Tony a perfect view of her act if he opened his eyes. Go on, she thought. See me! Watch as I pleasure myself before you! Maybe he was already, peeking through narrow eyelids. The rain had subsided, and the wet sound of her furious fingers mixing with her heavy breath were clearly audible in the small room.\n\nHer orgasm was simmering right below the surface, but she managed to keep it controlled. She needed to drag out this moment of debauchery. She slipped first one, then two fingers inside herself.\n\nAs she bucked her hips back and forth against her fingers, she accidentally pushed back against her husband. She froze and glanced over her shoulder. His eyes were closed, and she was just about to continue her sinful self-indulgence but hesitated. What exactly had she pushed back against? Her husband was still covered, but something very rigid had poked against her through the sheet. Feeling daring, she let her hand explore behind her. \n\nShe heard her husband gasp as she found his erection. Had her beloved husband secretly watched her, not wanting to disturb? And had he not just accepted her shameful behavior, but also got turned on by it? Or maybe she just caught him in an erotic dream. Either way, he seemed awake now, and if he truly meant her response to the flower shouldn\u2019t be repressed, she would make him prove it.\n\nJessica lifted the sheet to minimize the amount of fabric between her exploring hand and Oscar\u2019s cock. He grunted at her touch, and she slipped her hand inside his boxers. God, he was rock hard. Wrapping her hand around his shaft, she caressed his familiar contours. She craved that wonderful cock somewhere more fitting than in her hand. \n\nShe turned and faced him. In the dim moonlight, she could still see the lust in his eyes. She yanked down his boxers, setting his erection free. \n\n\u201cI need you inside me,\u201d she whispered.\n\nHe merely nodded in response, and she climbed on top of him. The bed creaked, and she looked over at Tony. Did she just catch him shutting his eyes? \n\n\u201cOh, yes,\u201d Jessica gasped as she slipped her husband\u2019s cock inside her. She was soaking wet and impaled herself with one steady back-thrust. \n\nShe panted as she began grinding on top of her husband, savoring the sensation of his excited cock inside her. It had always brought her intense pleasure, but when experienced next to someone else, it felt more glorious than ever. She looked over at Tony again. \n\nThis time, their eyes met. It was too obvious for either of them to pretend they both weren\u2019t caught. Rather than letting it dissuade her, Jessica moaned and began riding her husband harder, making her heavy tits bounce to the benefit of Tony. Fucking in front of a spectator drove her wild, and she kept looking over to him to make sure he still watched. \n\nHis expression was hard to read to read in the dim light. Jessica gave him a defiant stare. There was something oddly satisfying about doing this in front of Tony. Her impure thoughts made her squeal with erotic delight. Here she was, fucking her husband in front of his colleague and friend. Her lust spiraled out of control.\n\n\u201cOh fuck!\u201d she screamed. \u201cI\u2019m coming!\u201d \n\nThe climax hit her hard. Surrendering to pleasure before a spectator amplified the sensation. Her husband grunted as she pulled him along into elation. Wave after wave of electrifying pleasure flowed through her, but even as she lost control of her body, she didn\u2019t for a moment lose track on the fact that she was being observed. As her body trembled in erotic bliss, she looked at Tony, making sure to leave a memorable imprint in his mind. \n\n---\n\nJessica woke up in a daze the next morning, eyes slowly adjusting to the light. She was alone in the cabin, and as the memories from the night crept into her mind, it all felt like a wet dream. But her nakedness bore evidence of what had transpired. She felt a moment of shame about facing Tony after what she had let him see, but that shame was almost immediately replaced by something else\u2014a sinful desire to find out how deep of an imprint she had left on him was. \n\nShe considered briefly going outside naked, but it was too blunt. She put on her bikini and walked outside. The men were all on board, eating breakfast in the stern.\n\n\u201cI was meant to make you breakfast,\u201d Jessica said. \u201cHave you all been up long?\u201d\n\n\u201cI figured you could use a sleep-in,\u201d Oscar said, standing up to offer her his seat. \n\nJessica glanced around, wondering if Oscar or Tony had told the rest about what she had done during the night. But none of them seemed to give her any insinuating looks or remarks about why she might need to sleep in. Even Tony seemed casual.\n\n\u201cActually, honey,\u201d Oscar said. \u201cDo you mind having your breakfast on the beach? Tony and Ben are taking the boat to the neighboring island. Unless you\u2019d rather go with them?\u201d\n\nJessica glanced at Tony. \u201cNo, I\u2019ll stay here.\u201d\n\nAs much as she would enjoy teasing Tony some more, doing it on an excursion sounded like too much work. And there were more fishes to lure in these tropical waters. Soon thereafter, she sat on the beach, enjoying a breakfast smoothie as she casually admired Liam and Adam\u2019s lean muscles as the bare-chested students set up their work nearby. They owed her some eye candy after what she had given them yesterday.\n\n\u201cI\u2019m trekking up the mountain for an hour or two,\u201d her husband said as he sat down next to her.\n\n\u201cDo you want me to go with you?\u201d she asked, feeling momentarily guilty about admiring his students.\n\n\u201cIt\u2019s just a quick hike to collect some vegetation data,\u201d Oscar said, and held up the camera in his hand. \u201cI need some photos of the understory. I think you\u2019ll be better off here.\u201d\n\nJessica nodded tentatively. \u201cDo you want to talk about last night first?\u201d \n\n\u201cOh, of course. If you want,\u201d he said and sat down next to her. \n\n\u201cDid things go too far yesterday?\u201d\n\n\u201cWhat? No. I\u2026\u201d\n\n\u201cYou know Tony saw us, right?\u201d \n\nOscar looked out over the ocean at the boat carrying Ben and Tony to the neighboring island. \u201cYes. I thought that was what you wanted.\u201d\n\n\u201cIt was. But don\u2019t you mind he saw your wife naked? And before I realized you were awake, I\u2026\u201d\n\nOscar put his arm around her. \u201cHoney, of course I\u2019m OK. I was the one who suggested you\u2019d try the flower. How could I hold it against you if you respond to it?\u201d\n\nJessica nodded. She fetched the vile from her bag and took out a capsule. She studied it a moment before holding it up between her thumb and index finger.\n\n\u201cSo, you think I should continue the treatment?\u201d she asked.\n\nOscar nodded eagerly. \u201cYes. Seeing the effect in action is an exciting opportunity to gain qualitative insight into the flower\u2019s potency. I\u2019m very grateful you agreed to test it.\u201d\n\nJessica cocked her head. Was her husband referring to her as data? \n\n\u201cAlright. Suit yourself,\u201d she said and swallowed the capsule. \n\nOscar looked pleased. \u201cI better take off. Ask Liam or Adam if you need anything.\u201d\n\n\u201cThey\u2019re not going with you?\u201d\n\n\u201cNo, I\u2019ve told them to catalog what we collected yesterday.\u201d\n\n\u201cOK, I\u2019ll try not to disturb them,\u201d Jessica said, and added as her husband turned to walk away, \u201ctoo much.\u201d\n\nHe turned to give her a curious look but said nothing as he continued towards the forest. \n\nAt first, Jessica kept to herself, reading in the shade of a palm tree. The boys were busy taking measurements of flower samples before putting them in Ziploc bags. She tried to focus on her book, but her eyes were constantly drawn in their direction. It seemed her mind was consumed with erotic innuendos. She wasn\u2019t much older than them\u2014maybe six or seven years\u2014but she still felt like a cougar as she watched them, sun glistening in their bodies. \n\n\u201cDo you mind if I join you,\u201d she said as she approached.\n\n\u201cOf course, Mrs. Bergman,\u201d Liam and Adam said in unison.\n\nJessica smirked. Her husband had early on made his students stop referring to him as anything other than Oscar. But they insisted on calling her Mrs. Bergman. She now found that oddly pleasing. It was more sinful for Mrs. Bergman to do what she planned than it was for Jessica. She spread out a beach towel next to them and lay down flat on her back to read her book.\n\n\u201cDo you mind if I remove my top?\u201d she asked casually soon thereafter. She purposefully didn\u2019t offer a reason.\n\nThe boys gaped at her, too stunned to speak. Jessica smirked. Their anticipating eyes answered plenty. She sat up and unclasped her top. The thrill rushed through her as she set her tits free, but she acted unperturbed, as if was perfectly normal for her to go topless before her husband\u2019s students. She remained seated, resting on her straightened arms behind her. Chest pushed against the sun, she gave them an enticing view.\n\nThe sun reminded her she\u2019d better put on sunscreen. She began at her feet, and worked herself up her slender legs, pretending not to notice the boys\u2019 attention. She lay down as she reached her stomach and let her hands roam. Taunting the boys, she repeatedly approached her breasts, but diverted her hands before reaching their target. She found their expectant eyes amusing, but also arousing. Gratifying her audience as well as herself, she finally let her hands move over her chest. Her own touch felt erotic when enjoyed by prying eyes, and her hands quickly became greedy. Eyes closed, she caressed her tits before them, flicking her finger over her excited nipples. Her heavy breath made it difficult to pretend she was unmoved by what she was doing.\n\n\u201cDid you measure this batch?\u201d she heard Adam ask.\n\n\u201cYeah, I think so,\u201d Liam replied, scratching his blond head.\n\n\u201cBut there\u2019s nothing in the spreadsheet,\u201d Adam said.\n\n\u201cReally? I\u2026 Oh fuck, I\u2019ve put it in the wrong sheet.\u201d\n\nAdam sighed. \u201cWe\u2019re gonna have to redo this batch.\u201d\n\nJessica chuckled. \u201cSeems you boys are distracted.\u201d\n\nShe turned over and lay on her stomach, giving the students a moment to sort out their mess. But not for long.\n\n\u201cCan you do me a favor?\u201d she asked. \u201cCan you put sunscreen on my back?\u201d\n\nThe boys nodded enthusiastically and then looked hesitantly at each other, as if silently trying to decide who would get this pleasure. \n\n\u201cIt\u2019s OK,\u201d Jessica assured them. \u201cYou can do it together.\u201d\n\nShe could barely believe how audacious she was, but she purred inside. Liam knelt by her feet and started at her calves, working his way up her legs. Adam positioned himself by her head and rubbed the lotion into her shoulders. They used long strokes, caressing their way over her body. \n\nLiam focused increasingly on her upper thighs. Her bikini bottoms were cut high, and his fingers roamed ever so close to her exposed cheeks. Similarly, Adam moved his hands along her sides, fingers brushing against the sides of her tits. It felt heavenly, having two pairs of hands on her body. \n\nBut Jessica wanted them bolder. She knew she had to lead the way. Her bikini bottoms were fastened with knots at the waist, and she daintily grasped a string on each side between her thumb and index finger. Ever so slowly, she pulled out. The faint popping sound as the knots snapped open sent shivers through her body. Without missing a beat, she pulled the bottoms off from underneath her. \n\nRound and firm, Jessica was proud of her ass. But it wasn\u2019t meant to be admired by anyone other than her husband, and particularly not his students. Yet, here she was, bare-assed before them. The boys paused momentarily, as if shocked by the explicit view they were presented with. \n\nTheir hands soon roamed again. They shifted to kneel on either side of her, continuously running their palms over her responsive skin. They gradually outdid each other, moving further and further onto her cheeks. Before long, they greedily massaged her ass. She arched her back, pushing her ass against their hands. \n\nSensuality flowed through Jessica. Eventually she rolled over. She felt more empowered than vulnerable in her position with two men looking down on her. Liam and Adam\u2019s eyes were dilated, as if greedy to take in every inch of her naked body. She was neatly trimmed, with just a strip of dark pubes decorating her otherwise naked pussy. Jessica parted her legs, allowing them to see just how wet they made her. \n\n\u201cGo on,\u201d she purred. \u201cYou can touch me.\u201d\n\nIt felt odd to candidly tell them what she wanted. But the notion she had them captivated, prepared to follow her directions, made her feel divine. As their hands returned, they didn\u2019t even use the sunscreen as a pretense. Her chest heaved with excitement at their roaming caress, hands touching her from her legs up to her shoulder and down on her arms. They were sophisticated suitors, building up the suspense inside her by roaming ever so close to explicit areas. Her nipples stood at full attention, and she moaned when their fingers brushed against them. \n\nTheir light touch intensified, and soon they openly groped her tits. She squirmed and moaned. Her behavior was utterly disreputable, but that just made it even more alluring. She already had four hands tending to her body, but still added her own. All worked up, she went straight for her aching pussy. Teasing both herself and prying eyes, she moved her fingers over her smooth folds a few times before parting her lips. She groaned as her middle finger swirled over her clit, and she spread her legs far to give them a good view of what she was doing. Would Oscar really approve of this, his wife masturbating while his students played with her tits?\n\nJust as the thought hit her mind, she turned her head and saw him sitting on a fallen tree trunk further up the beach. What a sight she must be, stark naked with two young men\u2014one blond and the other black\u2014caressing her body. Rather than feeling abashed by what she\u2019d been caught doing, it heightened her desire. \n\nHer pussy craved a deeper touch, and she slipped a finger inside her. A second soon followed, and she began fucking herself, all the while enjoying the touch of two men at her sides. They played with her tits, pulling gently at her nipples. It wasn\u2019t long before the climax approached, and she screamed out in abandoned lust as her body began shaking. \n\nJessica stared up at Liam and Adam as she regained her composure. They looked shocked and utterly turned on by what they had witnessed.\n\n\u201cThat\u2026\u201d she purred. \u201cThat was very nice.\u201d \n\nShe looked over to her husband, who gave her an ambiguous look before reaching for his camera. He snapped a series of photos before proceeding to write something in a binder resting on his lap. Was he taking notes? If that\u2019s what he wanted, she would continue to be an interesting study subject. She glanced to her sides. Taken by her performance, each of her suitors had obvious erections straining their trunks. \n\n\u201cGo on,\u201d she said, her voice oozing with erotic undertones. \u201cSet them free.\u201d They hesitated, and Jessica clicked her tongue. \u201cI\u2019ve showed you mine. It\u2019s only fair you show me yours, right?\u201d\n\nThey followed her instructions, and Jessica found herself flanked by two naked men with erections pointing to the sky. Her greedy eyes took in their shapes, and she raised up to rest on her elbows for a better view.\n\n\u201cStroke yourselves,\u201d she said. \n\nThey looked stunned by her command, but their eyes lit up. They reached for their cocks and began slowly running their hands along their lengths. Jessica jerked her gaze between them. It wasn\u2019t like she had longed to see a cock other than her husband\u2019s, but knowing she had made them this hard filled her with pride. She looked over to Oscar, only to see him snapping photos of the whole spectacle. Liam and Adam stroked themselves with fervor, and Jessica began fondling her breasts for further inspiration. \n\n\u201cGo on, boys,\u201d she said. \u201cYou can come on my tits if you want.\u201d\n\nHer words were blunt and sounded almost comical coming out of her mouth. But it was what she felt, and it was liberating to be explicit. The young men grunted and pumped their fists over their cocks. Jessica cupped her tits, holding them up as an inviting target. She gasped as the first splash of cum landed across her chest. It was soon followed by another from the other side. Her eyes kept darting between their erupting cocks, their excited faces, and her increasingly cum covered tits. She giggled joyously as glistening white strands landed across her tits.\n\n\u201cOh, wow,\u201d she said as their flow subsided. They looked unsure what to do as their senses returned. Jessica she could barely believe what she had asked them to do. Yet, it felt somehow perfectly natural to have two men showering her with cum. It felt like a tribute to what was awakening inside her. \u201cWhy don\u2019t you boys go have a swim when you\u2019re ready for it.\u201d\n\nAs the naked young men took off running for the water, Jessica stood and walked over to Oscar with a confident swagger to her hips and a sly smile to her lips. His eyes darted over her body as she approached.\n\n\u201cSorry,\u201d she said. \u201cSeems like I disturbed your students after all.\u201d\n\nHis mouth twitched. \u201cCan I take your picture?\u201d\n\nJessica rolled her eyes at him. \u201cNow you ask? But... I suppose you have to record your data.\u201d \n\nShe struck a pose for him, hands on her hip. Early in their relationship, he had asked to take nude photos of her. She had refused, worried they could accidentally end up where they shouldn\u2019t. Now she happily let him snap away, capturing her cum covered tits in all their glory. It felt satisfying to shamelessly pose for her husband, revealing to him just how content she was with what she had done.",
        "\u201cCome,\u201d she said. \u201cLet\u2019s go for a swim.\u201d\n\n\u201cUhm, maybe later,\u201d Oscar said. \u201cI need to make some notes about today\u2019s observations.\u201d\n\nNotes? Observations? She shook her head at his priorities. He had just watched her masturbating while two young men groped her, and he said nothing when she made them shoot their cum over her tits. And now he was acting like this was just another piece of his scientific puzzle. Just how far did her husband expect the flower to push her? From the way his notepad covered his crotch, she suspected it wasn\u2019t just the scientist inside him who had observed her with Liam and Adam. She shrugged her shoulders and strolled down to the shore. Tony and Ben would return soon, and it was about time she got started on the lunch.\n\n---\n\nJessica prepared and ate lunch wrapped in a towel. It nearly fell off her body at several occasions, and she giggled as she adjusted it, knowing full well it drew further attention to her. After eating, Oscar and his research team worked hard on cataloging the harvest. Jessica decided not to disturb them further. But Ben was relaxing under a palm tree. He seemed like fair game.\n\n\u201cHow was the excursion?\u201d she asked. \n\n\u201cFine,\u201d Ben replied.\n\n\u201cDid you find many flowers?\u201d\n\n\u201cA few.\u201d\n\nJessica gave up on conversing with him. It was never his strong side. But his eyes were quite communicative, constantly darting to the bottom hem of the towel. Apparently, he was curious to know if she was naked underneath. Giving him some clues, she rinsed her bikini with freshwater and hung it out to dry. \n\n\u201cI\u2019m going to the waterfall to rinse myself off too,\u201d she said. \u201cYou remember where it is right?\u201d\n\nJessica winked at him and walked off. She stopped as she reached the forest edge. Turning her head to make sure Ben still watched her, she casually unwrapped the towel, letting it fall to the ground. The thrill rushed through her. She turned her head again as she started walking, happy to see Ben following her. \n\nShe strolled slowly to let him catch up. What a sight she must be, walking naked through the forest without any means of covering up. She tingled with erotic pride, and every step felt like a choreographed exhibition of female sensuality.\n\nJessica stopped as spotted one of the flowers. The plant was larger than she\u2019d imagined it, like a small bush. She smiled as she studied the flower, glad she\u2019d been so wrong about its potency. The effect still surprised her. She knew synthetic drugs\u2014or even pot or alcohol\u2014could lower people\u2019s inhibitions. But they typically had side effects. Apart from a heightened awareness of her erotic desires, she felt very much like herself. Her rational side was still there, and it was surprisingly easy to justify her behavior. Of course she should make herself open to the flower\u2019s effect if it made her feel this good. Her husband condoned it, so why restrain herself?\n\nShe looked around to see if she could spot Ben, but she couldn\u2019t see him. Yet, she felt sure he spied on her. No man would pass on the opportunity to watch her walk naked through this tropical paradise. Before she resumed her strolling, she knelt down and smelled the flower. \n\nThe heavy rain during the night had increased the flow of the waterfall. The water was invigorating as it splashed against her body. The water flowed off a stone wall, and thinking her position might shade her exhibition, she moved over to a rock in the open. She sat down, feet resting in the pool of water, and resumed her caress. Her fingers felt good, but it was primarily to give Ben a good show. It felt liberating to admit to herself she was purposely trying to excite him. \n\n\u201cYou know\u2026\u201d she bellowed, loud enough to be heard from afar. \u201cYou can come and watch me closer.\u201d\n\nAt first, she heard nothing, and she began wondering if Ben hadn\u2019t followed her after all. But with a cracking sound he came out from behind some bushes. He was bare-chested and carried her towel in front of him to hide his crotch. \n\n\u201cOh, you brought my towel,\u201d she said. \u201cThanks, but I\u2019d rather sit here and let the breeze dry me. Maybe you can keep me company?\u201d\n\nBen nodded and sat down on a rock in front of her, still using the towel to cover himself.\n\n\u201cDo you know what I did this morning when you and Tony were away?\u201d Jessica asked. \u201cI made Liam and Adam masturbate in front of me.\u201d She grinned at Ben\u2019s shocked expression as she continued. \u201cSo, there is no need to hide anything from me. I\u2019ve agreed to be open about the effect the flower has on me, so it\u2019s only fair you should be open about the effect I have on you, don\u2019t you think?\u201d\n\nHer logic was flawless. Ben nodded as he put the towel away, exposing a substantial bulge in his shorts. \n\n\u201cDon\u2019t be shy,\u201d Jessica oozed and briefly parted her legs to flash her pussy. \u201cTit for tat.\u201d\n\nBen looked unsure at first, but his hands seemed to act on their own accord. He pulled down his shorts, releasing his massive erection.\n\n\u201cOh, wow\u2026\u201d Jessica said and rewarded him by parting her legs, treating him to a perfect view of her glistening pussy.\n\nThey sat in silence, taking in each other\u2019s naked form. Ben was a ripped man. His muscles didn\u2019t seem crafted by long hours at the gym but from a lifetime of hard labor. His cock was equally rigid.\n\n\u201cDo you mind if I have a closer look?\u201d Jessica asked but didn\u2019t wait for a response before stepping over to him.\n\nBen gaped at her, eyes drinking in her every step as she approached. She sank to her knees a few feet in front of him, using the towel to protect her knees. For many years, she hadn\u2019t seen a cock other than her husband\u2019s. Now she was looking at the third one within a single day. It wasn\u2019t exactly something she had gone around wishing for, but the sight undeniably released a hunger inside her. Ben\u2019s cock was hard for her, and that made it highly desirable. \n\n\u201cCan you touch it for me?\u201d\n\nBen no longer hesitated to follow her instructions. His nostrils flared with fervor as he wrapped his fist around his cock. Jessica realized it had probably been long since he last saw a woman naked for the first time. Fresh out of a dead marriage, this must be an exciting treat for him, she thought. She fondled her breasts as inspiration for him.\n\n\u201cYou know what else I did before?\u201d she whispered. \u201cI let the boys come on my tits. I bet you\u2019d like that too.\u201d\n\nHer words were intended as a factual statement, but they admittedly sounded like dirty talk. They certainly connected with Ben, who grunted as he stood and stepped over just in front of her. He slowly pumped his fist over his rigid shaft, captivated by her display. It made Jessica purr with delight, filling her with a sense of erotic power.\n\nAt the same time, she felt as if her mind was controlled by an erotic force. Without fully grasping what she was doing, she had placed one hand on Ben\u2019s thigh, and was slowly moving higher. She paused as she realized where her hand was heading, but she didn\u2019t remove it. Kneeling before Ben, she felt transfixed by the sight of his cock. Like a moth drawn to light, she leaned in for a closer look.\n\nWhen her face was within a few inches of his cock, Ben removed his hand. He just stood there with his erection towering proudly before her. Knowing it was her sexual power that had made him so throbbingly hard made her lust boil. His cock appeared worthy of her worship. Jessica\u2019s mind created sinful loops, and before she knew it, her tongue leaped out and ran swiftly along his shaft.\n\n\u201cOops\u2026\u201d she said and coyly covered her mouth, as if keeping her guilty tongue concealed.\n\nThe whole thing seemed surreal. Had she really just licked Ben\u2019s cock? The salty taste on her tongue ensured her she had. Who does such a thing to her husband\u2019s employee? And Oscar was working maybe two hundred yards away.\n\nBut the urge inside her was very clear. She bit her bottom lip as she looked up at Ben. His eyes left little doubt about what he hoped she would do. \n\nAs if in a trance, she slowly reached for his erection and wrapped her hand around it. Ben gasped as she moved her fingers over its contours. His cock looked majestic from her position just below it. She smiled wickedly up at the expectant captain, seductively licking her lips. She leaned in, this time thoroughly running her tongue all the way from the base to the tip. Ben groaned as she explored. His pleasure urged her on, and her tongue danced over his cock. Pointing the head against her mouth, she slipped it between her lips. They moaned in unison. \n\nDevoted to her task, she switched between taking him as deep into her mouth and licking all over his shaft. She even bowed down to lick his balls. As a naked fellatrix on her knees in the outdoors, she felt outright slutty. But that impression just seemed to spur her further. Using one hand to aid her oral servitude, the other tended to her aching pussy. \n\n\u201cI\u2019m\u2026\u201d Ben grunted. \u201cI\u2019m about to\u2026\u201d\n\n\u201cWait\u2026\u201d Jessica panted. A strand of saliva dangled from her chin as she leaned away, still furiously rubbing her clit. \u201cI want you... Please, Ben. Come on my face!\u201d\n\nShe couldn\u2019t believe she was speaking these words. But she had promised to be open to her desires, and she truly desired this. It seemed perfectly fitting for the situation. Her own depravity nearly made her come, but she controlled her release, using her fingers to keep her just at the edge. Ben stared down at her in abandonment, taking in his target. He stroked his cock, pointing it at her face. \n\nTeeth clench, Jessica looked up at him. \u201cDo it. Come on me!\u201d\n\nThe sensation of his cum splashing against her face set off the orgasm in Jessica. She wailed in lust, rubbing her clit through her climax. Ben continued to shower her, directing his strands against her lips. She opened her mouth, allowing his cum to shoot inside. The taste somehow deepened the sensation, sending her climax even higher.\n\nJessica remained on her knees as she came back to her senses. She smiled up at Ben, cum dangling from her chin.\n\n\u201cWow. That was fun,\u201d she said.\n\nShe giggled at her stupid comment. Fun? No, what she had done was slutty. It was highly inappropriate. And it was absolutely amazing. She had given in to her desires in ways she never thought she could. To many, the sensible thing for a married woman to do after getting carried away like this would be to quickly wipe the evidence from her face and pretend it never happened. But Jessica felt strangely proud over what she had done, and the last thing she wanted was to hide it from her husband. She scrambled to her feet.\n\n\u201cSee you later,\u201d she said and walked off in haste, heading back to the camp.\n\nA part of her mind was screaming at her that she was crazy. Could she really show Oscar the proof of what she had done? But still high on excitement, she felt she needed to do just that. Whereas the thought of keeping secrets from Oscar gave her a cold sensation, the idea of openly sharing what she had done made her lust boil. She was learning the value of listening to her desire. \n\nJessica immediately felt less sure about her decision when she found her husband wasn\u2019t alone. He and Tony had put up a table where the beach reached the forest and were busy placing flower samples into Ziploc bags. Jessica was just about to dodge back behind the bushes when Oscar looked up and spotted her.\n\n\u201cOh, hi hon\u2026\u201d he began but trailed off as he took in her appearance. \n\n\u201cHi,\u201d Jessica said and waved bashfully.\n\n\u201cWhat happened?\u201d Oscar asked. Though he looked shocked by what he saw, he sounded more curious than concerned. \n\n\u201cI\u2026 I guess I just sort of gave Ben a blow job,\u201d Jessica said, blushing as she spoke. \u201cAnd I think you can tell how it ended.\u201d\n\nShe giggled nervously. It was embarrassing to stand there with cum on her face before her husband and Tony, but revealing the depth of her emerging wild side also heightened the thrill. Rather than hiding away, she stepped over in front the two gaping men.\n\n\u201cLooks like you\u2019ve collected a lot,\u201d she said and pointed to the flowers, acting like what she was doing was perfectly normal. \n\n\u201cWell, yeah,\u201d her husband began. \u201cI think we have enough.\u201d\n\nJessica picked up a flower from the table. \u201cMaybe I should try a fresh one rather than the capsules?\u201d\n\n\u201cUhm, probably not,\u201d Oscar said. \u201cIt\u2019s important to control the dose.\u201d\n\nTony nodded in agreement. \u201cYes, we need to know what and how much each subject takes to evaluate the results, and...\u201d He paused for second before changing the subject. \u201cI take it you enjoy your treatment then?\u201d\n\nHe did his best to make the question sound factual, but Jessica picked up on the teasing undertone. She stuck her tongue out at him. Poking out between her cum covered lips, it probably made her look more slutty than taunting.\n\n\u201cIt\u2019s fine, honey,\u201d Oscar assured her. \u201cYou can answer.\u201d\n\nShe gave him a skeptical look. Did he expect her to talk to his colleague about what she was feeling about the flower\u2019s effect while wearing the evidence of what it had made her do? \n\n\u201cDo you like the flower\u2019s effect?\u201d Tony asked again. \u201cOr would you prefer we terminated the treatment?\u201d\n\nEmbarrassment made Jessica hesitate. Captivating Tony with her body felt empowering, giving her leverage in their bickering. But talking to him with strands of cum coting her face was humbling. She did her best to give Tony a defiant look.\n\n\u201cNo, I don\u2019t want to stop. And yes, I like it,\u201d she said just as a drop of cum dripped from her chin onto her chest. \u201cI like it a lot.\u201d\n\nTony nodded as he drank in her appearance. \u201cCan you tell us how it makes you feel?\u201d\n\nJessica glanced at her husband, but when he didn\u2019t put a stop to the questioning she decided to answer as honestly as she could. \u201cI feel like myself, I guess. Just more open.\u201d \n\n\u201cSo, giving Ben a blow job is something you\u2019ve thought about before?\u201d Tony asked.\n\n\u201cNo, not really. But when the situation arose, it felt like something I should do. Normally, I would have pushed such ideas away. I\u2019d condemned them as slutty. Now I think slutty isn\u2019t so bad.\u201d\n\nA glance at her husband told her he was pleased with her answer.\n\n\u201cBut you like it when men come on you?\u201d Tony continued.\n\n\u201cWhat exactly are you asking for, Tony?\u201d she asked, trying to turn the table on him. But he just grinned, and Jessica continued. \u201cSure, I guess I do when I\u2019m in the right mood. Right, honey?\u201d\n\nJessica looked curiously at her husband, who reached for the camera instead than answering. She gave him a coy frown but didn\u2019t stop him. Somehow, she knew she would need proof these crazy days weren\u2019t just a dream. When both men resorted to merely drinking her in, she curtsied playfully for them.\n\n\u201cIf there is nothing more, gentlemen...\u201d she said. \u201cI think I\u2019ll go wash up.\u201d\n\n---\n\nShe cornered her husband after dinner, thinking she should talk to him while dressed. He had always been taken by her nudity, and she wanted him levelheaded. \n\n\u201cSo, you still don\u2019t think I went too far?\u201d she asked.\n\n\u201cWas it too far for you?\u201d  \n \nJessica shook her head at him. \u201cThis time I\u2019m asking the questions.\u201d\n\n\u201cOK. Fair enough. What do you want to know?\u201d\n\n\u201cI know you\u2019re thrilled the flower is working. But I did some outrageous things today. God damn it, I made three guys from your team come on me!\u201d\n\n\u201cAre you regretting it?\u201d Oscar asked.\n\nJessica held up a finger. \u201cWhat did I say? I\u2019m asking the questions.\u201d\n\n\u201cBut my answer depends on yours. If you regret what you did, then I think you went too far. If not, then I don\u2019t.\u201d\n\n\u201cI... No, I don\u2019t regret it.\u201d\n\n\u201cThat\u2019s good. I asked you to be open to the effect of the flower, and I asked my team not to hinder your response. The least I can do is to demand the same of myself. I wouldn\u2019t suggest you\u2019d be part of the treatment if I thought for a moment it would lead to remorse.\u201d\n\nJessica left it at that. His blessing wasn\u2019t as explicit as she hoped, but she knew she couldn\u2019t ask her husband to encourage her behavior. It was after all her reaction\u2014not his\u2014she had agreed to investigate. She should just be glad he allowed her this surreal experience, and there was no point trying to make sense of it.\n\nAs the sun set, she decided to wash the saltwater off her body using a portable shower in the front of the boat. It came with a foot pump to siphon freshwater from a tank. Oscar and Ben were busy planning the return trip in the back of the boat, and Liam and Adam were hanging around their tents on the beach. It seemed like a perfect opportunity to provoke Tony. She had a score to settle with him.\n\n\u201cCan you help me with the shower pump?\u201d she asked.\n\nThe question sounded innocent, but the implications were obvious. She didn\u2019t need anyone to help with the pump; she just wanted someone to watch her shower.\n\n\u201cUhm, sure,\u201d Tony said cautiously. \n\nThey walked together to the bow, where Jessica removed her beach dress. She faced Tony as she removed her bikini top, acting like it was perfectly normal for her to undress in front of her husband\u2019s colleague. Sure, he had already seen her naked, but from the way he stared she could tell he was eager for another peek. She pretended to have trouble with the string, prolonging the tension before she finally removed her bottoms, presenting her nakedness in all its glory. \n\n\u201cAre you ready to pump me?\u201d she asked. \u201cI mean, are you ready to pump the shower?\u201d\n\nShe winked at him, and he shook his head in disbelief as he approached her. He placed one foot on the pump.\n\n\u201cYes, I\u2019m ready.\u201d\n\nThe sun had heated the tank during the day, and the water raining down on Jessica was warmer than she anticipated. \n\n\u201cBetter save that freshwater,\u201d she said and reached for the soap. She ran her hands over her body and felt Tony drink in the sight. \u201cCan you do my back?\u201d\n\nTony soaped up his hands and began at her shoulders and worked his slippery touch downwards. Jessica smiled when his fingers momentarily wandered onto her cheeks. He quickly moved his hands up her back, but they soon came down again. This time his touch wandered further onto her ass.\n\n\u201cThat\u2019s not really my back,\u201d Jessica pointed out.\n\n\u201cRight, sorry,\u201d Tony said and removed his hands. \n\nJessica peeked at him over her shoulder. \u201cI didn\u2019t tell you to stop, did I?\u201d \n\nTony\u2019s hands returned, and they quickly became greedy. His breath grew heavy behind her, and soon he sank to his knees, admiring the sight as he boldly groped away. His eager hands felt better than she cared to admit to herself.\n\nWhen she decided he\u2019d given her ass enough attention, she turned around, treating Tony to the close-up view of her naked pussy. He marveled at it, taking in her every detail. His hands moved up her thighs. But when he got close, she put her foot on the pump and pressed. A gush of water rained down on them both, wetting Tony\u2019s clothes.\n\n\u201cHey!\u201d Tony called out. \n\n\u201cMaybe you could use a shower too, dirty boy.\u201d\n\n\u201cOh, I\u2019m dirty?\u201d Tony chuckled.\n\n\u201cI am fairly sure you\u2019ve had some impure thoughts today. No?\u201d\n\nShe raised a challenging eyebrow at him. Tony studied her reaction for a moment before shrugging his shoulder. He peeled off his shirt and untied the knot of his trunks. He gave her one last glance before he hooked his thumbs in the hem and pulled down.\n\n\u201cNot bad, Tony,\u201d Jessica said, staring unwaveringly at him. He was obviously affected by the situation, his cock swaying heavily. She traded places with him and began pumping the shower. She soaped up her hands and ran her palms over Tony\u2019s back. He groaned softly as she roamed, continuing over his ass and down his legs. On their way back up, her hands traveled along his front, moving close as they passed his crotch. She pressed her body against him, massaging his back with her slippery tits while her hands roamed over his chest, continuing over his abs towards his cock, but always diverting their direction just before reaching her target. \n\nHe turned around when she stepped back. \n\n\u201cNot bad at all,\u201d she said, grinning slyly as she stared at his now rock-hard cock. ",
        "She stood under the shower head and gave the pedal a few pumps to rinse the soap from her body. She put her hand on his chest and let it travel down. But once again, she diverted her hand before reaching its target. Smiling at Tony\u2019s bewildered expression, she turned and walked away. She heard him groan, but she showed no mercy. She wiggled her finger over her shoulder.\n\n\u201cImpure thoughts, Tony. Impure thoughts\u2026\u201d\n\nShe felt bad playing him like that, but she had to prove a point. Sure, it had been oddly thrilling when he questioned her about her desires earlier as she wore the traces of what she had done with Ben. But it was also humbling, and Tony\u2019s self-satisfied tone didn\u2019t sit well with her. The flower might be making her outright slutty, but she was an empowered slut. No one was entitled to benefit from her cravings.\n\nAlong those lines, she slipped into a pair of panties before joining Oscar and Ben in the bow. It signaled that she wanted to flaunt herself for them of course, but it was up to her to decide what level of exposure she was offering.\n\n\u201cWhere is Tony?\u201d Oscar asked.\n\n\u201cHe\u2019s having a shower,\u201d Jessica said. \u201cNot sure the water can cool him down.\u201d\n\nBoth he and Ben gave her a curious look but didn\u2019t ask for clarifications. Oscar offered her a beer, and she rested her head against his shoulder as they watched the remainder of the sunset. This was the last evening of their expedition, and Jessica knew she would miss these crazy days.\n\nTony was already in bed when Jessica later entered the cabin. She grinned at him, and he frowned back. But his eyes didn\u2019t return to his book, focusing on her exposed breasts until she hid them under the covers next to her husband. \n\nOscar quickly dozed off, and the waves soon made Jessica follow. But her day had left her with many impressions, all of which spun in her head and made her sleep restless. It didn\u2019t help that Tony kept his bedside lamp lit. When Jessica woke up, she turned her head in his direction, and as she peeked through narrow eyelids, she was sure she caught him looking away, pretending to read his book. Had he been looking at her? She was on her back and had pulled the sheet down to her waist. Had he even\u2026? Pretending to sleep, she listened for clues. Several minutes passed, but she never heard him turn the page. Wasn\u2019t his breath ragged? \n\nShe flung her eyes open, once again catching him turning his gaze away. \n\n\u201cTony...\u201d she whispered.\n\nThere was a long pause before Tony replied. \u201cYeah?\u201d\n\nJessica glanced at her husband to see if he was sleeping before returning her eyes to Tony. \u201cWere you touching yourself?\u201d Never in a million years had she thought she\u2019d pose such a question to Tony. But a lot had happened the past days that she\u2019d never imagine.\n\n\u201cUhm\u2026\u201d Tony began softly. \u201cWhat? I\u2026\u201d\n\n\u201cIt\u2019s OK. I don\u2019t mind. Here...\u201d\n\nShe pulled the sheet off her body, giving his eyes further access. Tony didn\u2019t act, and from his sceptic look Jessica guessed he suspected entrapment.\n\n\u201cGo on,\u201d she coerced. \u201cI want you to.\u201d\n\nShe sat up on the edge of the bed, her legs parted. Her lazed panties hinted to the treasure inside. Tony still looked uncertain, but his hand started slowly moving under his sheet.\n\n\u201cNo, do it so I can see,\u201d Jessica whispered. \n\nTony only hesitated a second before pulling the sheet away, exposing his naked body beneath. Flat on his back, his fist wrapped around his erection. Jessica smiled at him. She might not have wanted to be attracted to him, but she couldn\u2019t deny it to herself. And that cock in his hand looked very sexy, rigid and firm, all because of her. \n\n\u201cPlease,\u201d she said. \u201cStroke it for me.\u201d\n\nTony moved his hand over his shaft, gaze traveling over her body. She rewarded him by caressing herself. He grunted softly, and Jessica wondered how often he had fantasized about her before this expedition. The lust in his eyes encouraged her to give him a good show. Moving carefully to not wake her husband, she stood and began swaying her hips.\n\nShe glanced over her shoulder as she moved. Part of her wanted Oscar to wake up and watch her too, but she also savored the notion that her shameless behavior was innate. Her husband had asked her to be open-minded to the desires the flowers awoke inside her, and apparently, she had become a woman who casually performs an erotic dance for the benefit of his colleague and friend.\n\nTony sat up on the edge of the bed to get a closer look. Jessica grinned and danced closer. He stroked himself slowly, making sure to drag out the experience. She hooked her thumbs into her panties and pulled down, but never far enough to fully expose herself.\n\n\u201cIs this what you want to see again?\u201d she teased.\n\nTony grunted in response. She continued to pull her panties down but turned around just before her pussy came into view. She grinned down at him over her shoulder, her panties resting halfway down her ass. Bending slightly at the hip, she pulled down and wiggled out of them. Completely naked, she continued to sway her ass before him.\n\nTony placed his hands on her hips, and his touch sent shivers through her body. She couldn\u2019t tell if his hands guided her, or her hips guided him, but she found herself gyrating towards his lap. She realized there was a reason most strippers don\u2019t give lap dances to naked customers, and she flinched as she felt his erection push against her. She tried to bounce back up, but her legs wouldn\u2019t let her. Soon she was grinding back against him, rubbing his cock with her ass. His hands explored, cupping her tits. She moaned as he gently pulled at her excited nipples. \n\nJessica constantly glanced at her husband. Was he really sleeping through all this? Tony\u2019s bed creaked as they grinded. If Oscar opened his eyes, it would look to him like she was fucking his friend. Surely it would be too much for him if she actually did that? Or would he just be happy she was losing all inhibitions? Her aching pussy was very clear about what it craved.\n\nShe turned around and straddled Tony. They looked at each other for a moment before pressing their mouths together. Her hips acted on their own accord, grinding against him. She moaned as she felt his hard shaft slide along her wet slit. \n\n\u201cYou know I hate you, right?\u201d she panted. It wasn\u2019t really true, but she needed him to understand that even though they were making out while she rubbed her pussy up and down his cock, she still found him incredibly annoying. Right now, her deepest emotion was a deep craving for his cock, which repeatedly slid so dangerously close to her needy opening. \n\nTony grinned slyly. \u201cOf course. I hate you too.\u201d\n\nWith that he leaned in and devoured her tits with his mouth. Jessica threw her head back in pleasure as he feasted on her nipples, moaning out loud.\n\nShe flung her head around as she heard the sound of a camera behind her. \n\n\u201cOh, hi honey,\u201d she said. \u201cI didn\u2019t mean to wake you up.\u201d\n\nShe sounded casual, but inside her lust exploded. She backed off a little to show she hadn\u2019t taken Tony inside her. Yet. Oscar sat on their bed, face hidden behind the camera. She turned back to Tony and continued to make out with him, listening to the camera snapping pictures of the spectacle.\n\nJessica pushed Tony back against the bed. Looking back against the camera, she reached for his erection. She gave her husband a defiant look and proceeded to rub the tip of Tony\u2019s cock against her pussy. Was Oscar still not going to put a stop to this? High on desire, Jessica found she couldn\u2019t care if his acceptance was purely due to his unconventional commitment to his research, or if there were more carnal reasons.\n\n\u201cI\u2019m gonna take him inside me now,\u201d she said matter-of-factly and turned back to Tony. They looked at each other\u2019s excited faced as she slowly lowered herself onto his cock. Her wet pussy offered no resistance, and they moaned in unison as he filled her aching core.\n\nIt was happening! Sure, she had imagined herself with other men after marrying\u2014what woman doesn\u2019t sometimes?\u2014but she\u2019d never thought it would become more than a fantasy. Bouncing on Tony\u2019s cock, she kept looking back at Oscar, her face a mixture of lust and gratitude. As her husband put down the camera, she noticed him reach for the notebook.\n\n\u201cNo!\u201d she said firmly. \u201cDon\u2019t you dare take any fucking notes! Come here and help your friend fuck your wife.\u201d\n\nOscar sprung out from under the sheets and stripped off his boxers. Jessica was pleased to see he was more than ready to join in. He wasn\u2019t just accepting this sexual awakening inside her; he was turned on by it. He was a well-endowed man, but tonight he somehow seemed bigger than ever.\n\nShe moved off Tony, and they scooted over to make room for Oscar, who positioned himself behind her. Kneeling on all fours with Tony\u2019s cock at her face, she arched her back invitingly for her husband. She opened her mouth and was simultaneously impaled at both ends. Tony\u2019s cock was coated with her juices, which just made it even more delicious. Her muffled moans filled the room as they fucked her pussy and mouth. Craving to show the depth of her hunger, she pressed her mouth deep onto Tony\u2019s cock, taking him well down her throat. Her tits swayed heavily as she rocked between the men.\n\nOscar was clearly taken by her slutty display, and from his strained grunts she knew he was getting close to rupture. The mere notion that she was taking on two men at once made Jessica\u2019s lust hard to contain, but she wanted to prolong the experience. She moved away, and lay down on her back, legs spread wide before Tony. He needed no further encouragement and quickly knelt between her legs to insert his cock in her needy cunt. As he began slamming against her, she called her husband close, offering him her mouth. She looked up at him with dazed eyes as she licked his shaft.\n\n\u201cDid you ever imagine\u2026\u201d she began, and pumped her fist over his shaft as she took the head in her mouth, \u201c...that your wife\u2026 could be such a slut?\u201d\n\nOscar grunted, and Jessica\u2019s own words sent thrills through her body. She felt herself lose control. Tony dutifully fucked her at a steady rhythm.\n\n\u201cOh, my\u2026!\u201d Jessica wailed. \u201cI\u2019m gonna\u2026!\u201d\n\nOscar broke off her sentence by shoving his cock inside her mouth. Her body quaked as the orgasm took her. Oscar\u2019s throbbing erection suppressed her wailing as Tony drove her through her climax. \n\n\u201cOh, wow,\u201d she panted, replacing her mouth with her hand around her husband\u2019s cock as she regained her composure. She still grinded softly on Tony\u2019s cock inside her. \u201cThat was\u2026\u201d\n\nShe stopped as she realized she had no words to describe how mind-blowing the experience was. Her mouth twitched as she looked up at the men.\n\n\u201cI\u2026\u201d she said. \u201cI want more.\u201d\n\nWithout skipping a beat, Oscar and Tony traded places, and she was soon fucked senseless again. Even though they had never done anything like this before, it seemed like they each had rehearsed the scenario in their minds. They moved in synchrony as they shared her, her husband furiously fucking her cunt while Tony fed her his glistening cock. It wasn\u2019t long until pleasure detonated inside her again, sending her through another mind-shattering orgasm.\n\nShe blinked as she came back to her senses, still trembling in the aftershocks of her eruption. \u201cI don\u2019t think I can take more of this.\u201d\n\nOscar slowly slid out of her, and her eyes darted between the two men and their towering erections, which shimmered in the dim light. She might be greedy, but there was no way she\u2019d leave them like this.\n\n\u201cHow do you think this should end?\u201d she sighed, grinning up at Tony.\n\n\u201cAnyway you want,\u201d he replied.\n\n\u201cThat\u2019s a very good answer,\u201d Jessica said, slowly pumping her fist over his cock. \u201cBut what if I take requests?\u201d\n\nTony didn\u2019t flinch. \u201cThen I think we should both come on your face.\u201d\n\n\u201cOoh, very impure thoughts, Tony. Very impure indeed. What do you think, honey?\u201d\n\nOscar had lost the ability to speak and merely grunted as he shuffled to her face. With one man kneeling on either side of her, she grinned wide.\n\n\u201cAlright,\u201d she said, gently stroking their balls. \u201cDo it. Cover me!\u201d\n\nThe men grunted as they stroked themselves, cocks pointed at her cheeks. The exhibitionist inside her cherished having her face as the target of their desire. \n\n\u201cPlease,\u201d she whispered. \u201cCome on me.\u201d\n\nThey needed no further encouragement and erupted simultaneously. She squealed in a mixture of shock and joy as their cum splashed against her face. Some might have found this a demeaning ordeal, but Jessica felt it was a tribute to the divine slut inside her. It seemed their flow would never end, and high on lust, she giggled erratically as they covered her with strand after strand of cum. It felt like a worthy finale of the expedition.\n\n---\n\nTwo month later, Jessica met up with her husband at a convention with the funders of the expedition. The stakeholders were always interested to make sure their money was spent wisely, and given the preliminary results, many were enthusiastic about the Wanton Flower\u2019s potential. Jessica could feel the optimism in the room. Given her experience, she was certain they would not be disappointed. \n\n\u201cHi, honey,\u201d she said and gave him a passionate kiss. Such public display of affection used to be unthinkable for her. She had stopped taking the flower capsules soon after they returned from the expedition, but the effect seemed to have lasted. She had nothing to complain about her and Oscar\u2019s sex life before, but now they were like rampant teenagers, constantly jumping each other. \n\nOscar lips responded, but she could tell something was bothering him. He and Tony had been busy finalizing the analyses of their trials.\n\n\u201cIs everything OK?\u201d she asked.\n\n\u201cYes, of course,\u201d Oscar assured her. \u201cIt\u2019s just\u2026\u201d\n\nThe announcer broke him off, saying it was time for the main speaker. This time it was Tony\u2019s turn to talk about their project. \n\n\u201cCome, let\u2019s sit down,\u201d Oscar said as his colleague took the podium.\n\nTony began by outlining the study and explained how the plant had proven difficult to cultivate before showing a series of photos from their latest expedition to collect more samples. Jessica could see herself in the background in one of the photos. She was properly dressed, but it made her recall some of the other pictures her husband had taken. With her husband occupied lately, she had spent several nights home alone reliving the events through those pictures. After she made him and Tony come all over her, she asked Oscar to capture the moment. Always accommodating, he snapped a series of photos. It was hard to believe it was her, glowing with lust and plastered with cum. Those photos in particular had repeatedly sent her into climax as she rubbed herself to them.\n\nShe refrained from further sexual encounters the day after Oscar and Tony shared her. But thinking she shouldn\u2019t let her admirers go cold turkey, she remained naked on the cruise back, giving them sweet images to remember her by. As they neared civilization, she made sure to hug them all before she put her clothes back on, thanking them for a wonderful trip. \n\nShe noticed Liam and Adam glancing at her from across the room. Those boys would never look at \u2018Mrs. Bergman\u2019 the same again. And neither would she. What the flower had opened up inside her felt like a bliss. Even though she hadn\u2019t taken the any of the capsules for several weeks, she still felt highly erotic. She waved cordially at Liam and Adam, winking at them before returning her focus to Tony at the podium. \n\n\u201cAnd as you can see,\u201d Tony said, pointing at the pie chart on the screen. \u201cNearly all participants who took the flower capsules responded positively to the treatment. In most cases, the subjects reported they had a heightened sex drive, and that they had a very positive overall experience. I don\u2019t dare to share with you some of the anecdotes our subjects shared.\u201d\n\nChuckles traveled through the room. Jessica was surprised Tony didn\u2019t cast a taunting glance at her. But Tony kept his eyes on the screen. She had found him less annoying the few times she met him since the expedition. Supposedly, it was hard to be hostile after engaging in such a lustful night. Jessica took her husband\u2019s hand in hers as memories flashed through her mind.\n\nAs Tony continued his presentation, Jessica\u2019s attention was drawn to Ben, who entered the hall in the back. He rarely came along for these events, but Oscar had invited the team back to their place to discuss the future of the project after the convention. It was unusual seeing Ben in a suit, but it looked good on him. He nodded at her as their eyes met.\n\n\u201cSo...\u201d Tony said. \u201cConsidering just the subjects who were given the flower, we would draw the conclusion that the Goat Flower is highly potent aphrodisiac. But when we compare the responses to the control group\u2026\u201d\n\nJessica\u2019s attention flung back to the screen. Control group? The screen showed two pie charts.\n\n\u201cAs you can see,\u201d Tony said. \u201cThe responses are essentially identical when we compare the groups. So, it seems the presumed effect of the flower can be written off as placebo. In fact, some of the strongest responses we got came from women in the control group.\u201d\n\nThis time Tony\u2019s eyes landed briefly on Jessica. Murmurs filled the hall. Oscar squeezed her hand tight. \n\n\u201cAre you sure?\u201d a skeptical woman in audience asked. \u201cHave you gone back to your samples and made sure no mistakes were made?\u201d\n\nMaybe Jessica wasn\u2019t the only one in the room who just realized what she had attributed to the flower was just her own hidden desires. As Tony explained in great detail the effort they had gone through to make sure their results were correct, she turned to her husband.\n\n\u201cDid you know?\u201d she whispered.\n\n\u201cWe only got the final results this morning,\u201d he said. \u201cI didn\u2019t really believe them myself at first. We even analyzed the capsules to make sure we didn\u2019t accidentally give all subjects the flowers. But no...\u201d \n\n\u201cBut you knew there was a control group?\u201d\n\nOscar gave her a curious look. \u201cOf course.\u201d\n\n\u201cBut why did the natives use it then if it has no effect?\u201d a man in the front row asked. \n\n\u201cWell, just a few hours ago I talked to our interpreter from a previous trip, and we now have some clues about the native woman\u2019s alternative name for the plant. It seems she may actually have referred to it as the Scapegoat plant. This would suggest there was an understanding, at least among the elder women, it wasn\u2019t the plant itself that brought on the response. It may have been a lie they all accepted to live out\u2026 Well, whatever they wanted to.\u201d \n\nTony\u2019s eyes again landed on her. To her surprise, he didn\u2019t look smug. Maybe it was because she had been right all along\u2014the plant was completely ineffective. It didn\u2019t feel like a victory though.\n\nA few questions later, Tony wrapped up the presentation, and the crowd scattered. Jessica and Oscar drove back in silence until she eventually spoke. \n\n\u201cWhich group was I in?\u201d\n\n\u201cUhm, does it matter?\u201d Oscar asked.\n\n\u201cJust tell me.\u201d\n\n\u201cI don\u2019t know. To make sure I\u2019m blind to the treatment during observations and interviews, I never know what group each subject is in.\u201d\n\n\u201cSubject?\u201d\n\n\u201cSorry,\u201d Oscar said. \u201cI\u2019ll make sure to ask Tony.\u201d\n\nJessica sighed. \u201cNo, you\u2019re right. It doesn\u2019t matter.\u201d \n\nShe had no reason to be mad with her husband. Sure, maybe it was an odd thing to ask his wife to participate in a study like this, and he could have told her there was a chance she was given a placebo. But wasn\u2019t he right to assume she would know? She was in the medical business herself, and she knew very well how clinical trials worked. It seemed she\u2019d been willing to uncritically buy in to the flower\u2019s effect. If anyone had tricked her, wasn\u2019t it herself? Scapegoat plant, indeed.\n\nBut was the trickery necessarily a bad thing? Why should she regret her brazen actions just because it was all her own doing? The more she thought about it, she felt she should be pleased. The goddess of shameless eroticism that emerged during the expedition was all her, and she apparently needed no other stimuli to set it free\u2014just an excuse.",
        "\u201cDo you want me to call off the gathering at our place tonight?\u201d Oscar asked, breaking her train of thought. \n\nJessica started. She had looked forward to meeting them all again. No longer under the influence of the flower, she\u2019d assumed nothing would happen, but hoped it would bring back some exciting memories. Now she wasn\u2019t sure what to feel.\n\n\u201cYou know they\u2019ll never hold what you did against you,\u201d Oscar continued. \u201cI\u2019m sure they are all disappointed the flower turned out to be ineffective, but you can always expect them to be professional.\u201d\n\nProfessional? What she had did with them on the expedition didn\u2019t seem very professional.\n\n\u201cAnd what about you?\u201d Jessica asked. \u201cAre you disappointed the plant actually had no effect?\u201d\n\n\u201cWell, a bit at first,\u201d Oscar said as they stopped for a red light. \u201cBut then I realize this might be an interesting sociological study. What our trials show with great significance is that society puts pressures on us all, especially women. While it wasn\u2019t our intentions, our trials released these shackles of society, and allowed participants to connect with suppressed parts of their psyche. It wasn\u2019t the results we were looking for, but it nevertheless provides an interesting case study.\u201d\n\nJessica sighed. \u201cDo you want to know who I don\u2019t want around the house tonight? This guy.\u201d\n\nShe pointed at her husband, who gave her a bewildered and shocked look.\n\n\u201cOh, don\u2019t get me wrong,\u201d Jessica continued. \u201cI very much want my husband there, but Dr. Bergman can fuck off tonight. And if said husband can escape the \u2018shackles of society\u2019 enough to admit he likes how his wife can be a fucking slut sometimes, then I think we might have a very pleasant evening together.\u201d\n\nOscar stared at her in disbelief.\n\n\u201cDo we understand each other?\u201d Jessica demanded.\n\nOscar nodded softly, and she could tell he was taken by her fierce speech. She grinned at him.\n\n\u201cGreat. Now take me home. I want to get changed before the others arrive.\u201d\n\n---\n\nThe guests arrived half an hour after Jessica and Oscar got home. As she eventually came down the stairs, she could hear her husband giving a similar rundown of his interpretation of their trials as an interesting sociological study. She knew he was just trying to bring his team up after a failed experiment, but Jessica was certain she could better cheer them up.\n\nAll eyes landed on her as she entered, high heels clicking against the living room floor. She was tarted up, red lipstick decorating her lips. Her hair was arranged in a tight ponytail, which bounced with her stride. So did her breasts, which were poorly confined by her loose-fitted gown. If her appearance wasn\u2019t already suggestive enough, the Wanton Flower she had stuck behind her ear promised for a night to remember.\n\nThe team was seated in the large couch, all still suited up after the convention, while Oscar leaned back against the counter separating the kitchen from the living room. Beside him lay the camera. He gave her an expectant grin before turning back to his team.\n\n\u201cOh, and I guess I don\u2019t have to point out that we still should be grateful to all who participated in...\u201d\n\nJessica shushed him, placing her finger across his lips. \u201cWhat did we decide, Dr. Bergman?\u201d\n\nOscar nodded, and she rewarded him with a kiss.\n\n\u201cI think we all agree how we want tonight to go down,\u201d she continued. \u201cI\u2019m probably not the only one with some very fond memories of the expedition and wouldn\u2019t mind further explorations.\u201d\n\nWith that she peeled the gown off her shoulders and let it slip to the floor. The thin fabric fell slowly, and Jessica cherished each lasting second of her unravelling. Just like that, she was naked but for a pair of high heels. She felt the thrill rush over her as five pairs of eyes took her in. The sensation was even stronger now when she knew it was her own boldness driving her. She didn\u2019t need any scapegoat. Sexual power flowed through her, and she felt more divine than ever as she confidently stepped over to the seated men, eyes meeting theirs. \n\nShe squeezed in between Liam and Adam. The young men were so taken by her display they didn\u2019t react at first, but as she placed her lips on Liam\u2019s, hands began exploring her body. Adam leaned in from the other side and kissed his way over her neck. When she turned her mouth to Adam, Liam\u2019s mouth traveled down on her other side. Adam followed, lips trailing over her chest. Soon she had two men feasting on her nipples, sending jolts of pleasure through her body. She grinned at her husband, who snapped a picture of them.\n\nJessica moved over and straddled Ben further down the couch. The captain\u2019s hands traveled up her body, cupping her heavy breasts. She felt his cock grow in his pants. Tony, who sat next to him, joined in. His greedy hands groped her ass, and she leaned over to make out with him. Liam and Adam joined in, and the sensation of four pairs of hands exploring her body was intense beyond imaginable. \n\nBeing the only one naked in a room full of dressed men was erotic, and perfectly suited for a woman who craved to be their center of attention. But as her hands returned their explorations, dancing over their growing erections, she grew impatient to see her creations. She slid to the floor and began unbuckling their pants. They assisted her, scattering their suits. It wasn\u2019t long before she found herself on her knees, marveling at the assemblage of thick, hard cocks surrounding her. \n\nOscar had previously sat back to watch, but now he joined in. As she attacked her buffet, her eyes repeatedly met his, even when his cock wasn\u2019t the one sliding between her lips. Releasing her hunger before him\u2014the man who knew her better than anyone in the world\u2014manifested her wanton behavior as a true part of herself. She moaned and panted as her hands and mouth wandered among her willing suitors. Not even in her wildest fantasies had she made up a scenario like this. Yet, it felt strangely natural, like she was born to take on a large group of men.\n\nJessica stood and shifted over to the couch. She slumped back, spreading her legs wide apart as an invite. \n\n\u201cDo you want to go first, honey?\u201d she asked, looking at her husband. \n\nOscar moved in between her legs and rubbed his cock over her slit before pushing deep into her cunt. Teeth clenched, he fucked her right in front of his team. Jessica\u2019s alluring eyes wandered among the men who awaited their turn. With lipstick smeared around her lip, she was already a mess. \n\nJessica loved the sensation of her husband\u2019s throbbing cock inside her. But today she was open for all. As Oscar backed away, she called Ben in to take his place at her welcoming pussy. \n\n\u201cI bet you\u2019ve wanted this for a long time,\u201d Jessica said. His only reply was to fill her cunt with his massive cock. Both of them moaned as he pushed inside. \n\nShe stroked the men who awaited their turn, but her position on her back made it difficult to access her mouth. When it was time for the next man to relish her pussy, she shifted to kneel on the couch. Liam and Adam positioned themselves at her pussy and mouth and soon she was rocking back and forth between the young men. Oscar had returned to sit back and watch as the rest took turns filling her hungry holes. Cock in mouth, she grinned at him as he snapped a picture of her. She couldn\u2019t even keep track on who fucked her pussy as the team continued to share her.\n\n\u201cWait\u2026\u201d she panted as she eventually pulled away from the two currently fucking her. \u201cI want\u2026 to please... in my...\u201d\n\nThe constant switching of partners prevented her from climaxing, but the intense experience kept her at an elated state of euphoria that made it difficult to speak. Luckily, her husband already knew what she needed. He approached, cock glistening with lubricant. Jessica pulled Tony down to sit on the couch. She straddled him, easing her pussy onto his erection. She arched her back, looking back at her husband. He grinned, and before the prying eyes of the rest, he fingered her ass, preparing her for her ultimate treat. As he removed his fingers, he placed his cock, steady but gently, at her craving opening. \n\n\u201cOh, my fucking\u2026!\u201d she wailed as he pushed inside. \n\nIt wasn\u2019t the first time she took Oscar in her ass, but this was something else. Never had she felt so full. She looked back at her husband, marveling at the intense sensation. He held still, allowing her to get accustomed to the wonders of double penetration. When she was ready, he began thrusting inside her. It was gentle but built in force. Tony began rocking below her, and she soon had two cocks pistoning in and out of her. Her ecstatic moans sang in the rhythm of their thrusts.\n\nBen, Liam and Adam moved in tight, and she treated them to her hands and mouth. It would be a stretch to say she felt in control as she bounced between cocks, but Jessica still felt she captivated them with her newfound sexual power. The notion that her lust matched that of such a large group of men added to her elation. \n\nWith Oscar occupied, Ben kindly opted to snap some pictures of her. Imagining what she might look like with cocks in her every orifice pushed her over the edge. Her husband and his friend drove her with a steady momentum. She screamed out uncontrollably as euphoria exploded inside her, carrying her to pleasures she didn\u2019t know existed. Through the haze shined the epiphany that she deserved this. It was her own courage that took her to this place of mind-blowing ecstasy. \n\nShe moved off their cocks as she regained control. Her wanton greed knew no boundaries, and she slipped to the floor. Oscar and Tony were ready to burst. They led the way, showing the rest how the slutty goddess wished her ceremony to end. They erupted in unison, spraying Jessica\u2019s face and tits as she stroked her pussy through the aftershocks of her intense release. Each blast against her skin sent a shiver through her body, making her squeal with delight. Her shameless indulgence seemed to inspire the rest of the team, who approach as the first two stepped away. For someone who cherished being the center of attention, this physical manifestation of their awe felt like the perfect treat. Cum splashed against her face, neck, shoulders and tits as they showered her. Jessica opened wide, allowing their gifts to mix inside her mouth.\n\nShe knew she was quite the sight. Cum dangled from her face and tits, and white droplets contrasted against her black hair. The flower behind her ear had long since fallen off, but she picked it up from the floor beside her and put it back in its place. It may have turned out to be ineffective, but she still felt grateful it had lured her onto the right path. She glowed with erotic pride as she grinned up at the men around her. \n\n\u201cSo, when\u2019s our next expedition?\u201d\n\nThe end.\n\n\nA huge thanks to Greta Rose for her valuable editing comments. \n\nThis story is part of the Literotica April Fools Contest, so please don't forget to vote if you liked it. "
    ],
    "authorname": "tomlitilia",
    "tags": [
        "mfm",
        "mmmmmf",
        "facials",
        "exposed",
        "only one naked",
        "wife sharing",
        "slut wife",
        "cum covered",
        "double penetration",
        "public masturbation"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-wanton-flower"
}