{
    "title": "Sierra Lives Pt. 11",
    "pages": [
        "(Dear readers. Full disclosure that this chapter may be more plot driven then sexually charged. Hopefully, it will still be an entertaining read, but I wanted to give that caveat. --Abashed)\n\n*\n\nSierra quickly scanned the shelf in the instruction room one final time, perhaps as an attempt to delay having to go see what her venom had achieved. The light reflecting off a few glass syringes in shadow caught her eye. In that same corner on the shelf were bandages, tweezers, a few small, dark bottles and finally, a gray handheld device that looked vaguely familiar. Sierra glanced back at the prone form of Lord V and then grabbed the device before running over to the immobile Ingentian.\n\nSierra locked her jaw, her stomach churning as she swiftly knelt down beside him. Lord V's normally beautiful face was contorted, his eyes closed. His pale skin looked sallow with shadows of dark veins beneath the skin. Sierra was startled to see his chest rise as he took a rasping breath and his eyelids fluttered only to close again.\n\nThough Lord V's eyes remained closed, he issued a whisper-groan so quiet that Sierra barely heard him, \"Button . . . blue,\" he rasped.\n\nSierra fumbled with the device until she found a blue square on one side. She pressed in and the thing bleeped to life with various lights and a humming sound. Sierra held it to Lord V's neck, having no idea what to do. A scanning, blue light zipped across his features, then the device began issuing a pulsing red light and where the pulsing light hit, the lavender veins appeared to flare deep purple and then seemed to recede. Lord V's brows knit and he mouthed a silent groan.\n\nSierra began to move the device painstakingly along every inch of his head and torso. It didn't restore him perfectly, but she could see it was miraculously returning some smoothness to his skin and nearly erasing the purple blush to his features. His breathing seemed to be normalizing, though he remained motionless.\n\nSierra paused in her ministering. Thus far, she'd been responding only by instinct. The delayed reaction of her venom had surprised her. She looked down at her tormentor and the high buzz of anxiety seemed to drain from her to be replaced with a heavy, numb feeling. Setting the medicorder aside, Sierra stood up and with a determined tightness to her lips, stepped back over to the shelves, her eyes searching.\n\n~\n\nLord V was barely aware of his surroundings as he nauseated in and out of consciousness. Every time he awoke, the pain laced anew through his body and every breath was squeezed out of him with a feeling like a fist tortuously grasping his lungs. He felt the subtle heated prickles of the medicorder helping to nullify the poison racing beneath his skin, but his consciousness would wane again before he could process much more.\n\nThe next time he resurfaced into consciousness, a thought tethered him awake, \"I am alive.\" His body still felt quite sore, and he couldn't quite bring himself to open his eyes, but he was breathing normally through his nose except for the slightest twinge and delay of breath. He felt a kick to his leg. It wasn't a strong kick, but it seemed insistent. Lord V opened his bleary eyes and it took several moments for him to register what he was seeing.\n\nIt was his slave covered in human blood, no, it was Sierra in his red, silk night shirt. She hovered above him. Silly slave, he thought sleepily. He tried to close his eyes again, but another kick, this time harder to his shin, angered him. He meant to say, 'Let me sleep!' but all that came out was, \"gnhemesleggh\" and his saliva dripped down his chin from the ball gag.\n\nLord V's eyes widened in shock and he snapped out of his fog to find that he was still naked, lying on his stomach, but his wrists were bound behind him and his ankles cuffed into a spreader bar. A chain between the handcuffs and the spreader bar meant he couldn't raise his hands without also pulling the heavy bar up making him rock into an awkward arch. His predicament enraged him, but all he could do in his weakened state was to simply glare up at the clear, lovely, face of his slave who was frowning down at him.\n\nShe nodded at his seething, expressive eyes. \"I could have let you die,\" Sierra said simply. Lord V's eyes narrowed to angry slits. Sierra chewed her lip then said flatly, \"I'm not sure what I should do. Should I attempt to escape and leave you like this for your people to find you? Should I hurt you as you have hurt me?\" At this Sierra gestured to the equipment lining the walls.\n\nLord V's eyes widened and he furiously began straining at his bonds. His body rocked comically as he tried to break free, eventually exhausting himself. He lay gasping around the gag, his body shivering from his efforts. As he regained his breath, he stilled his struggling and coolly observed her.\n\nSierra's sad, enchanting green eyes held his gaze. She spoke again, a tremble in her voice, \"How can I let you live knowing you'll only come after me? Why can't you just leave me alone?\" She shook her head sadly and looked away from him.\n\nLord V looked at the girl that had caused him so much trouble and so much intense pleasure. Her glossy, golden brown hair still fell in loose waves about her shoulders, the red silk of the night shirt a dramatic contrast to the soft springtime of her coloring. Though her face was strained and sad, it was like the shifting loveliness of the sea, no less beautiful for expressing a somber change in mood. Her lovely chin held high, her gaze steady; he had never seen her look quite so beautiful.\n\nWhen she turned back to him, he motioned with his eyes and jerked his chin the best he could to indicate he wished the ballgag to be removed so he could speak. Sierra scowled at him and shook her head, but he held her gaze pouring all his longing and affection for her into one shared look.\n\n~\n\nThe depth of feeling and strange softness in his gray eyes surprised Sierra and against her better judgment, she knelt down to remove the gag. Earlier, she'd grazed his ankle as she had bound him to the spreader bar, and it hadn't caused a relapse of the poison, but she still tried to remove the gag without touching him as much as possible.\n\nLord V worked his jaw. When he attempted to speak, nothing but air came out at first. Finally he managed to rasp, \"Well slave, it seems you have developed some thorns after all.\"\n\nSierra kicked him hard in his side, however, she couldn't hold back wincing in sympathy to see his face contort in agony. He recovered with a grimace and sucked in breath, his eyes pinching shut only to pop back open indignant and angry. Sierra said in an even voice, \"I am not your slave.\"\n\nLord V's jaw tightened, but he kept her gaze and nodded. \"Sierra,\" he began. He cleared his throat eying her warily, \"Surely, you cannot blame me for wanting you?\"\n\nSierra loomed above Lord V's bound form, the red, silk nightshirt pulled taut across her chest as she folded her arms and peered down.\n\n\"You don't want me,\" Sierra bit out. \"You want a puppet, a plaything. I will never be Elanna.\"\n\nLord V smiled weakly at that, \"No, you will never be Elanna,\" he repeated softly. His voice rose in volume and took on some of its customary dry imperiousness, \"And yet, you can't deny your own desire, little human. I recall how beautifully you begged me to fuck you.\" Sierra's face reddened, but Lord V continued, \"In the end, isn't what I want from you what you crave to give?\"\n\nLord V knew better than to laugh, but it was difficult as Sierra's expression became the most perfectly adorable sulk.\n\nInstead, Lord V tried unsuccessfully to keep the teasing out of his voice as he taunted, \"Unbind me and I'll show you what I mean.\"\n\nIt was Sierra's turn to have her eyes blaze in anger. She twisted her pretty lips in a stubborn, little scowl and stalked off to the toy shelf. She returned ominously tapping a black, riding crop in her hand. Lord V raised his eyebrows as she returned to his view.\n\n\"Now pet, don't make things worse for yourself,\" Lord V warned, his voice growing heated and severe.\n\nSierra shrugged, \"I already almost killed you, what are a few swats on his lordships' rear worth after that?\" Sierra's pretty lips curled up in a small, coy smile. She took a steadying breath and nodded to herself. Her clear voice warned, \"Now, I'm not completely certain I have control over my venom yet so I would hold still if I were you.\"\n\nLord V turned his head from one side to the other trying to see where Sierra had settled kneeling beside the lower half of his body, but he felt rather than saw her tracing a figure 8 lightly with the riding crop on his thigh. A few taps of the firm leather gently up his thigh to his sculpted ass and snap! A stinging swat pelted his naked backside. Snap! A fat stripe of pain seared into his other ass cheek.\n\nLord V grunted, grinding his teeth in indignation. Still, he was spellbound as he felt her lightly trace circles that became a large figure 8 across the whole of his tight ass. The anticipation was delicious agony. And snap, slap, snap, she swatted alternating stripes between cheeks with surprising force.\n\nLord V's voice was tight. \"Sierra, that's enough. Release me.\"\n\nSierra snapped a stinging, throbbing swat where his beautiful ass met his muscular thigh soliciting a groan. \"You told me once, slaves don't get to say 'no,'\" Sierra said her voice sullen. Slap, snap. Slap, snap. His ass was turning blotchy with the overlaying strokes.\n\n\"Sierra,\" Lord V's voice was both soft and commanding. \"Sierra, let me go.\"\n\nSierra found that she was shaking and she couldn't bring herself to swipe at him anymore. She cast the crop aside a little disappointed with herself. She didn't understand what came over her, but she crawled forward until she was kneeling beside the pale, masculine face that craned to peer up at her.\n\nForgetting the possible danger, she reached down to place her small, graceful hand beneath his cheek, helping to support him. Their eyes met and burned. Sierra crouched down to place a soft kiss on his mouth. He stiffened in fear at first and then gave in, his tongue sliding between her lips. She had the control and ended the kiss by bracing his exquisite face in her soft hands. \"Let me go,\" Sierra whispered.\n\n~\n\nThe sound of footsteps scraping on the bathhouse floor drew Sierra and Lord V's gaze.\n\n\"Well looky here,\" Gerra's brash voice cut as she strode confidently into the instruction room. \"Sierra, you should've sold tickets.\"\n\nSierra gently let go of Lord V's face and rose, \"Gerra! How? I . . .\" but Gerra ignored Sierra and strode forward with her normal swagger to grin down at Lord V's bound, prone and spread body. She placed a booted foot on one of his ass cheeks striped with pink and purple bruises, \"Hmm, your lordship, I'm not impressed by your ass, it looks a right mess.\" She kicked her foot off him soliciting a grunt and a sharp intake of breath from Lord V.\n\nGerra grinned her dimpled grin and turned to Sierra. \"Well, troublemaker, I'm authorized from the consortium government under the authority of General Conroy to do 'house visits' from time to time to see how you are faring and whether or not you've come to your senses and would like to come home.\"\n\nSierra smiled warmly and walked towards Gerra, \"Oh Gerra, thank you!\"\n\n\"Not so fast Miss Caspian,\" Lord V interjected hotly, \"I very much doubt you have the authority to enter my personal quarters, if you truly have any authority at all!\"\n\nGerra shrugged and rolled her eyes at Lord V, \"Everything's up for interpretation,\" she muttered.\n\nLord V strained once more against his bonds and then dropped his head exhausted, \"confine,\" he hissed.\n\nSierra, who had turned to look at him quizzically, found ropes slithering around her neck and shoulders before she could effectively fight them off. Gerra, on the other hand, managed to blast one \"would be\" restraint but another attached itself around her upper arm yanking her up by the elbow making her lose her balance and drop the blaster. More cords wrapped around Gerra's neck and other arm immobilizing her so that struggling only tightened the binding around her neck.\n\nA string of expletives spewed from Gerra's mouth, but Sierra stared wide-eyed at Lord V when he swung his imperious face around to look up at her from his own bindings.\n\n\"You, you, could've done this at any time?\" Sierra asked frowning.\n\nLord V sighed, \"Yes, pet, but as you can see it doesn't exactly help my own predicament. Besides, I was curious how far you would go.\"\n\nSierra found herself dismayed and bristling, not just at the turn of events, but that her punishing his ass was something he could've stopped at any time. It wasn't fair!\n\nSierra sputtered, \"I should have . . . \" but Lord V interjected, \"Sierra, you did very well. I've even been a bit more uncomfortable than you intended as you do have an effect on me even when you try to take the villain's part,\" his icy smile was insufferable.\n\n\"Oh, shut-the-fuck up you twisted asshole!\" Gerra shouted.\n\nLord V ignored Gerra and instead continued speaking to Sierra, \"Sierra, my dear, we can all wait like fish on hooks until one of my people come looking for me. If that is your choice, after I am released, I'll enjoy showing both you and Miss Caspian the error of your ways. That is, until someone comes looking for her, and then I'll need to make sure she isn't found.\"\n\n\"Fuck you Lord fuckface, Jarok knows I'm here,\" Gerra sneered.\n\nLord V responded, \"Ah, yes, the strapping smuggler. You know, I've never taken a male slave, but he is very pretty. Do all Keplarians make the same alarming noises when they cum Miss Caspian?\"\n\nGerra responded by nearly choking herself with her bonds as she struggled furiously to break free.\n\n\"What is the other choice?\" Sierra asked flatly.\n\nThere was a smile in Lord V's voice. \"Ah, I could release you to free me, and we'll send Miss Caspian on her way.\" Sierra tried to interject, but Lord V continued, \"No harm will come to either of you. Just one more night, pet. Just dinner with me and I'll press no further. If you choose to leave me, I'll send you back to your . . . friends, or I will take you to Earth personally.\"\n\n\"Don't believe his shit!\" Gerra spat out.\n\n\"A deal is a deal,\" Lord V said raising an eyebrow.\n\n\"You would let me go?\" Sierra asked her voice skeptical.\n\n\"Yes, little human. As much as it would pain me, if that was your choice, I would release you.\"\n\n\"Why not just let me go now? Aren't you afraid I'll poison you?\" Sierra asked frowning.\n\nLord V smiled faintly, his gray eyes bore into hers from where he lay, \"that is my offer.\"\n\nSierra looked up following the cords holding her to where they disappeared in the ceiling, and taking in a deep breath, she replied, \"I accept.\"\n\n~\n\nThe hardest part had been convincing Gerra to leave without Sierra. It was Lord V suggesting that he deliver Gerra drugged and naked again to Jarok's ship that finally convinced Gerra to enter the transport.\n\nSierra wasn't able to relax in Lord V's quarters despite having greater access to the ship's computer and the ability to order food and drink. There was so much still to process, she had been free, there was Jarok, there was Lord V, and she was even now potentially full of lethal poison she wasn't sure how to use. And yet, here she sat waiting for some sort of twisted dinner date?\n\nSometime in the late afternoon a box was delivered. It was addressed to her in a spindly, elegant hand, \"For tonight.\" Sierra scowled, but her curiosity got the better of her. Upon opening the smooth, dark box, Sierra carefully unfolded a sparkling, deep red dress. It would actually cover more than the silky, nightshirt of Lord V's she was currently wearing, but it would definitely hug her curves more.\n\nAfter admiring the beauty of the dress, Sierra cast it aside in disgust. I'm not dressing up for someone who threatens to kill my friends, she thought. She went back to munching on a green apple while reading about Earth's history through the last 100 years.\n\nMinutes passed and Sierra's gaze fell over the box overflowing with crimson fabric. Sierra glanced over at the tall mirror by the dresser. She sighed, perhaps just trying it on would do no harm. At least, it would be something to do. Why couldn't he have said breakfast instead so she could be on her way? Why didn't he just let her go with Gerra if he was willing to part with her? Sierra shook her head frowning to herself.\n\nWhen Sierra stepped in front of the mirror, she couldn't help but stare stunned. The red dress hugged her alluring hips perfectly then gently flared out cascading down like elegant flames or rose petals. Her waist looked impossibly slender and the low slope of the neckline nearly exposed her shoulders. Her long honey brown hair dripped down and her dark, green eyes stared wonderingly back at her.\n\nOddly, though it was a gift from \"him,\" she felt powerful in this dress. Lord V's nightshirts had hung upon her like just another mark of his ownership. Looking at the woman in the mirror, Sierra saw a lady to be reckoned with. Perhaps it wasn't the dress but something that had changed inside her. Sierra set these thoughts aside and with her back a little straighter, her chin a little higher, returned to her reading.\n\n~\n\nLord V entered the chambers, his handsome, exotic features seemed to have returned to their normal pale luster. Sierra turned and stood. Lord V froze, his eyes running over her for a moment, but came back into himself quickly, \"You look lovely my sl . . . dear.\" He nodded and then gestured to the little table. Sierra eyed him warily and gracefully sat down at the furthest chair.\n\nWhen the food was brought, Sierra tried to contain her delight at the decadent cheese pastries, steaming bowl of buttery potatoes, exquisite salad, and bowl of strawberries laced with melted chocolate.\n\nLord V played the role of gracious host unnervingly well. He poured a glass of dark wine for her and though she felt his eyes on her, his tone of voice was light and pleasant. It felt so absurd to be sitting calmly eating dinner with him after all that had happened.\n\nLord V took a sip of his own wine, and though he had given himself a serving of human fare, his plate remained untouched. \"I see that you have been reading, were you a student of history when you lived on Earth?\"\n\nSierra mused over the phrase, 'when you lived on Earth.' There was a time when the idea that she would live anywhere else would have seemed so unlikely. She brought herself back to his question and looked into Lord V's attentive, gray eyes.\n\n\"I've missed so much being asleep for 100 years,\" Sierra answered. \"I am trying to catch up . . . I,\" Sierra's voice faltered. \"I can't do this. I can't idly talk about reading or the weather when just yesterday you threatened to kill my friend and beat me.\"\n\nLord V replied mildly, \"Miss Lavery, I am a killer.\" He shrugged, \"You can't rise through the ranks to Ingentian Protectorate without a certain ruthlessness. Would you blame one of your striking Earth tigers for defending its territory with its claws? It is my . . . attachment to you that is the anomaly.\"\n\nSierra didn't know what to say and so she took a sip that turned into more of a gulp of wine. It had a dry, fermented taste, but also strange metallic undertones. She set her glass down to see Lord V watching her closely, his eyes almost glowing.\n\n\"How do you feel?\" he asked.\n\nSierra knitted her brows unsure of what he meant, \"The food is very good. Thank you?\" she offered.\n\nLord V gave her a nod while a small smile played at one side of his mouth. He took another sip of his own wine then setting the crystal goblet down, laced his long elegant fingers together.\n\nHis voice and expression became serious, \"My lovely human, I will attempt to speak plainly. I want you to stay with me. I will not be able to curb my . . . desire for you, but things could be different. You could be given more freedom. You could have your own separate quarters, if you wished. There are gardens, libraries and even open spaces for you to practice your human movements.\"",
        "Sierra was flabbergasted, \"What? How can you think . . .\" she interjected.\n\nLord V continued, \"Ingentia is a beautiful place that few humans have ever seen. As consort to the Protectorate, all of Ingentos sector would be open to you. I would even take you to Earth to . . . visit, if you so desired.\"\n\nSierra was listening, but her body was becoming warm, no heating up. Her senses seemed to heighten while at the same time the world seemed to be slowing down. She heard Lord V's chair drag out from the table and then his cool hands were stroking her face and hair.\n\n\"Talk to me, Sierra. What do you feel?\" Lord V asked gently. His heady, masculine scent seemed to make Sierra dizzy. She brought her hands up to rub her eyes like a little girl. Lord V lifted her chin and looked into her dilating eyes. She felt him smoothly lift her into his arms and deposit her on the soft bed. The room seemed to be flickering in and out of focus.\n\n\"Wha . . .what is happening to me?\" Sierra stammered.\n\n\"You have drunk my blood, pet.\" Lord V replied."
    ],
    "authorname": "Abashed",
    "tags": [
        "bdsm",
        "bondage",
        "noncon",
        "vampire",
        "supernatural"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/sierra-lives-pt-11"
}