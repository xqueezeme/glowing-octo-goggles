{
    "title": "Seducing Amy",
    "pages": [
        "Ok, so it has taken me hours to write all this down! I'm still in a state of euphoria because... \n\nI did it! I actually did it! I took charge of the situation like a goddam boss and I properly dominated a cute friend of mine last night! I teased her poor little body, spanked her, made her beg... and ended up having her creaming all over my bed like a wanton little slut! Hahaha, oh the delicious wickedness of it all! It was so good!\n\nThis all happened within the last 24 hours or so, and it's so fresh that I can still see, feel and hear everything! I can still feel the tingles of her soft little lips straining desperately up towards me. I can still see with picture perfect clarity her naked body struggling against the restraints on my bed. And I can still hear her tortured little squeals as I kissed along her bikini line. I've been writing this non-stop after she left as I need to get it down before the memory fades. \n\nJesus, I'm still so hot I can barely think about anything else.\n\nOk, so where to begin? \n\nWell I guess you'll probably want to know a bit about me. Hmm, let me see what I can say without saying anything too identifiable. You can know me as Katie, I live in England and I'm currently studying at university. I'm not going to be any more specific. \n\nI'm not a super model, but I do consider myself to be quite cute. I get enough attention from guys, which I take as a good sign. One of my male friends recently described me as 'cheeky looking, but in a nice way' and someone else recently said I've always got an expression on my face that suggests I've been up to some mischief! I usually haven't been... except in my head!\n\nI'm quite short, around 5'3\" (not exact). I go to the gym quite regularly and try to keep myself pretty slim and toned. My breasts aren't huge unfortunately, but they are quite perky and I like them despite their size. I think my legs are my best feature and when I dress up sexily, they are the part of my body that I like to show off the most: either completely bare or with patterned tights (is that 'pantyhose' in American speak?). I prefer little dresses and skirts rather than outfits that show off my cleavage, and dressing that way does seem to get me noticed and makes me feel very sexy.\n\nI've experimented with a few hair colours, so let's say, for the purpose of the story, that it's red. Maybe it always has been, or maybe I dyed it red once a couple of years ago; you'll just have to guess. And my skin is quite pale, at least at the moment. This is England and apart from the last week or so, we've had a cold year!\n\nNow in this little story, I'm going to come across as something of a Domme. That's not really how I class myself. The majority of my fantasies are submissive. I've also been the sub in a sub/Dom relationship with a guy before, and the memories of him reducing me to a helpless begging wreck still turn me on so much that it's difficult to breathe. However, that said, I definitely have a dominant streak of my own. It's often that I see a cute boy, or a hot girl and picture them tied up, struggling and snivelling beneath me. I've done little bits here and there, but it's not a side of my sexuality that I've explored nearly enough... well, perhaps not until now.\n\nSo let's get down to what happened...\n\nYesterday, I was in the common room in my halls of residence. It's on the bottom floor of our block and we hang out there quite a lot. There's not a whole lot there except for some sofas, beanbags and a TV. Sometimes it's full of people, like when a big game is on, but other times it's pretty quiet. \n\nSo I was in there with a group of friends, including the star of today's show, Amy! \n\nOk, so Amy isn't actually her real name but I've got to choose something to protect the innocent! I should probably tell you a bit about her too. Well to start with, she's a friend of mine. She was someone I instantly warmed to the second I met her. Generally, she's shy and quiet, but once you open her up, she definitely has a sense of fun, and has the most wonderful, heart-warming smile. Fortunately, being the happy little soul that she is, she shows it off quite a lot... and I never tire of making little jokes to induce it on an even more frequent basis. I'll tell you more about her and her loveliness in a second. \n\nSo a whole group of us had been watching a TV show together, but when the show finished, everyone left, apart from me and Amy. Neither of us had any lectures or classes for the rest of the day. We were both on the same sofa. She was sitting normally, and I was lying back against one of the sides, with my legs draped over her lap. \n\nNow I've always thought Amy was very cute. I'm mainly into guys but I definitely have a bi side and Amy is one of those girls who really does it for me. She's a tiny bit shorter than me, with long, thick natural blonde hair with a bit of volume to it. And she's got a really nice body. She doesn't go to the gym like I do, but, to my annoyance, she just seems naturally in shape. Her waist is pretty small, about the same size as mine, but she has the most generous and exquisite breasts. They are quite large, but it's the shape that gets me the most: even through her clothes you can just tell how high, firm and youthful they are. If you get the chance to see her in a tight sweater (and yep she was wearing one yesterday!) or even better, a low cut top (which is unfortunately rare), she really is a sight to behold.\n\nHer skin is pale, but almost flawless, which I really like. She just has the slightest hint of freckles around her nose. She was also wearing tight-ish jeans which clung to her thighs and the delicious, firm little hump of her ass. If your tastes are anything like mine, she has the kind of body that you just want to grab and stroke and squeeze.\n\nI was wearing something which was deliberately more Domme-looking than usual, albeit only very, very subtly. I was wearing a figure hugging black and white dress that went half way down my thighs, then a pair of cute leather boots. I guess you could call them 'fuck-me' boots, but they gave the outfit an edge of strictness. I think boots always do.\n\nI'd chosen to dress like that for two reasons, firstly, it was the first hot day of the year in England! Yay! The sky was so blue. It was warm and sunny and lovely and delicious! I've been dying to put something cute on for months and months now! The second reason is that I knew I'd be seeing Amy and after we'd had a little flirting session last weekend I thought there was a chance that I could get her on her knees! Haha!\n\nThe flirting last weekend had happened pretty much by accident. Again, it was just the two of us. We were sitting next to each other in the canteen... away from other people and prying ears. We'd finished our food and were gradually sipping down the last of our water. I got out my notepad and began writing out a list of books I needed from the library. Here's the approximate conversation, to my memory:\n\nShe leaned over to me, and I felt her head press onto my shoulder. Impishly she commented, \"Katie, I've seen gorillas with better handwriting than you.\"\n\n\"Whatever,\" I replied, \"you better keep your mouth shut, or I'm getting my handcuffs out.\"\n\n\"Oooo kinky! I like it!\" she exclaimed, raising her head to look at me, with a big grin on her face.\n\nI locked eyes with her and said, \"Look Amy, do you really want me to go 50 Shades of Grey on your ass?\"\n\nShe laughed and said that it was a fun read, or something to that effect. After she spoke, she gave a little laugh, but I detected the tiniest hint of nervousness in her voice.\n\n\"Have you ever done any bondage?\" I asked. \n\n\"No,\" she shook her head. Then added, \"but... I guess it's pretty hot...\" as she said it, her words had got progressively quieter, until the word 'hot' came out as just a faint whisper and a look a mild terror flicked over her face. She turned away, partly obscuring her face with her hair, and stared down at her almost-empty glass of water.\n\nI felt a little glow of pride that she'd confided that little secret. I don't think she'd have said it to many people. My inkling is that she let it slip out because, despite her obvious shyness, she knows that I'm liberal minded when it comes to sex. It's not like I sleep with lots of people, but I am quite vociferous when it comes to defending people for expressing their sexuality. She'd witnessed one of my rants before! \n\nAs she rotated her glass in her fingers, I leaned in and whispered into her ear, \"I think you'd look hot in a spreader bar.\"\n\nShe choked slightly. Gave a little laugh. Then her face rapidly flushed pink.\n\nEventually, she peeked at me out of the corner of my eye with a little embarrassed smile on her face.\n\n\"Katie...!\" she whispered in exclamation.\n\nI bit my lip, winked at her, \"Ha, I've got to get to the library.\"\n\nI rose to my feet, then bent down to her ear and whispered, \"see ya later, slave girl.\"\n\nI saw her knuckles go white as she gripped her glass hard, but I didn't stay for any further reaction.\n\nI strode out of the canteen without looking round. I delighted in the thought of her sitting there, red faced and squirming. My pussy began to dampen and I grinned, mentally congratulating myself on my flirting.\n\nThat night I went to bed, slipped my hand between my legs and masturbated thinking about having her tied down at my mercy. Teasing her body. Making her squeal. Making her beg. Mmmm! It felt so much better than ordinary fantasies because it suddenly felt like this one was actually in reach. There was a real possibility that I could turn this into something. Obviously nothing was guaranteed... but if I could just tempt her in the right way...\n\nAnyway, that's just background. Back to the common room yesterday...\n\nSo I was still lying draped across her. I wanted to bring up the subject of domination again and see how she'd react. I racked my mind for a while before thinking of a way to slip it into the conversation at least semi-naturally. Again here's what was said, at least as closely as I can actually remember it. I think there was more to it than this, but whatever...\n\n\"So have you finished your essay yet?\" I said, absolutely knowing that she hadn't. I'd overheard her earlier that day saying that she was struggling to even start it.\n\n\"Ah no,\" she said, \"it sucks!\"\n\n\"Bad girl,\" I grinned, then poked her thigh gently with one of my heels, making her body jump, \"you need to be punished.\"\n\nShe sighed and looked like she was trying to hold back a smile. \"Katie... you keep making these remarks!\"\n\n\"Because I know you love it!\"\n\n\"Whatever,\" she laughed.\n\nI laughed too. Then put on a slightly sterner face.\n\n\"So would it actually turn you on to get tied up?\"\n\n\"Katie!\" She exclaimed. Then went pink, turning to face the TV.\n\n\"It's ok, you know I'm pretty open minded about this stuff, you can tell me if you want.\"\n\nShe started breathing deeply, keeping her eyes fixed on the TV, but clearly not watching it. \n\n\"Ok... maybe... yeah... it does,\" she said. I could see her fingers start to grip the edge of the sofa tightly, \"don't say anything to our friends though. Please.\"\n\n\"I won't tell them,\" I said, \"but\", I grinned, \"I know what you mean, it is pretty hot.\"\n\nShe seemed to sigh a little sigh of relief, her fingers un-clenching slightly.\n\n\"Have you ever done it?\" she asked.\n\n\"Yeah,\" I smiled, \"a little bit of bondage is awesome.\"\n\nShe seemed even more relieved. So I decided to probe a little further.\n\n\"So what else are you into? Spanking? Blindfolds?\" I said.\n\nSuddenly her fingers gripped the sofa even tighter than they had before. She breathed heavily and her cheeks went very pink. I almost thought she was going to run away and hide under a rock.\n\nI tried to reassure her further, \"It's ok, I'm not going to judge. There's loads of weird stuff that I'm into.\"\n\nShe paused for a while then said, \"What the hell... ok... if we're going to go there... umm... yeah, spanking... blindfolds... being dominated. I don't know. You know, that kind of stuff.\"\n\nI grinned at her widely, enjoying watching her squirm, but also trying to mask any of my own insecurity. Then I bit the bullet.\n\n\"You know...\" I said, \"I could do that for you.\"\n\nTime stopped. We just looked at each other for what seemed like forever. Her mouth opened slightly.\n\n\"What?\" she spluttered.\n\n\"I could tie you up,\" I said calmly, but with a hint of seductiveness in my voice, \"just gently, we could, you know, experiment.\"\n\nI think her face was about to set on fire at this point.\n\n\"What? Katie... I don't know. Maybe. I don't know... Are you actually serious?\"\n\nI nodded.\n\nI wasn't sure if she was going to cry, she looked like she was cracking up a bit\n\n\"What would we do?\" she said.\n\n\"Well... hmmm.... if you wanted, you could come over to my room later, I've got a few soft restraints that I can put on my bed. And I can give you a little tease. Just to see if you like it.\"\n\nShe seemed to think for a very long time. Her mouth opened a few times, but she seemed to stop herself before the words came out. Eventually she managed something.\n\nAlmost choking on her words, she said something that approximated to \"ok\".\n\n\"You don't say, 'ok', you say 'yes mistress'\" I grinned at her. She looked away coughed, then giggled. Then she turned back to me and bit her lip. I could almost feel the radiation coming off her face.\"Yes mistress,\" she whispered. \n\n\"How about you come over at 8?\" I said.\n\n\"O...\" she stopped, then corrected herself, \"yes mistress!\" \n\n\"Cool, let's just do this as an experiment,\" I repeated, \"nothing serious.\"\n\nShe smiled, \"Ok... I'm sorry... I'm excited... you're not joking are you? Please tell me you're not joking?\"\n\n\"I'm not joking. Now come here,\" I said, swinging my legs off her lap and patting the piece of sofa next to me.\n\nShe paused for a second, then scooched over, wiping the hair from her face. I could feel her body trembling through the cushions. I looked over my shoulder to check if the coast was clear. Then I turned to face her and slowly leaned in to kiss her. She leaned in and our mouths touched excruciatingly gently. You know, so gently that you can feel little tingles and fizzles all over the surface of your lips. She gasped. Then we shared one of the softest, most tender, most delicious kisses of my life. She kept pushing in a bit more forcefully, but I kept pulling back, trying to tease her and make her want it more. It seemed to work.\n\nI made sure I ended it first, and when I did, she leaned in to the vacuum between us.\n\n\"Later,\" I said.\n\nShe looked at me like a deer in headlights, \"Um... ok... yes Mistress,\" she said back.\n\nI got up and left, wondering how wet her knickers were getting in her jeans. I really, really, really hoped that she was going to show that evening. It was going to be awkward as hell if she didn't! I didn't get a whole lot of studying done that afternoon. I was too excited. Eventually, I had a shower and whilst I was in it, I kept thinking about Amy being there with me, and pushing her up her against the shower wall and kissing her. Then I got out and got dressed. I actually considered getting back into what I was wearing earlier, but I wanted to feel fresh. I kept the boots, but put on some sexy underwear and a short black skirt. I tried a few different tops before settling on a figure hugging red fitted shirt. I looked like a little female devil and thought it looked perfect. I don't want to look too strict, I wanted to look like a minx who is going to tease you to death!\n\nThen I got a text from Amy, \"Hey, are you still ok for tonight? :)\"\n\n\"Yep, definitely! I'm looking forward it to it!\" I replied. I didn't want to put any doubt in her mind that I intended to play with her that evening. \n\n\"Yes me too :) But I'm scared. What if we don't like it, will it be weird?\" she texted back.\n\nI knew I had to say something good here. I really didn't want to fuck this up. I chose my words very carefully. \"I know we'll enjoy it. But I'll go easy. And I'll make sure you're safe. And whatever happens, I absolutely promise you that I'll still be your friend in the morning\"\n\nShe simply texted back \":) Thank you!! Oh Katie! I've never done anything like this before! I'm going crazy over here!\"\n\n\"You'll be going crazy over here when I get my hands on you ;) Now put on something sexy and be here on the dot!\"\n\n\"Yes mistress!!! :)\"\n\nI tidied my room and dusted off my box of tricks under my bed. I've acquired a few little bits of equipment over the past year, some of it from sneaky visits to sex shops, some from the Dom guy I used to see. Nothing major, but enough to have some fun with! I've got some soft leather handcuffs. A couple of blindfolds, some velcro restraints which you can tie to the bed frame and use to spread-eagle someone. And an extendible spreader bar. \n\nI couldn't wait to use some of it on Amy.\n\nThen I sat at my computer and did a bit of internet browsing until she arrived.\n\nJust before eight, I heard a knock at my door...\n\nI waited for a few seconds to make her suffer. Then I put on my best Domme face and strode slowly and purposely across the floor, enjoying the clicks my heels made on the tiled wood. I wondered if she could hear them.\n\nAs I swung the door open, I saw her.\n\nI crossed my arms and looked her up and down. She had this silly grin on her face, but looked very, very awkward. She was staring down, unable to keep my gaze and her cheeks were glowing bright pink all over again. One of her feet was tiptoed and her leg swinging from side to side in nervousness. \n\nI was so glad it was a hot day. She was wearing a gorgeous tight, pink and white dress. It hugged her torso, and brought out the delicious curve of her waist. It also clung to her tits, making them look huge and delicious. I could even see the little upturned nubs of her nipples sticking out through the fabric. It was short, but it frilled out over her thighs, wonderfully emphasising her feminine figure. Then beneath I could see delicious swathes of juicy bare thigh and leg. \n\nI remember she'd worn that dress out one night last year and I'd told her she looked hot in it. \n\n\"Is this ok?\" She said, kind of meekly, whilst smoothing down the fabric, \"I didn't know what to wear.\"\n\nInternally, I grinned the biggest grin. The thought that she'd dressed up for me; and that she'd remembered that I'd liked that particular dress; and that she was desperately seeking my approval... it all made me feel very in control.\n\nI nodded and answered, \"You look very hot.\"\n\nHer head remained slightly bowed, but her eyes flashed up at me, and she smiled at my approval.\n\n\"You look hot too...\" she said, \"you always look hot... Mistress!\"\n\nHer eyes sparkled when she said the word and she bit her lip.\n\n\"Come in, naughty,\" I said. We both giggled. She stepped inside, then I closed the door behind her.\n\n\"Take your shoes off,\" I said. \n\nShe took them off like a good little girl, and put them in the corner. This made the small height difference between us a bit larger and emphasised my dominance.\n\nI didn't want to waste time on small talk. I needed to stay in the zone. I took her hand and led her over to the bed. We both knelt down on the covers. I ran my fingernails lightly down her bare arms and she shivered in delight. Then I took my hand, gently cupped her face and kissed her. I placed my free hand on her bare thigh where her dress had ridden up and my palm absorbed the soft, smooth feel of her skin. God, she felt heavenly. Arousal and excitement flooded through me, and my knickers started to saturate. My lips tingled like mad and I could hear cute little murmurs emerge from her mouth. Every time I pulled back slightly she just whispered the word, \"Mistress...\"\n\nI guessed that she must have been thinking about submitting for a long time. Months maybe, since reading that book? Years? Her whole life? Now it just seemed like it was all just bubbling up out of her and she didn't have a whole lot of control over it. At least that was my guess. I swear I could even smell the faintest hint of wet, horny pussy... although maybe that was just what my nose wanted to smell.",
        "I grabbed the back of her hair into a bunch and firmly yanked it backwards exposing her neck. She gasped. I took my free hand and slipped off one of the shoulders of her dress exposing a swathe of her smooth, vulnerable flesh. I love, love, love girls' shoulders and neck.\n\nI moved down and gently nibbled on her shoulder. She squeaked. Then kissed it. Then nibbled a bit closer and kissed again. She squeaked louder. I guess she knew I was heading towards her neck. She started writhing, almost flailing, mouthing the words,\"Oh God, oh God, oh God!\" following by uncontrolled squealing. Her feet kicked against the bed in a frenzy.\n\n\"Stay still... slut!\" I said. But she couldn't. Every kiss and nibble closer to her neck seemed to drive her a little bit more insane.\n\n\"Katie, oh God, fuck, KATIE!\" she said (or something like that!) but I kept on going. \n\nCloser and closer until I hit the sweet spot right where the shoulder meets the neck. Her body spasmed as I kissed and licked and nibbled.\n\n\"Fu-ugh-ugh-uck!\" she started, before her vocal chords twisted into producing a high pitched squeal. I delighted in kissing and teasing her vulnerable skin. \n\nThen I grabbed her and forced her down onto the bed so she was on her back. She yelped. I grinned at her and I pinned her, at first with both hands either side of her head, then I moved her hands together, so I could pin both of her wrists with just one of my hands. I knew I was probably stronger than her due to all my time in the gym... but I didn't know quite how much stronger and I don't weigh a great deal. Maybe she could have pushed me off if she tried, maybe not, but she wasn't resisting. She was being a good little slut for me!\n\n\"You look so fucking hot in that dress,\" I growled, grinning down at her.\n\nShe didn't respond. Her mouth was hanging open and she was panting heavily.\n\nI definitely wasn't going to let up yet though I gently raked my fingernails down her body, all the way down to her bare thighs, making her squirm. Then I started to feel and caress her. I thought it best to be bold. I murmured to myself in satisfaction as I felt her waist and her delicious tits, compressing the firm flesh beneath my palms. Little whimpers of delight escaped her lips.\n\nI reached down and kissed her, and we shifted onto our sides, facing each other. Our legs entwined. I loved the feeling of smooth skin against smooth skin. Then my hands went all over her body and hers did over mine. I remember teasing my fingers around the edge of her dress, which seemed to really work her up. I raked my fingernails over her bare arms, her bare legs and her back, which made her body gyrate. Eventually, I felt her starting grind her crotch into my leg. Little slut. \n\nI swear I could feel her dampness on my thigh, but at that point I thought there was no way she'd actually be soaking through her knickers and her dress... \n\n\"Not yet\" I grinned at her and she flushed red. I'm not sure she'd even realised what she'd been doing.\n\n\"Take off your dress,\" I said.\n\nShe complied hastily, but awkwardly, without saying a word. Her face was still flushed, but I guess she was getting off on the dominance too much for her embarrassment to be a barrier. \n\nShe shifted up on the bed and pulled off her dress. It was one of those moments when you feel your own eyes bulge. As I said, I'd always thought she was cute. But damn fucking God she looked good in her underwear. Her skin looked so pale and smooth and perfect. Not an ounce of fake tan (which I admit can look hot, but it's only one of many ways to be hot), she was just beautiful and natural. She was wearing the cutest white and pink polka-dot bra and panties... and I could see a dark little damp patch on the front. Hold on... did I say 'little' damp patch... actually nope... it was a large damp patch. I could even see the wet sheen on the fabric glisten. Filthy. Little. Slut.\n\nHer tits looked... magnificent. As I'd suspected, they were jealousy-inducingly big and round. I didn't actually peak at her cup size, but maybe D? Double D? E? I can't judge. I love my breasts, they're nice and firm and perky, but my own bra shopping is limited to slightly lower down the alphabet! \n\nI was still fully clothed and booted. I wanted to stay that way for a bit because I thought it would emphasise her submission.\n\n\"Mmmmmmm,\" I said, \"you are so fucking sexy it's untrue!\"\n\nShe gave an embarrassed little smile. I loved how simultaneously nervous and excited she was. Then I dragged her down on to the bed again and stroked my hands all over the newly exposed skin, absorbing its delicious silkiness and warmth. It was driving me a little bit crazy. I started manhandling her. Squeezing her arms. Grabbing her ass and thighs... all of which made her moan. It was incredible to feel the little jerks and twists of her body as I roughly compressed her glorious, tight flesh.\n\nAs we kissed and touched, I raised my hand up and gave her an experimental spank on her panty-covered ass. I struck carefully. Not too hard that it would hurt, but hard enough so she knew what I was doing. And I aimed for the lower part of one of her cheeks. The part that, when I get hit, sends a vibration all the way to my clit. I hit pretty cleanly and she yelped in surprise. Then she smiled and her eyes sparkled. Then I spanked again, a bit harder. She yelped again, then smiled. I spanked a few more times. Alternating between her cheeks. She bit her lip and her body started to writhe, her legs shifting back and forth.\n\n\"I want to spank you properly,\" I said.\n\nShe nodded, \"Yes mistress.\"\n\n\"If you actually can't take it any more, say 'red', if you're very close to your limit say 'yellow' ok?\"\n\n\"Yes mistress.\"\n\n\"The rest of the time you can just moan like a little bitch,\" I said teasingly. \n\nShe giggled.\n\n\"Ok, get over the side of the bed,\" I grinned.\n\nI made her drape herself over the side of the bed. Her knees on the floor and her face, tits and arms stretched out over the covers. \n\nI pinged the waistband of her panties. \n\n\"Off,\" I commanded.\n\nShe quickly took one hand and pulled them down her thighs and over her legs, and threw them over to the corner. I remember thinking to myself that I'd definitely activated her slut module!\n\n\"Now spread your legs,\" I said, gently slapping both sides of her inner thighs. \n\nAnd she opened her legs. Suddenly I could see her pussy. It was shaved and smooth. And fucking hell it was wet! She was absolutely soaked. Her entire public region was slick with moisture, it had even percolated down her inner thighs.\n\nThen I got out my spreader bar and attached a cuff to each of her ankles, making sure her legs were kept apart, \"Oh God!\" she squealed as I clipped the cuffs shut. I stood back for a second and admired her. Her hot little body stretched out over my bed, and her legs spread revealing her pussy. Her skin was pale, but tight and smooth. There was the slightest hint of redness on her butt from the little spanks I had already given her. I could see the muscles in her thighs and ass clenching and unclenching. She was also shifting slightly from side to side. I don't know whether it was the anticipation of the spanking, or just because she was trying to get some friction on her pussy.\n\nThen I took my hand and placed a solid spank on her left cheek. Her body jumped and she took a sharp intake of breath. Then I caressed her butt, delighting in the firm, warm flesh.\n\nThen I spanked her right cheek. Then back to the left. Then right again. I counted to ten. As I went on she started squealing and yelping, until it became one almost continuous tortured moan. Her ass muscles clenching really hard now. Her butt was glowing deep pink.\n\nI admired my handiwork, then reached down and touched the base of her inner thigh, where it meets the knee. Then I started drawing my hand slowly upwards. \n\nThat drove her a little bit mad.\n\n\"Poor little girl in a spreader bar...\" I teased, \"what will I do with you?\"\n\nAs my hand went higher she started to squeal, \"Katie, Katie, KATIE!\" until I reached all the way up to her soaked snatch. A huge groan left her mouth, as I ran my fingers through her drooling pussy lips. The heat coming off her was like a furnace. I coated my hand it in, then smeared it down her thighs. \n\n\"Wet little girl, aren't you?\" I teased.\n\n\"I'm sorry,\" she said, with a very embarrassed tone in her voice.\n\nI laughed, \"Don't be sorry! I love feeling how soaked you are.\"\n\nI knelt down behind her, put my face between her legs, tilted my head up and drank in her scent. She breathed in loudly. It was heady, musky and sweet. It turned me on so much!\n\nThen I licked all the way along her slit taking her juices on my tongue. \n\n\"Mmmmmmmmmm!\" I giggled.\n\n\"Fuck!\" she squealed. \n\nI pulled back and watched her body squirming. Then I unleashed another spank. Her body jolted. Then I rained down a few more, alternating between her cheeks.\n\nA noise something like \"eeee... eeeeee... eeeeeee... eeeeeeee... EEEEEEE... EEEEEEEEEE\" left her lips. Getting louder with each spank.\n\nI counted out another ten until the pink glow of her ass started to turn red.\n\nI could see her hands were clenched on the bedsheets, bunching up the fabric. Her teeth were biting down onto the sheets too and she was dribbling slightly from her mouth. \n\nThen I looked at her pussy and saw something that I've never seen before, at least in real life. Her pussy dripped. It actually DRIPPED! A little slimy band of moisture dribbled down out of her pussy to the floor. I can only imagine how turned on she must have been.\n\nI unclipped the spreader bar and told her to get up. She got to her feet shakily and looked at me open-mouthed. I could see little tears running down the sides of her cheeks. \n\n\"Did you like that?\" I said.\n\nShe didn't answer verbally, she just nodded.\n\n\"Now off with this too,\" I said, snapping her bra gently. Red faced, she reached behind her and unclipped her bra. It fell down onto the floor. Her breasts were beautiful. Astonishingly beautiful. Totally natural, but so round, and so gravity-defying, with circular little upturned nipples. \n\n\"Nice,\" I said. Then bent down and licked one of her nipples. She gasped. I straightened myself and grinned at my naked little prize.\n\nThen I pushed her down onto the bed. \n\n\"Get on your back and spread yourself out for me.\"\n\nShe complied. Then I whipped out the cuffs on each corner of the bed (I'd tied them there earlier and hidden the cuffs under my covers) and restrained her, spread-eagled on top of the covers. Her thigh muscles tensed, trying to close her legs, seemingly testing the restraints, but they held firm. I knew they would, I'd tested them earlier. Now I had this cute girl all spread out for me, helpless and vulnerable. I had a beautiful view of her soaked snatch with moisture glistening over her entire pubic area and down her thighs. Her chest rose and fell with deep breaths, her big, delicious tits went with them. \n\nI crawled onto the bed on top of her and kissed her. Then I started kissing down her body, very slowly and deliberately. This sent her into a frenzy, of writhes and moans. When my lips reached her public area, I shifted down further and went straight to her knee. Then started kissing up her inner thigh. I can barely describe the sounds coming from her lips, but they were loud, horny and tortured. When I reached the top. I ran my tongue along the crevice between her leg and crotch, then all the way along her bikini line. This seemed to drive her absolutely fucking nuts. \n\nI did the same thing on her other leg, starting at the knee and working my way up. Her hips started thrusting and her whole body started tensing and un-tensing. \n\n\"Fuuuuuccccck!\" she squealed as, once more, my tongue slid along her bikini line.\n\nThen I put my face between her legs and ran my tongue up her slit. Her mouth let go a mixture of mewling, whimpering, moaning... all manner of sounds, which continued as I started to gently suck on her pussy lips. Her hips started bucking up towards me with force. I could see she was losing it. And I also looked up and saw more tears leaking from her eyes. \n\n\"Please Mistress!\" she begged.\n\n\"You want to be licked?\" I teased\n\n\"YES!\" she moaned.\n\n\"Maybe.\" I said, then sucked on her pussy lips again.\n\n\"Fuck! Please! Fuck!\" she screamed. Or at least something to that effect.\n\nThen I pulled back and looked at the poor, struggling, mewling girl in front of me. \n\n\"Ok,\" I said, \"but you have to lick me first.\" \n\nI grinned at her with the most evil grin. Her eyes seemed to roll back into her head with frustration. \n\nI kept my clothes on, but whipped off my knickers. Then I positioned myself so my thighs straddled her head. I lowered my pussy down close to her lips, and steadied myself on the wall which met the head of the bed.\n\nI was very wet too. Just to make her squirm, I shifted my abdomen all around, to smear my own juices all over her face. \n\n\"Lick me, slut!\" I demanded.\n\nI groaned as she started lapping my clit. She didn't have any particular skill, I guess this was probably her first time with a girl, but it didn't matter. I knew it wasn't going to take long for me to get off. I was too drunk on horniness. And each little lick sent a hot rhythmic pulse of pleasure flooding through me. \n\nI found myself getting hot, too hot in fact, and pulled off my shirt and my bra -- leaving me only in my little skirt and boots. Then I pressed my face against the wall and moaned, losing myself in the moment. The thought of her spanked ass and the drip from her pussy reverberated through my head, and the thought of her saying \"Mistress,\" over and over echoed in my ears. I felt myself getting close very fast. And I started to grind into her face. I had just enough consciousness left to make sure I kept my grinds gentle so she had plenty of room to breathe.\n\nI could feel my orgasm building inside me. Growing rapidly. Unstoppably. I was going to explode.\n\n\"I'm gonna cum, I'm gonna cum, I'm gonna cum...\" I squealed.\n\nI went rigid. Held my breath. Then it hit me. Heavy waves of pleasure juddered through me. My muscles trembled and shook as I rode it out. My juices leaking down all over her face.\n\n\"Good girl!\" I moaned as the pleasure throbbed through me, \"Good little slut!\"\n\nI did all that I could to stop my body from slumping. I didn't want to finish with her yet. \n\nI pulled back and looked at her. Her face was coated with wetness. A mixture of her saliva, my juices and her tears. She looked bedraggled. Desperate. And wanton.\n\nI looked down her body and saw a big wet patch on the covers between her legs. I guess her pussy must have gone into fucking overdrive. \n\n\"Katie, please!\" she squealed at me. \n\n\"Please what?\" I teased.\n\n\"PLEASE LICK ME!\"\n\n\"Pretty please?\" I teased again.\n\n\"PRETTY PLEASE! PLEASE WITH BELLS ON! PLEASE!\"\n\n\"I'll think about it,\" I said.\n\nShe roared in agony.\n\nThen I shifted down and licked along her bikini line again. Then started sucking her lips into her my mouth. Her tortured begging continued. I actually thought she was going to have a genuine full-on crying session, so I let up.\n\nI started lapping at her clit. I loved the feeling of my tongue flicking over her firm little bud. She moaned. Then I slipped my middle finger inside her sopping little slit. It made a little squelching sound as it went in, and it felt like I was pressing into a warm, wet heaven. She was so slick, but so tight! I hooked the pad of my finger up and felt for the little rough spot inside. Then I started pulsing my fingers up in time with my licks. \n\nAs I pulsed and licked, I felt her leg muscles clench and unclench around my head. It got me horny all over again feeling the soft, smooth skin of her thighs press against my face. All the time, incoherent wails left her lips. I so wanted to talk dirty to her, but my mouth was already engaged.\n\nAs I went on, I looked up her body and could see her arms pulling against the restraints. I could see the tension in her little biceps, and her fists were bunched up tightly. I knew she was getting very close. I kept on going, pulsing fast and rhythmically. She inhaled loudly. Then again. Then again. \n\nThen she held her breath. Her thighs pressed against my cheeks. I felt her back arch and her hips push up towards me.\n\nSuddenly, her hips dropped and her body started shuddering. Waves of orgasm seemed to ripple through her stomach muscles. And her juices actually squirted out of her pussy, right onto my face! Yes! I'd actually made her squirt! \n\nI raised my head up, whilst continuing to pulse with my finger, \"Cum for me!\" I said. And I rode her out whilst she continued to shake. It was like she was having a fit. It was so hot to watch it... to feel it... to experience her wrecked little body twitching against my own.\n\nWhen I felt she'd had as much as she could take I lifted myself up and untied her restraints. I laid next to her and told her to \"Come here,\" and she shifted over and we cuddled. Well, I say we cuddled, she snapped her arms around my body and gripped me like she was holding on for dear life. I could still feel her naked, sweaty body trembling and I could see tears were leaking from her eyes all over again -- or maybe they just hadn't stopped. I stroked her hair and absorbed her warmth. I could feel her tits and nipples pressing against my chest and our legs snaked around each other. I felt like I'd ruined her, in the best possible way! I tried to reassure her, \"I've got you\" I remember saying. \n\nShe didn't say anything. I don't think she even could. \n\nThe cuddle seemed to last forever. I didn't look at my clock. It might have been ten minutes, it might have been an hour. I was just lost in horny euphoria.\n\nFinally, there came a point where she opened her eyes and a huge grin spread across her face. She looked at me with wide sparkling eyes.\n\n\"Did you like that?\" I said.\n\nShe just giggled and started kissing my cheek, still maintaining her vice like grip. As I looked at her, she kept opening her mouth as if to say something, then stopping and giggling again. \n\n\"You're wonderful!\" she finally managed. I could still feel little pulses and shifts in her body.\n\nWe giggled together and had a little conversation about I don't know what. At one point, I remember whispering in her ear, \"Submissive. Little. Slut.\" which she loved.\n\nShe told me that she loved how I'd just taken charge, and that she'd never felt as horny before and she couldn't stop thinking about what we'd just done.\n\nThen we started kissing and stroking each other's bodies all over again...\n\nI got horny again very quickly. Her skin was so silky I couldn't take my hands away. I wanted to press every inch of myself against her. And the best thing was... I could! I had her naked and all to myself, at least for that night.\n\nI couldn't help myself from reliving everything in my head. The images of her dripping pussy. Her red ass. Her gripping me whilst she trembled. My pussy was getting so hot and slick I could barely stand it. Then I thought struck me... I realised I didn't have to wait for satisfaction, I was in charge.\n\nThe Domme in me surfaced once more. I ordered her to get down and lick me. \n\nFor a second she was a bad girl. She started trying to tease me, kissing around my crotch and stuff. Bad move! I grabbed her hair and sternly said, \"It's not your job to fucking tease me. Just lick. Now.\" The wide-eyed look she gave me was priceless. Then I roughly pushed her face into my crotch and she started licking.\n\n\"That's it, lick me like a good little slut!\" I remember squealing. And she did. \n\nI wrapped my legs around her head and hugged her in close. Just tight enough that she knew who was boss, just loose enough to give her space to lick and breathe. My boots rested gently on her back. Her little laps and grunts drove me wild. And my legs started rhythmically squeezing around her face. ",
        "Very quickly I started to feel an orgasm building inside me. I focused on the image of her desperate, horny, tear-streaked face, with her bedraggled blonde hair framing her features. I knew it was going to send me over the edge. And I wailed as I started to cum all over her face. As the waves of orgasm hit me I gripped her head tightly with my thigh muscles and just rode it until I had milked every last drop of my climax out of me. It felt so bad, but so good! \n\nWhen I finally released her, she looked up at me and her face was glistening with my juices. It was such a beautiful sight.\n\nShe crawled up the bed and I gave her a big thank you kiss. I stroked her body as I basked in a wonderful post orgasmic glow. I had such a smile over my face. \n\nI remember taking the time to drink her in with every sense. The cute, wide-eyed look on her face. The feel of the delicious, firm mounds of her ass; the curve of her waist to her hip; and her juicy tits. The taste of her skin. The sound of her little yelps and gasps as I touch her. And her smell! Fuck, yes, her smell! I don't think it was perfume, it was just her natural scent. It seemed like it was coming from her neck and her shoulders. Light, sweet, musky and girly.\n\nI started running my nose along that whole area, taking deep heady breaths. The smelling really seemed to have an effect on her. And I couldn't help myself. Every time I ran my nose tickled over the tendons where her neck met her shoulder she jumped and mewled. And as I went on, the mewling got louder. I could feel by the way that she was tightly rubbing her thighs together that she was getting very horny.\n\nI ran my hand down on to her thigh, just short of her crotch. I could feel the heat coming off her and I knew she'd be wet... but I wasn't going to venture closer. I wanted to keep my hand right there... right NEXT to where she wanted it, teasing her with what she wasn't getting. As I kept on smelling her, I could feel her legs shifting, trying to get me to move my hand to her pussy. \n\nI could feel the tension rising in her body. It was exquisite! She started rubbing her own thighs and rolling back and forth. Then she tried to grab my hand and push it towards her wet little cunt.\n\n\"Nah-ah!\" I goaded.\n\n\"Katie...!\" She squealed.\n\n\"I invited you up here for a tease!\" I replied, \"it's only polite that I deliver!\"\n\n\"KATIE..!\"\n\nIt was too much fun feeling her squirmy little body for me to stop! \n\nI actually started to feel her wetness again on my hand. Her thighs were getting slick with her juices. Wow this girl produced a lot of liquid! I don't know whether this is what she was always like, or whether it was just what I was doing to her, but it was a hell of a lot of fun. Oh the possibilities for humiliation if I ever had her in tight jeans in public! \n\nShe started whimpering and pleading. Poor girl. \n\nAt one point she said something like, \"finger me, lick me! Just fucking do SOMETHING!\" \n\nShe looked like she was going to cry. I thought I'd give her one little mindfuck before letting up, \"I'm too tired\" I said.\n\nHer mouth dropped. Now she really looked like she was going to cry! Oh dear... maybe I'd pushed things a little bit too far.\n\n\"But...\" I added, \"I'd love to see you play with yourself.\"\n\n\"What?!\"\n\n\"Play with yourself for me!\"\n\nHer face went crimson. I for a second I felt a pang of guilt. I wondered whether this was an embarrassment too far for her. But I hoped her horniness and desire for dominance would win out... and it did. With radiation burning from her cheeks, she slipped her hand between her legs and started to swirl her fingers around her clit in frenzied little circles. I got up on my knees and watched her as she greedily fingered and gasped. Her thigh muscles tensed and un-tensed and her feet twisted inwards then outwards, all the time with her toes curled. \n\nHer eyes were closed, but I told her to open them and look at me. I gave her my most teasing, most evil expression. She groaned. \n\n\"Mmmmmmm naughty girl!\" I moaned and started stroking my own body as sexily as I could. I wanted to give her an image she'd remember, \"hand between your legs... masturbating in another girl's bed... what... a little... slut\"\n\n\"Katie!\" she whimpered.\n\n\"What are you thinking about?\" I said.\n\nShe was silent for a second, but I wasn't going to let her get away with disobeying orders.\n\nI shifted down to her ear and whispered, \"You've got to tell me little slave girl... or I'm just going to tie your hands up so you can't touch yourself...\"\n\nI guess that made her crack.\n\n\"Everything!\" she blurted, \"you... here... now... dominating me... you're driving me crazy... oh God...\" she opened her mouth, and inhaled deeply as if she was on the verge of cumming.\n\n\"Slow down,\" I said.\n\nShe moaned. Her fingers slowed, but her hips started bucking up and down. Poor girl. She closed her eyes.\n\n\"And what are you thinking about now?\" I leaned closer.\n\nThe redness had slightly faded from her cheeks, but now it came back with full force.\n\n\"When you...\" she started, then it faded out.\n\n\"Tell me,\" I said, and kissed her cheek, \"good things happen when you tell me stuff!\"\n\nWhat she said surprised me a bit. \n\n\"Ok... when... you... told me the other day... that I'd look good in a spreader bar... then you winked... and walked off... and... you just left me... and you didn't look round... and you looked so nice... well...umm ... you always look nice.... but that made me...\" her voice trailed off. \n\n\"Masturbate?\" I giggled.\n\nShe didn't answer, but if it was possible for her to go redder, she managed it. I swear she could have powered a small star.\n\n\"Here... let me take over,\" I said, and crawled next to her, kissed her, and slipped on hand down between her lips. She was as soaked as ever and her slick pussy felt wonderful beneath my fingers. \n\nI began to swirl my fingers, approximating her own movements as best I could... little quick circles. And she groaned.\n\nI pulled back, supporting myself with my free arm and looked down at her. I realised the advantage that fingering has... you can dirty talk at the same time. I love dirty talk. I absolutely love it. It always gets me off. It's so hot.\n\n\"Open your eyes again,\" I said. \n\nShe complied. I smiled and looked straight down at her. \n\n\"Do you like submitting to me?\" I said.\n\n\"ugh\" she nodded.\n\n\"Do you like being my little slut?\"\n\n\"ugh\" she nodded again.\n\n\"Do you like getting spanked and teased?\"\n\n\"UGH!\" she nodded more fiercely.\n\n\"Do you like me putting you in a spreader bar and swatting your helpless little ass?\"\n\n\"UGH!\"\n\nHer hips were thrusting up to meet my hand now. All the time our eyes were completely locked.\n\n\"Do you like yelping and moaning as I punish you for being a filthy little slave girl?\"\n\n\"UGH... UGH... UGH...\"\n\nHer hips bucked up hard off the bed. Her spine arched. Her mouth opened wide. Her neck pulled backwards, but her eyes stayed fixed on mine.\n\nThen her hips slumped back down in a thud and violent tremors pummelled through her little body. There was a rush of wetness over my fingers. \"Cum for me!\" I said, as the ecstasy ravaged through her from head to toe. I looked closely to see whether her clit was getting too sensitive, but she was still lost in the throes of orgasm... so I kept on swirling my fingers and extracting more convulsions and spasms from her.\n\nThen I pressed my finger on the hood of her clit (I do this to myself after it gets too sensitive to finger it, but where you know you aren't done!), held it for a while, lifted it up and pressed down again. This forced little jolting aftershocks through her (just like it does with me!) \n\nFinally, I took her in my arms and just held her. She gripped me back.\n\n\"You don't know what you're doing to me!\" she sighed as her sweaty little body quivered against mine. I could see little tears form in the corner of her eyes again.\n\nI kissed her cheek.\n\n\"I like making you feel good!\" I said.\n\nShe giggled and sniffled, \"You've succeeded!\" and wiped her eyes.\n\nWe hugged tightly. For a long time. I don't know exactly how long... because we fell asleep in each other's arms.\n\nSometime later, I woke up. I noticed I was still wearing my boots and skirt! I carefully untangled myself from her and took them both off. There was a slight chill in the air but I was too tired to put anything else on.\n\nI gently woke Amy up, \"Hey,\" I whispered, \"let's get under the covers.\"\n\nShe half woke, \"Heyyyyyy,\" she murmured.\n\nI made her shift to the top of the bed for a second, then opened up the covers. She crawled down inside and I did too. She cuddled me... and we fell asleep together again.\n\nIn the morning I woke at about 8:30am. She was still asleep. I gently extracted myself from her arms and slipped out of the bed. I was thirsty, so ran myself a glass of water from my sink and another for her. \n\nI think the noise woke her up. She shifted under the sheets and cutely rubbed her eyes.\n\n\"Morning lovely,\" I said, handing her the glass.\n\n\"Morning,\" she said happily, \"ah... thanks... you're so sweet!\"\n\nAs we sipped we began to discuss the night before. I can't remember anything like the whole transcript, but here's the critical bit.\n\n\"So... do you want to do this again?\" she asked, with a hint of expectancy in her voice. She looked at me shyly, waiting for my response.\n\nI paused for a while thinking about what to say. I wanted to choose my words very, very carefully. I don't think I managed it properly and ended up sounding a bit silly.\n\n\"Yes...\" I smiled, \"I loved it! But just so you know... I'm really not looking for anything serious. I love being your friend... but it would be great if we could play from time to time.\"\n\nShe nodded. I really didn't know how to read her expression. Maybe I'd said something stupid, maybe I hadn't.\n\n\"Ok... that's fine... I think.\" she said, \"Does that mean we can see other people... or...\"\n\n\"Yep,\" I said, \"you can do what you like, so long as you stay safe.\"\n\n\"Ok,\" she said. Again, I couldn't read whether she was disappointed, or relieved, or just accepting.\n\n\"Are we going to tell anyone?\" she asked.\n\n\"Hmmm... let's not tell anyone in college,\" I said, \"if you want to tell your best friend back home or something I don't mind... but let's not get the gossip machine going here\". \n\n\"Ok,\" she said.\n\n\"What if people see me leaving your room?\"\n\n\"Just say we spent all night talking then we were so tired we fell asleep.\"\n\n\"Yeah!\" she said.\n\nWe got dressed. Then I led her towards door. Before I opened it up, we leaned in and kissed. Her lips felt so lovely, and her little sighs of delight brought out the animal in me. I couldn't resist pushing her up against the wall. She inhaled sharply. Then I raised my thigh up between her legs, all the way to her crotch, forcing a little pant from her lips. I could feel the heat and dampness of her panties.\n\nInstantly, she started grabbing her dress and pulling it up her waist and over her shoulders. She seemed like she wanted to start playing all over again.\n\n\"No!\" I said, \"I've got lectures to go to!\" It was a slight embellishment, my lectures weren't for hours, but I felt like this was the right time to end things.\n\n\"Urrrggghh!\" she moaned, \"Ok... God... I'm not going to get any work done today!\"\n\nI dragged my nose along her shoulder, breathing in her scent, then nibbled the sweet spot on her neck. Her knees buckled.\n\n\"KATIE!\" she gasped, \"Oh God... you... just... said...\"\n\n\"I know!\" I said, then kissed her gently on the cheek, \"I'm just finding it hard to resist.\"\n\n\"I know what you mean,\" Amy replied, breathlessly.\n\nI held her around her little waist and we shared another lingering kiss. As our lips continued to brush and caress against each other, I could feel her body start to quiver. She strained in to kiss me harder.\n\nI pulled my lips away. \"I've really got to ready,\" I said.\n\nShe panted in disappointment. Her cheeks were lightly flushed pink and her eyes were wide. I looked her up and down with an evil grin on my face. She swallowed, then started to fan her face with one of her hands.\n\n\"Oh Katie... if only you knew what you are doing to me!\" she said.\n\nI opened the door and stood back.\n\n\"Ok,\" she sighed, \"I guess I'll have to go.\"\n\n\"Bye gorgeous,\" I said.\n\n\"Bye mistress... thank you,\" she said, looking up and down the corridor, before giving me a final sneaky little kiss on my lips, then another one.\n\nWe grinned at each other, then she awkwardly headed away down the corridor."
    ],
    "authorname": "Katie_Ames",
    "tags": [
        "teasing",
        "spanking",
        "lesbian femdom",
        "slut",
        "lesbian",
        "domme",
        "first time",
        "tease and denial",
        "begging",
        "tied"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/seducing-amy"
}