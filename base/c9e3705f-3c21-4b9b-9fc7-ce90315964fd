{
    "title": "New Girl in Town Pt. 15",
    "pages": [
        " Thank you all for your patience while waiting for this chapter to be finished. I will take a few minutes to explain what happened and why the wait was so long. My family emergency was my father being admitted to the hospital unexpectedly. Long days and nights were spent there with him and my mother. He passed away very unexpectedly about a week after being admitted. Plans were to have him home on Sunday but he died on Wednesday. I won't go into anything further with that as most of you probably know, the grieving process is a long one. Just know that I am back and writing now so on to my thanks.\n\nAgain  Devir Ginator  huge thanks for editing this and for your support during this time. It has been unwavering and very much appreciated. Any errors found are mine and mine alone.\n\n Jessica , I have used every word I can think of to try and thank you for all that you did during and after my dad's passing and they still don't seem to be enough. You are the most remarkable person that I know and I am blessed that you are in my life.\n\nTo you writers and soon to be writers, I say this, Answer Your Feedback! I did and the most amazing person walked into my life because of it! \n\nThis is a long chapter with a lot of volleyball action, some football and sex. Hope you enjoy! Thanks for reading, commenting and voting! \n\n****\n\n\"Jake!\" Sarah yells out the window as the Golden's SUV pulls into the senior parking lot after school.\n\nJake gives her a wave as they pull to a stop in the empty space beside him.\n\n\"Hey, guys.\" Jake greets them after pulling his suitcase from the cab of Bobby's truck.\n\n\"Ready for your trip?\" Marybeth asks after extracting herself from Bobby's arms. He had been standing behind her with his arms draped around hers, sharing the pockets of her jacket while they waited with Jake.\n\n\"We should be.\" Mr. Golden answers. \"I just hope we left you enough room in the back for your stuff, Jake. Sarah insisted on bringing her new telescope along to show her grandma.\"\n\n\"And my 'stronme book too!\" Sarah announces as she holds it up for Bobby and Marybeth to see.\n\n\"Nice!\" Marybeth enthuses. \"Has Jake and Jess been helping you look at stars?\"\n\n\"Uh huh!\" She answers. \"We took it out to the drive-in last week and it was awesome!\"\n\n\"Tell Marybeth and Bobby thank you for that red flashlight they got for you.\" Dr. Golden prompts Sarah.\n\n\"Thank you! It was so cool and made everything red!\" She tells them.\n\n\"You are very welcome, sweetie.\" Marybeth smiles.\n\n\"You really enjoy the old drive in, huh?\" Bobby asks.\n\n\"I think that she's thanked them a hundred times so far for taking her up there.\" Mr. Golden jokes.\n\n\"Thanks, Jake,\" Sarah says with a mischievous giggle.\n\n\"You're welcome again, Sarah.\" Jake chuckles as he plays Tetris with the luggage until his case fits in.\n\n\"A hundred and one.\" Mr. Golden corrects. \n\n\"Are you excited to head back home, Sarah?\" Bobby asks.\n\n\"This is home, silly.\" Sarah answers. \n\n\"Yeah, silly.\" Marybeth giggles as she gives Bobby a playful shove.\n\n\"I mean your first home. Or to see your grandma?\" Bobby corrects.\n\n\"Grandma makes me cookies when I visit. I'm really excited for those!\" Sarah shares.\n\n\"Cookies?\" Marybeth asks. \"Do you have room for one more then?\"\n\n\"We do but when we pick up Jess, you'll have to sit on Jake's lap,\" Sarah tells her.\n\nMarybeth giggles. \"I doubt your sis would appreciate me sitting on Jake's lap, Sarah, but thanks for the offer.\"\n\n\"We'll bring you back some cookies.\" Dr. Golden shares from behind the wheel.\n\n\"Thank you, Dr. Golden. I'd appreciate that.\" Bobby says.\n\n\"Depending on when the cookies are baked, you might get them tomorrow night, Bobby,\" Marybeth tells him. \"The school has chartered a couple of buses to go down to the playoffs both tonight and tomorrow.\" \n\n\"That's why Shelly, Jody, Staci and the rest aren't here to see Jake off. They're all getting on one of the buses to head down to tonight's game. We'll be coming down with them tomorrow provided Jess and the team makes it to the championship game. Not that I doubt them but I've been warned not to jinx things.\" Bobby tells them.\n\n\"The school chartered buses to the games?\" Mr. Golden asks.\n\n\"We take our sports teams very seriously if you hadn't noticed that by now, sir,\" Jake says after closing the hatch.\n\n\"I have but I thought this was a football town.\" He answers.\n\n\"This is a whoever is about to bring home a championship town, Mr. Golden,\" Bobby says. \"Believe me, if our chess club was about to bring home a trophy, they'd have buses for them too.\"\n\n\"Bobby's not wrong. We had a big pep rally for the volleyball team right before they left on their bus. They usually reserve those for the football or basketball teams but Jess and the team are just too good to ignore.\" Marybeth informs him. \"The band has a concert or they would be joining the cheerleaders in going. We would go both nights but I'm working tonight.\"\n\n\"Jake, if you want to ride down on the bus with your friends, we could take your suitcase with us and then meet up at the game.\" Dr. Golden suggests.\n\nJake shakes his head. \"And miss out on some quality time with my Sar-bear? Not a chance.\"\n\n\"Yeah!\" Sarah agrees, her new astronomy book perched on her lap. \"Jake's gonna read to me the whole trip down!\"\n\n\"Jake Gibson, book narrator. Have fun, bud.\" Bobby chuckles.\n\n\"Keep that up and I won't make that sausage stuffing that you scarf down every year.\" Jake jokes.\n\n\"Dude, you love me. You wouldn't leave me hanging like that would you?\" Bobby asks.\n\n\"Ugh, I guess if you're going to give me puppy dog eyes, I have to make it. Or at least have mom make it since I won't be here for Thanksgiving.\" Jake tells him as he climbs into the back of the SUV beside Sarah.\n\n\"Sausage stuffing you say, Jake? You wouldn't happen to want to make some of that for our Thanksgiving meal would you?\" Mr. Golden asks.\n\n\"Tim, Jake is our guest. He doesn't have to cook.\" Dr. Golden scolds him then turns to Jake. \"You don't have to cook, Jake.\"\n\n\"If your mother can spare the room in the kitchen, I'd love to make it for you guys,\" Jake tells them. \"It's no trouble.\"\n\n\"And I'll help.\" Sarah volunteers.\n\n\"Now it's going to be trouble.\" Mr. Golden says and everyone laughs.\n\n\"I'll text you when they win so you can plan on coming down tomorrow,\" Jake tells Bobby and Marybeth as he buckles in.\n\n\"Save us some good seats. I've got a feeling that we'll definitely be coming down.\" Bobby instructs him with a wink.\n\n\"Seats where Jess can hear us yelling for her,\" Marybeth adds.\n\n\"We'll see what we can do.\" Jake answers.\n\n\"Have a good trip and give Jess our best,\" Marybeth tells them.\n\n\"We will and thank you.\" Mr. Golden tells them. \"We'll be looking for you tomorrow night.\"\n\n\"We'll definitely be there.\" Bobby answers. \"Especially if Sarah's going to share her cookies with us.\"\n\n\"We'll see!\" Sarah laughs.\n\n****\n\nAs the team bus passes Mocksville, Caitlyn gives Jessica's arm a nudge. Jessica looks over as she pulls out her earbuds.\n\n\"What's up?\" She asks looking out the window behind Caitlyn. \"Am I missing a great view or something?\"\n\n\"Nah, just passing another Walmart.\" Caitlyn answers. \"I'm just bored.\"\n\n\"Want to listen to my music with me?\" Jessica suggests offering her an earbud.\n\n\"How about we chat instead?\" Tabitha suggests as she turns to look at the pair.\n\n\"Yes, I need to hear what in the world possessed you to take Jake under the bleachers and ravish him!\" Tonya adds turning around like her sister.\n\n\"How many times do I have to explain that?\" Jessica asks blushing.\n\n\"Until it stops being hot.\" Tonya answers.\n\n\"So an infinite number of times to my sister's brain.\" Tabitha giggles.\n\n\"Oh like you haven't gotten yourself off thinking about it, too!\" Tonya argues. \"Our house has thin walls, sis!\"\n\n\"Jesus, you two, talk about TMI!\" Caitlyn speaks up.\n\n\"Well, it's true.\" Tonya states.\n\n\"You don't have to blab it though!\" Tabitha argues, her face beet red.\n\n\"Ladies, is everything all right back there?\" Coach Morrison asks looking back over the seats.\n\n\"Yes, coach.\" the quartet answers in unison.\n\n\"Teamwork. I like it.\" Coach Morrison laughs then turns back to her paperwork.\n\nKenyetta moves from her seat to an empty one across the aisle from Jessica and Caitlyn.\n\n\"What are y'all talking about and why is Tabby so red? What did you do, Tonya?\" She asks.\n\n\"Why do I have to be the one that did anything?\" Tonya asks.\n\n\"Because you're the one that always does something,\" Wendy answers with a giggle as she leans in. \n\nThe other girls all nod and giggle right along with her.\n\n\"Fine but Jessica is still answering the question.\" Tonya states.\n\n\"What question?\" Kenyetta asks wanting to get caught up.\n\n\"Why she and Jake were about to get all kinds of naked under the bleachers at our last game.\" Tonya answers.\n\n\"Again.\" Caitlyn chimes in.\n\n\"Again?\" Wendy asks. \"You and Jake have done it under the bleachers more than once? Damn girl!\"\n\n\"We haven't!\" Jessica emphatically states.\n\n\"I meant that she was explaining it again because Tonya can't hear about it enough.\" Caitlyn corrects.\n\n\"Oh, I was about to say.\" Kenyetta nods.\n\n\"Jess?\" Tonya prompts.\n\n\"I was just thanking him for taking care of my ankle and things got a bit out of hand,\" Jessica tells them.\n\n\"More like in hand.\" Tonya giggles.\n\n\"Mmm, I'll say.\" Tabitha agrees thinking back to seeing Jessica stroking Jake through his jeans.\n\n\"Could you two control yourselves?\" Caitlyn scolds the sisters.\n\n\"The reason things got  out  of hand is because Jake kisses really good and ever since that weekend we had, I get really... um... amped up after a win,\" Jessica explains.\n\n\"She means that she gets horny after we win.\" Tonya giggles. \"If Jake was rubbing on me during and after games, I'd be horny win, lose or draw.\"\n\n\"Anyone want to trade rooms with me tonight? I don't want to hear my sister taking care of her needs.\" Tabitha asks.\n\n\"You sound pretty confident about us moving on to the championship game, Tabby.\" Kenyetta comments.\n\n\"Didn't you hear Principal Owen at the pep rally. Jessica here is going to lead us to the state title.\" Tonya says.\n\n\"He shouldn't have said that,\" Jessica says. \"We're a team and we win or lose as a team. You guys were great before I even got here.\"\n\n\"Miss All-State here is a paragon of modesty even after being selected for the team three times already.\" Caitlyn laughs.\n\n\"You were!\" Jessica insists.\n\n\"Jess, we didn't even make the state playoffs last year,\" Tabitha tells her.\n\n\"You missed them by one game, Tab and that was because your captain went down with an ankle injury just before the game,\" Jessica says.\n\n\"And this year you came along and not only are we in the playoffs but we're the second-ranked team in the state with a bye in the first round,\" Tabitha says.\n\n\"While you may not believe that you're the reason we're in the playoffs, you had better believe that you coming along helped us all elevate our games to the next level,\" Caitlyn tells her.\n\n\"You did that.\" Tabitha agrees. \"Without practicing with and against you, I wouldn't have made the All-State team with you.\"\n\n\"Guys, we have to stop embarrassing Jess. She's turning all red.\" Caitlyn says then looks at Tabitha. \"You can bunk with me since my travel buddy here is going to her grandma's house after the game.\"\n\n\"Thanks, Caitlyn.\" Tabitha nods.\n\n\"To have crazy wild sex with her man after we win. You have to tell us all about it when we get back to school, you realize this don't you?\" Tonya asks with a giggle.\n\nJessica shakes her head as the rest all laugh. Coach Morrison looks back and considers heading back to see what is going on but decides that if they're laughing, they're relaxed and a relaxed team has better odds of winning.\n\n****\n\nAfter an hour on the road, Dr. Golden glances in the rearview mirror at Jake. His reading tapered off a few miles back and she was curious if he and Sarah both fell asleep, but her glance showed him leaning back and looking out his window.\n\n\"Are you doing okay back there, Jake?\" She asks as she slows for traffic.\n\n\"Yes, ma'am,\" Jake answers quietly. \"Sarah passed out a few minutes ago. I guess my reading leaves something to be desired.\"\n\n\"This is her usual nap time, Jake. It's got nothing to do with your reading prowess.\" Dr. Golden tells him.\n\n\"Jake, I showed some of my colleagues at the firm your mockups of the drive-in. I also sent along a copy of your report on its history. They were very impressed by how exhaustive your research into the history of it went and how your design mixed the classic style of the original place with new ideas to bring it up with the times.\" Mr. Golden tells him. \n\n\"I'm glad that I didn't let you down, sir,\" Jake tells him.\n\n\"You don't have to worry about that.\" Mr. Golden assures him. \"I don't want you to think that I'm trying to push you towards architecture, Jake, but you do show a lot of talent for the design aspect of it.\"\n\n\"Thank you, Mr. Golden. I am intrigued by the idea of getting into the design aspect. I hadn't really thought a lot about what I wanted to study in college but architecture would allow me to continue to draw. It was really fun working up ideas about the drive in.\" Jake tells him.\n\n\"If you enjoyed that, I may have you take a run at the new marina we're working on. Get your ideas on that since our client keeps changing his mind.\" Mr. Golden says.\n\n\"Tim, let's let Jake concentrate on his school work and not on trying to figure out how to appease Buck Greene.\" Dr. Golden tells him then looks at Jake. \"And you don't have to decide anything during this car ride, Jake. Is there anything that you'd like to know before we get to my mother's place?\"\n\n\"What should I call her? Other than ma'am, I mean.\" He asks.\n\n\"You can call her Mrs. Keifer until she tells you otherwise. Jess and Sarah both call her Grammy and I figure that you will be too by the time we sit down for Thanksgiving.\" Dr. Golden tells him. \"She's very protective over both Jess and Sarah but once she sees how you are with them both, you won't have any problems.\" \n\n\"I hope that I don't. I'd hate to let Jess down.\" Jake says.\n\n\"Something else that I can't ever see you having to worry about.\" Mr. Golden laughs.\n\n\"It's good to have a little worried at times,\" Jake says with a smile. He turns back to look at the passing scenery and soon is lulled to sleep by the rhythm of the ride.\n\n****\n\nCoach Yates waves Coach Pennington into his office as the team is dressing for practice.\n\n\"Remind me why Jake isn't going to be here for the next couple of practices?\" He asks Pennington after he closes the door.\n\n\"He's gone to the volleyball tournament. It's the state finals and his girlfriend Jessica plays.\" Pennington states. \"Jake told you about this last week.\"\n\n\"He did and I told him that if he no-shows at practice, he's not playing this week,\" Yates states.\n\n\"Well I saw him riding off with Jessica's family just before practice so, as much as Jake likes playing football, that threat didn't keep him from going to support Jessica but that's not really surprising,\" Pennington informs him.\n\n\"It's not, huh?\" Yates asks.\n\n\"Jake's told me on plenty of occasions that his future isn't in football. He's been a back up most of his high school career and even though he's killed it in the games he has got in, colleges don't recruit backups. He knows this.\" Pennington explains. \"Doesn't mean that we don't need him if we want to win the state championship, though.\"\n\n\"At least he took his damn playbook for all the good that does him. Damn kid plays by the seat of his pants no matter how I coach him.\" Yates complains halfheartedly.\n\n\"Is that why you keep him over with me and the defense because he doesn't listen?\" Pennington asks.\n\n\"I keep him with you guys because the saying  Defense wins championships  is a saying for a reason. I need them to play against the best we can throw at them so your defense can win us States again this year.\" Yates explains then laughs. \"And because he listens to you a hell of a lot more than he does to me.\"\n\n\"It helps that I have him for art.\" Pennington laughs. \"He has to listen to me there.\"\n\n\"And yet I'll bet that he still does his own thing though, doesn't he? Admit it.\" Yates chuckles.\n\nPennington laughs. \"He has been known to stretch the boundaries of an assignment now and again but he gets results.\"\n\n\"There and on the field, too.\" Yates nods. \"I should start him for this playoff run with what he's shown us, but I owe Patrick a chance to get out of this slump he's in and the penalty for missing practices is pretty clear. I hope our defense is up to winning a game for us. I think that they might have to if Greene keeps playing like he has been.\"\n\n****\n\n\"We're here!\" Dr. Golden announces as she pulls into the parking lot of The Belk Gymnasium on the campus of UNC Charlotte.\n\n\"This place is bigger than I thought it would be.\" Jake comments.\n\nHe had been keeping Sarah occupied by thumb wrestling with her since she woke him up.\n\n\"They renovated it a few months back.\" Mr. Golden tells him.\n\n\"It hosted the state finals for volleyball Jess's sophomore year. It's a great facility.\" Dr. Golden tells him.\n\n\"Kind of a home game for Jessica's old school.\" Jake remarks as a large group of teens decked out in the red and white of Jessica's old school walk by.\n\n\"It is a bit of one but then they do want to sell as many tickets as possible.\" Mr. Golden answers. \"Harris High made it in this year and they're South Palisades cross-town rival. South Palisades is Jess's...\"\n\n\"Old high school,\" Jake says. \"She told me all about the Paladins a while back.\"\n\n\"I like Wildcats better!\" Sarah jumps in.\n\n\"Me, too.\" Jake laughs as he helps her hop down from her seat.\n\n\"Sarah, take my hand and don't run off.\" Mr. Golden announces as he goes around to collect her.\n\n\"I've already got Jake's,\" Sarah tells him.\n\n\"Of course you do. Why would I ever think otherwise.\" Mr. Golden states with a laugh.\n\n\"Keep hold of Jake's hand and don't run when you see Grammy. She's supposed to meet up with us at the ticket counter and I don't want you running in front of a car.\" Dr. Golden tells Sarah.\n\n\"Okay, I won't run,\" Sarah promises.\n\nThe group walks towards the steadily filling gymnasium until Dr. Golden spots her mother standing off to the side.\n\n\"Mom!\" She calls out as she waves towards a tall, older woman with silver-blonde hair.\n\nThe woman smiles and waves back. The woman is slightly shorter than Jessica is and Jake can see that Jessica gets a lot of her features from her mom's side of the family save for her blue eyes.\n\n\"That's my Grammy,\" Sarah informs Jake as she tugs him along towards the lady. \"Hey, Grammy!\"\n\nSince they're safely on the sidewalk Jake lets go of Sarah's hand so she can greet her grandmother with a hug.\n\n\"There's my little Sarah!\" Mrs. Keifer says as she lifts Sarah into her arms giving her a hug and kisses.\n\nSarah squirms and giggles under the attention while returning the kisses.\n\n\"Mom, this is Jessica's boyfriend Jake.\" Dr. Golden introduces him. \"Jake, this is my mom, Mrs. Keifer.\"\n\n\"Very nice to meet you, ma'am,\" Jake says offering his hand.\n\nShe looks down at it for a moment before shaking it briefly.\n\n\"The football player, correct? Don't you have a practice you should be at?\" She asks.\n\n\"He's here for the volleyball game,\" Sarah tells her then unzips her jacket to show her. \"See. We match.\"\n\nSarah and Jake are both wearing a blue t-shirt that depicts a wildcat paw, claws extended, swatting a volleyball with the words  Wildcat Volleyball  on it. The paw, ball, speed lines and words are all colored burnt orange.\n\n\"I see that.\" She answers. \"Did you bring your Grammy one, sweetie?\"\n\nSarah nods and points towards her mom. \"It's in mom's suitcase.\"",
        "\"Thank you, sweetie.\" Mrs. Keifer tells her.\n\n\"Thank Jake. He got them all for us. Well, him and Jess. They're a good team and I'm a great matchmaker.\" Sarah states.\n\n\"Matchmaker?\" Mrs. Keifer asks. \"How are you a matchmaker, Sarah?\"\n\n\"I shampooed Jake and Jessica's first date!\" Sarah giggles.\n\n\"Chaperoned, Sar-bear.\" Jake chuckles.\n\n\"We saw a meteor shower, I got to sit with their teacher and Jess said they kissed that night too!\" Sarah gleefully overshares. \"Now they're boyfriend and girlfriend cause of me.\"\n\n\"It sounds like it was a big night all around.\" Mrs. Keifer says sounding dubious as she puts Sarah down to greet her daughter with a hug. \"Hey, sweetheart. I've missed you.\"\n\nI've missed you too, mom.\" Dr. Golden says with a smile.\n\n\"Tim, how is my favorite son in law?\" Mrs. Keifer asks.\n\n\"I'll call Jason and find out for you,\" Tim says while pulling out his cell phone.\n\nShe playfully smacks his arm. \"You know that you're still my favorite despite taking my grand-babies and my baby away, Tim.\" She admonishes him.\n\n\"We had to move, Grammy,\" Sarah tells her. \"If we hadn't Jess wouldn't have found Jake.\"\n\n\"Of course, dear.\" Mrs. Keifer states then gestures towards the ticket booth. \"Shall we head inside?\"\n\n****\n\nJessica leans forward in her seat as she watches her former team getting ready to serve for match point. The match was a lopsided affair with South Palisades putting on a dominant performance over the four seeded Grove Vale Griffins.\n\n\"Damn, they're good.\" Caitlyn murmurs.\n\n\"No kidding.\"\n\nTonya nods her head.\n\nOn the court, Madison Thorne, team captain of South Palisades, jumps up and spikes down the winning shot.\n\nThe Paladins begin to celebrate as Jessica looks over the worried faces of her Wildcat teammates.\n\n\"They don't have anything we don't have ourselves,\" Jessica says to the team. \"They play off your fear of them being the vaunted Paladins. The five-time state champs that will run you into the ground just for laughs. You guys know that I was there so I know what I'm talking about. I was part of that and I'm telling you guys that we are a better team.\"\n\n\"Better? Come on, Jessica, be realistic.\" Tabitha says.\n\n\"I am. We have a better backcourt than they do and a pair of the best set up hitters that I've ever had the privilege of taking the court with.\" She says. \"We can beat them.\"\n\n\"We have to beat Harris first, Jessica.\" Coach Morrison reminds her. \"Play this game and don't look ahead until it's done.\"\n\n\"Yes, coach.\" Jessica nods. Beating Harris is a foregone conclusion in her mind but she knows that her coach is right. \n\nThe team gets up, ready to take the court for warm-ups as the Paladin players walk by.\n\n\"Hey there, Fish. This is one cute looking little team you've got here.\" Madison says to Jessica as she stops. \"Wild Kitties or some such right?\"\n\n\"Wildcats. Learn to read.\" Tonya replies snarkily.\n\n\"Why are you calling Jessica  Fish ?\" Caitlyn asks. \n\n\"Don't worry, she gets it.\" Madison smiles at Jessica. \"You get it don't you, Fish?\"\n\n\"Yeah, I got it, Madison. It's still as funny as it was back before I left.\" Jessica answers as her face flushes with anger. She wants to slug the bottle blonde in her smug face but a fight would get her tossed from the tournament.\n\nMadison grins wickedly and leans into her. \"I'm the one getting it now and I don't just lay there like a dead fish for him. Shame you did.\"\n\n\"Walk away, Madison.\" Cassandra Wescott, a teammate of Madison, says as she walks up to the group. \"Leave Jessica alone. Anything you want to say, say it on the court tomorrow.\"\n\n\"I doubt that she and her little team here are going to make it to tomorrow's game against us.\" Madison declares.\n\n\"That's right, Madison. Keep underestimating us like that and we'll make you pay.\" Jessica tells her.\n\nMadison glares at Jessica for a moment then turns and walks away.\n\n\"Thanks, Cass. I appreciate that.\" Jessica says thanking her former teammate.\n\n\"You were always nice to me, Jess. I figured that I owe you a few.\" Cassandra says giving her a smile. \"That and Madison is still an intolerable bitch of course.\"\n\n\"Of course.\" Jessica laughs then hugs the tall, lanky brunette to her. \"I've missed you, Cass.\"\n\n\"Missed you too, Jess.\" Cassandra laughs.\n\nJessica then turns and introduces her to her Wildcat teammates. \"Guys, this is Cass. She's cool.\"\n\n\"Jess is the one that's cool. She really helped me out when I was moved up from JV to varsity last year. The rest of the team couldn't be bothered to help bring a sophomore up to speed but Jess stayed late with me and helped me work on drills and better my game. She's one of the best.\" Cass tells the group.\n\n\"We're playing against one of Jess's proteges. Just what we needed to hear.\" Caitlyn shakes her head. \"Hi, Cass, I'm Caitlyn.\"\n\n\"Nice to meet you, Caitlyn. Don't worry, I am not on par with Jess here. She's still killing it from what we've read and been told about.\" Cassandra shares.\n\nJessica introduces Cass to the team before she tells them that she needs to hit the showers.\n\n\"I don't want to miss watching you guys play. Gotta study the competition and all that. Good luck, you guys! It was great meeting you all.\" She tells them before heading towards the locker room.\n\n\"And yet another sweetheart that Jessica knows.\" Tonya quips as they take the court. \"What was that other bitch's problem?\"\n\n\"That's Madison and she's had it out for me from way back when I started dating my ex. I thought she would have gotten over it since they're apparently together now, but I guess that she hasn't.\" Jessica sighs picking up a ball and bouncing it a couple of times.\n\n\"What was that  fish  nonsense?\" Tonya asks.\n\nJessica tosses the ball high into the air, jumps then slams a hard spike down. The resounding smack causes everyone to look over to see what is going on. Caitlyn sets another and Jessica slams it in much the same way.\n\n\"Save some of that for the game, Jessica.\" Coach Morrison calls out.\n\nJessica nods and turns back to her waiting teammates. After Jessica explains the circumstances surrounding her nickname Caitlyn slaps the ball that she's been holding.\n\n\"That fucking asshole.\" She snarls. \"I cannot believe him!\"\n\n\"Or her for that matter!\" Tonya expresses. \"Where did that bitch go? I'm kicking her ass!\"\n\n\"Tonya, we beat her by beating her on the court,\" Jessica tells her. \"Nothing matters more than that. We are a team. If we lose you because of fighting, our team isn't the same. We need you on the court. I need you there, okay?\"\n\nTonya reluctantly nods her head. \"All right but God save these poor Harris Hawks because I am taking it out on them first and tomorrow we kick some Paladin ass and get Jess some revenge! Who's with me?\"\n\n\"We are!\" The others shout loudly causing the Hawks team to look over and see what's going on.\n\n****\n\nA few minutes into the Wildcats warm up, the buses from Carter arrive and the students pour into the gymnasium. Staci begins scanning the stands looking for Jake and the Golden's.\n\n\"There,\" Roxie says to her while pointing towards the bleachers about midway up and just behind the Wildcat bench. \"I see Sarah.\"\n\nStaci looks and nods. \"Let's start moving people then. They are clearly in our seats.\" She laughs as the group begins walking towards them.\n\n\"Here comes two busloads of trouble.\" Mr. Golden chuckles as he sees Staci and company walking over.\n\n\"What are you talking about, Tim?\" Mrs. Keifer asks looking towards the doors to the gymnasium. Thirty or so teens enter and each of them in the same t-shirt that Jake and Sarah are wearing. Even the cheerleaders that come bouncing in clad in their cheer skirts and pom poms are wearing them over their usual cheer tops.\n\n\"There's my Sar-Bear!\" Roxie says as she takes a seat beside Mrs. Keifer.\n\nSarah looks over and jumps from her grandma's lap and into Roxie's. Wrapping her in a huge hug as she does.\n\n\"Roxie!\" She shouts gleefully.\n\nMrs. Keifer is shocked by Roxie's appearance. The nose and multiple ear piercings along with Roxie's medium length hair that's been dyed blue with orange streaks and its unlike anything she's ever seen.\n\nRoxie hugs her back before Shelly moves in.\n\n\"Pass the Sar-bear around, Rox. We all need our hugs from our sweetie!\" Shelly tells her.\n\n\"Shelly!\" Sarah shouts just as she did Roxie's name.\n\nThe hugs are repeated for each member of the Misfits and even Staci's fellow cheerleaders get in on the action before all of them take seats surrounding Jake and the Golden family.\n\n\"Val, who are all these kids?\" Mrs. Keifer asks as she's confused that her once shy little Sarah is hugging every one of them and chatting away like she's known them her whole life.\n\n\"These are most of Jessica and Jake's friends. I say most because their friends on the football team have practice and a couple are stuck working.\" Dr. Golden explains. \"Jake, would you do the honors of introducing them all?\"\n\n\"I'll do it!\" Sarah volunteers. While she excitedly goes through the introductions, Coach Morrison waves Jake down to the bench area. He excuses himself and heads down.\n\n\"Is everything all right, Coach?\" He asks upon arrival.\n\n\"Jake, would it possible for you to sit here on the bench with the team?\" She asks him. \"I can list up to two trainers and I have a spot open if you want it. With what happened during our last game, I would like to have you available just in case.\"\n\n\"Uh, I guess?\" He answers then looks back to where the family is seated. \"Let me tell Jess's family so they don't wonder what's going on and I'll be right back.\"\n\nAs Sarah is still in the midst of her introductions Mrs. Keifer doesn't notice Jake telling Jessica's parents what he was doing and why he would be on the bench.\n\n\"Sarah, want to go do your hair up before the game?\" Roxie asks. \"I bought my quick color kit if you want to show your school pride.\"\n\nSarah nods and jumps to her feet but Roxie stops her.\n\n\"Slow down there, little one. Ask your mom if it's all right for us to go first.\" Roxie reminds her.\n\nMrs. Keifer looks surprised and Roxie smiles at her.\n\n\"She gets a bit over anxious but it's so cute,\" Roxie tells her.\n\nMrs. Keifer nods. \"Thank you for being so thoughtful with her.\"\n\n\"She's become a little sister to all of us, ma'am,\" Roxie says with a smile. \"We all look out for our little Sar-Bear.\"\n\n\"I'm glad that she and Jessica have found such thoughtful and caring friends.\" Mrs. Keifer returns her smile.\n\n\"You can blame Jake for all this.\" Roxie smiles. \"We've been his friends forever. Jessica just got dragged into all of this but she fits right in with us misfits.\"\n\n\"Mom, can Roxie take me and color my hair? Please, mom? Please?\" Sarah begs after bounding over to her mother.\n\nDr. Golden laughs and shakes her head before looking down the bleacher to Roxie. \"Are you sure that you want to try that with this little bundle of bounciness, Rox?\"\n\n\"I'm not bouncy! That's Jess when Jake is coming over. Where is Jake anyway?\" Sarah asks as she looks around.\n\nMr. Golden points towards the bench. \"Down there, Sarah. Coach Morrison wanted him to be on the bench in case he needs to help out.\"\n\n\"Like he helps out by rubbing Jess?\" Sarah asks shocking her grandmother again.\n\n\"Something like that.\" Dr. Golden answers as she notices the look on her mother's face. \"Go ahead with Roxie and let her color your hair before the match starts.\"\n\nStaci turns to Sarah. \"If you're good for Roxie, you can sit between Michelle\n\nand me and we'll teach you our cheers for Jess.\"\n\n\"Cool!\" Sarah exclaims, hugs them both then snags Roxie by the hand. \"Let's go Wildcats!\"\n\nAll the students surrounding the Golden's shout out the same much to Sarah's delight.\n\n****\n\n\"You okay, Mom?\" Dr. Golden asks.\n\n\"Seeing Sarah so outgoing is a tad shocking, I admit but what is this business about rubbing going on? I brought you up better than that, Valerie.\" Mrs. Keifer warns.\n\n\"Mom, relax.\" Dr. Golden says. \"Jake rubs Jessica's hands, arms, shoulders and sometimes her feet, ankles, and legs after her games. She claims they are a lot better than the ice baths that she used to use after them. I've watched them together so nothing indecent is going on.\"\n\n\"She is at that age where some simple massage can lead to more, Valerie.\" Mrs. Keifer comments.\n\n\"Mom, they are both eighteen and mature enough to make that decision on their own.\" Dr. Golden says knowing now is not the best time to tell her that she knows that Jessica and Jake are sexually active. \"Jake was very nearly the first friend she made at her new school and they have been pretty much inseparable since day one. It took them a little while to start dating but Jake's a great young man. Just give him a chance to show you that.\"\n\nMrs. Keifer doesn't look pleased but she shrugs. \"Well, Sarah certainly seems to be taken with him as well. Nearly as much as Jessica is, by the way, they both talk about him over the phone.\"\n\n\"And my girls are usually pretty particular when it comes to the people they like.\" Dr. Golden states.\n\n\"We'll see, Val.\" Mrs. Keifer says. \"We'll see.\"\n\n****\n\nThe Wildcats jumped out to a big lead over the Harris Hawks in their first game. Their strategy seems to be to stop Jessica at all costs leaving Tabitha and Kenyetta open to score, seemingly at will. When the lead reaches double digits, the Harris coach calls for a timeout.\n\nThe team huddles with Coach Morrison as Jake hands out water bottles.\n\n\"You all are playing great out there. Way to come together and make them regret targeting Jessica with their defense. Jess, be ready if they switch it up coming out of this time out.\" She tells the team.\n\n\"I will be, coach.\" Jessica nods and gives Jake a smile.\n\nHe nods at her as Coach Morrison continues.\n\n\"If they let up on Jess, we're going to feed her as much as we can until they change it up again.\" She tells them. \"We keep playing our game and we don't let up. Wildcats on three.\"\n\nThe team shouts  Wildcats  as the timeout ends then heads back onto the court. The Hawks do switch their defense up and the team follows Coach Morrison's plan of feeding Jessica the ball. She reels off seven more points before Harris's coach calls her second timeout to regroup.\n\n\"Great play, ladies.\" Coach Morrison says in the huddle. \"You all have brought your A game tonight. Jess, you are laying into your spikes pretty heavily just like warm-ups. Everything all right?\"\n\n\"I'm just a little excited to be back home, Coach.\" Jessica answers.\n\n\"She's going to need your magic hands tonight for sure, Jake.\" Tonya teases.\n\n\"Reel it in, Tonya.\" Coach Morrison tells her then turns to the others. \"Keep playing our game. Eight more points and the first game is ours. Go out there and get them!\"\n\nThey do just that, with Caitlyn putting a dink shot over a pair of Hawk defenders for the winning point.\n\n\"That's the first one out of the way.\" Coach Morrison tells them as they take a seat on the bench. \"Great game all around but let's not let up. Except you, Jess. You need to let up on hitting the snot out of the ball with every spike. If we keep up this pace, I'll need those hands tomorrow against the Paladins.\"\n\n\"Jake will take care of that, Coach.\" Caitlyn giggles.\n\nJessica shakes her head but then holds out her hands towards Jake. \"Rub?\" She asks garnering giggles from her teammates.\n\nJake glances up at the packed stands and swears that he can feel Jessica's grandmother's eyes boring into him but he nods anyway. He pulls her hands into his and begins to rub the sting and soreness out of them.\n\n\"Can we clone you somehow, Jake?\" Tabitha asks.\n\n\"Yeah, we all need our own personal hand masseuse after our games.\" Kenyetta agrees.\n\n\"It's been suggested that I become the first masseuse architect.\" Jake laughs.\n\n\"My masseuse architect, Jake.\" Jessica comments. \"Or masseuse whatever you end up doing as long as you're still mine.\"\n\nJake nods and Jessica leans in and gives him a quick kiss much to the delight of her teammates. Her grandmother is another matter, however.\n\n****\n\n\"Really, Valerie?\" Mrs. Keifer asks nodding towards the bench.\n\n\"Try and relax, Mom. They are dating after all.\" Dr. Golden points out.\n\nShelly hears them and looks at Roxie who also overheard them.\n\nShe mouths  Uh oh  at Shelly who shrugs back as if to say,  What can you do? .\n\nRoxie tries to think of something to say to distract Mrs. Keifer but Sarah jumps in instead.\n\n\"Jake's taking care of my sissy, Grammy. He does a great job of that.\" Sarah announces. \"He even had her at his house for a whole weekend and she was fine when she got back. Better than fine. She was all happy and...\"\n\n\"New cheer time, Sarah!\" Staci says quickly pulling the pint-sized troublemaker into her lap.\n\n\"He did what now?\" Mrs. Keifer asks as she looks at her daughter who is shaking her head at her daughter spilling those particular beans. \"What is Sarah talking about, Val?\"\n\n\"I'm going for drinks. Who's coming with?\" Mr. Golden asks as he hops to his feet knowing that now is a good time to let his wife handle her mother.\n\n\"Me!\" Jody answers jumping to her feet and dragging Javier with her as he's holding her hand.\n\n\"Me, too I suppose.\" Javier answers.\n\n\"Not me, I want to see how bad this gets,\" Roxie says with a grin.\n\n\"Rox!\" Shelly scolds.\n\n\"What? This promises to be better than the volleyball match!\" Roxie argues.\n\n\"Mom now is not the time and place to discuss this.\" Dr. Golden remarks.\n\n\"So it did happen! Valerie, how could you allow such a thing?\" Mrs. Keifer asks.\n\n\"Mother, there are a lot of things that we need to discuss but now is neither the time nor the place.\" Dr. Golden tells her.\n\n\"Did I do something wrong?\" Sarah whispers to Staci after hearing her grandmother sound upset.\n\n\"No, sweetie, you didn't,\" Staci assures her. \"Your grandma just doesn't know Jake yet. When she gets to know him, it'll all be fine.\"\n\nSarah turns towards her grandmother as if to say something but Staci steers her back around.\n\n\"Sarah, the next game is starting. Ready to lead a cheer for us?\" She asks.\n\nSarah nods excitedly and Michelle, who is sitting on the other side of Sarah, mouths  Good Job  to Staci as she raises her one pom pom. Sarah raises both hers which she had been given, one by Staci and one by Michelle, and begins the Wildcat Roar cheer that they taught her.\n\nDown on the court, Jessica hears Sarah leading the cheers and smiles. She looks up at the group and gives them a wave before taking the court for the second game of the set.\n\n****\n\nAfter the Wildcats win the first game of the match, Tabitha feels a twinge flare across her lower back as they take the court for the second set. She rubs at it with her hand for a moment and it fades so she resumes warming up for the next game. The Wildcat team picks up right where they left off and appear to score at will against the Hawks. With the Wildcats up by five points, Jessica and Kenyetta jump to block a spike. The ball makes it through and is headed out of bounds.\n\n\"Touch!\" Kenyetta shouts.\n\nTabitha turns and dives for the ball. She manages to knock it back into play but when she hits the ground she screams out in pain. Coach Morrison and Jake are instantly on their feet but can't run to check on her with the ball still in play. Tonya freezes on the court, seemingly feeling the same pain as her sister. Wendy moves over and plays the ball towards Jess who swats it over the net. Tabitha tries to get to her feet but ends up collapsing back to the ground when the pain from her back flares again. As the Hawks play the ball, Jessica gives a worried glance at her before turning back to the play. As the Hawks put the ball over the net, Jessica jumps at it and slams down a quick cross-body shot that catches them off guard for the point.",
        "\"Point Carter! Injury Timeout!\" the line judge calls out.\n\nWith the whistle, the entire Wildcat team drops down beside Tabitha.\n\n\"Tabby... Tabby what hurts?\" Tonya asks hurriedly.\n\n\"My... back!\" Tabitha gasps out.\n\n\"Make a hole!\" Jake says as he and Coach Morrison hurry across the court.\n\n\"It's her back!\" Tonya tells them as Coach Morrison kneels beside her prone player.\n\n\"The spasms again, Tab?\" Coach Morrison asks concerned.\n\nTabitha nods as tears streak down her cheeks.\n\n\"This has happened before?\" Jake asks.\n\nCoach Morrison nods. \"We need to get her to the bench, get some water in her and ice on her back.\"\n\n\"Jake, get mom to look at her,\" Jessica tells him then rubs Tabitha's arm. \"Mom will look it over okay, Tab?\"\n\nTabitha nods and tries to push herself up but her back spasms again.\n\n\"Jake, grab an arm and I'll grab the other one.\" Coach Morrison tells him as she hooks her arm under one of Tabitha's. Jake takes the other and they slowly get Tabitha to her feet. Once they are all three standing the crowd themselves stand and begin to applaud.\n\n\"We'll take this slow as you like, Tabby,\" Jake tells her as he puts her arm across his shoulders.\n\n\"Thanks, Jake.\" She whispers to him.\n\nThey start over to the bench as the Wildcat and Hawk players join in the applause. Tonya steps over, tears on her own face, and hugs her sister.\n\n\"You'll be all right?\" Tonya asks.\n\nTabitha manages a nod and a slight reassuring smile before the trio begins to walk towards the bench. When they get there Dr. Golden is already there waiting for them.\n\n\"Tabitha, where are you hurt?\" She asks as Jake and Coach Morrison sit\n\nTabitha on the bench.\n\n\"Lower back.\" Tabitha answers then winces. \"It's spasms.\"\n\n\"They've happened before?\" Dr. Golden asks.\n\n\"They developed last year.\" Coach Morrison tells Dr. Golden then sends in Tabitha's back up so play can resume. \"Tab, lie on your stomach and while Dr. Golden checks you out, I'll grab the ice packs.\"\n\n\"Take a few sips on this water first, Tabby,\" Jake says handing her a bottle.\n\nShe squeezes a mouthful in then hands it back to him.\n\n\"Thanks, Jake.\" She says.\n\n\"Let me help you lie down.\" He says grabbing a towel for her to lay her head on than helping her stretch out.\n\n\"I've got her from here, Jake.\" Dr. Golden tells him. \"Be ready with those hands of yours. We may need them.\"\n\n****\n\nComing out of the break the Wildcat team is rattled and Harris takes advantage, reeling off a run of five straight points to bring them within one of tying the game.\n\n\"Heads back in the game, guys,\" Jessica calls out before the Hawks get ready to serve.\n\n\"For Tabby,\" Caitlyn responds.\n\nHarris serves the ball and Tonya plays it to Jessica.\n\n\"Set!\" Jessica shouts as she bumps the ball up.\n\nKenyetta jumps up as a feint to draw a defender or two giving Caitlyn an opening. She smashes a spike towards the Hawks backcourt that lands between two diving defenders.\n\n\"That was for you, Tab!\" Caitlyn yells towards the sidelines.\n\nTabitha gives her a thumbs up as Dr. Golden places the ice packs onto her back.\n\n\"These should start helping calm the muscles, Tabitha.\" Dr. Golden tells her.\n\n\"Thank you, Dr. Golden.\" Tabitha answers. \"It's feeling better with me stretched out already.\"\n\n\"I'm not surprised. You were cramped on that bus for almost two hours. Since this is an ongoing problem, I suggest that you do some extra stretching before each game to loosen up.\" Dr. Golden tells her. \"I'll sit down here with you in case they get worse.\"\n\nTabitha nods and Jake gets to his feet nodding towards where he was just sitting.\n\n\"Take my seat, ma'am. I'll try and distract, Tabby.\" He states moving to sit by her head.\n\n\"Jake, what...\" She begins to ask as Jake takes one of her hands in his and starts to rub her palm with his fingers.\n\n\"Healing hands and all that.\" Jake chuckles.\n\n\"Oh my, these are nice.\" She sighs as she closes her eyes and sinks her head into the towel. \"Jess is going to kill me.\"\n\n\"Highly doubtful.\" Jake laughs and nods towards the court.\n\nTabitha looks over and sees Jessica giving her two thumbs up before Kenyetta serves the ball into play.\n\n\"I love her, Jake. She is so sweet to us.\" Tabitha tells him.\n\n\"She is that.\" He agrees.\n\nWhile Tabitha is tended to the Wildcats get back on track and dominate the rest of the second game.\n\n\"I'm feeling better.\" Tabitha states as the team hover over her between games.\n\n\"With Jake rubbing on you, of course, you do.\" Tonya teases her sister. \"I was thinking of faking an injury to get the same treatment if I wasn't deathly afraid of Jess spiking a ball into my head.\"\n\n\"Sorry, Jess.\" Tabitha apologizes pulling her hand from Jake's rubbing fingers. \"His touch really is nice.\"\n\n\"Don't wear him out, Tab,\" Jessica says. \"I'll need his rubbing tonight when we get to my grandma's house.\"\n\n\"You may want to hold off on those, Jess.\" Dr. Golden tells her as she removes the ice packs from Tabitha's back. \"Jake, warm your hands and place them where the ice packs were.\"\n\n\"Just hold them there or should I massage?\" Jake asks.\n\n\"I swear I didn't ask for this, Jessica.\" Tabitha quickly says.\n\n\"Try a bit of light massage and we'll see how Tabitha reacts to it.\" Dr. Golden tells him.\n\n\"I know how I'd respond.\" Tonya sighs lustfully.\n\n\"Sissy, shush!\" Tabitha hisses at her as Jake places his hands on her lower back after rubbing them together to generate heat on his palms.\n\nHe places his hands on her back and gently probes her tense muscles. Tabitha's lower body stiffens and a low moan escapes her lips before she cuts it off.\n\n\"So... sorry... Jess.\" She gasps as Jake works his magic on her.\n\n\"I know the feeling, Tab. It's fine.\" Jessica assures her. \"Why do I need to hold off on Jake's massages at Grammy's house?\"\n\n\"She knows about that weekend.\" Dr. Golden answers.\n\n\"She what?\" Jake asks.\n\n\"Oh shit,\" Jessica says.\n\n\"Jessica!\" Dr. Golden scolds her daughter.\n\n\"Sorry mom, but seriously... Oh shit.\" Jessica repeats.\n\nDr. Golden sighs and nods. \"Oh shit, indeed.\"\n\n****\n\nThe third set becomes the deciding one as the Wildcats continue to hammer Harris until Jessica slams down the match-clinching kill. The traveling Wildcat students erupt in raucous cheers lead by the cheerleaders and an enthusiastic Sarah who proudly yells out, \"That's my sister!\"\n\nJessica shakes her head and smiles hearing her, but then she takes a moment to glance at the area of the stands where the Paladin players are seated. Madison is doing her best to stare down her former teammate until Jessica is pulled into a team hug and out of her sight. Tabitha meets the team in the group hug and announces that she is feeling better.\n\n\"That's good because I've got a very sore feeling creeping in,\" Tonya says. \"My butt needs some of Jake's healing touch, I think.\"\n\n\"Tonya!\" Tabitha shouts.\n\n\"You are going to kill her after tomorrow's game right, Jessica?\" Caitlyn giggles. \"I mean it's not like you need her around after we win.\"\n\n\"Oh thanks a lot, Caitlyn.\" Tonya states.\n\n\"I'm not killing anyone after the game,\" Jessica announces but then her eyes drift towards Madison. She sees the back of her and some guy walking out arm in arm. \"Okay, maybe one person but it's not going to be our horny little Tonya here. And no, Jake is not rubbing on your butt. Sore or otherwise.\"\n\n\"Come on, Jess.\" Tonya playfully pleads. \"He rubbed on my sister for most of the last game!\"\n\n\"It was all above my waist, Jess. I swear it!\" Tabitha tells her.\n\n\"I know it was, Tabby. My mom was right there the whole time.\" Jessica laughs.\n\n\"That and Jake loves you.\" Kenyetta chimes in. \"Let's get over there and let him start rubbing on you so you're ready for tomorrow's showdown with your old squad.\"\n\nAt the bench, Jess is hugged first by her mom, then a line of Misfits form behind her to give her more hugs.\n\n\"Jess sure is popular.\" Mrs. Keifer says to Mr. Golden. \"Does she really know all of these kids?\"\n\n\"Some she's very good friends with. Those at the front of that line are her best friends while the rest are, at the very least, acquaintances.\" He answers. \"I've been told by her teachers that they see Jake and Jessica stopping to say hey to nearly everyone they come across walking the hallways at school. Everyone likes them.\"\n\nThe pair rises and joins the others in congratulating the team on its win.\n\n\"I was cheering really, really loud for you,\" Sarah tells Caitlyn after being picked up by her. \"Did you hear me?\"\n\n\"I sure did, Sar-bear. You were our MVP tonight!\" Caitlyn tells her.\n\nSarah turns to her sister with a big smile on her face.\n\n\"I was the MVP.\" She says proudly then turns to Jake. \"Jake, what's an MVP?\"\n\n\"Most Valuable Peanut,\" Jake answers with a grin.\n\n\"I'm not a peanut!\" Sarah argues. \"I'm a Wildcat like my sissy! Rrrrah!\"\n\n\"Watch it with those claws, Sarah.\" Mrs. Keifer tells her with a laugh.\n\n\"Grammy!\" Jessica calls out excitedly then hugs her. \"Oops, sorry. I'm a bit sweaty.\"\n\n\"Well, it didn't seem to bother your friends so I'm not about to let it bother me, little Jessica.\" Mrs. Keifer assures her as she pulls her into her arms again. \"I have to get my hugs when I can now with you being so far away.\"\n\n\"I've missed you, Grammy,\" Jessica tells her.\n\n\"With all these friends, whenever did you find the time?\" She asks with a laugh.\n\nJessica laughs with her and steps back. \"I'll tell you all about that after I shower and we get to your house. Deal?\"\n\n\"Deal.\" Mrs. Keifer agrees.\n\nJessica stops at Jake and smiles at him.\n\n\"Best for last?\" She asks him with a smile.\n\n\"More like, I don't want your grandmother to kill me in my sleep.\" He tells her.\n\n\"Grammy's not like that, Jake. She's the kind that wants you to see it coming when she kills you.\" Jessica tells him.\n\n\"Not funny, Jess.\" He states.\n\n\"It's a little funny.\" She giggles before giving him a hug then a kiss that goes on until her Grammy clears her throat. \"See you in a few, sweetie.\"\n\n\"If I live that long.\"\n\n****\n\n\"Dude, your phone is blowing up!\" Antoine says to Ray as the pair are seated at their lockers, getting out of their practice gear before showers.\n\n\"It's Staci,\" Ray tells him as he reads the series of texts that had been sent all through their practice. \"She's been giving me play by play of Jess's match.\"\n\n\"Well don't keep me in suspense,\" Antoine says.\n\n\"Yeah, Ray. How'd our Lady Cats do?\" Des asks.\n\n\"They're in the championship match tomorrow night,\" Ray tells them. \"They didn't lose a set. Tabitha went down but Jake... well, that can't be right.\"\n\n\"What?\" Des asks.\n\n\"She wrote that Jake rode Tabitha and she's better now. Autocorrect strikes again I think.\" He laughs. \"I'll assume she meant Jake rubbed Tabitha.\"\n\n\"Jake Gibson, sex god.\" Antoine laughs. \"We're going down to their game tomorrow, right?\"\n\n\"What about practice?\" Ray asks. \"Yates will sit all of us if we skip it.\"\n\n\"Man, he can't sit us all.\" Des comments.\n\n\"He's right about that, Ray,\" Antoine says. \"I've got an idea on how we can go if you guys want to go along with it.\"\n\nThey hear Antoine's plan, both nodding as he lays it out for them.\n\n\"It'll work, right?\" He asks them.\n\n\"I can't see why not,\" Des answers him.\n\n\"It's for Jess so I'm in,\" Ray tells them.\n\n\"I'm going to text Twanda and let her know the plan. Des, you better tell Marisha too.\"\n\n\"Marisha went tonight but I'll tell her for sure,\" Des answers as he heads towards the showers.\n\n\"I'll let Staci know,\" Ray tells them. \"We're all on tomorrow to go out and support our friends.\"\n\n****\n\nMarybeth's raven locks are splayed out on Bobby's pillow as she pants out in pleasure. A beeping from the nightstand draws her attention.\n\n\"Your phone.\" She gasps as a shiver of pleasure causes her body to shake.\n\n\"Don't care,\" Bobby mumbles as he kisses his way up her smoothly shaved slit.\n\nShe giggles but reaches for his phone anyway, only fumbling it twice before she manages to open it and read his text.\n\n\"It's from Jake.\" She moans out as his tongue teases into her.\n\n\"Uh huh,\" Bobby mumbles as he flicks his tongue inside her.\n\n\"Oh shit, Bobby!\" She cries out, dropping the phone beside her as she climaxes.\n\nHe smiles when her thighs tighten around his head and her hands grip his long black hair as she cries out. Once she loosens her grip he crawls up beside her and cuddles her to his side.\n\n\"You're getting better and better at that, baby.\" She whispers to him as she cuddles close.\n\nHe gives her a squeeze and smiles. \"It's all you, Marybeth. I've gotten to know what you like and what sets you off.\"\n\n\"You certainly know that.\" She giggles then picks his phone back up and reads the text message to him. \"Jake said that Jessica and the team won their set and he hopes we can make the championship game tomorrow. Want me to answer him?\"\n\n\"Sure.\" Bobby answers.\n\nAs Marybeth begins to type up the response, Bobby lays her on her back and climbs between her legs.\n\n\"You aren't going to do that while I text Jake are you?\" She asks looking at him over the top of the phone.\n\n\"Maybe.\" He laughs before penetrating her.\n\n\"Oh god!\" She moans as he sinks into her warm wetness.\n\nHe begins to slowly thrust in and out of her as she tries to type out a response. Her fingers fumble to make words that make sense in her reply as Bobby continues to stroke into her. He hears the familiar ping that tells him the message was sent and smiles down at her.\n\n\"What did you type?\" He asks.\n\n\"So good.\" She moans as he continues making love to her.\n\n\"Jake will love that.\" He laughs.\n\nShe reaches down and slaps his ass. \"That's not what I typed!\" She tells him. \"I told him that was great. Congratulations to Jess and that we'd be there tomorrow.\"\n\n\"How many misspelled words?\" He asks.\n\n\"All of them probably! Who cares! Just keep doing... that! Oh god, Bobby, I'm there!\" she shouts as she comes again.\n\nHe nods and stiffens inside her with a grunt.\n\n\"Coming!\" He says as he fills the condom. He leans back and pulls himself out of her then disposes of the condom when his phone chimes again. Marybeth picks it up and turns red when she reads it.\n\n\"Oh god.\" She mutters as she shakes her head.\n\n\"What did he say back?\" Bobby asks.\n\nShe again shakes her head and hands him his phone.\n\nHe takes it and reads aloud. \"Guess I caught you guys at a bad time or good time. LOL. I'll try with Jess but doubtful since we're at her G'ma's. Have fun! See you tomorrow.\" He scrolls up and starts to laugh. \"Ejaculations to Jess! Oh god, Marybeth, that is too funny!\"\n\n\"He's going to kill me!\" She says but Bobby's laugh is contagious and soon she's laughing as well.\n\n\"You?\" Bobby laughs. \"You sent it from my phone! He's going to be giving me hell over this for the rest of the year.\"\n\nMarybeth laughs harder then pats his shoulder.\n\n\"Poor baby.\" She giggles. \"I guess I should make that up to you somehow.\"\n\nHe starts to ask her how but he gets his answer as she begins kissing her way down his chest. She smiles up at him then pulls down his foreskin to expose the head of his cock. She plants a tiny kiss on it then looks up at him.\n\n\"Think this will do it?\" She teasingly asks.\n\n\"Definitely.\" He says nodding his head. \"That will definitely do it. I love you, baby.\"\n\n\"Uh huh.\" She answers as she sucks him into her mouth. He drops his phone off the bed and concentrates on enjoying her oral talents.\n\n****\n\n\"You have a lovely home, ma'am,\" Jake says after carrying in his, Jessica's and Sarah's bags from the car.\n\n\"Thank you for saying so, Jake.\" Mrs. Keifer acknowledges.\n\n\"Where am I headed with these?\" He asks.\n\n\"Sarah and I will be upstairs on your right,\" Jessica says as she follows him inside. \"You will be across the hall.\"\n\n\"Down the hall.\" Mrs. Keifer states. \"Your mother and father will be across the hall from you two.\"\n\n\"Isn't that the smaller bed though?\" Jessica asks.\n\n\"Jessica, it's fine.\" Dr. Golden says. \"Tim and I will make do.\"\n\n\"I can sleep on the couch if that helps,\" Jake suggests to them before Sarah bounds into the house.\n\n\"Jake, will you set up my 'scope?\" She asks him.\n\n\"You missed a P word there, little one,\" Jessica tells her.\n\n\"Peanut?\" Sarah asks then giggles.\n\n\"I'll show you a peanut!\" Jessica declares then proceeds to chase Sarah around the living room. \"My tickle fingers are hungry for Sar-bear flesh!\"\n\nAs the pair race around the lower floor of the two-story house, Mr. Golden dodges them as he brings his and his wife's bags inside.\n\n\"Do I even want to know what set off this chase?\" He asks.\n\nDr. Golden shakes her head. \"Jake, can you leave the bags here and go set up Sarah's telescope while we discuss room assignments, please?\"\n\n\"Dr. Golden, I don't want to be the cause of any...\" Jake begins to tell her but she stops him.\n\n\"Jake. Please.\" She tells him.\n\n\"Yes, ma'am.\" He answers and heads towards the door.\n\nJessica comes around the corner with Sarah squirming in her arms.\n\n\"Where's Jake going?\" She asks.\n\n\"Out to set up Sarah's telescope. How about you take Sarah out and help him.\" Dr. Golden suggests. \"Your Grammy and I need to have a chat.\"\n\nJessica recognizes her mom's tone and makes a beeline for the door with Sarah.\n\n\"Yay, my 'scope's going up!\" Sarah shouts as they go out the door.\n\nAs soon as Jessica pulls the door closed behind her, Dr. Golden nods towards the dining room.\n\n\"Shall we talk in there?\" She asks.\n\nMrs. Keifer follows her daughter towards the dining room when Mr. Golden descends the stairs.\n\n\"Where am I putting the kid's bags, Val?\" He asks.\n\n\"Leave them there for now and come into the dining room. We're about to discuss that.\" She tells him.\n\n\"Oookay.\" He answers unsure. \"Where are the kids?\"\n\n\"Outside putting up the telescope.\" She answers. \"Come on, we've got a lot of talking...\"\n\n\"Explaining you mean.\" Mrs. Keifer interrupts. \"You have a lot of explaining to do, Valerie. How could let Jessica spend a weekend with a boy? Have you forgotten everything I taught you?\"\n\n\"I haven't forgotten anything, mom. I thought a lot about the decision and even had second thoughts after agreeing to it but things turned out fine. Better than fine if I'm going to be completely honest.\" Dr. Golden shares. \"He loves her. She loves him. He earned my trust ages ago and they have been discreet around Sarah and safe about everything that's happened. I trust them and so should you. Give Jake a chance and you'll see just how lovable he is.\"\n\n\"We'll see.\" Mrs. Keifer states and folds her arms across her chest indicating that's her final word on the subject.\n\nDr. Golden nods pulls out her cell phone and turns towards her husband. \"Do you think the kids will want a pizza from Henry's?\" She asks then shakes her head. \"Of course they will. Henry's Pizzeria is the best around.\"\n\n\"I'll let them know.\" Mr. Golden laughs as she dials the number.\n\n****\n\nJust under an hour later, the pizza is delivered and the kids are called in to eat.\n\n\"Did you see a lot of stars, Sarah?\" Mrs. Keifer asks as Sarah takes a seat at the table.\n\n\"There's too much light here,\" Sarah tells her as Jessica places a drink in front of her. \"Home and the drive-in are so much better, Grammy.\"\n\n\"The drive in?\" She asks.\n\n\"Uh huh. Jake and Jess took me out there so I could see even more stars.\" Sarah answers. \"They took me all the way to the top and you could see everything! It's so cool!\"\n\n\"Sounds like it is.\" Mrs. Keifer agrees.\n\n\"Yay Pizza!\" Sarah shouts as Jake places a slice on her plate. \"Thank you, Jake.\"\n\n\"You're very welcome, Sar-bear.\" Jake nods and offers the box to Jessica.\n\n\"You get a slice or two too, Jake,\" Jessica tells him as she selects her slice then stops and pulls out two more slices.\n\n\"Hungry, Jess?\" Mr. Golden asks.\n\nJessica shakes her head and places two slices on Jake's plate. \"Jake looks out for me so I gotta look out for him, too.\" She answers with a grin.",
        "\"I gotta look out for Jake, too,\" Sarah tells them around a mouthful of pizza. \"He helps me find all the stars and stuff then Jess reads about them to me in my book. Can you read to me tonight, sissy?\"\n\n\"Aren't you even the littlest bit tired, Sarah?\" Mrs. Keifer asks. \"You had a big trip, got your hair dyed, chatted then cheered with all of your friends, watched Jess win her match then this big dinner you just ate. How can you not be?\"\n\n\"I am a little but I want Jess to read to me like Jake did on the ride up here,\" Sarah says.\n\n\"I will as long as I can do it while Jake rubs me down like he does at home,\" Jessica tells her. \"Deal?\"\n\n\"Deal!\" Sarah answers while Mrs. Keifer looks miffed at the thought but she says nothing.\n\nAfter dinner, the teens offer to clean up but are shooed from the kitchen so Sarah can be read to and gotten to bed.\n\n\"I can't believe that Jessica asked for a rub down right in front us like that.\" Mrs. Keifer declares as they clear the table.\n\n\"I need to go and check my emails.\" Mr. Golden states then ducks out of the kitchen before his wife's glare kills him on the spot.\n\n\"Mom, just look in on them if it worries you so much.\" Dr. Golden says. \"They won't do anything improper with Sarah there, I promise you that.\"\n\nAs much as Mrs. Keifer wants to take her daughter at her word she walks to the kitchen door and peeks out into the living room. Jake is seated on the couch with Jessica seated on the floor in front of him with Sarah on her lap holding her book. Jake is rubbing Jessica's shoulders while she reads to Sarah about the best times of year to see the various planets when they are at their closest rotation to Earth.\n\n\"So I take it that they do this a lot then?\" Mrs. Keifer asks.\n\n\"It's become routine. We all get home from a match, eat dinner, then Jess asks for a rub, Sarah asks to be read to and Jake can't refuse either of them so you get what's happening out there\n\nnow.\" Dr. Golden answers. \"Sarah will start nodding off soon and they will put her to bed.\"\n\nTrue to her word, as the pair are leaving the kitchen, Sarah gets to her feet.\n\n\"I'm ready for bed.\" She announces as she grabs Jake's hand. \"Come on, Jake. I'll show you your room.\"\n\n\"Sarah, I'm not sure that's a great idea,\" Jake says but Sarah won't be deterred as she tugs him towards the stairs.\n\nJessica picks up his bag from the floor and she, her mother and grandmother all follow them up. Sarah stops at the first door across from her and Jessica's room and points to it.\n\n\"You stay in there, Jake.\" She tells him.\n\n\"Sarah, Jake is at the end of the hall.\" Mrs. Keifer tells her but Sarah shakes her head.\n\n\"Mom and dad are down there. Jake's in here in case sissy or I need him.\" Sarah tells her. \"He's got to stay close so he doesn't get lost. This is a new house to him.\"\n\n\"Can't argue with that logic, Grammy.\" Jessica giggles as she hands Jake his bag. \"You heard Sarah, Jake. You come and get us if you get lost. I'm going to help Sarah brush her teeth and wash her face.\"\n\n\"I don't like it.\" Sarah states.\n\n\"I didn't ask if you did or didn't now did I?\" Jessica counters then steps over and gives Jake a quick kiss. \"Goodnight, Jake.\"\n\n\"Night, Jess.\" He says then as she and Sarah leave he turns to the adults. \"I don't have to stay in this room if it's going to cause a problem, ma'am.\"\n\n\"It's fine, Jake. Right, mom?\" Dr. Golden asks her mother who gives a curt nod before walking off without a word.\n\n\"I'm not sure it's all that fine, Dr. Golden.\" Jake comments.\n\n\"Don't worry about it, Jake.\" Dr. Golden says patting his shoulder. \"You grow on people pretty fast.\"\n\n****\n\n Wednesday \n\n\"Did you see any planets through your new telescope, Sarah?\" Mrs. Keifer asks as they sit around the breakfast table.\n\n\"Jake and Jess were pointing out the constitutions to me last night,\" Sarah answers excitedly nearly hurling her fork laden with waffle and fruit onto the floor in her enthusiasm.\n\n\"It's constellations, Sarah.\" Jessica corrects her. \"And watch where you're flinging your fork. You almost threw your waffle all over Jake.\"\n\n\"Nuh huh!\" Sarah answers just as animated as before. \"I wanna show Grammy my book!\"\n\nShe starts to hop to her feet but Jake catches her around her waist stopping her.\n\n\"Hold up, Sticky-bear. We need to clean you up so you don't get syrup all over your grandmother's house.\" He says lifting Sarah into his arms.\n\nAs he takes her to the sink, Mrs. Keifer looks on in astonishment. The last time she saw Sarah, she would never let a boy pick her up, much less let a boy help her.\n\nJake places Sarah on the kitchen counter by the sink and starts the water running before reaching for the paper towels.\n\n\"Does this happen often?\" Mrs. Keifer asks.\n\n\"This morning is better than most.\" Dr. Golden says. \"Sarah is usually a lot messier.\"\n\n\"No, I meant her allowing a boy to clean her up.\" Mrs. Keifer corrects.\n\n\"He's not a boy, he's Jake!\" Sarah tells her Grammy while Jake cleans the sticky syrup from her hands.\n\n\"My apologies then, dear.\" Mrs. Keifer chuckles as she watches Jake carefully clean Sarah's hands and face.\n\n\"It's usually Jake or Jessica that takes up the cleaning duty where Sarah is involved.\" Mr. Golden answers. \"Especially if there's syrup. Sticky is icky!\"\n\n\"I get sticky.\" Sarah giggles.\n\n\"Very.\" Jake laughs as he cleans her cheeks. \"I think I got it all now but let Jess check you over to be sure.\"\n\nHe helps Sarah down from the counter and she skips over to Jessica.\n\n\"Kissy check!\" Jessica declares then proceeds to kiss Sarah all around her cheeks while she squeals with delight. \"I think you're good, Sar-bear.\"\n\n\"Cool! I'm getting my book now.\" She announces as she heads for the stairs.\n\n\"Slow down, speed demon!\" Dr. Golden calls out to her.\n\nThe doorbell chimes as Sarah starts up the stairs.\n\n\"I got it!\" She shouts.\n\n\"Sarah, it's your Grammy's house. She's got it. You get your book.\" Jessica shouts back.\n\n\"I'll get it.\" Mrs. Keifer says pushing up from the table. She leaves the room as Jake collects the empty plates from the table.\n\n\"Do I have to remind you that you are the guest here, Jake?\" Dr. Golden asks with a giggle.\n\n\"No ma'am but I was up anyway.\" He states as he rinses the dishes.\n\nBehind him, Mrs. Keifer returns with an announcement.\n\n\"Jess, look who heard you were back in town and stopped by to see you.\" She states with a huge grin on her face.\n\nJessica turns and gasps when she realizes that her ex-boyfriend, Sean Durant is standing with her grandmother.\n\n\"Hey, Jess,\" Sean says giving her a cheerful smile. \"It's really great seeing you again.\"\n\nJessica practically leaps up from the table, her eyes blazing with anger. \n\n\"Don't you dare speak to me!\" She snaps at him.\n\n\"Come on Jess, don't be like that.\" He says reaching for her.\n\nShe slaps his hand away and points her finger at him. \n\n\"You don't ever get to touch me again!\" She shouts as she stalks past him.\n\n\"Jessica, what is wrong with you!\" Mrs. Keifer demands to know but Jessica ignores her as she rushes upstairs.\n\n\"You need to leave this house now, Sean!\" Mr. Golden says rising to his feet.\n\nHe places himself between Sean and Jake in the hope that Jake doesn't launch himself at Jess's ex her in his mother-in-law's kitchen.\n\nFrom behind Sean, a thump is heard as Sarah drops her book to the floor.\n\n\"You! I hate you!\" Sarah shouts as she rushes towards Sean with her hands clenched into tight fists. \"You made my sister cry!\"\n\nJake quickly steps around Mr. Golden as Sarah connects her first punch to Sean's upper thigh. Sean steps back and reaches down to push her away but Jake scoops her up into his arms before Sean can touch her.\n\n\"Don't even think about touching her either,\" Jake growls at Sean as he picks Sarah up and pulls her away.\n\n\"Jake'll kick your butt you big mean, poopy head!\" Sarah yells back over Jake's shoulder as he carries her up to find Jessica.\n\n\"What is going on here?\" Mrs. Keifer asks confused at the explosion of activity Sean's arrival has set in motion.\n\n\"Leave now, Sean.\" Dr. Golden demands. \"You will not be asked again.\"\n\n\"Dr. Golden, please, I don't know what's going on here but I didn't do...\" Sean begins to say but she cuts him off.\n\n\"Jessica told us exactly what you did you bastard! She told us all of it!\" Dr. Golden raises her voice. \"Now get the hell out of this house!\"\n\n\"I believe that you are familiar with where the door is.\" Mr. Golden states taking a step towards him.\n\nSean wisely backs away from the angry pair of parents that once respected him and retreats from the house leaving a very confused Mrs. Keifer standing there with her mouth agape.\n\n****\n\n\"Would you kindly explain to me what just happened?\" Mrs. Keifer asks her daughter and son-in-law. \"Sean is an invited guest at this house and the behavior that happened just now was unacceptable.\"\n\n\"You invited him here?\" Dr. Golden asks. \"I thought you said that he just popped in? What are you playing at, mother?\"\n\n\"I just thought he would like to see Jessica since she was back in town. I knew that she would want to see him despite her current... fling with this Jake boy. I called his parents the other day to invite him...\" Mrs. Keifer starts to explain but is cut off by her daughter.\n\n\"You were never going to give Jake a chance were you, mother?\" Dr. Golden asks. \"You thought that you knew what was best for Jessica and to hell with how she felt about it, right?\"\n\n\"Valerie, don't you take that tone with me!\" Mrs. Keifer warns.\n\n\"Val, she doesn't know what he did to Jess,\" Tim says as diplomatically as he can muster. \"I think that we need to have a family meeting and let Jessica tell her exactly what that little shit did to her.\"\n\nDr. Golden lets out a deep breath and shakes her head.\n\n\"I'm going to go upstairs and check on the kids. If Jessica is up to it, I'll let her tell you exactly why Sean is lucky to have walked out of this house without my foot up his ass,\" she tells her mother as she heads upstairs.\n\nShe pauses just outside the door to the girl's room when she hears Jessica talking to Jake and Sarah.\n\n\"I never thought that I would have to deal with him ever again,\" Jessica says. \"It was over and done with him but what happens now, Jake? Is he going to start holding me back from you again?\"\n\n\"I honestly don't know, Jess,\" Jake tells her. \"If he does then we just start over getting you over him again.\"\n\n\"You say that like it was easy.\" Jessica answers.\n\n\"We can do it, sissy.\" Sarah chimes in confidently.\n\nDr. Golden smiles at her eldest daughter's laughter at her precocious little sister.\n\n\"I believe that you alone can do it, Sar-bear,\" Jessica states hugging Sarah close to her.\n\n\"Jake'll help. He was okay with it last time.\" Sarah allows with a giggle.\n\nThe teens laugh as Dr. Golden gives a single knock before opening the door.\n\n\"I was worried about you, Jess, but it seems like that was unwarranted with your little support system here.\" Dr. Golden states with a smile.\n\n\"They are two of the best, Mom.\" Jessica smiles then gets to her feet and hugs her. \"You are too.\"\n\nDr. Golden hugs her tall daughter to her and pats her back lovingly. \"Your Grammy is a bit confused as to what just happened. Dad and I thought that, if you were feeling up to it that is, you'd want to be the one to fill her in.\" She says.\n\nJessica looks back at Jake who nods his head and after a moment of looking at him she smiles and nods as well.\n\n\"I can do that,\" she answers her mother.\n\n\"And Sarah and I will go out and check out that filter that Staci and Ray got for her telescope. Right, Sar-bear?\" Jake asks.\n\n\"I get to look at the sun?\" Sarah asks excitedly.\n\n\"After I check it first,\" Jake answers her.\n\nSarah bounds up from the bed and races towards the doorway shouting as she goes. \"Grammy, I'm gonna look at the sun!\"\n\n****\n\nJessica, her parents, and Grammy sit in the living room after Jake takes Sarah out into the backyard to\n\nlook through her telescope.\n\n\"I cannot believe just how much Sarah has changed since you've moved.\" Grammy remarks after watching Sarah try and run outside then Jake stops her and helps her put on her coat and hat without protest. \"She wouldn't let Se... any other boy help her do anything.\"\n\n\"Jake made a great first impression on her, Grammy,\" Jessica says smiling at the memory of Jake in the floor, shaking his leg like an idiot but delighting Sarah to no end.\n\n\"He made that impression on all of us. Climbing down onto the floor to make Sarah laugh no matter if it made him look silly. He made serious brownie points with me off that.\" Dr. Golden shares.\n\n\"It was his car that won me over.\" Mr. Golden jokes.\n\n\"Daddy!\" Jessica snaps then giggles. \"Jake has a classic Mustang that daddy drools over, Grammy.\"\n\n\"It's a sixty-nine that he, his dad and grandpa rebuilt. It's a beautiful ride.\" Mr. Golden enthuses. \"But yes, Jake's first impression on me was an excellent one.\"\n\n\"Grammy, some of what I have to tell you about Sean isn't going to be pleasant for you to hear but you need to know all of it to understand. Okay?\" Jessica redirects the conversation.\n\n\"Sweetie, if you don't want to talk about this with me it's fine,\" Grammy tells her but Jessica shakes her head.\n\n\"I really don't want to but you need to know like mom, dad, Jake, and all my friends know,\" Jessica tells her and she nods her acceptance. \"As you know Sean was my first at pretty much everything and yes, that includes sex.\"\n\n\"Jessica!\" Grammy exclaims.\n\n\"Mom, shush and let Jessica get through this.\" Dr. Golden tells her.\n\nJessica nods her thanks and continues. \"He was my first and it was not great.\" She pauses. \"I had heard that most first times aren't good but that it would get better.\"\n\n\"And did it?\" Grammy asks.\n\nJessica shakes her head. \"With him, I never got the chance to find out. He went around school blabbing to everyone about what happened and how if any of his friends wanted a shot at me, he'd tell me to do them and I would. Before you ask if that was just a rumor, it's not. I heard those words come out of his mouth myself.\"\n\nGrammy sits back in her chair and shakes her head. \"That little fucker!\" She exclaims.\n\n\"Mom!\" Dr. Golden shouts.\n\n\"Grammy!\" Jessica giggles while Mr. Golden shakes his head in disbelief.\n\n\"What?\" Grammy asks. \"I'm not wrong, am I?\"\n\n\"No, I've just never heard you curse before.\" Dr. Golden states.\n\n\"Never had much reason to until now.\" She answers. \"Just wait till I tell his parents about how that little shit acted. I'll kick his little behind if he ever so much as walks along the sidewalk in front of my house again!\"\n\n****\n\n\"How's it looking, Sarah?\" Jake asks as he kneels beside her and the telescope. He had set up the sun filter and checked it to make sure that she would be safe to have a look.\n\n\"Neat!\" Sarah answers. \"It's all purple and weird looking. I love it!\"\n\n\"Remember to thank Staci and Ray for getting the filter for you when you see them.\" He tells her.\n\n\"I will.\" She answers then looks away from the eyepiece after a moment. \"Jake, why aren't you a part of the 'dult conversion?\"\n\nJake chuckles and shakes his head. \"I'm not a part of the adult conversation because I'm watching out for you, Sar-bear.\" He answers.\n\nSarah nods at that then looks back into the eyepiece. \"I wish that you would have punched Sean in his stupid face,\" she says after a moment.\n\n\"Between you and me, I kind of wish I had too, Sarah, but you beat me to it,\" Jake tells her.\n\n\"But you stopped me.\" She says.\n\n\"Jess needed us, didn't she?\" He asks.\n\nSarah nods then turns and hugs Jake. \"She did and you take care of us, Jake.\"\n\n\"I try.\" Jake answers.\n\n\"You do.\" Sarah insists then pulls him to the telescope. \"Now you look at the sun and explain what all I'm seeing.\"\n\n\"P word?\" He asks with a sly grin.\n\n\"Peanut!\" Sarah shouts then giggles.\n\n\"Sounds like I missed the joke,\" Jessica comments from the back porch.\n\n\"Jess! Come look at the sun! It's all purple!\" Sarah shouts excitedly.\n\nJessica nods and jogs down the steps to join the pair.\n\n\"Everything all right?\" Jake asks when she reaches them.\n\n\"They're better,\" Jessica answers hesitantly. \"Grammy will need a little while to get used to certain things.\"\n\n\"I got used to Sean being a poopy head real quick,\" Sarah announces.\n\n\"Yes you did, didn't you?\" Jessica teasingly asks.\n\n\"Uh huh,\" Sarah answers.\n\n\"That's good,\" Jessica says as she kisses the top of Sarah's head. \"Now stop hogging the telescope and let your favorite sister see this purple sun!\"\n\n\"You're my only sister, silly!\" Sarah laughs.\n\n\"Still your favorite though.\" Jessica laughs.\n\nAt the window, Mrs. Keifer watches them with a smile.\n\n****\n\n\"Jess, it's about that time.\" Dr. Golden states as she walks into her mother's living room a couple of hours later. Jake is seated on the couch, tenderly rubbing Jessica's shoulders while she has Sarah on her lap and is reading to her from her book.\n\n\"Already?\" Jessica asks as she glances at the clock on the wall.\n\n\"Afraid so.\" Dr. Golden answers. \"You've got a late lunch with the team before going on to the gym for practice before tonight's game.\"\n\n\"Jake can do more rubbing on you tonight after you win your match,\" Grammy tells her with a grin.\n\n\"Grammy!\" Jessica exclaims then turns to Jake and gives him a quick kiss. \"I'll need it for sure.\"\n\n\"Then you'll get it.\" He smiles at her.\n\nShe gets a sly grin on her pretty face and leans close to him. \"You just might be the one that gets it, Jake.\" She whispers before stealing a quick kiss. \"You know what winning does to me.\"\n\n\"I do.\" He laughs to hide the blush creeping onto his face.\n\n\"Jake, are you riding with us?\" Dr. Golden asks.\n\n\"I am!\" Sarah announces hopping to her feet.\n\n\"I know you are, Sarah. I was asking Jake.\" Dr. Golden tells her.\n\n\"I think I'm going to hang around here. Maybe go for a jog to that park I saw on our way here.\" He answers. \"Even if I'm not going to get to play in the game Friday night, I need to keep loose.\"\n\n\"You're not playing?\" Grammy asks him.\n\n\"No, ma'am.\" Jake answers.\n\n\"His coach told him that if he missed practice this week, he wouldn't play,\" Jessica explains. \"He came to support me anyway.\"\n\n\"I wasn't likely to play anyway.\" Jake humbly answers. \"I'm just the backup.\"\n\n\"The back up that won the homecoming game and the last game of the season for them,\" Jessica says then turns to her Grammy. \"He should be starting, Grammy, but...\"\n\n\"But that's a discussion for another time, Jess.\" Jake breaks in. \"You've got to get on the road.\"\n\n\"Fine but we'll continue this discussion later tonight,\" Jessica tells them.\n\n\"That sounds like a fine discussion to have over your celebration dinner.\" Grammy states with a grin.\n\nEveryone walks Jessica out to the SUV and she hugs them each in turn, save for Jake who gets a tender but abbreviated kiss.\n\n\"See you at the game.\" He says as they part.\n\n\"On the bench and waiting for me with those hands of yours.\" She tells him as he opens the car door for her.\n\n\"You got it.\" He answers.\n\nThe trio consisting of Jake, Mr. Golden and Grammy all wave as the SUV pulls away before heading back into the house. Jake excuses himself to head to his room and change for his run when he gets inside. Mr. Golden nods and goes back to his laptop to look over some new designs for the marina on Belews Lake while Grammy goes back to reading her novel.\n\n\"Ma'am, about how far is the park?\" Jake asks as he returns in his black track pants and Wildcat sweatshirt.\n\n\"Just a bit under three miles from here, Jake.\" She answers him. \"I walk it twice daily to keep my girlish figure intact.\"\n\n\"It's certainly working.\" Jake compliments her.\n\n\"You are the sweet young man that they have been telling me about all these months, Jake.\" She smiles at him. \"I'm sorry about not giving you that much of a chance when you first got here.\"",
        "\"That's perfectly understandable, ma'am.\" He nods. \"You just want the best for Jess.\"\n\n\"I do and it looks to me like she went out and found that for herself.\" She answers. \"Jake, can I ask you for a favor?\"\n\n\"Absolutely, ma'am.\" He answers.\n\n\"Can you start calling me Grammy instead of ma'am or Mrs. Keifer? I'd really appreciate that.\" She tells him.\n\nHe nods and smiles. \"I think I can manage that, Grammy.\"\n\n****\n\n\"I don't see what the big deal is. I thought you were done with Jessica. What were you doing going over to see her anyway?\" Christian Halloway asks Sean as he and their other friend Donny Ramsey are hanging out in Sean's room.\n\n\"The big deal is that I nearly forgot how perfect that ass of hers is. Seeing it yesterday got me thinking that it might be nice to revisit Jess and see if those country boys she's bound to be fucking have taught anything special.\" Sean answers.\n\n\"Dude, you tell us that Madison sucks dick like she was born to do it but here we are talking about the girl you started calling Fish. Perfect ass or not, I'd take the girl that sucks me like a vacuum over the one that gags on just the head of my dick.\" Donny laughs. \"Plus, they kicked you the fuck out of their house so you ain't revisiting shit.\"\n\n\"Fuck you, Donny.\" Sean retorts.\n\n\"Nah, I'm saving that for Madison when she's done with your tiny little dick.\" Donny snipes.\n\n\"Tiny, my ass. It choked Jessica did it not?\" Sean asks.\n\n\"We only have your word that's what happened.\" Donny answers. \"For all, we know she laughed at you when you dropped your tighty whities and you made up the rest.\"\n\n\"Guys, what's that school Jessica goes to again?\" Christian asks as he stares out the window.\n\n\"How the fuck should I know?\" Sean asks. \"They didn't print the name of the school across the ass of her volleyball shorts and that's all I was looking at.\"\n\n\"Carver or Carter, maybe.\" Donny answers. \"They had some kind of cat mascot. It was on all of the shirts they wore yesterday.\"\n\n\"Blue and orange, right?\" Christian asks.\n\n\"Are you writing a fucking paper on it or something?\" Sean asks. \"Who\n\ncares?\"\n\n\"You for one might because a guy in a blue sweatshirt with the word Wildcats on it just jogged by your house.\" Christian answers as he points out the window.\n\nSean steps over and watches as the brown-haired figure jogs to the corner before turning towards the park.\n\n\"That's the guy that was at Jessica's house!\" Sean exclaims. \"He stared me down and pulled Sarah away after she punched me.\"\n\nDonny snickers. \"You got punched by a first grader.\"\n\n\"Sarah never did like me,\" Sean states as he gets to his feet and heads for his door. \"Come on, it looks like he's headed for the park.\"\n\n\"So?\" Donny asks.\n\n\"So, get your ass into my car.\" Sean states. \"We are going to go and have ourselves a little chat with Jess's new guy.\"\n\n****\n\nAs Jake nears the park he thinks he hears something over the sounds of Fire Woman by The Cult playing through his earbuds but he sees nothing as he looks so he continues jogging on. Up ahead of him a BMW M6 pulls to the curb and parks. He barely glances at it as he passes it and enters the park. Behind him, Sean, Christian, and Donny get out of Sean's car and fall in behind him.\n\n\"He's fucking ignoring us.\" Christian comments as the trio walk along.\n\n\"He's wearing earbuds, moron.\" Sean points out. \"He'll turn around soon enough so spread out a bit.\"\n\nHis buddies do as they're asked and keep walking towards Jake who reaches the center area of the park where the playground is located. He nods politely at a few of the mother's seated on a nearby bench watching their young kids playing. As he turns to jog back he sees Sean standing in the middle of the sidewalk just a few feet away with a smile on his face.\n\nJake pulls his earbuds out and stops in his tracks.\n\n\"I see that you remember me.\" Sean states. \"Sorry, I didn't get a chance to catch your name before you ran off earlier.\"\n\n\"Jake.\" He answers glancing from Sean to each of his buddies then back to him. He notices how they are spread out to prevent him from getting by them. One has his fists clenched and in his mind, Jake hears his father's voice telling him not to throw a punch with his throwing hand.\n\n\"Hey, Jake.\" Sean states. \"So how is Jess doing? The last couple of times I saw her, she wasn't very happy. Well, the time before those she was very happy and very naked but times change. Tell me, does she still lay there like a dead fish when you and her fuck? You have fucked her sweet little ass by now, right?\"\n\nJake hears the sharp intake of breath from one of the mother's who overheard Sean and shakes his head.\n\n\"Not here,\" Jake tells him.\n\n\"Not here? Did you just say not here?\" Sean asks with a chuckle.\n\nJake glances over at the kids in the playground and the mother's nearby and nods.\n\n\"These kids and their moms don't need to hear you run off at the mouth.\" He tells him.\n\n\"Really?\" Sean shrugs then nods his head. \"Fine by me. You show me where then, Jake, because I have a lot to say to you.\"\n\nSean steps aside gestures back the way they had just come.\n\nJake starts to walk past him when Sean starts talking again.\n\n\"You know what, Jake? On second thought I think here works just fine for me.\" He states as Jake is a step past him.\n\nSean throws a punch that Jake sees at the last second. His fist connects solidly with Jake's cheek opening up a cut with his class ring. Jake rolls as best he can with the punch and swings his elbow in the direction of Sean's head. Luck is with him in more ways than one. First, being a lacrosse player, Sean's upper body strength is optimum but his punch was a glancing one instead of full on. The second stroke of luck is Jake's thrown elbow manages to strike Sean's nose with a loud smack.\n\n\"Get him!\" Sean shouts before grabbing his now bleeding nose.\n\nDonny goes to grab one of Jake's arms while Christian takes another tact. He throws a wild haymaker that clips Jake's jaw. The punch barely connects but it's enough to stagger Jake for a brief moment allowing Donny to get a firmer grip on his arm.\n\n\"Grab him, dumbass!\" Donny shouts at Christian while he struggles to hold onto Jake.\n\nChristian nods and jumps towards Jake's free arm and utilizes his wrestling experience to grab it in an armbar. Sean let's go of his dripping nose and throws a punch into Jake's stomach causing him to double over.\n\n\"How do you like that, fucker? You're just a pathetic fuck just like that bitch Jess.\" He taunts Jake as he punches him in the stomach again. \"She thought I was going to be all loving with her but I fucked that tall bitch like the whore that she is.\"\n\nDespite having his breakfast nearly hurled from his stomach, Jake jerks his head up with a murderous glare in his eyes but with Christian and Donny holding him, he can't break free.\n\n\"Hey! Hey stop!\" someone cries out from behind the fight. Sean cocks his fist back for another punch, this time into Jake's glaring face but drops his hands once he looks up for the source of the shouts.\n\nA pair of police officers is running towards the fighting teens having been alerted by the mother's that were there.\n\n\"He started it!\" Sean immediately states pointing at Jake.\n\nChristian and Donny let Jake's arms go as the cops reach them and begin to separate the teens. With his arms free and Sean's words still ringing in his ears, Jake raises his fist to throw his own punch but the officers arrive before he throws it.\n\n\"Don't do it, kid. I see you hit him and you go to jail so think about it.\" One officer tells him and a reluctant Jake drops his arms to his side. \"Smart move.\"\n\n\"Okay, now which one of you wants to tell us what is going on here?\" One of the officers asks Sean and his pals.\n\n\"We were here minding our business when this guy came up to us and punched Sean here in the face. Like, totally out of nowhere.\" Christian states.\n\n\"He's dating my ex,\" Sean adds as he's back to holding his nose. \"I think that's probably why.\"\n\n\"You didn't provoke him or anything? He just walked up to you and threw a punch. That's your story?\" The officer with them asks.\n\n\"Our story.\" Donny jumps in with a smirk at Jake who is with the other officer. \"That guy is nuts. We were just protecting our friend because this guy lost it.\"\n\n****\n\nThe route back to Grammy's house takes Dr. Golden and Sarah by the park. As they are driving by, Dr. Golden notices Jake seated on a bench talking to a police officer and holding something to his face.\n\n\"Mama, that's Jake!\" Sarah shouts and points towards him.\n\n\"I see him, honey.\" Dr. Golden acknowledges as she pulls over to the curb and stops the SUV.\n\nShe gets out and helps Sarah down then the two hurry over to where Jake is seated.\n\n\"So your story is that the one in the middle there threw the first punch, right?\" The officer is asking Jake as they reach them.\n\n\"Yes, sir.\" Jake nods while holding a blood-soaked tissue to his cheek.\n\n\"You want to rethink that because I will be talking to those witnesses over there and if you're lying to me...\" the officer begins to say when Sarah jumps in.\n\n\"Jake's not lying!\" She shouts tearing loose from her mother's hand and jumping onto Jake's lap. \"He doesn't lie!\"\n\nThe officer looks befuddled until Dr. Golden steps up.\n\n\"I'm sorry, officer. My daughter's a little exuberant when it comes to defending Jake.\" Dr. Golden tells him.\n\n\"He's your son?\" The officer asks.\n\n\"My daughter's boyfriend. He's staying with us just a few blocks away.\" She explains then kneels to get a better look at Jake's face. \"Move that away from your face and let me have a look, Jake.\"\n\n\"It's fine, Dr. Golden.\" He tells her.\n\n\"I'm the doctor here so I determine what's fine and what isn't. Got it?\" She asks him.\n\n\"Yes, ma'am.\" He answers and pulls the tissue that a witness provided for him away from his cheek.\n\n\"What happened here?\" She asks the officer.\n\n\"Those kids say that this one here jumped them when they were walking through the park.\" He says jerking his thumb towards the trio of teens that are talking with the other officer. \"He got cut open pretty good by one of them.\"\n\nDr. Golden looks at the trio and her eyes fall on Sean who is looking as smug as he can manage while holding a bloody tissue to his busted nose.\n\n\"At least you got the one that started this back.\" She tells Jake then looks at the officer. \"The one in the middle started all of this. His name is Sean Durant and he used to date my daughter. It didn't end well.\"\n\nThe officer looks back at Sean then to Jake. \"And this one is currently dating your daughter then? Thought you'd get your girl a little revenge on her ex, is that it? Explains the bloodlust in your eyes when we ran up.\" He tells Jake.\n\n\"That isn't what happened.\" One of the mothers from the group of witnesses to the incident tells the officer as she steps over to him.\n\n\"Ma'am?\" He asks.\n\n\"The one standing in the middle over there confronted this young man as he was leaving the park. Some words were exchanged and he said something quite vulgar. Insinuating things that were... well, I'll just say not for young ears. We both heard him when this young man suggested they go somewhere else and when he started to pass them, that one punched him when he wasn't looking.\" The woman states.\n\n\"He managed to get the vulgar one with an elbow before his friends jumped in and he was punched again by the lanky one.\" Her friend adds as she steps over. \"Then those two grabbed his arms and the other one punched him in the stomach a couple of times just as you two arrived.\"\n\nSarah balls up her little fists and tries to get off Jake's lap but he stops her.\n\n\"Sarah, no fighting. Remember?\" Jake asks her.\n\n\"He hurt my sister and now he's hurt you too!\" Sarah argues with a stern look on her face. \"I hope you broke his stupid nose.\"\n\nShe pauses and looks over at Sean then yells. \"I hope Jake broke your stupid nose you poopy head!\"\n\n\"Sarah, calm down and stop wiggling around so I can help Jake.\" Dr. Golden tells her.\n\nSarah nods and sits back on Jake's lap while Dr. Golden examines the gash on his cheek.\n\n\"I can call in an ambulance if he needs one, Doctor.\" The officer tells her.\n\n\"I don't think we need to go that far. I'll get him back to my mother's house and get him fixed up, provided we're good to go now that you've heard from these helpful ladies?\" Dr. Golden asks the officer.\n\n\"I'll need to see your ID before I can release him into your custody but after that, he's free to go. I'm writing this up as a simple altercation that was broken up with no arrests unless you want to press any charges against those three that is.\" He tells them.\n\nJake shakes his head. \"I just want to go with Dr. Golden and Sarah here, sir.\" He answers.\n\nThe officer nods and calls out to his partner. \"This one's free to go. I've got multiple witnesses that confirm his story of being jumped by these three. He's declining to press charges and his guardian, pardon, his two guardians here are going to take him home and get him cleaned up.\"\n\n\"Hey, what if I want to press charges?\" Sean asks.\n\n\"He started this and nearly broke my nose.\"\n\n\"I just said that I've got multiple witness statements that tell me you started the whole thing and sucker punched him. If you push this, I slap cuffs on you for obstruction and assault or you can shut your mouth. I have half a mind to look the other way and let him throw that punch he was about to hit you with before we showed up. So shut up.\" Jake's officer tells him.\n\nAs Dr. Golden, Jake and Sarah are walking back to her car they are approached by the pair of mother's and their children.\n\n\"Excuse me, young man?\" the one that spoke up to the officer calls out.\n\n\"Yes, ma'am?\" Jake responds.\n\n\"I just wanted to thank you for trying to get those others boys, especially the foul-mouthed one, away from our kids. I saw you glance at them when he said what he said.\" She shares. \"It was very considerate of you to try and keep them away from all of that.\"\n\n\"I didn't do that great of a job.\" Jake comments.\n\n\"You made the effort though and as the saying goes, no good deed goes unpunished.\" The other mother quotes then turns to Dr. Golden. \"You should be very proud of this young man for what he did here today.\"\n\n\"Oh I, I mean we, are.\" Dr. Golden assures her. \"Right, Sarah?\"\n\n\"I love my Jake!\" Sarah announces causing the women to laugh.\n\n\"You are adorable.\" The first woman tells her. \"We just wanted to thank you and make sure that you all knew what he tried to do for the sake of our kids. He showed a lot of character.\"\n\n\"That he did.\" Dr. Golden agrees. \"My eldest will be very pleased with him once I tell her about this.\"\n\n\"I'm not so sure of that,\" Jake admits.\n\nThe first woman pats his arm. \"Oh honey, she will be thrilled when her mom tells her what happened. Don't you worry about a thing.\"\n\n****\n\n\"Mom!\" Dr. Golden calls out as they walk into the house with Sarah playing nurse by holding the napkin to Jake's boo-boo, as she calls it. \"Mom, is your first aid kit still in the downstairs bathroom?\"\n\n\"It is.\" Mrs. Keifer answers from the living room. \"What happened?\"\n\n\"It's Jake.\" Dr. Golden answers while steering Jake towards the bathroom.\n\n\"Jake? I thought he was on his run?\" She asks meeting them in the hallway. \"What happened, Jake?\"\n\n\"Sean hit him!\" Sarah answers before Jake can.\n\n\"Sean did what?\" Mr. Golden asks as he joins them.\n\n\"There was a fight.\" Dr. Golden says. \"Let me take care of this cut on Jake's face then we'll talk about it.\"\n\nShe takes Jake into the bathroom and has him sit on the toilet. Mr. Golden moves Sarah out of his wife's way as Mrs. Keifer pulls the first aid kit from the linen closet and places it on the sink.\n\n\"What do you need?\" She asks opening it up.\n\nDr. Golden examines the wound then asks for a wet cloth. Mrs. Keifer wets a washcloth and hands it to her. She cleans the wound, carefully looks it over then asks for some butterfly closure bandages.\n\n\"These will work better than stitches, Jake.\" She tells him as she applies them. \"It's not that deep of a gash.\"\n\n\"Thank you, ma'am, and I'm sorry about all this.\" He apologizes.\n\n\"I don't know what happened, Jake, but I'm sure that whatever it was, you aren't to blame.\" Mr. Golden tells him.\n\n\"Now's a good time as any to tell Mom and Tim what happened, Jake.\" Dr. Golden states.\n\nJake explains what happened, leaving out the exact words that Sean used, while Dr. Golden closes his cut and checks the bruise that is forming on his jaw.\n\n\"I'm worried that punch you took to your jaw might swell. Let's get some ice on it.\" She tells him. \"How's the stomach?\"\n\n\"Sore but I'll survive.\" He answers.\n\nShe nods then pulls him into her arms and hugs him.\n\n\"That's for what you did for Jess.\" She tells him.\n\n\"I'll probably need another one of those once Jess sees all this.\" Jake chuckles. \"She's gonna kill me.\"\n\n\"If she tries to kill you with anything but kindness, you just send her to me, Jake.\" Mrs. Keifer says patting his hand. \"I will set her straight.\"\n\n****\n\nJessica stretches out her lithe body as warm-ups continue. She has, for the most part, tuned out the chatter of her former teammates but she has heard the word  fish  being thrown about a lot. The Paladins are in their home white jerseys with red shorts. The Wildcats are in their blue away jerseys with orange shorts.\n\n\"Are you doing all right, Jess?\" Caitlyn asks from beside her.\n\n\"I'm good.\" Jessica answers. \"I'm just ready to get this match started.\"\n\n\"Same here,\" Caitlyn says. \"I want to spike one right into that Madison bitch's face.\"\n\n\"Same here.\" Jessica echoes with a giggle as Coach Morrison waves them all over to the bench.\n\n\"That was a great practice, team.\" She tells them as they huddle around. \"Jess, thanks for not wearing out your hand on spikes like yesterday. We're going to need you fresh and I'm glad you kept that in mind.\"\n\n\"Jake rubbed me down before the team lunch so I am good to go.\" Jessica shares with a grin.\n\n\"Where is Jake?\" Tabitha asks looking around.\n\n\"Is your back aching for those hands of his, Tabby?\" Tonya teases her sister.\n\nTabitha blushes red while shaking her head. \"It's not that!\"\n\n\"It's partially that.\" Tonya giggles.\n\n\"Tonya, I need your sister loose and ready to play so let's curb the teasing for now.\" Coach Morrison tells her.\n\n\"Thanks, Coach,\" Tabitha says then sticks her tongue out at her sister.\n\nTonya mimics the gesture and the rest of the team laugh.\n\n\"Jake should be here any minute now, Tabby.\" Jessica answers and looks towards the doors of the gymnasium.\n\nThe students from Carter are filing in at the moment. Staci and the rest of the cheerleaders enter waving their pom-poms and cheering loudly. Jessica and the rest of the team smile at the exuberance of their fellow students as Coach Morrison draws them back to go over her game plan.\n\n****\n\n\"Nervous, Jake?\" Dr. Golden asks as the family exit the car.\n\n\"Yeah, Jess is not going to be happy with this.\" He answers pointing to the bandages on his cheek and the bruise on his jaw. \"This is the most important game of the year and I don't want to be a distraction.\"\n\n\"You'd be more of a distraction if you didn't show.\" Mr. Golden tells him. \"Now, come on and take your medicine.\"\n\n\"I think that should be my line, dear. I am the doctor after all.\" Dr. Golden laughs as they head into the gymnasium \n\nJake enters behind Jess's family to try and hide behind them as best he can.\n\n\"They'll all notice before too long, Jake. You might want to head to the bench and tell Jess first. She should be the first to hear about it, don't you think?\" Mr. Golden asks.\n\n\"We'll explain it to your friends and your parents when they get here.\" Dr. Golden assures him.\n\n\"Yes, I do and thank you both.\" Jake answers and heads for the bench area as the rest of the family go to their seats.",
        "Jessica's back is towards Jake as he approaches but Tabitha looks up and sees him.\n\n\"Jake, what happened to you?\" She asks concerned.\n\nJessica spins quickly and looks at him.\n\n\"Jake, what happened? Are you okay?\" Jessica asks running her hands carefully over his cheek with a look of great concern on her face.\n\n\"I'm good.\" He answers then notices the doubt on Jessica's face. \"I am. Your mom checked me over and everything.\"\n\n\"I'm noticing a distinct lack of you telling me what happened to you,\" Jessica states as she folds her arms across her chest.\n\n\"Girls, let's give these two a minute to talk.\" Coach Morrison tells the team. \"Game starts in five minutes, okay?\"\n\n\"Yes, ma'am.\" Jake answers.\n\n\"Thanks, coach.\" Jessica answers.\n\nAs the team moves down the bench a little way, Jake and Jessica take a seat on it.\n\n\"Jess, your game is in just a few minutes. I will explain everything afterward, okay?\" He asks.\n\n\"Is there some reason I shouldn't know about whatever it is before the game?\" She counters then takes his hand in hers and looks into his eyes. \"We don't lie to each other, Jake. That's our deal.\"\n\nJake squeezes her hand and gives her a smile. \"I went for a run. To that park in your grandma's neighborhood, you know?\"\n\n\"I'm very familiar.\" Jessica smiles. \"I used to run there all the time, too.\"\n\n\"Well, I kind of ran into someone there,\" Jake says then explains to her all about the fight.\n\nWhen Jake finishes Jessica scans the crowd on the far side of the court until she sees Sean sitting just behind the Paladin's bench, a bandage across his nose.\n\nShe turns and pulls Jake into an embrace. She gives him a brief but passionate kiss that Staci notices immediately.\n\n\"Woo! Go, Jess!\" She shouts out causing Jessica to blush and pull away quickly.\n\nFearfully, she looks up to where her family is seated and is shocked to see her Grammy giving her a thumbs up signal and a smile.\n\n\"I see that you've got yourself Grammy approved.\" Jessica giggles.\n\n\"Yeah, I just had to get punched in the face by your ex to win her over.\" Jake chuckles.\n\n\"I think it was nearly breaking his nose that put you over the top.\" She tells him with a grin. \"Now, I'm going out on the court to get my own little bit of revenge.\"\n\n****\n\n\"Aw, did your little boyfriend get himself a boo-boo there, Fish?\" Madison teases as she lines up across from Jessica on the court. \"You should have warned him how much of a badass Sean is.\"\n\nJessica refuses to rise to the bait and turns her head towards Caitlyn. An unspoken word passes between them and Caitlyn gives her a nod just as the Paladins serve the ball into play. Tonya plays the serve towards the front line where Caitlyn sets it for Jessica. Jessica leaps high and brings down the hammer with her spike. Madison tries to make a save but the ball is traveling too fast and hard. When she gets her hand under it, it sails out of bounds for the Wildcats first point.\n\n\"That's one, Madison,\" Jessica says as they line up for the Wildcats serve.\n\n\"The last one that you'll get, Fish.\" Madison counters.\n\nTonya serves the ball and the Paladins play it towards Madison who leaps up for a spike. Jessica blocks it back onto their side of the net. \n\nCassandra makes a diving save that Madison sets for another Paladin player to try her luck at a kill. Kenyetta challenges the spike but it slips past her outstretched hands. Tabitha bumps the ball up and Jessica sets for Caitlyn who makes the kill past a scrambling Paladin defense.\n\n\"That was a nice save, Cass,\" Jessica calls out to her former teammate.\n\n\"Yeah, great save.\" Caitlyn agrees giving the opposing player a thumbs up.\n\n\"Great save, better kill,\" Cassandra answers with a smile.\n\n\"Shut up, Cass.\" Madison snarls. \"Get over here and get your head in the game.\"\n\nThe rest of the first game of the set continues to go the Wildcats way stunning the normally dominant Paladin team. Their coach calls a timeout when the Wildcats lead closes in on double digits.\n\n\"You all are playing great out there!\" Coach Morrison enthuses during the huddle. \"Keep the pressure on them to make plays on us and keep playing our game. You've got them rocked back on their heels right now, so don't let up!\"\n\n\"We've got this, you guys!\" Jessica says putting her hand out. The rest of the team, Coach Morrison and Jake put their hands in.\n\n\"Go Wildcats!\" They all shout as the timeout ends.\n\nThe Paladins come out fired up after the timeout and show why they are the number one team in the state. They pick up their speed, their spikes are more aggressive and when they start winning points their serves come hard and fast.\n\nThe Wildcat players are sent scrambling all over the court to try and survive the onslaught. The Paladins ring up point after point until their deficit is cut to two points.\n\n\"They aren't better than us!\" Jessica tells her teammates during a quick huddle. \"Keep your heads up. This is our night!\"\n\nThe Paladins serve, Tabitha plays the ball towards the front court.\n\n\"Set!\" Tonya shouts as she bumps the ball up.\n\nJessica leaps up and as she begins to spike the ball her body is jostled by Madison's as she leaps to block. The contact knocks Jessica's shot off the mark and it lands out of bounds cutting the Wildcat lead to one.\n\n\"My player was bumped!\" Coach Morrison shouts at the referee.\n\n\"The contact was incidental. The point stands.\"The ref tells her then turns to Madison. \"Watch the contact.\"\n\n\"The point stands, Fish.\" Madison taunts Jessica quietly as the pair stand at the net. \"Unlike your boyfriend this afternoon. I heard he went to his knees faster than you do.\"\n\nJessica says nothing and fights the urge to punch the smug smile off Madison's face. Instead, she turns and looks at where Jake sits on the bench. Their eyes lock for a moment until he nods at her and Jessica knows the meaning behind it and nods back.\n\n\"Yeah, Jake, I got this.\" She thinks as she turns back to get ready for the serve.\n\n****\n\n\"What in the heck was that?\" Ray asks as he and the rest of the Wildcat students are on their feet in protest.\n\n\"They're calling the contact incidental.\" Mr. Golden explains.\n\n\"Incidental?\" Mr. Gibson asks. \"She body checked, Jessica!\"\n\n\"I smell some home cooking for Jess's old team. You get'em, Wildcat!\" Antoine calls out.\n\nThe cheer team picks up the shout and runs with it trying to bring the team back into the game.\n\n\"Ray, how did you guys get out of practice tonight?\" Mr. Gibson asks. \"I know that Jake is benched but that means you and Tank are needed even more!\"\n\n\"We uh, sort of lied, Mr. Gibson,\" Ray admits.\n\n\"Yes sir, we told Yates that we were going out of town for the holiday and in a way it wasn't a total lie.\" Antoine picks up.\n\n\"Jess has been there for us all year and there was no way that we weren't going to show up to support her tonight. Yates can't bench all of us.\" Ray laughs.\n\n\"He can if he wants to lose.\" Antoine notes then smiles. \"And we all know that ain't happening.\"\n\n\"What happened to Jake?\" Ray asks after noticing the four butterfly strips on his face.\n\n\"He got into a fight,\" Sarah announces proudly. \"He broke Sean's stupid nose.\"\n\n\"Nice!\" Ray comments.\n\n\"He did?\" Staci asks Sarah as her face breaks into a huge grin.\n\nRay shakes his head. \"You're going to kiss him again aren't you? Of course, you are, why am I even asking?\" He laughs.\n\n\"Who is Sean and why are we happy about Jake breaking his nose?\" Antoine asks.\n\n\"He's an ah...\" Staci begins to answer then remembers the little ears beside her and stops.\n\n\"He's Jessica's ex and to state it simply, he did not treat her well.\" Shelly answers for her.\n\n\"Not treat my Wildcat well? Where is this idiot? I got a feeling that I need to break something on him too.\" Antoine comments.\n\n\"You're not breaking anything,\" Twanda tells him. \"You have an important game on Friday and with Jake out, they'll need you.\"\n\n\"Both of you so don't you get any ideas either, Ray,\" Staci comments as she looks back over her shoulder at him.\n\n\"He doesn't have to.\" Sarah comments from her seat beside Staci. She still has her orange and blue tinted hair done up in pigtails by Staci to match her own.\n\n\"Why's that Sar-bear?\" Michelle asks from the other side of Sarah.\n\n\"Jake's taken care of it like always,\" Sarah answers precociously. \"Sean won't bother my sister ever again if he knows what's good for him!\"\n\n****\n\nAfter the incidental contact call, the Paladins take control of the game first tying then pulling ahead of the Wildcats on a flurry of aggressive plays. Madison gives Jessica a few more subtle bumps at the net that go uncalled by the referees. A service ace wins the first game for the Paladins sending a dejected Wildcat squad to the bench. Coach Morrison tries to assure the team that it's just the first game of the set and how they shouldn't let it get to them. Staci, Michelle, and C.C. rally the Wildcat fans to get loud hoping that will pick up the team. Coming into the next game it all seems to have lit a spark into the team as they jump out to a five-point lead over the Paladins.\n\n\"Keep on them! Build on our lead!\" Coach Morrison shouts as Tabitha steps back to serve.\n\nThe Paladins play her serve up to their frontcourt where Madison jumps up and spikes it over Jessica's outstretched hands. Tabitha makes a diving save giving Tonya a chance to set it for a leaping Caitlyn who gets the kill. Tabitha is rubbing her back as she joins the quick team huddle.\n\n\"Are you okay, Tab?\" Tonya asks after noticing.\n\n\"I'm okay.\" She answers but her back up, Ashley Thompson runs onto the court.\n\n\"Coach wants you out, Tabby,\" Ashley announces.\n\nTabitha nods and jogs to the sideline.\n\n\"Coach, I'm okay,\" Tabitha argues as she gets to the bench.\n\n\"I saw you rub your back. Jake saw it too so grab some water, take a seat and rest.\" Coach Morrison tells her. \"This is a five-game set and we'll need you back in there so we treat this now.\"\n\nTabitha nods and accepts a bottle of water from Jake.\n\n\"Thanks, Jake. I need you to get me...\" She begins to say but her words fade into a low moan when Jake begins to rub her lower back.\n\n\"It's here, right?\" Jake asks as Tabitha slumps onto the bench.\n\n\"Uh huh,\" She moans as Jake's strong fingers dig into her tight muscles.\n\nTabitha attempts to keep her eyes on the game and her mouth shut as Jake's hands rub her. She has to bite her lip a few times, especially when his fingertips rest on her butt while he presses the heel of his hand into the small of her back.\n\n\"Jesus, Jake, where did you learn all of this?\" She moans out her question as he makes a circular motion with his palm.\n\n\"Jess.\" He answers. \"This is one of her favorite things for me to do on her. She says it works wonders for her back and her thighs too.\"\n\n\"Among other things I'm sure.\" Tabitha giggles.\n\nJake smiles and nods. \"There are a few other uses for this particular technique too, sure.\"\n\n\"Lucky, lucky Jess.\" Tabitha comments then relaxes as she watches the play on the court.\n\nWith the Wildcats other All-State player on the bench, the Paladins try to target Ashley with as many shots as they can manage. She makes some great plays but the constant hammering starts to wear on her. The Paladins smell blood in the water and swoop in to score point after point until they take the lead from the Wildcats.\n\n\"Back her up!\" Tabitha shouts as Ashley dives for another shot that is sent her way.\n\nAshley manages to knock the ball up just enough for Tonya to make a play on it but when her bump sails too long and is smacked down for a point by Madison.\n\n\"Tab, how's your back?\" Coach Morrison asks as the Paladins get ready to serve.\n\n\"I'm good to go, Coach.\" Tabitha answers.\n\nCoach Morrison nods. \"Next point, you're in. Jake, get those hands of yours ready for Ashley. She's going to need them.\"\n\nTabitha retakes the court but her return can't stem the rolling tide of the Paladins who breeze to a win of the second game putting them one win away from the state championship.\n\n****\n\nSensing their victory is near the Paladins revert to their old intimidation tactics at the start of the third and possibly deciding game. Every serve of theirs resounds like thunder through the gymnasium. Each shot over the net sends the Wildcat players scrambling to make a play on the ball but they do make those plays. Madison and the others seem to target Jessica with every hard shot but she manages to make play after play. Emboldened by Jessica's refusal to roll over and give up under the constant barrage of shots and her impassioned talks about how they were still in this between points the Wildcats endure the opening salvo from the Paladins. The Wildcat serves come like precision strikes, slicing through the vaunted Paladin defense. Their shots over the net strike the floor like lightning bolts from the blue scattering the Paladin players and leaving them stunned at the stubborn refusal to quit from the Wildcats.\n\n\"They're relentless!\" Heather Downs exclaims breathlessly in the Paladin huddle after another Wildcat point.\n\n\"That bitch isn't beating me!\" Madison states while Cassandra just shakes her head.\n\n\"This isn't some kind of grudge match between you and Jess, Madison.\" She tries telling the\n\nteam captain but it falls on deaf ears.\n\nEvery shot Madison takes is directed towards Jessica even when easier shots are available to her. Those that Jessica can't play herself are easily played by her teammates setting her up to rain down kills on her former team. The superior Paladin defense begins to show cracks as the Wildcat team pulls further and further ahead until Tabitha slams down the game-clinching kill. The Wildcat faithful let out a loud cheer as the team comes to the bench before the next game but the usual jovial nature of the team is replaced with steely determination. Jake passes around the water bottles and Coach Morrison gives her talk and instructions to the stony silent team of resolute players. They know that despite this win they are still one loss away from the title and they take the court for the fourth game with that in mind. The game begins as if it was more of a continuation of the last game as the Wildcats continue to rack up points much to the confusion and dismay of the Paladins. A timeout called by their coach when the Wildcats go up by ten points does nothing to stem the unrelenting tide that continues to wash over them out of the break. The ten point lead quickly becomes fifteen then with game point drawing close Madison takes another shot at Jessica. She slams into Jessica as she leaps for a spike so hard that the impact sends Jessica sprawling to the floor. The line judge blows her whistle and calls the point for the Wildcats and then produces a yellow card from her pocket.\n\n\"Warning to number one on the Paladin team for physically aggressive play.\" She announces as Jessica is helped back to her feet. She rubs the shoulder that she landed on and rolls her arm to try and ease the pain that's flaring up.\n\nCoach Morrison sends Ashley into the game to cover for Jessica who she brings to sidelines to get checked over.\n\n\"I'm fine.\" Jessica insists as Jake has her sit on the bench.\n\nDr. Golden has made her way to the sidelines and joins them on the bench.\n\n\"How bad is it, Jess?\" She asks as she starts to probe Jessica's shoulder.\n\n\"It's going to be bruised but it's fine.\" She assures her. \"I'll ice it tonight but right now I need to get back into the game.\"\n\n\"Not until I get the okay from your mom, Jess.\" Coach Morrison states.\n\nOn the court, the Wildcats are serving for game point. Tonya hits her trademark float serve into play which is played by Heather. She knocks it to Cassandra who sets it for Madison. Ashley feints like she's going to jump and challenge the spike but she drops back a step as Kenyetta leaps up to block. Madison's shot rockets past Kenyetta's hands but to a waiting Ashley who bumps it up. Caitlyn climbs the ladder and smacks down the game-winning kill to the surprise of the Paladin players. The players leave the court to ready themselves for the fifth and deciding game.\n\n****\n\n\"How is she?\" Coach Morrison asks Jessica's mom knowing that Jessica will say anything to get back into the game.\n\n\"It looks like it'll be a bruise at worst.\" Dr. Golden answers her. \"She has Jake working on her now so she can get back into the game.\"\n\nCoach Morrison nods and looks over at the couple. Jess is sitting facing Jake her arm extended towards him with her wrist resting on his shoulder while he rubs her shoulder and upper arm.\n\n\"How long do I need to keep her out of this game?\" She asks Dr. Golden.\n\n\"Give her a few more minutes and she'll put herself back into the game on her own.\" Dr. Golden laughs.\n\n\"That I can believe.\" Coach Morrison nods.\n\n\"I'll stay close by just in case she or you need me again.\" Dr. Golden tells her.\n\nWhile Jake kneads Jessica's shoulder and bicep the fifth game begins. The Paladins serve and quickly jump on the fact that Jessica is still on the bench. Ashley is again targeted but she grits her teeth and plays nearly every shot that is sent her way. Those she misses are picked up by the Wildcat's backcourt keeping the game close. The Paladins score a kill making the score five to three in their favor when Jake speaks.\n\n\"You're ready aren't you?\" He asks Jessica.\n\nShe nods her head then leans in and kisses his lips. \"For this and a lot more when we get to Grammy's tonight.\" She answers then kisses him again, this time teasing his lips with her tongue before getting to her feet.\n\n\"Ready to get in there, Jess?\" Coach Morrison asks when Jessica stops beside her.\n\n\"More than ever.\" Jessica answers.\n\n\"Was it his hands or those kisses that helped most?\" Coach Morrison teases her star player.\n\nJessica looks over at Jake and smiles. \"It's the whole package.\" She answers before jogging onto the court to relieve Ashley before the serve.\n\n\"Look who's back for more.\" Madison comments. \"Ready for me to kick your ass again, Fish.\"\n\n\"Bring it, Bitch,\" Jessica responds with a smile and the grudge match is on.\n\nMadison does her best to  bring it  but every shot she attempts is rebuffed by Jessica. Madison's hand's sting from every spike of Jessica's that she attempts to block and for no worthwhile gain as it seems that even the ones she succeeds in blocking are quickly played by the other Wildcat players for kills. The game reaches match point for the Wildcats and Madison vows that Jessica won't be the one that gets it. Wendy serves the ball and it's played by Paladin to the frontcourt where Madison attempts to dink the ball over and catch the Wildcats napping. It doesn't work. Tabitha plays it perfectly and sends the ball towards a Caitlyn who is waiting to set Jessica.\n\n\"Set!\" Jessica shouts surprising Caitlyn when she steps towards her and bumps the ball back over her shoulder. Kenyetta leaps high and smashes a spike down. Madison, who was tracking Jessica instead of the ball is out of position and a diving Cassandra can't make the save.\n\n\"Point and match to Carter!\" The line judge calls out.\n\nThe Paladin sideline is shocked into silence but the Wildcat side explodes in cacophonous cheering.\n\n****\n\nAfter the Wildcats are presented with the championship trophy a tall blonde woman with her hair pulled up in a messy ponytail approaches Jessica. For a moment Jessica feels like she's looking at her future self. The woman's hair is a shade lighter and she's slightly taller than Jessica. Despite her business attire it's obvious that her body is nicely toned and she has piercing blue eyes.\n\n\"Congratulations on your win, Jessica. It, like all your matches this year, were something to see.\" The woman states with a beaming smile. \"You're a shoe-in for the All American team again this year.\"\n\n\"Thank you, ma'am,\" Jessica says. \"I was lucky to have the greatest teammates surrounding me. They earned this title. I'm just proud to be a part of it.\""
    ],
    "authorname": "AuroraIncident",
    "tags": [
        "volleyball",
        "oral",
        "blonde",
        "football",
        "bullies",
        "fight",
        "jessica",
        "high school",
        "doggy style",
        "teasing"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/new-girl-in-town-pt-15"
}