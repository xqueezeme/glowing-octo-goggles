{
    "title": "Ask Aunt Agatha",
    "pages": [
        "One night back when I was a youngster, my parents rented All the President's Men. I got so inspired watching Woodward and Bernstein unravel the Nixon White House that I decided there and then I wanted to work for a newspaper when I grew up. The idea of becoming a crusading reporter taking on the corrupt establishment motivated me to set my sights on Columbia University's School of Journalism, and thanks to good grades, a scholarship and a sizeable student loan, I actually made it.\n\nColumbia gave me three things that were priceless: a superior education, a reasonable chance at an entry level media job upon graduation, and a beautiful wife. Let me say a few words about each.\n\nColumbia is one of the pre-eminent journalism schools in the country, and it taught me not only the fundamentals about how to research, report and write about the news, but also the skills of investigative reporting, broadcast journalism and digital media. My teachers included experienced working journalists as well as distinguished professors. \n\nThe only thing they didn't teach me was how to find a job in the hyper-competitive journalism market. Not only is there a glut of reporters, editors and news people, but the industry itself is in serious decline, at least in the newspaper field. And if you do find a job, the pay is meager at best. This was the uninviting environment into which I headed as my college years ground toward completion.\n\nAs graduation neared, I was so desperate for work that I seriously considered accepting an unpaid internship just to gain some credentials. But at the last minute, good old Columbia came through for me -- not the Placement Office but Alumni Relations. It turned out that a good friend of my Dad was a Columbia alum, and he offered me a job as an assistant copy editor/fact checker at one of the newspapers in the Washington, D.C., area. It was not what I had envisioned for myself, but a drowning man will cling to any life preserver in the sea.\n\nOne of the reasons I was so desperate for work was that in between my class schedule and practice reporting assignments I had somehow found time to fall in love. In fact, I had even gone so far as to become engaged my senior year. Nicole, my intended, was a political science major, and we had met in a course on comparative politics our junior year. She was intelligent, articulate, ambitious and gorgeous. What started as a classroom friendship rapidly escalated into an ever closer emotional and physical relationship. I discovered that the passion she brought to political arguments was matched by the passion she brought to our couplings. Put simply, we couldn't get enough of each other, and it didn't take long for us to realize that we wanted much more for much longer than a few years in college.\n\nUnlike me, Nicky's future was laid out nicely. The third-term congressman from her home district was a good friend of Nicky's parents, and he had promised their daughter a job as an aide in his office in Washington when she graduated. So my finding a job in D.C. a godsend, and we married right after graduation.\n\nEven with both of us employed, we found we could only afford a tiny walk-up apartment way out in Bethesda. But when you're young and in love, such things are only minor inconveniences. \n\nNicky threw herself into the inner workings of Capitol Hill and found the new environment much to her liking. As for me, I was glad to have a job but I found my responsibilities somewhat underwhelming. Proof-reading other people's copy didn't comport very well with my dream of being a crusading reporter. But, as I kept reminding myself, it was better than being unemployed and maybe it would lead to something better.\n\nAs it turned out, that's exactly what happened, but not in the way I expected.\n\nI was called into my boss's office one afternoon, and when I was seated on the uncomfortable wooden chair across from his desk, he fixed me with an evaluating stare that made me very uncomfortable. Finally, he held up a sheet of paper which I recognized as my resume.\n\n\"It says here that you can write. Is that true?\"\n\n\"Yes sir,\" I replied earnestly. \n\n\"And it also says you're a pretty smart guy, at least book-wise. Is that right?\"\n\n\"Well, I did alright in school, I guess,\" I said modestly. I had graduated with honors, but I didn't think this was a good time to brag.\n\nHe heaved a sigh. \"Okay, here's the deal. Next week is Agatha Cornwell's retirement. That means somebody's got to pick up her column. You're it.\"\n\nI swallowed hard. Agatha Cornwell was not exactly an intrepid reporter. In fact, she wasn't a reporter at all -- she wrote the paper's daily advice to the lovelorn column. Most of the time, no one on staff even read the column, and when they did, it was the subject of derision. Being told to write it had to be the worst assignment possible, even worse than writing obituaries.\n\nThe boss must have mistaken my reaction for enthusiasm. \"Now don't go pinning your hopes on this. The truth is that the column gets some of the lowest readership of any section of the paper. But it has a small, loyal following, so the Managing Editor doesn't want to kill it and cause an uproar. And we don't want Agatha's readers to know that the old bat is gone either, so don't go telling anybody that you're the new Aunt Agatha. Got that?\"\n\nI nodded my understanding. He didn't have to worry: the last thing I wanted would be for anyone I knew to learn I was now writing an advice column.\n\nHe gave me that steely-eyed squint again. \"Don't screw it up, understand?\"\n\nI nodded and left his office to retreat to my desk and bemoan my fate. An advice column? How was I ever going to hold my head up in front of Nicky and our friends? If word got out, I'd become the laughing stock of the Columbia School of Journalism! My only saving grace was that, thanks to the boss's injunction, I couldn't tell anyone about my new assignment. Even that was small consolation. \"Great,\" I thought dejectedly, \"not only do I have the worst job on the paper, but I can't even bitch about it to anyone!\"\n\nWhen I got home that evening, Nicky asked me why I had such a long face, but I made up some story about a rough day at the office, and, fortunately, she let it go because she wanted to tell me about her work. She was agog because it turned out her new boss was making a lot of noise in political circles. Congressmen are usually a dime a dozen in Washington, but Timothy Vickers was rapidly becoming a rising star in his party. He was young, handsome and extremely articulate. He and his wife made a very photogenic couple. Already there was talk that he was destined for greater things. \"One of the other aides told me he might be considered as possible vice-presidential material,\" Nicky told me excitedly. \"Just think: I might be working in the White House some day!\"\n\nI'm afraid I wasn't as overjoyed about her good fortune as I should have been. I was glad for her, but inside I guess I was still feeling sorry for myself about my new assignment.\n\nOn Monday morning I was shown to my new work area, and to my surprise I found that I actually had a tiny office. At least that was some small compensation for taking such a demeaning job. However, once I had seated myself behind the old wooden desk, I found myself stranded in a snowstorm. Everywhere there were piles of letters and papers stacked haphazardly. I felt lost; I had no idea where to start.\n\nJust then there was a gentle knock and pretty young woman about my age stuck her head in the door. \"Hi,\" she said, \"I'm Mandy. I'm your assistant.\"\n\nAssistant? I get an office and an assistant? Maybe this wasn't going to be so bad after all. \"Hi, Mandy, I'm Casey,\" I said, \"and I'm completely lost. Please come in and tell me what's going on in here.\"\n\nShe gave me a cheerful smile, plopped herself onto the tiny chair beside my tiny desk, and began to talk. I soon learned that Mandy had only been with Agatha for three months and that she hadn't been excited about her assignment either. \"It isn't exactly hard-nosed journalism,\" she conceded, \"but it grows on you after a while. All those people out there are desperate for advice, and you begin to feel like you're doing something worthwhile trying to help them.\"\n\nShe gave me a stack of Agatha's recent columns to read, and I soon got a mental picture of a good-hearted older woman working week in and week out to dispense a little wisdom and common sense to her flock of the hopelessly uncertain. \n\nNext Mandy showed me a sampling of the letters that came in inexorably every day. As I looked at them, it struck me that the questions Aunt Agatha received were all boringly mundane. When I asked Mandy about that, she winked at me and handed over another stack of letters. \n\n\"What are these?\" I asked.\n\nShe gave me an embarrassed little grin. \"Those are all the questions Agatha didn't want to answer,\" Mandy told me. \"She just wasn't very comfortable talking about certain subjects, especially those she thought were 'weird' or 'naughty.'\"\n\nWow! When I started reading the letters from the second stack, I quickly realized that we had a lot of weird and naughty readers out there. \n\nI grinned at Mandy. \"I don't claim to have all that much expertise in this area, but I promise you that we're going to stop ducking questions about 'naughty' topics. That's the kind of stuff people love to read about, and we're going to start giving it to them.\"\n\nShe gave me a worried look. \"I'm fine with that, but I don't know how management will react. They've been pretty comfortable with 'sugar and spice and everything nice' for a long time, if you know what I mean.\"\n\n\"Look, I didn't ask for this assignment,\" I told her, \"but now that I've got it, I'm going to do it my way. If the boss doesn't like it, he can get somebody else. Are you in?\"\n\nShe smiled. \"Okay, count me in.\"\n\nFortunately, Agatha prepared her columns several days in advance, so I had a small backlog. That allowed me to take some time to study the letters from the \"do not answer\" file and pick the ones I wanted to use in my first column. I also gave a lot of thought to the style I wanted to adopt. I definitely planned to give answers that reflected my beliefs, but I wanted to do so with a little attitude. After a few false starts, I felt comfortable enough to give Mandy some excerpts from my first draft to review.\n\nDear Aunt Agatha, I love my wife, but recently I have discovered I have a bi side. Now I want to do some experimenting with some guys I've met. As long as I don't mess with other women, I don't feel like I'd be cheating on my wife. What do you think?\nSwitch Hitter\n\nDear Switch Hitter, I don't care whether you're a lefty, a righty or you hit from both sides of the plate, it's still cheating.\n\n\nDear Aunt Agatha, my husband and I have been happily married for ten years, but recently I had an affair with a man in my office. I feel terrible about what I did. Should I confess and beg him for forgiveness?\nRemorseful Roberta\n\nDear Remorseful Roberta, if you confess to your husband, all you're doing is taking the guilt off your back and dumping the pain on him. Keep it to yourself and make up for your mistake by being the best wife possible. The guilt you feel is the price you pay for doing something you knew was wrong.\n\n\nDear Aunt Agatha, a married guy in my office sent me a picture of his junk on my cellphone. What should I do?\nGrossed Out\n\nDear Grossed Out, why don't you forward his sext to his wife and get her opinion? I'll bet she'll have one.\n\nMandy looked at me with a sly smile. \"I don't know how management is going to like it, but at least they can't say your column is boring.\"\n\nSure enough, my boss came storming into my office that afternoon holding the column I'd submitted. \"What in the hell do you think you're doing, Casey?\" he yelled. \"Aunt Agatha's readers are a bunch of sweet little old ladies. You're going to get their knickers in a twist with this kind of stuff!\"\n\nI wasn't taking any of it. \"You asked me to do a job and I did it. Why don't you give it a chance before you spike it?\"\n\nHe snorted angrily and stalked out, but he let the column run.\n\nIn addition to the print edition, the paper also appeared in a web version, and that gave us the chance to get feedback almost instantly. Mandy had told me that Ask Aunt Agatha never generated much of a response, so I was surprised when she came into my office the next day and, using my computer, accessed the online feedback for my column. Apparently, my first effort had provoked quite a response. Some of the readers took Aunt Agatha to task for being flippant about serious issues, but others cheered her strong stands.\n\nI hadn't been expecting any response at all, so I was a bit nervous about the tempest I'd stirred up. But Mandy was excited. \"This is the biggest reaction I've ever seen to an Aunt Agatha column,\" she told me. \n\nI was still unsure. \"Some of them sure didn't like what I said or how I said it,\" I pointed out.\n\n\"Who cares?\" she said happily. \"At least you made them think about it.\"\n\nThe next few days saw a repeat of the first column's reaction: comments kept coming in both pro and con on the new tone and subject matter. I could only wonder how management would react to it all.\n\nOver the next two weeks, I found the answer to a question I'd asked myself when I started the new job: why did I need an assistant? When I saw the stack of letters coming in, I began to understand. And when Mandy showed me how to check the Aunt Agatha email account, I began to wonder if two people would be enough to keep up with the influx. Every letter and email had to be read, filed by date, and categorized. Some would go into the \"To be Answered\" file, some into \"Ignore\" and others into the \"Think about It Later\" file. Then we'd discuss the ones in the first category and decide how to answer them.\n\nSometimes we disagreed. For example, Mandy broke into laughter while reading one letters that came in through the mail. \"Here's one for the trash,\" she chortled, \"it's obviously a fake.\" But when I read it, I knew it had to go in the next day's column.\n\nDear Aunt Agatha, recently I was awakened from a deep sleep by a little green man who took me up to his spaceship and probed my body with alien instruments. Yesterday I learned I am pregnant. What should I do?\nAbducted by Aliens\n\nDear Abducted by Aliens, you need to take this letter to your Creative Writing professor and tell him I said to give you an \"F.\"\n\nThe next Friday afternoon I had just finished preparing my Monday column when the boss showed up at my door. I'd been avoiding him ever since our last encounter, and his sudden appearance immediately made me uneasy.\n\n\"I just got the latest report on the number of hits for our online site,\" he said with a scowl. \"I also got a report on the feedback your column has gotten.\" I held my breath. \"They may not always like your smartass remarks,\" he went on, \"but at least they're reading your stuff. The number of hits on Ask Aunt Agatha is up 35%. I guess you get to keep the job another week.\" Then he tromped out of my office.\n\nI was stunned. I felt like that actress at the Academy Awards: \"You like me, you really like me!\"\n\nMandy had been eavesdropping, and she came running in to give me a big hug. \"Congratulations, Casey! Those are wonderful results, and the boss almost never gives anybody their results in person. He must really be pleased.\"\n\nI hugged her back and gave her my best John Wayne imitation. \"Aw shucks, ma'am, it warn't nuthin.\" But the truth was that I felt pretty darn good. I might not have the job I wanted, but at least I was having some success at the job I'd been given. As I drove home that evening, my only regret was that I couldn't tell Nicky about it.\n\nI didn't have long to think about it, though, because when I got home Nicky reminded me that we had to leave for the weekend. Her boss, Congressman Vickers, was holding a staff retreat at the Wye River estate of a wealthy backer, and spouses and significant others were invited.\n\nI guess it's my journalistic background, but I'm pretty cynical about most elected officials. Hearing \"Congressman Clean,\" as the media had dubbed him, preaching about family values and personal morality made me more than a little uncomfortable. As a result, I wasn't looking forward to rubbing elbows with Congressman Vickers and his entourage, but Nicky was excited so I kept my feelings to myself. And later, when I had a little time to talk with him over cocktails, I had to admit that he was a charming if earnest sort of guy.\n\nThe next day while Nicky and the other staffers were meeting with him, I had the opportunity to meet Mrs. Vickers, and had an even more favorable reaction. I'd expected one of those plastic \"Stepford Wives\" types with a campaign speech memorized and ready to deliver on her husband's behalf at the drop of a hat. Instead I found a quiet, thoughtful woman whose only disadvantage was an obvious limp. Without my asking, she volunteered that it was the result of an automobile accident that had occurred not long after they were married. \"It was pretty awful,\" she admitted, \"and I can't have children, but I'm lucky to be alive, so I don't complain.\"\n\nI was impressed by her courage and also by her husband's decision to stick with her. \"Maybe he is one of the good guys after all,\" I told myself.\n\nThat night in our room, Nicky was pretty hyper. \"He said that he's really happy with my work,\" she told me excitedly. \"He said that he relies heavily on my help.\"\n\nAs I pulled off my clothes, I said, \"Why don't you come over here and see if you can give me a little help?\" It didn't take much to transform her enthusiasm into passion, and soon we were enjoying each other to the fullest. When Nicky gets going, she's very vocal, and I began to worry that her moans and cries might disturb others in the house. But it's such a turn-on for me hearing her get turned on -- especially when she's nearing an orgasm -- that I quit worrying and lost myself in our mutual pleasure. Afterwards, just before I fell asleep, I thought, \"This has turned out to be a pretty good weekend after all.\"\n\nOn Sunday morning we sat out on the patio having breakfast. Nicky, of course, had picked up a copy of the Washington Post, but out of loyalty to me, she also got a copy of my newspaper. I was amused to see her turn to its Living section and begin reading Ask Aunt Agatha. \"Why do you read that stuff?\" I asked her.\n\n\"I guess I'm like everybody else: I like to read about other people's secrets,\" she readily confessed. \"Besides, lately Aunt Agatha has been much more interesting, and I really like the advice she gives.\"\n\nI almost gave the game away then, but I restrained myself with difficulty. \"Wouldn't she be surprised if she knew?\" I thought to myself with glee.\n\nOver the next few weeks, I really got comfortable in my new role. Part of what made the job so easy was Mandy, who was proving a real joy to work with. From our lunchtime conversations, I learned that her background was parallel to mine. Like me, she'd always wanted to be a reporter. Instead of Columbia, she'd gone to the University of Missouri, which is also nationally recognized for its excellent school of journalism. And like me, she'd had no luck finding a job as a reporter when she'd graduated. She'd only fallen into the assistant's job when management realized Aunt Agatha needed help keeping up.\n\nWorking together, the two of us could now actually plan out the column rather than just reacting day to day. We started picking and choosing the letters to answer so that they followed certain themes and fit more logically with what was going on in the outside world. No more letters about summer romances appearing during the Christmas season! Mandy was also a whiz at doing research, tracking down resources to which Aunt Agatha could refer her readers when they needed expert help.",
        "That really came in handy the day we received an email from a younger reader.Dear Aunt Agatha, I'm fourteen years old and I don't know who else to turn to. My friends and I have been sniffing gasoline to get high. At first it felt kind of good, but then I started throwing up and now I often feel really dizzy. I'm scared and I don't know what to do. My Mom and Dad told me they'd send me away if they ever caught me messing with drugs or anything. Please help.\nAlone in Alexandria\n\n\"How damned stupid can parents get?\" I raged when Mandy showed me the email. \"Their daughter could have serious medical problems and they've cut off all lines of communication with her.\"\n\nThen another scary thought occurred to me. \"What if she's in really serious shape? We can't wait to post a response in the paper. There has to be some way to get to her right away.\"\n\nMandy quickly gave me a dose of reality. \"We don't have her phone number or address, and the email account she used was almost certainly fictitious.\"\n\n\"There just has to be some way to find out who she is and where she lives,\" I replied in frustration. \"You do some research to find out where this girl needs to go for help, while I go talk to Amir. Maybe he knows some way we can reach her.\"\n\nAmir was our in-house techie. If there was something he didn't know about networks, computers and the Internet, no one had yet to find it. When I tracked him down and explained the situation to him, he scratched his head in contemplation. \"That's a tough one,\" he said. \"Email typically goes through so many servers that the original point of origin is virtually impossible to find. But I've got a good friend who works at the NSA; if anyone can do it, they can.\"\n\nI urged him to do whatever he could to help and went back to see how Mandy was doing. She'd found a free clinic in the Alexandria area that specialized in working with teens with substance abuse problems. Realizing we weren't likely to find our fourteen-year-old's location right away, we decided the best we could do was reply to her email and hope that \"Alone\" would check her mailbox and see Aunt Agatha's answer. Then we ran the same answer in the newspaper as a back-up. All we could do now was hope she saw one of them and got help before it was too late.\n\nNothing happened for the next two days, and both Mandy and I were pretty depressed. Then everything happened at once. Amir came bounding in waving a sheet of paper in his hand. \"I've got it!\" he said excitedly. \"My buddy came through.\" \n\nNo sooner had he given me \"Alone's\" home email address than Mandy came in holding a print-out. \"She got your advice,\" she yelled, and we quickly read the email.Dear Aunt Agatha, I went to the place you recommended and they helped me a lot. I stopped throwing up and I'm not dizzy now. In fact, I'm feeling so much better that I'm going to try to convince my friends not to use heroin any more. Thanx!\nNot Alone in Alexandria.\n\nI just looked at Mandy and shook my head. I didn't know whether to laugh or cry at this latest development. \"But at least we got to her,\" Mandy reassured me. \"At least your column is doing a little good.\" I hoped that she was right.\n\nA few weeks later, the boss came in my office, his usual scowl pasted on his face. \"I don't know if you're good, kid, but you're definitely the luckiest sonofabitch I know.\"\n\nI'd come to expect such outbursts by now, so I just looked up and said, \"Okay, what have I done now?\"\n\n\"For reasons I can't understand, your little piss-and-moan column has attracted a lot of attention. Your readership numbers are going through the roof, and some other papers apparently caught wind of it. The bottom line is that your silly column is going to go into syndication. As soon as the paper's attorneys can work out the details, a dozen other papers around the country are going to start running Ask Aunt Agatha!\"\n\nAs I sat there stunned, Mandy walked in and asked the big question: \"What about the money?\"\n\nThe boss just rolled his eyes. \"We got a very clear policy on that: any writer whose work is syndicated splits the revenues fifty-fifty with the paper,\" he explained with a pained expression. \"If you can keep it up, you're about to start making the kind of money normally reserved for the big boys.\"\n\nMany squealed and through her arms around my neck. We were both yelling and dancing around the room while the boss looked on in disgust. After he left the office, Mandy gave me a big kiss on the cheek and said, \"Oh, Casey, congratulations! This is so wonderful. I always knew you were special!\"\n\n\"We're a team,\" I told her. \"I couldn't have done this without you.\"\n\nShe smiled and gave me another kiss. \"You're sweet to say that, but you were the one who took chances and shook things up. You were the one who put your stamp on the column. And you're the one who deserves all the success you're going to get.\"\n\nI was so excited on the way home that I couldn't wait to tell Nicky the good news. But she was very late getting home, and when she finally arrived, all she wanted to talk about was her Congressman boss. It seemed that the party was actively looking for a new face for the upcoming convention, and Congressman Clean's name was being noised about as vice-presidential material. Nicky kept going on and on about what a wonderful VP he would make and the role she would have in his campaign. \n\nI tried to listen with interest, but I was beginning to feel like a second violin in Nicky's orchestra. \"Hey,\" I said, only half-joking, \"don't forget about me while you're making all your plans.\" \n\nShe gave a little flip of her hand. \"You're just a copy editor,\" she said dismissively. \"He's going for the gold. He could be President of the United States some day.\"\n\nShe must have seen the reaction on my face, because she quickly tried to make amends for what she'd said, \"I mean, I'm sure what you do is important to the paper, but after all, it's not likely to wind up in the history books.\"\n\nThat really hurt, and I turned to walk away before I said something ugly. She reached out to stop me, but before she could do so her phone rang. When she answered, it was someone from the Congressman's office, and she was soon caught up in the conversation.\n\nI went outside and took a long walk around our neighborhood. I realized, of course, that what she'd said was true. If her Congressman actually did actually make it to the White House, he would become famous, and deservedly so. But that didn't give her the right to disparage her husband the way she had.\n\nThe more I thought about it, the more it seemed to me that Nicky's respect for me had noticeably declined ever since she moved into the Congressman's inner circle. I could understand her enthusiasm for her job, but not her lack of enthusiasm for her husband. Given the way she thought about me, I decided to say nothing to her about my syndication. After all, it might be several months before the deal was finalized, and even then it still wouldn't be as exciting to Nicky as a vice-presidential nomination for her boss.\n\nWhen I returned from my walk, Nicky tried to act like nothing had happened, but we were polite rather than loving towards each other.\n\nNo matter how unhappy I might be about the state of my marriage, I still had a column to put out every day. But it was inevitable that my home life would leak over into my work. I found a hopelessly romantic email in the inbox a few days later, and, in my sour mood, I decided to come down hard on the writer.Dear Aunt Agatha, I've fallen in love with a wonderful guy at my office. He's smart and funny and caring, not to mention good-looking. The only trouble is he's married. Should I tell him how I really feel about him?\nHis Secret Admirer\n\nDear Secret Admirer, read my lips: keep your feelings to yourself. No matter how true your love, you don't have the right to mess with this guy's marriage. Unless and until he becomes single, you're going to have to keep your feelings to yourself. If that's too painful for you, find another job.\n\nAunt Agatha caught a little grief from the romantics in her audience who wanted to give the secret admirer a chance, but I'd had enough of outsiders messing with marriages at that point, and wasn't about to back down.\n\nConditions at home continued to deteriorate. Nicky's work kept keeping her later and later at the office, and her travel increased so much that the only way I'd know when she'd be home was by checking the copy of her itinerary that she'd leave in the home office. She was constantly jetting off with the Congressman to attend fundraisers or participate in strategy sessions with party sages. When she did manage to come home, she was so worn out that she did little besides sleep and eat. And when I say sleep, I mean just that; any other bedtime activities became very rare indeed.\n\nAs if my married life weren't dour enough, things started going downhill at the office as well. Mandy, who'd always been the most cheerful and upbeat person I knew, suddenly went into a funk. It was clear to me that something was eating on her, but no matter how hard I tried, she wouldn't open up and let me try to help. I thought it was pretty ironic that I could help strangers but not someone I knew and cared about.\n\nBetween Nicky's coldness and Mandy's blues, my days became pretty stressful affairs. I turned into a bit of a curmudgeon myself, and I'm ashamed to admit that I even snapped at Mandy once or twice. I didn't mean anything by it, but I guess my remarks must have had a bigger impact than I realized, because one morning she walked into my office and laid her letter of resignation on my desk.\n\n\"You can't do this, Mandy,\" I said in a panic. \"You know I didn't mean those things I said the other day. Please forgive me and stay. I need you.\"\n\n\"What you said didn't bother me, Casey. I knew you weren't trying to hurt me.\"\n\n\"Then don't go,\" I said hastily. \"If you can forgive me, then please stay.\"\n\nI saw her waver for just a moment, but then a look of determination washed over her face. \"I'm sorry, Casey, but I just have to go. It's better this way.\"\n\nAnd before I could protest or think of some clever argument that might persuade her to change her mind, she turned on her heel and left.\n\nI wanted to cry. Why were all the women in my life pulling away from me? \n\nThat afternoon I tried to call her at home to see if I could talk her into coming back, only to find that she'd moved out and disconnected her phone. Her cell had been cancelled as well. In fact, when I asked around, I found that neither Human Resources nor any of her friends knew where she was. Damn!\n\nWith Mandy gone, I began to appreciate even more how much she had done to make our little operation work effectively. HR got me a temp to help with the administrative work, but the guy they found was no help at all as far as making decisions about the column. And as for replacing the friendship and camaraderie I'd had with Mandy, forget about it. Damn!\n\nThen something happened that was so bizarre I forgot about Mandy temporarily. One day an email came into Aunt Agatha's account that really set my teeth on edge.Dear Aunt Agatha, my husband is a nice guy, but he's never going to go very far. In the meantime, I've gotten into a hot relationship with a man who's destined for great things. Now that I've got a chance to trade up, I'm not going to pass it up. Any suggestions on how to break the news to my soon-to-be-ex?\nGoing for the Gold\n\nAt first I prepared a snarky response and put it in my file of items to run next week. But something about the wording of the email sparked a memory, and I pulled it out to look at it again. After a couple of minutes I took a walk to the other end of the floor.\n\n\"Hey, Amir,\" I greeted my friend, \"any chance your buddy at the NSA could track down another message?\"\n\n\"Is it important?\" he asked me. \"I hate to bother him with trivial stuff.\"\n\n\"If I'm right, it could be very important,\" I told him.\n\nA couple of days later, Amir walked into my office with a big smile on his face. \"Ask of Amir and it shall be granted,\" he said grandiosely. \"My buddy found the source of your mystery correspondent. It was sent from an account in Bethesda.\" He handed it to me. \"Here's the billing address for the account. Mean anything to you?\"\n\nI looked at it. Oh, yes, it meant something to me. It was my home address.\n\nI couldn't believe that Nicky could have been so stupid as to send an email like that to an advice column. But then I didn't know why any of the writers would seek the advice of a total stranger. More importantly, I couldn't believe Nicky would be so stupid as to have an affair with Congressman Clean, or vice versa, for that matter. He was supposed to be happily married, and worse, he had built his whole image around family values and morality. Now he and my wife were cavorting together on the campaign trail? What hypocrisy on his part; what treachery on hers!\n\nMy anger grew with every passing second. So she was going to dump me unceremoniously to trade up for another man? Whatever happened to \"for richer, for poorer, forsaking all others,\" and all those other vows? I knew at some point down the line I was headed for a spell of deep depression, but right now the only emotion I felt was a thirst for payback. I thought about it for a while, and then I made my decision.\n\nMy first step was to pay a visit to Sam Winston. Sam was the newspaper's chief political writer. He was an old pro who knew his way around Washington very well indeed. He'd been very kind to me when I first came on board, helping me learn the ways of the news room.\n\n\"What can I do for you, young Casey?\" he asked with a smile when he saw me.\n\n\"Actually, I may be able to do something for you this time, Sam,\" I told him. \"What would you say if I could give you a story on Congressman Clean's secret love life with one his aides?\"\n\n\"A story like that could be worth a Pulitzer prize,\" he said. Then he gave me a wolfish grin. \"But even if it wasn't, I'd still love the chance to expose the feet of clay of that sanctimonious hypocrite!\"\n\nThen his face got serious. \"So what makes you think the good Congressman is doing the dirty with one of his aides?\"\n\nI looked at him evenly. \"Because the aide he's doing is my wife.\"\n\nHe blinked. But when he saw that I was serious, he leaned forward and gave me an intense look. \"Let's talk,\" he said.\n\nCatching your everyday adulterer is fairly easy; they tend to be unimaginative and careless. Catching an elected official is a different matter. Office holders are usually already under a degree of public scrutiny, so they tend to be more devious. But a newspaper has considerable resources at its disposal once it decides it's worth it to use them. And after Sam made his pitch to the Managing Editor, all those resources were put at his disposal. \n\nI wasn't part of the investigative team for obvious reasons, but I was able to jumpstart Sam's efforts to document the Congressman's peccadilloes because I had Nicky's daily schedule. \"Follow Nicky\" I told Sam, \"and you'll find the Congressman there.\"\n\nSure enough, two weeks later Sam came into my office and closed the door behind him. \"We got him,\" he said, when I looked at him inquiringly. \"'Congressman Clean' has definitely been doing the dirty with your wife.\"\n\nI think that deep inside I had harbored some hope that this was all a misunderstanding and that everything could miraculously go back to the way it was. But after Sam's words, I knew that possibility was gone. Hope dies hard; when it does, I discovered it's replaced by bitterness.\n\n\"When are you going to lower the hammer?\" I asked. \"How soon do I need to get my divorce in the works?\"\n\n\"Don't worry,\" he said, \"you've got time. We need to get some more on Congressman Vickers so we can show conclusively that this is a pattern of behavior, not just a one-time thing. And we also want to wait till it's closer to the nominating convention because the impact will be greater then.\" Sam smiled but his eyes got harder. \"I hate hypocrites. When the Congressman goes down, he's going to go down hard.\"\n\nI felt an involuntary shudder, and I almost felt a little sorry for what was going to happen to Nicky at the same time. Almost.\n\nIf my marriage had been strained before, it now became icy. Nicky was almost never home, and when she did make an appearance we acted more like roommates than spouses. Tellingly, Nicky never even noticed the absence of intimacy. Her thoughts were clearly someplace else and on someone else, I thought. \n\nLike Nicky, I was spending ever more time at the office. Work was the only escape I had from my pain. But even there I couldn't find relief because everything in the office kept reminding me of Mandy. I would have given anything to be able to unburden myself about my troubles to her sympathetic ears and ask her advice. But it was as if she had vanished from the planet; no one seemed to know where she had gone or how to reach her. I felt terribly guilty about the role my surliness might have played in driving her away.\n\nIn the office I deliberately avoided Sam Winston's area. I was intensely curious about what was happening, but I figured the last thing he needed was a pathetic cuckold pestering him with questions. Nevertheless, as the convention drew nearer and talk about Congressman Vickers' chances for the VP slot heated up, I was dying to know how Sam's investigation was going. So it came as a relief when Sam called me one Monday and asked me to come over to the conference room in his area.\n\nWhen I walked in, he motioned me to close the door behind me. \"It's all going to go down in the next few days,\" he told me. \"He's going to be staying at the Hay-Adams hotel on Wednesday night, and we're going to confront him on Thursday morning. The story will hit the paper on Friday morning, and then all hell is going to break loose.\"\n\nAt that point, all I felt was relief. My sham of a marriage was finally about to come to an end and I could quit pretending to my friends and family that everything was alright between Nicky and me.\n\n\"There's something that I think you need to hear,\" Sam said, breaking my little reverie. \"We managed to book the hotel room adjoining your wife's room a week ago. We've got some new recording devices that are extremely sensitive, and the two of them weren't particularly discrete.\"\n\nHe gestured to the MP3 player on the table, then got up and left the room.\n\nAs I put the headphones on, I steeled myself to hearing the equivalent of an amateur porn session starring my wife. What I heard was a little different.\n\nOh, there was plenty of sex with all the grunting and moaning you'd expect. But what really struck me was how needy the Congressman was and how Nicky kept trying to reassure him. \n\n\"I'm much bigger than your husband, aren't I?\" he demanded at one point.\n\n\"Oh, yes,\" she purred, \"you're twice as big as he is.\" (\"Yeah, right,\" I thought, \"the dude has a footlong cock? I don't think so.\")\n\n\"Tell me how much better I am than Casey,\" he ordered her. \"He never made you feel the way I do, did he?\"\n\n\"He never came close, baby,\" she kept reassuring him. \"You're the best I've ever had.\" (\"Wow,\" I thought, \"can this guy really be that insecure?\")\n\nBut the most telling thing came later. After extended foreplay -- which apparently consisted of her sucking his cock and stroking his ego -- he climbed on top and began to pump away. \"Oh, yes, baby,\" she moaned, \"you're so good, you do me so well, oh, oh, oh!\"\n\nI was astonished: she'd faked her orgasm! I knew what she sounded like when I got her off, and that wasn't it. Sam wouldn't have needed sophisticated listening devices if Nicky had really reached her peak.\n\nAt first I felt a little masculine pride that the Congressman was such a pathetic lover. But after thinking about it, I felt even worse. Nicky wasn't dumping me because she'd found a lover who sent her into ecstasy, she was leaving because she'd found a ticket to her own dream. \"She doesn't love this guy,\" I realized, \"she wants to be the First Lady.\" How could I have ever loved such a flawed, selfish woman? My bitterness hardened: I was glad I'd soon be ending my marriage.",
        "Just then, Sam came back in the room. \"You okay?\" he asked.\n\nI nodded.\n\n\"When you confront him Thursday, is she going to be with him?\" I asked. \n\n\"Most likely,\" he said, \"if they follow their pattern.\"\n\n\"Then I want to be there,\" I told him.\n\nHe looked at me uneasily. \"You're not going to do anything stupid, are you, Casey? No revenge scenarios or anything like that?\"\n\nI shook my head. \"Don't worry, Sam, after what I just heard, she's not worth it. All I want to do is to have the pleasure of personally serving her with divorce papers.\"\n\nHe nodded. \"I understand. But you've got to let me and the photog do our thing first.\"\n\nWe were waiting in the wood-paneled lobby of the Hay-Adams at 5:00 p.m. The hotel staff was curious about us, but they were familiar with all the leading reporters in town so they didn't hassle Sam.\n\nThe bud in Sam's ear must have passed on a message because he turned to the photographer and me and said, \"They're coming down.\" We stood up and clustered in front of the elevators, with me at the rear. Sam glanced sternly at me over his shoulder. \"Remember: no macho stuff.\"\n\nI gave him the Boy Scout salute. \"I swear, Sam.\"\n\nJust then, the elevator doors opened, and when Nicky and the Congressman emerged, the flash from the photographer's camera startled them. After blinking several times, the Congressman finally recognized the man facing him and recovered quickly. \"Well hello, Sam. Always nice to see one of our leading newsmen on the job, but isn't it a little early for questions?\"\n\nThe reporter ignored his remark. \"Congressman Vickers, would you care to comment on why you and your aide just emerged from her room so early in the morning?\"\n\nI have to give it to the guy: he was nimble. \"Certainly, Sam. Nicole and I were just having a quick meeting to go over my schedule for the day.\"\n\n\"I see. Then would you explain why that \"quick meeting' in her room began at 11:00 p.m. last night and continued without interruption until a few minutes ago?\" Sam pressed on.\n\n\"Well, that is to say . . .\" the Congressman stumbled and tried to regain his mental footing. But Sam gave him no time to do so.\n\n\"Perhaps this photograph taken of the two of you earlier this month will shed further light on your relationship,\" Sam continued, holding up a print for the two of them to see. \n\nSam had showed it to me earlier. The photographer had used a powerful telephoto lens that managed to capture the two of them in an embrace high up in the glass-walled elevator on the exterior of a Marriott Hotel. What made the shot so damning was the fact that the Congressman had hiked up Nicky's skirt and his hand was clearly visible clutching her thong-clad ass. The pair had only held the embrace for a few seconds, but that had been long enough for the lens to capture the juicy shot.\n\n\"How do you think this will affect your position on family values, Congressman?\" Sam continued relentlessly.\n\nWhile the confrontation between the Congressman and Sam took place, Nicky was standing there in shock, her eyes darting around wildly. Suddenly, they focused on me, and she shrieked, \"Casey! What are you doing here?\"\n\nThat was a cue if ever I'd heard one, and I stepped forward to face her. \"I'm just here to deliver this divorce petition to you in person,\" I told her evenly, thrusting the papers into her hands. She gasped. \"Oh, and by the way,\" I continued, \"in case you're still waiting for an answer to your question to Aunt Agatha, you'll find it in today's edition.\"\n\nWith that I handed her the morning paper opened to my column, and turned away. \"Wait,\" I heard her behind me, \"How did you . . . , I mean how could you . . .\" \n\nI glanced back over my shoulder to see her staring at the first item in Ask Aunt Agatha: Dear Aunt Agatha, my husband is a nice guy, but he's never going to go very far. In the meantime, I've gotten into a hot relationship with a man who's destined for great things. Now that I've got a chance to trade up, I'm not going to pass it up. Any suggestions on how to break the news to my soon-to-be-ex?\nGoing for the Gold\n\nDear Going for the Gold, no need to worry: your husband knows everything and he's already dumped you.\n\nSome of my readers were a little puzzled by Aunt Agatha's answer, but I had been writing for an audience of one, and I was pretty sure she got the message.\n\nWhen Sam's story hit the stands on Friday morning, it started a firestorm in the news media. It seemed that there were a lot of people who didn't like being lectured on morality, especially when the chastiser was shown to be a sinner. \n\nThe initial news was followed almost immediately by the announcement that the good Congressman was no longer under consideration for his party's Vice-Presidential nomination. Shortly after that story broke, Congressman Vickers' wife made a live appearance on The Oprah Winfrey Network. Oprah gently comforted the weeping woman while loudly castigating her philandering husband to Oprah's millions of viewers. The divorce that followed was very public and very messy.\n\nUltimately, the Congressman made the foolish decision to stand for re-election in his own district. He was defeated in a landslide and subsequently disappeared completely from the political scene. \"Very fitting,\" I thought. \"His name may be remembered by history, but it will be written in infamy.\"\n\nAs for Nicky, she found herself stalked by tabloid reporters who wanted the inside story on \"the other woman.\" I had changed the locks on our apartment, so she was forced to move in temporarily with a girlfriend. When the paparazzi got too bad, she left town and ultimately moved back in with her parents. \n\nOur divorce went through quickly; Nicky could hardly contest the grounds of adultery after having been exposed on the national news. She did try to contact me once or twice, but I made it clear that all communications would have to go through my attorney, and she quit trying. We split the little we had equally, and since the syndication deal had not yet been finalized, she didn't get a penny of those funds.\n\nI became a bit of a minor celebrity around the paper when my role in the expose was revealed, but whenever people began asking too many questions, my boss would somehow appear and bark at them until they left. He was a tough old bird, but I found I really appreciated him, even with his gruff ways.\n\nI had thought that I'd feel better after divorcing Nicky, but instead I felt more depressed than ever. I didn't miss my ex-wife, but I did miss what we'd had before all this started: a loving relationship. It made me angry that she'd taken all that away from me. I dated a little and it was fun, but I kept thinking \"been there, done that.\"\n\nI was sitting at my desk one day wallowing in self-pity when I caught myself daydreaming about Mandy. Once again I felt terrible for having driven her away, not only for her sake but for my own as well. I started thinking about office romances and I suddenly remembered an Aunt Agatha letter I'd answered on that very topic several months ago. I had to dig through my files to find it, but after a lot of searching I came up with it. \n\nAs I reread it, I decided I'd been pretty harsh on the girl who wrote it, and I wondered how I'd answer the same question today. Then a wild thought struck me and I checked the date I'd received the email. Could it possibly be?\n\nI rushed over to Amir's cubicle, clutching the note in my hand. \"Amir, I know it's a lot to ask, but could you ask your NSA buddy to check one more email? Please? It would really mean a lot to me.\"\n\nHe reluctantly took the email address from me. \"This had better be important,\" he said sternly.\n\n\"Trust me,\" I said, \"it's a matter of life and death.\"\n\nThe next time I saw him, he had a pained expression on his face. \"I don't know what you're trying to pull, Casey, but that email came from here, from the newspaper's offices.\"\n\n\"I knew it, I knew it,\" I shouted and gave the startled techie a hug.\n\nOf course it had been Mandy all along. She'd developed feelings for me but didn't know how to go about pursuing them. And I, I realized, had told her in so many words to butt out of my life. No wonder she quit and left town! What a great advisor I was: I'd had someone really special right under my nose and I hadn't even realized it. Not only did I overlook her, I actually managed to drive her away. \n\nI had to find her. But everywhere I turned I ran into a dead end. Her old friends hadn't heard from her. She'd discontinued her Facebook page. HR wouldn't let me look at her job application for privacy reasons, but a friendly clerk let me know off the record that she hadn't named any next-of-kin I could use to try contact her. The University of Missouri hadn't heard from her since she graduated. \n\nMy lonely personal life, my depression about my failed marriage and my utter inability to find the only person who really mattered to me outside of my parents were all beginning to affect my work. It got so bad that one day my boss stuck his head in the door and snarled at me. \"Look at the poor little boy crying over spilt milk! Listen, dummy, you'd better get your head out of your ass and straighten up or your syndication deal is going to die before it even gets born.\"\n\nHis words were harsh, but I guess they woke me out of my stupor because I really began to buckle down. I had come to care about my job and I didn't want to blow it. \"Damn,\" I thought, \"if I blow it with Aunt Agatha on top of Nicky and Mandy, I'll really have hit the trifecta of stupidity!\" And it was true: I really had come to love Aunt Agatha and all her readers, even if I was as clueless as they were.\n\nSuddenly an idea came to me. It was crazy, quixotic and probably pointless, but desperate times call for desperate measures.Dear Aunt Agatha, I worked with a woman who was everything I ever wanted, but, due to other things going on in my life, I didn't realize it at the time. As a result, I let her get away, and now I don't know how to find her. What can I do to remedy the biggest mistake in my life?\nBlind in Bethesda\n\nDear Blind in Bethesda, your only hope is that someday she'll learn how you feel and give you another chance. But if she ever does, you better not let her get away again!\n\nI know, I know: what a stupid, pointless gesture. But I had to try it, for my own peace of mind if nothing else.\n\nOne afternoon a few days later, I got called to the office upstairs. Waiting for me were a couple of lawyer types and the Managing Editor himself. I'd only met him once, so I was pretty intimidated. But he soon put me at ease, letting me know that the purpose of the meeting was the contract signing for the syndication of Ask Aunt Agatha. Once I put my name on the dotted line, my little daily column would be syndicated in papers around the country, starting the following week. From that point on, the paper and I would start splitting the weekly proceeds that the deal garnered. To make it even sweeter, the Big Man informed me with a smile that the number of papers that'd signed up to carry Aunt Agatha had grown from twelve to twenty-two during all the negotiations, with the possibility of even more after six months.\n\nOnce the papers were signed and I'd shaken hands with everyone around, I wandered back to my little office in a daze. For the first time in my life I had the prospect of earning some serious money, assuming I could keep my little goose laying its golden eggs. I might not be a crusading reporter like Woodward and Bernstein, but I was earning a living in my chosen field, and I might even be giving some good advice to my readers in the process.\n\nI should have been ecstatic, but I found myself wishing I had someone with whom to share my good fortune. After work I went out with a group of the other reporters to have a beer or two, but I didn't say anything to them. I knew the word would get around eventually, but I didn't want to boast about my good fortune.\n\nAfter I left the bar, I spent a quiet evening at home. I did call my folks to tell them the good news, but I had to ask them not tell anyone about it. Officially, the identity of Aunt Agatha was still a secret, although I knew that eventually the truth would come out. The Managing Editor had mentioned something about keeping it under wraps until they were ready to launch a publicity campaign. My folks were delighted for me, but my Mom was disappointed that she couldn't brag to her girlfriends about her son. My Dad was still a little confused about what I was doing, but he was happy that I looked to be financially independent for the foreseeable future.\n\nThe next day I was industriously working my way through a new stack of letters when I heard a timid knock on the doorframe. I looked up but didn't see anyone at first. Then a hesitant voice spoke up, \"Casey?\" I knew that voice.\n\n\"Mandy!\" I yelled, and then I was scrambling across my desk, papers flying everywhere. I picked her up and crushed her to me desperately. \"I thought I had lost you,\" I told her, and then I was kissing her and there was a roaring in my ears. After a minute, when the roaring hadn't stopped, I looked up, only to see the hallway outside my office filled with my office mates cheering and yelling.\n\nMandy looked at me apologetically. \"They sort of followed me when I came looking for you,\" she said.\n\nFinally the commotion began to die down and people began returning to their desks, leaving only my boss standing there. He fixed Mandy with a steely gaze. \"It's about time you got back,\" he said. \"This idiot hasn't been worth a damn since you've been gone.\"\n\nAs he left, I whispered in Mandy's ear, \"For once in his life, he's absolutely right.\"\n\nDear Aunt Agatha, against all odds, the woman I lost came back to me, and she's even more wonderful than I remember. What do I do now?\nBlind in Bethesda\n\nDear Blind in Bethesda, ask her to marry you as quick as you can, you idiot!"
    ],
    "authorname": "FrancisMacomber",
    "tags": [
        "adultery",
        "cheating",
        "infidelity",
        "true love",
        "romance",
        "advice columnist"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/ask-aunt-agatha"
}