{
    "title": "The Twelve Vitali Ch. 12",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me and have brightened my days. I hope you enjoy this series despite its differences to the original story. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nCat looked up from where she sat with the box on her lap as Matteo re-entered the white room. She hadn't wanted to explore the room without him; she was simultaneously excited, aroused and fearful of what she might find. Her curiosity about what was in the box was overwhelming, and she held it on her lap wanting not only what was in it but this new facet of their relationship. He looked gorgeous as he stood in the doorway watching her. He was shirtless and wore soft looking loose pants that she could imagine being used by a man doing martial arts rather than what they were about to do. Or at least what she hoped they were about to do.\n\n\"I want this,\" she said quietly, and ran her hands over the top of the box. \"I didn't look or explore in the cupboards, those are your things and equipment, but this is mine,\" she said looking up at Matteo, her eyes bright and showing her mixed emotions.\n\n\"Then open it,\" he encouraged and walked slowly toward her, a small smile playing at the corners of his mouth. \"Wait,\" he stopped her and took the box from her lap and placed it back on the bed before pulling her to her feet. \"No dresses in here, underwear only,\" he instructed and helped her remove the dress, his hands stroking over her exposed breasts. \"Now you may open the box,\" he instructed and took the dress to the end panel, opening it and tossing it into a basket there.\n\nCat sat back on the bed and carefully removed the paper finding a white leather covered box with a stylised silver cat embossed on the surface with her name in cursive script below it. She looked up and tilted her head at him. Had he been optimistic again? Had he known she would say yes to this?\n\n\"I want this,\" he admitted. \"As much as you claim that you want this. I never wanted to assume or take advantage of you, which was why I tried to talk to you without the influence of my needs. I was cautiously optimistic, however, because of your continued curiosity,\" he explained and lifted the lid for Cat to see the contents.\n\n\"I'm not an octopus!\" she exclaimed after seeing the fur-lined white leather collar and eight cuffs.\n\n\"No, you are not,\" he agreed with a chuckle. \"Let me demonstrate,\" he offered. He took the cuffs one by one and encircled her wrists and then just above her elbows with the soft leather cuffs. He then opened a small section between the rows of cuffs and took out a short chain of three links and beckoned her to stand, moving behind her. He pulled her arms behind her back and attached the short chain to the cuffs above her elbows making her pull her shoulders back and thrust out her breasts.\n\n\"You see why there are eight now?\" he murmured in her ear before moving around to face her and admire the lift and bold thrust of her breasts.\n\n\"I do,\" she breathed, feeling the rise and fall of her chest even more keenly above the tight corset.\n\n\"You look amazing like this,\" he murmured in a low voice, his dark eyes following his fingers as they trailed down her cheek and over her shoulder to her breast where his fingers found her nipple, pinching it gently between his thumb and forefinger and rolling the swollen nub. He cleared his throat before picking up the collar, wrapping it around her neck and fitting it snuggly. Then he let her sit as he placed soft kisses on her thighs and drew her panties down her long slim legs. His hands massaged her legs as he wrapped the cuffs around her ankles and just above her knees.\n\n\"Perfect,\" he murmured, pulling her once again to her feet and pulling her into his arms, her breasts pushing against his ribcage. \"You are so beautiful,\" he breathed in a voice that seemed almost awestruck as his hands ran down her back to her ass and squeezed, pulling her impossibly closer against him. He kissed her then deeply and possessively, \"Mine,\" he murmured in almost a growl as the kiss ended.\n\nCat smiled and looked up at him, moving her shoulders slightly and enjoying the feel of her breasts against the hard muscles of his lower chest.\n\n\"It's adorable watching you try to retain some sense of control in here with me,\" he placed his hands on her shoulders to stop her movements. \"The moment you opened that box you surrendered all control of what happens here to me. I will listen to your needs and even your wants, but nothing will happen here without my desiring it.\" He moved away from her, and she wondered if she had upset him.\n\n\"I am not known for my patience,\" he counselled her, \"But neither do I want to get too carried away with your first experience of submission in here,\" he said as he opened a cupboard.\n\nCat watched him as he seemed to be slowing himself down with the distraction of retrieving equipment rather than rebuking her actions. She said nothing as she watched him take out two shallow glass bowls and two candles, placing them on a waist-high shelf beside the bed and lighting them. Almost immediately the room began to fill with a subtle sweet smell. She continued to watch him as he went to a different panel and took several items from the cupboard before approaching her again.\n\n\"I have quite a few Valentine's day presents for you,\" he said in a soft voice. \"This, for want of a better word, is my weapon of choice,\" he held a long flexible length of leather that looked like a flexible ruler she had in her studio. \"I know the things you have read have possibly talked about crops, whips or even canes, but I find I have far more control with straps like this.\" He let her inspect it, then lay it over her shoulder as he undid the elbow cuffs so she could hold it and feel it. He took a deep breath as if restraining himself as she held it.\n\n\"History tells us that slaves of the past were driven by whips, but when punishment was due leather straps were used because, while painful, they were far less likely to do any lasting damage or break the skin. The edges were polished like this to ensure that,\" he ran his thumb over the obviously polished curved edge of the strap as she held it. It seemed an intimate action as they stood so close together. \"There are many other toys and equipment within the panels, but this is my preferred weapon, so to speak.\"\n\n\"Weapon sounds so sinister,\" she whispered.\n\n\"All of the equipment in here can be treated as such. They are created to cause pain, but they can also be used for pleasure,\" he explained. \"I am not going to sugar-coat anything that can and will happen in here for you,\" he said seriously, \"which is why I gave you time to explore and think about what you were asking of me.\"\n\n\"I didn't look,\" she admitted. \"I trust you and wanted to learn about it all with you, not by guesswork as I rifle through the cupboards.\"\n\n\"I see. That wasn't my instruction, though, was it?\" he took the strap from her hand and flicked it at her breast making her jump and look at him wide-eyed.\n\n\"No,\" she admitted, feeling the red line where the strap had connected with her skin heat up, if not overly hurt.\n\n\"Come,\" he took her to the panel that hid his collection from view. \"The paddle-like straps are made of stiff leather, and I use them predominantly for spanking the fleshier parts of your body,\" he squeezed her ass as if to make his point. \"The more flexible straps are made of a softer leather, and in some cases are double layered to make the intensity of their bite less for you. The edges are all polished to prevent the welting or cutting that can happen with straight edges. You might have noticed this if Ned ever used his belt on you?\"\n\n\"Yes,\" she admitted in a small voice as his fingers trailed over the now pale pink mark on the skin of her breast.\n\n\"I have an unusual collection here, it's a fetish of sorts that I rarely get to indulge in, perhaps after today that will change,\" he mused almost to himself. \"I have straps, tawses and slappers; each has their own uses and special qualities. Some are narrower than others; some have two layers of leather rather than one. The two-layer slappers are not as harsh as a single layer strap, for instance.\" He indicated each piece of equipment as he spoke. \"How are you feeling, now?\" he asked.\n\n\"Green,\" she said after a minute with a smile. \"Nothing you have said scares me, if anything it only makes me trust you more.\"\n\n\"Good, remember those safe words, I will start to ask you more often now,\" he instructed and guided her back toward the bed. \"Put this on,\" he instructed, letting a blindfold dangle from his fingers.\n\n\"Why?\" She asked before she could stop herself and felt the sting of the strap catch her other breast.\n\n\"Because I told you to, and in here we play by my rules, not just today but always,\" he said in a low dark voice. \"Put it on,\" he repeated his command.\n\nHis tone and forcefulness sent a shiver down Cat's spine, and without thinking she took the blindfold from his fingers and slipped the elasticated band over her head and down her face to rest over her eyes. She took a little while to scoop her hair behind her ears and make sure the band was comfortable and wouldn't move. Then she stood, straining to hear where Matteo was and listen for his next command. Cat squealed as she felt him slide one arm under her knees and the other around her shoulders and pick her up. She walked a few steps to the side of the bed and he deposited her on it.\n\nMatteo took a few moments to gaze down on the woman he loved, still not quite believing that she was here in this room with him and willing him to use her in the way he had craved since their first week together. He ran his hands over her breasts, playing with her hard-pointed nipples and listening to the small moans of pleasure she emitted. She was breathless, he knew, in part due to the corset, and almost reluctantly he began to slowly unhook the front, letting it fall away from her body.\n\nCat took a deep breath a moment before she felt his lips on hers, stealing her breath away again, his hands massaged down her body starting from her shoulders and lingering over her breasts before moving lower across her tummy and tracing the heart-shaped outline of her pubic hair. She heard him groan deeply as if the slower pace he was moving at was torturing him, and she allowed herself a small smile that she affected him in the same way his actions were affecting her.\n\n\"Roll!\" Matteo almost barked the command, and Cat rolled to her stomach as he pulled the corset away from her body. \"Stretch your arms forward as far as you can,\" he said firmly, and watched as her fingertips almost connected with the intricate latticework of the headboard. Using the short chains, again he connected her wrist cuffs to small almost invisible anchors in the headboard and smiled as she tested them.\n\nThe bed sagged as she felt Matteo's weight beside her on the mattress. He moved further to straddle her thighs, and she felt his hands touch lightly on her shoulders and she tensed as if expecting the strap to land rather than the continued soft touch of his hands.\n\n\"Relax, Cat. It's important to relax,\" he whispered into her ear, his hot breath caressing her neck. \"So much tension,\" he observed disapprovingly. He sat back up and proceeded to massage his hands gently down her back. \"Where are we on the scale?\" he asked softly.\n\n\"Green,\" she whispered softly.\n\n\"Good,\" he said softly as his hands glided over her ass. He continued the gentle massage until he heard her sigh heavily, \"That's it, Cat, relax for me.\"\n\nCat felt a small thrill flutter inside her. He was assuring her on some deeper level that he was pleased with her, that she was doing exactly what he wanted, and she took another deep breath and sighed, closing her eyes behind the blindfold and giving into the relaxing sensations without any thought to what would happen next. He continued to work his hands over her back and tickling over the sides of her breasts and ribs as he went. He paused now and again to work out a tighter muscle, but once satisfied he moved further down, kneeling just above her knees as his hands started to manipulate her lower back and hips.\n\nWith only a small amount of pressure, Matteo felt his way across her lower back and curled his hands around her hips. He spent time manipulating the little-used muscles there. It seemed as if she had tensed again as he moved his focus and he lifted a hand to smack her ass, leaving a soft pink handprint. She gasped, and her head came up momentarily.\n\n\"Relax, Cat, surrender to me completely,\" he murmured in a deep husky voice. He began to roll her hips in small circles and felt her go limp as she tried to comply with his wishes. He hummed in appreciation rather than praising her. It was not the first time he had asked her to relax, after all. He moved down again until he was kneeling on the edge of the bed and began to run his hands from her knees to her thighs.\n\nThe feeling was amazing with its teasing closeness to the centre of her being at that moment, and she began to fantasise as she felt his hands skate around her thighs to just touch at the inner side rather than just concentrating on the backs of her thighs. She felt his hands creep slowly closer but withdraw again, making her whimper at the denial.\n\n\"Spread your legs for me, Cat,\" Matteo murmured, trying to disguise the arousal he felt in his voice. He watched as she quickly complied, allowing him a clear view of her newly manicured pussy which seemed to tense before his eyes. \"Relax, Cat, I want to feel your body relax first and your mind submit to my wishes.\"\n\nCat felt the slow tormenting massage start again. She felt the hands move and knead her flesh, and as they grew closer to her pussy they didn't stop this time, and she held her breath, waiting for the contact she craved. Matteo very carefully avoided any contact, instead working his hands around to her outer thighs. Cat groaned in disappointment and she heard his faint chuckle, making her feel anything but relaxed at that moment. She took a deep breath and tried to concentrate on the movement of his big strong hands again and sighed as she let the breath out.\n\n\"Where are we, Cat?\" he asked.\n\n\"Green,\" she sighed with a large breath.\n\nMatteo saw her tense again slightly as he moved his hands up and across her lower back before resting them on the cheeks of her ass and kneading them, pulling them apart slightly to expose more of her to his view. Her legs moved slightly closer, and he moved his hands down to the crease between her thighs and her ass and gently spread them wider again.\n\n\"You're supposed to be relaxing, Cat,\" he murmured in an amused tone, and smacked her ass again, enjoying the pink stain on her lily-white skin.\n\nCat squeaked and felt the cool air once again caress her pussy, making her realise just how wet and wanting she was from all of his teasings. The pull on her ass cheeks stopped and she heard him groan before the mattress moved and she realised he had moved from the bed. She groaned in frustrated need as he stood there gazing down at her for long minutes. The blow, when it came, was light and not at all painful, but made her squeak and her head come up in surprise as she registered what had happened.\n\n\"Too light?\" Matteo questioned almost to himself.\n\nThe next blow Cat felt immediately as it landed over the first and made her hiss between closed teeth and lips.\n\n\"How do you feel?\" he asked.\n\n\"Green,\" she whispered breathily, the heat from the blow starting to warm her ass. Three more blows came on the other cheek, seeming to hit in the same spot and stinging her with their heat.\n\n\"Cat?\" he questioned.\n\n\"Green,\" she said in a whimpering moan.\n\n\"This is going to be more fun than I imagined then,\" he taunted her and let loose a barrage of blows across her ass and upper thighs, making her moan loudly. \"There's my Cat,\" he praised the louder moan that had escaped her lips. \"How are you feeling?\" he asked as he paused.\n\n\"Green,\" she moaned in a purring way as she settled into the heat and subtle pain of her ass and thighs.\n\n\"Ready?\" he asked, adoring the way she had answered him and enjoying the moment more than he could ever remember in the past. He saw her body tremble in anticipation and raised the strap again.\n\nThe first few strikes across the cheeks of her ass seemed lighter to Cat, as if just reheating the marks already imprinted on her skin. The warmth and sensations they caused were more than manageable, and she never thought to warn him by changing her colour of answer when he asked again. As he continued the increasing intensity of the strikes against her skin, they began to overwhelm her a little more as he worked the strap back down her thighs, giving her ass a small reprieve.\n\nHer head spun, and a deep, intense rush of adrenaline shot through her, firing her brain and numbing the burning hot sting of her ass. She barely heard the words as he demanded to know how she was feeling, and she groaned out green again, feeling her body react not only to the strikes of his strap but also his commanding voice.\n\nMatteo paused and ran his hands over her now red skin, feeling the heat radiating from it and hearing her soft whimpering as he squeezed the fiery cheeks of her ass. \"Unbelievable,\" he groaned and started to massage the colourful flesh of her ass again, revelling in her ability to take so much from him. \"Finally, you relax,\" he teased and let one hand drift down between her legs, seeing her try to widen them further as if begging for the contact he was offering. He rewarded her by sliding a finger through her slick lips to tease her for a minute.\n\nCat's hips bucked almost involuntarily as he finally touched her pussy. She felt the teasing finger travel through her folds and playfully teasing at her clit, making her let out a purring moan of appreciation and test the bonds that held her arms above her head.\n\n\"You're so hot,\" he murmured in a pleased light tone, and began to insert a finger into her, marvelling at how tight she felt like this and feeling her muscles clutch at his finger as if wanting to draw it deeper. He saw her stretch and try to lean back, pressing onto his finger and the hand wedged between her legs. \"No!\" he said forcefully, and smacked her ass with his bare hand, making her cry out. \"Relax, Cat,\" he soothed, and once again she settled and went limp on the bed.\n\n\"You would do well to remember that this is my room and I am in control of everything here, including you,\" he murmured darkly. \"Let's try this again, shall we?\" He reinserted his finger and curled it down, seeking out the rough area of skin within her that would push her over the edge.\n\nCat whimpered in high purring moans, and when he added a second finger to the first massaging her g-spot with force, she couldn't control the rock of her hips as she built up to what promised to be an earth-shattering climax. Once again Matteo withdrew his fingers, however, and smacked her ass even harder than before, making her cry out and bend her arms as if to move away from the punishment.\n\n\"Think carefully before you move another muscle!\" Matteo growled. \"How are you feeling?\" he asked, and watched her take a shaky breath as she thought about what was happening.\n\n\"Green,\" she whimpered uncertainly. She wanted the fingers invading her, and the sensations his harsh blows to her ass had given her were bearable. And although she might be dipping into the amber warnings, she knew she was still in green for the most part.\n\nGrabbing her feet, Matteo pulled her back down the bed and leaned over her, kissing just below her ear as he growled. \"My day. My room. My woman. My rules!\" He turned her face awkwardly and kissed her then in a hot deep messily wet kiss that left her with no illusions of his possession of her. He moved back down her body to kneel on the end of the bed again and grasped her hips in both hands, raising them and encouraging her to pull her knees below her to hold the position.",
        "Cat felt the muscles in her thighs and ass stretch and pull at her damaged skin, and she whimpered softly as she knelt with her ass high and her head low against the mattress where her arms were chained in place. Cat concentrated on these feelings of discomfort as he once again pushed his fingers into her and continued to massage her G-spot, bringing her rapidly back to the point she had been only minutes before. She desperately tried not to grind back against his hand, realising her mistake now, but as the muscles in her thighs and ass continued to burn she felt the uncontrollable little wobbles that told of her need to move.\n\nMatteo watched her carefully for all of the tell-tale signs that she was close to coming. She was panting heavily, and her body seemed to shudder as she tried to maintain her position for him. The sounds she made became increasingly higher pitched, and as he saw the muscles in her thighs tremble he withdrew his fingers, leaving her on the edge of what would have been an amazing climax. She cried out, her body moving to seek the renewed contact, and he smacked her, pulling her legs from under her so that she landed heavily back onto the bed whimpering softly.\n\n\"You purr like a sex kitten when you are highly aroused. I believe I will call you Kitten in here from now on. My Kitten,\" Matteo ran a hand over Cat's hair, petting her as she calmed down and her eyes focused again. \"What was it you said on the plane? There's something to be said for delayed gratification?\"\n\n\"But I was so close!\" she whimpered piteously.\n\n\"My poor little Kitten, you must be punished first before receiving the rewards of this room,\" he said with an edge to his voice.\n\n\"Punished?\" she asked, turning her head to the direction of his voice as he sat beside her on the bed.\n\n\"I had thought about spanking you and leaving it at that, but it seems you enjoyed that a lot more than I had considered you would,\" he grinned. \"Which I am more than pleased about, believe me!\"\n\n\"Why am I being punished?\" she asked, not truly sure why he felt the need to punish her so cruelly.\n\n\"Let's see. That particularly punishment was for ending our original agreement so abruptly and then running away to a place where I couldn't get to you to discuss the matter!\" Matteo growled. \"You have no idea how much you have tested my patience over the last month or so. I believe that if you think about it you will realise you deserve these punishments.\"\n\n\"There are more?\" Cat gasped.\n\n\"Kitten, you have no idea what you have done to me. You have practically unmanned me, and I am sure if you ask Ricco or David they will tell you how impossible I was to deal with while you were gone, so your second punishment will be for refusing to take my calls or see me while you were away at the Donati Gathering!\" He explained.\n\nCat was surprised by the tone in his voice that told her how angry he had been and possibly still was about that situation, but she also knew that they had both needed that time to get to where they were now.\n\n\"If I hadn't broken things off and gone away, we probably wouldn't be where we are now,\" she offered weakly. \"I wouldn't have discovered all things I needed to know, not just about you and your family, and you would not have missed me the way you did perhaps?\" It was a weak argument, and she knew she was pushing the boundaries of this room, but she needed to say it.\n\n\"I have been begging you to marry me since the first night we met, and I. Don't. Beg!\" Matteo said angrily. \"First you break it off to go and flirt with Peter Donati, and now that you have finally agreed to marry I can't tell anyone because you have put conditions on the engagement! You can talk to Roberto tomorrow before we announce our engagement, but you will wear a ring. Not a small, understated ring like you want, a ring that I want that tells everyone who you belong to. Not because I demand it, but because you love me and know that I need it!\"\n\n\"I do love you,\" she sighed softly, finally feeling her body subside into normalcy.\n\nMatteo seemed to run out of steam at the soft sighing words of love and moved over her, again restarting the long slow massage he had given her to relax earlier. Cat wasn't sure exactly when he had removed the pants he had worn into the room, but as he straddled her thighs she felt his hard warm cock rest in the cleft of her ass cheeks as he massaged her lower back and hips. She tensed with a small thrill of excitement running through her as she felt the length of it against her already heated skin.\n\n\"Relax, Kitten,\" he murmured, leaning over her and moving forward to whisper huskily close to her ear. The movement had his cock lightly dragging up her back, and she imagined it leaving a small trail of precum glistening on her skin.\n\nCat tried desperately not to think about how much she wanted to feel him inside her right at that moment, and she closed her eyes, trying to relax as he asked, but the feel of his naked body against hers was almost too much to bear without more than just the seemingly innocent massage he was giving her. She gave a heavy sigh, concentrating on his hands alone, and gave in to him, feeling her body sink deeper into the bed below them as her muscles seemed to melt under his hands. She felt herself drifting contentedly at the affection and care he was showing her. She understood his anger and the teasing punishment he had given her, and it was true what she had said, there was something to be said for delayed gratification, and she could handle it if there were more punishment like that to come.\n\n\"So wet and needy,\" he commented as his hand skated down over the lips of her pussy. Inserting one finger in her, he growled, \"And so tight still. You need to relax, Kitten!\"\n\n\"That is a direct result of all your teasing,\" she purred, feeling her arousal build again as he slowly moved his finger in and out of her tight hole.\n\n\"You're not pushing back at my hand?\" he asked teasingly.\n\n\"I understand your game now, and you asked me to relax,\" she purred softly, enjoying the new and different facet of their relationship within this room. She felt the finger withdraw from her and his body lean over hers again as Matteo undid the chains that held her in position on the bed. His arms caressed and massage her arms which had been held in one position for so long.\n\n\"How are you feeling, Kitten?\" he asked.\n\n\"Completely green,\" she sighed and gave a small smile. \"My hands and arms are fine,\" she wriggled her fingers to show him she spoke the truth.\n\n\"Ready?\" he asked, pulling her up into his arms and finally removing her blindfold completely from where it had become askew and left her with only a small glimpse of him and the brightness of the room, now she could see it all.\n\nCat nodded as her heart began to race and she looked into the dark pools of his eyes seeing her own need and desire reflected back at her. She accepted his soft kiss and admitted that even if it was another punishment she was ready for whatever he had in store for her. He stood and helped from the bed, standing her beside it. She rubbed her eyes and looked around the windowless room. Without the sun or a clock to gauge the time by she had no idea how long they had already been in here for, and she guessed it was probably still afternoon.\n\nMatteo led her to a waist-high padded bench on the other side of the room, and once again Matteo pulled her arms back and joined her elbows together behind her back as she stood perfectly still. He went to a panel on the wall and retrieved a metal bar and bent to her ankles, attaching them to rings on the cuffs before lengthening the bar and pushing her feet widely apart.\n\n\"Perfection,\" he groaned, finally standing in front of her. His hands cupped her breasts and he lowered his head to one nipple, biting it without much force but enough to make her whimper. His fingers worked at the soft flesh as his mouth continued to tease both nipples to hard points. \"Do you know what these are?\" he asked, tilting his head.\n\n\"Clamps?\" she questioned in return.\n\n\"Yes,\" he smiled, rolling her nipple between his thumb and forefinger. \"These are called clover clamps,\" he attached one to her nipple, and she found, to her surprise, that it was easily bearable. She looked down as he attached the second clamp and let the chain swing freely between her breasts. \"Clover clamps go on gently, but as I pull the chain the tension increases in the clamp,\" he explained and pulled the chain gently out from her body until he saw her grimace. \"How are you feeling, Kitten?\" he asked.\n\n\"Still green, just,\" she breathed, not wanting him to tighten them any further.\n\n\"I was hoping for amber,\" he smirked and gave the chain a small tug, and hearing her whimper dropped it again. \"Do we have amber?\" he asked in a deep husky voice. He watched as Cat bit her lip and nodded. \"Your nipples are more sensitive than I realised, how wonderful,\" he grinned. \"They will hurt even more when I remove them and the blood flows back into the clamped areas,\" he warned her.\n\nCat breathed deeply into the pain as tendrils flowed from the abused nipples into the rest of her breast and found its way to her tummy. She stood, having planted her feet solidly once the bar was in place and didn't move, only the rise and fall of her breath made the clamps move, and she tried to make her breath shallower to negate the movements.\n\n\"Valentine's day is such a romantic holiday. I thought candles were more than appropriate, don't you agree?\" he asked, retrieving the two candles he had lit earlier and bringing them closer to where she stood. \"Stay very still,\" he warned and captured her eyes with his own as he tilted the shallow glass bowl, slowly pouring hot wax over the skin of her breasts, making her gasp and whine in a long drawn out sound.\n\n\"How are you feeling, Kitten?\" he asked once both sides of her breasts were covered with cooling white dots of wax, making the skin around the dots of wax turn bright pink and feed his arousal.\n\n\"Amber,\" she looked up at him with teary eyes. She hurt, but it was bearable and becoming more so as the wax cooled and solidified on her skin.\n\nMatteo knew that it was the clamps that were causing her the most discomfort, and realising this was her first experience with them decided not to leave them in place any longer. He pulled the chain with a quick tug, making the clamps dig deeply into her before finally sliding free and making her cry out and rock in her stance. He moved to support her, his head lowering to capture and soothe a nipple in his mouth as he fingers gently massaged the other back to life. He spent long minutes going from one to the other as she whimpered softly, and when he finally stepped back he groaned deeply.\n\nThere were tear tracks in her make-up, and, where the wax had peeled and flaked away, large pink splotches marked her skin. Matteo was beyond turned on by the mere sight of her. So much so that he had to consciously get control of himself and breathe deeply.\n\n\"How do you feel, Kitten?\" he asked softly, reaching out to run a finger over her breast, flicking away some of the larger spots of wax.\n\n\"Slowly returning to green,\" she said, a small catch softly to her voice that tugged at his heart as much as his cock.\n\n\"So sensitive,\" he smiled as he played with her nipples again. \"I'm very happy about that,\" he lowered his head and dropped a kiss on each one, still trying to regain control of his need to stop the game and just fuck her.\n\n\"Please,\" she breathed softly, \"Please fuck me now,\" she begged, and every other thought about gaining control of his desires fled from Matteo's mind. He picked her up, turning her around and pushed her down over the bench she stood beside. He stepped behind her and thrust into her with a deep groan, stilling his movements for several minutes before pulling back, leaving only the head of his cock embedded in her.\n\n\"You were so eager to have me finger fuck you earlier that you couldn't control yourself from pushing onto my hand. Let's see how well do that now!\" Matteo demanded, planting his feet and watching carefully, as in the awkward restraints Cat tilted her hips and began to move back, impaling herself on his cock. He groaned deeply, and as she made contact with his pelvis he dripped wax onto her lower back, making her lurch forward again and turn her head, straining to see him and the candle he now held.\n\n\"How are you feeling, Kitten?\" he asked.\n\n\"Green,\" she replied automatically.\n\n\"You're not even trying then,\" he smirked. \"Push back onto me if you want to be fucked so badly.\"\n\nThe wax thankfully cooled fast in the small trickle that had run over the top of her ass and down her thigh. Cat began to push back again, thinking that if she were careful and didn't make contact with him he would spare her the wax.\n\nWhen he poured the wax this time, he noted that she didn't pull away quite so much before beginning to push back again. She caught on to his games fairly rapidly, he noted with a smile. He enjoyed her whimpers and jerky movements as he used the wax several more times before finally losing his battle against himself and pushing her forward and pumping into her hard and fast. Aware that he had denied her continually earlier, he used his fingers on her clit and felt her stiffen and arch her back against him as the first of her climaxes rolled through her body. His free hand gripped one of her breasts and held her in the strange hard arch as he continued to fuck her remorselessly, and he felt her shudder and cry out as a second climax hit her even bigger than first. He was losing his own battle against his orgasm, but he continued on; one hand working her clit and the other mauling her breast as he pounded her as hard as he could. The third climax rocked her physically, and as he lost his battle and his come pumped into her pussy, she went limp in his hands.\n\n\"Fuck!\" he cursed, and with unknown reserves he picked her up and staggered to the bed, freeing her from the bonds on her arms and legs. He felt her pulse and checked her breathing before climbing onto the bed beside her and cradling her in his arms until she came back to him. He smiled, she was everything he had dreamed she'd be here, and more, and it didn't matter what his father or anyone said, Cat belonged to him, for now, and forever.\n\nBeing careful not to disturb her, Matteo reached down beside the bed and opened a drawer, removing a bottle of water and opened it. He sipped while he contemplated her lying beside him with the red and pink marks showing brightly on her pale skin and contrasting to the stark white leather she wore and the linen that covered the bed. He groaned deep in his chest as his arousal began to grow again. He didn't think he could ever tire of having her like this. She stirred, her eyes fluttering open, and she tilted her head to smile up at him.\n\n\"Mmm,\" she stretched along the length of his body as he held her to his side. \"Can we do that again, please?\" she asked with a cheeky grin.\n\n\"I didn't think you liked being punished,\" he teased her.\n\n\"I can play your games if that is the payoff,\" she said eagerly.\n\n\"I'm more than willing in here,\" he touched his head, \"but we might have to wait a little while longer before the body is able to keep up with a sex kitten like you,\" he chuckled.\n\n\"Maybe I can help with that,\" she grinned, and then remembering where she was, and the dynamic expected in this room, she paused and fluttered her eyelashes at him. \"Please?\" she added.\n\n\"Drink some water and relax first, you were out for quite a while,\" he suggested and handed her the bottle he had been sipping.\n\n\"I was?\" she asked.\n\n\"You were,\" he confirmed. \"You passed out in the end, and I carried you back here.\"\n\n\"Oh, I don't remember,\" she frowned, trying to piece together the last things she remembered aside of the blissful high that carried her into oblivion. \"Thank you,\" she said contritely. \"That was amazing, and I want to know more, learn more, do more, with you.\" She leaned up and kissed him, letting the kiss deepen as his hand curled around her jaw and the back of her head. She placed the water on the floor beside the bed and began to kiss down his body, his neck, over his shoulder and chest. She stopped and tongued his nipples, rolling her tongue around them before moving lower.\n\nMatteo groaned. He was in heaven, and although he would never have let any woman take the lead in the past, he couldn't help but allow Cat the small privilege of showing how eager she was to continue having a dominant and submissive style sex life, if not entire relationship. He would punish her for trying to top him in here, of course, but then that was where the fun lay for them.\n\nShe wrapped a hand around the base of his cock and pressed her lips to the tip, smelling her orgasm still fresh upon him. She felt his hand guide her face to look up at him, and he nodded, silently knowing she would understand. He groaned again as, with her eyes locked to his, she parted her lips and rolled her tongue around the swollen glands at the head of his semi-erect cock. Her lips parted further and she took more of him into her mouth while her tongue fluttered along the sensitive skin under the head of his cock. Her eyes drifted occasionally, but she always brought them back to him, and he pulled another pillow behind his back as he sat up straighter to watch her every movement.\n\nCat took note of every reaction Matteo made during her exploration of his cock as she cleaned it with her mouth and tongue. She tried to remember the spots that seemed more sensitive than others, and each little mark and vein. She relaxed her throat and took him as deeply as she could and gurgled a little as he hit the back of her throat and she tried to swallow around his girth.\n\n\"Oh, fuck, Kitten!\" Matteo groaned and placed his hands on her head, twining them into her hair to guide her tempo as he wanted it. He felt her relax and go with his subtle movements. In time he pulled her head off his cock and pushed her further down and watched as she took first one then the other of his balls into her mouth. The whole time he hadn't had to use words to instruct her or guide her, they already knew each other intimately. This room was about a more and a very different dynamic where she would be obedient, and he would ensure her darker needs were met.\n\nMatteo pulled her up to straddle his thighs and watched as she carefully sank onto his cock and rolled her hips. He picked up the strap from the bed where he had left it earlier and flicked it at her bouncing breasts.\n\nCat gasped and whimpered as the strap landed partially on an exposed nipple. She worked that much harder as she fucked him, and he flicked over her breasts not too hard but enough to leave long red stripes and rid her of most of the remaining wax. She felt the heat seep into her body and the tendrils of pain that radiated from her nipples spread out, helping her climb toward yet another huge climax.\n\nMatteo dropped his hand and, taking careful aim, he spanked her with the strap, adding to the already red and bruised flesh of her ass. Cat whimpered and moaned, the combined sound once again coming out as a heated high-pitched purr as she rode him and ground down onto his cock. He alternated between the two areas and reached out to steady her as she arched hard, pushing down into him and shaking almost violently as she came again. The sight of her looking well used and trembling in ecstasy was enough for him to give into the milking muscles of her pussy. He came with her, pulling her down on top of him once her body had relaxed out of the hard arch, and he held her tightly, stroking her hair as she settled back down to earth along with him.\n\n\"I never knew it could be this good,\" she whispered. \"Thank you,\" she stroked her hand over Matteo's chest as she lay there listening to his racing heartbeat slow.",
        "\"You had an idea though, which is why you asked for a relationship like this,\" he challenged her.\n\n\"I was curious,\" she admitted. \"I didn't like to think that the highs I had with Ned were the only highs I would ever have,\" she admitted. \"Those didn't even touch these,\" she reassured him, \"and I'm totally addicted to you and this now. I want more, even now,\" she grinned.\n\n\"Well, you will have to wait, because we have plans tonight,\" he grinned. \"Besides, I'm only human and need to refuel between escapades with a nymphomaniac sex kitten,\" he grinned, making her blush beautifully.\n\n*****\n\nCat took her time luxuriating in the bubble bath Matteo had drawn for her before going to have a shower himself. She smiled as he brought her in a glass of champagne and sat up a little straighter.\n\n\"Thank you,\" she said softly and smiled.\n\n\"You're beginning to prune,\" he noted. \"Dinner will be ready in fifteen minutes or so,\" he warned. \"It might be time to think about getting out.\"\n\n\"But you just brought me a drink,\" she said petulantly, turning a small pout on him, making him chuckle.\n\n\"And I could take it away again,\" he threatened. \"Five minutes,\" he said sternly, and smiled as he saw her nod in agreement.\n\n\"I'll be out in five minutes,\" she said softly, and took a sip of her champagne placed on the marble edge of the bath.\n\nThe change in her since being in the white room was quite remarkable. She was playful and relaxed, and Matteo found he was enjoying every moment that he spent with her even more than usual. It wasn't that she wasn't relaxed and playful before, but she seemed more so now, happier, even, as if a weight had been lifted from her.\n\n\"You're different,\" he said, sitting on the edge near her glass and looking at her. \"Can you tell me what's going on in the complicated mind of yours?\" He asked carefully.\n\n\"I'm not sure what you mean,\" Cat frowned and considered him for a moment. \"I'm the same as always, aren't I?\" she asked uncertainly, concern clouding the happy smile she had only moments before.\n\n\"Different in a good way,\" he hastened to reassure her, seeing the comment cloud her mood. \"You seem more relaxed, happier somehow.\"\n\n\"I am,\" she agreed. \"You asked me to relax, remember?\" Cat laughed lightly. \"Can you hand me a towel, please?\"\n\nMatteo picked up a towel and helped her step from the bath, looking at her, curiously wondering how her mood could change so quickly from happy to almost sombre. Rather than handing her the towel, he gently dried her body being careful of her still pink breasts and slightly bruised ass.\n\n\"No one has ever made me feel so cared for,\" she said softly. Taking the towel from his hands and hanging it on a hook, she picked up her champagne and wandered into the bedroom to find the overnight bag he had packed for her.\n\n\"Lisa hung your things in your closet,\" he indicated a walk-through wardrobe behind the bed.\n\n\"My closet?\" she turned to look at him. \"I guess I will need somewhere to put things if you still want me to move in with you,\" Cat chewed her lip as she turned back around to look at him.\n\n\"If?\" Matteo questioned. \"I've been practically begging you to move in here for over a week. What is going on with you?\" He hated that he sounded frustrated with her.\n\n\"I know I'm being silly, I'm sorry. I'll be back to normal as soon as I get dressed,\" Cat promised.\n\n\"I don't want you back to anything, I just want you to talk to me,\" Matteo said, carefully schooling his voice to sound soft and loving.\n\n\"I don't know what you want to hear,\" she argued with him, falling back into defensive mode when she felt cornered.\n\n\"Forget it,\" Matteo said softly, not disguising his disappointment and hating that he had managed to ruin her happy mood. \"Dinner should be just about ready. Come out when you're dressed, please.\"\n\nCat felt the change in dynamic, and it hit her hard that she had done that. He'd surrendered once again to her rather than force her to talk when she avoided it. That wasn't what she wanted. She wanted the dominant Matteo who had given her such pleasure and made her realise that she could be more than the unlovable and unwanted girl from welfare alley. Even Ned had told her that her only use was a whore, and she had believed that he had loved her in his own way. Why else would he have taken her and her brother in when their mother died?\n\nYet dominant Matteo looked at her with love in his eyes, even as he caused her the painful pleasure that made her body sing. He had never threatened or belittled her while bringing her to earth-shattering climaxes. She had woken up in his arms feeling only his love and concern for her, and it was like a weight had been lifted from her, and for just a little while she had let herself believe that this could all be real and last a lifetime. For a little while, she bought into the fantasy that she could stop worrying that one day he would wake up and regret their relationship.\n\nShe wanted the dominant Matteo who looked at her with love and tenderness, despite knowing all the worst parts of her. She hated that he was so obviously disappointed in her and wished she could make it right again, but she wasn't sure how. This softer Matteo who gave her what she wanted all the time would only dismiss her concerns out of hand rather than take her fear of his family's disapproval seriously.\n\n*****\n\nMatteo wasn't ready to give up on the girl who had laughed and relaxed with him following their time in the white room. He wanted that playful younger seeming Kitten rather than the wary Cat who hissed at him when he pushed her on anything personal. They were going to be married, and it was time she proved that she trusted him completely instead of just paying him lip service. If she had to be made to talk to him, then he could do that. He had planned to leave his dominance in the white room, but if this was what he needed to do to get to the bottom of her moods, then so be it. He retrieved her collar from the white room and put it on her place setting at the table.\n\nHe had almost given up waiting for her and gone to find her, thinking she had run away to hide from him again, when she appeared in the dining room. She stood uncertainly and looked at him, and he indicated the chair opposite to where he sat with a wave of his hand.\n\n\"Sit,\" he commanded. He watched as Cat sat and looked at the collar in front of her. \"You want that, I know you do,\" he said stiffly. \"Put it on now,\" he instructed without any of his usual manners. He watched the indecision cross her face briefly before she picked up the collar and fumbling with the clasp placed it around her neck. \"Stay!\" He commanded once it was in place, and left the table to get the fresh seafood platter that Lisa had prepared for them earlier.\n\nCats eyes widened and her tummy gurgled as she took in the sumptuous platter. She reached forward to take a small piece of crab that sat on the edge of the dish and paused as Matteo's commanding voice sounded again.\n\n\"Do not touch!\" he snapped firmly and watched as she pulled back her hand, looking at him questioningly. He slowly filled their glasses with champagne before sitting again and looking at her silently.\n\n\"Happy Valentine's Day,\" he lifted his glass and saluted her. She lifted her glass and did the same. \"Thank you,\" he said, \"For one of the most wonderful Valentine's days I have ever experienced. Until this moment, however.\" he paused and looked at her, narrowing his eyes. \"You told me when I gave you that collar that you trusted me completely and would surrender to me in all ways. Was that a lie?\" Matteo questioned her, sounding stern.\n\n\"No! I wouldn't lie about that!\" she touched her hand to the collar around her throat.\n\n\"I am finding that hard to believe if you can't tell me what made you first so happy and playful and then what scared you so much you argued with me yet again. If we can't trust each other absolutely then the white room has to be out of bounds,\" Matteo threatened. \"I need to trust you to be truthful and tell me when things are going too far. How can I do that when you can't be truthful with me in all facets of our life together? Begin with what made you so happy and playful, both in the room and when we left it,\" he commanded. \"I loved seeing that uninhibited side of you more than I can express. If you talk you can eat,\" he compromised.\n\n\"I'm not sure I can explain it,\" she said quietly. \"Relief, maybe?\" she began finding it easier to deal with the dominant Matteo's demands than the softer caring Matteo who had seemed so disappointed with her and she knew would not push her too hard.\n\n\"Explain why you felt relief,\" he demanded and began serving himself from the platter, placing some of the crab meat she had reached for earlier on the plate in front of her.\n\n\"It's hard to explain,\" she said quietly, popping a small piece of fresh crab into her mouth.\n\n\"Try. I'm not going anywhere until I get answers,\" Matteo continued using the demanding stern tone with her. \"And neither are you, even if I have to tie you to the chair!\"\n\n\"I thought I was broken,\" she admitted. \"I grew up knowing I was unwanted and unloved. Even David was cruel at times, though I know he regrets those times now. I believed that Ned loved me when he took us in and made me his girlfriend. I believe I deserved everything he did and said to me. I believed I was that girl. The skanky low-class mole that ended up either involved with the gangs and petty crime in the area or turning tricks as a whore. Then I met Frankie, and he took David under his wing and helped me believe I could want and have more than the life my mother and neighbours had. Ned kept coming back to claim me, though, and I knew that I would always be that girl. That's how I met your father and Ricco. You know the rest of that story.\"\n\n\"I do,\" he said slowly. \"That doesn't explain the relief and happiness.\"\n\n\"Ricco was sweet and good to me. He gave me a glimpse of a life I had only dreamed of, but in my fantasies I wanted more, craved the violence and pain that went along with the pleasure I derived from the way Ned treated me at first. I could live without it though, because it felt different, good, but different. Then I realised we never went out anywhere public and he hid me and our relationship from the world. All those horrible feelings of being unlovable came back, and I didn't want that, especially with the nice and soft sex which did little for me. I knew then that I was broken, so much so that no one would ever love the real me, and I needed to protect myself from loving them,\" she paused and sipped her drink.\n\n\"Then you met me and told me you were over men and relationships in general,\" he added to her story, letting her eat. \"I can see why the no strings attached contract appealed to you then, but your feelings got in the way and you broke it off to protect yourself,\" he showed his understanding of the events following her break up from Ricco.\n\n\"I couldn't stay in Melbourne with Ricco so close. I kept letting him back into my bed, just like Ned,\" she sighed. \"As I said, I thought I was broken.\"\n\n\"Past tense?\" he asked.\n\n\"I didn't understand about dominance and submission, or that it didn't have to be an abusive relationship to have that sort of... pain. I didn't understand why the Kept would choose that life. I didn't understand that what I craved was the love I saw in your eyes today as you continually asked how I was feeling and explained what was happening. For the first time I didn't feel broken for craving that sort of pain... and getting off on it.\"\n\n\"You're not broken,\" Matteo said, stepping out of character and taking her hand. \"You are perfect just the way you are, and I love you. Your past doesn't matter to me, only our future together matters now.\"\n\n\"We can't ignore my past, and your family knows all about it, everything, including Ned and my mother,\" he sighed. \"I don't belong in your world. What happens when the press finds out that your wife used to live with a criminal? You know they can twist things,\" the anxiety came back to her voice. \"My past will matter to your family. That's why Ricco kept me hidden, or at least part of the reason.\"\n\n\"I don't think you understand how far our influence extends,\" Matteo said honestly. \"There isn't a media outlet in the country that would risk slandering a Vitali. My family, the ones who know you, think you are a remarkable woman for not being broken by your past. As do I.\"\n\n\"I'm not broken, am I?\" she touched the collar, feeling the softness of the leather. \"For wanting this?\" she whispered.\n\n\"No more than I am broken for loving that you want to wear it and be mine,\" Matteo smiled. \"Eat something!\" he commanded, returning to his stern tone. He considered her as they ate and continued to discuss her concerns.\n\nBeneath the straight-talking tough girl attitude he had first encountered was a girl who wanted romance and a strong partner who would protect her from the uglier side of life and the past she was desperately trying to escape. He realised she not only wanted the feeling of that collar around her neck in the white room, or when they were intimate, but she needed that sense of control in her life every day. She needed the security of knowing she was loved and protected after having no one to rely on but herself for so long.\n\nHe, too, had discovered a different side to himself. Where he had believed he needed the challenge of a strong woman and the thrill of subduing her, he found Cat's need to submit to him captivating on so many levels. The power and control she offered him today, once he had said those three little words, was mind-boggling, not to mention surprising. He had never felt the way he felt about Cat before, and it made the years of heartache he had suffered after Nik's betrayal seem like such a waste of time.\n\n\"I love you,\" he said during a lull in the conversation. \"I love everything about you, where you came from, your exes, your talent and your need for my dominance. There is nothing my fathers could say that would make me change my mind about marrying you.\" \n\n\"Would you be happy if they made you chair?\" she asked, admitting another of her concerns.\n\n\"Fine,\" he groaned. \"There is a chance, a slim one, but a chance that could happen. We have a solid trusting and loving relationship that could survive the changes we would have to make to accommodate that. Not all leaders live the way the Donatis' do. We would have options if that ever happened.\"\n\n\"You make me believe that it could all work out in the end,\" she said softly. \"I would still like to talk to Roberto before you tell anyone, please? You should probably talk to Ricco before the others as well,\" she suggested.\n\n\"Believe it, Kitten, because it's going to happen,\" he said with certainty. \"The sooner, the better, as far as I am concerned.\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dominant/submissive",
        "cuffs",
        "straps",
        "fantasy",
        "valentines day",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-12"
}