{
    "title": "TT Spalding - The Preston Case",
    "pages": [
        "Continuing adventures of TT, and again, just for fun.\n\nThanks to Angel Love for her editing. Any mistakes are probably mine since I continue to tinker after editing.\n\nTT Spalding - PI\n\nThe Preston Case\n\nI was devastated! I was sitting in my office, looking out the tiny window that faced another tiny window in the brick wall of the building next to mine. That stark, blank wall mirrored my emotions. I had never been so low. Why, you ask? My hero, that immortal writer of mystery novels extraordinary, Mickey Spillane, was dead! The creator of that wonderful character, the one that I modeled my life after, Mike Hammer, was dead. Dead, as in stiff and planted in the cold, cold ground. The injustice of it all was too much for me. I had nothing left in my life. Gone! Just like that! In his prime and only 81 years old. There was no justice in the universe!\n\nNo more \"It was easy\" comments from Mike Hammer, his PI. No more sexy dames slinking into his office and no more nasty comments from the cops he always was one step ahead of. With Mickey gone, Mike was no more. I didn't think I could go on. As I sat there in my dark office, the shade over the door pulled down, an open bottle of warm beer in my hand and a tear in my eye, I heard a pounding on my door. I tried to ignore it but the pounding just intensified. After enduring it as long as I could and getting no response to the repeated, \"Go away!\" yells, I got up and walked slowly over to the door, slid the lock back and yanked it open.\n\n\"What the hell are you doing? I've been calling you for the last hour and I keep getting your voice mail. What's wrong? Why isn't the office open? You look like hell warmed over.\"\n\nThat was the voice of my loving wife, Maggie, the woman who was my life partner and my business partner. She was also my secretary and girl Friday but right now she was my worst nightmare. I couldn't tell her how badly I felt and how much I wanted to just curl up and get drunk and maybe slit my wrists. She wouldn't understand. She would want me to open the office and make some money so we could go on vacation. Vacation, when my life was over!\n\nI told you there was no justice in the world! As she followed me in, she looked around, turned on the lights and unlocked the file cabinets. She slid behind the desk she used and turned on the computer. Once she had things to her liking, she got back up, went to the door, raised the shade turned over the sign to 'Open', and walked out to fill the pot with water for coffee. She didn't even wait for my answer. My world had collapsed and she was fixing coffee! How could she be so insensitive?\n\nI sat back down with my warm beer and my sorrow and tried to find again that angst that I was nursing so successfully before this unwelcome interruption. As I again began to sink into my oblivion, Maggie came stomping back in, slapped my feet off the desk and slapped me as well. 'Smack' across the mouth! Not really hard, but Jeez! Did I say insensitive?\n\n\"Get your lazy ass moving. We have Mr. Preston coming in less than an hour. Do you have your notes? Your planner? Do you have anything?\"\n\n\"Mickey is dead woman! Have you no compassion? No sensitivity? My hero! Gone! How do I go on?\"\n\n\"If you don't get your fat ass up and get busy, I'll be the one that's gone! You promised me a vacation and Mr. Preston is the key to that vacation. He's rich, he's desperate and we can take him for enough to go to somewhere nice. Now, get your ass up and forget Mickey!\"\n\n\"Hey! Maybe we can go on vacation to Murrell's Inlet. That's in South Carolina. That's where Mickey lived. Can we go there? You could get a room up in Myrtle Beach and lay around on the beach and shop while I visit his home?\"\n\n\"Yeah, sure, I can do that. I'll also pick up a couple of young studs at the beach and then I won't give a crap where you go. You can do your thing and I'll do mine. How would that be?\" \n\nThat threat was too real and too much in the realm of possible that I changed my mind real quick. Maggie was a real looker, a peach, a real doll. (Damn, I had to learn to talk like a real guy again). Anyway, she so much as wiggled her finger at another guy and he would follow her anywhere.\n\n\"I'll get ready for Mr. Preston. You're right. We'll go to Hawaii like we planned.\"\n\nSo, I pulled my notes and began to fill out the log. That's where I put all of my notes and thoughts about my clients. That's where my book would come from. The one I would now dedicate to Mickey Spillane. I thought back to Mr. Preston's visit.\n\nHe was well dressed, pricey threads, indicating money. As a matter of fact, he smelled of money. Old money, the kind that you inherit, not the new kind. He came from a wealthy family and it showed. His daddy was probably a big shot of some kind. I didn't like him from the start. Too smug, too self assured. Probably had himself a trophy wife that he couldn't keep satisfied and she was stepping out on him. Poor sap probably didn't have the balls to keep a good looking woman home where she belonged.\n\nNot bad, but my heart wasn't in it. Mickey wasn't looking over my shoulder any more and I just didn't have the will to go on. Well, I had no choice but to take some of his money since Maggie was showing him in. I stood up and held out my shaking hand.\n\n\"Mr. Preston. Good to see you again. We have a couple of things to go over and the contract to sign before we can get started. You've met my wife? She'll be sitting in to take notes and get the paperwork started.\"\n\nMr. Preston was a tall, thin man with a sharp chin, small eyes and big ears. He looked to weigh less than 140 pounds soaking wet and if it weren't for the clothes he was wearing, he wouldn't attract a woman's attention even if he was the only man around. At least that's what my opinion of him was. I didn't know about Maggie since she was still glaring at me, and paying him no mind. I decided to get on with it to distract her.\n\n\"First, can you tell me again why you think your wife is cheating on you? Patricia wasn't it? Why do you think Patricia is cheating on you?\"\n\n\"My wife is a very beautiful woman Mr. Spalding, and she attracts a lot of attention. There have been several men who made it no secret that they would like to get to know her better. But, to my knowledge, she had always refused to allow herself to be compromised. It is in her financial interests not to be compromised. But I have begun to see some changes in her lately. She is suddenly very interested in my whereabouts. She has been going out during the afternoon, supposedly with a girlfriend. She often fails to answer the phone at home when I am traveling and she seems to be shopping much more often. She was never that interested in shopping before.\"\n\nI watched his face as he spoke about these things. I got the distinct impression that he cared less about what she was doing and more about whom she was doing it with. It was also clear from the way he spoke about her that he had little feeling for her. If my impression was correct, she was a trophy wife only for show. He had no love for her. I also had the distinct feeling that he might be gay. But, that was neither here nor there. \n\n\"Well, we can certainly find out for you. Our standard contract is $5,000, with a deposit of $1,000 up front. All funds to be cash or cashier check. No personal checks accepted. The way we work, we will do a full report for you with pictures and videos if possible. If the report is acceptable, you pay us the balance of the $4,000. If you are not satisfied, we destroy the report and you only pay us $2,500 additional. We normally will have results within three weeks, unless your wife is less active than most.\"\n\nNow, if you have followed any of my past adventures, you may be questioning the $5,000 and such. Well, he's rich, I didn't like him, he gave me the creeps, and his wife was certainly not getting any loving at home. So, that was worth a penalty. And since I was in the midst of a deep depression due to Mickey's passing, I was pissed. He was just in the wrong place at the wrong time. \n\n\"Your terms are acceptable. I would like to have pictures and videos as well as the report. I have $1,000 cash as requested. I gave your wife the envelope with the cash and the information you requested. I believe we can sign the paperwork now. I would like you to complete this assignment as soon as possible.\"\n\n\"Excellent. We'll start today. Maggie will walk you out and you can sign the contract. Thank you Mr. Preston. Maggie? Will you see Mr. Preston out?\"\n\nMaggie's glance back was answer enough. I would certainly hear from her tonight but what the hell. I decided now was as good a time as any to call Polly. It was her turn. I offered her the standard $800 and she accepted. She would be in later today to get the information and start the surveillance. \n\nWhen Maggie came back in, she told me that all was well, the cash was in the box and if things went well, we were off to Hawaii. The extra two grand was enough to win me back some loving. When I reminded her of Murrell's Inlet, however, she gave me a nasty smile and suggested I do something with my body that I believe is impossible.\n\nWhen Polly came in, I gave her the information and we talked briefly about the Missus. Polly wanted a couple of days to just follow her and then decide what to do. I agreed, told her we had an extra week anyway and left it in her capable hands. When she left, I called Bruno. \n\nNow you know Bruno is the best mechanic I had ever worked with, but he was also a hopeless romantic. I told him about the case, let him know that Polly was on it but asked him to do me a favor and check into Mr. Preston. There was something about him that bothered me and I wanted Bruno to see what he could dig up. I offered him the standard $800 and he accepted. We were in business.\n\nOver the next week, we closed two cases of industrial espionage and collected a tidy profit of just more than $12,000. All but $4,000 went into the business fund and it would buy a much needed high speed camera, a couple of high frequency bugs that couldn't be jammed and a new computer for Maggie. Her old one was making funny noises. The other four grand was part of our vacation fund. A good week, offset by Mickey's passing. Well, always better some good with the bad. \n\nIt had been eight days after Polly started that she came in. She stopped to talk with Maggie and then came in to my office and plopped down in the soft chair. \n\n\"Well it took me three tries to get it straight but I did it. Seems she was going out with a female friend a couple of times a week. When I followed them, they went shopping, went for lunch and then went back to the friend's place. She stayed for a little while and then drove home. Nothing unusual. Always left her car at the friend's and they took the friend's minivan shopping. Just two chicks out for a good day of blowing hubby's money.\"\n\n\"So, there's nothing going on?\"\n\n\"Hah! That's what I thought until I noticed something. On the last visit to the friend's house, hubby's car was there. The friend's hubby, that is. While he was home, the visit turned into an afternoon. At the end of the afternoon, the Missus left, hubby went back to work and the friend waved both goodbye at the front door. Dressed only in a robe! What about that?\"\n\n\"You aren't suggesting . . .?\"\n\n\"Damn straight. Well, straight may be the wrong word for what's going on in that house. But, just so you know, I'm going in with cameras and video. I'll start today or tomorrow. Since I know their schedule now, I know when. Now I just need to see what. Have results for you by end of week.\"\n\n\"Good girl. I'm so proud! Just like a proud poppa. Did you know that Mickey's dead? Died in his bed, at home. Maggie won't let me go see his house. She wants to go to Hawaii instead. Woman is cruel. You wouldn't be cruel to me would you Polly?\"\n\n\"Don't even start with me! Maggie would send me to a nunnery! I'm leaving 'pops'.\"\n\nAnd she did. Leaving me with my memories and my sorrow. Damn! It's been weeks now since Mickey left us and my grief still knows no bounds. \n\nTwo days later, Bruno called in to tell me he had the goods on Mr. Preston and he was getting pictures. When I asked what the 'goods' were, he just laughed and told me to wait till he could show me. Bruno never let me have any advance info. Cruel man!\n\n\"Will I like it?\" I asked \n\n\"You'll absolutely love it boss.\"\n\nSo, now all I had to do was wait. Maggie was making reservations for our vacation while I tried to find a reason to live. I just couldn't find my rhythm again and I was down in the dumps most of the time. \n\nAt the end of one particularly bad day where I had almost lost it during an interview with,\n\n'a long legged dame with lips that just dripped honey and wine, hair that fell like spun gold down to her shoulders and a body that promised a good time with a quick roll in the hay,'\n\nmy wife locked up the office, took me by the hand and led me into the store room where she unzipped my pants, raised her skirt, bent over the table and told me to make her a happy woman. Well, that was enough urging even for me and I let her have it. I worked my frustrations off on her and she seemed to enjoy it tremendously since I heard her singing the theme song from 'Mike Hammer' through it all. Damn good way to celebrate Mickey's long life. As I came, I bid farewell to Mike Hammer for the last time. Woman certainly had my number!\n\nIt had been two weeks and three days since our Mr. Preston came in and both Polly and Bruno had reported their results. Both had done their usual fine job and Maggie and I were just putting the finishing touches on everything. \n\nMaggie read the report on Mr. Preston and asked, \"How do you think we should handle this?\"\n\n\"I want to call him in tomorrow and let him see all the evidence. Then I want to ask him what he intends to do with it. I'll tell him we are available for expert testimony if he needs us, just to see if he's going to go to court. Once I know he is going to go for the divorce, we can call Mrs. Preston and give her the evidence we have on him. It's a freebie for her since I don't like him much.\"\n\n\"That sounds like a good plan, except we should do it together. You call him in and I'll call her in. We can do it like we usually do, get both in at the same time and let them go at each other. That's more fun, don't you think?\"\n\n\"Yeah, it is. I'll dedicate it as a tribute to Mickey. Let's do it.\"\n\nSo, at 4:00 p.m. the next day, Mr. Preston was sitting in my office, where I presented him with the evidence Polly had put together. I've always found it best to just give it to them in straight old English. \n\n\"It seems, Mr. Preston, that your wife is having an affair with a married couple. The woman, Helen Conyers, is a friend of your wife's. They often go out shopping together but on a few occasions, they returned to her home where Wesley, her husband was waiting. They then enter into a threesome, if you will. As you can see from the pictures, it begins with your wife and Helen getting naked and then performing oral sex on each other. Meanwhile the husband jerks off watching them. As you can see, that's clear in this picture here, and here. Then he moves over to your wife, and while she is on her hands and knees with her face buried in Helen's crotch, he fucks her from behind. It all takes place over a few hours. They change positions, as you can see from this picture, and from this one. It varies, but in all cases he fucks both women at least once and they go down on each other several times. Mostly while he recovers. I will say that Mr. Conyers has a lot of stamina! I'm sorry, that's not funny to you, I'm sure.\"\n\nMr. Preston was just sitting there, stunned as he looked at the pictures. There were a lot of them. She also had one CD from which she took all of the stills. How Polly got it, I wasn't sure and I never, ever asked her. I just didn't want to know. But get it she did. And clear! Great pictures. Nothing really fancy. Not necessary.\n\n\"I hope my language didn't offend you but I like to give you the straight scoop. No use sugar coating it with fancy words. Is this satisfactory Mr. Preston? Is there enough evidence for you to use?\"\n\nIf his face was any indication, he was beside himself with joy. A huge grin split his ugly face and he was almost drooling. \n\n\"This is more than enough. With these, I can threaten to take her to court and she'll give in. She won't want this to get out. I'll threaten to put it out if she doesn't agree to a no fault divorce under my terms! I've got her! I can set any terms I wish!\"\n\nWith that, he pulled out the cashier's check for the balance of the $4,000 and handed it to me without looking up from his evidence. He was really fascinated by it and I watched the slow smile spread across his face. Somehow, it was not a good smile. It was downright evil. I took the check, scanned it to be sure it was valid and put it in the lock box. Now I could go ahead.\n\n\"Why do you need this just to divorce her? This is a no fault state so you don't need a reason.\"\n\n\"Yes I do. The court would give her several million dollars if I just divorced her for no reason. But for infidelity, the pre-nup is active and she'll get nothing. Nothing at all!\"\n\n\"So it is mostly publicity she is afraid of? What about you? Wouldn't it hurt you if it got out?\"\n\n\"By all means, it would. My father would never turn the business over to me if he knew I couldn't control my wife. And there are certain other things he doesn't know that are problematic for me. He would give everything to my sister, the bitch! But Patricia's not smart enough to know that. Neither is her cheap-assed lawyer.\"\n\nSo, I had what I needed. Maggie was at the same time talking with Mrs. Preston next door in the conference room. I excused myself for a moment, knocked on the door and waited until she came out. I gave her the word that he definitely didn't want anything to go public so to use it as she saw fit. She gave me the thumbs up and we went back in together. \n\nMrs. Preston was sitting there, looking a little lost. Maggie introduced me and told her that things were looking up. She had a story of her own to tell Mrs. Preston. \n\n\"Patricia, did you know that your husband hired my husband to follow you to prove you were unfaithful? He is right now next door, reading the information about you and the Conyers. He has pictures of you and Helen and Helen's husband.\"\n\n\"Oh my God! You can't let him get those. You don't understand. He'll divorce me and I'll get nothing. Not one damn thing! Oh my God! I'm dead.\" \n\n\"Well, maybe there is something that you can do. Did you know your husband was a homosexual? That he was gay?\"\n\n\"I suspected he was since he only made love with me a few times. That's why I fell into the relationship with Helen and Wesley. She told me how beautiful I was and that she found me sexy. We began our affair with each other and then, after I fell in love with her, she brought her husband into it. I resisted at first, but finally gave in. I still love Helen but she wants Wesley as well.\"\n\nShe wiped a tear from her eye and continued.\n\n\"Most of the time he just ignored me or let me make a fool of myself trying to seduce him. He wasn't interested. And I'm not used to that. After all, look at me! Don't you think I'm sexy?\"\n\nSince she looked at me as she said that, I continued with the story. \n\n\"Very! But I'm not the one cheating on you. He is. And, this is very important, he is very afraid of this getting back to his father. As a matter of fact, he hired us to get the information on you so that he could get you to give him a divorce under his terms, rather than be exposed. But, he won't expose you. He doesn't want this to come out either. He's afraid of his father, his sister and the chance that he won't have control of the family business. So, I think you can use this.\"",
        "\"What do you have?\"\n\nMaggie took over again and showed her the report Bruno had provided.\n\n\"Pictures of Mr. Preston and a man named Charles Knickerson. Charles is much younger and Mr. Preston has set him up in an apartment on the West side. We have receipts for the rent payments made by Mr. Preston, pictures of Mr. Preston and Charles in that apartment, pictures of them engaging in oral sex, anal sex and manual manipulation of each other's genitals. This should be enough to convince him to divorce you with a very nice settlement.\"\n\nMrs. Preston reviewed the pictures and slowly began to smile. She had him! And now she could divorce him and take some of his money and get on with her life. If she could get a million or two, she and Helen could discuss the future, maybe without Wesley in the picture. \n\nMaggie and I got up and quietly left the room. I told her to wait while I went back in to be with Mr. Preston. I told him that I had some things waiting for him to sign in the conference room and asked him to follow me. He stood, still looking at the pictures he held in his hand and walked out with me. I moved to the door of the conference room and opened it for him. Still looking down and smiling at the picture in his hand, he walked in. I pulled the door shut.\n\nAs Maggie and I stood there, we heard the first shout of anger and then it was bedlam. Yelling and screaming and slamming of chairs. I think I heard one of the ashtrays hit the wall with a bang. A chair was thrown and I listened for a crash but it seemed to come out of it unscathed. Well, I could afford a chair or two. It was really going on. I smiled at Maggie.\n\n\"Well, was the extra $800 I took for Bruno worth it? Was it not brilliant of me to hire him to get the goods on the Mr.?\"\n\n\"You are a genius. I have to admit. Just listen to that. Isn't love grand?\"\n\nWe had a good laugh and walked out with our arms around each other. It was certainly a good way to end a bad couple of weeks. My world had almost collapsed but this certainly made it worth while. I kissed the top of Maggie's head.  \n\n\"Did you get the tickets?\"\n\n\"We're booked all the way, babe.\"\n\n\"When do we leave?\"\n\n\"Tonight. Everything is taken care of. Bruno and Polly's checks are in the mail, the office is closed and the answering machine recording is in place. No more jobs till we get back.\"\n\nAs Maggie went home to pack our bags, I sat down in my chair behind my desk and considered my future. I love what I do and I always tried to do it as my hero would have expected me to do it. With grace and dignity, but always with humor. I followed the teachings of my mentor, Mickey Spillane. Now that he had passed on to that great guild of deceased writers in the sky he would be remembered. \n\nBut what about me. Do I go on? Do I continue in his footsteps? My cases were simple compared to his. My characters, Polly and Bruno, were just a couple of kids with stars in their eyes and digital cameras in their hands. Neither carried a gun, just a microphone. They didn't get hit over the head with a sap, just yelled at by a disgruntled building super or suspicious doorman. They were gentle and kind and wouldn't hurt a fly, but they would gladly do their job just to find some justice for someone. But they were great and I loved them to death. \n\nMickey had it good and I would miss him, but I had it better. I had Maggie. \n\nWith a smile, I closed my log, turned off my computer and went up to be with my wife. Hawaii, here we come.\n\nMaybe to be continued . . .  "
    ],
    "authorname": "thecelt",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-the-preston-case"
}