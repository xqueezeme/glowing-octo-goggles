{
    "title": "A Slave to the Servants Ch. 36",
    "pages": [
        "Hello Lit!\n\nThanks to everyone for the feedback and comments, Steve and I both read them! I will admit to still being behind on feedback via email. I'm catching up, just slowly! Thanks to all for the constructive advice about clothes vs cloth - oops.\n\nA word of advice to aspiring Lit authors - don't procreate, they are s-o-o-o-o time consuming! In a good way of course, I've had a couple of requests for suggestions - that's the best one I have!\n\nMany thanks to Steve150177 for his support and help. He keeps me on track.\n\nThe next chapter is due August 15 or August 16, I hope! My little girl doesn't appreciate computer time. Can you believe that?\n\nPlease vote and comment!\n\nMycah's family slept until the midday meal. They woke up as Abram's Brother, Ruse, came by with a tray full of food. The smell of something to eat woke them up right away.\n\nI ate with Mycah's family and they seemed content. The Great Harmonious Spirit still had them because they were markedly calmer than they should have been. The Healers came and checked their wounds and they didn't mind at all.\n\nIt was abundantly obvious the moment the men deemed the camp safe again. The Great Harmonious Spirit released its hold and I had five edgy boys that wanted to do something. Actually, they wanted to do anything other than sit quietly on a warm slab in the infirmary.\n\n\"Mama, can we go look for aliens?\" Niah asked crawling onto my lap, he had big brown eyes that pleaded with me.\n\n\"Can we go ride on the transports again, Mama?\" Aiden asked, wrapping a hand in my hair and pulling at it roughly.\n\n\"I want to fight!\" Jonathan demanded bouncing up and down.\n\nThe children explained to me in detail everything they wanted to do. They wanted to go back outside and see the trees. Mycah wanted to learn to swim. Rees wanted to know what Damien and his Brothers were doing. Niah was curious about the parts of the camp they hadn't been in yet. They seemed impossible to organize like this and I couldn't answer all of them at once.\n\n\"Stop jumping around and sit down!\" I ordered them, watching Aiden and Jonathan start to roughhouse. \"You'll tear open the wounds on your bodies. You need to be still, right now!\"\n\nOne would listen for a second, but I couldn't get all five of them organized. I'd never been a \"parent\" in the real sense. Certainly not to five boys at once. This was very new to me.\n\n\"Speak to the lead Brother,\" the woman with the neck wound gruffly informed me when it became obvious I was losing what modicum of control I had over them. \"The lead Brother will tame the others. They aren't old enough to focus their thoughts, yet, but you can help them do that.\"\n\nI spoke to Mycah and looked him in the eye. It seemed to settle all of them. The questions and complaints now came from just one little boy. I could handle that better.\n\n\"You don't have clothing,\" I reminded Mycah, pinching his naked thigh, \"so you can't go outside. Your Daddy and his Brothers aren't here to teach you to swim. You have to rest here until the Healers tell you it is okay to go play with the other little boys.\"\n\nRestless did not begin to describe the five of them. I worried they'd pull out the sutures the Healers had put in. I begged them to be still, but they were bored and activity was normal to them.\n\nThey needed to be amused, so I told them stories. Jack and the Beanstalk, Cinderella, and Peter Rabbit. The stories meant nothing to them.\n\n\"Do you boys know where aliens come from?\" the woman with the neck wound asked pointedly, turning her face slightly toward us.\n\nMycah explained they came out of burning hunks of metal, which is what the boys had seen. He was quite sure of that. The aliens lived in burning ships that exploded on the ground.\n\n\"They come from other planets. Places very far away from here. At night, way up in the sky, you can see their home planet. It glows faintly red,\" the woman explained.\n\nThe boys didn't believe her, but this was a story they could get into. All my stories had been about things they'd never seen and could not imagine. When the woman talked about the aliens and the night sky, they had a frame of reference.\n\nTyle's family came by and quietly undid the ropes binding the large woman to the slab. They didn't interrupt her as she spoke to the little ones about other planets and different alien beings. She knew a lot about the alien race that I was most familiar with, the snake looking things, and talked mostly about those.\n\nMy five nude boys sat on the edge of their slab closest to her and listened to her talk. I sat with them and they were finally content. Aiden reached a hand into my hair and played absently with the strands. Otherwise, they were still and quiet, completely engrossed in her story telling. This was intensely interesting to them. I was just relieved they weren't tearing open their wounds.\n\nThe woman let the boys ask her questions, but she insisted they come from Mycah.\n\n\"The family needs to learn to communicate internally, so their bond is strong,\" she explained to me, almost begrudgingly. \"They will each express themselves independently when they are doing different things. When they should be all focused they need to center themselves on their lead Brother.\"]\n\nFocusing the questions on Mycah seemed to give the boys more stability. They could stay calm when everything was funneled that way. It was a lesson for me and one I appreciated.\n\n\"Thank you,\" I said directing my comment to the woman, she had no interest in me and turned away. I felt good having been polite, though.\n\nPaterians were different from Earthlings. Over many moons I'd learned to appreciate the way Damien's family interacted with others. Unless something was going on, Damien spoke for the group. It should not have surprised me that Mycah's family should behave the same way. These boys would probably be a lot like Damien's family and I should anticipate that.\n\nWhen I thought about it, I knew more about Paterian children than I admitted to myself. Rose and I had written stories for them, I knew what they liked to read and hear. These were males that liked stories based on what was around them. Treating Jonathan and his family like Earth children would not work. My baby was part of this world, so I had to treat him accordingly. I needed to treat him as what he was, a Paterian.\n\nTyle and his Brothers passed by and the woman demanded their attention.\n\n\"Those children cannot even be three turns of the sun yet,\" she said gruffly. \"Find them something to do to keep them calm. They can't be left with nothing to do.\"\n\nAryn smirked just the way Bane would have as they moved away. The woman's mannerisms were funny to them, but they listened to her. She certainly had a commanding presence.\n\nThe boys were given that paper like substance and something like multicolored crayons. The woman demanded they draw pictures of the aliens and their crafts. She wanted them to draw a ship and an alien they'd seen. The activity was interesting to the boys and kept them busy, but still.\n\n\"Do you have a male offspring?\" I asked hesitantly, unsure if she would speak to me.\n\nIt took a few heartbeats before she gruffly informed me she'd never had offspring.\n\nI got the impression this was a sore spot for her and thought the matter would die quietly. It did not.\n\n\"You should stay in the camp, cousin,\" a grown man said from a slab in front of us. \"Our essence is strong here. You would breed powerful, fine offspring and we would be honored to try with you. We sense you are near your cycle.\"\n\nIt was, by far, the worst pick up line I had ever heard. My face flushed red and I turned to see a family looking lustily back at the woman. It was like being in the middle of a bar and your girlfriend is getting hit on.\n\nThe man talking wore his hair long and he and his Brothers were shirtless. Heavy muscle lay underneath their deeply striped skin giving the men a powerful appearance. They were scarred from fighting beasts outside, but not from whips or women's teeth. These men had lived a rough life, but it had been on their terms. Given my experience, I could see these were free born, full-blooded Paterians.\n\nI saw the wound on one Brother that must be keeping them here. He had a nasty, deep burn across his chest. The Healers had coated it in a clear salve, but I could see the edge of a bone beneath the treatment. The man stayed very still on the slab, but he did look over at the woman. Even he was eyeing her like he'd eat her for dinner.\n\n\"Are you even old enough to breed?\" she asked curtly, although it was obvious they were.\n\nThe lead Brother wasn't injured and slid off the slab to approach the woman. His three uninjured Brothers followed him like they were stalking prey. They were quite good looking men, in a rough animalistic way. The woman must have thought the same thing, because I saw the look she was giving them.\n\n\"I am Eran, born in the T'lynien Mountains,\" he said proudly before introducing his Brothers. \"I am fifteen moons past old enough to breed. We enjoy powerful women and are still looking for permanent mates. None of the women we have met have matched our needs, though.\"\n\nThe men had reached the edge of her slab and they lined up along it watching the woman. Their eyes took in her muscular physique and her prominent fangs. One Brother slid his hand along the edge of her powerful wing as it sat next to him. She seemed startled at first, but I think their bravery was wooing her. She finally relented to her obvious interest.\n\n\"I am Sotar, of the T'scan Mountains,\" she told them haughtily.\n\nIt felt so gross and so wrong to watch this happen. I twisted my body so I was no longer facing the uncomfortable conversation and watched my boys color. In my time at the compound I'd had more than enough of watching other couples together. This was not an interaction I needed to see.\n\nThe drawing was good for the boys. They lay on their tummies around the paper and each drew part of the picture that was in their collective thoughts. This activity was entertaining and it connected them. I'd have to remember this.\n\nAfter a while I realized none of the boys had used the lacquered pots all morning. In my worry and anxiety, I had not either. Since I did not want to clean up a mess on our warm stone, I got us all up.\n\n\"Come on,\" I ordered, \"let's go relieve ourselves of fluid.\"\n\nThe boys jumped off the slab and started to look curiously around. Now that they were down, they wanted to see everyone else in here. Most of the other Paterians on the slabs were badly injured. They didn't need curious little boys crawling all over them.\n\nI remembered seeing Trenal walk with the boys. She'd picked up Mycah and the others followed obediently. It had felt like she was abusing their bond, but it had worked, so I decided to do that.\n\nMycah was a little surprised as I lifted him up and settled him on my hip. Luckily, he wasn't heavy, so it was easy work. Mycah wasn't used to being carried and looked back at his Brothers before looking quizzically at me. I took several confident strides forward before turning my head to look. The boys followed their lead Brother without straying. They would go wherever he did.\n\nWe moved without pause through the wounded toward the back of the healing chamber. There was a room with lacquered pots back there, but almost no one used them except those doing the healing. Most of our patients released their fluid into the urinal like gourds.\n\nI put Mycah's feet on the floor and he went to the closest pot. Jonathan and the rest of the boys followed him so they all stood and used the same pot. Pulling up my skirt I sat and used one beside them. They finished first and now I had their full attention.\n\n\"Why do you sit down to urinate?\" Aiden asked putting a hand on my thigh.\n\nJonathan stood at the other thigh and tugged at it. Mycah was peering between my legs and I couldn't have been more uncomfortable.\n\n\"Come sit with me and I'll tell you about it,\" Molly called from the door laughing at my predicament.\n\nFive heads turned to me and I gladly gave them permission to go with Molly, anything for a moment of privacy.\n\nI left the room with pots and found the boys perched on the edge of a healing stone. Molly was explaining to them the differences between men and women. She was doing a very good job of distracting them, while teaching them. There was so much they needed to understand. It was good to know I would have help.\n\nA rustle of activity alerted me and more men were brought in injured. They were being laid on slabs and I knew Molly would be needed. We took our leave and let her get back to her new job.\n\nMolly went right to work with Tyle's family on the badly wounded men. She was obviously trained and I got the feeling the Healers really appreciated her. Unlike me, she was not squeamish and did the job with confidence.\n\nMycah's family was content to color again in our original place. I looked them over and assumed it was Jonathan's and Aiden's age that had us confined to a sick bed. Compared to everyone else in here using a healing slab, my boys were in excellent condition.\n\nAlong the far walls I saw the make shift classroom that Kana and Rysell had set up. Older boys and men from the compounds sat and listened as the women talked.\n\nI'd been vaguely aware of Damien and his Brothers all day. Most of the thoughts and emotions were geared to the hunt and occasional skirmishes with aliens. None of it had seemed overly concerning, so it was just background. I wasn't really listening and they weren't intentionally projecting.\n\nThe feeling of shame welled inside of me so suddenly it took me off guard. I wanted to hide under our stone. In all my life I'd never felt this embarrassed. It was like being caught masturbating by your grandmother. I was baffled as to where this feeling was coming from. Then I realized it was clearly the result of something happening to Damien and his Brothers.\n\n\"Mama, why is your face all red?\" Jonathan asked standing right in front of me.\n\nNiah stood right beside my son and he was also staring into my face. I looked like a familiar color to them. Rees could turn that shade in his cheeks, especially when he was upset. It wasn't like their stripes, this was different. They were very curious why I could turn the same color as their Brother.\n\nSomething my husbands had experienced had made them feel terribly humiliated, but I couldn't focus on them. The little boys were right in my face poking at my pink cheeks.\n\n\"It feels the same, only warmer,\" Niah said and the rest agreed with him.\n\nThey'd definitely seen this before, when Rees got red cheeks sometimes. The Child Keepers had thought it was illness, but the Healers said it wasn't.\n\n\"Why are they red?\" Mycah asked reaching to pinch the cheek again.\n\n\"I felt...embarrassment,\" I said pushing them all back a little. \"Humans get red in the face sometimes when they feel certain things.\"\n\nThat didn't explain to them why Rees would get the same way. I pulled the little boy toward me and examined his family mark.\n\n\"Rees had a human breeder in his line,\" I said pointing to the mark. \"It was a long time ago, though.\"\n\nThe boys all looked at Rees' mark and then at each other's marks. Mycah was excited to find the same symbol on Jonathan. They couldn't understand why they all didn't have one. They wanted their marks to look the same. I was ready to explain when I sensed my family close.\n\nDamien and his Brothers strode through the infirmary's entrance and I smiled broadly seeing them. I knew they weren't hurt, but it was good to be sure, nonetheless. Seeing them unscathed and dressed for battle made me feel better. It still wasn't clear what had made them so upset a little while ago.\n\nI noted a second family following Damien and his Brothers. The second family all had long hair and their thick, leather coats looked to be for travel. Considering the thin layer of dirt coating them, they must have been traveling. Each of the five men carried a large bag over his shoulder, a sword on his back, and a gun at his waist. The family following my husbands looked as tough as Rayn and his family, but without the friendly smiles.\n\nI got flashes of conversation bursting through the bond. Damien was ashamed and he didn't really want to show me what had happened. Secrets were not tolerated though and I felt him relent a moment before the men stopped in front of me.\n\n\"Rynal!!!\" Aiden shouted jumping up and down on our stone.\n\nThe new men picked up our five little boys and examined them each thoroughly. The little ones reacted to these new faces like they'd been fast friends for ages. Mycah and his Brothers hugged their necks and kissed their cheeks. Jonathan tasted the man who held him, which didn't seem to bother the man at all. Aiden's hands immediately sought the long hair of his breeder and caressed the locks lovingly. The boys knew this family from Aiden's memory.\n\nIn my mind's eye, I saw the conversation.\n\n\"We do not enjoy being connected to SLAVERS!\" they had roared when they'd met Damien and his Brothers in the transport storage area.\n\nAiden's male breeder and his Brothers had loudly bemoaned that they had to be linked through their boy to such dishonor. These men wanted their extended family to be honorable and noble. They would have to spend time with us and be close to us, because of our boys. Slavers were not what they would have chosen at all.\n\nI stood and made up my mind to greet the new men. The best way to dispel their anger was to prove to them I was not a slave. They were obviously confused about this ongoing relationship.\n\n\"I am Ciara, from Earth,\" I said pleasantly to the man that appeared to be the lead Brother, he was holding Niah. \"My mates are Damien and his Brothers. It is good to meet you all. Aiden has been asking for Rynal for ages.\"\n\nBefore the man had a chance to speak I rose on my tiptoes and brushed my lips against his cheek with a smile. I also hugged him lightly before backing away.\n\n\"It is how humans greet family,\" I explained as he looked quizzically down at me.\n\nI explained hugging and kissing and then waited for the man to respond to me.\n\n\"I am Hodlen, born in the T'sparian Mountains,\" he said sounding surprised.\n\nI moved from man to man and introduced myself. Each of the men got a kiss and a hug. I made eye contact and smiled congenially. I made sure my mannerisms were of anything but that of a slave. These new men Hodlen, Rynal, Spartian, Tos, and Kee seemed genuinely taken aback by the greeting.\n\nI looked at their bags and noted the sleeping pads wrapped on top. These men had no place to stay and the camp was really crowded.\n\n\"Our bed is small,\" I offered politely, \"but we would share with family. Would you stay with us?\"\n\nDamien had never felt more pride. I was acting exactly as I should. Our bed was mine to share and offering it to these men would be the honorable thing to do. They would have refused my husbands, but Damien had a feeling they would not refuse me.\n\n\"You must have been traveling a long time. I'm sure a bed would be a nice change. We would all fit and you would be more comfortable,\" Damien interjected politely.\n\nHodlen looked from Damien to me and I saw the first hint of a smile as he responded.\n\n\"We left our mountain with a group of twenty families coming this way as soon as the fighting in our area decreased. That was five day cycles ago,\" he said.\n\n\"The fighting ended sooner there?\" I asked curiously.\n\nThe isolated mountain camp Hodlen and his Brothers had lived their life in had almost no ore. The dry barren area surrounding it had none at all. It was the perfect place to hide a camp because of that. The minimal aliens that had attacked that area had been quickly destroyed.",
        "\"We had never felt safe to travel far from there,\" Rynal said as he held Aiden. \"Our mates feared for us to travel here, because we had to pass a mountain full of ore. With things as they are, no one even noticed us as we moved past it.\"\n\n\"Your mates?\" I asked curiously. \"They did not come with you?\"\n\n\"Of course they came,\" Holden answered, \"still, there used to be much danger from the slaving women in the past. Travel was dangerous. Our mates would do anything to protect us, but they could easily be outnumbered...\"\n\n\"Halil,\" I said softly, \"she was your mate?\"\n\nThe men all smiled lightly and touched one another. \"She is still part of us,\" Hodlen said with some reverence. \"We felt her go to The Great Harmonious Spirit. Halil's Sisters would have preferred to give her back to the Paterian fire in our home, but it was not possible. I wish she had lived long enough to have seen her male offspring bonded before she joined The Spirit, as was her fervent desire.\"\n\nI nodded solemnly and told them how she had instructed the slaving women on the benefits of freedom before she died.\n\n\"She was always an agent of The Great Spirit,\" Spartian said softly and his Brothers agreed.\n\nHodlen and his Brothers focused back on the boys and Mycah's family was happy for the attention. They described the bathing pool and the alien attack. Jonathan told them about coming here from the compound. The little ones wanted to show them their scars and the men all discouraged them. No one wanted to interrupt what the Healers were doing for our boys. The wraps over their wounds stayed in place.\n\n\"Let the Healers show us when they are ready,\" Damien said patting Mycah's head.\n\nHolden looked to Damien to tell them exactly what had happened at the pool. I saw Rynal almost puff with pride looking down at his boy as Damien spoke. Our sons had fought with valor.\n\n\"Strong and loyal, like us, Brothers,\" he said holding Aiden happily as his Brothers patted his shoulders.\n\nDamien and his Brothers had picked up the clothing that Mycah's family had left at the pool. We helped the little ones put on their pants and shoes. Since Jonathan and Aiden couldn't wear a shirt, yet, we only fully dressed the other three. As we were finishing I heard a happy shout come from across the room.\n\nTyle and his family ran to us and looked excitedly at Hodlen and his family. I saw the resemblance in an instant. Tyle was Hodlen's male offspring. He absolutely had to be.\n\nBy now Hodlen's family was getting used to hugging and kissing. It wasn't their way, but they accepted the affection from Tyle's young family. They looked at me as they took the greeting. My influence was hard to deny. It was a testament to my freedom that I felt I could share Earth tradition. I was glad I had.\n\n\"We have talked many times on the monitor since coming here,\" Tyle explained to Damien's family. \"They contacted us soon after we were brought here. We didn't tell you all because...\"\n\nThe young man faltered looking at Hodlen and Damien patted the young man's shoulder in reassurance.\n\n\"Slavery was not something we should have been a part of,\" he said simply and the surrounding family agreed.\n\nThe Healers came and unwrapped the wounds on our youngest family members. It amazed me how fast Paterians recovered. Aiden's cuts were well on their way to being healed and most of Jonathan's were not even oozing. My boys and their male breeders were all proud of the resulting scars. Our boys were fearless.\n\nThe Healers re-wrapped the worst of it after applying some salve. They allowed us to take the boys from the infirmary, but insisted we keep them calm for the rest of the day cycle.\n\n\"No fighting, no climbing, no jumping, and no running,\" Rhane explained plainly. \"The little ones must rest. If there is any concern bring them back to us without hesitation.\"\n\n\"Will water hurt the wounds?\" I asked.\n\n\"They can swim tomorrow,\" Rhane's Brother said thoughtfully. \"Do not let the wounds get wet tonight.\"\n\nTyle's family listened to the instructions as well and piped up to remind the Healers Molly would be staying with them. Tyle's family stayed near us in the same secluded complex. Our new Healer's assistant would help watch the boys, also. That seemed to please Rhane. Molly had already proved herself to have a knack for healing. We should trust her judgment.\n\nIt was easier to control Mycah and his Brothers with so much family around. As we walked through the busy halls I was glad for the assistance. I imagined that in the distant past it was always like this. The children's care could be spread between all their breeders. It would have been a superior system.\n\n\"We need to find the others,\" Hodlen was saying to Damien. \"Our families share male offspring with several other families. All of us should be in the same place. Now that we are all free men we should be close.\"\n\n\"We must contact the others, now that they are all free,\" Kee said seriously.\n\nIn the past, at least one of those families would be men that were good at Keeping and training children during the day. Hodlen's family didn't want to use unrelated Child Keepers if they had an option. Family would be the best to care for the young.\n\n\"Things are going back as they should be,\" Rynal said happily. \"This is how we always wanted to live. We have dreamed of this a long time.\"\n\nOur conversation was cut short as the boys grabbed our attention.\n\n\"Daddy,\" Jonathan suddenly wailed loudly, \"I want to swim! We didn't get to swim enough this morning!\"\n\nWe all looked at my upset little boy. The tunnel to the bathing pool was coming up and Jonathan obviously remembered that.\n\n\"There might be aliens,\" Mycah said as his eyes lit up with excitement and then I saw the fear. \"Do we need to fight the aliens in the water to swim every time?\"\n\n\"They might catch us!\" Rees intoned sounding alarmed.\n\nNiah's little teeth grew and I saw him getting upset. The boys were caught between excitement and trepidation. They wanted to swim, but the big aliens were something to worry about.\n\nDamien's calm voice settled the boys as the men picked them up.\n\n\"The aliens that got inside are gone now and won't come back,\" Damien said. \"We barred all the entrances they were using. Men protect those entrances now, also. There are no aliens to fight and none will catch you. Your older family will protect you. In the morning we will swim again.\"\n\nThe little ones looked around at the ten powerful men. It eased the distress that they had been feeling. Mycah in particular seemed to relax in Spartian's strong arms. He wasn't solely responsible for his small family anymore. My family realized how much better this life would be for our boy. He and his Brothers should grow up protected and loved.\n\n\"My Brothers and I cannot swim,\" Tos said as we passed the damp tunnel leading to the bathing hall. \"We lived in a dry area. There was very little underground water and none above ground. We have never learned.\"\n\nEvan shrugged and patted the other man's arm in reassurance. There was no shame in this lack of ability. Certainly this family would have much to teach us. We would share everything with them.\n\n\"We will teach you, cousin,\" he said simply.\n\nWe took our evening meal in the dining hall early tonight. Hodlen's family was hungry after the long trip here. Damien thought they might be tired, also. Since they would have to work for the camp tomorrow, we should give them food and let them rest tonight.\n\nAfter our meal we retired inside our private rooms. There were lots of men in the main communal area, but none of us wanted to be around such activity. Despite Hodlen's initial reservations about Damien and his Brothers, I got the impression he felt a duty to this extended family. His family really wanted to know my husbands.\n\nHodlen and his Brothers had brought toys for Mycah and his Brothers, which I was glad to see. The small wooden swords would be useful for practice later when the young ones were healed. They had also carved small figurines of animals. The boys played make believe games with those as we talked. It kept the little ones distracted and happy.\n\nThe mats that the other men used for sleeping were spread on the floor around our fire pit. The men sat on them or sat in the few chairs we had. They lounged and started to get to know one another.\n\nThis conversation was interesting to me, but I made it a point to let the men talk. Hodlen's family was still evaluating Damien's. I was part of the family, but I wasn't the part that concerned them. The men needed to have this time to converse, so I sat and knitted, only interjecting occasionally.\n\nThe families became more familiar with each other as they discussed life in the T'sparian Mountains compared to the compound. The camp Hodlen's family had come from was smaller than this one and even more tightly knit. Leaving there to come here had been a very big deal, the children were worth it, though.\n\n\"Why did you decide to become slavers?\" Hodlen finally asked. \"We shared male offspring with Kein and Bane and then we were notified you had bought a slave. My Brothers and I were sure there was a mistake....\"\n\nDamien looked deeply into the fire before his eyes turned to me.\n\n\"We, our bond, were broken. We were lonely,\" he said quietly. \"The gentle affection Ciara gave us healed our bond. Still, we foolishly believed what we had been told about her weakness. It took us a long time to realize how wrong we had been.\"\n\nI had settled in a chair and Kein moved to kneel before me.\n\n\"So many stupid mistakes, Brothers,\" he said with great sadness.\n\n\"You are forgiven,\" I repeated for what felt like the millionth time. \"We have talked about this many, many times. I love you all. Family is allowed to make mistakes.\"\n\nThey remembered the lines cutting across my flesh and the cruel lashes Damien had laid on my delicate areas. Punishment had been a tool and they'd never known lasting effects from it. It had never occurred to them that I was different. Those horrible marks had scarred deeper than they'd known.\n\nOn the compound everyone just expected me to be Paterian. Respecting my thought process or considering I felt differently would have been scoffed at. My husbands tried very hard to respect my human differences now.\n\n\"Thank you for that,\" I said leaning forward and caressing Kein's cheek. \"There is no use remembering bad times, though. We have learned and have much to look forward to.\"\n\nKein continued to look troubled as his fingers pushed my skirt above my knee. He stroked the delicate flesh they had started their torture on and began to apologize again.\n\n\"Enough!\" I ordered pushing the skirt down and eyeing Kein sharply. \"We are done with this!\"\n\nThere was absolutely no way I was letting them describe to Hodlen's family what they'd done. It was a private matter, it was the past, and it wasn't something anyone else needed to know. I wasn't going to look back.\n\nKein's eyes met mine and then he leaned forward and kissed my knee. He wouldn't press the issue farther, but they still felt bad about what they'd done.\n\n\"Then you need to teach the men who used to own slaves why it is wrong,\" I said answering the unspoken plea. \"Stop apologizing and do something about it! Guilt about past mistakes without doing something about it is pointless!\"\n\nHodlen laughed and slapped Damien on the shoulder.\n\n\"A fine mate, cousin,\" he said jovially, \"strong and to the point!\"\n\nA young man's voice sounded from outside requesting admittance and Damien called out to come in. Tyle's family entered and promptly sprawled on any unoccupied mat near the older men. They just wanted to be close to their male families.\n\nMolly followed the young family in looking slightly uneasy, but they didn't know enough about humans to understand that. They'd just assumed she'd come with them if she wanted to. Tyle's family did not really understand how her life had been controlled until the day she was freed.\n\n\"Sit with me,\" I offered scooting over in my oversized chair.\n\nThe oversized beanbag I was sitting on would easily accommodate both of us.\n\nMolly and I chatted as the men talked. She was so unused to the way she was treated here. Tyle's family had taken her to eat and Abram's family had told her about the food. Tyle had pulled a chair out for her and been happy to sit beside her. Another family sat with them and insisted she look at them and take part in the conversation. The camp was used to assisting freed humans. They knew the help these women would need.\n\nAs Molly and I talked I saw the flap to our door drawn back and a head peaked in.\n\n\"Knock, knock,\" Kennedy said in English as she peered inside.\n\nChristof and I were up in a flash to greet our girl. Dara and Eve followed Kennedy in and I understood why this room was so large. It was made to contain an extended family and we certainly had that.\n\nKennedy was less injured than Hannah had been. She and her Sisters looked as though they had fared well in the battle. I examined all three of them before I remembered Mycah and his family.\n\nThe little boys were staring intently at Kennedy and her Sisters. They edged closer and closer to the girls, approaching them. None of them seemed afraid. They looked like they were trying to control their curiosity.\n\n\"You aren't Hannah, but I feel you,\" Jonathan announced loudly. \"You look a little like Hannah, but you don't feel like her. She is not here.\"\n\nMycah and the rest agreed as the adults stared at them. We had no idea how Mycah's family knew Hannah.\n\n\"I am Kennedy, born in the T'aran Mountains,\" my daughter said as way of introducing herself to everyone present.\n\nEve and Dara also introduced themselves, but the boys weren't interested in names. Mycah's family was barely tolerant as Hodlen's family introduced themselves.\n\n\"Can we touch your wings?\" Rees asked and the barrage of questions began.\n\nThe small boys were fascinated by the Paterian women and wanted to get close to them. Every part of the girls fascinated the small boys. Mycah's family was getting used to feeling connected to those around them. They wanted to be close to those they thought were extended family\n\n\"Mycah needs to ask,\" Hodlen said and Damien agreed with him.\n\nThe boys needed to work together. They had a bad habit of splintering apart. My husbands wanted the boys to build a strong bond and thinking as a team made that happen. We wanted them to feel free, but they also needed to be connected to one another.\n\nIt took several heartbeats for the boys to focus on Mycah. Kennedy and her Sisters just smiled and sat down Indian style along one wall, inviting the young ones to explore. They had no hesitation at all.\n\nThe boys were all over the girls. They inspected their wings and their talons. I watched them stand on the girls' legs and scramble up on their shoulders. Not surprisingly Aiden found Kennedy's long hair fascinating. It was different from the body hair she had and closer to what Rynal had. Jonathan went girl to girl, reaffirming their taste. Overall, Mycah's family crawled all over Kennedy and her Sisters and inspected them.\n\nMolly and I readjusted ourselves so we faced the girls and waited for the children to calm down.\n\n\"Mycah, how do you know Hannah?\" I asked pointedly and the little boy turned to look at me.\n\n\"My Brother felt her close when it was really noisy outside at the compound,\" Mycah said pointing to Jonathan. \"We went outside when no one was looking and went to find her. We kept feeling Damien and his Brothers, but they weren't as close. Hannah was really close, we wanted to know who she was, why we felt her, and if we could find her.\"\n\nJonathan had tasted his birth sisters many times in the mountains. Evidently he had not completely forgotten any of us, his memory had just been temporarily blocked. I looked over at Damien and he looked as stunned as I felt. Hodlen's family watched the interaction closely, but stayed silent. Tyle's family looked as curious as us.\n\n\"How close was Hannah? How do you know her name?\" Damien asked quietly. The boys were talking about the compound during the battle, but he didn't understand how or when they would have come across Hannah.\n\n\"When we were in the compound, she dropped out of the sky,\" Mycah said plopping down on Dara's thigh facing the family. \"The tall, thin aliens were coming toward us and she cut them in half. They cut her, too, but she just roared at them.\"\n\nMy mouth dropped open and I felt the same amazement from Damien and his Brothers. We had not known aliens had gotten into the compound. No one would have dreamed they'd been that near the children.\n\n\"Ra came, too, and then the Warriors all came running. Hannah and Ra made all the aliens fall down and then they talked to the Warriors,\" Mycah said as his hands explored Dara's talons as her hand lay at his waist.\n\nWe sat in continued amazement as Mycah blithely explained how Hannah had introduced herself and quickly taught the Warriors how to fight aliens. She told the Warriors how the aliens moved and how to destroy them quickly. As she talked, she'd plucked Mycah's family from their hiding place and demanded the men put the curious boys in a safer spot.\n\n\"War is not a place for little boys!\" Mycah said wagging his finger at us, as he must have seen Hannah do. \"You have to do a better job watching them!\"\n\nNone of us knew what to say and I looked at Kennedy to find her expression sheepish.\n\n\"You were worrying so much about him, Mama,\" she said softly stroking Aiden and Jonathan as they sat on her lap. \"We didn't want you to panic if you heard that. If the men told Damien and his Brothers...we thought we'd just let it happen if it did.\"\n\n\"No secrets, Sweet Girl,\" Christof said mimicking the pet name I'd given her. \"Mama can't be strong if we don't treat her like an equal. You have to trust that she'll make the right decision.\"\n\nKennedy rolled her eyes in a very human gesture and hmphed before she spoke again.\n\n\"Like tearing down the mountain on a transport trying to get into the tunnels?\" she asked quietly.\n\n\"Be respectful,\" Bane chastised, \"Mama was upset. Many of us wanted to do the same thing when we heard what was going to happen. We all worried for the young ones.\"\n\nKennedy apologized, sounding somewhat like a sulking teenager, and I admitted to my mistake. What I'd done had been foolish. I assured the girls I wasn't going to do that sort of thing again. Protecting our family would be a shared job, as it should be.\n\nWe sat and talked for a while longer and the conversation was pleasant. Damien watched Mycah's little family and knew they were still healing. With no more excitement they started to become sluggish and sleepy. Paterian men healed when they rested and the boys were slipping toward doing that. We would let them rest out here with the family for now.\n\nMycah's family stayed with Kennedy and her Sisters and, soon, started to doze as the girls held them. They fought to stay awake, but the warm, soft hair covering Kennedy and her Sisters made a nice place to cuddle. The little family started to stretch for sleep as their eyes closed.\n\nNiah was pushed off Eve's thigh and looked blearily around as Molly and I watched trying not to laugh. His Brother, Rees, had stretched out and unintentionally shoved him off. He looked disgruntled at the loss of his space.\n\n\"Niah, baby,\" I called out, \"come sit with me.\"\n\nThe little boy dragged himself over so I could pull him up on my lap. He stretched out across Molly and me, quickly falling asleep. My new friend was tentative as she stroked the young boy. He sighed and snuggled against us, absolutely at ease. I felt her tremble and looked over to see tears in her eyes.",
        "\"I long to see my baby boy,\" she said softly.\n\n\"You absolutely will,\" Dara said as Mycah snoozed on her lap. \"Hannah and her Sister are championing your cause. They are being quite persistent about it.\"\n\n\"It is politically correct,\" Eve said in Paterian, but I caught the modern English meaning. \"It will probably get them loads of attention for their selfless devotion to the freedom cause.\"\n\n\"Selfless...\" Kennedy repeated softly, rolling her eyes and I saw her Sisters agree with her.\n\nDamien raised a brow at the girls' tone, but I understood. Kennedy and her Sisters just did not have political ambitions. Hannah must be being quite vocal about reuniting the human women with their offspring. It was a noble thing to do, but obviously had some secondary gain for Hannah and Ra.\n\nI shook my head and smiled at Kennedy. My girls were day and night different. I wondered how this little girl in my belly would be and my hand drifted over my stomach.\n\n\"They will be healthy and strong, Mama,\" Dara said looking at where my hand was. \"I think you will be surprised at how powerful T'vailk women are. I am sure they are glad their family is close again. T'vailk women feel a powerful drive to be close to family...at least they used to.\"\n\nThe girls agreed and started to discuss the uniqueness of this event. Hodlen and his Brothers had some thoughts about what T'vailk women would be like and shared that. None of the rest of us knew much about the history of this particular race of women. They had literally disappeared when the men went to the compounds.\n\nI was glad they'd be strong, though. Smiling at Dara's comment I felt the movement under my hand. Suddenly all of what she'd said struck me.\n\n\"What do you mean 'they'?\" I asked as my eyes shot wide.\n\nKennedy and her Sisters looked surprised.\n\n\"Women of the T'vailk mountains are born with their Sister or Sisters,\" Dara said. \"They are always born in groups of two or three...\"\n\n\"Didn't we tell you that?\" Kennedy asked furrowing her brow.\n\nI shook my head mutely and understood now why I was so large. This was not a singleton pregnancy.\n\nKein's happy shout rocked the room as all the men congratulated him. I had to laugh at the goofy look on his face. He startled Molly when he approached us and kissed me deeply. The man could not have received better news.\n\nThe little boys barely opened an eye as the men celebrated loudly. Kein and I had been blessed by The Great Harmonious Spirit. We would have more than one child and he was thrilled. Anticipation at meeting our new female offspring rocketed to a new high.\n\nMy men talked happily about how much they planned to enjoy this new family. No Nu-reeh to stop us from bonding and force the men away. Kein could be there as his girls got stronger. He would be the first Brother to be able to care for his female offspring.\n\nIt wasn't much later when I started to feel as sleepy as the boys. Damien took that as a sign that perhaps the children and me should be in bed. I agreed with him wholeheartedly.\n\nHodlen's family helped and we stripped the little ones of their boots and daytime clothing. They whined and fussed as they were moved. The boys were cranky when their sleep was disturbed. After the boys were undressed, we wrapped their waists in sleeping shifts and settled them on the bed together. Once they were all piled under the covers, Mycah's family fell back to their dreams and became peaceful again. The sleep tonight would hopefully finish letting them heal.\n\n\"You really should rest, too,\" Molly said softly standing and watching the boys. \"I remember how tired I was at the end...\"\n\nMolly and the other families retreated to our main room and I stayed in the sleeping chamber with my boys. After closing the drape between the two rooms, I stripped myself and put on my nighttime shift. I'd made this one myself and thought I had been very creative. It had a series of ties down the front. Once my girls were born I could tighten it over my stomach and loosen it at the top to expose one breast at a time. For now the outfit was loose over my belly and tied securely over my breasts.\n\nLaying down with Mycah's family I realized how good I felt about myself. I'd gone from free to slave and survived. Then I'd gone from slave to almost free. In the last many moons I'd learned to be totally free again and now I took care of myself. Through all the changes and stress I had maintained my sanity. Reaching out I stroked the little snoring family in front of me and fell deeply asleep.\n\nIt was the middle of the night when I woke again. The men had tied the drape between the rooms open. The fire pit had been left to burn for warmth and cast a soft glow in here. It was dim in the sleeping chamber, but I could see Rynal, Aiden's breeder, asleep just beyond the boys, in front of me. Not surprisingly Aiden was laying by Rynal's head with his hands wrapped in the man's hair. Behind me I felt my family resting comfortably.\n\nThe bed was warm and I was very cozy, but my bladder would not be denied. I rose as quietly as I could and tiptoed into the main room. The belt with my weapons hung near the main entrance to our living space and I quietly slipped it on. I was just putting on my boots when I heard a noise behind me and turned.\n\n\"Why are you awake?\" Mycah asked loudly. \"The moons aren't set and it isn't time to be up, yet.\"\n\nThe young family was standing and staring at me. They were as bright and awake as I'd ever seen them. The observant, nosy little boys had heard me get up and followed.\n\n\"I drank water before bed and now I need to go release it,\" I explained in a quiet voice. \"Go back to the bed with your male breeders. I'll be back in a moment.\"\n\nI saw them thinking and then Jonathan and Rees were putting their hands over their private parts. I'd seen that gesture on Earth. The power of suggestion was too much and now the little boys needed to use the pot, too.\n\n\"Get your boots,\" I sighed. \"We'll all go use the pot and then go back to bed.\"\n\nI helped the little ones with their foot wear and felt Damien's family in my mind. Assuring them all was well, I walked through our leather drape into the central area where the men congregated. The room with the lacquered pots was close to our rooms. It was late and I expected we would be the only ones out here. We were not.\n\nThree families sat morosely around the communal fire pit in the central area. From their dress it was easy to tell they'd been Warriors at one of the compounds. They must be particularly stressed to still be up at this time of night. I knew Paterians like their routines. This wasn't when these men should be up if they weren't on guard duty.\n\nMycah's family followed me but started to go toward the men. They were always curious, but this seemed like a bad time. I reached down and grabbed Mycah's hand to pull him with me.\n\n\"Come with me, boys,\" I said in a commanding tone. \"Leave them alone and let them talk. We are using the pots and then going back to bed.\"\n\nFrom the fire I heard some low, vile cursing and chose to ignore it. The men couldn't believe I'd dare to touch Mycah and the idea I was commanding his Brothers was horribly offensive. My awareness was raised, but the men didn't move as I pulled Mycah to the room with the lacquered pots.\n\nThe little boys followed their Brother and proceeded to repeat the things they'd just heard. The filthy cursing was not what I wanted Mycah's family to learn. Bane had taught me these words, but we didn't use them except in jest. It wasn't appropriate for the young ones to say.\n\n\"Those aren't good words,\" I told Mycah. \"We don't need to use those types of words. Your male breeders will teach you better words. Honorable men speak respectfully to everyone. You and your Brothers need to act honorably.\"\n\nWhile we used the pots the boys wanted to know what those words meant. I explained they were ways of saying you didn't like someone, but they were very impolite. No one would respect you if you spoke to others like that, I tried to tell them. It was a difficult and trying conversation. Certainly not one I wanted to have this time of night.\n\nNow the boys wanted to know why those men didn't like them.\n\n\"They don't like me,\" I told Mycah's family gently as I straightened the wrap on Niah's waist. \"Men on Pateria used to be taught that humans aren't valuable. They think I should be a slave. Daddy, Christof, and Damien have talked to you about this. That isn't how we think.\"\n\nIn preparation for the boy's curious nature I took Mycah's hand as we walked out of the room with the lacquered pots. Jonathan took my other hand and the rest of the family followed as we made our way back to our rooms.\n\nThe boys had no sense that this was the wrong time to talk and started to say the things Damien's family had taught them. Slavery was wrong. Humans were strong and should be valued. Mama was special and we were lucky to have her in the family. Their bright, clear voices seemed to resonate in the contained space.\n\nI saw the men by the fire start to rise and now they had my full attention. My eyes took in their enraged features and their clenched fists. Unfortunately, watching them infuriated them further, but they were a danger and I couldn't look away. My safety and the boys' safety was my business.\n\nThe men were coming toward us, prowling really. They wanted to hurt me. As far as they were concerned a slave that did what I had done deserved to be punished. With my girls nestled in my belly and Mycah's family right here, that just could not happen.\n\nI released the boys' hands and shooed them toward our rooms.\n\n\"Mycah,\" I commanded pushing him toward the door, \"take your family to Damien and Daddy.\"\n\nAs soon as I sensed the boys moving away, I pulled my gun and aimed it. Over the last moon I'd proved to myself I knew how to shoot. Paterians weren't as fast as the aliens and I had a fighting chance with this weapon.\n\n\"Stay away!\" I said firmly to the men. \"There are no slaves here, only free men and women.\"\n\n\"Silence, slave!\" one of them ordered. \"You have no right to touch our young or hold those weapons! There are no bands on your form, so no owners to protect you!\"\n\n\"I can and will protect myself, cousin,\" I stated in a low, firm voice.\n\n\"We will reprimand you and you will not make this mistake again!\" another of them stated.\n\nMy whole form was tensed and ready. I felt fear and used it to heighten my senses; it did not own me. Unlike any time other time a man had approached me like this, I felt ready to defend myself.\n\nKilling these men was not an act I would relish, but it would have to be done. I trained my gun and took a breath. Their ignorance was signing their death certificate, but I had to keep my daughters from harm. It was my only option to stop them so I could get away.\n\nA moment before I pulled the trigger, and ended the first man's life, I sensed movement beside me. The aggressors stopped approaching and I watched the looks on their faces become concerned. They glanced around and I furtively did the same thing.  \n\nTyle's family, as young as they were, could look as vicious as any Warrior was trained to. Still in their sleeping shifts, each of them carried either a sword or a gun. The guns were aimed and the swords were at the ready. Once I noted their presence, they slipped slightly in front of me. None of them got in front of my weapon, though. If I shot something, it wasn't going to be one of them.\n\nMund's family was out of their room and so was Basin's. They were tightening the circle on the aggressors. Damien and his Brothers moved in synchrony with Holden's to add to this side, as Stayne and his Brothers moved with Arnold's family and closed off the exit from the other side. The men from the camp had emerged from their rooms and surrounded the Warriors.\n\nI sensed it now. The Great Harmonious Spirit had the men. Damien and his Brothers had not called the entire camp, just our close friends and family that lived in this section with us. We needed them for added security.\n\nThe large show of force was only so the aggressors would not attempt to fight back. My men could have handled this themselves, but it may have endangered our offspring. The other men did not mind helping and this way was safer. We could depend on the camp to help us keep an altercation from ever happening.\n\nNow, we all waited.\n\nThe men stood at the ready. I felt their thoughts and knew they were merely bidding their time. The entire thing was planned out and very organized, as far as The Great Harmonious Spirit was concerned. Next was a period of education and then sanctions.\n\nA transport landed outside our area and five male Administrators walked briskly inside.\n\nEveryone kept their weapons trained on the aggressors initially, so I did, too. As the male Administrators approached closer the weapons were lowered, but not put away. I was not part of the Great Spirit, so my actions lagged behind the men's. It seemed appropriate to follow their lead, though. Dealing with unpredictable Warriors was their domain.\n\nThe Administrators that came in were wearing clothes that had been hastily thrown on, as opposed to sleeping shifts. They carried weapons on their waists, but had not drawn them. They were here to teach and not agitate these aggressive Warriors.\n\nThe Administrators took in everyone down here as they stopped several body lengths away from the troublemakers. I knew these Administrators vaguely and was surprised it was them that had come. Gunth and his Brothers were who I expected, but they were not with us anymore. I shook my head at my own foolishness. It would take me some time to stop looking for the big man and his family.\n\nThe lead Brother in this family of Administrators was named Carg. He and his Brothers were masters of organization. Carg and his family monitored our food supplies and our textile supplies. It was because of them we never went hungry and always had materials available. Unlike Gunth's family, they didn't appear physically powerful. Carg and his Brothers were of small stature and a light build. Their power was in their minds and their capacity to anticipate the camp's needs.\n\n\"There are no slaves in this camp,\" Carg said in a firm, but slightly nasal tone. \"You are not slaves to the women and the humans are slaves to no one. You must learn to respect those around you. The way you were taught in the compound is not acceptable here.\"\n\nThe Warriors cursed a foul stream. They started toward the Administrators with the obvious intent of harming them.\n\nTyle's family tightened around me and Hodlen's joined them. The camp would not endanger the life of a child during this altercation. My girls would be kept safe by their extended family. Mycah's young family was inside our rooms. All the precious ones were perfectly safe.\n\n\"We do not listen to shopkeepers!\" one of the aggressive Warriors yelled as they sprang forward.\n\nDamien's family moved like lightening and in synchrony with the other men to subdue the raucous Warriors. It was over before it began. The Warriors knelt defeated on the ground with swords at their throats in a matter of moments. Their weapons had been summarily stripped from them. I saw their fear and their awe as they took in the men from the camp.\n\nThe silent, organized attack had bewildered the aggressors. It was impossible not to be impressed by my campmates. They made every movement look planned and choreographed, which in a very real sense, it was. As a group, the men from the camp were unbeatable.\n\n\"The Great Harmonious Spirit gives us every advantage,\" Carg said in a very calm voice coming to stand in front of the defeated men. \"We respect one another and we gain strength together. You will come to understand this fundamental belief and it will give you strength, also. In order to join us you must let go of the evil teaching that prevails in your minds.\"\n\nThe defeated Warriors looked just that, defeated. They were held in such a way they had no hope of escaping. It was very obvious the men that controlled them held their lives in their hands. Now that they were forced to listen, Carg spent time explaining the importance of respect and equality.\n\nTransports arrived and men filed quietly in behind the Administrators. I noted that these new men appeared to be guards that were on duty. They were dressed and outfitted with all their weaponry, so they must have been on nighttime patrols. The six families of burly, armed guards from the camp stood stoically watching Carg. The Administrator finished his speech and took a step back.\n\nThe Warriors were pulled to stand and their swords were placed in the scabbards at their waists. That particular act really surprised me. They'd attacked us and we were arming them? It must have confused them also.\n\n\"You have returned our swords?\" one man asked quietly.\n\nHe touched the hilt lightly, but did not draw the weapon. The formerly aggressive Warriors were grossly over matched right now, so that made sense.\n\n\"There are dangers all around us, cousin,\" Carg said, continuing to instruct. \"This is not like the compound where peril is kept at bay by an external force. You will not be stripped of your weapons here, unless it is clear you must die for us to live. In case of attack, you are responsible for the defense of yourselves and this camp.\"\n\nThe Warriors stood and looked around at the men they would have called bandits several days ago. Their cohesive organization was obviously disconcerting. The Warriors couldn't comprehend the way things worked here. The lesson was being driven home, though.\n\n\"Since you wish to be awake and you want to fight,\" Carg continued, \"I will leave you with this patrol. It is apparent your families are having difficulty changing. Perhaps protecting the camp will give you incentive to adjust your attitude.\"\n\n\"Our punishment...?\" one of the Warriors asked sparing a glance in my direction.\n\nI met his uncertain gaze before his eyes swung back to Carg.\n\n\"You are being sanctioned,\" Carg said firmly. \"I have no doubt you would prefer to rest with your Brothers when the moons are up. These men run night patrols for the camp by choice. It is valuable protection they provide for us. They will guide you and you will learn. Your families will stay with them until I feel you have learned from this mistake.\"\n\nThe Warriors looked utterly confused. I could see they had expected to be stripped of their weapons and beaten badly. The peaceful way the camp handled miscreants was very confusing to men from the compounds.\n\n\"Pain is not a tool that we use,\" I said clearly and Carg seemed to understand the purpose of my statement.\n\nHe didn't think the way men from the compounds thought. It had not occurred to him to harm these men.\n\n\"Your families deserve to be treated with respect,\" Carg said looking over at me. \"You will learn to respect others the same way. Pain is not a tool that needs to be employed. It evokes the fear response and you do not need to know fear inside this camp. This is your home. This is a safe place for your family. In time you and your Brothers will come to trust us and we will trust you, then you will join with the Great Harmonious Spirit.\"\n\nI watched from behind my guard as the Warriors were led away. Their guides would teach them tonight, as they let them expend their frustrated energy. Change was difficult on this world and changing to the camp's mindset would be a staggering feat for these particular men.\n\nWith the danger contained and leaving, I slipped my gun back in its holster. I breathed a sigh of relief that I had not had to shoot those men. The camp would probably have forgiven me, but they wouldn't have liked it if I had killed a Paterian.\n\nThe moment The Spirit released the men was obvious. Mycah and his Brothers were instantly around my legs watching the retreating backs of the Warriors. They looked up at me and explained in no uncertain terms that slavery of any sort was not right. Attacking a camp mate was even less acceptable. They spoke with clear resolve about what was right and what was wrong.",
        "\"They have to learn fast, Mama,\" Mycah said clearly. \"Men like that can't stay in the camp if they don't accept our values.\"\n\n\"It would be bad for them to be sent out,\" Rees stated. \"They will not survive long without cousins to help them.\"\n\nNiah agreed with his Brother and yawned loudly.\n\nThe boys were making virtually adult statements and I examined them intently. They were done with it, though, and looked like they were asleep on their feet. Hodlen's family bent and scooped them up, resting the children on their hips.\n\nSpartian held a sleepy Jonathan and I stroked my boy's hair. The little blonde head dipped until it was resting on the man's shoulder. Jonathan fought to keep his eyes open and failed. He let out a snore as he fell to sleep.\n\n\"The Great Harmonious Spirit teaches them,\" I said out loud and in wonder as I realized what had happened.\n\nGirls had their female breeder's memories, primarily, at birth and boys would have their male breeders', once they were absorbed into The Spirit. The teaching didn't start with boys until they bonded to the men. It linked the men through generations, just as the girls had their links.\n\nPutting the men on the compounds and isolating them from one another had been designed to systematically erode this. It had been a devilishly effective system. Kept from their young and prohibited from forming bonds, the men lived in isolation from everything. They couldn't pass anything on at all.\n\n\"We are not isolated here,\" Damien informed me as Kein hugged me from behind.\n\n\"Quite the opposite,\" Kein whispered in my ear as I felt his erection nudge my posterior.\n\nDamien and his Brothers demanded my attention and I felt the flow of their thoughts. Humans liked privacy, but my men really needed something. I'd shown them a part of me tonight they'd not seen before. In the past an aggressive female would have turned them off. Seeing it in their mate had a different effect.\n\nThey had sensed a fierce, protective instinct inside of me when I thought my family was endangered. There was no loss of control, only determination. I would have killed those men and left their corpses to rot. When they'd exited their rooms all the men had witnessed my steady gaze and ready stance. If The Spirit had not been in control, it would have been a very erotic pose for Damien and his Brothers.\n\n\"Spend a little time with us in the main room of our lodging,\" Kein pleaded quietly in my ear.\n\nDamien and his Brothers knew I couldn't have sex with all of them tonight, not in my condition. They were more than happy to masturbate their sexual energy off, but it would be more fun if I was around. My men were shamelessly begging for something very simple. I could not deny them.\n\nDamien addressed Hodlen as we walked back toward our chambers. The other men had no problem watching the boys while we took our time together in the main room. Damien quietly explained they just wanted a moment with their mate. The drape would be closed because humans liked privacy.\n\nWe walked into our rooms and Mycah's family was essentially asleep. Rees grumbled as his shoes came off, but the rest seemed oblivious as Hodlen's family took them to the bed. Injured little boys would sleep like this and the men knew it. Mycah's family was just taking what they needed to get better.\n\nThe heavy drape separating the rooms was closed and I stood in the sitting area looking at my family in the dim fire light. There was no noise from outside and the sleeping chamber was also silent. We stood looking at one another until Damien moved to place his weapons away.\n\nAll the Brothers placed their weapons to the side and I started to as well, but was stopped. Bane pulled my sword from it's sheath and placed it in my hand. I twisted the weapon in my grip and realized I had everyone's attention. Their attention was riveted on the weapon and on me.\n\nThe heat in their eyes was hard to deny. My mates were excited and the image of me holding my weapon was doing it for them. In response to their obvious interest I raised the blade and touched the tip to Bane's chest, they shuddered as one being. Every stripe on Bane's wide body flushed with excitement. This was what they wanted.\n\nIn the not too distant past, my men had suffered from the women's talons, but they'd always been rewarded with the gratification of release afterward. Now their brains were wired to appreciate a little aggression from their partners, especially since then knew I wouldn't really hurt them. The notion I knew exactly how to use the weapon I carried was actually exciting to Damien and his Brothers.\n\nThe sharp blade could easily slice into skin, so I was very careful as I touched the tip to Bane's chest. Our eyes remained locked on one another's and his breath caught in his throat. The cool metal traced the line of his sternum and down the firm muscles of his stomach.\n\nIn that moment I knew he'd do anything I asked.\n\n\"Take it off,\" I said in a low commanding voice as I tapped the wrap at his waist.\n\nBane was shaking with excitement as the material was removed. He dropped it to the floor without a second thought and waited for directions. I felt his eyes boring into me as he trembled.\n\n\"Eyes down,\" I ordered and watched him struggle to comply.\n\nNever in his life had Bane had someone this near him with a blade and been unable to watch them. The relinquishment of power was maddening and exciting.\n\nSlowly I circled him, my fingers touched his hips and trailed across his firm buttocks. I let the blade in my other hand follow my fingers. Cool metal contrasted violently with the heat his body was emanating. It was a vivid reminder of the threat I currently wielded.\n\nA low murmur spread through Bane's Brothers as they all remembered the erotic pleasure he'd gotten when I'd dominated his ass. The big man had felt the intrusion of the plug in his ass and been excited by my ability to put it there. This control was similar and intensely exciting.\n\nBane's rock solid cock bobbed in front of him and I knew he needed release, the teasing was only to make it better.\n\n\"Stroke yourself with your hand,\" I ordered and Bane quickly complied.\n\nThe thick head swelled and stared to leak as his grip became more firm and the motions faster. I thought about the things I'd like to do to him and I felt his eagerness for more. My games were strange, he'd never imagined being treated in the way I imagined. Even odder was thinking he might enjoy it. The ideas excited him terribly.\n\nI put the sword back in it's scabbard and ran my nails over the strong muscles of Bane's back. My left hand raised and buried in his hair, my right hand grasped the firm muscles of his buttocks. He was caught in the moment.\n\nIn all his life only the women, with their talons and spears, had managed to force Bane's submission. In my imagination, he was eager to bend to my desires. A willing supplicant that would crave my touch. It was unique and consuming, a role he wanted to try.\n\nI delved a finger between his firm buttocks and teased the outside of his puckered little hole. The light teasing strokes were intended to make him want this and he did. Bane saw the image I held in my mind of a strap-on. He saw himself bent over, tied, and at my mercy. The teasing strokes became firmer and a needy moan left his lips.\n\nAs his excitement reached its peak and release, I reached forward and caught his spending. His knees were weak as the thick ropes coated my hand and slid toward the floor. Bane had no strength left as a grinning Christof wiped my hand clean.\n\nI stepped back from Bane and he sunk into a chair with a glazed look in his eyes. The goofy grin on his face was the most relaxed I'd seen them since they returned from the battle at the compound. It was good to see.\n\n\"You know us, wife,\" Damien said softly as he approached.\n\nI did know them. Each of them had needs different from the rest, but they had needs they shared as well. Right now they all needed release.\n\nThe tie in front of my outfit was made of a thick piece of soft leather. I undid it and pulled the strap free. The length of leather had run from the top to bottom. Its loss had allowed my night dress to fall open, exposing my belly and pendulous breasts to view. Teasing my audience I drew the leather strap over my breasts several times.\n\nFolding the leather thong onto itself several times made it look like the leather whip with many tails that Damien had once used on me. His breath caught in his throat as he saw what I was doing. I had long fantasized about doing this type of thing with him.\n\nKein was enjoying watching my breasts hang so freely. He'd not been able to ogle them since he got home. Off to the side he sat down and began to pull furiously at his long staff as he stared. My outfit allowed them to peek out as the fabric shifted and the effect was intoxicating for Kein. It was hard not to laugh at his exuberance.\n\nI wanted Damien's wrap off and his cock exposed, he obeyed without question, throwing the fabric to Evan. Damien's powerful form almost vibrated as he waited for me to start. He wanted to feel this.\n\nEver so slowly, I walked around Damien and took in the entire expanse of him I was presented with. The lead Brother was a large man, but more compact than Bane. The firm muscles in his back spoke to a life lived with a sword in his hand. Faint marks crossed his own natural stripes, were evidence of discipline at the compound. That had never been delivered like this would be, though. I took in his beautiful form and brought my makeshift flogger down on his back.\n\nDamien tensed as I whipped the instrument across his back and firm buttocks. It didn't hurt so much as warm the flesh. Still Damien had never been treated like this by me. As I moved to start on his chest he began pulling on his cock. The mock abuse made him crave more.\n\nI wanted more, too. As I whipped it across Damien's chest, Evan knelt before me. He scooted forward until I couldn't see him under my large belly. My right leg was lifted and laid over his shoulder. Christof steadied me from behind as Evan began to pleasure me with his long tongue.\n\nThe movements of my \"whip\" became more erratic as Evan worked. His tongue slid between my folds and I closed my eyes for a brief moment. It felt so good as his lips slid higher and found the bud buried there. My clit swelled and I nearly dropped my whip it felt so good.\n\nBehind me Christof acted to steady me as he pleasured himself. One hand was on my hip and his body was flush to mine. His cock was nestled in the warmth of my buttocks as his hand worked furiously up and down. My friend's breath was hot on my neck as he watched me \"discipline\" his Brother.\n\nEvan was relentless below me. He suckled my clit and ran his tongue over every part of my sex. His deft appendage even fucked me with shallow motions before he returned his attention to my swelling nub.\n\nThe intensity grew and I found myself striking Damien harder. He arched with each strike as I gave his skin a glow, from his neck to his hips and down over his upper legs. The soft striking sound reverberated in each of us as we enjoyed the erotic pleasure of this willing submission.\n\nFrom my side I heard Kein groan loudly. His cock was ready to explode as he watched my breast. Beneath me I realized Evan was also seeking his own release as he took my flavor on his tongue. Damien eyes were lit with passion as his breathing became faster and choppier. I heard the same excitement from Christof and knew we were all close.\n\nOne last swipe of the flogger over Damien's chest and we'd all had enough of waiting. Evan's tongue pushed harder on my wet cunt making me insane. The pressure built and when it released it took all I had not to call out. Around me, my husbands all found their pleasure as well. Feeling the orgasm of the five of us all at once was so intense, I felt as though I was floating for a moment.\n\nI woke up surrounded by strong arms and looking into large brown eyes.\n\n\"You were almost clumsy, wife,\" Bane laughed softly as he held me in his lap and re-laced my outfit.\n\nIn my moment of passion Bane had caught my dropping form. While I'd been in a haze of bliss, he'd made sure I was safe and unharmed. Now he redressed me as I lay languidly in his arms.\n\nA cool rag ran between my legs and Evan grinned and cleaned me up. He was proud not to have lost his ability after our separation. I had to be glad also as we quietly got ready to go back to bed.\n\nHodlen's family was resting and barely spared us a glance as we opened the drape and crawled quietly into the bed. They may have heard our game, but they had no interest, which I was glad for. Mycah's little family was sprawled around the bed, most of them resting on their larger family members.\n\nWe found our spots and cuddled together. There was not much space and I tucked myself quite comfortably between Kein and Bane. The bed was soft, my family was close, and we were safe. It wasn't long until I was soundly asleep.\n\nIt was early morning when I was awakened again. The moons were not set, but this was the time my men liked to go to the public bath. Evan's humor at the situation was the first thing I noted; warm breath on my face was the second. Little fingers pried my left eye open and I was staring blearily at Jonathan's face.\n\n\"Are you awake, Mama?\" he asked seriously, as though anyone could sleep with their eye pulled open.\n\nHands turned and twisted in my hair and I was positive Aiden was sitting behind me, feeling frustrated.\n\n\"Is she up, yet?!\" Niah whined pushing himself past Jonathan into my field of vision.\n\nMycah's voice sounded behind me and he practically begged Evan to wake me. The little family wanted to go back to the bathing pool.\n\nGrunting at the loss of sleep, I had to smile. A few moments of rest I would gladly give up to have my little boy here with me. Pushing myself up I heard Mycah's family cheer, now we could finally go!\n\nThe walk to the bathing pool was interesting. I soon learned that Damien's family was the lenient parent. Hodlen demanded Mycah and his Brothers walk together. If the boys wanted to see something, they all had to look as a group. It was not stifling, the way Damien and his Brothers had been raised, but it was more orderly. I thought the two families created a nice blend for the boys.\n\nWe turned into the tunnel leading to the bathing hall and I was immediately struck by the difference. Every torch in the tunnel was lit. As we reached the main pool, I sucked in a gasp. The place looked entirely different.\n\nThe men had installed torches all over the inside of the large cave. Even the secluded areas we used to use were well lit. There were men and boys in the pool, but I noted several nude families that carried weapons strapped to their thighs. They appeared alert and were not here casually. One of the families jumped into the water as we entered and began to patrol the pool.\n\nI snorted and got everyone's attention. It was the Paterian equivalent of a lifeguard. Of course, these men intended to kill any sharks they found. I actually felt a little pity for any aliens that dared enter this pool.\n\nHodlen continued to be an excellent male role model. He and his Brothers had brought the boys' and their own dirty laundry from the day prior. Hodlen insisted they clean their clothes first, most especially the boys too, although Mycah's family wanted to just strip and jump in.\n\n\"You must keep your things clean and in good condition,\" Holden explained to them. \"Your clothing is dirty and cannot be worn again until it is cleaner.\"\n\nThe little boys looked at the pool of water longingly, before turning back to Holden. I knew what they wanted.\n\n\"I could wash the clothing for Mycah's family, so they can swim,\" I offered the group.\n\nHolden was firm, but polite as he refused the offer.\n\n\"They must learn to care for their things,\" he told me. \"Life is not like it was in the compound. Men care for themselves and the boys must learn. We will help them, but they will be self-sufficient.\"\n\nThe logic made sense and I understood. This was a new world and I had a lot to learn about free Paterians."
    ],
    "authorname": "DoctorWolf",
    "tags": [
        "masturbation",
        "female dom",
        "novella"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-slave-to-the-servants-ch-36"
}