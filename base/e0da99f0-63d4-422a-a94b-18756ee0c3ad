{
    "title": "Love Knows No Color Pt. 12",
    "pages": [
        "After what seemed like a lifetime a doctor appeared in the waiting room. \"Shavonda Jenkins? Who's here for Shavonda Jenkins?\" I arose from my seat. \"Are you the husband?\" he asked. \n\n\"I am,\" I said. \"How is she?\"\n\n\"She's dehydrated and has low blood sugar and slightly low potassium. She'll be all right, but she does need to take better care of herself in her condition,\" he stated matter of factly. \n\n\"What condition is that?\" I asked, perplexed. Shavonda had no medical condition that she'd told me about.\n\n\"You didn't know? She's pregnant,\" he said. \"She didn't tell you?\"\n\n\"She can't be pregnant, because she can't have kids,\" I told the doctor. \"Did you tell her yet?\" I remember thinking this was a cruel joke they were playing on her.\n\n\"She's sleeping now. We put her on a drip to get her electrolytes back up. But no, I haven't been able to talk to her yet,\" he replied.\n\n\"Are you absolutely sure she's pregnant?\" I asked.\n\n\"I am. The blood test came back positive. But I've ordered a sonogram just to make sure,\" the doctor looked at me shaking his head. \"Neither of you knew? She appears to be pretty far along for you not to have known.\"\n\n\"She's been having mood swings, cravings and sickness for a while now. But since we were told she couldn't get pregnant we assumed it was nerves. We've had several court cases in the past couple months, and a wedding yesterday,\" I explained. \"Can I be the one to tell her?\"\n\nThe doctor agreed, and they let me back into the room. Since she was out of danger, they'd moved her into a regular room, but they were keeping her overnight for observation.\n\nI sat in a chair beside the bed, taking her hand in mine. I rubbed the back of her hand, and she opened her eyes. She smiled at me. \"Hey, baby. Did they tell you what was wrong with me?\"\n\nI grinned at her. \"Yes, they did. It explains the vomiting, the cravings and the mood swings. You've been extra horny lately because your hormone levels are through the roof.\" I started, not sure exactly how to explain to her. \"You are dehydrated and have low blood sugar and potassium. They'll be giving you a sonogram shortly.\"\n\n\"Sonogram? Does that mean I am...\" Shavonda let the question dangle.\n\n\"Apparently so. They tell me I put a baby up in you,\" I said. \n\n\"Wooooooo!\" she yelled. \"I'm gonna have a baby! Thank you!\" She kissed me repeatedly on the lips as the nurses came running to see what the commotion was about. Shavonda was ecstatically happy, smiling from ear to ear. \"Who else knows?\"\n\n\"Just me and you so far,\" I said. \"Tamika and Brian are still in the waiting room.\"\n\n\"Did they say how far along I am?\" she asked. \n\n\"No, but the sonogram will tell us,\" I said. \"The doctor said you were pretty far along. Last night I noticed a little bit of a bulge in your tummy, so I'd guess you're just about to show.\"\n\nIn a little while, the sonogram arrived. The nurse spread gel on Shavonda's belly and ran some sort of probe over her belly. I hurriedly dialed Althea's number. The image on the screen definitely showed a baby.\n\n\"Hey, Jason. I didn't expect to hear from you so soon. What's up?\" Althea said, worriedly. I put the phone on speaker. \n\n\"Von collapsed this morning. She's ok now, but there's somebody here I want you to meet.\" I placed the phone next to the sonogram monitor, where the baby's heartbeat could clearly be heard. Shavonda listened intently to the sound of the new life she carried within her.\n\n\"What's that noise?\" Althea demanded. \"It almost sounds like a heartbeat.\"\n\n\"It is,\" I replied. \"Meet your new grandbaby.\"\n\n\"Von's pregnant?\" Althea cried in disbelief. \"How? She was sterile!\"\n\n\"Miracles do happen,\" I said. \"And we've been blessed with a miracle.\"\n\n\"How far along?\" she asked. \n\n\"It looks like twelve weeks, give or take,\" the nurse told me. I passed the information to Althea. \n\nShavonda shook her head in disbelief. \"Twelve weeks,\" she said. \"That would put conception around the end of February, maybe the 22nd?\"\n\n\"It's possible,\" the nurse said. Shavonda and I looked at each other and bust out laughing. The nurse looked at us, eyes questioning.\n\n\"It's a long story,\" I said. \"Let's just say Feb 22 was a unique day for us.\"\n\nWe'd forgotten about Althea on the phone until we heard the squeal. \"James, your daughter is gonna have a baby!\"\n\nI let Shavonda talk to her parents while I walked back out to the waiting room. \"She's having a baby.\" is all I said. You'd have thought I told Tamika she'd won the power ball. I led her and Brian back to the room, where the baby was clearly visible on the monitor, the sound of the heartbeat filled the room. \n\nThe doctor told us to let Shavonda rest a day or two, and to make sure she ate a lot of fruit.\n\nI didn't try to call my parents right away, figuring they'd be on the road returning home. Neither had a cell phone. What was the point? They lived so far back in the mountains there was no service anyway.\n\nI ended up sleeping in the hospital room, while Tamika and Brian stayed in our hotel room for the night. The next day, Shavonda was released from the hospital, and I took her back to the motel to rest. I called Mom once we got Shavonda settled.\n\n\"Mom, it looks like you were right,\" I said. \"Von's pregnant.\" I held the phone away from my ear as a high-pitched squeal filled the room. \n\n\"Ed, Von's having a baby!\" I heard her tell Dad. With the phone on speaker, we were all able to talk. I explained Shavonda was about 12 weeks in, at the end of the first trimester. She would be showing quite a bit when we got together in July for Grandma's birthday. They were looking forward to seeing her baby bump.\n\nAfter I hung up the phone I laid down some ground rules for my pregnant wife. I was concerned about her and the baby's well-being. We'd been given one chance. We might not get another.\n\n\"You know what this means,\" I said. \"You have to start eating bananas, and we have to watch what else you eat. You also can't do any more solder work in the store. Teach me what you want done and I'll handle it. I can't have you breathing lead fumes and hurting the baby.\"\n\nShe called her doctor back in Pittsburgh, and was able to get an appointment the next week for prenatal care. We were lucky. Somebody had cancelled and there was a slot open. \n\nWe opted to continue the honeymoon. The doctor had told us we could continue to have sex as long as Von was comfortable with it, which she was. If anything, the thought of the baby being there made her desire me even more. The feeling was mutual.\n\n\"Did you mean it when you told Grandma you'd flood the family with little brown babies?\" she asked. \"You know we might be able to have more after this one.\"\n\n\"I sure did. As many as you want,\" I replied.\n\n\"I'd like to have at least two. A boy and a girl,\" Shavonda said excitedly.\n\n\"First, let's get this one delivered and healthy,\" I said. \"Then we can try for more.\"\n\nWe were out on the balcony, Shavonda leaning against the railing and me behind her, holding her as we watched the sun set on our first full day of marriage. It felt so good. Things were going our way finally. Though we had a lot of work ahead of us, we also had a bright future.\n\nThat evening I took the first of a weekly series of photos of Shavonda's naked form. These were not meant to be naughty pictures. Instead I wanted to document, week by week, the progression of her pregnancy, and the changes to her body. I also took a series of her fully clothed, for public consumption. I wondered when exactly the body changes would become noticeable. All we knew was the thought of Shavonda carrying my baby was turning us both on. \n\nThat night, and the next day, we spent naked in bed. We only dressed to go eat. Shavonda had her mood swings, and I held her during those times when she was in tears. But at least we knew she wasn't going crazy now. We knew it was her body nurturing the baby that was causing the erratic moods, the nausea, and the cravings. \n\nWhen I made love to her now, I tried to be as gentle as possible. Shavonda had packed the oils and jellies from her bachelorette party. I also found out she'd gotten a vibrator that fit on one of our fingers like a ring. It really didn't matter whose, it made for some intense stimulation. I knew if I held it to her clit I'd make her come. So, I did, while we were in a sixty-nine position. She was on top of me, grinding her pussy into my face, and I had my tongue buried deep inside her. Her mouth was working me into a frenzy of desire, the lips and tongue working their magic on my throbbing penis. I placed my finger with the vibrator on it directly on her clit, feeling its vibrations on my chin. The effect was immediate. Popping me from her mouth, she sat erect on my face, arched her back, and let out an unearthly growl, one I'd never heard from her before. It was followed by a high-pitched squeal as her orgasm took control of her body. I had the tiger by the tail, damned if I was going to let go. I licked and sucked her juices, but couldn't keep up with the flow. \"Jason, please, stop, Jason, Jason!\" she squealed as a second orgasm took her. As she shuddered through this one, I turned the vibrator off, letting her rest up a bit. She'd forgotten about me in the throes of her passion. \n\n\"Damn you,\" she said. \n\nRemembering what we were doing before she lost her mind, she grabbed my manhood in her hand and stroked me sensually. She turned her body around, and positioned her opening over my aching dick. Slowly, she lowered herself onto me, until she was sitting on my lap. Instead of riding me up and down, she worked her hips forward and backward while still sitting. Her warm wet sugar walls gripped me like a glove. I could feel her pulsing around me. I started to thrust back into her, enjoying the movements. \n\nShe moaned and started to ride me faster. She looked down at me, piercing me with her dark brown eyes. Her breasts bounced and swayed with her movements. I couldn't resist, and moved my hands from her hips to her nipples, feeling their hard, rubbery texture between my fingers. I could feel myself getting close, the pleasure was building to unsustainable heights. I fed myself a nipple, squeezing her tit with my hand, while I moved the other hand to squeeze her delectable ass. Somehow, I had the presence of mind to hit the button on the vibrator with my thumb. She jumped as the vibrations stimulated her cheek. I worked my hand lower until I had the vibrator in her special spot on her inner thigh, where it met her cheek.\n\nShavonda emitted that unearthly growl and squeal again, as she went over the edge yet again. She ground herself into me even harder, and I let her inner contractions take me over the edge with her, exploding deep within her convulsing tunnel. \"Jasonnnnnn!\" she screamed. \"Oh, noooooo.\" She collapsed on top of me in a quivering heap. She reached behind her to my hand and slipped the vibrator off my finger. I have no idea where she threw it, all she knew was she had to get it away from her sensitive spots, and she knew I'd continue to tease her as long as I had it under my control.\n\nWe lay there, hearts pounding, riding out the aftershocks. I'd worn her out, and she fell asleep on top of me, still connected together in intimate bliss. \n\nI loved my pregnant wife. And I knew she'd get me back good for hitting her sweet spot. She always did. I looked forward to my punishment.\n\nNext morning was payback time. I had the most interesting dream. I was naked in a field where people were flying model airplanes around me. Their buzz was turning me on, and my penis jutted out in a full-blown erection. People were pointing at me, saying words I could not hear. I opened my eyes to find the buzz was not airplanes. Shavonda had the vibrator on the finger and was running it over my most sensitive spot, the little flap of skin just below the head of my penis. The other hand gripped my base, holding me upright. She was watching me to see if I'd wake up. I was almost ready to blow, and I told her so. But she refused to remove the vibrator. She watched, fascinated, as I shot a geyser about a foot and a half into the air. We ended up in a wild sixty-nine. When she started to lick up the mess she'd made I knew I had to taste her as well. \n\nWe spent the rest of the week taking day trips around the area. On Wednesday, we revisited Dolly Sods like we did on our first trip to this motel. We also explored some other places in the vicinity, including Big Bend in the Smokehole Canyon. Shavonda felt like taking a walk, so we walked the loop trail around the bend. The loop was less than a mile. I found the bent and folded rock formations there to be fascinating and we spent much of the afternoon photographing them, with us posing as well. The tripod and extra-long shutter release cable I had in my camera bag came in handy.\n\nOne rock formation in particular looked odd. The trail ran over the top of it, and the smooth rock arched up in the middle, sloping down on either side. It sat about 20 feet above the river. It finally dawned on me what it was, and why it looked odd. Excited, I grabbed Shavonda by the hand, led her back down the trail to a spot where we could get down to the river, then we waded out into the shallow water. As I headed back upstream toward the formation, my hunch was confirmed. We'd accidently stumbled across the most tightly folded anticline I'd ever seen. The rock layers were bent completely double in the space of about five yards. The trail passed over the top of the arch, which could only be seen in full from the river.\n\n\"Von, would you look at that?\" I said. \"Can you imagine the immense pressure that rock must have been under to deform like that?\" She was, as usual, impressed. I was turning her into an amateur geologist. \n\nWe picked our way back to shore, and continued our trek. The other rocks were twisted in interesting ways as well, but nothing could have topped the anticline.\n\nShe handled the short one mile hike well, and we returned to the motel room where I made love to my pregnant wife. I loved the sound of that. My pregnant wife. The one I loved more than anybody else in the world, except my kids, was building me another child. One that was half her, half me. I wondered what the baby would look like. \n\nThursday, we headed east to Baltimore for crab legs, once again riding the train and streetcar into town. \n\nOn Friday, Shavonda was up for another hike, so I decided to try something just a little longer. We headed into Maryland, following 51 east of Cumberland. In about 25 miles, we saw the sign for what I was looking for and turned into the parking lot. Paw Paw Tunnel, an abandoned canal tunnel through a small mountain. Yes, they actually ran boats through a tunnel.\n\nThe tunnel was about a quarter mile walk from where we'd parked the car. Being a canal towpath, it was completely level, and an easy walk. We hiked all the way through the tunnel, into a narrow valley on the other side. On one side of the valley, bare rock tilted up at an odd angle, arcing slightly away from the trail and the canal. There were small grooves in the rock. Fascinated, I explained to Shavonda that the grooves were evidently put there by another layer of rock when the whole area was deformed eons ago. The other rock layer had long since eroded away. \n\nWe continued down the trail a little further, until Shavonda wanted to turn back. All told, we hiked a bit over three miles that day.\n\nShavonda was holding up well. She was pretty much up for any adventure I could think up. I couldn't ask for more. We were both in heaven on earth. Arriving back at the motel, I gave her a nice foot massage that ended up with me using my mouth more than my hands. I worshipped her pretty brown toes while she lay back on the bed and enjoyed her feet being pampered. \n\nAnd so the honeymoon went. We went on outdoor adventures during the day, and had our indoor adventures at night. It was like when we'd first met. We explored our bodies, discovering each other all over again. Though we'd never lost each other in the first place. She still had her bouts of morning sickness, and the cravings. It was rough on her, but she took it all like the trooper she was. She was having a baby! My baby!\n\nBy Sunday morning, her bulge had become more pronounced. It was now noticeable if you were looking for it. Tomorrow was the traditional Memorial Day cookout, and we knew everybody there would be looking for the first signs of her pregnancy. \n\nWe checked out and headed for Bedford diner one last time. The Indian clerk wished us a happy marriage as we turned in the room key. Shavonda had worn one of her dresses, and it was getting tight on her stomach. She proudly showed the lady her growing bulge.\n\nAt the diner, she had her liver, with the onions scraped to the side. I had the steak and eggs I loved so much. We decided to make it a train day, and stopped off at Juniata shops to see the locomotives being worked on, before heading over the mountain towards home. We stopped in Cresson for a takeout Pizza from Vito's, which we took to Cassandra and the railroad overlook park. I'd never taken her there before, and she really enjoyed the place. We sat at a picnic table overlooking the tracks, and ate our pizza as the trains slowly ground past clawing their way to the top of the mountain at Gallitzin. Westbounds, descending the mountain, sped past making sixty on their downhill run. Traffic was heavy for a Sunday, no doubt because of the holiday they were trying to move as much freight as they could. Tomorrow would be dead, as the train crews all worked into their home terminals for a much-needed break.\n\nWe left Cassandra around five. I wanted to be there when Rose dropped off the kids at eight.\n\nAlthough we didn't know it at the time, Rose had shown her ass again while we were gone. What follows is the account we pieced together from Barbara and Althea. \n\nRose was due to pick the kids up that Friday. They were staying with Althea, and Barbara had anticipated trouble so she arrived at my house before either Althea and the kids, or Rose. She was sitting on my porch when Althea pulled up, and quickly warned her about Rose, who had no idea we'd gotten married.\n\nWhen Rose pulled up a little while later, Barbara and Althea were sitting on the porch, chatting like the friends they were. \"Where's Jason?\" Rose demanded. \"And who are you?\" She glared at Althea warily.\n\n\"Jason and Von got married. They're on their honeymoon,\" Althea replied coolly. \"I'm Althea, Von's mother.\"\n\n\"M-m-married?\" Rose stuttered and looked like she was about to cry. \n\n\"She's pregnant, too,\" Barbara said. \n\n\"P-p-pregnant?\" Rose stuttered. She looked devastated.\n\n\"Yup, and they happy now. No more drama in their lives,\" Althea said.\n\nRose hardened her mood. \"I'll turn her and Jason in to the police for what they did,\" she threatened.\n\n\"Your word against theirs,\" Althea replied. \"There weren't any witnesses.\"\n\n\"If you do, don't bother coming home,\" Barbara said. \"They held up their end of the deal. Jason mortgaged his house to pay your bills.\"\n\n\"And if you don't leave them alone you'll have to deal with me. And Von's sister,\" Althea replied. \"And her brother and cousins. We're a strong family.\"\n\nRose looked scared.\n\n\"You know, child,\" Althea continued. \"Your mother is my friend. She's family now, because of the kids. In spite of what you did, she's become one of us.\"\n\nRose looked at Barbara, tears in her eyes. \"So, it's true? What Von said about you not liking me? About you being their family now?\"\n\nBarbara shook her head sadly, \"I'll always love you. You're my daughter. But what you did to those people... Just let it go. You've destroyed your life over this. If you'd have let it go, you'd still have everything you had. Now it's all gone and you only have yourself to blame. Just let it go.\"",
        "\"You know,\" Althea chipped in, \"We'd have welcomed you to the family had you not called Von out her name. We good people. You couldn't be bothered to see that. You let your hatred of what you didn't understand consume you. We are so much more than the color of our skin. Our parents and grandparents fled the south to get away from people like you. We work hard. We hold our head up and refuse to let your kind bring us down. Von's built a business up from nothing. What have YOU done, besides try to destroy things?\"\n\nRose glared at Althea, who continued, \"If you EVER do anything to one of my family again, I will make the rest of your life a living hell. Understand that. You came after my daughter. The ONLY reason you're still around is that Jason calmed us down. Next time, he won't be able to stop us. Choose your battles carefully. We will defend ours. And now, the kids, and Jason are ours. Your mother is ours too. And remember this. Von's pregnant. If she loses the baby due to any stress you put her through, we coming after you. So you best just let it be.\"\n\nBarbara added, \"And if I ever hear of you bothering them again, you'll be out on the street. Where are you gonna go? You're so far in the hole you can't afford to rent a place. Plus, you're going to Muncy sooner or later. It's over. It's done. I'm not tolerating this any longer. I didn't raise you to hate.\"\n\n\"But I was just trying to protect the kids,\" Rose protested. \n\n\"Protect them from what? A family who love them?\" Althea was pissed now. \"They much better off where they are now. They have two parents who love them, not two parents who can't get along.\"\n\nRose looked at her, speechless. Shavonda had held back, never saying a word when Rose had gone into her rants, yelling and screaming. Now, a much weaker Rose was up against Althea, who had our back. And Althea wasn't one to mince words. Even Barbara had our back. It had to hurt, bad.\n\n\"I'm gonna give you the kids for the weekend cause court says I have to,\" warned Althea, \"but let one hair on their head be harmed and I'm coming after you. Bring them back Sunday night at the usual time. Jason should be home by then.\"\n\nSo, we had no idea when we rode up that Rose had been tipped off. We sat on the porch, Shavonda on my lap, when Rose pulled up.\n\n\"Daddy! Ms. Von!\" the kids screamed, happy to see us. Rose followed them up on the porch. Shavonda stood, ready to fight if need be. I held onto her waist, ready to hold her back if necessary.\n\n\"You ARE pregnant,\" Rose said, noticing Shavonda's slightly bulging tummy.\n\n\"We probably conceived her in front of you,\" Shavonda said, rubbing salt in the wound. Rose looked defeated. I don't think I ever saw her this sad before.\n\n\"Von! Why would you say that?\" I asked irritably. \"Hasn't she been through enough?\"\n\n\"After what she put us through? What SHE's been through doesn't even come close,\" Shavonda said angrily. \n\n\"I-i-I gotta go,\" Rose stuttered. She turned and walked down the steps, shoulders sagging. We watched her drive away, then loaded the kids in the Cruze. Althea had left the carseats in the front door, and we quickly strapped the kids in. \n\nI made a quick walk through the house just to make sure everything was okay. What I saw amazed me. A lot of my stuff was gone, much of the rest was packed in boxes. The family had tried to move us while we were away.\n\nAs we drove away, I chastised my wife for her actions. \"Von, that was uncalled for. Rose basically has no future. You're better than that. Why would you rub it in like that? She's hurting really bad. She poses no threat to us.\" It was our first argument as a married couple. Not that I was any fan of Rose's. But I didn't want to see her hurt just for spite. That wasn't the way we'd run our relationship. \n\n\"So you're okay with all the things she did to us? Is that why you're taking her side?\" Shavonda accused me. \"Do you want to go back to her?\"\n\n\"No, boo. Not in a million years. I have the woman of my dreams right here beside me,\" I said in a soothing voice. \"But being bitter towards her isn't helping you, or us. Or the baby. Hatred will eat you alive. Look what it did to Rose. It would break my heart if that happened to you.\"\n\nWe rode the rest of the way across town without saying a word to each other. Even the kids were silent. They'd never seen us argue before. I felt like an ass for yelling at her, but she was out of line. I only did it to protect her from herself. She had cooled down and forgiven me by the time we got where we were going. A stop for ice cream helped with that. \n\nWhen we arrived at Shavonda's, now our, house, we saw boxes in the hall. They had even tried to unpack and put away things like dishes and silverware. We'd have to figure out where to put the rest of the stuff. Now that the celebration was over, we had the task of melding our lives together. This meant consolidating our things, deciding what to keep and what to let go. We would offer Tamika and Brian the things that we didn't want or need anymore, to help them get set up in the house. We'd already promised them the furniture.\n\nShavonda would have a harder time than me. In the coming weeks, she'd have to get all her accounts and ID changed over to her new name, Shavonda Waite. She was not going to be one of those women who keep things in their maiden name, or hyphenate their last name. No, she'd proudly adopt my surname as her own. To her, it took on a symbolism far beyond the name change. To her it meant we were now one, inseparable. She'd waited so long for the right person to come along and love her unconditionally, the way she deserved to be loved. And I was that person. Her instincts about me turned out to be true. And so, her dreams came true too.\n\nThey'd carefully placed all the wedding gifts in the living room along the wall, and after we put the kids to bed, we sat together and opened them. There were several towel sets, a new set of fine dinnerware, a microwave oven, a new set of pots and pans, and too many other things to mention. We made a note of who had given what, and began the task of sending thank you notes to everybody. \n\nI noticed a box sitting on the stereo, low and wide like it held paper. Opening it, we found our official wedding photos, including the one of me slipping the ring on Shavonda's finger. The red rose looked beautiful in her hair, contrasting with both her dark skin and her white gown. They'd framed that photo, and I took down one of Shavonda's pictures from the wall and hung the wedding photo in its place. In a padded envelope was a copy of our marriage license. They'd framed it for us. I placed it on the wall next to our wedding photo. \n\nI remembered the day we'd gone to get the license. How we'd filled out the paperwork. Shavonda Marie Jenkins. Race: African American. Jefferson Scott Waite. Race: Caucasian. It felt good to see it all on paper. Now, it felt even better to see the marriage certificate on our wall, framed, a reminder to all who visited we were now officially a family. Right next to the photo of our special day. \n\nLater that evening, I took the second series of photos of Shavonda. She enjoyed posing for these ones even more than normal. Never camera shy, Shavonda had taken nude photos for me before, and even allowed me to take them on occasion. She'd even taken some of me. But these were different. They were documenting the rapid changes her body was undergoing as the baby developed. Our intention was to put them in a slideshow, and make a scrapbook. We already had the first sonogram photo, the first photographic evidence of the new baby's existence.\n\nThe next day we went to the traditional Memorial Day cookout at Shavonda's parents' house. We, and especially Shavonda, were the center of attention. Everybody wanted to run their hands over her belly. The older women soon kidnapped her, and they retreated to a back room where they gave Shavonda child rearing advice and swapped stories. \n\nLater, we danced on the patio like we always did at family functions. I heard somebody say, \"I wish I could find somebody to love me like that.\" I have no idea who it was, but it made me feel good. I was where I belonged, dancing with the woman who'd become my world, during her family who'd taken me in as one of their own. Me, a kid from so far up in the mountains our small village didn't even appear on highway maps.\n\nThe kids were running around playing with all the other kids in the extended family, and having a blast. When we took them home just before sunset, they were both asleep before we got home, even though the drive was less than ten minutes. I carried them both in the house and put them to bed. Shavonda wanted to help like she usually did, but I didn't want her doing any heavy lifting.\n\nKids in bed, we settled in the tub for a bubble bath before turning in. Shavonda had the soft r&b playing, and the pine candles filled the room with their heavenly scent. As I washed her front, I said, \"I guess we can call this baby making music now.\"\n\n\"I guess.\" Shavonda replied. There was no shadow across her face like before. The doctors had been wrong. She COULD have a baby. There was no reason for sadness now.\n\n\"You know I wanted to call it that all along,\" I said softly, \"But I knew how much it hurt you that you couldn't have one.\" She slid forward and embraced me, our soapy bodies held tight against each other.\n\n\"Thank you for caring,\" she whispered. \n\nWork the next day went smooth. My coworkers all asked how the honeymoon went, and I told them it was great.\n\nThat evening when I got home, I took Shavonda and the kids out shopping for maternity clothing. We got her a few dresses, because hers were getting tighter by the day. I also bought her some new bras, 36D, a cup size larger than she normally wore. I had no idea how long it would be before she was too big to fit her current bras, but at least she'd have something to wear when she did. \n\nWednesday night, we had one final train night at my old house. Everything went smoothly. We were Joined by Brian, and James, Shavonda's father. While the regulars ran trains, including Shavonda, the two visitors were under the tables figuring out how to cut everything apart into manageable pieces. I let Shavonda work a dual role as train dispatcher, and run her beloved Allen Turn, while I consulted with James and Brian. I knew that once we got the pieces out the cellar door and into the alley, the rest of the move would be easy. We'd have to block the alley with the moving van, so we had to have everything ready to load in one shot. Once at Shavonda's. we could walk everything in off the street through the garage and into her, our, basement. There was ample room there for everything, and I could take my time with reassembly. We planned the move for Sunday while Shavonda and the kids were at church. I told her to give my apologies to Reverend Frazier.\n\nI was also able to talk with Danny about a solution to Shavonda's breathing of lead fumes. He custom painted models on the side. As such, he had installed a paint booth which vented the toxic paint and solvent fumes outside. I figured it could also be used to vent solder fumes as well. Danny told me the make and model he used and I ended up ordering three of them. We'd install one at each store, and the third in the garage where Shavonda had moved her home workshop. I still didn't want her doing solder work, but at least she would now be able to be in the same room while others worked. The two stores had once been bars or restaurants, and had once had ventilation fans. The openings were both there but walled over with metal plate on the outside and drywall on the inside. Adding a vent pipe from the paint booths would be as simple as adding a vent pipe for a clothes dryer. The garage posed a slightly different problem, as the garage walls were cinder block. But the main floor of the house itself sat on wooden joists above the block walls, and the space between the joists proved to be the perfect place to route the vent pipe. We punched through the aluminum siding just above ground level toward the rear of the garage with a hole just large enough for the pipe.  \n\nSaturday would be spent cutting the railroad into six sections for the move, disconnecting the wiring, and removing the table legs. But first we had to box up the cars, locomotives and buildings. While we were doing that, Brian and Tamika would be moving the rest of my stuff out to Shavonda's and start moving their stuff in. By weekend's end they'd be living in my house, and I'd be permanently transplanted into Shavonda's. Phase one of married life would be complete. \n\nSaturday also happened to be Brittany's sixth birthday party, and Shavonda threw her a birthday party in the backyard. Most of the kids from the family who they'd played with on Memorial Day, plus Patty's kids, came over. I put in time in the morning boxing up my trains, spent the midday with the kids, then headed back to my old house in the afternoon to disassemble the railroad. It took less time than expected, mainly thanks to Brian. While we knew him as the kid who sold turkey legs, his permanent job was as a carpenter who specialized in building demolition. As such, he was used to figuring out how to cut things apart in ways where they could be salvaged with minimal damage.\n\nThe move went well. There was some damage to the mountains during the move, but the bridges were undamaged. That was my biggest concern. Mountains could be rebuilt more easily than the bridges. By Sunday evening, I was able to get the legs back on the tables with the help of the others, and we assembled the railroad back together. The hard part was done. It would be a couple of weeks before I got the track and wiring reconnected and trains running again. It would be months before I had the time to repair the damage to the mountains. But the hard work was over. \n\nThat night, I'd taken the week 14 series of photos of Shavonda's pregnancy. She was getting a little larger every day. In another week or two, her pregnancy would be noticeable even to those not looking for signs. Her nausea seemed to be less, and she seemed to have a bit more energy.\n\nMy training on the soldered aspects of jewelry making was under Velma, who was a good teacher. Within a couple of days, I had the knack of it. The fact that I'd done extensive work with a soldering iron on my railroad and locomotives certainly didn't hurt. I was used to doing close tolerance work. Once my training was complete, I'd spend an hour or two a day working on whatever was needed by the stores, and my work was then shipped to the stores where the other employees would finish my work. Some pieces were assembled but needed a touch of solder to hold the finished piece together. These were carefully boxed up and sent to me for work. Not all solder work was done by me, but I did pick up the work Shavonda used to do. \n\nPreviously, my helping out around the store had been limited to polishing the semi-precious stones we used in the pendants, and running them through the saw so that we had blank slices of uniform thickness. I'd also saw and polish the geodes we sold. As a former geology student, the geodes fascinated me. Volcanic in origin, they looked like a normal rock on the outside. But when you sliced them open, there were beautiful crystals inside. The crystals came in different colors, depending on the geode. We had several around the house, with clear, red and purple crystals, and I'd always admired them. \n\nThis freed Shavonda up to take over the lighter duty tasks in the stores. With her pregnancy, everybody knew they'd have to make adjustments, and their individual duties would change. It was a perfect time for cross training. \n\nOne thing we could do together was visit Penndot to get our drivers licenses changed. I needed to change my address to hers, and she needed to change her last name to mine. One Saturday morning when Rose had the kids, we sat in the plastic chairs of the waiting area, among the teenagers waiting for their driver's tests, awaiting our turn to speak to a clerk. We found out too late that Penndot didn't take credit cards or cash, and lost our place in line while we went to the supermarket for money orders to pay the fees. It was after noon when we got out, and we decided to get some lunch. \n\nShavonda had craved pizza that day, so we went to a shop I knew in Turtle Creek. They didn't have a seating area, so we got some paper plates from them, and some plastic silverware, and drove over to Pitcairn yard to sit and see some trains while we ate. I had my scanner with me so we listened to the train dispatcher talking to the trains.\n\n\"Pittsburgh East Dispatcher to Signalman Jenkins, over,\" crackled the radio. \n\n\"Isn't that your dad?\" I asked Shavonda. \"I wonder where he's at today?\" \n\nJames answered the dispatcher, who told him he needed control of Traff, as there were several trains coming. Traff was the east end of the yard, and not far from where we were sitting. Evidently James was working on the signal circuits, and had local control of the switches and signals. The dispatcher needed control back so he could line up the trains. I knew exactly where the control box was. \"Von, wanna go surprise your dad?\"\n\nWe drove through the abandoned part of the yard just east of the intermodal terminal, and pulled up next to a railroad maintenance truck. I helped Shavonda out of the car and we walked over to the rusty relay building. James was inside looking at something when we peeked in the doorway.\n\n\"Hi, Daddy,\" Shavonda startled the poor man and he nearly cracked his head as he straightened up.\n\n\"Von, what are you doing here?\" he asked. \"Y'all know you're trespassing, right?\n\n\"We heard you on the radio and figured since you had to give back control you'd have a little time,\" I explained. \"We have some pizza in the car if you're hungry.\"\n\nWe sat in the folding chairs I kept in the Jeep, and had lunch while we talked. He seemed glad to see us, and after awhile he showed us the inside of the building, where all the control circuitry for the signals was. Shavonda was a little lost at his explanations, but I knew enough about railroad signals that I was able to follow what he was explaining. He was in the middle of a routine test of the circuitry, which required that he throw the switches in different routings and check the circuitry to make sure the proper signals were being displayed. Since that required local control of the facility, he could do nothing until the trains passed by. He had the time to chat. \n\nAfter four trains had passed, he called the dispatcher and received control back. He could continue his tests, so break was over. We said our goodbyes, and left him to his work. All in all, it was a nice day.\n\nThe month of June passed quickly. During this time, Shavonda's nausea went away almost completely, but her back and legs hurt. I spent a lot of time in the evenings before bed just massaging her wherever she hurt. Sometimes this led to sex, but most times she wanted to be rubbed and held. I watched in fascination as her womanly curves became more pronounced, and her belly filled out. By the end of June, she was beautifully showing, and her glow lit up whatever room she was in. She was having a baby! One she never thought she'd have. But there was also an underlying sadness and trepidation as well. It was right around his time that she'd lost the first baby, or rather had its life taken from her at week 20. Shavonda was now at week 19.\n\nRose was still picking up the kids at Tamika's house, formerly mine. She seemed more and more depressed as the weeks went by. Brittany and Ethan told us she was still fun to be around, and took them to the park with Barbara when they were over. I was glad Barbara was there. I still didn't trust Rose, and Barbara was like having a guardian for the kids while in Rose's custody.",
        "I never knew how much of Rose's depression was due to her impending future, and how much was due to watching Shavonda's pregnancy and the way I doted on her. I think on some level Rose understood that I would have done the same for her when we were married, except our circumstances had forced me over the road. At any rate, it was apparent to Rose that Shavonda and I were a happy couple enjoying the experience of a lifetime. It was an experience she'd missed out on, having chosen through circumstances to bear her pregnancy and childbirth alone while her husband roamed the highways trying desperately to keep the bills paid. I had been in Tulsa the day Brittany was born, and Chattanooga when Ethan was born. Both days, I'd have much rather been in the hospital holding her hand as she brought my children into the world. And she probably still blamed me on some level for not being there.\n\nWith Shavonda, I had the chance to witness the birth I had missed twice before. And I was looking forward to it. We'd already discussed how we were going to proceed. Shavonda wanted as natural an experience as possible. And I was going to be there with her, holding her hand the whole time. She'd also expressed the desire to breastfeed the baby when it came. I'd taken her out and bought several drop cup nursing bras for her in anticipation of that day.\n\nShavonda's addition of fruit to her diet in large quantities proved to be a hit with the kids. They got to have bananas and apple slices every day. And we all drank a lot more fruit juice than we did. With the lessening of her nausea, Shavonda's appetite had returned with a vengeance. She was eating for two. I tried to cook for her when I could. On my end, the increased duties I had taken on meant I was often running on four hours of sleep or less every night. \n\nWe'd had to make additional changes to our lifestyle. There was no more relaxing with cherry rum, at least not for the duration of her pregnancy. We were extra careful, we had a blessing and didn't know if we'd ever have another chance at having a baby. Another thing that changed was in the way we used the two cars. Shavonda would take whichever one had the most gas. I'd drive the other one and fill the tank when necessary. We would switch cars the next day, with her driving the one I'd just fueled. I didn't want her pumping gas and breathing the fumes.\n\nWe'd gradually stopped taking bubble baths as it became harder for Shavonda to get out of the tub. Instead, we showered together most nights, me washing her back with the bath gloves she'd bought. While I was exhausted most of the time, we were both still hot for each other, and the shower sessions always led to some heavy petting under the hot water, even if it didn't always lead to the bedroom. Afterwards, I'd lotion her like I usually did, but now I was also soothing her aching back as well.\n\nBy the Fourth of July cookout, her belly was big enough it bothered her. She thought she looked fat. \"No,\" I told her. \"You're pleasingly plump. And even sexier because of the baby.\"\n\nThe ladies of the family made an even bigger fuss over her than they did on Memorial Day, because she was so proudly showing. By this time, she'd already gained about 7 pounds. We made sure they had fudge ripple for her at the cookout, and she invaded Althea's freezer several times during the day for ice cream. \n\nDancing was becoming awkward. Her belly protruded enough by now that it was affecting our ability to slow dance, though we still did well on the faster songs. \n\nThat night, after we were home and the kids were in bed, we had our usual shower together. Afterward, while I was lotioning her belly, Shavonda stopped me. \"Did you feel that?\" she asked incredulously. \"I swear I felt the baby kick.\" I ran my hands over her belly but felt nothing. A little while later, she felt it again.\n\n\"There's one way to be sure,\" I said. I blew a bubble on her stomach right where she said the baby was. It startled her, but most importantly, it startled the baby.\n\n\"I definitely felt it that time,\" Shavonda said with tears in her eyes. \"That has to be the baby. You scared her.\" I held her as she let herself go. But these were not tears of sadness, they were tears of joy. \"I never got to feel the baby kick the first time. I was expecting it any day when everything went to shit.\"\n\nI hoped we'd passed a milestone tonight, and that Shavonda would finally be able to put the past to rest. Call me jealous in a way, but deep down I resented the subtle hold Tony had had over her emotions for all these years. Now I could freely talk about having babies, without causing my queen pain. The hold was slowly loosening the more the baby grew. I knew she'd never be able to let it go completely, but at least now she was at the point where it wouldn't be a cloud across her emotions, showing itself whenever somebody inadvertently mentioned her and pregnancy. \n\nThat weekend, Rose had the kids. We took Saturday and went up to Presque Isle on Lake Erie and walked along the beach barefoot. The sun had made the sand hot, so we walked the surf where the water had cooled the sand. Shavonda was wearing a two piece red and white swimsuit we'd bought on the way up. We often had to do things like that now. None of her old clothing fit anymore.\n\nFinding a picnic table, we sat. We must have made quite a sight. A gorgeous but very pregnant dark-skinned woman lovingly applying sunblock to a pale white man with definite native American features, with braided tail. We walked along the beach hand in hand, Shavonda carrying a small bag that contained her sandals and the sunblock. I'd left my sneakers in the car, and wore only a pair of blue denim cutoffs. It was obvious we were in love by the way we acted. We walked in the perfect synch only those who have been intimate for a long time can master. Every so often we stopped to embrace and kiss, our mouths devouring each other. The beaches were crowded as they usually are on a summer weekend, but we didn't care.\n\nBy the pine tree, Shavonda set the bag down on the sand, and led me into the water. I looked at her lovingly. \"Are you sure?\" I asked. Her eyes blazed with lust and told me all I needed to know. We walked out chest deep into the lake. Turning to me, she reached down into my shorts to find my erection. \"Mmmmm, I see somebody is ready. I am too. Take me, baby. Don't hold back.\"\n\nBending slightly, she worked her suit bottom down over her hips and completely off her body, lifting one leg at a time to remove them. I'd already unzipped my shorts and lowered them. Bottom in hand, Shavonda leapt up into my arms and wrapped her legs around me. Her buoyancy in the water helped by making her much lighter than she was on land. She held onto my neck and leaned back in the water enough not to crush the baby. I reached down between us and guided my manhood into her waiting tunnel. \n\nIt was a weird sensation, being in the lake making love. With probably 50 or 100 people in plain view on the beach, not one suspecting what we were doing. To them, we probably looked like just another couple embracing in the water. \n\nMost interesting was that the water had washed away most of Shavonda's natural juices. She had anticipated this, and unknown to me had lubed herself with Vaseline when she changed into her swimsuit. It was a different feel than I was used to. With the water taking most of her weight, the sex itself was almost effortless. We found a pace we were able to maintain, looking into each other's eyes and moaning softly. Letting the sensations control our movements. Laughing, I realized she still had her swimsuit top on. It was probably the first time I'd ever made love to her with her breasts covered. It didn't matter. We were doing what we needed to do, what we'd talked about the previous summer when I'd introduced her to this very beach in a rainstorm. There'd been nobody to see us that day. Now everybody could, but nobody knew what we were doing. \n\nWe must have made love for 45 minutes to an hour, but I wasn't tired. I massaged her sweet spot under the water, she shook with her pleasure, her inner walls stroking me and bringing me closer to my own release. I didn't let up my massage or my thrusting, which was becoming more urgent. And unlike most times, Shavonda didn't resist me when I rubbed her inner thigh and ass cheek. She just lay slightly back and enjoyed herself as the sensations took her to new heights. Being a man, I often wondered what it felt like when I massaged her there. Why, of all the sweet erogenous spots I'd discovered on her body, that one was the only one guaranteed to put her over the edge. Why she normally resisted my touch on that spot. And why, here in this place, she chose to not resist and let me give her sustained pleasure. \n\nAs we made love this time, my pleasure slowly built to a peak. It wasn't the normal, bring it right to the edge then back off dynamic I was used to. Normally, I had some semblance of control. As long as I was in the right state of mind, I could stop myself from coming when I needed to, even pulling out of Shavonda if I had to. Thus, I decided when to let her pull me over the edge. Shavonda was multiorgasmic, so prolonging both our pleasure became my goal. Here in the water, I wasn't walking the edge all the time. Here the pleasure just built up slowly. I could thrust into her as hard or gentle as I wanted without fear of losing my nut, it just built. When I was finally ready, I looked into her eyes, my expression must have been pained, because Shavonda whispered, \"It's okay, Jason. Let it go.\" I thrust myself hard and deeper inside her finally bringing myself to the edge. I remember seeing sailboats in the distance as I emptied myself into her. \n\nWe stayed like that in the water, still connected, twitching with the aftershocks for a long time. Finally, her legs released me, and Shavonda slid down my body until her feet touched the sandy lake floor. \"Wow,\" was all she said. She leaned over and put her bottom back on, while I pulled my shorts back up and zipped them. Legs rubbery, we walked back to shore and collapsed, laughing, on the sand. \n\nAs her belly grew, Shavonda had taken to rubbing it as she sat, cradling it as she walked. As we lay on the sand, side by side looking into each other's eyes, she absently rubbed her tummy. It was a nurturing gesture, and I knew right then that she was in her element. She'd taken to motherhood like a duck to water, pampering my children while providing the necessary discipline to keep them in line. And never a word spoken in malice towards them. I knew she'd treat the baby the same way. \n\nI only wished I'd have met her ten years earlier. Brittany and Ethan would look like her, and there would have been no Rose. There would have been no Tony. There would have been no lost baby. All the hurt and pain we'd both endured in our separate lives over the past ten years would never have happened. But I knew that it probably wouldn't have worked out back then. Neither of us were ready for each other. We both had to be kicked around by life, in order to appreciate the gems we had in each other. \n\nShavonda was lucky. She'd had the full support and backing of her family when her world exploded. I didn't have that. I was the only Waite from our family in the state of Pennsylvania. While they never wavered in their support of me, my closest family members were 300 miles away. There wasn't a lot they could do over the phone. I had to bear the brunt of my problems on my own. That was changing now. I had her to hold me when I felt down, to cheer me up, to love me.\n\nThat Sunday night, we had a little altercation with Rose. In two weeks, normally Rose's weekend to have the kids, we'd be heading to Grandma's birthday. I informed Rose she couldn't have the kids that weekend, but we'd give her the two weekends after that as a compromise. I thought it was a reasonable accommodation. \n\nRose, however, had other ideas. \"You do that and I'll file a case for you interfering with the custody agreement,\" she threatened. I wasn't concerned. Rose was on short time. She'd be gone before the hearing even if she did file.\n\n\"Go ahead and file,\" I gritted as Shavonda glared behind me. \"You'll never see the hearing, and if only one of us shows up, we win. You'll be in jail soon. Take what we offer. It's the best you're going to get. We've tried to abide by the court order, but Grandma is 84 and we don't know how many more years she'll be around. The kids are going with us and there's nothing you can do about it. Now do you want them the following weekend or not?\"\n\nRose looked at me. She was not used to me yelling at her. In our marriage, she'd always been the emotional one, carrying on about little things. Now, instead of the easy-going man she'd known, was one who stood up to her and told her what was up. It was yet another manifestation of the hold she'd lost over me since Shavonda came into the picture. \"Fine,\" she said angrily. \"I'll take them the following weekend.\"\n\nI had put in for Friday and Monday as vacation days. July 1 was my anniversary date on the job, so I had two weeks more vacation days to work with. Mom and Dad had invited James and Althea down as well, and we started off for southern West Virginia. I'd bought a set of two way radios with a 10-mile range for the trip, so we could keep in touch during the long drive down. We didn't want them getting lost if we got separated. \n\nThe trip took longer this time because Shavonda had to make more bathroom stops due to her pregnancy. It took us over 12 hours instead of the normal 8 or so going the most direct route. I didn't take James and Althea on the scenic route because I wanted them to be able to find their way home if we got separated on the way back. We took 79 south to 19, having an early lunch in Fairmont at a little soul food restaurant called Aunt Baby's I'd heard about. We all had fried chicken, washed down with pitchers of Kool aid. It was great. This was the first time we'd eaten out with James and Althea since the engagement party. We certainly attracted some attention with our mixed family. The staff fawned over us, especially when they found out the pregnant woman was my new wife. I told Shavonda we'd have to make a point of stopping here every time we went south. She agreed.\n\nI told James and Althea that my parents would probably have something fixed up for us to eat when we got there, but if they wanted to stop for dinner to just let us know. I made the same stop at the New River Bridge we'd made last summer, the spot where we'd taken the first Love Knows No Color photo. I had an idea for the next photo, and I asked Althea to take the photo since she knew how to use my Nikon. I sat at the picnic table with Shavonda standing beside me, belly protruding. I put my hand on her belly and put my ear to it as well, as though I was listening to the new life inside her. We both smiled at the camera. The photo came out better than I had hoped. It showed two expectant parents, of different races, obviously thrilled at the new life they'd created together. \n\nAfter a quick stop at a nearby Burger King, we continued on our way. Burger King was more agreeable to the adults than McDonalds would have been, and the kids were thrilled to eat fast food. Full, they were soon asleep in their car seats. We found 64 and headed east to White Sulphur Springs, where I pulled over. I explained to James and Althea that we were on back roads from here on in, and still had about an hour to go. If we got separated, they were to call us on the radio and pull over and tell us what they saw. I was familiar enough with the roads I'd be able to find them.\n\nIt was about 7:30 in the evening when we finally pulled up to the farm. As usual, Mom, Dad and Grandma were on the porch waiting for us. When Grandma saw me open the door to the Jeep, and a very obviously pregnant Shavonda ease her way out, she smiled from ear to ear. I was surprised, given the opposition she'd had to our relationship at first. Obviously, she'd come to terms with our color difference, and was thrilled to have another Grandbaby on the way.\n\nMom had made pot roast with roasted potatoes in gravy. I loved how she had the meal waiting for us after our long journey. We all sat around the kitchen table and ate, while swapping stories. With the kids still asleep, we'd put them in the same room they'd occupied the last time. James and Althea were given my old room, Mom wanted to give me my parents' room but I refused. Shavonda had wanted to try camping, and we pitched a tent in the backyard. I'd bought an air mattress for her, which we blew up in the house and carried out to the tent. I'd also brought two sleeping bags. We wound up unzipping them and using them as blankets. Since Shavonda was pregnant, I wanted to make sure that where we went camping had the comforts of home. Next year, after the baby came, we'd go primitive camping so she could get the full experience. We were both looking forward to that.\n\nWith camp set up, we all sat on the back porch talking until late. Mom said to us, \"I told you she was pregnant. You didn't want to believe me. Von you look happy. Is this what you wanted?\"\n\nShavonda smiled, \"Yes, ma'am. And I can't think of a better daddy.\"\n\n\"Well, I'm happy for you two. Every loving couple should have a baby,\" Mom said. \"Do you know if it's a boy or girl?\"\n\n\"No,\" we replied together. Shavonda finished, \"We'd like it to be a surprise, because it really doesn't matter. As long as we have a healthy baby we'll be happy.\"\n\n\"I noticed you are feeling better now. Morning sickness gone?\" Mom asked.\n\n\"Yes, it's mostly gone, but I still have the cravings. The kids love it. They get to have ice cream and bananas all the time,\" Shavonda explained. \"I'm glad I'm pregnant. We were starting to worry about my mood swings. We thought it was stress, and that I was cracking under the stress.\"\n\n\"You did very well, considering what we went through,\" I told her. \"The baby is healthy so far, and given what we were doing before we found out, we're pretty lucky.\"\n\n\"What do you mean?\" Mom asked.\n\n\"Shavonda was working with a lot of lead solder,\" I explained. \"We were also drinking a lot of rum. Neither of us was eating healthy. That's all changed because of the baby.\"\n\nAlthea spoke up, \"It's a miracle. Shavonda wanted a baby more than anything. They told her she couldn't conceive. We all ignored the warning signs because we thought it was impossible. You the only one knew what was going on.\"\n\n\"Well, we fell in love with Von the first time we met her. I was concerned for her. We didn't want to see anything bad happen to her,\" Mom replied.\n\n\"I'm glad we found out in time,\" I said. \"She would have shattered if she lost this one. And I don't know if I'd be able to put her back together. So, what caused Grandma's change of heart?\"\n\n\"Althea did,\" Mom said quietly. Turning to Althea and James, she continued. \"I know you knew she had reservations about the mixed marriage. And yet, you welcomed her to your family with open arms. She was able to finally realize Von came from good people. Don't get me wrong, she loved Von too the first time she met her. But her generation saw things differently. They didn't accept interracial marriages even if they loved both the man and the woman. Jason pretty much told her off last time he was here. We had to talk her into going to the wedding. She felt betrayed. But then you two threw a party to welcome us to your family, and she hit it off with several ladies her own age. They explained we all wanted the same thing, to see Von and Jason happy. And that neither would be happy without the other.\"\n\n\"That's what we do,\" Althea said modestly. \"We may not have a lot, but we got big hearts.\"\n\n\"I'm just glad both families gave us a chance,\" I said. \"Mom, I knew once the initial shock wore off, you'd see Von the way I did.\" Shavonda sniffled, tears in her eyes. She snuggled up to me and I instinctively rubbed her back. \"She's one special lady and I thank God every day that she loves me.\"",
        "\"And you,\" I continued, speaking to Althea. \"You'd have run me off, but you didn't. And for that I am forever grateful.\"\n\n\"You were a good man,\" Althea said. \"Trust me, I had a long talk with Shavonda about you. By the time you came to the first cookout I knew more about you than you did. And I knew, even then, she loved you. And I could see in the way you did things for her you loved her too. Who'd have taken her to his special place, and dug a cactus out of the ground for her? If I'd have seen any sign you hurt her, you'd have been gone. But you passed the test easily. You have supported her in every way possible, and never tried to control her. You let her flower bloom.\"\n\nShavonda was falling asleep on my shoulder, so I bid everybody goodnight and walked her to the tent. I stripped her half-asleep body out of her clothes, and lay naked with her under the sleeping bags. Something was missing. Tomorrow night, we'd have to have a camp fire going in the fire ring. Just to make the experience complete. Tonight, I just snuggled up against her and held her tight. We fell asleep to the sounds of the middle of the night trains in the valley below. Even though they were over a mile away, they sounded like they were coming through the tent.\n\nIn the morning, we made love in the tent. Shavonda had gotten enough rest that she felt up to the task, and we hoped we didn't wake anybody sleeping in the house 100 yards away. Cuddling through our aftershocks, we basked in the afterglow. I always felt close to her during this time. Before her, after sex, I usually wanted to get as far away from the woman as possible. But with Shavonda, to leave was to tear out a piece of my heart. It was different from the very beginning. And not just because of the racial difference. While that remains a huge turn on to this very day, our connection ran much deeper than that. While I was least expecting it, she'd stolen a piece of me. It had happened long before we first met and spent that unforgettable night of passion. I hadn't realized it at the time, and honestly never thought it was possible after Rose for anybody to get that close to me. But Shavonda had easily pierced the wall I'd built around my heart. She did it by listening to me, by caring what I felt, by chatting online, and later listening to my voice on the phone while I bared my soul to her. \n\nWe dressed in the warm morning air, and walked hand in hand to the house where Mom was already making breakfast. Shavonda tried to help her, but Mom wouldn't let her. Instead, when Althea got up they both worked in the kitchen, making sure Shavonda stayed seated. I did my part by putting her feet in my lap and massaging her legs. She'd been complaining of sore calves lately. I didn't know if it was pregnancy related, but if she was in pain I wanted to ease it.\n\n\"Would you look at that?\" Althea said softly to Mom.\n\n\"He does that without even thinking about it,\" Mom said. \"Last time they were here, he rubbed her feet for an hour. It's like he instinctively knows what she needs. And she knows what he needs.\"\n\n\"Ain't young love wonderful?\" Althea said. I looked into Shavonda's eyes and smiled. They were talking about us like we weren't there. \n\nAfter a breakfast of homemade waffles and eggs, with bacon and sausage for whoever wanted it, we wandered off. Shavonda wanted to go for a ride in the mountains. When your queen wants to go sightseeing, you indulge her. In this case, how could I say no to the only woman who I'd truly ever loved? \n\nShe wanted to go to KR, the spot on the railroad where it topped the mountain via a mile-long tunnel under the summit. I drove her there, kind of anticipating what she had in mind. We were in the usual morning lull, so seeing trains wasn't what she had in mind. When we arrived, she confirmed my hunch. \n\n\"Remember last year when you took me here, and you promised me this year we'd make it our own?\" Shavonda asked me. I nodded. She got out of the car and pulled her maternity dress over her head. \"Make love to me, Jason,\" was all she said. She bent over the hood of the Liberty, wiggling her chocolate ass invitingly. There she was, clad only in purple bra and panties, enticing me with her body in one of my favorite places in the world. \n\nI knew I didn't want to take her from behind, not with the baby there. I didn't want to crush it against the hood of the car. Instead, I had her turn around and I lifted her onto the hood. My hands gripped her panties and I pulled them down over her legs and sandals. She quickly unsnapped her bra and flung it to the side, as I removed my shirt and pants. She looked so good laying back on the hood, legs spread, belly heaped in the air. I had to taste her. I bent down between her legs and spread her lips with my hands. My tongue found her clit and I gave it a pull with my lips as I licked it. Shavonda shuddered with delight. I moved my mouth lower and stuck my tongue deep inside her, swirling it around her inner walls. Her clit rubbed my upper lip as I ate her. Her hands grabbed the back of my head, holding me in place. \"Don't stop,\" she moaned. I had no intention of stopping until she came on the hood of my Jeep. Her orgasm wasn't far off, and her moans became increasingly louder as she frantically rolled her hips against my face. Her juices were delicious, with a hint of our lovemaking earlier in the morning, and her scent was in my nostrils, spurring my lust like waving a red flag in front of a raging bull. \n\nI ate her through the first orgasm, knowing the second wasn't far behind. I kept up my oral attack, all the while thinking how much I loved this. How much I lived for this, and her. And how it could never be the same with anybody else. Her slice of life was my addiction, my heaven on earth. Her body was the temple I worshipped at, and I'd have gladly done whatever she asked just to be able to feast upon her body. \n\nThe second orgasm was rapidly building, and she thrust her pussy into my lips with increasing urgency. I felt her back lift off the jeep as she screamed her pleasure, \"Jason! Baby, Ohhh that's so good! Yeah, baby just like that!\" I never let up, my hand on her ass, as she shuddered through number two, and collapsed, whimpering, on the hood. I worked my fingers toward her sweet spot, hearing her hiss, \"Jason, don't you dare! Don't even! I will get you for this!\" Too late, my fingers had found the mark. She wasn't near the edge yet, but I knew it wouldn't be long. \n\nHer hand found mine and she forcefully pulled me away. \"I said don't. Even.\" She hissed. \"I meant it! Now fuck me, Jason! I need you inside me right now!\"\n\nThus chastised, I stood up, my throbbing member pointed directly at her. I positioned myself between her spread legs. She grabbed my penis and guided it home as she clamped her legs around my hips, drawing me deep inside her. \"Ohhh, God you feel so good,\" she moaned as I worked my way deeper stroke by stroke. Somewhere in the back of my mind I registered the distant howl of hard working diesels. We had a train approaching. It wasn't yet close, but I didn't care. If it had been close, the crew would have gotten one hell of a show, as a pale white man pounded into a beautiful pregnant ebony woman on the hood of a Jeep. \n\nDetermined to make this last, I rode the edge of orgasm. Shavonda anticipated my every move, her legs holding me still deep within her as I let my impending orgasm ebb. She released me when I calmed down enough to begin pumping again. We picked up the frantic pace again, quickly bringing us both to the edge again. The sound of the approaching train grew a little louder. Again, she held me in place as we let our passion subside. Again, she released me as I resumed my deep thrusts into her body. \"This time, I'm not holding you back, Jason,\" she whispered. \"You deserve this. Let it go. Come with me. I'm close.\" She pulled me into her with her legs. Encouraged, I pounded into her, seeking my own release. Her breast bounced wildly from the impact. Chocolate nipples danced, their swollen tips in large brown areolas reminding me of a bullseye. I felt her tighten around me as she approached her peak. I felt her arms slip around my waist, pulling me down on top of her and the baby. Her arms moved behind my shoulders and she pulled me into her in a tight embrace. I looked deep into her eyes, eyes full of lust as she lost control of her body. Her hips sought mine as she met me thrust for thrust. I was close to the edge myself, and lost the battle between her body and mine. I shuddered and growled as I poured every bit of energy I had deep into her womb. I lay there on top of her, spent. And then I felt it. Something gently nudged me in the stomach as I lay on top of her. \n\n\"Von,\" I said breathlessly, \"Was that what I think it was?\"\n\nSmiling, she nodded. \"I think the baby wants to kick your ass,\" she laughed. \n\nI quickly stood and pulled out of her, leaving a sticky trail on the hood of the Jeep. Bending close to her belly, I pressed my cheek against her. Bump. There it was again. The baby was kicking! It was a special moment for the both of us. It was the moment when reality truly hit us. The baby was no longer an abstract we talked about. It was a living thing, one that I could actually feel moving. The sound of the diesel was getting louder.\n\n\"Oh shit! Jason, there's a train!\" Shavonda had leaned up on her elbows and saw the headlight come around the curve in the distance. We hurriedly ran around the side of the Jeep and jumped inside. There was no time to grab our clothing, which lay strewn outside on the ground. I turned on my scanner. I knew they were going to say something. I wanted to see what they said. \n\nWe sat in the Jeep as the locomotives slowly rolled past. The engineer looked out the window at us with a big grin on his face. Shavonda waved at him and he waved back. \"PC2 to helper over,\" crackled the radio. \n\n\"Helper, over\" came the reply. \n\n\"When you get up her to KR, take a look out the right side. White dude, black girl in a Jeep, clothes everywhere on the ground. Looks like we interrupted something.\"\n\nShavonda laughed. We'd given them a cheap thrill. We watched as the train slowly rolled past. The locomotives had topped the mountain and were now inside the tunnel starting their descent. The train gradually picked up speed as freight cars of every type rolled past. Finally, the helper engines rolled past. The cab window opened, and the helper engineer yelled out the window, \"Was it good?\" Shavonda smiled and waved back. The locomotives disappeared into the tunnel, throttle cut back to idle.\n\nWe hurriedly picked up our clothing and got ourselves back together, laughing. We'd made somebody's day. Another legend was made. And as I had promised Shavonda the summer before, KR was ours. And to top it all, I'd felt the baby move for the very first time. We drove to Covington for ice cream, then headed back to the farm. \n\nWhen we walked back into the house with the ice cream. Althea asked, \"Let me guess, fudge ripple?\" We grinned. She knew Shavonda's cravings well. We all sat down and had a bowl. \n\nShavonda grabbed Althea's hand and guided it to her belly. \"Was that?\" Althea asked. Shavonda nodded, smiling. She grabbed mom's hand and let her feel as well. \n\n\"Jason first felt it when we were out. She's active today,\" Shavonda said giddily. \"God, I've wanted this for so long. It's finally happening!\" It was a perfect addition to an already perfect day.\n\nLater, Grandma came out on the porch to sit with us. \"I'm so happy for you two, and I'm sorry about before. Old habits die hard. Von, your family set me straight. You're good people. I'm glad you're carrying my great grandchild. And Jason, you were right. I have to love this baby. It's part of the family.\"\n\n\"Thank you,\" was all I said. We sat drinking iced tea on the porch most of the afternoon. Dad was still at work at the paper mill, so it was just me, James and the ladies. It felt good to relax at home with the people I'd loved all my life, and those I'd come to love recently. Especially, since the two families had bonded during the wedding weekend. I was glad to see that the open arms with which Shavonda's family had welcomed mine, were being reciprocated. Her parents were part of my family now, too. And they'd have an open invitation to drop in any time. As well as being expected at Waite family functions if they could make it. \n\nThe conversation turned to the wedding and the reception. \"Jason,\" Mom said, \"That rose in the ceremony was almost as beautiful as you putting the ring on her finger. Did you know when you gave it to her, and she put it in her hair most of the women cried?\" I had been unaware. I wasn't watching the audience, because my attention was focused on the beautiful creature about to become my wife.\n\n\"Did you two plan that?\" Mom asked. \n\n\"No,\" I replied. \"Ziggy got it for me from a florist on the way to the wedding. It was spur of the moment.\"\n\n\"That makes it all the more beautiful,\" Althea said. \"It was unplanned. It was a natural expression of love.\"\n\n\"I wanted her to have it,\" I said. \"I had no idea what she'd do with it.\"\n\n\"My hair was the best place for it,\" Shavonda said. \"Jason always liked the fake rose I bought for my hair. I thought on our special day he deserved a real one.\"\n\nA bit later, Mom commented, \"It was touching to see Von singing for Jason. But those were some interesting song choices.\"\n\n\"They expressed the way I feel for your son,\" Shavonda replied. \"They still do. You should have seen the ones I'd perform in the bar. Darren and Minnie, the DJs, are our friends. We'd often go sing when they were doing karaoke night. You get a room full of drunk people who can't sing, then I come along. It blows them away. They don't know what to think. And when I sing, they don't exist. Jason is the only person I see.\"\n\n\"Do you really do the things you sing about?\" Mom asked.\n\n\"Do you really want to know?\" Shavonda responded. The question went unanswered. I think everybody there knew the answer was yes. And they also knew Shavonda was not ashamed of anything we did together. \n\nAfter Dad got home, we built a bonfire in the ring, while Dad cooked hamburgers on the grill. After dark, we toasted marshmallows in the fire. The kids loved them, just as I did when I was that age. The fire was still going strong when the others turned in for the night. Shavonda had enjoyed her first night in the tent, and tonight, we dragged the mattress outside and made love before the fire under a million stars. We drifted asleep in each other's arms, eyes sparkling in the firelight. \n\nIn the morning, Shavonda was gone when I awoke. I put my clothes on and wandered barefoot to the house. Inside I found her talking to Mom, who was cooking breakfast. It was nice to see how close they were becoming. Every time they got together, the roots we were putting down got a little deeper. Shavonda actively sought out the advice of the older women in her life about what to expect during pregnancy and childbirth. I think she was a bit anxious, I know I was. So, I wasn't surprised to find them discussing my own birth. I listened silently as my Mom told my wife about the labor and delivery, and how she felt when she first saw her bouncing baby boy. I'd never heard these stories before.\n\nMom surprised me this morning. She always made scrambled eggs for me when I came down, usually with pancakes, but occasionally with waffles or French toast. But Shavonda had told her how when we ate in diners I ordered steak and eggs, medium rare. So, this morning, Mom had pulled out a steak and was frying it in a pan while she made my eggs. The kitchen smelled even better than usual. \n\nShavonda had put her legs in my lap when I sat down, and my hands automatically went to her feet and calves. She'd worn another of the maternity dresses that I'd bought her, this one a floral print. She'd given up on wearing shorts this summer, they no longer fit her, and even the larger sizes I'd gotten her would bind against her belly. She simply wasn't comfortable wearing pants of any sort anymore. I didn't mind. She always looked sexier to me in a dress, and I loved the fact that she loved to wear them in the summer anyway, so maternity dresses weren't a big wardrobe change for her. Besides, I loved the easy access dresses gave me to the places she needed massaged. \n\nMom had made a steak for Shavonda as well, and we both ate ours at the same time, in the kitchen, well before the others came down for breakfast. I think she was happy to have another woman in the family to talk to. And Shavonda's personality meshed with hers on so many levels. I was glad, the two most important women in my life were becoming good friends. And Shavonda had taught Mom about ghetto Kool aid as well. There was a pitcher of black cherry in the refrigerator to go with breakfast. \n\nShavonda later told me Mom had cringed at the idea of putting double the sugar in the Kool aid, but once she tasted it she was hooked. I knew now that whenever we came down there'd be a pitcher for us. \n\nAfter breakfast, we sat on the porch again, the day was going to be a scorcher, with temps predicted in the mid to upper 90s. Roanoke, not that far away but significantly lower in elevation, was predicted to be over 100 according to the local (Roanoke) tv station. It was only a little after ten, and already the big dial type thermometer on the porch was reading in the upper 80s. We decided to use the shower to cool off. Of course, we used it together, it never occurred to us to ask if it was OK in somebody else's house. We rarely bathed alone at home. \n\nWhile we were in the shower, soaping each other up and enjoying the feel of each other's hands, Kenny arrived. When he asked about us, Mom told him we were in the shower. He had a field day.\n\nAfter we'd dressed and came back downstairs to the back porch, he started. \"Did you lick the chocolate tootsie pop this morning?\" he asked. \"From the looks of her you've been doing a lot of licking lately.\"\n\nSally, who'd also arrived with her husband, Bob, howled with laughter. Shavonda just looked at Kenny and said, \"I might ask you the same thing. Did YOU get to lick the chocolate tootsie pop? Edie offered you hers. Did you take her up on the offer? Or did you chicken out?\" Kenny turned beet red. He had nothing to say. And, by the way, Shavonda later told me they did hook up, and that Edie said they'd kept in touch.\n\nBy now, everybody on my side of the family pretty much knew we were a couple of insatiable freaks, and the teasing had lost its sting. What had set our reputation was the fact that Shavonda refused to be embarrassed about anything we did to or for each other. Her attitude was totally open and refreshing regarding our sexuality. Everybody could see our love for each other in our familiarity with each other, but what we did behind closed doors was the subject of speculation. Any time Kenny or Sally asked Shavonda a question about what we did, she'd answer them with \"As long as Jason and I enjoy it, we do it.\" It was a brilliant response designed to keep them guessing. It was neither a yes or no answer, but a nicely worded maybe with a little bit of aren't you jealous thrown in. You couldn't knock Shavonda for a loop with an explicit question.\n\nKenny tried again, \"What was up with those songs at the wedding? Do you really do those things with him?\"\n\n\"Do you think I'd sing about them if I didn't do them?\" Shavonda responded. \"I wouldn't want to get his hopes up. Besides, his chocolate bunny can do no wrong.\" Sally doubled over in laughter. Shavonda continued, \"Of course, if you want me to, I could teach you those songs. Since you liked them so much...\"\n\n\"And you, Sally,\" Shavonda continued. \"You been sitting here laughing your fool head off last couple of times we saw you. But you ain't said a word about what YOU do. Bet you got some freak up in you, too. Cause you ain't embarrassed by what we do. Don't think I didn't notice.\" Sally looked uncomfortable while Bob had a huge grin on his face, like the cat that ate the canary. \"Mmmm hmmm. Thought so. Girl got nothing to say.\"",
        "We all had a good laugh. Our banter was always good natured ribbing. But this time Shavonda had turned the tables on them.\n\nSally finally responded, \"Ummm, well, we do what feels good.\" Bob nodded in agreement.\n\n\"Exactly,\" Shavonda said. \"We do what feels good. We do what we like, and as long as we both having fun, it ain't wrong. Besides, how else was he going to give me one of these?\" Shavonda guided Sally's hand to where the baby was, and after a few minutes, Sally felt the little nudge in Shavonda's belly. \"Wow,\" was all she said.\n\n\"Y'all do realize the next time you see us the baby will probably be here,\" Shavonda told them. \"I'm already over halfway there.\"\n\nThe kids were out playing, as they usually did, in the yard. Soon Calvin and his family arrived, giving the kids somebody to play with. There was quite a crowd gathered on the back porch by this time, probably 12 people gathered around two tables set up. The hamburgers and chicken was cooking on the grill, and the smell of good food was everywhere. Getting hungry, I found the bowls of chips and pretzels in the kitchen and brought them out. I knew Shavonda had to be hungry too, she was eating for two.\n\nWe sat, munching potato chips and pretzels. I always loved eating them together, and I had turned Shavonda on to the combined taste. So, we were each grabbing a chip and a pretzel at the same time and eating them together. Mom noticed and said, \"I see you've corrupted her there as well. Nobody else eats them like that.\"\n\n\"We like what we like,\" Shavonda said. \"I've turned him on to some things, and he's turned me on to some things. But turns out, we mostly like the same things. We want the same things. It's why we are so good together. I love this man, and if he loves something I am gonna try it. And he'll try the things I love, just because I love them. Why you think he like his Kool aid sweet?\"\n\n\"Well,\" I said, \"I still don't put hot sauce on my eggs.\"\n\n\"I don't do that anymore,\" Shavonda said quietly. \"Baby don't like it.\" She was right. The baby would give her heartburn if she ate the wrong things. We kept a ready supply of Rolaids around just for her.\n\nI know what Shavonda loved most about my family were these frank discussions. This was the woman I had fallen in love with. Her honest, warts and all style was a refreshing change of pace from the way people normally were. Especially in my previous dating life. Everybody was trying to convince you they were somebody else. Then when they thought they had you hooked, their true self came out. Shavonda's true self had come out long before we ever met, and the woman who seduced me that first night was the same woman who'd become my wife. Her openness had also led a much closer relationship with my own family. And for that I was forever grateful.\n\nAs an example, the past couple of times we were sitting on the porch having uncensored discussions about our sexuality, in front of parents who'd never told me about the birds and the bees. And, while uncomfortable for me at first, it always felt natural. Such was Shavonda's influence on my family.\n\nWhen Calvin and his family showed up, along with his parents, Uncle Walt and Aunt Penny, the reunion was complete. Matthew couldn't make it, he had to work and lived on the Blue Ridge escarpment just north of the South Carolina border, a couple hundred miles to the southwest. Steven was living in Colorado. They'd both spent their money and vacation days to get to our wedding.\n\nAfter we ate, but before they cut Grandma's cake, Shavonda and I snuck off for a little while. We'd asked them to hold off on the cake until we got back. I wanted to get our week 21 pregnancy photos, and this time I wanted them to be outdoors. We walked up the old disused road into what was once the upper pasture. Over the years since my family had sold off the cattle and got out of the farming business, the upper pasture had grown over into a mountain meadow dotted with cedar bushes and small pine trees. It had become a beautiful place. And this was the perfect spot for our special photos.\n\nShavonda first posed clothed in her maternity dress, hands cupping her baby bump, or rubbing it lovingly. For the second series, our personal photos, she lifted the dress over her head, and stripped out of her black bra and panties. We took the photos in the same poses, side profiles and a front shot. Photos done, I did rub up on her because she was so irresistibly sexy. But we knew they were waiting on us back down below, so we stifled our urges. I helped her into her clothes, and we walked back down the path hand in hand.\n\nOnce back at the house, we lit the candles. But at Grandma's request, Shavonda soloed the Happy Birthday. Her voice was beautiful as usual. Grandma had always remarked on her voice, every time we'd talked. It was fitting that she sang for Grandma. She also let Grandma feel the baby kick. Our baby was pretty active these past couple of days, Shavonda told me. I was glad. An active baby is a healthy one.\n\nAfter cake and ice cream, I got my laptop out of the car and uploaded the photos. I saved the nudes in a separate folder, and arranged the clothed ones in a slide show. I gathered the family round and showed them the slide show of the progress of Shavonda's pregnancy, starting with week 12 and ending with the photos taken a few minutes ago. \n\n\"I thought she looked like she was starting to show at the wedding,\" Mom said.\n\n\"I first noticed her bulge that night at the motel,\" I said. \"I'm glad we didn't have a June wedding. We'd have had to alter the gown. The first photos were taken two days after the wedding, right after she'd gotten out of the hospital. I've been taking a new set every Sunday since then.\"\n\n\"When Is the due date?\" Grandma asked. \n\n\"November 22,\" Shavonda said. \"I can't wait.\"\n\n\"We'll let you know when she goes into labor,\" I said. \"We'd love it if you could make it to the hospital.\"\n\nLater, we broke out the instruments and played music while Shavonda sang. I joked to Calvin and Kenny that one of them was going to have to learn how to play saxophone, so we could do Shavonda's songs justice. They'd learned a couple of new songs for her. Since the basslines were simple, I really didn't have to learn the songs, and Shavonda already knew them. She had an ear for music, which was why she always sang on key. She could take any song, and after hearing it once could perform it passably. \n\nThe first song they learned, knowing how much Shavonda loved Macy Gray, was Sweet Baby. Shavonda sang:\n\nMany times I've been told that I should go \n\nBut they don't know\n\nWhat we got baby \n\nThen they not see the love in you \n\nBut love I do \n\nAnd I'm staying right here\n\nUmmm sweet sweet baby life is crazy\n\nBut there's one thing \n\nI am sure of\n\nThat I'm your lady \n\nAlways baby \n\nAnd I love you now and ever\n\nI knew how much she loved this song. Actually, I loved it too. It was the song that introduced me to Macy Gray, long before I'd ever met Shavonda. But it took on special meaning with her.\n\nThe other song the learned was one for me. Trains, by Porcupine Tree. The banjo part was tailor made for Kenny's picking. \n\nWe spent the rest of the afternoon playing the songs we'd done before. This tradition would continue. Every time we visited, Kenny and Calvin would have a couple of new songs to add. We'd perform them and the ones we already knew. Because Calvin and Kenny were brothers and lived nearby, they were able to play together often and had rehearsed the songs before we had arrived. Shavonda had the natural gift that allowed her to sing the songs once she had heard them, and I was the weakest link. I was passable on the old upright bass, but just barely. I just tried to hit the proper notes, and didn't try to embellish the way I would have if I'd been more of a virtuoso. It's hard to play like Bootsy Collins when you have Dee Dee Ramone's level of talent.\n\nIn the evening, we lit the fire again, and the family introduced Shavonda's family to mountain pies. These were sandwiches cooked in the fire in a special pie iron. We usually made pizza versions, but you could put whatever you wanted in as filling. You buttered the bread slices while the iron was open, one slice on each side. You'd then add the fillings, in this case, pizza sauce, pepperoni and mozzarella. Then you'd quickly fold the two halves of the iron together and lock it. The iron would pinch the bread crusts together, sealing in the fillings as the iron cooked. The iron, for best results, would be placed in the hot coals at the base of the fire. Occasionally, you'd pull the iron out and open it to see how well done the bread was. When it was a golden brown like French toast, you'd pull the iron from the fire, open it halfway, and shake the mountain pie out onto a paper plate. \n\nShavonda and her parents loved the pies. So did the kids, but you know how kids are. As long as you call it pizza, they'll eat ketchup and moldy cheese on cardboard and be happy about it. But with how much fun we had making them, we knew it was something we'd have to try back home. I knew I could get the irons in a camping store, or even the camping gear section of a Walmart or Target. We had enough room in our backyard for a fire pit, out among the bird feeders. \n\nAs the evening got late, family members drifted back to the house. Calvin, Kenny and Sally all went home with their families, leaving Grandma and our parents behind. After the last of them had headed back to the house for bed, and we'd tucked the kids in ourselves, we made our way back to the tent for one final night. \n\n\"I love sleeping out here like this,\" Shavonda said. \"It's so peaceful. I wish we didn't have to go back.\" The night was still warm, well into the upper 70s, and since we now had privacy we removed our clothing and sat naked in front of the fire. We watched the firelight dance across each other's bodies. We saw the glint in each other's eyes. Tonight, there was no rush to touch each other in our special spots. We just sat in my parents' reclining folding chair, my arm around her holding her close. It was time for introspection.\n\n\"Jason,\" Shavonda said, \"Have I ever told you you're a beautiful man? That just seeing your pale hands on my body turns me on in ways I could never imagine. You're not the first white boy I've been with. But something about you and the way you made me feel when I first saw you was different. Even though you look nothing like what I dreamed of, you are my fantasy come true.\" She snuggled under my arm as I gently stroked her nipple in lazy circles with my thumb. \n\n\"You've given me everything I wanted,\" she continued. \"I now have my own baby, kids who love me, a wonderful husband who worships me, and in-laws who love me just the way I am. What more could a girl want? Do you\n\neven realize how special you are?\"\n\n\"I know how special you are. You bring out the best in me,\" I replied. I bent my head to kiss her. Our lips met. I was happy. We were happy together. Marriage, so far, was turning out to be even better than being merely lovers. Our hearts now beat as one. We were one. Separation would cause irreparable harm to both of us. \n\nWe were content, tonight, just to hold each other. To run our hands over each other's body. For me to feel the smooth softness of her ebony skin. And for her to feel the solidness of my body, so different from hers. It was intoxicating. It was sensual. It was erotic. And yet, we felt no need tonight to take it all the way. Touching was enough. As sleep overtook us, we retired to the tent, snuggling our way into dreamland. I lay on my back, with my beautiful dark wife on her side curled up into me. Our legs were intertwined, her arm was thrown across my chest, and she nuzzled my neck.\n\nWe slept, bodies entwined, to the night sounds of rural Appalachia. Distant trains. Off in the distance owls and a lone coyote. The ever-present crickets. Even in the peaceful quiet, there were a lot of things to hear. And all of them were soothing.\n\nIn the morning, we awoke. We packed our things and tore down the tent in the long shadows just after sunrise. We deflated the air mattress and rolled it up into its box. I wanted to get this done before the scorching heat returned. Shavonda sat on the back porch as I loaded up the Jeep. I grabbed clean clothes for us from our duffel bags, and led her by the hand to the upstairs bathroom. We quickly stripped, and entered the shower. Shavonda had packed her bath gloves, and I enjoyed the soapy scratchy feeling as she scrubbed my back. She turned me around and scrubbed my chest and legs, lifting each one to get at my feet. It felt good.\n\nPeeling off her gloves, she handed them to me. \"My turn,\" I started with her front, washing her neck and breasts. Then working my way down over the baby to her legs. Just like she had done with me, I lifted her legs and washed her feet, making sure to get between her toes. Lowering her leg, I gently turned her around. I soaped up the twin brown globes of her ass, running my gloved hand down her crack. Kneading her hips, I worked my way up her back. My member found its way between her soapy cheeks, and Shavonda playfully wiggled her ass against me as she felt me sliding in her crack. There was no penetration. There didn't need to be. \n\nI continued to scrub her back as she sensually swayed her hips in front of me. I put a lot of effort into concentrating on her back, which was getting increasingly hard to do. The soap had lubricated her ass and her movements had me hard and increasingly closer to the edge. Shavonda felt this and bent over grinding her ass back into me. \"Take me, Jason,\" she whispered.\n\n\"I won't last,\" I protested. \n\n\"Neither will I,\" Shavonda purred, reaching behind her to grab my dick. I felt her walls open to accept me as she guided me inside, then close around me in a comfortable squeeze. \n\n\"God, you're tight,\" I moaned, stilling myself inside her. It took all my willpower not to pound into her and release right then. She let me get adjusted to her tightness, then started grinding back into me, gyrating her hips from side to side. God this woman's hips were dangerous. Their hypnotic sway had me following her like a puppy dog for the past 14 months. \n\nI started to thrust into her. Almost immediately, she moaned and her walls convulsed around me. \"I'm right there, baby,\" Shavonda moaned. \"Take me home. Give it to me.\" She ground back onto me as I grabbed her by the hips and thrust my way as deep inside her as I could. I could feel the urgency building and knew neither of us was going to last. We were both too far gone to stop now. I quickened my pace, loving the slapping sound as our bodies connected repeatedly. Shavonda's moans became louder, more urgent, turning into growls as she tightened around me. The whole thing was over in about 3 minutes, as her body violently pulled my nut from me. I exploded inside her with enough force to buckle my legs, and I fought to remain standing as I shot deep inside her waiting body. My legs quivered like jello as I enjoyed her pulsating rhythm trying to pull every drop of my seed into her womb. \n\nWe turned off the water as I sat on the closed toilet seat, dripping water all over the bathroom floor. \"Intense,\" was all Shavonda could breathlessly say. We sat there, me on the toilet lid, her on the edge of the tub, looking deep into each other's eyes as we tried to catch our breath. The spell was broken by a knocking on the door.\n\n\"Hey you two,\" came James deep booming voice. \"Other people need to use the bathroom. You almost done?\" We both convulsed with breathless laughter. \n\n\"Be. Out. In. A. Minute.\" I said between gasps. Shavonda handed me a towel, and started drying me off. I toweled her off at the same time. We dried each other's backs as we kissed. Once dry, we quickly changed into our clean clothes, and left the bathroom to face an amused James. \n\n\"Don't think we don't know what you did in there,\" he smiled. \n\n\"You should grab Althea and get you some,\" I shot back with a smile. Shavonda laughed, holding my arm. We made our way down the hallway and stairs to the kitchen, where Mom was making breakfast. The kids were still asleep. The whole house had the quiet feel of the mornings I remembered from my childhood. \n\n\"Morning, kids,\" Mom said before turning around to face us. \"Von, you know you've had a lasting effect on this family. We see the world a little differently because of you. And I'm glad of it. You've opened our eyes.\"\n\nShe turned to me. Shavonda had her feet in my lap as we sat in the old wooden kitchen chairs. \"And you, Jefferson,\" Mom said. \"You've made us proud. The lessons we raised you with, you've taken them to heart. And because you did, we now are blessed to have this beautiful young woman as family. And her parents as well. We know you two have been carrying on around here like this place was some love nest. But your love is catching. And things have gotten a little better around here because you two love each other. Watching you two, the way you touch each other, speak to each other, it's warmed our hearts. Even the way you both talk about the other when they're not around. The awe and respect you have for each other. Don't ever lose that. It's a precious gift, that kind of love. If you lose that, you'll never find it again.\"\n\n\"You know,\" she continued, \"I'm beginning to wonder how many folks are trapped with people they don't love, because they were afraid to pursue the one they truly wanted. It would be a shame if you'd have lost each other. Thank God you were open minded enough to see past the barriers to the love beyond.\"\n\n\"You know what Von told me the night I asked her out for the first time?\" I replied. \"She said, 'It would be a shame if you lost your queen because you didn't ask her out.' Well, I did, and she's everything I ever wanted and then some.\" Shavonda looked at me lovingly. \"See what I would have missed out on, had I not taken the chance on something different?\"\n\nShavonda said softly, \"I sensed it in him. He was reluctant, unsure of himself. I encouraged him. Gave him a push when he needed it. Led him by the hand to where he wanted to be. Did you know we talked online for months, and he never came on to me? We talked about everything in the world, except us together. He bared his soul to me, not knowing whether I would hurt him. Rose had sent him a letter, saying she wanted him back. He didn't love her and didn't trust her. But he would have gone to her for the kids' sake. And she'd have remarried him, then divorced him and taken his house. I prodded him, because I knew I could do better for him, if he'd only see me as more than a friend. And I knew if he went back to Rose, I'd lose him forever.\"\n\nI got up and woke the kids, letting the two women have a final conversation without me. They got dressed, while I packed their bags and loaded them in the Jeep. When I got back inside, the kids and Shavonda were sitting at the kitchen table, attacking stacks of pancakes. James came down the stairs holding Althea's hand. He smiled at me and nodded. Evidently, he'd taken my suggestion. My parents weren't the only ones we were having an effect on.\n\nAfter breakfast, we finished loading the car, and said our goodbyes. Mom hugged Shavonda for a long time, saying, \"I'm gonna miss you girl.\" We all hugged Grandma, before getting in the cars and making our way back to Pittsburgh. \n\nThe next two weekends, Rose had the kids. It turned out to be a good thing we let her have them those two weekends, as her sentencing hearing was Thursday August 8, the day before my birthday. \n\nThe final weekend, Althea sat with us as Rose brought the kids to Tamika's house, formerly mine. The four of us sat on the porch, drinking iced tea, as Rose led the kids up the stairs. You could see the fear and defeat in her eyes. I felt bad for her. I didn't know much about the sentencing process, but I knew there couldn't be many more weekends left for her. ",
        "\"Jason, will you please bring the kids to see me when I'm gone,\" Rose asked, tears in their eyes.\n\n\"He can't,\" Althea said. \"Victims are not allowed to visit you in prison. You made him and Von victims. They can't visit you.\"\n\nRose sobbed. I knew I'd have to find a way around that. The kids were losing their mother completely unless I did something. While I felt pity and disgust for Rose, I knew the kids loved her as they can only love their mother. Wrenching her out of their life for years was going to be hard on them. We watched a once defiant and belligerent woman collapse in tears, with the final realization of what she'd lost. And there in a nutshell was the difference between us. She'd have denied me parental rights just for spite, not caring about the effect on the kids.\n\nWe watched as she slowly drove off, then loaded the kids into the Cruze for the trip home. As fate would have it, it was the last weekend she'd get to spend with them.\n\nThursday, we arrived at the courthouse for the sentencing hearing. As witnesses, we weren't allowed in the hearing until it was our turn to testify. We each had prepared statements. We asked the court for, and got special permission to be together when we each read our statements to the judge. Entering the courtroom, we saw Rose seated with her lawyer on one side, the DA on the other side. Althea sat in the front row of the spectators' seats, holding a sobbing Barbara. The DA motioned us over to sit.\n\nThe judge called Shavonda to the stand first. A very pregnant Shavonda stood as she made her statement.\n\n\"I first met the defendant a year ago, while my boyfriend, now husband Jason took their children home. The first words I heard her utter were 'She's a nigger, Jason.' Since that time, she has caused us no end of trouble. Many of the things she was originally charged with, were dropped in the plea she took. Let's look at what she was actually convicted of, knowing this is just the tip of the iceberg. The first incident, she vandalized Jason's car, breaking the windshield and painting 'Nigger lover' on the side. She also threw a brick at it, causing body damage. We had to have body work done, a windshield replaced, and the car painted. In addition, we had to install a gate so Jason had a safe place to park his car off the street.\"\n\n\"The second conviction was for the vandalism, and break-in to my place of business. I have built my business from the ground up, and I've been successful at what I do, enough so that two weeks before the break-in, I was able to take the risk and open a second store. It was this newly opened store that the defendant broke into, smashing windows, and smashing the glass cases that held the handmade jewelry I sell. Found at the scene was a brick with the words 'nigger bitch.' In both cases, we filed civil suits for damages and won them. But we know Mrs. Waite does not have the resources to pay the judgement. So, we had to eat the costs.\"\n\n\"The third incident is the most egregious of the three. Jason and I had just gotten engaged. On the way home from our engagement party, we saw Mrs. Waite at a gas station. She called in a false report to police of a car picking up a prostitute in the alley behind Mr. Waite's house. She gave Jason's license plate number, and a description of the prostitute that matched me, right down to the shoes I wore. We were pulled over by a police officer and I was detained before being released for lack of evidence. Luckily, one of the Zone 3 police officers was at our engagement party, and vouched for me. Had that not happened, I'd have had an arrest record for prostitution. ME! I've never had to sleep with anybody to get anything except this baby I'm carrying. I am a reputable businessperson, and the damage she would have caused to my reputation would have been devastating.\"\n\n\"As if that weren't bad enough, she filed to terminate my husband's parental rights based upon that arrest. The total effect of what this woman has done has been endless months of stress and heartache. None of that has been good for the baby.\"\n\n\"As such, I firmly believe the court should impose the maximum sentence allowed. This woman does not deserve the chance to spread her vile lies and hatred to anybody else. Thank you.\"\n\nShavonda came over to me and sat in the seat beside me. The judge asked the defense attorney if he had any questions. He didn't. Everything she said was a matter of public record, and could easily be backed up. The judge called me to the stand. I looked around the room before I spoke. Rose was in tears, Barbara was in tears, even Althea looked sad as she let Barbara cry into her shoulder. I started my statement. But it was different from what I had prepared. \n\n\"The statement I had prepared for this hearing somehow no longer seems to convey what I want to say, so if you don't mind, I am going to wing it.\"\n\n\"The circumstances my wife, Shavonda Waite has presented to you are true, accurate, and a matter of public record. We are the victims of these heinous crimes. And we have yet to get an apology, or see any kind of remorse. But the list of victims does not end here. There are two children involved here who have lost their mother for the rest of their childhood. Shavonda has stepped in to fill the void.\"\n\n\"I'd like to direct the court's attention to the two women sitting in the front row. The white woman is the mother of the convicted. She is a victim too. She wanted no part in this. The black woman sitting beside her, comforting her, is my mother in law, Althea Jenkins. It was her daughter as well as myself, who these crimes were directed against. Let that sink in for a minute. The mother of one of the victims is here in court comforting the mother of the convicted. Mrs. Waite's mother is losing a daughter today. But she's gained a family with us.\"\n\n\"In the end, the biggest victim of this tragedy here is the convicted herself. Her actions have cost her everything. She has lost her children, her career, her freedom, and her humanity. Her blind hatred was the cause of her reprehensible actions. I am not pleading for leniency on an unrepentant person. Whatever sentence the court feels is appropriate is fine with me. Because I know that if given the chance she'll do it all again.\"\n\n\"But you have to decide what the purpose of her incarceration is. If it's punishment, then throw the book at her. But if it's rehabilitation, then please provide some mental health counseling for her, so she can get beyond the blind hatred that has destroyed her life. So that, when she does eventually get out of prison, she will be able to cope better with situations she doesn't like. So that those around her, those who love her, will have somebody they can respect when she is released. So that she at least has a fighting chance on that distant day when she is once again a free woman. That is the only thing I ask of you. Help her during her incarceration. Thank you.\"\n\nI walked from the stand when the defense attorney didn't challenge the statement. He knew better. In spite of all that had happened, one of the victims actually gave a damn about his client. I looked at Rose, who stared back at me, mouth open. She obviously hadn't expected what I said. Truth be told, I didn't either. It just came out that way. I looked at my wife, sitting there smiling at me. And I looked at Althea holding Barbara. And Barbara herself, who looked at me with tear streaked eyes and mouthed the words, \"Thank you.\" I took Shavonda by the hand, and led her from the room. Whatever the sentence was, I didn't want to be there when it was handed down. I didn't want to witness the heartbreak and pain. I'd had enough.\n\nHand in hand, my ebony wife and I walked from the courthouse, our heads held high. \n\nTo be continued..."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "bwwm",
        "bw/wm",
        "black woman",
        "bfwm",
        "white man",
        "beach",
        "pregnancy",
        "interracial romance",
        "honeymoon"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-12"
}