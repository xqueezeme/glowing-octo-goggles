{
    "title": "Mike & Savy Ch. 12",
    "pages": [
        " Note to Readers: This is the twelfth chapter of a series and is presented from Savy's point of view.\n\nThis chapter covers the same period as Chapter 11 and many of the same events. The differences are primarily in perspective and the level of detail devoted to certain events.\n\n*****\n\nI hadn't seen Josh since New Year's Eve in North Carolina. In the few weeks since the spring semester had started, we hadn't run into each other in the performing arts center and had no classes in common.\n\nI had emailed him once in January offering to meet him for lunch if he wanted to talk, but he never responded. I ended up giving the box of his things that I had collected to a mutual friend from ensemble to return to him\n\nNow he was standing next to mom on the day of my engagement to Mike.\n\nI froze. What do I do? What do I say? Why is he here now?\n\nMy eyes found Mike, right next to me. His hand was on my arm and I felt his fingers gently squeeze me.\n\nBehind me, I heard Max.\n\n\"Mike, may I borrow your sister for a moment?\"\n\nI swiveled to look at him. He wasn't smiling, but he had his usual friendly and determined demeanor.\n\nI felt Mike's breath on my ear.\n\n\"Don't worry, I'll be right here.\"\n\nI didn't want to step away from him for even a moment, away from the strength that he gave me, but I knew that I had to.\n\n\"Okay.\"\n\nJust that one moment with him comforted me. He would always be there for me, there was no need to worry.\n\nI allowed Max to direct me towards tables with guests. I had done this before and tonight would be no different. I would smile and graciously thank them for their support of both myself and the music program.\n\nMax lead me from table to table as I shook hands with countless people and thanked them for their compliments.\n\n\"Savannah, you were absolutely unbelievable. Thank you so much.\"\n\n\"Savannah, you have an incredible future ahead of you.\"\n\nI tried to ensure that every person had at least a few moments of personal time, but I was constantly trying to position myself so that my eyes could seek out Mike. I had lost sight of him for a few minutes and when I tried to find mom, she was gone, too. Were they talking? I wanted to be there when we told her...\n\nEventually, I saw mom walk into the room, followed by Mike. She didn't look overly happy, but she didn't seem to be distraught or upset, either. I immediately doubted that he had told her about us. As he walked behind her, Mike focused his eyes on me and smiled broadly.\n\nI could hear him in my mind when his lips formed the words, \"I love you.\"\n\nI smiled back at him.\n\nI love you, too. I want everyone to know.\n\nMike and mom returned to their table while I continued mingling with Max. Every time I caught Mike's eye, he smiled at me and the apprehension I had about the conversations that needed to happen with both Josh and mom melted away. Whenever I wasn't shaking hands with someone, my right hand held my left and I ran my fingers over my ring.\n\nFinally, I had greeted everyone and I could return to my friends and family. I focused on Mike as I walked to their table. He sat straight up in his chair, his suit jacket hanging perfectly off of his frame.\n\nMom rose to greet me first, throwing her arms around me and saying, \"Savannah, I'm so proud of you.\"\n\nI thanked her and received similar compliments from Jeff, Mia, and Maria with hugs of their own. I laughed when Mia said I looked like a model and didn't seem to want to let me go. Maria and I were the same age, so our relationship was more equal in a sense, but Mia always seemed to be my proud older sister. I loved both of them and looked forward to asking them to be my bridesmaids.\n\nThen I was next to Mike. My instinct was to throw myself into his embrace, but I saw Josh out of the corner of my eye. This couldn't be easy for him and I didn't want to make things any harder. I was fully aware now of the impact I had had on Mike when he had to see me with Josh. \n\nMike's hand was on my forearm and I felt his fingertips on my bare skin. I yearned for his touch, always. He leaned close to me and whispered quietly in my ear, \"I love you.\" Even when we were being coy about our relationship with others around, he found little ways to touch my heart with the simplest of gestures.\n\nI wanted to kiss him, but I held myself back. I simply looked up at him and said, \"Thank you.\"\n\nI sighed softly to myself and moved around the table. Josh rose to face me. I felt a wave of guilt, knowing that I had once been the one to bring a lopsided sheepish grin to his face, but now he simply gave me a blank look, devoid of emotion.\n\n\"Josh, will you come talk with me?\"\n\nHe barely nodded.\n\nI turned and headed for the door while Josh followed a few steps behind. In the hallway, there just wasn't enough privacy for what we needed to say, so I quickly turned to him and said, \"Let's go to the hall.\" Again, his response was just the slightest nod. My heels clicked on the floor and reverberated through the hallway as we walked.\n\nI stepped into the hall where I had just performed while wearing Mike's ring. I went to the stage and turned my back before hopping up and sitting on the edge. My hands rested on my lap.\n\nI watched as Josh moved to the edge of the stage, too. He leaned against it, several yards away from where I sat.\n\nI knew what I needed to say, but was trying to figure out the exact words, when he spoke. It was the first time I had heard his voice since he had walked out of the room after I had broken his heart.\n\n\"Savannah, I'm sorry if I startled you. Max asked me to come tonight and I went back and forth on whether or not I should. It was good to see you play again.\"\n\nWe sat quietly for a moment and I collected my thoughts.\n\n\"I'm so sorry about what happened.\"\n\nHis quiet response broke my heart. I looked directly at him, watching all of his reactions. He made steady eye contact with me for the first time.\n\n\"I'm sorry that I asked you to leave that night. I shouldn't have. I should have stayed and talked to you.\"\n\n\"You didn't do anything wrong. The last thing I ever wanted to do was hurt you. I had been avoiding everything that had happened with Mike for so long, for years, but then when I confronted it...\"\n\n\"You feel about him the way I feel about you.\"\n\nI felt my jaw tremble. Oh no, I hope not. I truly hoped that I wasn't the one for him.\n\n\"Josh, you'll find someone, someone who can make you happy and will never hurt you, someone you can love and have a beautiful family with.\"\n\nThat had to sound like a horrible, empty platitude to him. I hoped against hope that it was true. He deserved that life. Maybe he and I could have been happy together, but it wasn't meant to be.\n\n\"I'll never stop loving you.\"\n\n\"I know. I'll never stop loving you, either. You will always be so special to me. What happens in the future doesn't change or take away the time that we had together, the happiness that you gave me.\"\n\nHis lips were pressed tightly together and tears began running down his face.\n\n\"I'll never forgive myself for hurting you, because I want you to be happy.\"\n\nHe wiped the back of his hand along his cheeks. We sat quietly, with me watching him while he only gave quick glances in my direction. My heart broke for him; he deserved so much better than this.\n\nFinally, he sighed deeply and moved away from the stage, walking to me and standing directly in front of me. He looked down at my hands and saw my ring.\n\n\"You're going to marry him.\"\n\nI ran my fingers over my ring.\n\n\"Yes.\"\n\n\"I want you to be happy, too. I wish it were with me, but I want you to have everything you want in life.\"\n\nOh Josh... you're such a good person. \n\nHe shuffled his feet and his legs were nearly touching my dangling feet. He leaned forward and I watched as he came closer to me. He softly pressed his lips to my cheek and then stood straight.\n\nHis voice was soft, \"I love you. Goodbye, Savannah.\"\n\n\"Goodbye, Josh.\"\n\nI had one brief moment to see the sadness written on his face before he turned away from me. I watched every step until he turned the corner and was out of sight. I closed my eyes and felt tears run down my cheeks as I heard the door open and then swing close, clicking shut.\n\nI would still see him around the music program, even if not in class or ensemble, then possibly just from running into each other in the performing arts center. I knew it would be impossible for us to rebuild any kind of friendship, but if I did see him, I would do my best to be a friendly face.\n\nI sat and cried, remembering so many of the moments that we had together.\n\nAfter some time, I heard the door open again. I needed the jolt, because it had been long enough that it was time for me to return to the reception.\n\nI looked up to see Mike coming towards me. My Mike. \n\nThank you for coming for me.\n\nHe walked slowly towards me and I tried to smile just a bit at him. He looked wonderful in his suit and some of my sadness was lifted as I felt the love for him that was so central to who I am.\n\nHe sat next to me on the edge of the stage and I pushed myself as close to him as I could before sliding my arm around his and resting my head on his shoulder. Being with him is the single most comforting thing in my life.\n\nHe asked me, \"You okay?\"\n\nI looked up at him, into his beautiful eyes, and he leaned down to kiss me gently.\n\n\"I will be.\"\n\nI will always be okay as long as I have you.\n\n\"I love you, Mike.\"\n\nI laid my head on his shoulder again and felt his cheek rest on top of my head. There would be time to tell him what Josh and I had talked about, but for now, I just needed to be near him. I felt my confidence return as the aura of his love surrounded me. \n\nI slipped off the stage and stood before him, sliding my hands around his. I smiled at him.\n\n\"I'm going to marry you.\"\n\nHe moved to his feet and enveloped me in his arms.\n\n\"Yes, you are, because you are the love of my life and that's the only way it can be.\"\n\nThe only way it can be. From the moment I was brought into his life, this was our destiny. We have so many choices to make in life, but it was never a choice for me to love him. He would always be everything to me.\n\nMy hand found his and our fingers interlocked. We walked together back to the reception.\n\nAt the door to the reception room, I felt Mike's fingers loosen their grip on me.\n\nNo. It's time. It's time for everyone to know about our love, to know that I would be his wife, that everything I do is for him.\n\nI held his hand firmly and looked up at him.\n\n\"It's okay,\" I assured him.\n\nHis fingers tightened around mine again and he pushed open the door for me. This moment was everything to me.\n\nAs soon as we moved from the mildly lit hallway into the bright reception, I felt the eyes of everyone on me, on us. I lead Mike to the center of the room, never taking my eyes off of him. I stopped and turned to face him as he looked down into my eyes. Everything about him, his kindness, his intelligence, his height and his subtle strength... everything soothed me and gave me confidence. He made me a better person, simply by being with me.\n\nI pulled down on his hand as I stood up on my toes and my lips found his. I kissed him and felt the security of his love. \n\nWhen I backed away and stood before him, the brief look of shock on his face was immediately replaced by a wonderful smile. I could feel a smile creep across my mouth, spreading to my cheeks, my eyes, and my entire body. \n\nWe'll never be apart again.\n\nI saw Mike's eyes move to the side and I turned my head to follow his gaze to see Max. Now is the moment.\n\nI held up my left hand towards Max, my ring sparkling in the light. I doubt if it was shining anywhere near as brightly as I was. I reveled in this moment for Mike and I, a moment that took us years to earn. \n\nSuddenly, we were surround by an entire room standing and clapping, not for me as after my performance, but for both Mike and I. My head spun, searching the crowd for the smiles of our friends and family, but my eyes kept seeking Mike, my Mike.\n\nMax reached us and placed a kiss on the back of my hand.\n\nMike and I were quickly enveloped by a crowd of people offering congratulations from all directions. I wanted to introduce everyone to my perfect fianc\u00e9, my inspiration. Even as I shook hands and showed my ring, I couldn't help reaching up to touch Mike, caressing his cheek with my fingers. He never took his hand off of me, holding my hip or brushing the small of my back, keeping his body firmly next to me.\n\nAnd then I looked up to see Jeff and Mia. They had been our best friends and then during our dark times, were rocks for both of us. They were are family and always would be. \n\nThe first time Mike let even the tiniest bit of space between us was for Jeff to embrace me in his long arms. The moment he released me, Mia was squeezing the both of us tightly.\n\n\"I love both of you. I can't wait to be at your wedding.\"\n\nMia finally let go of us and I was able to see Maria. She took my hand in hers and ran her fingers over mine, tracing around my ring. She smiled at me. I didn't know what having a twin sister was like, but I could only imagine it was like our relationship. Without saying anything, she conveyed everything to me. When Mike and I were married, she would be my maid of honor.\n\nI turned looking for Mike and he was speaking quietly with Max. After I heard Max, in his deep bass voice, tell Mike, \"Congratulations, Mike,\" they walked to me.\n\nIt was only then that I saw mom for the first time since we had come back into the reception, as the room was nearly empty now. She sat completely frozen, her cheeks wet from tears, but she wasn't smiling.\n\nI know mom, I know you're shocked. We'll talk through this and it'll be okay.\n\nMax turned to go to her, probably to congratulate her, but I quickly reached out to him and pulled him towards me.\n\nHe briefly turned to look at mom and I think the realization of her tears and the look on her face hit him. He looked down at me, his smile replaced by concern.\n\nVery quietly, I said, \"Max, we need to talk.\"\n\nHe followed me as I went to the door. Outside, I spoke softly.\n\n\"Max, she doesn't know about us and I don't think she'll be happy. Mike and I were first engaged more than two years ago. Her response is part of why we broke up.\"\n\nI could see him beginning to piece together the limited information he had in his head.\n\n\"That's why you started playing violin again and why you and Josh...\"\n\nI quietly interrupted, \"Yes.\"\n\n\"I see, I see. I'm sure this is very difficult for her to process.\"\n\n\"Mike and I will need to speak with her. We didn't really mean for her to find out like this, but he proposed today and...\"\n\nMax interrupted, \"You played that last piece for him.\"\n\n\"Yes.\"\n\n\"It was marvelous. I want you to know that anything you and Mike need, I'm here for you.\"\n\n\"Thank you, Max.\"\n\nHe smiled down at me.\n\n\"Good night, Savannah... and good luck.\"\n\n\"I'll talk to you soon. Thanks for everything tonight.\"\n\nHe turned and I watched for a moment as he proceeded down the hall towards his office. I sighed and pushed open the door to the reception room.\n\nI barely heard mom as I entered the room. \n\n\"... to ru...\"\n\nShe stopped talking mid-sentence and immediately spun to look at me.\n\nAs I approached them, my eyes moved rapidly back and forth between mom's shocked face, still wet with tears, and Mike's tense look. I sat delicately on the seat next to Mike and scooted close to him before sliding my hand into his.\n\nWhen I looked back at mom, her voice was so cold that it sent shivers through my body.\n\n\"You can't do this.\"\n\nYes, we can mom.\n\nI collected myself and pulled Mike's hand onto my lap.\n\n\"Mom, we love you. We would love to have your blessing...\"\n\nPlease, mom, be happy for us. See our love.\n\n\"... but we're not going to ask for your permission.\"\n\nWhether she approved or not, my life would only ever be with Mike by my side.\n\n\"Savy, what did he do? Is this why you and Josh broke up?\"\n\nI knew how much she cared about Josh and it was easy to see why. He was so polite and kind to her. Yes, Josh and I couldn't be together because I'm meant to be with Mike, but what did Mike do? I tried to speak calmly, pushing down the anger that was boiling up inside me. She wasn't going to blame him for us.\n\n\"Mike didn't do anything wrong, mom. The only thing he's ever done, for my entire life, is love and support me.\"\n\nAnd that's what you've done for me, too, mom. Please don't stop now.\n\nHer voice was softer, \"But Josh...\"\n\n\"I wasn't meant to be with him. Mike is the only one for me. I can't live my life without him.\"\n\nAgain, her tone turned to anger and accusation, \"Savy, this will ruin your life. You can't do this. He's your... your... brother.\"\n\nI lost control and my anger took over. I wouldn't let her say that. \n\n\"No! I won't let you say that. I almost ruined my life when I pushed Mike away. I was shocked when you told us, but I love him. I love him more because he's my brother.\"\n\nMom seemed briefly taken aback at my response, \"You don't know what you're saying... this is wrong.\"\n\nI do know what I'm saying. This isn't your choice and you can't judge us.\n\n\"It's not wrong to follow our hearts, mom.\"\n\nAnd then she terrified me with her response.\n\n\"I can't... I can't be a part of this.\"\n\nMom? Please, please understand us! You can be there for us, with us.\n\n\"Mom, I want you in our life. I want you there on our wedding day. Please... be happy for us. Celebrate with us.\"\n\nYou need to be there when we get married. You need to be there for me and for us.\n\n\"I can't... no... this is wrong...\"\n\nMy body tensed when she suddenly put her hands on the table and pushed herself quickly to her feet. The anger, the sadness, all emotion left her voice. She spoke as if she were stating a simple fact.\n\n\"When you stop this, I'll be there for you, but I won't be a part of this.\"\n\nNo... no... don't go...\n\nMike pulled me to him as my world began to collapse again. He held my waist tightly while stroking my hair and I sobbed uncontrollably.\n\nMom...\n\nI was startled when I heard a voice that I didn't recognize.\n\n\"I'm sorry, but I need to lock up in here.\"\n\nI looked up to Mike and he pressed his lips to my forehead, gently kissing me. I looked into his eyes. \n\nHe was the only family I had left now.\n\n\"Let's go home.\"\n\nI was barely aware of anything that happened until Mike and I were laying in bed, his arms providing as much comfort as I was capable of feeling. I fell asleep with the echo of his voice in my mind, \"I love you, Savy. You are my everything.\"\n\nHis strength was all that kept me going for days until finally she contacted us.\n\nI watched as Mike read an email from her, a grimace on his face. I asked him to hold me while I read her email to me. It didn't matter if she was sorry for how she had reacted at the reception, she had made her decision... and we had made ours. Nothing would ever tear us apart; we are one and that is how we would respond.\n\n\"Mike, I want you to respond for both of us.\"\n\n\"Okay...\"\n\nI drew on his strength.\n\n\"She has a choice: she can support us and be a part of our life or she can believe we're making a mistake and not be a part of our life. Whenever she is ready to accept and support us, we'll invite her back, but until then, she is not welcome to sit and judge us.\"\n\nAs Mike typed our answer to her, I stood behind him and wrapped my arms around his shoulders, squeezing myself tightly to him with my cheek pressed to his ear. \n\nMom had once said to me, \"It's just the way it had to be.\" She was right, but not in the way she thought. If she couldn't love us, accept us, and support us, then this was the way it had to be.\n\n\"You're all I need, Mike. I love you.\"",
        "He pressed his cheek to mine as I continued to hold him.\n\n\"I am yours. I love you, too.\"\n\n__________\n\nMike and I were unconditionally there for each other, providing the strength and support that we both so desperately needed. There were days when my devastation at mom's reaction overwhelmed me and Mike would hold me as I cried. There were days when Mike seemed consumed with sadness and I would curl up next to him, sharing the warmth of my body. \n\nStill, we couldn't dwell on the decision that she had made. We had our lives to live.\n\nThe first week after Valentine's Day, we had lunch with Jeff and Mia. We explained what had happened with mom, much to Mia's dismay. Jeff, as with all things, took it in stride it seemed. They were incredibly supportive of us, as always, and I was thankful to have them. Maria was also saddened by mom's decision to not support us. The three of us would sit in the living room and Maria and I would talk while Mike mostly sat and listened.\n\nThey were our family now.\n\nNear the end of February, Mike joined me to meet Dr. Vargas. Initially, she seemed reluctant to fully embrace Mike and I could understand her concerns about an older brother and younger sister being in a relationship, but eventually I was able to assure her that he is everything to me and my path forward will always be with him. The conversation shifted and we talked about mom and her reaction. At the end of our time together, Mike stepped outside and Dr. Vargas hugged me, telling me that she was proud of how I was taking more control in my life, rather than letting situations dictate to me.\n\nMike and I both continued to receive emails from mom, but her judgment never changed and neither did our decision. The only two choices were to accept us or not be in our lives. \n\nWe were at peace with our decision and when the moments of sadness passed, we basked in our love for each other. After classes and work were handled for the day, Mike would take me into his arms and we would be together, happy. \n\nOn the last weekend of the month, a late snowstorm blew through and shut down everything for several days. We bundled up in ski clothes and enjoyed a different perspective of a place that was so central to who we are. \n\nAs we walked to our spot on the Mall, where he had proposed, I stepped where stairs should have been, but immediately sunk almost to my shoulders in a snow drift. Mike looked down at me and laughed, before jumping in next to me and kissing me while we lay buried in snow. When we got home, we went to bed and warmed our bodies together.\n\nAs much as I looked forward to the moments that I knew would come for us - graduation, our wedding, a home - I enjoyed the simple moments that we had together, whether it was laying in the snow as he kissed me or the look on his face when he set down dinner on the table as I studied. I remembered the first time he put his arm around me and how natural it felt. I couldn't have even imagined then just how we would develop together, as if we were each an extension of the other's body.\n\nIn many ways, we lived as if we were already married. While we existed in that somewhat transitional place, myself in college and him progressing through his master's and at work, every passing day felt less and less like we were starting to build a life together. We weren't starting our future anymore, we were living it. \n\nI imagine that if one experienced the exact same happiness at all times, you'd quickly become immune to it and everything would become boring after awhile. I can only describe my happiness with Mike as twinkling, constantly radiating and pulsing in different styles and intensities.\n\nIn March, Mike continued finding ways to surprise me and build my anticipation for the future moments we would have.\n\nOn a warm spring morning, we lay in bed, enjoying another moment together that would become a pleasant memory for us.\n\nMike took my hand in his and kissed my ring.\n\n\"Savy, I love you.\"\n\nAs many times as he said those words to me, they always felt like he was telling me for the first time, sending a pleasant glow throughout my body. \n\n\"I love you, too.\"\n\nHe looked incredibly pensive as his eyes held mine.\n\n\"I've been thinking...\"\n\nMy curiosity peaked.\n\n\"About?\"\n\n\"I don't want to wait.\"\n\n\"For?\"\n\n\"To marry you. I don't want to wait until after you graduate or after I get my master's. There will always be something next, whether it's school, a job, or whatever. It's just... whatever is next, will always be with you. Whatever is next, I want you to be my wife when it happens.\"\n\nOh, Mike. I love you more than you can possible know. Of course I want to marry you as soon as possible, this minute if we could. All that is next for me is you.\n\n\"Let's get married this summer, or even this spring... as soon as possible.\"\n\nYes, yes, a thousand times yes!\n\nMy hand slid behind his head and I pulled him down to me, kissing him, feeling this wonderful man who would be my husband. He couldn't wait to marry me and I couldn't wait to be his wife.\n\nWe made wonderful, passionate love to each other, him bringing me to so much pleasure that my mind and body gave out. \n\nAfterwards, we slept, with his body wrapped around mine, my back pressed to his chest.\n\nHe spoke quietly, \"You know, you didn't answer my question.\"\n\nI couldn't even remember what we had talked about before we had made love.\n\n\"I didn't?\"\n\n\"Well, it wasn't so much a question as a request.\"\n\nI searched, trying to remember.\n\n\"I don't want to wait. I want to marry you this year... as soon as possible, even.\"\n\nWhatever is next... we'll always be together.\n\nI turned to face him and pressed my forehead to his. I had everything I wanted in life in my arms.\n\n\"Yes.\"\n\n__________\n\nWe began planning the wedding immediately. He promised me the world, but all I really wanted was to stand next to him and say, \"I do.\" \n\nWe briefly discussed getting married on campus, but eventually we decided that as much as we loved the University of Maryland, we couldn't see ourselves getting married anywhere other than the Eastern Shore. The school was an intrinsic part of us, the place where we found our love for each other and after we had been separated, rediscovered ourselves together again, but the Eastern Shore is home and it always will be.\n\nOnce we settled on a date, May 31, we knew exactly where we wanted to be married. It was a beautiful time of year, just before the full heat and humidity of summer set in, and on a beach beside the ocean was where we would exchange rings.\n\nIn April, Maria, Mia, and I spent a Saturday shopping for dresses in Annapolis. It was almost absurdly easy to find their bridesmaids dresses. I didn't want to be the bride who puts her best friends in something horrific, so the three of us worked together to pick out beautiful gold dresses in a light summery style. \n\nMy dress was more of a challenge. I waivered back and forth and I must have tried on dozens of dresses before narrowing the selection to two.\n\nThe first was a full length gown, with a strap that wrapped up from the chest and around my neck. The bodice was tight and the back had a large ribbon laced from my shoulder blades to my rear, giving a very corset-like appearance. The gown spread around me, forming a large pool of fabric that moved in ripples behind me as I walked. It was a very traditional look.\n\nThe second was a light-weight sundress which very few people would have mistaken for a wedding gown. However, it would be absolutely perfect for a warm afternoon wedding on the beach. Two thin spaghetti straps went over my shoulders and a modest neck in the front revealed only a small amount of cleavage. The skirt was cut at my knees and I could see it blowing softly in the breeze. Despite its non-traditional appearance, it was very elegant.\n\nI waivered back and forth, trying on each dress several times.\n\nWhen I had changed back into my own clothes and come out of the dressing room to discuss the decision with Mia and Maria, only Mia was there. A few moments later, Maria came up to me and tapped me on the shoulder. When turned around, she was holding the dress that I would be married in. She had found it for me.\n\nIt was perfect the moment I laid eyes on it, an incredible combination of traditional elegance and modern simplicity. I tried it on for Maria and Mia.\n\nThe dress was strapless and about half of my back was bare. The cut was simple, clinging tightly to my chest, belly, and hips, before loosening around my thighs and flowing to tea length halfway down my calves. The material was actually two layers, an inner layer of silk, keeping the modern look, while a layer of lace was intricately woven from top to bottom.\n\nAs soon as I stepped out of the dressing room, Mia was nearly in tears and even Maria was uncharacteristically emotional.\n\nI stood still while the seamstress took measurements for the final adjustments, trying to hold back my own emotions, thinking about standing on the beach. I could close my eyes and picture the ocean, the sand, and Mike standing next to me with his gorgeous blue and green eyes.\n\nThe magnitude of that moment overtook me and I began crying with tears of joy.\n\nThe following week, after my mid-terms, Mike and I left early on Friday to go to Norfolk, to find out as much about my past as we could and if we could be legally married.\n\nAt the records office, I showed the clerk my driver's license and submitted the request for an official copy of my birth certificate. I don't know what I was hoping for, other than to see nothing that would stand in our way. The wait was excruciating, giving my mind too much time to dream up horrible scenarios.\n\nThe clerk finally returned and set my birth certificate on the counter in front of me. I stared at the information about my birth mother, information that I had never asked our mom for fear of hurting her. Her name was Angelica and she was only 22 when she had me. I wondered if I would be a mother at that age, in less than two years.\n\nMy eyes continued reading, but where my father's information should have been, the form was blank.\n\nI looked up at Mike and he smiled at me.\n\nWe left the records office holding hands and while he said he wanted to do a bit more research, I knew that nothing would keep us apart. We would be married, even in the eyes of the State of Maryland.\n\nWe got onto the highway and I held his hand as we drove with the windows down, enjoying the beautiful spring weather. Within an hour, we were exiting the highway and I looked over at Mike.\n\n\"Oh, getting gas.\"\n\nI raised an eyebrow, knowing that we had gotten gas in Norfolk and still probably had 3/4 of a tank left, but I quickly smiled when I saw the signs for Colonial Williamsburg. Shortly after, we parked and were walking along Duke of Gloucester through the living history area.\n\nMike's hand found mine and he smiled at me.\n\n\"I just wanted to spend some time with you.\"\n\nI squeezed his hand and pressed my body against his arm as my heart and mind were lost in my love for him.\n\nWe walked in and out of various little shops and museums, with Mike insisting on buying me a pair of silver earrings in one store and a number of handmade candies in another. \n\nAs we sat and ate dinner outside, Mike tapped me on the arm and pointed in the direction of an actress, \"You know, you would have made an awfully attractive serving wench.\" I giggled at him and used my hands to lift my breasts, greatly exagerrating the cleavage at the top of my t-shirt.\n\n\"Oh, you mean like this?\"\n\nHis eyes nearly bugged out of his head as they dropped down to take in the view.\n\nI teased him some more, picking up his beer and thrusting my chest forward while taking on what I imagined to be a colonial accent, \"Would you like some more mead, sir?\"\n\nHis eyes finally made their way back up to mine.\n\n\"Feeling a bit saucy tonight, are ya?\"\n\n\"Maybe...\" I let my voice trail off with quite a bit of implied meaning.\n\nWe sat and talked, laughing and flirting for hours. \n\nWe'd never really had the pursuit phase of a relationship, so it was fun to in some small way experience the subtle changes in voice, the wandering eyes, or the almost inadvertant touches that you hope will lead to so much more. \n\nOf course, instead of the trepidation of a first date or fears of saying something wrong early in a budding relationship, we were completely at ease and after Mike paid the check, his arm slid around my waist as we walked together.\n\nIt was dark when we got back to his truck. He opened the door for me and held my hand as I climbed in. I took the moment to brush my fingers along his chin, one of my favorite activities.\n\nWe were barely on the road for a few minutes when he turned into the driveway of a beautiful white colonial house with perfectly manicured grounds.\n\n\"Mike...\"\n\nAgain, his response was the same, \"I just wanted to spend time with you.\"\n\nAs soon as he had parked and opened my door for me, I threw myself into his arms.\n\n\"I love you.\"\n\n\"I love you, too.\"\n\n\"Mike, can we afford this?\"\n\n\"Don't worry, everything is okay.\"\n\nWhen I let go of him, he reached into the back seat and pulled out a bag. I walked next to him, with his hand resting on the small of my back, gently guiding me.\n\nInside, the bed and breakfast was incredible, decorated in a traditional American colonial style. The owner greeted us with tremendous cheer and showed us to our room after a quick tour of the premises.\n\nOur room was massive with an incredible four-post bed dominating the center. Small chairs were placed at a table under the window. I walked to the bed and rested my hands on the end, feeling the softness of the quilt and bedding. Before I could turn around to thank him for another wonderful surprise, I felt his hand on my waist and then his body pressing against my back.\n\nHe pulled my hair to one side and his lips were pressed against my neck, sending goosebumps and shivers shooting through my body. I tilted my head to the side to give him better access and he traced his lips down to my shoulder and then back up to my ear in a slow, winding path.\n\nI moaned when his hips pressed against my rear and I could feel his erection through his jeans. He continued kissing my neck and I ground myself back against him. I waited with anticipation as I felt his fingers pull my hair to the other side of my neck and were soon followed by his lips on my skin again.\n\nI cooed softly, \"Mike...\"\n\nI let him seduce me this way for several minutes, before turning to face him. I reached behind his head, pulling him down to me and letting my tongue dance across his lips. In moments, he was kissing me passionately and our tongues were in full contact, pressing against and massaging each other.\n\nI put my hand on his hips, then slid them up to his chest and began unbuttoning his shirt. I could feel his lean muscles through the fabric. As soon as I reached the last button, I pulled it away from his body and let it fall down his arms.\n\nAs soon as I could, I let my lips wander, pulling away from his mouth and kissing his chin, then his neck, and down to his chest. I felt his soft hair as I moved back and forth across his pecs, alternating between short, glancing kisses and lightly sucking on his skin.\n\nMeanwhile, my hands continued the work of undressing him, unbuckling his belt and unbuttoning his jeans. I moved my fingers to his hips and slid them inside the waist of his pants and boxers. As my hands pushed down from his hips to his thighs, his pants and boxers followed. \n\nWhile taking off his pants, I found myself looking straight at his member, standing proudly in front of him. I had felt it in my fingers so many times, but rarely got a very close look. I was almost shocked that something that large could fit inside me. As I rose back to my feet, I let my fingertips lightly brush him and then rubbed my breasts against his erection.\n\nHe moaned quietly and I thought to myself, \"You have no idea what I have planned for you.\"\n\nIt was my turn to seduce him.\n\nI held his hips and coerced him into turning his back to the bed, then pressed on his chest to force him to sit. \n\nI moved until I was a few feet away from him, then lifted my finger to my lips and gently held it between my teeth, looking at him through my eyelashes.\n\nMy hands dropped until they rested at my waist. I unbuttoned my jeans and pulled them open just enough to reveal a tantalizing glimpse of my black panties. I slid my thumbs into my jeans and pulled down a few inches, revealing a bit more for him.\n\nHis face was frozen, eyes locked on me, and just the tiniest hint of a grin on his lips.\n\nI stopped and tilted my head to the side and let the corners of my mouth turn the slightest bit upward, too, then I turned until my back was facing him. I looked over my shoulder at him, out of the corner of my eye, my face partially obscured by my hair.\n\nAgain I hooked my thumbs into my jeans and pushed down until I could feel the change in temperature on my rear as just my panties remained. I thrust my butt out just a bit and pushed further until I felt my jeans give away and fall to my feet.\n\nI stepped out of them, having not taken my eyes off of him the entire time. I watched as his eyes traveled up and down my body and his tongue lightly wet his lips.\n\nI turned back and faced him in my tight t-shirt and panties. My eyes took in the scene, with him leaning back on his hands on the bed, his member standing tall above him, and then they drifted down towards my body, where my nipples were clearly poking through the material of my shirt. I continued with my silent strip tease for him.\n\nDon't you dare take your eyes off me...\n\nMy fingers moved back and forth across my hips, inching my shirt above my waist, then above my belly button. As my shirt reached the bottom of my breasts, my smile spread wider and I held my finger in the air at him, taunting him.\n\nAgain, I turned away from him. I continued pulling my shirt up, my nipples feeling the cool air in the room and becoming even firmer as they were uncovered. My hair rushed through my shirt and fell down my now bare back. I slowly extended my arm away from my body, letting my shirt dangle for a moment before dropping it. I could feel my hair brushing against the top of my rear.\n\nMy hands slid down my body and found the edge of my panties. I pulled gently and felt every inch as my skin was slowly exposed to the air. When my butt was halfway uncovered, I looked over my shoulder and Mike's mouth was hanging open.\n\nI pushed and felt my now thoroughly saturated panties pull away from where that had been clinging tightly to my lips. A few more inches and they too fell to the ground. \n\nI stood naked, my back to Mike.\n\nI slowly turned to face him and watched his eyes as they grew bigger and roamed across my body.\n\nHe began to push himself back to sitting straight up and looked like he wanted to stand and take me into his arms, but I pursed my lips and again held my finger straight in the air at him and moved it slowly back and forth. He immediately froze.\n\nNo, no... this is my game.\n\nI moved to him, one slow step at a time until my legs were pressed against the edge of the bed. His knees brushed against my hips.\n\nMy hands reached out and rested on his thighs, pushing them apart until they were no longer against me.\n\nI slid my hands down to the bed beside him, removing our last point of contact, and paused, looking directly into his eyes. The look of shock was exactly what I wanted.\n\nLeaning forward, I lowered my head and watched as my hair fell over my shoulders and brushed against the bare skin of his legs. I leaned further and dragged my hair up his body, across his member and to his chest.\n\nHe sighed as he exhaled for the first time in what felt like minutes.",
        "I looked up and my hair now formed a curtain between us. When I reached out and brushed a finger along the underside of his member, tracing the length of his shaft until tapping the small opening at the tip and pulling away, his body jerked at the contact.\n\nMy head moved lower and I paused just above him, letting my breath run across the head of his member. My lips pressed against his skin and he jerked again under me. Lower again and my tongue slid out from between my lips, touching the very base of his shaft and slowly licking his entire length.\n\nI listened as he drew in a quick breath and held it. It was time.\n\nMy lips parted and I took his head into my mouth. My tongue swirled around, tasting every bit of him. I sucked more of him into me and my tongue could feel the ridge between his head and shaft, tracing circles around it. I moved as far as I could, until about half of him was inside my mouth. I wanted to take all of him, but I just couldn't manage it.\n\nMy lips formed a seal against his skin and I began sucking gently. Slowly I pulled back until I released him. Again, I took him into my mouth. My hand reached up and my fingers wrapped around the base of his erection, holding him steady for me.\n\nEvery time I pulled his wonderful erection into my mouth, I let my tongue dance circles around it before releasing him. My fingers gently pumped as I bobbed my head up and down on him. \n\nI counted time in my head. One, I pulled him into my mouth. Two, I ran my tongue around him. Three, I took as much of him as I could and sucked gently. Four, I released him.\n\nSlowly, I increased my tempo, with my lips, my tongue, and my hand. \n\n\"Savy...\"\n\nA small smile came to my lips before I moved down again and took a bit more of him as I adjusted to feeling him in my mouth, pressing lightly against my throat.\n\nHis voice became more urgent, \"Savy...\"\n\nOne. Two. Three. Four. A bit more quickly now. A bit more pressure with my fingers and my lips.\n\n\"Savy...\" It was more of a moan than an actual word.\n\nMy saliva leaked down his shaft and my fingers spread it around him, using it for lubrication.\n\n\"Ohhhh...\"\n\nYes, I'm ready.\n\nI reached up with my other hand and formed a small cup, before lifting until I made contact with him. I barely applied any pressure at all, knowing how sensitive he would be there.\n\n\"Savy... I'm gonna...\"\n\nI pumped faster, sucked harder, and swirled my tongue more furiously.\n\nRight as I released him from my lips, I felt his legs tense beside me. I immediately locked my mouth back onto him, holding his head between my lips and sucking so hard my cheeks hurt. \n\nAnd then I felt it, the first spurt as he came in my mouth. I swallowed , the salty, and even a bit sweet fluid, as quickly as I could. He groaned above me and my fingers continued pumping him while I held my mouth still, milking the last drops from his body.\n\nEventually, I felt no more and swallowed the last bit before pulling away from him. I stood up and pulled my hair back behind my shoulders so that I could see him, his chest rapidly expanding and contracting, his eyes half-closed.\n\nWhen his eyes focused on me, he gasped, \"Oh, Savy...\"\n\nI smiled at him and said nothing while slowly backing away. Again, he started to sit up and again I used my finger to warn him to be still. He needed to rest and I needed my own release.\n\nI continued backing away until I was just in front of one of the chairs next to the window. I sat down, and turned my body until I was completely facing him. I held my finger to my lips, shushing him before he could say anything.\n\nSlowly, I traced a line with my finger, down from my lips to my neck, between my breasts, and across my flat belly. I felt my soft pubic hair and slouched slightly in the chair, spreading my legs as I moved down.\n\nAgain Mike's jaw dropped.\n\nI felt my first convulsion as my finger traced across the edges of my incredibly moist lips. I reached down until I was at the very base of my opening and gently probed inside, feeling my wetness coat my finger. I pulled up and moaned softly, feeling the entire length of my slit. When my finger brushed against my clit, I felt my second convulsion.\n\nI gently pressed against that oh-so-sensitive spot and my hips involuntarily thrust, seeking more contact. Slowly, I moved my finger back and forth, spreading my wetness.\n\nIt wouldn't be very long at all...\n\nI had my last glimpse of Mike, leaning back on the bed watching me, before my eyes closed and I slid my finger inside me. My legs straightened with another convulsion and I struggled to keep myself upright.\n\nI spread my legs further, intending on giving Mike a show that he would never forget.\n\nI slid a second finger inside and began slowly pumping them in and out. My other hand wandered to my breasts, taking a nipple between two fingers and lightly pinching before releasing and moving to the other.\n\nI could feel the pressure building inside as my convulsions became more intense, more urgent. I moaned as my fingers moved more rapidly. I imagined Mike's fingers inside me, pleasuring me.\n\n\"Ughhhh...\"\n\nI groaned. I was so close... so close.\n\nI thrust my fingers into myself faster, more vigorously.\n\nMy thumb moved away from my fingers that were inside me and sought out my clit pressing on it firmly.\n\nI pressed harder on my clit and thrust my fingers as far inside as I could reach. \n\nMy body went rigid and my orgasm slammed into me. I felt my juices running down and over my hand. My mouth hung open in a silent scream and pleasure shot through every nerve in my body.\n\nAfter several moments, I felt my fingers slide out of me and my eyes slowly opened to see Mike, his hand wrapped around his once again erect member, slowly stroking himself.\n\nOh no, no, no. That's mine.\n\nI pushed myself to my feet, my knees slightly weak as I wasn't fully recovered from my climax. I went to the bed and reached out, pulling his hand away from what I wanted.\n\nI climbed up onto the bed, placing a knee on either side of his thighs, holding myself above him. Reaching between my legs, I wrapped my fingers around his member and lowered myself onto him, pressing him against me. I easily slid onto him, as I was still soaking from my orgasm, and my body responded to that wonderful feeling of him filling me, opening to receive all of him.\n\nHis arms slid around my back and he pulled me to him, my chest and belly pressing against his, feeling his warm body. My hips naturally rolled, forcing him into me at varying angles.\n\nI looked down, into his eyes, and his lips pressed against mine. We kissed deeply and passionately as I ground my hips on to him, sending unbelievable stimulation through my body.\n\nPerspiration began building on my neck, running down my breasts and between our bodies. My hair cascaded down my back and over his arms.\n\nI alternated between grinding my hips hard on to him, gently rolling back and forth, and lifting myself almost completely off of him before thrusting back down onto him. \n\nEvery sensation I was feeling was hitting every part of my body. I could feel him inside me, from my toes to my fingers and everywhere in between.\n\nWe reached such a pace that I couldn't hold my lips to his anymore. I leaned back, my hair sliding across my bare skin, and he buried his face between my breasts.\n\nI need you to cum. I'm going to lose control and I want to climax with you. Please, hurry... I can't hold on.\n\nHis hands slid down to my rear, taking a cheek in each hand and helping me as I repeatedly impaled myself on him. He squeezed my rear tightly and pulled me down roughly onto him one last time, hitting the deepest parts of me.\n\nHe groaned and I felt him release his seed inside me. The first shot sent me over the edge and my arms clutched at him, scratching his back as another climax overtook me. I felt every convulsion of his orgasm inside me, filling me.\n\nWe held each other, panting and struggling for air, until our lips met again. Our kiss gradually softened until we could breathe again, our hearts quietly slowing as one.\n\n\"My Mike... my Mike...\"\n\n\"I love you, Savy. I am yours.\"\n\nI fell asleep in his arms, as always, but with visions of our future together running through my mind as I lost consciousness.\n\nThe next morning, we showered together and got dressed. We were often quiet after such intense lovemaking, letting our physical love dominate for a time. \n\nThe smallest touches between us - his hand on my hip as I brushed my hair or a soft kiss on my neck as I buttoned my jeans - said everything that needed to be said. We belonged to each other in every way.\n\nMike took our bag out to the truck, before returning to settle the bill with the owner. I waited, sitting on the swing on the front porch. When he came out, he held out his hand and I slid my fingers into his. He had a funny smile on his face.\n\n\"What're you grinning about?\"\n\n\"This...\"\n\nHe handed me a piece of paper.\n\nI unfolded it and looked at our bill. The total was crossed out and next to it was a note.\n\n\"I saw your lovely lady's engagement ring, but no wedding rings. Congratulations on your upcoming marriage.\" A little heart was drawn at the end.\n\nI looked up at Mike and his grin was now a full smile. My only response was to press myself tightly to him, to the love of my life.\n\n__________\n\nIn many ways, the weeks before our wedding passed so quickly, but as my anticipation built, as the reality of the preparations washed over me, the days passed more and more slowly. I needed to be his wife, more than I needed air and water.\n\nAs the end of the semester approached, we had less and less time to spend those moments together, worrying about nothing except each other. \n\nWe often found ourselves studying next to each other at the dining room table, but would have to move to different sides to avoid the touches that were so distracting. \n\nInevitably, my hand would reach out for his or my leg was slide up to touch him and we'd smile at each other. Eventually, one of us would get up and take their books to the bedroom and close the door.\n\nIt was the only way we could get anything done, but after we had completed our work, we fell into each other's arms and made love. \n\nAfter my last exam, I was confident that I had managed a fourth straight semester with a 4.0 GPA and much of it was thanks to Mike, for supporting me and being strong, forcing me to study and work when the only thing I wanted to do was feel his body against mine.\n\nDuring the week after finals, but before our wedding, Mike had his bachelor's party and I had my wedding shower. \n\nFor Mike, he refused to do anything more than agree to meet the guys for a night at the pub. Jeff told me later that they rented a private room and played poker, smoked cigars, and drank until nearly sunrise.\n\nMaria arranged my wedding shower and hosted at her family's home. Her aunt made the absolutely most incredible Filipino food for us, many dishes I hadn't even seen before. \n\nWhen it came time to open gifts from all of my girlfriends, a pretty consistent theme became apparent. Almost all of the gifts were very much for Mike, not for me, as I opened box after box of skimpy lingerie. Perhaps I would have to seduce him again on our honeymoon.\n\nFor our last night together before driving to the shore, Mike ran a hot bath for me that smelled of roses, with what must have been dozens of candles lighting the bathroom. \n\nI finally emerged from the spa he had made for me to find that he had placed candles around the entire apartment and dinner was waiting for me on the table.\n\nWe made love that night, the last time before I would be his wife and he would be my husband.\n\n__________\n\nI watched in awe as we drove across the bridge to Ocean City, on a barrier island off the coast of the Eastern Shore. Tomorrow was my wedding, our wedding. It was so close now.\n\nAt our hotel, Mike and I had separate rooms. It was so odd to me that we would be staying apart for even one night, the first night since I had told him that I still loved him in fact, but we were both just old fashioned enough to want to maintain that tradition. \n\nAfter carrying our things up to our rooms, he kissed me and told me he'd be waiting downstairs in the bar.\n\nI took a wonderful hot shower and stood before the mirror doing my hair in an intricate braid. I wanted to be perfect for him, for every moment I would be with him.\n\nI remembered that first night after I had graduated from high school and him from college. I'd fallen asleep on the sofa and he didn't recognize me at first. Then his eyes had wandered on my body and he'd made me feel like a woman for the first time in my life.\n\nAs I slid into my dress, my body felt the warmth of his eyes on me.\n\nWhen I finally deemed myself ready for him, I slipped into my sandals and made my way downstairs. I found him, as promised, in the bar. \n\nBefore he could see me, I stopped to admire him, wearing a pair of slacks that I absolutely loved on him and a blazer that I knew emphasized his trim waist and broad shoulders when he buttoned it.\n\nHe was leaning on the bar with his elbow, his chin resting on his hand, looking very pensive. He turned and looked at me, his hand dropping to the bar with a thud as he slid off his stool, standing to meet me. As soon as I was within reach, I took his hand.\n\nI could feel his strength as he took me into his arms. His lips pressed to mine and I was thankful that he was holding me up, as I melted in his embrace. Before pulling away, he whispered in my ear, \"You're absolutely incredible.\"\n\nI had no words to tell him what he means to me.\n\nWhen we arrived at the restaurant for our rehearsal dinner, Jeff was waiting out front. Maria and Mia had been so important for me during the wedding planning, helping with dresses, flowers, invitations, and more, but Jeff had gone above and beyond with his support for us. Every decision that we made, he made sure it happened. He is a brother to both of us.\n\nAfter greeting us both with hugs, he lead us inside. He asked us to wait just outside of where our rehearsal dinner was and said we'd know when to come inside. \n\nI looked up at Mike, so completely filled with happiness, while we waited. I silently counted the hours until we would be married in my head.\n\nSuddenly, I heard applause. Mike smiled at me and we walked in together.\n\nThe night was a complete blur, as our most loved friends talked and laughed with us. Dinner was wonderful, a truly Maryland affair with blue crab, corn, and other local dishes. \n\nFor the entire evening, pictures of Mike and I cycled on a TV screen on the wall from a slideshow that Mia had arranged. There were moments that were so vivid in my memory: Mike and I posing at the pub the first time I met Jeff, a picture Mike had taken of our smiling faces that I knew was from when we were in bed a few weeks ago, and a picture of the two of us surrounded by people, moments after we had announced our engagement to the world. \n\nOccasionally, pictures of our childhood would appear, Mike looking so much older and more mature than me, even in his awkward teenage years. Pictures of myself, younger than I could even remember, floated in front of my eyes. I stopped breathing for a moment when a picture appeared of us, Mike with his arms around me. I must have been maybe 11 or 12 and he was a young man. He still held me like he was protecting me from the world.\n\nThere were also spectacular pictures that I had never seen before that caused me to gasp. In one, we were standing in the hallway and I was holding my violin at my side as Mike's fingers gently tilted my head up to him. It must have been the moment just before he kissed me after my last concert. In another, I was sitting next to Mike as he slid my ring onto my finger. Mike had asked for Jeff's help that day. I had no idea that he had taken that picture of us. I would always have that moment in my mind, but now I had the most incredible picture of it.\n\nSo many of the pictures brought tears to my eyes as the memories flooded through me. I would stare at Mike in awe after a new picture appeared and he would smile and kiss me on the cheek.\n\nI was admiring a picture of the two of us at an Orioles game when I completely froze. A knot overtook my stomach and my throat closed so that I couldn't breathe.\n\n\"Mike...\"\n\n\"Savy, what is it?\"\n\nMy lips trembled as mom stood in the room looking at us. We hadn't seen her since that night, my concert, our engagement.\n\nI wasn't even thinking as I started to rise to my feet. I felt Mike's hand on my leg, pushing me back to my chair, and I turned to look up at him.\n\n\"Let me.\"\n\nHis hand rested on my shoulder as he stood next to me. As soon as he was out of reach, Mia sat in his seat and moved close to me. Maria was on my other side. They each took one of my hands and squeezed.\n\nMom...\n\nI watched as Mike and mom left the room together.\n\nHorrible, terrible thoughts of something happening to prevent us from getting married ran rampant through my mind.\n\nI looked at Maria, then Mia. I wondered if my face matched the look of shock on theirs. I knew that they were talking to me, but I couldn't hear a word they were saying. My eyes were locked on the door, waiting for Mike.\n\nI don't know how long it took, but the door finally opened and I saw Mike again. He had a look of determination on his face. As he approached me, his eyes never left mine and he softened into a gentle smile.\n\nHe came around the table and held out his arm. I cautiously slipped my hand into his, still terrified, but somewhat reassured, first by his demeanor and then by his touch. He lead me outside and I pressed as close to him as I could.\n\nOutside, Mike turned and I saw her again. She was crying.\n\nEvery question ran wild in my mind. Why are you here? Did you come to try and talk us out of getting married? Why can't you support us, be happy for us?\n\n\"Mom...\"\n\nHe eyes met mine.\n\n\"Savannah, honey, I'm so sorry.\"\n\nI'm sorry, too, mom. I just want you to be happy for us.\n\nTears ran down her cheeks.\n\nI felt Mike next to me, his lips near my ear.\n\n\"It's okay.\"\n\nHe wouldn't tell me it was okay if it wasn't. His hand briefly squeezed mine and then let go. Mom, are you here for us?\n\nI took a step forward and felt mom's arms slide around me. I crumpled into her embrace.\n\n\"I'm so sorry, baby girl. I love you. Please forgive me. I want you to be happy. I want you to... be with Mike.\"\n\nMom...\n\nMy emotions overwhelmed me and I cried. She had come back to us. She wanted us to be happy, together. She held me tightly and we cried together, reunited.\n\nAs she held me, she told me how sorry she was for what she had done. She said that was selfish and put herself before us, but she would never do that again. Our happiness was her only thought now.\n\nShe talked to me and soothed me. She would be there for our wedding. After I said, \"I do,\" I would look back and she would be smiling for us.\n\nI could barely process everything. I had been completely prepared to be married without her there. For months, my family was Mike and our friends. \n\nI don't know if other people would accept the situation the way Mike and I did. We never wanted her out of our lives, but it was the way it had to be until she came around. Once she did, we wouldn't think of anything other than having her there to share with us. That was all that mattered.\n\nFor the rest of the evening, it was hard to believe that everyone I loved was there with me, with us. Whenever it felt like a dream, I sat next to mom and rested my hand on her arm. She was real. \n\nShe watched as pictures of Mike and I flashed on the screen and we told her the story of us. \n\nWhen she said goodbye, she promised that she would see us get married. I held her tightly to me, remembering all of the years when her embrace had been my comfort.",
        "Later, I stood in front of Mike in the lobby of our hotel.\n\n\"I'm so happy she's here.\"\n\nHis voice was soft and kind, \"I am, too. She should share this with us.\"\n\nI pressed my face to his chest. \n\n\"Mike, I love you.\"\n\nI pulled away so that I could look into his eyes and trace my fingers along his cheek.\n\n\"My husband...\"\n\nHe bent down and kissed me, gently and with all of the love that existed between us.\n\n\"My wife... my Savy.\"\n\nIt was so hard to let him go, my only comfort being that the time before we would be married was now measured in hours.\n\nHow I slept, I have no idea.\n\nI awoke into a blur. \n\nAs soon as I texted Mia and Maria to let them know I was awake, they were knocking on my door, demanding to come in. We immediately hugged and giggled. \n\nIt was finally here. My day. Our day.\n\nThe three of us went to the hotel's spa as planned and sat chatting and reminiscing as we were pampered to within an inch of melting into happy little puddles with manicures, pedicures, massages, and baths. My fingers and toes were painted, brightly red for Maryland, and the stylist used so little makeup that I couldn't even feel anything on my face, but when I turned to the mirror, I wondered if the beautiful woman who stared back at me was the same woman that Mike had always seen when he looked at me.\n\nThe hair stylist on staff begged me to let her do something with my hair, even offering her services for free. She said that she had never had a bride with such long and full hair, but I politely refused. On this day, of all days, I would wear my hair completely free for Mike.\n\nAfter returning to my room, I had a few minutes to myself.\n\nI stood on my balcony, listening to the ocean waves breaking on the beach under the magnificent sky. I breathed deeply, smelling the clean, salty air. \n\nI think a part of me always knew that this is where I had to be in life. From the time I was brought into his home, Mike was my world. He had protected me and cared for me, always supportive, always there for me.\n\nWhen I shed my awkward, girlish appearance, I finally had the courage to seek out his love. We spent a summer together and it was as if we had spent a lifetime together. Even before my mind knew what I wanted, my heart needed him.\n\nI had kissed him. In a single moment, our lives changed. It wasn't even really a conscious decision, it had been my heart guiding me to the love of my life. \n\nHe didn't reject me. He wasn't angry at me. He returned my love and held me in his arms. My life, our lives, were forever better.\n\nI heard a knock on the door and paused for one last breath before turning to answer.\n\nMaria quietly stepped in, \"It's time.\"\n\nI pulled her to me and hugged her.\n\n\"Thank you, for everything. I wouldn't be who I am without you.\"\n\nShe whispered back, \"Mahal kita, Ineng.\"\n\nMinutes later, we were with Mia and driving south to Assateague. I rolled down my window and held my hand outside, changing the angles to let it flow through the wind. I had once felt so overwhelmed by life, consumed by loss and sadness, but now Mike had brought love to me and I felt like my hand, floating on invisible air currents that lifted me away from all that had weighed me down.\n\nGone were the fears, the worries, the trepidation. It was my wedding day and as I watched the ocean through my window, I was entirely focused on the present and the future.\n\nMia pulled her car into a parking lot and the three of us walked to the beach, where two tents stood, starkly white against the deep blue of the ocean and the crisp azure of the sky. We chatted and giggled, lost in anticipation of coming events.\n\nMaria and Mia took my things into one tent, but I took a few moments for myself, wandering among the chairs on the sand. A trellis was placed in front of the chairs, forming a window to the ocean beyond. I smiled as I ran my fingers along the white roses woven into the structure. It was simple and beautiful. It was to be the most sacred place in my life, where I promised to spend my life with Mike and he would become my husband.\n\nI walked further onto the beach, until my feet touched the moist sand where the strongest waves had broken and run uphill before sliding back to rejoin the ocean. Instead of the soft pools that my feet left behind in the dry sand behind me, my feet now left clearly defined imprints. A few strides later and I watched as cool water chased up the beach and flowed over my toes. I stood still and let the receding wave pull the sand out from under my feet.\n\nI closed my eyes and felt the ocean, the sand, and the gentle breeze caress my skin. I breathed deeply and could feel my hand slide into his. My lips curled into a soft smile, before widening as my joy consumed me.\n\nI took my moment and then turned and saw Mia and Maria waiting for me up the beach. Soon, I was inside my tent, preparing for Mike.\n\nMaria stood behind me, brushing my hair. Mia dug around inside of her bag before moving to sit in front of me.\n\n\"Savannah, Maria and I both love you so much. We know this won't match your fingernails and toenails, but we wanted you to have something new and something blue for your wedding day.\"\n\nShe handed me a small beautifully wrapped box. I carefully removed the silver and white paper, then opened the box. Inside was an incredible sapphire pendant. I immediately set the box on the table next to me and stood to embrace both of them.\n\n\"You are both my incredible sisters. Thank you. I love you.\"\n\nWe talked and laughed as we took our time changing and getting ready, sharing memories, but also talking about the plans Mike and I had for the future. We knew that we couldn't move to the Eastern Shore as long as Mike worked at NASA and I was at Maryland, but maybe Annapolis would be close enough. Maria asked me if I would continue playing after I graduated. I hoped that I would. Max had told me that I could play in any concert hall in the world if I wanted and I could see myself standing in Vienna or Sydney, with Mike in the front row.\n\nEventually, we were ready and I could hear the voices of our guests outside. I stood before my sisters and bowed my head as Maria placed a wreath of baby's breath on my head.\n\nShe whispered to me, \"You are perfect.\"\n\nI had to quickly grab a tissue to dry my eyes.\n\nMia poked her head out of the tent and asked Sarabeth to come inside. She was a friend from several music classes and Mike and I had asked her to play for our wedding. After she came inside, holding her violin at her side, she thanked me for including her and complimented both myself and my dress. We had worked together on an arrangement for both the processional and recessional and she had impressed me with her dedication to ensuring it was perfect.\n\nAgain, Mia looked outside and I heard her briefly speaking with Jeff. She closed the opening and came to me.\n\n\"Are you ready?\"\n\n\"Completely.\" \n\nShe smiled at me and she, Mia, and Sarabeth took their places. I stayed to the side, out of sight, as they tied open the flaps. \n\nSara beth stepped out and after a moment, I heard her beginning the arrangement we had created of \"All of Me\". She played beautifully, turning an already lovely piano ballad into a gorgeous classical love song.\n\nMia handed me my bouquet of white calla lilies and then stopped at the opening before stepping out into the fading sunlight. I couldn't help counting the beats in my head as she disappeared and Maria followed her, stepping lightly at the appropriate times.\n\nI moved forward and breathed deeply, deliberately. One last time, I ran my fingers over my engagement ring. It would always be paired with my wedding band from now on.\n\nA smile spread across my face and I stepped into the light.\n\nImmediately, my eyes locked onto Mike. I had to catch my breath with every step, as I moved closer and closer to him. \n\nHe was unbelievably handsome. The sun behind me cast long shadows across our guests from the tents, but he stood bathed in the oranges and reds of the sunset, framed by the deepening blue of the sky behind him. He wore simple white linen pants, which flapped slowly in the breeze, and a wonderfully fitted red dress shirt, untucked and with his sleeves rolled up to his elbows. Like me, his feet were bare and sunk into the sand.\n\nHe looked so relaxed, but his eyes were completely focused on me and his broad smile invited me to him.\n\nIt took an eternity for me to reach him, but when I did, I handed my bouquet to Maria and he took my hand. His touch sent my heart pounding in my chest. I wanted to brush my fingers along the smooth skin of his cheek, trace the outline of his jaw, and pull him to me. His fingers gently caressed mine and and I took a small step closer to him, so that my arm could just barely press against his.\n\nI was lost in his eyes, so blue in the fading light, as our ceremony began.\n\n\"Friends and family, thank you for coming today to celebrate in the marriage of Michael and Savannah.\"\n\nMy eyes briefly left Mike, just long enough to see mom sitting in the first row, before returning to focus on him, the love of my life.\n\n\"You have gathered here to share in their commitment to each other and to offer your love and support as they begin their lives together, as husband and wife.\"\n\nMy husband...\n\n\"Every person travels a unique path in life, seeking meaning and purpose, affection and companionship. Our path as are often filled with successes and failures, both of which create who we are as individuals and eventually contribute to who we become as partners.\"\n\nWe would have so many more successes in the future. Whatever successes lay ahead, we would achieve them together and none would be as important as pledging our lives to each other, building a family together.\n\n\"Michael's path has taken him from his home here on the Eastern Shore, to incredible successes in education, his career, and life. He has traveled across the ocean and into the farthest reaches of the universe inquiring into a deeper knowledge of the world around us and an understanding of the significance of life. He will continue exploring in the years and decades to come, yet he will always return home, to where his heart belongs, with Savannah.\"\n\nI beamed at him, so proud of all that he was and would be.\n\n\"Savannah's path has carried her from the shy girl of her youth to the incredible woman that stands before you today. Her life has been defined by the interweaving of her love for science and her passion for music. She has achieved the highest honors in education and dazzled audiences with the enthusiasm for life that she expresses through her violin. Wherever she may go, to concert halls around the world or a laboratory here in Maryland, she will continue bringing together the elements of life that she loves, with Michael by her side.\"\n\nI squeezed his hand.\n\nI will always be by your side.\n\n\"For Michael and Savannah, their paths, as incredible as they have been apart, could only ever lead to each other and to the joining of their lives into a single path forward, together.\"\n\nForward, to careers, a home... family.\n\n\"In making this formal commitment, Michael and Savannah pledge to each other and to you that throughout friendship and faults ,companionship and struggle, their love will serve as a guiding influence, forever bringing them together, always on a single path.\"\n\nI tried to hold back my tears as emotions flooded through me, most of all, my pure and unlimited love for Mike.\n\n\"And now, Michael and Savannah would like to make their vows to each other, for all here to witness.\"\n\nI felt my lips trembling as I remembered the words I had written for Mike. I took his hands in mine and stared up into his eyes.\n\n\"Mike... my dear Mike. You are the love of my life and my inspiration. Every day I live is a day that I seek your love and friendship. Everything that we have been through has made us the people that we are today and I accept all of it without any reservation, because now I stand before you on our wedding day.\"\n\nMy lips began to fail me and my voice wavered. No, no... a little more, don't fall apart yet.\n\n\"I will always be by your side, providing you joy and comfort. I pledge to you my love and support, for every day of my life...\"\n\nI couldn't continue as I was completely overcome and I struggled to say the most important words in my life.\n\n\"I love you.\"\n\nMy eyes were blurry with tears and I squeezed them closed, feeling wetness running down my face. I felt Mike lift my hands and press his lips to my fingers. I opened my eyes and was immersed in my love for him.\n\nMike's voice was strong and clear.\n\n\"My wonderful Savy. You are absolutely everything to me and all that I need in the world. I live and die with your smile and your touch. I need you beside me for the rest of my life, as my best friend... my companion.\"\n\nOh, Mike...\n\n\"I am overwhelmed when I think about the ways that our relationship has changed over the years, all of the experiences that we have shared and the times when you rescued me from my absolute darkest moments. I was completely lost without you and I am so incredibly thankful that you have chosen to spend your life with me.\"\n\nIt was never a choice. I need you.\n\n\"The only thing that can possibly compare to my love for you is my admiration for the incredible person that you have become. I am in complete awe of all that you are, my perfect Savy. Every part of me strives to ensure that I never disappoint you, that I never let you down in any way.\"\n\nHis hands held mine steady.\n\n\" You are the love of my life. I pledge to you my love and support, for every day of my life. I will comfort you and cherish you, protect you and nurture you, always. On this day, I give my life to you. I love you.\"\n\nI watched, through teary eyes, as his face showed pure love for me. \n\nA voice, \"May I have the rings?\"\n\nI was barely aware of anything other than Mike.\n\n\"These rings will serve as an abiding symbol of the love and union between Michael and Savannah.\"\n\nI reached out and took his ring in my trembling fingers. His hand steadied mine as I slid his wedding band onto his finger. I watched as it passed over his knuckle to its final resting place. \n\nI looked back down as I felt Mike place my ring on my finger. He carefully slid it until it rested against my engagement ring. My eyes moved back to his as more tears streamed down my cheeks.\n\n\"Savannah, do you take Michael to stand by your side from this day forward, as your lawfully wedded husband?\"\n\nI could barely whisper, \"I do.\"\n\n\"Michael, do you take Savannah to stand by your side from this day forward, as your lawfully wedded wife?\"\n\nDespite the moisture in his eyes, his voice remained firm and sure.\n\n\"I do.\"\n\n\"I now pronounce you, in the eyes of all here and the State of Maryland, husband and wife.\"\n\nI moved closer to him.\n\n\"You may...\"\n\nI heard nothing else.\n\nMy lips pressed to Mike's, my husband.\n\nEnd of Chapter 12."
    ],
    "authorname": "JustAnotherMarylander",
    "tags": [
        "brother",
        "sister",
        "asian",
        "true love",
        "romance",
        "college",
        "younger sister",
        "marriage",
        "taboo",
        "engaged"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mike-and-savy-ch-12"
}