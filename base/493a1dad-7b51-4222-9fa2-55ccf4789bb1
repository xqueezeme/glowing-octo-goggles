{
    "title": "Fantasy Sex Cruise 04",
    "pages": [
        "This is the fourth episode in a multi-part story. Although I hope you would enjoy it by itself, it would be better to start with Chapter 01 first so you can understand the context of the situation and get introduced to the characters. This is a story of a journey and is meant to be read in sequence.\n\n\n\n\nI was awakened on the fourth morning of the cruise by the feeling of being kissed gently on my chest and on my back as I lay on my right side. The kisses were slowly making their way down to my stomach and butt. \"You're in for a treat this morning Eddy. Your wake up blowjob will be delivered by two women instead of just one. Lie on your back and spread your legs so we can get to that lovely cock. You'll want to put a pillow under your head so you can see better. A big part of getting a double blowjob is watching.\"\n\nI pulled another pillow over and stuffed it behind my head. I certainly wasn't going to argue with her advice since I had never been given a blowjob by two women before but I briefly wondered how she knew that watching was a big part of it.\n\n\"Lauren you wrap your hand around Eddy's cock and start sucking the head while I start to work on his balls.\" I felt Lauren's hand gently encircle my shaft and soon felt her warm wet tongue begin to lick the head.\n\nIn less than a minute my cock was about half hard and Lauren began to slowly stroke it while continuing to lick and suck on the head. Kealani had enveloped my balls with her mouth so her tongue could play with them. I felt her licking and gently squeezing my scrotum between her tongue and the roof of her mouth. After a couple of more minutes of this Lauren started sliding her lips up the left side of my shaft and down the right side. She was right about the watching of course. The sight of her mouth slowly kissing and licking from the head to the base of my cock while my balls were being massaged by Kealani's tongue was very arousing.\n\n\"Ummmh ladies, it's not going to take much more of this to make me cum so if you have any more tricks you'd like to try on me I suggest you do it now.\"\n\n\"OK Lauren lay your head on his tummy and put the head of his cock in your mouth.\"\n\nKealani lay between my legs and massaged my balls. She licked my shaft with broad slow laps of her tongue from the base up to Lauren's mouth where she closed her lips around it and pressed them against Lauren's. After the fifth time she did this I felt my balls tighten followed by a stiffening of my cock. Kealani placed her lips at the bottom of my shaft and pressed her tongue against the junction of my cock and sac as the first salvo of hot spunk erupted from the tip and jetted into Lauren's mouth. Five additonal powerful emissions followed, which she swallowed as she received them. Yet another first time experience for this trip as a fantasy I didn't even realize I had became fulfilled.\n\n\"Lauren you go sit on Eddy's face so he can return the favor of what you just did to him. I think there's still some life left in this cock so I'm going to see if it'll stay up for a ride.\"\n\n\"Eddy, would you like to lick my bald pussy while Kealani plays with your dick?\" Lauren asked as she crawled up the bed toward my head.\n\n\"I would like that more than anything else I can think of Lauren. Come on up here and spread your legs over my mouth and I'll do the rest.\"\n\n\"Oooooh Eddy, I hope I taste as sweet as your cum tastes.\" Apparently giving me head had gotten Lauren aroused. As soon as she was in position I licked her from as far back as I could reach all the way up to her swollen clit. She was already wet. I put my hands on her ass and began to massage it as I sucked her clit into my mouth and began to lick it and gently nibble it with my teeth.\n\nMeanwhile, Kealani was giving me another one of those fabulous Japanese blowjobs. The head of my cock was in her warm mouth where she constantly licked and sucked on it. Her hands were gently rubbing and massaging my balls. Her saliva was dripping down my shaft as she let it flow over her lower lip. This time though she would slide her head down and take a little more than half of my shaft in her mouth then slowly withdraw until only the head was in her mouth leaving a coating of spit on my cock. It was a preview of what she would soon be doing to it with her pussy.\n\nI had moved my mouth lower on Lauren and was licking from her vagina up along her marvelous inner lips until I reached the thickest part. I then sucked the spongy flesh into my mouth and pulled on it with my lips to stretch it. I sucked as much of it as I could into my mouth and licked and nibbled on it. I don't know which one of us was enjoying this more. I continued to massage her ass with both hands while she did the same to her tits.\n\n\"Eddy that feels incredibly good.\" She said somewhat breathlessly. \"Everything you and Kealani do to me feels so tender and sensual. It makes me feel warm and desired and excited at the same time. In all the time I was married, my husband never made me feel this good.\"\n\n\"Let me know if there's anything you'd like me to do that I haven't gotten around to yet.\"\n\n\"No, you just keep doing what you're doing. Somehow you seem to know what my body wants before I do.\" \n\nShe shuddered slightly when I stuck my tongue into her vagina and moved it around in circles. \"Lauren your pussy does taste as sweet as my cum. If you'll scoot down a little and bend over you can lick your juices off my face and see for yourself.\"\n\nShe quickly complied. \"Oh God that's so erotic and sexy. I do taste good, don't I?\"\n\n\"You sure do. Now get that juicy cunt back up here on my face where it belongs.\" She giggled as she resumed her previous position pressing her lips hard against my mouth and gently rocking forward and backward as my tongue slid along her slit.\n\nAs impossible as it seems I had almost forgotten about my prick. When I finally let a few nerve impulses from it reach my brain it felt amazingly hard. I was not surprised since I had left it in the capable hands of a consummate penis expert and whatever she had done to it had been remarkably effective. I felt Kealani move to straddle my hips facing toward Lauren's back. Her hand held my cock, which was covered in her saliva and guided the tip to her slit where she proceeded to slide it along her entire length from her clit to her vagina. Her opening felt wet and hot as she paused her movement so the tip just touched her pink hole.\n\nShe continued to rub it along her pussy several times until she finally pushed herself down on it and let the head slip into her. Her hand slid up and down my shaft as her opening squeezed the head. She pushed again taking another couple of inches into her. Her other hand moved to her mound and began rubbing her clit and the tops of her lips. The next time she dropped down she took about half of my cock inside her. She removed the hand holding my shaft since she could completely control the action with her cunt now.\n\nShe began to raise and lower her hips and slide my cock in and out of her at a moderate pace. Each repetition engulfed a little more of my cock until I felt her bald lips make contact with my hairless pubes indicating that I was completely entombed in her cunt. She held still for a few seconds and continued to rub her clit as her breathing began to get deeper. She was making soft moaning sounds as her vagina pulsated around my rigid cock. Her hips were undulating forward and backward wthout allowing any of my cock to slide out of her. Then she returned to moving up and down and began to rhythmically fuck me, pulling herself up until only the head was still inside her and pushing down until her ass slapped against my hips. She could move her hips in ways that had to be experienced to be believed. I silently thanked her parents for making her take hula lessons while she was growing up.\n\n\"I owe you an apology Eddy. We spent so much time playing with Lauren yesterday that I neglected to fuck you. I intend to make that up to you today.\"\n\n\"Please don't feel like you did anything wrong Kealani, I had a wonderful time yesterday and I enjoyed every minute of what we did with Lauren. Especially that incredible performance on the veranda last night.\"\n\n\"I still want to do a little extra to make up for it, as much for me as for you. I really like fucking you, your cock feels like it was custom made for my pussy.\" She kept up her movements as she spoke and increased the tempo a little.\n\nShe reached out with her arms and placed her hands on Lauren's breasts. \"Oh God Lauren you have such beautiful tits. Lean back and let me rub them for you.\" Lauren leaned against Kealani's chest and Kealani began to massage Lauren's breasts without missing a beat of her pelvic gyrations on my cock.\n\n\"Kealani you make me feel so incredibly good every time you touch me.\"\n\n\"That's because you're such a hot MILF that I can't keep my hands off of you.\" \n\nKealani started kissing Lauren's neck and the side of her face. \"I don't know about you Lauren but I'm beginning to feel like there's a really nice orgasm not too far away. Do you think you might like to join me? Are you about ready to cum all over Eddy's face? Is there anything you want us to do to you to make that happen?\" Before Lauren could answer, Kealani moved her left hand down from her breast and put it on Lauren's clit and began to rub it. \"Eddy put your tongue as far up Lauren's twat as you can get it and suck it.\" Kealani somehow managed to keep bouncing up and down on me at a furious pace.\n\nLauren cried out, \"Oh YES Kealani your marvelous fingers know just how to make me cum. OH, OH, OH YES NOW. I'm cummming all over Eddy's face.\" I felt her do just that as her vagina throbbed and released a stream of juice into my mouth.\n\nLauren's orgasm induced Kealani to begin her own. She stopped sliding her pussy up and down my cock and impaled herself on it to the hilt. I felt her vagina contracting and releasing along the entire length of my cock. She held Lauren close and squeezed her breasts with both hands as she began to tremble. I was still sucking Lauren's vagina and feeling her ass and legs tighten as she rode her own climax higher and higher. \"OK Eddy, give it to me. Give me your hot cum.\" As if commanded by an irresistible force my cock began to spew forth the hot cream she demanded. After all the cum I had recently expelled in Lauren's mouth I had no idea where this load was coming from but the pulsating spurts of my ejaculation caused her vagina to convulse around me and draw out even more of the pearly fluid as we all reached the peak of our orgasms.\n\nKealani slowly pulled Lauren off my face and as she did so, raised her hips and released my cock from the hot gooey confines of her pussy. She lay Lauren's limp body down beside my legs on her back. \n\n\"Lauren I've got a pussy full of Eddy's cum, you want it?\"\n\nLauren quickly answered, \"Of course I do. Bring it on.\" Kealani straddled Lauren's head and kept her cunt a couple of inches above her mouth.\n\n\"Open wide.\" As Lauren's mouth opened, my jizz began to ooze out of Kealani's vagina in white strings that stretched their way down until they passed through Lauren's lips. Watching them do this was a big turn on for me. When the last drop had been exchanged Kealani lay down beside Lauren.\n\n\"In case you two have been too busy to notice we will be docking soon in Jamaica. I've been here a couple of times before on assignments and there are a few things I would suggest we do while we're here.\n\nFirst thing is to get dressed and go ashore and find a taxi to take us to a local restaurant where we can get a traditional Jamaican breakfast of cod fish, Akee and rice. Although it will be more like brunch by the time we get there.\n\nSecondly we'll get the taxi to take us to a river where they take you up a mountain and put you on a bamboo raft. A man stands at the front of the raft and uses a long pole to push us along down the river to the bottom. It sounds kind of touristy but it's really very relaxing and you get to see some beautiful scenery.\n\nWhen we get back, there'll be a shop in the port that sells Blue Mountain coffee. These stores are regulated and sell the real stuff not the imitations you see in most of the other tourist shops. Eddy I know you like coffee and this is the best in the world so load up. I think we'll be back on board in time to have a light snack and get started on Lauren's next lesson before it's time to dress for dinner.\"\n\nLauren spoke up when she heard that, \"And what is my next lesson going to be?\"\n\n\"We are going to continue your anal sex exercises which will include Eddy fucking you in your hot sexy bum.\"\n\n\"Ooooh Kealani that sounds exciting.\"\n\n\"It will be I can assure you. If you ask him really nicely he might let you do it to him while he's fucking my ass.\"\n\n\"I can hardly wait. Come on, let's get going.\" Lauren went back to her room to shower and get dressed while we got ready in our suite. We had a quick breakfast of fresh fruit and coffee sent in from room service before heading for shore.\n\nWe walked down the gangway and into a complex of buildings that housed mostly shops selling various merchandise that tourists can't seem to get enough of. We didn't spend much time there. We walked through a gate beyond which was a road and quite a few locals who approached us to see if we wanted to buy whatever it was they were selling. Some just asked us for money and others offered to take us on a tour of the island. We kept on walking until we reached a kiosk where we could hire a taxi. Kealani talked and negotiated with several of the drivers and finally found one she liked so we all piled into the back seat.\n\nBen was a man who appeared to be in his late forties and seemed like a very pleasant person. He drove us up the road in the direction of Ocho Rios which was really too far away for what we wanted to do but there was a small town not far from the terminal where the ship was docked. He pulled up in front of a two-story building. Before we got out of the taxi, Kealani explained what we wanted to do after we had breakfast and asked Ben if he wanted to make us a deal on chauffeuring us around for the next 3 or 4 hours. He said he would be delighted and told us to enjoy our meal and he would wait for us outside.\n\nThe Hummingbird caf\u00e9 was an unexpectedly nice restaurant with linen tablecloths and napkins, clean floors and fresh flowers on the tables. There weren't many people there and a very courteous woman who introduced herself as Wusilla told us to have a seat at any table we wanted. We asked her to bring us a bottle of sparkling water and when she arrived at the table with it Kealani told her that we didn't need menus as we were all going to have Akee and codfish. This is a dish originally concocted to feed the slaves who worked on the sugarcane plantations. The mostly British traders would stop at the north Atlantic fishing grounds and load up on cod then take it to Jamaica and trade it for rum to take to America to sell. Akee is a fruit from an indigenous tree that when cooked properly tastes something like a cross between yellow squash and scrambled eggs.\n\nThere are many variations of preparation. This establishment mixed diced onions and peppers with it and also served rice and plantains as an accompaniment. Paired with a cup of freshly brewed Blue Mountain coffee, it was delicious even though I was a bit reticent about trying it when Kealani first mentioned it.\n\nLauren was sitting across from us looking at us with a very pensive expression.\n\n\"A penny for your thoughts Lauren.\" I told her.\n\n\"I was thinking about how fortunate I feel to be here with you doing this. If you two hadn't come along and pulled me out of my misery I would be sitting by myself in my cabin worrying and feeling lonely and desperate. I can never repay you for what you have done for me. Thank you both for rescuing me. Kealani, what we shared last night has not just changed my life but completely redefined it. I feel like I've been reborn.\"\n\nKealani reached over and put her hand on Lauren's. \"My dear precious Lauren you need never think of repaying anything. Your presence here with us is all the thanks necessary. We didn't give you anything you didn't already have, we just helped you to realize it and awaken to all the possibilities you possess but had forgotten.\"\n\nWhen we had finished we paid our bill and went outside to find Ben waiting for us. We got back in the taxi and headed off toward Ocho Rios again. After about 30 minutes we drove across a small bridge and Ben made a right turn. We headed up a road that led up a mountain. In about 15 minutes we came to a small building and Ben stopped the car. He told us to go inside and someone would make the arrangements for us to board a bamboo raft about 25 feet long so we could be leisurely floated down the river to a spot near the bridge we had crossed. Ben said he would wait for us there.\n\nWe bought our tickets and walked out the back of the little hut to a small dock about 20 feet long that had about 10 rafts tied up along it. A very friendly young man named Phillip greeted us with a big smile and helped us get onto the bench in the back of the raft. The bench had a back and a long cushion to sit on as well as pillows for us to lean back on. Pretty comfortable given the crude but imminently practical construction of the raft. When we had been seated Phillip took his place at the front of the raft and started explaining about the ride we were embarking on. He had a long bamboo pole that he used to propel and steer the raft. The river's current was very slow and without the pole we would probably just drift over to the side of the river and sit there.\n\nWe asked Phillip where the other rafters were, as we seemed to be the only ones on the river. \"There are several rivers that one can raft on. This river is my favorite but for some reason the ships don't have an arrangement for it and they don't promote it.\" \n\n\"That reason would be money Phillip.\" \n\n\"Yes mister Eddy you are most likely right about that. The taxi driver that brought you here is related to the people who run the rafting concession and he brings us customers when he gets the chance.\"\n\n\"The ship we are on is very large and it feels good to have a beautiful secluded river all to ourselves for a while, so we don't mind at all Phillip.\"\n\nWe drifted along as Phillip told us about the flora and fauna that we saw and threw in a little history of Jamaica to entertain us. After about 15 minutes a small dugout canoe came gliding up along side our raft. A young man asked us if we needed anything and he pulled back a tarp to reveal a small inventory of bottled water, rum, cigarettes, insect repellent and just about anything else you could find in a convenience store. Kealani asked him how much the bottled water cost and told him to give us 3 bottles. As he handed them to her he asked her if she would like to have some rum.\n\nShe said no thanks and then he asked her if she would like to try some ganja. I wasn't quite sure what that was but Kealani's eyebrows rose when he said it. \"How much?\" she asked him. He produced a small plastic bag rolled tightly to about the size of a large cigar with green leafy material in it. \"Too much. I wouldn't dare be caught with that or try to take it back on board the ship.\" He put it back in his pocket then reached in his shirt pocket and held out a single small cigarette. It finally dawned on me what it was. To my complete shock Kealani said OK and paid him for it.\n\nPhillip had witnessed this entire transaction to be sure we were not being hassled by the floating entrepreneur and when he had left he said \"We will be coming to a place in a minute where the trees shield the river very thickly. You can light that up when we get there but be careful and I'll warn you if anybody comes so you can throw it in the river. They don't tend to bother tourists for just having a good time but I always like to be careful as it is against the law.\"",
        "\"Thank you Phillip.\" Kealani said. \n\n\"Kealani I am very surprised you would indulge in smoking pot.\" \n\n\"Eddy there is an exception to every rule. Like Blue Mountain coffee, Jamaican weed is some of the finest in the world. We are in a perfect setting and a couple of tokes on this little bit will put us in the perfect frame of mind to enjoy this experience to the fullest.\"\n\nWhen we arrived at the spot Phillip told us about he pulled over to the side under a tree and said we could smoke now but to be as discreet as possible. Kealani lit it up and we all took a couple of tokes on it and held it in deeply. When there was about a third of the joint left Kealani asked Phillip if he would like some. He said he wasn't supposed to do it while he was working but he didn't see the harm in one little taste. He inhaled deeply and then threw the little bit that remained in the river.\n\nSoon we were all feeling noticeably more relaxed and pleasantly high. Lauren had this peaceful happy look on her face and a beautiful smile. I touched her hand and asked her how she was feeling.\n\n\"Did I mention that I've smoked pot a few times before and that it always makes me incredibly horny?\" She leaned forward to remove the cover-up she was wearing over the little bikini she had borrowed from Kealani.\n\n\"So you wouldn't mind if I did this?\" I asked her as I began to fondle her breast and play with her nipple.\n\n\"I wouldn't mind in the least Eddy, knock your lights out. And mine too while you're at it.\" I let my hand slide down to the little triangle of material that barely covered her crotch and slipped it underneath in order to rub her clit with my finger. \n\nAs I was playing with Lauren's clit I felt Kealani's hand slide up the leg of my bathing suit. \"You two are going to embarrass Phillip if you keep doing those naughty things.\" Her hand found my cock and her fingers wrapped slowly around it.\n\n\"I bet Phillip has seen plenty of naughty activities on these rafts in his time. Hey Phillip, do you ever get people on their honeymoon that want to ride on your raft?\"\n\n\"Oh yes mister Eddy. All the time.\"\n\n\"Then I bet you know what skinny dipping is don't you?\"\n\n\"I sure do and we'll be coming to the perfect spot to do it in just a few minutes. Are you on your honeymoon mister Eddy?\"\n\n\"In a manner of speaking Phillip.\"\n\n\"Well you're my first person on honeymoon with two ladies mister Eddy.\"\n\nI didn't even try to explain our real situation to him. I leaned back and closed my eyes. My left hand was still lazily playing with Lauren's pussy and my right hand was doing the same with Kealani's. My cock was being slowly stroked and squeezed as we drifted down the river. Kealani had been right about the pot putting us all in the right frame of mind to really enjoy ourselves.\n\nPhillip's voice broke the dreamy state we were all in by announcing that we had arrived at what he called the little lagoon of love. It was a small branch of the river that led off to the left for about a hundred yards and terminated in a somewhat circular pool surrounded by lush plants and overhung by trees. He turned the raft so that its length nearly spanned the entire width of the little estuary leading to the lagoon. \"If anybody else should try to come in here they will see that it is already occupied so feel free to swim here for as long as you like. Bathing suits are optional.\"\n\nWe all stripped off quickly and slid into the cool water. It was one of the most romantic natural pools I had ever seen. There was a tree trunk that had fallen into one side of the pool that was partially submerged and made for a great natural place to lie back on so you could be half in and half out of the water. I lay back on it and Kealani swam up to me with one of the video cameras and handed it to me. \"Aren't you afraid of getting this wet?\" \n\n\"It's waterproof. You could take pictures underwater if you wanted to.\"\n\nShe started stroking my cock. When it was fully erect, about half of it stuck out of the water. She started sucking on it while her hands caressed my balls under the cool water. I got some great close-up shots of her giving me head. Lauren swam over to us and stood beside me. \"Don't you think Phillip is a nice young man?\" She asked.\n\n\"He seems to be a very thoughtful and conscientious guide for this wonderful little excursion.\"\n\n\"Do you think it would be alright if I ask him if he'd like to be included in our naughty activities?\"\n\n\"It's entirely up to you Lauren. What happens in Jamaica stays in Jamaica.\"\n\nShe swam over to the raft. I turned the camera on her as she glided up to it. Phillip was wearing a pair of satin basketball shorts that came down to his knees. Lauren asked him if it was OK for his customers to give him a tip for his excellent services.\n\n\"Yes miss Lauren I am allowed to accept a tip.\"\n\n\"Well if you'll let me, I would like to show my appreciation for your service.\"\n\nPhillip was lying on his side on the raft. Lauren placed her hands on either side of his hips and began to slide the shorts down. He rose up just enough to allow the filmy material to pass between his right hip and the raft. When the band of the shorts was down to his knees Lauren let out an audible gasp.\n\n\"Oh Phillip you have a magnificent cock.\"\n\n\"Thank you miss Lauren.\" It was a very impressive cock indeed. It was almost as large as my erect cock and it was still limp. Lauren finished taking his shorts off as Phillip moved onto his back and lay with his lower legs dangling off the side of the raft while Lauren stayed in the water up to her mid-thighs. This afforded us an unobstructed view of Phillips crotch. Lauren wrapped her hand around his shaft and began to stroke it. She took the head in her mouth and sucked it. We watched it grow as Lauren continued to slide her hand up and down its length with slow strokes. Soon it was all she could do to keep the head and a couple of inches of his now fully erect cock in her mouth.\n\nShe looked at us and removed her mouth from Phillip's cock to say \"Kealani I think I may need your help with this.\"\n\nKealani released her gentle grip on my hard cock and glided over to the raft as effortlessly as a crocodile with her gorgeous ass sticking up a few inches above the water. I followed her with the camera and zoomed in on the raft when she got there. She stood on the other side of Phillip's partially submerged legs.\n\nLauren looked at her and said \"Kealani, have you ever seen anything this magnificent before? I can't wait to have this inside me but I think you need to help me get it really wet before I try to fuck him.\"\n\nKealani placed her hand on the massive member and used her tongue to lick up the side of it. When she got to the top, Lauren removed her mouth and pushed the head of Phillip's engorged cock toward Kealani who opened her mouth and engulfed as much of it as she could. Lauren continued licking her side of this black pole and stroking the thick shaft with her hand.\n\nKealani's right hand moved to Phillip's large balls and started to massage them as she continued to suck as much of his cock as she could fit in her mouth; which was a lot more than I would have thought she could. I clearly saw the shiny hard cock flex as the two women worked on him in tandem. He seemed very relaxed and comfortable with the situation and I got the feeling that this was something that he was accustomed to. I wondered how many visiting women he had been in a similar situation with as they took a walk on the wild side and endeavored to get their groove back. He obviously enjoyed the attention of two beautiful women having so much fun playing with his body.\n\nAfter a few minutes of this oral foreplay Lauren told Kealani that she was ready to try taking the rock hard cock into her more than ready cunt. She crawled up onto the raft and swung her right leg over Phillip's supine body and placed her knees on either side of his hips with her wide spread bald pussy inches above his cock. \"Kealani, you guide him in as I try to lower myself on to him.\" Kealani held his shaft about 4 inches from the top and rubbed the mushroom shaped head along the folds of Lauren's slit. \"Oooooh yes that's making me so wet.\" Lauren exclaimed. After a few swipes Kealani positioned the tip of the huge cock at the entrance to Lauren's vagina.\n\n\"OK Lauren, start lowering yourself down.\" Lauren began to push herself onto the glistening head of Phillip's cock as Kealani continued to stroke the thick shaft.\n\n\"Oh God, I don't think I can take it. It's so big and hot.\n\n\"Use your hand to rub your clit and stretch your lips apart.\" Kealani told her.\n\nLauren began to rub her mound as she slowly raised and lowered her hips. \"Oh Kealani I'm getting so turned on.\" Kealani released her hold on Phillip's cock and used both hands to grab Lauren's hips and pull her down. The head of the massive tool disappeared into Lauren's cavity. \"Ohhhh! It's stretching me apart!\" Lauren cried.\n\n\"Take your time Lauren. Your pussy will get used to it soon.\" After a moment Kealani pressed Lauren's hips down again and about two inches of Phillip's fat shaft slid up into Lauren's cunt.\n\n\"OH, OH, OH that feels so fucking good. How much is in me Kealani?\"\n\n\"Not much Lauren but it's enough to get you started. Raise up a little and push back down on it.\"\n\nLauren did as she was told and managed to slide a little bit more of Phillip's cock into her each time she raised and lowered her hips. \"Oh YES. I'm really doing it Kealani.\" Up to this point Phillip had been completely passive while Kealani assisted Lauren in her efforts to accommodate his huge cock in her pussy but now he decided to take control of the action. He moved Kealani's hands from Lauren's hips and replaced them with his own.\n\n\"OK now miss Lauren it's time to get down to business.\" His hips rose up as he pulled down on Lauren's hips and I watched the shaft of his cock insert itself half way into her stretched vagina. He let his hips fall back and then thrust upward again until all but about 3 inches remained visible. One more down and up movement sent the last of his giant manhood completely inside Lauren.\n\nLauren gasped as the huge organ insinuated itself into her and rearranged parts of her that had never been touched by a cock before. Phillip held her down for a moment to give her time to adjust to the fleshy invasion. \"Now miss Lauren you get started. You fuck me like it's the last thing you'll ever do.\" As Lauren stared as if in a trance, she began to raise and lower herself on the rigid pole.\n\n\"OHHHH my God, I've never felt anything like this in my life.\"\n\nKealani said to her, \"That's it baby you can do it. Do it just like you did the other night with Eddy. Show this cock how much you love it. Slide it all the way out and slam it back in. Ride it baby. Let it take you where you've never been before.\"\n\nAs Lauren complied with Kealani's directions and began to fuck her black stallion, Kealani looked back at me to see what I was doing. I was really enjoying this living porno movie and I suddenly wondered if Linda was enjoying fucking her black stud as much as Lauren was. My rigid cock was almost entirely sticking out above the water line as I stroked it in rhythm with Lauren's humping of Phillip while trying not to jiggle the camera. Kealani was massaging Phillip's large testicles as she had done to mine on several occasions. She lifted them up as Lauren raised her hips to expose the long black shaft and squeezed them as Lauren descended and engulfed his entire cock down to the top of Kealani's fingers.\n\nLauren's pace quickened until I could hear her ass slapping against Phillip's stomach faster than my heartbeat. \"OK now miss Lauren, you get ready cause you're about to get a big load of black baby juice sprayed into you.\"\n\n\"OH GOD YES Phillip give it to me. Shoot your hot cum deep inside of me where no cock has ever been before. DO IT! DO IT! PLEASE DO IT NOW! GIVE ME YOUR CUM PHILLIP! CUM IN ME. CUM...IN...ME. AS MUCH AND AS DEEP AS YOU CAN!\" \n\nPhillip grabbed Lauren's hips and held her down as he pressed his hips up to push his cock as deep into Lauren as he could and said, \"NOW miss Lauren. Here it comes!\" Kealani squeezed his massive balls to insure that every drop of his spunk would be expelled deep into Lauren's womb.\n\nLauren almost convulsed as she trembled and gasped at feeling the sensation of Phillip's sperm spurting into her like a hot tsunami. She threw her head back and joined him in an intense orgasm that racked her body with spasms. I watched her bare cunt lips tighten and release as she reflexively milked every drop of semen from the giant penis pulsing and swelling even larger inside her as it ejaculated glob after glob of hot white cum all over the taut walls of her distended vagina.\n\nI knew Kealani could feel this too as she continued to caress Phillip's balls in an effort to protract the massive eruption that was emanating from them. Just as she turned her head to see what my reaction was, my hand took its last few jerks on my own erection before I too released a succession of spurts of hot pearly semen inches into the air and heard them plop onto the surface of the water. Kealani ran her tongue around her lips to let me know she wished she could have had my discharge in her hot wet mouth.\n\nAfter a few moments I swam over to the raft. Kealani had crawled onto the raft beside Lauren to assist her in extricating herself from Phillip's cock. When the head of the black pole finally slid from her vagina she leaned against Kealani as she held her in her arms. She was still softly moaning. \"Did that feel as good as it looked?\" Kealani asked her.\n\n\"If I wasn't stoned and if I hadn't had a natural childbirth with my son I would never have been able to get that chocolate log all the way inside me. God it was incredible. I saw stars.\"\n\n\"Eddy I'm beginning to understand your wife's choice of a companion for her cruise.\" Kealani said to me.\n\n\"Does that mean you'd like to have a turn with Phillip?\"\n\n\"No I think I'll pass on that but it sure was exciting to watch.\"\n\nWe put our suits back on and continued our journey down the river. It had turned out to be much more interesting and entertaining than I had originally imagined it could be. Beautiful scenery, warm weather, a nice buzz and great company. What better way to spend a few hours?\n\nWhen we got to the dock by the bridge Ben was waiting for us as he had promised. We drove back to the ship, paid Ben and gave him a nice gratuity and stopped off at the duty free shops for coffee and 21 year old Jamaican rum. We meandered back on board and finally reached the room where we stripped off our bathing suits and began to get ready for the afternoon's anal festivities, which began with all of us taking a shower together.\n\nI got out of the shower first and Kealani asked me to order something for a snack from room service. They had the perfect little platter of canap\u00e9s and crudit\u00e9s that we could all share. When I returned to the bathroom the girls were just about finished drying off. \"OK Lauren, You're clean on the outside now it's time to get you thoroughly clean on the inside. Get on all fours and stick you butt up in the air.\" Kealani got the enema bag out and began filling it with warm water that she poured a couple of drops of liquid soap into. She hung the bag on a towel hook and clamped off the hose. She selected a nozzle about six inches long and rubbed some KY jelly onto it.\n\nI watched as Kealani inserted the nozzle into Lauren's anus and slid it all the way in. She then reached for the clamp and flicked it open with her thumb and forefinger. The warm water began to flow into Lauren's rectum. \"How does that feel Lauren?\"\n\n\"Actually I'm surprised to say it feels pretty good.\"\n\nKealani gave the bag a squeeze to boost the flow and reached under Lauren and began rubbing her lower belly. \"Ummmhhh, that's feeling very good Kealani.\" No sooner had Lauren said that than a stream of white sticky liquid began to ooze out of her vagina and slide over her lips and clit then begin to slowly drip down the top of her thighs.\n\n\"Oh My God Lauren! You've still got Phillip's cum in you.\"\n\n\"I'm not surprised. He pumped about half a cupful into me. He shot it in so deep that it's taken this long to get back down.\"\n\nKealani dropped to her knees behind Lauren and held the hose off to one side and began licking the cum off of Lauren's pussy. When she had cleaned it off she placed her mouth over her vagina and began to suck. I could tell that more of Phillip's cream was flowing into and beginning to fill Kealani's mouth. She removed her mouth from Laurens pussy and then removed the nozzle from her ass. She put her hands on either side of Lauren's hips and lay her down on her side then moved up to her head and squeezed her cheeks until Lauren opened her mouth. She put her mouth about two inches above Lauren's and pursed her lips. Strings of the white cum streamed out of her mouth and into Lauren's. She greedily accepted every drop.\n\nI was getting hard again just watching this lascivious display. I decided to throw on a robe and go wait on room service before I got too carried away with what was happening in the bathroom. In a few minutes the snacks arrived and I had the steward put them on the veranda. When he had left I returned to the bathroom to get my internal cleaning. Kealani administered my enema then told me to wait as long as I could before releasing it. She and Lauren went out on the veranda to dry their hair.\n\nI joined them and watched them take turns brushing each other's hair in the warm sunlight. I was getting very used to having two beautiful naked women around and I hoped I could convince Linda to go around naked more often when we got back home. I sat in a lounge chair drinking a cup of the remarkable Blue Mountain coffee and feeling the sun on my body and realizing just how wonderful this trip had turned out to be. I felt very fortunate indeed.\n\nWe ate our lunch and then Kealani suggested we begin our next round of sexual activity outside since it was such a beautiful day. She returned to the room and brought out one of her cases. \"First thing is sunscreen. If we're going to be out here a while we must get slathered up with lotion.\"\n\n\"Ummh, that sounds like fun. In fact, why don't you and Lauren spread some of that lotion all over my body for a few minutes?\" I lay face down on a lounge chair and the girls kneeled at either end. Having sunscreen rubbed on you by two naked females should be listed on the label as the preferred method of application. They covered me from head to toe with the lotion and gave me a very nice massage. In about 10 minutes I flipped over and they did my front, paying extra attention to my cock and balls to make sure they didn't get sunburned.\n\nLauren and I gave Kealani the same treatment and I was overwhelmed by how beautiful this woman was. My eyes feasted on her naked body. My hands felt her beauty as they glided over her golden skin. Her hair shimmered in the sunlight. She made me feel like I was seeing and touching a woman for the first time. My fingers lingered on her nipples and slid along the curves of her breasts sending sensations that made me have shivers all through my body. I bent over and kissed her full on the lips and it was the most intense kiss I had ever experienced. She could do this so naturally, as though sensuality virtually imbued every fiber of her. She tasted divine. Her tongue gently licked and danced with mine in perfect harmony.\n\nThen it was Lauren's turn to be rubbed down. I was surprised to find that I felt the same way about her as I did about Kealani. As I rubbed the lotion over her it felt like I was a blind man using my hands to see her. Touching her made my hands tingle. I marveled at the softness and shape of her breasts. I took each one in my mouth and savored the feel of her nipples on my tongue and the taste of her in my mouth. \"Lauren, tell me what you're feeling right now.\"",
        "\"I feel like I'm being adored by two of the most loving people I have ever known. The feelings the two of you are giving me are completely unfamiliar to me. I'm floating on a cloud and love and light are washing over me like a gentle wave. I saw you do this to Kealani when we were massaging her and I felt so privileged to be with someone who could do this. Now that I'm experiencing it first hand I feel even more special. Eddy, you have the most incredible ability to make a woman feel like she is the only thing in the world when you are with her. You have no idea how marvelous that makes a woman feel or how rare a talent it is.\"\n\nI bent over and kissed her in the same way I had kissed Kealani, running my tongue softly into her mouth to gently play with her tongue. Exchanging breath with her as she inhaled and I exhaled. \"That's exactly what I mean Eddy. Nobody has ever kissed me so tenderly and passionately before. I swear you and Kealani could make me cum just by kissing me.\"\n\n\"I'm very happy to hear you say that. You have no idea how good it makes me feel to see you so transformed from the person you were when we first met you. I'm not surprised that Kealani could make you feel like this but I am amazed that she seems to have shared some of her ability with me. Helping you and making you feel good helps me and makes me feel good too.\"\n\n\"OK now. I think we're all good and coated with sunscreen so why don't I go get us all a nice cold bottle of sparkling water and we can move on to some more fun things.\" Kealani got up and headed for the fridge in the sitting room and soon returned with the water and the bottle of scented oil. \"Lauren since you're already face down on the lounge chair you get to go first. Have a big drink of water then we'll get started.\" While Lauren was drinking the water, Kealani put a pillow under her head and then told her to raise her hips so she could put one under them. When she had her pretty ass at the correct elevation she patted her gently on each cheek and said, \"Get ready. This is going to make you feel really good.\"\n\n\"Eddy, come around to the foot of the lounge.\" She put some cushions on the deck and one between Lauren's calves. \"Now watch me.\" She kneeled on the cushions and lay down between Lauren's legs so her head was comfortably positioned at her crack. Lauren's asshole and pussy were fully exposed and totally accessible to Kealani's mouth. \"Eddy, take the top off the oil and pour a little right in her crack above her asshole.\" As the oil dripped down, Kealani used her finger to rub it into Lauren's puckered rosebud. She smeared some more downward and pushed it into her ass with her finger.\n\n\"A little more Eddy.\" She continued coating her finger and inserting it into Lauren until she said, \"Now put a few drops on each of her cheeks.\" She used both hands to rub the oil all over Lauren's ass. She then rubbed her thumbs in the oil and transferred it to Lauren's pussy lips, massaging it in with long strokes of her thumbs. Her hands slid upward and pulled Lauren's cheeks apart and began licking her asshole. The licking started at the entrance to her vagina and ended with the tip of her tongue insinuating itself ever so slightly into her asshole. With each repetition the insertion went a little deeper. Her hands were rubbing the lower part of her cheeks and massaging upward to knead and fondle her entire ass. \n\n\"Oh Jesus Kealani, that feels incredible.\"\n\n\"OK Eddy, you take over now.\" Kealani rose up and relinquished her position to me and poured a little more oil on Lauren's butt so I could get my fingers covered in it.\n\nThe smell of peppermint filled my nostrils as I continued the routine that Kealani had just demonstrated. \"Don't get too fixated on her anus Eddy. Keep rubbing her ass and licking that delicious pussy. And do it gently. That pretty twat has to be sensitive after having Phillip's monster cock in it. While you continue getting Lauren ready I'm going in the room to get you a nice surprise.\"\n\nI soon got the motions down and used my thumbs to rub her pussy lips with slight pressure the entire length of them all the way to her clit. I inserted my tongue deeper into her anus with each pass and held it there for a few seconds. Then I would squirt saliva into her hole as I held her cheeks apart with my hands.\n\n\"Lauren I'm going to check how things are doing in here.\" I put the tip of my finger on her asshole and slowly inserted it until it was all the way in. It felt wet and warm. I pulled it out and pushed it back in a couple of times and felt her sphincter begin to relax and the little puckered hole expanded a little. I let my middle finger join the first one and inserted both of them as far as they would go.\n\nLauren let out a moan and pushed her ass back toward me. I inserted my thumb into her vagina and pressed it up against my fingers and Lauren moaned again. Both passages were wet now. I removed my thumb and then my fingers and inserted both fingers in her vagina and started stroking downwards to find her g-spot. Her breathing quickened and she began to rock her butt back and forth. I put my lips back on her asshole and stuck my tongue deep inside. I continued to squirt saliva into her rectum.\n\nKealani returned from the room wearing the strap on dildo she had used on me before. She came around behind me and kneeled on a cushion. She poured a little oil on her fingers and then began to slide them between my ass cheeks. I spread my legs to allow her better access. I soon felt her finger push into my asshole and she began to spread the oil around in my lower rectum.  \n\nShe withdrew her finger and replaced it with her mouth as she began to give me the same treatment I was giving Lauren. Her saliva soon had me well lubricated.\n\n\"Lauren how are you feeling?\"\n\n\"I've never felt anything this marvelous in my life Kealani. I don't know who does it better, you or Eddy.\"\n\n\"Well Lauren, Eddy's got this really great hard-on and I think it's about time he put it in your ass. Are you ready for that?\"\n\n\"Oh yes Eddy please. Please put that lovely cock of yours in my little asshole. Please, please, please. Do it now. I want you to put it in as far as it will go so I can feel you deep inside me.\"\n\n\"OK Eddy move up on the cushion and kneel behind her.\"\n\nI repositioned myself so I had my cock aligned with Lauren's ass. I rubbed the head all along her slit and put the tip against the little puckered flower. I let a glob of saliva fall out of my mouth onto the head and pressed forward. \"Here it comes Lauren. I'll go slow so you can feel every inch.\" The head began to ease into her anus. I pushed a little more and felt the sphincter begin to stretch open. About half the head was in. I stopped to enjoy the view of my cock about to enter Lauren's beautiful ass. I felt her push back and I pushed forward until the entire head popped inside her. Her asshole widened to accommodate me. \"How's that feel Lauren?\"\n\n\"Wonderful Eddy. Please don't stop.\"\n\nI wanted to take as much time as I could with everything I did with these two women. I remembered that in the past I tended to either be in a hurry to get to my own orgasm or I felt somewhat detached and not totally involved even though I wasn't rushing. Now I wanted to feel more and see more and be more present in what I was doing. The destination no longer seemed to be what was important. Rather it was the journey that was my focal point. I think this is much more in line with the natural inclination of women and by going slowly and paying more attention they got much more enjoyment out of these acts, and that made me enjoy them more. Why had it taken me so long to realize this? I was definitely going to remember this when I got home. I turned my head to see if Kealani had set the video camera up. Then I saw it on its tripod with the little red light blinking. I shouldn't have worried.\n\nWith my hands on her hips I pushed forward and eased some more of my cock into Lauren's hot ass.\n\n\"Ohhh YES Eddy I can really feel you now. It's similar to fucking Phillip today. The more of his cock I got inside me the more I stretched to accommodate him and the better it felt.\"\n\nI pushed a little more until about half of my rigid erection was in her. I really liked the sight of her pink asshole stretched tightly around my cock. Here was a woman who was almost too shy to come out on the balcony yesterday and be naked. Now she was completely unconcerned about getting butt fucked here in broad daylight. I pulled back a little and began to slide it slowly in and out, pushing a little more in with each stroke. A few more repetitions and I was buried up to the hilt in her ass.\n\n\"OH YES Eddy I feel you deep inside me now. I feel your balls pressing against my pussy and your dick throbbing in my ass. Ooooohhh it's so good. So good. Hold still now. I want to just enjoy this feeling for a minute. I'm so full.\"\n\n\"Lauren you stay where you are while I slide this realistic cock into Eddy's ass so I can fuck him while he's doing it to you.\"\n\nI felt Kealani put the tip of the dildo against my anus as she straddled the lounge chair behind me. She pressed forward and slowly eased it into me until the entire length was buried inside my ass. Her hand moved between my legs and wrapped around my balls. She began to caress and gently squeeze them. Lauren started to squirm around a little and her rectum started squeezing my shaft.\n\n\"OH, OH, OH what are you two doing to me? It feels so good I don't know if I can stand it. Eddy I want you to fuck my ass now. Nice long slow strokes so I can feel you slide the whole length of my rectum and feel the head go deep inside me.\"\n\n\"OK Lauren I'm going to fuck Eddy's ass and he'll do the same to you. As I pull back so will he and when I push into him he'll slide that nice cock all the way inside you.\"\n\nWe fucked like this for at least ten minutes pulling out until the head of our cocks was all that was in us then pushing it back in all the way. Each time she would gasp and moan as she felt me bottom out in her. Kealani told her to use her fingers and play with her clit. I felt her hand move to her pussy to do it and felt Kealani's hand continue to massage my balls, squeezing a little harder now in rhythm with our strokes.\n\n\"Oh Eddy, I'm not going to last much longer. I feel my orgasm starting deep inside me where the tip of your cock is. It feels like it's spreading ever so slowly all through me. Do you think you can cum with me Eddy? I want to feel your spunk spurt into my bowels. I can't wait to feel your hot cream spewing into me. Please Eddy do it. Do it with me. Do it soon Eddy. PLEASE. PLEASE. CUM IN ME. CUM...IN...MY...ASS. EDDDDY!\n\nI was close but I didn't know if I could time it to coincide with her climax. Kealani sped up the stroking a little and I felt Lauren's ass pulse in response around my cock. \n\n\"OH EDDY NOW. NOW. DO IT NOW.\"\n\nKealani shoved the dildo up my ass and pushed me hard into Lauren as she squeezed my balls. With my cock buried to the hilt in Lauren I began to cum. Jet after jet of hot goo splashed out of the tip of my cock and spread into Laurens rectum.\n\n\"OH MY GOD EDDY! I didn't know it was possible to have an orgasm that intense. It felt like a shower of light came out the top of my head like a fountain of diamonds. I don't even remember breathing. It was beautiful. Every cell in my body seemed to be cumming.\"\n\nKealani withdrew the dildo from my ass and I slowly pulled my spent cock from Lauren's ass and sat back on my calves. It had been an intense orgasm. And it was made all the better because I didn't try to have it. I just let it happen and went wherever it wanted to take me.\n\n\"I don't know about you ladies but I have to pee.\" I said as I headed off to the bathroom.\n\n\"That sounds like an excellent idea\" Kealani chimed in. \"And then we'll have just enough time to go visit the hot tub at the adult pool before we start getting ready for dinner.\"\n\n\"Do you two want to go someplace special tonight? If so I can have my dinner sent in.\" \n\n\"Don't be silly Lauren. Dinner on board a cruise ship should be an experience you enjoy as much as having sex. We're going to dress up again and on the way back from the pool we'll stop by the concierge and have him make us a reservation at one of the alternative restaurants. Now go put a thong on and let's head to the hot tub.\"\n\nWe soaked in the tub for about a half hour then stopped at the concierge to discuss dinner. Kealani asked him to make a recommendation and he suggested the Pacific Palace. It served Chinese, Thai and Japanese dishes. He said that next to the one we had eaten in the other night this was the restaurant most people liked the best. We made a reservation for 7:45 and reminded him to be sure his assistant was available for camera duty.\n\nWhen we got back to the room Kealani told me to get in the shower and then she and Lauren would take over the bathroom. I took my time getting dressed since it seemed like Kealani had plans for another makeover for Lauren and herself. I picked out a dark blue pin stripe suit and a red paisley tie. At precisely 7:30 Kealani and Lauren emerged from the bathroom. I should have been a little more prepared by now for the amazing transformations that Kealani was capable of but once again I was truly amazed.\n\nKealani pushed Lauren ahead of her and told her to turn around slowly so I could look at her. Kealani had turned her into a Gypsy. From the dark brown wig full of curls that hung down to her shoulders my eyes tried to find Lauren's face under the incredible makeup job Kealani had put on her. The eye shadow, long lashes, dark foundation and dark red lipstick made her look as though she had been born in eastern Europe. She had on a magenta blouse over which she wore a black leather vest. Her skirt was a dusty rose color and had eyelets everywhere with a frilly band at the hem. Little gold sandals completed the outfit. The only thing missing was a tambourine.\n\nWhen I had finished admiring Lauren and telling her that she looked exactly like what she had recently become, an alluring free spirit full of gypsy fire, she came over to sit by me so we could both behold the vision of Kealani. Once again I was stunned speechless.\n\nBefitting our choice of restaurants she had chosen a Chinese cheongsam in a color that looked like Merlot wine, a long gown made of velveteen rayon that fit her perfectly. It had a 3-inch gold brocade mandarin collar with a frog closure. The three quarter sleeves were form fitting at the top and gradually flared fuller toward the bottom, which also had cuffs of the same gold brocade as the collar. One side of the floor length dress was split almost up to her crotch and revealed black stockings in a lace pattern held up by a black garter belt. Her shoes were decidedly not Chinese but 4-inch stiletto heels the same color as the dress.\n\nHer hair was up in a sort of a pile with gold and black combs and what looked like chopsticks arranged throughout. Her earrings were gold discs with an intricate design that made them look like Chinese characters had been cut into them. They were about the size of a large cookie. Her makeup was similar to what she had worn the first night when she had worn the Chinese princess outfit but this time it was a little more severe. It looked more befitting of an Empress than a princess. Beautiful pink eye shadow, heavy eyeliner and mascara and a subtle gray blush that faded out as it went toward her temples. Her lipstick was a shade lighter than the dress but very glossy. Around her neck on a 20-inch white silk rope was another disc of white jade. A small ring of carved wood connected the disc to the rope. Then I noticed her hands. Her nails looked like they had been gold plated and extended an inch from the tip of each of her fingers.\n\n\"You should know without my having to say it that I could sit here all night and just look at you. I don't know how you do it but each time we do this you get more beautiful. I'm running out of adjectives to describe you. You truly are a living work of art.\" She looked at me and gave me one of those inscrutable smiles that Asian women are so good at and then slowly pulled the front of the dress back on the side of the split to reveal that she wore no panties. The way she did this made my heart flutter. It was a gesture exactly split between the innocence of a child and the lewdness of a whore that made her appear to be a pure little girl and a wanton slut at the same time. \"Let's go, I can't wait to show you two off.\"\n\nAs we headed to the door to leave, Kealani picked up a white silk parasol and when we got out in the passageway she opened it. There was a beautiful dragon that had been woven into the material that wound all the way around it. When we arrived at the concierge's desk our camera assistant was already waiting for us. Kealani asked the concierge if he would be so kind as to inform the ship's photographer where we would be dining and to tell him we would be expecting him. He said he would contact him and give him the message. Then added, \"I'm sure he'll want to add tonight's pictures to his collection. He's erected something of a shrine to your images down in the photo shop.\" Kealani looked down and to the side and bowed her head ever so slightly as a way of saying thank you without speaking. I really admired how she could convey more meaning with a gesture than most women could with five minutes of talking.\n\nWe continued our leisurely stroll to the restaurant with the assistant filming us the entire time. He had become quite an accomplished videographer by now. There seemed to be more people along our route, almost as though they were waiting for our procession to dinner. Men and women alike stared unabashedly at us like we were celebrities they didn't quite recognize. I guessed they may have had a more difficult time deciding which one was Kealani since Lauren was also part of the ensemble. But Kealani was the unmistakable object of attention. Who wouldn't take notice of someone that gorgeous? Especially since in her high heels she was as tall as I was and the slit in the dress revealed the perfect amount of her leg, the top of her stocking and the strap of the garter belt as she sashayed along the deck like a model on a runway.\n\nThe captain of the restaurant took us to a table in the center of the room and asked if it would be acceptable. By the time we had arrived there Kealani had already scanned the entire room and ascertained that this table would offer the maximum amount of visibility. She gave another one of those little head bows with lowered eyelids and the captain pulled out a chair for her to be seated. I did the same for Lauren then sat in the chair the captain had pulled back for me.\n\n\"Jesus Eddy no wonder you're so captivated with Kealani. She's an absolute wonder. Everybody who looks at her just stops in their tracks.\"\n\n\"She does have a certain charm about her doesn't she?\"\n\n\"Charm? Whatever she's got is a long way past charm. I don't even have a word for it. She's a pied piper without a flute. I'll bet if you walked in here with Beyonce it wouldn't cause as big a sensation.\"\n\nThe headwaiter arrived with menus and we all proceeded to peruse them. There were several special dishes that the chef had come up with for the night and we each decided to order a different one so we could savor the gastronomic range of his cooking. No sooner had we given the waiter our order than the ship's photographer showed up. \"I'm really going to miss seeing you every night when this cruise ends.\" He said as he began to click away with his camera.\n\n\"I know exactly how you feel.\" I told him.\n\nHe begged both women to walk to a wall of the restaurant that had Chinese paintings and objects on it so he could get some pictures of them standing alone as well as together. They finally agreed to oblige him. He thanked them profusely and left. We then settled back and enjoyed a lovely leisurely meal over the next two hours.",
        "We meandered back to the room taking a circuitous route so the girls could enjoy being seen. When we arrived Lauren and Kealani headed for the bathroom to change and I undressed in the sitting room and put my clothes away. It didn't take them very long to undress and only a little while longer to take off the makeup. When they made their way out to the veranda, I was already standing there looking out at the full moon reflected on the water.\n\n\"What a beautiful night.\" Lauren said.\n\nI turned and saw that Kealani had left her garter belt, stockings and high heels on. \"Did you have something in mind to go along with that outfit?\"\n\n\"Yes, as a matter of fact, I was wondering what a girl has to do to get fucked around here.\"\n\n\"I'd say just walking around in this lovely moonlight in that attire should be enough to get you laid.\"\n\n\"You mean like this?\" She asked as she slowly sauntered over to where I was standing.\n\n\"I think that will do very well.\" She walked up close to me and put her arms around me as she pressed her lips to mine and gave me another one of those toe-curling kisses. I let my hands roam all over her back and slid them down onto her ass to pull her closer and press her hips against mine. My cock twitched as it began to stiffen.\n\nShe pulled her head back and said, \"Ahhh mista Eddy, you happy to see your little Asian slut again? You want missy Kealani rub her naked pussy on you mista Eddy? Hmmmm? Would you like to feel my hot juicy slit slide over your nice cock?\"\n\nShe moved her feet apart so her legs could separate enough for my hardening cock to slide between them and nestle into the cozy valley between her upper thighs. She began to slowly move her hips forward and back letting her bare pussy slide along the top of my cock. I could feel it getting moist. Her breasts pushed against me with each forward motion and her nipples stiffened. I kissed her again and stuck my tongue in her mouth as my hands squeezed her ass cheeks. I could feel the cool night air on the tip of my cock as it poked out behind her.\n\n\"I'm going over to the lounge chair and have Lauren get me nice and wet for you. You stay here and watch and when that lovely cock of yours is really hard you come over there and slide it into my tight hot cunt.\"\n\nShe walked toward the lounge where Lauren was sitting. I looked toward the door to the room and saw the video camera's record light flashing. I was glad because I got so much joy out of watching her walk that I knew I would want to play those scenes a lot. \n\n\"Lauren I want you to turn around and lie on the lounge with your head toward the foot.\" Lauren quickly turned and got into position. Kealani put her knees on either side of her supine body and spread them as she lowered her pussy toward Lauren's face. \"Now you use that tongue of yours to get me nice and wet for Eddy and I'll use mine on you.\" Lauren spread her legs and raised her knees to allow Kealani unrestricted access to her crotch as she placed her hands on Kealani's hips to pull her down onto her face. I watched the two women begin to orally stimulate each other with Lauren mimicking Kealani's actions.\n\nIn a few minutes I walked over to the lounge and stood close behind Kealani's upturned ass. I laid my rigid cock on her ass crack and bent over to put my hands on her breasts. I began to massage them and squeeze the nipples between my thumb and finger. She made soft moaning sounds as I did this. I kissed the back of her neck and inhaled the fragrance of her hair. Lauren started including my balls in her licking of Kealani, pulling each one into her mouth and sucking them before sliding her tongue up and down Kealani's wet slit. \"I'm ready when you are.\" I whispered in her ear.\n\n\"Ummmh yessss Eddy put that hard cock in my wet cunt now!\"\n\nI rose up and let my cock slide down to align with Kealani's vagina. It was lying across Lauren's face and she licked the underside as I pressed the head forward into the moist folds of Kealani's pussy. I slid in easily and when I was fully ensconced I paused to enjoy the sensation of being wrapped in her hot channel. Lauren continued to lick her clit and my balls as my cock throbbed and felt the gentle pulsating of Kealani's cunt. I wondered why it had taken me fifty years to have an experience that felt this good. I silently thanked Linda for coming up with this idea and hoped she was having as much fun as I was.\n\nAfter a few minutes I began to fuck Kealani with a steady rhythm. I put my hands back on her breasts and fondled them as I stroked her. Lauren had her hands on Kealani's ass cheeks and was pulling them apart so I could go deeper into her with each stroke.\n\n\"Ooooohhh Kealani you're going to make me cum.\"\n\n\"Go ahead Lauren, you two are doing the same to me.\"\n\nI sped up and was pushing Kealani forward each time I bottomed out inside her.\n\nLauren cried out, \"OOOhh, OOOhh, YES...That's it....I'M CUMMING NOW!\"\n\nI felt Kealani's vagina begin to spasm around my cock and knew that she too was having her climax. Lauren squeezed my balls with her hand and sent me over the edge with them. I pulled my cock out and jerked the hot spunk out all over Kealani's asshole and gaping vagina. Lauren opened her mouth wide and the next ejaculations sent white cum directly into it.\n\nI pulled back and, still holding my cock in my hand, walked around to the other end of the lounge and pulled Kealani's head up and stuck my sticky cock into her mouth. She licked and sucked until every drop of our cum had been swallowed. Lauren continued to clean Kealani's crotch with her tongue until both women were completely spent.\n\nI stepped back and Kealani swung her leg over Lauren and got up from the lounge. She started walking to the door and went inside.\n\n\"Well Lauren did you ever think you'd enjoy having oral sex with a woman as much as you obviously do?\"\n\n\"Not in a million years Eddy, but now it seems as natural to me as licking an ice cream cone. And tastes even better. Plus pussy doesn't have any calories. Of course I must consider that I started with the best pussy on the planet.\"\n\n\"As fabulous as hers is, yours is right up there with it. The more I see and taste your beautiful twat the more I like it.\"\n\nKealani returned in a few minutes with one of her cases and put it down next to the lounge chair where Lauren was still lying. She opened the case and started taking out some of the items. They were various types of vibrators and dildos.\n\n\"Lauren, when is the last time you used one of these?\" She asked as she held up a couple of them for her to see.\n\n\"I don't really remember. It's been quite a while I'm sure.\"\n\n\"Well it's time you got reacquainted with them. Pick out a few that appeal to you and then start using them. I want you to put on a show for Eddy and me. This will be good practice for two reasons. First you should never miss an opportunity to have an orgasm just because you're by yourself and second, getting yourself off while a man watches you is one of the best ways to turn him on.\"\n\n\"I've never even thought of masturbating in front of somebody before.\"\n\n\"Well now's your chance to do it for two somebodys. \"I'm going to sit over here with Eddy and jerk him off so you put on a good show and see if you can make him cum.\"\n\nKealani walked over to where I was now sitting and pulled one of the other chairs next to mine and sat down. Lauren picked up one of the little vibrators and asked Kealani what it was. \"That's a pocket rocket Lauren and despite it's small size it does a big job on your clit. Flick the switch on the bottom and hold it on your clitoris. You'll soon see what I mean.\" She turned it on and the buzzing was barely audible where we were sitting.\n\nLauren slid down and sat on the end of the lounge and spread her legs. She looked extremely sexy in the bright moonlight and the ambient light from the ship. Her shapely legs were long and toned and her breasts cast shadows on her abdomen. Her pussy was still pouting from the licking it had been given by Kealani's tongue and I could see the full puffy outer lips framing the slick inner lips as they protruded between them, glistening from a mixture of Kealani's saliva and her own secretions..\n\nShe used her left hand to pull the hood of her stupendous clitoris back exposing the large round nub to the light. Her right hand brought the end of the vibrator slowly against it. She flinched as the little plastic bumps on the bottom made contact with her most sensitive body part. \"Oh wow Kealani, I do see what you mean. This little doodad is seriously exciting.\"\n\n\"Move it around a little Lauren. Find all the spots that make you tingle.\" Kealani reached over and wrapped her hand around my cock and began to squeeze it. She then got up and went over to the case and brought back a bottle of massage oil and poured some into her hand and started rubbing my cock.\n\nAs Kealani leisurely but attentively stroked my almost fully erect penis I felt something inside me react with a deliberate detachment. I couldn't help but contemplate what was occurring on this lovely veranda. We were moving across the sea. The moon was shining brightly on the ship. A woman who had recently turned 40 was sexually pleasuring herself just a few feet away from me. An electronic recording device was making a full color high definition recording of all the events transpiring in its field of view. A beautiful woman not yet 30 was lovingly massaging my cock. Over 4 thousand people were not very far away from this scene and totally oblivious to it. This was a surreal juxtaposition of circumstances. I had just turned 50. Nothing that was happening was part of my ordinary experience. I was a happily married man who until a few days ago spent most of my time attending to my businesses: a McDonalds franchise and part ownership of a dry cleaners and a Starbucks coffee shop.\n\nNow here I was immersed in feelings I'd almost forgotten I was capable of. Enjoying myself more than I had in years with people I didn't even know 3 days ago. Reclaiming my manhood, my desire, my passion and simultaneously assisting two of the most exciting women I had ever met to explore and playfully indulge in their own erotic potentialities. I had never felt such a mixture of emotions before. I turned my head and looked into Kealani's eyes and smiled. She smiled back and I knew she was feeling the same way I was. My mind stopped and I just floated on the sensations I was experiencing without a thought in my head. Kealani kept her gaze fixed on my eyes and joined me in my mindless joy yet still continued to lovingly caress my hard cock. I had never felt so close to another person in my life.\n\nWe returned our attention to Lauren who had now picked up a slender 6 inch vibrator that glowed green and illuminated her body from her knees to her tits with its phosphorescent light. She inserted it about half way into her vagina then used her fingers to stretch her full inner labia and rubbed them against the part of the tube that was still sticking out of her. \"Lauren that is so incredibly sexy. Keep playing with those beautiful long luminous lips like that. It's really turning me on.\"\n\n\"I see now why you think my pussy is so beautiful Eddy. Rubbing and stretching them is so much fun and now that they're glowing green it's making me really hot. Thank god my ex had sense enough not to do surgery on them like I wanted.\"\n\nWatching her play with her pussy was mesmerizing. She had lost all self consciousness about her protruding labia and enjoyed playing with them completely unashamed like a child with a new toy. She kept them wrapped around the glowing vibrator and held them with one hand while she used the pocket rocket to stimulate her bulbous clitoris.\n\nHer actions soon resulted in a self induced sexual paroxysm and we watched her have the most beautiful orgasm I had ever been privileged to witness. The expression on her face was indescribable. A long joyful sound emanated from her mouth like a she-wolf howling at the moon as her upturned head seemed to pull the rest of her body upright on the lounge.\n\nHer hands moved across her pussy in a delicate dance, touching herself in every erotic nerve ending she possessed. Her nipples stood out fully erect from her upthrusted breasts, her breathing seemed to have lapsed into slow motion. I could literally see the climax course though her entire body. I was in awe that this much intensity could come from a woman who hadn't masturbated in years and who only 3 days ago was locked in a dungeon of self imposed isolation brought on by the terrible consequences of a bad divorce.\n\nI stood up and applauded as I walked over to her and put my arms around her. \"Bravo! Lauren that was the most incredible display of female sexuality I have ever seen. I might have to put that part of the video on the internet.\"\n\n\"Eddy I know this might surprise you but as long as you don't identify me you go right ahead and do it.\"\n\n\n\"Really Lauren that was magnificent. You've shown me a new dimension of womanhood on this beautiful moonlit night underneath the stars. I will never forget this as long as I live.\" I pulled her to me and kissed her more passionately than I thought myself capable of. I ran my hands down her back and grasped her ass as I held her in a tight embrace. I finally broke the kiss and said to her, \"Now come over here and join us and you and Kealani do for me what you just did for yourself.\"\n\nI took her hand and returned to where I had been sitting. I positioned Lauren on her knees on a cushion in front of me. \"Kealani, I want you and Lauren to use your hands to take me to where Lauren just was.\"\n\nKealani slipped from her chair and joined Lauren on her knees on the cushion between my legs. \"Well Lauren didn't I tell you that letting a man watch you get yourself off would turn him on?\"\n\n\"Yes you did but you didn't tell me how amazing the experience would be for me. Even after all I've been through the last couple of days I wasn't prepared for that. I feel so free and alive; like I'm filled with sex in every part of me. Jesus Kealani, what have you done to me?\"\n\n\"I've just helped you rediscover yourself Lauren. And you're doing a fantastic job.\" Kealani put her arm around Lauren and kissed her as passionately as I had. \"In case you hadn't noticed, your little exhibition turned me on too.\" Kealani's hand lowered down between Lauren's legs and she slid her finger between her pussy lips. \"God Lauren you're soaking wet. You've become a total slut.\"\n\nLauren giggled and said, \"I guess I have. And I'm totally loving it.\"\n\n\"Alright then, the man said he wants a hand job. Do you think you can manage that?\"\n\n\"Kealani I realize now that I've missed out on so much of my sexuality. Why didn't I know how much fun all of these things were?\"\n\n\"You're just getting a late start Lauren. I was jerking guys off in middle school. Things were much different in the islands than they were for you in your uptight world.\"\n\n\"No shit! My parents would have had a fit if they'd known I was masturbating at that age let alone giving boys hand jobs.\"\n\n\"Now's your chance to make up for all those lost opportunities. Eddy's at the age where he can appreciate the fine art of being manually stimulated. And you can discover how much fun it is to play with a penis. After all, you grew up without one of your own so when you get one as nice as Eddy's you don't want to miss out on discovering things you can do with it.\"\n\n\"Since Eddy's still hard from watching your virtuoso performance we don't have to start from scratch. Pour some of the massage oil on your hand and then rub it on his cock. You want to get a feel for how much oil to use. Too much and you lose some sensation in your fingers. Too little and it won't feel as good for the man.\" Lauren poured some of the oil on her hand and rubbed it on me. Kealani used her hand to assess the amount. \"A little bit more Lauren and it will be just right.\"\n\nLauren's hand was sliding up and down my shaft with ease without oil dripping down it. I watched as she studied my erection with intense scrutiny. \"There are two important things to pay attention to. The first is the speed of your stroking and the second is how tightly you wrap your fingers around it. Don't tease it with light pressure or tickle it with your nails. This is a hand job after all and he wants to feel it.\"\n\nLauren was stroking me at a nice pace and with the right pressure to make it feel better than I could do it myself. \"When you see his precum start to ooze out, use your fingertips to draw the slippery liquid up and see how long a string you can make. Squeeze his shaft with your other hand while you do this and when the string is stretched out slurp it into your mouth then lick his tip to get some more flowing.\"\n\nFor the next 15 minutes or so Kealani instructed Lauren in the intricacies of the perfect hand job as I got to be the beneficiary of her teaching. Her unparalleled expertise kept me right below the threshold of cumming and gave me hot flashes all though my body as I watched them caress me so affectionately. The happy expressions on their faces filled me with joy.\n\n\"OK Lauren you're doing very good but now we need to pay some attention to his balls. Since there are two of us we can cheat a little here. You keep rubbing his cock and I'll show you how to massage these precious little sperm factories.\"\n\nI felt Kealani's practiced hands envelop my scrotum and begin to caress my testicles. After a couple of minutes she took one of Lauren's hands and placed it on my balls. I could feel her skillful fingers moving Lauren's as she guided her in the ancient Oriental art of ball massage. The combination of their slippery fingers under Kealani's superlative direction provided me with heretofore unimaginable pleasure.\n\nKealani described the places to touch and the way to apply exactly the right amount of pressure to maximize the enjoyment of the man lucky enough to be on the receiving end of her wondrous manipulations. Lauren was a rapt student and Kealani relinquished more and more control to her as she became increasingly adept at this mysterious art. Kealani continued to stroke my cock while Lauren practiced her newly acquired skill. \n\n\"Kealani wherever did you learn to do this?\"\n\n\"Actually my grandmother taught me.\"\n\n\"Your grandmother!\" I said in shocked surprise.\n\n\"She was Geisha in Kyoto. Geisha training includes many ways to attend to a man's needs. Massaging his balls is only one of the erotic arts they learn. It can be done to arouse a man or to calm him. They are also taught how to cause considerable pain and to incapacitate a man long enough to kill him since they were once as effective as ninja in espionage and assassination.\"\n\n\"You never cease to amaze me Kealani.\"\n\n\"I can't believe I've lived this long and never even thought about doing this to a man. I really wished I'd known about this before so I could have done it for my husband. I can tell how much Eddy's enjoying it but I'm quite surprised that I'm having so much fun doing it. I feel like I've really fallen in love with cocks and balls for the first time in my life. They're so....fascinating! Eddy your cock and your balls are as beautiful to me as my pussy is to you. Thank you so much for letting me do this.\"\n\n\"Lauren, as long as you're having fun I'll try to put up with it.\"\n\n\"I'll just bet you will.\" Kealani said sarcastically. \"The big secret is to take your time. The object is not to get him off quickly but to make it an erotic experience for both of you.\" She reached for the bottle of oil and poured some in her hand then rubbed it between Lauren's breasts. \"We might as well get into the advanced course here and include a little titty fucking. Move forward and let his cock slide between your boobs.\" Lauren soon had my upright cock snuggled between her ample breasts. \"Now use your hands to push your tits together and rub them up and down his shaft.\" Watching and feeling Lauren's boobs jerking me off caused my cock to stiffen even more.",
        "\"Ooooooh Kealani I think Eddy likes this. His cock feels harder and hotter to me.\"\n\n\"So Eddy do you like what Lauren's doing to you?\"\n\n\"Is a frog's ass watertight?\" I answered her.\n\n\"Do you want to blow your load between those gorgeous sweater puppies and watch your cock spurt your hot jizz all over them?\"\n\n\"Oh hell yes that would be a great way to conclude this wonderful experience.\"\n\n\"Lauren you need to step up the pace and lick the head of his cock each time it comes up close to your mouth.\" Lauren rubbed her tits faster along my hard shaft and let the head of my cock slide into her mouth at the top of each stroke. Kealani moved directly behind Lauren and reached her arms around her so she could fondle my balls and slid her other hand between Lauren's legs to rub her clit.\n\n\"Oh Lauren YES baby YES. Ooooh I'm going to cum all over your tits.\" My cock began to throb and the first spurt of cum shot out of the tip and hit Lauren in the chin then began to slide down her throat. Several more dollops of my hot cream jetted out to join the first one as Kealani continued to gently squeeze my testicles each time cum erupted from me.\n\n\"Give it to me Eddy. Spray your hot sweet cream all over me. I can feel it flowing through your shaft before it spurts out the tip and coats my chest. Oh God this feels so fucking good.\"\n\nLauren let go of her breasts and grabbed my cock with her hand and jerked out the last spurts of semen onto her tits then succumbed to yet another climax of her own from Kealani's deft manipulation of her clit.\n\nI sat there feeling Lauren continue to stroke my cock and watching Kealani kiss the back of Lauren's neck while she rubbed my cum all over her tits, stopping occasionally to pinch her enlarged nipples. Lauren's face was a portrait of lust and sexual satisfaction as her orgasm spread through her as intensely as the one she had given herself. I made a silent vow to never again let a full moon go to waste without having Linda do this to me outside on our patio. I really hoped she was having as much fun as I was tonight. Funny, I didn't feel the least bit jealous of what she was doing or whom she was doing it with. \n\nEventually we all revived from our sexual afterglow enough to head back into the suite. Kealani switched off the camera as we passed and we all took a quick shower before climbing into bed. I told Kealani to get in the middle and Lauren and I lay down next to her. \"Lauren will you join me in sucking Kealani's breasts before we all drift off to sleep?\" Lauren's mouth was on Kealani's nipple in a flash as I began to lick the sides and bottom of the other one. I hadn't felt this good sucking on a woman's breast since I did it to my mother when I was an infant. I reached down and placed my hand between her legs and without my even having to tell her she raised her knees up and spread her legs apart. I gently massaged her crotch and thrilled at the pleasure of just touching her.\n\nAfter a few minutes of sliding my fingers through her lips and rubbing her clit I felt her juices leaking out of her vagina. \"Kealani you have one of the juiciest little twats I've ever known.\"\n\nLauren stopped sucking her breast and said, \"It's one of the sweetest things I've ever tasted too. Eddy I'm going to get between her legs and lick all that juice up. You can get between mine and do the same thing if you want.\"\n\nLauren got on her stomach and began sucking on Kealani's pussy. I spread Lauren's legs apart and lay behind her and started licking her pussy from her clit to her asshole. She was wetter than Kealani. I lapped up her secretions until my cock returned to a rigid state so I decided to crawl up a little and slide it into Lauren's dripping vagina. This was my favorite position for fucking and she was already primed for me to get right to it.\n\nI was in heaven. Her pussy was so wet I could slide in and out completely with no resistance. I fucked her with a steady rhythm for about 10 minutes. I could feel her cushy ass press against me as my cock imbedded itself fully inside her. Her vagina was getting hotter and the combination of her wetness and heat made my cock feel marvelous. I pulled her left leg toward me and put my left leg over hers then did the same to her right one so her legs were between mine. This allowed me to feel my cock slide between her butt cheeks as well as in and out of her cunt.\n\nI picked up the pace and layed on top of her. She began to raise and lower her pelvis as I continued to pound her. My balls mashed against the top of her thighs with every stroke. I heard Kealani moaning and crying out, \"Oh God Lauren YES. Suck it baby. Keep sucking it. I'm cumming in your mouth. Ooooohhhh YES.\" Lauren's vagina got hotter and wetter and I knew she was getting close to her own climax. I fucked her as fast as I could move and felt my cock swell. I pushed it in completely and held it there as my cum began to spurt deep into her. Her cunt squeezed me and I felt her tremble as she kept on sucking Kealani while she came.\n\nWe were all spent now but managed to crawl back up the bed to lay our heads on the pillows. I reached over and turned out the bedside light and quickly fell asleep.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI want to thank the readers for the very positive reception this story has received so far.\n\nYour votes and comments have been very gratifying. Please continue to vote and \n\nleave me your thoughts about the series.\n\nEmail contacts are appreciated and I will try to answer any I receive.\n\nMountaincat4 "
    ],
    "authorname": "mountaincat4",
    "tags": [
        "mature",
        "interracial",
        "lesbian",
        "group",
        "masturbation",
        "toy",
        "oral",
        "hand job",
        "blow job"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/fantasy-sex-cruise-04"
}