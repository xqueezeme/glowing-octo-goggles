{
    "title": "Louise Ch. 16",
    "pages": [
        "Louise breathed a sigh of relief as they drove away from the airport. It had been a good week in many ways, but also an exhausting one. She was thrilled that Gene was finally going to get the help that he needed and that both Leon and Juliette had found their mates.\n\nShe worried for Celeste and decided that she would call her at least once a day even though Hans would be there. It was important that Celeste know and remember that she wasn't alone. She gave kudos to Hans for being willing to relocate just to be with Juliette and the kids and wondered if Hans told her about Barb. Her suspicion was that he had and that Juliette hadn't been bothered by it. \n\nLouise smiled when she thought about Leon and Nadine. She would have given her right arm to have been a fly on the wall when Nadine told him what she was. From Leon, her thoughts wandered to Barb. She wasn't surprised when her older sister didn't make it to the airport. She almost reached into her pocket to call her and remembered that Barb had changed her number.\n\n\"We have a program that would find her number.\" Nathan told her.\n\n\"I know, but she doesn't want to talk to us.\" Louise replied. \"And all she would do was change the number again.\"\n\n\"Would you like to stop by and check on her?\" Nathan asked.\n\n\"Yes but I won't.\" Louise replied. \"She's made her position clear. She doesn't want anything to do with us.\"\n\n\"Lou, what do you think that was back there?\" Nathan asked after a brief hesitation.\n\n\"I don't know.\" She replied. \"It's like you said. It was there and gone before I had a chance to process it. Maybe it was a fluke.\"\n\nEven as she said it, she didn't believe it and neither did Nathan although he didn't say anything; he didn't have to.\n\n\"Do you know what I would like to do?\" Louise asked. \"I would like to sit on the beach and make s'mores. Can we do that?\"\n\n\"We can do whatever you like.\" Nathan replied.\n\n\"Nathan... thank you for what you did for Gene. It means a lot.\"\n\nNathan took Louise's hand and brought it to his lips.\n\n\"He's trying. What he did took courage and I respect that. I'm not investing a large amount; I want to see how he does with a small investment. If I'm satisfied, I'll invest more.\"\n\n\"You didn't have to do that, but thank you.\" Louise replied. \"Leon says that you're going to do the design for the house so I owe you another thank you.\"\n\n\"Lou, anything I do it's because I love you and your family is now mine and talking about designs, we need to talk about the nurseries.\"\n\n\"That sounds like a subject to be talked about over s'mores.\" Louise replied.\n\nShe put her head against the headrest and closed her eyes only to open them again.\n\n\"Nathan...\"\n\n\"I know.\" He replied, \"I felt it too but once again, it was gone before I could get a handle on it. Were you able to pick up anything?\"\n\n\"No, but I don't think that it's a fluke whatever it is. What do you think we should do?\" she asked.\n\n\"I think that we need to let Ethan know.\" Nathan said after a few minutes. \"It may be nothing, but I don't want to take any chances. I'll give him a quick call when we get home.\"\n\n********\n\n\"It feels funny not having them here doesn't it?\" Kevyn asked as she soaked in the Jacuzzi with Patrick. \"I miss them.\"\n\n\"They'll be back.\" Patrick assured her. \"I think that this would be a good time to sneak away for a few days.\"\n\n\"That sounds good.\" Kevyn replied. \"Can I ask a question?\"\n\n\"You can ask me anything, you know that.\" Patrick replied.\n\n\"What did you say to Gene?\"\n\n\"I just told him that I understood.\" Patrick replied. \"I also told him that it wasn't that long ago that I put the same look of shock, pain and horror on your face. I gave him my card and told him to call if he needed someone to share the burden of guilt.\"\n\n\"But you don't even like him.\" Kevyn said sitting up and turning around to face him.\n\n\"That's what he said.\" Patrick replied. \"How I feel about him doesn't change the fact that we have something in common. Both of us have hurt you and that's something that we will both always feel guilty about.\"\n\n\"Did you tell him what you did?\" Kevyn asked.\n\n\"No.\" Patrick replied. \"That isn't his burden to bear but who knows? One day I may.\"\n\n\"You sound like you're starting to like him.\" Kevyn said as she lay down beside him.\n\n\"Maybe I am.\" Patrick replied. \"At the very least I admire him for telling you what he did. That took courage.\"\n\n\"It did.\" Kevyn conceded. \"And I'm glad that he told me. Thanks for reaching out to him.\"\n\n\"Kev, I want you to understand why I didn't like Gene. It was all about the way that he treated you and Louise and nothing more. I didn't need to see or know more than that to form an opinion of him. I also know for a fact that it was the same for Nathan.\"\n\n\"I understand.\" Kevyn replied, \"But still... thank you. I have an idea.\" Kevyn said. \"Why don't we make sure that Leon's house is ready for him when he comes back?\"\n\n\"I like the idea.\" Patrick replied. \"But I want a few days alone with you before we get involved with family things again. And I mean my family as well.\"\n\n\"That's fair.\" Kevyn replied. \"So where are we going?\"\n\n\"I think that now would be a good time to take you to that place that I told you about when we first mated.\" Patrick said. \"We can even leave now if you like.\"\n\nA few minutes later; they were on their way.\n\n\"Where are you taking me?\" Kevyn asked as she looked out of the car window.\n\n\"You'll see.\" Patrick replied. \"Just relax and enjoy the ride.\"\n\nPatrick turned on the CD player and turned the volume up.\n\n\"Meatloaf?\" Kevyn asked surprised. \"You don't like Meatloaf.\"\n\n\"But you do.\" Patrick replied. \"And there are a few songs on there that I like.\" He added.\n\nKevyn held Patrick's hand, rested her head against the head rest and listened to the music. By the time the CD was over, Patrick was pulling up into a driveway.\n\n\"We're here.\" He said turning off the engine.\n\nKevyn looked around, her mind searching for the reason why the place seemed so familiar to her. It wasn't until they were at the front of the building that she recognized it. It was the little condo that was similar to the one that was a screen saver on her laptop.\n\n\"Patrick...\"\n\n\"I saw the screensaver and I knew that you wanted a little place by the water. Sweetheart, this is your place. I only come here by invitation.\"\n\n\"Do you really think that I would come here without you?\" Kevyn asked.\n\n\"All I'm saying is that if you ever need a place to get away from the craziness of both of our families, and that includes me; here's your place.\"\n\n\"I don't know what to say... \"\n\n\"You don't have to say anything.\" Patrick said hugging her. \"Let's go inside.\"\n\nThe condo was exactly the way she had envisioned it. It was big enough for two people especially if the two people liked being together. The ocean could be heard from every room in the condo and was just a short walk away.\n\n\"About a mile down the beach is one of the best sea food places in the state.\" Patrick said.\n\n\"I love it, but you didn't have to do this.\" Kevyn said.\n\n\"That's exactly why I did it.\" Patrick replied. \"Are you hungry? We could walk to the restaurant.\"\n\nKevyn took Patrick by the hand and led him to the bedroom.\n\n\"Tomorrow.\" She said. \"Tonight I want to stay in.\"\n\n********\n\nGene looked out of the jet window into the darkness. His conversation with Dana had been short, but at least she hadn't hung up on him. To his relief, she hadn't remarried nor was she seeing anyone. She politely listened as he explained the reason for his call.\n\n\"I just wanted to tell you that I'm sorry for everything. You were right to leave when you did and... I'm trying to become that person you said that I could be.\"\n\nThere was several long seconds of silence before she responded.\n\n\"I'm happy for you. Good luck.\"\n\nAnd then she hung up. He didn't get the chance to ask if he could call her again and decided that maybe it was for the best. She had no reason to believe anything that he told her. He wanted to be able to go to her proof in hand to show her that he was trying.\n\nIn his mind, he began to do one of the things that he was good at, that's when he did it. He made a mental list of his goals and how he planned to get there. At the top of the list was himself. He realized that none of the other things would happen unless he fixed himself first.\n\nGene took the envelope containing the letter from Nathan out of his pocket and looked at it. He wouldn't call until he had been sober for a month. The investment would be his reward and another step back to Dana. He was amazed at how light he felt even though he was scared of failure.\n\nHe looked over when he felt someone sit in the seat next to him.\n\n\"How are you doing?\" Leon asked.\n\n\"I'm hanging in there.\" Gene replied. \"I talked to Dana.\"\n\n\"How'd that go?\"\n\n\"She didn't hang up on me.\" Gene replied.\n\n\"That's good.\" Leon replied. \"Are you planning to try and get her back?\"\n\n\"That's part of it.\"\n\n\"Gene, just make sure that the change is for you and not for her or anyone else. If it's just for her, it won't work.\"\n\n\"I know... I already called ahead for a group that meets close to where your apartment is.\" Gene said. \"I'm going to a meeting in the morning and I have the number of someone I can call tonight if I need to.\"\n\n\"Good... and you know that you can call me at any time.\"\n\n\"I know... Leon thanks for everything.\"\n\n\"We're family aren't we?\" Leon asked. \"I already talked to Barry about you staying in the apartment so don't worry about that. Once I'm packed, you'll have plenty of closet space.\"\n\n\"I can stay at the house until you leave.\" Gene said. \n\n\"No need. Hans has a house that he's using and invited me to stay there. I'll be over tomorrow to start packing up my clothes and personal items.\"\n\nLeon moved back to his seat a few minutes later leaving Gene alone with his thoughts.\n\n*******\n\nLeon sat next to Nadine and took her hand in his. A part of him still found it hard to believe that the petite woman sitting next to him was a vampire; but he didn't care. Nadine was what he had been missing in his life; someone to share things with and someone to love.\n\nThe invitation to stay with her and Hans at the house had come as a surprise to him; but he accepted the offer without hesitation.\n\n\"You and Nadine are mates.\" Hans explained. \"It's only natural that you stay together.\"\n\nLeon thought about the week in California and wondered how much of what happened was coincidence and how much of it was otherworldly. For Gene to admit that he needed help was nothing short of miraculous. That two of his sisters were married into the same family and that he was with someone whose father was a friend and employee of the same family was just uncanny.\n\n\"It's our fates.\" Nadine said softly. \"Our meeting was predestined as was the meeting of Juliette and my father. If we hadn't met in California, we would have met somewhere else just as my father would have met Juliette. All of us who have mates are predestined to be with that person.\"\n\n\"What about Gene and Barb?\" Leon asked.\n\n\"I can't answer that.\" Nadine replied. \"The fates don't tell us about others.\"\n\nLeon didn't reply for several minutes. He was thinking about what Nadine told him and about who he wanted to turn him.\n\n\"Can I have more than one person turn me?\"\n\n\"You can.\" Nadine replied. \"If they are of different families, you will be tied to both of them. It isn't like on television where they'll be able to control you. The difference is that you're volunteering. If you were turned against your will, then yes you could be controlled by the one who turns you.\"\n\n\"Tell me about the process and don't leave anything out.\" Leon said.\n\nAn hour later, Nadine was finished.\n\n\"Damn! That sounds like going cold turkey.\" He said. \"Do you think that your father would do the honor?\" \n\n\"I think that he will be pleased.\" Nadine replied. \"Who else are you going to ask?\"\n\n\"Nathan.\" Leon replied without hesitation. \"By the way, you mentioned something about his family history, what's that about?\"\n\n\"That's best not discussed here.\" Nadine replied. \"When we get to the house and get settled, I'll tell you everything. Their history is well known in our world.\"\n\nLeon wanted to ask more questions but decided that he could wait. Instead, he brought up their living arrangements.\n\n\"I'll move in with you.\" Nadine said. \"Your home will be closer to where you will be working.\"\n\n\"Will you keep working at the hotel?\" Leon asked.\n\n\"I doubt it now that I'll have a mate at home.\" She replied.\n\n\"You don't have to give up your job for me.\" Leon said. \"I'll be working nights too.\"\n\nThey continued to talk quietly among themselves. The only things that they decided on were their living situation and who would turn him.\n\n*******\n\nJuliette still couldn't believe that Hans was going back with them. She hadn't believed him when he told her that he would and there he was sitting next to her with a very content Celeste in his lap. Victor and Wanda were speaking to her again and she couldn't deny that she was relieved and happy that he was with them.\n\n\"What worries you?\" Hans asked.\n\n\"Angel.\" She murmured. \"How do I tell him that I met a man and in less than a week I decide to pull up roots and move to California?\"\n\n\"You're coming back with me?\" Hans asked surprised. \"What about the human dating ritual?\"\n\n\"Yes, we'll go back with you, but it can't be right away. We need to do what you call the human dating ritual and I think it will help if Angel meets and talks with you.\"\n\nHans was speechless with happiness. This had gone much better than he had anticipated.\n\n\"How long do you think that we'll need to stay?\" he asked.\n\n\"A month or two... can you be gone that long?\"\n\n\"I can be gone for as long as I need to be.\" Hans replied. \"I don't have to work, but I enjoy it. My time is yours.\"\n\nJuliette, like Leon wondered what it was about California that seemed to affect them all. Prior to the past week, she had only dreamt of moving away from Pittsburgh. Places like California, Hawaii or Florida were places that she fantasized about in the dead of winter as she scraped the ice from the windshield of her car.\n\nShe had never imagined that she would find a man who could not just hold a handle to Angel, but who loved her kids. He wasn't pretending, she knew that the Hans she had come to know was the real thing. The love and caring that he had for her and the kids wasn't pretend. She also had never dreamed that she would actually be moving to a place in her wintertime fantasies.\n\nShe felt Hans' arm tighten around her. She snuggled closer and laid her head on his shoulder. With a start, she realized that she hadn't experienced the anxiety that she had with every takeoff and landing prior to this one. To her it was a confirmation of what Hans told her.\n\n\"I will always keep you safe.\"\n\nWhat he could do if the plane crashed she didn't know, but she knew that he would do his best to keep his promise. She looked at Wanda and Victor. They sat in the seat across from her and Hans talking quietly amongst themselves. They looked both happy and relieved. She had to wonder how much they really knew about Hans even if they didn't understand it. Celeste was a no-brainer. She had known from the beginning who and what Hans was to them.\n\n\"Celeste is very special.\" Hans told her. \"She is what is known as an empath. She is able to feel the emotions of others. It is why she was always so quiet and frightened. Louise and Leon are also empathic, but of the two of them; Louise is by far the strongest. I believe that Celeste will be as strong if not stronger than Louise is.\"\n\n\"How do we help her?\" Juliette asked.\n\n\"Before Louise taught her to shield, she was protected by Louise or Leon. When Louise moved away, Celeste lost part of her protection. Leon didn't know what she was or what he did for her so he didn't pick up the slack. Because I accepted her as my child, she is shielded by me as are you and the other children. Part of her education will be teaching her how to build strong shields.\"\n\n\"Are the others gifted?\" Juliette asked.\n\n\"They may be more intuitive than what's considered normal.\" Hans replied, \"But sometimes gifts don't manifest until later in life. It could be that Wanda and Victor will be the mates to vampires and whatever gifts they have will awaken at that time.\" \n\nThat conversation seemed surreal. In many ways it still didn't seem possible, but it was. She was in love with a vampire. Her youngest was empathic and the other two would either be turned or mates to vampires and then turned. It sounded like something that would earn her a few days in a psych ward somewhere.\n\nShe looked over at Gene who was staring out of the window deep into his thoughts. Her mind still fought to reject what he told her.\n\nThe words \"I was going to kill Kevyn\" Reverberated through her head. When he apologized for not leading the family better, she had her own apologies to make and her own guilt to bear.\n\n\"Gene, you shouldn't have had to tell me to help Louise. I knew that she needed help and instead of helping her, I dumped the kids on her when I thought I needed a night out. I never thought that she needed a night out or that she might have been interested in dating or meeting friends. She was so convenient and never said anything... that doesn't make it right.\" She said. \"All I'm saying is that I share in that guilt with you. We all do with the exception of Leon and Kevyn.\"\n\nShe took a deep breath and continued.\n\n\"Louise called me that morning. She wanted me to sit with mom while she was at work. I.... I told her that it was my first day off in a week and that I wanted to sleep. I ended up agreeing to check on mom for lunch and that's when I found her on the floor. Gene, she was... if I had gone like Louse asked me; maybe she wouldn't have fallen. But do you know what makes this worse? Louise never threw it up in my face. Not even when we tried to make her take mom home did she blame any of us.\"\n\n\"That was never her way.\" Gene replied. \"That's why it was so easy to push things onto her, but your right; it would have been easier to take had she screamed at us. As to whether mom would have fallen or not, we'll never know. But I do think that it'll do you no good to agonize over it.\"\n\nHe had been right, but even so the thought that their mother may not have died had she been there weighed heavily on her.\n\n\"Juliette.\" Hans called softly, \"Tell me what is troubling you.\"\n\n\"Ummm later.\" Juliette replied. She wanted to languish in her guilt for a little while longer. She had to wonder what Hans would think about a woman who had for all practical purposes abandoned her mother and sister.\n\n\"I will love you no matter what you tell me.\" Hans whispered.\n\n\"Were you peeking?\" Juliette asked.\n\n\"No.\" Hans replied. \"I know people and I can tell that you are worried. I just wanted you to know that you never have to be concerned about my feelings for you.\"\n\nJuliette intertwined her fingers with his and silently said another apology to her mother.\n\n********\n\n\"Why don't you get the supplies for the s'mores while I call Ethan?\" Nathan said when they got home.\n\n\"Ok, but I want to change clothes first.\" Louise replied. \"I won't be long.\"\n\n\"No hurry.\" Nathan replied. \"In fact, it's been hours since I made love with you, can the s'mores wait?\"\n\n\"Gee... I don't know.\" Louise teased. \"S'mores or making love... hmmm...\"\n\nNathan laughed. He loved her sense of humor and how free she was becoming with something that had been a source of anxiety for her.\n\n\"I think... s'mores!\" she exclaimed.\n\nLouise laughed at the surprised expression on Nathan's face.\n\n\"I'm kidding!\" she said still laughing. \"Make your call and I'll see you upstairs.\"\n\n\"Brat!\" Nathan shouted after her as he picked up the phone. ",
        "He didn't know exactly what he was going to say, but then decided to just say it. If Ethan had any questions, he would ask.\n\n\"Ethan... Nathan here... everything is fine... they're on their way back to Pittsburgh... Yes Leon is coming back and so are Juliette and the children. How's everything on your end? Good... No I haven't heard anything from mom and dad... I know she's anxious for the baby to arrive. Louise is doing great! I've been blessed as all of us are. The reason that I'm calling is to tell you about something that happened twice within an hour.\"\n\nNathan told Ethan about the feeling that both he and Louise experienced.\n\n\"When it happened the first time, we thought that it was a fluke or we wanted to believe that it was. But then, it happened again. The second feeling wasn't any stronger than the first time, but it hadn't diminished either. I don't know what to think, but given what happened with Bradford; I thought I'd better call. Of course I'll keep you posted.\"\n\nHe hung up and stared at the phone for a few seconds before going to the kitchen. As he put a tray together for dinner, he tried to remember the feeling. It wasn't a strong feeling, but it was a feeling of disquiet. As far as he knew, the Sinclaire family didn't have any bona fide seers. He remembered that one of Louise's relatives was psychic. It had been a gift that had saved his life and the lives of his family on several occasions.\n\nBut this didn't feel like the run of the mill psychic experience. He wondered if he and Louise were the family's first seers. When Louise fell asleep, he would make a call to the genealogist. Nathan picked up the tray that contained two carafes of warmed blood, a carafe of juice and a plate filled with cheeses, meats and crackers and went to the stairs.\n\nThe feeling of disquiet hit him again, but this time; it wasn't as strong. He stopped and tried to get a grasp on it, but it was gone. He rushed up the stairs to Louise.\n\n\"Did you feel that?\" she asked as soon as he was in the room. \"It wasn't as strong this time.\"\n\n\"I felt it.\" Nathan said as he sat the tray down. \"I talked with Ethan and told him what we experienced. He wants us to keep him posted on any changes. Lou, if you had to guess; what would you say is happening?\"\n\nLouise shrugged her bare shoulders. \n\n\"I don't know.\" She said. \"It could be the mate of a past victim, but... it doesn't feel like that. I need to feel it a little longer.\"\n\n\"I agree with you.\" Nathan said as he poured her a glass of blood. \"I don't think that it's the mate of a past victim. We'll just need to keep our wits about us. Drink up and then we'll take our vitamins.\"\n\nLouise grimaced but drank the blood down and held out her hand for the multivitamin.\n\n\"I won't miss these.\" She commented as she put the large tablet in her mouth.\n\nThey finished their snack and settled in the bed. Louise was lying on her right side facing Nathan, her arm over his waist. Nathan kissed her forehead as his hand gently cupped a breast.\n\n\"You are so ....\"\n\nThe chirping of his cellphone interrupted whatever he was going to say.\n\n\"That's mom and dad.\" He commented as he answered the phone.\n\n\"A girl?\" he asked after he greeted his father. \"Is mom alright? And the baby? She is?\"\n\nHe covered the mouthpiece of the phone and mouthed to Louise, \"baby, girl, vampire; both fine.\"\n\n\"I'm sorry; I was just telling Louise about the baby. So tell me the particulars, I know that she's going to ask... five pounds six ounces... seventeen inches .... Blond hair and blue eyes... she sounds like a Sinclaire... what did you name her? Stephanie Anne? I like it. We'll give mom a few days to rest and we'll come over to see you. Congratulations and give mom our love.\"\n\n\"Congratulations big brother.\" Louise said kissing his chest. \"I bet she's beautiful. I can't wait to see her.\"\n\n\"Neither can I.\" Nathan replied. \"But no matter how beautiful she may be; our baby will be just as beautiful. I see a little girl with dark brown eyes and your smile. Her spirit will be as gentle as yours and I will give my life to protect both of you.\"\n\n\"The same goes for me... Nathan, I want you to promise me something.\"\n\n\"What is it?\" Nathan asked stroking her arm.\n\n\"If.... If something happens and you have to choose between me and the baby, save her.\"\n\nNathan sat up so fast that Louise squealed.\n\n\"Are you alright?\" he asked as he listened for the baby's heartbeat.\n\n\"I'm fine....\"\n\n\"Why would you say that?\" he demanded.\n\n\"I... I was just telling you what I wanted to happen. That's all.\" Louise replied.\n\nNathan relaxed and took Louise back into his arms.\n\n\"I'm sorry... it's just the thought that I could lose either of you... Sweetheart, it's extremely rare that a mother or child dies during childbirth. If there was a problem with the baby, you would have miscarried within the first week and we're past that.\" \n\nHe was fully aware that he was telling her things that she already knew to reassure himself. The statement had caught him unawares. \n\n\"I didn't mean to upset you.\" Louise said. \"Part of me still thinks as a human would.\"\n\n\"I know.\" Nathan replied. \"I overreacted, again; I'm sorry.\"\n\n\"Don't be.\" Louise replied nipping at his neck. \"I believe someone gave me the option of s'mores or making love. So far I've had neither.\"\n\nLouise listened to herself talk. This was a part of her that she didn't know existed until Nathan. It was a part of her that she liked and apparently, so did he.\n\nIn one move, she was stretched out on top of him looking down into his blue eyes.\n\n\"Does my mate have a request?\" Nathan asked.\n\nShe had never made a request in the past and Nathan wanted to see what she would say.\n\n\"My neck.\" She said softly. \"Start there.\"\n\nNathan was almost surprised when she replied but didn't let on. Instead, he rolled so that she was beside him and kissed her. His lips left her and skimmed across her cheek to her ear. He gently bit into the lobe and then sucked on it. He pulled her closer when she shivered and then moaned.\n\nHe let out a low moan when she tangled her hands in his hair and pulled when he found the spot behind her ear and kissed it. The scent of her arousal combined with the scent of the pregnancy hormones assailed his nose.\n\n\"That feels good.\" Louise murmured as she reached down between them and took the head of his cock into her hand.\n\nNathan's lips never lost contact with her skin as he moved them to her neck where he nipped, kissed and sucked until she was writhing against him. His lips found her pulse, kissed it and then bit.\n\nLouise stiffened in surprise and then began to grind against Nathan's cock. She whimpered in frustration when it wasn't hitting the right spot. Sensing what she wanted and needed, Nathan lifted her leg, pulled his hips back and eased his cock between her legs.\n\n\"Like... that.\" Louise said in a breathy voice that she barely recognized as her own when Nathan began sliding his cock back and forth against her clit as he fed from her.\n\nLouise wrapped her arms around Nathan's neck and cried out as she rubbed her clit harder and faster against his hardness. She could smell his arousal as it mixed with hers and had the sudden need to taste him. \n\n\"On your back.\" She demanded and then giggled when Nathan raised an eyebrow at her. \"Please.\" She added.\n\nHe was no sooner on his back when she had the head of his cock in her mouth savoring the taste of their combined flavors. Nathan closed his eyes and allowed himself to just feel what Louise was doing to him. After a minute, he opened his eyes and looked down at her. \n\nHe gently took her head between hands and held it in place. He began a slow thrust in and out of her mouth as he stroked her cheeks. His breath quickened when she tugged and pulled on sacs that felt as if they hadn't been emptied in weeks instead of hours.\n\nNathan's hips jerked as her tongue danced over and around the sensitive underside of his cock. He felt his cock thicken and knew that his release was imminent. He let her head go and let her do as she wished.\n\n\"Lou...!\" he screamed when a fang dragged across the sensitive skin on the head of his member. Suddenly, he was emptying into her mouth and she was swallowing as fast as she could. Nathan reached down and pulled her up to him, his mouth in search of hers. He kissed her deeply not in the least put off by the taste of himself on her breath.\n\nHe rolled so that Louise was on her back, put her breast together and took both nipples into his mouth paying more attention to the left as it was the more sensitive of the two. As he flicked the tip of his tongue over the hardened tip, he had a vision of Louise nursing their baby.\n\nLouise had his head in her hands pulling it tight against her chest.\n\n\"Harder... please.\" She moaned as she squeezed her legs together trying to put pressure on her clit. Nathan reached down and slipped a finger between her fold and pressed on her nub as he moved it back and forth. Louise gasped, took a deep breath and screamed as the orgasm washed over her.\n\nNathan waited until the orgasm passed before moving so that his head was between her plump thighs. As soon as his tongue touched her, Louise had another orgasm and then a third. After the third orgasm, Nathan moved beside her and gathered her into his arms.\n\nThe orgasms were still as intense as they had been, but it no longer concerned him. The baby and Louise were both healthy and that was all that mattered.\n\nHe covered Louise with a thin blanket and eased away from her. He needed to make a call to Jackson.\n\n*********\n\nA week had gone by before the rest of the family officially met Stephanie Anne Sinclaire. It was as Nathan said; the baby was definitely a Sinclaire with her blond hair and blue eyes.\n\n\"Rachel she's beautiful.\" Louise said as she held the baby.\n\n\"Yes she is.\" Rachel agreed. \"In several months you'll have your baby too and I have a hunch that he or she will be just as beautiful.\"\n\n\"Nathan seems to think that we're having a girl.\" Louise replied as she rocked the baby.\n\n\"Maybe he's right.\" Rachel commented. \"Now that the baby is here, maybe we can have lunch or something.\"\n\n\"I would like that.\" Louise replied. \"I have so many questions about being a mother... do you think that Katrina could come too?\"\n\n\"She wouldn't miss it.\" Rachel replied.\n\nNathan stood in a corner talking to Patrick and Ethan. He had a clear view of Louise and watched her as she held his little sister.\n\n\"Nathan have you had any more of those feelings?\" Ethan asked.\n\n\"What? Oh no... neither of us have.\" He replied. \"We do agree on one thing though, we don't think that who or whatever it is; it isn't the mate of a victim or a past victim.\"\n\n\"How do you know that?\" Patrick asked. He was remembering Veronica's abduction by the mate of one of his victims.\n\n\"I don't know.\" Nathan replied. \"We just do which leads me to a question. Are there any seers in our family history?\"\n\n\"Jackson would be the one to answer that with any certainty.\" Ethan replied, \"But I don't think so. Why do you ask?\"\n\n\"I already have Jackson looking into it, but I was wondering if it's possible that Louise and I are the family seers.\"\n\nNathan gave Ethan a brief rundown of the Yancy/Sinclaire timeline.\n\n\"Jackson seems to think that the Yancy line was created for the Sinclaire line. He was quick to point out that mating between the two families was rare and after Patrick and me, it probably won't occur again for hundreds of centuries.\"\n\nEthan listened without interrupting and didn't say anything for several minutes. When he did, it was one word.\n\n\"Damn.\"\n\n\"Do you know what this means?\" Patrick asked. \"If Nathan and Lou are seers our family will be one of the strongest families in existence.\"\n\n\"I understand that.\" Ethan replied, \"But I think that it's too soon to speculate. If they are seers, we'll be seeing more evidence of it. In the meantime, keep me posted on the --for lack of a better term; premonitions and let me know what Jackson says.\"\n\nEthan walked away to take his turn at holding the baby. Louise made her way to Nathan with a grin on her face.\n\n\"She's gorgeous and I can already see that she's got at least three men wrapped around her fingers already.\"\n\nShe glanced over at Joseph and Martin who stood a touch away.\n\n\"Are you implying that I'm going to spoil my sister?\" Nathan asked feigning offense.\n\n\"I'm not implying anything, I'm saying it.\" Louise replied.\n\n\"Guilty.\" Nathan replied. \"How are you feeling?\"\n\n\"I feel good.\" She replied.\n\n\"Good enough to finish shopping for the things we'll need for our cooking class?\" Nathan asked. \"He's coming in two weeks.\"\n\n\"I feel fine. Now will you stop worrying?\" Louise said. \"While we're out can we stop at the Wal-Mart?\"\n\n**********\n\nGene walked around Leon's apartment. It had been a long, hard week for him. True to his word, he made contact with his sponsor as soon as he got to the apartment and met him at a meeting the next morning.\n\n\"Gene? My name is Calvin. I know that you're new to this so let me go over a few things with you. The most important thing is this, if you feel the need to take a drink; you call me and we'll work through it. Put my number by your bed and in your cell phone. The second thing is this, there are going to be times when you're going to tell yourself that one drink isn't going to hurt anything. Nothing could be further from the truth. One drink can and will lead to another. Trust me on this. I've been there and done that. The last thing that I want to tell you is that you can beat this. You will always be an alcoholic just as I am. We will always be in recovery and we are always in danger of relapse.\"\n\nGene liked the older black man. He was no nonsense and wouldn't hesitate to tell him what he thought. Calvin was retired and was able to attend every meeting that Gene went to with him. The hardest day of the week was when he called the employee hotline and then called his boss. He had a rude awakening when he found out that he had another supervisor... \n\nHe sat across from Harold J. Bartlett with his hands in his lap. He didn't say anything as Bartlett assessed him.\n\n\"I've heard about you.\" Bartlett finally said. \"You're a hot head who doesn't pull his weight.\"\n\nGene felt his face burn but he kept his mouth shut.\n\n\"I've looked at your file, you started out good and then you started fucking up. You haven't brought in a new client in months. What I don't understand is how you still have a position here.\"\n\n\"If I could have a few minutes to explain.\" Gene said politely.\n\n\"By all means.\" Bartlett replied as he leaned back in his chair. \"I'll give you a chance to save your ass.\"\n\nTwenty minutes later, Gene's job was in the hands of Harold J. Bartlett.\n\n\"I understand that you've had a difficult time, but that doesn't excuse you rude and erratic behavior to staff and our investors.\"\n\n\"Mr. Bartlett, what I didn't tell you is that I... I have a drinking problem. I've been going to AA and I'm trying to get my shit together. Please, I need this job.\"\n\n\"What are you going to do about bringing in investors? As I've said, it's been months.\"\n\n\"I understand that and I have an investor. I just have to write up the proposal.\" Gene replied.\n\nHe hadn't wanted to use Nathan's letter, but it looked as if he would have no choice.\n\n\"Really?\" Bartlett asked. \"It isn't another drug dealer is it?\"\n\n\"No sir. This is a perfectly respectable family.\" Gene replied hoping that he wouldn't have to say who the family was.\n\n\"Alright, I'll bite; who's the family?\" Bartlett asked.\n\n\"I'd rather not say.\" Gene replied. \"I want to write up the proposal and present it first.\"\n\n\"Let me make sure I understand you.\" Bartlett said. \"You're here to try to save your job, but you aren't willing to give me a concrete reason to keep you on?\"\n\nThe old Gene began to rear its ugly head.\n\n\"Look you...\"\n\nBartlett's raised eyebrows and \"I dare you\" expression stopped him. It was then that he realized that he had no option but to show Bartlett the letter.\n\n\"I'm going to give you proof that I have an investor.\" Gene said as he took the envelope out of his pocket. \"I had my reasons for wanting to hold on to it; but I guess it really doesn't matter.\"\n\nGene watched as Bartlett opened the letter, skimmed it and reread it twice.\n\n\"How do you know the Sinclaires?\" Bartlett asked.\n\nGene had a choice. He could tell Bartlett that two of his sisters were married to Sinclaires or he could downplay it. The Gene of the past urged him to take advantage of it; but the new Gene fought to ignore it. He wasn't sure what he was going to say until he said it.\n\n\"I met them while I was on vacation.\"\n\n\"You're on probation for thirty days.\" Bartlett said. \"If you don't bring in a client within that time, you're gone; do you understand me?\"\n\n\"I understand.\" Gene replied.\n\nAfter the meeting the urge for a beer hit him. He didn't understand the urge, but then he did. He was tense and nervous. A beer is how he would have normally handled those feelings.\n\n\"Just one beer.\" He muttered under his breath as he left the office building. \"Just one.\" He repeated as he got into his car. He drove to his favorite bar and sat in his car staring at the building. It was a building that brought him more trouble than pleasure, but he had always gone back...except for now. He put the car in gear and drove away. He pulled into the first fast food place he saw and called Calvin.\n\n***********\n\nLeon still couldn't believe it. The evening after they arrived in Pittsburgh, Nadine began telling him about the Sinclaires. Three days later he was still in shock. He turned on the laptop and listened to Ethan Sinclaire publicly acknowledge not only what he did; but what his family did.\n\nHis immediate reaction was concern for Kevyn and Louise and then anger. He was in the middle of watching the clip again when Hans sat beside him.\n\n\"It is hard to understand isn't it?\" He asked.\n\n\"How... I mean why did they do it?\" Leon asked. \"I don't get it.\"\n\n\"Leon, our world does not completely hold to the laws of the human world. There are some things that we have in common, such as murder which we also consider a crime; but each home sets up its own rules as to what was acceptable behavior. That doesn't make it right; but that is how it was. There is much that Ethan didn't say on during that speech and if you wish, I can tell you all of it.\"\n\nBy morning, Leon knew everything. During the telling, he had been angry, shocked and speechless.\n\n\"How could a family teach something like that?\" Leon asked. \n\n\"Mitchell Sinclaire took advantage of the fact that the rapes were occurring. He was a true serial rapist. It is true that he was taught this terrible thing as was his father before him, but he continued even after he mated. Ethan admits to knowing that it was wrong for several centuries before he raped his mate Katrina and admits that he should have gotten help and put an end to the practice. It is largely due to Katrina's efforts that we have the equivalent to your child protective services. She also initiated the same mandatory reporting protocol that the human world has.\"\n\n\"But none of these guys went to prison for what they did.\" Leon said.\n\n\"No.\" Hans replied softly. \"I know what you're thinking and it's a hard thing to accept....\"\n\n\"Do Kevyn and Louise know about this?\" Leon broke in.\n\n\"Yes they know.\" Hans replied. \"And so does Juliette. One of the things that all of the Sinclaires must do when they find their mates is to tell them the entire story. When they have children, that child must be told as soon as they are old enough to understand. Ethan is of the belief that the telling the story over and over will prevent it from happening again.\"\n\n\"Did it work?\" \n\n\"Once the Sinclaires stepped forward and took responsibility for what happened, the tide began to turn. Ethan, Martin and Patrick set up groups and help for vampires who felt the need to rape or had other violent tendencies. The rapes haven't stopped but the incidences of it have dropped dramatically.\" Hans replied.",
        "\"Who pays for all of this?\" Leon asked. \"I'm sure that not all vampires are as wealthy as the Sinclaires.\"\n\n\"All expenses are paid for by the Sinclaires. Leon, I know that you are concerned about your sisters. I swear to you that they are as safe with Patrick and Nathan as Juliette and the children are with me.\"\n\n\"Nathan never raped?\" Leon asked.\n\n\"No. In fact, he was a product of rape but he still has to tell the family history to any children that he and Louie have.\" Hans replied.\n\n\"Excuse me.\" Leon said abruptly. \"I need to make a phone call.\"\n\n*******\n\nJuliette wrung her hands. Angel and Hans were going to meet for the first time in less than two hours. She told him about Hans two days after they got home.\n\n\"You brought a strange man back with you?\" Angel asked surprised. \"And you exposed our children to him? Julie what are you thinking?\"\n\n\"His name is Hans Ahlburg.\" She replied. \"I'm sure that you'll Google him.\"\n\n\"Is he staying with you?\" Angel asked.\n\n\"Of course not!\" Juliette snapped. \"Look, I know that this is fast and believe me, I was as surprised as you are. Hans would like to meet you. When can you come over?\"\n\nThat night had finally arrived. She checked the coffee pot to make sure that it was ready to go and went to check on the kids.\n\nWanda was on the phone with Victoria chattering as only girls their age can do. Juliette couldn't help but smile. It was good to know that Wanda had a friend who understood half of what she was talking about. It wasn't that she didn't have friends, but they weren't as mentally or academically advanced as she was. Victor was in his room working the model airplane kit that the pilots gave him when they deplaned. It was more challenging than any of the others that he had assembled. His face was scrunched up in concentration as he looked at the diagram of what he hoped would be the end result. Celeste was playing with a doll and coloring. Juliette almost walked by but stopped. Celeste was talking to herself or was she talking to the doll? She couldn't tell, but either way; Celeste had never done either thing before.\n\nJuliette strained to hear what Celeste was saying, but she was too far away. Celeste stopped talking, looked up at Juliette and smiled. That smile was filled with such happiness and peace that Juliette's eyes burned with tears. It was the smile that she had been waiting for from her baby girl and here it was. In the wake of that smile, Juliette forgot that just moments before that Celeste had been talking to herself.\n\n\"Don't cry mommy.\" Celeste said softly.\n\nJuliette crossed the room and scooped a surprised Celeste up into her arms and hugged her. Juliette hadn't been aware of how worried she really had been about Celeste. Now all she felt was relief. Celeste was going to be fine. All of them were.\n\nHans arrived at six-thirty. He wanted to spend a few minutes alone with Juliette and the kids before Angel arrived. As soon as she opened the door he took her into his arms and kissed her.\n\n\"It will be fine. I promise.\" He told her.\n\n\"I know.\" Juliette replied. \"But I'm still nervous. What's in the bag?\" she asked.\n\n\"Something for later.\" Hans replied. \"What are the children doing?\"\n\nBy the time Angel arrived, Hans had spent a few minutes with each child.\n\n\"I am meeting your father this evening.\" He told each child. \"He is and always will be your father so there is no need for you to choose between us. If he asks any questions about me; be honest.\"\n\nWanda and Victor both let out sighs of relief. Celeste just smiled at him as if she didn't see where there would be a problem.\n\nHans was in the living room when Angel knocked on the door. Juliette gave him a nervous smile and went to answer the door.\n\n*******\n\nLeon paced as he waited for the phone to be answered. He knew what he saw and heard, but he had to hear it straight from the source.\n\n\"Patrick? Leon here. I have a question and I want the truth. Is what Hans told me about your family true?\"\n\n\"Yes.\"\n\n\"You aren't going to lie about it?\" Leon asked surprised by the one word answer.\n\n\"Lying and keeping it secret was the reason why it went on for as long as it did.\" Patrick replied. \"Talking about it is not only a reminder to us of what we were and what we are; but it helps others to come forward. Leon, we will always be what we are... rapists. Just as you will always be a recovering drug addict, we are recovering rapists. We can never allow ourselves to forget or to stop telling this story.\"\n\n\"Did you... did you rape my sister?\"\n\n\"No.\" Patrick replied. \"I hadn't raped anyone in over twenty-five years when I met Kevyn. I had one close call after I met her and no, it wasn't her. It's a long story and I'll tell you about it when you have time.\"\n\n\"I have time.\" Leon replied.\n\nHe heard Patrick murmur something to Kevyn and then come back to the phone.\n\n\"Kevyn sends her love and wants to know what we can do to get your home ready.\"\n\n\"Back at her and make sure it's got food and cable.\" Leon replied. \"Now talk to me.\"\n\n\"Her name was Melissa... she was a student in my class, the same class that Kevyn was in...\"\n\nLeon listened without interruption as Patrick told him about Melissa and her mother Linda.\n\n\"It was during that time that I told Kevyn what I was and what I had done. As you can imagine, it didn't go well. As I told Gene, she ran away to Pittsburgh to get away from me. That's why she happened to be there when your mother died.\"\n\n\"So you're saying that if it weren't for Kevyn and your brothers, you would have raped that girl?\" Leon asked.\n\n\"Yes, that's what I'm saying.\" Patrick replied. \"In retrospect, when I saw her in my office I should have walked out. That begs the question, why didn't I? I can only guess that on some level I wanted to hurt her. I was fine until she came along. I saw her as the one who almost destroyed what I wanted with Kevyn. While that was true, the ultimate responsibility lay with me. Melissa was a stupid little girl who was taught to believe that money is everything.\"\n\n\"Why did you call for help?\" Leon asked.\n\n\"Because I didn't want to be that man who hurt women.\" Patrick replied. \"I already had so much to confess to Kevyn and I didn't want to add that. As it was, I was going to have to tell her about the close call.\"\n\n\"How do you know that you won't rape again?\" Leon asked.\n\n\"I just do.\" Patrick replied. \"The day that Kevyn claimed me, the dragon as I call it died. It was the same for Martin and Ethan. Leon, I know that you're concerned about Kevyn's safety with me. I don't know how to allay those concerns, but I swore to you that I would always love and protect her. If I have to take my own life to do it, I will.\"\n\n\"This is some fucked up shit.\" Leon said softly more to himself than Patrick. \"Let me talk to Kevyn.\"\n\n\"Hey Leon.\" Kevyn said softly.\n\n\"Kev are you alright with this?\"\n\nHe closed his eyes and listened to her answer.\n\n\"Leon, I know that this is hard, but... am I alright with this? I'm alright with Patrick and I know that he won't hurt me or anyone else for that matter unless it's to defend me. As far as the rapes, no; I'm not alright with it and I never will be. It's something that we'll always have to work through. Do I think that he would do it again? The answer is no. I am as certain about that as I am my name.\"\n\n\"Will you tell me if he hurts you?\" Leon asked.\n\n\"Yes.\" Kevyn replied.\n\n\"Swear it.\"\n\n\"Leon...\"\n\n\"Swear it and I'll let it rest.\"\n\n\"I swear to tell you if Patrick hurts me.\" Kevyn said.\n\n\"Good, put Patrick on the phone.\"\n\nAs he waited for Patrick to come back to the phone, Leon realized that he believed both Kevyn and Patrick. But that wouldn't stop him from reiterating a promise that he made before the wedding.\n\n\"Yes?\"\n\n\"Do you remember what I told you before the wedding?\" Leon asked.\n\n\"I remember.\" Patrick replied, \"And I would expect no less from you. Do you remember what I told you?\" \n\n\"I do and I expect you to keep your word.\"\n\nLeon hung up a few minutes later feeling more at peace. He would keep an eye on things and take action if need be. If that meant killing Patrick, then he would.\n\n********\n\nPatrick hung up and let out a sigh of relief. Of all of the Yancy's, he had been most concerned about Leon. He had no doubt that Leon would come after him if Kevyn were mistreated in any way.\n\n\"Are you okay?\" Kevyn asked.\n\n\"I will be.\" Patrick replied. \"Kev, I know that I've said this before; but thank you for being here. I don't deserve you any more than Martin deserves Rachel or Ethan deserves Katrina.\"\n\n\"If I didn't believe that you're a different man, I wouldn't be here.\" Kevyn replied. \"I believe that you are the man that you were meant to be. I love you, I feel safe with you and I know that you would never hurt me. I told Leon the truth when I said that I will never be alright with what your family did. But I don't only hold them responsible. I hold the entire vampire community responsible. They sat by and let this thing happen, they let children be taught that it's alright to hurt people.\"\n\nPatrick felt her anger. She was right; but he still had to assume his share of the responsibility. On some level he had known what they were doing was wrong but had lacked the courage to confront his father and grandfather. It took Ethan raping Katrina and almost losing her and the girls for him to step up beside him and try to end it.\n\n\"What are you thinking about?\" Kevyn asked.\n\n\"That I could have ended it long before Ethan raped Katrina.\"\n\nKevyn kissed his cheek and moved away. He didn't want to be comforted nor did he want his conscience eased. He wanted to remember and think about what he had done. Before they rested, he would make love to her taking no pleasure for himself. When she was sated, he would kiss her and hold her as she slept.\n\n\"Hey.\" She called softly. \"I love you.\"\n\n**********\n\nAngel eyed Hans suspiciously as he shook his hand. On the face of it, he liked him; but looks could be deceiving. He waited until they were seated before he started questioning Hans. Juliette might well as not been in the room.\n\n\"I looked you up on Google.\" Angel said.\n\n\"I thought that you might.\" Hans replied with a smile. \"I would have been surprised if you hadn't.\"\n\nThe longer they talked, the more Hans realized that Angel still loved Juliette. It was the only explanation as to why he was being asked such in depth questions.\n\n\"Are you going to be able to provide for them? If not, then...\"\n\n\"Mr. Mendoza, I am more than able to provide anything that Juliette and the children might need. I am also more than capable of keeping them safe, but let's discuss what really concerns you shall we?\"\n\nAngel found that he liked Hans even more as the evening wore on. He was a man who didn't pull punches and said what was on his mind.\n\n\"I will tell you what I told the children.\" Hans said. \"You are their father and I have no desire to replace you as such. It is in their best interest that you remain an active participant in their lives. The other item of concern to you is the speed in which Juliette and I seem to be moving. I want to assure you that Juliette will be loved and cared for and that I have no issue with you being involved in her life as well as that of the children. The two of you have a history and three beautiful children as a result. There will always be that history and I have no wish to destroy the relationship that you have.\"\n\nAngel was quiet for several minutes. \n\n\"Most men would take issue with their... woman being involved with their ex.\" He said.\n\n\"I am not most men.\" Hans replied. \"I am secure in my relationship with Juliette and I know where her heart is. As I mentioned, the children need you in their lives and I will do nothing interfere unless they are being harmed.\"\n\nAngel looked at Juliette who sat quietly next to Hans, her hand in his.\n\n\"Do you want to move to California?\"\n\n\"Yes... I know that it's far away, but we can set up visits and you can call whenever you want. You, Anna and the baby can even come to visit.\" Juliette replied.\n\n\"What about the special things?\" Angel asked. \"What about Wannie's science fair projects or Victor's ball games? What do I do about those?\"\n\nAngel looked at Hans and stood up.\n\n\"You seem like a good man and I want my kids to be safe and happy... but I don't know about taking them back to California. I need to think about that.\"\n\n\"That's reasonable.\" Hans replied. \n\n\"When are you going back?\" Angel asked.\n\n\"I don't know yet.\" Hans replied. \"But take your time, it's a major decision.\"\n\nAngel went to speak to each child before he left. When he was ready to leave, he pulled Juliette aside.\n\n\"I really want you and the babies to be happy.\"\n\n\"I know, thank you.\" Juliette replied and kissed him on the cheek. \"Give Anna my best.\"\n\nHans watched from across the room and recognized the scene for what it was. \n\nJuliette was saying goodbye to her and Angel's past relationship. He doubted that she realized or understood it, but it didn't matter. All that remained was to wait for Angel to decide whether he would let the children move to California.\n\n\"What if he says no?\" she asked after Angel was gone.\n\n\"Then we stay here.\" Hans replied. \"There are hotels here too.\"\n\n\"You would move here?\" Juliette asked. \"But you love California.\"\n\nHans put his hands on Juliette's waist and pulled her close.\n\n\"Yes I do love it there but it is just a place.\" Hans said. \"My home is wherever you and the children are, and if it happens to be Pittsburgh, Pennsylvania; then so be it.\"\n\n\"But your house....\"\n\nHans shushed her with a kiss.\n\n\"I'm staying.\" He murmured. \"We'll talk later, but for now; get the children; I have gifts for them.\"\n\n\"You don't have to buy them gifts.\" Juliette said. \"They're happy that you're here.\"\n\n\"These are what I consider necessary gifts.\" Hans replied. \"I have one for you too.\"\n\n\"Should you be spending money like this?\" Juliette asked. \"You don't have a job.\"\n\nHans took Juliette's hand and led her to the couch.\n\n\"Juliette,\" he said when they were sitting, \"When I told Angel that I could give you and the children whatever you needed; I meant it. I am more than able to give you and the children anything that you may want or need. I am nowhere as wealthy as the Sinclaires...\"\n\n\"Hans this isn't about how much money you have or don't have. The only thing that matters is that you love us enough to completely uproot yourself.\"\n\nHans looked at her, his gray eyes glittering. He couldn't wait until he had Juliette and the children where they belonged- with him and Juliette in his bed. \n\n\"I would follow you anywhere.\" He said touching her face. \n\nHe laid his hand on her cheek. He was mesmerized by the difference in their skin tones, her dark against his light. \n\n\"Our children are going to be so beautiful.\" He murmured as he leaned toward her. \"So beautiful.\"\n\nJuliette had never thought about having more children, but somehow; it seemed right. She had always enjoyed pregnancy and the sense of wellbeing that came with it. She even welcomed the pain of childbirth because she knew at the end of it she would be rewarded.\n\nShe moved closer and returned the soft but yet demanding kiss that Hans was giving her. Her nipples hardened as she pressed against Hans' chest.\n\n\"Mom?\" Victor called from his room. \"Can you come in here for a minute?\"\n\nJuliette pulled away breaking what was possibly the most erotic kiss of her life. Her face felt hot beneath the coolness of Hans' hands.\n\n\"You've accepted me.\" Hans said softly. \"That is why the kiss felt different.\"\n\n\"Mom?\" Victor called out again.\n\n\"I'll be right there!\" Juliette called back.\n\nThe problem turned out to be a relatively minor one, but one that Juliette couldn't help with; but Hans could.\n\n\"You need a much smaller tool.\" Hans said. \"I'll bring one the next time I come, but in the meantime; could you get your sisters and take them to the living room?\"\n\nA few minutes later, all three children were sitting in the living room on the couch. Hans was sitting on the floor in front of them with the bag at his side. He looked at each child, smiled at them and took the contents out of the bag.\n\nTwo pairs of eyes widened when they saw what was in the bag. Celeste seemed only mildly interested.\n\n\"I want to explain something to you.\" Hans said. \"These cell phones are not for chatting with your friends or for playing games. In fact, you can't play games on these phones. They are to be used only if you are in trouble or frightened. My cell phone number is already programmed in as well as your mother's and your father's. I have also programmed each of your numbers in so that you can contact each other if the need arises.\n\nThere is one more number programmed into your phones. That number is only to be used in dire emergency. Such an emergency would be if you are in danger. If someone is chasing you or trying to hurt you; then you use that number. Someone will be there within seconds. His name is Spike...\"\n\n\"Spike?\" Wanda asked wrinkling her nose. \"What kind of name is that?\"\n\n\"He is called Spike because he wears his hair in a spike type style. You will know him because of his hair and it will be dyed in the favorite color of whoever calls him. For instance, if Celeste calls him, his hair will be pink, but I cannot stress enough that his number is only to be used in cases of extreme emergency. You may use the phones to check on each other, in fact; I encourage it. Are there any questions?\"\n\nWhen no one spoke, he called Vincent to his side. He patiently worked with him until he could operate the phone without difficulty. He helped Wanda and finally Celeste.\n\n\"Come here.\" He said gently.\n\nWhen Celeste was sitting on the floor with him; Hans took her phone out of the box and handed it to her.\n\n\"Your phone is special.\" He said. \"You don't have to push any buttons. All you have to do is say the name of whoever you need. Try it.\"\n\nCeleste looked at the phone and then at Hans.\n\n\"Mommy.\" She said softly.\n\nShe jumped when the phone that was still in the box rang.\n\n\"See, it's that simple.\" Hans said. \"Call Wanda.\"\n\nAfter she called Wanda and then Victor, Hans asked her the name of the emergency contact. She gave him a dubious look, stood up and whispered the name in his ear.\n\n\"That's very good Celeste.\" Hans said hugging her. \"Always keep your phone close to you.\"\n\nAfter Celeste was in her room, Hans kissed Juliette and handed her the phone he had gotten for her.\n\n\"There are extra numbers programmed into your phone. Any of those numbers will bring help to you no matter where you are. Unlike the children, your phone is for you to use as you wish. You can call me any time day or night and I will always answer.\"\n\n\"Why the phones?\" Juliette asked.\n\n\"It is one of the ways in which I am keeping you safe.\" Hans replied. \"You and the children will always be watched even though you won't be aware of it.\"\n\n\"Is this really necessary?\" Juliette asked.\n\n\"It is.\" Hans replied. \"The safety of you and the children take precedence over everything. It is the same for all of who are blessed as I have been. I have something else for you.\" he said as he reached for his wallet.\n\nHe took out a card and handed it to Juliette.\n\n\"This is for you to use for anything that you and the children may want or need.\"\n\nJuliette looked at the back card that had her name on it. She had only seen a card like that once in her life and up until that time thought that they were an urban legend.\n\n\"Hans... I can't take this.\" She whispered and tried to hand the card back.\n\nHans closed her hand around the card.\n\n\"You are my mate, my wife; everything that I have is yours.\"\n\n\"I don't know what to say.\" Juliette replied.\n\n\"You don't have to say anything.\" Hans said. \n\n\"I...\"\n\nJuliette jumped when the phone rang. It rang four times by the time she reached it.",
        "\"Angel? Hi... ummm ok... when? This weekend? What time tomorrow night? Yes, I understand. Sure....They'll be ready.\"\n\nJuliette hung up the phone and looked at Hans.\n\n\"Angel wants the kids this weekend. He wants to talk to them about you without you being around.\"\n\n\"Good.\" Hans replied. \"It will be good for all of them and it will give us a chance to be alone. What would you like to do?\"\n\n\"Do you mean that you aren't going to talk me into this mating thing?\" Juliette asked surprised.\n\n\"When we mate is in your hands.\" Hans replied. \"But I wouldn't be honest if I said that I want you in my bed in the worst way.\"\n\nJuliette's nipples tightened and her womb clenched at the thought of being in bed with Hans.\n\n\"Oh lord.\" She murmured and cleared her throat. \"How about a dinner and movie? Angel is picking the kids up at six.\"\n\nHans gave her a knowing smile and kissed her. If the fates and luck were with him, by the time the weekend was over; Juliette Yancy would be his mate in name and deed.\n\n*********\n\nThe next phone call Leon made was to Nathan. He had to make sure that Louise was safe and he wanted to talk to Nathan about turning him. He dialed Louise's number hoping that she would be the one to answer, but it was Nathan's resonant baritone that filled his ear.\n\n\"Leon, is everything alright?\" Nathan asked.\n\n\"Yes... look, I know about your family.\" Leon said. \"I want to repeat what I told you before you married my sister. If you hurt her or that baby in any way; your ass is mine.\"\n\n\"Leon,\" Nathan said. \"I would never hurt her or my child in any way. You are empathic, listen to me and tell me if I'm lying to you.\"\n\nLeon closed his eyes and replayed Nathan's words in his head and heard no lie.\n\n\"Alright, but if that ever changes...\"\n\n\"It won't just as how you feel about Nadine will never change.\" Nathan replied. \"It is the way of mates.\"\n\n\"Can I ask a personal question?\" Leon asked.\n\n\"Of course.\" Nathan replied. He already knew what the question was.\n\n\"How did you deal with it? Not just the family history; but how you were conceived.\"\n\n\"I was a teenager when I found out.\" Nathan replied. \"I was so hurt and angry at my father that I didn't speak to him for a week. I couldn't believe that he could hurt my mother that way. Finally, he took me camping and told me about the family legacy. I can't even begin to tell you how I felt, but the thing is... my issue wasn't my conception. My issue was that he hurt the one that he was supposed to love and protect.\n\nFor a long time after that, I would stay close to my mother just in case my father was going to hurt her again. It took her sitting down with me to change that. She told me that she loved my father and that he loved all of us. I asked her if she trusted him not to hurt her or anyone else again and she gave me an unequivocal yes. She didn't even take time to think about it.\n\nEven now, I look at her and Katrina with awe and admiration. To have survived what they did and then to keep the children that resulted from the rapes is nothing short of amazing.\"\n\n\"And then they married their rapist.\" Leon commented.\n\n\"Exactly.\" Nathan replied. \"Even now I look at them and it's hard to believe how their life together began. It hasn't been easy. Mom still had her moments but they work through it.\"\n\n\"Thank you for talking to me about it.\" Leon said. \"It couldn't have been easy for you to talk about. I also have a favor to ask.\"\n\n\"I would be honored to be present when you are turned.\" Nathan replied.\n\n\"Thanks... I was thinking the sooner the better.\" Leon replied. \"Could we do it the week that we get back? And Nate? I want you to be one of the one's who turns me.\"\n\n\"Let me know and I'm there.\" Nathan said. \"Thank you Leon, you have no idea of what this means to me.\"\n\nThey talked for a few more minutes and then Leon spoke to Louise. He exacted the same promise from her that he got from Kevyn. Afterwards, he felt much better and went to look for Nadine.\n\n********\n\nLouise was in the bathroom when Leon called. She stopped at the door when she heard Nathan talking about his family. She lowered her shields and felt his pain as he told Leon how he felt when he heard the truth about his family and conception.\n\nShe quietly walked up behind him and put her arms around him wishing that she could change the past. Nathan stroked her arm as he talked to Leon. Other than her, Leon was the only other person that he talked to about his family. She wondered if Hans told Juliette yet and what her reaction would be and then decided that she knew the answer to her question, Juliette didn't know yet. If she knew, she would have called.\n\nShe could hear and feel Leon's anxiety as he asked Nathan about his family and wondered if he had already spoken to Patrick. She had her answer a few minutes later when he made her promise to tell him if Nathan mistreated her in any way.\n\n\"I told Kevyn the same thing.\" He said. \"I expect you to keep your word.\"\n\nLouise couldn't help but smile. Leon had just used the same words that their father had used whenever they made a promise.\n\n\"I promise, but there won't be anything to tell.\" She replied.\n\nLouise felt Leon relax and then she relaxed.\n\n\"What can I do to get your house ready?\"\n\n\"Jalapeno bread extra spicy, hot wings and potato salad.\" Leon replied. \"But not until after i do this change thing.\" He added.\n\n\"He wants me to participate in his turning.\" Nathan said when the phone call was over. \"Other than you accepting me and carrying our child; that is the greatest honor that I have ever received.\"\n\n\"He sees you as a friend.\" Louise said. \"When is the turning going to happen?\"\n\n\"As soon as he returns.\" Nathan replied. \"I suspect that Hans will be the other vampire although I don't know how it will change things if Hans doesn't come back with him.\"\n\n\"They'll work it out.\" Louise said. \"Nathan, have you had any more of those feelings?\"\n\n\"No, have you?\"\n\n\"No... maybe it really was nothing.\" She replied.\n\nNathan hesitated.\n\n\"I don't believe that which brings up something that I wanted to talk to you about. I want you to make sure that you have your phone on you at all times; even in the house. I can't quite explain it, but I think trouble is coming our way.\"\n\n\"I... I know; I feel it too.\" Louise replied.\n\n\"I know that you know this, but sweetheart; don't go anywhere alone. If you see or hear anything that you think odd, no matter how small; say something.\"\n\n\"I will; but what do you think it is?\" Louise asked.\n\n\"I have no idea but I'd rather be safe than sorry.\"\n\n********\n\nIt had been a week since Barb had spoken to anyone from her family. Part of her missed them and wanted to talk to them, but the other part of her; the part that felt that she had been wronged won out. She still didn't know when she was going to approach Thorne about the baby, but she knew how she was going to do it.\n\nIf things went as planned, she would be kissing the tiny efficiency apartment goodbye and moving in to a home that rivaled any of those that Louise and Kevyn lived in. When that happened, she would invite all of them to her new home and serve a meal that they would talk about for weeks.\n\nBut first she had to deal with Thorne Blackwell. On some level it bothered her that she wasn't more concerned about the child she was carrying. She didn't want anything to happen to it, the baby was a means to an end and it really was in her best interest to keep it and her healthy.\n\nWhether she wanted to spend the money or not, she needed to find a doctor. The one thing she did do was to go to the store and buy multivitamins. She gave brief thought to calling Louise and asking who she was seeing, but changed her mind. She wasn't ready to let them know that she was pregnant and she probably couldn't afford whoever they saw anyway.\n\nBarb stretched out on the couch and looked at the glass of milk and frowned. She hated milk under the best of circumstances. \n\n\"Next week.\" She said to herself. Next week, Thorne Blackwell will find out he's going to be a daddy.\n\nShe fell asleep leaving the milk untouched and with thoughts of diamonds in her head.\"\n\n********\n\nAngel was at the door right at six. Juliette called to the kids that their father was there and nervously opened the door.\n\n\"You look nice.\" Angel said when he saw her. \"Julie, I hope that you understand that I'm not trying to be difficult. You're talking about taking our babies to the other side of the country to be with a man that you barely know.\"\n\n\"I know that you want what's best for them and we understand.\" Juliette replied.\n\n\"We?\" Angel asked.\n\n\"Me and Hans. He's prepared to move to Pittsburgh if need be.\"\n\nAngel looked surprised.\n\n\"What about work?\" he asked. \"And where will he live?\"\n\n\"Work isn't a problem and he has a home here.\" Juliette replied.\n\n\"Do you have any concerns about him?\" Angel asked. \"Do you really trust a man that you've known for two weeks with our babies?\"\n\n\"I trust him as much as I trust Anna with our babies and as you know, I trust and like her.\" Juliette replied. \"In fact, I didn't meet her until several weeks after the kids did. What I'm saying is that I trusted your judgment and I'm asking you to trust mine. I understand that one of your concerns is the speed that this happened, but Angel; he loves us.\"\n\n\"Do you love him?\" Angel asked looking at her intently.\n\nJuliette hesitated. She hadn't even admitted to herself how she felt about Hans and here she was going to tell her ex-partner first.\n\n\"Yes, I love him.\" she said softly. She felt a flash of heat that started at her head and ran clear down to her toes.\n\n\"Julie? Are you alright?\" Angel asked concerned.\n\n\"I'm fine... what time will you bring the kids back on Sunday?\"\n\n\"Is four alright? We like to go to church and go out for lunch afterwards.\"\n\n\"That's fine... oh I have a new cell phone number and the kids have one too. I can write them down for you so that you can enter it into your phone....\"\n\n\"The kids have phone? Why is that?\" Angel interrupted.\n\n\"They're for emergency use only.\" Juliette explained. \"All of our numbers, yours included are programmed in. He isn't trying to buy them off if that's what you're thinking. He wants the same thing that we do; he wants them to be safe.\"\n\n\"But cell phones?\" Angel asked. \"They will chat with their friends and play games. Their school work will suffer and what about Celeste?\"\n\n\"The game apps have been disabled, only I or Hans can turn them on. The text is set to go to certain numbers... the numbers that are programed into the phone and the only calls that can be made on the phones are the ones programmed which by the way, includes nine-one-one. The GPS system is activated and can't be turned off. As far as Celeste, her phone is voice activated; actually all of them are. She can either push the buttons or she can say the name of the person that she wants to call. Would you like me to write the numbers down?\"\n\n\"Please.\" Angel said softly. \"Are they ready to go?\"\n\nHans was standing in Juliette's living room an hour after Angel left with the kids. His hands itched to touch every part of her; but he restrained himself. He could tell that Juliette had something on her mind and wondered what it was.\n\n\"We don't have to go out.\" He said hugging her. \"We have things to talk about. In fact, I would prefer that we get it out of the way.\"\n\nBy two am, Juliette knew the Sinclaire story. She couldn't speak for several minutes after Hans finished talking.\n\n\"Oh my god.\" She whispered. \"Rapists? All of them? What about Kev and Lou? Do they know?\"\n\n\"Not all of them are rapists. Nathan was a product of rape as were Ethan and Katrina's twins. Both Kevyn and Louise are aware and are dealing with it.\"\n\n\"Did Patrick hurt Kevyn?\"\n\n\"No. He will tell you that Kevyn saved his life. I know that you have many questions some of which I cannot answer; but if you ask any of them to tell you what happened; they will.\"\n\n\"I need to talk to my sisters.\" Juliette said still in a daze.\n\nAn hour later, she had spoken to both Kevyn and Louise. By the end of the phone call she was satisfied that they were safe. At the end of the phone call with Louise, she asked about Barb.\n\n\"I haven't talked to her.\" Louise replied. \"She made it clear that she doesn't want to see us. She's even changed her phone number.\"\n\n\"Have you gone to her apartment?\"\n\n\"I did once and she for all practical purposes kicked me out.\" Louise replied. \"I thought about going back, but I'm not going to. She wants to be left alone. She knows where we are if she needs us. But how are you?\"\n\n\"I'm good... I just wanted to talk you guys after Hans filled me in about the family. I'm glad that Leon talked to Nathan and Patrick. I know that they would never hurt you guys; but it makes me feel better to know that he knows. By the way, Gene is hanging in there. I call him once or twice a day to check with him.\"\n\n\"I know.\" Louise replied. \"Kevyn and I call him a couple of times a day just to let him know that we're thinking about him.\" \n\n\"Look, I have to go, Hans is here; but I just wanted to make sure that you were alright. I'll call you later.\" Juliette said and hung up.\n\n\"Is she alright?\" Hans asked.\n\n\"She's fine.\" Juliette replied suddenly nervous. Hans was looking at her with undisguised love and desire. \"Angel asked me if I trusted you.\"\n\nHans didn't say anything. He knew she was working up to what was bothering her.\n\n\"I told him that I did and I told him about the phones. He was kind of upset, but I think he's okay with it; especially after I addressed his concerns about it. He... he asked me if I loved you. I hadn't even told myself let alone you that I loved you and I had to tell him first. There's something wrong with that.\"\n\n\"Juliette, he only wants confirmation that you and the children will be loved and cared for. It doesn't bother me that he was the first person that you admitted your feelings for me to.\"\n\n\"You're not upset?\" Juliette asked.\n\n\"No, I'm not and you shouldn't be either. Juliette, come here.\"\n\nJuliette shivered with anticipation. She had heard Hans use those words with the children, but for her they held an entirely different meaning. Hans' normally soft voice sounded deeper, richer to her ears and seemed to vibrate through her body. \n\nShe moved closer to him on the couch and waited. For several seconds nothing happened. Then suddenly, she was sitting in Hans' lap. She yelped and then moaned as she felt him grind against her bottom.\n\n\"Do you feel that?\" he asked. \"That is for you and no one else. My body like everything else I own is yours to do with as you wish. You never need ask to touch me and my hope is that it will be the same for you.\"\n\n\"I don't have much.\" Juliette replied. \"But you're welcome to what I have.\"\n\n\"You are wrong.\" Hans replied. \"You have much to offer... Juliette, will you trust me with your heart and your body?\"\n\n\"Is that your way of asking me to go to bed with you?\" Juliette asked. Her heart was pounding. She hadn't been with anyone in months.\n\n\"That among other things.\" Hans replied as he brushed his lips across her cheek. \"I am asking for your hand in marriage. I love you and the children and I want to marry you in a human wedding. When we make love, we will be mated, but I want you to have my name. Will you marry me?\"\n\n\"Marriage?\" Juliette asked surprised although she shouldn't have been. \n\n\"It doesn't have to be right away...\"\n\n\"Yes.\" Juliette said softly.\n\n\"Yes to which question?\" Hans asked as he ran a hand up her thigh and stopped at her hip.\n\nJuliette took a deep breath but didn't say anything for several minutes. What was she saying yes to? A full fifteen minutes passed before she finally spoke.\n\n\"I'm saying yes to both.\"\n\nIt was Hans' turn to be quiet. He wanted to savor the moment when Juliette agreed to mate with him and to become his wife. During his time of silence, he sent a prayer of thanks to every benevolent force that he could think of.\n\n\"Show me to your bedroom.\" He finally said.\n\nJuliette stood up and immediately missed Hans' lap. She held out her hand to him in invitation, waited for him to take it and then led him to the bedroom. Hans stood in the doorway and looked around. The room was small, big enough for a double bed; but immaculate. There were more windows than he liked...\n\n\"Juliette, could we go somewhere... a hotel perhaps? I want this night to be like a honeymoon for us.\"\n\n\"Let me pack a few things.\" Juliette said.\n\nWhile she packed, Hans called the hotel that Kevyn and Patrick had stayed out weeks before. Satisfied that his instructions were going to be followed, he hung up and then called Nadine.\n\n\"I will be gone for the weekend; the house is yours... tell Leon not to worry, we'll work that out even if Nathan has to come here... Thank you Nadine, I'll tell her... yes I love you too.\"\n\n\"I'm ready.\" Juliette said from behind him.\n\nThe room at the hotel was bigger than her entire apartment. It was filled with flowers of every kind and the freezer was stocked with her favorite ice cream. Hans stood back and watched her reaction when she saw the bags of blood in the refrigerator.\n\n\"Do I have to drink that?\"\n\n\"No, that's for me.\" Hans replied. \"If you decided to turn as we discussed then yes; you would need blood.\"\n\n\"So... Louise drinks blood?\" Juliette asked.\n\n\"Yes.\" Hans replied. \"If you are considering turning; I would suggest that you talk with her about it.\"\n\nHe was more than ready, but didn't want to rush her. He didn't say anything as she walked around the suite smelling the flowers. He knew that she was coming to grips with a major life change and would give her all of the time and space that she needed.\n\nFinally, Juliette walked over to him, looked up him and smiled.\n\n\"I'm ready.\"\n\nThis time it was Hans who held his hand out in invitation. Juliette took it without hesitation and allowed Hans to lead her through the bedroom and to a room that had a large Jacuzzi in it. She expected him to take her to bed right away, but was surprised when he ran the bathtub and added vanilla scented bath oil to the swirling water.\n\n\"There is more to making love than just hopping into bed as enjoyable as that may be.\" Hans said when he saw her confusion. \"Making love includes ensuring that the emotional needs are met as well as the physical ones. Something as simple as running a warm bath and a massage can say I love you as well as anything overtly sexual.\"\n\nHans snapped his fingers and the candles scattered around the Jacuzzi room were lit adding their light vanilla scent to the fragrance of the bath oil. He walked over to Juliette, drew her into the room and began to undress her kissing her as he unbuttoned her blouse.\n\n\"Sometimes all that is needed to make love is a kiss.\" He said after he broke the kiss.\n\nWhen she was naked, Hans stepped back and looked at her. He started at her face and slowly made his way down her body. His eyes lingered on her breasts which were large with large nipples that were begging to be sucked. In his mind's eye, he could see her nursing their son or daughter. His eyes dropped to her stomach and imagined her large with child. Finally his gaze reached the vee between her legs.\n\n\"You more beautiful than I imagined.\" He murmured as he looked down at her. \"Come; get in before the water gets cold.\"\n\nJuliette was speechless. If she had any doubts; they disappeared as soon as Hans touched her. When she was settled in the tub, Hans undressed. He stood still giving her a chance to look at him as he had looked at her. He looked much bigger naked then he was clothed. \n\nJuliette started with his face and made her way down his body as he had done hers. The chest had always been her favorite part of a man's body; and Han's had one that she could see herself falling asleep on. His stomach was flat and muscled, but didn't have the pronounced six-pack like she envisioned vampires to have. Her eyes rested on his erect manhood. He was large, but not obscenely so. She swore that she could see it pulsing and wanted to touch it.",
        "As if reading her mind, Hans moved within touching distance. He moaned when Juliette wrapped a small, brown hand around his cock and stroked it gently. She was mesmerized by the clear drop that formed at the tip and had the desire to taste it. Oral sex had been the one thing that she and Angel had never done together and it wasn't because she wasn't willing. He had considered it an abnormal form of lovemaking and wondered if Hans felt the same way.\n\n\"It is yours to do with as you wish.\" Hans said. His breath was coming out in pants. It had been a long time since he had been touched in a sexual manner. \n\nJuliette looked up to him and pulled him closer by his cock. Hans held his breath as his cock was pulled closer to Juliette's mouth. His knees buckled when her tongue swiped the head and took the clear fluid at the tip with it. It was obvious to him that his mate was comfortable with making love and her sexuality.\n\n\"Sweet fates above.\" He groaned when Juliette took the head of his cock into her mouth and began to gently suck on it. If she didn't stop, he was going come. \"Juliette... stop... please.\" He said as he pulled away from her. \"I... not like this.\n\nJuliette watched Hans move away from her. She wasn't sure of what she thought he would taste like; but she liked it. It was a taste that she couldn't quite describe. He was sweet; but slightly salty and she liked the feel of him in her mouth. She wasn't concerned that he didn't like what she did; it was obvious that he had enjoyed it. He had acted like a man for whom it had been too long since he had been touched.\n\nHe stepped back and took a minute to collect himself. Finally under control, Hans approached the Jacuzzi and climbed in behind Juliette. He wrapped his arms around her and pulled her back against his chest trapping his cock between them. \n\n\"This is everything that I imagined it would be and more.\" He said as he kissed the top of her head.\n\nJuliette didn't reply. She hadn't known what to expect. She relaxed into Hans' arms and closed her eyes. \"Barb,\" she thought, \"you really screwed up.\" \n\n\"Juliette?\" Hans called softly. \"Let's get out.\"\n\nHe got out first, helped Juliette out and wrapped her in a thick towel. Moments later, Juliette was lying on the bed and Hans was exploring her body with his hands and lips. He didn't have to tell her to tell him what she liked; she was quite vocal.\n\n\"Hold me tighter.\" She said at one point when he turned her so that she faced him.\n\n\"Has anyone ever tasted you?\" Hans asked when he smelled the scent of her arousal.\n\n\"Once or twice.\" She confessed between moans.\n\n\"Did you enjoy it?\" Hans asked as he took a nipple between his teeth and bit down on it before sucking on it.\n\n\"I.... Yes... I liked it and I like this.\" Juliette replied as she moved against him.\n\nHans took his time with her breasts sucking and nipping at them until they were swollen and sensitive, but not sore. His right hand was between her wet vaginal lips slipping back and forth over her blood filled clit several times before he pinched it between his thumb and forefinger.\n\nJuliette's body jerked as she experienced her first orgasm in months. Her mouth opened and she gasped for air as she clung to Hans. The scream mixed with sobs came at the height of the orgasm. She was only vaguely aware that she was scratching Hans' back. \n\nHans released her nipple and kissed his way down her body as he continued his manipulation of her clit. Juliette opened her legs to make room for Hans between her thighs. He took a moment to look at her still pulsing nub. He inhaled the scent of her before taking his first taste.\n\nHe flicked the tip of his tongue over and around her clit as he slid two and then three fingers inside of her. Juliette clawed at the blankets and cried out again as the second orgasm washed over her. She had never had consecutive orgasms and was exhausted, but didn't want stop. \n\n\"Juliette... Are you alright?\" Hans asked as she rocked her in his arms. His cock ached for release; but her comfort came first\n\n\"I'm fine... finish it.\" \n\nHans didn't need to be told twice. He rolled on top of her, positioned himself between her legs.\n\n\"I take you as my mate.\" He said as he entered her in one smooth thrust. He gasped in pleasure as he felt the length of him slide into her tight channel. He could tell that it had been a while for her and somehow; that gratified him. When the entire length of him was in, he stopped and then began a slow rocking back and forth. Han's buried his face in Juliette's neck, kissed it and bit hard enough to draw blood.\n\nHis moans joined hers when the coppery, salty touched his tongue. He hadn't talked about taking her blood because he had no plans of doing it. But now, it seemed important that he did. He didn't know why and it didn't matter. He had learned from experience to follow his instincts.\n\nHans kissed the small bites closed and searched for her lips with his. They climaxed together swallowing each other cries. Afterwards, Hans held an exhausted but sated Juliette in his arms. He couldn't imagine sharing an evening that he just had with anyone else than Juliette. He covered them with a blanket and closed his eyes. \n\nIt was done.\n\nThe weekend flew by and before they knew it, it was Sunday. Juliette was a bundle of nerves as she tried to guess what Angel would say. He was at the door promptly at four with the kids in tow. After greetings and hugs were exchanged, he asked to talk with Juliette and Hans.\n\n\"I talked to the kids several times this weekend.\" He said. \"They all seem to like you especially my little princess Celeste. I appreciate that you seem to care for them and to be honest; Celeste was the biggest deciding factor. She hates it here and from what Wannie says; Celeste was like a different person in California. We... If I agree to let them go back there are things that I want.\n\nI want them to spend the summers and Christmas here with me and Anna. I want to be able to talk to them whenever I want via Skype so that I can see them and I want to be able to come visit them. If we can agree on those things; then they can go.\"\n\nAngel then turned to Hans. The expression on his face was serious, his tone when he spoke; grave.\n\n\"I am entrusting you with my children and the mother of my children. If anything happens to any of them, I will find you. Do you understand what I'm saying?\"\n\nHans returned Angel's serious expression with one of his own. When he spoke; his tone was just as grave.\n\n\"I understand your concern as I would feel the same way. I thank you for your trust and give you my word that no harm will come to them in word or deed by me or anyone else. I would die defending them.\"\n\nThe two men looked at each other for several seconds.\n\n\"When do you leave?\" Angel asked Juliette but his eyes were still on Hans.\n\n\"Next week.\" Juliette replied. She saw no reason to put it off. \"I'll call with an address...\"\n\n\"I will give you the address.\" Hans said as he reached into his pocket for a card.\n\n\"I would like to spend another evening with the babies before you leave.\" Angel said taking the card.\n\n\"Of course... when?\" Juliette asked.\n\nAngel spent another hour with the children before he left.\n\n\"I will see you and the babies on Friday.\"\n\n\"He is a good man.\" Hans commented after Angel left. \"He loves you and the children.\"\n\n\"Hans...\"\n\n\"It's alright.\" Hans said. \"He also loves his wife and coming child. Now, let's make plans for our move back to California.\"\n\n*********\n\nLouise and Kevyn were baking and cooking in Leon's kitchen while Patrick and Nathan checked the security system.\n\n\"So how are you feeling?\" Kevyn asked as she chopped fresh garlic for the homemade spaghetti sauce that was simmering on the stove.\n\n\"I feel great!\" Louise exclaimed. \"The baby is doing well and Gretchen says he or she will be here in another nine months.\"\n\n\"That means that Barb is due a couple of weeks before you. I hope that she's getting prenatal care.\" Kevyn replied.\n\n\"Me too.\" Louise replied. \"I hope that she's alright.\"\n\n\"Tell me about these feelings you and Nathan are having.\" Kevyn said.\n\n\"There isn't much to tell.\" Louise replied. \"We haven't felt anything in the past week, but whatever it was isn't good.\"\n\n\"Patrick says that you don't think that it's the mate of a past victim. How do you know?\"\n\n\"I don't know.\" Louise replied. \"But I do know that it isn't a fluke.\"\n\n\"Can you believe that Leon and Juliette are coming back in a few days?\" Kevyn asked changing the subject.\n\n\"No, it's hard to believe how fast the two weeks have flown by... did I tell you that Leon wants Nathan to be one of the ones to change him?\" Louise asked.\n\n\"That doesn't surprise me.\" Kevyn said. \"They hit it off as soon as they met. Do you think that Gene will be alright out there by himself?\"\n\n\"Yes.\" Louise said with a certainty that surprised Kevyn. \"He's going to make it, but we need to keep calling him and bring him out here whenever possible. As a matter of fact, Nathan and I are going back in a couple of weeks. He wants to see the house so he can start redesigning it.\"\n\n\"Has he started on the nurseries yet?\" Kevyn asked.\n\n\"He has rough drafts drawn but nothing definitive. I was thinking about doing some shopping at least to look at colors... want to come?\"\n\n\"Sure, when?\" Kevyn asked stirring the spaghetti sauce.\n\n\"Sometime after Juliette gets back and settled.\" Louise replied as she took several loaves of bread out of the oven.\n\nShe had just put the last loaf on the counter when a feeling of disquiet hit her. It lasted longer than the others but wasn't any stronger. This time was different in that she actually got a glimpse of something. She felt arms go around her and ease her into a chair.\n\n*********\n\nNathan and Patrick were having their own discussion about the premonitions that mirrored the one that Kevyn and Louise had.\n\n\"I'm certain that it has nothing to do with the past as far as the rapes are concerned.\" Nathan said. \"I've already upped security and told Lou to keep her phone on her at all times, even in the house.\"\n\n\"What are you thinking?\" Patrick asked.\n\n\"I don't know.\" Nathan said. \"But...\"\n\nNathan froze mid-sentence and then was gone. He appeared in the kitchen behind Louise, wrapped his arms around her and called for a chair.\n\n\"Louise? Sweetheart?\" Nathan called. \n\nHer skin felt cold to the warmth of his hand and he called for Gretchen. A moment later; Louise was in bed.\n\n\"I'm fine.\" She kept saying.\n\n\"Stay put.\" Nathan said his tone firm. \"Gretchen is on her way.\"\n\n\"It was different this time.\" Louise said softly. \"It felt the same but it was different. I saw something.\"\n\n\"I know.\" Nathan replied. \"I saw it too but I couldn't make it out.\"\n\n\"I heard something too.\" Louise replied. \"I think it was a name; but I can't be sure.\"\n\n\"Nathan! Where are you?\" Gretchen called.\n\nA few minutes later, Gretchen had given Louise the once-over.\n\n\"She's and the baby are both fine.\" She said. \"But it wouldn't hurt for her to rest for a day and Nathan, I do mean rest.\"\n\n\"What aren't you saying?\" Nathan asked.\n\n\"Nathan, relax; they're both fine.\" Gretchen said. \"I just want her to relax for a day.\"\n\nNathan gave Gretchen a long look and decided that he believed her.\n\n\"I'll take her home.\" Nathan said softly.\n\n\"But the bread and...\"\n\n\"I'll take care of it.\" Kevyn said. \"Go home and rest. I'll call you later.\"\n\nNathan took Louise into his arms and vanished straight into their bedroom.\n\n\"Nathan I'm fine. I don't need to be in bed.\"\n\n\"Gretchen says that you do so don't argue.\" He said as he turned the bed back and put her in it. \"I'll be right back and then we'll call Ethan.\"\n\nWhen she was alone, Louise tried to remember the word that she heard or thought that she heard. She went from that to trying to figure out what she saw.\n\n\"What are you?\" she whispered. \"Who are you?\"\n\nA word flitted across her but was gone before she could grasp it.\n\n\"Damn!\" she cursed as she tried to retrieve the thought. The beginning of a headache was forming behind her left eye but she wouldn't quit. Whatever it was that she couldn't remember; it was important. She closed her eyes and scrunched her face up in concentration. It was almost there.\n\n\"Louise!\" Nathan called alarmed.\n\nShe jumped at the sound of her name and opened her eyes. Her head was pounding and she was drenched in sweat.\n\n\"What happened?\" Nathan asked and wondered why he didn't feel anything.\n\n\"I was trying to remember...\"\n\n\"Drink this.\" Nathan demanded and handed her a glass of water.\n\nLouise drank it without stopping and held the glass out for more. Nathan filled the glass a third time watched her drain it and then filled it with blood. By the time she finished the carafe of blood, she felt much better and the headache was gone.\n\n\"I'm fine now.\" Louise said with a weak smile.\n\n\"What were you doing?\" Nathan asked relieved that she was alright.\n\n\"I wanted to remember... it's important... I know it is.\" Louise replied. \"It was right there... that word or name...\"\n\n\"You were using a lot of psychic energy.\" Nathan replied. \"I want you to promise me that you won't do that again without me being with you. I think that I can help so that you aren't so drained.\"\n\n\"I promise.\" Louise said already half asleep. \n\nWhen she was asleep, Nathan called Ethan.\n\n\"Yes... she's fine... the baby too. Yes... we both saw something but Louise heard something. She couldn't make it out. No... no... I'm not sure that it's to the point where we need to circle the wagons, but I do think that everyone should increase their security and double check their systems. I already thought about that as a possibility. We'll keep you posted.\"\n\nNathan hung up and looked at a sleeping Louise. He didn't need Jackson to confirm what he now knew. He and Louise were seers. Hers was the primary power and his secondary only because he was her mate. It was yet another gift that needed to be protected. Once again the thought that while Louise was the quietest of the mates but the most powerful crossed his mind. \n\nHe stripped and got into bed with her smiling as she moved toward him and curled into his side without waking up. He lay awake thinking about many things including what their child would look like and what gifts he or she would have.\n\n********\n\nThe jet landed at LAX late Saturday evening. The arrivals were anxiously waiting to depart and begin their new lives in California. Leon was both nervous and excited. In less than twenty-four hours he would be turned. He would spend an eternity with Nadine or Dina as he had started calling her.\n\nHe and Hans had talked extensively as to what to expect during the change.\n\n\"It will be more painful than anything that you can imagine but you will never be alone. Nathan will be there as well as me. I hope that you don't mind, but I asked Patrick to be present as well. He won't be there as an active participant but as an extra pairs of hands.\"\n\n\"That's cool; I was going to call him anyway.\" Leon replied \"if you need to use his blood... that's alright too.\"\n\n\"I was hoping that you would say that.\" Hans replied. \"We plan to be at your home by six pm. Try to rest during the day and don't eat; you'll only throw it up which will add to the discomfort. The other thing that I want to tell you is this, don't be ashamed or afraid to scream, cry or curse. If you need a hand to hold, we will do it and no one will think any less of you. I know that you talked about going cold turkey when you stopped taking drugs, but Leon; this is much worse than that. Take advantage of those of us that will be there to support you.\"\n\n\"Is it really that bad?\" Leon asked.\n\n\"It is.\" Hans replied. \"You can change your mind.\" He added.\n\nLeon looked at Nadine who was talking with Juliette and then looked back at Hans.\n\n\"No way, I'm doing this.\" He replied.\n\nThey were greeted by homemade signs saying \"WELCOME HOME!\" That had each of their names written on it.\n\n\"We're all staying at our house.\" Kevyn announced. \"And Wannie, Victoria is already there waiting for you.\"\n\nWanda squealed with happiness. She had missed her friend and couldn't wait to see her.\n\n\"Why don't you call her?\" Hans said.\n\n\"But it isn't an emergency.\" Wanda replied.\n\n\"It's alright this one time... as a matter of fact, why don't we add her to your list of acceptable calls? We'll talk about the particulars later.\"\n\nCeleste looked around and breathed a sigh of relief. She was home. She pulled away from Juliette and walked over to Nathan and Louise.\n\n\"Welcome home.\" Louise said kneeling in front of her and opening her arms.\n\nCeleste smiled a smile that lit up her entire face and hugged Louise kissing her cheek. \n\n\"I love you auntie.\" She whispered in her ear. \"Thank you.\"\n\nTears stung Louise's eyes. She knew that she and Celeste shared a special bond, but until now; Celeste had never said the words \"I love you.\"\n\n\"I love you too.\" Louise replied. \"I'm glad that you're here.\"\n\nCeleste pulled away, went to Nathan and looked up at him. Like Louise, he knelt down in front of her. Celeste looked into his eyes, smiled and hugged him.\n\n\"Thank you.\" she whispered in his ear and kissed his cheek.\n\n\"I don't know why you're thanking me; but you're welcome.\" Nathan replied as he hugged her back.\n\nCeleste pulled back and looked at him with her head cocked to the side like she did when she was confused or had a question.\n\n\"Come on let's go!\" Kevyn called out. \"There are snacks waiting.\"\n\nEven as nervous as Leon was about the next evening; the mention of food caught his attention. As they walked to the vehicles, Patrick walked beside him.\n\n\"Thank you for allowing me take part in your turning.\"\n\n\"You're welcome.\" Leon replied. \"You're family aren't you?\"\n\n\"I know... but I thought that after you found out about us that you would distance yourself.\"\n\n\"There are several reasons why I won't do that.\" Leon replied. \"Kevyn, Louise and my baby niece or nephew is the main reasons, but as I just said; we're family.\"\n\n\"How's Gene?\" Patrick asked.\n\n\"Hanging in there... he told me what you and Nathan did for him. I appreciate it. I know that it meant a lot to him.\"\n\n\"It's as you say; we're family.\" Patrick replied.\n\n\"Is Barb going to be there?\" Leon asked.\n\n\"No.\" Patrick replied. \"She's changed her phone number and made it clear that she wants to be left alone.\"\n\n\"Did she say that?\"\n\n\"In so many words; yes.\" Patrick replied.\n\nLeon didn't reply. When his turning was over, he was going to pay his sister a visit. She was the only hold out on their family being what their parents had always wanted- a close cohesive group that looked out for each other.\n\n*******\n\nNadine spent the day with Leon. As of yet, they hadn't made love because Leon didn't want to take the chance that she would become pregnant.\n\n\"We've waited this long.\" He said. \"We can wait a few more days.\"\n\nShe helplessly watched him as he paced, sat down and paced again. Finally, she had enough. She grabbed his hand, led him to the bedroom and with a thought stripped him. Before Leon realized what was happening, he was laying on the bed; flat on his back.\n\n\"Dina what are you doing?\" he asked as he tried to get up. \"Let me up!\"\n\n\"You're driving me crazy with the pacing and you need to rest.\" She replied as she took his flaccid cock in her hand and began to stroke it. It hardened as soon as she touched it; a clear drop had already formed at the tip. \"How long has it been for you?\" she asked as she cupped his sacs in her hand and pulled on them.\n\n\"I... Dina... a ... long time.\" Leon sputtered. \"We can't... not yet.\"\n\nNadine ignored him and licked his cock from the base to the spongy head and then down again. When Leon tried to object; she shushed him.\n\n\"I'm going to put you to sleep.\" She said and she took him into her mouth.",
        "\"Oh fuck Dina... let me...\"\n\nLeon tried to move; but couldn't. He could only moan and call out as Nadine teased his cock with her lips, teeth and tongue. Soon he stopped objecting and relaxed letting Nadine have her way with him. He no longer cared if she let him go or not as long as she kept pleasuring him.\n\nThe orgasm began at the balls of his feet and made its way up his legs. Not being able to move seemed to intensify the orgasm as it rushed to his groin and to his balls. Every muscle in his body tightened as he strained to move. He screamed Nadine's name as his seed left his body; the pleasure so intense that it was almost painful.\n\nHe was sure that she was done when he was empty but she didn't stop.\n\n\"Dina... stop... I'm done.\" He panted. His eyes were squeezed shut but they flew open when another orgasm wracked his body.\n\nLeon woke up four hours later with Nadine watching him.\n\n\"Feel better?\" She asked smiling at him.\n\n\"Damn woman! That was ....there are no words to describe it but yeah; I feel better.\" Leon replied.\n\n\"Good because it's almost time. Papa and Nathan are already here and Patrick is on his way.\" Nadine replied.\n\n\"Where will you be?\" Leon asked.\n\n\"Here with your sisters.\" Nadine replied. \n\n\"You're staying?\" Leon asked. He hadn't planned on that. He didn't want her to hear him screaming in pain.\n\n\"Of course I'm staying... you don't want me to?\"\n\n\"I just don't want you to hear me if I scream.\" Leon said softly.\n\n\"I heard you scream a few hours ago.\" Nadine said.\n\n\"That's different.\" Leon replied.\n\n\"Why? Because it was a scream of pleasure? It's alright to share in your pleasure but not your pain?\" she asked. \"Leon, I am your mate. I'm not going anywhere. When it's over; I'll be here waiting for you. Now get ready to go.\"\n\n\"You're some kind of woman you know that?\" Leon asked. \"I know that I haven't come out and said it, but Dina; I love you.\"\n\n\"I know; I love you too.\"\n\n*********\n\nSix pm sharp Leon was lying on a table in the basement of his and Nadine's home. Memories of every horror movie involving human sacrifice that he had ever seen played through his head. He was already sweating and they hadn't even begun. He could hear his pulse in his ears and he grimaced at how fast it was beating.\n\n\"Try to relax.\" Nathan encouraged him.\n\n\"That's easy for you to say.\" Leon muttered.\n\n\"Remember that we're here for you and that you don't need to suffer alone.\" Hans said placing a hand on Leon's shoulder. \"Do you have any questions before we start?\"\n\n\"No.\" Leon said nervously.\n\nHe held his breath when Nathan made the cut into his jugular.\n\n\"You're doing great.\" He said softly. \n\nLeon winced as he felt his life force run out of him and into a metal bowl. After what seemed like hours, he was drowsy. His pulse no longer beat in his ears and he felt cold. He thought about Nadine and the warmth of her body next to his and he remembered why he was doing this.\n\n\"Leon, I want you to listen to me.\" Hans said. \"I know that you can't respond; but you can hear me. We are going to begin feeding you our blood. It is blood that we've been saving for such an occasion. The transformation will begin within hours of the first feeding.\"\n\nLeon felt cup being pressed against his lips. A small amount of trickled down his throat making him cough. Whoever was feeding him stopped, let him catch his breath and then continued. The next sip went down easier and he actually tasted it.\n\nHe was rather surprised that he liked the taste of it. It didn't taste salty and coppery like his did, but had more of a sweet taste to it. The second cup tasted just as good; but different as did the third cup. \n\n\"I wonder what mine will taste like?\" he wondered. A combination of the three he decided a short time later. Several hours had passed before he felt the first twinge of discomfort. After that first twinge, everything sped up. He was hot and then he was cold as the sweat poured out of him; but it didn't smell like normal sweat. This smelled much worse.\n\n\"It's the toxins leaving your body.\" Hans explained when he saw Leon's nose crinkle in disgust.\n\nThe mild discomfort had quickly become full blown pain that he doubted any pain medication known to man could touch. Leon heard himself screaming in a voice that was filled with agony. He felt hands massaging his head, arms, shoulders and legs as he writhed on the bed and screamed for Nadine.\n\nBetween the screams, blood was poured into his mouth along with the urges to swallow. Soon all he felt was one, long excruciating pain. When a hand took his, he gratefully accepted it. He didn't know when the pain began abate only that there were brief periods when the pain seemed to be less and then it would be back again.\n\nLeon grabbed hold of the voices that murmured encouragements to him as they wiped his brow or fed him blood. He didn't know what time it was, but there was one moment that he would always remember. It was the moment when a bolt of pain that was worse than any pain he had previously experienced ran through him. His body arched off the bed as he opened his mouth to scream; but no sound came out. \n\nSuddenly, it was over. All that was left was a bone tiredness that left him speechless.\n\n\"Leon.\" Patrick whispered in his ear. \"It's over. Sleep now.\"\n\nWhen he woke up, he was in his own bed and Nadine was curled up beside him.\n\n*********\n\nNadine tried not to think about what Leon was going through as she sent calming thoughts to him and tried to absorb some of his agony. Of Leon's sisters, Louise was the one who understood although her pain wasn't nearly as excruciating as Leon's was. Nadine understood too and wished that there was another way; but there was none.\n\nShe tried to concentrate on something else and soon gave up. Not even helping to plan for Louise's baby helped.\n\n\"Nadine, he's in good hands.\" Louise told her. \"It's going to be alright.\"\n\nNadine looked at Louise and smiled at her.\n\n\"I know... thank you.\"\n\nThose hours felt like the longest hours of her life. Not even the hours that she spent hiding in the woods behind Hans' house could compare to this. Just when she thought that it wasn't going to end; there was silence. For a brief moment, she panicked and then remembered that if Leon had died; she would have felt it.\n\nFour hours later, she breathed a sigh of relief as Leon's slumbering body was carried to their bedroom. Patrick and Nathan stayed so that Hans could take Juliette home to see the kids.\n\n\"We'll stay until tomorrow to make sure that he's alright.\" Nathan told her. \"He did well.\"\n\n\"Thank you for being here and helping him turn.\" Nadine said. \"It means a lot to us.\"\n\n\"You're welcome.\" Nathan said speaking for him and Patrick. \"He'll probably sleep for another twenty-four hours, but when he wakes up; he's going to be hungry. Do you have enough blood and food?\"\n\n\"Yes to both.\" Nadine replied.\n\nThe next evening, they were gone.\n\nNadine checked her supplies one last time before she got into bed with Leon. She knew what to expect and prepared herself. When he first woke up, he would want sex. The lovemaking would come later after the initial taking when he would claim her.\n\nShe knew that it could be rough, but knowing Leon as she did; she knew that he wouldn't intentionally hurt her. She curled up against his back and closed her eyes. It didn't feel like she had been resting very long when she felt Leon wake up. She didn't move as he turned to face her.\n\n\"Dina look at me.\" Leon said.\n\nHe waited until she was looking into his eyes before he spoke.\n\n\"You belong to me and no one else. Do you accept me?\"\n\nNadine didn't hesitate in her response.\n\n\"I accept you as you accept me.\"\n\nBefore she could blink, Leon has her in his lap and impaled on his manhood. She braced herself for it to be hard and fast; but it wasn't. Leon cradled her against his chest and thrust up into her with a gentleness that she hadn't been expecting.\n\n\"I would never hurt you like that.\" he murmured. \"Never.\"\n\n\"Leon, it's alright...\"\n\n\"I will never let anyone hurt you again.\" he murmured as he thrust harder and faster into her.\n\nNadine's nipples tingled as they rubbed against the coarse hair of Leon's chest. She moaned as the bare lips between her legs ground against his pelvis. She could feel and smell the odor of her fluids as they coated his cock as they ran from her and soaked his pubic hair.\n\nShe turned her head to the side and offered Leon her neck not in the least bit frightened that he would take too much. She knew that Leon had been taught the basics while he had been asleep. Her clit pulsed when he tenderly kissed her neck. When he bit, she exploded. With every splash of his essence against her inner walls, the nightmare of those years faded. She would be able to talk about it now.\n\nLeon took long hard draws from her as he came; he didn't think that he would ever tire of the way that she tasted. Sweet with just a touch of spice. He eased her back on the bed still thrusting into her until they came a second time. \n\n\"Are you alright baby?\" he asked searching her face for signs of pain. Seeing none, he held her close.\n\n\"I'm fine... you didn't hurt me. Thank you.\"\n\n\"Nadine, I meant it when I said that no one would ever hurt you again. I also meant it when I said that I would never hurt you and if I do; get Kevyn, Louise and Juliette and let them kick my ass.\"\n\n\"I don't think that's going to be necessary.\" Nadine replied, \"But I'll keep it in mind.\"\n\nThey talked, made love and ate for the next twenty-four hours. Finally Leon asked about her past.\n\n\"How did you end up in Hans' back yard?\"\n\n\"I was living with my family in Northern California. We had a little piece of land that had a creek running through it. It wasn't much; but it was ours. Every Saturday afternoon we would go fishing so mama could dry them for winter or we would pick berries...you get the picture. Anyway, another black family moved about a mile away from us. My father took an instant dislike to them. He simply didn't trust them. At the time I thought that he was being uppity, but he knew that there was something wrong about them.\"\n\nNadine's eyes glazed over as she went back in time.\n\n\"There were three children, two boys and a girl who was my age. Can you imagine how thrilled I was? I had five brothers and other than mama; there was no one to talk to. The girl Nell and I became friends even though my father forbade it. The thing was, I never saw her during the day time. In retrospect, that should have been a clue; but all I could think was that I finally had a friend. What's really funny was that my brothers felt as my father did and steered clear of them.\n\nOne night, Nell came to our place. Everyone was sound asleep because we had to be up early the next morning. Winter was coming and we wanted to gather the last of the berries and whatever else we could find to get us through the winter.\"\n\nLeon closed his eyes in an attempt to prepare himself for what she was going to tell him.\n\n\"Nell had been telling me that one of her brothers- Harry was sweet on me. I didn't believe her at first because Harry never looked at me in that way, but his brother William did. Anyway, she came to our house and told me that Harry wanted to see me. I asked her if William was going to be there. She gave me a funny look like she wanted to tell me something but changed her mind.\"\n\n\"Was he going to be there?\" Leon asked.\n\nNadine hesitated.\n\n\"Yes he was going to be there. I snuck out through the front which never would have happened before that night. My father was a light sleeper. We used to try to sneak up on him and never succeeded; but I succeeded that night. I was so thrilled to be seeing William that I didn't think about the fact that no one woke up.\"\n\nLeon's stomach dropped. He didn't like where the story was going.\n\n\"I don't know when my excitement began to turn to nervousness and then to fear, but by the time it happened; it was too late. I couldn't go back home and even if I had... I found out later that the reason I was able to sneak out undetected was because everyone was dead.\"\n\n\"They killed all of them?\" Leon asked.\n\n\"All of them.\"\n\n\"Are you sure? Maybe they lied.\" Leon said.\n\n\"No... they... Nell was wearing my mother's necklace. It was the one nice thing that she had and she never took it off. Harry was wearing something of my father's and they had something from each of my brothers. I kept asking myself how I didn't hear anything. Nothing was making sense.\"\n\n\"Dina... they were vampires weren't they?\"\n\nNadine shook her head. \"They were travelling to Southern California when they found us. They were going to leave us alone until Nell insisted that's she needed a friend. And then Harry decided that he wanted me as his mate. I didn't know exactly what that was, but I knew that I wanted nothing to do with it.\"\n\n\"How long were you with them?\" Leon asked.\n\n\"Two months. By that time Harry had accidentally turned me. The planned mating wasn't going to happen. I wasn't Harry's mate and it wasn't too long before he realized that. It didn't' stop him... them from using me in whatever way that they wanted. I had gone mute. I wouldn't talk no matter what they did to me.\"\n\n\"Where were their parents?\" Leon asked. His brain was still thinking as a human's would.\n\n\"They encouraged it... I was their food.\" Nadine replied. \"You should have seen their reaction when Harry turned me! His father almost took his head off and would have if his mother hadn't intervened. So there they were with a new vampire that none of them wanted.\"\n\n\"They didn't help you did they?\" Leon asked.\n\n\"Help me?\" Nadine asked laughing bitterly, \"As soon as the change started, they left me; but not before I killed Harry. The fool had to have one more go at me. He thought that it would be easy because I was in so much pain. As he was...raping me, I grabbed whatever I could reach and I hit him on the head. He was so shocked... after the first few times, I had stopped fighting; it was easier and less painful that way. There was so much blood...I hit him again and again until he rolled away from me.\"\n\n\"Baby, are you sure that you killed him? According to Hans and Nathan; we can only die by decapitation or a direct stab into the heart.\"\n\nNadine cleared her throat and wipe at her wet face.\n\n\"I.... I stabbed him in the heart with his knife. I watched as the blood ran from his body, so yes; I'm sure. I don't remember what happened next. When I came to, I was at Hans' home and the rest you know. Until Harry, I had never hurt anyone. I even hated killing the animals that we used for food.\"\n\n\"Dina, the man was hurting you; they were going to leave you to die. Hell, they did leave you to die!\" Leon exclaimed. \"You were defending yourself.\"\n\nNadine closed her eyes. She could see the blood as it poured from Harry's chest. She saw herself stabbing him not only in his chest; but his groin until she was exhausted. It was a memory that she only just remembered. For the first time since she stumbled into Hans' property, she allowed herself to grieve not only for herself; but her family as well.\n\nLeon had one more question but he waited until Nadine had calmed. He pulled her as close as he could and then covered her much smaller body his symbolically telling her that she was safe. When she stopped crying, he asked the question.\n\n\"Dina, do you know what happened to the rest of them?\"\n\nNadine shrugged.\n\n\"I don't know. I think Papa found and killed one of them.\"\n\n\"Alright, you don't have to tell me anymore.\" Leon soothed.\n\nNadine clung to Leon and started to cry again.\n\n\"If I had only listened....\"\n\n\"It would have made no difference.\" Leon said. \"They had already targeted you. That's why they sent Nell to befriend you. Baby, it wasn't your fault.\"\n\n\"I keep telling myself that.\" Nadine said. \"But even after all of this time; I don't believe it.\"\n\n\"Well now you have me to tell you and I'll say it a thousand times a day if I have to.\" Leon said hugging her tighter. \"Dina, it wasn't your fault, it wasn't your fault...\"\n\nLeon lost track of how many times he whispered those words against the top of her head. He kept repeating them long after her breathing deepened and slowed to nothing.\n\nAs he closed his eyes; he wondered where the bastards who hurt Nadine were.\n\n********\n\nA month later, Nathan and Louise were headed back to Pittsburgh so that Nathan could see the house. They checked in at the hotel and called Gene.\n\n\"You're here?\" he asked surprised.\n\n\"We just go in.\" Louise replied. \"Is it too late to meet for dinner?\"\n\n\"Tell me where.\" Gene replied. \"Preferably someplace that doesn't serve alcohol.\" He added. \"I don't trust myself yet.\"\n\n\"Isn't there a Denny's or an IHOP near you?\" Louise asked.\n\n\"There's an IHOP just down the street... can you give me an hour?\"\n\n\"That's perfect.\" Louise replied. \"Gene, we are so proud of you!\"\n\n\"Thank sis... for everything.\"\n\nGene was already at the restaurant when they got there. Both Louise and Nathan were surprised at how good he looked. His face that had been thin and gaunt had filled out, the slight paunch that he had carried was gone and he had bulked up.\n\n\"You look good.\" Nathan remarked as he extended his hand to Gene.\n\nGene surprised by the gesture took Nathan's hand, shook it and then hugged Louise.\n\n\"How are you doing?\" He asked her.\n\n\"We're good.\" Louise replied. \"You look great.\"\n\n\"Thanks... Leon had weights at his apartment and he was right; it helps.\"\n\n\"Are you still going to your meetings?\" Nathan asked.\n\n\"Every day.\" Gene replied. \"Sometimes I go twice a day and I meet with or talk to my sponsor at least once a day.\"\n\nNathan nodded and smiled in approval.\n\n\"We are proud of you.\" he said. \"I haven't received a proposal from you yet.\"\n\n\"No... I wanted my head on straight before I did that.\" Gene replied. \"Can I ask a favor?\"\n\n\"Of course.\" Nathan replied curious as to what the favor could be.\n\n\"If my proposal is shitty; tell me. I don't want any favors.\"\n\n\"Agreed.\" Nathan replied. He was beginning to like Gene. The man that he was supposed to be was slowly emerging.\n\n\"Thanks and on a positive note, Dana and I are talking again. It's way too soon to know where we're going; but at least we're talking.\"\n\n\"That's good news!\" Louise said genuinely happy. She had a feeling that things between Dana and Gene were going to work out.\n\n\"Can you meet us at the house tomorrow night?\" Nathan asked.\n\n\"I can meet you during my lunch break if you want.\" Gene replied. \"That way you can see where things are.\"\n\n\"Evenings are better.\" Nathan replied. \"Is seven too late?\"\n\n\"Ummm no... Lou do you still have a key?\" Gene asked. \n\n\"I brought it with me.\" she replied.\n\nNathan paid the bill but Gene insisted on leaving the tip.\n\n\"It's funny how there's money if I'm not buying beer.\" He remarked as he left the tip on the table.\n\n******\n\nGene got to work bright and early. He had several leads to for potential clients. If he could get one of those, Bartlett would get off of his ass and leave him alone. Gene looked at the calendar; he had less than a week to land a client. If he didn't.....\n\nBut he had a client...\n\n\"Fuck.\" Gene muttered.\n\n\"Need I remind you that you have less than a week to come up with a client?\" Bartlett said from Gene's office door. \"I'm really beginning to wonder about the Sinclaire letter. How is it that you came by it?\"\n\nGene bit his tongue until he tasted blood. He refused to be baited by his supervisor. A thought occurred to him as he watched and listened to Bartlett gloat and taunt him.\n\n\"Are you familiar with the employee handbook?\" He asked.\n\n\"What of it?\" Bartlett snapped.\n\n\"I seem to recall a section that talks about harassment and a hostile work environment.\" Gene replied his tone cool and controlled. ",
        "\"I haven't been harassing you!\" Bartlett snapped. \"It is well within my rights to push you to produce.\"\n\n\"Interesting.\" Gene mused. \"I know for a fact that Francesca hasn't brought in a new client for longer than I have. Is she on probation too? I don't see you stopping by her office to remind her that she hasn't brought in any new clients... unless you're harassing her in a different way perhaps?\"\n\nGene had just realized something. He didn't have to take anyone's shit and that included Bartlett's. If he lost his job, the Sinclaire account would go with him.\n\n\"Now, unless you're going to put Francesca on probation under the same terms as me, then get the fuck out of my office and leave me the fuck alone so that I can do my job. If you insist on screwing with me, I have human resources on speed dial.\"\n\nBartlett's face turned beet red and Gene could see the muscles in his jaw clenching in anger. Finally, Bartlett turned on his heel and walked away without saying another word. Gene watched as Bartlett went into his office and slammed the door. He went back to making his calls. If he had no one by the end of the day; he would...\n\n\"No I won't I still have a few days.\" He told himself.\n\nAs the day wore on, Gene could sense Bartlett watching him and realized that he was going to find a way to fire him.\n\n\"Son of a bitch.\" He swore under his breath.\n\nBy the end of the day; one of the contacts had agreed to invest with him. it was a small amount; but it met the criteria that he bring in a new client. He emailed the proposal to the client and waited for the client to send the e-signed confirmation to come back.\n\nWhile he waited, he printed off a copy and put it in a locked drawer. He would meet with the client in a day or two and give him his paper copy of the signed proposal. On a whim, he downloaded the proposal and all of his work on a flash drive. He didn't trust Bartlett.\n\nA quiet ding alerted him that he had mail. \n\nGene printed three copies of the signed document, checked the time stamp on it. He locked two away copies and left to take the third one to Bartlett. He looked the clock and cursed. He was supposed to be at the house. He would make it quick and be on his way. Louise and Nathan would understand.\n\nIt occurred to him that not long ago; he wouldn't have cared if they understood or not. As the days passed, he was finding that even with the temptation to drink; he was beginning to like himself. As he got closer to Bartlett's office; he was surprised to hear a familiar voice.\n\n\"I'm Nathan Sinclaire and this is my wife Louise.\"\n\nGene stopped at the door shocked. Anger set in and then was gone. They had every right to be at the office. It wasn't unusual for potential investors to drop by. He tapped on the door and stepped in.\n\n\"Gene!\" Bartlett said jovially.\n\nGene wanted to punch the fake smile from Bartlett's face. \n\n\"Hi Gene.\" Louise said. \"We wanted to see if you needed a ride to the house.\"\n\nBartlett face lost the fake smile and confusion replaced it.\n\n\"Gene is my brother.\" Louise explained when she saw Bartlett's confusion.\n\n\"You really know them.\" Bartlett murmured.\n\n\"I told you that I knew them.\" Gene replied. \"I didn't have to tell you how I knew them.\"\n\nNathan watched the interaction and knew that there was an issue between the two men. He looked at Bartlett and didn't like the barely concealed jealousy and greed that he saw on the man's face.\n\n\"Mr. Bartlett.\" Nathan said drawing the man's attention away from Gene. \"I would appreciate it if no one except Gene handles my account.\"\n\n\"Mr. Yancy is on probation and part of that is my approving his proposals.\" Bartlett replied.\n\n\"How much longer is the probationary period?\" Nathan asked.\n\n\"It ends this Friday at the end of the day and he has to have a new client by then.\" Bartlett replied.\n\n\"That's what I was coming to tell you.\" Gene said with a smile on his face. \"I have a new client. He's already e-signed the documents.\"\n\nBartlett seemed to forget that Nathan and Louise were in the room as he demanded to see the document. He scanned the papers and sneered.\n\n\"You call this an investment?\"\n\n\"You didn't stipulate an amount.\" Gene replied. \"You said that I had to bring in a new client and that's what I did.\"\n\n\"B...but... this wasn't worth writing up!\" Bartlett stammered.\n\n\"I met your criteria.\" Gene said his voice cold. \"I fucking dare you to renege.\"\n\nHe too had forgotten that they weren't alone as he stared down at Bartlett.\n\n\"This is my new client. As far as I'm concerned, my probationary period is over and I'm quite sure that Mr. Carlisle would agree.\"\n\n\"I'm glad to hear that your probation is over.\" Nathan said. \"Perhaps we can meet and talk about that proposal.\"\n\nBartlett put his fake smile back on his face.\n\n\"Welcome back. Now if you will excuse me, I'm late for an appointment.\"\n\nGene stepped back.\n\n\"I want it in writing before you leave.\"\n\nFive minutes later, he watched Bartlett send an email to human resources ending his probation. Gene knew that he now had an enemy who would do what he could to fire him. In the meantime, he planned to enjoy his victory.\n\n**********\n\nGene watched as Nathan walked around the outside of the house not understanding how he could see anything.\n\n\"How can he see?\" he asked Louise.\n\n\"He had very good eyes... Gene, I'm proud of you. You could have used that letter to keep your job; but you didn't.\"\n\n\"That isn't entirely true.\" Gene replied. \"I showed him the letter in order to get the probation. Bartlett was ready to fire my ass when I got back. I wanted to wait until I was on firmer ground before I presented you and Nathan with a proposal.\"\n\n\"I'm ready to look inside.\" Nathan said.\n\nWhile Nathan looked at the house touching the walls and baseboards, Louise looked at the house too. It was from a completely different perspective. The house had a mixture of bittersweet memories for her. She started in the one place where she had always felt at peace; the kitchen.\n\nShe touched the old stove on which she had created and cooked so many meals. She opened the oven and saw that it was as spotless as she had left it.\n\n\"Would you like to keep it?\" Nathan asked from behind her. \"I could design the kitchen so that it stays... in fact, we can equip it with the same appliances. I'll have someone come out and do any repairs. Is there something that your mother would have wanted?\"\n\n\"A dishwasher.\" Louise replied. \"And a bigger kitchen.\"\n\nNathan looked around the kitchen with a practiced eye. \n\n\"We can actually enlarge all of the rooms. The entire electrical system needs to be updated as does the septic system and the heating and cooling systems. The best and easiest thing to do would be to tear the house down.\" Nathan said. \"We'll use as much of the original material as possible, but sweetheart; there's a lot of structural damage partly due to termites.\"\n\n\"I understand; do what you think best.\" Louse replied.\n\n\"What's back there?\" Nathan asked looking at a door to the rear of the kitchen.\n\n\"The laundry room and over there is where the water heater is.\" She replied. \n\n\"There's a nice sized back yard.\" Nathan said. \"We have plenty of room to expand... I'll have Leon get his friend to start working on the permits. This is going to take a while because we won't be able to work at night and Gene won't be able to stay here.\"\n\n\"I can stay at Leon's apartment.\" Gene said as he entered the small kitchen. \"I'll put things in storage.\"\n\n\"Don't worry about that.\" Nathan said. \"We'll hire someone to do that. You keep concentrating on your recovery. Once the work begins I would like for you to keep an eye on things and call me or Leon with any concerns.\"\n\n\"How long do you think that it will take?\" Gene asked.\n\n\"That depends on how long it takes to get the permits.\" Nathan replied. \"Once that's done we can start tearing the house down. I can have the packing crew here on Monday... will that work for you?\"\n\n\"That's fine...Nathan, thank you for everything.\"\n\nLouise and Nathan left two days later. The moving crew had been contacted and Gene's personal belongings had been moved to Leon's apartment. Gene hugged Louise and kissed her cheek.\n\n\"I love you sis.\"\n\nHe shook Nathan's hand and held it realizing that neither Nathan nor Patrick had done anything to make him feel inferior. It had been his insecurities and jealousies that had done that. It was the same insecurity that had prevented him from being the man that his father had wanted him to be. Thanks to a trip to California, he was on his way to becoming that man.\n\nIt was too late for the big brother speech but not too late to say thank you.\n\n\"Thank you for being so good to my sister and to our family.\"\n\n\"Family is supposed to care for each other, are they not?\" Nathan asked.\n\n\"Yes... yes they are.\" Gene replied as a pang of guilt ran through him.\n\n\"Your family is my family.\" Nathan said. \"Part of being a family is to forgive and to accept that forgiveness.\"\n\nGene let the words set in and smiled. Nathan was right.\n\n**********\n\nThe next week passed without any feeling of foreboding, visions or voices. Louise and Nathan spent the week designing the nursery at the beach house and getting ready to start their cooking classes. Nathan was running the final background checks on their instructor and his assistant.\n\nHe looked over at Louise who was looking at paint and curtain samples. He thought that he could almost touch the glow that surrounded her. She was breathtakingly beautiful.\n\n\"What are you thinking about?\" Louise asked when she realized that she was being watched.\n\n\"I was thinking that everything that they say about pregnant women is true.\" Nathan replied as he stood and walked over to her. \"You're glowing.\" He whispered as he touched her cheek with one hand and her stomach with the other.\n\nHe closed his eyes and listened to the strong heartbeat of their child.\n\n\"You are loved and will always be safe.\" He said telepathically. \n\nLouise laid her hand on top of Nathan's adding her thoughts to his.\n\n\"We can't wait to meet you.\"\n\nThey both jumped and then smiled when the baby's heart rate accelerated as if telling them that the feeling was mutual. After several seconds, the heart rate slowed back to normal. Louise couldn't help but think about Barb and her baby.\n\nThe child that she carried was conceived in love whereas Barb's was the result of ... she didn't' know exactly what to call it. She worried for both Barb and the baby. Barb had always said that she never wanted children; it was something that she had never swayed on. \n\nShe hoped that as the pregnancy progressed Barb would grow to love her child. She also hoped that Thorne would accept and love the baby once he found out about it.\n\n\"Her choices are her own.\" Nathan said as he hugged Louise. \"All we can do is wait.\"\n\n\"I know.\" Louise replied. \"I know.\"\n\n*******\n\nBarb looked through her closet looking for something to wear for her impromptu meeting with Thorne. The little black dress that she wore that night that seemed a lifetime ago was still crumpled in the plastic bag that she put it in.\n\nShe couldn't look at it, but neither could she bring herself to throw it away. Now she looked at the bag. Before she could change her mind, Barb grabbed the bag and ran out of the apartment. She ran to the dumpster, hesitated and then threw the bag containing the dress in and walked away.\n\nShe went back to the apartment to change her clothes. She caught sight of her reflection in the mirror and stopped to look at herself. Her hands went to her stomach but didn't caress it and she didn't think loving thoughts. \n\nAbruptly, she turned away and she finished dressing. It was time to go shopping for a new outfit. \n\nIn two days, Thorne Blackwell was going to find out that she was pregnant."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "black female",
        "paranormal",
        "pregnancy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-16"
}