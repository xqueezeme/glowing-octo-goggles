{
    "title": "Flight Ch. 02",
    "pages": [
        "NOTE: Thank you to everyone who took the time to read my first chapter. I'm pumped you all liked it. This chapter might not be as in-depth as some of you might wish but I promise...we shall get there.\n\nShout to my ever amazing editor lil_meow6 &lt;3\n\n*****\n\n\"Mina,\" A voice said.\n\nI shook my head slowly, utter disbelief surging into me. I had thought I would have more time. Why couldn't Derrick have confessed sooner?\n\nArcher's second-in-command and close friend was leaning against the exposed brick wall, a cup of to-go coffee in his hand.\n\n\"You can't be here.\" I whispered at him.\n\nTiller gave me one of his beautiful smiles. He looked as relaxed as any professional criminal could. He was darker than the last time I had seen him and his brown eyes were studying me with that stupid playfulness he had always been able to coax out of me.\n\n\"I have to give credit where its due and I commend you on staying gone for as long as you did.\"\n\n\"Wasn't for a lack of trying.\"\n\nI glanced behind me and saw that the front door had been shut, which meant Archer hadn't just sent him.Tiller was more than capable of getting me back on his own but Archer was always paranoid.\n\n\"I'm not going back,\" I said gritting my teeth.\n\nTiller pushed himself away from the wall, straightening his black bomber jacket. \"Well, if you're not going back then I'm not going back because if I show up there without you he's going to put me in the ground.\"\n\nI tsked at him. This was a lie and we both knew it. He would come get me himself.\n\n\"What have you done to my apartment? Where are my things?\"\n\nTiller took another swig from his coffee and I really wanted to slap it out of his hand. \"I had orders to strip it. Your lease has been taken care of even though it wasn't really a lease. You've got some interesting friends.\"\n\nI narrowed my eyes at him. \"What does that mean?\"\n\nHe pointed a finger toward the floor. \"Ricci.\"\n\nI was about to ask him what he was talking about when his phone rang. He pulled it out of his pocket and I heard the slide of an answer.\n\n\"Yeah?\" He turned slightly away from me.\n\n\"Yes, she's here with me right now,\" He said looking back.\n\nThe panic that had been simmering under our polite conversation got the better of me. Even though Archer was on the phone it was still too close.\n\nMy skin heated with the memory of him forcing obedience on me. It was too much. I turned on my heel and bolted for the door.\n\nI heard Tiller curse behind me. I ripped open the door and flew down the hallway, almost slipping on the stairs. I could see the light coming under the outside door and pushed myself to run faster.\n\nBut I realized I didn't hear Tiller behind me.\n\nWhen I crashed through the door, I came up short. A lithe figure was leaning against the wooden balcony, smoking a cigarette.\n\nI remembered those hooded eyes and the blankness that clung to him. He tilted his head at me in a silent greeting and took a draw on his cigarette.\n\nIt was Kazuya, who didn't look happy or pissed to see me either way.\n\n\"Oh yeah. He came,\" Tiller said behind me shutting the door.\n\n\"Listen Mina, I don't have to tell you what's happening. You know. This shit is inconvenient for everyone. So, I need you to get the fuck in the car. I'm sure you already know Kaz and I aren't the only ones here.\"\n\nI looked at the shiny new Rover that hadn't been here before.\n\nTiller didn't say anything while I tried to compose myself. Kazuya had never spoken a word since I had known him.\n\nI didn't have a choice, I knew that. If Tiller and Kaz didn't succeed it would be Archer. If he was still the same, I knew his fury had only worsened. Archer didn't let things go. Not when he could get even. If he had to come get me, I would regret it worse than if I had just gone.\n\n\"I need my things.\" I said in a low voice, finality hurting me.\n\n\"We've already taken care of it, Mina. We're having them sent out.\"\n\nMy face flashed red and I felt indignation at them going through the items I had collected to claim my identity back.\n\nI tilted my chin in defeat and Tiller nodded. I walked down the steps that I had been bitching at Ricci to replace. He was going to kill someone one day.\n\n******\n\nI leaned back against the seats that were warm and smelled new. The sky had gotten darker and Tiller had told me to try and get some sleep before we got on the plane. It was hard to relax with a pair of cuffs around my wrist.\n\nTiller had put them on me when I got in the car and he hadn't looked apologetic about it.\n\nWhen we pulled away from the building there were two other SUV's that pulled away in tandem with us.\n\nOh yes, Archer was paranoid. But I guess that had kept him alive.\n\n\"How pissed is he?\" I asked into the space.\n\nI couldn't see his eyes because his black hat, with a gold owl, was pulled too low.\n\n\"It's Archer,\" he said simply.\n\n\"Yeah but he's had almost two years to get over it,\" I snapped.\n\n\"Mina, if he had gotten over it we wouldn't be here,\" he said plainly.\n\nI stopped talking after that because if I didn't I'd start screaming.\n\nWe drove through the night and I didn't pay attention to where we were going or highway signs. It wouldn't matter. Even if by the grace of God I got free again, I wouldn't be able to come back here.\n\nWhen we arrived at the private airport, everything was lit up and ready to go. The people that had followed us pulled in but didn't get out.\n\nKazuya got out of the passenger side, his black jacket going crazy in the wind. He trotted toward a female stationed at the bottom of the jet stairs.\n\nTiller turned to me from the driver's seat, \"Mina...things are different now,\" he said in a neutral tone.\n\nI didn't answer because I didn't care.\n\n\"This isn't two years ago. Don't push him.\" With that, he took the keys out of the ignition, got out and opened the door for me.\n\nI couldn't imagine Archer changing from the prodigy I once knew. He had been unstoppable. He only slowed down when he was focusing his energy on me.\n\nThose were the times I thought I'd lose my mind.\n\nI settled into the plush seat of the jet, thankful when Tiller took the cuffs off. A pretty flight attendant in a sleek black suit with a gold embossed crown on the lapel smiled at me. Her lips were a bright red, perfectly applied, and her smile was almost stupid.\n\nShe was an employee of the organization.\n\n\"Welcome, aboard,\" she said handing me a gray throw-blanket and pillow, \"if there is anything I can get you, please let me know.\"\n\nBehind her, I saw Tiller give me a sly smile. I rolled my eyes at him, nodded at the attendant, and settled in.\n\nI closed my eyes and tried to fight the dread I felt. Archer's unpredictability made me unpredictable. I never reacted the way I wanted.\n\nIt was way too easy for him to turn me into someone I wasn't. It was harder to fight my way out.\n\n******\n\nKora laid in her bed, tracing the feather on her thigh that still had a beautiful vibrancy.\n\nShe should be sleeping but she her stomach was in knots and her insecurity was consuming her. She had just found her footing, just found a life that wasn't wrought with her walking an invisible line that she would never see. It had been unfair that she had been expected to follow rules that were fluid and enigmatic.\n\nShe had been wrapped around Archer, his warm skin under her fingers and she had been watching him sleep. He had used her thoroughly and carefully like she was fragile and wholesome. He made her feel like she was the only thing that mattered, unlike like her former master.\n\nArcher had nipped at her and indulged her and loved to hear her laugh.\n\nHe had quickly fallen asleep and she had been happy to see it. He hadn't been sleeping very well lately and she hadn't minded that he kept her in a firm grip. When his phone rang, she frowned into the darkness and considered shutting it off but felt she would be overstepping herself. Archer had come awake with a subtle shift that was unnerving.\n\nHe detangled himself from her and answered; his voice smooth as if he hadn't just come awake, \"Tiller.\"\n\nShe heard a low voice but couldn't make out anything. Not that she should have been trying but she couldn't help the habits that had been forced into her. Be useful.\n\nEven if she hadn't been looking at Archer, she would have missed him tensing like he wanted to capture something.\n\n\"Tiller, are you sure?\" he said his voice precise.\n\n\"Why the fuck was she there?\" he snapped, a plethora of emotion wafting from him. Out of habit she tucked her arms closer to herself. Archer must have noticed because his hand smoothed over her hair.\n\n\"What do you think,\" he said harshly, getting out of bed and standing in front of the glass wall that made up the back of his suite, \"Dispatch a surveillance team\u2014tonight. I want confirmation in twenty-four hours. I expect a full detail on everything and everyone she's been involved with.\"\n\nTiller must have given him an answer that pleased him, \"Good. Get the fuck out there. Clean up whatever you need to, threaten whoever but secure her\u2014do not let her get away. Oh, and take Kaz. He needs a fucking vacation.\"\n\nShe heard Tiller's infectious laugh before they hung up. Archer didn't come back to bed right away. She could see him staring at his phone. The ghost of his past hung around him and she felt innate sadness.\n\nBut Kora was also excited. Excited because she could put another piece of him into place.\n\nA piece that Mina firmly had a grip on.\n\n*****\n\nThe sea of red was the only thing I had missed. It was alive and had much more to tell than I did. The plane started its descent into the landscape happy to welcome me back. Dusk still had a spell over the area that I still, years later, couldn't name.\n\nAnyone who accidentally stumbled into the desert would never be able to name it.\n\nThe plane landed without any issues and I wished that it had crashed directly into the strip, killing us all in a beautiful ball of fire.\n\n\"Mina, you're not going to your death.\" Tiller said landing in the seat beside me, a shiny plastic cup in his hand.\n\nThe flight attendant's perfume wafted from his black cotton shirt.\n\n\"Tiller, stop trying to make me feel better when you know I've fucked up.\" I mumbled wrapping the throw blanket into a mass. I didn't want to talk about this. I wanted to keep my brain on autopilot so I never had to talk about it again.\n\nHe let out a heavy breath and took a generous swallow. \"To be fair? It's not like he doesn't understand. He doesn't want to but I think he'll get there.\"\n\nI turned still not wanting to talk about Archer.\n\nThe captain made an announcement that was wrapped in courtesy and invited us to enjoy our weekend.\n\nTiller stood up motioning to Kaz who throughout the whole plane ride kept his wall of silence. He stood up and walked ahead of us, no doubt to make sure that my transfer to and from the plane went off without any complications.\n\n\"Mina...just remember what I said, okay? I know you think your life isn't fair but Archer isn't the only one you ran out on.\"\n\nI looked at him. \"What is that supposed to mean?\"\n\nHe slid his jacket on. \"It means that you running didn't just fuck with Archer's life.\"\n\n*****\n\nTiller refused to answer any of my questions. By the time we arrived at the coded gates that protected their private compound, I was anxious and pissed.\n\nHow the hell was my well-deserved freedom unfair for anyone else? I did what any normal, functioning person would do. Outside the fucked-up culture within these gates, that is.\n\nThe organization, from what I remembered, was ushering in some big money. Money that Archer and his men had helped secure. I knew that Archer wasn't the big bad boss. I had met the boss momentarily and he was strangely a jovial man. Or maybe between the champagne and Archer working me out beforehand made it seem that way.\n\nTo call it a compound wasn't entirely apt. It was more of a community built to best suit the surrounding environment. That involved anyone who was working the frontlines with security and enforcement.\n\nI didn't think too hard about what they had to enforce but I wasn't stupid.\n\nThe different colors of the desert bled together and it wasn't enough to distract me from the fact that I recognized it. I recognized parts of the compact community that had burned themselves into my everyday life, two years ago. I could see the community square built with stones picked from the earth and placed into swirling patterns.\n\nI could see it clearly in my head along with the multicolored stained glass pieces placed in with the stones. I remembered how the sunlight made them dance brightly for the children of the soldiers that had families here. There was even a little general store built from rich brown logs and terra cotta. They had a small chapel cloistered on top of the higher part of the community. The only place that sat higher...was the Archer's home.\n\nAnd as it came into view, my breathing constricted like he had reached into my chest and squeezed.\n\nIt wasn't like everything else. It was the seat of his power and it was as sleek and cold. It was built into the side of the rocks and was a modern god of steel and glass. The car took us into the garage constructed underground and the darkness was broken up by the bright flashes of lights bolted at even intervals.\n\nThe light highlighted the planes of Tiller's face, all playfulness gone. Kaz had disappeared into nothingness like he didn't exist. I wanted to close my eyes because it was like falling back down into a universe that I could not quite figure out. I would find some semblance of stability and before I could take a breath it would all crumble beneath me and I'd be falling again.\n\nThe car pulled into an industrial parking garage where shiny black cars and SUV's sat pretty until they needed to be used.\n\nThere were a small group of men waiting, their faces serious, their ties all straight.\n\n\"Is this really necessary?\" I asked Tiller.\n\nTiller smirked but didn't answer me, \"Archer wants you to go see Matilda before you get settled in for the night.\"\n\nMy heart leapt into my throat. \"Is...he not here?\"\n\nHe didn't answer.\n\nI chewed on my bottom lip, \"Why am I going to see Matilda? I hate her.\"\n\nTiller made a noise. \"We all do but she's a good physician.\"\n\n\"Who despises anything that breathes. I don't need to go see her. I'm perfectly fine.\" I crossed my arms like a petulant child.\n\n\"Not my call. But I'm sure you guessed that.\"\n\n\"Of course. I'm a thing again, right? Things have to be kept.\" I said nastily and Tiller shut the car off.\n\nHe looked at me. \"I don't know what to tell you, or if there's anything I can tell you...but I missed you.\"\n\nI looked at Tiller, surprised but felt stupid because I shouldn't be. I had liked Tiller and Kaz in his quiet way. And then it hit me. His comment about me messing with other people's lives.\n\n\"Tiller,\" I exclaimed, \"Sati! Is Sati still here?\"\n\nA shadow fell over him. \"Mina...\" he said his voice clouded in unsaid words.\n\n\"Tiller?\" I asked, nervous Sati was the one person I had truly missed. She had been a brilliant voice in the chaos that overtook me when I had first been brought here.\n\n\"She's here,\" he said hesitantly, \"but I don't know if you'll get to see her.\"\n\nWith that he got out of that car and jogged over to the one of the men.\n\nWhat did he mean I wouldn't get to see her? Was Archer going to be that cruel?\n\nI didn't know what Archer could be anymore. It was like being stolen all over again.\n\n******\n\nKora punched in a code on the flat keypad outside a door to a room that she wasn't supposed to enter. For two years, she had been sneaking into this room that Archer told her never to go into. If he caught her she would be punished.\n\nShe was a good girl because it pleased her to be. She didn't like to be difficult and she didn't like to put Archer in a hard position. But she couldn't help herself.\n\nArcher was attending to business that he hadn't disclosed\u2014not that it was her place to ask. He was in a dark mood, so she had done her best to stay out of his way while he had made sharp phone calls.\n\nMina was set to arrive at soon and she wanted one last time to have this room to herself.\n\nThe door slid closed behind her and she leaned against it looking around.\n\nThe room had belonged to Mina when she had been here and after she ran, Archer had closed it off. He didn't even let Lola come in and clean no matter how much she clucked about it under her breath.\n\nThe room was like a time capsule that fascinated Kora.\n\nAll of her stuff was still littered around from the last night she'd stayed here. There were gorgeous evening gowns thrown across the edge of the bed. They sparkled and had expensive cut lines that told Kora they had been designed for Mina. Her makeup palettes were still open. A cap from a MAC lipstick was by the leg of the chair like she had been in a hurry to get going.\n\nKora picked up a small, fragile perfume bottle that had little porcelain flowers placed on it. She rotated the bottle and watched the liquid coat the sides of the glass.\n\nShe put the bottle back down, looking around the room she had spent much time in when she had first got here. When she had been rescued from the hell she had been in before.\n\nMina's laptop was still on the desk that had a cat pencil holder. There were sticky notes and Polaroid pictures of the desert on a board above it. Her clothes were still on hangers and Kora couldn't count how many times she had put on the plaid long sleeves or Aztec patterned fleeces. Or how many times she had picked up the necklaces and bracelets that had polished stones crafted into them.\n\nShe walked over to the bed and shoved her hand between the mattresses and pulled a leather covered journal out. She knew there was a blood red journal with a golden buckle and a journal with Celtic tree but the plain brown one? That one pulled Kora back over and over again.\n\nThere was something fundamentally wrong about what she was doing. The words on the pages were gorgeous and private but she honestly hadn't expected Mina to ever come back. Now? It was too late and she felt that the journal was hers. That this room was hers.\n\nKora got on the bed where the sheet and quilt had been pushed back.\n\nShe had spent so many odd hours in here dissecting and trying to figure out why? Why had Mina been able to keep the root of herself when Kora had not?\n\nShe traced the ink that had been pressed too hard into the pages conveying whatever emotion Mina had been feeling.\n\nShe highly doubted that Archer knew about the journals and as she flipped the pages that she had memorized by heart, she wasn't going to tell him.\n\nEven if that made her a bad girl.\n\nArcher would be enraged if he knew what Mina wrote in these pages. The words that he didn't get to know...the part Mina had cloistered away and kept when so much was expected to give. That's what Kora concentrated on the most\u2014those words that gave Mina away if Archer had bothered to look.\n\nNo wonder he had been driven to get her back.\n\nAnd Archer was very demanding and she hadn't been able to keep a thing from him. He could peer into her soul and pull the words out of her throat.\n\nKora knew all about it. Her existence had been stolen, warped, and given away.\n\nWhat did Mina have that she didn't?\n\nShe looked at the clock that sat on the bedside table. She should probably get going.\n\nSmoothing the cover on the journal, she couldn't part with it. Sticking it under her shirt, she said goodbye to the room that had given her space to exist.\n\n*****\n\n\"Well...look who decided to grace us with her presence,\" Matilda, the Wicked Witch of the South, said as I was led into the bright room.\n\nI could smell the plastic and disinfectant and cringed. Matilda was a beautiful woman with blood red hair piled on top of her head.",
        "Hello, Matilda. I would say I'm excited to see you but I left my cross at home and I'm feeling vulnerable.\"\n\nHer sharp smile never wavered, \"I'm going to let that go because you should never kick a dog when she's down.\"\n\n\"Go fuck yourself,\" I said just as sharply and was happy to see her mask crack.\n\n\"I'm going to report that disrespect to Archer.\"\n\nI tried not to let that bother me. Being back in an environment where I was answerable to someone.\n\n\"I told Tiller that I didn't need to be here. I'm fine.\"\n\nMatilda gave me a mocking look, \"As if anyone cares what you say? Now take your clothes off. You need a physical exam\"\n\nI stiffened glancing at the men Tiller had left me with. Matilda noticed my gaze.\n\n\"Oh, don't be shy, little girl. I would think this would be something you're used to. And yes, if you're contemplating on fighting me, we will forcibly remove your clothes. I'm not giving you another chance.\"\n\nHaving dealt with this psychopath before, I begrudgingly started to strip my clothes off. I felt slightly embarrassed because I hadn't been very strict with how I treated my body.\n\n\"Underwear and bra too and hop up on that table.\" She said snapping on lavender colored gloves.\n\nI did what she asked.\n\nMatilda poked and prodded my body making rude noises at random times and stopping to take notes on her clipboard.\n\n\"You've lost weight,\" she said blandly and I didn't know what to say so I kept my mouth shut.\n\nShe pulled out my arms, looking at the crooks and then bending them to look at my forearms.\n\n\"Have you been abusing any types of drugs?\" She said pulling my fingers apart to look at the skin.\n\n\"No.\"\n\n\"Are you lying? We're going to take your urine and blood and if you're lying it will go in my report.\" She said that as if I was the scum of the Earth and could not be expected to tell the truth.\n\n\"I don't care what you report.\"\n\nShe released me and made another note. \"Slide onto your back and put your feet in the stirrups.\"\n\nA nervous energy overtook me and I glanced at the door. One of the men responsible for me for the moment, raised an eyebrow and made a point to lean against the door.\n\nThe paper under me crinkled, loud and obnoxious in the room.\n\nAs I laid back, I focused on the circular light above me that let off noticeable heat. It was going to burn out my retinas if I didn't stop but at least it gave me something to look forward to.\n\nI heard Matilda snap on another pair of gloves and then she was pulling me further down on that table. A cold instrument forced its way into me and I fought the need to squirm away from her. I gritted my teeth to keep from making a noise.\n\nThere were a few clicks and I felt an uncomfortable pinch inside of me.\n\nMatilda murmured something and then, thankfully, finished up. She stood and slid the gloves off.\n\n\"Have you been on any type of birth control since you left?\"\n\n\"That isn't your business.\"\n\n\"I'm going to put you back on birth control. You'll be started on the pill you were prescribed before. If you wish to change it because of how your body reacts, though your charts don't indicate anything from before, you'll need to speak with Archer,\" She said ignoring me altogether.\n\nI closed my eyes momentarily, fury burning in my chest.\n\nIn a matter of hours I had once again been reduced to whatever Archer would want me to be. He would dictate what medicine I would take, when I slept, woke up, my food.\n\nMy pleasure.\n\nGod, I had just started to claim my own autonomy. I had eaten cereal for dinner and cake for breakfast because he wasn't there to stop me. I had slept in when I could and cut my hair the way I liked it because I could.\n\nAnd now I had Satan in heels telling me even any possible birth control change would have to come from Archer.\n\nAt that point, I refused to answer anything she asked me. I let her draw my blood and peed in a cup. When she finally handed me a stack of white cotton clothing, I was relieved.\n\n\"Take this,\" she said handing me a little plastic cup of colorful pills and a cup of water to wash them down.\n\nAs I was planning to leave, I heard Matilda behind me, \"You deserve whatever he does to you.\"\n\nProbably.\n\n*****\n\nMy God. My room hadn't changed. Archer hadn't changed anything.\n\nI stepped cautiously into the room as if a bomb was going to go off underneath my feet. The last time I had called this home it had been the summer before my junior year of college. I still hadn't been able to budget or put my clothes in my hamper but I could name every popular vine that had come out that year.\n\nIt was no surprise Archer had been able to wrap me around his finger. He had targeted me at the perfect time.\n\nI walked over to the feminine bureau and opened the bottom drawer. It was still there. My favorite college sweater that I had packed on the vacation I thought would be nothing but beautiful nights under the desert sky.\n\nAnd it had been. Until the end. It had been one spur of the moment hiking trip before we set back to campus. I had been the only one who hadn't made it back. I had been promised the others had been set free. I don't know if I believed that. They hadn't made a sound when they got into the real world. Hadn't stirred up a fire for my rescue.\n\nThey had to be dead. It would be cruel for them to be alive.\n\nI stuffed the sweater back in there and slammed the door shut.\n\nGod, I had been a slob. Archer hadn't been happy with the mess but he had been giving me leeway because I had been...compliant.\n\nI wasn't going to clean it now. I wasn't going to be that pliable little college girl he hunted and put on a shelf for everyone to see.\n\nI was so close to taking the mess from sloppy to disastrous. Instead, I pushed aside the gowns I had been fawning over that night so long ago, and I crawled into bed.\n\n*****\n\nI came awake, the darkness giving way to the brilliant morning.\n\n\"I know you're awake,\" he said, his voice taking command of the whole room.\n\nI didn't wait. Before my brain had completely processed what was happening, I was on my feet. It wasn't the most stable position to be in but it seemed like the right thing to do. To be above him.\n\nHe was sitting on the gray, tufted, ottoman that sat at the end of my bed.\n\nThe sight of him completely took my breath away. It hooked me under my ribs and tried to pull me to him. All the old habits that had been mercilessly branded into me by way of his \"lessons\" almost made me get off the bed so I could go kneel at his feet.\n\nBecause there were consequences for not following the rules.\n\nHe was and wasn't the same. He wasn't in his all black. His clothes had some variation that spoke to the power Tiller said he now held. He wasn't wearing a suit jacket but his dress shirt melded to his body, showing off the strength that he had harnessed in the brutal environment of his profession.\n\nHis black hair that used to be hidden under black Adidas hats was now GQ perfect. I could smell the mint and forest scent of the cologne he had been wearing for years. God, how many times had the smell of him clouded my head? How many times had he forced his space into mine so that I would bleed into him?\n\nEven now, those memories made my body respond, heating my soul that had been so cold.\n\nHis presence in my room made me wet.\n\nArcher looked slightly amused but made no move to make me submit.\n\n\"Do you feel safe up there?\" He asked.\n\nI swallowed but refused to move. \"No. But I can still see you.\"\n\nArcher had something in his hands but the shadows were still giving us an atmosphere of being on opposite sides of a battlefield.\n\n\"Sit down, Mina,\" he ordered, the glint in his eyes a warning.\n\n\"No.\" I answered, pressing further against the wall and headboard. He didn't get to come in here and try to make me obey like a dog.\n\n\"You still act like a child,\" he murmured in a tone that indicated I was the problem.\n\n\"If I'm such a child let me go,\" I challenged.\n\nHe let out an amused noise. \"You would like that, wouldn't you? Did you enjoy your vacation?\"\n\n\"I would hardly call you hunting me into paranoia a vacation,\" I snapped.\n\n\"You seemed to be enjoying yourself,\" He said vaguely and I felt a moment of uncertainty. What did Archer already know?\n\nI thought back to my time out in the world and didn't think I did anything offensive to him. Then again, Archer's views of my independence clashed with mine. On those nights when I refused to heel he yanked it out of me.\n\n\"I was enjoying myself. I appreciate you taking it all away.\" I said angrily.\n\n\"Watch your tone,\" He said coldly. Calmly.\n\nThat was it. The stress of the being pulled out of my home and brought back to a world I had no idea how to control took over my muscles and spirit.\n\n\"No! No, I won't! What do you think was going to happen? That you were going to walk in here and I'd grovel at your feet! Fuck you, Archer.\"\n\nHe didn't react the way I thought he would, the way he had before. Before I never would have gotten away with that outburst. Now, Archer just observed me from his relaxed position. Still holding whatever it was he had.\n\n\"Of course I didn't. I'm not stupid, Mina. You've been enjoying yourself in the outside world, I get that. But I hope you understand that this means we're going to have to start over.\"\n\nChills came over my skin and I tried to pull air into my body. To make some retort. To let him know he couldn't control me.\n\nBut I couldn't.\n\n\"You can't do that...\" I said softly.\n\nArcher got up, slowly, unfurling with ease.\n\n\"You knew this was coming. You knew. You knew what would happen when you ran from me,\" he said coming a little closer. I counted it. He was five steps away.\n\n\"Did you honestly think I wouldn't run? How long did you expect me to be your fuck toy?\" I said my voice getting louder.\n\n\"Mina, I won't tell you again to watch your language. Do you understand?\"\n\nHis threat made me dig my heels deeper into the mattress, \"Are you going to give me my stuff?\"\n\n\"Do you think you've earned the right to have your things?\" He said in the most reasonable tone he had.\n\n\"I don't think you have the right to keep them from me.\"\n\nAnother step. Four now.\n\n\"I don't want you getting distracted by things you can't have.\"\n\n\"Archer...you don't have to do this. Please.\" I begged, not sure what I was begging for, or if this new Archer cared to listen to me.\n\nGone was fire that scorched every part of me and in its place was a coldness honed by circumstance.\n\n\"You ran from me, Mina,\" he said without emotion.\n\n\"You caged me, Archer.\"\n\nAnother step. Another internal reaction.\n\n\"You were never caged. Not the way you should have been. If you had been you would have never run. Do you know what that tells me? That you were lying the whole entire time.\"\n\nFuck. His words caused a thrill to go up my spine. Was he going to do this now? Had I expected him to go slow? I didn't think it was in my best interest to say anything.\n\n\"Do you agree, Mina? When I gave you every opportunity to tell me the truth? Instead, you chose to lie to me. And then...you ran.\"\n\nI could feel my heart pulsing in my throat.\n\n\"But we'll fix that this time. Your manipulative behavior is unacceptable.\"\n\nHe stepped closer, so close, I was afraid to make a move.\n\nI could see his beautiful face in the light of the rising dawn. He was angry.\n\n\"This time I won't make the same mistake. Starting now. Get off the bed and take your fucking clothes off.\""
    ],
    "authorname": "candyred3",
    "tags": [
        "non-con",
        "master",
        "slave",
        "reluctance",
        "submission",
        "runaway",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/flight-ch-02"
}