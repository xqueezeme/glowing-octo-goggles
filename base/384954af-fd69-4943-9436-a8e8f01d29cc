{
    "title": "The Society of Guardians Ch. 03",
    "pages": [
        "I spent a majority of the next morning in a trance with Arman going over my powers and limitations. Much of what I could do was related to the mind. I couldn't read minds directly, but I could alter what and how the mind perceived things. I was able to permanently remove one of their senses (sight, vision, hearing, smell, taste or touch). I was also able to make them sense anything I wanted... or not sense it. Obviously, I could also remove their voice. Not really a sense, but it's controlled by the brain, so it was within my capabilities.\n\nThe severe limitation to that is that I needed to touch them... and maintain contact if I wanted them to continue an illusion. That made it a little tricky, but still useful.\n\nMy touch could also provide a number of benefits. I could allow them to see and hear things they might not be able to. I could free the mind from various forms of control and/or addiction. I could also relieve the mind of all the pain and grief from traumatic events... Kinda explains why Tracy took such a liking to me. I must have helped her through her grief of that without even realizing it.\n\nAll in all, really kinda cool. I felt I could make a killing as a Faith Healer for addicts.\n\nOf course, that was if I needed money. Which it turns out I didn't. Evidently, a few generations ago one of my ancestors had created a Swiss Bank account to store the money passed down by the Society along with a few paltry things in an associated deposit box. Paltry things like coins, pottery and assorted artwork... As Arman put it coyly, \"artwork from some kid named Leonardo.\" Stuff like that... SHIT!!!!\n\nEvery so often, a member of the Society had added to the trove. Now, the account had twenty or so large boxes storing a wide array of valuables from as far back as the 1300's. But those are more emergency funds to be sold if needed. The bank account itself had a lot of digits. I contacted the bank, used the passwords Arman had given me and now I could access the account.\n\nCha-ching!\n\nTracy had flipped out when I told her. She'd gone shopping as soon as she could. I had no idea what she was getting, but I had the feeling I'd enjoy it too!\n\nWhile she was out, I went ahead and met with Arman again to work on more things. I had a good grasp of what I could do, Arman worked with me to get my muscle memory up to snuff. I had the knowledge of how to fight and my body was suddenly strong, but my mind needed to learn how to use all those muscles correctly. He went through several different exercises I could do on my own to practice. It was thrilling to realize the strength my body now had... and the coordination! I'd have to be careful doing the exercises in public as it would be obvious I was an exceptional being now. People just aren't supposed to be able to do that many one-handed, handstand pushups. Forget jumping fifteen feet in the air, or lifting a car, or... Yeah, it was kinda incredible! After growing up reading comic books and seeing superhero movies, actually becoming one... was a little... weird, I guess. It was awesome... But intimidating as hell! \"With great power, comes great responsibility\" from Spiderman kept playing over and over in my head. I certainly understood what he meant now. I was feeling it 100%!\n\nAfter working with Arman, I came back to the real world and went through the exercises with my real body. It was significantly more difficult than it had been in the Trance world. However, my body recovered incredibly fast. After exhausting himself doing an exercise, I'd pause breathing deep for a minute and I'd be just about fully recovered and ready for the next one.\n\nI'd been going for a few hours when I started to get worried about Tracy. I was certain it was nothing and I was just being paranoid like most parents. When Arman had warned me she might become a target, I understood it, but I hadn't really spent the time to explain it to her. That was definitely something I needed to do... when she got back.\n\nI had just pulled out my phone to send her a text when I heard the door open. Tracy walked in with a big grin on her face, carrying a gazillion bags.\n\n\"God! That was so much fun!! I've never been able to shop on an unlimited budget!\"\n\nI smiled at her and went over to help her unload. She dropped all the bags in the entryway with a sigh and met me with a kiss. I began to wrap my arms around her, but she pushed me away.\n\n\"Wait, wait...\" she grinned mischievously, \"I want to show you some things I bought.\" She picked through the bags for a moment grabbing ones here and there. She gave me a peck and headed toward the bedroom, \"Wait right there. I'll be right back.\" She strut away from me with an extra little wiggle to her hips. She was just wearing a casual pair of shorts, a loose t-shirt and a pair of flats, but she still made it look good... really good!\n\nI shook my head in amazement after she was out of sight. Glancing through the bags, I saw quite a few high-end designers and names of a few boutique stores that only sold them. There were a few bags that didn't have any label on them that had me curious.\n\n\"And no peeking at what else I have there!\" she popped her head around the corner, giving me a threatening look... smirking, but at least trying to be threatening!\n\nI laughed. Her timing was impeccable. I had just leaned down to look as she had spoken.\n\n\"Fine, fine. I'll wait for the big runway reveal.\" I snickered and went to the kitchen to grab a cup of water. I had just made it back in front of the couch when I heard her.\n\n\"Are you ready?\" she singsonged from the hallway.\n\n\"Probably not.\" I answered truthfully. \"But I'm sure my heart can take it.\"\n\nShe stepped around the corner and struck a pose. She was wearing an elegant black evening gown. It had a deep neckline that showed quite a bit of cleavage and a long slit she'd stepped a stocking-covered leg through. Her blonde hair was tumbling over her shoulder in a luxurious wave. She wore candy-apple red stiletto heels that accentuated her toned legs perfectly.\n\nThe cup of water I'd been holding dropped to the floor with a splash as I was thunderstruck by the sight before me. It was nearly empty, so it wasn't too bad, but it still made a mess. Especially, since I hadn't moved or even acknowledged that I'd dropped it.\n\n\"You're... Wow!... You look incredible!\" I stammered, still staring.\n\nShe giggled, \"you haven't even seen the best part!\"\n\nShe started walking towards me and reached behind her to undo the zipper. She stopped in front of me and wriggled her shoulders, letting the dress fall to a puddle at her feet.\n\nI swore my heart just about stopped. She was wearing a sexy red corset to match her shoes. It barely covered her nipples and the outside of her breasts. The neckline left her breasts completely open and a sheer mesh covered her tight abs, but it left her hips bare, except for the garter straps holding up her stockings. She stood legs a little more than shoulder-width apart and raised her arms up to lock her hands behind her head.\n\n\"You like, master?\" She smiled seductively at me, holding herself still to allow me to examine her.\n\nI took a deep breath, getting my heart going again, \"Damn, Tracy. You look good enough to eat!\" I wrapped my arms around her waist. She lifted her lips eagerly to meet mine in a hard kiss. Her lips and tongue were active, but her arms stayed locked behind her head. I pulled my mouth away, looking strangely at her.\n\nShe was biting her lip expectantly, while trying to look innocent... neat trick while she's wearing lingerie that would make a stripper proud.\n\nI raised an eyebrow, confused. \"What's goin-...\" My hands had slid down to grab her butt and felt something different... something hard, wedged between the cheeks of her ass. It wasn't one of her round butt plugs, it was a few inches long filling the crack of her ass.\n\nA smile crept across her face.\n\n\"What do you have there?\"\n\nShe raised her eyebrow invitingly, \"Mmmm! Why don't you find out?\"\n\nI kissed her lips as my hands felt along the object. I realized it was a plug, but the top was a handle that fit in your fist. I leaned forward as my fingers worked around it, wiggling it around in her making her moan in my ear. I slowly pulled on it, ramping up her moans.\n\n\"You better get me ready for this,\" I whispered in her ear.\n\nShe dropped her arms to my waist pushing my sweats down while she bent at the waist, keeping her legs straight and her ass in the air. I leaned over her body and continued to pull lightly on the plug as her hands found my hardening cock.\n\n\"Oh, fuck!\" She arched her back, sticking her ass up in the air more to allow me to better see the toy stretch her tiny hole. The large bulb kept stretching until it finally popped out. \"Aaaah!\" she gasped.\n\nI expected the toy to come free, but it was still snug in her ass. There was more to the toy than the one bulb! I pulled lightly and another bulb began stretched her.\n\n\"Mmmm!\" she moaned, \"I've had it in me all day long...\" Her hands were stroking me, feeling the effect she was having on me. She smiled up at me, \"... waiting for this!\" She lowered her mouth over my throbbing head while working the shaft with her hand.\n\nThe next bulb was smaller than the first, but not by much... and the next slightly smaller. Followed by one more and the toy finally came free. It was about eight inches long. The largest knot was about the size of a baseball, down to the last about the size of ping-pong ball.\n\n\"Mmmm!\" she moaned around my cock, wiggling her ass, eager to be filled again. With her mouth hungrily devouring my cock, I grinned as I moved the toy back to her ass. \"MMMmmm\" she groaned as I slid the toy back into her ass. She moaned, oh so sweetly, around my cock as each ball slipped past her tight little ring. Once it was buried all the way back in her ass, she looked up at me, continuing to stroke my cock.\n\n\"Okay, I'm so ready for this.\" She turned herself around, aiming her toy-plugged ass at me. \"Pull it out and shove your dick in there.\" She looked back at me, \"Hard! Both of them!\" She bit her lip. She turned and braced herself against the dinner table nearby.\n\nI took my cock in hand as I stepped behind her. She'd slobbered on it well enough, but I slipped it between the lips of her cunt to slather it up a bit more. She was literally dripping in anticipation. I could feel the wetness along her legs.\n\n\"Please, Master! I've been waiting for this all day long.\" She begged.\n\nI grabbed the handle on the toy in her ass and pulled it firmly out and pushed my rigid cock into her gaping hole.\n\n\"Uhhhg!\" She grunted in pleasure, dropping her head.\n\nMy massive rod slipped about halfway into her tight channel before encountering some resistance. I took her hips in my hands and pressed my advance slowly.\n\n\"Take it!\" She moaned, \"Take my ass!\" She pushed back against me trying to force the last few inches in.\n\nI drew my hips back, nearly slipping out of her before driving the length of my cock deep into her bowels.\n\n\"FUCK! YES!!\" She screamed as she came hard. The pent-up tension from a day of teasing herself had her exploding all over the floor. Her spasming ass gripped my hard prick so powerfully, I dared not move it for fear of ripping it off... Not that I was complaining! The tightness of her spasms massaged my member better than any hand job.\n\nI held her firmly and worked my hands around, one hand to her clit, the other to her nipples. I took both between my fingers and tweaked, pinched and prodded her towards another orgasm. I used the hand on her tit to pull her back against me. Her hands come up and grabbed my head, tangling in my hair.\n\n\"God, you feel so good!\" I moaned in her ear before sucking on her earlobe. \"You might make me come just from being buried in your tight little ass!\"\n\n\"Oh, Yes!\" She gasped out, \"Do it!... Cum in my ass!\"\n\nShe ground her hips against mine. Not pulling off at all, but just doing her best to wriggle her ass around my cock. It was doing an incredible job of get me off, but it did quite a bit more for her as she was suddenly in the throes of another orgasm. Her unexpectedly spasming canal was enough to push me over the edge as I pumped a torrent of cum into her.\n\n\"OH, SHIT!\" I hollered.\n\nShe pulled my head to her and her mouth found mine as we rode out our orgasms together. The bliss of the moment cascading into an impassioned tangle of lips and tongues.\n\n\"Thank you, Jacob. That was well worth the wait!\"\n\n<p align=\"center\">* * * * *</p>\n\nAfterwards we took a shower together to clean up. She made sure I was clean by giving me a taste test... a rather prolonged taste test! As I was getting dressed, she was sitting on the bed, toweling off her hair. She had a pensive look as she watched me.\n\n\"Master?... er, uh... Jacob?\" She asked quietly.\n\n\"Hmmm?\" I glanced over at her.\n\n\"It's all new to me, so I did a little research on...\" she blushed lightly lowering her gaze a moment, \"being a... submissive.\"\n\nI tried to hide my grin. I knew some, but that's really only what I read on sites like Literotica and such.\n\n\"I'm okay with most of it... A lot of it actually!... but I was wondering...\" she looked up at me, \"Would you be looking to share me?\" There was a hint of concern in her eyes. \"With other men, that is.\"\n\nI smirked at her, \"I hadn't really considered it.\" I approached her, taking her face in my hands, \"Truth be told, I'm a little greedy! I wouldn't want to share you with anyone!\" I kissed her upturned lips.\n\nShe let out a breath I hadn't noticed she'd been holding and smiled happily, \"Thank you. I'm not sure I could do that.\" She covered my hands in hers, dropping the towel. \"Just other men though. I wouldn't mind sharing you with another women.\" She chuckled lightly, \"It might even help! You need a whole harem to keep you satisfied!\"\n\n\"So, what else did you find that you'd like to include?\" I asked her pointedly.\n\n\"Punishment!\" Her face went so beet red, I thought she was choking on something.\n\n\"Punishment? Really?\"\n\nShe bit her lip and nodded slowly, \"I, uh... I'd really like the idea of... uh... getting... um... punished...\" She smiled shyly up at me, \"By you!\"\n\n\"How would you like to be punished?\" I prodded. This I had to hear! Luckily, I had asked a question, so she was quick to answer.\n\n\"Spanking. Flogging. Paddles, belts and crops. Nipple clamps. Possibly caning, but that seems... rough.\" Her blush deepened, if that was possible, as she gave up her filthy secrets. You would think she'd be used to that by now!\n\nI grinned excited by the prospects, \"We'll have to see. I can definitely do spankings and beltings with the tools I have now. The rest may need to wait.\"\n\nShe smiled at me, \"That's okay. I'm not going anywhere.\"\n\n\"But if I'm going to punish you, that'd mean you've been a bad girl.\" I gave her a knowing look, \"Have you been a bad girl?\"\n\n\"Yes.\" She didn't hesitate. She really thought she'd been a bad girl!\n\nHow the hell did I luck into this?! She's a frickin' walking wet dream!!\n\n\"So, what have you been doing that deserves to be punished?\" I was slowly taking off the belt, I'd been putting on.\n\n\"I teased a whole bunch of guys today.\" She admitted shyly. Her eyes widened as I slipped the belt off and doubled it in my hand. She looked back and forth from me to the belt with some apprehension.\n\n\"Really.\" I shook my head sadly, \"How did you tease these poor guys?\"\n\n\"After I bought the plug, I immediately put it in. Then I walked around doing the rest of my shopping.\" Blushing as she explained, watching the belt in my hands nervously, \"I felt like all the men I passed could see me walking funny, but I didn't care.\"\n\nI snapped the belt together making a loud, 'CRACK' as she spoke, making her jump.\n\n\"I couldn't help it. I felt so sexy. They all looked at me as I went by, so I teased them... anyway I could! I smiled at them. I shook my ass. I bounced my chest. I even bent over for one guy to adjust my shoe. Every time I did though, I wished it was you!\" She stood up and slid into my arms. \"If you'd seen me, I'd have been so embarrassed...\" she lifted her lips to kiss my lips tenderly, \"... but I'd have pulled you aside and had you fuck me silly!\" She bit her lower lip provocatively, \"Next time I go shopping, I want you to come with me. We're going to have sex in so many public places!!\"\n\nI opened the belt and slid it under her naked bubble-butt, lifting her against me. \"You're lucky you came clean, but I think I'm still going to have to give you some spankings later!\" I captured her lips again, enjoying their softness.\n\nIt was very difficult to set her down and not ravish yet again, but there were a few things I needed to do.\n\n\"I need to take care of some things, so I'll be out for little while.\" My tone told her right away she wasn't invited, and she accepted it readily enough.\n\n\"I'm going to make you my specialty for dinner tonight, so don't eat out.\" She leaned back, giving him a wonderful view of her assets, \"and then dessert!\" She raised her eyebrow suggestively. \"What time can I expect you home?\"\n\n\"I should be back around 9 or so.\" I gave her a kiss goodbye and swatted her naked ass lightly. \"And get dressed, will you? You're making it hard for me to leave!\"\n\nShe slid her hand between us, \"Mmm, not quite hard... but getting there!\"\n\n<p align=\"center\">* * * * *</p>\n\nThe subway ride into the city was a blur, I was still so mesmerized by her. I kept closing my eyes remembering everything we'd done the past few days. It was intoxicating. I swore I must have smiled the whole way... until I came into sight of my destination: Bellemar Hospital. The never-ending stream of people going in at out of the busy hospital was intimidating, but the reasons I was here made it worse.\n\nIt was the closest hospital to the mall where I'd found Tracy. I expected many of the victims from the previous day had found their way here.\n\nI walked into the hospital and made my way over the ER. I was going to have to find someone with some authority to escort me around. A doctor or something. I'd have to convince them I was a friend... at least at first. I thought a brief example of my capabilities would convince them to allow me to help... or send them screaming for security!\n\nIt wasn't entirely intentional, but if I'm going to find a doctor to escort me, I may as well choose the attractive brunette that was walking towards me. She was deep in conversation with a nurse. Her hair was up in a ponytail, her face sweaty and tired from a long shift, but her green eyes sharp, alert and oh-so-sexy. She was about five-foot-four, with a petite frame, but even in the hospital scrubs, the swell of her hips was visible.\n\nI waited politely until they seem to be finishing up their conversation, then I walked forward, 'accidently' bumping into her. I touched her hip, immediately making her ignore my continued contact. I wasn't difficult to have her see me as a long-lost friend.\n\n\"OH, My God! Phillip!! What are you doing here?!\" She threw her arms around me in an excited hug.\n\n\"Well, I heard you were here, and I just had to see how you were doing! It's been a while!\"\n\n\"Seriously! It's been what?... three years?! I can't believe it! How'd you find me?\"\n\nI shrugged, \"Through the grapevine, of course!\" I glanced around, \"Is there someplace we could talk privately?\"\n\nShe smirked, \"Yeah, sure!\" She pulled me down the hall and opened a blank door to a narrow storeroom. Shelves lined the wall filled with all manner of supplies. She walked in ahead of me pulling me by the hand. As soon as the door closed, she spun and threw herself at me, grabbing my head and mashing her lips to mine. Her hands dropped to my pants as she tried to work them open. \"Fuck! I've missed this!\"\n\nI was completely floored. What are the odds the person she'd imagine me as was an old Fuck-Buddy?! I was tempted to take advantage of the situation, but... Damn, Hero stuff!",
        "Her passion stalled a moment as she realized I wasn't reciprocating. \"What's wrong? I know it's been a while, but...\"\n\n\"We need to talk about something else.\" I said quietly. I removed my influence from her mind. Suddenly, she saw me, instead of Phillip.\n\nShe immediately jumped back in panic, \"WHAT THE FUCK?!\"\n\n\"Shhh!\" I reached out quickly to take her hand. As I did, I took her voice away.\n\nShe raised her head to scream, but nothing came out. She backed away against the shelves on the far wall, fear evident on her face. She kept trying to scream, her face getting paler and more terrified.\n\n\"I'm not going to hurt you.\" I needed to find a better way to do this in the future. It didn't quite happen the way I hoped. \"I really need your help... but I think I can help you too... well, at least help quite a few of your patients.\"\n\nShe had calmed a little, but she still kept as much space between us as she could.\n\n\"I have some abilities that...\" I smirked, \"Well, you just wouldn't believe... You've seen a few. I can help quite a bit if you'll let me.\"\n\nShe slowly nodded, still not trusting her eyes.\n\n\"I'm going to give you back your voice, but please don't scream again. I can't let everyone know what I can do. It could be dangerous... for both of us.\" I stepped towards her slowly.\n\nAt my first step she flinched against the back shelf, trying to back away further.\n\n\"I just need to touch you to give you back your voice... then I'll answer any questions you have.\" I stretched out my hand and held it there.\n\nShe stared at my hand for a moment before ever so slowly, lifting hers towards me. As quickly as she could she lashed out her hand to swat the back of mine.\n\n\"What the hell are you?\" She asked immediately, \"How'd you take my voice? What happened to Phillip?\"\n\n\"Slow down. Phillip was never here. I made you think you were seeing an old friend... Until yesterday, I was a nobody. I was an IT helpdesk clerk... but something happened to me yesterday. Now... I'm...\" I shrugged, \"Exceptional, I guess. Like a superhero or something.\"\n\nShe was still plastered against the far racks, \"What do you want with me?\"\n\n\"Yesterday, there was a rash of... accidents. People jumping off ledges. Running into traffic. Suddenly, being severely suicidal. Although, they probably had no history of any mental illness... There were also probably a few... unexplainable mental... conditions.\"\n\nI could see her eyes flicker with acknowledgement.\n\n\"Yeah, you know.\"\n\nHer eyes hardened glaring at me.\n\n\"OH, NO! That wasn't me! That was... someone I dealt with.\" I backed away from her, just trying to put her at ease, \"Look. I guess the only way to explain this to you is to start at the beginning.\"\n\n\"Please do.\"\n\n\"Two nights ago, I had a... nightmare...\"\n\n<p align=\"center\">* * * * *</p>\n\nIt took me the better part of an hour to go through everything that had happened. She asked questions regularly and even asked for demonstrations of certain things. It was strange. You would think her medical mind would have a hard time believing what I was saying, but she seemed to accept it.\n\nWhen I was done, she was sitting on an overturned bucket nearly within an arm's reach of me. Her face was relaxed and somewhat determined.\n\nShe looked at me and sighed, \"If you had told me all this two days ago, I never would have believed you... but after everything I saw yesterday...\" I could see the pain in her eyes.\n\n\"I could help with that, you know.\" I offered.\n\n\"With what?\"\n\n\"All the mental trauma you have. I can help you through it... ease it from your mind.\"\n\nShe looked at me for a moment, before shaking her head, \"No. All that stuff is part of me. It's made me who I am. Wounds and all.\" She stood up, \"I've chosen this. There are a few people here that haven't. Maybe you can help them.\" She gave me a measuring look and nodded, \"Dr Cecilia Shepherd. It's a pleasure.\"\n\n\"Jacob Winters.\"\n\nShe took me first to get cleaned up, scrubbed down and she got me approved as a visiting doctor to allow me into the restricted areas.\n\n\"There's a few people that came in yesterday that... I think... you might be able to help.\" She led him down one of the hallways, \"If you can't...\" she shook her head, unable to finish. \"We've had to sedate them both... heavily.\" She continued after leading him into an elevator. \"One just cannot seem to stop... hurting herself.\" She winced, \"She keeps asking for us to hit her... or slap her. Even scratch her. It's... unnerving.\" She shivered. \"The other...\" the elevator dinged at their floor, and she led him off. \"... is... insatiable... sexually. Worse, she seems to be... contagious... sort of.\" She glanced at me like I some inkling what she was saying. \"As soon as she touches someone, they can't help but... attempt to satisfy her... like it's some sort of compulsion.\"\n\nAt this point, my eyes did alight a bit. \"Sadly, I do have some understanding of that.\"\n\nShe nodded, \"I thought you might.\"\n\nThey made their way through the maze of halls and doors until they came to on with a large male orderly watching the door.\n\n\"It's okay, Miguel. He can see her.\" She told the man as she opened reached for the door.\n\n\"Are you sure? She's due for her next dose shortly. I wouldn't want her waking early with him in there.\"\n\nShe frowned and nodded, \"Thanks. We'll be careful.\" She opened the door to lead me in.\n\nMiguel gave me a hard stare but nodded reluctantly.\n\nI stepped into the small room, while the doctor closed the door behind me. The patient on the bed was a young woman, probably early twenties with dark hair. Her sleeping face was sweaty as though she had a fever. It was obvious she was an attractive woman. Her thin nose and high cheekbones gave her an exotic look, while her full lips seemed to exude sensuality. Her arms and legs were strapped to the bed, preventing her from moving, but they were lean and toned.\n\n\"Whatever she has, it's much more effective against men than women, so we needed to be careful who we let in here,\" Dr Shepherd watched me curiously as I approached the woman's bed.\n\nI sat next to her and reached out to take her hand. I wasn't entirely sure how this worked, but I knew I needed to touch her. As I touched her hand, her eyes popped open. Her big brown eyes were filled with lust.\n\n\"OH, YES! Fuck me!\" She gripped my hand hard, refusing to let go. \"Fuck me like the whore I am! Hard and rough!!\"\n\nI felt a momentary urge to jump on the bed and do just what she wanted, but just as the compulsion from the man's voice yesterday, it seemed to slide off me.\n\n\"It's going to be okay.\" I told her. I could feel the taint within her. Like some sort of parasite, eating away at her. I focused on it, trying to wrench it free from her. It was a weird feeling. Flexing a part of my mind that I'd never used. The whole time I worked on the taint, I could feel the lust emanating from her, trying to get me to do what she wanted. To fuck her. Hammer her tight little whore ass. Pound her like she-...\n\nI wrenched my thoughts back from her influence. Sweat was breaking out on my forehead as I fought against her desires. I just wasn't sure how to remove this damn thing! And the whole time I was trying to figure this out that parasite was eating away at me... Just like her! If I didn't figure this out soon, I'd pound her into next week! Possibly worse as I'd shown restraint with Tracy. I had the feeling if I really let loose, I could probably kill this woman instead of helping her!\n\nThe taint was buried in her memories, but I couldn't read her mind... But I did know what I was looking for! That man's voice! I'd heard it already. The compulsion hidden in her mind, bending her will to do someone else's bidding was tied to that voice!\n\nI focused on that sound and encouraged her ignore it.\n\n\"Oh, my god! What'd I do?!\" She broke down, crying brokenheartedly. The lust haze disapated and I was holding hands with a broken woman. One who'd spent the last day demeaning herself in the worst possible ways.\n\nDr Shepherd was still standing at the door holding Miguel back, her eyes staring at me in disbelief. Miguel's eyes were staring at me strangely. Not angrily, but certainly not friendly.\n\n\"Uh, doctor. Could I please have a moment? We need to discuss some things with the patient privately.\" I wasn't sure how much Miguel had seen, but I didn't want him to see anything else.\n\nShe shook herself for a moment, glanced at Miguel, \"Uh, Miguel? Could you give us a moment, please?\"\n\nMiguel kept staring at me strangely. Suddenly, his eyes shifted and he shook his head.\n\n\"Uh, yes, doctor. I'll be in the hall.\" He nodded politely to us both and backed out.\n\nShe walked over to the bedside with a sad look on her face as she regarded the distraught woman.\n\nI leaned over and whispered, \"I can make it so she doesn't remember any of it... but it might be difficult for her to pick up her life.\"\n\nDr Shepherd looked at her, then at me, \"It's a difficult thing. While it seems great to remove the memories, the hole they leave could create different issues.\" She worked to remove the restraints on the woman.\n\nI shrugged, \"You're the doctor.\" I helped with the last restraint and the sobbing woman curled into a ball, hugging herself while sobbing nearly hysterically. \"But you have to let me do something.\"\n\nShe considered it, \"With many people in traumatic events, the mind will sometimes blot out the events itself... forgetting what happened.\" She looked at me, \"Maybe that'd be the same as what you can do.\"\n\n\"I'd hope so.\"\n\n\"If you make her forget, can you bring them back later?\"\n\nMy brow creased, \"I think so...\" I really wasn't sure. Arman had shown me how to work to remove disturbing memories. Basically, encouraging the person to forget them. I'd assume it'd be possible to get someone to remember them. The Catch-22 was obvious though: How do you remember what it was you forgot?\n\n\"I guess we'll find out...\"\n\nI leaned over and touched the woman's shoulder gently. The massive wave of humiliation, sorrow and pain hit me like a ton of bricks. The stream of images of her memories flashed through my head, turning my stomach and making me blanch. I grimaced and immediately started removing the horrible memories. Her crying lessened slowly as the wave of distressing images died down.\n\nAs the painful images from her finally dwindled down, both of us were drawn and exhausted. I collapsed into a chair next to her bad letting out an explosive breath.\n\nShe looked up at me, confusion in her big brown eyes. Her mouth opened to say something a few times, but before she spoke, she blinked a few times and fell asleep peacefully.\n\nDr Shepherd pulled the blanket over her shoulders and brushed the hair back from her face. She took her hand and felt her pulse for a moment. \"She seems to be resting well... and I don't feel anything strange when I touch her.\" She looked over at me, \"Are you feeling okay?\"\n\nI was slouched over in the chair, leaning heavily one hand still staring at the sleeping woman. I was still floored by what she'd been through. I'd seen her memories of the days before as if I'd lived them... it wasn't pleasant.\n\n<p align=\"center\">* * * * *</p>\n\nIt'd begun a normal day at work for Katia. Clyde (the shmuck. Finally, got his name... Meh, whatever!) was wandering the halls leering at everyone when his eyes lit on her.\n\n\"Did you need something?\" she asked politely. He was a sleaze, but she wasn't quite rude enough to call him out on it.\n\nHis returning grin chilled her blood. \"Yes. I want you bent over your desk right here!\"\n\n\"In your dreams, you pervert!\" She answered hotly. She stood up to give him a piece of her mind, but as she walked in front of her desk, suddenly she turned and bent over her desk. \"WHAT THE-... NO!!!!!\"\n\nClyde didn't waste any time mounting her, lifting her skirt, ripping off her panties and stuffing himself into her dry pussy. Her screams drew everyone from the office.\n\n\"Great! Now that everyone is here. Let's have some fun... Katia, you love this!\"\n\nHer screams of pain suddenly became screams of joy as her pussy suddenly gushed, \"FUCK YES! FUCK ME!\"\n\n\"Awesome! Gentlemen let's form a line! Everyone gets a turn.\" He grunted as he fucked her. He was just too excited, and he came quickly. He pulled from her gooey quim as another took his place behind her. He walked around to her face, \"This will teach you to turn me down, you little bitch!\" He shoved his dirty cock into her mouth forcing her to taste herself. She swallowed his cock eagerly, slurping it into her mouth savoring his flavor. \"From now on, every person that touches you will want to nail you like the slut you are until they cum all over that pretty face of yours!\"\n\nHis words took immediate effect as the guys behind her slapping her ass as he pounded her harder, \"You fucking whore! You fucking love getting treated like a skank, don't you!\"\n\nClyde grinned as he pulled out of her mouth, \"Ladies, please sample her tongue. It's exquisite!\"\n\n<p align=\"center\">* * * * *</p>\n\nI hoped I found Clyde again someday. I let him off far too easily.\n\nDr Shepherd took me from the room to let Katia sleep, they walked out past a stunned Miguel. She spoke to him quietly, \"I think things are ok here now. You can go about your normal duties. Thank you!\"\n\nHe stared at Cecelia for a moment before suddenly turning to look at me, a surprising anger on his face before he turned and stalked away.\n\nI stared at him a moment confused, not quite sure what I'd done to anger him.\n\n\"The next patient is a younger girl that... can't stop hurting herself.\"\n\n\"The barista.\"\n\n\"Excuse me?\" Cecelia stared at me in confusion.\n\n\"The shmuck that I... dealt with yesterday... lusted after her. He was disappointed finding out she had a padded bra.\" I really needed to hunt down that bastard and meet out an appropriate level of justice.\n\nI felt a sad murmur in the back of my head.\n\nI stopped walking and took a deep breath.\n\nRevenge was an easy one to give in to.\n\n\"Are you okay?\" Dr Shepherd asked, \"We can wait on this one if you need to rest. She's not really a threat to herself or anyone else at this point... she's just... disturbed.\"\n\n\"No, I'm okay. I just needed to reset myself.\"\n\nWe ended up having to walk to nearly the other side of the hospital for the other patient. Dr Shepherd and I spoke along the way. I did very good about not asking questions. She seemed excited enough to get to know me, that she was more than happy to talk about herself as long as I answered her questions every now and then.\n\nDr. Cecelia Shepherd was an amazing woman. She'd graduated from John's Hopkins near the top of her class. She'd gone on to complete her residency at Massachusetts General before ending up here working the ER by choice. She felt she performed her best when she was under pressure. She'd seen several other doctors fall apart under the never-ending stream of patients, but it only made her feel more alive. The ones she lost were difficult, but all the ones she saved made it all worth it.\n\nHer personal life wasn't going quite so well. Phillip had been someone she worked with in Boston. He was looking to set himself up a private practice doing cosmetic surgery for the rich and famous. She had always hoped he'd realize how superficial that made him. To become a doctor because of the money seemed a complete waste to her. Some day she thought she'd open a private practice, but she'd be doing Family Medicine instead of specializing.\n\nIn the meantime, she was here working the ER and doing her damnedest to save every person that came through.\n\nEventually we made it to the Psychiatric Ward of the hospital. The patient looked to be a young girl, probably nineteen or twenty. Her dark hair had been chopped at haphazardly, shaved some places with raggedly cut clumps around her head, cuts and gashes marred her face. She sported two black eyes, a broken nose and her face was bruised, swollen and puffy. She was currently sedated and restrained hand and foot to her bad.\n\n\"All of this was self-inflicted?\" I asked in abhorrence.\n\nDr Shepherd nodded, \"Sadly.\" I could hear the distress in her voice. Here was another patient she was powerless to help.\n\nI took a breath and stepped forward. After helping Katia, this one seemed easier. As I laid my hand on her shoulder, it took me just a moment to isolate the sounds of Clyde's voice and make her ignore his commands. It happened so quickly I didn't even catch much of a glimpse into the scene... for which I was grateful! Reliving Katia's was enough for me.\n\n\"She should be better now.\" I told Cecelia, \"You'll know when she wakes up.\"\n\nDr Shepherd looked at me and nodded. \"Thank you... I-...\"\n\n\"No thanks are needed. I'm just glad I could help.\" I assured her. We shared a look that said it all.\n\nWe then went into the ICU. I felt dwarfed by the conditions of the people around me. Too many people hanging on to life by a thread. The first person was in a coma. His eyes bruised and swollen; his head wrapped in bandages. The heart monitor was beeping faster than I would have thought. As we looked at him, he tensed and shivered.\n\n\"Mr. Williams evidently jumped off the balcony at a restaurant. Seen by multiple witness, he just threw himself to the payment below.\"\n\nI touched his foot. I could catch flashes of his dreams. Fear-stricken and horrified of not being in control of his own body. A passenger in your body as it jumped off the railing. I quashed those feelings and removed those memories. Leaving him to a peaceful slumber.\n\n\"What'd you do!?\" She watched in awe. \"I swear he just relaxed... somehow.\" She checked his readings, \"His vitals are improving.\" She stared at me, her eyes glistening, \"How? I-...\" She wiped her eyes. \"These are always the worst. There's nothing to do but wait and see. It's demoralizing. All my training. All my studying and there's nothing I can do.\"\n\n\"You'll still have to, unfortunately. I can't heal him completely, but I can set his mind at ease... Hopefully, that will help him relax and come through.\"\n\nShe nodded hopefully.\n\nShe led him through the ward. He spent a few moments with each patient. There were some I couldn't do anything for, but I was able to set many at ease. She stared at me in wonder. Reaching up to blot her eyes regularly.\n\n\"I don't know if I'll ever be able to forget what you've been able to do here today...\" She began.\n\n\"Oh, please, Dr! It'd only be a piddling against everything you do here every day!\" I wasn't about to let her think she wasn't the more valuable one here, \"Every time you're here, you do far, far more! I've helped a handful. Probably really only just those two. The rest... I've just set at ease. You're the one that's helped them survive!\"\n\nShe nodded somberly.\n\nAt least she didn't argue with me about it!\n\n\"Look, I can't say what else is going to happen in the future, but I have the feeling other... unusual patients may come your way.\" I pulled out my phone and handed it to her, \"Let me have your number. I'd like to connect with you later. I think we could help each other in the future.\"\n\nWe were standing in the hall as she entered her information into my phone. I glanced over her shoulder, and I noticed a hospital employee surreptitiously trying to watch us. As soon as he saw me notice him, he ducked around the corner. I didn't get a good enough look at him, but it certainly could have been Miguel.\n\nI didn't need the panicked chill up my spine from Arman to know something was wrong.\n\n\"Dammit! Sorry, Cecelia! I have to go.\" I pulled my phone from her hand as soon as she finished her number. \"I'll call you later. It's not safe right now.\"\n\n\"Wait... Uh...\" She started after me a moment, then looked around nervously.\n\nI lifted my phone to her indicating I'd give her a call when I could. She nodded and ducked down the hall away from me.",
        "As I left the hospital, I kept looking around trying to see if I was being followed. I wasn't rushing or acting panicked, but I felt I was getting quite a few people looking at me. The doctor listening to the nurse looked up at me as I passed him, his eyes stern. The orderlies chatting together both stopped their conversation to glare at me. Even the man sitting in the waiting room stared at me as I left. When he gave me a twisted smirk, it stunned me so much I almost collided with a pretty blonde walking in.\n\n\"Oh! Wow! 'Scuse me! Sorry, about that!\" I stammered as I slipped around her and out.\n\nI felt something was wrong, but I couldn't figure out what. Had I done too much? Had I given myself away somehow?\n\nAs I walked from the hospital, I noticed Miguel chatting with a woman as they walked into the hospital. He smiled at me as he walked by, giving me a friendly nod.\n\nStunned, I stopped and turned around, \"Hey, Miguel. Are you okay?\"\n\n\"Yeah, I'm doing great.\" He answered then gave me an odd look.\n\n\"Do you have any questions about what you saw?\" I asked pointedly.\n\n\"Nah, man! That was great! I'm glad someone figured her out.\" He was genuinely appreciative.\n\nI nodded, now even more baffled. I walked away from the hospital like I was in a daze playing over everything that had happened. Other than Miguel, I don't think anyone else had seen what I'd really been doing. The only patient that had made a marked improvement was Katia. Miguel had seen that, but he didn't think anything of it.\n\nI continued along the sidewalk befuddled by everything. I wanted to go by the Police Station too to see if I could meet a few officers and get someone on the inside there too, but now I wasn't sure that was such a good idea. Something was going on and I needed to figure out what... things just didn't feel right.\n\nI suddenly felt a jolt of surprise in the back of my head. Arman was trying to get my attention. I looked around quickly but didn't see anything unusual. Busy city streets. Cars rushing by while I walked along the sidewalk. I got the feeling from him it was here, but close... somewhere.\n\nI looked at the local buildings but didn't feel anything. The streets looked good. The sidewalks... I felt a jolt. Not the sidewalks, the subway. I ran at a leisurely pace to the subway... well, leisurely for me. I probably looked like I was sprinting to everyone else!\n\nI bounded down the stairs two at a time, jumped the turnstile cleanly and raced to slip into the subway as the doors slid closed. The people in the car barely paid me any attention. People rushing to catch a train weren't completely unusual.\n\nThe car was about half full. A decent mix of late workers heading home and revelers heading out. I moved across into the next car and saw much the same. I looked ahead into the next car. Nearly everyone there was looking behind them into the following car.\n\nBingo! Found my problem.\n\nI moved through the car quickly and slipped to the next. People were yelling, \"Leave her alone!\", \"Someone help her!\", \"Please stop!\"\n\nI pushed through the watchers until I got to the door. Once I was finally able to see into the car, I almost lost myself. There was a guy with green mohawk in leathers, his face covered in tattoos and piercings was waving a long knife at a few people cowering down just inside the car. In the back of the car behind him a young redhead had her arms tied to two grab handles across the car. Her blouse was ripped open, her ripped bra dangling from her arms, her skirt was bunched at her hips and her pantyhose ripped about the crotch. Her large breasts were cover by the grimy hands of another tattooed punk that was wedged up tight against her back. Her hair was waving about as she flailed against her tormenter. The grimace on her face told me all I need to know about what he was doing. Three other guys were alternately rubbing themselves waiting their turn, groping her body and threatening the other passengers.\n\nI grabbed the door and yanked it open, ripping the lock from its mooring and stepped through to the other door. The delinquent with the knife went a little pale seeing me rip one door from its hinges. He just about pissed himself when I did it again on the next. He stepped back in a few steps in fear... unintentionally clearing space in front of him... for me!\n\nBefore he realized what was happening, I was on him. I jumped over the cowering people at the door, landed in the space he'd just cleared and did a round-kick crushing him right in the chest before he even had the time to gasp. He flew back ten feet to crash into one of the other guys, sending them both tumbling to the floor of the subway car.\n\nI was on the rest before they had time to scream. I don't think I killed any of them, but they would be spending some time in the hospital before they made it to prison. As I sent the last half-naked creep flying to the back of the subway car, I turned and gently undid the neckties that were holding the redhead's hands to the handles. I caught her as she came free with a sigh.\n\nOnce she was down, she turned towards me. When I first looked in her eyes, she was distraught as I'd expect given her ordeal.\n\nHowever, an instant later her face changed into a twisted sneer of hatred. She lashed out with her hand. It was only my improved reactions that saved me from losing an eye. Her nails raked along my cheek barely missing me eye. Her other hand followed up the first, but I caught it and twisted her around putting her into a hammer lock.\n\n\"YOU BASTARD!\" she screamed, \"It's just a matter of time, you pathetic worm!\"\n\nI took an instant and delved into her and it was immediately apparent, she wasn't in control of herself.\n\nSomeone else had taken full control of her body!\n\nI shook myself in shock and glanced up. All the men that had been cowering on the far side of the car were now up and moving towards me. Their faces weren't the friendly helpful faces I was expecting. They all glared at me in hatred, their mouths all bent into the same twisted sneer.\n\n\"Time to die, Worm!\" They all chanted in unison.\n\nOh, Shit! This was not good!"
    ],
    "authorname": "WardedMink",
    "tags": [
        "mind control",
        "non-consentual",
        "mess",
        "oral sex",
        "blowjob"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-society-of-guardians-ch-03"
}