{
    "title": "Voyeur gets Voyeured Ch. 04",
    "pages": [
        "After dinner, Divi and her friends were still revved up about the events of the day on the lake. They were all talking excitedly at the same time and Priya shifted her concentration from one to the other taking in as much as she could. At times, details came out that I don't think they had intended to reveal and one of the other girls would glare at her. Priya just moved on to another story.\n\nAs darkness fell, Molly said, \"Hey guys. We should get going. My mother will wonder where I am.\" I noticed for the first time that none of them had a cell phone with them. That had to be a record for girls of their generation to not have a cell phone in their hands for that long.\n\nOne by one, Joanna, Zoe, Sophie and Molly pushed themselves against me with their hands behind my back and stretched up for a kiss and thanked me over and over again for their wonderful day. Molly was last and she did the same except she pushed her pelvis against me and whispered, \"Thank you Jack; for everything.\" She winked and kissed me again. The four of them filed out onto the deck. They waved as they pounded down the stairs to my yard. I watched them disappear around Priya's house and then turned back to Divi and Priya sitting at the bar. It was deathly quiet after all the voices stopped. I looked at Divi, who was looking at her mother waiting for the Q&A session to start. Priya looked at Divi and then at me. I braced myself for the inevitable.\n\nPriya smiled at me and said, \"Well. It sounds like you guys had a great day. I wish I was with you. It sounded way more fun than my day.\" Priya had intentionally or not just opened the floodgates and Divi's questions poured through. I grabbed a beer and sat down at the kitchen table. I was a little surprise that Priya wanted to do this with me there but I figured she needed some support to get through it.\n\nEven though Divi was sure this whole thing in Boston was about a divorce and she had seemed stoic about it, she was still rocked by her mother's confirmation. She tried not to cry but it seemed that the more she tried, the more tears poured out of her eyes and down her cheeks. Priya got up and went around the bar and held her daughter tight and cried with her. Tears formed in my eyes too. It was a very emotional time. They swayed in each other's arms and the tears changed to sobs.\n\nI had no place in their commiseration so I got up and went out to the deck. It was a gorgeous night. Vestiges of the pinks and oranges and blues of sunset were quickly being overpowered by the advancing purples and grays. High in the sky was a brightly lit contrail from a passing jet. A passing pontoon boat with anchor light and green and red navigation lights on cruised along the far side of the lake and then reversed course and headed back the way they came. To the west the evening star or more accurately, the planet Venus, the brightest light in the sky, chased after the sun. Bullfrogs were beginning to croak up a storm and crickets chirped. A bat swooped over my boat without a sound. I didn't often sit out on the deck at night. This was nice. I resolved to do it more often on perfect nights like this. Then the mosquitoes found me and I remembered why I didn't sit out at night much.\n\nFrom the Breezeway, Divi and Priya came out on the deck with one arm around the other like they were supporting a drunk. Their free hands wiped at their tears. They sat down on a cushioned chaise longue. They weren't sobbing anymore but the sadness was palpable. I just sat down in my gravity chair beside them and stayed quiet. If they wanted anything from me, they'd ask.\n\nDivi was the first to speak, and it was with bitterness in her voice, \"He was a bad father and a bad husband. We're better off without him and his bimbo girlfriend.\" Even in the dark I could see the fire in her eyes. Priya didn't react to Divi's statement except to pull her in tighter. \n\nPriya finally spoke. \"Jack. First of all, thank you for all you did for the girls today. I was able to glean from some of the details that you saved them from possible disaster that they didn't even realize until after it was over. I'm going to take Divi home and we're going to comfort each other. She's a little shaken up about the divorce and I need some time to think about my life too.\" I understood; their lives had just come off the rails. The 'think about my life' part concerned me because I was thinking I was a part of that too.\n\nI said, \"Call me if you need anything. I'll be here for whatever you need.\" That statement, as simple and normal as it was, seemed to sadden Priya even more as she stood and helped Divi to her feet.\n\nThey headed for the stairs without another word until they got to the stairs. Divi stopped and turned. \"Thanks Jack for a wonderful day. Thanks for Molly too.\" She forced a smile and they headed down the stairs with Priya looking back at me mouthing the question, 'Molly?' I just shrugged my shoulders and they were gone.\n\nI had an ominous feeling in my gut. I had begun to feel close to Priya and Divi too. My life had some excitement in it again. Maybe excitement wasn't the correct word but I was feeling good about a new day dawning which had been missing for a long time. I was feeling alive again instead of just waiting to die. The mosquitoes drove me in and I chugged the remains of my beer as I headed for the Breezeway thinking that I would drag fewer of the blood-thirsty vampires inside the house if I went that way.\n\nThe next morning, I woke early, as usual. Consciousness was accompanied by a morning woody that had lately become a usual event. I jerked myself off as I reminisced about the erotic events of yesterday. It didn't take long. In the shower my mind went back to Priya's ominous statement as she and Divi headed for the stairs. I could only guess at the meaning, 'Think about my life too'.\n\nI dressed in my usual garb - athletic shorts with no underwear and a tee-shirt. I pulled on my sandals and got on my boat. I cast off and made my way to the Marina again. I had seen a poster displaying 'breakfast pizza' yesterday and the photo looked delicious. \n\nI sat outside the Marina at a picnic table eating my pizza and watching the first boats of the day filling up with gas. I got a chance to see some of the speed boats and wake boats up close. As I was cleaning up and throwing the waste in the pizza box, I saw a familiar pontoon boat slowing at the \"No Wake\" sign. I did a double take to confirm that it was the gang of five twenty something's from yesterday. It was the same boat but there were only three of them aboard: the alpha guy and the two that had taken off through the woods. I sat back down to see what they would do when they saw me. \n\nAs expected, their boat did a sudden u-turn that totally confused the wake boat coming in behind them. As they sped away, the alpha guy, sporting a foam neck-brace, turned in his seat and looked back at me. I smiled and waved. He immediately responded with his left-hand middle finger. The owner of the Marina had just come out of his garage, where he repaired boats, and saw them speeding away. I guess he thought the finger was for him because as he walked by me he said out loud to himself, \"Frickin' kids. They're nothing but thugs. Their parents aren't much better either.\" I grinned and tossed my waste in a basket and returned to my boat. I watched for the kids boat all the way home. The last thing I wanted was to lead them back to my house.\n\nI eased up to my dock and tied the boat fore and aft before shutting off the ignition. As I walked off the dock, Priya appeared from her yard crossing into mine. \"Can we talk?\" she said and I motioned for her to follow me up to the deck. I asked if she would like a cup of coffee and she declined. I turned on the Keurig Coffee Maker and popped in a coffee pod and waited for the water to heat. Priya had followed me inside but she just stood by the kitchen table and waited for me. I didn't like the look of this. I brought my cup to the kitchen table and motioned for her to sit as I sat down. She hesitated but then sat. \"What's up?\" I said, trying to sound upbeat.\n\nPriya started, \"I'm not sure how to say any of this. My emotions are all over the place right now and I'm pretty sure I should wait before saying this but I'm afraid I'll chicken out if I do.\" She put her hands on mine holding the coffee cup and said, \"We've been going hot and heavy for a few weeks now and we've already talked about the guilt we both feel about cheating on my husband and you cheating on Anna. Our affair was comfortable because there was no danger of being found out but at the same time it felt safe because I was married and our relationship couldn't become anything more than that. It was purely physical and I've loved and needed every second of it.\"\n\nI took a sip and waited for the shoe to drop. So far, all I'd heard was 'I've loved our time together; but...'\n\nPriya's face scrunched up and tears flooded into her eyes. I was willing her to just say it. She continued, \"Now that I'm divorced and trying to figure out what that means, I'm scared that I'll just roll into a replacement relationship with you that will be harder to stop later on. I'm sorry Jack. I have to stop this now while I still can.\" Her eyes pleaded with me to understand.\n\nI took another sip and said, \"I understand your rationale. It makes sense. If you think we need to stop our physical relationship to make sure that you don't just plug-and-play me into your replacement husband role, I get it. I hope we can still be friends even if it is without benefits.\"\n\nPriya smiled and squeezed more tears from her eyes. She took my napkin and blew her nose on it. \"I want that,\" she said. \"I value your friendship.\"\n\nI said, \"I want you to understand that this is going to be hard for me, so bare with me. I'm really going to miss the sex.\"\n\nPriya grinned and said, \"Me too. Believe me.\"\n\nI said, \"What about Divi?\"\n\nPriya frowned and said, \"Yes. What about Divi? I haven't discussed this with her. You already know she's persistent and she's going to want what she wants. She's eighteen and legally in control of her own life. It won't do any good to tell her to stay away from you. It'll just push her closer to you. I could ask you to deny her but I won't. She's planning on going off to college in the fall. All I can ask is that you two are discreet if I'm around. This will be hard enough without you guys driving my libido nuts.\"\n\nI hated this whole thing. I valued our physical relationship more than I would have thought possible a month ago. Priya stood and headed for the sliding glass door. She turned back and said, \"Jack? Please understand that I'm not saying we can't ever be the way we've been; just not now.\" She teared up again and left. I could hear her sobbing as she went down the stairs. I felt awful for her. Shit, I felt awful for me too.\n\nBegrudgingly, I returned to my pre-Priya life, reading my e-reader in my zero-gravity chair with my binoculars at the ready and nodding off to sleep whenever my eyes became weary. I moped around in a listless funk for more than a week. I must have looked toward Priya's yard ten times an hour. I didn't even get a glimpse of either Priya or Divi. I wondered if they were even there. Maybe they had gone somewhere to get away. I started looking for Ashley as her statement about a Menage a trois, the last time I'd seen her, rampaged through my mind.\n\nIt was a Saturday and the lake was alive with boats of all kind. With my binoculars I watched two female kayakers lazily paddling along the opposite shore heading east. I zoomed in to see if I knew them. I didn't. I'd never seen them before. They were both wearing bikinis but I couldn't tell much about their bodies as they sat deep in their kayaks. I knew I could catch them in my kayak if I wanted. \n\nI watched the two kayaks for a few minutes and thought to myself, 'Fuck it. I'm not going back in my asexual shell.' I put down my e-reader and binoculars and went to my dock and lifted my kayak and paddle and dropped it in the water. I carefully lowered myself into the cockpit and pushed off. In twenty minutes, I nonchalantly paddled up to the two women. It had taken fifteen minutes of power paddling without any breaks. My arms were burning when I slowed so it wouldn't appear as though I was stalking them with extra effort to catch them. \n\nI easily pulled up beside them and said, \"Good morning ladies. Beautiful day huh?\" I paddled along at their pace and we introduced ourselves and chatted back and forth. I acted like I didn't see them making eye contact with each other as they maneuvered their kayaks on either side of mine. They were both quite attractive.\n\nBeverly had curly blonde hair, probably bleached, cut at her shoulders. Her eyes were the most striking color of gold. She smiled easily and was eager to keep our conversation going. She didn't offer her age and I certainly wasn't going to ask.\n\nEva had long straight light brown silky hair that she had pulled into a ponytail sticking out through the back of her baseball cap. When I noticed that she also had the same gold eyes as Beverly I knew they were sisters. Eva was the younger of the two and by more than a couple years. Eva was the more aggressive of the two and she seemed to be messing with me to make sure I didn't just paddle off. Not that I intended to, even though that's always an option if they were giving off \"Take a hike buddy\" signals. They weren't.\n\nI asked if they lived on the lake or had a camp they frequented in the summer. I confessed that I'd never seen them before. Eva said \"We are just renting a camp for the weekend starting today. These kayaks belong to the owner. He let us rent them for a little extra money. \n\nBeverly and Eva fell back a half boat length behind me and I could hear them whispering and giggling. I let them whisper and maintained my half boat lead. Suddenly, Beverly surged past me followed closely by Eva. I could easily chase them down so I let them go. Beverly yelled back, \"The last one to the outer island buys the drinks.\" Eva quickly caught her sister and passed her. She was the athlete of the two, with slender well muscled arms and slim firm body and medium sized boob. Beverly was heavier with big boobs. Eva yelled back, \"Come on Jack. Don't give up yet.\" She was egging me on and I took up the challenge. \n\nTwenty strokes later, I passed Beverly and she gave me an odd grin. For some reason the poem, \"Will you walk into my parlor?\" said the spider to the fly,\" flashed into my brain. Beverly yelled, \"Get her Jack. She thinks she's the cat's meow.\" I was gaining on Eva with every stroke plus I was taking two strokes for her every one. She was trying hard to win but she knew she wouldn't. She gave up as I pulled past her and she started laughing. I stopped paddling and let her catch up as I stayed just a few feet in front. I ran aground on the target island five feet in front. Eva laughed and said, \"You were just toying with me.\" I smiled and looked back to see how far back Beverly was. She was leisurely paddling and pulled up beside Eva and me a minute later.\n\nI stepped out of my kayak with some balancing difficulty and helped Eva by steadying her kayak and then did the same for Beverly. There isn't much room inside a kayak for anything except your legs but both Beverly and Eva's kayaks were laden with blankets, picnic baskets and even coolers behind their seats. I pulled our kayaks up on the beach and helped them unload and then followed their lead with the two coolers through the shallow water to the island. Eva had extraordinarily long legs leading up to an amazing ass. Her hips were slim and her waist was tiny. Overall, she stood over six feet tall in her bare feet. There was no hint of child bearing. Not so for Beverly. She was not as tall as Eva but taller than average and her extra weight was distributed perfectly giving her a buxomly Rubenesque look. She was sexy in her own way and in the early 1900's her body would have been to die for.\n\nI had seen the island many times in my travel around the lake in my pontoon boat and kayak. I don't know the name. It probably doesn't even have one. It's more of a mound of earth topping out at around four feet above the waterline. It couldn't have been fifty feet around. Three tall pine trees populated it but none of them was long for this world as their roots and the island itself were being attacked by the persistent waves. The circumference was ringed by high-bush blueberries that provided considerable privacy to the center which had been trampled flat with frequent visitors. There were ashes from old campfires in the very center, which seemed kind of risky considering the proximity of the pine trees. Someone had even mounted a solar light on a stump.\n\nI set the coolers down as Beverly and Eva spread their blankets side by side. Eva asked me to join them and I smiled at her and nodded. Beverly passed around beers and we sat down on the blankets. Once close to the ground I noticed the odor of marijuana. I wasn't a frequent user but the smell is unmistakable. We talked and laughed and after a couple beers, Eva dug around in her picnic basket and pulled out a small baggy of 'pot'. Beverly grinned at Eva and then me as she asked if I wanted to share a joint.\n\n\"Sure,\" I said as Eva was already rolling one. Eva and Beverly were stealing glances at each other again and once we were passing the joint around they were giggling almost non-stop. A free-flow of information started then. Beverly told me that she was forty-six years old with two children in college. I was truthfully amazed as she looked much younger. I teased her when I said. \"Wow, you don't look a day older than forty-five.\" We all roared with laughter. Eva confessed that she was thirty-eight and had been a Beach Volleyball player on the US Olympic team before she wrecked her knee skiing. Her story made me think of Anna and my mood turned down after that. Eva noticed and flashed a look at her sister as she began rolling another joint.\n\nEva explained that they rented the camp to \"get away\". Beverly and her long-time husband had separated because he was having an affair. Eva was obviously more than pissed at him and wanted Beverly to pay him back for his infidelity. There was that grin between them again. Beverly butted into Eva's discourse and explained how she didn't blame her husband for his dalliance because she had let herself get fat and unappealing. Eva looked at me and raised both hands pointing at Beverly and said, \"Look at her Jack. She's beautiful.\" \n\nI nodded and thought about a long-winded explanation of how much I agreed with Eva's statement but I concluded that I couldn't get it out in any coherent way and simply said, \"I agree.\" My dick decided it was time to add its two cents and it hardened and tented my bathing suit. Both sisters' eyes went wide when they noticed.\n\nEva looked at Beverly and muttered with a hand over her mouth, \"Fuck Bev. We've hit the jack pot.\" She hadn't intended for me to hear but I did and all the stealing glances and private giggles and that poem about the spider and the fly all made perfect sense. I normally would have covered my tent with my hands but I stayed leaning back on my locked arms looking down at the tent and then smiled at them.\n\nI should have been mortified by the exposure of my erection to two women that I had just met two hours ago. In the pot and beer induced haze, I actually manually flexed my cock to the amusement of Eva and Beverly. I half expected that one or the other would make a move but neither did; at least not right then.\n\nStill staring at my erection, Beverly prodded me for information about myself and I told them that I'd lived on the lake for ten years after my wife died, which brought the faintest of smiles between them. I smiled in my pot induced memory of Anna on the track back in college. I didn't even realize that I was verbalizing my reverie. Eva's eyes were unfocused as she grinned at the track reference. Until then, I wasn't sure either of them had heard a word I'd said.",
        "After the two joints, we were famished. I could have devoured everything in both baskets and maybe even the baskets. We ate quickly and had a few more beers and I was buzzed. Beverly and Eva were both slurring their words and laughing at the most innocuous topics. I couldn't focus either until Eva nonchalantly removed her bikini top and gave a look at Beverly to do the same. I watched their back and forth looks like it was a tennis match.\n\nEva was fondling her tits and pinching her erect nipples. Beverly gave in and removed her top. Her tits were big. Not Ashley big or even Joyce or Frankie or Anna big but they were big and she hefted them up to her lips and sucked on one erect nipple and then the other as she stared at me. I didn't think my cock could get any harder but it jumped in my suit.\n\nEva stood up and staggered a little as she dropped her bikini bottom off her slender hips and down her long legs to the ground. She posed for my benefit and sat back down with her legs crossed Indian style as she lazily dragged her index finger through her sex. Beverly gave her a hard stare that screamed, \"What are you doing?\" Eva grinned at her sister and motioned for her to follow suit. Beverly mouthed the word, 'NO'. Eva got up again and even with resistance from Beverly, pulled her sister to her feet. \n\nBeverly stood with cocked hips and arms across her chest with her tits draped on her forearms indicating her disapproval. Eva was undeterred as she yanked Beverly's bikini bottom to the ground. Beverly went red with embarrassment but she stood there glaring at Eva. Eva just glared back and then looked at me and motioned her arms toward Beverly like she was presenting her for my consideration and said, \"Well Jack. What do you think?\"\n\nShe had a small belly, probably from child birth, and her hips and thighs were a little plump. Her big boobs sagged slightly but gravity is the ever-present enemy of a firm body and it will always win in the end. Her face was unusually wrinkle-free for someone her age and she may have had work done but she was beautiful. I didn't hesitate and said, \"Beautiful. Your husband's an ass.\" \n\nEva yelled out, \"Yes. Yes. Thank you, Jack. My sentiments exactly.\" Beverly blushed again from my compliment and sat back down on the blanket a little closer to me than before. Eva sat down closer too and reached over to touch the end of my tent. She looked directly into my eyes as her hand made contact through my suit. Her hand didn't linger there as she moved on to the waistband and pulled it toward my feet. I untied the front and lifted my ass to allow her to pull it off over my feet. My raging hard cock was pulled down with the suit and it sprang to a vertical position as it came free to the delight of Eva and Beverly.\n\nBeverly just stared at it with her lips slightly separated. Eva continued as the aggressor on behalf of her sister. If it wasn't obvious before, it was now. Eva was going to get Beverly laid and I was the designated lay-er. Eva's stares bounced from her sister to my bouncing hard cock. Beverly's tongue dragged along her upper lip as her stare lifted to my face. She had a sultry, pleading look in her eyes. Eva said, \"Fuck Bev. Look at that thing. Holy Shit. You have to fuck that. Shit. So do I.\"\n\nEva crawled closer and pushed me back and bent down and kissed me. I could taste the beer and pot on her breath. I kissed her back. She wrapped her fingers around my shaft and began jerking me off. I groaned with her contact. She kissed me again and then motioned for Bev to come closer.\n\nBeverly hesitated but then scooched her butt closer and joined Eva's hand motion. I groaned again when Beverly joined the action. Eva was motioning for her big sister to take the lead and Beverly bent down and kissed my glans. My cock surged even harder. Beverly closely watched my reactions as she pushed her lips down my shaft. When she kept going all the way to my pubic hair, I dropped off my elbows to the blanket and let out a loud guttural groan as I pushed my hips upward. Beverly held my cock in her mouth for several moments as Eva grinned down at me. \n\nBeverly pulled her lips up my shaft until she could breathe and went right back down again. I mumbled, \"Jesus Christ. That's amazing.\" Eva smiled and nudged Beverly who pulled her mouth up my shaft and licked her lips as she came off the glans. Eva took Beverly's place on my cock. She could almost deep throat my cock but she was pushing it and didn't look nearly as comfortable with it as her sister. Still, the sensation was incredible. \n\nI found Beverly's pussy with my right hand and Eva's pussy with my left. They were both sopping wet. I dragged my index finger lightly across Eva's clitoris and she tensed and groaned around my cock and then gagged and pulled herself back off to cough and clear her throat. Beverly was right there waiting and she swallowed my cock again. The sensation of my cock in her throat was driving me closer to orgasm and I went back to my complex math problems to pull it back. I didn't want to embarrass myself by cumming too soon.\n\nBeverly seemed to know that I was getting close and she pulled back off again. Eva started to take her turn but Beverly blocked her and maneuvered her right leg across my hips and sat down on my thighs with her fingers buried in her sex. She was breathing erratically already. Eva watched her big sister pull my cock back up to vertical and lifted herself high and forced my cock between her thighs, dragging the head hard over her clitoris. She screamed from the contact and her body surged forward and back. She found her spot and dropped her pussy onto my cock and quickly sank to my balls. She groaned all the way down. Her eyes glazed over and her mouth hung open as she gasped for air. She held her position at the bottom and flexed her vaginal muscles. I responded with a flex of my own and she grinned down at me.\n\nEva wasn't about to wait her turn. She maneuvered her knees to either side of my head and dropped her sex to my face facing Beverly. As she descended to my lips and tongue, she reached out and cupped Beverly's big tits and Beverly groaned again as she started pushing herself up and down my shaft. I cupped Eva's tits until Beverly displaced my hands with her own, more to steady herself than anything. I pushed Eva up so I could breathe and then resumed my assault on her clitoris, pussy and anus. She trembled every time I rimmed her anus. I couldn't figure out if she liked it or it was a new experience. \n\nBeverly was slowing her pace. She was getting tired. I picked up the tempo and began thrusting my hips up into her. A couple minutes later, she groaned out, \"OH MY GAAWWDD. YES. OH FUCK. OH GOD, EV. I'MMMM CUMMMMIIINGGGGG.\" She was thrashing everywhere and I grabbed her hips to hold her on my cock as I continued pumping into her. Her pussy clenched on my cock in rapid pulses. She cried out again, \"EV. I'M CUMMING. OH SHIT. IT'S BEEN SO LONG.\" Then she fell forward to Eva's chest. Eva held her there until she had to deal with her own orgasm. I exploded into Beverly's pussy at the same time Eva exploded into hers. The three of us had had near simultaneous orgasms and we were a pile of gasping, writhing bodies. Eva was flooding my mouth with her juices and I lapped them up as fast as I could and the action of my broad tongue on her clitoris rolled her into another orgasm before the first one had subsided. \n\nBeverly was oblivious as she milked my cock dry with her pulsing pussy. Then she started crying. Eva held her sister's face between her breasts and stroked her hair and face. Beverly quickly gathered herself and sat back up pushing my semi-erect cock back inside. She was embarrassed by her emotional reaction. She seemed as though she needed to justify herself. \"I'm so sorry for my outburst. I haven't had an orgasm in years. I had forgotten what it feels like. God, I needed that.\"\n\nEva giggled as she lay beside me looking up at Beverly. \"See. I told you.\"\n\nBeverly rolled her eyes at Eva and said, \"So you told me; and then you drag me out here in the God forsaken woods where only the odd guy can even get it up?\"\n\nEva burst out laughing and nodded her head. \"I know, right. Go figure. I guess there is a God after all.\" \n\nBeverly dropped her torso down on my chest and stretched up to kiss me. My still softening cock slipped out and dropped to my thigh. Beverly grinned hard as she felt it slide out. \"Holy shit Jack. I've never been fucked like that. Are you going to be around for the next couple days?\" Eva exploded in laughter which got me going. I laughed so hard that Beverly's big tits jiggled around on my chest. Beverly joined us which jiggled her tits even more.\n\nEva moved around Beverly and grabbed up my flaccid gooey cock from my thigh and squeezed it. She got no reaction so she stroked it a few times. Without coming down to look at me she spoke from her position out my line of sight, \"Jack? Are you a one and done kind of guy?\"\n\nI burst out laughing at her matter-of-fact approach to the question of whether I could get it up again. I wasn't surprised though. She was fascinated with my cock and even though she'd had two orgasms from my tongue I knew she wanted to feel me inside her. I teased her by flexing my cock and it pulsed in her hand. I said, \"Not generally. I guess you'd have to find out. If you can get it up; it's all yours.\" I flexed my cock in her hand again and she giggled as she ramped up her hand job. \n\nJust to tease Beverly, Eva dragged my glans up through her sister's sex. Beverly groaned into my chest and lifted her ass as though Eva was going to push my cock back in her. I knew that wasn't going to happen. When Beverly felt certain that she wasn't going to get fucked again, she rolled off my body just as Eva pushed her lips down my shaft and started a rapid-fire blow job. She grinned at me around my shaft when she felt it growing. She held it with her lips and lashed her tongue around the shaft until it grew enough that she couldn't take it all and she pulled back to the ridge and smiled at me. Beverly was amused by Eva's antics and eagerly waited to see my hard cock again.\n\nWhen it was hard enough, Eva pulled off and moved to her hands and knees facing away from me. She waggled her ass and looked back over her shoulder with a sultry look on her face. I didn't need an engraved invitation and I moved to my knees and guided my cock to her pussy. I dragged my glans through her bubbling juices to her clitoris which caused her to explode the air from her lungs. I pulled back as she pulled her hips forward and we both found the target at the same time. She rocked her hips back just as I pushed inside her. While I was used to dealing with women's cervixes, it was the last thing on Eva's mind. I slowed my advance but Eva pushed back hard and yelped and yelled, \"OH FUCK. THAT HURT.\" She was much more cautious after that and she let me fuck her. She moaned and groaned and broke into a chorus of \"OHHH.. OHHH.. OHHH's in synch with my thrusts. Beverly moved around so she could fondle my balls from between my legs which added to the sensation. After several minutes of pummeling Eva's pussy I was getting tired and slowed down. Eva's pussy was tighter than I expected and I could feel another orgasm brewing in my balls. I knew I was a ways off though. Suddenly, Eva screamed out, \"FUCK. YES. HERE I GOOOO.\" Her muscles tightened and her body began to shudder and then her pussy clamped on my cock and began clenching. To my surprise she pulled her pussy off my cock in mid-orgasm and turned her red, flushed face to me and said in a low pitched, quavering voice, \"FUCK... MY ASS... JACK.\"\n\nEva didn't wait for my response. She reached back between her legs and pulled my cock to her anus and pushed back hard. I groaned hard and she screamed. Beverly released my balls and backed away. Eva wanted it hard and fast and that's what she got. I had never just plunged my cock in a woman's ass like that. Eva stopped the moment I was inside and screamed again, \"FUCK. THAT'S BIG. OH MY GAAAWWDDD.\" I waited until she had adjusted to the girth. She started her own fucking motion and I let her take total control. \n\nMy orgasm, which had been postponed by Eva's screams of pain, was on the rise again. I gently began rocking my cock into her ass as she slammed herself back on it. She groaned, \"OH JESUS, JACK. I'M GONNA CUM AGAIN.\" This one was an anal orgasm and her sphincter grabbed my cock hard and cum exploded up my shaft into her bowels. She screamed as I poured several shots into her. She was throbbing everywhere and she yelled out, \"JESUS, YOU'RE RIPPING ME IN HALF.\" I stopped and let her grind her ass on my cock as best as she could. Her grip was amazing. She went down on her chest with her face buried in the pine spills on the ground. She stopped and felt the clenching of her anus on my cock. \n\nWhen I had softened enough, I was able to ease my cock from Eva's grip. She collapsed to the ground, half on the blanket and half off. Cum bubbled out of both of Eva's orifices. Beverly moved close to Eva and ran her fingers through Eva's pussy and pulled her fingers to her mouth. She sucked each finger in one at a time and grinned. She repeated the fingers through Eva's pussy and offered her fingers to Eva. Eva opened her mouth and sucked all four fingers in at once.\n\nI dropped to my ass on the other end of the blanket and grabbed another beer from Beverly's cooler. I watched Eva slowly recover as Beverly cradled her head in her lap. \n\nWhen Eva was breathing normally again, she said, \"Fuck. I'm done. Who's going to tow me home?\n\nBeverly laughed and said, \"Don't look at me. I was wondering the same thing.\" We each drank another beer as if that would make things better.\n\nThe rumble of a boat motor close to the island pulled my attention away from these two naked women. A female voice yelled out, \"When you guys are finished, there's a big thunderstorm brewing to the west and coming this way. I stood up to look first at the boat, where a middle age woman was pointing to the west. I turned to look at the angry black clouds. A boom of thunder emphasized the urgency. I turned back to the boat and the women yelled out, \"Nice cock. Do you live on the lake?\" I ignored her question and the women spun her boat around and tore off down the lake. You didn't want to be caught on the lake in a thunderstorm especially in a kayak. We all pulled our bathing suits on and Beverly and Eva tossed all the empties in their coolers and shoved the blankets into the picnic baskets and we ran to our kayaks. They loaded everything aboard and I helped them get in and pushed their boats out into the water. They immediately began paddling as fast as they could. I got in my kayak after pushing it into deeper water. I took off after them. The wind was coming up and it blew right in our faces from west to east. \n\nThey were both tiring fast and making little forward progress against the wind when I caught up. I yelled over the wind, \"Where's your cabin?\" I knew it was further away than my house. Neither of them was sure how to explain where their cabin was. Apparently, their plan when they left was to just keep going the way they had come until they got there.\n\nWhite caps were forming and blowing right in our face. We were in trouble and I took a moment to assess the situation and then yelled, \"Follow me to the south side of the lake to get out of the wind. My house is closer.\" They both nodded. The rain had started and soaked us further. White caps were breaking into our kayaks slowing us further.\n\nHeadway improved when once we got out of the wind. We skirted the south side of the shoreline all the way to my house. Instead of tying up to the dock, I just rolled out of my kayak and stood up in the shallow water and shoved my boat up onto the beach. Eva and Beverly looked like drowned rats as they came in behind me. I held Beverly's kayak so she could get out, while Eva paddled furiously to just maintain position as she waited for me. Beverly headed for the beach as I helped Eva. Everything in their boats was soaked so there wasn't anything to save. I pulled their kayaks up on the beach next to mine. \n\nLightening and loud claps of thunder moved through to the north of us. Thankfully, the worst of it never came any closer than a mile or two. Inside, we all congregated in the kitchen dripping water on the tile floor. We were gasping for oxygen from physical exhaustion. Beverly hugged Eva and between gasps said, \"Oh my God. I was sure we were gonna die.\" She looked at me and continued, \"Thank you Jack. You saved our lives.\"\n\nEva giggled and said, \"In more ways than one.\" \n\nBeverly laughed but then gave a scolding look to her younger sister. \"Seriously Eva, we were in real trouble there.\"\n\nEva got serious for a moment, \"I know Bev. I was just trying to lighten the mood.\" Beverly smiled and hugged Eva and then they moved over and brought me into their arms. I hugged them back. Eva asked, \"Bathroom?\" I pointed down the hall and she broke out of our group hug and went that way. I moved across the kitchen and turned on the Keurig Coffee Maker.\n\nI said, \"A cup of coffee to warm you up?\" She asked if I had tea and I nodded and pulled out a few pods of Earl Gray black tea. I had three cups poured when Eva came out of the bathroom. She was naked except for a towel wrapped around her head. Beverly gave her a disapproving glare. I couldn't stop looking at her well maintained muscular body and those amazing long legs. She had great boobs too.\n\nEva said, \"What?\" Then she turned to me and asked if I had a robe or something dry to put on. I went to the bedroom and pulled my robe off the back of the door. She snuggled into it and pulled the collar around her face and took a big sniff. \"Mmmmm. It smells like you.\" I thought about what I could bring to Beverly. I hadn't kept any of Anna clothes and they wouldn't have fit Beverly anyway. I dug through my bureau and found an old pair of shorts from college that I could no longer get into. Not that I was overweight or even trying to diet. I was a beanpole in college and had filled out since. I brought the athletic shorts and a baggy tee shirt, from the back of my drawer, to the kitchen for Beverly. She smiled as she accepted them and headed for the bathroom. \n\nA few minutes later, the bathroom door opened and Beverly yelled out, \"Hey Jack? Do you mind if I take a hot shower? I'm chilled to the bone.\"\n\n\"Sure. Turn the valve to point straight down,\" I yelled back. The door shut and I heard the shower come on a moment later. Eva was sipping her tea and leaning back against the bar. \"Let me get out of this wet bathing suit and we can wait out the storm in the living room. Eva pulled the towel from her head and her long hair fell to her breasts. She tossed me the towel and I took it with me to the bedroom. I stripped naked and was drying myself when the bedroom door opened and Eva stood at the threshold with a lascivious expression on her face.\n\nShe looked me up and down like she was choosing a cut of meat at the butcher shop. She said, \"Sorry. I have a thing for tall, well built men who take care of themselves. I just wanted one more look. She watched as my dick slowly rose past horizontal and then she looked up at my face and grinned as she said, \"A big cock never hurt either.\" Then she realized what she had just said and continued, \"Unless of course said cock is jammed into my ass with no preliminaries.\"\n\nI took offense to her insinuation and stared at her staring at me and said, \"I didn't jam my cock in your ass. You...\"\n\nEva cut me off in midsentence. \"Oh shut up and give me that thing.\" She was moving toward me and stripping off the robe at the same time. I stood my ground as she pressed her marvelous body against mine and stretched up for a kiss as her fingers closed around my hard cock. At six foot tall, she didn't have to stretch up much. She dragged her tongue across my lips. I engaged her tongue with mine. I could feel her firm tits and erect nipples on my ribcage. I wrapped my arm around her and put my hand on the small of her back and pulled her hard against my cock trapping her hand and my cock between us. My hand slid over the curve of her ass and caressed her butt and slid my fingers past her anus to the bottom of her pussy. That was as far as I could reach and Eva moaned in mid-kiss.",
        "Eva broke the kiss and opened her eyes as she slid her body slowly down mine. I thought the look on her face would melt me into a puddle on the floor. She was on fire. She dragged her tits over my abs and maneuvered my cock to my navel and slid her tits down either side of my cock and pushed her lips onto my glans. I groaned hard and broke our eye contact as my head rocked back on my neck. I groaned hard and reached for her head. She was already pushing her lips down my shaft and when I felt my glans push into her throat I groaned hard again as I examined the ceiling again. \n\nEva held her position with her lips and nose buried in my pubic hair for a few seconds and then her eyes smiled up at me as she started a blow job for the ages. She started with full depth plunges but then pulled back to the ridge and drilled her tongue into my spot. This time her mouth smiled around my cock as she enjoyed my reaction. She used both hands in counter-rotating action while she drilled my spot again. Then she changed to a rapid pace as her mouth accepted a third of my cock as she furiously stroked the remaining two thirds with one hand. She tilted her head from side to side to change the angle and the sensation was amazing.\n\nI heard the shower stop and Eva stepped up her pace even more. She apparently didn't want to get caught by Beverly. Her eyes drilled into mine as if she were willing me to cum in her mouth. I was close and she knew it. She went back to her throat job and that was it for me as I humped up and fired many long ropes of cum. Eva didn't even consider what she'd do if she couldn't hold it all in her mouth and suddenly her eyes went wide as her body lurched and she was forced to pull off my cock in mid-shot. Her lips were pulled tight as her cheeks bulged. She struggled to swallow and was finally successful. She swallowed several times trying to clear her mouth and throat. Tears had burst from her eyes.\n\nI wasn't done when Eva pulled off and I grabbed my cock in my hand to finish myself off. I groaned out, \"UUUNNNGGGAAAHHHH,\" as a long stream of cum splattered across her face from right chin to her left forehead. I thought that was kind of rude so I adjusted my aim down and two more splattered across her chest and stomach and then I was done. Eva didn't even notice as she was too busy clearing her mouth as she gagged and coughed. \n\nShe knew she didn't have much time before Beverly caught her. She stood up and pulled the robe back over her shoulders, stretched up to kiss me again and pulled away heading back to the living room just as the bathroom door to the hallway opened. I stood there in my bedroom with my softening cock in my hand and cum on my lips from Eva's kiss. I smiled to myself when I realized that Eva was completely unaware of the cum on her face and wondered what Beverly would say when she saw it. I grabbed the towel and went into the bathroom through my bedroom door. The room was all steamed up and I had to wipe the mirror to look at myself. I wiped my face and lips and then wipe off my cock and pulled a clean pair of athletic shorts on along with a tee shirt.\n\nBeverly had stopped in the kitchen to get her cup of tea but before I could get there I heard Beverly yelling, \"Eva! You fucking cum-whore. You ripped off a piece while I was in the shower. You little bitch.\"\n\nI hurried through the kitchen to find Beverly, dressed in my baggy athletic shorts and a huge tee shirt falling off one shoulder exposing most of one of her big tits. She had her hands on her hips as she glared down at Eva's cum splattered face. Eva had an innocent look on her face wondering what set her older sister off. Eva looked from Beverly to me as if pleading for some help. There was nothing I could do. The evidence was displayed on her face.\n\nBeverly took two steps toward Eva and reached for Eva's face. Eva flinched and pulled back afraid that Beverly was going to hit her. Beverly's hand followed Eva's retreat and her fingers swiped across her face and pulled back to show Eva the pearly white goo she had collected. Eva looked from Beverly's face to her fingers and recognized the goo for what it was. She leaned forward and sucked Beverly's index and middle fingers into her mouth to lick them clean and then pulled back, smiled at her big sister and said, \"MMMM. Good.\"\n\nBeverly was still pissed but she couldn't help giggling at Eva. She said, \"You're so wicked. You force me to come out here in the boonies in hopes of getting me laid and when we find a guy, who against all possible odds, checks off every possible category on my wish list, you get all the fun.\"\n\nEva grinned up at Beverly, who continued to stand there with her hands on her hips with her tee shirt drooping completely off one shoulder exposing her entire boob, and said, \"Not all the fun. I seem to recall that you got off a couple times.\"\n\nBeverly snapped back, \"Once.\" I could see her looking back in her memory and then she smiled and muttered, \"Fuck. What a 'once' it was though.\" I watched her face flush with lust as she thought about her 'once' back on the island. Eva noticed too and she looked back at me and grinned.\n\nEva said, \"Jack. Do you have any plans for the night?\" I got where she was going and Beverly stared at me eagerly awaiting my response.\n\nI saw the looks I was getting from both of them and I hesitated intentionally to tease them. \"Well, I do have to write my acceptance speech for the Nobel Peace Prize.\" Beverly looked slack-jawed at me as she subconsciously pulled the slumping tee shirt back up. I grinned at Beverly and she came in close to me and hugged me. Eva was all grins and daintily clapped her hands together.\n\nEva threw open her robe and cupped her tits in both hands and for the first time realized that her tits were sticky with cum. She looked down and pulled her hands away to see how much she had on her. It was a lot and she looked up at Beverly, who had renewed her disapproving look. Eva burst out laughing which got Beverly laughing too. Eva pulled her hands to her face and began licking the fingers of both hands. To my total surprise, Beverly dropped to her knees in front of the seated Eva and began licking the sticky, half-dried cum off her little sister's tits and neck. Eva's breath exploded from her lungs and she pulled Beverly to one of her erect nipples. My cock never reacted faster. It was tenting my athletic shorts in two seconds. I couldn't see Beverly's face as it was buried between Eva's tits. Eva's eyes closed and her lips parted as she rolled her head back as it lolled around in pure ecstasy as she gathered her breath again and groaned loudly.\n\nEva's hands went down the front of the Beverly's baggy tee shirt and cupped her big tits and Beverly groaned into Eva's cleavage. I reached down in my shorts and pulled out my cock and stroked it slowly as I wondered how far these two were going to go. They had seemed to be close but I hadn't figured that they were this close.\n\nSuddenly Beverly pulled back away from Eva and fell back on her butt. Eva's lust filled eyes opened and it was obvious that Eva was disappointed. Beverly's eyes revealed a more horrified look at what she was doing with her own little sister. Beverly buried her face in her hands and mumbled something about, \"What am I doing.\" She shook her head from side to side like she was trying to shake the lustful thoughts from her mind. Then, with hands still holding her face, she yelled, \"Eva. Damn you. You make me so crazy sometimes.\" Eva looked back at me with smile that immediately changed to a lustful grin when she saw me lazily stroking my cock.\n\nEva stood up from the sofa and leaned over Beverly and stripped the tee shirt up over her head forcing her hands from her face. Eva said, \"Come on Bev. Jack's cock is up and I have a feeling that it's not going to be 'once' for long.\" When the tee shirt came over her head Beverly was looking at me with a huge grin on her cum smeared face. Eva was trying to get Beverly's shorts off and Beverly was lifting her butt off the floor to help her. In seconds they were both completely naked and helping each other off the floor. Eva almost pushed her sister at me and we hugged and kissed each other. I looked over Beverly's shoulder at Eva. Her fingers were already in her sex strumming like she was playing a guitar. She smiled at me when she saw me looking her way and her head rocked back as she touched her clitoris.\n\nWhile still kissing, Beverly reached down between us and took my cock away from me and held it like she was shaking my hand and started jerking me off with that backward grip. I backed toward the bedroom drawing Beverly with me. She didn't want to break the kiss or lose my cock. \n\nOnce by the bed, I turned us around and pushed her back to the edge of the bed and gently eased her down. She reluctantly broke our embrace but she hung on desperately to my cock. She looked up at me. She was on fire and her eyes pleaded for me to put the fire out. I eased her back so her legs dangled over the edge of the bed and then I bent forward and kissed her passionately. She eagerly responded in kind and moaned into my mouth. I was on a mission and I pulled back from her. She didn't want to break our embrace and she followed my lips until I stopped her with my hands firmly on her big tits. She grabbed both of my wrists and held my hands in place.\n\nI bent lower and kissed her erect nipples and Beverly's head snapped back as she let out a long demonic groan. She still had a tight grip on my cock but as I bent lower, I lowered myself to my knees between her legs and she was forced to relinquish possession of it. Judging from the look in her eyes, she was disappointed, until I moved my face to her sex and kissed her erect and protruding clitoris. Her hands went to the back of my head as she screamed and rocked forward dropping her tits to my forehead. She held me there.\n\nEva had followed our conjoined move from the living room to the bed and had crawled her naked body onto the bed a few feet from Beverly. She apparently didn't want to miss a thing but didn't want to disturb her big sister in any way. On my way into Beverly's sex, I grinned at Eva and she grinned back saying, \"Give it to her Jack. Make her cum. God knows she needs it and deserves it.\" There was a story in that statement that would have to wait.\n\nI parted her labia with my tongue and dragged it through her pink inner folds. She was soaking wet. I dipped my tongue inside her pussy and Beverly flew back to a sitting position and yelled, \"YYYUUUNNNNGGGG. OH MY GOD.\" She pulled me hard to her sex and pivoted her hips upward urging me to continue. I had no intention of stopping. I had a fleeting realization that my cock was softening as I concentrated on Beverly's pussy. I flicked my tongue quickly across her clitoris again and she ground her hips into my face looking for more. I gave her more. I tongue fucked her alternating with quick attacks on her clitoris and even her anus. She had fallen back on the bed with her hands still holding my head. Her body writhed like an undulating snake. I had to hold her hips to me as she screamed her way through one orgasm and then started chanting, \"OH GAAAWWWDDD. OH JESSSUUSSS,\" over and over again as she groaned her way through two more. She still held me in place as she recovered. She came up on her elbows and looked down into my eyes and with a pleading voice said, \"One more?\" I chuckled into her sex.\n\nEva laughed too and said, \"Jesus Bev. You're going to be a puddle of goo if you keep going.\" Beverly giggled at Eva's statement but then pivoted her hips up again and I went back to work. Beverly was on her back gripping her own tits as she crashed through two more orgasms. She was just moaning non-stop between huge gasps for air. My tongue was non-functional for the moment. I kissed Beverly's bubbling pussy and then her clitoris and Beverly rocked her hips involuntarily but otherwise didn't move a muscle. \n\nI pushed myself off the floor and crawled up on the bed beside Beverly and cuddled her to me as I pressed my flaccid, but growing, cock to Beverly's hips. She felt it moving against her and she released one of her tits and wrapped her fingers around my shaft. It came to full size in moments after that. Beverly lazily ran her hand up and down my cock and said, \"When I can move again, I'm going to want that inside me.\" \n\nI chuckled and leaned toward her and sucked her free nipple between my lips in a firm kiss and pulled back. \"Whenever you're ready. You're a beautiful woman and you turn me on.\" I was pouring it on a little, but I thought it was appropriate. Her confidence had been totally destroyed by her husband's affair with a younger woman who she considered was everything that he wanted and she wasn't. She needed a boost and I would do anything I could to give her one.\n\nEva looked at me and her eyes teared up as she mouthed the words, 'Thank you Jack.' She blew me an air-kiss and then moved over close to Beverly and bent down and kissed her on the lips. Beverly mustered enough energy to kiss her back. I watched.\n\nEven though they were sisters, they were on the cusp of a lesbian relationship. Eva was pursuing it and Beverly was struggling to reject it. Eva swiveled around and cuddled up to her big sister on the other side from me. Beverly held us both to her chest and Eva grinned at me when I flicked my revitalized tongue across her nipple eliciting another groan. I was expecting Eva to do the same on the other nipple but she didn't. She cuddled her head into Beverly's neck and shoulder and kissed her collarbone.\n\nWith both of Beverly's arms wrapped around our necks, Eva reached across Beverly's still trembling body and grabbed my hard cock. It had been bobbing above Beverly's thigh and Eva couldn't resist it anymore. She just held it and giggled when it flexed in her hand. It was as if Eva was protecting my cock until her big sister was ready for it. We all lay there like that for a long time.\n\nThe storm, that had been raging when we came in, had dissipated considerably. In the throes of passion it didn't exist. Now the rumble of far off thunder rolled around and around the lake. Eva became aware of the thunder too and commented on how it echoed back and forth. Beverly lazily dragged her fingers through our hair as she clung to us.\n\nEva apparently saw an opportunity in the situation and she released my hard cock and moved her hand to Beverly's sex. I saw what she was doing and she grinned at me. Most certainly Beverly thought the hand in her sex was mine and she pushed her hips up to firm up the contact. Eva dragged her fingers through her sister's pussy and lightly touched her sensitive clitoris. Beverly groaned softly and humped up her pelvis again. Eva grinned at me again and I mouthed the words, 'You're evil.' She grinned again and gently nodded at me. \n\nEva continued to slowly drag her index finger through Beverly's sex and it was obvious to all of us that she was getting aroused again. With eyes still closed as she faced the ceiling, Beverly muttered, \"You're getting me hot again Jack.\" Eva looked at me again and tightly pulled her lips together to keep from giggling. Her eyes were on fire as she was getting hot too.\"\n\nI wasn't going to be a party to Eva's efforts to pull Beverly 'over to the dark side', as she would later describe it. Beverly would go there only if she wanted. I pulled out from under Beverly's arm and kissed my way down her body. She shivered all the way down. My cock was begging for attention as I watched Eva bringing her unknowing sister back to a boil.\n\nBeverly lifted her head off the bed to see if I was going where she hoped I was going. Her own tits blocked her view of her sex and she never saw her sister's fingers in her pussy before Eva removed them.\n\nI wanted Beverly in the middle of the bed. I wanted to fuck her missionary style. She apparently did too as she pulled away from Eva and struggled to get her body off the edge of the bed as her legs dangled over the side. Suddenly, there was urgency in her movement. She wanted my cock in her pussy and she couldn't move back fast enough. I followed her on my hands and knees with my burgeoning cock pointing down at its target. Eva rolled away to make room, but as I moved my knees between Beverly's legs, Eva pushed her head between us and sucked my cock into her mouth and immediately sucked my glans into her throat.\n\nBeverly had lifted her head to watch my advance as she rolled her hips upward to invite me in and she yelled, \"Eva. No. Damn you. That's mine.\" She tried to bump Eva off my cock with her hips but she couldn't get high enough. Eva pulled up to the ridge and plunged back down my shaft again. Beverly yelled again, \"Eva. No. Please?\"\n\nEva reluctantly pulled her lips up my shaft and smacked her lips with her tongue to collect a wad of saliva. She grinned up at me and then turned to face Beverly. \"Sorry Bev. I couldn't help it. It looked so delicious.\"\n\nBeverly dropped her head back to the bed and spoke to the ceiling, \"Jesus Eva. You're incredible. Some wingman you are.\" Eva giggled and pulled back to make room for me to guide my cock to Beverly's pussy.\n\nWhen my glans touched Beverly's sex, she immediately lifted her head to watch. I dragged my glans through her neatly trimmed pubic hair as I watched her face contort into a lustful stare at our impending union. She quickly glanced up to look into my eyes. She grinned and nodded eagerly. I pushed my glans inside her pussy and she dropped her head back to the bed as she groaned loudly, \"Oh fuck. Yes. Jack, your cock is amazing.\" She pivoted her pelvis up taking more of me. \"Fuck me Jack. Fuck me until I die.\" Eva giggled at that statement. I eased my way down until she flinched and stopped and pulled back. She lifted her hips to take me in to feel the pressure at the bottom of her vagina. She wanted the pressure but not the pain. \n\nI noted the depth and pulled back out. Eva reached in behind me and wrapped her fingers around my cock as I pulled out. It was slippery with Beverly's lubrication. I pushed right back down to the same depth and Eva's hand slid off my cock and cradled my balls. I watched Beverly's face, which plainly relayed the pressure in her vagina and after a couple of strokes I could read the depth right between pleasure and pain in her eyes. I fucked her hard after that as my cock slid through Eva's hand to quickly cup my balls before I pulled out again.\n\nBeverly was moaning non-stop through a chant of, \"OOOHHH...OHHHH... OHHH's\" that was in synch with my down strokes. Her chant rate increased with my pace and when I began piston fucking her with just the glans, she screamed out, \"FUUUUUCCCCCKKKKK,\" as she lifted her hips and held them there. Eva's hand was still there gripping most of my shaft as I tip-fucked her sister as fast as my hips could go.\n\nWithout warning I drove my cock deep into her pussy and she screamed again, \"OH MY GOD.\" I took two full depth plunges and then went back to tip-fucking her. She was delirious as she rocked her head from side to side and grabbed her own tits to hold them down. They had been flying everywhere and that erotic sight raised the hardness of my cock and she screamed again. Eva kept her hand on my cock but she moved her body so she could watch her sister thrash around on the bed under me.\n\nBeverly's face and neck contorted into a mask of tight muscles and tendons. She was holding her breath as her muscles tightened even more and then she released the tension and burst out, \"UNNGGAAAHHHH\". Her hips launched upward onto my cock as she drove her head and back into the bed. Then they reversed as her back arched raising her chest and driving her hips back into the bed. She screamed the loudest yet, \"YES. YES. OH MY GAAWWDD. I'MMM CUMMINNNGGGG AGGAIINN.\" She drove her hips back up as I cautiously pushed down. It was hard to gauge my depth with her driving her hips up like she was so I was conservative so I wouldn't hurt her. She wanted nothing of that conservatism and she screamed again, \"OH GAAWWDD. GIVE IT TO ME JACK. GIVE IT ALL TO MEEEEE.\" I did as directed. She never flinched as my cock drove all the way to my bottom. ",
        "I looked down into Beverly's face. She was in heat with a demonic look on her face as she furiously thrashed her hips up into me. I was giving her everything I had and she loved it. I could feel her pussy clenching hard on my cock and I thought it would never stop. Gradually, her demonic expression morphed into a look of pure bliss as she came down off her orgasm. I was close to mine so even though she had stopped her furious hip thrusts, I continued on. She grinned up at me obviously pleased that I wasn't done yet. I was getting close and I could feel my balls pull up tight and my cock hardened and Beverly and Eva both felt the change. Beverly's eyes went wide as she groaned out, \"OH JESUS. HERE COMES ANOTH...\" She didn't finish her sentence as her hips launched up into my down-stroke again and we both screamed together in mutual orgasms. She groaned with every strong surge of cum into her pussy. Eva was gathering cum being squeezed from Beverly's pussy as it ran down to her anus and the bed below. \n\nWith the final of many powerful streams of cum deposited, I collapsed to my elbows to hold my weight off her. She lifted her head to kiss me and I lowered mine to receive them. I felt Eva's hands on my balls. Then I heard her muttering, \"Yumm. Good.\" I broke the kiss with Beverly and looked back. Eva scooped cum, oozing out of her sister's pussy, as my cock softened, and shoved her fingers in her mouth. She returned for more and this time she carried her cum covered fingers to Beverly's lips and she eagerly sucked them in and licked Eva's fingers clean.\n\nI doubted that any woman thinks cum is 'yummy', but the pronouncement is part of the game, I guess. Eva collected more cum and brought it to Beverly's mouth. I chuckled to myself as I pulled my semi-erect cock from her pussy and sat back on my feet surveying Beverly's and Eva's bodies. They were completely different and each was beautiful in my eye.\n\nBeverly's pussy randomly pulsed as she apparently hadn't fully descended from her orgasm. Cum dripped from my glans and Eva quickly maneuvered to push her lips over the velvety crown to lick it clean. She pulled back and grinned up at me as she licked her lips. I smiled and ran my hand down the shaft and gently massaged my throbbing balls. \n\nEva took my cock from my hand and gazed up at me with a beseeching look on her face. She didn't say anything but I knew what she wanted. I said, \"Eva, I'm certain that with that mouth of yours, you could get me back up again. But my balls are throbbing and they may just explode if asked to go again right now. Okay?\" Eva frowned and lifted my cock to my stomach and kissed both of my balls as if kisses made everything better. It couldn't hurt.\n\nWe all got in the shower together to clean ourselves off. There had never been more than two in the shower and it was tight. We had to pull close to each other in order to move under the cascading water. I took every opportunity to molest their tits and asses and they did the same with my cock. I was praying that my cock wouldn't make the climb signally another round that I was sure my balls couldn't finish. We dried each other and climbed under the covers. Eva cuddled up to me on my right and Beverly did the same on my left. I don't know if they worried the other would steal it but they both laid their hands on my cock after it found a resting spot on the top of my left thigh.\n\nWith the lights out, the room was occasional lit by lightning. After a while, a low pitched, almost inaudible, rumble followed. The wind and rain had subsided but not stopped. Several times I was almost asleep when one or the other would purse her lips and kiss my chest. Beverly would try to pull my cock her way and Eva would pull it back. I finally reached down and took both of their hands away and set them on their own hips. I covered up with both hands and finally drifted off. \n\nI fully expected that I would wake in total darkness with my cock deep in one or the other's mouth. When I did wake, it was dawn. Both Eva and Beverly had rolled away from me and were sound asleep on their sides. I had an immense morning woody. I ran my hand down the length and pulled it down on my stomach. When I released my hand, my cock pushed right back on the covers. I didn't really want to wake them but I couldn't figure out how I was going to sneak down the bed without disturbing one or the other or both. Instead, I put my hands behind my head and reminisced about the past half day. It was kind of cool to have the objects of my carnal thoughts lying right there beside me. My hard cock pushed up against the covers. I pushed the covers down to my thighs and let my cock bob up and down fighting gravity. \n\nWhen I pushed the covers down, I exposed all the way to the curves of their butts. In a half-awake state, Eva reached behind her searching for the covers to pull them up. Her searching hand found my extremely hard cock and she was instantly awake. She rolled back toward me and stopped on her side right up against my body. She was looking right at my bouncing cock. She stole a glance across my chest to see if Beverly was awake. When she was satisfied that her sister was still asleep and facing away, she looked up at me as if asking, \"Now?\" I nodded. \n\nI think I was as eager as Eva was as she started running her hand up and down my shaft. She wasn't really jerking me off. She was gauging my hardness and she pulled her gaze from my cock to my face and grinned at me. I nodded again. Eva eased her way down my body and placed her tits on my right thigh and pushed her face toward my cock as she pulled it into alignment. She quietly pushed her lips down my shaft. She took it all and I lift my chin and pressed my head back in my pillow. A groan was right there but I muffled it. Eva didn't want to disturb Beverly and have to share. Eva held my cock in her throat and watched her sister. When she was sure she was still asleep she pulled back up to the ridge and pushed back down again. Then she started an amazing blow job and there was no hiding those sounds from either of us. She sucked my cock for several minutes with a constant soft, \"mmummpphh.. mmummpph\" sound. I wasn't going to last much longer. I was intentionally holding myself back because I never wanted Eva's amazing blow job to end. She pulled her lips back and held my shaft to my stomach as she kissed and licked her way down to my balls. She sucked one testicle on to her lips and then the other before she looked at me as if to ask if they were okay. I smiled. She licked her way back up my shaft and rolled her lips over the top and sank to the ridge as she grinned at me. She paused there for only a moment and then drove her lips down to the base again. I was done when my glans pushed into her throat. I groaned as softly as I could, \"yyyuunnggg,\" as my hips lifted and I blew my load deep in Eva's mouth. She pulled back to collect it. She had learned the hard way that she needed to be prepared to swallow right away and she gulped down stream after stream of my cum. \n\nEva held my spent cock with her lips as she lashed her tongue around my shaft cleaning any semblance of the taste of cum. Then she just rested her head on my thigh with her lips locked on the ridge.\n\nWhen all was completely quiet again, Beverly spoke, \"Are you guys done yet? Let me know when it's my turn.\" Eva released my cock from her lips and burst out laughing. I joined her. Beverly turned over and rolled her body against mine. Her big tits rested on my chest as she moved in to kiss me. She said, \"Good Morning Jack. Did you sleep well?\" Then she looked down my body at Eva and said, \"I hope you left me some.\" Eva giggled again and pulled herself up my body dragging her tits over my hip to my ribs and settled down stretching in to kiss Beverly. Beverly kissed her back. \n\nEva broke their embrace and said, \"Good morning, Sis. I hope you slept as well as I did.\" Beverly grinned and nodded to her little sister.\n\nBeverly said, \"It's amazing how good sex makes you sleep well after. I slept like a log until an erotic dream woke me. I woke as horny as hell to the sounds of you sucking off my dream partner.\" Eva giggled hard and kissed Beverly again. \n\nIn order to break up their back and forth, I flexed my mostly erect cock and it jumped up off my stomach where Eva had left it. They both saw it and Eva started back down again until Beverly said, \"Eva. Don't you even think about it? I've still got this image in my brain from my dream and guess what; you weren't in it.\"\n\nEva pushed herself away from me and sat up motioning for her sister to take my cock. Beverly grinned but didn't move closer to it. Instead, she came up on her hands and knees and waggled her ass at me. She put her arms up on the headboard and waggled her ass again. I got the message on the first waggle and I was already moving to get on my knees behind her to fuck her doggy-style. \n\nI pushed my hard cock between her thighs and Beverly looked between her tits to see it appear. I released it and let the hardness lift my cock and press hard to her pelvis. I planned to drag my cock back through her pussy but Beverly beat me to it as she dragged herself forward. When my glans dragged across her clitoris she sucked a huge quantity of air into her lungs and immediately exploded it back out again. I pushed the tip to her pussy and pushed inside. She groaned hard and pushed back until she flinched in pain again. She searched for that intermediate position and started fucking me. God her pussy was amazing. We were both fucking and at one point my cock came out and she urgently repositioned herself and pushed back on again. The same thing happened twice more and I quickly pushed back in to renewed groans from Beverly. My orgasm was building again and I increased my pace. She was moaning, \"Oh fuck... Oh fuck.. Oh fuck,\" in synch with my thrusts. She stopped her movement to let me take the lead.\n\nSuddenly Eva pushed her head in under Beverly's chest and before she knew what was going on Eva sucked one of Beverly's nipples to her lips. Beverly groaned hard from this new attack and she exploded into an orgasm. Her pussy throbbed on my cock and that action pulled me over the top of my orgasm. I was humping my cock into her as each shot of cum launched into her pussy. With both of us in mid-orgasm my cock pulled from her pussy and she let out a loud gush of air from her pussy that had gotten trapped during the previous uncoupling and re-couplings. That brought the entire show to a grinding halt as Beverly groaned out, \"Oh great a pussy-fart just when it's most embarrassing. Eva had to release Beverly's nipple because she was laughing so hard. Eva got me laughing and Beverly buried her head on the headboard and groaned, \"Jesus Christ, save me.\"\n\nThe cum that I had just deposited came out with the burst of air and splattered on my thighs. I sat back on my feet and Eva pulled herself out from under Beverly's tits and moved between us pushing me further back and then pushed her mouth to her big sister's pussy and slurped up the escaped cum. Beverly groaned but it felt too good for her to protest. Eva was on her chest with her face tipped up in Beverly pussy. Eva's ass was humped up with her legs spread wide and I couldn't resist the urge to push my semi-hard cock into Eva's pussy in that position. To me that position is the most erotic position for fucking there is, especially if the woman has an ass like Eva's. \n\nEva had to stop her attack on Beverly's pussy to groan through my insertion. She lifted her hips higher and I curled my fingertips into her hipbones. She looked back at me with lust filled eyes and then turned back to Beverly's pussy. My momentum was driving Eva's face against Beverly's sex and Eva just stuck out her tongue and let me provide the motion. \n\nI released one of her hips and pushed my thumb into Eva's anus. Eva groaned, \"Oh Jesus. Yes.\" I held it there as she adjusted to it. \n\nBeverly was groaning out, \"Fuck, Eva. I'm gonna cum again. Oh God. I'm gonna cum on my sister's tongue.\" Eva went after her clitoris to drive her over so she could pull back and savor the sensation of my cock in her pussy and my thumb in her ass. Beverly's muscles seized and she was in her orgasm again. \"Jesus Christ. Here I go.\" She collapsed off the headboard and dropped herself to the pillows facing back toward us. She was gasping for oxygen as she drilled her fingers into her sex to continue driving her orgasm.\n\nEva was gasping for air as she turned back to look at me slamming myself into her pussy. Her mouth hung open as her head bobbed from the motion and suddenly she exploded into her own orgasm. She dropped her head forward into the bed and lifted her ass even more. My orgasm was building but it wasn't urgent yet. I had plans for my cock in her ass and when I pulled my fingers out of her anus and looked down at her gaping sphincter, I pulled my cock from her pussy and without hesitation moved my glans to her anus and pressed forward. Eva mumbled, \"Oh God. Yes. Fuck my ass.\" I eased my cock inside and slowly pushed by cock all the way into her bowels. Almost immediately, my orgasm suddenly became urgent. I began pumping my hips, driving my cock in and out in full length strokes. I lasted a half dozen cycles and launched another load into Eva's ass as she screamed with every cum shot. My balls were aching again. As I eased my cock from her anus, both of us groaned from the sensation. \n\nOnce I was out, Eva eased her hips down into the bed and tightened her sphincter muscle to keep my cum inside. She rolled on her side and looked back at me sitting on my feet with my limp dick hanging. \"Jesus Jack. You wore me out. I didn't think a guy could wear me out. Fuck.\" Beverly grinned at Eva's confession.\n\nThe sun was up and shinning bright when we all rolled out of bed and headed for the shower. We were all done but still we abused each other's sex during the shower and when we dried each other off.\n\nBeverly's and Eva's bikinis were still damp when they went to pull them on. I took them from their hands and threw the pieces in the dryer and we stood naked in the kitchen sipping tea or coffee. Beverly walked into the living room and looked at the pictures I had set up on the fireplace mantel. She carried one back to the kitchen and handed it to me. \"Is this you and your wife.\" I took it from her and looked at it. I looked back at Beverly and just nodded. \"She's beautiful. Stunning.\" Eva came over and looked at the photo in my hands.\n\nEva whistled and noticed my mood drop and she tried to lighten the gloom in my face by teasing me. \"Wow Jack. How did an ugly guy like you catch a woman as beautiful as that?\"\n\nI stared down at the photo and said, \"I never knew.\" Beverly threw an excoriating stare at Eva for her failed effort to lighten my mood. Right on cue, the dryer announced that it was done with a loud beep. I set the photo on the counter and pulled their suits from the dryer. The pieces were much easier to pull on warm.\n\nI pulled on a clean pair of shorts and we walked down the deck stairs and I dumped the water from their kayaks. After another round of parting kisses, I steadied their kayaks for each of them as they climbed in and before they paddled away, Eva revealed that she had left her cell phone number on the counter and asked that I call her before they had to go the next morning.\n\nI stood there watching them leisurely paddle across the lake and around the point and went back in the house. My balls were aching again and I massaged them as I climbed the stairs back up to my deck. I paused halfway and looked over at Priya's house. There was no indication that anyone was there. \n\nBack in the kitchen, the photo of me and Anna that I had laid on the counter got my attention. I picked it up and stared at it for a long time before carrying it back to the mantel. I wiped the glass and frame to remove any dust and placed it back in the exact same position it came from. I had to force myself away as I continued looking at it. 'Jesus.' I thought. 'I have to stop torturing myself.\"\n\nI toasted a bagel and slathered cream cheese on it, made a new cup of coffee and took both out on the deck along with my e-reader and sprawled out in the zero-gravity chair. I had finished the bagel and picked up my book as I took the final sip of coffee. I had just started reading and realized I couldn't remember what the book was about. I back up a couple pages and reread them. My memory kicked in and I flicked back to the page that it had opened to. The phone rang. My phone never rang.\n\nI struggled out of my chair and picked up the phone on the fourth ring. \"Hello?\" It was Eva. She was all bubbly as usual and started the conversation by letting me know that they made it home okay. Then she proceeded to thank me again for saving their lives, which was still probably an exaggeration. I hate talking on the phone and my end of the conversation was \"Uh-huh's\" and \"Yes\" and \"No\" and an occasional \"Okay\". Eva called me on it, \"You're not much of a talker on the phone, are you?\" My response was a simple, \"No.\" She laughed and then Beverly apparently took the phone from her sister.\n\n\"Jack. We really called to ask if we could take you to dinner tonight. We owe you.\" Then her voice got huskier as she continued, \"I mean we really owe you.\" I could hear Eva in the background laughing. Beverly continued, \"We don't know our way around up here but we were hoping there was a nice restaurant nearby. It seems like everything is such a long drive to get to. I don't know how you live out here away from everything.\"\n\n\"That's kind of the point,\" I said. \"There's a local Inn that has a restaurant. Not many tables I'm told. I've never been there but I hear people rave about the food. Do you want to meet there, come here or I'll pick you up?\"\n\nBeverly hesitated and said, \"Well. Uummm. I'm kind of embarrassed to say we don't know how to get to your house by roads. We don't have GPS in the car so your address won't help. We can't remember the address here. There's a fifty-five on the house but I don't know the street's name. Can you pick us up in your pontoon boat? We'll be standing on the dock at seven thirty with bells on.\"\n\nI chuckled and said, \"Well, I'll be at the helm of my boat with balls on.\"\n\nBeverly giggled and I heard Eva giggle and say, \"You'd better,\" in the background. They must have had me on speaker. Beverly told me vaguely how to go by boat because that was the only way she knew.\n\nI hung up and said out loud to myself, \"Well Jack. You're going out on a date for the first time in nearly twenty years.\" I used the internet to find the phone number for the local Inn and made reservations for eight o'clock. I was already trying to think what I had for clothes to wear. I pictured them as big city girls and they would be dressed to the 'nines'. \n\nI retreated to the deck and my book again. The sun was high in the sky and the day was getting hot fast. The cicadas were tuning up as the heat built. I heard a car coming down the gravel road. The tires popped loudly on loose stones. I thought it might be Jacob and Ashley but they always came separately in his truck and her car. The car passed by my house. It had to be Priya unless it was someone looking to drive through only to find out it's a dead-end road. If it was the latter, the car would come back past my house in less than a minute or so. It didn't return. I went back to my book.\n\nI had my ever-present binoculars sitting on the deck railing and I would set aside my reader and grab the binoculars as each boat came into view. They were mostly pontoon boats passing through to another larger cove to the north. Speed boats towing kids on tubes and some water skiers or wake boarders thundered in. They did some maneuvers trying to shake the tubers loose to the screams of the kids. Then they'd zoom back down the lake. ",
        "An all white pontoon boat charged into view going like a bat out of hell. That's unusual to see because most all of the pontoons didn't move any faster than mine. I watched it as it suddenly slowed and drifted to a stop. There were four people on board. They were in the middle of the lake so I couldn't make them out very well with the naked eye. I pulled my binoculars up and noted that there were three young guys and one bikini clad young lady on board. She was sprawled across the padded sundeck at the aft end. I could hear loud music playing but I couldn't make out the song. The guy driving the boat tossed an anchor in the water. The other two guys, dressed in long knee length bathing suits that barely clung to their hips, were dancing around the deck twerking their pelvises at the young lady. I could see her burst out laughing and then after a short delay I could hear her laughter. The anchor thrower joined the dance. He was trying to get the young lady to join them but she just laughed and waved them away.\n\nThe three guys were in a limbo dance as they swayed their hips dancing toward the bow and then circled around toward the stern and twerked their hips one at a time as they approached the girl. Around and around they went until the girl reached out and put her hand on the anchor thrower's obvious erection tenting his suit that had appeared during the last cycle around the deck. He waggled and twerked his hips for her but stayed just out of her reach. I could hear her laughing as she lay on the sunning deck with her feet dangling over the port side. The guy followed the dance line back to the bow and followed the other two back toward the girl again.\n\nThis time, as he approached the girl, who was still reaching for his erection, he pulled his bathing suit off his hips to his knees and waggled his erection within her grasp. She grabbed it and pulled it and him to her face. In one single movement she buried his cock in her mouth. The dancing stopped as the other two guys pulled their suits down to the deck and stepped out of them. Anchor guy was thrusting his hips at the girls face as she reached out for the other two erect dicks. \n\nI lowered my binoculars to see if anyone on the shore could see what was going on. I decided that one could only see a glob of bodies close to each other from this distance. I raised the binoculars again. Anchor guy was really giving it to her while she jerked off the other two guys. They were both untying the bows on her bikini top and bottom. \n\nMy cock hardened but my balls were objecting. They still ached but less so than this morning after dropping my load in Eva's ass. I reached my left hand into my shorts and ran my index finger around the ridge and velvety crown. \n\nThe girl on the boat sat up and jumped down to the deck, leaving her bikini behind. She was naked and she had hands all over her. She sat down on a forward-facing bench seat and accepted anchor guy's cock back in her mouth. I couldn't see her body, just her head bobbing on and off his cock. I could also see her hands furiously working the other two guy's cocks. \n\nThe wind changed directions and the boat pivoted on the anchor line so the starboard side was facing me and I could then see the girl's tits bobbing everywhere. My cock surged harder which made the pain in my balls worse. Anchor guy moved so he was facing me taking the girl's head with him. He had a hold of her head and he was slamming his hips to her face. The guy that got displaced when anchor guy moved came around him and bent forward and grabbed her bouncing tits and shoved his cock between them and started pumping his cock through her ample cleavage. Her free hand went to anchor guy's thighs pushing him away. He pushed back against her hand and she gagged and pulled her head away just as cum sprayed out of his cock across her face. Then he aimed his cock down into her cleavage as his buddy flailed away until he added his load to her cleavage. \n\nThe third guy who had been getting just a hand job dropped to his knees between her spread legs as the tit fucker moved back stroking his cock to finish the last of his load from a short distance in front of her. Third guy pulled her hips forward on the bench seat as she continued coughing and sputtering. I watched her head launch back on her shoulders as third guy drove his cock into her pussy. I heard her scream seconds after I saw her mouth open. He must have been pretty close to his orgasm because he launched his hips to her no more than a half dozen times before he audibly groaned and spastically pumped his hips. I saw her lips move and then heard, \"Not in me, you ass-hole.\" She shoved him back away from her.\n\nThe girl was sitting on the bench with her hands lifting her tits looking down in her cleavage. I heard her yell, \"I hope you guys are satisfied. You've left me with a fucking mess.\" She grabbed the towel draped over the back of the captain's seat and wiped her face, chest and tits and finally her crotch. \"I'm not cleaning up the seat and floor. It's not my boat.\"\n\nAnchor guy sat down beside her and leaned in for a kiss. She yelled, \"Get away from me. You guys are nothing but a bag of dicks.\" Anchor guy said something but I couldn't hear what. The other two guys pulled their wallets from their shorts and they extracted several bills each and handed them to anchor guy. The girl reached for the money and anchor guy held it just out of her reach. She stood up, exposing her naked body and grabbed for the money again. Anchor guy wouldn't let her get it. Then I heard her yell out, \"God damn it Jimmy. Give me my share or I'm telling Mom and Dad that you've been pimping me out to your friends.\" Jimmy, aka anchor guy, counted out the bills and handed some to her. She grabbed the money and then turned around and grabbed her bikini off the sunning deck and retied all four of the bows and gave the two customers one middle finger and then gave them both middle fingers. I could see them all laughing as they pulled their bathing suits on. Jimmy pulled up the anchor and then slid into the captain's seat. I heard the motor roar to life and they moved slowly back down the lake the way they had come.\n\nWith a show as pornographic as that I would normally have cum a couple times and my cock was hard in my hands but my balls were warning me and I took heed. I pushed my erect cock back in my shorts. I chuckled as I thought about the teenage hooker, her john's and her pimp who was most certainly her brother or step-brother. I thought that maybe we should change the name of the lake to 'Peyton Pond' because of all the sex I had recently witnessed on land and water.\n\nI tipped back in my chair and turned on my reader. I read for twenty minutes and dropped the reader to my chest as my eyelids grew heavy like usual and my chin dropped to my chest. I woke to find the sun noticeably lower to the western horizon. I got up and brought my reader and binoculars inside. I still had to decide what I would wear tonight.\n\nAfter showering and shaving and all the other stuff, I pawed through my closet and found a pair of dress slacks, a light blue button-down dress shirt and stuffed way in the back, a sport coat. Depending on how Beverly and Eva dressed I figured I could wear it or not. I found a hanger full of ties that I had never worn and I wasn't going to start now. I couldn't find any dress shoes so I pulled on my leather sandals.\n\nArmed with a vague idea about where Beverly and Eva's rented camp was, I pulled away from my dock and headed across the lake heading north and then west into the descending sun. Ten minutes later I rounded a point of land and just as Beverly promised, they were standing at the end of their dock. I was glad I dressed the way I did because they were dressed for a city nightclub. \n\nI eased up to their dock and opened the side door. In full makeup they were both absolutely stunning. Beverly wore a gold shimmery silk blouse that was almost translucent. Her form was obvious with the sun behind her. Her tight skirt came almost to her knees and the wide belt at her waist hid the few extra pounds she carried. She definitely knew how to dress to maximize her assets. Her hair was curled. Her bright red lip gloss made me think of Marilyn Monroe. I welcomed her aboard with a bow and a kiss to her right hand. She staggered a little in her heels as the boat rocked on the wake of a passing boat. \n\nI waved at the boat as is the custom. None of the guys on the boat waved back. They were too busy gawking at Beverly and Eva. I had to concur that they were definitely gawking material. \n\nBeverly giggled at my hand kiss and I helped her to her seat. I reached out for Eva's hand and she gave it to me. When she stepped gingerly aboard she was actually taller than me in her stilettos. She wore a bare shouldered form fitting top that I couldn't have even offered a guess on what it was called. Whatever, there was lots of cleavage. She wore a maroon colored leather mini-skirt that didn't even come to mid-thigh on those incredibly long athletic legs. My pants suddenly felt tight as my erection pushed on the zipper. Whatever she did for eye makeup with her gold eyes was incredible. Her light brown hair was in a single braid that fell over her shoulder to her left. I kissed the back of her hand and she giggled and then actually bent down slightly and kissed me on the lips. It was a short kiss but it had some passion in it. She pulled back slightly and whispered in my ear, \"I hope you can keep that erection all evening.\" Without even thinking, my hand went to my crotch to make any necessary adjustments to relieve the pressure and render it less obvious.\n\nEva giggled at my attempt and whispered again, \"That didn't help.\" She gave me a lusty grin and I steadied her as she found her seat across from Beverly.\n\nBeverly leaned forward and said, \"What did you say to Jack?\"\n\nEva smiled and put her hand to her mouth to block my view and then said loudly, \"I told him you aren't wearing any panties.\" Beverly's face went beet-red as she glanced at me to see if I had heard. I smiled as I eased my boat away from the dock and headed back the way I had come. Eva had a huge smile on her face as she watched her sister's blushing face.\n\nI chuckled to myself when Beverly leaned toward Eva and just as loudly said, \"You aren't either, little sister, and you're the one showing your cootch in that dress.\" She glanced my way to see that I had heard her. She grinned and sat back seemly satisfied that she had her revenge for Eva's revealing statement.\n\nAs I eased up to my dock, I noticed Priya and Divi sitting in their yard. They were watching my every move. I could see their lips moving but with the motor noise behind me, I couldn't hear what they were saying to each other. I could only imagine. Eva noticed where I was looking and she looked too. She smiled back at me as if she knew something.\n\nI tied up to the dock and offered a hand to both of them and we made our way up the boat ramp to my driveway. I forced myself not to look toward Priya's house. I could feel them watching us walk by.\n\nAt the restaurant, we were promptly seated at a table on the back wall of glass looking out through the trees to a different lake. A big pine lay uprooted to our right and workers in neon stripped vests and hardhats were cutting it up with chain-saws.\n\nEveryone in the restaurant was checking out Beverly and Eva. They stuck out like beacons dressed the way they were. In the city, every woman dressed that way so it was no big deal. It was not true here. Beverly leaned forward and whispered, \"Everyone is looking at us.\"\n\nI leaned forward and whispered, \"People here aren't used to seeing women at beautiful as you two.\" Beverly grinned and blushed a little. Eva looked back at the gawking men seated a couple tables away and pursed her lips and threw them an air-kiss. They immediately looked away and went back to their dinner.\n\nI looked around the room. It accommodated about ten tables. I noticed above the front door when we came in the numbers 1766 and I assumed that was the year this private house had been built. Half the tables were vacant. A waitress was delivering meals to one table and I noticed that she was wearing an outfit consistent with what I figured Quakers wore back in 1766, maybe even today for all I knew.\n\nWe didn't have to wait long before our waitress appeared. I was more than surprised to see it was Donna. She smiled at me and said, \"Good evening Jack,\" and then checked out Beverly and Eva. As Donna took our drink orders, Beverly and Eva were checking Donna out. I could almost feel the tension. Cat claws and fangs were out. When Donna walked back toward the bar, Eva sat forward and whispered in almost a hiss, \"You said you'd never been here before. How do you know her?\"\n\nBeverly sat forward and whispered, \"She very pretty Jack. It's obvious that she likes you.\"\n\nI smiled at Beverly and turned to answer Eva's question. \"Donna is a waitress at a local breakfast and lunch restaurant that I frequent. I didn't know she worked here at night.\" Eva visibly relaxed. Beverly gave her a look that I read as, 'What's wrong with you anyway.'\n\nDonna carried our drinks in on a tray and smiled at me. When Beverly and Eva weren't looking at her she gave me the same look that Beverly had given Eva moments ago. I read it the same way, 'What's wrong with you anyway.' I mouthed the word, \"What?\" Donna put the drinks on coasters and quickly disappeared. None of us had picked up our menu yet so she had correctly determined that we weren't ready to order yet.\n\nI had to use the restroom so I excused myself and asked one of the wait-staff for directions. She pointed up the long circular staircase. I looked where she was pointing and noticed the signs. At the top of the stairs each door leading off the hall had a sign - Office - Meeting Room - Employees Only and finally - Ladies Room and then Men's Room. I pushed open the Men's Room door and a light automatically came on. I figured there would be a toilet and a sink but there was a urinal, two stalls and a double sink and counter. It was immaculately maintained. I walked past the double sink unzipping my pants as I headed for the urinal.\n\nOn the wall above the urinal was a framed newspaper article that had been aged to look old. It listed facts about the USS Constitution. I was reading it when the door opened and then closed again. I didn't pay any attention. I continued reading the article with my hands on my hips and my dick aiming at the bottom of the urinal. Suddenly, someone was standing just to the left of me. It startled me because there was no reason for anyone to be standing there. I snapped my head to the left and was shocked to see Donna. She wasted no time as she immediately said, \"I don't get you Jack. You have to know that I'm interested in you. For years you come in for breakfast alone and I send every message I can think of short of humping your leg. Then you come in with a gang of teenage girls and one of them has her hand up your shorts. Now you're here with a couple of high-class hookers. Where did you find them? They're kind of out of place up here aren't they?\"\n\nThere was no way to defend the first two points but I defended Beverly and Eva against her accusations that they were a couple of hookers. She didn't hear a word I said. She was staring down at my dick. She looked up at my face. Her mouth hung open and her eyes were wide. \"Jesus Jack. That's a big dick.\" I looked down and my dick was completely flaccid and hung out and down from my zipper. I had finished, so I reached down and shook it vigorously before stuffing it back in my pants. I didn't get it that far before Donna reached in and wrapped her fingers around the girth. Her face was flushed red with lust. \n\nAt her touch, my cock hardened quickly and Donna said, \"Oh my God, Jack. I guess I should have been humping your leg.\" She went down on her knees in her floor length period dress and pulled me around to face her. She stroked my cock several times and I was hard as a rock. She gazed up at my face and dragged my glans across her tongue. She flicked the tip of her tongue around the 'spot' and rolled her lips over the top and pushed them down my shaft. I let out a groan and muttered, \"Oh my gawwwddd.\" She grinned around the shaft and started bobbing her head up and down about half of my cock while she used her hand on the other half. \n\nAfter a minute or so of Donna's blow job, I could hear Beverly talking to Eva in the hall. \"I'll check the men's room.\"\n\nI pulled Donna's lips off my cock and pulled her up to her feet. She had heard Beverly too but she didn't care if she was coming in here. I whispered, \"Get in one of the stalls.\" She grinned and shook her head 'No'. With my cock sticking straight out in front of me she grabbed it again. I maneuvered her forcefully to the last stall and pushed her inside. I was trying to pry her hands off my cock when the men's room door opened and Beverly called out, \"Jack. Are you in here? We want to order and our first waitress is on break or something.\"\n\nI eased the door to our stall closed and said, \"Go ahead and order. It's taking me a little longer than I thought.\" Donna sat down on the toilet seat and sucked my cock back in her mouth and resumed her blow job. When she started with the sounds, \"mmmmuummppph mmummpphhh mmummph,\" I had to keep talking hoping that Beverly wouldn't hear what Donna obviously intended her to hear. \"I'll have the chicken. Sorry I'm taking so long.\"\n\n\"Okay. Hurry.\" I heard the door open and then close.\n\nDonna pulled her lips off my cock and stood up. She turned around and pulled her floor length cotton dress up over her hips and pulled aside her thong panties. She looked back and said, \"Put that monster in me. You aren't getting out of here until you do.\" I pushed my cock between her thighs and she reached down and guided me into her pussy. She groaned hard as her head came up and her lips parted. \"Jesssusss Christ that's big. Fuck me Jack. Oh my God. This is better than I could have imagined.\"\n\nConsidering the circumstances, I wasn't too concerned about getting Donna off. She was basically raping me. I gripped her hips through the cotton dress and began thrusting my cock deep in her pussy. I was careful not to hurt her. She was mumbling, \"OOOHHH. OOOHHH. OOOHHH,\" as I pummeled her pussy. \n\nA couple minutes later, my orgasm was imminent and she felt me harden further. She groaned out, \"Fuck. Yes. Cum in me Jack.\" I'm not sure why she said that because after two long ropes of cum blasted into her pussy she pulled forward and spun around on the toilet seat and aimed my cock at her face and into her cleavage exposed by her low cut dress. She had her tongue out trying to catch as much as she could but it wasn't much. I grabbed my cock and stroked the last few shots into her face and hair.\n\nI grabbed up a wad of toilet paper and cleaned up my cock and stroked it a few more times to force any cum to the eye. I dabbed the tip again and pushed my cock back in my pants. She looked up at me while she licked her tongue around her grinning lips. She said, \"You'd better get back before you get in trouble with your hooker friends.\" I wagged my index finger at her and left the stall. I washed my hands and went back to the table.\n\nEva and Beverly looked at me with concern on their faces. Beverly said, \"Are you okay? You were gone a long time.\" I nodded and sat down. Eva reached her hand along my thigh and set her hand on my cock. Fortunately, it was soft. \n\nBeverly smiled and said, \"I was going to join you in the stall. You wouldn't have minded, would you?\" I shook my head and thought, 'Things would have got interesting if you had.'\n\nAnother drink down and our dinner was served but not by Donna. The cuisine was fantastic. I made a mental note to eat here more often. While we were eating, Donna came to the table and asked if everything was okay with the meals. Eva and Beverly were busy eating and didn't pay any attention to her. I smiled up at her and noticed a huge wad of cum in her hair. I motioned with my hand to the side of my head and she just grinned and mouthed, \"I know.\" She wanted Eva and Beverly to notice but they paid her no mind at all. Donna shrugged her shoulders at me and turned to walk away.",
        "We talked back and forth through the meal. Beverly talked about her college age kids. Eva talked about what an ass-hole Beverly's husband was. It didn't occur to me until later that Eva never talked about her life at all. I couldn't complain, I didn't reveal anything new either. I got the sense that the dinner, drinks and conversation were all preliminaries anyway and a replay of the sex from last night was the main course.\n\nI offered to drive them to their cabin directly but Beverly said they didn't know how to get there. They had followed the owner and hadn't paid attention. Eva added that they don't remember the address either. By water was the only way they knew of. \n\nBack at my house, I figured that as soon as we went inside they would strip and we'd be at it again, so I led them to my boat ramp and we walked along the wall of Arborvitae to my dock. They didn't seem disappointed so I thought that maybe I was reading too much into this 'date'. I cast off the lines and slowly cruised across the lake heading to their cabin. It was beyond dark. Dark out here in the woods meant - can't see your hand in front of your face - dark. I could barely make out the tree line along the shore by the light of stars alone. The moon wasn't up yet. There were no streetlights and no house lights. It was Sunday night and weekenders were gone, so there were no boats either.\n\nEva had been sitting on the bench seat behind me to port. I felt her presence press in to my right and she pulled the throttle back to neutral and turned the ignition key to off. The only sounds were the gentle swishing of the pontoons carving the water as we coasted to a stop. Bullfrogs croaked and crickets chirped. Eva bent down and kissed me passionately on the lips. I kissed her back and she moaned. I wasn't surprised to feel Beverly's hands in my lap searching for my zipper in the total darkness. She muttered, \"Fuck. I've never seen darkness like this. It's kind of creepy.\" Eva found my lips and kissed me again. There wasn't a breath of air. I wasn't concerned about drifting ashore somewhere.\n\nBeverly finally found my zipper and pulled it down. My cock was already hard. Beverly giggled when it pushed out of my pants into her hand. She said, \"Well. Isn't that convenient? I don't even have to go get it.\" Moments later we all knew what the, \"MMUUMMPPPHH... MMUUMMPHH... MMUMMPPHH meant. To my surprise, one of Eva's tits pressed to my lips. I put my hands out to find her. She was naked. I guessed that Beverly was too. I suckled on Eva's tit until she guided me to the other one. I flicked my tongue on the erect nipple and she lightly moaned. \n\nBeverly pulled off my cock and said, \"Take your clothes off and join us. She pulled me to my feet, unbuckled my belt and pulled my slacks to the deck. Eva fumbled with the buttons on my shirt but got the job done. She pulled it off my arms. The sensation of being naked in the great outdoors is erotic. I moved over to the bench seat in front of the sunning deck and Beverly came with me inhaling my cock again. Eva moved against me and I couldn't tell what she was going to do in the dark. Then I felt her body pressed against my stomach as she moved to straddle my hips. She stayed up on her knees and held her tits to my face. I licked and sucked and Eva moaned and groaned. Beverly increased her blow job pace and her \"mmuummph's changed to a staccato pace of \"AAWWKKK's.\" I was getting close to another orgasm when Beverly pulled back and quietly said, \"Okay Ev. He's ready for you.\" Eva maneuvered her hips down and blindly reached back for my cock. She fumbled around until Beverly placed it in her hand. She slid further back and guided my cock to her sex. Without hesitation, she slid her pussy on. She groaned hard and loud and the bullfrogs stopped croaking. She didn't wait to adjust or anything. In seconds, she was fucking me for all she was worth.\n\nBeverly moved in to my left and pushed her big tits to where she estimated my face was. She missed by a little but I made the adjustment and sucked her erect nipple between my lips and I gently bit it with my teeth. She tensed and hoped that I wouldn't bite her too hard. I was very careful.\n\nEva was furiously pulling herself up with her thighs on the bench seat on either side of me and letting gravity slam her butt back down to my thighs. After a while, she was tiring and she slowed and leaned forward whispering, \"Don't cum. I'm almost there. Get me off and then finish with Beverly.\" It sounded like a plan to me. I concentrated on pulling my orgasm back as Eva started rocking her hips forward and back grinding her sex on mine.\n\nThe moon peeked above the tree line behind me and I could make out Eva's body writhing above me in my lap. Beverly knelt on the bench beside me with her tits in my face. I reached forward and cupped both of Eva's tits and thumbed her erect nipples. She grabbed my arms to hold my hands there and also to steady herself. Even though she was getting tired, she picked up the pace and, in a moment, I could see why. \n\nEva moaned, \"Oh gawwdd. Fuck Jack, I can feel it. Here it comes. OOOOHHHH SHHHIITTTTT.\" She started thrashing and I had to pull my hands from her tits and hold on to her shoulders to keep her from tumbling off to the deck. I manually flexed my cock hard and Eva screamed as she collapsed forward bumping Beverly out of the way. She moaned with each clench of her pussy on my cock and gasped in air in between. I wrapped my arms around her back and held her until she settled down.\n\nA man's voice from the shore yelled out, \"Get a room.\"\n\nEva giggled and whispered between gasps, \"Sound really does travel out here.\" She kissed my nipple and sat back up in my lap. I flexed my cock to tease her and she said, \"Keep that up Jack and Beverly won't get any.\" I flexed again and Eva groaned and rolled her hips around in a circle dragging my erect cock with her. \n\nBeverly said, \"I don't like the sound of that. Are you done yet Eva? You're sure making enough noise. You're making the natives restless.\" \n\nRight on cue, a male groan came from the shore from the direction of the man's voice. The groan was quickly followed by a female groan and then, \"Oh my gaawwddd Frank. Fuck. Give it to mmmmeeeeeee.\" The pitch of her voice rose quickly with the 'mmmeee' until I was sure only dogs could hear her. Eva giggled and sat up and then lifted her pussy up my cock. Per the plan, I hadn't cum yet. \n\nBeverly could see well enough now and she grabbed my sticky cock and took several strokes before pulling her hand back and licking her palm and sucking in her fingers one at a time. Then Beverly took Eva's place. Since she was shorter, she had to stand on the bench seat with her feet on either side of my hips and grab my shoulders to lower herself. When she felt my glans in her sex, she reached down with one hand and fine tuned the position of my cock and then let herself fall down the shaft. We both groaned as Beverly sat down hard on my thighs.\n\nFrom the shore we heard a woman's voice, \"Ding. Round two,\" Beverly giggled at that because we were in round two as well. Moments later we heard, \"AAHHH... AAAHHH.. AHHH. Jesus Frank. Whatever's gotten in to you, I like what you've got in me. Fuck me Frank. AAAHH... AHHHH...AHHH.\"\n\nBeverly took the cue and started rocking her hips forward and back. She didn't have the strength to push up with her thighs like Eva had done. Her motion was working just fine for her and me. She got herself in the same rhythm as our shore bound partners and joined the refrain, \"AAAHHH...AHHHH... AHHH.\" The stereo effect got Eva laughing. Then Eva moved over and began sucking on Beverly's nipples and to my surprise Beverly held her there. 'Eva is making headway with her big sister,' I thought. \n\nBeverly was sliding on and off my cock and I could feel my balls boiling. I hoped that Beverly was close too because I really wanted to get her off before I came. The \"AAAHH.. AAHHH's from shore continued in synch with Beverly's. I was building and only moments away as I humped up my body preparing to launch.\n\nWith Eva held tightly to her breasts, Beverly started with a low-pitched growl that built to a scream at the same time the woman on shore screamed, \"Jesus Frank. You're...killing...meeeeee. Oh gawwd...I'm... cumming... again.\" Beverly didn't announce anything; she just exploded in to her orgasm and screamed out hard. Her pulsing pussy pulled me over the top and I unloaded in her. I groaned hard with each pulse of cum and Beverly softly screamed as she received them.\n\nAs we settled down, another male voice down the shoreline called out, \"Hey Margorie! I think its bedtime.\"\n\nEva pulled back off her big sister's nipples and said, \"I think we have fans. It's a good thing we're leaving in the morning. We'll have every husband on the lake dragging his cock across our deck.\"\n\nBeverly giggled at the vision and said, \"I'd like to stay and see that.\" Beverly scooched her butt forward, pulling herself off my softening cock. I could feel cum ooze out of her pussy and onto my stomach. She wrapped her arms around my neck and stretched up to kiss me, pressing her big tits into my chest. Eva joined her as I alternated passionate kisses between them. \n\nEva quietly said, \"I have your number and you have mine. If you're ever back in the city, I wish you'd call me. Come by my office. I have this fantasy about getting fucked on my desk.\"\n\nI replied, \"I'm certain that there's a long line of guys at work with the same fantasy.\"\n\nEva giggled. \"I'm sure that's true but there's no way any of them have half the cock you have.\" She reached behind Beverly and picked up my soft, sticky cock and squeezed it. Beverly kissed me again and pushed herself back down my thighs until she could get her feet under her. She bent low to suck in my gooey cock as her face went by. It reacted to her mouth and she cooed. Eva nudged Beverly and said, \"Come on sister-of-mine. You can dream about Jack's big cock all the way home tomorrow.\"\n\nBeverly released my rising cock and gently bit the velvety crown as she giggled again. She stood up as Eva handed her clothes over. Neither of them put them on. It was too dark for anyone to see them anyway. I moved my naked body from the bench seat to the captain's chair and started the motor. It was barely audible at idle speed and I heard a woman's voice from the shoreline, \"Goodnight Jack. Stop by anytime. I'd love to have you.\"\n\nI laughed and replied to the dark. \"Goodnight folks. Enjoy your evening.\"\n\n\"Already have, thanks to you and your friends,\" came the reply on the still air. A woman giggled. I put the motor in gear and let the idle speed slowly move me toward Beverly and Eva's cabin. I turned on the docking lights to guide me to their dock and Eva stepped off and held the boat for Beverly.\n\nBeverly returned to me. Her form was backlit by my docking lights which were brightly illuminating Eva's naked body. She yelled out, \"Turn the lights off,\" and I did. It was pitch black again as I slowly regained my night vision.\n\nBeverly knelt beside me and whispered, \"Thank you Jack. I needed this more than I could have imagined. You've given me my confidence back.\" Thank you for saving us from the storm. Thank you for the sex. It was incredible. I'll never forget it. We're definitely coming back next summer and I hope we can pick up from here.\"\n\nI kissed Beverly tenderly and she stood up. Eva softly called out, \"Hurry up Bev, the mosquitoes are getting me.\" I heard her hand slap on bare skin.\n\nBeverly started to turn but looked back at me and said, \"That waitress? At the restaurant? She likes you; a lot.\" She started to turn away again but turned back and leaned down to me and whispered, \"When you see her again, tell her that her pussy tastes great.\" My mouth dropped open which Beverly couldn't see but she knew I had to be shocked. She whispered again, \"I could taste her on your cock from the fucking you were giving her in the stall.\" She giggled and continued, \"You thought I had left the men's room but I just opened the door and shut it again and stood there listening. I was some incredibly horny by the time you finished. I had to diddle myself to get off at the table before you got back. I got Eva going and she did the same. Do you have any idea how hard it is to do that with a roomful of people watching your every move? Thank God for floor length table cloths. You should have seen the looks we got as we throbbed in our seats. When the waitress came to the table with cum in her hair for no other reason than to piss us off, I knew she was a cat to be reckoned with when she's fighting for the man she wants.\" \n\nI was thunder struck and I tried to say something in response but I couldn't think of what to say. Beverly bent down again and found her way to my lips and kissed me again. \"Bye Jack. Til next year?\" I took one last kiss and she turned and stepped onto the dock. I waited there until I heard their bare feet on their deck and then the door softly shut behind them. I eased away from the dock and headed back the way I had come. My stiff cock rested on the bottom of the steering wheel as I thought about the couple of days with Beverly and Eva. I hoped that I would see them again and the image I conjured up of Eva sprawled face down on her desk as I fucked her ass really hardened my cock.\n\nAs I neared my dock, I turned on my docking lights to line up properly and not ram the dock or the cement wall separating my yard from the water. I stepped naked to the dock and tied up fore and aft. I stepped back on the boat and gathered my clothes and turned off the dock lights as I shut off the motor. I went up the stairs to my deck and was about to open the sliding glass door when I saw someone sitting in my zero-gravity chair softly illuminated by the solar light on a post at the corner of my deck. \n\nMy cock was still hard and pointing well above horizontal as I stepped back from the doorway to see who it was. I pressed my hard cock to my stomach and stepped closer and a voice spoke, \"They are very pretty Jack.\"\n\nI relaxed a bit and said, \"Divi, sweetheart. You shouldn't be here. Your mother...\"\n\n\"I know what my mother said. I've tried hard to abide by her wishes but I miss you. I miss that.\" I could vaguely make out her hand pointing at my cock trapped by my hand.\n\n\"Come inside Divi. The mosquitoes will carry you off to the woods.\" I heard her slap on exposed skin and I could see her rise and come toward me. I pushed open the slider and Divi walked past and gently pinched my glans on her way by. I closed the slider behind me and offered her a seat as I went to my bedroom to drop my clothes in the hamper and get my robe off the back of the door. As I pulled it on, I got a whiff of Eva's perfume. I breathed deeply to savor the smell. I pulled it together and checked the condition of my cock. It had softened considerably and I went back in the living room. Divi checked the condition of my cock too as I sat down on the loveseat.\n\n\"How have you been? How is your mother?\" I said.\n\n\"I'm doing okay, I guess. A lot of turmoil and drama. Mom's a mess. She cries all the time. I don't know if it's Dad or you that she's crying about. Dad was never here anyway, so what's the big deal. We went away for a week to my Aunt's to get away. I don't know why. She just cried there too. We got back today and Mom was doing pretty well until she saw you with those two women getting off your boat. They were definitely city girls. No one dresses like that out here. Mom started in crying all over again. I think she's fallen in love with you Jack and she's terrified at the same time. Now she's certain that you've moved on and she won't even get the chance to sort herself out before you're gone.\" Divi's eyes glistened with tears in the illumination from the kitchen light. She was trying hard to fight them back but she was losing the battle.\n\nWithout an invitation she pushed herself out of the sofa and dropped herself in my lap and threw her arms around my neck and started sobbing. I hesitated a moment as my arms went around her and then I held her tight to me. She cried hard for a few minutes before she gathered herself and wiped her tears off her face with the sleeve of her sweater. She spoke into my ear, \"I'm sorry Jack. I shouldn't have come over here and dumped this on you, but Mom's making me so sad. I can't wait to leave for college. She hugged me tight again.\n\nAnd then, there it was. Amongst all the flood of emotions and the tears and sobbing was the powerful pull of sex. Divi began squirming around in my lap and giggled when she felt my cock respond to her movement. She pulled back from my neck and looked at me with her beautiful dark, tear-soaked eyes. The expression on her face screamed, 'I want you' and just to be sure I was reading her right, she whispered, \"I need you Jack.\"\n\n\"We shouldn't Divi. Your mother asked me not... .\"\n\nDivi cut me off with an index finger to my lips before I could finish. \"I know what she said. I don't understand you adults. You obviously care for each other. What's the problem? Be with each other. Fuck. You're driving me nuts.\" She kissed me hard and then poured on the passion. I chuckled to myself because Divi traced her tongue lightly across my upper lip and didn't just shove it in my mouth like before. She was copying how I had used my tongue. I did the same to her and she trembled and it renewed her passion. I was losing my resolve.\n\nDivi eased back from my lips so slowly and gently that her lips clung to mine until the surface tension was broken. Her eyes were clear of tears but they glowed with passion. She said, \"I'll make you guys a deal. No intercourse but I just have to suck your cock.\" She grinned at me and continued, \"Deal?\"\n\nI wasn't sure at what point a came in to such good graces with God, but this offer had to have come from heaven. I smiled at her and said, \"Deal. But your mother doesn't need to know anything about it, Deal?\" Her face nearly broke in half from her broad grin. She vigorously nodded her head and pushed herself out of my lap. She pulled her sweater over her head and she was braless. Her nipples on the end of her torpedo shaped tits were like nails. She left her shorts on so neither of us would break our deal.\n\nMy cock was so hard it was almost painful. Divi dropped to her knees between my legs and pushed herself up close and grabbed my cock. I groaned hard from her touch and dropped my head to the back of the loveseat. She stroked it several times and then kissed my velvety crown and lashed her tongue around the ridge. She remembered about the 'spot' and she flicked her tongue on it as she watched my reaction. I muttered, \"Oh Fuck, Divi. Incredible.\" She grinned around my glans and then pulled off and spit twice on it before pushing her lips down my shaft. At about seven inches, she gagged and pulled back a couple of inches. She cleared her throat and pushed back to her gag point and pushed her lips out along my shaft as far as she could and gripped my cock with them. She was looking up at me with those gorgeous dark eyes. Her lips were stretched to a thin white line. Her eyes were ablaze. She slowly pulled her mouth down to her protruded lips and held her position there. Her eyes were watering, but she stayed right there. She had almost my entire cock in her mouth. She was determined and she extended her lips down again to the base of my shaft but she couldn't pull the rest of her mouth down. I gasped and said, \"Fuck Divi. You did it.\" She pulled back hard and a huge wad of saliva followed my cock out. She scooped up the saliva in her hand and ran it up and down my shaft for lubrication. The grin on her face was something to behold. \n\nShe pushed back on my cock and started an amazing blow job and I lifted my hips and groaned hard. She liked it when I did that. Sometimes I groaned just to give her encouragement but not that time. Her skills had definitely improved. She was giving me a no-hands blow job as she caressed her nipples with her fingers. Divi's mouth consumed half of my cock before quickly ascending to the ridge and back down again. Over and over again she sucked in my cock. I was close to blowing but Divi wasn't experienced enough to recognize the symptoms. She pulled up my cock and off the glans and dropped her lips to my balls just as cum rocketed up my shaft. I let out a loud groan as cum shot out and hit Divi between the eyes. She was startled and pulled back. Another shot landed between her tits. Divi laughed and pushed her lips back on my cock again and she took the remaining shots and swallowed as she needed to. She lashed her tongue around my shaft and pulled off and dipped her tongue into the 'eye' like her mother had taught her. ",
        "Divi turned her attention to the cum on her tits and cleavage. She scooped up the pearly, white cum and pulled her finger to her lips before returning for more. When she was done, she smacked her lips and grinned broadly at me. She pushed my softening cock back into my robe and stood up.\n\nShe sat back down on my knees and slid forward and leaned in and kissed me. I kissed her back and she scooted back to a standing position. She threw me an air-kiss and headed for the sliding glass door. She stopped at the door and pulled her sweater over her head. When her head popped out the top, she said, \"Mmmm. I smell like cum.\" She giggled and pulled the slider open and disappeared slamming the slider shut behind her.\n\nI sat there for several moments thinking about my evening. My mind flashed visions of Donna, Beverly and Eva and finally Divi. Memories of Frank and his bride and even Marjorie and her husband flashed through. I had no visuals for them but their audible participation last night raised the libido for everyone. I wondered if I would ever meet them and would I recognize their voices. Would they recognize mine? All they heard from me was a bunch of moans and groans.\n\nI got up and went to bed. My cock was semi-erect and I stroked it a few times before turning out the light. I was sure I would have a morning woody when I woke."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/voyeur-gets-voyeured-ch-04"
}