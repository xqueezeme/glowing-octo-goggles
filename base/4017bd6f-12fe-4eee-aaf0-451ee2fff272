{
    "title": "The Next Milf Porn Star",
    "pages": [
        " Welcome to my Nude Day contest entry. Been a long time since I've posted in this category, but a good friend here who isn't feeling well these days, asked when I was going to drop a new Milf story, so here we are. Like much of my work this story is on the longer side. Unlike a lot of my work, you don't have to wait too long to get to the action. Hope you enjoy it. LC68\n\nChapter One\n\n\"Come on, Dana, show the camera some love, or at least crack a damn smile!\" Burt called out in frustration.\n\n\"I feel like an idiot.\" Dana stared down at the last outfit he'd asked her to wear for the shoot. \"I'm a little old to be a naughty schoolgirl, don't you think?\"\n\n\"Way too old, no one could stay back that many times.\" Burt cracked from where he stood in front of the set, fiddling with his camera.\n\n\"Then why the hell am I wearing it? I get business casual and the cute sundress pics we took, but what's with this trashy get-up?\"\n\n\"The first two outfits were generic shoots to start your new portfolio and get you used to being back in front of the camera. This is one is for the shoot Ellen is working on.\"\n\n\"She has a new project?\" Dana felt hope brewing within her for the first time in the last few months. \"She's looking for new models and I'm not just taking a shot in the dark she can find me some work?\"\n\n\"You aren't going to get any work until you lighten up.\" Burt grumbled. \"First two outfits you were posing like you had a pole up your ass, and your face looked like you couldn't decide whether or not you liked it.\"\n\n\"I'm a little stiff, first time I've done this in fifteen years, remember?\" Dana defended herself even though she knew Burt was right. Rusty or not, she could feel how awkward she'd been being back in front of a camera.\n\n\"I remember when you could get a guy stiff just with a smile and those bedroom eyes.\" Burt smirked. \"That great rack never hurt either.\"\n\n\"Yeah, well, I'm not ready for lingerie shoots just yet,\" she tugged on the black tie hanging loosely around her neck. \"But I guess you think I'm ready for sleazy.\"\n\n\"Seeing you been waitressing at Mario's Lounge I figure you'd be at home with sleazy.\"\n\n\"Fuck you, Burt!\" she snapped. \"You think I want to work there?\"\n\n\"If you don't get some good shots you're going to keep working there.\" He sighed. \"Come on, Dana, just relax. The camera used to love you and you know it.\"\n\n\"Used to.\" Her shoulders slumped. \"This was a mistake.\"\n\n\"If you think it is, then it will be.\" Burt gestured to her. \"Or you could stop feeling sorry for yourself and give this a real go and stop wasting our time half assing it.\"\n\n\"Does Ellen really have a new project?\" Dana asked, trying to grasp at something that would give her some hope.\n\n\"Yes, and it could be perfect for you. It features older models and it's called age is a number, fun is a state of mind or something stupid like that.\" Burt shrugged. \"I figure nothing says young and fun more than the classic schoolgirl fantasy.\"\n\n\"I guess,\" Dana looked down at the black and white plaid skirt so short a breeze would give anyone behind her a glimpse of the plain white panties that were part of the outfit. \"But on any girl over twenty all it really says is porn star, hooker, or just plain slutty.\" Or desperate waitress working tips in a club full of assholes.\n\n\"All the more reason it works. Middle aged women can still be sexy, slutty even.\"\n\n\"I'm not middle aged!\" Dana fired back.\n\n\"Slutty is okay, but middle aged is an insult? Anyhow, you're right,\" Burt looked up, smirking through his scruffy grey beard. \"I doubt you'll make 86 so I guess you're passed middle age.\"\n\n\"You're an asshole Burt, always was, always will be.\"\n\n\"But this asshole is giving you three hours of my expensive time for free because I'm one of the few friends you kept when you were married. So how about you drop the diva act and do what you used to do back in the day and trust me?\"\n\n\"You're right, I'm sorry,\" She looked away so he wouldn't see her eyes beginning to well up, something that happened with annoying frequency these days. \"And I'm sorry we had to hide our friendship. I should...\"\n\n\"Forget about that.\" Burt gave her a rare, encouraging smile. \"Never backwards, always forwards, Dana. That's my motto.\"\n\n\"It's a good one.\" Dana took another look down at the black patent leather heels complete with silver buckles, and the white knee high stockings.\n\n\"Can we at least button this?\" She flipped the tail of the shirt which protruded from the knot it was tied in, leaving her stomach bare and showed off the inner curve of her breasts to the point some of the black lace of her bra showed.\n\n\"You getting modest?\" Burt laughed. \"You're dressing skanky every night at that dive, why is this different?\"\n\n\"God, you're a prick.\" Dana shook her head, causing the pig tails she'd pulled her long black hair into to bounce around her head. \"That's what I get for telling you what's going on in my life.\"\n\n\"That's what you get for making such a shit show of your life.\" Burt replied, the smirk, an all but permanent part of his face, was back.\n\n\"That dump is keeping my lights on, but if I want to keep the damn house, I need to make some more money, and if I'm getting back into modeling I don't want to be dressed like daddy's little bad girl.\"\n\n\"Like you said, you did lingerie shoots back in the day.\"\n\n\"In my twenties.\"\n\n\"There's women your age doing lingerie.\" Burt reminded her. \"If you're trying to get a foot back in the door, you have to show a little of everything and we did classy and sporty, now we do a little sexy.\"\n\n\"Its bad enough I have to do sexy to a bar full of pricks. I'd rather not do it for a legit job.\"\n\n\"Showing yourself off is what modeling is all about, Dana. You know that and we both know you never minded showing yourself off.\"\n\n\"Don't talk about that!\" She snapped. \"I was young then.\"\n\n\"Young and a lot of fun. But just because you've been a dud the last fifteen years doesn't mean the hot little minx that loved the thought of men drooling over her isn't still in there somewhere.\"\n\n\"That's off-limits Burt, even for you.\"\n\n\"Tell me something, you get excited at work? All those guys ogling you?\"\n\n\"You keep talking like that, I'll go change and leave.\" She put her hands on her hips and gave him a hard stare. \"I mean it.\"\n\n\"Perfect!\" The camera flashed from where he held it at an upward angle at his waist. \"That's a great look. Eyes flashing, getting a little red and those lips in a hard line. That's an 'I dare you' shot, and its hot, girl!\"\n\n\"Not fair.\"\n\n\"Life never is.\" He gestured to her. \"Dana, you have nothing to be ashamed of. You have incredible legs, a hell of a rack...\"\n\n\"Classy.\" She rolled her eyes, then scowled when the camera flashed again, catching it. She knew Burt had perfectly timed it, because he was the best there was and could 'shoot blind' as he called it, like no other.\n\n\"I speak only the truth. Your tits were things of wonder back in the day.\"\n\n\"Were? Thanks.\"\n\n\"I'm, sure they still are, but gravity's gotta be taking some toll.\"\n\n\"To think I forgot how nasty you could be.\"\n\n\"I haven't forgotten how nasty you could be.\" He laughed. \"But let's stay on topic. You have gorgeous lustrous hair, big doe eyes that can look innocent or inviting, and those lips! Women shoot a lot of botox to have a blow job mouth, yours is natural.\"\n\n\"Oh My God!\" This time she really was surprised. \"You've gotten worse over the years.\"\n\n\"I'm an old man now, we get to say what we want, and it gets brushed off because I'm just a curmudgeon.\"\n\n\"Ever hear of the me too movement?\"\n\n\"Me too, like I want to join in?\" he stared at her for a minute then sighed. \"I'm just trying to have some fun and lighten you up. You played uptight prude for that shithead, but we know that's not who you are. Let's get Dana Darling back out here.\"\n\n\"Dana Darling died,\" she said softly. \"That marriage license was her death certificate.\"\n\n\"Then let's resurrect that bitch, because the sorry ass pity party in front of me isn't the woman I know and love.\"\n\n\"Wow, Burt, you're slipping. That was an actual sentiment.\"\n\n\"I have a five o'clock coming, gotta get you moving.\"\n\n\"Okay, I'll try to warm up to this.\" She frowned. \"Just don't like the bare midriff. I don't have the flat tummy I had before.\"\n\n\"You're fine, its not like you have a muffin top or anything. Just a little soft.\" He slung the Nikon over his neck and walked over to the larger camera mounted to the tripod.\n\n\"Look, women are insecure, and they see pictures of a woman in her forties with hard tight stomach, they get self-conscious. The ad ends up being a bust because they flip right past it cause they don't look like that.\n\n\"You have a great body for your age and it's a natural body. Your ass has filled out some, your thighs and hips are thicker and a little softer.\"\n\n\"And you wonder why you're permanently single?\"\n\n\"Again, it works because yes, you're still looking damn good, but they can look like you. The 'yoga pants I live at the gym while the kids are at school look' has its appeal, but natural milf sexy does too.\"\n\n\"Milf?\" She repeated the word carefully as just the sound of it gave her an unwanted, but not unpleasant chill.\n\n\"Mother I'd like to fuck,\" he explained as he put his eye to the camera and adjusted it. \"You can't be that sheltered. Older women are the number one porn search these days. Young guys love them and so do some older guys because their wives look like that.\"\n\n\"Think the porn crowd is who Ellen is aiming for?\"\n\n\"No, she's aiming for forty plus ladies who see a woman their age rocking fun and sexy. The guys at the shithole you're heading to later, are thinking Milf.\"\n\n\"Oh, right.\"\n\n\"Don't bullshit a bullshitter, Dana.\" Burt told her. \"You know what that means and something tells me since you been strutting your stuff while schilling drinks good old D may be back in the saddle.\"\n\nThe blush that immediately followed his words was the only admission he needed, but for once, he didn't follow it up with a nasty crack, instead, without looking up he added;\n\n\"And I say good for you. Now seeing that I'm not buying your insecurity or modesty, how about we get some fun shots that will make it so you're only in that dump if you're looking for some stress relief?\"\n\n\"Okay, I'll...\" Dana stopped at a knock on the door.\n\n\"Shit, I forgot he was coming this afternoon.\" Burt turned away from the camera. \"Come on in, Jake.\"\n\nA tall dark haired young man in black jeans and a matching t-shirt entered the small studio. \"Hey, Burt, work was slow, so they let me off early, figured I'd just come straight here.\"\n\nHe glanced over at Dana.\n\n\"Oh, hi, sorry, I didn't see anyone on the schedule. I didn't mean to interrupt.\"\n\n\"That's because I'm not charging. Dana is an old friend and former model looking to get back into the game.\"\n\n\"Cool,\" Jake flashed her a smile. \"I'm Jake, nice to meet you.\"\n\n\"She heard me say your name,\" Burt grunted. \"He's studying photography and I agreed to take him on as an intern, show him the ropes.\"\n\n\"And you get free help.\" This time Dana flashed the smirk. \"Burt never does anything unless he can get something out of it.\"\n\n\"There goes your free shoot, then.\" Burt gestured to Jake. \"Mind if he stays and watches?\"\n\nDana hesitated. It wasn't just that she was nervous doing her first shoot in years, but Jake being here. Burt, as usual, wasn't wrong, since she'd divorced Ben, Dana had been making up for years of a borderline nonexistent sex life with a series of one-night stands.\n\nHe'd also inadvertently hit the nail on the head with the milf comment. Not wanting to be bothered with drama, potentially bad sex, and more importantly the ego of a guy her age, all of Dana's shamefully wanton nights had been with younger men, who to prove Burt's point about porn, were very much attracted to her.\n\nJake was no exception, although he wasn't blatant, he'd given her a quick up and down before smiling at her and as she'd spoken to Burt, she could feel his eyes on her. He was a nice looking kid; blue eyes with dark hair was a weakness for her, as was the lean muscle displayed in his arms and snug t-shirt.\n\nThe equally tight jeans hinted at an even bigger muscle, and she could feel 'the old Dana' Burt kept referring to waking up within her. 'Loving the camera' was an old expression and in Dana's case she had not only loved it but lusted over it.\n\nDana had been nineteen at her first pro shoot and surprised to find herself turned on as she strutted about the set, posing and flashing flirty sexy looks not as much for the camera, but for the photographer, and the guys handling the lighting and standing around waiting to change the set when she was done.\n\nThe idea that she wasn't just playing up to the crew, but all the men who would see, and fantasize about her, had her in a state of arousal she'd only thought existed in trashy romance novels. Her nipples hard and aching, her clit throbbing and her pussy so wet she had to peel her panties from her sticky pink flesh.\n\nThose panties, and everything else had been peeled off in front of one of the lighting techs. Dana had taken a wild ride on his face, then on his cock before finishing him off by sucking her juices off his cock and swallowing every drop she could coax from his balls. Prior to that, Dana had never been adventurous or even overly enthusiastic about sex.\n\nShe'd slept with two guys prior to that day, both of whom she'd dated for a few months. She'd always been a 'good girl' in the sense of not screwing anyone she didn't care about, and although not a dud, she'd never been anywhere near as wild as she had been that day.\n\nThe camera had brought out the exhibitionist inside her that had her imagining every guy who saw her pics getting hard and thinking about what they wanted to do to her. The first time was far from the last time, as Dana would go on to fuck after every shoot, either one of the others involved, or that night at a club or bar where she'd take her newfound lust out on whatever lucky guy caught her eye.\n\nDana had come close to costing herself a good name and legit career as she gained the reputation of being promiscuous and was getting signed to shoots only because the photographer figured there was a good chance he could fuck her; and some had.\n\nFortunately, Ellen Gaines had found her, took her on as a client and paired her with Burt, who in spite of his crude demeanor, was a solid professional who told both his models and anyone working with him that if they mixed business with pleasure they could find someone else to work for.\n\nBeing the best in the state, it was a warning even young and newly sexually awakened Dana would obey. That didn't stop her from stalking her prey at night, but she'd stopped shitting where she ate as Burt so colorfully put it.\n\nNow acting more professionally she was able to gain a respectable reputation that along with Ellen's management and Burt's skill had her making good money and rising up the ranks of the modeling scene.\n\nEventually, Dana would meet Ben at a party and for the first time since high school had found someone who she wanted, and who wanted her, for more than just a fuck. She'd almost blown that as twice within their few months together, she'd gotten so worked up at a shoot, she'd cheated on him.\n\nBoth were risqu\u00e9 lingerie shoots that had her wetter than ever, and both times Ben had been away on business and she was unable to settle for toys and her fingers at home. Ben found out and gave her an ultimatum, he would forgive her, but she had to quit modeling.\n\nBen, who was eight years older than her, had just made junior partner at his law firm, and made more than enough to support them. Neither of them were interested in children, and not wanting to stay home, Dana had spent the last fifteen years working in offices.\n\nWith only a High school education and having spent the next seven years modeling she had no real job skills and most of her jobs were reception or data entry, simple jobs, but they kept her busy.\n\nNo, stop thinking like that, they kept her away from the camera, dressed modestly-the only way Ben would allow her to- and made her into a 'good woman'. Dana now knew that was another term for being a controlled suppressed watered down version of herself kept under the thumb of a man who was as jealous and possessive as her asshole father had been of her mom, but she'd never seen it.\n\nEllen, Burt, and other friends did, and as time went on she'd lost all of them because Ben knew they talked poorly of him and didn't want her associating with them anymore. Ellen and Burt had stayed with her, although they were nowhere near as close as they used to be.\n\nBecause Burt was a man, and all men only wanted to be friends with women so they could eventually fuck them, Ben hadn't wanted her to still talk to him. But Burt had gotten her off a bad career path, made her good money and could have made her a big name, so she'd call him every so often and keep in touch through an alternate Face Book page Ben didn't know she had.\n\n\"You going to answer me, or stare off into space like the ditz you used to be?\" Burt cut into her not so pleasant walk down memory lane. \"Care if the kid hangs out and learns something?\"\n\n\"Um,\" Damn he was fine, why did he have to be so fine? And why did he have to look away when Dana turned her attention on him, telling her he liked what he saw as well?\n\n\"Um?\" Burt slapped his now prominent forehead, just below where his grey hair was pulled back tightly into a ponytail.\n\n\"Sure.\" What was she going to say? Don't tempt me?\n\n\"Here,\" Burt slipped the Nikon from around his neck and handed it to him. \"Just snap some shots and I'll take a look at them later and see if they're any good.\"\n\n\"Got it.\" Jake took the camera.\n\n\"Oh, and seeing you're here, let's get a young man's opinion. What do you think of Dana in the schoolgirl outfit, can she pull it off?'\n\n\"Hell yeah,\" he grinned, then caught himself. \"I mean, yeah she looks great, proves age is just a number sort of thing.\"\n\n\"There you go, feel better, miss insecurity?' Burt snickered and Dana wondered if he knew the effect Jake was going to have on her and teasing or was just being his usual dickish self.\n\n\"Back to where we were.\" Burt got behind the tripod. \"Let's do something I should have thought of earlier to get you loosened up. How about the old routine? Give me happy.\"\n\nDana grinned, then pausing to get a neutral look on her face broke into a huge, borderline giddy, smile.\n\n\"Surprised.\"\n\nDana gasped and put her hand to her open mouth, her eyes going wide.\n\n\"That's great.\" Jake laughed.\n\n\"Disgusted, you know, like you're picturing me naked.\"\n\nDana scrunched her face up, her full red lips turning down into a scowl.\n\n\"Scared. Angry, confused.\"\n\nDana relaxed as they dropped back into the game they played years ago to warm her up and get her into the swing of things using her uncanny ability to produce any expression on demand.\n\n\"Bratty.\"\n\nDana pushed her lips into a pout, while looking up though her long lashes, and stamping her foot, her right hand on her hip.\n\n\"Flirty.\"\n\nDana put her hand to her mouth and blew a playful kiss, keeping her lips pursed while leaning over, and pushing her ass out behind her.\n\n\"Give me lusty.\"\n\nDana would have hesitated had this been the first one, but was now having a good time. Not to mention she liked the way Jake's eyes responded to bratty and flirty. She narrowed her large brown eyes, and parting her lips, slipped her tongue out just enough for the pink tip to protrude.\n\nHer eyes on the camera in front of Burt, Dana sucked on her lower lip, while she beckoned with one red tipped finger.\n\n\"That's my girl!\" Burt whistled. \"That's a keeper for the shoot. Now let's start posing, show me a good woman being a bad girl.\"",
        "Dana was already on her way to doing that as her nipples hardened and she felt a warm tingle between her thighs. First time in front of a camera in fifteen years and she was already responding.\n\nJust like her body responded to the assholes staring at her at the waitressing job she was forced to take to keep the house Ben had given her a deadline to buy him out of or he would force the sale of it.\n\nHer day job, working as an assistant to the head of IT, had laid her off three months ago. The company had ties with Ben's firm, and she knew he was behind it, but not like she could afford a lawyer to prove that.\n\nShe had no luck finding work, and living off the minimum hourly paid to a waitress and her tips, which although pretty good, couldn't maintain the house, let alone get her the money to buy Ben out of it. But she'd spent enough time dwelling on that, and now in desperation, she'd decided to see if she could get back into the career she'd had until she'd fallen for that prick.\n\nBut there was nothing she could do about it now, other than make this a good shoot and see if Ellen could get any bites on it. Jake's presence had immediately boosted her confidence and the newly reawakened exhibitionist in her didn't need any instructions from Burt.\n\nShe did a quick spin, while flipping her short skirt just enough to flash the cheeks of her ass in the white good girl panties. As brief as it was, Dana had no doubt Burt caught it because he was still one of, if not the best.\n\nDana proceeded to cavort about the small set which was a classroom scene with a black board background, and several old fashioned chairs and desks. Using them to her advantage, Dana placed her hands on the back of one chair and lowered her head, raising her ass.\n\nIt was a side shot but allowed the skirt to slide further up her thigh close to her hip. Doing another twirl, this time letting the air itself lift her skirt, Dana sprawled backwards over one of the desks, while putting one foot on the seat of the chair, and one on the back of it.\n\n\"See that, Jake?\" Burt spoke while clicking away. \"This is how a good model takes over the damn shoot and all you do is concentrate on the shots.\"\n\nDana went into a skipping motion that she knew Burt would get some good shots of both feet off the ground. She skipped over to Jake where he was crouched to the side, taking pictures of her approaching. Dana flashed the 'lusty look' once more and when she beckoned with her finger, he looked at Burt.\n\n\"Go on, let's see what we got here.\" Burt called out.\n\nJake rose, then flinched when Dana quickly pulled the tie over her head, looped it over his, and tugged him toward her.\n\n\"Nice! Got that look of surprise right there!\" Burt yelled as he always did when he got into the zone.\n\nDana backed away, gripping the tie and forcing Jake to follow her back onto the set. When she got him in front of a chair, she whispered; \"Sit,\" and gave him a gentle push.\n\nHe dropped back into the chair, his eyes widening when Dana easily put one foot up on his leg. She grunted with effort, and almost lost her balance, but managed to get her foot up on his shoulder in her next move.\n\n\"Get back to stretching, kid!\" Burt laughed, \"You about fell on your ass just then.\"\n\nDana barely heard him as her focus was on Jake's stunned expression and his eyes staring between her thighs at the exposed crotch of her panties. She knew she was wet and felt a fresh wave of heat at the idea he may be looking at a spreading stain.\n\nDropping her leg, she pulled him toward her and planted a kiss on his right cheek, lingering long enough for Burt to get a good shot. She quickly kissed the left side of his face, pressing her lips hard into him, and when she leaned back, smiled at the perfect pair of red lips she'd left there.\n\n\"Beautiful!\" Burt exclaimed. \"Hey, Jake, maybe you belong on that side of the camera.\"\n\nJake laughed nervously, while Dana spun around and leaning forward, flipped her skirt up a few inches. She wiggled her ass at him, and when he didn't take the prompt, Burt called out. \"She's a naughty schoolgirl, kid, give her a little spank.\"\n\n\"And keep your hand there.\" Dana whispered.\n\nJake gave her ass barely more than a tap, but it sent a shiver through her already throbbing clit. He rested his hand briefly on the cheek of her ass, and Dana opened her mouth in mock surprise, her eyes wide as she stared at the camera.\n\nShe was sure that look of surprise spread to Jake's face when she dropped onto his lap and leaned back into his chest to kick her legs in the air. Dana bit her lip to hold back a moan as she felt his cock pressing into her ass.\n\nShe hopped off him before Burt would think she was into anything, but putting on a show, but hoped Jake was wondering if she'd felt his reaction to her racy antics. She slipped the tie from Jake, giving him a quick view of her substantial cleavage, before pulling it down over her head.\n\nThe pigtails caused some resistance, and when she pulled harder, they sprang up when she got the tie past them, and again she knew Burt would catch them in motion.\n\n\"Okay, I think we got enough, let's....whoa!\"\n\nBurt's response was to Dana, who without planning to, but completely caught up in the long forgotten thrill of playing to countless men who might see these shots, pulled the knot on the shirt and opened it wide.\n\nThe black bra beneath was transparent lace, and showed her breasts except for the small embroidered roses over her nipples. The tie dangled between her breasts, adding a nice touch, and leaning over, Dana pushed her lips back into a pout before blowing the camera a kiss.\n\n\"Let's wrap it, and you, up.\" Burt declared stepping back from the camera to show he was done.\n\n\"Know what was missing?\" Dana asked while buttoning the shirt back up rather than retying it.\n\n\"A stripper pole and some music?\" Burt grunted.\n\n\"Think the camera still loves me?\"\n\n\"How could it not?\" Burt gave her another rare smile. \"You were a little uptight in the first couple of outfits, but you came alive in this one.\" He shot a look in Jake's direction. \"Guess that hasn't changed either.\"\n\nDana looked away in embarrassment, but to her relief, Jake had slipped out of the chair, and gone over to grab the camera he'd put down.\n\n\"I'll get these and whatever Jake took that's worth showing off to Ellen in the morning, she'll call you once she has them to set up a meeting.\" Burt walked over to her and caught her off guard with a hug.\n\n\"Great seeing you back where you belong, and I hope she lands you something.\"\n\n\"Thank you for helping me, Burt. I don't deserve it.\" She hugged him tightly and kissed his scruffy cheek.\n\n\"Few deserve me,\" he chuckled, then stepped back and his smirk back in place, tugged on the hem of her skirt. \"Go on and keep it,\" he spoke softly enough Jake wouldn't hear him. \"You can wear it to work, get some tips.\"\n\n\"Thanks, Burt,\" she rolled her eyes. \"You're all heart.\"\n\nChapter Two\n\n\"That's it, baby suck that tit!\" Dana growled as she gripped Jake's short black hair, holding his head while she arched her back, shoving her breast in his face.\n\nJake groaned around her rosy nipple as she popped open his jeans with her other hand, expertly unzipping him and getting her hand into his boxers.\n\n\"Hmm, all for me?\" she purred as she stroked his cock.\n\n\"Damn, you're fucking hot!\" Jake switched to sucking her other tit while pushing the white blouse down her shoulders.\n\n\"And you're fucking hard, and I love it!\" Dana released his cock long enough to extricate her arms from the sleeves, letting the blouse fall to the floor.\n\n\"How could I not be?\" he cupped her large breasts, giving them a squeeze, his thumbs caressing her nipples. \"Look at these tits!\"\n\nHe went to lower his head to take one back into his mouth, but Dana stopped him, by grabbing his face in both hands and kissing him hard. He gasped when her tongue forcefully pushed into his mouth, but his arms went around her, crushing her to his hard young body.\n\nHe'd barely closed the door to his small two room apartment when she grabbed his shirt and ripped it over his head. As she'd run her long nails down his lean muscular chest and flat stomach, Jake's hands were on her shirt, trying to unbutton it.\n\nDana had surprised him by grabbing the sides of the shirt and tearing it open, sending buttons flying. The look of surprise turned to one of pure lust when Dana pulled the cups of her bra down, causing her large breasts to pop out.\n\nThey'd groped and kissed each other across the room, making their way into his bedroom where she'd grown impatient enough to push his head down to her tits. The brief flashback of the last two minutes was replaced by the present which involved Jake deftly unhooking her bra and sliding the straps down her arms.\n\nDana dropped her arms to let the bra drop to the floor between them, and moaned, her eyes rolling back as Jake enthusiastically went back to sucking her left nipple while his fingers teased the right.\n\nHe held her heavy breasts in his strong hands, squeezing them as he worked her nipples. Her face flushed and her heart racing, Dana lifted the schoolgirl skirt. Hooking her fingers into the white cotton panties, she pushed them down while her young lover continued to all but devour her tits.\n\nDana got the panties far enough down her legs to lift them one at a time, working the panties off with her feet while she held his shoulders for balance. Pulling away, she playfully kicked the panties at him, laughing as he caught them and brought them to his nose, inhaling deeply.\n\n\"They're soaked through!\" he whispered, his fingers rubbing the sticky crotch.\n\n\"Come find out why!\" Dana hiked her skirt up to her hips, and falling back onto his bed, spread first her legs, then her pink slit, opening her lips with her fingers, wantonly showing off her glistening pussy.\n\n\"Let's go, baby,\" she beckoned him with her finger as she had on the set, but this time the look of desire on her face was real and not for the camera. \"I want to see that pretty face between my thighs!\"\n\n\"I aim to please!\" Jake laughed as he kicked off his shoes and took a minute to pull his socks off.\n\nWhen he went to push his jeans down, she shook her head. \"Let me do that, I don't want to see that big cock until I'm ready to suck it.\"\n\n\"Wow,\" Jake whistled. \"You aren't shy, are you?\"\n\n\"I'm not one of those little girls you bang in school, kid,\" She slowly ran her pink tongue over her ruby coated lips. \"You're fucking a real woman now.\"\n\n\"Yes, ma'am!\" Jake crawled onto the bed and gave each of her thighs a soft kiss.\n\nHe followed that up with a soft playful slap that made her thigh jiggle and smiled.\n\n\"Real women have real thighs.\"\n\nDana experienced a brief a moment of insecurity that her body wasn't as tight and supple as it was in her heyday, but it faded when Jake moved her hand from her pussy and blew lightly on her throbbing clit.\n\n\"Don't tease!\" she wriggled her hips, lifting her pussy into his face.\n\n\"Can't believe you were waiting outside for me.\" Jake spread her pussy wide, and flicked his tongue lightly across her clit, sending an electric shock of pleasure through her.\n\n\"I'm done waiting, eat my cunt before I sit on your damn face!\" Dana grabbed his head as she had when he sucked her tits, and holding him still, thrust her wet slit into his face.\n\nJake groaned into her hot flesh, then plunged his tongue inside it.\n\n\"Yes!\" Dana exclaimed as he wiggled his tongue inside her sopping twat. \"See how wet I am for you, baby?\"\n\nJake's reply was to suck hard, and she gasped when she felt her juices spurt into his eager mouth. He swirled his tongue inside her and the look of pure bliss in his deep blue eyes had her hips rocking, helping him fuck her with his rigid tongue.\n\nJake slid his tongue from within her, and she grunted in pleasure when it was replaced by two of his long fingers. He pumped them slowly as he teased his tongue around the wet folds of her yearning pussy, her body tensing as she waited for him to find her clit. When he did, he teased a fast circle around it then sucked it hard enough to make her gasp.\n\n\"Put another finger inside,\" she moaned as he alternately licked and sucked her swollen pink nub.\n\nJake did as told and Dana's eyes rolled back as her pussy spread around his thrusting fingers. Removing her hand from his hair, she cupped her breasts, and teased her nipples with her thumbs.\n\nFor the next few minutes, the room was filled with her soft contented sighs along with an occasional slurping sound when Jake sucked her clit. He was skilled beyond his years, not just in the way his tongue played her clit like a fine-tuned instrument, but the fact he was taking his time.\n\nSince her divorce, Dana had been enjoying what had previously been her fantasies during years as an unsatisfied wife, and that fantasy was younger men eager to please an older woman. Young, hot, hard, and without thinking they were calling the shots, and she was lucky to be with them like guys her age seemed to think.\n\nOne of the few drawbacks was they tended to be excitable and grabby, no patience, and she had to slow them down to enjoy them enjoying her. Usually, she'd let them just fuck her hard and fast, get off quick, and the second round would be slower and far more satisfying.\n\nBut Jake was taking his time between her soft, lush thighs, savoring the mature pussy that he was slowly bringing her to what, according to the way her thighs and body were trembling, was going to be one hell of an orgasm.\n\n\"Oh, just like that, honey,\" she encouraged. \"You make this pussy purr and I'm going to give you a nasty little treat.\"\n\nJake made a show of tracing a deliciously slow figure eight over her clit. Dana's eyes left his talented tongue to wander down his well-muscled back and the black jeans which showed off what promised to be a great ass.\n\nHaving a good looking young stud kneeling between her legs and eating her reminded Dana that despite her problems, life was still good, and it didn't get much better than this. At least not until she felt his hard cock pounding into her needy cunt.\n\nDana lifted her long legs, draping them over his back, admiring how the black schoolgirl heels and white stockings looked against his skin. She gasped and her back arched off the bed when Jake buried his three fingers deep inside her and sucked her clit in a fast rhythm and with lip smacking gusto.\n\nDana released a low guttural growl and clamping her thighs around his head, reached over hers and grabbed the headboard. Using it as leverage, she lifted her hips, grinding her pussy into his face, wiggling back and forth, her body straining to come.\n\nJake pushed her over the edge when he pulled his fingers back and rammed them home while squeezing her clit between the fingers of his other hand and sucking it once more. Dana came like an animal, throwing her head back and howling in pleasure.\n\nShe caught Jake's eyes widen as she released a follow up wail that would shame a porn star as her hips worked in frantic circles, grinding her sticky wet flesh into his now flickering tongue. Dana squeezed the rungs of the headboard hard enough to make her knuckles pop as her pussy convulsed around his fingers and her body exploded into the intense orgasm she anticipated.\n\nShe dug her heels into his shoulders and felt him grunt into her pussy as they gouged into his skin, but she didn't feel bad, she was prepared to more than make it up to him. Her first long squeals turned into a series of sharp little yips as waves of pleasure crashed through her body.\n\nWhen the last tremors of orgasm flowed through her, she dropped her legs from him, releasing him from where he'd been trapped between her thighs, and sighed.\n\n\"That was so good, honey, someone taught you well.\"\n\n\"I like older women,\" he grinned as he sat up on his knees between her legs.\n\nHis face was red and glistening and despite the strong orgasm she'd just enjoyed, her lust was unabated and would be until she got the fucking she so needed, but first, she had to have that dick in her mouth.\n\nShe sat up and with a smile, told him. \"Stand up on the bed.\"\n\nWith a look of anticipation that sent another wave of heat through her still quivering twat, Jake rose slowly to his feet, putting his hands on her shoulders to steady himself on the soft mattress. As soon as he was standing over her, Dana grabbed his jeans and boxers and yanked them down his hips.\n\nThe second his cock sprang free it was in her hand, then in her mouth.\n\n\"Fuck!\" Jake gasped as Dana took him deep, her tongue sliding across his shaft as she opened wider, and effortlessly took his full length.\n\nShe looked up at him, her lips pressed around his shaft and winked when she slid her tongue out and caressed his balls with it.\n\n\"Oh my god,\" Jake moaned when she played with his balls while keeping him buried in her mouth.\n\nHis salty pre-cum slid down her throat and she moaned around his hard flesh, her eyes rolling back at the feeling of having her mouth stuffed with young cock. She shook her head back and forth, working the sensitive tip around in her warm wet mouth and Jake's moan, as well as the way his balls tightened in her hand added to her excitement.\n\nShe worked her mouth backwards, until just the tip was between her lips. After giving him a quick hard suck that filled her mouth with more pre-cum. She paused, loving the way his legs trembled in anticipation.\n\nDana released his cock and pinning it to his stomach sucked on his swollen balls, getting another groan of surprised pleasure from him as she gently sucked on each in turn while stroking his now slick shaft.\n\nShe switched to licking his balls, bathing them with her soft tongue as her eyes remained on his. Done with teasing herself, Dana licked up the length of this shaft, opened wide and went to work.\n\nJack moaned and his fingers tightened on her shoulders, as Dana bobbed her head rapidly, taking him a little more than halfway each time. She sighed and closed her eyes as she reveled in the act of blowing a kid she'd met less than four hours ago and barely spoken to.\n\nAs she did in all her recent cougar cub encounters, Dana imagined Ben, the conceited asshole who thought 'dirty' was doing it doggy style once every few months. He was a boring selfish lover as well as being a possessive jerk she'd wasted years of her prime with and was too na\u00efve to realize it.\n\nShe fantasized about sending him pictures of her blowing or fucking a young stud, but would never do it because the a-hole would put it on the damn net. But just thinking of the look on his normally smug face while he watched her fuck a boy not only half his age, but twice the lover.\n\nDana tickled and caressed Jake's tight balls while she steadily blew him and moaned as his hips were now rocking in time with her sucking, thrusting into her descending mouth. His hands were still on her shoulders and releasing his cock, she smiled up at him and held up her pigtails which she'd left in for an extra thrill.\n\n\"Really? I have these and you're not using them?\"\n\nJake took them in his hands and held them as she briefly went back to sucking his cock. When she realized he either had no clue, or was just afraid of being to forward, she stopped sucking and sighed.\n\n\"That's all you're going to do? Just hold them?\"\n\n\"I...\" for the first time he looked hesitant.\n\n\"Just pull them and use them to fuck my mouth,\" she said bluntly, and took him into her mouth, but remained still, waiting for him.\n\nThere was a moment of uncertainly in his eyes, but when she raised her eyebrows at him, he gave her a wicked smile, and yanked her head forward. Dana squealed around his cock as he plunged it so deep into her mouth his balls slapped her chin.\n\nJake turned himself loose, holding her hair tightly as he worked his hips, fucking her mouth with long hard strokes that had her nipples aching, her clit once again throbbing and her eyes watering from having his long thick cock pounded into the back of her throat.",
        "Dana opened her mouth wider, emitting gurgling gagging sounds as he face fucked her. Spit and pre-cum were flowing out of the sides of her mouth and down her chin. She moaned when it dripped onto her tits, sliding across her nipples.\n\nShe placed her hands on his chest, and he gasped when she gave his nipples a hard pinch as he continued his welcome assault on her mouth. She raked her nails along his chest and stomach causing his breath to hiss between his teeth.\n\nDana caught movement out of the corner of her eyes and shifted her gaze to the left. She moaned at the sight of their reflection on the mirror on his closet door. Her topless, her face beet red and tears flowing down her cheeks as he force fed her his impressive cock.\n\nShe cupped her tits, playing with her nipples, her hips grinding in anticipation of having this cock between her other lips.\n\n\"Oh!\" Jake moaned, his hips moving faster. \"I have to stop, I'm going to...oh, shit!\"\n\nHe had stopped moving his hips and pulled back, trying to remove his cock from her mouth, but Dana wanted the sticky warm reward for her efforts. Wrapping her arms around his hips, she held him still as she resumed sucking, this time as fast as she could, blowing him as if it were a competition, and one she wouldn't lose.\n\nJake lasted less than a minute before his hands tightened in her hair and he emitted a low moan. His cock twitched in her mouth and she whimpered in pleasure at the first warm jet of cum striking the back of her mouth and sliding down her throat.\n\nShe cupped his balls while grabbing his cock and jerking him into her mouth while she sucked on his spurting tip, eagerly swallowing each squirt that erupted into her mouth.\n\n\"Jesus!\" Jake groaned as she squeezed his balls and twisted her hand when she reached the top part of his shaft, trying to wring every drop she could from him.\n\n\"Oh, fuck,\" he moaned when she couldn't coax anymore from him.\n\n\"That's what we're going to do.\" She yanked his pants down to his ankles, then sprawled back on the bed, her legs open. \"Fuck me!\"\n\n\"I just came,\" he looked confused.\n\n\"You're still hard and if you shove it inside me and fuck me, you'll stay that way!\" She laughed. \"Let's see that youth and enthusiasm!\"\n\nJake dropped to his knees, and keeping his pants around his ankles, slid up between her legs, his still oozing cock inches from her aching cunt.\n\n\"Shit!\" He leaned over towards the nightstand. \"I need a...\"\n\n\"Just fuck me bareback!\" She demanded. \"I want to feel that cock inside me.\"\n\nJake looked dubious, but she didn't give him a choice. Reaching between her legs, she grabbed his cock, and thrusting her hips upwards, eased him inside her.\n\n\"Damn, you're wild!\" Jake whispered, but plunged his still hard cock balls deep inside her.\n\n\"Got a lot of time to make up for.\" She opened her mouth and wagged her tongue at him, showing off the puddle of cum, she hadn't swallowed yet.\n\nJake's eyes widened and he took his excitement out on her, fucking her with the same long hard strokes he'd used on her mouth.\n\n\"Fuck yeah!\" She cried out. \"Give it me harder!\"\n\nJake leaned over, placing his hands by her head and groaned as he fucked her harder. Dana knew his cock was still sensitive from just having cum, and elicited a whimper from him when she contracted her pussy around him.\n\nDrawing her legs back, Dana hooked her arms around them, pulling them as far back as she could, and allowing him to drive deeper into her.\n\n\"Hot,\" Jake whispered in between thrusts. \"So fucking hot!\"\n\nDana had to agree as she stared up at her feet which were now above her head as she shamelessly opened herself to him as much as she could. The bed rocked and squeaked as Jake tore into her just the way she'd hoped he would.\n\nHer tits bounced wildly and she yelped each time his cock drove home inside of her wet twat. She released her legs, draping her ankles over his shoulders, and grabbing his hips, held them as he thrust into her.\n\n\"Fuck, honey you're still so hard!\" She moaned. \"Keep going, keep fucking me! Please keep fucking me! I need it so bad!\"\n\nTo her dismay, Jake slowed his thrusts, then pulled out of her.\n\n\"What are you...\"\n\nIt was her turn to be surprised when he slipped her legs from his shoulders, and grabbing her hips, rolled her onto her side.\n\n\"Oh, hell yeah!\" Dana laughed as she rolled onto her stomach.\n\nShe drew her knees up beneath her and put her ass in the air for him. She cried out when he gave her ass a hard slap on each cheek, before spreading them and slamming his cock home.\n\n\"So fucking deep!\" Dana howled as he took her so hard the headboard banged against the wall and the bed sounded as if it were about to give way. She lifted her head and shook it, causing the pigtails to bounce around. \"Grab them!\"\n\nThis time Jake didn't hesitate. He grabbed her hair, pulling her head up and holding them tight as he resumed plundering her grateful pussy from behind. Dana grabbed the headboard again, yelping loudly as Jake gave her the hardest fucking she'd had in years.\n\nHe was far more confident than the other young guys she'd had, and she didn't doubt for a second she wasn't the first older woman he'd fucked. Dana sought out the mirror once more and watched him taking her from behind like the wanton slut she'd longed to be the last few years.\n\nThe added thrill of watching had her right arm moving beneath her, her fingers finding her once swollen clit and rubbing it as Jake used her hair for handlebars, while giving her a fucking that was so hard it bordered on brutal.\n\nDana wouldn't have it any other way and despite having come not long ago and barely playing with her clit for more than a minute, she felt her body tensing for another explosion. Behind her, Jake was breathing hard and his strokes becoming shorter and more desperate.\n\n\"Hold on, baby!\" She cried out. \"I want to come on that cock! I want to...\" her words turned into a high pitched whimper that quickly escalated into another long loud wail as her body exploded.\n\nBehind her, Jake moaned with each thrust as she drove her hips back into him, pushing his cock deeper into her convulsing pussy. She could tell by his frenzied thrusts and loud breathing he was at the edge and slipping her hand further back, she cupped his balls the next time he thrust into her.\n\nShe rubbed them as he gave her a few more savage pumps before whipping his cock out.\n\n\"Hmm, I love that!\" Dana sighed as he sprayed her lower back and the cheeks of her ass with his hot cum.\n\nJake stroked himself as she lowered her ass, allowing him to keep painting it even when after several squirts the last of it was barely a dribble. Still a big load seeing it was his second time in a few minutes.\n\nHer pussy still quivering, Dana straightened her legs, so she was lying on her stomach, fighting to catch her breath.\n\n\"Goddamn!\" Jake fell onto his back beside her, his face as red as hers. \"Holy fuck that was intense.\"\n\n\"Yes, it was.\" She gave him a satisfied smile as his sticky cum slid down her ass and onto her inner thighs. \"Damn you fucked me good.\"\n\n\"Feels more like you fucked me,\" he laughed. \"That's what I call hardcore sex.\"\n\n\"Hmm,\" she reached over and teased her nails down his stomach. \"Know what I call it?\"\n\n\"What?\"\n\nShe grabbed his still dripping semi-hard cock and smiled. \"Round one.\"\n\nChapter Three\n\nDana sat in the small waiting room of Beautiful You Modeling Agency, trying to focus on the Vogue magazine in her hands and not think about anything else. It was a losing effort, beginning with the recurring thought that had she stayed in the business and kept getting bigger who's to say it couldn't have been her in the magazine she held in her hands?\n\nInstead, she'd chosen the path of being a 'good wife' working a mindless dead-end job that left her with no real skills that could support her, and the house she desperately wanted to buy Ben out of in the next few months.\n\nNow she was using her best attribute, her looks and her still impressive body, to work tips at a poor man's gentlemen's club that couldn't get the licensing for nudes and settled for waitresses in trashy outfits.\n\nDana put the magazine down and picked up her updated portfolio. The majority of it contained her work from fifteen years ago but had some shots from two days ago that Burt had printed in record time.\n\nShe frowned at the shots of her in the suit which featured a traditional blazer and white blouse beneath it, but a short skirt and black heels that were far from professional. 'Business Sexy' Burt dubbed the look.\n\nDana looked stiff and nervous in the shots, her poses as obviously forced as her smile rather than being relaxed and natural. The pictures of her in the sun dress were a little better, and in one of them she saw the playful smile she'd been going for, but the rest were as bad as the suit shots.\n\nThe last half dozen were the school girl ensemble and her lips twisted into a wry smile at how different her demeanor was. There was a great teasing flirty smile on the first couple, but the rest her face was a mask of genuine desire bordering on outright lust when she got Jake involved in them.\n\nLike Burt, Ellen knew the effect the camera used to have on her, and they'd both see it on full display here after all these years. Jake had gotten to see it in person for several hours until even at his age, and with her persuasive mouth, he couldn't get it up to fuck her a fourth time.\n\nAt that point, she'd done what she'd had to the previous young men she'd hooked up with. She'd given him a quick kiss, gotten dressed and headed out the door, refusing to give her number or address to Jake, and outright telling him she was a one and done deal.\n\nHe'd looked put off, but fact was she'd put out and in grand style and in her mind would like to think she'd been the ride of his young life up to this point. He'd get over it, and she'd be all over another guy like him as soon as she had her next night off to go on the prowl.\n\n\"Miss Darling?\"\n\nDana looked up at the sound of her maiden name, which she'd been happy to go back to since becoming legally separated from Ben.\n\n\"Ellen will see you now,\" the pretty young receptionist gestured with her arm. \"Right this way.\"\n\nDana rose from her seat, and followed the receptionist, reflexively smoothing the front of the plain, borderline severe black dress she wore. The rest of her matched what she hoped was a 'I'm ready for business' look. Plain, but expensive black pumps, her long hair pinned up, and her make up on the lighter side.\n\nNot that Ellen hadn't seen her close to nude back in the day in lingerie shoots, and was familiar with her more playful work, but Dana was older now and wanted to show up looking the part of a mature woman, not the carefree young girl she'd been when she'd first met her twenty years ago.\n\nIt was sad their 'relationship' had been limited to Facebook posts and a phone call every few months, but it was hard to keep in touch while doing it mostly behind Ben's back. Dana felt a wave of not just frustration that she'd let herself be controlled like that but shame she hadn't stood up to him and stayed close to Burt and Ellen who had done so much for her in every aspect of her life before him.\n\n\"Look what the cat dragged in!\" Ellen exclaimed from the doorway of her office where she was waiting. \"Dana Darling in the flesh!\"\n\n\"Little more flesh than their used to be,\" Dana shrugged. \"But...whoa!\"\n\nShe gasped when Ellen threw herself at her and wrapped her arms around her.\n\n\"It is so good to see you!\" She yelled in her ear making her wince. \"It's been way too long!\"\n\n\"It has,\" Dana returned the hug, fighting not to tear up as the receptionist smiled and walked back down towards the waiting room. \"And I'm so sorry about that, Ellen. I was a real...\"\n\n\"Was is past tense, you're here now.\" Ellen eased back, but took her hands in hers, smiling away at her. \"Always forward never backward, right?\"\n\n\"Right Burt.\"\n\n\"It was about the only quotable thing he ever said,\" Ellen grinned. \"Or the least profane anyway.\" She turned and walked over to her large desk, gesturing at one of the leather chairs in front of it.\n\n\"You look good, Dana,\" Ellen said as she sat down. \"I mean that personally and professionally, you've held up over the years.\"\n\n\"Thanks, I think.\"\n\n\"You're older and more mature. You still have those gorgeous cheekbones and those doe eyes you can play sweet or sassy.\"\n\nEllen sat back and looked her up and down with a practiced eye.\n\n\"You're bodies a little thicker, but that's perfect in the sense that...\"\n\n\"I look like a real woman. Burt gave me the yoga pants crowd can be a turn off for some ads speel.\"\n\n\"He's right,\" Ellen rolled her blue eyes. \"The miserable old prick is right about almost everything, but it's not like we can admit that to him.\"\n\n\"Have you had a chance to look at the pictures he took?\" Dana asked, trying not to sound as anxious as she felt.\n\n\"Before we get to that, how are you doing? How's it feel to be single again and out from under his thumb?\"\n\n\"If it weren't for finances it would feel pretty good.\" Dana frowned. \"But you know the story, no skills other than modeling, and I made shit money at a job anyone could do. Now I suddenly get laid off because the owner is one of Ben's clients and I can't find a job that will pay anywhere near what I need to make.\"\n\n\"I heard you're waitressing?\"\n\n\"That's a nice way to put it.\" Dana grunted. \"What I'm really doing is shaking my ass in front of a bunch of wall street and white collar wannabes who smoke cigars and drink overpriced wine and scotch\"\n\n\"A gentlemen's club,\" Ellen nodded. \"Couldn't be more inappropriately named. Bunch of assholes who've gotten tossed out of all the strip clubs, or their wives won't let them go.\"\n\n\"Because they probably met their wives at a strip club. Sugar daddy type galore in that place.\" Dana explained.\n\n\"Maybe that's what you need.\"\n\n\"A sugar daddy to me would be sixty five.\" Dana scowled. \"Besides, that's what Ben was when it came down to it. Yeah, I had a job, but I was a trophy wife who let him control me. Until I got a little too old, and he started banging the tarts his firm hires.\"\n\n\"Sorry,\" Ellen put her hand up. \"I didn't mean to upset you.\"\n\n\"Not your fault, its mine. I chose to live that way.\"\n\n\"And now you've chosen not to.\" Ellen smiled encouragingly. \"I'm glad you're back to the old you.\"\n\n\"The old me is trying to go back to being the young me is more like it. Modeling was my calling, and I should have stuck with it.\"\n\n\"I remember when I first met you, you said even your name was made for modeling, Dana Darling.\"\n\n\"Burt said that name was made for porn.\" Dana chuckled.\n\n\"Porn,\" Ellen repeated, her face turning serious.\n\n\"Something wrong?\" Dana asked when Ellen remained silent giving her an odd look.\n\n\"Oh, no, just thinking about something. Got a lot going on,\" she laughed, but it sounded forced this time. \"Friggin Burt, the stereo type dirty old man.\"\n\n\"Now, yes, back then we just called him a pig,\" Dana reminded her.\n\n\"True, but for all his off color jokes and comments he was always a pro and never took advantage of young women the way some of those sleazebags at other agencies did.\"\n\n\"Ellen, I don't mean to be pushy, and I really want to get together and catch up and start spending time together like we used to, but for now, what did you think of the shoot?\"\n\nEllen nodded. \"You're not being pushy, I know this is important.\"\n\nShe picked up a black folder from the desk and leaning back opened it and flipped through the pictures.\n\n\"First two shoots are boring both for you and Burt. Really can't get any more standard.\"\n\n\"I know, he was just trying to get me comfortable.\"\n\n\"The last set is great, your poses, the facial expressions, the passion, it's all there like you never lost a beat.\"\n\n\"Thank you!\" Dana beamed.\n\n\"You go from playful to outright seductive.\" Ellen paused then smiled. \"Never to be old to be naughty is what this would say in the right ad.\"\n\n\"You think you have the right ad?\"\n\n\"Course being that I know the old you, I can't help thinking this good looking young guy is what you were playing too far more than the camera.\" Ellen stared over the folder at her.\n\n\"Well,\" Dana's eyes avoided hers. \"I guess he didn't hurt.\"\n\n\"Even if he did, I'll assume it was a good pain.\"\n\n\"Excuse me?\"\n\n\"Fifteen years away didn't teach you anything, did it?\" Ellen sighed. \"That kid was running his mouth to Burt yesterday about how you waited for him, and even kept the schoolgirl outfit on.\"\n\n\"Great,\" Dana felt her face burning. \"Guess it doesn't matter how old or young they are, boys will be boys.\"\n\n\"And most boys talk, which I'd think you'd know by now.\" Ellen put the folder down and leaned forward, clasping her hands in front of her. \"Or at this point do you just not care?\"\n\n\"We're legally separated with the divorce in process, it's not going to hurt my case if that's what you're asking?\" Dana explained.\n\n\"I was thinking more in line with making up for lost time and maybe getting some payback by screwing kids half your age, like Ben did.\"\n\n\"Trust me, he doesn't care. He would have had to care about me as something other than a possession to care who's fucking me these days.\"\n\n\"Making up for lost time then?\" Ellen pressed.\n\n\"Why are we talking about this?\" Dana asked. \"We can get together for a drink and talk about my sex life and everything else then. Right now...\"\n\n\"Because your sex life was directly tied to your career before, and even a little after you started working for me.\"\n\n\"That was a long time ago,\" Dana said defensively.\n\n\"Yet you fucked Jake after the shoot.\"\n\n\"You know him?\" Her eyes narrowed. \"You said 'that kid' earlier.\"\n\n\"Burt told me his name,\" Ellen gave her a wry smile. \"Jake being there wasn't a coincidence, Burt planned it in case you needed a push to get back into the groove.\"\n\n\"That fucking prick!\" Dana snapped.\n\n\"Was he wrong?\" Ellen raised her blonde eyebrows. \"The difference in you from pre-Jake on the set to once he was there is night and day.\"\n\n\"Point taken,\" Dana slumped back in her chair. \"Burt always knew how to motivate all the girls.\"\n\n\"And with you, he knows the camera always brought out that side of you.\"\n\n\"Guess I'm still an exhibitionist at heart.\"\n\nDana tried not to think about how wet she was at work some nights when the guys were really checking her out. It wasn't as exciting as the camera where she could let her fantasies run wild, rather than see who was looking. But the fact it was still men desiring her and thinking of her fucking them, could get the same effect.\n\nShe wouldn't go home with one, no matter how worked up she got or how attractive the guy was, Dana knew it would be the end of the job. He'd come back, talk to the other patrons, tell them what a wild ride she was...not shitting where you ate was the first thing Burt, then Ellen, drilled into her when she started working with them.\n\nBut the nights she left at midnight and didn't have to stay until close found her at clubs or bars looking for a young guy who was looking at her.\n\n\"I think we both know you're more than that,\" Ellen spoke as if she'd read her mind. \"Exhibitionists leave it at showing off for someone, you invite that someone or another someone back for a party, and like that cheesy ass song goes that after party is at your body.\"\n\n\"I didn't think I was coming here to be judged with what I do with my personal time.\" Dana stiffened. \"I'm newly single and making up for spending a long time with one man. A man who kept our sex life vanilla because he was so insecure, he felt if he let me cut loose he couldn't keep up and it would upset his fragile male ego.\"\n\n\"Too bad that talk wasn't there in the beginning, you would have gotten out sooner.\" Ellen put her hand up when she saw the look on Dana's face. \"Sorry, but you brought him up.\"",
        "\"Yeah, I need to stop doing that,\" Dana agreed. \"But I don't know why we're fixated on sex. If you're worried that I'll go back to doing what I did before, I promise it won't happen.\"\n\n\"Happened yesterday.\"\n\n\"It did, but it was my first time, and I was overwhelmed. The way Jake looked at me brought all that back and I slipped up.\"\n\n\"Dana, this is the first time we've seen each other face to face since you started the divorce proceedings,\" Ellen began.\n\n\"I know, and I'm sorry. I was just ashamed of all but ignoring you for years and didn't feel like it was right to just show up on your doorstep like I'd been a good friend all along.\"\n\n\"You could have because I know good people make bad mistakes or have to do things other people don't understand.\" She gave Dana another weird smile as if there was more she wasn't saying. \"No hard feelings, Dana, just glad you're back to being you and we can be us.\"\n\n\"I want that, I really do.\"\n\n\"What I was saying was you've called me a few times, and a couple of times you were pretty trashed.\"\n\n\"Was drinking a lot the first few weeks Ben was gone, just trying to cope,\" Dana sighed. \"If you're worried about that, I haven't had a drink in a month and that's with working at a place that don't mind their girls a little 'relaxed' shall we say. Better for the customers who think we're for sale.\"\n\n\"I'm sure a few are, and you've had some offers.\" Ellen smirked.\n\n\"I have, but I'd never have sex for money, especially not with some asshole wearing an expensive suit, but acting like a frat boy.\"\n\n\"You'd never take money to do something you'd enjoy?\" Ellen frowned, and Dana returned the look. Why would she have an issue with that answer?\n\n\"I sure as hell wouldn't enjoy it. If I wanted to have boring sex with an arrogant prick who thinks money makes him a man I'd have just stayed with Ben. Never mind the humiliation when the talky prick tells all his friends about the whore he paid to fuck him.\" She laughed harshly. \"Like paying for it is something to brag about.\"\n\n\"Little bitter?\" Ellen nodded. \"Can't say I blame you, and trust me, you know I started out modeling. I've been through the propositions and casting couch games. But I'm kind of digressing.\"\n\n\"Feels like you're fishing,\" Dana countered. \"Not sure for what, but this conversation is getting weird.\"\n\n\"Might get weirder depending on what we can work out.\" Before Dana could respond to another cryptic remark, she continued.\n\n\"Where I was going was you mentioned more than once you've been prowling the night scene like an over sexed cougar looking for her lucky cub du jour.\"\n\n\"Cub of the day? Try a few hours.\" Dana laughed, this time a real one. \"They only have one thing I want, and it's not personality or conversation. I'm not dating, just fucking.\"\n\n\"And loving every minute of it.\"\n\n\"Why shouldn't I? I'm getting out years of sexual frustration, maybe a little revenge in a way, and just having a good time.\"\n\n\"Jake told Burt you were a hell of a good time, like a wildcat porn star was his exact quote. Even kept the shoes, skirt and tie on.\" Ellen grinned. \"Hence the porn star comment I imagine.\"\n\n\"Seems like Burt let him keep talking,\" Dana scowled. \"Pig.\"\n\n\"Nothing he didn't hear about you years ago.\"\n\n\"Okay,\" Dana put her hands up. \"I appreciate Burt helping me out with a free shoot, and you taking a look to see what you can find for me, but I'm getting a little tired of discussing my past and present sex life.\"\n\n\"Maybe you'll change your mind on that.\" Ellen tapped the folder. \"But okay, let's talk what I can do for you.\"\n\n\"Thank you.\"\n\n\"Nothing.\" Ellen sat back in the chair and folded her arms over her chest. \"Absolutely nothing.\"\n\n\"I...\" Dana blinked at how abrupt the answer was. \"That simple?\"\n\n\"Dana, modeling is always a crowded field, and you know that. These days the internet has made it even more so. Girls on twitter and snap and all other social media posting their pics to get attention and a lot of them are getting found that way.\"\n\n\"But Burt said you had a project for an older model, and I have experience and...\"\n\n\"My firm, and the rest of the industry have plenty of older models. Its damn hard to break into this field when you're young, but when it comes to mature models, yesterday's girls are today's women.\"\n\n\"But...\"\n\n\"I know, we're friends and you have a history, and the hope was I could get you a foot in the door.\"\n\n\"Feels like it was just slammed in my face.\" Dana groused.\n\n\"I run this agency, but I still have to get the clients to approve the model. These photos are nothing spectacular. You're a beautiful, sexy woman, Dana, but we have plenty, and nothing about you really stands out.\"\n\n\"But if I never left, I'd still be working.\"\n\n\"Most likely, but you can't keep dwelling on that.\" Ellen's face softened and she leaned forward and put her hand on Dana's where her arms were folded on the desk. \"I still might be able to find you work, but it's going to take time, and won't be steady. Burt said you're in real deep shit financially?\"\n\n\"I told you I was laid off and why. This cocktail waitress bullshit is barely keeping food on the house, the lights and heat on and my car on the road. I can't come close to the mortgage.\"\n\n\"Then sell the house in the divorce and get a big pay out.\" Ellen shrugged. \"Ben has to split it with you.\"\n\n\"No.\" Dana's lips pressed in a hard line. \"I love that house and he bought it because I wanted it. Ben never wanted kids and he was content to live in a nice condo. I wanted the picket fence and the garden and a nice home.\"\n\n\"You could rent a house and...\"\n\n\"It's the only thing I ever felt was mine even though he paid for most of it, because he did it for me back when he actually cared about me. I let him take my career, my friends, any life that he didn't approve of.\" She lifted her head defiantly. \"I'll be damned if he'll take my home.\"\n\n\"That's the Dana I've missed all these years!\" Ellen clapped her hands. \"But I'm confused about something. He made great money and made you leave a good paying job, what about alimony?\"\n\n\"I waived it.\" Dana told her. \"I don't want his goddamn money or for him saying he still takes care of me.\"\n\n\"Jesus, Dana, the guy cheated on you! You should be able to take him to the damn cleaners even without alimony.\"\n\n\"What cleaners? We never had kids, we each have a car that's paid off, I waived him paying me, all that's left is the house.\"\n\n\"Which he should be paying for while you just live there.\"\n\n\"Same as taking his money,\" Dana insisted.\n\n\"What's the plan then? You trying to buy him out?\" Ellen shook her head. \"That house could sell for a pretty penny, he must want half of that value.\"\n\n\"Nope. Whether it's out of guilt for cheating or knowing I might be able to force a better deal because of it, he's being reasonable.\"\n\n\"What's his definition of reasonable?\" Ellen asked skeptically.\n\n\"He's waving equity and going by the balance on the house.\"\n\n\"Shouldn't it be mostly paid off? You guys bought it right when you got married.\"\n\n\"We took money out for a few improvements which is why the house is worth so much,\" Dana explained. \"He also took some money out for that boat so he could look like a hot shot to his clients.\"\n\n\"What do you need? Maybe I can help?\"\n\n\"We owe seventy. Ben drew something up that if I can pay him thirty five he walks away from the house.\"\n\n\"Goddamn, I couldn't lend you more than a few thousand.\" Ellen sighed.\n\n\"And I wouldn't take it and if I did, I couldn't pay it back.\" Dana grunted disgustedly. \"He wants the thirty five in six months.\"\n\n\"That's ridiculous!\"\n\n\"And his lawyer is saying it's ridiculous that he could force the sale and get a lot more, so its not a bad deal considering.\"\n\n\"You pay thirty five, while paying the mortgage, then you keep paying the mortgage afterwards?\"\n\n\"Yes, but his name comes off the house when he gets his money.\" Dana tapped her long red nail on the desk. \"But with the mortgage, taxes, utilities and crazy things like food, I don't make enough to afford that, never mind come up with that money.\"\n\n\"Can you borrow against the house?\"\n\n\"Not without a job,\" she smiled ruefully. \"That's the shady part of his generous offer, he made sure I'd lose the job.\"\n\n\"Too bad you can't prove that.\"\n\n\"Can't afford to pay someone who could dig up proof.\"\n\n\"Six months to make the sale price and keep the house up.\" Ellen whistled. \"Wow, no modeling gig was going to pay you that much, Dana.\"\n\n\"But steady work might have gotten me a loan, maybe.\" She pressed her hands to her throbbing temples. \"Pretty damn hopeless.\"\n\n\"Force the sale, take the payout.\"\n\n\"I want this damn house!\" Dana snapped. \"That smug prick is not going to win this, and me keeping the house is worth more than the money I'd make selling it.\" She slumped back in the chair.\n\n\"Besides, it will take time to sell, and I'd have to move and right now I don't even know if I can afford a damn apartment these days unless its tiny and in a crap neighborhood and I'd have to put all my grandmother's furniture in storage and...\"\n\n\"How bad do you want the house, and this moral victory, Dana?\" Ellen cut her off.\n\n\"So bad I can taste it.\"\n\n\"Funny choice of words.\"\n\n\"Why?\"\n\nEllen again looked as if she wanted to say something but wasn't sure.\n\n\"What's going on, Ellen? You've been acting like you're keeping something from me.\"\n\n\"You remember when Russ and I got divorced four years ago, and he pushed me to buy him out of the business or sell it, just like Ben is doing with the house?\"\n\n\"I do, and sorry I was a lousy friend and...\"\n\n\"Forget that. Point is I came up with the money in a few months when I really had nothing. To this day neither Russ nor anyone else knows how I got it.\"\n\n\"Can I ask?\"\n\n\"I'll tell you because of who we used to be to each other and who I hope we'll be from this point on, best friends.\"\n\n\"I'd love that, and that has nothing to do with money.\" Dan whispered, her throat tightening with sudden emotion.\n\n\"And because we're friends, I'll ask you don't judge me, and you'll hear me out.\"\n\n\"Of course.\"\n\n\"Only thing I'll say that sounds like a defense of my actions is I was in your shoes, Dana. Betrayed by my husband, and desperate to keep something dear to me. In my case I started this business and was na\u00efve enough to put his name on it. I'd die before I'd let him keep making money on it or force me to sell off.\"\n\n\"I understand that.\" Dana nodded.\n\n\"Hopefully you understand enough to consider doing the same thing I did to come up with the money without being able to borrow and in secret.\"\n\n\"I can't imagine there's anything I won't do, as long as it's not going to get me tossed in jail.\" Dana added.\n\n\"It has its risks, but jail isn't one of them.\" Ellen told her.\n\n\"Are you going to fess up or what?\" Dana forced a laugh to cover her anxiety.\n\n\"It is a confession, and you're the first person I'm telling what I did and what I can get you the chance to do.\"\n\n\"For fucks sake, Ellen, what did you do?\"\n\nEllen paused again, but when Dana rolled her eyes, she spoke the words in a rush.\n\n\"I became a porn star.\"\n\nChapter Four\n\n\"What did you just say?\" Dana's eyes widened.\n\n\"You heard me. I had a friend I modeled with when I was just out of college and she went into the porn industry. First mainstream, but then she created her own site and started directing as well as starring in them.\"\n\n\"You...made porn.\" Dana blinked. \"Wow, I...\"\n\n\"I know, it's a hard thing to swallow,\" she flashed a wry smile. \"But I made good money swallowing some hard things.\"\n\n\"Ugh.\" Dana scrunched her face up.\n\n\"Ugh? You've been fucking kids half your age like it's a damn competition, but because I got paid to do it, its ugh?\"\n\n\"Being a hooker would be just getting paid to do it.\" Dana was still trying to process Ellen's admission. \"But porn? People filming you? Being with guys you don't know at all?\"\n\n\"Sometimes more than one.\" Ellen winked. \"With the right mindset and people, it can be fun.\"\n\n\"My God, Ellen, didn't you worry someone would recognize you?\"\n\n\"I still think about that now, and it's been three years since I made one.\"\n\n\"Your divorce was five years ago.\" Dana gasped. \"You did it for two years?\"\n\n\"In two years I probably did about eighty shoots and made over a hundred grand.\" Ellen admitted. \"Some of the scenes pay more than others and if you're willing you can shoot three times a week, sometimes more.\"\n\n\"Three a week.\" Dana repeated numbly.\n\n\"Even if you have your period there's always blow job and hand job stuff, hell I did a few foot job vids.\" Ellen shrugged. \"They only pay a couple hundred, but...\"\n\n\"Stop!\" Dana put her hands up. \"I can't believe what I'm hearing. I hope you're not stringing me along.\"\n\n\"I'm not, but you'll have to take my word for it. Not like I'm going to tell you any of the names I worked under or send you links.\"\n\n\"But they're all still out there? You didn't ask to pull them?\"\n\n\"I did when I decided I'd made enough money and had gotten Beautiful You back to being successful enough I'd never want anyone to know. But while they were on the original site, they get pirated like anything else and there's thousands of sites. Once in a while I search and a few come up. I've given up trying to get them all removed.\"\n\n\"I can't believe you did it, and...if it was five years ago, you were forty six!\"\n\n\"Thanks to Milf and Mommy porn you're never too old to start.\" Ellen laughed.\n\n\"Mommy?\"\n\n\"Older women have two roles in porn, a plain sexy as fuck Milf sometimes as a professional woman, sometimes a friend's mom, sometimes a hot cougar on the prowl like you're doing for real.\n\n\"The other role is in incest porn as a mom or aunt.\"\n\n\"God, tell me you didn't do any of those!\"\n\n\"Why not? They pay better than the others and it's not like the guy was my real son.\" Ellen shrugged. \"Maybe since I don't have kids it doesn't seem so bad. That's another reason I took the chance. If I had kids, I would have never put them through that.\"\n\nShe pointed to Dana.\n\n\"You also have no kids and for the most part few friends over the last ten years, and you worked with mostly women, just how Ben liked it. Your odds of someone knowing you wouldn't be bad.\"\n\n\"Hold on, you're talking about this like I said I'd think about it,\" Dana protested.\n\n\"I want you to.\" Ellen smiled when she saw Dana looking more closely at her. \"Picturing me doing it? You're not the only one who's aged well, you know.\" She stood up from behind the desk and stepped to the side, giving a slow twirl, as if for the camera.\n\nFor the first time since she'd entered, Dana took a good look at her former agent and longtime friend. Ellen was taller than Dana, and still possessed the athletic build she'd had since she'd broken into the business on the other side of the camera.\n\nEllen's black stocking clad legs protruding from her short one piece grey dress were long and despite being slender, well-shaped. Although never big on top, her breasts, which Dana had seen when looking at some nudes Ellen had done in her younger days, were perky and perfectly shaped.\n\nShe'd always worn flattering bras which propped what she had up well, and today was no different, with an enticing peek of cleavage visible from her tightly contained breasts.\n\nHer pert, heart shaped ass, visible in the tight skirt was small enough that both cheeks were capable of being grabbed by one large hand. Before her mind's eye, a vision of that ass in the air with a pair of powerful hands on her slim hips fucking her appeared.\n\nEllen still wore her wavy blonde hair long and Dana pictured it across her back, maybe with the guy pulling on it as he pounded her. Her small tits would be bouncing fetchingly, and Ellen's wide baby blue eyes would be even wider from being fucked and staring into the camera, her perfect cupid bow lips parted as she moaned and squealed.\n\nDana blinked the image away when the unwanted thought of what would it be like to be naked and fucking in front of a camera fleetingly crossed her mind.\n\n\"I did color my hair and wear some wigs to make it look like I had short hair.\" Ellen spoke as she sat back down. \"Being a model, I don't think I have to tell you different hair color and some heavier than usual make up can alter an appearance.\n\n\"Unless you're starring in the mainstream releases by big porn producers like Vivid, Tropic and others, and you're at the Jenna Jameson level, most guys would never recognize the average porn star.\"\n\n\"Depends on the guy, some watch way too much.\"\n\n\"True,\" Ellen admitted. \"But milf stuff is mostly watched by younger guys or women who want to be the older woman in the scene. Older guys tend to go the other way with teen girls and daddy stuff.\"\n\n\"I can't do this, Ellen, for a variety of reasons.\"\n\n\"I'm sure the main reason is being exposed, I mean people knowing you, not the obvious exposure.\"\n\n\"That's a big one. \"Hey, weren't you in Dana Darling Rides Again?\"\n\n\"Great title, and I have to admit your maiden name is perfect.\"\n\n\"Perfect for them to google it and come up with my old modeling pics then porn.\" Dana mocked. \"Wow, that Dana she fell on hard times, and hard things too!\"\n\n\"Dana, your heyday was before social media really existed, but the name isn't the issue they let you make one up or suggest some to you.\"\n\n\"A lot of women have been outed and it doesn't go well for them.\"\n\n\"Dana, your parents are both gone, you didn't have kids and you never kept in touch with the few cousins you have. Who are you shaming?\"\n\n\"Myself.\"\n\n\"Is it so shameful? Porn isn't the seedy drug riddled abusive exploitive industry it used to be.\" Ellen stopped. \"Well, no there are still some shady studios, but a lot of porn is now done by small niche studios who film specific kinks and a ton of women are running their own sites and calling the shots.\n\n\"No one is forced to do anything or anyone they don't want to, at least not the woman I'd send you to. It's no longer filled with runaways and desperate drug addicts, a lot of the young starlets are in college, and the older women? They're making a killing with the stuff we just talked about.\"\n\n\"Ellen, I've never even done a full nude. Closest I came were some bikini shots where I was topless but had my hands or arms over my tits.\"\n\n\"And how excited were you on that shoot?\"\n\n\"Very different, I didn't have a guy between my legs and someone filming him fucking me or me sucking his damn cock.\"\n\n\"Dana, we know what the camera does to you. You've told me in the past it's not just the camera, but your mind racing with guys looking at you and wishing they could have you.\"\n\n\"I know, but how you get me willing to be a porn star out of that is a stretch.\"\n\n\"Is it? Dana, you were a goddamn wild cat when you were young. You were unabashedly sexual and never worried what the men you fucked thought about you. You don't have an insecure bone in your body.\n\n\"And you picked up where you left off except you're targeting young guys because it's just sex no bullshit. It's not like you're shy about getting down and dirty.\"\n\n\"Big difference screwing a guy in a motel or his place and doing it in front of a film crew and then having it put out there for the entire damn net to see.\"\n\n\"If you allow yourself to think about it like that, there is.\" Ellen put her hands out. \"Humor me for a minute. If you forget the who might see it aspect and stop at the filming?\"\n\n\"You were probably soaking through your panties in that schoolgirl shoot with Jake. Imagine being naked, every inch of that magnificent body on display and fucking a young guy with a big cock right there in front of people? You can't tell me you wouldn't need to get yourself off if you kept thinking about it.\"\n\n\"In fantasy a lot of things are hot. Lot of women have rape fantasies, but they'd sure as hell never want it.\"",
        "\"Which is why they have videos. People can enjoy the kink without the risk.\"\n\n\"Because the porn stars are taking the risk.\" Dana laughed. \"No, just the women, a guy gets outed he's a damn stud, the woman is always a whore.\"\n\n\"I'm not going to say porn is ever going to be seen as a good career choice, but sex workers get a lot more respect these days.\" Ellen shrugged. \"Just saying.\"\n\n\"You can keep saying what you want. No goddamn way I'm doing it once, never mind how much I'd have to shoot to make what I need in a few months.\"\n\n\"I'm still good friends with Sylvia and I brought you up.\" She quickly put her hand up. \"Not by name, just the situation and how similar it is to mine and how we're close friends. She's willing to give you an advance on shoots so that you could have the money on time.\"\n\n\"But then I'm obligated to do a lot of shoots.\"\n\n\"Yes, and when the predetermined amount is complete you can quit or keep going for a while like I did.\"\n\n\"You asked me here just to talk about this.\" Dana shook her head. \"Talk about a bait and switch.\"\n\n\"Guilty, and now that I got around to telling you about porn to get what you need, I'll confess to the fact it was me that told Burt to make sure that kid was there. I wanted to see if the old Dana was there and she came shining through in these pics and more importantly, afterwards.\"\n\n\"Back to me being into sex translates into 'hey, let's plaster vids of me sucking dick all over the internet' being acceptable.\"\n\n\"You don't have to love it, and you don't have to do it. I'm telling you it worked for me, and you have no other option.\" Ellen tapped her chest. \"Dana, I was nowhere near as sexually adventurous as you before I got married and my sex life wasn't much more exciting than yours.\n\n\"I know I'm attractive, even sexy, but to do that? I was shaking so bad they cancelled my first shoot and Sylvia sent me home and told me to think about it some more. I decided I couldn't let Russ win and came back and part of how I got through was picturing the look on his face if he ever saw his wife getting hammered by a nine inch cock attached to a twenty year old boy who looked like he lived at the gym.\n\n\"I started getting into it to where it became my sex life. I enjoyed the shoots. Sylvia will toss any guy with an attitude; she keeps the mood light and the scenes fun. She doesn't shoot fake non con or rough stuff, doesn't even do anal. Most of her shoots are geared towards women.\"\n\n\"What's that mean?\" Dana was curious despite herself.\n\n\"Lot of sites are hole to hole porn. Guy doesn't even touch a girl's tit, she sucks and they go around the world. Her stuff features some kissing, undressing and the guy's go down on the women and try to get them off for real, it's like a challenge.\"\n\n\"This is where you tell me porn stars really like it?\"\n\n\"Some don't. they just play the part, some get into it. Honestly? My first couple of scenes I faked it, but once I got used to it, I came during almost every shoot.\" She laughed. \"Like I said, it was my sex life, and talk about drama free. The guys can't say anything, most of them have other jobs or families too, so there's no fuck and tells running around.\"\n\n\"Despite you thinking the lens turns me into super slut, I can't see it happening.\" Dana insisted. \"Never mind as much as I'd need to do.\"\n\n\"Burt wasn't lying when he said I had a project in mind for you.\"\n\n\"What is it? Dana does everyone?\" She waved her hand dismissively.\n\n\"Most porn today isn't full length movies. Most sites now do half hour or so clips that all have a theme, for example Naughty At Work is all office themed sex scenes.\"\n\n\"Were you naughty at work?\" Dana smirked.\n\n\"Go fish.\"\n\n\"You think I should do this, but you're so ashamed you won't tell me anything you did?\" She raised her eyebrows as if daring her.\n\n\"I didn't say it's not embarrassing to some extent. You know me so I'd feel awkward if I thought you were going to run off and look me up.\"\n\n\"I probably would,\" Dana sighed. \"Be like driving by an accident, shouldn't look, but can't help it.\"\n\n\"I did a bunch of women seducing their son's friends' videos. It was a fun theme because the guys had to play shy. The ones who were good at it really got me going.\"\n\n\"Okay key word searches, friend's hot mom,\" Dana winked.\n\n\"You'll get about 5000 results and I'm not joking. People think the net guarantees you'll be seen. They forget how vast it is and how much porn is out there, the odds of being recognized are actually pretty slim.\"\n\n\"Don't worry, I'm not going to look.\" Even as she said it, Dana wondered if she would or not because it would be an interesting taboo to watch Ellen 'in action'.\n\n\"Sylvia started a new category two years ago, and it's called the Next Milf Porn Star. The premise is it's a 100% bona fide amateur and it's their first ever shoot. From an interview to some stripping, up to the first full out session.\"\n\n\"One of those alleged reality sites?\" Dana scoffed. \"I don't watch a lot of porn, but I've seen those before and oh, look that woman is a known name that's been in twenty other movies.\"\n\n\"Not this one. Sylvia charges a lot for access to these videos, and she has a guarantee that if you can find a porn vid with that woman that predates hers, you get lifetime memberships to all her sites and a thousand dollars.\"\n\n\"Someone could lie to her.\"\n\n\"She knows how to research, and being in the industry for twenty-five years, she knows a real newbie when she sees them.\"\n\n\"Whatever, it's not the theme that matters it's the act itself that I'm going to take a pass on.\"\n\n\"You sure? I think you'd be one of the women who like it, and how else are you getting the money?\"\n\n\"I don't know, but no amount of money is worth taking a damn money shot for the pervs of the world to see.\"\n\n\"Okay, well if you change your mind call me, so I can let her know you're going to call her.\" Ellen picked up a post it and wrote on it. \"This is the link to her talent agency.\"\n\n\"Talent,\" Dana rolled her eyes. \"Like fucking and sucking is a damn skill?\"\n\n\"It's the ability to do it on film that's the skill, not to mention there are men and women out there who suck in bed,\" she sighed. \"We managed to marry two of them.\"\n\n\"Touche'\" Dana took the post it and put it in her purse even though she knew she'd never look at the site.\n\n\"I have an appointment coming in soon,\" Ellen told her. \"We need to set up a time to catch dinner and a couple of drinks.\"\n\n\"Sounds good, and sorry if I don't seem appreciative of what you told me and offered to me, but it's a little too much for me.\"\n\n\"It's an open invitation, the site and Sylvia aren't going anywhere.\" Ellen snapped her fingers. \"Oh, there's one thing I forgot to mention.\"\n\n\"What's that?\"\n\n\"That because the site insists on a real first timer, they pay pretty well.\"\n\n\"I have no idea what any of it pays.\"\n\n\"One on one with a guy about a thousand, maybe a bit more.\"\n\n\"Hey, only thirty five shoots for my goal!\" Dana clapped. \"Instead of a go fund me we could call it a come fuck me!\"\n\n\"That was good, even though it was sarcastic.\" Ellen complemented her. \"But just to let you know Beth pays a lot more for Next Milf Porn Star.\"\n\n\"Like what? $1500?\"\n\n\"No,\" Ellen replied with no trace of a smile. \"Try up to ten grand.\"\n\nChapter Five\n\n\"Hear you go, gentlemen,\" Dana smiled as she walked up to the four men sitting at one of the tables in the section she was handling tonight. \"Four glasses of Jameson and your cigars.\"\n\nDana deftly plucked the glasses from the tray balanced in her left hand, putting one in front of each customer, then adding the $150 cigars next to them. The four were the typical self-important putzes she dealt with every night.\n\nTheir suits, although not cheap, weren't quite the quality that warranted tossing that much money on a cigar, but she imagined they were all playing the look at me game with the others with none of them willing to stay within their means.\n\nDana deliberately leaned further over the table than she had to, allowing the two men on that side a good view at her substantial cleavage, and the men she was leaning between a peek at the cheeks of her ass as the short schoolgirl skirt rose as she bent over.\n\nShe'd worn the outfit Burt had let her have after the shoot because even though he gave it to her to bust her chops it was sexy and revealing and right up the alley of the clientele. She'd even gone with tying the shirt as she had for the shoot to show off more of her breasts which were barely contained in the lace bra she wore beneath it.\n\nDana had forgone the white cotton panties because even though they fit the ensemble, they didn't show as much of her ass as the white thong she'd replaced them with. Her heels were different too, much higher than the originals, but she'd kept the white knee high stockings\n\nHer hair, back in the pig tails tickled her face as she leaned over and she gave her head a flirty toss while flashing her best tip working smile.\n\n\"You're supposed to be a schoolgirl?\" The one who'd ordered the latest round asked. \"You look more like the principle.\"\n\n\"Only as old as you feel.\" Dana forced herself to smile rather than take the bait on the dig.\n\n\"Be cool, Joe,\" One of the others said. \"And get it right. Private schools didn't have principles they have head mistresses.\" He leered at Dana. \"You the head mistress?\"\n\n\"Nah, she's wearing white stockings. We'd be able to see the dirt on her knees.\" The guy to her light laughed. \"Or do you just sit down and make them stand?\"\n\n\"Will that be all for now, gentlemen?\" Dana asked, keeping the tray close to her and over her hands so they couldn't notice them shaking from the desire to hit one of them with it.\n\n\"You didn't answer me,\" Joe picked up his cigar and clipped it with a gold cigar cutter Dana was sure was plated and not real. \"You playing naughty school girl?\"\n\n\"Just a fun outfit,\" She managed another smile. \"We're all about our clients having fun here.\"\n\n\"You look like you might have been fun twenty years ago, now you just look desperate.\" Joe sneered at her. \"You look more like the slutty mom who showed up to blow the principle, so he doesn't suspend her trailer trash daughter.\"\n\n\"Jeez, Joe.\" The man who'd remained silent so far spoke up. \"Chill out, man, you don't have to be nasty.\"\n\n\"I'm dropping good money here and I see hot little tarts all over the place, but we get this has been?\" he sat back and smirked at her. \"What's the matter, honey, they throw you out of the strip club because your tits are too saggy?\"\n\n\"I'm sorry.\" The other man plucked a twenty from his pocket and handed it to her. \"Here's a little something for putting up with him.\"\n\nBefore Dana could take it, Joe snatched it from the man's hand.\n\n\"You want it, earn it.\" He pointed to the guy who was staring at his empty hand. \"Twenty's about what you're probably worth these days. Bet there's a lot of miles on that loose twat.\"\n\n\"There a problem over here?\"\n\nDana stepped back, as Jim, one of the bouncers came over.\n\n\"Yeah, there is.\" Joe stared up at him belligerently. \"I don't come here to stare at women my damn wife's age. Send over one of those luscious little cuties and get the desperate housewife out of here.\"\n\nDana waited for Jim to put him in his place, but to her dismay, he gently grabbed her elbow and turning her around, walked her away from the table.\n\n\"Thanks for having my back,\" she pulled her arm away from him.\n\n\"Sorry, but that prick's father is a big shot.\" Jim told her. \"Calling him a d-bag is an insult to D-bags, but Gabe has to put up with him.\"\n\n\"Then get one of the other girls to switch because I go back there, I'll cut his damn finger off with that cigar cutter.\"\n\n\"I will, and I'm sorry.\" They'd reached the bar and he let her arm go. \"You know for what it's worth, I think you're hot as hell.\"\n\n\"That's sweet, I think.\" Dana laughed, and as she always did when he was in her line of sight looked him up and down.\n\nTall, broad shouldered, with a shaved head and piercing green eyes, Jim was as hot as he claimed he thought she was, and he'd been the subject of more than one wet dream since she'd met him. Throw in the fact that at twenty-four he was right in her sexual wheelhouse he screamed Dana in every way, and she'd love to be screaming for him.\n\nBut they worked together and even with her recently awakened sexual appetite, she knew that was a big mistake.\n\n\"I'm not sweet, and neither are you.\" Jim smiled down at her from his imposing height. \"When you and me going to go get a real drink and have some fun?\"\n\n\"Sorry, Jim. I'm old enough to know better than to shit where I eat.\"\n\n\"I like that you're old enough to know a lot of things.\" His eyes roamed up and down her body. \"Those idiots only want young girls because they can't handle a real woman.\"\n\n\"You think you can?\" Dana teased as she resisted the urge to squirm due to the moist heat growing between her thighs.\n\n\"I'll give it my best, ma'am,\" he laughed.\n\n\"I like that,\" she resisted the urge to lick her lips. \"But you'll have to settle for banging your girl of the week and thinking about me.\"\n\n\"Maybe I'll buy a schoolgirl skirt for the next one.\"\n\n\"Maybe I'll give you this one.\" Dana continued the game, happy to forget about the jack ass from a couple of minutes ago.\n\n\"How about the thong instead?\" Jim asked. \"Just take it off after the shift and give it to me.\"\n\n\"Honey if your face is going to be in my thong it's because I'm still wearing it.\"\n\n\"Promises, promises,\" Jim sighed dramatically and wandered off.\n\n\"Table four's drinks are up.\" Mandy, the bartender, her young lithe body barely concealed in a minimal French maid outfit spoke behind her.\n\nDana put her tray down and reached for the drinks, but stopped when Cindy, another waitress came up to her. \"I'll take care of them; Gabe wants to see you in the back.\"\n\n\"Yeah, but...\"\n\n\"Don't worry, I'll give you whatever they tip.\" Cindy assured her. \"Better get going, you know what a bitch Gabe is when someone takes more than a minute to get back to him.\"\n\n\"Bet all it takes with that slob is a minute,\" Dana muttered as she walked off to the sound of Cindy laughing at her joke.\n\nDana made her way across the club, taking note of the guys checking out her legs as she walked by. The thrill of being ogled, even by pretentious dogs in heat like this, never failed to turn her on.\n\nNot that she wanted any of them, for any price, because Ellen was right, she'd been propositioned several times, in her brief time here, but the fact they wanted her was a constant source of excitement.\n\nTo her chagrin, her conversation with Ellen kept coming back to her as she'd worked. Dana wondered what it would be like to not just be naked, but wantonly fucking in front of an entire film crew.\n\nSucking cock, fucking in multiple positions, probably finishing by getting a load sprayed all over her face or tits. She had to admit that when kept in the confines of a fantasy it was hot as hell. So was the idea that countless men, and maybe some women, who didn't know her would watch it and masturbate to her, or maybe take their arousal out on their lover, fucking her senseless while wishing it was Dana Darling, hot milf porn star.\n\n\"Yeah, right.\" Dana mumbled to herself. \"More like broke desperate not to be homeless midlife crisis cougar wanna be.\"\n\nShe slipped behind the second bar located on the other side of the club and walked down the short narrow hallway that led to Gabe's office. The door war partially opened, but she knocked anyway.\n\n\"Hey, Gabe, you wanted to see me?\"\n\n\"Yeah, come on in.\" His gravelly voice called out.\n\nShe entered to see the manager of Mario's sitting behind his desk wearing a white wife beater, a pitcher of beer to his right and a plate of buffalo wings in front of him.\n\nGabe was a large man with watery brown eyes and jowls that reminded her of a Saint Bernard. He resembled Burt in the sense of being a grouchy insensitive sounding dickhead, but it was mostly an act as he was decent with the staff and had done many of the long-time workers personal favors over the years and was always willing to try and fix a problem.\n\n\"What's going on? I have to get back out there, my section is full.\"\n\n\"I know but have a seat.\"\n\nDana didn't like his tone, mostly because there was none of the usual attitude or sarcasm that was the bulk of most of the conversations, he had with her and everyone else. He spoke softly and didn't have the perpetually annoyed look on his face that everyone figured was his permanent expression.\n\n\"What's up? I do something wrong?\"\n\n\"Not on purpose.\" He picked up the pitcher and poured some beer into the half full mug next to his plate. \"But we have a problem.\"\n\n\"Like what?\" Dana's stomach tightened.\n\n\"Got a complaint from a high roller.\"\n\n\"About me? I'm always good to the customers.\"\n\n\"This just happened, and you know who it was.\"\n\n\"That asshole Joe? The one that was rude to me for no damn reason?\" Dana asked. \"Christ that was like five minutes ago.\"\n\n\"He called Ross as soon as Jim walked you away from the table and bitched about you being too old.\"\n\n\"Are you kidding me?\"\n\n\"Look, Dana, I like you, and I don't think how old you are should matter. You're plenty sexy enough to work here. Hell, you put some of the younger girls to shame. They should hope they look half as good as you when they hit forty.\"\n\n\"What are you getting at with this?\"\n\n\"We've had a couple other losers make the same complaint. These guys are all sugar daddy types and when they're out here acting like spacones they want to see barely legal tits and ass.\"\n\n\"I never heard about that.\"\n\n\"Because I ignored it. But Joe's the son of a guy who really is a bigshot banker type. He handles Ross's investments and holds the note on the club. He told Ross if he doesn't let you go, he's going to daddy and telling him.\"\n\n\"Gabe, that's serious fucking discrimination!\"\n\n\"I guess, but let's face it, Dana, at a job like this equal opportunity isn't a thing. A two hundred pound woman with acne shows up here, we can't hire her, and you know why. Shit, look at me. Could I apply to be a male dancer and cry foul if I don't get the job?\"\n\n\"Gabe, I need this job!\" Dana tried to keep the nerves out of her voice. \"It's all I have.\"\n\n\"I know, and I argued with Ross. You do a great job and a lot of regulars really like you. But Joe is one of those entitled punks who never worked for a thing and Daddy gives him everything.\"\n\n\"He'd cost someone a job because his son doesn't like how she looks?\"\n\n\"Guys like Joe have no concept of anything but their own bullshit.\" Gabe turned in his chair and pulled a metal cashbox from under his desk. \"I'm sorry, Dana but I have to do what I'm told.\"\n\nHe opened the box and pulling out a wad of hundred dollar bills, started counting them.\n\n\"I figure you make about six hundred a week?\"\n\n\"I....I guess,\" Dana shook her head. \"Gabe I could lose my damn house over this! I haven't been able to find a real job in months!\"\n\n\"Here's twelve hundred for two weeks' pay. I'm doing this behind Ross's back so I have some book cooking to do.\"\n\nHe put the stack of money on the table in front of her. \"Wish I could do more, I really do.\"\n\nDana took the money, folding the bills in half and tucking them into her bra.\n\n\"And I know Harry, the manager at the pretty kitty, I can get you a job there.\"\n\n\"That place is a strip club!\"\n\n\"They have waitresses that aren't dancers.\"\n\n\"They're topless!\" Dana protested.\n\n\"And you have nothing to be ashamed of up top, and you'll make more than you did here.\"\n\n\"If I was willing to be topless, I'd be working there already!\" Dana snapped. \"Besides, how long before someone complains I don't have perky twenty year old titties over there?\"\n\n\"Different crowd, tits are tits and I've been there, they have a few older women. All they care about is you have a nice body and a pretty smile.\"",
        "\"I...can't do that.\"\n\n\"I get it, but if you change your mind, call me and I'll get you in there.\" Gabe put his meaty hand out to her. \"I'm sorry, Dana. This fucking sucks, and it ain't fair. I feel like a prick, but I got no choice here.\"\n\n\"Not your fault.\" She shook his sweaty hand. \"And I know you're nowhere near the asshole you put yourself out there as. Just too bad you work for one who is.\"\n\n\"Where else am I going to go?\" He patted his huge stomach. \"The marines?\"\n\n\"Maybe you could work the topless bar, your boobs are bigger than mine.\" Dana shot back as she rose.\n\n\"Oh, ow!\" Gabe put his hand over his heart. \"Good one.\" He gave her a sad smile. \"I'd say good luck, but I don't think you'll need much. You strike me as being good at anything you try. You'll land on your feet.\"\n\n\"Thanks, Gabe, and don't worry, I won't say a word about the money.\"\n\n\"I'll say you earned it.\" He flicked his tongue at her.\n\n\"No one will believe you.\"\n\n\"Because you would never do that?\"\n\n\"No, because a woman would need a lot more than this to fuck you. It would take a half hour just to find your cock.\"\n\n\"I really am going to miss you. You're the only woman here who gives me shit.\" He lifted his mug and pointed it to her. \"Don't ever stop being you.\"\n\n\"As soon as I figure out who I am these days, I'll take that advice.\"\n\nDana walked out of his office and leaned against the wall, taking deep breaths to combat the anxious knot her stomach had twisted into. What was she going to do? The cash Gabe gave her would pay some bills and keep her afloat for the rest of the month, but now she had zero income and used up her unemployment from her job weeks ago.\n\nWhat she was going to have to do was admit defeat and push for the sale of the house. But as she'd told Ellen who was to say how long it would take to sell? Dana didn't have many friends at all, let alone someone she could ask to stay with until she got her portion of the money.\n\nDana looked over at the sound of a door and saw Jim going into the supply room. A few seconds later he reappeared carrying three cases of water, the muscles below the sleeves his tight black t-shirt bulging.\n\nHe caught sight of her as he turned his way through the door leading back out to the club and gave her a flirty smile accompanied by a lingering look at her legs. When he passed through the door, Dana pushed herself from the wall and took one more deep breath.\n\nIn her younger days Dana had been a firm believer in being carefree and if it felt good, then why not do it? She'd adopted that motto once more now that she was free of Ben, but only when it came to men.\n\nBut she was screwed here, so she may as well take it all the way, and seeing Gabe had told her to never stop being her, then who was she to disappoint him? Dana walked briskly down the corridor and back out from behind the bar.\n\nShe scanned the club and found Jim back in his customary spot, sitting on a high stool to the right of the wide doorway leading to the smoking lunge. Dana turned in the other direction, stalking back over to the table where Joe sat.\n\n\"Hey, asshole,\" she said when she reached the table.\n\n\"You still here?\" he smirked. \"Figured you'd be under a desk trying to keep your job.\"\n\nWithout a word, Dana plucked his cigar out from between his fingers and dropped it into his whiskey. As he stared in stunned silence, she picked up the glass and threw it in his face.\n\n\"What the fuck?\" Joe sputtered, spraying scotch and ash onto his shirt.\n\n\"Oh, no, your suit!\" Dana exclaimed. \"Better call daddy so he can buy you a new one!\"\n\nShe flipped the glass onto the table hard enough to cause it to shatter. Then spun on her heel and walked away, but not before she noticed the man who'd tried to stick up for her laugh and give her a thumbs up.\n\n\"You fucking cunt!\" Joe yelled behind her. \"Think you're goddamn funny?\"\n\nDana's response was to raise both hands and give him a double bird over her shoulders, one she maintained as she walked across the club amid loud laughter and some applause from other customers and every waitress in the vicinity.\n\nIgnoring them she made her way to Jim who was staring at her in surprise. Stopping in front of him, Dana reached under her skirt and in full view of anyone watching, pulled her thong down to her knees.\n\nShe quickly stepped out of it, and with no hesitation shoved it into Jim's face.\n\n\"Guess what, kiddo?\" Dana smiled as a raucous cheer erupted behind her. \"I don't eat here anymore. You can settle for a sniff or be outside in fifteen minutes for some all you can eat.\"\n\nWithout waiting for a response, she dropped the thong and strutted across the foyer and out of the club to the accompaniment of clapping and appreciative whistles.\n\nChapter Six\n\n\"Hmm-hhmm!\" Jimmy groaned between Dana's thighs as she straddled his face.\n\n\"Not nice to talk with your mouthful, baby!\" Dana teased as she worked her hips in fast circles, grinding her pussy into his trapped face. \"Get me off, then you can talk all you want!\"\n\nJimmy groaned into her hot wet flesh when she leaned over and grabbed his semi hard cock. She slowly stroked it, trying to coax it into a fourth erection. He squirmed beneath her, but Dana's knees were on his arms making it difficult for him to move.\n\n\"Faster I come, faster you can fuck me again,\" she encouraged even as she frowned at the fact his cock still wasn't fully hard. \"Aww, you don't want to fuck me again?\"\n\nJimmy made a noise that sounded like a desperate whimper as she pressed her throbbing clit into his tongue.\n\n\"Guess I have to be more persuasive.\"\n\nDana dropped forward, bracing herself on her elbows and took his cock into her mouth. Her eyes rolled back, and she moaned at taste of her pussy from his struggling cock. She bobbed her head, rapidly while swirling her tongue, using her talented mouth to get him ready for another round.\n\nJimmy sighed into her pussy and his body relaxed as his cock swelled in her mouth, rewarding her efforts by becoming fully hard for her. Dana widened her legs, slipping her knees from his arms and he quickly slid them around waist, drawing her into his suddenly more eager tongue.\n\n\"That's better,\" she whispered as she removed him from her mouth and teased her tongue around his head. \"You take care of me and I'll take care of you.\"\n\nShe resumed sucking his cock, but now that he was hard, took her time, savoring the sensation of his hard young flesh between her lips. She lowered her head and worked just the tip.\n\nJimmy moaned as she teased him and thrust his hips, pushing his cock sideways into her mouth as she rested her head on his stomach. She gasped when he spread her cheeks wide, then groaned when she felt him tease the tip of his finger around her ass.\n\nShe eased back pushing into his probing finger and taking the hint, he shoved it into her pink rosebud. Dana released a sharp yelp around his cock, but rocked back and forth on her knees, helping him finger fuck her ass.\n\nHis tongue worked her clit faster as his cock became harder and his hips thrust harder into her mouth as his eagerness to fuck her once more had him working her pussy with renewed vigor. Dana teased her nails along his muscular thighs before cupping his balls and playing with them as she allowed him to fuck her mouth.\n\nHer hips jerked when he worked a finger of his other hand into her cunt while now sucking her clit. She moved faster, plunging his fingers into both her holes while his cock filled the third. Her thighs were trembling, and her hard nipples pressed into his chest as her body tensed for her third release of the night.\n\n\"That's hot, Dana! Love the way you're letting him use your mouth! Nice position!\" \n\nThe phantom female voice sounded in her head as it had several times during the torrid romp that had started the moment Jimmy had closed the door to his apartment when Dana simply unzipped him, pulled his cock out, and hopping up into his arms, impaled herself on him.\n\nHe'd fucked her hard against the wall, her legs wrapped tightly around her waist the first couple of minutes, until Dana urged him to spin her around. She'd put her hands against the wall, pointed her ass at him and cried out into the cheap paneling as he took her hard and fast from behind until he whipped his cock out and jacked off all over her ass and the backs of her thighs.\n\nThe first hot squirt onto her ass cheek was when she'd first heard the voice:\n\n\"Hold her skirt up, let's see all that cum! Come on, Jimmy get both sides of her ass! Straighten up, Dana, let it run down your legs, it'll make such a good shot!\"\n\nThe voice was accompanied by an equally vague image of someone in front of her, watching and telling her and Jimmy what to do. Each time she heard it; it added a sweet little thrill to the already amazing experience of being fucked by the hot bouncer she'd been eyeing for the last few weeks.\n\n\"Open your eyes, Dana, stare into the camera!\"\n\nIn her mind's eye Dana saw herself on a screen, her sweaty face flushed, her make up a mess, and a long thick cock violating her mouth as her smoldering brown eyes stared into the camera, bright with lust.\n\nDana squealed around Jimmy's cock as her ass and pussy convulsed around his fingers and her body exploded into violent orgasm. She released his cock to cry out repeatedly as waves of pleasure crashed through as he continued to suck her pulsing clit and finger her contracting holes.\n\nShe held the image of her face in her mind, picturing her eyes now wide and her mouth open in a continuous O of pleasure as Jimmy worked her cunt and his cock twitched against her face. Her body was still trembling from the orgasm when she quickly crawled forward on the bed until she was now straddling Jimmy's hips.\n\nReaching between her legs, she grasped his cock and guiding it to her still quivering pussy rocked back, burying him within her quivering heat.\n\n\"Fuck that looks good!\" Jimmy exclaimed as Dana braced her hands on his ankles and pushing herself up, worked her hips, riding him backwards.\n\n\"Reverse cowboy, that's hot Dana!\"\n\n\"Put your finger back in my ass,\" she looked back over her shoulder. \"Feel yourself fucking me!\"\n\n\"Shit, you're fucking wild!\" Jimmy spoke even as he plunged his finger into her ass.\n\nDana moaned as she rocked back and forth, forcing his cock and finger deep into her. Jimmy's other hand was on her left ass cheek, squeezing it roughly as he lay back watching his cock slide in and out of her pussy.\n\n\"Let's see that body, Dana, show off those tits!\"\n\nDana pushed herself up, so she was now kneeling across Jimmy's lap. She worked her hips more slowly, now sensually riding him. He was no longer able to finger her ass in this position but made up for it by reaching up and around, his hands cupping her heavy tits.\n\nDana, again imagining she was really putting on a show, lifted her arms over head, drawing her long hair up as if striking a pose on a set. She let her hair go and put her hands over Jimmy's, toying with her nipples as he fondled her tits.\n\nShe bounced up and down, riding him hard, and he struggled to thrust his hips as much as he could with her on top of him. Her unwanted, but increasingly persistent little fantasy of what it would be like to be filmed while fucking, had her needing it as if this wasn't already their third go around.\n\nDana twisted to the side, swinging her leg over him, and rolled onto her back. Jimmy didn't need any instructions, turning over so he was kneeling between her legs he plunged into her as she lifted her legs and put her feet on his chest.\n\nJimmy gripped her bent knees and went into high gear, fucking her hard enough to cause her tits to bounce and to make squishy wet sucking sounds as he pounded her at this point sloppy cunt.\n\n\"Fuck me!\" She hissed, reaching back and grabbing the headboard. \"You said you want a real woman? Prove you can handle one!\"\n\nJimmy groaned and somehow managed to take it up a notch, hammering away at her insatiable pussy. Dana pushed against the headboard, using it as leverage to be able to thrust her hips into his plunging cock.\n\nAbove her, Jimmy's face was red, and he was dripping sweat. His breathing was labored, and his thrusts had a desperate air to them. His face was so intense it looked as if this was now a challenge more than he was enjoying it.\n\n\"Come on, baby! You can do it! You can give this nasty little slut another load, I know you can!\"\n\n\"Whoa,\" Jimmy whispered in between his rapid breathing.\n\n\"Like that? Like hearing me call myself a slut?\" She knew he did, he'd given her an even harder pump when she'd said it and felt his cock twitch inside her.\n\n\"That's what I am, right? Just coming to your place and letting you fuck me then sucking your cock and slurping my own cum off it. I'm not here to be a good girl, baby. I'm here to get as much of your cum as that big fat cock will give me!\"\n\n\"Keep going,\" he moaned, now using shorter more rapid thrusts.\n\n\"Keep going is what I want you to do! Keep fucking me! Keep shoving that young dick in my needy fucking cunt!\"\n\n\"Keep it up Dana, you already sound like a damned pro!\"\n\n\"Come for me,\" she hissed between her teeth as his powerful thrusts were now bordering on painful. \"Empty those balls all over me! Think about those fucking losers at the club who wanted me, but who has me? Who got to shove their cock in my mouth? Who got to lick my cunt?\"\n\n\"Oh, God!\" Jimmy groaned, his hands trembling on her knees.\n\n\"Who took me against the wall, fucking me like I'm some slutty little thing you got drunk at a frat party?\"\n\n\"I...oh, fuck I can't.\" Jimmy stopped fucking her and eased his cock from within her.\n\n\"The hell you can't!\" Dana sat up and grabbing his cock jerked it roughly. \"Come for me!\"\n\n\"I...\" Jimmy's words turned into a surprised moan when she leaned over and spit on his cock, working it around his sensitive head, then using it as lube so her hand glided faster over his cock.\n\n\"I want it!\" She cupped his balls and worked them with her fingers. \"I want that fucking cum, every goddamn drop of it!\"\n\n\"Oh shit, oh...\" He released a long moan that turned into a desperate whimper as Dana jerked him furiously, her hand a blur along his shaft and the room filled with his groans and the squelching sounds of her pumping his wet cock.\n\nShe spit on him again and putting her forearm under her breasts, lifted them higher, pointing his cock at them.\n\n\"Paint them! Spray that hot cum all over my big tits!\"\n\n\"Dana, stop, I...\"\n\n\"Stop whining and fucking cum!\" Dana glared up at him. \"If I wanted a man who couldn't keep up with me, I'd still be married!\"\n\nShe released her tits and gripping his cock in both hands lowered her head and let a trail of spit drip onto his already slick shaft. She pumped him faster, and he put his hands on her shoulders squeezing them as he made pathetic moaning noises.\n\nFinally, he released a moan that sounded more like a sound of relief than pleasure and his cock jumped in her hand as cum squirted from from his swollen purple tip. It landed on her right tit and she turned to the side to get some on the left.\n\nAll that came out was a trickle that dripped onto her fingers and down her wrist as she continued to work him for every drop she could.\n\n\"Oh, fuck, stop!\" He grabbed her wrists, easing her hands from his already rapidly deflating cock.\n\n\"Give us a good cutaway, Dana!\" \n\nDana smiled up at him and bringing her hand to her face licked the cum from her fingers. \"Thank you, baby,\" she purred, looking up at him through her long lashes.\n\n\"You're welcome...I think.\" Jimmy sat back with his hands on his knees. \"You fuck like a goddamn animal.\"\n\n\"You say it like it's a bad thing.\" Dana looked at the cum on the fingers of her other hand and licked them clean as well.\n\n\"Wow, I thought women only did shit like that in porn!\" Jimmy exclaimed as he leaned over and grabbed a bottle of water from the nightstand.\n\nDana frowned at his comment as she took the bottle from him and chugged half of it in several long swallows.\n\n\"Every fantasy is based on reality I guess though, right?\" Jimmy took the bottle from her and downed the rest of it.\n\n\"You think?\" Dana swung her legs off the bed and peered down at the floor looking for her clothes.\n\n\"Sure, porn is for people who like stuff they can't or won't do for real.\" He looked at her and laughed. \"Most guys watch porn because their wife or girl won't fuck like that, but you just proved they're out there.\"\n\n\"You make a sexually aggressive woman sound like bigfoot.\" Dana grabbed the skirt off the floor, and standing, stepped into it while thinking Jimmy was the second guy she'd fucked while wearing it, thanks Burt!\n\n\"Been with a lot of girls because of the places I work. Never had a woman attack me the way you did. Never mind licking cum off your hand.\".\n\n\"I get into raunchy sex, what can I say.\" She located her bra and reaching behind her back, hooked it.\n\n\"Hey, you're taking off? You can stay the night and maybe we could catch breakfast tomorrow.\"\n\n\"I don't stay the night.\" Dana slipped her arms through the bra, pulling the skimpy lace cups over her still sticky tits. \"Don't take it the wrong way.\"\n\n\"Oh, well, maybe we can grab a drink or dinner tomorrow night. I'm off and...\"\n\n\"Sorry, Jimmy,\" Dana slipped her shirt on and buttoned it. \"I'm a onetime ride and you got nothing left in the tank, so I'll be on my way.\"\n\n\"Damn, that's cold!\" Jimmy shook his head.\n\n\"You offended?\" She raised her eyebrows. \"You wanted to fuck me, and we fucked. What's the problem?\"\n\n\"I wasn't looking for you to be my girl, but shit, I feel like one of us should be getting paid after that.\"\n\n\"Sorry, afterglow isn't my thing.\" She tapped his shoulder. \"Maybe you should stick to the girls, they like all that sweet stuff.\"\n\n\"I don't need sweet, but I've never seen anyone be so cold about sex,\" he shrugged. \"And women say guys are bad.\"\n\n\"And it's always okay for guys to do it, isn't it?\" She was getting annoyed, but not sure if it were at him or herself. She'd never considered herself to be a callous person, but Jimmy was right, she was being damn cold.\n\n\"Depends on the guy, I'm not like that, but like you said a lot of guys can just screw and jet, but only two kinds of women can do it.\"\n\n\"What kind of women would that be?\" She rolled her eyes. \"I can't wait to hear your theories on women based on your many years of experience.\"\n\n\"Hookers and porn stars.\"\n\n\"Is that so?\" She stiffened at the remark.\n\n\"Yeah, because they do it so much for money that it doesn't mean a damn thing anymore. It's like a bartender making a drink, it's what they do.\"\n\n\"I'm neither, so I guess you're wrong.\"\n\n\"Yeah, true, plus you liked it, most pros just fake it.\"\n\n\"There you go then,\" she felt like she was replying to herself more than him. \"You know I wasn't faking anything.\"\n\n\"I said most,\" Jimmy spoke while pulling his shorts on and not looking at her. \"The best ones fucking love it.\"\n\nChapter Seven\n\n\"Excuse me?\"\n\nDana looked up from her coffee to see two young guys standing by her table.\n\n\"Can I help you boys?\" She wouldn't mind helping the one on her right, because he was damn fine, that was for sure.\n\n\"Kind of, I mean, maybe.\" The good looking one pointed to his friend who was tall, rail thin and whose face bore the unfortunate reminders of some serious teenage acne. \"My friend Johnny thinks he knows you from somewhere.\"\n\n\"Oh?\" Dana shrugged, wondering if they'd seen her at one of the clubs she'd been prowling lately.\n\n\"Yeah,\" Johnny have her a nervous smile. \"Are you Dana Darling?\"\n\n\"How did you know my name?\" Her eyes narrowed.\n\n\"It is her!\" The hot kid gave Johnny a high five. \"Wow, you know your stuff!\"\n\n\"Told you, Kenny, I never forget a pretty face,\" he was grinning from ear to ear now. \"I'm a big fan!\""
    ],
    "authorname": "lovecraft68",
    "tags": [
        "milf",
        "porn shoot",
        "exhibitionist",
        "older woman younger man",
        "nude day contest",
        "revenge",
        "porn star"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-next-milf-porn-star"
}