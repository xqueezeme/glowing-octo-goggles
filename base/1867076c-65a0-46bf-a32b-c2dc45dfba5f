{
    "title": "Reacquainted Pt. 04",
    "pages": [
        "Ladies and Gentlemen,\n\nThank you for your patience. Enjoy.\n\nQ\n\n43.\n\nMags was on fire! The evening had gone far better than she could have imagined. She' and Jen had begun with the loosest of scenarios. They'd talked some about what she might do to her captives/pupils, but most of what had happened had been improvised. She'd pushed hard, and so far Jen\u2014and Theo\u2014had responded beautifully. Jen had turned out to be a particularly fetching damsel-in-distress, and Mags' capricious cruelties seemed to turn on both villainess and victim alike. Now Mags had her endgame planned, but its success depended on Theo. As long as he was bound, she could control him, but loose... She had only Jen's description of her husband's personality. She didn't know him herself. But he was a large, powerful man, and if she had aroused him\u2014and she was sure she had\u2014she was also pretty sure that she'd made him angry as well. And that made what she had decided to do risky. On the other hand...\n\nAs soon as Mags had heard about Jen's discovery of her husband's fetish, as soon as it had become apparent that Jen was looking for a little sexual mentoring, Mags had known that she would agree to...orchestrate this little encounter. The chance to unleash all of the sexual inventiveness all her previous lovers had...feared\u2014no other word for it, the chance to dom and cum, to seduce and tease, to fuck and to be fucked: she had wanted, waited for, fantasized about that chance for so long, and now? Well, here it was. She was living it and loving it. And she was loving it more because she was doing it as much for Jen as she was for herself; seducing the husband even as she aroused the wife, being a bad girl in a good cause. If it all ended now, if Theo used a safe word to end the fun before she took her next breath...but maybe he wouldn't. Maybe\u2014she had to stifle a giggle\u2014she could have his cock, and eat her too.\n\n44.\n\nCatwoman released Vicki's hair, and moved closer to the bound Batman. Closer and closer, until the tips of her nipples were less than an inch from her captive's naked chest. Then she reached down, wrapped a hand around his cock, heard him sigh with relief as he felt the heat of her hand, and then heard the sigh turn into a grunt of pain as she squeezed. When she spoke, her voice was soft and savage. \"This is what I need; do you understand me, Batman? I need this big beautiful cock of yours buried balls-deep in my sopping wet pussy. I need you to put me on my knees and fuck me until you split me in half. I want you to ruin me. I want you to fuck me 'til I beg for mercy, and then I want you to keep on fucking me until I pass out from the pleasure. That's what I want, and you won't do it, will you? You can't, can you? CAN YOU?\" He flinched at the sudden rage in her voice, but her hand never left his cock. She snarled: \"You won't because you don't want to be disloyal to your little trophy over there, am I right?\" Finally releasing him, she turned her savagery on the terrified blonde. \"Hey Princess,\" she growled, in a savage parody of courtesy, \"is it ok with you if I fuck your boyfriend? You can have him back when I'm done. Hell, I'll even eat your pussy while he's doing me. I cum, you cum, he cums\u2014holy shit, I'm back in French class\u2014we cum, you cum, they all fucking cum! So how 'bout it, Kitten? Do I get to fuck him, or do I chain you back up and leave you both here 'til his balls turn blue and his dick falls off?\"\n\nDuring this tirade, Catwoman had stalked the frightened blonde, finally cornering her against the wall opposite, not far from where she had originally chained Vicki. Grabbing the smaller woman's face, Catwoman forced her head sideways, and began running her tongue up her captive's throat towards her ear. Vicki moaned and squirmed, and then, as her breath began to come shorter, she heard her captor whisper:\n\n\"Jen, are you going to be OK with...I mean I really do need...I won't if you don't want me to, but...\"\n\nJen felt the grip on her face relax. She turned to look into Mags' eyes, bright, and a little fevered behind the mask. \"You mean...you want to...with Theo?\"\n\n\"Yeah, I really do! I'm gonna make him cum quick, and then...I don't know...get him hard again, and then...yeah, I want to make him fuck me! I really want...but like I said, I won't...\"\n\nJen interrupted: \"Mags, it's...alright, really. I mean, you've done so much, and I'm so...I don't know, hot, horny, excited, scared and thrilled and...so yes! I'm a little surprised to be saying this, but I think...I actually want you to...make him...fuck you...Oh God! Just saying it is making me wet! But Mags?\"\n\n\"Yeah, J?\"\n\n\"Can I be...a part of it too? Can you...maybe force me to...I don't know, and will you really...lick me while he's...\"\n\nMags smiled, and then she kissed Jen, her body blocking the smaller woman from her husband's view. The kiss was soft and gentle, Mags' hands stroked the sides of Jen's face, and the two women's tongues caressed each other tentatively. This time, when Mags broke the kiss she heard her friend's soft sigh, and from behind her, Theo's tortured groan.\n\nMags was silent for a second, then: \"Jen, I...thank you; you really are an extraordinary woman.\" Then she smiled, suppressing a giggle: \"And, Honey,\" she whispered, \"I'm going to lick you like a fucking lollypop! Now, are you ready to get back into character?\"\n\n\"You mean am I ready to be the terrified little innocent socialite tortured and sexually brutalized by an evil villainess? Oh, yes please!\"\n\nAt that, Mags did giggle. Then she whispered: \"Bitch.\"\n\nJen breathed back: \"Takes one to know one.\"\n\n45.\n\nTheo hadn't thought he could take any more surprises, didn't really think anything would surprise him ever again. His lovely Jen, his sweet\u2014and he would have said innocent\u2014wife had discovered his nasty little secret, his stash of...weird superhero porn, and she hadn't confronted him, hadn't screamed at him or called him sick or demanded a divorce\u2014God, that thought terrified him...but no. She'd set up this evening, called it a treat, found this crazy, gorgeous Catwoman to...what? To help fulfill his fantasies, that's what. And she was into it too! Or at least she sure seemed to be. He'd watched her endure a beating which she could have stopped...with a word! And she'd kissed...Catwoman, begged for kisses, seemed totally turned on by...was she bi? Why didn't that thought disturb him more? \n\nNo room. He was just too turned on, his dick was too hard, too painful, his mind too full of Jen...or maybe he should call her Vicki, and Catwoman. And when Jen...or Vicki had finally spoken to him, as she fondled Catwoman's...God, he'd wanted to, but he'd been afraid that she wouldn't...but she'd said he should have...God damn, this was torture! He wanted...contact! His hands on...holy...he didn't even care whose body it was any more; Jen's...Vicki's, Catwoman's! He wanted to kiss lips, nipples, lick pussy, Jen had never let him do that, but now? After he had watched her eat Catwoman like cr\u00e8me effing brulee? And his cock...anything! He was sooo close, had been for what seemed like hours. He wanted to cry with frustration; whadaya know: another effing surprise! He hadn't cried since...he couldn't remember; he just didn't cry. Well he sure as shit\u2014Serge would have been proud\u2014wasn't going to cry now! And he wasn't going to use the damn safe word either. Jen had called this a treat, so there had to be more. There had to be! Didn't there?\n\nWait a minute. They were coming back: Catwoman dragging Vicki by the hair. Doing that a lot; it had to hurt. Now what the hell?\n\n46.\n\nCatwoman threw Vicki down on her knees in front of Batman; the blonde's pretty face inches away from her man's red and swollen cock. \"Sit, Princess! Keep your hands to yourself and don't fucking move!\"\n\n\"Yes, Mistress.\"\n\n\"Good girl.\" She sauntered up to her bound captive. \"This is the part of the evening where the evil villainess\u2014that's me\u2014tells the captive superhero\u2014and that would be you\u2014of her nefarious plans for blowing up city hall or poisoning the water supply, or kidnapping the hero's girlfriend...oops! Sorry. Too soon? Anyway, then you get all angry and righteous and tell me I'll never get away with it, and that you'll never rest until you bring me to justice, blah, blah, blah... We're going to skip all that, because the nefarious plan is very simple: I'm going to let you loose, and then you are going to fuck me, hard, until I cum at least twice. While you are fucking me, I'm going to eat this slut's pussy until she screams or faints or both. Once I've come twice, you're welcome to finish up wherever you like: cunt, mouth, ass\u2014if you're into that kind of thing, tits, mine or hers. Then I'll disappear, and you can take your little slut back to your Batcave and play house-y, or whatever it is you do for kicks. Remember, Bats, I cum twice. If I don't, then one night I'll take sweet Vicki again, and then I will break your little fucktoy, understand?\"\n\nBatman: \"Wait a minute, you're going to let me go? So why should I do what you want?\"\n\nCatwoman: \"Oh Bats, you really are precious. You still don't get it, do you? You won't do it because it's what I want. You'll do it because it's what you want. You want me. I know you want me, and because I know it, you're powerless against me. All I'll ever have to do from now on is crook a finger, and you'll be on your knees begging for my tongue, or my pussy, or even these lovely tits you pretend to despise. I could murder half the police force and make you fuck me in the pool of blood at the crime scene. I probably won't, because that'd be messy, and we kitties like to keep things clean, but you take my point, n-rrow, don't you?\"\n\nBatman: \"And what about...\"\n\nCatwoman: \"Vicki, my pet?\"\n\nVicki: \"Yes, Mistress?\"\n\nCatwoman: \"Beg your man to fuck me. You know what I'll do to you if he doesn't.\"\n\nJen looked up into her husband's face. It was as if the mask wasn't there. She saw the question in his eyes, and once again she was surprised at how little her answer bothered her. It wasn't that she didn't love Theo. She loved him more with every day that passed, and she was sure he felt the same way about her. She'd wanted to give him...something that she hadn't been...capable of...designing herself. And then she'd met Mags, and Mags had...made this evening for them. Mags had shown them, shown her so much more about...sex, and play and pleasure and pain and imagination and...and it was all wonderful. But it was only sex; only one small part of what she shared with Theo. And Mags had worked awfully hard, and she had promised to bring Jen off with her tongue, with that long, sexy tongue... \n\nVicki looked up into Batman's eyes, winked and smiled, and then said: \"Please fuck her, Batman. Fuck her hard with your big...um...beautiful cock! Make her cum as much as she wants! Please, Batman? She'll hurt me if you don't...\" Jen batted her eyelashes and pouted. Then she giggled as she saw Theo roll his eyes behind the mask. He smiled back\u2014a little uncertainly\u2014and mouthed \"I love you.\" When he finally spoke, he sounded like a man resigned, not like man about to have his every adolescent fantasy fulfilled. 'I'd make a pretty good Batman,' he thought to himself as he said: \"Alright, Catwoman. You win. I'll submit to your depraved...um,\" he couldn't come up with a word, and settled for: \"I'll do whatever you want.\"\n\n47.\n\nMags smiled, then remembered at the last minute to turn her delighted giggle into Catwoman's evil, triumphant laugh. She pressed her naked body against that of her captive, standing a little off to one side, so her breasts caressed his bicep. Then she reached up and turned his face to hers.\n\n\"Good.\" she purred, and brought her lips to his. She kissed him hard, biting his lower lip, and forcing her long tongue into his mouth. Then she pulled abruptly away and slapped him hard across the face twice. \"Good!\" she said again, as she saw the anger flare in the eyes behind the mask, \"Rrr-ow! I like you this way, Bats! I want you a little angry while you're fucking me. I want you thinking about how I defeated and humiliated you while you're slamming into me, how I whipped your girlfriend's pretty little ass and made her cry, and how you watched, powerless!\" She saw felt the muscles in his arms bulge as he strained against the chain. \"Purrrr, you ready now, Superhero? Ready to give this evil villainess the fucking she deserves?\"\n\n\"I'm ready, you twisted bitch! Just let me go, and I'll show you how ready I am!\"\n\n\"M-rrrow, not just yet.\" She laughed as she watched him strain against his chains. \"Face it, Stud, you wouldn't last ten seconds in my pussy in your...\" she grabbed his cock, and began to stroke it gently, \"present condition.\"\n\nBatman's breath caught, and he began to moan as his arousal reasserted itself. She dropped his cock abruptly, and he had to stifle a sob. When he had himself under control, he rasped: \"Right...you're...ahh...you want me to...to fuck you? You want me to fuck you hard? Then you're going to have to let me...oh God!\" She'd begun stroking him again.\n\n\"Oh, I'm going to let you go, Batman, but first, I'm going to let you cum. In fact I'm going to kill two bats with one stone, if you'll pardon the expression. I'm going to drain your balls and reward my little pet down there at the same time. Sit up straight, Vicki-kins.\"\n\nVicki raised herself up on her knees, and Catwoman pointed her bound captive's cock directly at the little blonde's face. \"So sweet,\" purred their captor, \"such a good little kitten. I think she deserves some cream, don't you, Batman?\"\n\n\"Wait, what?\"\n\n\"Oh come now, Batman! Do you mean to say that this naughty girl has never let you cum all over her pretty face?\" She looked down at Vicki. \"Is she a bad kitten after all?\"\n\nAll of a sudden Vicki was terrified that she would be punished again, that she would be beaten, or...or excluded, that Catwoman wouldn't let her cum, or...she started to babble: \"No Mistress, please! I'll be good, please? I want him to...I...please. Make him...cum on me. I want my cream, pretty please?\"\n\n\"That's better.\" Mags looked down at Jen and mouthed 'Close your eyes!' Jen looked confused, and then nodded quickly. When Vicki's eyes were shut, Catwoman continued, whispering in her captive's ear, and giving it the occasional lick as she began to stroke him harder: \"I want you to cum for me, Batman. I want to watch you paint your little slut's face with all that hot, sticky goo you've got in there. I could taste it when I was sucking you, remember....mmm, so sweet...give it to her! Drown the bitch in cum! Do it...NOW!\"\n\nCatwoman's \"NOW\", Batman's bellow of release and Vicki's startled little \"Ooh!\" sounded together, as the first stream of cum shot from the bound man's cock to splatter the kneeling blonde's cheek. The second caught her on her parted lips and she winced, her eyes flying open, just as the third streaked her forehead. Then she shut her eyes, held as still as she could and flicked her tongue out for a quick taste as more and more of the warm, viscous sap hit her eyelid, her hair, and finally her chin. She reached up to wipe it away from her eyes, when from above her she heard Catwoman snap: \"Don't move, Kitten!\" Her hand returned to her lap, and she felt some of the warm goo begin to drip down onto her breasts.\n\n\"Oh, Batman!\" purred Catwoman, \"too bad we don't have a camera! Isn't she a lovely little cumslut! Look at that naughty tongue licking your stuff off her lips! You know what? I think she looks good covered in spunk. I think she looks really, really hot, don't you?\"\n\n48.\n\nTheo could find nothing to say, in character or out of it. He looked down at his wife, the prettiest, sweetest girl he'd ever known. She was kneeling, naked, at his feet, and a puzzled little half-smile/half-frown played across her face as her tongue quested to find...all of a sudden he had to fight not to laugh. She looked like she was covered in the glaze from those cinnamon rolls she sometimes made; the ones you buy in a tube. She was trying to lick up...he wondered what it tasted like. Then he decided he really didn't want to know. She'd found a...some of it, and now she was... He watched her draw a little of his cum into her mouth with a little \"uhh\" sound. Her face scrunched up for a second. Maybe it didn't taste so good. Then she smiled.\n\nThen Catwoman had dropped to her knees next to Jen/Vicki, had reached up with an index finger to wipe a pool of it off an eyelid, and had slid the cum-covered finger into his wife's mouth. Vicki hummed and sighed, opened her eyes and smiled at the masked woman. Catwoman said: \"Can I have some?\" Vicki nodded, said \"mmm-hmm\", and then gasped as her captor leaned down to lick a few stray drops from a suddenly erect pink nipple.\n\nNext, Catwoman began to clean Vicki's face with gentle laps of her long tongue. When she had collected a few drops, she leaned in and kissed Vicki, using her tongue to push the jizz into the smaller woman's mouth. Vicki made a surprised little sound, something between an 'oh' and 'mmph' as she received and then swallowed Catwoman's offering. Eventually the cleaning became kissing and fondling and licking as the two women used their tongues and lips to remove the last drops from Vicki's face, neck and breasts.\n\nTheo's erection, never entirely gone\u2014even after cumming as hard as he had\u2014had begun to stiffen again, when Catwoman turned Vicki to face him. \"Now him, Kitten.\" she said briskly. \"Clean him up for me, and keep sucking until he's good and hard. No hands. If he comes in your naughty little mouth, I will be very, very angry, understand?\"\n\nVicki smiled. \"Yes, Mistress. Thank you, Mistress for allowing me to suck him hard for you. I promise to be good.\"\n\nCatwoman gave a contented little \"mrr-ow\", and walked off toward the bathroom. Obedient to orders, Vicki rose up on her knees, and leaned forward.\n\n49.\n\n\"Jen!\"\n\nCatwoman had disappeared, Theo had heard a door click, and now his whisper was urgent.\n\n\"Jen!\"\n\nJen paused, her lips less than an inch from her husband's cock, then her head dipped and her lips wrapped around the tip. Theo hissed; then he sighed.\n\n\"Jen, wait!\"\n\nThe musky taste of semen was stronger as her tongue swirled and explored. She felt him harden further, and took the surge as a sign that she was doing well. She had never really sucked him before, but she had watched, for a few seconds, just after Mags had cum on her tongue. It wasn't so bad; actually it was kind of....it made her feel...sexy, getting such an immediate reaction from him.\n\n\"Jen, please!\"\n\nNow she had her mouth full, and she began bobbing slowly up and down, being careful to keep her teeth away from his shaft. He tasted...salty, and smoky, and she decided she liked...\n\n\"Jen, RED!\" Then in a whisper, as if afraid that Catwoman would overhear: \"For cripes' sakes, RED!\"\n\nThe safe word took a second to register, but then Jen remembered: stop everything, drop character, and listen. She looked up into her husband's eyes. He didn't say anything at first; he was panting, as if he were trying to catch his breath. All of a sudden, Jen was afraid: too much, too soon, too far? Had she hurt him? Was she doing something wrong? Was he angry? Worse: was he...disappointed, or... She decided she couldn't wait: \"Theo, honey, are you...is everything...ok?\n\n50.\n\nTheo let go of a breath he hadn't known he was holding. He looked down at his wife, and gave her an uncertain smile. \"Jen, babe...is it ok to call you Jen?\"\n\n\"I think so. The way Mags explained the rules, once somebody says 'red', everything stops until we...um...want to start again...if we want to start again. We don't have to...\"\n\nThe last few words had sounded so sad, and Theo wondered... \"Is that her name, Mags?\"",
        "Jen nodded.\n\n\"Is she still here? I can't see the whole room.\"\n\n\"I think she went out into the hallway for something.\"\n\n\"She's...um...she's something else, isn't she! Where did you guys...?\n\nJen interrupted him: \"Honey, later; when we're done. I promise I'll tell you everything. But...do you really want to stop?\"\n\n\"Don't you?\"\n\nShe stood up, came close, reached out a tentative hand, and stroked his arm gently. She wouldn't meet his eyes now. She said: \"No. I'm sorry. I mean...do you think I'm a total slut now? I...I don't. I want to keep going.\"\n\n\"Jen, Baby, look at me.\" She wouldn't. \"Honey,\" his voice was soft now, gentle, \"please, Sweetie, you have to look at me.\" Finally she looked up into his eyes. \"Do you remember what's supposed to happen next?\" Jen didn't speak. \"She wants me to...she wants me to make love to her.\"\n\nTo Theo's astonishment, Jen gave him a tentative smile: \"No she doesn't. She wants you to fuck her.\n\nTheo's mouth dropped open, and he had to remember to close it. Then he had to remember to talk, and as soon as he started he found himself trying not to laugh: \"Jesus, Jenny!\"\n\n\"Well, that's what she wants. And it's not the same thing at all.\"\n\n\"I know that, I mean...\"\n\n\"How do you know it, Babe?\" Jen seemed almost angry, but not at him. Maybe angry was the wrong word; intense was better. And she got more intense as she continued. \"Seriously. I mean I said it like I know it, but I don't. Not really, because everything we've ever done, we've done with each other, and we've actually never done...that. We've never fucked! Either of us. I mean, have we? Just like I'd never eaten another woman's pussy, and you'd never had your cock sucked, and you'd never cum on my face, and I'd never tasted...cum. But now I have, and I...liked it. I mean everything, not just the taste of...I really liked it! And I'm sorry I snooped. I really am, but...I got curious because...I...I really love you, and we're so good together. aren't we? And it wasn't like we...I mean we kept being good...better even! And then all of a sudden I find all this...comic book...stuff, and it was like 'What's this? Is he into something that I can't...' and I talked to Mags about it, and I pretty much forced her into...figuring out how to...\" she was running out of steam now, looking into his face, willing him to understand, \"how to...make fantasies...real, or...I don't know.\" Then: \"Do you hate this? Do you want to stop? We don't ever have to...I...please don't be mad at me, or...\" Her voice broke a little.\n\nIt was his turn to interrupt: \"Shhh, Babe, hush, it's ok. I'm not mad. I'm just...well, hell! I don't really know what I am. I mean I'm...well, ok: I'm mostly naked, and so are you...and I'm hard, so I'm guessing I'm pretty turned on, right?\" The context was bizarre, but the experience was reassuringly familiar. It was one of his favorite things about their marriage, talking to her this way, working things out. \"I mean, I've fantasized about...Catwoman and Batgirl and...ever since I was a kid and saw the re-runs of the old show, but... Look, I'm sorry I hid all that stuff from you. It just seemed...a little silly...and maybe a little private. But I'm not...mad. I'm a little stiff...\" She giggled. \"I don't mean that, you...but my arms are tired, and my face still stings\u2014Mags, right? She really hits hard\u2014but I don't...hate any of this. I mean...well, first of all, I love you too, I mean really, really...\" his voice deserted him for a second; then: \"and you're just so beautiful and sexy and...but so's she, ok? I have to say that, because...I think the only way this works is if we're completely honest with each other. I don't want to do anything to hurt you...or us, or...I mean if you want this to go on, do you want me not to...?\"\n\n\"No, I...look, this is kind of a silly question, but...you're not falling in love with Mags, are you?\"\n\n\"Are you kidding, of course not! I don't even know the woman! She's just...she's embodying\u2014if that's the word\u2014a fantasy that I've had for...a while, and I...I guess part of me really does want...to go on. I mean to...fuck...her, but I don't...I mean love doesn't really even enter into it. And if it's going to...get in the way of...us, what we have, then...\"\n\nJen smiled, and shook her head: \"I don't...actually think it is. I mean, I'm ok with you wanting to fuck her. Is that...wrong or weird? And is it ok with you that I...really want her to fuck me too?\"\n\n\"You mean like...before? Like what you did to her when she was...sucking me?\"\n\nJen smiled and nodded.\n\n\"Honey, that was maybe one of the hottest things I've ever seen. I mean, sure it's ok, but...will you let me try that with you too?\"\n\n\"Um...yes, please! So you're ok with...?\"\n\n\"Hell, yes!\"\n\n\"Good, and...are you ok with me being ok with you...?\n\n\"With Batman fucking Catwoman?\"\n\n\"Yes.\" Jen sighed. \"That's right. I think that's what I want, among other things.\" She stood on tiptoes, and kissed him. \"Now, would you mind if I sucked you a little more?\" She giggled. \"You taste really good!\"\n\n51.\n\nMags had been standing, still mostly naked, just outside mp-2. All of a sudden she realized that she was cold; no big surprise: tits out in a converted warehouse at the ass end of October. It would be warmer back in the room, but she'd waited. She'd cracked the door to hear not the specifics of the conversation between husband and wife, but the tone. No yelling or crying; that was a good sign. The two voices had stopped now, so she risked a peek. There was Jen, kneeling before her still-bound-and-masked husband, sucking him with all the fervor of a new convert. A wave of relief swept over Mags. They'd had to talk: Theo and Jen. Before this whole scenario had gone any further, they'd needed to check in with each other, whether they knew it or not. Apparently they had, and apparently they were ready to continue, or at least they seemed to be cool with what had happened so far.\n\nMags hadn't known until that moment just how relieved she was. For a few seconds she allowed herself to think of all the ways this little encounter could have gone south, and she found herself astonished both by her hubris and her luck. She might have lost a friend\u2014a new friend, but still\u2014hell, she might have fucked up a marriage. She'd been so taken with the fun of it all: the planning and the preparations, and the play. She'd needed it so badly, and she pushed pretty hard. Honestly: two sexual novices? She'd pushed very goddamn hard. And it had felt wonderful. That's to say it had felt wonderful to her. But Jen had enjoyed it too, right? She'd said she had. And Theo? No safe words; she'd checked in, several times. She'd played by the rules, but still... \n\nSo where did they go from here? Well...she'd given them a potential endgame, a map for what she hoped would happen next. Now she had to go back in and...begin it. She had to get back into character, and Catwoman had to release Batman. That meant a potential loss of control. Mags was a strong woman: tall and fit and confident. But Theo was a very big man. Of course Jen would be there, and Jen knew the rules: anybody could use a safeword. Say \"Red\" and everything stops. But Mags really didn't want to say \"Red.\" She was a little scared, and a lot turned on, and the combination of the two feelings was deliciously novel to her. She took a deep breath, pushed the door open quietly, and walked back in.\n\n52.\n\n\"Enjoying yourself, Princess?\" the sexy voice sneered. Vicki's head whipped around in surprise, and she heard Batman hiss; her teeth had scraped against him as his cock fell out of her mouth. Catwoman was there: fists on her hips, boots, mask and ears, nothing else. To the little blonde, kneeling at the feet of the bound masked man, she looked seven feet tall: beautiful and terrifying. \n\n\"I hope for your sake you haven't let him cum yet.\" purred the tall brunette. \"You've had your treat, Kitten. Now he's all mine. Right Bats?\" She held up a tiny handcuff key on a chain between her finger and thumb. As she approached, she gave Vicki a little nudge with the side of her boot, and the smaller woman moved from in front of the prisoner. Catwoman stood all but naked, facing her erstwhile victim, naked himself but for his mask and cowl. The green eyes examined his body slowly, as she absently moistened her lips with the tip of her long, pink tongue. She smiled hungrily as she took in the length of his thick cock, all wet and shinny with the little slut's saliva. With a satisfied little \"mrr-row\" she reached for the cuffs at his wrists.\n\n\"Undo his ankles, Vicki-kins. Let's see if your boyfriend can bring me to...justice!\"\n\n53.\n\nVicki knelt to one side as Catwoman freed her prisoner's wrists. Then the villainess moved into the center of the room, and stood, legs slightly spread, hands on hips, breasts thrust proudly forward, with her head held high and her full lips curved into a predatory smile.\n\nBatman absently rubbed his wrists as he considered her. In fact, Theo's imagination had just left the building. Adam West had never found himself in this position. ('Adam West would have given his left...kidney to find himself in this position!' thought Theo to himself.) He knew what she wanted him to do, what Jen wanted him to do, hell; what he wanted to do himself. He just hadn't quite figured out how...\n\nHe felt a soft hand brush his thigh. He looked down to see...Vicki kneeling in front of him, rising up until her face was level with his groin. Leaning forward quickly, she trapped the tip of his cock between her lips, giving it a quick, sucking kiss. Then she stood up, wrapped her arms around his waist, and nuzzled her face against his neck. \"Honey?\" It was barely a whisper. Then she giggled: \"Would you do me a favor?\"\n\n\"What?\" He was whispering too.\n\n\"Well,\" she stood on tiptoes and put her mouth to his ear, \"I can't wait to watch you fuck her really hard; make her cum a couple of times, but...\" her voice became even quieter: sound in a sigh: \"...could you to finish in my mouth? I really want to lick her off your cock.\"\n\n54. \n\nBatman strode into the center of the room and stopped less than two feet from Catwoman. He let his eyes travel slowly, almost carelessly up and down her body, taking in her long, muscular legs, the luscious curve from her haunch to her slender waist, the fullness of her high, round breasts with nipples erect, the elegant neck, and the beautiful face: full lips, small nose and cold green eyes beneath the mocking mask, crowned with a thick mane of dark brown hair. She smiled at his obvious admiration, content to let her own gaze wander over his muscular torso, down past his trim waist to his cock, long, thick, erect and cool as the moisture from Vicki's last kiss evaporated in the air-conditioned room.\n\n\"Like what you see, Handsome?\"\n\n\"Oh yes.\"\n\n\"You ready to do something about it?\"\n\nFor answer, Batman extended his right arm, as if to shake. Catwoman laughed. \"Are you kidding me, Bats? This your idea of foreplay, or is this some kind of bizarre pre-coital superhero ritual? 'Shake hands and come out fucking?'\"\n\nBatman was silent, hand outstretched. At last Catwoman shrugged. \"Alright, Stud, whatever turns your crank...\" Her long delicate fingers closed around his.\n\nQuicker than she would have believed possible, he had pulled her towards him and forced her arm behind her back. Before she had time to think, her back was against his chest, his cock was trapped between the cheeks of her ass, and a long muscular arm reached across her body to cup her right breast. She heard his hiss of pleasure as he began to fondle her, caressing her tit and lightly pinching her nipple. She struggled, but his right hand forced hers further up her back, and his left arm tightened across her chest. \n\n\"Once a cop always a cop, huh, Bats?\" She moaned, as little sparks of pleasure shot through her nipple, \"Hey, I thought you said you didn't want to touch my titties.\"\n\n\"I just said I like hers better.\"\n\nShe pushed against his arm. \"Goddamn, you're strong! Mmmm, yeah! Just like that! Oh shit, that feels good. Oooh, feels like you might be changing your mind!\" Then: \"If you want to do...oh yeah...do a little more research, you can let go of my other arm. Then you could...touch both of them. I won't struggle...\" she giggled, \"...unless you want me to.\"\n\n\"I don't know, Catwoman. I kind of like having you in my power for a change?\"\n\n\"There's power and there's power, Handsome.\" Her voice became a plea: \"Oh, Baby, please please please pinch my other nipple? I want it so bad!\" His right hand dropped her wrist; and then both hands were mauling her breasts She gave a smug little laugh, but made no move to escape his embrace. \"See what I mean?\"\n\nBatman's right hand dropped away from her body, and she felt his grip in her hair. He wrenched her head around until she was looking up at him over her shoulder, and he heard her indrawn breath hiss with the sudden pain. \"Don't piss me off, Lady,\" he snarled. \"I'd break your pretty neck for half-a-buck and a chocolate glazed!\"\n\nHer laugh was triumphant: \"Goddess, I LOVE IT!\" Then she was whispering into his ear, her voice a seductive purr: \"Turns you on, doesn't it, Bats? Don't lie. I can feel it. I can feel that big, hard cock of yours getting thicker, pushing in between the cheeks of my ass. What're you gonna do, Lawman? You gonna arrest me? Hurt me? Kill me? Or are you going to shut up and do what we both want you to do: throw me on the floor and fuck me! Fuck me hard and rough. Fuck me fast and nasty. Let your little bitch there watch. Hell, put me on my back; she can sit on my face, and I'll eat her slutty little cunt! But stop making empty threats, and for fuck sake stop pretending to be one of the good guys. Take what you want, you bastard! Oh FUCK YES!\" \n\nBatman dropped his right hand to her crotch and drove two fingers into the beautiful villainess's dripping wet pussy. Catwoman screamed in short, wild, panicky bursts as Batman finger-fucked her. Then his fingers curled inside her, and his thumb plowed its way roughly up through her labia to find and assault her swollen clit. As he found it, he lifted her off her feet, arching his back, and taking her weight onto his chest. Her legs kicked wildly, and she screamed again as her weight forced his fingers deeper into her. His other arm tightened across her chest as her back bowed against him. She felt his muscles strain as he tossed her off of his fingers for a split second, in order to spread his legs for a little more stability. Then she slammed back down onto him, and she screamed with the pleasure and the pain and the panic. The pad of his huge thumb had found her clit again, and she felt as if every ridge of that thumbprint sent a separate jolt of pleasure coursing through her body. She wanted to tighten her abdomen, to delay the orgasm which was threatening to snap her in half. It was too soon, it would be too...something, she...and then she became aware of her voice pleading and swearing and sobbing: \"Ahhh, shit, shit, shit, yes, oh please...oh, wait, no, oh GOD NO! Don't...I mean don't, stop, or...OH SHIT YES DONYOUFUCKIN...UH! UH! UH! AHHEEEE!!!!\n\nHer body snapped forward as she came, and she fell off his hand and onto her knees, burning them against the industrial carpet. She howled with pain and frustration, as her spasms jerked his thumb from her clit, and suddenly her own hand was between her legs, rubbing and pressing, trying vainly to recover the fading intensity of her convulsions. Then before she could catch her breath, Catwoman felt her enemy's arm around her waist, his hand reaching behind to spread the lips of her pussy, and then she screamed for pure sensory overload, as Batman's long thick cock seemed to spit her apart, burying itself balls-deep into her dripping cunt with a single, massive thrust.\n\n55.\n\nJen watched, fascinated, aroused and appalled at her husband's strength. She knew he was a big man, and she had always assumed he was proportionately strong, but now she stared transfixed as he seemed to pick Mags up between her legs and bend her backwards against him as he...shook her until she... She watched the tall brunette fall to her knees, heard her shriek, saw the tears of rage behind the cat's-eye mask as she reached between her legs. Then she saw Theo kneel behind her, reach between her legs, and... Mags' head snapped up as Theo penetrated her, and some whimsical part of Jen's psyche found itself wondering if Mags had glued the cat's ears to her scalp. They and the mask had somehow stayed in place. She was still Catwoman, and that meant...\n\n\"Vicki!\"\n\nIt took Jen a moment. After all they had retained some part of their costumes, masks, cowl, and ears. She was completely naked, but of course, she was still...\n\n\"Vicki, damn it!\" Before this evening, Vicki had never heard her man say anything stronger than... \"Grab that chair, and bring it here!\"\n\nShe must have done as he asked. She didn't remember doing it, but the chair stood in front of Catwoman, who was still on her hands and knees, and still impaled on Batman's cock. Then she was sitting on the chair; he ordered her to spread her legs. And he gave another order, and Catwoman looked into Vicki's eyes and smiled, and the villainess's long pointed tongue reached between the lips of the little blonde's neatly-trimmed vagina, caressing them, moving gently upwards until... \"Uhnnnh! Oh, God that feels so...\"\n\nHer eyes closed, that naughty, pointy tongue began to circle her clit, and Vicki heard Batman's voice: \"Be nice to her, Catwoman. Make it good. You don't cum again until she does!\"\n\n55.\n\nMags barely heard. Good Lord, the strength and size of the man! Since her split with Don, Mags had been with many lovers; men and women, but mostly men. Some had been skillful, some had been...disappointing. And until this moment she'd found no correlation between the size of a guys cock and the amount of pleasure he could provide with it. But there was something about...being taken by...he was so strong; every part of him seemed so...it was as if he could lift her on his cock as easily as he had on his hand. And then there was the role play: he was Batman, and she was Catwoman, and so there was no affection, no tenderness...quite the opposite; there was enmity, aggression. He was fucking her because she'd given him no other option. And the naked power of his thrusts...she'd never felt anything like it: some weird amalgam of pain and pleasure combined with an essential loss of control...like being fucked by an earthquake. But the physical sensation...was almost beside the point. Theo wasn't really a skillful lover; but the context, the power struggle...was really...doing something for her. She could lose herself in it; she could cum from...what he was doing to her; what she'd made him to do her.\n\nAnd then Jen was in front of her; naked on the chair, legs splayed, the lips of her pussy pink and slick like the inside of a seashell. That part of her brain that Theo had not yet fucked lose considered the lovely, intelligent, adventurous\u2014not to say courageous\u2014woman sitting in front of her, waiting to play, to participate. Mags felt herself smile. She stretched herself forward, tongue extended, and managed to draw the tip up through Jen's slit, and tap it against the head of her clit, before Theo's next thrust her face directly into her friend's crotch, almost knocking the smaller woman off the chair.\n\n\"Easy, Bat Stud!\" snarled Catwoman. \"Eating pussy takes finesse. You want to hear the bitch scream, quit trying to break me in half!\"\n\nBatman's thrusts slowed immediately. Now Catwoman could feel the length of his cock stretching her cunt, inch by exquisite inch. She purred: \"That's it, Handsome...oooh, that feels sooo nice! Keep doing that, and I'll make Vicki here a very, very happy slut.\" Then she looked back at him and her lips curled in her familiar mocking smile. \"Don't worry, Superhero, you can still hurt me later, if you want to.\"",
        "56.\n\nJen saw the smile; that terrifying, arousing, predatory smile she had first seen at Mags' apartment back when...when...time seemed to have...oh God! There was the tip of that long, pointy tongue insinuating itself like a boneless finger between her labia, up, up...until...oooh yes! That little tickling tap; that...YUNNHH! The breath flew out of her, and she fought back panic as the chair threatened to fall over backwards. For a long second the thing balanced on two legs, then the other two came back to earth, and her ass bounced against the seat as gravity reasserted itself. She heard Mags' angry growl; the sound off it, not the words, and then she was back on the chair, legs spread, breathing hard, and looking down into Catwoman's mocking green eyes.\n\nBatman moved behind the naked brunette, his long cock rocking slowly and gently in and out of her warm, wet cunt. Catwoman smiled with the sensation of it, and the warm breath from her rhythmic sighs tickled and tingled, cooling the dampness of Vicki's arousal. For a few seconds, Catwoman lost herself in the new pace of her fucking. Then she looked up at Vicki and winked.\n\nThe smaller woman looked down, fascinated, as Catwoman curled her tongue\u2014it really was long!\u2014into a sort of tube. Leaning forward, she pushed her tongue between Vicki's...and into her...into her! She could feel the penetration, like the tip of a tiny cock. The sensation was subtle enough, but the image, the idea, the thought of the thing! Vicki felt her face flush, and her breathing start to quicken. Catwoman was...fucking her with her tongue! It felt as if, at any moment, the masked woman would reach around, pull Vicki's pussy against her mouth and force that tongue deep, deep inside her. Then it would become a tongue again, not the cock it was now, and it would twist and tickle, and lap her up from the inside out...oh God! OhgodohgodohgodohGOD! She might cum from the image alone; she could feel the tiny thrusts, the warmth of Catwoman's breath, and she rocked her hips forward, forcing her pussy into the other woman's face, reaching for a sensation that some tiny part of her mind kept insisting was impossible. Shut up, shutupshutupshutup! She wanted it, wanted it so badly, needed it...\n\nCatwoman's tongue popped out of her, and she cried aloud, almost sobbing with the frustration of it. Then it was back. Her eyes, flew open\u2014when had she closed them?\u2014and she saw an evil little open-mouthed grin on the beautiful face between her thighs, as the villainess began dragging the tip of that wicked tongue slowly up her slit toward...stopping just below her swollen, red clit, and dragging it back down, savoring the sweet, salty taste of her victim's arousal. Without knowing how or even when, Vicki began actually to cry. Tears of lust and rage and frustration streamed down her cheeks, and she began to curse and beg and plead:\n\n\"Goddamn you, you BITCH! YOU...oh shit, that feels so...so fucking...NO! Don't STOP!!! Don't tease, please...I'm begging you! Let me...please let me! FUCKING DO IT!!! Pleasepleaseplease? So fucking...Oh God, oh my fucking...PLEASE!!!\"\n\nThe tongue was gone. Vicki howled! and Catwoman hissed, her breath hot on the smaller woman's pussy: \"Say it, Kitten. You have to ask for what you want like a big girl. Tell me what you want, and I promise I'll keep it going. But you have to ask. You have to say it!\"\n\nVicki howled: \"PLEASE, CATWOMAN, MAKE ME CUM!!! PUT YOUR TONGUE ON MY CLIT AND FUCK ME WITH IT! EAT MY...MY CUNT UNTIL I SCREAM! PLEASE, PLEASE, PLEASE, JUST FINISH ME! AHHHHIIIIEEEE!!!!!\n\nBefore the last words were out of her victim's mouth, Catwoman's tongue lashed across Vicki's clit, battering it back and forth with short hard stabs, and then caressing it with long, slow licks. Aroused by his woman's passion, Batman began thrusting harder, forcing Catwoman's face hard against Vicki's pussy. The tall brunette wrapped long arms around the little blonde's waist, using her weight to help anchor the chair which was rocking back and forth keeping time with the smaller woman's screams. Vicki convulsed one, two, three, four, five, six times, each spasm accompanied by howls and cries and curses, until at last her voice broke, and all she could manage was squeaks and groans and whimpers. Then Jen's body slumped in the chair. \n\nMags glanced over her shoulder, caught Theo's eye; he stopped moving in her. The pair watched for a few seconds. Jen seemed only half-conscious; her eyes closed, her breathing labored. Eventually she roused herself, climbed off the chair onto her hands and knees, and crawled over to face Mags. Gently she leaned forward and kissed her friend's lips. \n\n\"Mmm, I taste good.\" She murmured softly. \"Thank you, Mistress. Am I a good little kitten?\"\n\nMags smiled. \"The best.\"\n\n\"Good.\" Then she stood, and walked over to her husband. She stood to his left, and put her arms around his waist, staring down fascinated at where his long, thick cock disappeared into her friend's body. Then she looked to the back of Mags' head, where the Catwoman ears were, improbably, still fixed in place. Jen smiled to herself, relieved, now that the...event had happened to discover that yes, in fact she could have it both ways. Mags was a friend, and Theo was her husband. And Theo wasn't making love to Mags; Batman was fucking Catwoman. He'd been forced into doing it to keep his beloved Vicki safe from the machinations of the seductive villainess. Jen giggled. It was all pretty silly, but it was also sexy as hell. Jen found herself hoping that her new friend and her husband were having as much fun as she was. Sex was...fun, wasn't it? Love was vital, and profound and... And sex could be all that too, but sex was always...well mostly always...fun. If Theo had anything left in the tank, Jen decided she'd take him home and make love to him until they fell asleep in each other's arms. Then tomorrow night, she'd fuck him cross-eyed. If he didn't have it in him tonight, she'd fuck him cross-eyed tomorrow night anyway. And she'd get him another Batman suit...and maybe a little something for herself as well; not Catwoman of course, but...\n\nShe looked up. Theo was looking down at her, a question in his eyes behind the mask.\n\nVicki smiled up at her hero. \"Fuck her hard, Batman. Punish her for being so cruel and evil, but don't forget your promise. I want your cum all to myself; she doesn't deserve any of it.\" Then she flounced away like the pampered socialite she was to watch her superhero subdue his nemesis. Then she had to hide a grin. Mags was cracking up.\n\n57.\n\nAs always it took Mags a good few minutes to get herself under control after one of her laughs. It didn't help matters for her to imagine Theo's perplexity. He still had his cock buried inside her, and she could only imagine the look on his face, as her lungs and abdomen and points lower heaved and spasm-ed around him; never mind the noises she knew she was making. When she could finally trust her voice, she reached for Catwoman's sexy snarl, and decided she still sounded pretty good.\n\n\"You heard your little princess, Bats! Fuck me like you mean it! Punish me with that big hard batstick you've got shoved up my poor little pussy. You man enough for a good hard grudge-fuck?\"\n\nShe hissed with pleasure as she felt him draw back and slam back into her, once, twice, and three times, each thrust rocking her forward, the sound of his thighs against her ass like a pistol shot.\n\n\"That the best you got, Lawman?\" she taunted. \"I tied your little bitch up and beat her ass, and you just watched and got a boner. Made you cum on her face too. Did you like that Mr. Superhero? Like treating your little princess like the whore she is? C'mon and fuck me like a man, or do I call the Joker over here to make you his BITCH?\"\n\nOnce again she felt Batman bend forward and wrap his long muscular arms around her chest, felt herself lifted onto her knees as his huge hands mauled her breasts, and then he began to hammer her. She screamed and cursed as he shook her like a rag doll, pistoning into her like some demented machine, her body prisoner to his massive strength. His hands grabbed her tits, squeezing and twisting, and she keened as pain and pleasure swirled together. His cock was as long and thick as anything she'd ever experienced. The massive head battered at her cervix until the ache spread through her like...like... She was losing her grip on language, even in her mind. It was agony, but it was so fucking GOOD. He was a lummox; no finesse, no regard for anything but the power and the pleasure of his...what the fuck do you call something this size? Can you even call it a cock anymore...word's like a tenth the size of his goddamn dick...of fuck, don't laugh...don't you fucking laugh! Then: oh FUCK yes! One hand fell away from her tits, questing between her legs. Could he find it while he was throwing her around all over the place? He'd gotten there before, but... ohfuckohfuckohFUCK! YES, YES, SHIT GOD FUCK YES!!! His finger was on her clit: pressure, pain and pleasure, back and forth, over and over, holy shit he was going to tear the fucking thing off! This was brutal! This was mindless! This was no way to cum and yet she was soooooooo close! Soooo Fuuucking Cloooose! Then...\n\n\"OH SHIIIIIIIIT!!! PLEASE, RIGHT...LIKE THAT...JUST KEEP...KEEP, YUH, YUH, YUH!!! FUUUUUUCK!!!!\n\nHer body tried to buck as she came, but his arms kept her pinned against him, and she shook as if electrocuted, her muscles clenching and releasing, clenching and releasing until she thought she would throw up, or pass out, or...she had no idea how long the orgasm held her, but just as it was beginning to pass off, he threw her off of himself, literally; just dumped her on the floor, her body, full to bursting with his cock just a second before now lay in a tangled heap, jerking and twitching, empty and bereft, the only sounds left in her a hoarse rhythmic panting as she fought to get her breath back.\n\n57.\n\nBatman...Theo...didn't matter now. Whoever he was had been subsumed by the pleasure and the rage and the want and the imminent release, and the pain...holy shit was he hurting! Fire in his abs and his glutes and his arms, friction burns on his knees, a raw throat from panting in the cold dry air, and his...cock! Goddamn it! He'd already come once, on Jen's...ooooh shit, don't think about that too hard, or...wait, hold on just a little...promised Jen...Vicki...whatever the...that she could... Well if she wanted...she'd damn well better get over here. Call her! Oh hell, call her what? What if she won't answer to...don't think...no time, just:\n\n\"BABE! IF YOU...IF... JUST GET OVER HERE NOW!!!\"\n\nAnd like magic, she was kneeling in front of him, naked and disheveled and smiling and impossibly beautiful, and he was done talking; nothing else to say. She took over. She took his cock in her little hands, and it felt so...damn...good.\n\n58.\n\nVicki smiled up at her man as she took him in her hands and stroked him gently. He was close. She could tell. She couldn't have said how she knew\u2014she'd never gotten him off this way before\u2014but know she did. His cock was hot and wet with Catwoman's arousal. She giggled, reciting a pornographic little litany to herself, maybe not even aware that she was speaking out loud:\n\n\"Ooh, is this all for me? I'm going to do it. I'm going to make him cum in my mouth. I'm going to swallow his load like a good little...what did she call me when I had his stuff all over my face? A good little cumslut. I like that. I am a cumslut. I want hers too. I want to lick her off him; I want to taste them both...like a mixed drink, a cum cocktail...\" \n\nShe started to giggle again at that: \"Cum...cock...tail? Oh, that's nasty...\" And then she wasn't talking any more because she had slipped the head of his cock into her warm wet mouth, and she was sucking, tasting the spicy, slightly gamey flavor of...Catwoman's pussy, and her hands were moving up and down his shaft. She heard his grunts and groans, but it was as if she was a long way off. No eyes, no ears; just a little smell, touch and taste, mostly taste, because he was cumming now, filling her mouth with thick, milky stuff, and the smoky, bitter taste of him overwhelmed the lighter, tangier flavors of her. \"All mine,\" she thought to herself. \"All for me, as much as I want. And that's good, because I like it. This sexy little cumslut likes it!\"\n\nWhen he was done, when she'd milked every last salty drop from him, she looked up into his face, opened her mouth like one of those slutty porno girls, to show him that she'd swallowed it all. Then she remembered what she'd said to him the first time he'd worn the suit, remembered how it had gotten him going. She opened her blue eyes wide, gave the tip of his cock one chaste little kiss, and said, in her sexiest voice: \"Oh Batman, my hero!\"\n\n59.\n\n\"Honey, this is Magnolia Sutter. Mags, I'd like you to meet my husband, Theo Sutcliff.\"\n\nMags looked like she was about to laugh, and Theo looked nervous, but Jen had insisted. Half an hour later, and he three were in robes, masks and...everything else put aside, and they were sipping Maker's Mark from Dixie cups which Jen had had the foresight to provide. They were standing in Lizbet's office, which was a little cramped, but had the advantage of some furniture and the fact that they hadn't just had violent, kinky, ecstatic sex in each and every corner of it.\n\n\"Miss Sutter.\" Theo held out a hand, and Jen smiled to see the warmth in Mags' eyes. Courtesy: an excellent place to start with Mags Sutter.\n\n\"Officer Sutcliff.\" She smiled, took his hand, and gave it a good firm squeeze.\n\nIt was his turn to smile: \"Given what we've been up to for the last few hours, maybe you better call me Theo.\"\n\nShe grinned: \"Please call me Mags.\" There was a little pause, and then she continued: \"I really had intended to leave at the end of our scene; you know, give the two of you some processing time, but Jen knows I'm a sucker for good Bourbon.\" She sipped appreciatively and then: \"Are you ok with what's just happened?\"\n\nTheo made a sound halfway between a chuckle and a sigh. \"Wow, that's a big question. I think the sort answer is...uh yes, sure...I mean nothing like that has ever...that's to say, I've never...by the way, are you ok? I didn't hurt you or anything, did I?\"\n\n\"You did, a little. But I suppose I hurt you too, a bit. For my part, I have no problem with a little pain as long as it's part of the game. And I must say, I thought that was a lovely game. But I'm also unattached. You've just had a stranger...oh, I can't seem to come up with the word...perhaps 'insert' herself into a part of your marriage which most couples prefer to keep private.\"\n\n\"You would have stopped at any time if I'd said 'red', right?\"\n\n\"Absolutely.\"\n\n\"And I never said it, did I?\"\n\n\"No, you didn't.\"\n\nTheo thought for a moment. \"Jen and I will talk about this, of course. In fact I'm really looking forward to talking with her about it, over and over again...\"\n\nJen\u2014who'd been stripped, bound, beaten, fingered, licked, covered in cum, who'd licked Mags to orgasm and swallowed Theo's cum all within the last hour or so\u2014blushed.\n\n\"But I think I'm fine with it. I mean I got pretty lost in some of it, but...I think if I'd had a real problem with anything...I don't know, but I think I would have stopped it. I came close a couple of times, but...I never did.\"\n\n\"No,\" said Mags again, \"you didn't.\"\n\n\"I don't know if I'll ever do anything like this again. Right now, I kind of hope I do, but...either way, would it be...um...appropriate to thank you for all the...for all this, for arranging it, for taking to Jen about it, for...everything?\"\n\n\"Well I'm not sure I shouldn't be thanking you, but sure, why not? And you're welcome, by the way. It's funny...it sounds...like something you'd say after a cocktail party, but I...I had a wonderful time.\"\n\n\"Thank you. Um...so did I.\" They both looked at Jen.\n\n\"A wonderful time?\" said Jen with a grin, \"Ooooh yes! I...that was all fine with me!\"\n\n\"Well,\" said Theo, \"like I said, Jen and I are going to go home and...talk about...everything, but...do you think we could see you again...I mean socially?\" he added quickly, \"...as friends?\"\n\nMags looked over to Jen, smiling back at her, leaning against her husband, her head on his shoulder. When she stands upright, thought Mags to herself, the top of her head doesn't even reach his chin. Aloud she said: \"Yes. I'd like that very much.\""
    ],
    "authorname": "Quince",
    "tags": [
        "costumes",
        "catwoman",
        "batman",
        "vicki vale",
        "damsel in distress",
        "role play"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/reacquainted-pt-04"
}