{
    "title": "The Apartment Cumslut Ch. 05",
    "pages": [
        "Content warning: Exhibitionism, cheating, sharing/swinging, dominance, submission, daddy play, cum play, light incest, group sex, anal, gangbang, blowbang\n\nThis is obviously not a story steeped in realism, so if you want that I'd probably go elsewhere. I would recommend reading the earlier chapters to get the gist. I'm keeping this series in the Exhibitionist & Voyeur section for now because it fits, though this chapter goes a lot farther than mere exhibitionism. \n\n--------------------------------------\n\nSleep hit me heavy that night, and it stayed with me late into the following morning. It was near 11 before I finally woke up to an empty bed. I checked my phone. In addition to the social media notifications and emailed spam, there was a message from Acacia.\n\nWoke up early and got you some coffee, it's on the counter. Tommy wanted his turn. Love you talk to you afterward xoxo \n\nI rolled my eyes. Tom wasn't normally an early riser, but I guess when he did he woke up with a boner. Bleh. I was learning far too much about my friends' sexual predilections for my tastes. It also would have been nice to have a morning off from having to deal with Acacia's Daily Duties or whatever, but with four 22 year old dudes in the apartment I guessed that was too much to ask.\n\nDespite the annoyance it seemed like things were going in the right direction. My gorgeous, buxom, and constantly-horny girlfriend was tasked with getting all three of my roommates off once per day to pay her rent and board, and it seemed like we'd settled into a nice pattern where I would get some too, usually right afterward. Unless, of course, I got some from Nate's sexy older sister Eliana, which was a lovely new development. Acacia even joined me last night when I fucked Eliana in the ass before I came all over both of them. It was fucking fantastic. I had never cum on two girls at the same time before yesterday. The best part about all of it was that while my sexual horizons kept expanding at an exponential rate, Acacia and my roommates hadn't broken many of my rules for a decent amount of time. They were allowed to cum on her wherever they wanted, or get a blowjob, or fuck her tits. I got to hear about it or see it afterward and then got every other part of Acacia to myself. It was a win-win with only a little downside.\n\nI got out of bed and went to the kitchen to find the coffee Acacia had gotten me and took a sip. Through the thin walls of the apartment I heard Tommy moan as he used my girlfriend.\n\n\"You're so nasty to suck my cock like that Acacia!\"  Tom exclaimed. I didn't know what was so \"nasty\" about a simple blowjob, but whatever. I took another sip of coffee.\n\n\"They seem to be having fun in there!\" came a voice from behind me. It was Eliana. She was wearing a black sports bra and matching tight athletic pants. Her outfit showed off her toned stomach and the pleasing cool brown skin on her bare shoulders. As she walked past me, I scanned the length of her long black black loose braid, and followed it down to her tight, round ass, swaying nicely in her athleisure wear. The memory of penetrating that delightful ass last night came flooding back to me and my cock stiffened.\n\n\"Yeah, they sure do,\" I replied to Eliana, trying to sound as suave as possible. \"How about you and I go back to my room and we can do the same? You do, of course, owe me. What was it, three ass-fuckings and seven facials?\"\n\n\"Six facials,\" she replied. \"You got one last night. And sorry champ, I am both a little sore back there and late for my yoga class. Better luck next time.\" She winked and stuck her tongue out playfully and then bounded out the door.\n\nTommy's voice again wafted through the apartment. \"FUCK THAT FEELS SO GOOD AND TIGHT I'VE NEVER DONE THIS YOU ARE AMAZING!\" \n\n\"YEAH POUND ME WITH THAT THICK COCK JAM IT UP THERE\"  Acacia replied, egging my roommate on.\n\nThey must have switched to titfucking since Acacia's mouth apparently wasn't busy. It surprised me that Tommy hadn't ever fucked a girl's boobs, but again there was nothing I wasn't learning about my roommates' sex lives. Lucky for him that he got to experience it for the first time with Acacia's fat and juicy Double D's, which were always so pillowy soft wrapped around a dick. So soft, and so pillowy. It was kinda weird that Tom had said they were \"tight\".\n\nI was about to put my ear against the door when my cell started ringing. The display read \"BREA - WORK\". My heart sank in fear. It was the Sunday before Memorial Day, which also happened to be the last day of the month. Brea was in charge of making sure our monthly reports were in. She never called on the weekend, so the inescapable conclusion was that I must have forgotten something in our monthly reports.\n\nTommy and Acacia were screaming pretty loud by now so I ran out the front door to the street to answer the phone in a place where my coworker wouldn't overhear my girlfriend being a cumwhore.\n\nI got a bit down the block when I picked up. \"Hi Brea, what's up?\"\n\n\"Hey Ben. I'm really sorry to call you on a weekend but it's the end of the month and it looks like there's a problem with your reports. I'm missing two and can't make sense of a third.\" \n\nFuck. I talked to Brea for a bit longer and talked through the various issues. One of the two missing reports I'd done but simply misfiled. That one checked out once Brea found it in the wrong folder. The other two were a bigger problem. I completely forgot to do a necessary report and apparently screwed up the last one entirely. All in, I was looking at a good 4 hours of work that I'd have to complete by tomorrow. If Brea hadn't found out about the missing reports I'd probably be out of a job by Tuesday.\n\n\"I'm really sorry, Brea. It's been a really crazy week for a lot of reasons. Thanks SO MUCH for noticing. I owe you big time. I'll come in tomorrow and knock them both out by the afternoon.\"\n\n\"OK, great! No problem and tomorrow should work as long as no one notices beforehand. I'll be in the office myself to let you inside and maybe I can figure out a way for you to repay the favor,\"  she said as she hung up.\n\nI cursed myself for being stupid and careless. My job was the only thing keeping me and Acacia afloat these days. Hell, it was the only thing keeping a roof over our heads. Well, other than Acacia getting on her knees. Still, god forbid we find out what would happen if neither of us had money for rent. It would suck to have to go into work on a holiday, but it was definitely better than being thrown out on the street. Knowing my roommates they'd probably kick me out but let Acacia stay. Hell, she'd probably dump me like the loser I was. No way a girl like that would stay with someone who couldn't hold down a job. She might not even stay with someone who could barely hang on to one.\n\nI shrugged and trudged back up the steps to the apartment, feeling dumb and emasculated. Thankfully by the sound of things Acacia had finished her \"work\" by then. I walked to our room, expecting to find her liberally splattered with Tommy's genetic material, but instead she was sitting on the bed in a light tank top and a flowy skirt, her face fresh, clean, and unbesmirched by semen of any kind (for once). She was idly playing on her phone.\n\n\"Hey baby,\" she said as she noticed me. \"Where'd you go?\"\n\nI leaned in close to examine her face closely. She was a little flushed, maybe a little dewey, but she hadn't been used as a cum target. Her breath smelled of mouthwash. Ah ha! She'd taken Tommy's load down the hatch. I kissed her lightly on the lips. She kissed back.\n\n\"Oh, I got a phone call,\" I said. \"I, um... I have to go into work tomorrow.\"\n\n\"Oh no, how come?\"\n\nI didn't have the heart in me to tell her the truth, that my job was hanging by a thread. \"Oh, um, Mr. Keller wanted me to do something extra for him last minute. Could be an opportunity.\"\n\nAcacia seemed a little dejected if not annoyed. \"Huh. OK. But I thought we could spend your day off together.\"\n\nI don't know why but my insecurity and frustration picked right then to bubble to the surface. \"Yeah, well, I can't pass up the chance to get a promotion. Someone has to make money around here to hopefully get us out of this situation. Besides, you seem to have plenty of fun without me around.\" I did the exaggerated air quotes around the word \"fun\" and everything, like an asshole.\n\nAcacia was stung but somehow managed to stay calm. \"Hey. That wasn't nice. Come on, you have been having plenty of fun these days too.\"\n\nI nodded glumly. \"Yeah, I know.\" I plopped down on the bed next to her and sat with my head in my hands.\n\n\"And you know I am doing my best to find a job. I just haven't had any luck.\"\n\n\"Sure. I get it.\"\n\n\"I love you, Ben. I know it's been challenging but I see how hard you've been working to keep things together. Not just with your job, but also with this whole... situation. It means a lot to me how far we've come.\"\n\n\"I love you too, Acacia. And I appreciate you saying all of that. I'm sorry I was being a jerk. I just... want to feel like I'm in control of things, you know?\"\n\n\"Oh, Daddy,\" she purred, as she moved closer to me and put a hand on my shoulder. \"You're in control of so many things!\"\n\n\"Like what?\"\n\n\"Well, I seem to recall you were very in control last night when you were pumping your big hard cock into Eliana's pretty little butthole before you came all over us. Weren't you?\"\n\nI nodded. She was right. \"Yeah, I was.\"\n\n\"You were also so hot and so VERY in control when we went to that bar the other night and you ordered me to suck that hot older guy's dick and then made me cumwalk out of the bar all the way home. God, I still get wet thinking about that. Does it make you hard, Daddy?\"\n\nIt did. And it was. Acacia's hand traced down the crotch of my shorts and took a good hold of my cock.\n\n\"It does make you hard, Daddy. I can tell. You also know you're always in control of anything you want to do to me, or you want me to do to someone else, at any time. You get that power, because I love you, you're so sexy, and you have my favorite cock in in the world.\"\n\nA pang of jealousy shot through me and I couldn't stop it from escaping my lips. \"Even though you've had so many other cocks lately?\" I asked, looking up into her bright blue eyes.\n\nShe smiled broadly and kissed me again, her breath tasting strongly of mint. \"It's precisely because I've had so many other cocks lately that it's my favorite. And that won't change, I promise. Now let me make my favorite cock feel good.\"\n\nA moment later Acacia was on her knees performing fellatio on me like she was born to do it. Her soft lips and wet tongue were magic, as was the way she used both of her hands to stroke and fondle my shaft and balls. I considered just leaning back and letting her suck the cum right out of me, right down her recently-used throat, but instead I decided to take control. I took gentle hold of her curly brown hair and pulled her mouth off my cock so she was looking up at me. \"I want your pussy.\"\n\nSoon her skirt was bunched around her waist, her legs were spread beneath me, and I was on top of her, pumping into the velvety gushing tightness of her cunt. While sucking dick always made her moist, Acacia's gripping snatch was a sopping mess. She must have cum recently. So wet. So tight... The memory of Tommy saying she was tight came flashing back to me like a dagger. Maybe she was wet because he...\n\n\"Wait, hang on,\" I said, stopping thrusting entirely. \"Did Tommy cum in your pussy?\"\n\nAcacia's eyes widened, and then her face softened. \"No, Daddy. He didn't. That's against the rules, remember? He didn't even touch me there.\"\n\nI sighed in relief. Thank goodness, I thought, and resumed thrusting into her. I kissed her deeply, the tang of mouthwash still present on her tongue. I picked up my rhythm, rutting into the wet, hot cunt that was mine. All mine. For as long as I wanted it.\n\n\"So you're this wet because you sucked my dick?\" I said to Acacia, letting the sexiness return to my voice.\n\n\"Yes, that's part of it,\" Acacia said coyly. Now we were in the Slut Game we'd played so often both over the years and lately. I would fuck her and ask her what slutty things she'd done, and she'd tell me every dirty detail until I spilled my seed inside of her. I loved this game. Acacia did too. The key was to draw out the reveal of the most depraved whorish thing she'd done until the very end, until right when I was about to blow. Playing the Slut Game was an art, and Acacia was a maestro.\n\n\"Why else is your pussy all wet, Acacia?\" I asked.\n\n\"Well, Daddy. I might've cum a little bit while I was in with Tommy.\"\n\n\"While you were being used by my roommate like a tramp, is that right?\"\n\n\"Yes, Daddy. While I was being a whore in the other room. I had an orgasm.\"\n\n\"Good girl,\" I said. It wasn't terribly unusual for her to get off while giving a blowjob. Acacia was that kind of slut. I pumped into her harder.\n\n\"Sucking that fat cock made you come?\"\n\nAcacia shook her head no, a gleam of mischief in her eye. I pulled up her shirt, bearing her huge white braless globes and cupped one, my lust overtaking me. In that moment, I loved the fact that my girlfriend's giant breasts had just been wrapped around another cock.\n\n\"You came while he was fucking your big tits?\" I said. I was sure Acacia could tell my own orgasm was not far off. If she nodded right then, it would probably put me over the edge.\n\nInstead she shook her head no again. The gleam of mischief in her eye had overtaken her whole face. She was biting a finger as I pounded into her. Still, I needed to know before I exploded inside of her.\n\n\"What made you cum when you were in with Tommy, Slut?\"\n\n\"Ohhh, Daddy, I am glad you asked! Well, you know how big and fat Tommy's dick is. Thicker than any one I've ever seen. Well, after a very long and hard and sexy time of trying, of taking it out, and sucking on it, and putting it back until I couldn't take it anymore, and then taking it out and sucking on it again, it finally got all the way in and he started fucking me hard and then...\"\n\nI wasn't just approaching the verge of orgasm, I felt like I was becoming the verge of orgasm. I really just needed Acacia to tell me what I wanted to hear so I could blast my load into her uterus. A small part of me was annoyed that she was pretending that Tom's dick was too big to titfuck. It barely made sense!\n\n\"...I came as soon as Tommy started shooting his hot cum deep inside my tight asshole! It felt soooooooooo good Daddy!!!!\"\n\nI shot off inside of Acacia like a fucking firehose. The orgasm I thought I had been building up to did not compare in the slightest to the one I actually experienced. Acacia gave her asshole to my roommate with the thickest cock imaginable. Moreover, like the nasty bitch she was, she'd done ass-to-mouth in the process. That explained the mouthwash. The mental image was overwhelming and I grunted and emptied what felt like three normal loads into my girlfriend's vagina.\n\nAcacia squealed in glee \"Ohh I can feel cum leaking out of both holes, Daddy! Aren't I a good slut!?!\"\n\nShe was an incredible, mind-blowing, and utterly depraved slut. I withdrew my cock and sat back on my thighs. For the first time I looked at Acacia's asshole, which had clearly been freshly fucked, a thin stream of gooey whiteness dripping out of it. The scene was pornographic in its intensity.\n\nAcacia, for her part, beamed proudly. She repeated her question. \"Did I do good, Daddy?\"\n\n\"I... uh... I...\" I stammered. Free from the intoxicating pulse of my libido the old doubts and insecurities swarmed back to me. I hadn't told her she could get assfucked, had I?\n\n\"Are you OK, Daddy? Ben?\" Acacia looked at me plaintively. For the first time she looked a little unsure. Perhaps a little scared. She wanted reassurance. She wanted me to tell her she was a good slut.\n\n\"You're a good slut,\" I said, with whatever minimal confidence I could muster. \"I just... didn't know you were doing that.\"\n\nAcacia looked confused. \"You told me last night I shouldn't give up my pussy, so I didn't. You were assfucking Eliana. So what's the difference?\"\n\nShe had me. There wasn't a difference other than that I was the man and she was the woman. Falling back on that difference was not going to go well.\n\n\"Yeah. You're right,\" I said, resigned. \"I guess I just didn't know you were going to, you know... suck him too.\"\n\n\"You didn't say I couldn't do ass-to-mouth with anyone else, Ben,\" she said somewhat annoyed. \"I was clean, and I wanted to, and it was fucking hot, and Tommy lost his mind about it, and that's why I did the mouthwash anyway. Are you OK? What's the problem?\"\n\n\"There's no problem,\" I lied. \"Sorry, I was just thinking about the work thing.\" I lied again. In truth this seemed like a lot, like a huge expansion of the landscape. Acacia was now letting my roommates fuck her in earnest. Sure it was \"only\" in her asshole, but since when was anal sex not a big deal?\n\nI needed to clear my head, but I also needed to appear like I was in control. Acacia said she liked it when I was in control. I picked up my phone and checked it, then pretended like I saw a text.\n\n\"Oh, babe, sorry. It looks like Mr. Keller wants me in the office today. Guess I've gotta go down there.\"\n\n\"Okay, I guess,\" Acacia replied.\n\nI pulled on a button up shirt and some light pants. Something office appropriate, even though I was not in fact going into the office. Really I just needed to walk and clear my head.\n\n\"I love you,\" Acacia said as I kissed her on the cheek to head out. \"You sure you're OK?\"\n\n\"Yeah, I'm fine.\"\n\n\"If you say so.\"\n\n\"Oh, Acacia?\"\n\n\"Yes?\"\n\n\"Can you, um... not do what you did with Tommy earlier again today? At least not until I get home?\"\n\n\"Not sure I'd even be able to given the stretching he gave me back there, but sure. How come?\"\n\n\"I just... I just...\" I was searching for a reason that wouldn't betray my uneasiness or my lack of control. Eventually, a reason tumbled out. \"I just... want to watch next time.\"\n\nDeep down I truly had no idea whether the reason I gave her was true.\n\n------------------------------------------------\n\nIt was hot again. Not as hot as yesterday, but still a scorcher. I couldn't go to the office even if I wanted to since I didn't have a key, so instead I just walked aimlessly. A million things went through my brain. Did it bother me that Tommy got inside my girlfriend's ass? Kinda, yes. Did it also turn me on a little? Kinda, also yes. The good news was that Tommy was a nice guy, nonthreatening, and not the kind of dude to lord it over me. The bad news was that none of these things were true of Will and especially Nate. Those two would no doubt demand their turn in Acacia's backdoor, if not today, then soon.\n\nThe fact that she'd done that should enrage me. All of this situation should. The fact that my roommates had nearly unfettered access to do horrible terrible pornographic things to the love of my life should make me feel humiliated, embarrassed, and degraded. But deep down... I wasn't sure that it did. Sometimes I felt annoyed, sometimes I felt insecure, and other times I got angry... but for the most part I didn't feel like less of a man.\n\nThe one thing that I knew for a fact was true was that even when all of those other thoughts and feelings were swirling around inside of me, I still always got pretty fucking turned on about it. I mean, what the hell kind of pervert did that make me? It was all too much, and I didn't have anyone to talk to about it.\n\nI don't know how I ended up here but before long I found myself at the door of the Dateline, the shitty dive bar that I'd taken Acacia to a few days ago. I checked my wallet, which contained a lonely $20 bill and nothing else. Maybe I could get a beer or two, get out of this heat, and get my head on straight before going home. I trudged inside.",
        "\"Hey there, buddy!\" said a familiar voice as I approached the bar. \"Here without your arm candy this time, eh?\"\n\nIt was Clay, sitting in the same place at the end of the bar, looking at the same TV, drinking what looked like the same whiskey.\n\n\"You always here, old man?\" I said, mustering a joke.\n\nClay smiled his broad, easy smile and gestured his head toward the screen. \"Only when the Giants are on. You want to join me? They're playing LA.\"\n\nI ordered the cheapest can of beer they had and sat down next to him.\n\n\"You like baseball?\" he said.\n\nI shrugged. \"It's fine.\"\n\n\"I love it. Grew up on it. Almost played ball in college but decided to make it in the show as a musician instead. Alas. Anyway, my old lady fucking hates baseball, so.\" Clay gestured at the bar. \"Instead I slake my thirst for sport in this shithole establishment.\"\n\n\"Hey fuck you, Clay,\" said the bartender without looking up from his duties.\n\n\"Fuck you, Jack,\" he replied nonchalantly. Clay looked at my clothes. \"You just come from Church or something?\"\n\n\"No. I was going to go to work but... I didn't.\"\n\n\"Seems like a good call. Where's that pretty little piece you brought in here the other night?\"\n\n\"I, um, needed to get away for a bit.\"\n\nClay laughed. \"Happens to the best of us. Jack, can I get another whiskey? Better bring one for the kid here too.\"\n\n\"I, uh... can't afford it.\"\n\n\"Don't worry I'm buying. I owe you one from the other night. Thanks, Jack. Now, kid, why don't you tell me what's going on with you and your little buttercup.\"\n\nTired, dejected, and plied with whiskey, I spilled my guts to this virtual stranger about everything. I told him about my roommates, and the Apartment Cumslut arrangement. I told him about the initial boundaries, and how they've expanded. I told him about Eliana and Brea and the shit with my job. I told him about my conflicted feelings, the fact that I was mad and horny at the same time. I told him about needing to feel like I was in control and having that feeling shattered when Acacia let Tommy plug her butthole. I told him it all.\n\nFrom time to time Clay would ask a question, nod assuringly, or voice understanding with a grunt. His attention was split somewhat evenly between my story, the game, and the neverending glass of whiskey he was downing. Despite all that, he made me feel heard. It was good to get this all of my chest to someone. Anyone, really.\n\n\"That all makes sense, kid,\" Clay said when I finished. \"But I don't really understand why you have a problem with your roommate fucking your girlfriend in the ass.\"\n\nI looked at him incredulously. \"You don't understand!?! I just explained it to you, man! You don't think it's weird?!\"\n\nClay downed what was left of his drink and called for another. The bartender brought the bottle over, filled his glass, and then disappeared. Clay turned to me and gave me his undivided attention.\n\n\"I don't think it's weird at all,\" he said, eyes peering at mine over the top of his horn-rimmed glasses.\n\n\"You... don't? Why not?\"\n\n\"Because, my dude,\" replied Clay, \"my old lady gets fucked by other people too.\" Clay bottomed the neat glass and set it on the bar. He looked at me to gauge my reaction. Apparently finding none, he continued. \"Kid, you are not the first person to walk down this road. Why do you think I told you I was taking pictures of my jizz on your girlfriend's face 'for the missus'.\"\n\nI was flabbergasted. \"I... thought you were lying.\"\n\nClay laughed. \"No, you thought I was cheating, and you were comfortable with that because for understandable reasons you didn't give a shit about my relationship. Also because you got your rocks off too,\" he replied, correctly. \"But the truth is I wasn't cheating and I also wasn't lying. I actually showed her the pictures. She liked them, for the record.\"\n\n\"I... uh... I don't know what to say.\"\n\n\"Kid, there are more people out there who do some flavor of non-monogamy than you could possibly know. You got your unicorn hunters and lifestyle swingers and relationship anarchist polyams and everything in-between. Lots of people are hard-wired for monogamy. More power to 'em! But other folks aren't, and they get super fucking freaky. Sounds like you and your girl are like that, and I salute you for it.\" Clay bottomed another shot. I was stunned at his alcohol tolerance.\n\n\"So, what um... flavor are you?\" I asked.\n\n\"Something similar to yours. My girl is a hardcore slut. An absolute tramp. A slag. She spreads her legs for whoever she wants and whoever I tell her to and she loves it either way. Only difference between me and you is that my girl was like this when I started dating her and I think that yours just figured it out in the process.\"\n\n\"And... you're ok with it?\"\n\nClay erupted in a belly laugh and clapped three times almost sarcastically. \"OK with it!?! Kid, it's the reason I am with her.\"\n\nI was speechless. Clay picked up on that and fished his phone out of his jeans. \"Look,\" he said, flipping through his photos to show me what he meant. \"This is Peppi. You'd like her. Or she'd like you, either one.\"\n\nThe picture on his phone looked like an old school pinup of a raven-haired painted lady sitting demurely with legs crossed, dressed in a traditional blue buttoned one-piece with bright red lipstick, tattoos adorning nearly every inch of her body below her neck. Her hips were wide, her unadorned skin was alabaster, and her ample chest was obviously extremely artificially enhanced.\n\n\"Dang,\" I said reflexively. \"She's hot.\"\n\nClay smiled. \"Fuck yeah, she is. She doesn't have those big naturals that your girl does, but that's what the plastic is for. Wanna see her in action?\"\n\n\"Uhhhhh,\" I said not sure what to say.\n\n\"Of course you do,\" said Clay, and he flipped through his phone again. When he found what he was looking for he handed it back to me and said \"Press play.\"\n\nI pressed play. It was a video of Peppi, she was naked. Without the one-piece bathing suit I was able to confirm that she was indeed covered with tattoos from nearly head-to-toe. The video depicted her from the side. She was on her back with her legs spread, being gangbanged by multiple men. One man was thrusting into her shaved cunt. Another was in her mouth. Two more were being jerked off by either of her hands. The pearly white remnants of multiple other men adorned her stomach, fake tits, and face. None of the men in the video appeared to be Clay. As the video played her voice groaned and she yelled \"cum in my cunt fill me up give me that nut!\" loud enough for other people in the bar to hear.\n\nI shoved the phone back in Clay's hand as if to communicate that it wasn't MY porn we were watching. Clay laughed. \"The only other person in the bar is Jack and he's already put a dozen loads in her over the years.\"\n\n\"Probably closer to two dozen,\" said Jack without looking up from the newspaper. \"More if you include the ones I put on her.\"\n\nClay chuckled and looked back at me. \"As you can tell, we've been friends a long time.\"\n\n\"Isn't it kind of, I dunno, humiliating when she does that?\"\n\nClay shrugged. \"Some people would say so. Some folks, the cuckold types, they get off on it because it's humiliating. They want their wives or girlfriends to embarrass or demean them when they do stuff with other people. If that's you, more power to you! But it's not me. I like it for different reasons.\"\n\n\"What kind of reasons do you like it then?\"\n\n\"Same kind of reasons that I think you probably like it. My wife is hot, she's sexy, and I like that other people think so too. Besides, I like watching her fuck, I like telling her to do porno shit, and I like it when she does it. She's like my own little porn star but I get to direct the action and she comes home with me at night. Far as I'm concerned it's a win-win.\"\n\nI thought about that for a second.\n\n\"But... isn't it weird that your wife has sex with other people?\"\n\nClay smiled and looked back at the game. \"What's weird to some people is perfectly normal to others. I don't give a fuck what other people think. Besides, you didn't seem to mind the other day when I got a piece of your girlfriend.\"\n\n\"That was different,\" I said. \"It was just oral sex.\"\n\n\"Kid, you just told me 10 minutes ago that it bothered you when Acacia blew your roommates the first few times. And yet, you still brought her here, told her to get down on her knees, and suck me off. The whole thing was your own idea, not hers. So why did you do that?\"\n\n\"Well... you were a stranger,\" I responded meekly. \"And I was in control.\"\n\n\"Was it easier because you thought you'd never see me again?\"\n\n\"Yeah,\" I nodded. \"No offense.\"\n\n\"None taken. Seems to me that part of your problem is less about your girl and more about your friends. Your girlfriend started out her slut journey on people you know well. That makes it hard. Most folks start out with random strangers and build up to a time when they can sleep with people they know.\"\n\n\"Huh,\" I replied. \"That didn't occur to me. I guess that's probably why I brought her here that night and let her suck you off.\"\n\n\"Well that's the other part of your problem,\" said Clay. \"You didn't 'let' her suck me off, kid. You made her suck me off. There's a difference.\"\n\n\"How so?\"\n\n\"It's like you said earlier, you were in control. Or at least, you thought you were.\" Clay winked. \"Either way, the thing that seems to bug you about your roommate situation is that they just came up with this idea and your girlfriend went along with it and it makes you feel like you don't have any control over the situation, even though deep down it turns you on.\"\n\nThat statement hit me like a thunderbolt. He was right. That was the core of it, the fact that I felt like Acacia - and perhaps more importantly my roommates - were beyond my influence. \"So how do I take back control?\"\n\nClay shrugged lightly. \"I'm not sure there's a silver bullet given how far things have gone here,\" he said. \"You could try to impose rules on everyone again, which could work if they're the kind of rules people can live with. Or you could just call the whole thing off and find a new place to live. But if you want my advice, the easiest way to get a handle on situations like this is to focus on controlling yourself. Everything else flows naturally from that.\"\n\nThe bartender brought us two more shots. We toasted, tapped the bottom of the glass against the bar, and bottomed them.\n\n\"So... how the fuck do I control myself?\" I asked, the alcohol causing my words to tumble out a little looser than they usually would.\n\nClay chuckled, his eyes fixated on the television set. \"Wish I could tell you, kid. You just have to figure it out.\"\n\nWe sat in silence for a while, watching the game. Clay kept drinking whiskey. I switched to club soda. I was turning the problem of control over and over in my head when my phone buzzed with a text from Acacia asking when I was expected back. I didn't respond.\n\nAnother hour later Clay's phone rang and he put it on facetime. \"Hey Peppi, what are you up to babydoll?\" he said. Peppi's black hair was tucked into an updo, and the heart-shaped beauty mark tattoo drew attention to her big blue eyes, which shone almost as brightly as Acacia's.\n\n\"Oh, just getting ready for the evening's festivities,\" she replied. \"Is the game still going on? I'm trying to figure out dinner.\" \n\nClay looked at the TV. \"Yeah, only the 6th inning and it's tied so could go to extras. Anyway, say hi to my friend Ben, he's the kid who let me blow my load on his girl the other day. Say hi, Ben.\"\n\nHe tilted the phone so it faced me. Peppi smiled and waved. I waved back.\n\n\"Hi Ben! Thanks for letting me see Clay nut on your girlfriend's face. It was super fucking hot. I liked when you did it too. She's real lucky. You've got a nice cock on you as well.\" \n\nPeppi was apparently as up front about sex and sexuality as her husband was. \"Uh, sure. Thanks. No problem,\" I stammered. Not knowing quite what to say.\n\n\"Hey Peppi,\" interjected Clay. \"Kid's been having a rough day so why don't you come down to the bar and make him feel better. Jack's the only other person here so maybe we can convince him to lock up and we can fill you airtight. You'd like that, wouldn't you, kid? Having your pick of my wife's tight wet holes?\"\n\nMy mouth dropped open but nevertheless I managed to nod my head yes. Unfortunately Peppi interjected.\n\n\"Sorry babe. I'd love to, but I have plans in an hour or so, remember? Brandon and his friends are coming over? I don't want to be worn out by a bunch of bar drunks before I spread my legs for a bunch of 20 year olds.\" \n\n\"Ah, right. I forgot about that. We'll have to take a rain check for Ben here. Have fun with the boys and I'll be home to claim my share of you after the game.\"\n\nPeppi said OK, blew Clay a kiss, and hung up. Then Clay asked me for my phone, opened the text app, and sent a text that said \"This is Ben\" to a number that I did not recognize. Then he handed the phone back to me. Less than a minute later came a response, \"Hi Ben this is Peppi! So nice to meet you. Clay says that I owe you one, so just text when you want to get your rocks off and I'll come over and let you do anything you want. Fuck my tits, fuck my pussy, fuck my asshole, anything. Don't be shy, just give me a bit of a heads up. Can't wait to play with that pretty cock of yours in person xoxo\". The message included a topless selfie, her massive fake breasts centered on the screen.\n\n\"Uh, wow,\" I said to Clay. \"She's incredible.\"\n\n\"Goddamn right she is.\"\n\nThe thought of getting to have my way with an older woman - an older slut - like that was intoxicating. I wondered if she'd let me use her multiple times. \"Is Brandon a friend of yours? Like me or Jack?\" I asked.\n\nClay smiled, his eyes returning to the baseball game. \"Brandon is her son. He's introducing his mother to some of his friends.\" Clay's demeanor was completely nonchalant.\n\nMy mind swam. \"Is he... going to... watch? His friends... with his... mom?\"\n\nClay's expression did not change. \"Probably,\" he said as if it were the most normal thing in the world.\n\nMy phone buzzed with a text again. It was Acacia.\n\nHey babe I hope you don't mind me bothering you at work but I kind of need to know when you'll be done.\n\n\"Why, what's going on?\" I texted back, not wanting to tell her that I was not, in fact, at work.\n\nWell... it's Nate and Will. They want their turns.\n\nI sighed. Of course. \"Go ahead and let them. I don't have to be there.\"\n\nThat's the thing. I offered to suck them off, or to let them take turns fucking my titties. I even offered to let them be the first to give me a double facial at the same time. But they must have talked to Tommy so they keep bugging me about giving them my asshole.\n\nI gulped. I'd told her she couldn't do that without me being there. A lump rose in my throat. One of my roommates had used my girlfriend's butthole as a cum dump earlier that day and now the other two felt entitled to the pleasure. Would I ever feel comfortable fucking her in the ass again knowing that all three of them had fucked her there? Or was it really all that different from them having already used her mouth or her tits or her face as a cum target? Besides, I still had her pussy all to myself.\n\n...and I kinda want to give it to them. Acacia texted as a follow up.\n\nI froze. \"You OK, kid?\" asked Clay. \"You look like you've seen a ghost.\"\n\n\"Yeah, it's a text from Acacia and I'm not sure what I should do,\" I replied.\n\n\"I already told you what to do, kid,\" laughed Clay. \"Take. Control.\"\n\nThat's right. He had. I took a deep breath, pounded the last remnants of whiskey in my glass, and texted Acacia back: \"OK, I'm coming home.\"\n\n-------------------------------------------------------------------\n\nTwenty minutes later I strode in the front door. Eliana sat on the living room couch reading a book, and looked up at me with a wry grin.\n\n\"Whe...\" I started to say.\n\n\"Nate's room,\" she responded, her eyes returning to her book. It was as if it were the most normal thing in the world for her to direct me to wherever in the flat her brother and his friend were having their way with my girlfriend.\n\nI walked toward the back room. My heart was pounding, my palms slick with sweat. I knew I needed to take control. But control of what? And control of who? I didn't know.\n\nAs I approached the closed door, I heard sounds of movement behind it. Male grunts. Muffled female moans. The rhythmic slapping of flesh. They were fucking her. It was undeniable.\n\nEmotions swirled through my chest as my brain raced through every possibility. I was angry, scared, aroused, excited, terrified, and confused all at once. Who was fucking her? Where were they fucking her? Were they doing it at the same time? Hadn't I told Acacia to wait until I got home? What am I going to do when I open this door? Do I knock? Should I just let them finish? Most importantly I wondered how I was going to 'take control' of all of this.\n\nI took a deep breath to calm my nerves, reached my hand to the doorknob, turned and pushed inside.\n\nThe scene that greeted me looked like it was out of a porno flick. Acacia was nude on all fours on Nate's bed. Will was behind her, pulling back her long curly brown hair, his thrusts causing the ample flesh of Acacia's rond buttocks and pendulous breasts to ripple enticingly. Nate was in front of her, stuffing his fat brown cock in her mouth. One of his hands held her head steady so he could fuck her face, the other held his phone so he could record pictures while he spitroasted my girlfriend.\n\n\"Oh shit, hi Ben,\" came a voice from my right. It was Tommy, who was sitting in a chair in the corner. He was also filming the scene with one hand and jerking off with the other. As he saw me he tried to cover up his coke-can sized member, as if I hadn't seen it already. I looked back at the threesome on the bed.\n\nAcacia removed the nine-inch slab of meat in her mouth with a hand. \"Hi Daddy! You said I could get started so I did. Hope you don't mind, but I am just such a slut sometimes! And don't worry, I only gave them my asshole not my pussy.\" She continued to pump Nate's dick when she spoke, the precum leaking from his engorged cockhead smearing against her cheek. Will continued to pound away behind her without interruption, though both he and Nate looked at me with vague apprehension.\n\nTime seemed to stop. I didn't know what exactly to say, but I knew that whatever I did would have major ramifications as to how this night - if not the rest of our relationship - would go.\n\nI swallowed hard. Four pairs of eyes in the room were looking at me. Acacia's hand slowly stopped pumping, as Will slowed down his thrusts into my girlfriend's bowels. For a moment there was no movement, no sound, just silence.\n\nIt was at that moment when I knew there was only one way forward. Only one way that I could make everyone - but most importantly me and Acacia - happy. Only one way I could take control of this situation. I had to order it to happen.\n\n\"Why have you stopped?\" I said with every ounce of cool confidence I could muster. \"Keep fucking that little whore's asshole. Acacia, put that cock back in your mouth. I want this slut to get assfucked as hard as she can handle.\"\n\nAcacia squealed in glee and resumed sucking Nate's monster while Will picked up the pace slamming his cock into her tightest hole. Nate and Will high-fived as my girlfriend continued getting it in both ends. I watched as her eyes rolled back, signaling what must have been a mini-orgasm.\n\nI turned to Tommy, sitting in the corner. \"What are you doing here?\" I asked. \"Haven't you already had your turn today?\"\n\nTommy nodded sheepishly. \"Yeah, I just... was going to watch if that's OK. Unless, you know, I could maybe have another go?\"",
        "\"Switch!\" called out Nate, as he withdrew is dick from Acacia's ass. Will gave a couple more thrusts and pulled out as well.\n\nMomentarily empty of cock, Acacia piped up, her voice shaky from exertion and multiple orgasms. \"Please let Tommy have another turn today, Daddy. I want to feel that thick hog in my butthole again!\" Then her mouth was plugged back up with Will's member. The fact that it had just been in her asshole did not seem to bother her one bit.\n\n\"Take my big cock in your ass now, cunt!\" said Nate as he slid his nine inches into Acacia's ass. Even with her fat round ass cheeks, her ass looked like she'd never be able to handle something that big. Still, Nate seemed to put it inside her tightest hole with ease. Acacia groaned and dug her fingers into her cunt as another orgasm overtook her.\n\nI remembered what Clay had told me. Take. Control. \"Fuck it,\" I said, and began to unbutton my belt and unleashed my rock hard cock. \"Let's gangbang this bitch.\"\n\n\"YES!\" shouted Will as he sawed his erection in and out of my girlfriend's mouth. \"I call her pussy.\"\n\n\"No pussy!\" I corrected. \"You can fuck her ass or her mouth. Her cunt is still off limits. Now flip her over and make room for Tommy and me.\"\n\nNate visibly rolled his eyes. Will and Nate withdrew their cocks from their respective holes and Acacia obediently turned on her back, her heavy breasts now on display for all. Acacia spread her legs wide open for Nate as Tommy and I got on the bed on either side of her. Nate drew the entire length of his member along Acacia's exposed clit. When the tip of his penis reached the opening of her cunt he left it there for just a moment as if to demonstrate his displeasure with my No Pussy rule. A gob of precum oozed out of his pisshole and into my girlfriend's open vagina. For a moment, a part of me wanted him to break my rule and just fuck her cunt right there.\n\nInstead, Acacia reached down and took the crown of his cock in her hand, then guided it down a few more inches. \"Fuck my ass, Nate. Fuck me and stretch me out with that huge cock and then cum inside me like the anal whore I am.\" Nate pushed into her anus. She reached out and took my turgid pole in one hand, and Tommy's in another. Will then sunk himself back into her mouth. My sweet girlfriend was now pleasuring four cocks at the same time.\n\nAfter a few minutes Nate withdrew and we all rotated counter-clockwise. It was Tommy's turn in her asshole, Nate and Will got her hands, and I got my girlfriend's pillowy lips. I watched the look of sheer bliss cross her angelic face as Tom's wide penis stretched her sphincter. \"Are you happy, babydoll?\" I asked.\n\n\"So happy, Daddy!\" she moaned. Tommy started to thrust and it became more difficult for her to form words. \"I've.... I've always wanted... ugh ugh ugh... I love this... fuck me fuck me fuck me.\" I relieved her of the obligation of speech by slipping my cock into her velvety mouth.\n\nThis rotation lasted for quite a while. All four of us pawed at her breasts and her hips and took liberties with the rest her body. All four of us got multiple turns in my girlfriend's asshole. All four of us made Acacia orgasm multiple times. All four of us, but especially Nate and Will, called my girlfriend just abominable degrading names. Acacia loved it.\n\nThere were moments that it occurred to me how odd this all was... that I was naked next to my friends, that we were anally gangbanging my girlfriend, the knowledge that each time I slipped inside her mouth or asshole that three other cocks had just invaded her there as well. Thinking back, I could have used a turn to fuck her cunt instead as the No Pussy rule did not apply to me, but it never occurred to me at the time. Instead, I just enjoyed the rhythm of the orgy and the sight of my big-titted, wide-hipped, nerdy girlfriend having a train run on her.\n\nEventually, after what seemed like an eternity of anal bliss, Nate called out \"I'm gonna nut in your filthy slut girlfriend's ass, Ben! TAKE IT, SLUT!\" A part of me was taken aback that he was calling me out like that. But a bigger part of me was turned on by Acacia groaning on Will's cock and the sight of Nate's egg-sized balls contracting as they emptied themselves inside her bowels. After he came, he pulled himself out and a torrent of white cream leaked out of Acacia's gaping backdoor. Undaunted, Tommy hustled between her legs and plunged inside of her.\n\n\"Guess someone doesn't mind sloppy seconds,\" joked Will as Acacia's tongue danced up and down his shaft. If Tommy minded at all it did not stop him from dumping his second load of the day in my girlfriend's ass a short time later. Afterward, Will did not hesitate to take Tommy's place, and he seemed no less eager to add his seed to the other two loads inside Acacia's ass.\n\nWhen he was done, the only people left on the bed were me and my girlfriend. I removed my diamond-hard member from her suckling mouth and moved down between her legs. Her pussy was drooling and open, her asshole ravaged, red, gaping, and frothy with the semen of three other men.\n\n\"Daddy,\" she said, her face and body covered in a sheen of sweat both from herself and the four men who had been assfucking her for the last half hour. \"Please fuck my ass, I'm begging you. I need you to finish me off.\"\n\nAnd then, despite the erstwhile orgy, the veritable gallon of cum in her ass, and the fact that we were still being watched, it felt like we were the only people in the room. I slid my cock into her well-used asshole and began thrusting into her, the sloppy fourths providing ample lubricant. She reached up and pulled me down to her. We kissed. It was a tender, sweet, romantic kiss. The fact that she had just gone ass-to-mouth with three other men notwithstanding.\n\nAs I picked up the pace she started whispering in my ear. \"Daddy, I've had so many cocks inside me today. Right where you are now... I hope you still love me even though I'm a dirty buttslut.\"\n\n\"I do, babydoll.\" She was playing the Slut Game again. I loved her for it.\n\n\"I loved getting gangbanged. I want it again and again. Please let me get fucked like that again.\"\n\n\"I will, babydoll.\" My orgasm was building. It would not be long before I joined my cum to the other loads in Acacia's ass.\n\n\"And Daddy?\" Acacia asked as she gently tugged my thrusting hips deeper and deeper against her splayed asshole.\n\n\"What is it, babydoll?\" I whispered in response.\n\nShe whispered even softer this time, to be sure that only I could hear, \"Next time I want to give them my pussy.\"\n\nI came in her ass like a geyser, cum overflowed from her tight hole and splashed against my thighs. While I had been on the edge for some time, the thought of Acacia giving up her cunt to multiple men was what triggered one of the most intense orgasms I could remember. I kissed her again and fell back on my haunches, exhausted.\n\nI then realized that Nate, Will, and Tommy were still in the room, and still naked. Moreover, they were all still hard, having just watched Acacia and I fuck must have done it for them.\n\n\"Tommy got two turns with your slut today,\" said Nate. \"So I'm taking two,\" he declared. There was no hint that there was a choice here.\n\n\"Me too,\" agreed Will. \"Only fair.\"\n\nTommy, for his part, stayed silent.\n\nTake. Control.\n\nI looked at Acacia. She looked back at me, hopefully. I could tell she was tired, but her sluttiness was irrepressible. If I hadn't been in a post-orgasmic state of mental clarity, I might have let them all fuck her cunt right then. Instead, I turned back to my roommates and said \"I don't think her ass can take any more tonight, but you can all cum on her face.\"\n\n\"Sounds good to me,\" said Nate. \"Let's bukkake this dirty whore.\" He cranked his big fat cock in Acacia's direction.\n\n\"Hang on!\" she interjected. \"I have four loads of cum in my ass and have had to pee for a half hour. Give me a sec to go to the bathroom and then you can all shower me with your yummy cummies.\" Acacia got up from the bed and pushed past my roommates, fondling Nate's huge hog on the way out.\n\nAs she walked out the door, I heard her say \"Eliana! What are you doing in the hallway?\"\n\nI'd forgotten about Nate's sister. She must have been listening outside her brother's door. She also owed me. Maybe this was a chance to knock Nate down a peg or two.\n\n\"Eliana!\" I shouted. \"Come in here right now.\"\n\n\"What?!?\" responded Nate incredulously. \"Don't tell her to come in here, she's my sister!\"\n\nI found a level of controlled intensity that I didn't know I'd had. I wheeled on him. \"Shut the fuck up, Nate. You've just had your dick in my girlfriend's holes, everyone can hear it, she's an adult, and if you don't quit your whining you're not getting your second turn.\" Then I shouted again \"Eliana! You heard me, get in here right now!\"\n\nThe cute filipina peeked her head in the doorframe. She was wearing gold-rimmed circular glasses and had her black hair back in a ponytail. I could tell from the flush on her face that she had probably been masturbating while listening to Acacia's anal gangbang. Nate saw her and turned his back to her, in a probably futile attempt to hide his enormous erection from his sister. I motioned her inside and patted the bed as if to say \"sit here\".\n\nEliana walked in the room, pushed past the three naked men standing near the doorway, and plopped down on the bed next to me. I put a hand on her naked thigh near the edge of her short shorts. Her braless dark hard nipples poked against the cotton of her white tank top. Nate had angled his body away again, trying not to look at his big sister sitting next to another naked man on a bed. By Nate's reaction I knew that I had been presented with a golden opportunity.\n\nTake. Control.\n\n\"Eliana, were you listening to what was happening here?\"\n\nShe nodded. \"Yeah, obviously. It was hard to miss,\" she replied sarcastically.\n\n\"Were you playing with yourself when you listened?\" I asked.\n\nEliana's eyebrow arched higher than usual. She probably did not expect me to be so forward given the presence of her brother. She glanced in Nate's direction, his obscene hard on barely hidden by virtue of the angle he was standing. Then she took a long look at Tom's hard cock. Then Will's. Then she looked back at me, looked down at my cock, and smiled. Perhaps involuntarily, she licked her lips.\n\n\"Yes,\" she admitted without shame. \"I was jerking off in the hallway while you guys were all butffucking Acacia.\"\n\nI had her. \"Good girl,\" I replied. \"Did you get yourself off?\"\n\n\"I did.\"\n\n\"Oh my god,\" complained Nate.\n\nI smiled. \"Eliana, are you still sore from when I fucked your ass last night?\"\n\n\"WHAT!?!!?\" yelled Nate, as he turned back to face us in a rage, all efforts to hide his erection forgotten. \"You let HIM do THAT?!?\"\n\n\"Yeah shithead, I did,\" said Eliana. \"You expect me to just hang around while you're blowing your load all over Acacia? I get horny too, you know.\"\n\nNow Eliana was annoyed. This was perfect. \"Shut the fuck up or no second turn,\" I reminded Nate. \"Now answer my question Eliana.\"\n\n\"I am still a little sore from last night, Ben,\" replied Eliana. \"But I really liked your cock in my ass.\" She seemed to add the last part to spite Nate specifically.\n\n\"Good. Since you're sore I won't make Nate watch as I buttfuck you like I had to watch as he did it to my girlfriend. However, how many facials do you owe me?\"\n\n\"Well. I think since you got me twice yesterday, I have to take six more loads of your cum on my face this week,\" replied Eliana. \"Maybe seven. I forget.\" Nate buried his head in his hands in embarrassment. Will's eyes were wide.\n\n\"Wow. You fucked Eliana?\" asked Will, his hand subconsciously pumping at his erection. \"I've always wanted to do that.\"\n\n\"Same here,\" agreed Tommy.\n\n'Ughhhhh\" groaned Nate in exasperation.\n\nTake. Control. The mantra was in my head on repeat. I decided to go for it.\n\n\"How much do you love eating cum, Eliana?\"\n\n\"God, so fucking much,\" she replied without hesitation.\n\n\"Perfect. Then since at least a few of these boys have wanted a piece of you for ages, why don't you take you clothes off, get on your knees, and help my girlfriend drain as much pearly white jizz out of all of these hard dicks as you two can. For each load you get I'll take one off your tab.\"\n\n\"Okay!\" she agreed enthusiastically and whipped off her top. A minute later she was naked on her knees and had swallowed all of Will's five inches to the root.\n\n\"Holy shit dude, your sister sucks cock so good,\" said Will to Nate.\n\n\"Fuck you,\" said Nate to Will.\n\nJust then Acacia returned from the restroom and saw Eliana mid-fellatio. \"Oh goodie, I get help!\" she said, then joined her friend on her knees.\n\nThey knelt back-to-back, Will and Tommy in front of Eliana and while I was being serviced by Acacia. Nate stayed off to the periphery but did not leave the room.\n\nAcacia deep throated me for a good 15 seconds and then drew my member out of her mouth with an audible pop. \"Nate,\" she said. \"Come here, I want to suck your cock too.\"\n\nNate shook his head. \"It's weird with my sister here.\" Despite however 'weird' it might have been, Nate's erection had not flagged.\n\n\"Oh get over it,\" interjected Eliana as she rubbed Tommy and Will's penises against her forehead and cheeks at the same time. \"Just because these nice boys are all going to shoot their gooey loads on your big sister's face at the same time doesn't mean you shouldn't enjoy yourself as well.\"\n\n\"Yeah!\" agreed Acacia. \"Besides, I want to suck two dicks at the same time! Come on over here.\"\n\nDefeated, Nate trudged over next to me. His cock was a good two inches longer than mine, and thicker as well. I grabbed my cell phone to take pictures and Acacia took us both in each hand. First she alternated sucking one, then the other, then back to the first. Then, without warning, she tried to fit both of us in her mouth at the same time, pressing the heads together and swirling her tongue around them. It was the first time I had touched another hard cock, and the sensation was incredible. Nate and I groaned in pleasure. I took several pictures.\n\nAs Acacia resumed concentrating on trying to fit as much of Nate's monster in her mouth as possible, I texted one of the pictures of Acacia with her mouth full of multiple cocks to Clay, and captioned it \"I took control.\"\n\nSoon Tom, Will, and I started to rotate between the two available holes like we had in Acacia's previous anal gangbang, though Nate stayed planted in front of my girlfriend. Acacia and Eliana were cock-drunk, sucking and fondling anything that appeared in front of them. Tom, Will, and I also took turns getting blown by both cumsluts at the same time. Nate, once again, demurred. We took pictures of every conceivable combination. Two girls sucking each dick, each girl eating each other's pussy, each girl sucking two dicks, each girl on her knees surrounded by three dicks, and then (of course) surrounded by all four.\n\nNate complained when it was Eliana's turn to get photos of being surrounded by all four cocks, but he still ended up posing for the picture, the tip of his fat drooling penis a mere centimeter away from his sister's open mouth. Given where we all were and what we were all about to do, I wondered whether either sibling would succumb. Quite frankly I hoped they would. They did not.\n\nOnce the pictures were all taken and every fellatio fantasy was fulfilled, I declared it was time for the money shot. Acacia and Eliana knelt side-to-side, their faces pressed close together to provide the most pleasing target. The four of us stood nearby, pumping our cocks. I put my phone on video mode so as to capture all the gooey action.\n\nEliana and Acacia kissed and fondled each other, and said filthy slutty things to encourage us. \"I've never had two boys cum on my face before,\" said Acacia.\n\n\"Me neither!\" said Eliana. \"I can't believe we're going to take four loads all over us.\"\n\n\"Uggghhhh I can't wait for all that cum all over my slut face. I need it. I want it. I deserve it.\"\n\n\"We both deserve it. Give it to us. Empty your nuts all over my face and mark me as a whore!\"\n\nLike the earlier gangbang, Will was the first to break. \"I'm cumming!\" he shouted as he stepped forward and began streaming rope after rope of hot white semen all over the pretty faces of his best friend's sister and my beaming girlfriend. Will's cock might not have been the biggest but his load was impressive, coating each slut with at least 4 streaks of sperm on their foreheads and cheeks, and even one in Eliana's hair.\n\n\"My turn!\" said Tommy as he stepped in the firing line, waiving his spurting cock back and forth in an attempt to ensure even coverage. Like Will, Tommy's load was substantial, presumably due to all the edging we'd been doing in the preceding blowbang. When he stopped ejaculating both girls were caked with three or four loads worth of semen, and there were still two more to go.\n\nEliana wiped some stray cum off her breast and brought it to her mouth. As she tasted it, she masturbated herself to an orgasm.\n\n\"Don't eat too much of it!\" warned Acacia, her left eye pasted closed by jizz. \"I want to make sure we don't miss the chance to get pictures of all four loads on us!\"\n\nNate and I looked at each other, both obviously close to our own orgasms. But I was holding out. Acacia was my girl. Eliana was... sort of my girl as well. I wanted to be the last.\n\n\"Go ahead,\" I said. \"Blow your nut on my girlfriend's face. I want to see it.\" Take. Control.\n\nThat seemed to push Nate over the edge. He stepped forward, his large cock already spitting precum. \"Out of the way, Eliana! I don't want to get you too!\"\n\nEliana looked up at him, her face already covered in a thin layer of cream. \"It's OK,\" she said, pressing her head next to Acacia's. \"You can cum on my face too, little brother.\"\n\nAnd so he did, his first volley shooting straight into his sister's open mouth and splashing across her tongue, his next hitting her right between the eyes. Then, almost embarrassed, he tried to aim the rest of his copious load at Acacia, but the girls moved in unison to make sure the bulk of his incestual seed ended up deposited on the face of his cumslut older sister.\n\nThe scene was ludicrously hot and caused my own orgasm to overtake me. I stepped forward while Nate was still firing away and joined my load to the other three. I accidentally shot Eliana square in the eye. She instinctively moved her hand up to block it but in her blinded state she missed me and instead found her hand wrapped around the thick shaft of her brother's spurting cock.\n\n\"Oops,\" she said as she realized her mistake, though I thought it looked like she still gave it a couple quick tugs as it released the end of its load.\n\nI directed the rest of my volleys to both of their foreheads. I made sure to get some in their hair to give them the proper bukkake'd look.\n\nAs we all stepped back, both girls were absolutely covered. Everyone had their phones out by now, and cameras were snapping away.\n\n\"Now can we eat it?\" asked Eliana.\n\n\"Yes,\" replied Acacia.\n\n\"Finally,\" said Eliana. And so they did.\n\n....to be continued. "
    ],
    "authorname": "Raven04",
    "tags": [
        "anal",
        "facial",
        "sharing",
        "dominance",
        "gangbang",
        "blowbang",
        "cuckold",
        "sister",
        "cum eating",
        "ass to mouth"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-apartment-cumslut-ch-05"
}