{
    "title": "Wild Card Ch. 06",
    "pages": [
        "\"So, this is the guy who got our little Cory in trouble.\"\n\nI stepped out and shut the door behind me, staring down the largest of the three, in all his Mossy Oak camo and shit-kicker boot glory (was he going fucking deer hunting or some shit after this?), as he fucking smirked at me. Seen enough of this fucker's face to know I was looking at my boyfriend's oldest brother.\n\nAnd, I got his Cory in trouble?\n\nOh, hell no. \n\n\"Don't know what the fuck you're doing on my doorstep, but I just got my guy back together,\" I snarled, getting up in Connor-fucking-Jr's face, \"and fuck you if you think you're going walk in here and fuck it up.\" The man's eyes widened slightly at my challenge. \"You ain't getting in here, asshole, so you can walk your bigoted redneck ass back to your piece-of-shit breeder mobile and leave 'cause I swear to fucking God, you so much as make him frown, I'll\u2014\"\n\nHe turned his head, addressing the smallest of the three, probably Caiden, while keeping his eyes trained on me. \"I think I like this one.\"\n\n\"He's still a punk, but not bad,\" the slimmer man conceded.\n\nThe third man, Cameron, nodded, \"Better than that one guy he was seeing.\"\n\n\"Vickie's kid brother?\" Caiden asked.\n\n\"Yeah, Victor.\"\n\n\"The little shit.\"\n\n\"God, he was a shithead.\"\n\n\"At least his sister was hot.\"\n\n\"And those tits, man.\" Cameron held his hands in front of his chest as if squeezing invisible boobs.\n\n\"Damn, those were some nice tits.\"\n\n\"Could serve beer off them titties.\"\n\nThe middle brothers continued their asinine back-and-forth as I sized-up Connor. I was out-numbered, and two of them were bigger than me, but I was certain I could fuck at least one of them up before they took me down. I just needed to decide which brother to go after first. \n\nThe smirk on Connor's face made him a prime candidate.\n\n\"Wait, is he growling?\"\n\n\"Oh, shit. He is!\"\n\n\"Cory picked up a growler.\"\n\nConnor chuckled. \"Y'all better shut up before he goes full cholo.\"\n\n\"Dude, you can't say that!\"\n\n\"For real, man. He isn't even Mexican.\"\n\nIt was cold as fuck out here, but my blood was boiling. \"Motherfu\u2014\"\n\nA pair of hands forced their way between Caiden and Connor and landed on my chest. \"Whoa, 'Rain! Chill.\" The man eyed the brothers over his shoulder. \"Y'all coulda waited for me.\"\n\n\"Keenan?\"\n\nHe huffed. \"Yeah, these hooligans needed a mediator since our boy won't turn on his phone.\"\n\n\"Can you blame him?\" I asked, directing an angry glare at Connor-fucking-Jr. The camo-printed hoodie under his coat was expansive enough cover the side of a barn, with the blaze orange deer head logo visible for miles. Fucker was huge!\n\n\"Look, man,\" Caiden stepped in. \"We get it\u2014Mom and Dad\u2014\"\n\n\"Mostly Dad,\" Cameron groused.\n\n\"...Fucked up.\"\n\n\"Royally.\"\n\n\"Would you fucking stop?\"\n\n\"Stop what?\"\n\nConnor rolled his eyes and interrupted his brothers before they went off on another tangent. \"We just want to see our brother, alright. I don't give a fuck if he doesn't want to see me.\"\n\n\"Piss off,\" I told him.\n\n\"I drove\u2014\"\n\n\"Drive back.\"\n\n\"I'm not leaving until I talk to Cory.\"\n\n\"Tough titties, deer thug.\" I stared at him over Keenan's head, but remained in the doorway. \"No way in hell I'm letting you in there.\"\n\n\"Vato?\" The door opened behind me, and the man in question peeked out. I cursed Cory's bad timing. \"What's going on?\"\n\nKeenan squeezed by me and in the door. \"First, you're letting us in 'cause I'm freezing my goddamn nuts off. Then,\" he plucked Lola from his hands, \"Ima chill with Preston and Lola while y'all...\" he waved his hand in disinterest as he walked away.\n\nThe Card brothers took advantage of the distraction (and their advantages in size and number), to push me to the side so they could get in the house.\n\n\"What the fuck!\" I stomped in after them as well as I could in socks, fully intending to rip into my boyfriend's brothers, especially Connor, but pulled up short at the scene playing out in the foyer.\n\nBefore Cory could get in a word edgewise, Connor grabbed him and wrapped him in a massive bear hug that would have put my father's hugs to shame. \"I'm so, so sorry, Cor-Cor,\" he murmured quietly, and I had to swallow my jealousy as Cory cried on a shoulder that wasn't mine.\n\nCaiden and Cameron patted his back, obviously waiting their turn to comfort their brother, their quiet words of love and support mingling with Cory's stifled whimpers. While not the loud, heart-breaking sobs I had come home to on Christmas Day, his shoulders still shook. He'd needed me then, but it felt like I was just taking up space now.\n\nI tried to sneak past them, but found myself pulled up short.\n\n\"We owe you.\" Cameron flung an arm across my shoulders and mussed my hair. \"Big time.\"\n\nConnor met my eyes over Cory's head and gave me a brief nod. Caiden's hand landed on my other shoulder, and before I could get away, I found myself pulled into a four Card group hug.\n\n~*~*~*~\n\nGranted, I'd known Preston for only a few months, and mostly only knew him carnally.\n\nBut, I knew him well enough to know his \"Wolfie might need your help with that delivery\" was far from as innocent as he tried to make it sound.\n\nAnd, sure enough, within moments of the massive blond walking out, some hot guy walked back in holding his cat. \"Damn, Lola. You really are that tiny.\" He held her at eye-level. \"I thought you only looked small 'cause your daddies are huge.\" \n\nThick caramel hair that was a shade too dark to be considered blond, but still too light to be called brunette, contrasted with his fair skin. He had to be a few inches taller than Cory, but was more modestly built\u2014still an athlete's body, but not ostentatiously so. Judging by Gio's startled look of recognition (and Preston's knowing smirk), he was someone familiar to Cory's friends, but I still had no idea who the fuck he was.\n\nThe man plunked down on the recently vacated couch, kicking off his shoes and tucking his feet under him, something I'd associated more with Cory. \"Sup, Preston?\"\n\n\"Hey, Keenan.\" Preston grinned.\n\nThis Keenan person exchanged greetings with Gio, then arched an eyebrow at me. \"Tall as fuck, crazy hair\u2014you must be the Iceman.\"\n\nMy eyebrows drew down. \"Iceman?\"\n\nPreston patted my knee. \"Indie, this is Keenan, Cory's other, much straighter, best friend.\"\n\n\"What's going on, Preston?\" I asked.\n\n\"Something that shoulda happened already,\" Keenan groused.\n\nBefore I could be enlightened on what that something was, Efrain returned with three more Corys than I was used to seeing him with. Not exact carbon copies, but not far off\u2014the blond darker or lighter, the blue closer to stormy or clear sky. One had shoulders wide enough that he had to turn sideways, the way I had to duck, to get through most doors. The other two looked about Efrain's size, but were still pretty impressive. Not that I was really checking them out or anything\u2014just, you know, making observations. The brick shithouse had a wet spot riding one shoulder, and Cory's eyes were tellingly red-rimmed. I studiously ignored both, and no one else made mention of quiet sniffles and lingering dampness. Your brothers showing up after you'd been kicked out of the house was one of those times you were allowed to cry without losing your manly-man cred.\n\nCory and Efrain settled in the living room with their guests, who had been introduced by name (with their relation needlessly added\u2014I don't even think cousins could look that much alike). Cory and Caiden sat on the couch with Keenan, Cameron on the loveseat with Gio. Connor took over the other recliner, and Efrain sat on the couch armrest next to Cory. Lola, who had been patient with Keenan's attentions, let out a sharp mewl and wiggled out of his hands, crawling over laps until she was back with her boy.\n\n\"Yours?\" Cameron asked.\n\nCory nodded, watching the little fluff ball tuck herself into a shape that was one-part Great Sphinx, one-part tiny bread loaf. She surveyed the room, all narrowed blue eyes and feline condescension. \"Efrain got her for me.\"\n\n\"Oh?\" Cameron said.\n\n\"He got you a cat?\" Caiden said.\n\n\"He got him a cat.\" Cameron snickered at the oldest Card.\n\nConnor rolled his eyes. \"I can see that.\"\n\n\"Apparently,\" Preston said, \"Cory made puppy eyes at him in Pet Planet.\"\n\n\"I did not make 'puppy eyes.'\"\n\n\"Near enough,\" Efrain contradicted.\n\nFor whatever reason, Keenan, Caiden, and Cameron began choking on poorly suppressed giggles. I wasn't quite certain why, but Connor, rather than Cory, turned a brilliant red hue.\n\n\"Hear that, Connor?\" Caiden snorted. \"He took him to Pet Planet!\"\n\n\"He got him a cat!\" Cameron repeated, his voice cracking an octave higher with each word.\n\n\"Literal dream come true!\" Caiden stuttered out between laughing gasps.\n\n\"Y'all can shut the fuck up now,\" Connor growled.\n\nKeenan turned to Preston. \"Cory's had this little dream about his big brother getting him a kitty.\"\n\n\"That's so goddamn cute!\" Preston giggled, and I found myself drawn into their mirth.\n\n\"Only,\" Caiden interjected, \"Connor's had this fantasy about being the big hero brother and getting him that damn cat.\"\n\n\"So fucking killing you assholes later.\"\n\n\"Aw, he's jealous!\" Cameron mockingly pouted. \"Widdle Cor-Cor found a replacement!\"\n\n\"Looks like he doesn't need his favorite big brother anymore,\" Caiden said.\n\nConnor launched two throw pillows across the room. \"Fuckers better sleep with one eye open.\"\n\n\"Damn. Now, 'bestest brother in the whole wide world' wants to kill us in our sleep,\" Caiden laughed. \"Wasn't enough that big, bad boyfriend threatened to put our 'redneck asses' in body bags.\"\n\n\"Wait, what?\" Cory said.\n\n\"Yeah, your brothers decided to leave me behind while I was getting my shoes and coat back on,\" Keenan complained.\n\n\"Hey, not our fault you took them off,\" Cameron said.\n\nKeenan rolled his eyes. \"By the time I got there, Connor and Efrain were trying to out-alpha male each other on your doorstep.\"\n\n\"Told us to get back in our 'breeder mobile,'\" Caiden said. \"Fuckin' judging us because Cam's still driving Mom's old Suburban.\"\n\n\"Dude, me and that Suburban had some fun times.\"\n\n\"Before or after you whined about Cory getting Dad's truck?\"\n\nI gave Keenan a sympathetic look. \"The drive here must have been torture.\"\n\nHe shrugged. \"Desperate times call for desperate measures.\"\n\nCaiden shook his head. \"Gotta do something when shit goes down, but your baby brother won't answer the phone.\"\n\n\"And, before you get pissed at Keenan,\" Connor told Cory, \"He didn't tell us shit until we told him we already knew about Dad being a fucking shithead.\"\n\n\"We already knew you were bi,\" Cameron said.\n\n\"The Alonso incident,\" Cory said. \"I thought you said you wouldn't tell them about that.\"\n\n\"What are you talking about?\" Caiden asked. \"You told us you were into dudes\u2014when you were three!\"\n\n\"We were more surprised you ended up also being into chicks,\" Connor shrugged.\n\n\"I don't remember anything about this.\"\n\n\"It's true,\" Cameron said. \"You kept going on about this little boy at pre-K that you were so in love with.\"\n\nCaiden scowled. \"Little fucker ended up breaking your poor little heart.\"\n\n\"You were all crying 'cause he said your kisses were yucky, and he wanted play house with some little girl instead of with you.\" Connor's expression turned dark.\n\n\"Kid's fucking lucky he was too small to beat up,\" Cameron added. \"Of course, he's legally an adult now, so...\"\n\n\"Like I said, I remember nothing. Don't even have a clue who you're talking about.\"\n\nThree blue-eyed scowls tracked to the caramel-haired man at the other end of the couch.\n\n\"Me?\" Keenan squawked.\n\n\"Him?\" Cory sputtered.\n\nPreston fell over on my lap in a fit of giggles.\n\n\"Don't go thinkin' we've forgiven you,\" Connor growled. \"Goddamn punk.\"\n\n~*~*~*~\n\nAt some point in the near future, I think I will need to kill Preston.\n\nGoddamn Preston, who oh so helpfully mentioned that it would be better for us to have our brotherly heart-to-heart in the dining room as mine and Efrain's bedroom probably still smelled like hot man-sex, and that he wasn't sure when we'd last changed our sheets. \n\n\"They shared a room while we were out of town, but I know they didn't do anything. Probably have been going at it like bunnies since we returned.\"\n\nThe man seemed to derive way too much entertainment from poking the hornet's nest that was the tension between Efrain and my brothers.\n\nMy brothers exchanged uncomfortable glances as we settled around the table. For Preston's sake, I hoped they'd be able to look me in eye sometime soon.\n\nGio and Keenan helped Indie drag Twink-of-Doom off, but they insisted that Efrain stay for me. Caiden warned him that he was about to get a healthy dose of Frederick-Card family drama, but Efrain said he was more than able to handle it. Cameron then warned him that he was about to get a healthy dose of my Uncle Johnny, and Efrain said \"bring it.\" Connor rolled his eyes, and I felt even more unsure about letting Wolfie in on this little conference call, especially when I ended up in the middle of the on-going pissing contest between my over-possessive man and my over-protective brother. However, Caiden had set up his laptop and connected to Skype before I could voice my apprehension. \n\nHell, my brothers didn't even give me time to worry about why my uncle had insisted we call him in the first place.\n\nWithin moments, my uncle's face filled the screen; his dark hair and hazel eyes reminded me of Mom.\n\n\"Boy,\" he said, his voice like torn-up asphalt, \"before I say anything else, I gotta ask...\"\n\nI cocked my head in confusion. \"Yes, sir?\"\n\n\"Did you really tell your daddy you let half the town sodomize you over his saw horses?\"\n\nThe blood drained from my face then flared right back up, heating me up into the blush to end all blushes. \"I...uhm...\" I coughed a few times before I could squeak out, \"Something like that.\"\n\nDead silence fell over the room as I twiddled my thumbs, ducking my head under the weight of everyone's stares.\n\nThen Preston\u2014goddamn Preston, who I still think I need to kill\u2014peeked around the corner. \"Oh my God, Cory! You didn't!\"\n\nThat was all Uncle Johnny needed before he leaned back in his chair and about died from the loud guffaws shaking his frame. Soon, my brothers joined in, followed by Efrain and Preston, and I could swear I heard the others giggling from the hallway. Preston leaned against the door frame, saying that he just had to hear the rest, and my roommates and Keenan eventually joined him.\n\n\"Son, that was...that was the best. That son of a bitch was repeating all the shit you said to him like I was going to take his side finally, and it was all I could do not to laugh in his face.\" \n\n\"After we realized our parents weren't going to tell us where you were, we called in Uncle Johnny to put the screws to Dad,\" Connor explained. \"We didn't hear any of that conversation, though.\"\n\nUncle Johnny wiped tears of mirth from his eyes. \"Your grandma about pissed herself when I told her. I know she's old, but I thought I had a while before I had to put my momma in diapers.\"\n\n\"Jonathan Lee Frederick, I heard that, goddammit!\" My palms sweated at the voice shouting from another room on Uncle Johnny's side of the conversation. \n\n\"Gram knows?\" I wiped my hands on my pants, but couldn't seem to dry them. Efrain's warm hand folded over mine and squeezed.\n\n\"S'alright, kiddo,\" Johnny said. \"Even if we did have a problem with gays, we'd still take your side over your shit-for-brains daddy and his asswipe family.\"\n\n\"I thought you and Dad were friends.\"\n\nConnor chuckled.\n\n\"No boy should ever have to hear someone talk bad about his daddy, but fucking hell...\" My uncle's face pulled into a grimace. \"I'm sorry to tell you this, Cory, but your father is a grade A shithead.\" My brothers all nodded in agreement, as if this wasn't anything new. \"He was a shithead in high school, he was a shithead when he was dating your mother, and he's been a shithead ever since. Met him once when my team played his back in high school\u2014some self-important jackass bench warmer\u2014and thought I'd seen the last of him, only to come back on leave from Okinawa and find him dating my kid sister.\"\n\n\"I don't get it. All those times you got him to change his mind...\"\n\n\"Yeah, I told the fucker that I'd let him live as long as my sister was happy,\" he explained, \"but he was dead the moment she wasn't. He just needed to be reminded every once in a while that me and my buddies in the Green Berets know how to make bodies disappear.\"\n\n\"So, you've been making empty death threats this whole time,\" Efrain deadpanned. \"And it's still effective after all that?\"\n\n\"Who said they were empty?\" Uncle Johnny replied darkly. \"By the way, who's the guy? The 'goddamn dirty Mexican' your daddy said you were dating? He doesn't look Mexican. Puerto Rican, maybe a little Cuban.\"\n\nEfrain jerked his chin at the screen. \"Both. And, no one explained who you are either, old man.\"\n\nConnor's eyes bugged out.\n\n\"Efrain, meet our mom's older brother, Johnny,\" Caiden said with a snicker. \"Uncle Johnny, this is Efrain, Cory's boyfriend. He got in the first death threat.\"\n\n\"Damn.\" If anything, my uncle looked impressed.\n\n\"Get this, Uncle Johnny,\" Cameron added. \"He got him a cat.\"\n\n\"Bet Connor loved that.\"\n\n\"I think he's trying not to throw a fit right now because he doesn't want to make a bitch of himself in front of the new boyfriend.\"\n\n\"Y'all had to know Cory'd find a guy he could twist around his finger the way he had you three.\" \n\n\"Dude, Connor's the one that let Cory walk all over him,\" Caiden protested.\n\n\"Bullshit,\" Uncle Johnny said. \"He had all three of you doing his bidding, and you know it. You're lucky Cory didn't know how easy you were, or he'd have tried to get away with more.\" He addressed Efrain. \"If you want someone to blame for the doing-cute-shit-to-get-my-way thing Cory does, look no further than his brothers.\"\n\n\"He has a point, you know,\" Keenan said. \"How many hundreds of volunteer hours did you log with the Wrathburns, just so Cory could play with cats?\"\n\n\"Fuck you, man,\" Cameron said. \"That shit got me laid. Tell sorority girls that you take your kid brother to some old lady's house so he can pet a kitten and panties melt.\"\n\n\"'My baby brother is so cute, here's a picture of us bottle feeding these three-week-old kittens that some douche left on the side of the road,'\" Caiden said, affecting an innocent tone. \"'I keep this picture in my wallet 'cause I miss him so much.' BAM! I'm getting a blowjob.\"\n\n\"God, you two are sick,\" Connor said.\n\n\"Remind again me how you met your wife,\" Uncle Johnny said.\n\n\"Wasn't baby Cory sitting in her lap?\" Caiden asked.\n\n\"Damn,\" Preston said to Indie in a stage whisper. \"This is better than television.\"\n\n\"Oh yeah,\" Cameron continued. \"And let's not forget how Connor took her back to his dorm room years later, only to show her family photos instead of sealing the deal.\"\n\n\"Talk about a wasted opportunity,\" Caiden agreed.\n\n\"Ima fuckin' kill Tate for tell you fuckers about that.\"\n\n\"'Tate' nothing,\" Cameron said. \"Your roomie didn't tell us shit.\"\n\n\"That story's Delta Gamma lore, motherfucker,\" Caiden said. \"Even the DGs at A&M were going on about it.\"\n\n\"Shit, how much you wanna bet the DGs here talk about it like it's some goddamn fairy tale?\"\n\nPreston pulled out his phone and started typing up a message. \"There's some Delta Gams on the squad; let's ask them.\"\n\n\"So, who's the giggly pretty boy?\" Uncle Johnny asked, as if trying to wrestle the subject away from the \"girl bait\" squabble before it came to blows (again).\n\n\"Aw, he said I'm pretty.\"\n\n\"I don't think it was a compliment,\" Indie smirked.\n\n\"That would be Preston,\" Keenan said.\n\n\"The pin cushion-slash-peacock?\"\n\n\"Indie,\" Preston said as Indie's smirk dropped.",
        "\"That's short for Indiana, isn't it?\"\n\nThe corner of Efrain's mouth twitched like he was trying not laugh.\n\n\"What about the obviously straight one?\"\n\nGio introduced himself before muttering, \"And, Romero kept saying I'd be gay-by-association.\"\n\nKeenan waved. \"You know who I am.\"\n\n\"Unfortunately,\" Uncle Johnny replied with a huge grin, which my best friend returned.\n\n\"So, back to the matter at hand,\" I said maybe a little too testily\u2014I still hadn't wrapped my brain around my brothers' arrival and just kept getting swept further along.\n\n\"You want the whole audience?\" Johnny asked.\n\n\"Might as well.\" I sighed. \"At least one of them will listen in on it and blab the whole conversation once he gets a few drinks in him.\" I glanced over just in time to catch the hurt and guilt that briefly flickered across Preston's face before he could control it, and I realized that I was acting like a fucking asshole.\n\n\"You sure?\"\n\n\"They'll find out about it eventually. And, they already know the worst of it.\"\n\n\"Still can't believe you said that to Dad.\" Caiden shook his head in amusement.\n\n\"Oh, I believe it,\" Efrain said proudly. \"Should hear how he ripped into my brother and cousin over Thanksgiving.\"\n\n\"Cory's always had a pretty sharp tongue,\" Cameron said.\n\n\"Suggesting 'Big' Connor needed a forensics team to figure out whose sperm is soaked into his floorboards killed me.\" Uncle Johnny face split in a grin. \"And the bit about the guy shooting cum on the ceiling was pretty inspired. Your daddy was talking about burning the whole shed down.\"\n\nI scrubbed my hand over my face while my friends and brothers laughed at my crass behavior. \"Inspired, but stupid. I burned my damn bridges and guaranteed I no longer have a home to come back to.\"\n\nMy uncle sobered up. \"Listen, kid, you will always have a home to come back to\u2014mine.\"\n\n\"And mine,\" Connor added. \"Leslie would never forgive me if I didn't make that clear.\"\n\n\"My parents said pretty much the same thing,\" Keenan said. I swallowed hard, willing myself not to tear up, yet again.\n\n\"And, I wouldn't be too sure on those burned bridges,\" Johnny said. \"I know my sister; she loves you boys more than anything. She'll come around for you, Cory. Just give her a little time.\"\n\n\"Plus, we made sure they knew they'd lose us too if they won't accept you,\" Cameron said.\n\n\"Guys, just because...\"\n\nCaiden interrupted me. \"It's okay, Cory.\"\n\n\"What about Dad?\" I said.\n\n\"If he comes around, he comes around,\" Johnny said plainly. \"Honestly, he's fucked up too much in my eyes, and the sooner he's gone, the better. Especially after the last time.\"\n\nI looked at the computer screen in confusion. \"The last time?\"\n\nUncle Johnny took a deep breath. \"You sure you want to hear this?\"\n\n\"Just tell me.\"\n\nHe paused like he was trying to find the best way to put it. \"He pulled some shit when Elaine found out she was pregnant with you. Said you weren't his because he'd had that vasectomy.\"\n\n\"But, I am his son.\"\n\n\"It's obvious now that you're grown and you boys all look like him,\" Johnny conceded. \"But, not when you hadn't arrived, yet. He called her all kinds of shit, kicked her and your brothers out, saying they probably weren't his either.\"\n\n\"We lived with Gram for a little bit,\" Connor said. Keenan muttered under his breath as Preston covered his mouth in shock. Indie looked like he wanted to be anywhere but here listening to this. Even I wanted to be somewhere else.\n\n\"His judgmental bitch of a mother got in on it, too\u2014told my sweet baby sister that she was a whore and worse. They didn't even apologize when the paternity tests the asshole demanded for all four of you proved that you're his. God, I was glad you boys only got his looks 'cause the whole Card family is full of crap.\"\n\n\"I didn't know,\" I stuttered, feeling nauseated all of a sudden.\n\n\"We kept it from you,\" Connor said quietly, clenching his fists. \"Wanted to protect you from Dad.\"\n\n\"He was okay when we were younger,\" Cameron said. \"But, he changed when we came back home.\"\n\n\"We didn't want him to hurt you,\" Caiden continued.\n\n\"And, fucking Elaine was so relieved when he took her back,\" Uncle Johnny added. \"Did whatever she could to keep him happy so he wouldn't leave her again. Your momma could have done so much better than him, could still do better than him.\"\n\n\"Fuck, I knew your dad was a douche,\" Keenan said. \"I didn't think he was that bad.\"\n\n\"I take it that's why we don't visit Grams that much,\" I said weakly.\n\n\"The Frederick family 'lacks morals,'\" Caiden said.\n\nUncle Johnny harrumphed. \"Had more to do with the fight he started, and I finished.\"\n\nI slumped back in my chair. \"I never knew any of this. I thought Dad was just a little, I dunno, lukewarm, but... I don't understand.\"\n\n\"I'm sorry, Cory,\" Connor said. \"This might not have happened if you'd known how Dad really was.\"\n\n\"I'll admit, he got better,\" Johnny said. \"You all playing football made him proud.\"\n\nI closed my eyes, and swallowed hard. The issue wasn't that my father didn't want anything to do with me since I came out, but that he hadn't wanted me to begin with. He was 'proud' that I played football. Fuck that. He just liked reveling in the attention I brought him. The only thing I was good for was adding to his \"football dad\" status. Those goddamn pennants on his walls and the fucking coffee mugs to make him feel like big shit in front of the guys at work.\n\nConnor's hand squeezed my shoulder, and I opened my eyes. My friends and family watched me struggle with this new reality. Their stares, so full of concern and care, bore down on me, making the room feel smaller, suffocating.\n\n\"I need...\" I started. \"I need to not be here right now.\"\n\nAnd I bolted from the room."
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "holiday",
        "interacial couple",
        "comedy"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/wild-card-ch-06"
}