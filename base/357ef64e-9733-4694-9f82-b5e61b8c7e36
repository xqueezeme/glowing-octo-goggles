{
    "title": "Berry's Second Chances Ch. 01",
    "pages": [
        "Author's Note: This two-part story was motivated by a surprising number of nice people asking me variations of the following question: \"So whatever happened to 'Berry' from 'Strawberries &amp; Bubblegum'?\"\n\nDon't worry, you don't have to be one of these people, or even understand the question they posed, to find \"Berry's Second Chances\" entertaining. You just have to like hearing a story from a down-on-her-luck teenage girl who mistakenly let the first love of her life get away, only to be offered a much-deserved second chance.\n\nActually, as the title implies, Berry's going to get two second chances. But after what she's been through, she's deserved them both.\n\nA special thank you to the sassy and clever Darcy Sweet, whose knack for writing like me (but better) when I need help closing a plot gap still has me scratching my head sometimes. Darce, Aussie girls rock. Epically.\n\nTo all, enjoy. :)\n\n~*~ Chapter 01: One Girl, Two Loves, Same Family ~*~\n\n\"Hey Stace.\"\n\nMy heart near stopped at the sound. Was it her? Could it really be her? My mouth wouldn't work. I couldn't answer.\n\nAfter a pause, her voice continued uncertainly over the phone, \"Ummm, it's Heather. From school?\"\n\nGood god, as if she needed to explain. I knew who it was; I recognized her voice. I just didn't believe it was really her. I'd wanted to hear from her for so long that part of me was wondering if I'd conjured her up.\n\n\"Bub--,\" I stopped myself before I called her Bubblegum but just barely, \"Heather. Hi. Good to hear your voice.\"\n\n\"I'm in town this weekend. I was hoping we could, like, get together maybe?\"\n\nGet together. My stomach leapt, butterflies whirling in an excited swarm. Their ecstatic chorus sang from my middle: \"Bubble! Go. See her. Apologize. Fix. Mend. Reunite. Be brave. Be happy again. Be...\n\n...whole.\" The last word came with so much force that I nearly whispered it out loud.\n\nI'd been brave once, brave enough to start things with Heather, flirting carefully at first then building up to the teasing and toying and tempting needed to lure a heterosexual girl across what, for her, was a strange and scary same-sex line.\n\nHer lips may have moved first in the movie theater, pressing themselves softly, tentatively against mine in the flickering dark that reeked of stale popcorn butter, but in every way but literal, I'd led her to it, taken her hand and guided her down the rose petal-strewn path of young girl-girl love.\n\nSo much had happened since then. Was she? Would she?\n\nMy little fantasy deflated with her next cheerful words, \"For coffee. Catch up and chat?\"\n\n\"Sure...ummm that sounds...\" The words, 'awful,' 'terrifying,' 'heartbreaking' ran through my head but what came out was better, \"...great. That sounds great.\"\n\n\"Okay then, coffee at the usual place. I'll see you Saturday. Around seven?\"\n\n\"Yep. Around seven.\"\n\nShe hung up first. I stayed on the line, listening to the silence as I tried to wrap my head around what had just happened.\n\nBubble and Berry. Together. For coffee and chitchat and what else?\n\nOn Saturday, I watched as she trotted in the coffee shop's door right on time. Her lip quivered a little when she spotted me and smiled. I was kind of nervous too. It didn't help that she was even prettier than I remembered.\n\nHer brassy gold hair was woven into a long, tight braid that fell past her shoulders. She used to wear it that way when we played field hockey together. It showed off her face more. And her neck. Oh, her neck. I'd spent hours with my nose buried in her smooth neck, kissing, licking, nibbling.\n\nI choked down a little groan when she stepped into me smoothly and hugged me tightly enough to convince me she really was happy to see me.\n\nWe got our coffees and sat together on the caf\u00e9's loveseat to make some small talk: school, dorm life, drinking stories. As we chatted, her leg touched mine a few times and it made my heart ache.\n\nIn the first lull, I ventured a careful compliment. \"You look... good... you look good, Heather.\"\n\n\"Thanks.\" She smiled gently. \"You look skinny, Stace. Dieting?\"\n\n\"Running, actually. Tons.\"\n\nExercise was a new and safe topic and we traded work-out tips and stories, getting more comfortable. Our conversation drifted a little more easily into random topics.\n\nAs we talked, I waited for her to mention Hero, the large, quiet, older guy with the kind eyes she'd started seeing last year. Or Samantha, the petite and intense looking brunette that completed their storybook love triangle.\n\nWhen I couldn't wait anymore, I took the breath to ask after them, but it was like Heather read my mind. \"So... Sam and Hero say hi,\" she said quickly, eyes down in her coffee cup.\n\nCrud, they were still together. The sick weight that sank in my stomach was the once-hopeful butterflies clutching their little hearts and falling over dead.\n\nI plastered on my best happy face. \"Awww... that's nice. How are they?\"\n\nShe shrugged in a thoughtful attempt at looking casual, but her quick half-smile told me what I needed to know. It was the look of someone knee-deep in love and sinking deeper.\n\n\"They're good. The same. Sam's her own flavor of crazy. Hero tries to play the grown up, but we usually drag him down to our level. They came up to school to visit me last month and took my entire dorm floor out drinking. It was a ridiculous night. I only remember parts of it. Now my floormates want to know when my 'cool, older friends' are coming back again.\"\n\nHer smile turned lopsided, rueful with the memory.\n\n\"Awww... that's nice,\" I said again, even more awkwardly now that she'd shared her happiness.\n\nSuper, everybody's having fun. Except me. \"Ummm, so while you're away at school, Hero and Samantha\u2014\"\n\n\"Play house,\" she explained a little too quickly.\n\nMy follow up question was faster and deeper than our carefully casual conversation was supposed to get. \"Lonely?\" I regretted it the moment it flew from my lips.\n\nHeather's beautiful blue eyes widened then blinked a few times.\n\n\"Sometimes. It gets tough when... when I wake up at school... in the, uh, middle of the night and its just me.\" One of her hands wandered up to the end of her tidy golden braid and she fiddled with it, anxiously. If her hair hadn't been braided, she'd have twisted a stray lock around her finger in a nervous habit I'd once teased her about. \"You? Met anybody nice?\"\n\nI smirked and shook my head, mostly to shake off the pain of my dashed hopes for rekindling our romance. \"Nope.\"\n\nShe stopped fiddling with her braid and now her eyes glittered cryptically. \"Want to?\"\n\nI counted to three in my head to keep from screaming out loud. Please, for the love of god, don't toy with me, girlie. I'm barely holding my shit together over here. I swallowed instead. \"But you just... wait... what do you mean?\"\n\n\"Bobbie's been asking about you,\" she murmured over her coffee cup that she'd just brought to her lips. \"A lot.\"\n\nAhhh, Bobbie. Presto, the magic box opened and out came the white rabbit. Or in this case, the adorable kid brother. That's why we were here. Bobbie. He'd been nearly as cute as he was shy way back when and he'd kind of had a thing for me.\n\n\"Oh yeah? What's your hunky kid brother up to these days? I haven't seen him in ages.\"\n\nHeather started filling me in on Bobbie and I listened, already seeing where this was headed. I didn't need Heather's genius brain to figure out that I'd be going on a date with her brother sometime soon.\n\nThe foregone conclusion on the date meant I was free to split my attention while she talked. My eyes kept returning to a small table in the corner behind her. It was where we sat almost two years ago on the night we admitted out loud for the first time, so very carefully, that we wanted to be more than just friends. It had been a dangerous conversation. Coming out as gay in high school was like playing hopscotch in a minefield.\n\nAs Heather sold me on Bobbie's seemingly endless good qualities, I sank back into that night.\n\nShe was wearing a pale pink v-neck sweater, one of my favorites, soft and girly and picking up her rosy cheeks. She was clutching a jumbo latte cup with both hands for its warmth. Her gold hair was free and wavy, pulled to the side and draped forward over one shoulder.\n\nWhen two emo guys came into the coffee shop and I'd nodded at them and asked her if she thought they were cute.\n\n\"Uh uh,\" she'd shaken her head quickly, \"definitely not my kind of boys.\"\n\nI'd smiled and slid into my next question, the one I really wanted to ask, \"And what kind of girls do you like?\"\n\nI'd asked it in a jokey way then held my breath and looked away, afraid she'd see right through me if our eyes met. But Heather waited so long to answer that I finally looked back at her, wondering if she'd heard me.\n\nShe'd heard me. More importantly, she'd understood me. She was blushing and looking at me shyly over her latte when she gave me her soft answer, \"I think... I think I like the you kind, Stace.\"\n\nHallelujah. I'd nibbled my lip and smiled wider. \"Huh, what a coincidence.\" My muttered answer was a little lame but it was all I could think to say. Besides, it didn't really matter because we knew how we felt about each other now.\n\nFrom there it had been the kind of girlie romance that people write stories about. Right up until I fucked it all up anyway.\n\nThe current Heather snapped me out of my tender memory.\n\n\"...so take it easy on my little brother, okay? He's got it pretty bad for you, Berry... errr... Stace.\" She winced, almost like she'd been slapped, because she'd used her old pet name for me. I watched the blood drain from her face.\n\n\"Sorry, Stace, I didn't mean\u2014\" she started to apologize.\n\n\"It's okay,\" I stopped her with a gentle nudge at her knee with mine. \"I don't mind if you call me Berry. It's nice. If it helps, I've been calling you Bubble in my head all damn night.\"\n\nShe cracked a smile and some tension drained out of her as she nodded, \"It does help.\"\n\n\"And, yes, I'll be nice to your brother.\"\n\nWe talked awhile longer before Heather's phone buzzed with a text message. She checked it, whispered \"Sam\" then apologized and said she had to go. She pecked me on the cheek when we said goodbye. I snuck a slow, quiet sniff of her when she leaned in for the peck. She smelled the same, a little like a piece of fresh Dubble Bubble gum right when the wrapper comes off. There was a good reason I'd given her such odd nickname; she honestly smelled a little like bubblegum to me.\n\nOf course, with my sneaky sniff came more memories, ones of long and sweet and sweaty high school sleepovers in her bedroom with the door locked. There hadn't been much sleeping.\n\nWhen we did finally fall asleep it was usually spooned and naked in her little twin bed after making love until we were both too tired and too satisfied to move. My guest sleeping bag would lay empty and unused on the floor. Sunday mornings were my favorite, we'd wake up to the smell of coffee and her Dad's chocolate chip waffles.\n\nI blinked back tears. How had I let all of that go?\n\n\"Fuck you, Glenn,\" I muttered bitterly. My step-brother had taken more than my dignity the day he'd been about to rape me and Heather had thrown herself at him selflessly. Glenn had taken Heather from me. I'd hate him for that until my last breath. I'd hate my own family.\n\nI touched my cheek where she'd kissed me goodbye. Had her lips lingered? I couldn't tell. I wished they would have just once, to relive what we'd shared not that long ago. I watched Heather's little, cute bubblebutt sway slightly as she trotted across the parking lot to her small white car.\n\nI sighed and reminded myself she wasn't mine to ogle. Reuniting with Heather would take a miracle, and I didn't believe in them anymore.\n\n~*~*~ Part II ~*~*~\n\nThe good news is that miracles don't need you to believe in them. Two weeks later, things were already looking much better.\n\n\"How's your ice cream sandwich, Stace?\"\n\n\"Really frickin' good thanks, hehehe.\"\n\nAt nineteen, I was an adult by most people's standards, but there was something about eating ice cream sandwiches with Bobbie Miller that made me giggle like a little girl. I was too busy staring at my date to notice the melting corner of my sandwich and I giggled again as I hastily lapped off a few creamy, vanilla drips that slid down my wrist.\n\nBobbie Miller was very cute in a clean-cut, slim, trim, blonde hair kind of way. His eyes were a deep, deep blue, darker than his sister's and just as pretty.\n\nMaybe even prettier.\n\nMore importantly, Bobbie was the kind of boy I'd heard about but never actually dated -- an honest-to-god \"good guy.\" I didn't think they existed outside of Leave It to Beaver. This first date was turning out so perfect I found myself wondering if I'd somehow fallen into the archives at Nick-at--Nite.\n\nHe'd taken me for cheeseburgers on a Friday night. Chatting and laughing, our conversation felt easy, natural. I've never been good at talking about myself, but there was something about his sincere, undivided attention that made me want to open up. We had the same oddball sense of humor and he seemed really interested in me as a person\u2014not just as a potential gropee. He asked all the right questions about my family, about what kind of stuff I liked, and how my sophomore classes were going.\n\nWhen I leaned across the table and confided that I'd started training for a marathon and that I hoped to someday run the big one in Boston, he listened, really listened. He didn't tell me a marathon was crazy like my schoolmates and my Dad did; he just nodded and told me it was cool. Better still, he looked in my eyes as he did, not at the t-shirt stretched across my chest. He earned double bonus points for that since I fill out a top pretty well.\n\nAfter dinner, he took me to a local lookout spot to watch the sunset. When we parked and he got out of the car, I followed him around to his trunk and he popped it open.\n\n\"Cool.\" I nodded and smiled even as my heart sank at the sight of the styrofoam cooler in his trunk. Crud, I thought, beer. For the hundredth time I wondered why guys were so convinced that beer made a sorority girl's clothes fall off.\n\nStill, even as my disappointment brewed, I figured Bobbie was way ahead on points just based on dinner. If he wanted to get me a little tipsy while we hung out, I wasn't going to hold it against him. I mentally crossed my fingers, hoping that he'd packed something other than beer for me. I'd never liked beer that much and some of the slightly more civilized guys I'd dated had actually thought to pack a few girl-friendlier wine coolers.\n\nThe funny thing was, until Bobbie, I really believed that those boys were as good as it got. Wow, was I wrong. So wrong.\n\nWhen Bobbie popped open his cooler there was no beer. No wine coolers either. And no cheap rum for mixing with off-brand cola. In fact, there was alcohol at all.\n\nJust ice cream sandwiches. And fudgesicles. On a little pile of dry ice.\n\n\"What would you like for dessert?\" Bobbie waved his hand at the chilled stash and looked up at me with the sweetest smile.\n\nI laughed and gasped at the same time. It tumbled out as an embarrassing snorty sound -- the same one I used to make when I was little and I came downstairs on Christmas morning. It had been so long since a guy had surprised me in such a sweet way.\n\n\"What?\" His deep blue eyes shone with an honest and open innocence that reminded me of his sister. Heather had the same expression too.\n\n\"Nothing,\" I chuckled, \"one ice cream sandwich please, sir.\"\n\nHe grabbed two and passed me one. Then he had me laughing again because next he handed me -- and I'm not kidding here -- a napkin.\n\n\"Here, in case you get sticky.\"\n\nI took it, amazed, and teased him a little, \"Huh, I didn't think teenage boys knew about napkins.\"\n\n\"Hmmm, well, some of us do.\" He easily shrugged off my needling and I liked that too. Bobbie was comfortable in his own skin.\n\nHe shut his trunk and waved me to a little downhill path. \"Come on, I'll show you where there's a little stone wall we can sit on and watch the sunset.\"\n\nSo that's how we ended up sitting side-by-side on the little wall, nibbling ice cream sandwiches on a clear summer evening and chatting as we watched the sun go down.\n\nIce cream finished, the night air set in and Bobbie loosely draped his arm around my shoulders. \"I'm not being fresh, Stace, you just look cold. I guess I didn't think through that part of the ice cream thing.\"\n\n\"Or maybe you did think it through?\" I teased him again.\n\nThe side of his mouth hitched up in a cute smirk and he started to pull away.\n\n\"No, wait,\" I said stopping him and wriggling myself a little closer. I put my head on his shoulder and, feeling some nice muscle under his long-sleeved t-shirt, I gave a little sigh. Bobbie was a varsity shortstop; I should've guessed there'd be muscles under there. \"This is kinda nice. Can I ask you something Bobbie?\"\n\nHe nodded.\n\n\"How come you never asked me out before?\"\n\nI felt him tense. He cleared his throat before answering, \"Well, you're a little intimidating, Stace. Not a lot of girls look like you.\"\n\nNot a lot of girls look like me. It was his gentle way of saying I was pretty. Guys blurting things like \"Goddamn baby, what I'd do to you...\" had gotten old back in junior high school. I liked Bobbie's shy honesty. I hadn't heard anything so sweet and genuine in such a long time. Not since my simple little girl body had bloomed and things suddenly got a lot less simple.\n\nI'd been the first one in my class to get boobs and hips. They'd come on so fast that seven years later, it still felt sometimes like I was a girl trapped in a woman's body. Sure, I'd learned to tone it down with the right clothes, but there was no hiding it completely. Besides, dark red hair and pale skin meant I'd never really be able to blend into the background no matter what I wore.\n\n\"C'mon, Heather's gorgeous,\" I said, trying to shift the conversation away from me.\n\n\"Maybe,\" he admitted, \"but she's my big sister so she doesn't count. Heck, I remember when she had no front teeth.\"\n\n\"Really?\"\n\n\"Yep, they both came out at the same time. I called her 'Gummers' for a whole summer.\" He chuckled at his own memory. \"I'd forgotten about that. I'll have to remind her next time I see her.\"\n\n\"Do you talk to Heather often?\" I asked, hoping it sounded like an offhanded question. We were easing onto dangerous ground.\n\n\"Meh, she doesn't come home much. Her school is a few hours away and when she does come back it's usually to see her boyfriend.\" Bobbie's expression melted into a sad faraway look. He missed his sister a lot, I realized. They'd always been close.   \n\nMy relationship with my step-brother was epically fucked up. Glenn and I made Greek tragedies look like primetime sitcoms.\n\nBobbie's new vulnerability caused me to hesitate before asking my next question, but I just had to know what I was getting into with him. \"Does Heather ever, you know, mention me?\"\n\nI watched his face for a tell, my nervous hands blindly fiddling with the hem of my denim skirt. What did Bobbie know?\n\nI kept my eyes on him, watching him like we were playing poker. His face was smooth and relaxed after my question. His eyes didn't widen or dart. I was sure those were good signs, but he didn't answer either. Worse, he flipped the question back to me, \"You and Heather don't talk that much anymore do you, Stace? You used to be really close.\"\n\nClose?\n\nI almost choked. Yeah, you could say Heather and I had been close. If by close you meant in love. Those days were over though. And now I was on a date with her brother, one she'd arranged. There's a word for that and it's spelled \"a-w-k-w-a-r-d.\" Preferably in all caps.",
        "\"No, Heather and I don't really talk anymore,\" I sighed.\n\n\"You guys had a pretty big fight, huh?\"\n\n\"Kinda.\"\n\nIt was a shitty, evasive answer that Bobbie didn't deserve but it was way simpler than, \"Heather interrupted my step-brother about to rape me and she had sex with him so I didn't have to and when it was all over I was so ashamed that I told her I didn't want to see her ever again and I didn't have the guts to face her after that.\"\n\nYes, sadly the best thing I could do for Bobbie was give him my simple, shitty, evasive \"kinda\" answer.\n\nHis reaction surprised me. He didn't poke or prod or pry. He went the other way, the right way. He apologized \"Sorry Stace, that was rude. It's not really my business. That's between you and my sis.\" He squeezed me gently around my shoulders.\n\nI scooted closer until my hip pressed against his and leaned my head on his shoulder, grateful for the comfort he offered without question.\n\n\"Who are you?\" I asked softly. \"You're not nearly as...\"\n\n\"Immature as you'd figured?\" he blurted.\n\n\"I was going to say 'disappointy,' but I was pretty sure it wasn't a word.\"\n\n\"Thanks for the compliment. And tonight I think disappointy is a word.\" He squeezed me again and rubbed my shoulder.\n\nHow did he know what to say? I brushed my cheek against his shoulder. He was a guy, a man for sure, but even this close he wasn't scary. He was listening... and caring.\n\nI turned my face a little more until my nose was pressed into his shoulder, testing. My lips puckered all on their own and squished into the solid muscle shifting beneath his t-shirt.\n\n\"Uh, Stace? Did you just kiss my shoulder?\" he asked when I rested my cheek on him again.\n\n\"No.\" I lied quietly.\n\n\"Must've been my imagination, then. It's getting chillier. Want to head back to your dorm?\"\n\nI wasn't ready. \"Not yet. I'm good. My hands are a little chilly though,\" I hinted, successfully too because he quickly pressed his larger, warmer, rougher hands around mine.\n\nWe sat like that quietly for a long time. It was a comfortable quiet. It felt right somehow, being there with him.\n\nWhen we did finally stir and climb back into his car, we talked about getting together again the next weekend.\n\nI thanked him as he pulled his mom's car into my sorority's driveway, \"I had a great time. This was the best study break ever. Thanks again, Bobbie.\"\n\nHe pulled up next to the house's door and started to scoot out of the car to open my car door for the hundredth time that night. I stopped him with a hand on his arm.\n\n\"Easy champ, I'll open my own door just this once. You've been doing it all night. I'm a girl, not a cripple.\"\n\nI leaned across the armrest of his front seat to kiss him good night and he offered me his cheek.\n\nGod, he was sweet.\n\n\"Uh uh, for ice cream sandwiches, you're getting it on the lips, buster.\"\n\nI turned his cute face towards me and planted my mouth on his, no tongue, just a nice long, soft smooch. It was the kind of steamy but proper kiss that Beaver Cleaver would have gotten at the door on a date. It seemed appropriate.\n\nBobbie's eyes were still closed and his lips were still puckered out into thin air when I finally pulled away and opened my car door to leave. Not to brag, but I'm a decent smoocher. Then again, so was he. What was it with the damn Miller kids anyway? Were they genetically gifted in the nookie department or something?\n\n\"E-mail me about next weekend?\" I reminded him, already looking forward to mountain biking together.\n\nBobbie was still shaking off our smooch as I slid my way out of his car. \"Whoa, Stace, you, uh, you smell like strawberries,\" he whispered after I shut his door.\n\n\"I know,\" I said simply, flicking him a passable wink I'd been practicing in the mirror since I was twelve.\n\nI could have added something edgy like, 'Your sister used to like the way I smelled too.' I figured that'd be bad. I settled for a nice, safe, \"Good night, Bobbie Miller.\"\n\n\"Yes, it was Stacey Jenkins. Yes, it was.\" He waved and pulled away.\n\nI watched him go.\n\nHonestly, I'd been ready to take that boy to bed right then. And my body was screaming for it. Not for actual, 'appendage A' into 'slot B' sex, mind you. For some reason I'd never crossed that line with a guy. But there were plenty of other things I'd gladly do for him. One look at Bobbie's boyish smile and lean, hard body and my roommate would have understood if I nudged her out of our room for an hour or two of sweaty play time with him.\n\nBut I'd promised Heather that I would be careful with Bobbie. Besides, the slow, old-fashioned thing he had going on was really working for me. Bobbie Miller was a major keeper. Of course, his sister had been one too. I'd fucked that up something major.\n\nI muttered a quick prayer as I stepped into the house, \"Please dear God in heaven, don't let me fuck this up too.\"\n\n~*~*~Part II~*~*~\n\nTwo months after our first date, I surrendered to my own carnal needs and dragged Bobbie into my room after kicking out my roomie. I discovered another one of Bobbie's strong points, one that his sister had neglected to mention. Not that I expected her to know.\n\nRobert Miller was the proud owner of the largest penis I've ever seen outside of internet porn.\n\nSeriously, dude was packing.\n\nWe had kissed awhile, standing in the middle of my little room and his hands had cupped, stroked and teased me through my clothes to the point that he'd made me light-headed.\n\nI needed less clothes in the way. His and mine. Still smooching, I'd tugged him backwards with me towards my bed, sat him down, and together we'd eagerly wriggled his pants down off his hips. His boxer briefs moved with them.\n\n\"Oh. My. God,\" I whispered when his already-thickening thingie sprang free. I watched it lift itself slowly from his thigh, widening and lengthening as it rose until it pointed nearly straight up to the ceiling. It swayed heavily as Bobbie wrestled out of his shirt.\n\nI just stood there, crouched and staring between his legs, hypnotized by my new boyfriend's gorgeous cock.\n\nBobbie's voice snapped me out of my daze as he finished peeling his pants down. \"Wait, I'm not going to be the only one naked am I?\"\n\n\"Uh? What? No. Hell no. Scoot in, stud.\"\n\nBobbie spun onto his back and moved over. I joined him after my fleece top and shorts came off as fast as friction and my self-respect allowed. If I'd been thinking more clearly when I dressed for our date, I'd have pulled on some girlier underwear. He'd have to suffer with gray cotton tonight and a ponytail tonight. I'd slut it up for him next time.\n\nBobbie wasn't complaining. He turned onto his side and eyed me with a look that was equal parts hunger and amusement, \"Leaving your undies on eh?\"\n\n\"Yep. Now back to the gropey-gropey please.\" I drew his hand up to cradle my breast, his large palm was warmer without my fleece top in the way, nearly covering my entire oversized mound. He squeezed me gently and I moaned just as our lips met again.\n\nHe tasted like buttered popcorn and cola. The sneaky bastard had taken me to see not one, but two romantic chick flicks in a row that night. A mushy double feature. Now it was late, I was drunk on romance and even hornier than usual.\n\nAs we kissed, I snuck a hand down his flat stomach and touched... it. I mean, him. Whoa.\n\nThe last time I'd seen one of these things nearly two years ago, it had been poised to rape me. I had to get over this fear. Thankfully, Bobbie's lips distracted me, moving from my mouth to my neck, suckling gently at the skin he found there.\n\n\"Strawberries,\" he whispered.\n\nNow I was thinking of his sister. Better. But still not good. I squeezed his cock more firmly to remind myself who I was with. Boy. I'm with a boy. A sweet and funny and handsome boy. No reason to be scared.\n\nI stroked him gently, my wrapped fingers working up and down his impressive length. I knew how to touch him, I was a virgin not a prude. I'd had plenty of boyfriends in high school before... Bubble.\n\nDammit, back to his sister again.\n\nFrustrated with myself, I tugged his hand down off my bra-covered breast and slid it over my stomach. I wriggled the tips of his fingers under the waistband of my panties to make clear what I wanted.\n\nHe took the hint. Bobbie missed his calling. He should have been a musician. His fingers were insanely talented. He played briefly with my little tuft of fur then slid deeper into my gray cotton briefs, down into my cleft, toying, then parting. I snorted and twitched when he found my ready button.\n\n\"Piano lessons?\" I whimpered my question. He was driving me insane already.\n\n\"Guitar. Classical.\"\n\n\"It shows.\" I shivered as he tinkered expertly in my growing wetness. I realized I'd forgotten him and went back to stroking him up and down.\n\n\"Bobbie? Is it okay if we just... play? I'm not ready to... I mean, don't get me wrong, I'm ready, I'm beyond ready. I'm just not, you know... ready.\"\n\n\"No rush,\" he murmured into my neck, \"I'm enjoying this too.\" He slid his hand out of my undies and stroked my stomach, backpeddling for more foreplay.\n\nI giggled as I stuffed his fingers back into my panties, \"But play faster. I'm horny.\"\n\nHe snickered, his chest rumbling against mine. \"Gotcha. Think I can talk you into slipping these bottoms off? I could use some more room to maneuver down there.\"\n\nI didn't answer, I just lifted my hips and let him drag my underwear off me one-handed. With them off, I could spread my legs easier. The downside was that all that wetness meeting open air made for an unsexy chill. He let me cup his hand over my mound for a minute to rewarm things then went back to jillying me perfectly until a hot flush tingled across my cheeks.\n\nHoly smokes he had the touch, my butt was fidgeting on the bed as my excitement grew. This was just what I needed.\n\n\"Mind if I cum?\" I asked quickly.\n\n\"I'll race you,\" he gritted out through clenched teeth. Precum was pouring down his shaft by then and my hand had become a slick blur, flying up and down.\n\nI squeezed my eyes closed and enjoyed the little sparkles going off behind my eyelids. It was going to be a nice cum. I heaved into his hand eagerly, chasing the last morsel of pleasure I needed. He dipped a fingertip inside me and zipped back to my clit.\n\nThat did it. \"Fuuuuuuuh,\" I grunted and shuddered with the sweet relief of my climax. It was interrupted briefly by Bobbie's strangled groan announcing his orgasm. His cum jetted across my stomach, painting my belly and chest. I came with him, grinding into his hand as I milked his shaft.\n\nWe lay panting when it was over and staring into each other's eyes.\n\n\"Fuck. Me,\" I breathed weakly.\n\nHis eyebrow cocked up. \"I thought you... oh.\" He chuckled, realizing my comment was more compliment than invitation. \"We're all messy.\"\n\n\"S'ok with me, I like messy.\" I dizzily reached down for a blanket I kept folded at the foot of my bed and pulled it up over us. He threw his arm around me and pulled me tight when I twisted onto my side and pressed my rump into his lap. He was wet and sticky there but so was I; I didn't care. I wriggled until his half firm rod was caught between my cheeks.\n\n\"Is this an invitation to spend the night, Red?\"\n\nI kissed the back of his hand and chuckled. \"If you get up from this bed, I'll break your legs.\"\n\n\"Not a chance,\" he pulled me tighter, \"Everything I want is right here.\"\n\n\"Smart boy.\"\n\nI didn't remember falling asleep. I'd been so drowsy and warm and happy and I woke up that way too. But something a little extra had dragged me up from my sleepy fog. I realized what it was when I shifted and it made me panic and freeze.\n\nIt was Bobbie, specifically his erection, its warm tip was just nudging at my technically virgin entrance, poised to push inside.\n\n\"Bobbie?\" I hissed.\n\nI heard him breathing deeply and evenly. He didn't answer. Was he asleep?\n\n\"Bobbie?\" I hissed again, louder. I shifted my hips again.\n\nAgain, no answer. We must have moved together naturally in our sleep. I pulled away from him just enough to let his tip slip back and away from my drooling vagina. The feel of his smooth, hard head slowly slipping upwards made me snort softly into my pillow. He caught at my smaller, less virginal opening and a thrill ran up my spine. I froze again.\n\n\"Bobbie?\" I whispered.\n\nI reached down to touch myself, rolling my backside gently, feeling his tip kiss my backdoor. Our warm and sleepy cuddling and now this -- I was horny again. I could cum this way.\n\nI circled myself quickly and teased my own rear entrance with his tip. I felt the opening slowly begin to soften and relax. If I wanted him inside I had only to press back firmly, he'd pop through. The taboo image of waking him up with anal shot through me like wildfire. I bit my own lip, rubbed at my clit, and came, shaking.\n\nWow. I was still twitching when I pulled away from him to let his shaft nestle between my buns again. I was still amazed too. I had actually moved myself in my sleep to fuck Bobbie and nearly gone through with it.\n\nSo, the dashing Robert Miller had my head and my heart. Evidently my privates had just cast their yes vote too.\n\n~*~*~Part III~*~*~\n\nBobbie and I took things slow but it was really just a matter of time before I let him know it was okay to go a bit further. I took the direct approach this time.\n\n\"Stace?\" Bobbie whispered uncertainly when I pulled him off a riverside path and nudged him back against a tree.\n\n\"Shhhh,\" I hushed as I knelt down in front of him in some soft leaves.\n\nHe was nervous. \"We're in a public park, babe. You know... public?\" He wasn't nervous enough to stop me from unbuttoning his jeans though. I had to shake off my little red knit mittens to do it. Handjobs and mittens don't mix.\n\n\"I know, but we haven't seen anyone for over half an hour. Now pipe down. If you keep talking, you might attract some of that public you're so worried about.\"\n\nI wriggled my hand into his boxer briefs to fish for his hefty tool. When his girl-pleaser came free it was hot, warming my hands in the cool autumn air when I circled both around him. I paused to lick my hands to wet them then started tugging up and down gently. Bobbie was thick enough to fill my hands and long enough that there was some extra left over even in my double grip. Yep, my hunky snuggle buddy was damn well-equipped.\n\nIn fact, Bobbie's size was partly responsible for my hesitation on the whole actual sex thing. Sweet irony there, I would really, really appreciate his gift someday.\n\n\"Is it too cold for this, stud? Think you can still cum?\" I looked up, smiling as I tugged up and down on him smoothly.\n\n\"Maybe. Not sure.\"\n\n\"Want me to put him someplace warmer?\" I licked my lips.\n\nBobbie's eyes widened. \"Seriously?\"\n\n\"Yeah, why not? We can't risk frostbite on something this perfect.\"\n\nI focused on his thick cock, admiring it. It really was perfect. Circumcised. No gnarly veins. No odd kinks or weird freckles. Bobbie's tool was like a piece of art, long and thick and smooth and straight and warm and... I lapped at its purply-pink mushroom head... yep, delicious too.\n\nHe groaned appreciatively as I licked back and forth at the sensitive spot just underneath his head. Between his taste and his sounds of appreciation, I regretted not getting around to this earlier.\n\nI looked up into Bobbie's handsome face, pulling his big, deep blues into my gray-greens as my lips spread slowly, extra slowly, over his hot, wet tip. This was going to be fun.\n\n\"Jesus,\" he croaked when my mouth closed over his thick knob. I sucked lightly on it while snapping my tongue tip up and down at his tiny slit with a flicky snik-snik. I kept pumping him gently with my hands.\n\nI may have had reservations about the whole intercourse thing but I'd never had that many doubts about this. I'd forgotten how much I liked having a guy in my mouth. And I was seriously falling for this particular guy. He deserved this; he'd been incredibly patient.\n\nI was enjoying myself so much that a warmth in my belly stirred at the thought of him pushing inside me for the first time.\n\nSomeday, I promised myself, it'll be him. In fact, even if we broke up, I'd probably track his ass down and get him to fuck me when I was ready. I couldn't imagine anyone better to make love to the first time.\n\nI panted through my nose and slid my mouth down further over Bobbie. I had to drop one of my hands from his pole to make room for my downward progress. He hit the back of my mouth only halfway down his length and I gagged a little.\n\n\"Stace?\" he moaned with a mixture of excitement and worry. He tried to back away but couldn't because the tree was behind him. I'd planned it that way because I'd been worried too, worried that Bobbie's good-guy instincts might be too gentle for what I had planned. He needed help for this.\n\nHence the tree.\n\n\"Mmmhmmm,\" I assured him around a mouth chockfull of teenage boymeat. I gripped his jeans, still on his hips, and pulled him into me, rubbing his hot, throbbing tip at the back of my mouth, introducing it to my throat for what was coming next. I breathed slowly and deeply a few times, willing myself to relax. To open. To receive. The beginning was always the hardest part.\n\nI steadily pulled Bobbie's hips closer and pushed my mouth down at the same time. My eyes watered as I felt him probing once then twice at the back of my throat. On the third try, I fought down the urge to gag and swallowed instead like I was supposed to. And suddenly Bobbie slid into my throat.\n\nI froze, amazed. Probably even more amazed than he was. I'd never tried this with anyone his size.\n\nI blinked tears away and, with my jaw stretching to accommodate two-thirds of his shaft, I looked up at him to see how he was doing.\n\nHis eyes were shut tight and his head was shaking back and forth. \"Ohmygodohmygodohmygodohmygod,\" Bobbie babbled.\n\nYep, he liked it.\n\nI inhaled carefully through my nose to see if there was any room to breathe around him. Yeah, but only barely. I swallowed again, or tried to. I couldn't really swallow with him in the way. The rippling muscles along my throat probably felt pretty good for him though.\n\nI reached around blindly for his hands and found them. I had to pry them off the tree bark he was clutching. He opened his eyes and looked down at me in amazement as I steered his hands to my head. I groaned approval around his cock again when he laced his fingers through my hair just above each of my ears.\n\nI pressed his hands to the sides of my head firmly and looked up, willing him to understand: be in charge, it's okay.\n\nHe nodded and started pushing into my mouth further. One inch. Two. Three. Jesus, he was a big boy. I could feel my throat opening up around him as he worked deeper and deeper.\n\nThe intimacy of his hot, thick invasion made me picture having sex with him for the hundredth time. I didn't have a cherry; I'd been using a vibrator for years, just nothing his size. My poor little cookie would have to seriously open up for this monster. I'd probably be on crutches for a couple of days afterwards.\n\nMy mind raced. Would it be easier for me to be on top? To work myself down on his long, thick pole at my own pace? Or to lay down on my back so I could concentrate on breathing and relaxing while he drove himself deep into my belly?\n\nDistracted by my fantasy, I lost focus and sputtered before he bottomed out. We struggled to go in different directions, but not the ones you'd think. Bobbie fought to get out of my mouth. I wanted him in further.\n\nI won, but mostly because of the tree. They're perfect for hesitant boyfriends.\n\nBasically, I pinned Bobbie Miller's butt to a medium-sized oak and sank my lips down onto him with one long, determined push until my nose hit his soft blonde pubes. He smelled like soap and sweat with a woodsy, musky scent I'd liked from the first time I'd peeled his pants off.",
        "He shuddered as I started bobbing on him with his cock buried deep in my throat. I was getting a little dizzier with each plunge. I could feel his smooth shaft with my lips, the weight of him on my tongue, and his thickness in my throat. I kept bobbing and prayed he'd cum soon. I was out of practice and I couldn't go too long.\n\nAs it turns out, neither could Bobbie. The only warning I got was a strangled, \"Gaaah\" and his fingers twisting in my hair. He jerked into me automatically with his first spurt, smacking his smooth, muscled stomach into my nose hard enough to make me see stars as his cum began jetting down my gullet.\n\nStunned by the nose bump, I didn't start swallowing until after his second spurt. By then it was too late, I'd never catch up. His cum just kept pouring down my throat. I couldn't swallow fast enough which meant I couldn't breathe.\n\nNow I seriously needed to get off him if I didn't want to choke to death. I pictured a coroner explaining to my Mom that I'd drowned in cum. At least she'd be there at the morgue when she pitched over dead of a heart attack. That'd be convenient.   \n\nThe trouble with bailing out of my blundered blowjob was that now Bobbie wanted in while he was cumming. I didn't blame him, it's a guy's natural instinct to bury his seed deep and all.\n\nI may not have blamed him, but I still needed air.\n\nI felt bad about it, but I sank my nails into his hands to get his attention while I pulled away. His shaft kept pulsing while I dragged my mouth off him, choking and gagging like an inexperienced high school girl. During those three or four seconds of my hasty retreat, Bobbie kept cumming and I gulped frantically for dear life. I lost track of how many times.\n\nOh yeah, he'd liked it.\n\nI got my mouth off him just after he pumped his last spurt. I fell back onto my butt with a soft plunk, gasping for sweet, cool autumn air and looking up at Bobbie.\n\nHe was gaping down at me, his shiny, still-hard cock bobbing out there in the open.\n\n\"Heh, I think I'm a little rusty,\" I piped bravely, swallowing the last bit of his thick saltiness that had ended up painting my tongue, still gasping while I grinned. \"I'll do better next time.\"\n\n\"Better?\" he chuckled, tucking himself away then falling to his knees in front of me.\n\n\"Yeah, I just need a little more practice,\" I panted.\n\nHe rummaged in his coat and handed me a tissue.\n\nI took it and it made me think of how he'd handed me a napkin on our first date, \"How come you always have what I need to clean myself up?\"\n\n\"I dunno, maybe you look like the kind of girl who gets sticky.\" He squeezed my knees tenderly. \"Or snotty.\" He smirked as I wiped my nose.\n\n\"Not to gross you out, but the stuff coming out of my nose isn't snot, Goo Boy. We might need to have one of your balls removed so you don't end up drowning me someday.\"\n\nHe chuckled as he came to sit down next to me. We laid back and stared up at the naked treetops together.\n\n\"I love you, Stacey Jenkins,\" he said to the trees.\n\nIt wasn't the first time he'd said it. Or the second or the third. But for whatever reason, I don't know, oxygen-deprivation maybe, it really hit home extra hard and I sniffled when I answered him, \"I love you too, Bobbie Miller.\"\n\nHe handed me another tissue and I wiped my nose again.\n\n\"So was that one snot?\" he chuckled.\n\n\"Yeah, it was snot,\" I admitted. Honesty was the best policy. \"But don't ruin the romantic moment, dummy.\"\n\nI kissed him and he kissed me back and we rolled in the leaves.\n\nYep, I loved him.\n\n~*~*~Part V~*~*~\n\nI was thinking of that day in the park and it made my heart swell as I stepped inside the suite of a romantic little bed and breakfast, nudged gently forward over the threshold by Bobbie's hand on my rump.\n\n\"Go on,\" he urged me, \"get in there, you're going to like this.\"\n\nHe was right. Who wouldn't? I padded inside, marveling. It was part of a converted barn, with ancient wide beamed floors polished to a bright shine and an enormous stone fireplace already lit with what looked like half a tree. Up a bent staircase, in an open loft was a huge canopy bed.\n\nThat's all I remember because when I spun to hug Bobbie for finding such a beautiful place he was down on one knee. He was holding up a small, black velvet box that he'd just cracked it open. There was a ring in it, a little one, but it was the most beautiful ring I'd ever seen.\n\nBecause it was for me.\n\nMy knees went rubbery and I blinked back tears.\n\n\"Stace, I know what I want. And it's you. Marry me?\"\n\nI'd be Mrs. Miller! Mrs. Robert S. Miller!\n\nI wasn't even sure how the hell it happened. I mean, we hadn't even had full-on sex yet. I'd been chickening out and Bobbie-the-gentleman had been letting me. He'd been unbelievably patient and gentle and honest and...\n\nHonest. My heart twisted. Crud, I had to tell him about what happened between me and his sister. I had no choice. Loving someone, really loving them, meant being honest. I couldn't keep it from anymore.\n\nKnees knocking, I bit my lip and tucked my loose red hair behind my ears for battle. This could very well be the end of our storybook romance. \"Bobbie, honey, put down the ring. We need to talk.\"\n\nHe was just as confused as he should have been. \"About what? Yeah yeah, we're a bit young but we talked about that already. I love you. You love me. We make each other happy.\" His head cocked uncertainly, \"Wait, you are, uh, still happy right?\"\n\n\"Yes honey, very happy. I just... there are things... things you need to know before you sign up for a life with me.\"\n\n\"Mmmm, you used to be a man?\" he ventured with a lopsided grin.\n\n\"Ewww, no!\" I yelped. But I laughed too, amazed for the hundredth time how he could keep his sense of humor under stress.\n\nWhile we were still laughing, I just lit my stick of dynamite and threw it, \"Sweetie, I slept with your sister.\"\n\nI didn't get the reaction I expected. Bobbie kept laughing.\n\nI tried again, more clearly, \"Honey by 'slept' I mean sex. A lot of it. We weren't just friends when we were in high school. We were lovers.\"\n\nNow he only laughed harder, so hard his face was creeping up on, well, fuchsia.\n\n\"Yeah, I know!\" he wheezed, still laughing.\n\nOkay, now I felt stupid. \"Wait, what? How long have you...\"\n\n\"It's okay, Stace,\" he managed finally, wiping tears from his eyes. \"Heather only told me last week when we went shopping for your engagement ring. C'mon, I'm her baby brother. Of course she's going to look out for me.\"\n\n\"Oh. Well. So... so you're okay? I mean, with the fact that I was in love with your sister?\"\n\n\"Was? Don't love her anymore?\"\n\nThat was the magic question that I'd been wrestling with for months. \"Well, yeah, but in a different way now I think. I mean, if I say 'yes,' Heather will be my sister right?\"\n\n\"Yep. And take my word on it, she's very lovable as a sister too.\" His eyes were bright and shiny with a joke I wasn't in on but I let it pass.\n\n\"So we're cool?\" I asked finally.\n\nHe nodded and I felt better, like a weight had been lifted. \"Good, I don't want secrets between us, Bobbie. A marriage needs a clean start.\"\n\nI reached for the engagement ring box he was holding but it drifted further away. Bobbie had lowered his arm.\n\n\"Uh, so, no secrets?\" he asked, looking up at me with his eyebrows knitted together.\n\n\"Nope, no secrets. Now gimme the ring, studmuffin. I'm going to say yes then you're going to carry me upstairs and we're finally going to fuck me stupid.\"\n\nHe smiled but set the ring box carefully on the floor and exhaled carefully. \"No secrets at all, Stace?\"\n\nI smirked. \"Oh please, let me guess, you cheated on a math test in fifth grade?\"\n\n\"No, no... I've never been a cheater...\" he trailed off.\n\nThe trailing off part was what made me worry. \"Then what, Bobbie?\"\n\n\"Stace, I... uh... I slept with my sister too.\"\n\nI snorted and smiled. It was a joke. A sick one, but still a joke. Right? I searched his face, waiting for him to smile too. When his big, deep blue eyes looked up at me finally, tense and anxious, the room spun. My heart thudded in my chest.\n\nI felt my mouth open and close a few times, but no sound would come out. I tried again. \"Whe... whe... whe...\" I couldn't even form the one lousy word I wanted.\n\n\"When?\" he asked softly.\n\nI managed a nod.\n\n\"After you and Heather broke up. Before you and I started dating. It was just once.\"\n\nHe waited patiently for me to digest it.\n\n\"Your idea or hers?\" I whispered hoarsely.\n\n\"Hers. Samantha and I had kinda finished and my sister got all sentimental and...\"\n\n\"Wait, Samantha? As in Heather's Samantha?!\" Alarm made my voice high-pitched and it cracked at the end of Samantha's name.\n\n\"Well, yeah.\"\n\n\"You had sex with Samantha too?!\"\n\nOne of his eyes twitched. \"Mmmm, mostly,\" he dodged.\n\n\"What do you mean by 'mostly'?!\"\n\nWhen his mouth opened to explain, I held up my hand. \"Stop,\" I sighed, \"on second thought, please don't answer that.\"\n\n\"Oh God, thank you,\" he exhaled again with visible relief.\n\n\"Just please tell me that their boyfriend knows? Seriously, we're going to fucking drive over there and tell Hero tonight if you say no.\"\n\n\"Yeah,\" Bobbie winced again, \"Hero knows because he was uh... there. At the time.\"\n\nI let my head fall into my hands. \"Right, of course. An orgy. Super.\"\n\n\"Sorry. Look, it was just the one time and, if it helps, the whole idea was to give me a crash course in sex so I'd have a clue if and when you and I ever got together. I was terrified I'd do something clumsy and stupid with you if I got the chance. I was a...\" -- even now he danced around the word 'virgin', what was it with guys? -- \"I'd never had... sex before,\" he said finally.\n\nThis was all too much. My heart was pounding in my chest so loudly it felt like I couldn't hear anything else. Bobbie was my sweet, innocent boy. I couldn't picture him, didn't want to picture him, twisted up in some depraved four-way sex pile.\n\nI could feel my palms getting sweaty where they pressed against my cheeks as lurid images popped into my head one by one. I fought to push them away.\n\nMy salvation was in the middle of what he said -- a little ray of hope that was going to get me through this whole thing. Bobbie did it for me.\n\n\"Seriously?\" I finally asked through my fingers. \"You... you did it for me?\"\n\n\"Well, yeah. I didn't want to make an ass out of myself, or worse, hurt you if we ever hooked up.\" When he said it his voice was steady. I peeked and his face was open and honest in the way I'd come to take for granted - the sweet Miller way.\n\nFor the love of god, this family was going to be the death of me.\n\nEh fuck it, I sighed. If you can't beat 'em, join 'em.\n\nI sniffled and wiped my face. \"Take me upstairs right this minute, Robert Miller. Get me out of this stupid flowery dress and do me. I'm marrying your ass.\"\n\n\"Wahoo!\" Bobbie cheered.\n\n\"Wait! Don't forget my ring!\" I giggled as he slung me over this shoulder. He snatched it off the floor and bounded up the stairs to the room's loft with its big canopy bed.\n\nHe gently set me down sitting on the bed and helped me out of my dress, lifting it carefully over my head. As exciting as all of this was, I was still a little worried about my first time.\n\n\"Bobbie? Careful honey? We've talked about this. You're kind of big,\" I said over my shoulder.\n\nHe nodded. \"We'll take our time. We'll take all weekend if we have to, okay?\"\n\nI turned to face him.\n\n\"Oh wow,\" he murmured, eyes roving over my half-naked body in miniature black, lacey underwear. It stood out against my pale skin. His big blues leapt inevitably on my chest. The bra was a push-up demi and my jumbo, porcelain boobs were practically up at my chin.\n\nBobbie was definitely a boob guy. It made me smile.\n\nWe'd been together for several months and he still looked at me with the same little-boy glee that he did when I first stripped down for him. Still, I wasn't taking any chances that day, so I'd gone a little over the top with the push-up bra. Glee insurance.\n\nI watched him undress as I scooted to the middle of the big bed. He followed me, wriggling out of his pants and shirt as fast as he could. His familiar warmth pressing against me somehow calmed me and excited me at the same time. We were really going to do this.\n\n\"Feel like losing those cute little undies?\" he asked softly. His tender voice didn't match his eager grin.\n\n\"Yeah.\" I nibbled my lip and nodded.\n\nHe hooked his thumb into the slim waistband of my panties at one of my hips and slowly started tugging them down. I helped with the other side and lifted my butt up as he dragged them down further. I turned to watch his face. His eyes widened when my little red-furred mound was free to ogle.\n\n\"Never get tired of that,\" he whispered.\n\n\"Better n-n-not,\" I stammered already because his warm fingers replaced my underwear, cupping me and stroking softly. God bless his guitar tutor. Heat prickled at my chest and neck and cheeks and I knew I was turning my tell tale red.\n\nHe'd left my undies around my knees. For whatever reason, Bobbie had always liked it when my panties were still on. He'd eaten me into a shivering puddle last week that way, bending me over my dorm room desk after spreading my legs with my underwear stretched between my ankles.\n\nIt had been the perfect morning with one small flaw. I'm fair-skinned and when my boyfriend makes me cum so hard, twice, that I'm squeezing dents in the edge of my desk it's really, really obvious what I've been up to when I show up for morning lecture. My face was raspberry red all morning.\n\nBobbie explained his plan to take my overdue virginity as his fingers pressed between my outer lips and started stroking up and down my slit gently, just barely brushing my clit at the top of each stroke, \"I'm going to tease you a little, Red. Excite you. Think that'll help your first time?\"\n\n\"Yeah,\" I whimpered, his fingers already driving me a little crazy.\n\nExtra lubrication couldn't possibly hurt. Bobbie's cock was well-above average. At least I wasn't too nervous for things to work properly down there - I was sailing past moist and well on my way to seriously soggy.\n\nHe circled my opening with a thick fingertip several times then pressed it inside.\n\nI tensed. I don't know why I tensed. Bobbie's fingers had been inside me plenty of times before. This felt different though. Knowing that his fingers were just paving the way for his giant thingie heightened everything.\n\nHis fingertip stopped its teasing and slipped out to wander back up through my slickening folds and swirl over my clit.\n\n\"Bra. Off,\" I pleaded as he kept toying with me.\n\nTogether, we peeled it off me. I could breathe better without it. My ivory tits with their damned inverted nipples lazed on my chest, free of their black lacy prison. Much better.\n\n\"Bobbie, would you?\" I didn't have to say what I wanted. Bobbie knew.\n\nHe leaned down and nuzzled the curved side of my breast, pausing to blow a warm breath across my nipple.\n\n\"Don't tease me,\" I whined.\n\nHe chuckled into my boob, \"Uh, that's exactly what I said I'm doing.\"\n\n\"Okay, but not too...\"\n\nI didn't finish my complaint because Bobbie pressed his outstretched tongue down into my nipple, gently drilling it down into my breast. My absolute favorite. It sent tingles up my spine.\n\n\"Huh huh huh,\" I moaned and panted. His fingers in me. His mouth on my breast. I felt myself swelling and slickening even more. I could cum like this. He'd done it to me hundreds of times before.\n\nIt was like the cute bastard read my mind, \"Sorry, can't let you cum, Love. Not yet.\" He went back to teasing my boob, swirling licks around my puckered aerola.\n\nThe rising heat made me sassy, \"Don't make me change my mind about marrying you.\"\n\nHis finger found my opening again and I lifted my hips to meet him.\n\n\"What's the biggest thing you've ever had inside you?\" he wondered.\n\n\"Two of your fingers,\" I admitted breathlessly. Then, for fun, I decided to mess with him a little, \"Or maybe three of your sister's, it's pretty close.\"\n\nHis eyes widened. I'd guessed correctly that he'd like hearing about sex with his sister. Typical boy.\n\nWell, I certainly had plenty of material. \"She would make me cum a few times with her mouth, Honey. Then she'd fuck me with her fingers afterwards to finish me off.\"\n\n\"Is that right?\" he murmured. He sank his thick finger deep inside me, twisting it gently. I bore down on him and his eyes glittered at my inner squeezing.\n\n\"Mmmmhmmm, when she really got me going she'd wriggle her thumb up my butt at the same time. Your sister was amazing in bed.\"\n\n\"No toys though? No dildos? No strap-ons?\" he wondered out loud.\n\n\"We weren't that... kind of...\" I was panting openly now as he toyed with me expertly, \"...of lesbians. Kissing. And licking. Fingers too. No toys.\"\n\nBobbie slid his finger out of me and traced it up to my now insanely sensitive clit for several good twirls. I could feel my toes begin to tingle.\n\n\"Ah ah ah, no cumming,\" he chuckled between laps at my breast. He eased off to just barely brush my clit, teasing me.\n\n\"Bastard,\" I whimpered, bringing a hand up to cradle my free boob. I was so turned on even my own touch felt good as I thumbed my pebbled nipple.\n\nHe lifted my closer leg with a hand under my knee and curled himself into me tighter. I felt the hot, giant tip of his cock slide up the inside of my thigh, leaving a wet trail of his juices as it went. His hand centered it gently between my lips and I my breath locked in my chest.\n\n\"Easy,\" I blurted nervously.\n\n\"It doesn't get any more careful than this, Stace. Want me to scoot down between your legs and nibble you a little? Think it'd be better if you cum first?\"\n\nI was torn. \"Yes. No. Fuck it, keep going. I want you.\"\n\nHe left himself nudging softly against my lips and went back to touching me, rubbing gently back and forth across my clit. When my butt wriggled a little all on its own, he pushed with his hips carefully. His push was just hard enough to split my lips and tease my opening with his mushroom head.\n\nHe felt hot and hard. And big. Ready to push inside. I froze, fighting down panic.\n\n\"Relax, Love. Breathe,\" he murmured. He kept touching me and went back to drilling his tongue into my boob.\n\nI could feel wetness dribbling down from where we met between my legs. The little droplets tickled as they slid through my butt crack before wicking into the sheet beneath me. Whether it was his wetness or mine I couldn't tell. Probably both.\n\nHe continued touching me slowly, just enough to keep me insanely excited, but not enough to cum. He had me dancing on the head of a pin. I was light headed and dizzy and horny enough to overcome my fear. I wanted more of what he offered.\n\n\"Maybe... maybe push a little harder?\" I pleaded softly.\n\nHe nodded into my tit and gingerly, so gingerly, pressed with his hips more firmly. I could feel my little hole straining. Owie owie owie. I grimaced as the pressure mounted. I should have picked a guy with a smaller dick for my first go. This wasn't easy.\n\nMy free hand flew to his hip and I squeezed him. My fingernails sank into his skin as I felt myself spreading slowly. Each time he pressed harder, I clawed him harder.\n\n\"Dammit Stace, you're tight,\" he groaned.\n\n\"Tighter than your sister?\" I gritted out through clenched teeth.\n\nHe snickered into my boob,\"Wow, you're sick.\"\n\n\"You're the one that fucked your own sister,\" I sassed back, gasping as he drilled himself a little harder at my reluctant hole.\n\nFor a brief, terrifying moment I pictured him tearing me. Me screaming. Blood everywhere. Not romantic. I pushed those thoughts out of my head and kept talking.\n\n\"Bobbie? You didn't answer my question.\"",
        "\"Yes, you're tighter than my sister. Happy?\" he pushed a little harder again while he rubbed my clit a bit rougher too. If this kept up, he'd make me cum before we even got his fat thingie in me. Or I'd pass out from the dizzy mix of pleasure and fear.\n\nThat's when Bobbie did the best possible thing he could -- he distracted me, but in a wicked way, \"But you're not as tight as Samantha's ass.\"\n\n\"What?!\" I yelped.\n\nThat's when he drove his cock into me. My first one. With a pop that raced up my spine, his mushroom head was inside me. Holy hell, he felt huge.\n\n\"Aaaah,\" I gasped. And I came. I came because he'd teased and toyed with me perfectly. I came because it was ecstasy and agony at the same time. I came picturing my fianc\u00e9e spearing his oversized tool in and out of Samantha's miniature dancer-ass.\n\nSneaky bastard. Brilliant bastard.\n\nBobbie held perfectly still as my insides heaved out their first cock-delivered orgasm. I could feel myself squeezing spastically, either trying to draw him in further or push him out, I didn't know and I didn't care. I was too busy cumming my ivory white rump off.\n\n\"That was dirty pool,\" I whispered when it was over and I'd come back down, only then remembering to release my death grip on his hip, rubbing the dents I'd left. His tip was still wedged inside me.\n\n\"Sorry,\" he offered. It was a thin apology though, when I looked over at him, his smile said he was proud of himself.\n\nI didn't want him dreaming of Samantha's perfect little keister too long. \"I'll let you do that too, you know.\" I licked my dry lips and twitched my nose naughtily. \"Anal, I mean.\"\n\n\"Yeah?\"\n\n\"Mmmmhmmm, believe it or not, I've actually done that a couple of times before.\" I saw his mouth open but stopped him. \"Don't ask. Bad stories. They'll spoil the mood.\"\n\nI stroked his hip gently again where I'd clawed it. \"Make love to me now, Bobbie? I think the worst part's over.\"\n\nWith some very careful maneuvering, he was on top of me without us separating -- missionary -- and I felt a man above me for the first time. I think I might have been scared if the man wasn't Bobbie. It was a new and vulnerable feeling, being pinned to the bed like this by a guy. He outweighed me. Outmuscled me too. He could hurt me and I wouldn't be able to stop him. I'd never felt so helpless before.\n\nAnd because Bobbie knew me, he read the thoughts whipping through my head. \"You okay in there?\"\n\n\"Yeah. Just spooked for a sec.\" I smiled up at him and ran my hands along his arms to feel the ridges of his toned triceps that supported him over me.\n\n\"C'mon,\" I hunched my hips up gingerly, pushing myself onto him a little more. \"What're you waiting for? More please, sir,\" I said playfully.\n\nHe snorted. \"Alright, you asked for it.\"\n\nWe didn't talk for the next couple of minutes as we both carefully worked Bobbie's cock deeper into me. He pushed up, I wriggled down. There was lots of backing up, wetting his long shaft for easier entry. Really long shaft.\n\nI concentrated on relaxing, opening up. Whenever I tensed, things got worse. He was soon crazy-deep inside me, spreading me and stretching me in places I didn't know I had. I could feel his tip prying apart my insides somewhere up near my bellybutton\n\nI was just starting to worry that he was going to poke a hole in some vital internal organ when his warm, furry nuts nudged my butt. After a moment's pause, he started to draw himself out carefully. I could feel myself suctioned onto him so tight I felt glued to him.\n\n\"Wait,\" I squeezed his arm. \"Stay. I like this, a lot. I like you inside me just like this. Come on down here and kiss me a little?\"\n\nHe smiled and his big, deep blue eyes sparkled. He leaned down and kissed me. I kissed him back, our tongues slipping from his mouth to mine and back again.\n\nThe kissing helped. It took the focus off his gigantic rod wedged in my belly. I wrapped my legs around him as we smooched and that helped too.\n\nAfter we'd kissed awhile, I tried wriggling my hips a little. Ooh, that was nice. He was rubbing lovely, sensitive places deep, deep inside me. I hunched into him a little more. His pubic bone was in the perfect place too. Right above my button. I ground myself into him and felt tingles in my hips.\n\n\"Fuck yeah,\" I groaned.\n\n\"You like?\" he chuckled.\n\nI looked up at him and half-smiled. \"Let me put it this way -- let me make myself cum again like this and my body's all yours for the night.\"\n\nWhen his eyes took on a wicked gleam I backpeddled a little,\n\n\"Within reason, fella. I'm new at this, remember?\"\n\nHe nodded. I humped myself up into him, rubbing his spongy head deep in the nice, new places and mashing my clit against him at the same time. I was awkward and uncoordinated at first, trying to master the strange new motions my body craved. I reached around and grabbed his toned buns for leverage, pulling myself up. Much better.\n\nFor the next couple of minutes, I used Bobbie's beautiful body and he let me. I humped and ground and rolled to my heart's content. I was on fire soon.\n\n\"You're getting red, Red,\" he teased me.\n\nI nodded, already way past giddy. \"Going to cum.\"\n\n\"On me? Like this?\"\n\n\"Yeah,\" I gasped, now driving myself up into him more desperately. The orgasm, a really good one from the feel of it, was just starting to gather in my belly.\n\n\"Want some help?\"\n\n\"No.\" So close now. On the homestretch, I was exhausted from head to toe from my barely coordinated flailing, but high as a kite on endorphins and adrenaline. It was like the last few hundred yards of a marathon. The finish line was in sight.\n\n\"No help at all? You're doing all the work,\" he whispered.\n\n\"Shhh... almost there,\" I whimpered, fighting to keep my eyes open, to look into his dark beautiful blues and share the moment as my ridiculous climax loomed. I couldn't control my own hips anymore, I was just floundering under him. I shuddered as my insides started contracting involuntarily, trying to close with Bobbie's thick dick buried inside me.\n\nI humped on haphazardly. Holy crud, I could feel what was coming down in my toes.\n\n\"You're going to make me cum too,\" he warned.\n\n\"Better. Fucking. Hurry.\" I hissed then pulled him down on top of me completely and sank my teeth into his neck to keep from shrieking in his ear.\n\nMy body went haywire. It was one of those magic cums, external and internal at the same time. Pure pleasure rippled and flowed back and forth between my outsides and my insides.\n\nEverything, I mean everything felt good. His warm weight pressing down on me. My fingers scrabbling weakly across his back. His firm flesh between my teeth. The manly smell of him. The musky, sweet taste of his skin in my mouth. My legs were still wrapped around his waist and I flexed them to pull him into me harder.\n\nHe moaned and shuddered and the whole experience got impossibly better because Bobbie came too. His arms shot around under me and squeezed me tightly. I felt his shaft swell, then his tip bloom even bigger, and then he was filling me with cum, long heavy spurts of it deep inside me, bouncing off my walls. It tickled a little, like getting shot with a supersoaker filled with warm water.\n\nThe new sensation of a man, my man, cumming inside me stretched out my orgasm even longer, made it sweeter. I loved Bobbie and now I had yet another reason to love him -- the amazing things his big and now not-so-scary dick could do for me.\n\nI unlocked my teeth from his neck and kissed the deep lovebite I'd given him. We hugged like that, panting, both amazed at how well that had worked out. I could feel my heart thudding in my chest. His answered through our merged skin.\n\nHe lifted off me enough to look me in the eyes again. \"How was your first time?\"\n\n\"Awesome.\"\n\n\"Ready for another round?\" I felt his thickness, still completely hard, twitch inside me. He looked happy and eager, like a puppy with a new toy.\n\n\"Uh uh. I need a little break, stud. Certain parts of me need to recuperate.\" I unlocked my legs from around his waist.\n\nHe nodded and started to pull out of me.\n\n\"Gaaah,\" I winced, \"wait.\"\n\n\"What?\"\n\n\"Slower, honey, or you're going to drag my insides out with you.\"\n\n\"Sorry.\"\n\nHe inched himself out of me while I took deep breaths. It felt nearly as raw as when he went in.\n\nWhat felt like a tidal wave of wetness drained out after him. I wrinkled my nose up at the nasty sensation of it running down my butt and Bobbie saw my weird expression.\n\n\"You alright?\"\n\n\"Yep.\" I nodded. \"This is just way messier than girlie-sex. Takes a little getting used to.\"\n\n\"But good?\"\n\n\"Really good. Really, really good.\"\n\n\"Glad to hear it.\" He rolled off the bed. \"Be right back.\"\n\nHe returned from the bathroom with a couple of towels and slid into bed next to me again. He'd dampened one of the towels with warm water and pressed it between my legs gingerly.\n\nI groaned happily at the relief of the warm towel against my burning outsides. \"Honestly, that feels almost as good as the sex.\"\n\nHe smirked as I took over the towel and did some careful dabbing and wiping. Bobbie kept his eyes discretely on my face. He smiled tenderly as I winced a few times. We traded towels. The second one was dry.\n\nI tossed both towels onto the floor and snuggled into him. He was on his back and I rested my head on his sweat-slickened chest. \"We're definitely doing that again tonight but I'm going to be limping tomorrow,\" I promised. \"I hope you're proud of yourself.\"\n\n\"Okay, I'm a little proud of myself. Still want to marry me?\" he asked as he reached over to lower the light next to the bed.\n\n\"Yeah, but maybe we should talk about penis reduction.\"\n\n\"Not a chance, girlie,\" he snorted.\n\n\"Damn,\" I giggled.\n\n\"Guess that means you're not ready for more yet?\" His question was a mix of humor and hope.\n\n\"Gimme another five minutes, loverboy.\" I kissed his neck and slid a hand down his stomach to start fiddling with his still half-hard cock.\n\nAs I fondled Bobbie's fianc\u00e9e-pleaser -- heh, I was a fianc\u00e9e now -- it occurred to me that his meaty goodness was kind of mine now. I'd be getting it for the rest of my life.\n\nIt would be a wonderful life -- a better one than I could have ever hoped for. I'd been given a second chance at real love and real happiness.\n\n~*~*~Part VI~*~*~\n\nHeather cried and hugged me when I showed up unannounced at her college apartment the next day and I asked her to be my maid of honor.\n\nI was a nervous wreck the morning of my wedding. My mom was great as always, reminding me how wonderful Bobbie was and how well he treated me and how perfect we were for each other. Still, I was a giant twitchy mess all morning and when someone knocked on my bedroom door I nearly jumped out of my skin.\n\nHeather's smiling face peeked in through the crack. \"Need some moral support? I brought the troops.\"\n\n\"Absolutely!\" I nodded eagerly and waved her in. My mom slipped out to leave us alone.\n\nBehind Heather was Samantha. Behind Samantha was Hero. The trio crowded in to pull me into a happy four-way hug. It felt warm and comfy and safe in the middle of their huddle.\n\nHero's hug was longest, his big body, even larger than Bobbie's and more solid somehow, felt like it wrapped around me completely. \"You're stunning, Stace. If you want to ditch Bobbie, you and I could hop a plane to a Mediterranean island. I could spend a few afternoons licking limoncello out of your navel,\" he offered playfully.\n\n\"Hey!\" Heather griefed, poking him in the ribs and looking to Samantha for support.\n\nBut Samantha's eyes were still rolling me up and down, taking in my grandmother's antique and very lacy wedding dress. One of her eyebrows cocked up with perverted interest and she sided with their shared boyfriend, \"I dunno girlie, I think I'd like to help him lick the limoncello.\"\n\n\"That's it. Out you two,\" Heather huffed with mock exasperation, \"I want to talk to Berry alone for a little bit.\"\n\nWhen we were alone, Heather shut the door behind them and locked it. She turned to me and didn't say anything. We just looked at each other from across my little bedroom. Memories of the nights we'd spent together on my childhood bed rushed up and I felt my skin prickle with a tell tale blush.\n\nI watched Heather's eyes fill up slowly. Mine did too. When she finally spoke, her lips quivered a little. \"You're really, really pretty Berry. I like the extra curls in your hair.\"\n\n\"Thanks,\" I sniffled. \"The bridesmaid dress looks great on you. I've always liked you in pink. And your hair looks nice up. You've always had the neck for it.\"\n\n\"Thanks.\"\n\nAn awkward silence stretched out and I needed to fill it or my sniffles would spiral down into a full-on cry, \"Who'd have thought we'd end up like this, huh, Bubble? Me marrying your brother?\" I said gamely.\n\n\"He's a good guy.\" She nodded, dabbing carefully at the corner of her eyes with a thumb, trying not to smear her makeup. \"And he loves you to pieces.\"\n\n\"Bubble? Could I get another hug? I think I'm more scared than I realized, my legs are going all shaky over here.\"\n\n\"You sure it's not the high heels, Stace?\" she teased as she came and pulled me tight. \"You've never been too steady on them.\"\n\nOur chests met first like they always had, then our arms found their old spots, hers around my hips, mine above hers and around her waist. The same height, we rested our chins on each other's shoulders.\n\nFor a moment I realized that we were probably messing up our makeup but I didn't care. It was a long hug, and we let the body heat build between us. I squeezed her extra tight a few times until she grunted and giggled into my neck.\n\n\"Need a... need a smooch too, Berry?\" she said quietly.\n\n\"Maybe. Yeah.\"\n\nWhen she pulled back I saw all the things that made me love Heather back in high school and never stop: an true tenderness in her clear, sky blue eyes; a deep and beautiful and thoughtful soul; a giant heart bigger than the room we stood in.\n\nI closed my eyes and turned my head. Then our lips met and two and half years melted away like snow in the spring. The sweet warmth filled my chest and, from Heather's little sigh, it was clear she felt it too. My own sigh answered. She was wearing perfume and it's soapy, wildflower smell filled my nose. I breathed deeper. Yes, under it, still there, the trademark sweetness that opened an ache in my chest -- bubblegum.\n\nHeather worked her fuller lips gently against mine and their softness swallowed me up. I little, hungry mewling sound slipped out of me when I felt her lips nearly open. Nearly. They began to part then closed again, as if she barely remembered where we were now, who we were now.\n\nI'd have followed her; I knew it somewhere deep and basic inside myself. I'd have pulled Heather's tongue into my mouth, pressed mine into hers. I wouldn't have stopped myself. It made me happy and sad at the same time to know she was struggling too.\n\nWhen we finally pulled apart, she saw the mix of emotions on my face and I watched some little conflict play itself out on hers.\n\n\"We're not done, Berry. Not yet,\" she murmured.\n\n\"What do you--?\"\n\nShe stopped me with a sweet peck on the tip of my nose. \"Now's not the time. You're getting married, Stace. Let's get you cleaned up for my hunky brother and the two hundred people waiting.\"\n\nShe stepped back and looked me over. \"Where's your kit? You could use some powder, you're all shiny now. And your boobs squished up when we hugged. Better stuff 'em back down. My brother and my boyfriend would enjoy this look, but you'll give the old folks heart failure.\"\n\nI smiled and rearranged my front while she rifled through my things for a compact. I held still while she dusted my cheeks and nose with a soft brush; its slow, feathery strokes were comforting too.\n\n\"Promise me, Bubble? Promise you'll always be there for me? Just like this? I need you, you know.\"\n\nShe kept dusting and nibbled at her lower lip gently. \"Me too, Berry. Me too.\"\n\nBubble had a plan. I knew it then. And she knew I knew. She just wasn't ready to share it.\n\n~*~*~*~*~\n\nChapter 2 on the way. Don't forget to do the vote thingie. :)\n\n-PF"
    ],
    "authorname": "PacoFear",
    "tags": [
        "teen romance",
        "teen first time",
        "marriage proposal"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/berrys-second-chances-ch-01"
}