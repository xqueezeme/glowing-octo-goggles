{
    "title": "Yes, Ma'am!",
    "pages": [
        "*Author's Note: I came up with the title and an idea for this story a year ago, but no matter how I tried to spin it, it just wasn't working.\n\nI work with a retired Marine Corps colonel and two retired lieutenant colonels, and one of them was recently telling a story about a Marine colonel he once worked for when he was the commanding officer of a Low-Altitude Air Defense (LAAD) or Stinger missile battalion, in North Carolina. LAAD (pronounced 'lad') battalion is one unit in a Marine Air Control Group which is, in turn, part of a Marine Aircraft Wing.\n\nEven then, I wasn't all that interested until he also mentioned a female major who was dating a male first lieutenant in the Control Group. I perked up and listened with interest as this retired colonel, who is the straightest shooter I know, talked about that and his former Group commander who was nothing short of a tyrant. This went on for nearly an hour as others asked questions and shared similar stories, but no one had ever worked for anyone that bad.\n\nAfter thinking about it for a day or two, the story basically wrote itself using his true tale as the basis for it. \n\nAs with my other Marine-related stories, I remind readers that Marines say 'platoon commander' rather than 'platoon leader' and that time is 'zero-nine hundred' and never 'oh-nine hundred' and the word 'hours' is never used, either. Also, Marines wear 'covers' and not hats. (And for any Marine experts, take the time in service for promotion to colonel in this story with a grain of salt, okay?)\n\nYou won't need any more explanation to follow the story, but for those with some military background who are interested, this may be of further help. Otherwise, feel free to skip it and start the story!\n\nVery briefly, there are four Marine Air Control Groups in the Marine Corps, one in each of the three Marine Aircraft Wings (which are not the same as an Air Force Wing but more like a numbered Air Force) and a reserve Group. There is one MACG on each coast and another in Okinawa. Within the Group are several squadrons and one battalion. LAAD battalion has been explained. The squadrons are:\n\nThe Marine Air Support (or MASS) squadron which links the infantry with the air wing via a shelter called the Direct Air Support Center or DASC. When 'grunts' need bombs on target, their radio call goes to the DASC and from there those who control the launching of the aircraft (via some other comm links.)\n\nThe Marine Air Control Squadron which has large radars that track aircraft and assist in aerial combat. It is the home of the Tactical Air Operations Center or TAOC. In the Marine Corps, this is what is meant by air defense. (The LAAD battalion provides anti-air warfare, NOT air defense like the Army calls it.)\n\nThe Marine Tactical Command Center or MTACC which is the senior agency from which the Wing Commander, a two-star general, fights the air war to support ground forces.\n\nAll squadrons and the battalion are commanded by a lieutenant colonel. The Groups are commanded by colonels. Keep in mind that lieutenant colonels are usually addressed as 'colonel'.\n\nI'll explain other oddities as the occur. Confused yet? :-)\n\nOther than that, I'll make sure to spell out acronyms and abbreviations (all ranks use USMC abbreviations, btw), and offer short explanations to keep the confusion to a minimum.\n\nAbove all else, it's a love story. I hope you enjoy it.\n\n******\n\n\"Captain Kennedy. I'm LtCol Strader. Welcome aboard.\"\n\n\"Thank you, ma'am.\"\n\n\"I'm sure you're asking who you pissed off to get stuck with this job, but the fact is, you're now the new Group adjutant. This is unlike anything you've done in LAAD Battalion, but this is your mission. Oh, and before I introduce you to the Group Commander, let me warn you he's a no-nonsense kind of guy, okay?\"\n\n\"Yes, ma'am,\" he replied again.\n\n\"As such, when I tell you to report to the Commanding Officer of Marine Air Control Group-28, you'll be expected to report.\"\n\n\"As in...standing at attention, ma'am?\" the puzzled young officer asked.\n\nLtCol Holly Strader was the Group Executive Officer. She'd been on active duty for just over 21 years and had recently been passed over for promotion several months back. She could try one more time, but the odds were stacked against her so she'd put in for retirement and would be doing so in another five months. Her boss, the Group Commander, Colonel Tom Clarke, had only recently been promoted to his present rank, but prior to that, he'd been junior to her by a year as she'd been commissioned in 1998 while he put on his gold bars a year later. But that was then and this was now, and the new colonel was in command and she wasn't.\n\nThe young captain sensed her discomfort even though she showed no visible indication as she said, \"Exactly.\"\n\n\"Understood, ma'am,\" he told her.\n\n\"Other than that, pay careful attention to everything he says. You do not want to have to be told something a second time,\" she warned.\n\nAgain, the new adjutant replied as he just had with, \"Understood, ma'am.\"\n\n\"Okay. Let's go meet the boss,\" she said as she stood up and came around to the front of her desk where the captain had been sitting.\n\nCaptain Josh Kennedy had been on active duty for just over six years, and the last time he'd stood at attention for anyone was at TBS, or The Basic School, in Quantico, Virginia. \n\nTBS was a six-month school for all newly commissioned officers regardless of future MOS or Military Occupational Specialty. Future infantry officers, future pilots, lawyers, admin officers, supply officers, and everyone else went through the course to understand what the guy on the ground was going through. This experience created a bond between all officers of all MOSs and helped all of them understand the urgency of getting tasks done quickly and efficiently\u2014especially when Marine lives depended on them. \n\nThe inside joke at TBS was that the second lieutenants going through the course were really 'third lieutenants'. They were commissioned officers, but the new officers often felt like they were treated more like Marine lance corporals than second lieutenants. It wasn't really true, but that's how it felt because they were all assigned to platoons with a Marine captain in charge called a Staff Platoon Commander or SPC, and captains at The Basic School may as well have been gods. \n\nThere wasn't any yelling. All of that ended with OCS or Officer Candidates School, but everything one's SPC suggested or requested was an order, and eager 2ndLts carried them out immediately and without question.\n\nBut here he was, six years later, having spent one of those years in Afghanistan where he was awarded the Bronze Star, about to report to his new commander at the position of attention like a third lieutenant.\n\nThe initial 'meet & greet' lasted about 20 minutes. Captain Kennedy spent the first five of those boring holes into the wall above the Group Commander's head as he stood in front of and centered on, the colonel's desk at the position of attention while being told in no uncertain terms what was expected of him. The last 15 minutes also were spent standing after the CO gave him permission to stand at ease. Even so, Josh Kennedy stood more at parade rest, never moving other than to answer, \"Aye, aye, sir,\" or respond to some other expectation.\n\n\"Lastly,\" the colonel said, \"the XO is your lifeline. As a primary staff officer, you have the right to come directly to me, but it better be damned important. Otherwise, you run everything, and I mean everything, through her. Understood?\"\n\n\"Yes, sir,\" the captain replied clearly and quickly.\n\n\"Any questions for me?\"\n\n\"None, sir.\"\n\n\"Very well. You're dismissed, young man. Now get to work.\"\n\nThe colonel looked back at the paperwork on his desk as Captain Kennedy snapped to attention before taking one step to the rear and executing an about face prior to marching out. Marines never saluted indoors (unless wearing a duty belt and a cover), so none was rendered.\n\nLtCol Strader was waiting for him, and when she smiled, it took off a huge load of pressure.\n\n\"Intense, right?\" she quietly said.\n\n\"You can say that again, ma'am,\" the relieved captain told her.\n\n\"Come on. Let me introduce you around to the rest of the staff,\" she said before pointing to the door that lead from the combined area where they and the CO each had offices.\n\nThe XO introduced the new 'adj' to the S-1 or admin officer, a Marine major, the S-2/Intelligence officer, also a major, the S-3/Operations Officer, a LtCol, and the S-4/logistics officer who was a major who'd recently been selected for promotion and who would be leaving to take command of a supply battalion at Camp Lejeune in another couple of months.\n\n\"As you know, I'm responsible for staff coordination, so while they all work directly for the CO, just as you and I do, everything runs through me.\"\n\nThe LtCol smiled again then quietly said, \"And I mean everything.\"\n\n\"Yes, ma'am,\" a nervous Josh Kennedy replied as he nervously smiled, too.\n\nAs they walked back to their offices, the XO asked where he was from, whether or not he was married, and how he'd enjoyed his time with Second Low-Altitude Air Defense Battalion where Josh had been a platoon commander, a battery XO, and a firing battery commander.\n\n\"I'm from the Seattle area, ma'am. No wife, and I absolutely loved my time with LAAD Battalion,\" he told her trying to be accurate and succinct.\n\n\"I'm sure. I had a great time as an Air Defense Officer and was lucky enough to become a Senior Air Director and a detachment commander a couple of times. Unfortunately, I didn't screen for command, and as you know, if you don't command as a lieutenant colonel, you can forget about ever being a colonel.\"\n\n\"So what's next for you then, ma'am?\" Josh asked her.\n\n\"Well, I'll be here until I retire in a few months. After that? I'm not sure yet.\"\n\nThey got back to the office complex when she said, \"I went through a very messy divorce a year and a half ago, so I'm still trying to work out what to do with the rest of that part of my life, as well.\"\n\nShe smiled as she said it, and it was then that Josh confirmed what he already knew. LtCol Holly Strader was a very attractive woman. That wasn't unusual as nearly every female officer he'd ever met was at least reasonably attractive. There were definitely exceptions to the rule, but for the most part, female officers tended to be good looking, and Colonel Strader was way above average, especially for someone her age.\n\nHer naturally blonde hair was pulled into a tight bun, but it looked to be about shoulder length. She had a very pretty face and because she'd been a runner her since high school and college, she still had a very firm body even at the age of 43. \n\nJosh's thoughts were interrupted when she said, \"I'm gonna go PT for lunch. Can you handle things by yourself yet?\"\n\nThe truth was, he still didn't know up from down. Even the phone numbers of other staff officers were unknown to him. He had a list of them on his desk, but other than that, he'd never had any kind of administrative assignment before, and the combat veteran found himself feeling like a fish out of water.\n\n\"Yes, ma'am. No problem,\" he told her.\n\n\"Okay. Good. I've been here for four months, and I haven't gone home before 1800 once. I try and get in an hour before the CO, but he gets here at zero-six thirty, so lunch is the only time I can get a run in,\" she told him. \n\nShe hesitated, smiled, then said, \"I suppose not having to worry about ever disappointing a pissed-off husband again has been the only good thing about being single.\"\n\nShe laughed then said, \"Well, so far, anyway. I have friends who've assured me it gets better, but's been almost 18 months and it still sucks, but hey, what do I know?\"\n\nJosh laughed nervously again then told her to have a good run before sitting down at his desk knowing the phone would soon ring for the CO meaning he would answer it. That's when he realized he didn't even know how to transfer a call.\n\n\"Oh. Ma'am?\" he called out just before she closed her door.\n\n\"Yes?\"\n\n\"I uh, I hate to ask, but...\"\n\nShe laughed then showed him how to put someone on hold, buzz the CO, then transfer the call.\n\nWhat she said next surprised him.\n\n\"Just remember. Even the squadron and battalion commanders are intimidated by the Group CO, so don't feel like you're the only one, okay?\"\n\nIt was said very quietly, but that small bit of advice was the best thing he'd heard since learning he was being sent up to the Group to take the job no officer in it wanted. But the Fickle Finger of Fate had pointed his way, and he was now the new Group adjutant, like it or not.\n\nThe phone rang not 30 seconds later, and Josh steeled himself before picking it up.\n\n\"MACG-28, Captain Kennedy speaking,\" he said, saying each letter individually.\n\nIt was his former battalion commander, LtCol Rich Armstrong, and Josh let out a long, silent breath.\n\n\"Hey, sir. How are you?\"\n\n\"Better than you,\" the LtCol quipped. \"Is the boss in?\"\n\n\"Yes, sir. Let me connect you.\"\n\nJosh pushed each button as though any mistake would cause the phone to blow up as he let the Group Commander know he had a call.\n\n\"Patch him through,\" came the terse reply.\n\n\"Sir? I'm transferring you now.\"\n\n\"Good luck, Josh,\" his former CO said before he heard the Group Commander's voice a few seconds later shouting, \"You better goddamn be kidding me!\"\n\nJosh got up and shut the CO's door but could still hear the verbal ass chewing, and he winced each time his former CO took a heat round in the chest.\n\n\"You better unfuck this right now, Colonel. Do you understand me?\"\n\nThe phone slammed down a second later, and Josh realized he was holding his breath again.\n\nSomehow, he made it through that first day which was really only half a day, and around 2000 or 8pm, he finally went home with 'home' being an apartment he shared out in the town of Havelock, North Carolina, home to Marine Corps Air Station, Cherry Point with an officer from LAAD battalion.\n\n\"So how was your first day under Josef Goebbels?\" his fellow captain and roommate, Vic Watters, quipped. \"I'd say Hitler, but I'm feeling charitable these days.\"\n\nJosh didn't laugh. He just said, \"You know, I'd heard all the rumors just like everyone else, but until you've been on the receiving end, you really have no idea.\"\n\n\"That bad, huh?\"\n\nJosh laughed as he cracked a beer then said, \"You know the old adage.\"\n\n\"Which one?\"\n\n\"A short career can be a good career,\" he replied, meaning he understood he could be fired at any time, and were that to happen, his career would effectively be over.\n\nHis roommate laughed and tried telling his friend of the last three years things would get better.\n\nJosh thought about offering facts to counter the upbeat assurance but decided not to start whining this early as he thought of another old saying.\n\n\"This, too, shall pass.\"\n\n\"Yeah, like a kidney stone,\" he said out loud prompting his roommate to ask what the hell that meant.\n\n\"Nothing. Nothing at all,\" Josh said as he took a long pull and tried to put Day 1 out of his mind knowing that Day 2 was only another eight hours away.\n\nBy the time Friday rolled around, Josh realized that as much as his new job sucked, it was the XO who bore the brunt of the CO's pettiness.\n\nIn just the short time he'd been there, Josh had lost track of the times he'd heard the commander call out, \"XO!\" or \"XO. Get in here!\"\n\nWithout fail, the 43-year, senior LtCol jumped up and responded every single time.\n\n\"Yes, sir?\" he'd hear her say as she left her office to enter his.\n\nIt was rare that anything got by her, but when it did, the CO invariably caught it. And when he did he took it out on her directly and in no uncertain terms almost as though he enjoyed berating her.\n\nThe one incident that really stuck out was the time the CO asked her, \"How much are we paying you a month to miss things like this?\" as he rudely slapped the folder the document was in into her outstretched hand.\n\nBut what also stuck with him was the way she smiled and winked at him when she came out. That gesture told him that she, like everyone else, knew he was a little Napoleon. But more importantly, it told him she wasn't about to let it get her down, and the unspoken part of it was that he shouldn't, either.\n\nBecause this was the first Friday of the month, all of the officers in the Group, less those on duty, were expected to show up at the Officer's Club for Happy Hour. Josh had a mountain of paperwork on his desk, and some of it had to be done that evening. But when the CO came out and said, \"Let's go have a beer!\" that was his cue to drop everything and...go have a beer.\n\nWhen he got to the club, he saw the XO by the bar as he went to order one for himself.\n\n\"First one's on me, Josh,\" she said, surprising him that she even knew he was there.\n\n\"Okay. Um...thank you, ma'am,\" he said as he ordered a Bud in a longneck bottle.\n\nShe told the CO of the Air Support Squadron, MASS-2, she'd talk to him later as she turned to her subordinate and asked how his first week went even though it had only been three full days.\n\n\"Enlightening?\" he replied with a smile before taking a first sip.\n\nThe senior officer laughed then said, \"That's a very diplomatic way of putting a positive spin on things around here.\"\n\nJosh laughed, too, then told her he was a little afraid to even say that much out loud.\n\n\"I hear you,\" she told him only without another laugh. \"I'm bulletproof now, so I have nothing to worry about. But pretty much every other officer in this Group feels like you do.\"\n\nShe leaned a little closer then said, \"And I did not say that.\"\n\nJosh laughed then said, \"No, ma'am.\"\n\nLtCol Strader excused herself then continued making the rounds as she chatted up the other unit COs who were all nervously watching for the Group Commander who would be doing the same, taking each of them aside, one at a time. The difference was they all looked forward to talking with the XO while, to a man, they dreaded their 'alone time' with the boss who used these opportunities to intimidate and make demands via veiled threats. All done, of course, with a smile on his face.\n\nAs Josh watched the interaction, he was amazed that officers with 15-20 years in the Marine Corps were behaving like 'third lieutenants' around this man who'd been promoted to his present rank less than six months ago. Evidently, even being a LtCol around a Col like this guy was the same as being a 2ndLt around a captain at TBS. No, it seemed worse, and the more Josh watched, the worse it seemed.\n\nHe stayed for an hour then quietly slipped out and went back to work. When he finally got home around midnight, he was too tired to think about anything but getting a full-night's sleep for a change.\n\nThe two days reprieve from the pressure cooker were fantastic, giving him time to get to the gym and get in a run as well as just spend some time just vegging out on Saturday night. Vic invited him to go to a bar where Marines tended to do pretty well with local women, but Josh had no interest in tagging along.\n\n\"Okay. Suit yourself,\" Vic told him as he headed out, fully expecting to get lucky.\n\nThe following week both dragged on forever and flew by in a blur as Josh continued climbing the very steep learning curve of a job he'd never been trained for. Then again, were he to stay in for a career, most of the jobs he'd perform would be the same. He, like every other officer, would be expected to learn as he went, and not screw anything up while doing it.\n\nColonel Strader turned out to be his most valuable asset as she patiently helped him learn the ins and outs of administrative work. After correcting a series of new-guy mistakes she sat him down on Thursday and explained the importance of admin.\n",
        "\"Pretty much everything you've done since getting commissioned has involved leading Marines. And as a lieutenant and captain, that should be your focus. But by the time you make major, you'll be expected to also know the admin side of the house in and out. The same is true with logistics and supply. Obviously, as a lieutenant colonel in command of a squadron or battalion, you'll be responsible for all of those things, and there's no excuse for not being thoroughly familiar with all staff functions. So while this is painful in the extreme, it's critically important if you decide to stay in.\"\n\nJosh thanked her then asked if that was everything.\n\nShe smiled a little bit then said, \"Relax, Josh. You're doing fine.\"\n\nHe stood up just as she said, \"A whole lot better than I was at your time in service, okay?\"\n\nJosh smiled back a little and replied, \"Yes, ma'am,\" before leaving her office with several folders containing corrections he'd either missed or needed to make.\n\nOver the next couple of months, she saved his...backside...on quite a few occasions. The last time it happened he took it out on himself pretty hard because he felt like he'd been there long enough to get the hang of the still-new job.\n\nBut two weeks later, during a group staff meeting, he returned the favor for the first time.\n\nThe Group CO was at the head of the table in the large conference room, but it was the XO who went around the room asking for information or questions from each staff officer. As the adjutant, Josh was sitting to her immediate left, and when the Group CO asked her for the list of names for the Commanding General's visit the following week, she sat there stone faced.\n\n\"I uh, I don't believe I have it, sir,\" she said as every eye was on her and then the boss as everyone in the room wondered what he might say.\n\n\"Ma'am?\" Josh said before the CO spoke. \"You asked me to hold this for you.\"\n\nHe pulled out the list of names and slid it over to her as though it was planned. Josh saw the CO 'eyeball' the piece of paper, and somehow, he knew the man was aware that he'd just saved the XO's backside, but nothing was said as she further handed it to her boss.\n\nWhen the meeting ended, she took him aside and thanked him.\n\n\"No problem, ma'am. You've done that for me more times than I can count.\"\n\n\"Well, I'm a LtCol and it's my job to help out the people who work for me. It's just nice to know that those people are there for me, too.\"\n\n\"My pleasure, Colonel,\" he told her as she smiled at him before walking away.\n\nWhen he sat back down, Josh said to himself, \"She is so damn hot!\"\n\nHe'd noticed that many times before, but because his 'hard drive' was working at or near capacity just to keep up with the incessant demands of the job, he didn't have a lot of time for daydreaming. The workload was the same every day, but it was nice to take a minute every now and then and...enjoy the finer things. And while he'd never tell anyone, not even his roommate, he thought LtCol Holly Strader was fine indeed.\n\nThe weather began turning cold in October, and by early November there was frost on the window of his Jeep Cherokee each morning. The colder weather also meant breaking out what was called the 'wooly pully', the Marine's name for a green commando sweater worn under the utility uniform (BDUs to the Army) shirt or over the Service-B uniform which consisted of a long-sleeved shirt and tie for men. The tie wasn't worn with the wooly pully, and any excuse not to wear one was something Josh took advantage of.\n\nHe also couldn't help but notice the way it hugged the XO's very-fit body. The sweater itself was hideous looking, but on her it showed off every curve of her slender figure and ample 'upper body', and Josh often found himself trying not to stare. She'd caught him once, and although he didn't blush when she smiled at him, he felt unprofessional in the extreme and vowed never to make the same mistake again. Until he did. \n\nAs before, she waited for him to realize he was staring, and when he did, she only smiled again. Having been caught twice, he got up and went to her office where he said, \"Ma'am? I'm sorry. That was completely unprofessional and it won't happen again.\"\n\nShe sat back in her leather chair, smiled again, then said, \"It's fine, Josh. It's actually even a little flattering.\"\n\nWhen she saw a puzzled look on his face she laughed.\n\n\"At my age, whenever a good looking younger man even looks anymore it's very flattering. So no worries, okay?\"\n\nNot sure how to take that, Josh responded the way he had a thousand times already with, \"Yes, ma'am.\"\n\nThat Friday, it snowed for the first time. It wasn't a heavy snow, just a light dusting, but it got down to 22 degrees and was only up to 28 by lunchtime, and that, along with a stiff breeze, was cold enough to get LtCol Strader to stay inside during lunch.\n\n\"No PT today, ma'am?\" Josh asked when he saw her at her desk at noon.\n\n\"Oh. No. Not today. I'm a fanatic, but I'm not going outside in that wind.\"\n\n\"I don't blame you, ma'am,\" Josh replied.\n\n\"Besides, there's always plenty of work to do,\" she said as she nodded to her inbox that was stacked with folders waiting for her review and/or approval.\n\n\"How about you? When do you get your PT in?\" she asked, grateful for a short break.\n\n\"Weekends?\" Josh said as a question.\n\n\"Josh? You have to make time. I know this job is a killer, but PT is important, too.\"\n\nShe looked around for the CO then quietly said, \"And when you work in a place like this, stress reduction is even more important.\"\n\nJosh smiled knowingly then told her he'd try and find more time.\n\n\"You're welcome to run with me now and then if you'd like,\" she told him.\n\n\"Oh, I don't know, ma'am. I'm not sure how I'd handle...getting run into the ground,\" he told her with a nervous laugh.\n\nShe laughed, too, then said, \"You're preaching to the choir. While my concerns are from the reverse perspective, no one is more sensitive about being female in the most testosterone-laden group in the world.\"\n\n\"I didn't mean to imply anything, ma'am,\" Josh told her.\n\n\"I understood,\" she told him with another smile. \"But the offer stands.\"\n\nJosh thanked her then remembered the reason the whole conversation had begun and felt relieved that she was so understanding. She would have been well within her rights to read him the riot act, but instead she'd made sure to treat him with respect, and that was just one more thing he liked about her.\n\nThe Group CO left around 1730 that evening, and Josh stood up when he announced his departure. The XO did the same thing and wished him a good weekend.\n\n\"You two try not run the ship aground, okay?\" he joked in his typically sarcastic kind of way.\n\nThe XO made sure to laugh as she told him she wouldn't.\n\nLess than 15 minutes later, the XO said she was calling it quits, too, and asked Josh if he was getting close to being finished.\n\n\"Almost, ma'am. I just need to get the duty roster for next month in for your approval, and then I'm pulling the plug, too.\"\n\n\"Okay. Sounds good. I'll see you on Monday then.\"\n\n\"Yes, ma'am. Bright and early.\"\n\n\"You can say that again,\" she said with a laugh as she grabbed her purse and cover and headed out.\n\nFive minutes later she was back inside.\n\n\"My car won't start,\" she said before Josh could ask why.\n\n\"Do you need a jump, ma'am?\" he asked as he got up to go outside with her.\n\n\"That would be great. Thank you very much,\" she told him. \n\n\"No problem, ma'am,\" he told her as he grabbed his keys out the top desk drawer in front of him.\n\nHe pulled his Jeep alongside her Toyota Tundra as she popped the hood.\n\n\"Nice truck, ma'am,\" he told her.\n\n\"You, too,\" she replied with a laugh. \"Okay. Jeep.\"\n\nShe turned around the said, \"I do know the difference.\"\n\nJosh laughed then asked her to get in while he hooked up the cables. Once they were in place, he fired his Jeep up and revved it a little then waited. He was tempted to tell her things he didn't think a woman would know, but she was two ranks senior to him, so he didn't say a word.\n\nA minute later he heard her truck crank over and fire up, too, so he hopped out and disconnected the cables and put them away.\n\nColonel Strader waited for him, rolled her window down, then said, \"Thank you very much, Josh.\"\n\n\"You're welcome, ma'am.\"\n\nHer extremely polite reply really caught the younger officer by surprise.\n\n\"I uh, I sometimes forget how nice it is to have a man to depend on,\" she told him.\n\nShe was smiling, but the way she said it was unlike anything she'd ever said to him before.\n\n\"I don't see you depending on any man, Colonel,\" he told her respectfully.\n\n\"I am a Marine and a lieutenant colonel, but I'm still a woman, Josh, and while I'd rather stay single for the rest of my life than be with another man like my ex, I do find myself thinking how nice it would be to meet someone caring and decent.\"\n\nFor the first time since he'd known her, Josh felt like she was talking to him as a peer. Even so, he wasn't about to get overly familiar because, well, that just wasn't okay.\n\nAnd yet he inexplicably found himself telling her, \"I hope this isn't out of line, ma'am, but you're a...a very attractive woman, and whenever you're ready it'll just be a matter of choosing one.\"\n\nShe saw him shivering in the cold and apologized for keeping him outside, but didn't say a word about his complimentary remark.\n\n\"No biggie, ma'am,\" he told her as she thanked him again before rolling her window up.\n\nHe came to attention, saluted, and waited for her to salute back from inside her vehicle before heading back inside.\n\nOn Monday, Josh brought his PT gear to work for the first time. At LAAD battalion, he'd done that nearly every day for the entire time he'd been there. But here, he was too paranoid to even think about leaving the office\u2014especially with the XO gone during lunch. Yes, there was a phone watch assigned every day, but Josh didn't like the thought of anything going directly to the Group Commander without his knowledge, so he stayed at his desk and ate lunch. Every day.\n\nThe XO noticed as soon as he walked in and laughed.\n\n\"Look who brought his PT gear in,\" she said with a bright smile.\n\n\"Whether or not I'll get outside is another issue, but I did bring it in, ma'am,\" he told her.\n\n\"If you want to run with me, just let me know,\" she told him before returning to the folder in front of her.\n\nThe weather had warmed up on Sunday and it was a balmy 40 degrees by 1130.\n\n\"So what's the verdict?\" she asked as she grabbed her bag.\n\n\"Adj-itator!\" the CO called out before he could answer her question.\n\n\"You go ahead, ma'am,\" the captain quietly told her as he jumped up and said, \"Yes, sir!\"\n\nThe CO assigned him a project that would take the rest of the day to complete, and he still had a huge stack of folders to get through before he could go home. The good news was there were only two that were 'hot' so he worked through them, put them in the XO's inbox then turned to on the CO's pet project.\n\nIt was a little after 1830 when Colonel Strader announced she was going home then added, \"If my battery isn't dead. I put off getting a new one because it started up yesterday and this morning, so I'm keeping my fingers crossed.\"\n\nJosh laughed then told her to give him a holler if it didn't.\n\nJust like on Friday, she was back in a couple of minutes later.\n\n\"No go?\" he asked as he stood up again.\n\n\"I'm really sorry, Josh. I know better. I just didn't feel like doing a da...anything all weekend,\" she admitted as they walked out.\n\n\"I know the feeling well, ma'am,\" he told her. \n\nAs they got to the front of the building, he went to open the door for her and stopped.\n\n\"Sorry, ma'am. I didn't mean to imply you can't open your own door,\" the embarrassed captain said.\n\n\"I guess you forgot me telling you I'm also a woman, huh?\" she teased as she pushed it open for herself.\n\nThis time, even after waiting ten minutes following a first failed attempt, her battery wouldn't hold a charge.\n\n\"Wonderful,\" she said once they realized it was a lost cause.\n\n\"Do you need a ride, ma'am?\" Josh asked.\n\n\"Oh. I can't put you out like that. I'll just give someone a call,\" she told him as she got her phone out.\n\n\"Ma'am?\" Josh said. \n\nShe looked at him and smiled.\n\n\"Yes?\"\n\n\"I really don't mind. And you're gonna need someone else to bring your new battery back unless you want to tow this thing, so I can save someone at least one trip.\"\n\n\"Good point. And getting a tow truck on base can be tricky, but I will find someone to take me out to buy a new one then bring me back here.\"\n\nShe paused then asked, \"Are you sure you don't mind?\"\n\n\"I'm ahead of schedule on the CO's project, so no, I don't mind at all.\"\n\n\"In that case, I accept,\" she told him very pleasantly.\n\nAgain, the way she spoke was different. It was almost...flirty. Josh knew she was just being nice, but even so, it felt really good. Good enough that he went around to the passenger side of his Jeep and opened the door for her.\n\n\"Well. I take back what I said. You were listening,\" she told him with a little laugh.\n\nHe even offered her a hand getting in which she accepted before saying, \"Thank you, Josh.\"\n\n\"You're welcome, ma'am,\" he told her before shutting her door and going around to the driver's side.\n\n\"It's supposed to turn cold again on Friday,\" the XO said once he got inside.\n\n\"I heard that. Just in time for the weekend, right, ma'am?\"\n\n\"Oh, right. Just our luck, huh?\" she replied. \"Not that we'd get out and do anything, though, right?\"\n\nJosh laughed then backed the Jeep up. He was more than a little surprised when the XO made small talk all the way to her place. As she spoke, he realized he'd worked around her for quite some time and still didn't really know anything about her.\n\nBy the time he dropped her off he knew where she grew up, that she had an older brother, that her marriage had lasted seven years, and that her ex-husband had gotten the 'itch' corresponding to that number of years around that same time.\n\nShe didn't go into detail, but the gist of it was that when she told him she wanted to have a baby he not only wasn't open to the idea, he reminded her they'd agreed that wasn't on the table when they got married. She tried letting him know things change and that she very much wanted to have a child, but he was having none of it. The cheating began shortly after that and went on for several months before she even became suspicious.\n\n\"Anyway, to his credit, he admitted everything, and that was that.\"\n\n\"Ma'am? No disrespect, but your former husband is an ass.\"\n\nShe laughed, but he could tell how much the infidelity, the divorce, and even more importantly the realization she would probably never have children, still hurt her. \n\n\"Sorry. I didn't mean to lay all that on you,\" she told him as he pulled into her driveway.\n\n\"I'm glad you shared it with me, ma'am,\" Josh told her.\n\nHe hesitated then said, \"After all, you are a woman, and sometimes a woman needs someone to talk to.\"\n\nThere was a brief moment when Josh wondered if this might be the time she put him in his place, but she only smiled and told him she agreed as he put the Jeep in park. \n\nShe thanked him then went to open her door when the young captain said, \"Ma'am? I'll get that.\"\n\nShe pulled her hand away from the door handle, smiled, then said, \"Okay,\" in that same...sweet-sounding voice he liked so much.\n\nJosh opened her door, offered her a hand again, then got a sincere thank you as they stood there face to face. There was another uncomfortable moment when neither of them moved nor spoke.\n\n\"Sorry, ma'am,\" Josh said as he stepped to the side.\n\nAlmost demurely, the XO stepped around him then thanked him again.\n\nHe went to salute when she smiled again and said, \"Not here, okay?\" before giving him a quick, platonic hug and thanking him one more time.\n\nStunned, Josh didn't even hug her back, but he did ask if she needed a ride the next morning.\n\n\"No. I'll call a friend of mine who works at Wing Headquarters. She'll give me a lift, and we'll handle it from here.\"\n\nJosh almost started to salute her again when he caught himself. She didn't laugh or even smile this time. She only told him how pleasant it had been having someone to talk to then let him know she'd see him in the morning.\n\nAs Josh drove home he couldn't shake the way he was feeling about this much-older woman he had no business feeling anything for. And yet he did. The physical attraction was obvious. Older or not, LtCol Strader was a very attractive woman. But after having gotten to know her, even a little bit, he found himself even more attracted to her for other reasons; reasons he couldn't seem to shake or ignore.\n\nHis troubling thoughts were interrupted by Vic as soon as he walked into their apartment.\n\n\"There he is! The Group Adj-itator himself!\"\n\nVic had been home since 1600 after the battalion secured (called it quits) a half hour early.\n\n\"I hope the Group CO doesn't find out, or our...your...battalion CO will be in deep kimchi.\"\n\n\"Speaking of Adolph, did you hear what happened out at Bogue Field yesterday?\" Vic asked. Bogue Field was an abandoned auxiliary airfield where LAAD gunners often trained.\n\n\"No. What's going on?\"\n\n\"We had a platoon out there supporting the AAWEX.\"\n\nAAWEX stood for anti-air warfare exercise and Stinger gunners always participated by tracking live aircraft that flew during the training exercise.\n\n\"Yeah, okay. And?\" Josh asked.\n\n\"The Group CO and the Group S-3 officer showed up unannounced, and the next thing you know, he's in Lieutenant Negron's shit. Like...really in his shit!\"\n\n\"How deep?\" Josh asked, as he imagined the scenario.\n\n\"The CO was livid! He totally went off on him! I don't know all the details, but it had something to do with safety. Anyway, the word I got was that the colonel was so pissed off he was frothing at the mouth. Negron is standing there at attention taking it saying, \"Yes, sir!\" and \"No, sir!\" while the colonel's eating his lunch. Then the CO turns around, kicks the ground a few times then turns back around, and says, 'It's people like you who get Marines killed, Lieutenant!' then shoves Negron. Hard.\"\n\n\"Seriously?\" a bewildered Josh asked.\n\n\"I wasn't there. That's just what I was told, but it came from Gunny Randall, and he claims he saw it. The ass chewing was going on behind a Humvee, and he just happened to walk by when he heard all the yelling. So he goes to check it out, and the first thing he sees is a silver eagle on someone's cover.\"\n\n\"So he did a 180.\"\n\n\"Yeah. I mean, what else are you gonna do? Counsel the freakin' Group Commander? Randall's done two tours on the drill field, and he said he's never seen anything like that before, so that should give you an idea how bad this was.\"\n\nJosh just shook his head and wondered how anyone could get away with that sort of thing in 2019. Maybe in 1969 or even 1989. But now? He shook his head again then walked into the kitchen to grab a beer when he saw a flyer.\n\n\"What's this?\" he asked as he held it up.\n\n\"Oh, yeah. The hypnotist. This weekend in Morehead City. You wanna go?\"\n\nJosh scanned the flyer and noticed two things. The first was that the flyer was for a magic and hypnosis show in which the magician/hypnotist was a very attractive woman named Elaine Collins. The second was that the idea of hypnotism reminded him of a TV show called The Mentalist. He'd always enjoyed watching it, and the male star of the show was, among many other things, a hypnotist who used that ability to help victims or criminals recall events or spill the beans.\n\n\"I don't know. Looks kinda lame. You goin'?\"\n\n\"I am. And...I have a date,\" Vic proudly announced.\n\n\"No shit?\" Josh asked. \n\n\"I wouldn't shit you, bro. You're my favorite turd.\"",
        "\"Gee, yeah, I've only heard that one a couple of hundred times.\"\n\nVic laughed then said, \"Yeah. Cute girl. College senior.\"\n\n\"A date, huh? Must be nice.\"\n\n\"I'm sure she has a friend. You want me to ask?\"\n\nJosh looked at the flyer again then said, \"Nah. Besides, the 10 o'clock show is too late for me.\"\n\n\"Whoa! Too late? Ten o'clock is too late? Are you shittin' me?\" Vic said with a laugh.\n\n\"Sleep is a premium these days, my friend.\"\n\n\"Well, if you look, there's also an 8 o'clock show. You know, for children and seniors. Like you.\"\n\n\"Ha, ha,\" Josh said as he laid the flyer back down.\n\nVic came over and slapped his buddy on the back then said very seriously, \"You want to me see if I can find a walker for you? Maybe get you a bed that inclines so you can get out of it a little easier in the mornings?\"\n\n\"Yeah, yeah. Your turn's coming...buddy,\" Josh told him. \"Battalion adjutant, Group adjutant. Or if you're really lucky, maybe a general's aide!\"\n\n\"Uh-uh. Not me, man. I'm doing one more year and I'm gone.\"\n\n\"Hold on. You're gettin' out?\" a very surprised Josh said. \"I thought you loved the Marine Corps.\"\n\n\"I do. Or...I did. But seeing you, Mr. Tactical, pushing papers 14 hours a day then hearing about this dickhead colonel doing that shit to an officer in his own command and getting away with it? No, thanks. I can find a decent job on the outside. At least there I could hit the asshole back if he pulled something like that on me.\"\n\nUnlike Josh, who had a BA in psychology, Vic had a BS in engineering, and it wouldn't be hard for him to find a well-paying job. Then again, if this was all Josh had to look forward to for the next 14 years or so, he'd might find himself considering bailing out, too. \n\nFor now, though, that wasn't an option. He was going to push through this yearlong sentence at the Group then get back to what he loved most\u2014leading Marines. Or with any luck, he might get selected for AWS (Amphibious Warfare School), a plum reward for top-performing Marine captains. And so far, he'd been rated ahead of his peers on every fitness report he'd ever received with the exception of his very first one as a second lieutenant. So AWS was a distinct possibility unless the Group Commander torpedoed him on his next fitrep. (Fitness reports are the Army equivalent of OERs and NCOERs.)\n\nThe following morning Josh was surprised to see LtCol Strader's office empty and dark. He assumed she'd run into a bigger problem with her truck which was also missing from the parking lot. He was even more surprised when he found a handwritten note from her on a yellow sticky on his desk.\n\n\"Josh\u2014thank you again for the lift! I'll be a couple of hours late this morning. The boss knows so just keep plugging on his project. See you soon.\"\n\nIt was signed XO which made him laugh when he thought of its other meaning: hugs and kisses. And that thought made him smile as his oft-visited fantasy of kissing her when he dropped her off at her house pleasantly came back to mind. \n\nThe truth was he'd actually used that very fantasy in the shower last night. Prior to his latest assignment, he might have had to 'take care of business himself' once every 2-3 months as the women he met took care of nearly all of those needs for him. But since being assigned to the Group staff, it was more like 4-5 times a month, and he hadn't even had time to try and find someone who could um, blow his mind, let alone anything else. \n\nJosh soon gave up on his favorite new daydream and carefully went through the folders in his inbox and reprioritized them before checking his email to see if he had any taskers from the CO or other staff members. Finding none, he went back to the CO's personal project and finished it just as the XO walked in around 1000 or 10am to civilians.\n\n\"Morning ma'am,\" he said as soon as she stepped into the tri-office complex.\n\n\"Hey, Josh. Anything hot?\" she asked, a pleasant smile on her pretty face. \n\nThe first thought that came to his mind was, \"Other than you, ma'am?\" but he kept that to himself and told her there wasn't. Her bright, baby-blue eyes was another feature he'd been focusing on after dropping her off at the house and seeing them from just inches away. \n\nHe followed her into her office then set the CO's pet project folder in her inbox that was piled high, letting her know what it was.\n\n\"Thanks. I'll take care of that as soon as I check email.\"\n\nUnlike him, she had a half dozen emails from the CO that required action and another dozen or so from various unit commanders to their common boss on which she'd been CC'd. She worked through them one at a time until they were cleared then started proofing Josh's work.\n\nAn hour later she walked by and said, \"You're getting pretty good at this, Captain.\"\n\nShe smiled then asked, \"You want to take it into the boss personally?\"\n\nJosh didn't smile. He only asked whether or not she thought that was a good idea.\n\n\"I'm not a political animal, Josh. But things like face time with the boss are important. You did a nice job, and it would be to your advantage to give it to him personally. But I'm happy to let him know you did a bang-up job on it, so just let me know.\"\n\n\"Thank you, ma'am. I suppose I'll take it in myself then.\"\n\nJosh tapped on the CO's door, got a terse, \"Enter,\" then walked in and waited for further instructions.\n\n\"What is it, Captain?\" he asked without looking up.\n\n\"Your project, sir. It's complete.\"\n\n\"I assume the XO reviewed it?\"\n\n\"Yes, sir.\"\n\n\"Okay. Then set it in my inbox and clear the outbox on your way out.\"\n\n\"Aye, aye, sir,\" the adjutant said as he did exactly what he was told.\n\nAs he moved from the inbox to the outbox, he glanced at the man behind the desk and tried to imagine being on the receiving end of what happened to Lieutenant Negron, a solid platoon commander Josh knew fairly well. He also realized that for the first time he was afraid of a fellow Marine, a thought that troubled him every bit as much as the Negron incident.\n\nWhen he exited the CO's office, Josh realized he'd been holding his breath and slowly exhaled before shaking his head and saying to himself, \"That's just messed up.\"\n\nHe saw the XO look up at him and smile again.\n\n\"How'd it go?\" she asked quietly.\n\n\"I just dropped it in his inbox, ma'am,\" Josh told her before changing the subject.\n\n\"Did you get things all squared away with your truck, ma'am?\" he asked as he took one step inside her office.\n\n\"Oh, right. Yes. I needed a new battery and a new fuel pump. I've always been good about getting maintenance done, but not so much since moving up here to the Group.\"\n\nJosh now fully understood the difficulty of getting anything done during normal working hours for many businesses then being too tired to care of it after that. He only nodded then told her he was glad she was able to get everything worked out.\n\n\"And thanks again, Josh. You were a real lifesaver,\" she told him, the beautiful smile still there.\n\n\"Anytime, ma'am,\" he replied before going back to his desk and diving into the stack of folders that had grown another inch since he got in at 0630.\n\nBy the weekend Josh was beat. Even so, out of habit, he was up at 0530 on Saturday, and as he sat in his favorite chair he felt exhausted in spite of not having really done anything all week. And physically speaking, he hadn't. It was all mental, and all of the mental stuff was paperwork. And yet he was mentally exhausted and glad Vic wasn't there to give him grief.\n\nA long Saturday morning run in the cold, North Carolina air an hour later was refreshing and invigorating. Vic had been out partying until around 3am and was still sound asleep when Josh got back to the apartment around 0800 and still in bed when he started breakfast around 0900.\n\nAs he made himself something to eat, he looked at the flyer again and decided he'd go to the 8pm show just to get out of the house for awhile. Havelock, North Carolina, was a podunk town in between two larger towns in either direction called New Bern and Morehead City. Neither was much bigger than Havelock, but between the three of them there was usually something going on. It was often fairly lame, like a hypnotist, but it was better than sitting alone in the apartment watching TV. And it didn't hurt that the star of the show happened to be cute.\n\nThe cold front was late arriving and didn't pass through until around noon with a lot of wind and cold rain, and by the afternoon the temperature had dropped from a reasonable 52 degrees down to 36 by the time Josh got ready to go. Vic was already out with his co-ed, so Josh grabbed his leather jacket on the way out, and fired up the Jeep then waited for the heater to kick in about a mile down the road.\n\nDue to the low cloud cover, it was really dark except for the lights along the road or those coming from any of the many mobile home parks on either side of the road where a lot of Marines lived, many of them married with kids. As he thought about trying to get by on what a corporal made and support a wife and a child or two, Josh felt guilty for whining about his own petty woes as an adjutant. He was still getting paid more than a gunnery sergeant with 16 years in the Marine Corps, and that helped him keep things in perspective. It didn't make his petty problems go away, it just helped him realize things could always be worse.\n\nBy the time he pulled into the parking lot of the theater where the show was taking place, he'd forgotten about his current miserable job and the SOB he and several hundred other Marines worked for, and found himself actually looking forward to the act.\n\nThe warmth inside the theater was a welcome relief as he went inside and looked around. It wasn't exactly packed with people, but there was a fairly decent crowd getting ready for the show to start. He looked around at the empty seats and saw one that looked pretty decent and started making his way toward it. But he hadn't gone ten steps toward it when he heard a familiar voice.\n\n\"Josh?\"\n\nHe turned around and looked, but it took his brain a second or two to match the voice with the person who spoke.\n\n\"Colonel Strader?\" he said more as a question than an acknowledgment.\n\nIn the months he'd known her he'd never once seen her out of uniform other than to go run at lunch, and even then her hair had always been worn up in a bun. Tonight it was worn down and looked amazing as it fell down framing her pretty face. It looked like soft, gold cornsilk with just a small turned-in curl at the bottom which fell halfway between her chin and shoulders. She wore a side part and had just a wisp of bangs that were feathered above her left eyebrow.\n\nShe was wearing a bit more makeup than he'd ever seen, and that, too, only added to her overall beauty. A very quick glance told him she was wearing a pair of jeans with a white blouse under a black sweater with a little silver chain around her neck that looked like tiny sausage links. Unlike the wooly pully, this one not only looked flattering on her, it was very pretty.\n\nShe smiled then looked to her left. For the first time, Josh realized she was with someone else as he saw another woman looking at him and smiling. She was about Colonel Strader's age, but not nearly as attractive.\n\n\"You must be Josh Kennedy,\" the woman said very pleasantly.\n\n\"Uh-oh. You know my name?\" he replied with a smile of his own before adding, \"ma'am.\"\n\nThe other woman laughed then said, \"I do. And I'm not in the Marine Corps, so Millie is fine.\"\n\n\"Oh, okay,\" Josh said rather nervously. \"It's a pleasure meeting you, Millie.\"\n\n\"You, too. And don't worry about what she's said. Holly was telling me about how great you've been helping her out lately, and all I've heard are good things.\"\n\n\"I...I see,\" Josh replied, not sure what else he should say.\n\n\"Are you alone?\" the XO asked.\n\n\"Um...yes, ma'am. My roommate is coming to the 10pm...2200 show, but...\"\n\n\"That's too late for me,\" she replied with a laugh.\n\nJosh laughed, too, then told her, \"Yes, ma'am. That used to be when things got started, but now it's bedtime.\"\n\nThe XO laughed understandingly then said, \"You're welcome to sit with us.\"\n\nMille looked at Josh while she spoke to her friend.\n\n\"Holly, he's not gonna want to sit with two middle-aged women. If he's by himself, he'll at least have a chance of meeting someone tonight.\"\n\nHolly laughed then said, \"Good point,\" before Josh told her he wouldn't mind.\n\n\"I mean, if you don't mind,\" he quickly added.\n\n\"No. Of course not. Why would we mind?\" the XO asked as though sitting with a subordinate in public was as normal as could be. Then again, Millie was with her, so maybe it wasn't such a big deal after all.\n\nJosh let them choose the row then followed them until they sat down. Millie was between them, but before Josh could sit, she got up and said, \"Here. You and Holly know each other, so I'll move to her other side so you two can talk.\"\n\n'Holly' didn't bat an eye as her friend stepped around her and took a seat.\n\n\"This should be interesting,\" 'Holly' said to him about the show once he sat down, too.\n\n\"I agree, ma'am. I just don't want to be the guy up on stage flapping his arms and clucking like a chicken.\"\n\nShe laughed then assured him no hypnotist could get anyone to say or do anything against their will. She leaned a little closer then said, \"Of course, if you've ever thought about actually being a chicken then who knows, right?\"\n\nJosh laughed a nervous laugh then said, \"Yes, ma'am.\"\n\nWhen she leaned over he could smell her perfume as well as the shampoo in her hair, and there was an immediate reaction to both just below the belt. Fortunately, the emcee came out shortly thereafter and asked for their attention.\n\nAfter welcoming everyone, the man introduced their special guest for the evening who had been performing for three years doing magic and hypnotism in Virginia and the Carolinas.\n\n\"Ladies and gentlemen, please join me in welcoming Ms...Elaine...COLLINS!\"\n\nAs he was applauding, he felt 'Holly's' hand on his arm so he leaned her way.\n\n\"What if I'm the one up clucking like a chicken?\" she asked so seriously it made him laugh.\n\n\"No worries, ma'am. I promise not to video anything you do or say.\"\n\nShe leaned closer as the applause died down then said, \"Why doesn't that make me feel any better?\" before laughing, too.\n\nThe act began with a series of magic tricks Josh had mostly seen, but they were all well done and drew healthy applause each time one of them ended\u2014especially from the children in attendance. About an hour into the act, Ms. Collins informed the audience she was going to transition into the other part of his act and Josh heard some comments like, \"Uh-oh,\" and \"Oh, no!\" that made him chuckle.\n\nThings were going quite well until around 2130 or 9:30pm. She'd previously hypnotized the crowd knowing that people responded to hypnotic suggestion from what where called Levels 1-5. Those who were immune were the Level 1s and they sat there like nothing was going on. Holly was one of them.\n\nIt was just as easy to pick out the Level 5s by the way they responded completely to her suggestions, and she had several in mind to call up on stage with her. From then on, all she had to do was say, \"Way down!\" to one of them and that Level 5's head would flop down so fast it made everyone else laugh. \n\nOne of them soon found himself believing he was Michael Flatley, Lord of the Dance. The normally shy man was river-dancing his fool head off to some Irish music until Elaine said, \"And...wake up!\"\n\nThe man stopped in the middle of a move with one leg up in the air and looked around as everyone laughed.\n\n\"Any idea what's happening, sir?\" she asked the bewildered man.\n\n\"No, but I'm sure my wife will tell me\u2014and all of our friends\u2014later on,\" he said, getting a roar of laughter.\n\nMs. Collins asked for another round of applause then sent him back to his seat.\n\nJosh, Holly, and Millie all applauded as each of them was thoroughly enjoying the show. But that all changed when when Ms. Collins stepped off the stage and started walking down the aisle. \n\nShe was obviously looking for someone, and when she stopped and pointed at Josh, he said fairly loudly, \"You gotta be kidding me.\"\n\nEnough people heard him to draw more laughter just as Ms. Collins said, \"You, sir. You have a very short haircut. Is it possible that might be a...Marine Corps haircut, and if so, is it safe to assume you are one of our nation's finest?\"\n\nHe looked left then right, and Collins said, \"Yes. You. In the leather jacket sitting next to the beautiful woman in black. Are you a Marine?\"\n\n\"Go on!\" LtCol Strader said, as she gave him a playful push.\n\n\"Gee, thanks...ma'am,\" he said before answering, \"Yes, ma'am. I am.\"\n\n\"Ma'am? How old do you think I am?\" she said before telling him to call her Elaine and getting a few more laughs.\n\nHe walked over to her and she said, \"Folks? How about a round of applause for this brave young man?\"\n\nEveryone in the theater applauded as Collins asked his name.\n\n\"Josh. Okay, Josh,\" she said as she moved closer to him.\n\n\"You're a very handsome guy, if you don't mind me saying,\" Ms. Collins told him.\n\n\"Oh. Um...thank you,\" he said as she held the mic out so everyone could hear him.\n\n\"Okay, Josh. I have just two words for you.\"\n\nHe gave her a puzzled look, and Holly covered her mouth to hide her smile when the hypnotist said, \"Way down.\"\n\nJosh's head flopped down on command as Ms. Collins said, \"Okay, Josh. Please look at me.\"\n\nHis head raised up, his eyes opened, and to everyone else, he looked wide awake.\n\n\"So how are you feeling?\" she asked as she looked around, smiling and setting the stage.\n\n\"Good. I feel really good.\"\n\n\"So...nice and relaxed?\"\n\n\"Yes. Very,\" Josh told her.\n\n\"Great. Okay, so before we get started, I have a couple of questions for you. Is that okay?\"\n\n\"Sure.\"\n\nThe hypnotist led him back to his seat then told him to sit down.\n\nShe then looked at Holly then said to Josh, \"So, Josh. Who is this beautiful woman to your right?\"\n\n\"Holly,\" he replied, using her first name as though they were close friends.\n\n\"Holly. Okay. Is she your wife?\"\n\nWere he not hypnotized, Josh would have been extremely uncomfortable. But he was completely relaxed and said, \"No. Not yet.\"\n\nThe crowd roared, and Holly covered her mouth in surprise, but she laughed, too.\n\n\"Not yet, huh? Okay. So...is she your girlfriend?\"\n\n\"No, but I wish she was,\" Josh said, speaking with complete honesty.\n\nThe laughter rose again as everyone looked at Holly who was enjoying this as much as they were. The daughter soon died back down as everyone waited for the other to shoe to drop, and this line of questioning had them all on the edge of their seats. There were a few 'uh-ohs!' and other comments, but otherwise the crowd just listened.\n\nHolly's reaction told Ms. Collins what she'd already suspected. It was definitely one of surprise, but it told her the woman wasn't offended at all, and more importantly that she was at least open to the possibility.\n\n\"I see,\" the hypnotist said as she looked around and raised and lowered her eyebrows several times real fast, the spotlight shining down on her and her 'victims'.\n\n\"So does she know that, Josh?\"\n\n\"No,\" he told her very casually.\n\n\"Okay. So is there anything you'd like to say to her or maybe do to show her how you feel?\" Ms. Collins asked.\n\n\"Yes.\"\n\n\"Is that okay, Holly?\" she asked.\n\nMillie answered for her as she said very loudly, \"YES!\" causing the crowd to start laughing.\n\n\"So Josh. Why don't you do that now?\"\n\nWithout hesitation, Josh turned to the very attractive LtCol sitting next to him and said, \"Holly? You're the most beautiful woman I've even known, and I've wanted to ask you out for quite some time now, and even more, I've been wanting to do this.\"",
        "As Josh leaned in to kiss her, Holly's eyes got very wide, but she didn't move away. In fact, her eyes closed, and she kissed him back for a good three seconds before Ms. Collins said, \"And...wake up!\"\n\nJosh's lips had just 'broken contact', but he was still less then six inches from her face as he came out of the hypnotic state to see Holly's smiling face.\n\n\"What...what's going on?\" he asked as someone hollered out, \"Kiss her again!\"\n\nIt took Josh a couple of seconds to understand before he said, \"Oh, no. Please tell me I did not just...\"\n\n\"Oh, yes you did!\" the hypnotist told him. \"And you can thank me later!\"\n\nShe paused then said, \"Both of you!\" before asking for a round of applause for Josh and Holly, the newest 'couple' in Morehead City.\n\nMs. Collins then called several other Level 5s up on stage, and within a minute, each of them was air-playing an instrument to a piece of classical music. One of them was a pianist while others 'played' a violin or a cello while Ms. Collins served as the conductor. \n\nLike the others, none of them had any idea what they'd done or why they were on stage when she 'woke them up', but their location and the laughter told them the joke was on them.\n\nThis closing act drew huge applause, and she thanked everyone for coming and told them what a great audience they'd been. She bowed out then exited the stage as people stood up and began filing out.\n\nJosh hadn't had a chance to ask what he'd done, and he was almost afraid to find out. But not knowing was killing him so he turned to Holly once she stood up next to him and asked.\n\n\"I'll tell you!\" Millie said as she stepped in front of her friend.\n\n\"Uh-oh,\" a very-worried Josh replied as he looked at the LtCol who didn't seem upset.\n\n\"You proclaimed your love for Holly,\" she told him with a smile.\n\n\"Oh...my...God,\" Josh said one word a time before looking at his boss again.\n\n\"And then you...showed it,\" a very happy Millie said, omitting the 'how' part.\n\nHolly was smiling, and while that helped, Josh knew she might just be putting on a front while Millie was there.\n\nJosh looked right at the senior officer then said, \"Ma'am? I...I don't remember anything. At all. But whatever I said...or did...I am so, so sorry. And embarrassed.\"\n\n\"It's okay, Josh. I wasn't offended,\" she told him with a warm smile.\n\n\"Ma'am?\" he asked. \"I...I didn't. Please tell me I didn't...\"\n\nHe couldn't even say the words 'kiss you', but he didn't have to. \n\n\"It was actually...very nice,\" she told him without confirming his suspicions and did so with a look in her eyes he'd never seen before; a look that told him it was possibly even more than okay, and that made no sense to him at all, especially since he had no idea what he'd said or done while he was under.\n\n\"Thank you, ma'am, and again, I do apologize. For whatever I said. Or did.\"\n\nShe smiled again, then as she went to step around him said very quietly, \"Don't worry, Josh. This will be our little secret, okay?\"\n\n\"Okay?\" he replied, hoping she really wasn't upset.\n\nAs Millie walked by, she also whispered something to him.\n\n\"She won't admit it, but she likes you, too, Josh. So...ask her again sometime when you're not under hypnosis, okay?\"\n\n\"Ask her what?\" the befuddled Marine said as Millie walked away, feeling even more confused.\n\nBy the time he headed toward the exit, the two older women were outside, and Josh nearly ran into Vic and his cute, young co-ed as they were coming inside, talking and laughing as they held hands.\n\n\"Dude! Did you see the XO?\" Vic said as soon as his roommate recognized him\n\n\"The XO?\" Josh asked as though he had no idea what his roommate meant even as the thought of Vic having been inside and seen it all hit him and scared the hell out of him.\n\n\"Yeah. As in the Group XO.\"\n\nHe also leaned closer to Josh then said, \"She is so freakin' hot, man! I mean, those jeans were like...\"\n\n\"Oh. Yeah. I uh, I guess so,\" Josh mumbled before Vic could finish his thought.\n\n\"Trust me on that, okay?\" Vic said before introducing his date then telling her his friend couldn't stay because he had to be in bed by 10 o'clock.\n\n\"Why? What happens after that?\" the attractive, but not-so-bright college student asked.\n\nJosh was too deep in thought again to even respond to Vic's eye roll. He just wished them both a good evening then walked out to the Jeep where he sat quietly as it warmed up trying to make sense of what had just happened, and more importantly what it might mean for him the following week.\n\n\"But what the hell is 'it'?\" he asked himself as he sat there staring into the cold, dark night.\n\nVic went running with his buddy on Sunday afternoon and shared his 'success story' with the pretty co-ed.\n\n\"Nice,\" Josh told him.\n\n\"Nice? That's it? Did you hear me say how many ways we did it?\"\n\n\"Um...yeah. That's...that's amazing,\" Josh replied, his mind still elsewhere.\n\n\"Josh? What's goin' on?\" Vic asked and even waved a hand in front of his friend's face as though he might be hypnotized.\n\n\"Sorry. Nothing. Nothing at all.\"\n\n\"Okay. Don't tell me. I shared every detail of my romantic escapades, and you give me some BS line about nothing going when something IS going on. Okay. I see how this works.\"\n\n\"I just can't talk about it, okay?\"\n\nVic grabbed his friend's arm and stopped him.\n\n\"This sounds serious, bro. Talk to me,\" Josh's friend said as they caught their breath.\n\nJosh ran a hand through his thick, closely-cropped hair then sighed loudly.\n\n\"I got hypnotized last night.\"\n\n\"And?\"\n\n\"And I don't know. I have no idea what I said or did, but...\"\n\n\"But what?\" Vic demanded.\n\n\"It...it involved the XO.\"\n\n\"Whoa. Hold on. You said or did something to LtCol Strader?\"\n\n\"Yeah. I guess. I don't remember anything, though. Nothing. Not one word.\"\n\n\"Was she pissed?\"\n\n\"What? No. She was really nice about it. Whatever 'it' was.\"\n\n\"Oh, man. You are in DEEP shit, Captain!\" Vic laughed as he slapped his larger friend on the back.\n\n\"Yeah, and the worst part is I have no idea what the f...what I said.\"\n\nHe'd never really heard Mille other than the 'ask her again' part, and if he had heard it, it didn't register, so he was telling the truth when he said he didn't know.\n\n\"Sucks to be you,\" Vic quipped. \n\nHe took off running again then hollered, \"For several reasons! Like how out of shape you are now!\"\n\nJosh took off, too, then hollered out, \"Watters? You're the perfect example of 'buddy' being only half a word!\"\n\nVic turned around and laughed at the old joke about a friend like Vic being a buddy f-er then took off like a shot.\n\nBy Monday morning, Josh was more than a little apprehensive about going to work. But he put on his game face and walked in to see the XO behind her desk.\n\n\"Good morning, ma'am,\" he told her cheerfully.\n\n\"Josh. Hi,\" she said with a smile before going back to the document she was working on.\n\n\"Whew,\" a relieved young captain said to himself as he sat down. \n\nFor the first time since being assigned to the Group, he was grateful to have a mountain of folders in his inbox and happily dug into them.\n\nThe one bright spot was that the CO was TAD, on temporary additional duty (TDY in the Army and Air Force), and things were remarkably calm and serene around the entire Group for several days. But that ended on Friday when he came back and called a staff meeting as soon as he walked in.\n\nJosh cringed when the Group Commander snapped at the Group S-3 officer when he didn't have an immediate answer to a question. He then laid into the S-4 officer who hadn't yet finished coordinating with another Group in the Wing for an upcoming exercise, and Josh was expecting to get both barrels when it came time for him to report what had happened.\n\nInstead, the CO said, \"Shit hot work on the project I assigned you, young man. What else have you got for me?\"\n\nJosh muddled through his other notes, stunned by the only words of praise he'd ever received from the Tyrant-in-Chief. But his 'warm, fuzzy' ended a few moments later when the XO was wrapping things up.\n\nFrom the first moment she opened her mouth, the CO cut her off at the knees.\n\n\"Old news. Move on.\"\n\nShe did just that then heard, \"That is NOT what said I wanted, and I was very clear about that!\"\n\nAfter a third similar incident, the CO stopped her again and said, \"Enough! This meeting is over. XO? See me in my office immediately!\"\n\nEveryone snapped to attention as the colonel stood up, and once he was gone there were a lot of 'what the fuck just happened' looks all around the room, but no one said a word. At least not until they were safely alone with someone they trusted.\n\nJosh carefully walked into his office, but he could hear the CO tearing into the XO, and as bad as he felt, there was nothing he could do but cringe.\n\nThe last thing he heard was LtCol Strader saying, \"Aye, aye, sir,\" before walking out with several new folders in her hand.\n\nIt was very rare for her to close her door, but she shut it after going into her office.\n\nJosh sat there for quite some time and didn't hear any sound whatsoever coming from her office. A good five minutes passed before he got up the nerve to walk over to her door and quietly knock.\n\n\"Stand by,\" he heard her say.\n\nIt was obvious to him that she was either crying or close to it, as he stood there for a few moments then gently pushed on the door.\n\n\"Ma'am? Are you okay?\" he asked, just his face inside the door.\n\nShe wasn't sitting behind her desk but rather in one of the chairs in front of it.\n\nShe held up a hand but didn't speak, and that's when Josh knew she was fighting back tears.\n\nHe stepped inside in spite of her non-verbal cue to stay out then closed the door behind him.\n\n\"You...shouldn't be...in here...Josh,\" she told him as she tried to get control of her breathing.\n\n\"It's none of my business, ma'am, but that was completely out of line.\"\n\nHe saw her glance his way but didn't look at him.\n\n\"What the Colonel did,\" he said to make sure he was clear.\n\n\"He's...the...CO,\" she replied, one word at a time, her voice ragged with emotion.\n\nWithout asking, Josh sat down next to her then quietly said, \"He is. But you're a LtCol with over 20 years in the Marine Corps. CO or not, that's just...wrong.\"\n\nShe had a tissue in her hand, and as she dabbed her eyes, she said, \"Believe it or not, this is the first time in all those years I've ever lost it.\"\n\nShe glanced his way again then said, \"I'm sorry you had to see this.\"\n\n\"Ma'am?\" he said very quietly.\n\nShe sat up straight, then almost looked at him as he smiled and said, \"As someone I respect very much once told me, you're not just a Marine. You're also a woman.\"\n\nLtCol Strader finally smiled and even looked at him as she blinked several times.\n\n\"That's the third time you've made me feel good, Josh.\"\n\n\"Ma'am?\" he replied again, not sure what she meant.\n\n\"When you took me home. That was once. Then what you said\u2014and did\u2014when you were hypnotized. That was twice.\"\n\nShe smiled again then told him this was the third.\n\n\"Ma'am? Would you mind telling me what I said? When I was hypnotized.\"\n\n\"It doesn't matter. I'm sure you didn't really mean it, anyway,\" she told him, another brave smile on her face.\n\n\"I do remember that same person telling me no one can be made to say or do anything they don't believe or want to do when hypnotized.\"\n\n\"Oh, right. Yes, I did say that, didn't I?\" she said, managing a little smile along with the words.\n\nJosh waited for her to tell him, but she only turned his way and asked, \"Is there any mascara on my face?\"\n\nThere was one little streak, and when Josh told her, she reached for the wrong eye.\n\n\"Here. Let me get it,\" he said as he reached out to gently wipe it away.\n\n\"Josh? Please don't,\" she told him as she turned away.\n\n\"My apologies, ma'am,\" he told her as he pulled his arm back.\n\n\"No. It's not that,\" she said. \"It's just...I'm afraid that if you touch me again, I won't be able to...\"\n\n\"Again?\" he asked, too afraid to say more.\n\n\"I know I shouldn't tell you this, but you...you kissed me. When you were hypnotized.\"\n\n\"No. Please tell me that's not true,\" he begged more than replied.\n\n\"Oh, it's true,\" she told him as she cleared the mascara then looked at him.\n\n\"You also told me how you've wanted to ask me out for the longest time,\" she said with a very sweet smile.\n\n\"I take it you didn't slap my face?\" he asked, trying to smile back and for the second time not saying 'ma'am.'\n\n\"No. Why would I?\" she replied in that same voice.\n\n\"I suppose because you didn't want me to say or do either of those things,\" he told her.\n\n\"I was very surprised, Josh, but the truth is, I...I kissed you back.\"\n\nJosh shook his head a bit then asked, \"You...kissed me back?\"\n\nBase on the way he responded, for the first time it occurred to her that he might be the one who found that inappropriate. She forgot all about hypnotists not being able to make anyone do something they didn't want to, as she imagined him being disgusted by what she just said.\n\n\"I'm sorry,\" she said. \"I think I let my feelings for you get out of hand, and if I offended you, please...\"\n\n\"Offended me? You...you can't be serious. I have a serious...\"\n\nThe word was so sophomoric he couldn't say it.\n\n\"A crush?\" she asked with that amazing smile of hers.\n\n\"That and more,\" Josh told her truthfully.\n\nShe smiled again then, against her better judgment said, \"As long as I'm letting my weaknesses show, I could really use a hug right now. Would you mind holding me for a moment?\"\n\nJosh put his arms around her for a few seconds, and just as he was pulling away, the door opened without a knock. Only one person would dare do that, and they tried to separate as fast as possible, but he'd seen them.\n\n\"You've gotta be goddamned shittin' me!\" Colonel Clarke sneered.\n\n\"Sir. This was all my fault. Please don't blame Captain Ken...\"\n\nHe was clearly agitated by something else, but LtCol Strader knew this just poured gas on the fire.\n\nHe glared at both of them then pointed right at his XO and told her, \"Pack up your shit.\"\n\nHe looked at his adjutant then said, \"Both of you. You're both relieved of duty. Go home and stay there until you here from me.\"\n\nBoth Holly and Josh were now standing there at parade rest, their hands behind their backs as the colonel continued to rant.\n\n\"I've got another disloyal little prick on his way up here to accuse me of some bullshit, and his battalion commander is supporting him the lying little cocksucker! Looks like I'll be relieving two more officers before the day is over!\"\n\nHe spun around and slammed the door on the way out, and Holly began apologizing.\n\n\"Hey. Don't,\" Josh told her. \"It's not your fault. He's a prick. And all that matters to me is knowing you're okay. I don't care what he does to me.\"\n\n\"Josh. This is serious. Really, really serious.\"\n\n\"All I did was give you a platonic hug. If that's serious, then screw him and the Marine Corps.\"\n\n\"I know you don't mean that. About the Corps. I won't argue about Colonel Clarke, but it really is his prerogative to relieve us, and we had no business doing that, and I'm at fault for it.\"\n\nJosh wanted to argue but couldn't because she was right. \n\nThey wouldn't be court-martialed. That much was certain. More likely, this behavior would result in something called a Punitive Letter of Reprimand, which was serious, but because she was retiring, it wouldn't hurt Holly one bit. Josh would likely get the same thing, but in his case, it would mean the end of any hope of any future promotion, effectively ending his career. But at that very moment, his career was the last thing on his mind.\n\n\"I don't care,\" Josh told her. \n\nHe turned toward then asked, \"Are you okay?\"\n\nShe forced a smile then said, \"Yes. I'm fine. And we really do need to grab our things and leave.\"\n\n\"Yes, ma'am,\" Josh said out of habit.\n\nWhen he stepped into his office, his former CO, LtCol Armstrong, was sitting there.\n\n\"Hey, sir. How are you?\" a very-confused Captain Kennedy asked.\n\n\"Okay. How about you?\"\n\n\"Fine, sir. How may I help you?\"\n\n\"First of all, what the hell is going on? I walked into your office just as the CO slammed his door.\"\n\n\"Oh. That,\" Josh said just as Lieutenant Negron walked in.\n\nHe saw the captain and said, \"Good afternoon, sir.\"\n\nLtCol Armstrong's name was appropriate. He was a huge man who lifted weights. Heavy weights. Josh was happy to bench 225 three times, but this man started with 250 to warm up and worked up from there, easily doing 400lbs on his last rep or two. Josh was a good-sized man, but LtCol Armstrong made him look small by comparison. Ironically, he was a quiet, humble man and by far the finest officer Josh had ever known.\n\n\"Well, I need to see the boss,\" he told the adjutant as he stood up.\n\n\"I uh, I don't think I can tell him you're here, sir,\" Josh said leading the larger man to assume it was due to the Group CO's mood.\n\n\"That's okay. I can see myself in,\" the huge man said as he walked by.\n\nHe tapped on the door and pushed it open.\n\n\"Sir? Can we talk?\" Josh heard him ask.\n\n\"Not now, Rich,\" his boss told him flatly.\n\n\"Sir? This can't wait.\"\n\nJosh heard the phone being hung up before the Group CO said, \"Fine. Let's get this nonsense taken care of. I need to brief the CG on the bullshit going on in my own house, but let's clean up this pile of shit first!\"\n\nThe door closed, and Josh turned to the lieutenant and asked what was going on as he started collecting his things.\n\nWhen he didn't answer, Josh asked, \"Is this about...Bogue Field?\n\n\"Yes, sir.\"\n\nJosh knew better than to say a single word about life at the Group headquarters to a subordinate, but it was all he could do not to at least say, \"We all understand.\"\n\nInstead he asked him to have a seat just when they heard the Group CO thunder, \"That's a goddamn lie!\"\n\nNeither or them heard the LAAD battalion commander's reply, but they did hear the Group Commander say, \"You get that lying little shit in here right now and tell him to report to me!\"\n\nThe door opened, and Josh heard his former CO say very calmly, \"Lieutenant Negron? Report to the Group CO.\"\n\nA very nervous, 23-year old officer stepped inside and as the door closed, Josh heard, \"Sir! Lieutenant Negron reporting as ordered, sir!\"\n\n\"What in God's name is going on in there?\" he heard the XO nearly whisper as she came out of her office. \"I was getting my things together when I heard the noise. Who's in the CO's office?\"\n\nJosh whispered his answer, and the moment she said Negron's name, she knew.\n\n\"The Group Commander is right. Someone else is going to be out of a job before this is over,\" she said before shaking her head and going back into her office.\n\nLess than two minutes later, the door opened again, and Lieutenant Negron came out with beads of sweat running down his face.\n\nWithout being asked, he said, \"I just got relieved, and LtCol Armstrong told him if he relieved me, he'd resign the battalion, so I think he's being relieved right now, too.\"\n\n\"What the f...\" Josh said, not sure he heard correctly even though he and the XO had already been relieved of duty themselves.\n\nAnother minute passed when his former CO stepped out followed by the Group Commander who was frothing at the mouth. \n\nThe larger man who stood 6'3 looked down at the senior office who was 5'7\" and waited for the rant to end. \n\nWhen it did he quietly said, \"Sir, I no longer work for you. As a courtesy, I'm letting you know I'm taking Lieutenant Negron from here directly to the Wing Headquarters for a meeting with the Commanding General.\"\n\nHe then turned around, grabbed his young officer and headed out as his former boss hollered, \"You disloyal bastard! I'll have you court-martialed for this!\"\n\nJosh made sure not to look at him, but before he went back into his office, he snapped, \"What the hell are YOU looking at and why are you still here?\" before slamming the door behind him.",
        "Colonel Strader came back out of what used to be her office, but Josh motioned for her to go back in then followed her inside where he explained what was going on. Both of them heard the Group Commander's private door slam shut less than a minute later, and they stood there looking at one another, almost having forgotten their own self-inflicted problems.\n\n\"Be that as it may, we were both ordered to leave,\" the XO told Josh.\n\n\"Ma...\"\n\nHe stopped then, without thinking said, \"Holly? I'm not leaving until I know for sure you'll be okay.\"\n\n\"I'm fine, Josh. Really.\"\n\nShe looked at him in the way he loved then said, \"It's you I'm worried about. Your career. Your future. It's...\"\n\nJosh shut the door then walked over to her and put his arms around her again. She not only didn't push him away, she hugged him back and rested her head in the crook of his neck.\n\n\"I'm not going to the brig, and anything else that sawed-off Napoleon does to me is just fine,\" he told her. \n\nHis tone softened as he smiled and said, \"I just need to know one thing.\"\n\n\"What's that?\" she asked as she pulled back a little.\n\n\"The kiss. At the theater. Did that mean something to you?\"\n\n\"I've played by the rules my entire career, Josh. I've never, ever done anything like that before.\"\n\nShe looked down for a moment then back up at him before saying, \"But I've never fallen for anyone so...utterly inappropriate before, either.\"\n\nJosh smiled then said, \"Fallen? Seriously?\"\n\n\"Yes. Fallen. I've had feelings for you since you took me home. And after you kissed me, even though you don't remember it, I haven't been able to stop thinking about you.\"\n\n\"I thought it was just me who was unable to stop thinking about you,\" he told her as he touched her cheek.\n\n\"I...I haven't said anything because...because I'm...\"\n\n\"A LtCol and the Group XO?\" Josh asked with a smile.\n\n\"Well, yes. But more importantly because I'm not someone you'd ever think of that way because...well, because I'm...43 years old.\"\n\n\"Oh, wow,\" Josh said as though it thought it was a big deal.\n\n\"I know. It's pathetic. I'm now the middle-aged woman who still thinks she's 20-something, and even worse, that a very attractive, 20-something year old officer sees her the same way. Talk about embarrassing, right?\"\n\nBefore Josh could reply, Holly lowered her arms, turned around, then said, \"Saying that out loud just made things even worse.\"\n\n\"Worse?\" Josh asked as she went back to packing up her things and stuffing them in her PT bag.\n\n\"Well, yes. You've been very sweet to me, Josh, but I'm not a fool.\"\n\nShe hesitated then said, \"Okay, maybe I am a fool for thinking someone like you could have feelings for a woman like me. And an old fool, at that.\"\n\nHe walked up behind her, put his hands on her shoulders then said, \"If you're through trying to tell me how I feel about you, may I please speak?\"\n\nFor effect, he added, \"Ma'am?\"\n\n\"Sorry. Yes. Of course,\" she said without turning around.\n\n\"I evidently asked you out when I was hypnotized. And that makes sense now since Millie told me to 'ask you again' when I wasn't. I didn't understand that at the time, but now I get it.\"\n\n\"Oh, right. Yes. Yes, you did. Or you at least told me you've wanted to ask me out.\"\n\n\"That makes sense then, because I did. And...I still do.\"\n\n\"Josh? Be real,\" she said before finally turning around.\n\n\"I'm truly flattered, but I really am 43. You can't possibly be interested in...\"\n\n\"In for a penny, in for a pound,\" Josh told himself as stopped her from continuing by kissing her...again. \n\nShe gave in and kissed him back, then smiled and said, \"Well, maybe you can.\"\n\nJosh smiled and told her, \"I'm more than just interested, Holly. So whatever happens...with us...with the Marine Corps...I am very interested in having a relationship with you, so...will you go out with me?\"\n\nShe put her hand on his forehead to see if he might be feverish then smiled.\n\n\"You're not delirious, so...okay. I accept.\"\n\nHer smile made him want to kiss her again, but she reminded them they needed to leave.\n\n\"But you could stop by later tonight if you like,\" she told him just before he went back to his office to gather his things.\n\n\"Maybe around 2000?\"\n\n\"Eight o'clock sounds perfect,\" she told him before putting the last of the things she could reasonably carry in her bag.\n\nWhen Josh got to the apartment, a very animated Vic Watters grabbed him immediately and said, \"Dude? Did you hear?\"\n\n\"No. What happened?\"\n\n\"I just got a call from the CG's aide. We went to TBS together, and he's a good friend of mine.\"\n\n\"Yeah? And?\"\n\n\"The Group CO got fired!\"\n\n\"Are you serious?\" shocked Josh Kennedy asked.\n\n\"Serious as a heart attack, man! And our CO is back at work and so is Negron.\"\n\n\"Holy shit!\" Josh said.\n\n\"And guess who the acting Group CO is?\"\n\nBefore he could answer, Josh said, \"Yeah. Colonel hottie herself.\"\n\nA dumbfounded Josh Kennedy stood there shaking his head as Vic quipped, \"Oh how the mighty have fallen. And good fucking riddance, right?\"\n\nFor added effect, Vic did the Nazi salute and shouted, \"Sieg heil, mein Fuhrer!\"\n\nJust when Josh thought he couldn't be more surprised, his phone rang.\n\n\"Josh? Hi. It's me,\" he heard Holly say.\n\nHe quickly stepped into his bedroom then asked her if she'd heard.\n\n\"I did. First hand. I just left the Wing Chief of Staff's office. I'm sure you know he used to be the MACG-28 CO a couple of years back. Anyway, he called me as I was leaving base, so I detoured to the Wing Headquarters building. The short version is we're not only not relieved, he told me I'll be the acting Group CO until the new CO is onboard.\"\n\n\"Wow. What a difference...\"\n\nHe looked at his watch, laughed, then said, \"A few hours make!\"\n\n\"Listen. You and I...we...we can't see each other for...\"\n\n\"I understand,\" he told her. \"I don't like it, but I understand.\"\n\n\"You didn't let me finish,\" she said.\n\n\"Finish?\"\n\nShe laughed then told him, \"We can't see each other...in public. Until I retire. Which isn't very far off.\"\n\n\"Okay. I like that a whole lot better,\" Josh told her.\n\n\"I told the Chief of Staff everything, by the way.\"\n\n\"Everything?\"\n\n\"About us.\"\n\n\"And you're not being reprimanded or...\"\n\nHolly laughed then said, \"No. In fact, it's all good. All of it. I'll tell you everything later tonight, okay?\"\n\nShe paused for a moment then asked in that sweet voice of hers, \"That is, if you're still coming over.\"\n\n\"Oh, yes ma'am,\" he told her, only this time 'ma'am' meant 'you betcha'!\n\nShe laughed then said, \"I can't wait to see you, Josh.\"\n\n\"Bye...Holly,\" he told her as the line went dead and all of the changes in his life began to sink in.\n\nAt 1945, or 7:45 pm, Vic asked Josh where he was going 'so late'.\n\n\"Maybe I have a date,\" his roommate replied.\n\nVic nearly bought it then started laughing.\n\n\"Yeah. Right! You on a date at this time of night? Uh-huh. Sure.\"\n\nVic then said, \"Hey! I know where you're going! You're headed to the drug store for some Metamucil, aren't you?\"\n\n\"You know me too well,\" Josh told him as he opened the door.\n\n\"You sure you can drive at night, Grandpa?\" Josh heard as he closed it then smiled as he thought about the beautiful, older woman who was waiting to see him.\n\nAs Josh drove, he tried to wrap his brain around everything that had happened in the last 12 hours or so. People talked about riding a roller coaster when referring to ups and downs, but this was insane. He'd gone from feeling like nothing but an overworked paper-pusher with no one in his life, or even much of a life, to being relieved of duty then restored back to duty, and most of all, he now had someone in his life. Someone he thought he might be falling in love with.\n\nWhen he arrived, it was very cold outside, but he was very aware that his palms were sweaty. By the time he knocked on her door there was a pit in his stomach the size of a softball. \n\nWhen the door opened Holly smiled and said, \"Hi. Come in.\"\n\nHe thanked her then stepped inside and looked at her.\n\n\"You looked amazing at the theater, but...wow,\" he told her.\n\n\"Thank you, and you look very handsome yourself. Can I get you a drink?\" she asked in that sweet voice he loved.\n\n\"Not unless you're having one.\"\n\n\"I thought maybe some champagne might be in order,\" she said with a happy smile.\n\n\"Well, you were the bearer of some very good news, so...sure,\" Josh said.\n\n\"And the news gets even better,\" Holly assured him as she asked if he'd might popping the cork.\n\nHe went to take the bottle, but she didn't let go.\n\n\"Not so fast\u2014Captain,\" she said before she put her free hand behind his head and kissed him. \n\nShe let go then said, \"Okay. Now you can open it.\"\n\n\"Yes, ma'am,\" Josh said as he tried not to laugh.\n\nHe poured some for each of them in the glasses she'd set out then handed one to her.\n\n\"So what could possibly be better than not getting fired?\" he asked.\n\nShe stopped him again then proposed a toast.\n\n\"To doors. Those that open and those that close.\"\n\n\"I'll drink to that,\" Josh told her as they touched glasses then took a sip.\n\n\"Come sit down with me, and I'll tell you everything.\"\n\nJosh set beside her on the couch in her very-tastefully decorated home and asked what was going on.\n\n\"Well, for starters your old boss...\"\n\n\"Is keeping his job. As is Lieutenant Negron.\"\n\n\"Smarty pants,\" Holly teased when she realized he'd already heard, before taking another small sip.\n\n\"The big surprise is that you and I can...be together...just not in public and not in the same unit.\"\n\n\"But you're going to be the acting CO, so how can you be leaving?\" a confused Josh asked.\n\n\"I'm not. You are.\"\n\n\"Me? Oh, no. Please don't tell me I'm going to the Wing Headquarters. Just shoot me if I am!\"\n\n\"You're not,\" Holly told him with a laugh. \"You're going back to LAAD battalion. Tomorrow.\"\n\nJosh nearly choked on the sip he'd just taken. He coughed then looked at Holly and asked, \"Are you kidding?\"\n\n\"No. The Chief of Staff asked me what I thought was best, and I told him you'd done a great job for the Group, and that you should go back where you're the best at what you do. And he agreed.\"\n\n\"And he knows you and I are...\" Josh began.\n\n\"Seeing each other? Yes. He thanked me for being honest, asked if anyone else knew, and I told him the only person was Colonel Clarke.\"\n\nHe laughed then said, \"I mean, 'Does anyone human know'.\"\n\n\"No sh...joke? He said it like that?\"\n\nShe finished another sip, laughed happily then told Josh, \"He said he and the general knew something was going on in the Group. They just didn't have any proof until today. But yes, he thinks Colonel Clarke is a...\"\n\nHolly moved closer to his ear then whispered, \"A dick with feet.\"\n\nJosh roared and Holly joined in as months of frustration melted away.\n\n\"That is good news,\" Josh agreed.\n\n\"Oh. There's more!\"\n\n\"Do tell!\"\n\n\"As you know, I have a retirement date. But my last day in uniform is up to me.\"\n\n\"Right. You can take terminal leave up to 60 days in advance.\"\n\n\"Plus a few other days, but yes, that's about right.\"\n\nShe snuggled up closer then said, \"The new Group CO won't be here for at least three weeks, and he'll need a week of turnover time. Plus they'll need to find a new Group XO, but the bottom line is I'll be going on terminal leave as soon as the new CO is in place and snapped in.\"\n\n\"Oh. I see,\" Josh told her before draining his glass, setting it down, and putting his arm around her.\n\n\"And that means you and I won't have to sneak around anymore.\"\n\n\"Holly, that's fantastic,\" Josh told her.\n\n\"Yeah. I think so, too,\" a very happy Holly Strader told him with a warm smile.\n\n\"Looks like the good guys won one today,\" Josh said with a smile of his own.\n\n\"Yes. Yes, they did,\" she agreed before pulling him close and kissing him like she never had.\n\n\"Mmmm. I've been waiting to do that for much too long,\" she told him.\n\n\"I'm glad you did, because that's been my fantasy since...well, pretty much since the first day I met you.\"\n\n\"You...you make me feel pretty and special,\" she told him. \"But you have to understand that my body doesn't look...pretty...anymore or like it did 15 years ago when I was your...\"\n\n\"Are you trying to run me off?\" Josh asked with a smile.\n\n\"No. I'm just...warning you. So you won't be too disappointed. You know, whenever you see it for the first time.\"\n\n\"Good point, because I'll have to actually see it for myself to know for sure,\" he replied very seriously.\n\nHolly laughed then asked if he was propositioning her.\n\n\"I believe I am,\" he told her.\n\n\"Okay. I was just asking,\" she said as she got up and pulled him up to her. \"And since you are propositioning me...I accept your proposal.\"\n\nJosh was more than amazed at just how close to perfect her body was. No, it didn't look 25, but it was still far better than most women that age, and better than 90% of the bodies he'd seen.\n\nHe told her that as he kissed and caressed it as she softly moaned and told him how amazing his was, too. After pleasuring each other orally, Josh got on top of her then said as seriously as he could, \"Permission to come aboard, ma'am?\"\n\nHolly laughed then said, \"Permission granted! And then some,\" as she reached for him and guided him in.\n\n\"So no regrets?\" she asked as she rested in the crook of her lover's neck, her hand on his chest.\n\n\"Are you kidding? That was the most amazing thing I've ever done and with the most amazing woman...\"\n\nHe smiled then said, \"I've ever done.\"\n\n\"You're very skilled yourself,\" she told him as she laughed happily at his double entendre.\n\n\"So now what?\" Josh asked.\n\n\"Well, near term, I'd say we wait a few minutes until your 27-year old body is ready to go again, and then...\"\n\nJosh's laughter interrupted her thoughts, and she laughed, too.\n\n\"It feels SO good not to live under the threat of a dictatorship,\" Holly said when they stopped laughing.\n\nJosh rolled over on top of her then said just as seriously as before, \"Hey. Wait a minute. Are you saying you don't like being under a...dick?\"\n\nHolly's eyes opened wide in mock surprise before she laughed again.\n\n\"Um...you won't ever hear me complaining. Ever,\" she told him as Josh began 'saluting' her from below.\n\nAfter a second 'go', he asked what her longterm plans were.\n\n\"That depends,\" she told him.\n\n\"On?\"\n\n\"On what my handsome, new boyfriend wants.\"\n\n\"Wait. You have a handsome, young boyfriend?\" Josh asked, doing the serious thing again.\n\nHolly laughed yet again then told him, \"I wasn't kidding when I said I've fallen for you, Josh.\"\n\n\"Nor was I,\" he told her immediately.\n\n\"So if things go well for us, I'd be willing to support you in whatever you decide to do, and that would affect my future plans.\"\n\n\"Workwise?\"\n\n\"Yes. And...anything else...wise.\"\n\nHe rolled on top of her again then asked, \"Does that include having a family?\"\n\n\"Josh? Don't tease about that, okay,\" she asked in a way that reminded him realize how important that was to her.\n\n\"I...I wasn't teasing, Holly. I want a family, too.\"\n\n\"We have a lot of getting to know one another first, though,\" she cautioned.\n\n\"We do. And I can't wait to know everything about you.\"\n\n\"For starters, as much as I've loved the Marine Corps, all I really want in life is a loving husband, and a child or two.\"\n\n\"That's it?\" he asked with a gentle smile.\n\n\"Yes. That's it.\"\n\n\"Wow. You're a cheap date,\" he teased.\n\n\"I really am a low-maintenance kind of girl,\" she told him. \"I don't ask for much, and I'm willing to give everything I have to make a relationship work.\"\n\nJosh was still on top of her, and as he looked into her eyes, he said, \"You are so beautiful.\"\n\n\"Thank you...sweetheart,\" she said in that voice he loved.\n\nHe did a kind of push up and looked down between them.\n\n\"I believe I'm ready for Round Three,\" he told her.\n\n\"Then...ding, ding, ding!\" she said like a bell as she pulled him close and loved him again.\n\nThe following morning, LtCol Armstrong was waiting for him when Josh walked inside the battalion headquarters building.\n\n\"Welcome back, stranger,\" the huge man said with a warm smile as he extended a hand.\n\n\"Sir, it's good to be back,\" the young captain told him as he shook it.\n\n\"Oh, and I've got a job for you, too,\" the CO said.\n\n\"Sir? If you say 'battalion adjutant'...\"\n\nThe battalion commander laughed and told him he wouldn't do that to him.\n\n\"But I do need an H&S Battery commander. You've already had a firing battery, and this will be a really good resume enhancer for you.\"\n\nH&S stood for Headquarters and Service, and it was the only command no one really wanted. It was an important job, but it wasn't anything like being in command of a firing battery. H&S was a conglomeration of the S-shops: S-1, S-2, S-3, S-4, and S-6 (communications) along with motor transport, supply, and the adjutant's shop of four whole people. But it was a command, and Colonel Armstrong was correct.\n\n\"I'd be honored, sir,\" he told his CO.\n\n\"Okay. Then let's stop in and say hello to the guy who's leaving in six weeks then we'll find somewhere to put you until you take over.\"\n\nThe CO smiled and assured the captain it wouldn't be as the adjutant.\n\n\"I'm thinking the S-3. We need a training officer, and you could get a lot done in that amount of time.\"\n\n\"Training? Sign me up, sir,\" Josh told him as he walked back into the office he'd been in dozen of times in the past.\n\nNot being able to see Holly or even text her during the day was torture. Not just for him, but for her, as well. But they made up for it each evening as Josh spent as much time with her as he could.\n\n\"You know Vic is asking who my new girlfriend is, right? he asked her the following evening.\n\n\"What did you tell him?\" Holly asked, knowing he'd never betray them.\n\n\"You know how he kids me about being old, right?\"\n\n\"Right. The walker and the Metamucil,\" she laughed.\n\n\"Well, I told him I was dating an older woman.\"\n\n\"What? You told him that?\" a surprised Holly asked.\n\n\"I did. And that was the perfect cover because it played into his little schtick.\"\n\n\"Ah, okay. Nicely done, Captain,\" she said with a smile and a kiss.\n\n\"Speaking of done. How would you like me to...do you again?\" he suggested with his now-famous straight face.\n\n\"Oh, gee. I don't know. Let me think. Hmmm? I've had more sex in the last two days than in the last two years, so...\"\n\n\"Oh, okay. So you're satisfied then. Okay. Makes sense,\" Josh said as he looked away.\n\n\"Hey! I did not say that!\" Holly pouted. \n\n\"You implied it,\" Josh said as he folded his arms in front of him.\n\n\"Then you don't know me very well, at all, do you?\" she said as she began nuzzling his neck. \"Because...in case you didn't know it...I just happen to be in my sexual prime.\"\n\nJosh raised an eyebrow then said, \"Gee, what a coincidence. Same here.\"\n\n\"Then I believe we should take...prime...advantage of that fact.\"\n\nShe pulled Josh to his feet again, but this time he pulled her close and said, \"It's a good thing you don't depend on comedy for your living.\"\n\n\"Hey! That was funny,\" Holly said, pretending to be defensive.\n\n\"Uh-huh. And Colonel Clarke was a superb leader.\"\n\nHolly's eyes got wide as she feigned being indignant.\n\n\"Well, see if you get to take advantage of my...my prime...\"\n\nShe stopped, laughed happily, then said, \"You're right. My comedy sucks.\"\n\nJosh let her go then said, \"Speaking of how much you suck...\"\n\nHolly laughed even louder as she pulled him toward the bedroom.\n\n\"Are you complaining?\" she asked.\n\n\"Me? No. Not at all. I was just going to tell you that, unlike your comedy routine, your skills in the um, sucking department, are amazing.\"\n\n\"Nice save, Captain,\" she told him as she pulled him into the room and kicked the door shut.\n\nHolly's last day on active duty in uniform was planned to be one week before Josh's change of command ceremony. She didn't want any kind of parade or ceremony herself. Just a quiet get together with friends and co-workers at the officer's club. Josh didn't attend because they still weren't ready to go public with their budding relationship, and as far as they knew, no one even suspected.",
        "Technically, Holly was still on active duty for another 63 days or so, but because she was on terminal leave, it wasn't quite the same thing. But just to make sure, she asked the new Group CO and the Wing Chief of Staff if it would be okay for her to attend Josh's change of command ceremony. As Captain Kennedy's date.\n\nThe new CO had been briefed on the relationship but never mentioned that fact to Holly. He knew she was seeing another officer in his Group, but as long as it stayed quiet he didn't care. And now that she was retiring, he wished her well and gave her his blessing.\n\nThe night before the change of command ceremony, they agreed to go public, and the first person Josh told was Vic.\n\n\"You can't be serious,\" Captain Watters said after hearing his friend tell him who he'd been seeing on all of those late-night dates, many of which turned into all-nighters, having begun with the magic and hypnosis show in Morehead City.\n\n\"I am. And it's getting serious.\"\n\n\"Jesus. You and Colonel Strader. Holy shit!\"\n\n\"No. Me and Holly...Strader,\" Josh informed him. \"She has no interest in being called 'colonel' or 'ma'am' anymore. She just wants to be Holly and quietly live the rest of her life in her post-Marine Corps world.\"\n\n\"Damn. If you were anyone else I'd say you're full of shit,\" Vic told him. \n\nVic smiled then said, \"I have a million questions, but none of them are appropriate, so I'll just wish you guys good luck and leave it at that.\"\n\n\"Thanks, Vic. And from now on, she may be spending some time here. Are you okay with that?\"\n\n\"Wow. Talk about...weird.\"\n\nVic shook his head then told his friend, \"Yeah. Sure. That's cool.\"\n\nWhen Josh told him they could double-date sometime, Vic held up a hand and said that's where he was drawing the line.\n\n\"Okay. But give her a chance first, because once you get to know her as Holly, you'll change your tune.\"\n\n\"Okay. Maybe,\" Vic replied with serious doubt, and that was as far as it went.\n\nBy the following morning the buzz was loud and growing louder by the minute as word spread through the battalion and the Group. It was supposed to be the outgoing battery commander's big day, but the change of command was eclipsed by the presence of one woman. A very attractive woman who, until a few weeks ago, had been the Group's acting commanding officer.\n\nSo when Josh pulled into the battalion parking lot with her in the passenger's seat of his Jeep, the Marines who saw them noticed and began spreading the word.\n\n\"You ready for this?\" Josh asked her before going around to open her door.\n\n\"Yes. My career is over, but yours is still ahead of you. And I want to share all of your successes for as long as you and I are together.\"\n\nJosh smiled then asked, \"Will you be okay with me kissing you in public?\"\n\n\"The only thing that would offend me is if you didn't kiss me,\" she told him as she leaned over and kissed him. \n\nSeveral different Marines saw that and within minutes, dozens more knew.\n\nHolly took Josh's arm as they walked inside were LtCol Armstrong was waiting to meet them.\n\n\"Holly. You look beautiful,\" he told her before they briefly hugged. His wife, Priscilla, was there, too, and they also hugged each other. They were roughly the same age, but Holly looked much younger than the CO's wife.\n\nJosh shook hands with his boss who asked if he was ready.\n\n\"Yes, sir. I'm really looking forward to it.\"\n\n\"Anything beats being the Group adjutant, though, right?\" he joked.\n\nHolly loved being a passive observer. She'd never craved the limelight, and now she was able to just blend into the crowd. Or she'd be able to once the novelty of who she'd once been wore off enough for people to stop caring.\n\nJust before the ceremony started, the Wing Chief of Staff arrived and made the rounds shaking hands with junior officers and as many Marines as he could before finding LtCol Armstrong, Holly, and her younger boyfriend.\n\n\"You're looking good, sir,\" Holly told him when he shook her hand and kissed her cheek.\n\nHe thanked her then asked Captain Kennedy if it was okay that he kissed his girlfriend.\n\nJosh laughed then said, \"Just don't make it a habit out of it, okay, sir?\"\n\nThe 48-year old colonel chuckled, slapped him on the arm, then wished him success in the new job before going to talk with the outgoing battery commander and his wife.\n\nThe ceremony itself took less than 20 minutes, and ended with Josh taking the flag from his predecessor and handing it off to his first sergeant.\n\nHe addressed the Marines now under his command, thanked his predecessor for his leadership and hard work, then thanked the battalion CO for his trust in him and promised 'not to screw it up'. The line drew chuckles from the crowd before Josh said one final line.\n\n\"I'd also like to thank someone who's been completely supportive of me and who's also been a mentor of sorts. Her love and support mean everything to me.\"\n\nHe turned toward her, smiled, then said, \"Thanks, honey.\"\n\nHolly smiled happily as Josh turned back around being taking his position in front of his new command.\n\n\"Battery, A-TEN-SHUN!\" he called as 125 pairs of boots came together at once. \"Platoon commanders, take charge of your platoons and carry out the plan of the day!\"\n\n\"Aye, aye, sir!\" came to the reply in unison from two lieutenants and a chief warrant officer who, in turn, saluted then executed an about face before giving their platoons the command to 'fall out'.\n\nThe first thing Josh did after shaking the outgoing CO's hand was to walk over to Holly and kiss her in front of God and country.\n\n\"Congratulations, honey,\" she told her handsome boyfriend.\n\n\"Thank you, baby,\" he told her before kissing her again. \n\nShe hooked her right arm is his left, leaving him free to salute, then followed him around to shake hands and say goodbye to the people she would only rarely see again, and only when necessary.\n\nJosh had the rest of the day off, and as they drove back to Holly's place an hour or so later, he reached for her hand.\n\n\"I can't tell you what it meant having you there today, Holly,\" he told her as he kissed her hand.\n\n\"I wouldn't have missed it for anything,\" she replied with a smile.\n\nShe could tell he wanted to say more but wasn't saying it, so after a minute of so of silence, she asked him to tell her what he was thinking.\n\n\"I don't want you to think I've lost my mind,\" was all he said.\n\n\"Josh? You're one of the smartest people I know. I promise I won't think that.\"\n\nHe looked over at her, smiled at her, then said, \"Even if I were to tell you I love you?\"\n\nHolly's smile was both happy and immediate as she told him, \"No, because I love you, too.\"\n\n\"Wait. You do?\" Josh asked, surprised to hear her say that.\n\n\"Duh! I've loved you since the first time you kissed me\u2014unconsciously.\"\n\nShe laughed and Josh laughed, too.\n\n\"Wow. Well, while I'm an a roll here...is it too soon to ask you to consider moving in with me?\" he asked, pressing his luck.\n\n\"Yes,\" she said without hesitation or a smile.\n\n\"Oh. Okay,\" he replied, feeling stung but understanding.\n\n\"There's no way I'm moving into your dinky apartment, and especially not with Vic living there.\"\n\nWhen he looked over at her she smiled then told him, \"But you could move into my place any time you like.\"\n\n\"As in...today?\" he asked as he looked back over at her again.\n\n\"If you're anything like the typical bachelor, you could throw everything you own in the back of the Jeep and be done in one trip.\"\n\n\"Hey! I have a bicycle and some free weights, you know!\" he told her with playful defensiveness.\n\n\"Okay, fine. Make that...two trips,\" she told him before putting her left hand behind his head and feeling the sharp nubs from a fresh haircut.\n\nBy three o'clock that afternoon, Josh's things were at Holly's house, and the two of them spent an hour making love before showering together then going out for an early celebratory dinner.\n\n\"My treat,\" Holly insisted.\n\n\"Well, even after you formally retire, you'll still be making more than me, so, okay,\" Josh teased.\n\n\"Oh, so you just love me for my money. I see,\" Holly teased back.\n\nJosh pulled her close then said, \"No. I love you for your smokin' hot body.\"\n\n\"Yeah?\" she asked as she put her arms around his neck.\n\n\"Uh-huh. That...and your money,\" he said before ducking and stepping aside.\n\nHolly not only didn't take a swing at him, she pulled him back then said, \"I don't think I've ever been this happy before in my entire life.\"\n\nJosh gave her a funny look then said, \"Geez. Are you sure? I mean, that's a LOT of time!\"\n\nThis time she did hit him but not hard, and as soon as she did, she told him again that she loved him.\n\nTen Months Later at Josh's Change of Command Ceremony\n\nThis time, the day was his, and there was no one senior to the new Group Commander at the event.\n\nJosh sincerely thanked the Marines who'd done so much in the previous ten months, then thanked his new battalion commander for his support during the last four months since LtCol Armstrong's departure and promotion to colonel.\n\n\"But above all, I want to thank the most important person in my life. And if you'll all bear with me for a moment, I'd like her to stand next to me.\"\n\nThis was unheard of, but Holly got up and stood next to the man she loved, not sure what might happen next. He'd told his battalion CO what he planned to do, and the new commander loved the idea.\n\nJosh reached into a little slot on the podium next to them and produced a small box and opened it. He got down on one knee in front of everyone and said, \"Holly Strader? I love you with all my heart, and I can't imagine living another day without you in it. So will you...\"\n\nThe normally quiet Holly had tears running down her face and before Josh could finish she said, \"Just shut up and put the ring on my finger already!\"\n\nEven the Marines in formation laughed as their outgoing CO did what he'd been told. They even cheered when he took her his arms, kissed her while dipping her then raising her up and facing her toward them.\n\nJosh took her hand then said, \"Good luck, Marines!\" before letting his successor take charge.\n\nThe handful of wives in attendance were all teary eyed as they came up to Holly and congratulated her, telling her that was the most romantic thing they'd ever seen.\n\nBut as romantic as that was, the most romantic thing Holly ever heard was when her much-younger fianc\u00e9 said to her that night, \"Honey? I want to start a family with you.\"\n\nShe'd cried when he proposed, but this time her tears were very different. She was now 44 and had wanted to bring this up many times before, but didn't because she knew Josh was aware of how important it was to her. She'd concluded that whenever he was ready, he would mention it, and now that he had, she was extremely grateful she'd waited.\n\n\"Do you really mean that?\" she asked as tears continued to fall.\n\n\"You know I do. And I want to start as soon as possible.\"\n\nBarely able to speak Holly told him she'd go off the pill the next day. Roughly half of the women who did got pregnant within three months, and Holly was hoping and praying she'd be one of them.\n\nHer prayers were answered just two months later when she came back from the base hospital with some very good news.\n\nShe'd made a very romantic candlelit dinner with Josh's favorite foods, and he knew something was up.\n\n\"So I saw the doctor today,\" she began when he asked what was going on.\n\n\"Yeah?\" a very interested Josh asked. \"And?\"\n\nWhen his beautiful wife's eyes welled up with tears he knew.\n\n\"So...are you...\"\n\n\"Yes! We're going to have a baby,\" she told him.\n\nJosh was every bit as thrilled as she was and kissed her and told her again how much he loved her.\n\nAfter having endured so much sh... BS...things were still turning around for Josh Kennedy. The following week, he received orders to report to Quantico, Virginia, for duty as a student at Amphibious Warfare School in five weeks.\n\nKnowing they would be leaving the people they both knew, he and Holly wanted to get married before they moved away. So just one month later, they were wed in the base chapel with Josh wearing his dress-blue uniform, and Holly in a gorgeous, white wedding dress. \n\nShe was just barely starting to show, but no one could really tell. It was a simple-but-elegant ceremony for which their family members flew in, and on their way out of the chapel, the officers from 2nd LAAD battalion formed a sword arch for them to walk through as they began their lives together as husband and wife.\n\nOn the day their beautiful, healthy son was born, an overwhelmed Mrs. Holly Kennedy asked Josh from her bed in the hospital where she'd given birth if he was as happy as she was.\n\nHe took the tiny little boy wrapped in blue from her arms, held him himself for the first time then smiled at his still-beautiful wife and said, \"Yes, ma'am!\""
    ],
    "authorname": "komrad1156",
    "tags": [
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/yes-maam-6"
}