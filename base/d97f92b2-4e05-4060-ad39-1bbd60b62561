{
    "title": "The Big Tits Club Ch. 11-12",
    "pages": [
        "THE BIG TITS CLUB by bluedragon\n\n****\n\n-- CHAPTER 11: Naimh --\n\n****\n\n\"Hey, Matty?\" Belle called. \"Can you get the fancy plates out?\"\n\nGlancing over my shoulder, I nodded to Belle, set down the romaine lettuce I'd been shredding for the salad, and went to the sink to wash my hands. Heading out to the dining room, I opened the china cabinet and pulled out the \"fancy plates\" as Belle put it, along with the matching serving platters, gravy boat, and crystal stemware. It was customary for us to use these only for special occasions, like tonight's Thanksgiving Dinner.\n\nI brought everything back into the kitchen for a quick rinse. Belle and I shared the space on autopilot, working in silence. Midway through rinsing, she bumped my hip with her elbow, and I automatically slid out of the way so she could clean her hands.\n\nMr. K poked his head into the kitchen and asked, \"Anything I can do to help?\"\n\n\"Nope,\" I replied immediately without looking up while I hand-dried the china.\n\n\"We got it, Dad,\" Belle added without looking up as she went back to the turkey. \"Almost ready.\"\n\nMr. K chuckled and returned to the living room. On his way, I heard him comment, \"They're so cute together.\"\n\n\"Of course,\" Mother replied. \"They're a properly domesticated couple.\"\n\nI tuned out the rest of the conversation and busied myself with everything else I needed to do for dinner. Mother was right: Belle and I were properly domesticated, and this was our third year handling Thanksgiving Dinner without parental support. Well, to be fair this was our third year handling it without Belle's dad's support. Mother had never really been involved, and she was the type that if you told her just once that you didn't need her assistance, that was good enough for her.\n\nTen minutes later, I plopped the finished turkey onto the big serving platter, Belle went and told our parents to please have a seat at the table, and the two of us started ferrying out all the food.\n\nTaking holiday meals together had become something of a tradition for our two families ever since Belle's mom died. Mr. K and Mother were comfortable around each other, although it was clear there was no trace of chemistry between them. Tonight's meal was much like any other: unhurried, unpretentious, and utterly mundane. Mother and Mr. K did most of the talking, as they were the ones who hadn't seen much of each other for the past several months. And at the end of the evening, Mother and I walked back home.\n\nAs soon as we walked back inside our house, Mother turned to me with a gleam in her eye. \"He has NO idea what you're doing with his little girl, does he?\"\n\nI blinked in surprise, pausing halfway through the process of hanging my jacket on the coat rack. \"Um, what?\"\n\nMother just gave me a look. She knew I'd heard her.\n\n\"Uh... well...\" I stammered before admitting, \"I had been wondering if he'd started to suspect.\"\n\nMother snorted and shook her head. \"He doesn't have a clue.\"\n\n\"You can tell that?\"\n\nMother rolled her eyes at me and put away her coat. With her back to me, she continued, postulating, \"Perhaps he has a blind spot for you. You're the son he never had, after all. You're the golden child who can do no wrong in his eyes. And he still believes his daughter is the same innocent, adoring virgin she's always been.\" Mother glanced back at me. \"For now.\"\n\n\"For now?\"\n\nMother turned to face me, took a deep breath, and gave me a look with genuine concern in her eyes. \"Be careful, Matthew. Belle isn't just any ordinary girl you can sleep with and abandon.\"\n\nI frowned. \"I have no intention of--\"\n\n\"I didn't suggest you did,\" Mother interrupted. \"Just keep in mind that you don't have the luxury of breaking up with her and never seeing her again. Belle's father will find out eventually, one way or another. Once that happens, the dynamic of these little holiday dinners is going to change. Whether it changes for the better or worse depends on you.\"\n\nI blinked again. \"That's... kinda heavy...\"\n\nMother's smile was thin. \"You're an adult now. Get used to shouldering the weight.\"\n\nAnd then she headed upstairs.\n\n****\n\nExcept for Belle, I didn't see any of the BTC girls until Saturday. Thanksgiving was a family holiday, of course, and Black Friday had always been the busiest shopping day of the year.\n\nTo me, a Friday off from school suggested sleeping in until noon, not waking up before dawn in order to get in line at the nearest big box store to get doorbuster deals on the latest cameras, computers, and other electronic gadgets. Nor did it suggest heading straight to the mall to buy overpriced clothing at a huge discount to bring them down to only \"kinda\" overpriced clothing. But that's me.\n\nThe girls on the other hand, were going to the mall in pairs. At least they never tried to drag me with them for Black Fridays, saying I'd just slow them down. And even after Wednesday's little catastrophic drive back from San Francisco, nothing was going to get in the way of their shopping day.\n\nBelle came over a little after 4pm after her shopping trip with Mari, wearing some of her new purchases. I was thankful she hadn't arrived holding three or four shopping bags, expecting me to sit through a fashion show. I WAS happy to see her new lingerie, on the other hand. I was even happier to slowly peel her out of the brand-new lingerie, shove my head between her legs, and express my admiration by slithering my tongue up her slit. I ate her to two orgasms before crawling up her body, notching myself in her folds, and slowly pressing inside. Her soreness was pretty much gone by now, and I slow-dicked her to another blissful orgasm before pulling out and letting her swallow my load.\n\nThe second time, she let me fuck her from behind, and my little Annabelle waddled home with my cum squishing inside her cunt.\n\nIt had been the calm before the storm.\n\nSaturday morning, the girls arrived.\n\n****\n\nWe weren't supposed to meet up on Saturday, at least not as a group of seven. The girls all had families and friends and people who expected them to spend quality time together on weekends, especially holiday weekends. But every single one of them showed up promptly by 10am, as had been agreed upon by the end of that fateful Wednesday afternoon drive.\n\nWe were supposed to have driven back to my house after visiting the city Wednesday afternoon. We were supposed to have changed into swimsuits, collected in the hot tub, and gotten a little frisky. At one point in Chinatown, Sam whispered into my ear about how she was going to get all the girls to take off their bikinis in the hot tub and start grinding on me until my balls were the size of grapefruits so I would have an extra big load when I finally gave Belle a facial.\n\nBut Wednesday didn't turn out like that.\n\nBelle came over early. Neither of us was horny, but it was nice to hold each other all the same. Mari and Alice arrived soon after, and then Naimh. And at 10:00am on the dot, Sam and Zofi rang the doorbell.\n\nWe gathered in front of the TV, as always. I sat in the corner for once, with Belle on the middle cushion and Mari next to her. Sam and Zofi were on the loveseat. Alice was in the armchair. And Naimh paced nervously back and forth behind her.\n\nNone of us knew quite how to start. Sam was the alpha, the one who always got the discussion going. But she stared down at her lap, holding Zofi's hand between both of hers for reassurance. Belle was pretty quiet, too. She wasn't on trial the way Sam was, since we still hadn't told anybody we'd been having sex. But in the course of Wednesday afternoon's little furball in the van, it had come out that Sam, Belle, and I had engaged in a threesome of sorts, which meant that Belle had prior knowledge of said de-virginization before Sam's admission in the car. And of course, as party to the crime, I'd obviously had prior knowledge as well.\n\nNaimh, unsurprisingly, broke the awkward tension. But the manner in which she spoke surprised us all. \"I forgive you, Sam,\" were the first words out of her mouth.\n\n\"What?\" Sam asked in surprise.\n\nEveryone else looked at each other in shock, and then at Naimh as she walked around the armchair and stood in front of the TV. \"I know I was angrier than anyone on Wednesday. Gingers are known for their tempers, after all, and Irish gingers are even worse. But that was three days ago and I've had a lot of time to think since then.\"\n\nNaimh took a deep breath, closed her eyes, and gave Sam a sincere look. \"You were my first friend when I came to the States. You welcomed me into this special club with the unfortunate name. You introduced me to my best friends, and you introduced me to him.\" The redhead turned to look at me with a warm smile.\n\n\"I've asked myself several times what I would have done in your situation,\" Naimh continued. \"All dressed up with hair and makeup, feeling like a princess... Matty in a nice suit and dashing like a prince... Big empty house and no other girls to distract him...\"\n\n\"You already said what you'd do,\" Alice challenged. \"In the van, you said the group meant more to you than sex.\"\n\n\"I know I did. It's really easy to promise that in a van coming home from a group trip,\" Naimh told Alice before turning her attention to Sam. \"I imagine it must've been a lot more difficult alone in a bedroom when the clothes are off and his face is in your crotch.\"\n\nSam looked down and squeezed Zofi's hand between hers. \"You're being very generous, Neevie.\"\n\nNaimh sighed. \"I'm not happy about what happened, but I do forgive you. At the end of the day, I think ostracizing you over this would do more to break up the BTC than you having sex with him would. The club means more to me than having sex with Matty, and it certainly means a lot more to me than holding a grudge against Sam.\"\n\n\"She betrayed the BTC,\" Alice yelled angrily. \"She's the one who came up with The Rule in the first place, and SHE'S the one who violated it!\"\n\nNaimh shrugged and said, \"I would be a hypocrite if I didn't admit I was main one pointing out The Rule says we can't 'date' him and says nothing about fucking him.\"\n\n\"That's not what The Rule means anymore, and you know it!\" Alice seethed.\n\n\"I knew The Rule,\" Sam spoke up. \"And I know I violated it. I didn't mean to. It was an emotional night and everything just sort of happened.\"\n\nSam looked at me, and all of a sudden everyone else was looking at me, too. The details of that night hadn't really been discussed on Wednesday, just the fact that she'd mounted herself on me before I'd realized what was going on. In this, Sam had taken full responsibility and the girls held me blameless, even when I pointed out I knew exactly what I was doing when Sam and I had a repeat on Monday with Belle watching. \"I genuinely believe she didn't mean for it to happen,\" I stated sincerely. \"I mean, she didn't like... oops... accidentally fall and land on my dick. But... yeah... it was an emotional night.\"\n\nEveryone collectively pondered that.\n\n\"Can I say something?\" Mari asked quietly. She'd been very quiet on Wednesday, not saying much if anything when all hell broke loose aside from some surprised squawking, and it was a little surprising to hear her speak up now. Everyone looked around for a second and gave her their full attention. \"I forgive her, too. To be perfectly honest, I'd always assumed one of you would sleep with him eventually. How could it NOT happen? There are still, what, nine months until we go to college? No way was everyone going to limit themselves to blowjobs and eating pussy until then. You guys are all such vibrant and sexy young women. We could all see how much things were escalating. And Sam... well... you've always been our leader. It sorta even makes sense that you'd be his first. I kinda get the impression you'd have been really mad if someone else had him before you, like that thing with Holly. You're... uh... competitive... that way.\"\n\nSam turned pink in embarrassment, but she didn't disagree.\n\n\"And even for me, once I realized it was going to happen eventually, I... uh... well...\" Mari blushed and stared nervously into her own lap as her voice trailed off. Belle reached out to hold her best friend's hand. And we all waited patiently for her to find her voice.\n\nMari shot an embarrassed look at me and went back to intensely scrutinizing her own lap. She paused, took a deep breath, and added, \"Honestly... I... I mean I was hoping...\" She stopped, took another deep breath, and finally looked over at me. \"Will you take my virginity someday, Matty?\"\n\nThe room went silent. Everyone suddenly stared at me.\n\n\"I... uh...\" I took a deep breath of my own to collect myself before finishing rather formally, \"I'd be honored.\"\n\n\"Someday, not today,\" Mari added quickly, before exhaling in a loud rush of released tension. \"I mean, I'm totally not ready yet.\"\n\nI exhaled in relief too. \"Uh, yeah. That's... uh, no problem.\"\n\nMari started crying then - not sad tears nor happy tears, really - more like tears released along with her tension. It was immediately obvious how much that admission had taken emotionally for Mari, and Belle slid over to hug her best friend. Even Alice, who was still upset, got out of the armchair to hug Mari from the other side. Naimh came over as well, and finally Sam and Zofi got up and reached in to rub a shoulder or arm or whatever they could reach. Lastly, I put my long arms around the group.\n\nEventually, though, the group hug disengaged. First I and then the girls backed off one at a time, like peeling layers of an onion, until only Belle and Mari remained. Mari was crying softly, and Belle was crying with her, and that's when Belle admitted through her own tears, \"I've been having sex with Matty all week.\"\n\nYou could actually hear the air get sucked out of the room it happened so fast. Naimh was the first to regain her voice, squawking, \"Wait, WHAT?\"\n\nSam shot me a look right away, and I shrugged helplessly. She and Zofi were still kneeling on the floor just in front of Mari, and Zofi's mouth gaped open in shock while she covered it with both hands, her eyes wide as saucers. Alice had returned to the armchair and now planted both forearms on her spread knees, hanging her head down and shaking it slowly. And Naimh stood up and frowned, furrowing her eyebrows while lost in thought.\n\nBelle started unspooling the story, still crying but obviously needing to get this off her chest. She explained about me visiting on Sunday afternoon to tell her about my post-wedding encounter with Sam, getting so angry with me at first and then following me back to my house still yelling while her dad just smirked at us, and then ultimately seducing me. She then explained how painful losing her virginity felt the first time because she was in too much of a hurry and we didn't prep her enough, but how the second time was so much better. And when she started explaining that she became so sore afterwards she could barely walk for a few days, Mari interrupted to exclaim, \"I THOUGHT you were walking funny!\"\n\nThe girls actually started laughing, even Alice, and for the first time I started to think everything just might turn out alright. And that's when Naimh walked over, tapped my shoulder, and muttered brusquely, \"Come on.\"\n\nI'd been smiling at Belle and Mari laughing together while wiping their tears, but now looked up at Naimh in surprise. \"Huh?\"\n\nThe gorgeous redhead looked at me patiently, giving me a few seconds to figure it out before she repeated, \"Come on. It's time.\"\n\nI blinked in surprise. \"What, now?\"\n\nNaimh laughed lightly before giving me a deadly serious look. \"I've already been waiting for months, and I'm not waiting a minute longer than I have to. COME ON.\" Suiting action to her words, she grabbed my hand and physically pulled until I stood up.\n\nI glanced back behind me while Naimh dragged me toward the stairs. I saw first Sam staring after us, and then my eyes met Belle's a second later. Sam was grinning, but Belle actually looked a little jealous. Then again, I figured Belle merely wished she could come watch.\n\nFeeling my hesitance, Naimh glanced over and found me gazing back at the others. She stopped tugging my hand, which made me look at her. And after pursing her lips, Naimh's jaw set as she came to a decision and abruptly started dragging me back into the family room.\n\n\"Uh, are we not doing this?\" I asked dumbfoundedly.\n\nThe gorgeous redhead shook her head, stating, \"Changed my mind.\"\n\nI misunderstood her. I thought she meant she'd changed her mind about having sex with me, but she was in a different head-space than me. Naimh actually meant she'd changed her mind about the location, something I didn't realize until she parked me back on the couch, knelt before me, and started tugging my pants off.\n\n\"Whoa, what?\" I squawked in surprise once my pants and underwear hit the back of my knees. I wasn't remotely hard, but Naimh was determined. \"I thought you just said...\"\n\nShe seemed to realize my confusion, flashed me a grin, and explained, \"Oh, we're still DOING this. We're just doing it right here.\"\n\nSam gawked at us, chirping, \"After all that bitching about getting your own one-on-one?\"\n\n\"I told you,\" Naimh said while tugging down her own jeans, which took a little effort since they were tight enough to seem spray-painted onto her. I watched the way the redhead's big tits wobbled in her t-shirt as she did so. \"The BTC means more to me than sex. Being with my best friends means more to me than fucking him, which is why I've waited this long as it is.\"\n\nI'd been waiting a long time, too, and watching the most gorgeous thing I'd ever seen stripping herself down before me with the full knowledge of her intent to finally fuck me, I started getting hard despite myself. The sight of her neatly trimmed red beaver, proving the carpet matched the drapes, had me salivating, and Naimh giggled when she saw the direction my gaze.\n\n\"See something you like?\"\n\nI grinned and looked up at her pretty face. \"Yeah... I still love your eyes.\"\n\nNaimh laughed and reached for the hem of her t-shirt. But she paused before removing it, instead reaching up behind her back and unclasping her bra. \"I know you love my eyes, but I think there are two other things you're dying to see right now.\" With that, she wriggled and slipped her hands inside her sleeves to pull the strap off one shoulder and then the entire bra out through the opposite armhole. When she was done, she was still wearing the tight t-shirt, but now her erect nipples were making prominent dents in the cotton fabric.\n\nI blinked and stared at those headlights, nodding, \"You have my full attention.\"\n\nNow I've said before that Naimh was the most gorgeous thing I'd ever seen, but I don't think I've spent nearly enough time waxing poetic about her incredible body. Zofi had the slender model's build, and both Sam and Mari had more outrageous curves that simply screamed, 'FUCK ME'! Naimh was somewhere in the middle, not quite as tall as Zofi and not quite as curvaceous as Sam or Mari. Instead, it seemed like she possessed the best features of all of them. Still tall and slender but packed with Double-D curves and a tight ass, Naimh was a copper-haired comic book heroine brought to life. Her emerald-green eyes were large and luminous. Her face was high-cheekboned perfection. Her fiery hair flowed in silky waves around her face. On a scale of 1 to 10, she was an 11, and I'd wanted to fuck the shit out of her from the moment I saw her.\n\nI had that same look in my eyes today, and Naimh recognized it immediately. With a grin, the busty redhead pulled the hem of the t-shirt up to the lower edge of her tits, paused, and then slowly inched the fabric upward to reveal the curvature of her underboob. She stopped again just before revealing her nipples, wiggled her torso a bit to make those puppies dance, and laughed when I groaned in anticipation. I'd seen her tits before, obviously. I'd freaking hosed down her tits with my cum a few times by now. But no matter how many times I'd already seen her naked breasts in the past few weeks, a slow reveal like this had me enraptured like it was the very first time.",
        "Naimh flashed her nipples for a split-second before covering them up again. I groaned in disappointment, and she stood there for a second smirking at me. \"You first. Take off your shirt. I wanna see those pecs.\"\n\nI ripped my shirt off my head in a hurry, not wanting to delay Naimh's titty drop any longer than I had to. She grinned, tucked her thumbs beneath the bunched-up fabric, and finally lifted the cotton away to let her juicy freckled Double-D melons plop down against her own chest and wobble like jello for a second. She raised the shirt up to her chin and jiggled her shoulders to set \"the girls\" in motion. It was a dance she'd done for me before. The difference back then was that the titty drop was itself the end goal, a tease in and of itself. Okay maybe that's not true, because ever since Mari first let me suck on her boobs, Naimh was more than happy to let me do the same. But the point is: today I knew we would not be stopping at just the titty drop, or even stopping at me sucking on her nipples.\n\nToday... this was merely foreplay on the way to actual sex, and she had my heart thudding inside my chest with anticipation.\n\nLaughing, Naimh covered up her tits, making me frown and start audibly whining. Her laughter got louder and more musical, and she quickly did another titty drop and dance. This time, she finally ripped the t-shirt over her head, leaving her completely naked. And at long last, my arms were full of busty redhead as she straddled my lap and shoved her tongue into my mouth.\n\nNaimh and I sucked each other's faces while she wrapped her arms around my neck and ground herself against my bare erection trapped between our two bellies. I didn't even think about hesitating to grab her ass, reveling in the joy of implicit permission to do whatever the hell I wanted to her. Compressing her butt-flesh in my hands, I kneaded and squeezed and used the redhead's ass to pull her crotch against my boner with even more pressure.\n\nMy butt-crack felt wet with moisture, and I realized Naimh was getting so aroused she was leaking pussy juice all over my shaft. She was as desperate to get me inside her as I was to get inside, and that realization hit me like a ton of bricks.\n\nHere we were at the precipice... FINALLY... and I still couldn't quite believe it. I've said before that I was absolutely smitten the first time I laid eyes on the Irish redhead, and I already waxed poetic about her a minute ago. But in plain simple fact, she was the most gorgeous thing I'd ever seen. Her large, emerald-green eyes were perfection. Her porcelain skin was dotted with adorable freckles that had instantly made me wonder just how far they went down. Her cheek structure, her pouty lips, that flaming red hair, her amazing rack, her tight waist, her boner-inducing hips, her drum-tight ass, her long lithe legs, I mean, I could go on for hours and hours about her physical attributes. She was a horny sexpot who never failed to get my engine running, instantly becoming my number one masturbation fantasy. And on top of all that, she was a really FUN person to be around, and yet as much fun as it was to hang out with her all the time, I often found myself regretting her membership in the BTC because it automatically made her off-limits as a potential girlfriend.\n\nBut none of that mattered right now. The lines had been crossed, the arguments for why Naimh and I shouldn't do this wiped away. There were no longer any barriers keeping us apart, and all of a sudden I couldn't wait to get inside her. So tearing my face away from hers, I gasped, \"I need to fuck you NOW.\"\n\nNaimh's emerald eyes glowed, her agreement obvious. She elevated herself on her knees, reached down between us, guided my cockhead into position, and paused to look around the room for the first time since she'd started taking off her bra. All eyes were on us, Belle and Mari on the couch to my right, Sam and Zofi on the loveseat to my left, and Alice standing behind Naimh. I bet from that angle, Alice would have a great view of my upright cock and balls between Naimh's legs, a vertical column about to disappear.\n\nNobody said a word. Everyone stared with rapt attention. Naimh reached out with her left hand to Belle, who was the closest on that side. She also reached out to Sam, who was closest on her right. And thus holding hands with two of her friends, only then did Naimh let gravity take over as she sank ever so slowly around my cock, swallowing me whole in a single, steady descent.\n\nI shivered and let my head loll over the backrest, my lower jaw quivering as the pleasure of FINALLY being inside Naimh radiated out from my very core. She let go of the others and collapsed against my chest, holding me close, and for about a minute, neither of us moved. We each savored this moment of utter and complete unification, our two bodies melded together as one for the first time ever. From then on it was only her and me, one-on-one the way she'd always wanted it.\n\nShe leaned in to kiss my neck, sucking hard enough to give me a hickey while I wrapped both arms around her body to hold her close. Those glorious tits were crushed into my chest, and suddenly seized with a desire to feel her nipples in my mouth, I sat up to make that wish a reality. I mashed her melons around my cheeks and suckled away like a starving infant, but only for a little while. Tilting my chin, I captured Naimh's lips instead, and as our tongues came out to play, she started rising and falling in my lap.\n\nShe was a quiet lover at first, something I hadn't expected. Naimh had always been the most brash and vocal flirt of the club, constantly pushing sexual boundaries and stretching the definition of The Rule to its limits. But she simply whimpered and moaned for several minutes as she rode me, adjusting her arms to hold me close, bracing her hands on the couch's backrest for leverage to hump me harder, or cradling my head against her chest while I feasted on her tits.\n\nWe writhed together and moaned together, me using the springiness of the couch cushions to undulate my turgid tool in and out of her tight twat, she flexing her legs to hump herself up, down, and around to carve my cock against every corner of her cunt.\n\nNaimh came without warning. She didn't speed up or whimper that she was getting close. One moment she was humping me, the next her breath caught as she froze at full depth, her fingernails digging into the skin of my upper arms and her snatch spastically squeezing my surrounded shaft. She spoke for the first time, a breathless, \"Oh, Matty!\" And I cuddled her close all through her climax.\n\nWhen she came down from that peak, she collapsed against my chest and gasped for air. I stroked her spine and gave her time to recover, my dick still hard and throbbing deep within her core. Eventually, she pulled back and stared at me with a look of deep-seated unconditional love, and I was a little bit shocked to see the intensity of her emotions. She had always been the flirty one, the overtly physical one. That she'd wanted to bang me forever was no secret, but I'd never suspected she harbored anything... emotional... for me. And yet there it was, plain as day on her face, the flirtatious fa\u00e7ade masking her feelings no more.\n\nMaybe it was just the head-rush of her orgasm, exquisite pleasure making nascent feelings momentarily stronger than really were.\n\nMaybe they were real.\n\nI didn't know, but I found myself suddenly quite interested in finding out.\n\n\"That was amazing,\" Mari breathed quietly, her voice suddenly breaking the spell. For the last ten minutes or so, the world around Naimh and me had ceased to exist. But with a sudden pop, the bubble burst and we both became only too aware of our audience.\n\nI glanced first to my right and saw Mari clamping her hands over her mouth, wide-eyed and looking contrite for speaking aloud. Belle was silent, but her mouth was open in a soft pant, and I could see her hand still inside her skirt where she'd obviously been masturbating while watching us fuck only a few feet away.\n\nIt occurred to me then that this was more than likely the first time any of the BTC, save Belle, had ever seen two other people have sex with their own eyes. Alice now sat on the armrest just behind Mari, her eyes glazed over and her chest heaving in obvious arousal. I turned to look the other way and saw that Sam and Zofi were still in the loveseat, only Zofi was now more or less seated in Sam's lap and was panting hard as well. Their hands at the moment were in innocent enough positions, but I got the distinct impression they'd been pawing at each other while witnessing their friends engage in a live sex act before their very eyes.\n\nBut despite the interruption, I was determined to focus on the lover in my lap. I willed myself to ignore the presence of the others and tilted Naimh's chin so I could express my adoration for her with my lips. She moaned happily into my kiss and wrapped both arms around my neck. And after we broke for air, she whispered softly. \"That was nice, but I want you to FUCK me now, hmm?\"\n\nHer emerald eyes sparkled, and with a grin I suddenly rolled us over to the right. Belle squealed and backed up as we invaded her space, but I hooked my arm behind Naimh's lower back and physically hauled her back towards me and parked her butt right at the front edge of the couch cushion. My cock became disengaged from her cunt in the process, but after draping her legs over each of my forearms, I swiftly notched myself at her splayed-open pink heaven's gate and slammed my way back inside.\n\nThe first time, Naimh and I had rather intimately made love.\n\nThis time, I did exactly what she'd asked: I FUCKED her. And we both got a lot more vocal in the process.\n\n\"Ohhh! Myyyy! Gawwwwwd!\" became a familiar refrain.\n\n\"Fuckme! Fuckme! Fuckme!\" was pretty common, if obvious.\n\n\"I love this! I love you!!!\" took me a little by surprise.\n\nAfter a few minutes, Naimh raised her legs higher and hooked them over my shoulders, a position that let me drive myself even deeper down to her core with heaving, full-length lunges. A little later, she crossed them around my waist and clutched me close, forcing me to press my pelvis against her clit and sort of grind away at her. The Irish redhead kept screaming, and it seemed to me that the longer we went, the thicker her Irish brogue became. By the end of it, I couldn't understand a word she was saying, but the way her fingernails clawed at my back and her heels drummed against my ass told me all I really need to know anyway.\n\nWell, not everything.\n\nNaimh clenched up and came once more, but afterward I started to feel the telltale tingle in my balls announcing my own imminent eruption. Mother's voice asking, 'Are you using protection?' rang off inside my head. And grunting from the strain, I leaned down and asked, \"Are you on the pill?\"\n\nNaimh's eyes glittered as she realized I was close to cumming deep inside her. She nodded and replied, her voice thick with emotion, \"I nev'ra stop'd tak'n 'em. I'knew yu'n'I were gon' do this one day, and I dinna wan' be cau' unp'pared.\"\n\nGasping with relief, I put the rest of my energy into pounding the hell out of her. Naimh went silent then, having become quite coolly observational instead of delirious with pleasure. I mean, she still whimpered and moaned from the sensations my pistoning prick sent throughout her nervous system, but she studied my face intensely, watching my expressions as I got closer and closer to climax. She stroked my cheek, cooed at me encouragingly, and when my neck muscles started to tense, she kissed my nose and urged, \"Cum in me. Fill me up with your seed. I've been dreaming about feeling your warm sperm flowing into my willing body. I've wanted it deep inside me from the moment I met you. Cum in me, Matty. Cum in meeeeeee!!!\"\n\nNaimh's last word stretched out into a scream as I slammed in one last time and held myself there, my cock belching out great globs of cream into her welcoming honeypot. She tightened her ankles behind my butt, clutching me with all four limbs while I gasped her name, \"Neeeeeevvviiiiieeee!\" And I shuddered in her warm embrace all throughout the rest of my ejaculation, until finally I could fire away no more.\n\nThe room was silent save for the panting breath of seven people in the aftermath of one of the most erotic experiences of their lives. I pressed the crown of my head against the backrest just over Naimh's left shoulder. She still cuddled me close, murmuring endearments into my ear like, \"Fuckin' incredible, Matty. I've never felt like that before. You fulfilled all my dreams and expectations. I mean, I knew we'd be great together, but that was even better than I'd hoped for.\"\n\nYou know, things that made me feel REALLY good and proud of myself.\n\nOf the others, Mari was the first to speak again, \"That was even more amazing.\"\n\nSam was out of breath too, but she asked, \"Hey Belle... is THAT what it looked like when Matty was fucking me?\"\n\nBelle giggled and replied, \"Yeah, pretty much.\"\n\n\"Just... wowww...\" Sam breathed.\n\nThe sound of Sam's and Belle's voices discussing Monday evening's tryst stirred me from my stupor, and fully aware of the lake of Matty-cum that must be swimming inside Naimh's pussy at this moment, I was seized by a sudden impulse. Picking my head up, I gave Naimh a quick peck on the lips, grinned, and told her, \"Don't go anywhere.\"\n\nThe redhead frowned at me. \"Huh? Where would I go?\"\n\nI kissed her again and slowly drew my hips back, my cock still hard enough that Naimh's pussy lips clung to it as if they didn't want to let go. But eventually I managed to pull completely out and squat down two feet away from the couch, staring back at Naimh's red-worn pussy still spread open obscenely wide.\n\nI looked over, got Belle's attention, and head nodded toward the redhead. \"Are you thinking what I'm thinking?\"\n\nAt first, Belle frowned and looked confused, but a moment later the first dollop of cream oozed out of Naimh's slit, and before I even blinked Belle dove headfirst between the Irish girl's spread thighs.\n\n\"Belle! What are--? OhmiGAWD!\" Naimh squealed in shock as the petite strawberry-blonde started slurping scraps of semen from her sodden snatch.\n\nMari squealed even louder, and Alice flat out SHRIEKED.\n\nAlice's ear-splitting exclamation is what actually got Belle to pull her head out and gawk wide-eyed at her friends, panic setting in as she realized what she'd just gotten caught doing. But a second later, Naimh grabbed the back of Belle's head and shoved it right back into her crotch, yelping, \"Don't STOP!\"\n\nSo Belle went back to eating, Naimh started creaming, and by the time the redhead drummed her heels against Belle's back during a screaming orgasm, I was rock hard and ready to go again.\n\nSo I sidled up behind Belle's waving butt, raised her skirt, and pulled the crotch of her panties aside. She only flinched once in surprise at the unexpected touch. But once the horny pixie realized what was going on, she put her face back down into Naimh's pussy, raised one knee, and planted her foot to really spread herself open wide while I put my cockhead into position, waggling her tushie invitingly.\n\nAnd then everyone got to see their SECOND live sex act of the morning.\n\n****\n\n\"Penny for your thoughts?\" Belle asked softly into my ear.\n\n\"Hmm?\" I asked distractedly, my gaze across the circular hot tub at the several pairs of naked breasts bobbing up and down like corks on the surface of the bubbling water. None of the girls had brought swimsuits, you see. They'd arrived expecting a heavy discussion, not a trip to the hot tub. But after this morning's activities, everyone was in a rather... unique... mood. And when Naimh suggested we all just skinny dip, she'd been met with a chorus of agreement.\n\n\"Nevermind,\" Belle laughed. \"I don't need to ask to know what you're thinking.\"\n\nI shrugged and went back to ogling. Because well... tits. The knowledge that this was the first time in my life I'd ever sat in a tub with six COMPLETELY NAKED girls fully occupied my mind, and I intended to enjoy every second of it before somebody woke me up from this amazing dream.\n\n\"So...\" Belle leaned in close to my left, grinning lasciviously, and whispered so softly that no one else could hear, \"Which one are you gonna tap next?\"\n\nI smirked at her and whispered right back. \"Planning which pussy you're gonna suck my cream out of next?\"\n\nBelle giggled. \"Something like that.\"\n\n\"Something like what?\" Mari asked from the other side of Belle.\n\nFeeling in a jovial mood, I went ahead and asked Mari, \"Did you ever realize your best friend was inclined to eat out other girls?\"\n\nMari's eyes flew open WIDE, and she actually retracted from Belle a bit. \"Uh... well...\"\n\n\"Please, don't freak out,\" Belle implored, suddenly looking quite scared of losing her best friend. \"That was only the second time I did it. I... uh... I mean, I never thought of myself as gay before, and it wasn't planned. So I don't want you thinking I've been secretly lusting after you for years or anything like that.\"\n\nMari blushed and held up her hand. \"Relax, B. I wasn't... I mean, okay, maybe I was a little freaked out. But not in a bad way. I was just surprised, that's all.\"\n\nNaimh was on the right side of me and had heard that part of the conversation. \"Second time?\" she put two and two together and shot a look over at the remaining girls. \"Sam! Did Belle go down on you?\"\n\nTo her credit, Sam didn't look embarrassed in the least as she grinned and replied, \"Yes she did. Went after Matty's creampie. Surprised me with her enthusiasm, too.\" The blonde fixed me with an amused look. \"Your little Annabelle is quite the cumslut, slurping it out of other girl's pussies.\"\n\n\"I'm only a slut for Matty's cum,\" Belle said defensively. \"Let's make that absolutely clear. Besides, I'm betting I'm not the ONLY one in this group who's been eating pussy.\"\n\n\"Guilty!\" I announced, raising my hand.\n\n\"NOT who I was talking about,\" Belle admonished, fixing Sam with a look.\n\nWith a smirk, the blonde stared pointedly up and to the left, putting on airs as she stated in a sing-song voice, \"I'm sure I don't know what you're talking about.\"\n\n\"Guilty!\" Zofi announced, grabbing Sam's wrist and raising her best friend's hand, along with her own.\n\n\"We figured,\" Alice drawled.\n\nZofi and Sam giggled.\n\nZofi leaned forward. \"If you're interested in refining your technique, Belle, I'd be happy to give you some pointers.\"\n\nBelle turned crimson and sank down a little beneath the bubbles. \"I'll, uh, keep that in mind.\"\n\n\"Don't tease her,\" Mari challenged. \"You two may be perfectly comfortable messing around with other girls, but Belle's still figuring that part of herself out, okay?\"\n\nSam and Zofi looked at each other for a second, and Zofi gave Belle an apologetic look. \"I'm sorry, but I wasn't teasing,\" she said sincerely. \"We're friends, all of the BTC, and while I'll admit to being eager to get your panties off, I don't ever mean to pressure you. If you're interested, I'd be happy to teach you. If not, no big deal.\"\n\n\"Zofi's good,\" Naimh added helpfully. \"Really good.\"\n\nAlice slapped Naimh's upper arm. \"You never told me you were messing around with them!\"\n\nNaimh winced. \"You didn't seem interested in girl-on-girl stuff. I didn't want to scare you.\"\n\nAlice rolled her eyes. \"Explains a lot, though. I was wondering why you didn't freak out when Belle started going down on you.\"\n\n\"Holy crap!\" I sat up straight and looked at Belle. \"I just realized. THAT was our first proper threesome!\"\n\nBelle mused on that and chuckled.\n\n\"Wait,\" Sam frowned. \"I thought -I- was your first threesome.\"\n\nBelle shrugged. \"Matty's splitting hairs. He said that he fucked you, and then I went down on you, but at no point were the three of us physically connected.\"",
        "Zofi frowned at me. \"What about that time when I sat on your face while Neevie gave you her first blowjob? Or any of the other dozens of times you were messing around with one girl while another was messing around with your dick?\"\n\nBelle explained again, \"He said he wasn't actually fucking anyone, so all those times were daisy-chains and not 'proper' threesomes.\" Belle held her hands up out of the water to do the air quotes.\n\n\"Makes sense to me,\" Naimh grinned. \"I get to say I was part of Matty's first threesome!\"\n\n\"Well I wanna be part of Matty's NEXT 'proper' threesome,\" Sam announced, elevating herself up from the hot tub and spreading her arms out to the sides on the deck, a position which put her huge tits on full display. \"I've spent the last three days in a full-blown panic that I'd never get to be with him again, and lemme tell you, once you've had that bad boy inside you, you won't be able to LIVE with yourself never having it again.\"\n\n\"Agreed!\" Naimh announced while raising her right hand.\n\n\"Agreed!\" Belle called a second later, also raising her hand.\n\nI frowned and said, \"Hey, roll it back a notch. We've talked before about not putting pressure on the other girls.\" I looked to the left at Mari and to the right at Alice, both of whom wearing nervous expressions. Zofi, on the other hand, looked perfectly comfortable, although I couldn't tell whether that was because she already planned on having sex with me as well or simply didn't feel pressured to do so.\n\nMari spoke up, saying, \"It's alright, Matty. The girls expressing how they had such a good time is just that -- expressing themselves. I don't feel pressured to put out just to keep up with them. It just reassures me I made the right decision when I decided to save myself for you. Uh, not that I'm gonna come crawling into your bed right away or anything. I... uh... I'm not...\"\n\n\"You don't have to say more,\" I told her reassuringly. \"I won't ever expect you to do anything you're not ready to do.\"\n\nMari looked worried for a second. \"But you WILL do it with me when I AM ready, right?\"\n\nI blinked twice and looked around at the other girls, suddenly worried I was going to get jealous looks from the ones I'd already slept with. But Sam, Naimh, and Belle were just smirking at my discomfort. On sudden impulse, I reached out and drew Mari into my lap, brushed her hair back from her face and leaned in to give her a tender kiss. Our lips rubbed together for only a few seconds, and as I pulled back she felt my erection trapped between us and grinded herself down against it.\n\nI grinned and nuzzled her nose. \"Whenever you're ready, I will be too.\"\n\nMari gave me a relieved smile. \"Thank you. I'm glad.\" She then blushed while sliding back into her own seat, and around us Sam, Belle, and Naimh started hooting and cheering.\n\nI leaned back to allow myself a moment of contentment as my three lovers enthusiastically encouraged their virginal friend to join them, when out of the corner of my eye I saw my best friend's hand come down to slap the surface of the water, splashing a surprised Zofi. We all turned to Alice, her face a mutinous mask of hurt and angry emotions.\n\n\"Well I'm glad everyone's singing Matty's praises and you're now quite literally queueing up to be his next conquest,\" Alice bit out through frustrated tears as she elevated herself out of the tub and sat down on the deck. Water streamed down off her naked body, cascading like waterfalls over her exposed naked breasts. Shaking her head and frowning at Mari, she continued, \"I thought at least ONE other girl here had enough sense to realize we're opening a can of worms and this whole thing is gonna turn out to be a trainwreck that destroys everything we've built together. But I guess it's just me. Have fun being Matty's Harem, everyone. I think it's time I went home.\"\n\n\"Alice!\" Naimh called out in alarm as the Korean girl spun around, got up, and marched back into the house.\n\nHeaven help me, I couldn't stop myself from ogling Alice's puffy pink pussy from behind when she'd bent over, but I quickly brushed that idea away and called after my grade school buddy, \"Alice! Come on! We didn't--\"\n\nNaimh was already getting out of the tub as well, and I momentarily caught myself ogling HER gorgeous figure with water running in rivers down all of her curves. Only after she was out did I finally haul myself out, grab a towel, and follow after.\n\nThis was NOT good.\n\n****\n\nAlice was crying in the armchair when I walked in, wrapped in a towel but still pretty wet. Naimh was kneeling on the floor in front of her, clutching another towel around her midsection but the back had come loose and the terrycloth draped to either side of her, leaving her completely exposed from behind. But this wasn't a moment to get sidetracked.\n\nThe girls took one look at me as I came in, and Alice immediately held up a hand, saying, \"Go away, Matty.\"\n\n\"Please,\" I said gently, holding up both hands. \"I'm not here to make you feel worse, but I DO want to do whatever I can to make things better.\"\n\nAlice clenched her jaw and looked up at the ceiling for a moment. \"I should be really mad at both of you for crossing the line and screwing right here on the couch. YOU, I get it.\" She pointed an accusatory finger straight at me. \"You've spent years gleefully accepting whatever we girls would let you have. It's never been a question of whether or not you'd say yes if one of us wanted to fuck you. We've always known the answer.\"\n\nI didn't really know what to say to that, so I stayed silent. But I did at least approach and sit down on the couch cushion closest to her.\n\nAlice turned her ire to Naimh. \"YOU, on the other hand. You KNEW I didn't want the group crossing this line.\"\n\n\"I know, but that line has already BEEN crossed,\" Naimh argued.\n\n\"That doesn't make it right! You were supposed to be on my side. But what did YOU do when you found out Sam and Belle seduced him behind our backs? You immediately forgave them so you could finally fuck him on the spot! What the fuck, Neevie? Let Sam and Belle be the skanks that betrayed the BTC. Not you too!\"\n\n\"I forgave them because they're our friends.\"\n\n\"They're bitches is what they are. And I can't believe you're defending them! How the fuck does Sam ALWAYS get her fucking way even when she's quite literally the fucking bitch that stabbed us all in the back?!? And Belle too!\"\n\nNaimh frowned. \"Do you really think they're skanks and bitches just for giving into their feelings for him? Belle's loved Matty for YEARS. And Sam... well... I think Sam's just possessive. That thing with Holly really threw her for a loop, and she wanted to mark her territory or something. As for me... you KNOW how long I've wanted him.\"\n\nAlice's shoulders slumped in resignation as the fight went out of her. \"I know. I get it. I can't ask any of you to stop now that you've already started. That's why I should be the one to leave the BTC.\"\n\n\"Don't say that.\"\n\n\"Isn't it obvious? I'm the only one who DOESN'T want him! I knew Zofi would follow Sam's lead, but I at least thought I could trust Mari would keep her panties on. Now she's said flat out she's gonna put out for him as soon as she's ready and I can't be the only one in the club who's not on board with this brave new Matty-boning paradigm. It would just be WAY too weird, knowing the five of you are all... I just...\" Alice sighed and looked straight at me. \"I thought we were fine being buddies. We've been so good as buddies since seventh grade. Even after all the teasing and messing around and... shit... letting you eat my pussy... I thought we could at least stay buddies until the end of high school, you know? But now that you've started fucking the others, it's only a matter of time until everybody starts expecting the same of me, and I wouldn't be able to deal with that kind of obligation.\"\n\nI shook my head. \"I would never obligate you to--\"\n\n\"Oh, shut the fuck up, dude,\" she cut me off. \"Everybody knows you'd never force anyone to blah-blah-blah or obligate them to blah-blah-blah. That's not the fucking point. It's never been about YOU - this is entirely about THEM - and I don't fit in anymore. I'm not sure I ever did. I just watched my two best friends fucking each other -- and that doesn't even mention Belle sucking a creampie out of you right after -- and it's freaking me out because I am NOT ready for this. This isn't what I signed up for. I mean seriously, has EVERYONE been building and building and building to this point for the last few years? Was I was the only one stupid enough to believe the lie that we were keeping you around as the safe guy we could experiment on?\"\n\n\"It wasn't a lie,\" Naimh stated. \"I knew what I was getting into when I joined, and I knew full well Matty was off-limits. That didn't stop me from wanting him, because nobody can really control their feelings, but I had accepted that it would never really happen. Matty was a rare and precious resource, for all of us. Sam wanted to protect that, and her heart was in the right place when she made The Rule. I genuinely believe she never intended to sleep with him that night. I'm telling you sincerely that -I- didn't come here this morning planning to have sex with him, either. These things just sort of happened.\"\n\n\"Yeah, these things just sort of happened, and now Matty's Harem has been born. I suppose that's no worse a title than The Big Tits Club.\" With a scowl, Alice started hunting around for her clothes.\n\n\"Please don't leave,\" Naimh implored. \"We can work this out.\"\n\n\"There's nothing to work out. It's okay, Neevie. I'm happy for you, even if it doesn't seem that way right now. Because I know how you REALLY feel about him. I know how long you've wanted him, and now you finally get to have him. Enjoy yourself. Enjoy HIM. I want you to. It's just that I can't stand around watching you and everyone else fucking him when that's not something I want for myself, that's all.\"\n\n\"Alice...\" Neevie turned to me with a helpless expression on her face, plainly asking for help.\n\n\"Alice, please,\" I began. \"I don't want to lose you.\"\n\n\"It's okay, Matty.\" My friend since fourth grade gave me a sad look. I wasn't even tempted to ogle her as she shrugged into her bra and started pulling on her shirt. \"I'll always be grateful you were the one guy who could let me be me. Thank you for that.\"\n\n\"Then stay and let me let you be you. NOBODY in the BTC is going to stop you from being you. You're my buddy, and you're their friend. Yes, some of them have started having sex with me, and it looks like they intend to continue. But that's between me and them. It doesn't have to change your relationship with any of us.\"\n\n\"Everything already HAS changed. Sex changes everything, don't you get it? Half an hour ago, Neevie asked everyone if they wanted to go skinny-dipping. Everyone ELSE eagerly said yes, and nobody paid any attention to me frowning and shaking my head no. Did I want to strip down naked and go out to the hot tub? No, I didn't, but I felt like I had to go along. Right before that, everyone ELSE eagerly agreed that sex was now on the menu! And nobody paid any attention to me still being angry at Sam for betraying the BTC in the first place! I'm already the odd girl out, so I'm simply removing myself from the equation.\"\n\nBy now, Alice was fully dressed, and right as she said the word \"removing\" she started walking towards the front door. Naimh and I both followed after, still clad in nothing but our towels.\n\nNaimh suddenly changed tactics, barking angrily, \"Don't you DARE walk out on us, Alice! Come on! I thought we were friends!\"\n\nAlice stopped for a moment and turned around to face us. \"We were. You two were my BEST friends, but maybe we're not meant to be anymore. Romantic couples break up and go their separate ways when they realize they're not compatible anymore, and friends stay together because of common interests. For us, Matty, it was video games, comics, CCGs, and talking Sci-Fi. Neevie, it was art and comics and just finding a great girlfriend since the others were already paired off. And even though you and I were always at opposite ends of the spectrum when it came to sex stuff, I never once doubted that you cared about how this shit would affect me.\"\n\n\"I did. I do,\" Naimh said emphatically.\n\nAlice shook her head. \"But now you're fucking him, and I'm not. We're not compatible, and our interests aren't in common anymore. Goodbye, Neevie. Goodbye, Matty.\"\n\n\"Alice--\" we both called at the same time.\n\nBut Alice didn't turn around. She opened the door, walked away, and didn't come back.\n\n****\n\n-- CHAPTER 12: Fit In --\n\n****\n\nAlice wasn't waiting for me with a fist bump at the parking lot Monday morning. I still had Belle with me, of course, and she stayed with me right up until we had to split up to go to our separate first periods. Once I got to class, Sam took one look at me, got up, and walked around to give me a hug. I wondered just how bad I looked for her to feel the need to do that.\n\nAlice didn't join us during the recess between second and third periods, either. I knew I shouldn't have expected her to, but some part of me still hoped she had merely been late to school and therefore missed seeing me in the parking lot. I'd hoped everything was just a simple misunderstanding that would blow over and she'd rejoin the club like nothing had happened.\n\nZofi and I shared our third period, and the lissome brunette held my hand (as usual) as we walked to class. Fifty feet from the classroom door, we suddenly came to a dead stop as Alice crossed our paths. Alice stopped as well and gave us a weird look that somehow made Zofi drop my hand as if it had spontaneously caught on fire.\n\nAlice didn't join us for lunch, either. That's when I gave up hope and started to get really depressed.\n\nSam and Mari came over to Belle's place Monday afternoon to study and do homework, per usual. For the first time in a long time, we didn't have a single \"study break\". I mean, we took breaks from studying, but there were no makeout sessions or blowjobs or anything like that. Sam kept eyeing me with a sad look on her face, like some maternal instinct had kicked in and she wanted to take care of me, but I wasn't in the mood and radiated \"leave me alone\" messages that kept her and the others at bay. Not even Belle could get through to me.\n\nTuesday was more of the same. I finished my lunch early and went wandering around the school, trying to figure out where Alice was spending her time nowadays. In hindsight, I should've asked the girls if they knew first, because the girls always knew everything. When I returned and finally asked Naimh, she immediately replied, \"She's hanging out with Lucia and Seo-yeon.\"\n\nTuesday afternoons used to be Neevie and Alice days, but when I asked Naimh if she was still coming over, she sighed, shook her head, and asked if it would be alright for her to skip it. She just wasn't in the mood. I didn't go over to Belle's place to join her and Mari, either, electing to go home alone and wallow in my own misery. I wasted about an hour just staring at the wall, thinking about all the fun things I'd done with Alice since grade school, before I finally opened my books and got my work done. Belle didn't seem happy about it when she found out I'd spent the afternoon alone. She'd thought Naimh would've still come over, and figured we might even find solace in each other's arms. But I told her that being with Naimh made me think of Alice and vice versa, and neither of us really wanted to deal with that.\n\nWednesday was more of the same, but better in one important way. Alice at least talked to me when we passed each other in the hall. I asked how she was doing, she said she missed me but she wasn't coming back to the BTC, and then she had to get off to class. It was a fifteen second conversation, but it made me feel a lot better, and the other girls noticed. I still wasn't in the mood to mess around when Sam and Zofi started flirting, but I felt better.\n\nThursday afternoons had always been Belle and Mari afternoons. The first time Mari ever got carried away during a \"study break\" was on a Thursday when she'd shoved her hands into my shorts, fed me her nipples, and jacked me off all over my own belly. It had also been a Thursday when Belle orchestrated events so that Mari would catch us in the act mid-blowjob. That afternoon had ended with me giving the luscious Latina her first oral orgasm, and she performing her first blowjob.\n\nBelle and Sam had gotten nowhere with me over the past few days trying to entice me into one sexual activity or another. Sam had played the seductress, shaking her tits in my face, running her hands up my inner thighs, and generally trying to distract me with some of her old teasing behaviors, to which I'd politely ask her to stop. Belle had been a little more direct when we were alone together, once resorting to just grabbing my pants and yanking them down while telling me a blowjob would make me feel better. She was probably right, but I'd twisted away and asked her to stop, saying I wasn't in the mood and I'd rather she didn't force the issue.\n\nMari somehow got through to me where the others had failed. An hour into our study session, she reclined back across the bed and asked sweetly, \"Matty? I know you're not in the mood for fooling around, but can I just get a hug?\"\n\nWell, I couldn't turn down a simple hug, right? So I ended up lying down on my left side while Mari spooned herself against my chest. She stuck her juicy booty into my crotch and pulled my arm around her midsection, and we cuddled like that for a while. Mari sighed in contentment at the feeling of my embrace, and I had to admit I felt better in that moment than I had in days. Her breathing slowed as she lazily stroked my forearm with her fingertips. I felt my own breathing slowing down as well. My shoulder muscles, which had been stress-knotted for days, started to relax. Mari truly had a body built for comfort, and it felt like nature's design for me to mold my body around hers as if she were a warm, life-sized teddy bear. And after a few minutes, I actually started nodding off from the release of tension.\n\nI didn't quite fall asleep, though. My consciousness was getting fuzzy when I felt Mari mold her hand over mine. I didn't resist as she pulled my hand beneath her sweater, up past her belly and into her cleavage. The next thing I knew, I had a big round titty in my hand with a hard nipple pressing into my palm.\n\nI must've made a noise of surprise, because Mari started giggling. She didn't otherwise react, however, and we remained spooned together like that for another few minutes with nothing else happening. After that, though, she started rubbing her ass back against my crotch. And as I started to feel little sparks of pleasure trickling into my brain, I instinctively started rubbing the massive mammary in my right mitt.\n\nEventually, I found myself using the grip on her boob to tug her body against my chest and allow me to dry-hump her ass with a little more pressure. I was panting softly in her ear, dimly conscious of the fact that I hadn't cum since that first 'proper' threesome with Belle and Naimh on Saturday morning. The intervening six days were the longest period I'd gone without an ejaculation since before I'd learned to masturbate. And once I started seriously hot-dogging her buns, Mari must've realized I wasn't going to push her away like I'd been doing with Sam and Belle, and she rolled over to face me, started working my pants down, and swiftly crammed half of my cock into her mouth.\n\nI groaned at the welcome sensation of warm wetness surrounding my shaft, and she added a little vibration when she hummed happily. I stared down at the lovely Latina smiling up at me with a face full of man-meat, her long, luxurious locks of dark brown hair cascading down each side of her face.",
        "Salma Hayek, eat your heart out.\n\nShy little Mari actually winked right before she swallowed me to the root in a single lunge. She held herself at full depth, closing her throat muscles and opening them in a rippling, massaging motion for a few seconds before pulling all the way off, catching her breath, and then slamming her face all the way back down to do it again. Who ever thought shy wallflower Mari would turn out to be the natural-born cocksucker? I actually started laughing at the incredible sensations she was able to instill in me, shaking my head as I exclaimed, \"Holy crap, Angel!\"\n\nMari grinned at me, winking again while her puffy ruby-red lips were still wrapped around the base of my dick.\n\n\"Now you're just showing off,\" Belle drawled from the desk chair.\n\nMari giggled, but fortunately she'd withdrawn high enough so that only my head was still in her mouth, and she didn't choke. Swallowing and pulling off to catch her breath, she asked coquettishly, \"Want me to do it again?\"\n\n\"Oh, hell yeah,\" I replied enthusiastically.\n\nMari winked and went back to work.\n\nShe didn't only deep-throat me, either. She sucked on my knob, teased the underside of my mushroom cap with her tongue, and used her hand to stroke me expertly. She bobbed her head up and down, she stayed at the top just licking the tip, and she face-fucked herself, plunging my dick deep into her throat with every plunge.\n\nMy Angel was on FIRE.\n\nAnd she had me ready explode.\n\n\"Mari... Angel...\" I grunted, clenching my Kegels to stem the tide. \"I'm gonna cum.\"\n\nI assumed she would pull me out of her mouth and wrap her tig ol' bitties around my dick and let me blow in her cleavage, the way she usually did. I thought she might even hand me off to Belle and let my cumslut \"little sister\" swallow every drop. But Mari was still wearing her sweater and bra, and Belle wasn't moving from the desk chair. My angel with the dark eyes and bee-stung lips just kept on going, eyebrows furrowed in focus as she sucked me hard, sucked me powerfully...\n\n... and started swallowing sperm straight into her stomach.\n\n\"Nnngggaaahhhh!!!\" I grunted, feeling my balls evacuate as I fired away, blasting cumwads directly into Mari's gullet. She swallowed reflexively, taking each heavy spurt with the same expertise she'd already displayed taking my thick dick down her throat. Over and over again I erupted, gushing what felt like a never-ending deluge of semen that Mari drank and drank and drank.\n\nFive years later, I let my head fall back as I sagged back into the mattress, completely wiped out.\n\n\"Shit, Matty,\" Belle observed. \"You must've had a TON backed up.\"\n\nI merely groaned in response.\n\nMari nursed my prick for an extra few seconds before picking her head up, and abruptly let out a loud <BRAAAAP>.\n\nMari's eyes went WIDE in embarrassment at the burp, and Belle started shrieking with laughter as she exclaimed, \"Ohmigawd! It even smells like cum!\"\n\nThat got me laughing, and soon all three of us were wiping tears from our eyes we were guffawing so hard.\n\nIn the end, I crooked both hands to Mari, saying, \"C'mere, Angel.\"\n\nMari's face softened, and all of a sudden I couldn't even imagine her winking at me with a throat full of cock. The sexy vamp that would've put Salma Hayek to shame was gone, and only my shy, sweet angel remained.\n\nShe blushed cutely, and hesitated once more. But when I insisted and reached my arms to her again, she fell on top of me and pressed our lips together for a tender, sincere kiss.\n\n****\n\nFriday morning I was feeling MUCH better, thanks to Mari uncorking me the previous afternoon. Belle said the bags under my eyes were gone, and she wasn't the only one to notice.\n\nBelle and I left the house a little early in the morning and we wound up arriving right around the same time as Alice. She wasn't waiting for us at the parking lot, but we happened to see each other right after Belle and I parked. And rather than go out of her way to avoid us or just put her head down and pretend she didn't see us, Alice waited on the curb and extended her fist out to me.\n\nI grinned and gave her a fist bump. \"Hey, how's it going?\"\n\n\"It's going,\" she replied with a shrug before glancing at Belle and adding a casual, \"Hey, B.\"\n\n\"Hey Alice,\" Belle greeted cordially, but something wordless passed between the two girls, and the next thing I knew, Belle was jerking her thumb over and saying, \"Well, I'll catch you guys later.\"\n\nI blinked in surprise, and the next thing I knew Belle was scurrying forward towards the school gate like her pants were on fire. I arched an eyebrow at Alice, who sort of stared off after Belle with a mysterious smile before turning her attention back to me.\n\n\"You're looking pretty chipper right now,\" she commented. \"Did you bang one of our friends this morning or something?\"\n\nI frowned. \"Can't I just be happy to see you again?\"\n\nAlice shrugged. \"You looked pretty haggard on Wednesday, but you've got that 'I recently ejaculated' glow about you right now. And before you start fumbling through some stupid apology -- as if you somehow need to say sorry for having a sex life -- don't. I'm cool with it. In fact, I'm rather glad you're looking better again. This whole week, every time I saw you, you looked like... like...\"\n\n\"Like my best friend died?\"\n\n\"Well, I wasn't gonna say died.\" Alice smirked and started walking. I fell into step alongside her.\n\n\"How have you been?\" I asked. \"Still hanging out with Lucia and Seo-yeon?\"\n\n\"Yeah. They're nice girls, and we've always been cool. I've got more in common with them than the BTC anyway.\"\n\n\"More in common?\"\n\n\"They're studious, they like to read, and...\" Alice flashed me a smirk while scanning the area to make sure no one was within eavesdropping range, \"and they're virgins who aren't obsessed with playing with their best friend's junk...\"\n\nI arched an eyebrow. \"I thought you LIKED playing with my junk.\"\n\n\"I did, I did.\" Alice averted her gaze. \"Because I always felt safe with you. I always knew you'd never ask me to go any further than I was comfortable with.\"\n\n\"I still would never ask you to go any further than you were comfortable with.\"\n\n\"I know, I know, but that's not the point and you know it.\"\n\nI sighed. \"It's about the other girls pushing past boundaries you're not ready for.\"\n\n\"Exactly.\"\n\n\"Which is why you feel like you have more in common with Lucia and Seo-yeon.\"\n\n\"Exactly,\" she repeated.\n\nI shook my head. \"More in common with them or not, you know the BTC girls would never push you to go further than you were comfortable with.\"\n\n\"Wouldn't they? Tell me you've never heard Sam say, 'Hey Alice, look at the way Matty's cock throbs! Here, come wrap your hand around it! You can actually feel it pulsing!'\"\n\n\"Of course Sam would invite you to join her. But if you ever said 'no' to something, you have to believe neither she nor anybody else would push you. I mean, look at Zofi. She hasn't shown any inclination to test any boundaries and you don't see anybody pushing her.\"\n\n\"But she's also not torn about what's happening, either. Let's face it, Matty: I don't fit in with those girls anymore.\"\n\n\"Of COURSE you fit in. You've ALWAYS fit in.\"\n\n\"Please. I NEVER fit in.\" Alice stopped and backed up against the wall, out of the flow of traffic, and I followed her. Shaking her head, she gestured in the vague direction of the school, muttering, \"Perfect 10s, every one of them: Sam the popular, busty blonde. Zofi the elegantly beautiful brunette. Belle the petite but stacked little hottie. Mari with that incredible hourglass figure. And don't get me started on the way you look at Neevie. But me?\"\n\n\"You're amazing, Alice,\" I insisted.\n\n\"And you're biased. You're just saying that to butter up your best friend.\"\n\n\"You're Alice the athletically-toned, fit babe with an incredible rack.\"\n\n\"I want to believe you, but even if that's what you truly think of me, I still don't fit in. The five of them think about sex twenty-four/seven. It's all they talk about anymore.\"\n\n\"Nonsense. Everyone has their own interests, and they're every bit as studious as Lucia and Seo-yeon.\"\n\n\"Please...\" Shaking her head, Alice muttered, \"Our afternoon study sessions have become more about the study breaks and getting your dick into their mouths or in-between their tits more than the actual studying.\"\n\n\"You gonna tell me you didn't enjoy your own study breaks with me?\"\n\n\"Of course I did, and if all I ever had to worry about was you slithering your amazingly agile tongue up my twat, I'd be perfectly happy to continue. But can you honestly tell me -- now that sex is on the menu -- that you're not gonna end up porking a pussy or two every afternoon?\"\n\n\"I haven't porked a pussy in a week.\"\n\nAlice blinked. \"Really?\"\n\nI shook my head. \"Not since you walked out.\"\n\n\"Really?\"\n\n\"Couldn't you tell? The whole 'Matty looked pretty haggard on Wednesday' thing?\"\n\nAlice shrugged. \"I genuinely thought you were just torn up about being estranged from me. Now I understand it was just because you weren't getting laid.\"\n\nI rolled my eyes. \"I wasn't getting laid BECAUSE I was torn up about being estranged from you. The girls have flirted a bit, but I've been the one who wasn't in the mood.\"\n\n\"Huh.\" Alice mused on that. \"I mean, I knew you and Neevie haven't been porking. I keep asking her but she always says 'not yet'. I tell her not to hold herself back out of guilt for me. Still, I'd just assumed Sam or Belle would still... you know.\"\n\nI shook my head and repeated, \"I haven't been in the mood.\"\n\nAlice frowned. \"But then of course, you WERE glowing this morning.\"\n\nI shrugged. \"Mari eventually got to me yesterday afternoon. Showing off her deep-throat skills. I won't lie - I felt better afterwards. But in all honesty, the fact that you're talking to me right now means more to me than just getting off.\"\n\nAlice smiled at that. \"I do miss hanging out with you, but at the same time, I'm serious about not coming back.\"\n\nI sighed. \"If that's the way you really feel.\"\n\n\"It is.\"\n\n\"Okay.\" I took a deep breath and nodded. \"I always swore I'd never push you, and trying to get you to come back to the BTC is probably as close as I'm ever gonna get. If your mind is truly made up about this, I'll leave you alone if that's what you want.\"\n\n\"It is.\" Alice shook her head. \"I don't fit in anymore.\"\n\n\"Fine, fine.\" I rubbed my forehead, tired of going around in circles on this.\n\nAlice checked her watch, I nodded, and we started walking again. Although Belle and I had left earlier than usual this morning, this conversation had eaten up that extra buffer and we'd need to hurry a little to get to class on time.\n\n\"I'm worried about Neevie, though,\" Alice said out of the blue.\n\nWe were still walking fast, but I glanced over. \"Worried?\"\n\nAlice sighed. \"She still looks like her best friend died.\"\n\nI nodded. \"She misses you as much as I miss you.\"\n\n\"I'd like to think that. But then again, maybe it's just because you haven't porked her pussy in a week.\" Alice stopped walking for a moment and gave me a serious look. \"Neevie's feelings for you are real, I hope you understand that.\"\n\n\"I do.\"\n\n\"I meant what I said: I'm glad for her. I'm glad for you. I know how long you both have wanted each other, and now you finally can. Please don't let guilt over me leaving be the thing that keeps you apart.\"\n\n\"Come back and we won't have to feel guilty over you anymore.\"\n\n\"It's not that simple.\"\n\n\"Why not?\"\n\n\"Because it just isn't.\" Alice sighed and started walking again. \"You're my friend, Matty. Neevie's my friend too. Look, I'm not gonna avoid you, alright? I see you in the parking lot, I'll say 'hey' and give you a fist bump. You bump into me in the hallways holding Zofi's hand, don't get all weird and drop your hands like you got caught doing something naughty when you didn't. Give me some time and some space, and eventually we'll figure out how to stay friends, good enough?\"\n\nI nodded and gave her a warm smile, feeling relieved. \"Yeah, good enough.\"\n\n\"Good.\" She extended a fist to me, and as I bumped it I felt as if a great weight had slid off my shoulders.\n\nAnd then to my surprise, Alice leaned forward and actually hugged me.\n\n\"Catch you later,\" she said. And then she turned and ran off to class.\n\n****\n\nI felt much better after that encounter, because even though I realized things might never again be the same between us, I no longer feared that Alice would cut herself out of my life completely.\n\nNaimh, on the other hand...\n\nThe whole BTC always came over to my house Friday afternoons, and this day would be no different. Naimh actually beat me to the house, with her car parked on the curb when I pulled the minivan into the garage. Belle said hi before walking over to her house to drop off her backpack and change before returning, and I met Naimh in the driveway with a hug.\n\n\"How are you doing?\" I asked, still holding her close.\n\nImmediately, moisture formed in Naimh's eyes and I regretted the question, but she sighed and kept herself from crying. \"I saw Alice today, actually,\" she mumbled softly.\n\n\"Cool, me too. We had a pretty nice chat, and in the end she hugged me, so that's a good sign. She did say she was worried about you, though.\"\n\nNaimh sighed again.\n\nI wrapped my arm around her lower back and led her into the house through the garage. \"Based on the way you're holding back tears, I'm guessing your conversation didn't go quite so well.\"\n\nNaimh exhaled slowly and shook her head. \"No, it was fine, actually. She said she was glad to see me and offered to meet up more often. Just... not with the other girls. She's made up her mind about not coming back to the BTC, and we all know how stubborn that girl can be when she's made up her mind about something.\"\n\nI winced and nodded. \"In seventh grade she was so sure she was going to win a game of Magic that she literally bet the shirt on her back. That is, she'd wear that t-shirt to school for the rest of the week without washing it. I lucked out, she lost, and good lord did she start to smell by Friday, especially since we were still playing basketball during recess in those days. I insisted I didn't care about the bet and pleaded with her to change clothes, but she'd made up her mind. Wanna beer?\"\n\nNaimh gave me a wistful look as she continued on into the family room while I peeled off in the kitchen and went to the fridge. \"Yes on the beer. And I don't think you've ever told me that story.\"\n\nI chuckled. \"You can ask her about it sometime, or maybe I will. I can't remember the name of the band on the shirt...\" My voice trailed off as I handed her the beer.\n\nNaimh accepted the beer and sat down on the couch. She took a swig, grimaced, and started rubbing her neck.\n\n\"Ooh! There's something I can do to help,\" I announced brightly, setting my own beer down on the side table and gesturing for Naimh to move. \"Slide forward so I can get behind you.\"\n\n\"Huh?\"\n\nI held up my hands. \"You look like you could really use a Matty backrub.\"\n\n\"Oh, do I ever,\" the redhead agreed with a genuine smile. She shifted forward on the couch so that her butt was right at the edge, collecting her brilliant mane of red hair and pulling it all to the front of her shoulders.\n\nI kicked a leg over and slotted myself between her back and the couch's backrest. I reached up and started in on her shoulders, but Naimh wore some kind of polyester sweater that bunched up and made my fingers slip. So I leaned forward and asked, \"Mind taking off the sweater?\"\n\nNaimh glanced back at me with a smile. \"It's not like you haven't seen it all before.\" She quickly removed the sweater, reached back to unclasp her bra, and pulled the straps down to her upper arms, although she trapped the cups against her breasts.\n\nI did the honors of brushing her hair out of the way again and resumed my rubbing, this time with my fingers on bare skin. And within two minutes, the Irish lass had her head pitched forward, her eyes closed, and her body infinitely more relaxed than it had been before while she moaned in sync with my rhythmic hand motions.\n\n\"Fuuuuck, I needed this,\" Naimh murmured softly when I switched to long strokes up and down the full length of her back, really kneading out her tight muscles.\n\n\"Then I'm glad you came first.\"\n\n\"Mmm, not yet I haven't,\" she muttered back automatically. It took me a second to realize she'd made a sex joke, like in the old days.\n\nBelatedly, I chuckled and leaned forward to gently kiss the back of her neck. Naimh shivered at the touch, glanced back as if she were going to make a flirtatious comment, but then suddenly stopped herself. And all of a sudden, her shoulders were tense again.\n\nI stopped my massage and muttered, \"Hey... I'm sorry.\"\n\n\"Why the fuck are you apologizing, Matty?\"\n\nI blinked, thought about it, and tried to say lightly, \"For being so irresistibly sexy that you couldn't help yourself wanting to fuck me and starting this whole chain reaction that ended up with Alice walking away leaving you feeling like you're being forced to choose between two sets of friends?\"\n\nNaimh snorted and shook her head. \"That's a lot more accurate than I... Okay well bollocks, that's totally accurate. So yeah, it's all your fault.\"\n\nI chuckled. \"I know. I'm like... such a babe.\" I waved my hand out to the side like a valley girl.\n\n\"I'm serious,\" Naimh said quietly. \"I've been attracted to you since I first met you.\"\n\nI frowned and realized she WAS serious, but that didn't make sense. \"I'd like to think I'm not unattractive, but I know I'm no Brad Pitt, either.\"\n\nTurning slightly, enough that she could face me, Naimh gave me a little smile. \"I didn't fall in love at first sight or anything, or even lust at first sight. When I first saw you, I thought you were kinda cute but nothing that got my panties wet right away. I was, however, quite curious to find what was so special about you that made five other girls include you in their club. And an hour later, I knew.\"\n\nI blinked in surprise and asked, \"What was it that made me so special?\"\n\nHer smile widened. \"I can't put it into words. You were just so... so Matty. You were so confident with the others, and confidence IS sexy. But you were restrained at the same time, so in control. I watched the way Sam teased you, how FAR she teased you, and any other guy would have broken down and grabbed her boob or something. But you had that self-control, and yeah, self-control is sexy too. You were so masculine in a sea of hot teenage girls, and... well... I could see in your eyes the way you looked at ME. Kinda like the way you're looking at me now. Even with all the other beautiful girls around you all the time, when you looked at me there was this... hunger... in your eyes. Raw desire. And that made ME feel incredibly sexy too.\"\n\n\"You ARE incredibly sexy, Neevie. You're the most gorgeous thing I've ever seen.\"\n\nThe Irish beauty snorted and shook her head, looking away from me and blushing a little at the compliment. \"You've already had me. No need to butter me up.\"\n\n\"I'm not buttering; it's the truth.\" I took a deep breath, kicked my leg over, and moved myself out from behind Naimh so I could sit beside her on the couch instead. Looking her straight in those amazing emerald eyes, I stated honestly, \"Before you came along, Sam and those massive tits of hers were my most common wanking fantasies. But you became my number one the day you arrived. You say you didn't fall in lust at first sight for me, but I actually DID. I'm being dead serious. You are... and have always been... the most gorgeous thing I've ever seen.\"\n\nNow Naimh REALLY blushed, and with her fair complexion her face didn't just turn pink, but her face, ears, and neck all went crimson. \"Ohmigawd, Matty...\"\n\n\"That I couldn't have you felt like the sickest joke at first. I remember praying you WOULDN'T join the BTC so I could ask you out on a date. I hadn't been on a date since the beginning of the year, having decided no one else was worthy of me spending time away from the club. But then you showed up and I prayed so fervently I'd get the chance to ask you out.\"",
        "Naimh shook her head and buried her face in one hand. That actually meant she was now only using one hand to trap her bra against her breasts, and the right cup hung down, exposing an erect pink nipple. I glanced at it for a moment and felt myself starting to harden, but quickly returned my gaze back to her lovely face.\n\n\"That didn't happen, obviously,\" I continued. \"You became part of the club, and The Rule was always The Rule. I got to know you more, and my desire for you only got even stronger. We've always flirted. We've always lusted for each other. To be perfectly honest, I always wanted to figure out if there could be room for romance and love as well. But I learned to accept that because of The Rule, you could never be more than my friend and never my... well... never be my girlfriend.\"\n\nNaimh looked incredibly sad for a moment. \"You know, I always asked myself if I hadn't made the biggest mistake of my life joining the BTC. At first, you were actually the REASON I joined. I didn't join for Sam; I joined for YOU. Sam was very nice and welcoming of course, but after I met you, I knew I needed to spend as much time with you as I possibly could.\"\n\n\"Really?\"\n\n\"I didn't really understand The Rule at first. I mean, Sam always said that if you fell in love with one of us, of course you'd be allowed to find your own happiness. So I figured that if the two of us really clicked, we could eventually be together. But as time went on and I realized just how much the others had invested in you, I knew I could never betray the girls by taking you away from them. But at the same time, I realized that what I felt for you was more than just a casual infatuation. So we ended up in this cat and mouse give and take, offer and chase, without ever quite being allowed to catch each other. And so many times I asked myself if I shouldn't leave and become an outsider... like Holly... just so I could be allowed to actually have you.\"\n\nI shook my head. \"As much as I wanted you, I would never have been able to do that to the girls.\"\n\n\"I know. At least, that's what I always said to convince myself to stay.\"\n\n\"Well...\" I gave her a rueful grin. \"We finally got each other last Friday.\"\n\n\"Annnd Alice promptly left.\" Naimh's shoulders fell as she started shaking her head. \"I always had in the back of my head that me fucking you would break up the BTC, and it turns out I was right.\"\n\n\"Alice would have eventually left whether or not you and I slept together. The writing was already on the wall when Sam and Belle got to me first.\" I blinked and gave Naimh a wary look. \"Does that bother you, by the way? That Sam and Belle had sex with me first?\"\n\n\"Yes and no,\" Naimh sighed. \"On the one hand, absolutely yes I wanted to be your first -- the special one you'd remember for the rest of your life. On the other hand, my conscience would never have been able to handle it if I had taken your virginity. As much as the romantic in me might have liked the idea of being your first, the two of them crossing the line got ME off the hook. They wiped away the one and only objection anyone could truly have to me FINALLY getting to be with you the way I'd always dreamed. I only wish they had done it sooner. Then you and I could've been fucking for months already!\"\n\nI wanted to smile, but her words only reminded me that we hadn't been fucking for the past week, and why. With a frown, I said, \"You told Alice we haven't had sex since that day.\"\n\nNaimh sighed and nodded. \"She keeps asking, actually. We first talked on Monday and she wanted to know how many times you nailed me over the weekend. I told her we hadn't at all. She acted surprised and tried to say she wouldn't have wanted us staying apart because of her, but I could tell she was secretly pleased.\"\n\nI frowned. \"Secretly pleased? That's not the Alice I knew. She doesn't say one thing but deep-down mean something different. No offense, the rest of you girls do that ALL the time, but not Alice. It's one of the things I love best about her: if she says something, she means it.\"\n\n\"You weren't there. I could read it in her eyes. Like she was... gloating.\"\n\n\"You sure you weren't just projecting your own guilt onto her?\" I turned Naimh to look ME in the eyes. \"And you said she keeps asking. Why do you think that is?\"\n\n\"Because every time she gets confirmation that we're not and sees the look on my face, she gets a triumphant little thrill of victory.\"\n\nI scowled. \"Relishing her friend's unhappiness? Schadenfreude is NOT an emotion I would associate with Alice.\"\n\n\"It is what it is.\"\n\n\"No way. I told her the same thing this morning and she seemed genuinely sad about it. You think she secretly revels in the idea that we're holding out for her sake? I'm telling you, that's not the Alice I know.\"\n\n\"Clearly, you don't know her as well as you think, or the Alice you know wouldn't have left the BTC.\"\n\n\"Actually, that's EXACTLY the Alice I know. I told you, she doesn't hide her feelings very well. And when she got to her breaking point, she didn't bury her feelings and suck it up. No, she got mad, said how she felt, and walked away. Classic Alice.\"\n\n\"I know it is, I just...\" Naimh rubbed her forehead with both hands, no longer caring if the bra dropped (which it did). \"Okay, maybe I AM projecting my own guilt.\" She look up at me with a familiar look of longing, the same kind of expression she had on her face when she really WANTED to cross a line and start something while knowing full well The Rule prevented her from doing so. Only this time it wasn't The Rule preventing her anymore, it was Naimh's own guilt.\n\n\"Alice DID say she was happy for you,\" I began, \"and that she wanted you to enjoy this. She wanted you to enjoy ME. We both know that as angry as she was at the time, she meant every word of that.\"\n\n\"You've felt just as guilty as I have,\" Naimh countered, \"which is why you haven't been screwing around with the other girls for the past week. Sam certainly bitches about it often enough.\"\n\n\"I did, but maybe it's time we both got past that guilt. Am I sad that Alice has chosen to walk away from the BTC? Yes, absolutely. But I've had time to come to terms with that. She's doing alright, she doesn't hold a grudge against either of us, and in plain simple fact, I still desperately want you.\" I reached up to brush the backs of my fingers along Naimh's cheek, and even with tears in her eyes she was still the most gorgeous creature I'd ever seen.\n\n\"Matty... I want you, too. I just...\" She hesitated and gave me a painful look. \"I'm just not sure I can--\"\n\n\"I know you can't,\" I interrupted. \"Your sense of guilt won't let you. That's why I now know the answer to that hypothetical over what you might've done had you been in Sam's situation after the wedding date: alone with me, all dressed up and feeling like a princess: You would never have betrayed the BTC. No way. It was only after Sam and Belle crossed the line that you allowed yourself to let go. And now, even as much as you want to be with me, your sense of guilt over Alice won't let you. So what do we need? A notarized affidavit from Alice telling you it's okay to be with me? C'mon. She's already told you she's okay with it and wants you to be happy! She already said, right there next to that armchair, that she knows how you REALLY feel about me. She's already given you... given US... her blessing. What else is it going to take?\"\n\n\"I don't know!\"\n\nI came to a realization just then. For once in my life, I couldn't wait for the girl to give me explicit permission. For once in my life, I had to cross the line she couldn't cross herself. If I kept on waiting for Naimh to come to terms with her own sense of guilt, we'd never be together again.\n\nSo for once in my life, I took charge.\n\n\"She's still my friend,\" Naimh was blubbering, \"Knowing how things ended, I can't be the one to--\"\n\nHer voice cut off when I kissed her. She inhaled sharply in surprise, unresisting but not fully kissing me back, either.\n\nPushing her back against the couch, I reached for the waistband of her jeans, unbuttoned them and pulled down the zipper. She whimpered into my mouth and gripped my shoulders, neither helping me nor stopping me, either. Finally, I broke our lip-lock, kissed my way down her neck and chest, stopping of course to suckle at her freckled tits, nibbled down her belly, and wound up kneeling on the floor before her.\n\nNaimh stared at me, mixed lust and anxiety in her eyes. I yanked down on her jeans hard enough that she pressed herself against the backrest and lifted her ass off the couch just enough for me to get the offending material off. And the most gorgeous thing I'd ever met was now completely naked before my eyes.\n\nI split her knees, dove my head, and feasted.\n\nNaimh never gave me permission to take her clothes off. She didn't initiate the kiss, or tell me she wanted me, or do any of the other things the girls had always done to communicate their desires. If anything, Naimh had repeatedly told me she couldn't do this, that as much as she wanted to, she couldn't betray Alice.\n\nSo I'd taken the decision out of her hands. It wasn't her fault this way. SHE wasn't crossing the line. I was simply... taking her.\n\nTwo minutes later, I was literally \"taking\" her, as I slotted my dick and started pushing inside. It was the first time I'd ever put my dick somewhere without clear permission to do so, and even now I could see the indecision in Naimh's eyes. She whimpered and clutched my upper arms, on the verge of tears as I hit bottom and bent to kiss her.\n\n\"Be with me, Neevie. Please?\" I asked softly and started to slowly pump my hips.\n\n\"Matty...\" she whined, still torn.\n\n\"You can let go of the guilt. You started saying you can't be the one to betray Alice, and you didn't. I made this decision for both of us, and you need to realize it's not a betrayal at all. Alice already gave us both permission to enjoy this, to enjoy each other. She said she knows how you really feel about me. Now why don't YOU tell me how you really feel about me?\"\n\n\"Matty...\" she whined again, her expression full of angst.\n\nI smiled, realizing once again she couldn't bring herself to say it. So I went ahead and said it for her. \"You're in love with me, aren't you? That's what Alice meant when she said she knew how you really felt about me.\"\n\nI immediately saw the confirmation in her eyes. Her eyebrows crinkled, and she was suddenly hyperventilating beneath my body, her chest rising and falling too rapidly to be quite healthy. I wasn't even pumping anymore, just keeping myself at full depth and undulating my hips side-to-side a little.\n\n\"It's okay. I've always loved you too,\" I replied.\n\nNaimh blinked, \"You have?\"\n\n\"Of course.\" I smiled and kissed her.\n\nFor the first time since we'd started, Naimh kissed me back just as fervently as I was kissing her, but she broke away just as quickly. \"Wait-wait-wait. What about Sam and Belle?\"\n\nI raised my eyebrows, realizing just then how often I'd been using the L-word lately. \"I'm quite affectionate for Sam, and I love all of the BTC girls in their own way, but I'm not in love with Sam. What we've had is purely physical. As for Belle...\"\n\nNaimh's eyebrows rose when I hesitated, and she gave me a somewhat expectant look.\n\nI blushed and said honestly, \"The 12-year-old inside me has always been in love with my Annabelle. 18-year-old me is still sorting out my feelings for 18-year-old Belle, though. I've spent such a long time categorizing her in my mind as my little sister and feeling a deep-rooted love for her in that way. And after everything we've talked about, I don't think a romance will ever be in our future. There's too much sibling-love.\"\n\n\"Fair enough,\" Naimh granted.\n\n\"You, on the other hand...\" I pecked her nose again. \"You are the one girl who I always wanted to break The Rule. I'm not going to say I've been in love with you all this time, because that would be the kind of lie a guy says to butter up a girl when he's trying to get into her pussy.\"\n\n\"No need to butter me up. You're already in my pussy,\" Naimh pointed out with a giggle, clenching her inner muscles around me for emphasis.\n\n\"Exactly.\" I chuckled and said, \"But I did say that I've loved all the BTC girls in their own way. And with you... well...\"\n\nNaimh's eyebrows rose expectantly when my voice trailed off, recognizing I was about to say something pretty serious.\n\n\"Naimh O'Brien,\" I began, scarcely believing I was about to ask what I was about to ask. \"Will you go out with me?\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "18-year-old",
        "teenagers",
        "redhead",
        "big breasts",
        "high school",
        "mff",
        "creampie",
        "busty",
        "titty drop"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-11-12"
}