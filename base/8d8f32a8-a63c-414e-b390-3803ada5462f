{
    "title": "Esther and Me Ch. 04",
    "pages": [
        " Chapter Four A new union and life without Esther\n\nCatherine was already at the house by eight in the morning, bags in hand. I had stayed up most of the night over packing or should I say putting everything I owned into one HUGE suitcase.\n\n\"And they say women over pack. Do you have everything you own in that bag?\"\n\n\"Everything except my mustang and I figure we'll pick it up on the way.\" I smiled until I tried to pick up the bag. Screw that, I'd let the porters deal with it. Passport, drivers license, a ton of cash, and one credit card is all I should need. I checked and rechecked the list the travel agency had sent over to me. The last thing I threw in was seasick pills. I wasn't taking any chances. \n\nWe said our goodbyes. Esther gave me a big hug and whispered 'good luck' in my ear. It was a five-minute cab ride to the storage facility and the port was about a three hours drive so we had plenty of time to talk. This would be my first official cruise and I was looking forward to it like you wouldn't believe. I had all my valuables, including the ring, in a small backpack I planned on keeping close to me until we got in our room. There would be no slip-ups if I could help it.\n\nEven with express check-in it still took a while and our bags didn't show up until after some stupid thing called muster. I felt like I was on the Titanic listening to them explain what we would have to do in the unlikely event we needed to abandon ship. We were going to the tropics for Christ's sakes, how many icebergs could there be? I unpacked everything, hung it all up, and put the rest in the dresser drawers. Catherine hung up her two long dresses and that was it.\n\n\"I work out of my suitcase. I know where everything is so excluding my toiletries everything stays in here.\" I guess she was an old hand by now. We signed up for a few excursions but mostly we wanted to spend the time by ourselves. We walked the ship, found out where everything was and headed back to our cabin. \n\n\"Let's hit the pool deck,\" she suggested.\n\nI grabbed one of five bathing suits I'd brought while she dug out hers. I was just tying the knot in front when I looked up and saw what she was wearing. Where's the rest of it? Were the first words that my brain asked. It was yellow, tiny, and tinier; that's the only way to describe it. She wasn't big breasted but what she did have was all out there.\n\n\"What?\"\n\n\"I think I've got a few bandages in my suitcase that would cover more than that suit is covering.\"\n\n\"Steve, we don't know anyone here, and I'll never see any of these people ever again. And unless you think I don't look good in this suit, what's the problem?\"\n\n\"You see, we're probably not going to make it out of this room the way you look and the way I'm feeling right now.\" I looked down at a raging hard-on.\n\n\"I can fix that,\" she said sitting on the bed opening my swimsuit and taking me in her mouth. It didn't take her long as she deep throated me while caressing my balls.\n\n\"Oh fuck,\" I said holding onto her shoulders to steady myself while she drained me. \n\n\"Now,\" she said pulling up my shorts. \"Shall we go to the pool deck?\" Weak in the knees we made our way up one flight of stairs.\n\nAt fifty-four Catherine look better than good. If I didn't know any better I'd swear she wasn't a day over forty. She got more than one look from teenage guys to those a lot older than me. It got to the point I didn't want to leave her alone for even a second.\n\nWhen I went to the buffet line to get us some fruit and a cool drink there was a guy sitting on my lounge chair talking to her when I got back. Even through his dark sunglasses I knew what he was staring at. I stood there with both hands full of food when they finally noticed me.\n\n\"Honey, you're back. Steve, this is Don, Don this is Steve.\"\n\n\"Steve, I'd shake your hand, but it looks like you've got them pretty loaded. Kate, maybe I'll see you around,\" he said getting up.\n\n\"Kate?\" I said looking at her.\n\n\"Here, let me help you.\" She stood up taking both drinks.\" After that incident I never left her side.\n\nWe had the late dinner seating so after changing into something more appropriate we walked the decks until just before eight. There was a mob of people waiting to get into the dining room but within five minutes we had found our table and were seated. I ordered us drinks and a bottle of wine to have with dinner.\n\nThere were three other couples at our table. John and Tracy were in their late fifties, Linda and her new husband Paul were at the most in their mid to late twenties and just by looking at them you could tell they were newlyweds or close to it. The third couple came in late. Kevin was in his late forties but his wife April couldn't have been much more than twenty-nine. Looks like he had a trophy wife.\n\nWe went around and introduced ourselves and found we were from all walks of life and were scattered throughout the United States. When Catherine said this was my first cruise everyone added their tidbit of something I just had to do, but to a person they said it would be memorable.\n\nDinner was long and drawn out. Finally after finishing our wine Catherine suggested a walk on the deck. That's when my cruise went to shit. All the fucking outside doors had steps to keep water from coming in during a storm. I opened the door and plowed into one falling flat on my face. Then adding insult to injury, the door closed on my leg. Embarrassed doesn't even come close to describing how I felt.\n\nCatherine was trying to re-open the door when the steward rushed over to help her. Feeling more like a klutz, everyone helped me up. It was then I realized I had a slight problem feeling the pain shoot through my right foot. A quick trip to the infirmary confirmed that I had a slight ankle sprain.\n\n\"Keep off it for a couple of days and you'll be as good as new,\" the doctor instructed me. \"Take two of these three times a day for a couple of days, keep it elevated, and you'll be upright in no time.\" He handed me a small bottle of pills that contained what to me looked like large aspirins.\n\n\"Great, just fucking great,\" I mumbled softy to myself watching him put an ace bandage around my ankle. Standing up it was sore but manageable.\n\n\"I can't take you anywhere, can I?\" Catherine said laughing. \"Looks like bed rest for you.\"\n\n\"Not on your life. This is my first cruise and I'm going to enjoy every minute of it even if it kills me.\"\n\nSo, we didn't walk the decks that night, but we did hit the clubs. We got a table close to the dance floor and I got an extra chair to keep my foot elevated. The place was dark and the music was very loud. The best we could do is to watch other people dance. When Catherine was asked to dance by one or more guys she always said told them thanks, but no thanks.\n\n\"Go ahead and dance, I'll be fine. It's not like I'm going to be able to do much of anything for at least a couple of days.\"\n\n\"You sure about this?\"\n\n\"Look, I know you love to dance. Have some fun and don't worry about me. I'll just be a good cripple and sit here in the corner,\" I told her sticking out my lower lip. She kissed me.\n\n\"Maybe we should go back to the room and do our own type of dance?\"\n\n\"We'll have plenty of time for that later tonight. Right now it's time to party.\" So for the next two hours she went from one guy to the next on the dance floor. She never danced a slow song with any of them, but she did a few mean salsa dances with one. She sure was a great dancer. We left the club around one thirty in the morning.\n\n\"I haven't had that much fun in ages,\" she said beaming. \n\nWe made it back to our cabin, undressed, and sat on our balcony enjoying the night air. Holding her hand I reached over, kissed her, and said what a good idea this had been. We made our way back into the cabin and with the balcony door propped open so we could hear the ocean made mad passionate love and fell asleep in each other's arms.\n\nWe never made breakfast in the dining room but hit the Lido deck for the breakfast buffet. We were docking at Key West this morning and she was looking forward to walking around the downtown shops.\n\nIt was crowded and after an hour or so my foot started to bother me.\n\n\"Babes, I need to go back while I can still make it.\" I could see she was disappointed. \"Look, you shop and have some fun and I'll meet you back on the ship.\"\n\n\"Are you sure?\" \n\n\"Positive,\" I replied giving her more than a little peck. \"Just don't spend all your money on these over priced touristy items.\" She smiled and I was off on my slow hobble back to the ship. What had taken us a half hour, took me almost an hour to get back. I was hurting and sweating like a pig when I finally made it back to the ship. I iced the shit out of my ankle, kept it elevated, and popped three of those damn pills. At least from the balcony in my room I could see the dock and the people walking back to the ship.\n\nIt was after four thirty when I saw Catherine and two guys walk up the dock to the ship. I recognized my new buddy Don and who the other guy with him was anyone's guess. I guess Don was right, he would see her around and it looks like he had.\n\nShe must have had four bags stuffed with clothes and over the next hour she modeled each item for me. When she brought out a bright pink swimsuit the size of a two cotton balls, my face showed what I thought of it.\n\n\"Loosen up. If you've got it flaunt it and if you don't, flaunt what you've got. This one I plan on wearing on that special sun tanning deck.\" I looked confused. \"Steve, it's a topless sun deck for adults only. I want to go home without any tan lines this time and don't worry, you'll be right next to me.\" \n\nAn hour later we were up on that deck without our tops. I put plenty of sun tan lotion on the spots that were pale white and hadn't seen the sun in a long time. I did let my hand slip a couple of time and all she said to me was later. When Don and the other guy I'd seen her with came topside I wasn't too happy. \n\nWith a big smile she said, \" You remember Don, and this is Paul. I met them both downtown today.\"\n\n\"How's the foot, Steve?\" he asked looking at me through his dark glasses.\n\n\"Much better. It'll probably be all healed up by tomorrow.\" I lied but he didn't know that. When they sat next to Catherine and talked up a storm I started to get a little concerned. When more than one guy started walking around and staring at her I told her it was time to leave.\n\n\"You're going to get burned and ruin the rest of the cruise if I don't get you out of the sun.\"\n\n\"I guess you're right. We'll probably see you guys at the club later tonight.\" She got up from the chaise and put on her top. I said nothing.\n\nDinner was fantastic, and of course, we both ate more than we should have. I had only one glass of wine especially after she said that a walk around the decks was in order. I popped two more pills and although I was in pain, I told her I was fine. I was still limping a bit but sucked it up.\n\nThe club was packed and we could only find a small table in the back. I danced three songs back to back and after the last one, a slow one, the throbbing of my ankle let me know I was pretty much done. I had sucked it up as much as I could stand and now I had to get off my foot. With sweat rolling down my face I told her I just needed to sit for a couple of minutes; that's when Don showed up sans the sunglasses. He couldn't be much over forty and when he asked Catherine to dance I told her to go for it. That was the last I saw of her for the next two hours. I take that back, she was on the floor with Don, Paul, and two other guys most of the night. She'd wave at me but after three slow songs and too much to drink on my part I wanted her off the floor. \n\nI made my way over to the dance floor. She was talking to two guys, had a drink in her hand and it looks like it hadn't been her first. One guy had his arm around her, and the other two were talking, laughing, and having a good old time.\n\n\"Hon, I think it's time we call it a night.\" I said looking at the guy with his arm around her; he immediately removed it.\n\n\"But it's still early and I haven't danced this much in a million years,\" she said with pleading eyes.\n\n\"There's always tomorrow night.\" I reached out to her.\n\n\"Well, guys, I guess I'll see you tomorrow,\" she told them but they didn't look any too happy with me. She'd had at least one too many and swayed to the music in the background all the way to our room. When we pushed into our room she was all over me.\n\n\"I want you so bad right now I can't stand it,\" she began pulling her dress over her head. However she slipped backwards and ended up on her ass. That must have jarred something loose inside of her because she covered her mouth and ran to the bathroom. Dinner and I think everything she drank that evening came up, that's what it sounded like, anyway. I went out and sat on our balcony while she tried to recover. Ten minutes later a glassy-eyed woman came out.\n\n\"I think I had too much to drink tonight. Everyone was buying drinks and I must have lost track.\" I was going to say no shit sweetheart but held my tongue. Our romantic cruise was not turning out the way I had planned.\n\nDid we make love that night? Hell no. She was out like a light within five minutes snoring away. Hopefully, tomorrow would be a better day; it wasn't. \n\nI left her sleeping and went to breakfast in the dining room. Only the guy with his trophy wife was there. He asked about my foot and I said it was pretty much healed. I told him that I planned on taking it easy today and maybe by tomorrow I would be back to normal. We shot the shit about Key West and how his wife melted two credit cards trying to stimulate the economy by herself. I laughed and said that she wasn't the only one. We finished and I headed back to my room but found no Catherine. \n\nI spent the next hour and a half hobbling around the decks looking for her. Going from the gym to the dining room and finally the Lido Deck, I looked everywhere. I finally found her up on the topless deck with her new best friend, Don. I was pissed and I didn't hide it this time.\n\n\"I've been looking for you for the last two hours. You could have at least left me a note where you were going.\"\n\nWell, I got up and you were already gone. You didn't leave me a note where you were going.\"\n\n\"If you remember correctly, you were passed out and asleep,\" I replied, thankful she couldn't see my eyes through my dark glasses. I looked over at Don. \n\n\"Well, I see you found your new friend on this big ship easily enough.\" I told her sarcastically.\n\n\"What the hell is that suppose to mean?\"\n\n\"Forget it.\" I said now in disgust.\n\n\"Maybe I'd better leave,\" Don said starting to get up.\n\n\"You don't have to leave, Steve is just being a jerk. You sit your ass right back down there.\"\n\n\"That's right, Don, sit your ass right back there so you can finish memorizing every pore on her breasts.\" I'd had about enough of him. \"If you want me, I'll be on the ship somewhere,\" I said sardonically and walked away. She said something to me but I was halfway down the stairs and never heard it.\n\nThere really was a lot going on aboard ship. From afternoon dance classes, art auctions, gambling lessons, not to mention pool parties and games on the Lido deck. I found myself in the gym on a stationary bike hoping it wouldn't hurt my ankle too much. It was pretty boring looking out over the bow at the water so I decided to sneak into the dry sauna and ended up in the whirlpool with four other people. The hot water made my foot feel much better but I was starting to get irritated with Catherine. I made it back to our room shortly after four o'clock. She wasn't there and it looked like she hadn't been back since she'd left earlier that morning.\n\nI changed and spent the next two hours at an art auction. You'd be surprised at the prices people pay for what I considered junk art. I guess when you're on vacation sometimes you tend to let your guard down, well not me. I got back to our cabin just before seven and walked into a hornet's nest.\n\n\"Where the hell have you been? I walked the entire ship looking for you,\" she screamed at me. Where had I heard those exact words earlier today? \"I was about to tell the captain that you probably went overboard. Where were you?\"\n\n\"Well, after I left you I went to the gym, got something to eat, and then spent the next few hours between gambling seminars and an art auction.\"\n\n\"Why didn't you come back?\"\n\n\"And spoil your good time? I wouldn't have dreamt of it.\" She heard the bitterness in my voice. \n\n\"You're starting to act like a real ass. I can't help it that you fell and hurt your damn ankle.\"\n\n\"Let's just drop it and go have a nice dinner, shall we?\" We showered separately and got dressed in silence. I don't think we said more than five words to each other on our way to dinner. \n\nEveryone was talking about our next port of call and what they planned on doing. We had signed up for an excursion to view the ruins and I was looking forward to it. When Don stopped by our table told Catherine that he'd love to show her the ruins since I was out of commission I about freaked. He was hitting on her with me right there.\n\n\"No need, Don, my foot is all healed, and I'll be showing her them myself.\" I shot him a look that basically said to back the fuck off. As usual we made our way over to one of the two clubs. There at a large table were the guys she'd been dancing with the previous nights and against my better judgment she talked me into sitting with them. We had two drinks and I was dancing more than half the songs with her.\n\nI was paying for our drinks when one of the guys asked Catherine to dance. \n\n\"Why don't you find some other lady to dance with,\" I piped in. She didn't take too kindly to that remark and told him she would love to dance, giving me the evil eye. So the night went. An hour later when another smiling guy asked her to dance, I told him to fuck off, in those exact words.\n\n\"Steve, what's wrong with you? Why are you acting like this?\" If she didn't know the obvious by now, my answering her question wouldn't have made any difference.\n\nI guess I lost my cool and flipped him my room card.\n\n\"Here's my fucking room key, you might as well take that too,\" I said in a loud voice to the surprised group at our table. Just make sure you clean her up when you're done with her, I don't need her getting cum stains all over our sheets. Have fun guys because I'm out of here.\" They were all catching flies at this point. I was halfway down the hall when an exasperated Catherine caught up to me. \n\n\"What the hell is your problem, Steve? The way you're acting you'd think you were my father.\"\n\n\"No, not your father but I'd at least hoped your lover. Go back to your boy toys and leave me the hell alone. I guess this cruise wasn't such a good idea, after all.\"\n\n\"Stay here and let me go back and get my things so we can talk.\"\n\n\"About what? Remember when you said that you had bad cruises with your ex because all he did was to hit on this woman or that one? Right now I think I know how you felt.\" I kept walking away hearing her yell for me to wait until she got back. I'd had one woman tear out my heart. I wasn't about to give another one that chance.\n\nI sat at the bar by the casino for the next two hours. After that I made my way into the casino where I dropped a couple hundred\u2014it just wasn't my night. After that I went up to the top deck and with a double in each hand I proceeded to get blitzed. \n\nIn all my years of drinking I had never passed out but I did that night. I awoke with my head throbbing. My mouth felt like shit and I fought against opening my eyes. The one thing I did notice was that someone had thrown a blanket over me. Ever so carefully I opened my eyes. What time it was I hadn't a clue, but the way I felt I knew I was alive; dead people didn't have to go through all this pain.",
        "I dragged myself up into a sitting position and rubbed my eyes finally looking at my watch, seven thirty. Then I saw her. She was still asleep in the lounge chair next to mine under a blanket. I looked at her and thought back to last night and cringed. I didn't remember much from the last couple of hours but did remember in vivid detail our last conversation and wasn't looking forward to what I figured was going to be the conversation this morning. \n\nI thought about all my options listing them in my head: getting another room, packing up and catching a flight out at today's port of call, or just toughing it out for the last four days together, that last one wasn't too appealing to me.\n\nWhen she started to stir I ran out of time to think of any others.\n\n\"Are you alive?\"\n\n\"Define alive. I'm upright, breathing, but have one hell of a hang over, besides that I'm not sure.\"\n\n\"I waited in our room and when you didn't make it back by twelve I got two stewards to help me find you. I got scared because I didn't think you were even breathing when we found you. They said you were passed out and got me a couple of blankets. Don't ever do that again, you hear me?\"\n\n\"Why?\"\n\n\"What do you mean, why?\"\n\n\"It's not a hard question or it didn't use to be anyway.\"\n\n\"I care about you, that's why,\" she replied.\n\n\"Like you care about a pet or something like that?\"\n\n\"I think you're still drunk because you are not making any sense.\"\n\n\"Catherine, what are we? We use to be lovers and I thought much more, but after three days on this cruise I'm not so sure anymore. I'm just too old to be playing cat and mouse games. I've told you more than once how I feel about you, and if you don't feel the same way oh, well. Life is too short for me to be pining over some woman who doesn't return my feelings. I think it would be wise if we just part now and this way we can still remain friends before something else happens between us and I end up angry like I was last night.\"\n\n\"Are you sure that you only hurt your ankle when you fell that first day and not your head too? I do love you, how can you doubt that? I'm not the type of girl who jumps into bed with the first guy I meet if you haven't noticed.\"\n\n\"But, for the last few nights you've ignored me over your new party group. I meant it when I said I knew how you must have felt when your husband was hitting on all those other women. There have been four or five guys hitting on you for the last three days if you haven't noticed. There's one thing I've realized about myself, I'm a very selfish and jealous lover.\"\n\n\"Steve, there are six and you don't have to worry about any of them.\"\n\n\"Please, don't talk to me like I'm some sort of na\u00efve kid. I saw you.\" She was now laughing and looking at me.\n\n\"I don't think it's very funny,\" I said getting angry all over again.\n\n\"Steve, they are all gay. They are dance instructors from Minneapolis, Denver, and Newark. And if you haven't noticed, there are ten other couples with them floating around.\"\n\n\"Gay?\"\n\n\"Yes, gay.\"\n\n\"Don put together this little group and he wasn't checking me out, he was probably looking at you.\" She started laughing all over again. \"You can imagine their surprise at your little outburst last night. When they asked if I had told you they were gay, I said it had never really come up. I like to dance, and who better than with a gay dance instructor.\" She continued laughing.\n\n\"Look, I love you and want to be with you but how we're going to figure it out I don't have a clue. So, if you're done being angry with me, I know something we haven't done much of since we got on this damn boat and I'm about to change that right now.\" We passed on the ruins and spent the rest of the day in our cabin.\n\nI can attest to the fact that two people can fit in one of those little showers but it does flood the bathroom. By the time we were dressed for dinner we'd completely run out of clean towels. \n\nThat night at dinner, she was wearing a dress that hid almost nothing and all, and I do mean all, the men in the dining room looked when she walked by. When she smiled and whispered that she wasn't wearing any underwear I did a quick feel just to check. She parted her legs slightly and I copped a feel of her warm bald mound. I got a hard-on. The food was great as usual and the conversation lively until we got to the dessert, then I took it up a notch. She turned her head to talk to the woman next to her and on her empty plate I put the ring box. To my horror when she turned around Catherine didn't even notice, but almost everyone else at our table did. I tried to hold my excitement in. \n\nWhen they started to bring out the desserts she finally looked down at her plate. I made sure I wasn't looking at her when she opened the ring box and went nuts. She grabbed me, kissed me, and jumped onto my lap. I stood her up, dropped down on one knee, and proposed\u2014she teared up.\n\n\"Yes, yes, hell yes,\" came out of her mouth. Everyone at our table, and every table around us, started to clap and congratulate us. Someone ordered a couple bottles of champagne and we closed up the dining room. \n\nShe never took her eyes off that ring. It was white gold, a little over three quarters of a karat, and had baguettes on both sides. When we passed the club she told me to wait there for one minute. Six loud and crazy guys came running out, talking all at once and shaking my hand.\n\n\"You are one lucky guy, you know that?\" one and all told me. I agreed and apologized for my outburst the night before. By the time we walked away we were all friends again.\n\nI looked at her. \"Gay?\"\n\n\"Gay!\" she replied for the second time. \n\n\"In a dark corner on an isolated deck she rode me while I did my best to get her off. With both breasts in my hands and her grinding her pussy onto my dick we both succeeded in christening that lounge chair. In the background I could hear the outdoor movie playing, but we were creating our own love scene in a movie staring us. One couple happened to walk by when we were almost there. Embarrassed his girl looked away, but he smiled and gave me a thumbs up. Afterwards we kissed on that lounge chair for the next half hour before retiring to our room.\n\nI wanted to make love out on the balcony but she said doing it in a chair didn't appeal to her much but would think about it for maybe tomorrow night. We did, however, talk until the wee hours of the morning about the who, what, where, when, and why of our relationship and life together. Since we were going to do this, we just had a lot of details to figure out. We missed breakfast again that morning.\n\nIn shorts, tee shirts, and flip-flops we hit the Lido Deck for breakfast instead. We ate inside and even though we were in a corner booth, more than one person came up and congratulated us on our engagement.\n\n\"Why don't we both quit work and live on love?\" I suggested.\n\n\"We could have done that if we were in our twenties, but now it would be a little tough.\" We did decide that we both wanted to be as close to the beach as possible, but the condo route didn't appeal to either one of us. \n\nWe may not be able to get exactly what we want, but in essence we wouldn't need much for just the two of us. Two bedrooms, one bath and a large deck sounded good to me. However, she said we had to have a pool with a screen enclosure to keep the bugs out and a hot tub would be a nice touch.\n\n\"You know my mom's not going to be too surprised, She's been throwing us together since before I even came down.\" I laughed at that. \n\n\"That's Esther. She gets what ever she wants one way or another.\"\n\n\"I guess I'm like my mother in that regard,\" she said squeezing my hand. \"I got what I wanted.\" We kissed again or should I say still.\n\nAt dinner we were still the big news in the dining room. The captain and the dining room steward came over and personally congratulated us. For dessert they came out with a cake with both of our names on it. The taste was something out of heaven as one and all marveled at what a good cake it was. We shared what was left with the table right next to ours and one couple said they were going to get re-engaged if we could get another cake that tasted that good.\n\nWe spent the last two days eating each other up. Catherine was going to have to fly home the morning after we got back, and I was due at work first thing Monday morning. We wouldn't have much more time together. \n\nI was in no hurry to get off the boat. We picked up our luggage and loaded up and were on the road within an hour. Our hands never left one another's. I pulled up at Esther's shortly after one and it seemed that they were expecting us because they were in the living room just talking.\n\n\"Well?\"\n\n\"We broke up mom. We decided that neither one of us could handle a long distance romance without going nuts. Maybe in a couple of years we'll think about it again,\" she said before she burst out laughing and ran up to her mother to show her the ring. Lucy just smiled. \n\nWe ate a light lunch because after eating everything that wasn't nailed down on the cruise, I would have to lose a couple of pounds. She relayed events of our cruise including my little outburst at her new gay friends.\n\n\"Steve, I'm surprised you didn't punch them out,\" Esther exclaimed. \"My husband would have. He would never have put up with that shit she put you through. Now the big question, when do I plan for this wedding?\" We looked at one another.\n\n\"Mom, that's the ten thousand dollar question. We still haven't even figured out how and where we are going to live much less get married.\"\n\n\"Well I'm not getting any younger, and wouldn't you feel just crunchy if I died before the two of you got hitched? I don't see the big deal. It's not like we're going to invite a million people. Steve has a couple of kids and some friends and all your family is down here. I figure fifty people tops and shit, we could do the whole thing here at the house if you wanted to.\" That wasn't a bad idea I thought to myself. A weekend wedding and we could always go on our honeymoon later, just not a cruise. There was no way anyone, gay or straight, was getting within ten feet of my bride this time. We spent the night in bed talking about just that.\n\n\"Easter weekend,\" we told them at breakfast. \"We both get Good Friday off and we can get married on Saturday,\" Catherine told her mom. \"This way everyone will be off and we'll take our honeymoon in June.\" The date was set and plans went into motion.\n\nEsther was in seventh heaven with her, Catherine, and Lucy planning the wedding. I gave them free reign and let Catherine deal with her mom about the details. I told my kids and they said that they would for sure be there. They planned to stay with their mother, and no, she wasn't invited. \n\nWithin a month all the plans were made. The food, the cake, the D.J., the Justice of the Peace, and even the bartender were all locked up. We got our marriage license and all we had left was to wait for the date.\n\nI was spoiled having her next to me every day on the cruise. Looking at one another on the computer screen was okay, but not like the real thing. I did sneak up three weekends later to surprise her when she got off work. We spent the weekend in bed and lived on love, Pizza Hut pizza, beer, and wine. I was counting down the days.\n\nEsther was like the Esther of old, full of piss and vinegar taking no prisoners. We went up to the town square and she made it a point to tell one and all that her daughter was marrying a true hunk and the best guy on, \"two fucking legs,\" as she put it. Sarah never once came over to congratulate me. I think the reason was obvious. The closer it came to the wedding the more tired Esther looked. I got concerned that she was overtaxing herself, but she said that she hadn't felt this alive in years.\n\n\"What can I do to help?\" was the only statement out of my mouth to Lucy. \"I don't want this wedding to kill her, do you understand?\"\n\n\"Steve, everything's already done. The only thing everyone has to do is show up. I've got it on auto pilot as we speak.\"\n\n\"It's just that she looks weak and tired again, and I'm concerned.\"\n\n\"You and I should look so good at eighty-eight. Listen, I told you before, the doctor is doing everything modern medicine can do and I'm not even waking her up from her afternoon naps anymore. She needs more rest but she's fighting me tooth and nail. Something about getting all the rest she needs after she's dead and gone.\" I told Lucy I'd talk to her at dinner tonight.\n\n\"Mom, you're starting to look a little peeked, you feeling all right?\"\n\n\"I can still run circles around you and don't get me started about being able to drink you under the table. Don't fret, I've got a damn wedding to attend and don't worry, I'm not going to fucking die on you just yet.\" She still had that gentle way of telling you she was doing just fine. I let it drop but kept an eye on her.\n\n\"What the fuck is this shit, near beer?\" she screamed at me Saturday night. \"This crap tastes like warm bunny piss.\"\n\n\"Esther, do you even know what bunny piss tastes like?\"\n\n\"Fucking right I do, just like this shit. Now dump this O'Doul's out and get me my Bud.\" I did as ordered but only gave her one tonight which didn't set well with her either.\n\nIt was drizzling rain the day of the wedding. I wore a suit but no tux and Catherine wore an almond colored floor length dress that fit every curve of her body to a tee. Up at the makeshift altar I quietly asked if she was wearing panties. She just smiled and said I'd have to find out for myself.\n\nWith the 'I do's' done the party began. We took enough pictures to make an album of memories that would last us a lifetime. I especially made sure we had a good one of her mom and us, and one with just the two of us we could put on the mantel. My kids were happy for us and welcomed Catherine into the family. Lucy watched Esther like a hawk and I did something of a dance with her in her wheelchair. She had tears in her eyes when she told us how happy she was for us and that she could now die a happy woman. We both told her that she'd probably out live the both of us but looking at Lucy I weren't too sure. \n\nWhen I told her that I was looking at a place I thought she'd have a coronary.\n\n\"What, you come in here, knock up my daughter and leave?\"\n\n\"Catherine's a little old for me to knock up, and I think I've sponged off you long enough.\"\n\n\"You're family, for Christ's sakes. Who in the hell am I going to party with? Lucy? Hell, she's a lightweight at best. You're staying right here and I don't want to hear another word about you leaving.\" I called Catherine.\n\n\"Steve, if she wants you to stay why don't you just stay, at least for the time being. Also, Lucy said Mom is still not looking good and I'm a little concerned. Besides, if you're there I'll sleep a lot better knowing you can take care of any emergency. How are you holding up?\"\n\n\"Besides walking around with a constant hard-on, no real problem.\"\n\n\"You got spoiled that week on the cruise.\" I couldn't argue with her about that.\n\n\"I've got a realtor keeping an eye out for a small place on or a block away from the beach. I gave her a fifty-mile range we'd be interested in so if she finds something I'll have her e-mail you a picture. I miss you,\" I told her.\n\n\"I miss you too but it won't be forever and besides, doesn't absence make the heart grow fonder?\"\n\n\"Not in my book.\" She laughed and told me to take a cold shower. \"Maybe we can do another video, if you know what I mean.\" I reminded her of that option.\n\n\"You dirty boy. I give you a little taste and now you want a regular diet of it. Maybe this weekend if you're good.\" I couldn't wait.\n\nTwo weeks later Esther, Lucy, and I were back in Orlando for a follow-up visit with her specialists.\n\n\"She needs more rest and if she doesn't get it, I'm going to have to admit her,\" the doctor told Lucy and me. \"Her sugar level is way too high and she's two pounds down from the last time I saw her. Tell her lay off the beer and get her to eat more.\" I guess the doctor didn't know Esther very well.\n\nA cup of hot green tea after dinner didn't sit well with her. She wanted her Bud.\n\n\"Look, Mom, if we don't put some weight on you and get your sugar in check the doctor is going to put you in the damn hospital. You want that?\"\n\n\"Fuck them all. I'm not going to live forever, but I'm not going out eating mush and drinking Jap juice. Now bring me a damn beer.\" I brought her half a glass of Bud light.\n\nCatherine flew down to look at two places the realtor had come up with but neither one suited us. We set up a few new parameters and told her to try again, but Catherine said she wouldn't be opposed to maybe a townhouse. We had a nice visit and tried to cram a week into two days. She left bow legged but smiling.\n\nThe heat of the summer was now gone and with it went Esther's health. I gave Catherine updates every other day and even Lucy was concerned, although she tried to never show it. After a couple of huge arguments they admitted her into the hospital for nothing more than observation. She was still losing weight because her appetite was almost totally gone. When they put in a feeding tube I thought she'd have a cow.\n\nSomewhere around nine o'clock on a Thursday night I was reading a car magazine and sitting next to her bed; I thought she was sleeping when I felt a bony hand on my arm.\n\n\"I told you I had plans for you but you never believed me, did you?\" she said in a feeble voice but with a saucy smile. \"You may not believe it, but Mother still knows best. You two make a nice couple, and for the first time since I met you, I know you're happy.\"\n\n\"And I guess I can thank you for that,\" I added. \"Now, why don't you go back to sleep before I have one of those nurses slip a sleeping pill down your feeding tube.\"\n\n\"I'd rather you poured in a Bud.\" We exchanged smiles. \n\nI bent over and kissed her forehead. I told her I wasn't going anywhere and would be there when she woke up. With a gentle squeeze of my hand and a weak smile she closed her eyes.\n\nI didn't want to make the call that morning. I still had tears in my eyes and had been up with Lucy all night in the hospital. I called a friend and had him take Lucy back to the house. She was totally drained and void of any emotions after a long night. I told Lucy I'd see her sometime later.\n\n\"Hi Babes,\" Catherine said all bubbly. \"Thinking about me? I sure as hell thought about you last night. I think I burned up two batteries last night alone.\"\n\nThere was no easy way to say it. \"Hon, your mom passed away last night.\" I heard the phone hit the floor. There were sobs then crying. Finally I heard her ask how and when. \n\n\"She died in her sleep last night. There was no pain. We were talking and when I told her to go to sleep she closed her eyes and never woke up. There is a ticket waiting for you at the Southeastern desk at the airport. The earliest flight out was two o'clock this afternoon. I'm so sorry, Hon, I just don't know what to say. Please take a cab to the airport, I don't want you driving and I'll meet you when you arrive.\" We talked for a few minutes more before she reminded me she had to go and make plans to leave. I called her every hour until she got on the plane.\n\nHer makeup was all gone when she ran into my arms. Even though we all expected it sooner or later, it didn't make it any easier. She cried on my shoulder, and I did my best to be strong for her but was dying myself inside. I handed her my handkerchief and we drove in silence to the house.\n\nEsther had all ready planned her own funeral knowing that everyone would be a wreck. The funeral home picked up the body by nine the next morning. They told us that Catherine could see her mother the following morning but to please call first. Lucy showed me the contents of a large manila envelope Esther had given her to give to me just in case. The casket, the plot, and even the newspaper release were all done. The only thing I didn't touch was a thick envelope with Catherine's name on it. On the top it said, Please Read When Alone.",
        "We ate a few of the leftovers that Lucy had in the refrigerator, but no one had much of an appetite. I had two glasses of wine while Catherine sat at my side finishing off the rest of the bottle. I told her Esther's last words a dozen times and she cried each time all the while saying how much she would miss her.\n\nI put my wife to bed and sat sipping on a glass of wine watching the fire in the fireplace. It would be hectic the next few days and then the reality of life without Esther would sink in. I missed her already. Her feisty and sharp tongue always made me laugh, or at least embarrassed me while we were out and about. My next thought was Lucy. She no longer had a job or a place to call home. I'd have to talk to Catherine about that. There was no way I wanted to put her out. She'd been with Esther for over ten years and loved her like her own mother.\n\nThe next time I blinked I saw the sun coming up and Catherine was standing in front of me.\n\n\"You sat up all night? You're going to be dead by tonight.\"\n\n\"Are you okay?\" I asked her. \"No, and probably won't be for a while, but at least Mom's at peace. I guess I never thought what it would be like without her. I figured she'd be around forever. Now I feel bad for not visiting more and being nicer to her.\" I moved her head off my shoulder and with both my hands on her face I kissed her. \"You meant the world to her. She loved you more than I think you'll ever know. Don't think about the what ifs just be thankful for all the time you had with her.\"\n\nTouching my forehead with hers she told me that she loved me and that we'd get through this together. I took her back to bed.\n\nThe viewing was much larger than anyone expected. The place was packed and they had to extend their hours just to accommodate everyone who wanted to pay their respects. They came by car, bus, and limousine. They walked in, some with walkers and others in wheelchairs. I recognized many of the people I'd met at night sitting in the plaza and everyone said that she'd be missed. A few congratulated me on my wedding and commented on what a beautiful wife and daughter Catherine had become. It seemed that even though she hadn't spent that much time with her mother in Florida, these women remembered what she'd looked like in her thirties and forties\u2014especially those close to Esther.\n\nDuring the service there wasn't a dry eye in the house. Following the formal service Catherine wanted family only for a few minutes so we could say our goodbyes in private. Standing besides Catherine and Lucy we whispered to Esther how much she would be missed. Catherine touched the side of her face, kissed her, and slipped a letter into her hands. The funeral director quietly closed the coffin lid and took it away to the waiting limo. We drove to the cemetery in silence. Although Catherine did not watch the coffin being lowered into the ground, she managed to hold on long enough to get through the rest of it. After that we took Lucy home and the two of us just drove around for a long while. Catherine said she hoped to go back to the cemetery in a few days to say her goodbyes but felt she needed more time to compose herself before that could happen. \n\nWhen we returned to Temple Gardens we attempted to have dinner at one of the plaza restaurants but after the tenth person came up and said they were sorry about our loss, we left. I took her to a small out of the way place and finally had a quiet meal. After our dinner we just drove and ended up at an isolated motel on the beach. We walked along the water and sat on the sand just listening to the waves until just before midnight. She had an emptiness in her that I was doing my best to fill, but knew only time could do that. \n\nI let her sleep in and found a small restaurant down the road and brought in breakfast. She hadn't eaten much and I hoped that this morning I could get her to eat even a little. I was kneeling on the floor, next to the side of her bed looking at her, when she woke up.\n\n\"Good morning, Mrs. Moore,\" I said giving her a peck on the nose. \"I've been cooking for hours so you have to at least try to eat something this morning.\"\n\nCoffee, some fruit, and half a bagel were all she could get down. We talked a little but neither of us pushed the issue or even tried to make small talk. We checked out and headed for home holding hands the entire time.\n\n\"Thank you,\" she said looking at me.\n\n\"For what?\" I said looking a bit confused.\n\n\"For everything. I know you loved Mom too and although you're probably hurting you made sure I was okay.\"\n\n\"That's what husbands do.\"\n\n\"Not all husbands,\" was her reply. We didn't say much the rest of the way home.\n\nLucy was bouncing around the house not really knowing what to do without Esther being there. We had dinner, just the three of us, and although Lucy never said a word, there was this huge elephant in the room. I told the two of them to leave the dishes and clean up to me and that's when Catherine and Lucy walked out onto the patio. I could see them talking and then watched as they both started crying, consoling, and hugging one another with their heads on each other's shoulder. They finished, and now smiling, they wiped the tears away from their faces. It was as if they had helped one another come to grips with the loss they were both feeling.\n\nI was already in bed by the time Catherine came out of the bathroom. I flipped back the sheet and covers inviting her into the bed. I let her make any and all advances because I still wasn't sure exactly how she was feeling. We kissed and cuddled until falling asleep or should I say I did. Sometime between twelve thirty and seven o'clock in the morning she got up. When I woke up I felt for her but she was gone. After calling out her name twice and hearing no reply I went looking for her. She was in the living room sitting on the floor in front of the fireplace; she'd been reading.\n\nThe envelope was opened and the papers were lying face down on the marble floor in front of the fireplace. \n\n\"Hon, you all right?\" I softly called out to her.\n\nShe didn't say a word only reached out a hand to me. I grasped for it and sat down on the cold marble with her.\n\n\"You want me to get you your robe?\"\n\n\"She never took her eyes off mine as she kissed me lightly and then mashing her lips against mine driving her tongue into my mouth. We switched from side to side as the heat from the fire only intensified her passion. How long had it been since we'd made love? I wasn't sure but I grabbed her and took her back to the bedroom and made love to her body and soul. Breasts were caressed, nipples played with, as I finally removed what little clothing remained. I was going to eat her pussy but she stopped me.\n\nShe pulled me between her legs, reached down and inserted me into her already wet pussy. In three strokes I was deep inside of her and moving effortlessly. She wrapped her legs around my waist and met my every thrust with one of her own. I didn't last long but never stopped even after I'd given her everything I had in me.\n\nIt wasn't a bone-crushing climax, and if I hadn't felt her muscles contractions gripping me I never would have known she'd gotten off. Now with her arms around my neck we came down together exchanging morning breath and sleep coated tongues.\n\n\"You know I love you, don't you?\" she whispered in my ear.\n\n\"Never doubted it for a minute,\" I said kissing her ear.\n\n\"Liar,\" she said biting my ear lobe. \"If I remember right someone got a little jealous over a couple of gay guys.\"\n\n\"All right, so I'm a little possessive of what is mine.\"\n\nLooking into my eyes she told me I had nothing to worry about; she'd always be faithful.\n\n\"Come on, let's take a shower,\" she said with that old wicked look in her eyes again but stopped dead in her tracks. \"Get the water ready, I'll be right back,\" she said running back into the living room, grabbing the papers off the floor and stuffing them back in the envelope. Throwing the envelope on the desk she dragged me into the shower. After our shower I wanted to fool around again but was told to behave because we'd have plenty of time for that later. \n\nI made coffee and bagels while she cooked some bacon. I was a little hungry that morning and it looked like she was also, that was a good sign. \n\n\"Steve, I want to go see Mom's grave after breakfast, if you don't mind.\"\n\n\"No problem, and I think it might be fun if we swing by the storage unit and pick up my mustang again and take it out for a spin after that. Maybe I'll even let you drive it.\"\n\n\"Steve, why don't you just get it out of that damn storage unit and leave it at the house once in for all. This taking it out every other month for a spin is stupid. A car like this is meant to be driven. If it was mine, I'd be driving it to and from work every day.\"\n\n\"Babes, it's a classic and I don't want to put the miles on it. Some day it's going to be worth a pretty penny; that is if it doesn't have a ton of miles on it.\" I guess what I'd said went in one ear and out the other as she told me 'whatever.'\n\nAt the cemetery we cried. It was still too raw and would take a lot more time for the hurt to heal. I held her, told her how much I loved her and that I'd do everything in my power to make her feel whole again.\n\n\"You really do love me, don't you?\" she asked. \"It's just not lust or me filling a gap left by your ex-wife. You love me for who I am.\"\n\n\"Remember those words. Sickness and in health, till death us do part? I meant every word of it.\" I kissed her wet salty lips. She hugged me, smiled, and I finally got rid of any doubts, if she'd had any.\n\n\"You know my mother really liked you?\" she said driving my mustang back from the cemetery as I watch the road on pins and needles until we pulled into the driveway ten minutes later and continued our discussion in our bedroom.\n\n\"Like I said, Mom really liked you,\" she said putting on something more comfortable she could lounge around the house in.\n\n\"I know that, and I loved her too.\"\n\n\"No, I mean she really, really LIKED you. In her eyes you walked on water. You must have made one hell of a first impression on her. She said you were the most loving and loyal man she ever met outside of my father and that's saying something.\"\n\nI thought back to the first couple of times we'd met and besides me buying her a beer or shooting the shit with her there wasn't anything special about our meetings.\n\n\"She said that after you found out about your wife cheating on you she concocted this scheme to get you and me together.\"\n\n\"When was all this taking place?\"\n\n\"I guess in between you dumping your wife and her planning a trip for me to come down here.\"\n\n\"Why that little shit. She had it all planned right down to which rooms we'd be staying in.\"\n\n\"Steve, she knew I loved to go for a swim at night and that you did also. I just didn't know you did it in the buff.\"\n\n\"Disappointed?\"\n\n\"Not in the least,\" she said giving my hand a squeeze.\n\n\"You never told me that you told her that you were going to propose to me on the cruise.\"\n\n\"It was our little secret. I felt I owed her that much, after all you were her only daughter, and I respected her enough to tell her in advance.\"\n\n\"Well, that I guess, sealed it in her eyes, anyway.\"\n\n\"Did she tell you that if you had said no, she'd set me up with a hundred single widows she knew?\"\n\n\"I told her, like I'm telling you now, in your dreams. You're mine and I don't share.\"\n\n\"You can't imagine how good that makes me feel. However, on a side note, I don't know what arrangements your mom made for Lucy, but I'd like to do something for her. I've got some money stashed away and would like to set her up with something of a nest egg, so to speak. She wasn't just a nanny or caregiver to your mom; she really cared for her.\" I was hoping I wasn't stepping on anyone's toes or out of line.\n\n\"Mom was right, you really are a good man. That's what she liked about you. You truly care about others and are willing to dig into your own pocket to help out someone you'd never met up until a year and a half ago. You really are something, you know that?\"\n\n\"Well, what do you think? She won't be on easy street but she won't have to care for anyone else again if she doesn't want to.\" I waited.\n\n\"My mom has already taken care of Lucy. She won't have to worry about anything again. Mr. Moore, have I ever said how much I love you?\"\n\n\"Not often enough but I'll work on you until you get it right.\"\n\n\"Now the hard part\u2014us,\" she said in a serious tone.\n\n\"Before you say a word I've got a crazy idea I want to run by you. Getting half of the value of my home, with my pension, and what I'd get at sixty-two, I'm thinking of quitting my job at sixty-two and moving up north with you. I know it's still a little ways off, but that way we'd be with each other and not worrying when and how we'd be together. I know I can find something up north to fill my days and bring in a few bucks. And during that time we can be looking for a little retirement place back here on the beach. What do you think?\"\n\n\"You hate the cold weather.\"\n\n\"I love you more than I hate the cold and after all we'll have all those cool nights to keep each other warm. What do you say?\"\n\n\"I hate it. You'd be miserable up north and the only reason you would be doing it is for me. This way I could keep my job and you'd be giving up yours.\"\n\n\"Hon, we'd be together. I can't bear the thought of not having you with me all the time. It's a small price for our happiness.\"\n\n\"Okay, how about this? I give notice at my job and I move down here into my mom's house. This way we'll be warm all the time and most of all we'll be together.\"\n\n\"I like your idea much better and I think even if you don't work, we'll get by. I don't know how much your mom still owes on this place, but it can't be that god awful much,\" I kissed her and started getting friendly. \"Let's celebrate.\"\n\n\"Not so fast bucko, there is still one item we need to discuss and it's usually a touchy subject with most newly married couples. I say we pool our money together and I take responsibility for paying our bills and managing our money. I do it for a living and I'm probably a lot better at it then you.\"\n\n\"Okay, that was easy. Now can we fool around?\"\n\n\"Don't you have any questions? Don't you want to know how much I make a month? You don't feel, you know, you'd be less a man with me taking charge like this?\"\n\n\"I love and trust you implicitly. I know you'd never screw me over. Just don't yell at me if I overspend my budget.\" She looked at me and laughed. \n\n\"That went a lot easier than I thought it would.\"\n\nWe made love and I did make her scream this time. I counted three climaxes, which for me was a new record, or at least the best I've done in ten years. I was out of breath and Catherine was flushed and fanning herself while we both were enjoying the afterglow. \n\n\"Wow, if this is the way you get when I take charge, I'm going to have to do it more often.\"\n\n\"Take charge nothing, I'm going to have you here with me and that, my wife, is worth everything I own.\"\n\n\"You sure about that?\"\n\n\"Yes, no question in my mind.\"\n\n\"All right, but getting rid of twenty-two million dollars is going to take me more than a few days.\" She gave me a big shit-eating grin.\n\n\"What did you say? Twenty-two what?\"\n\n\"Million. Mom left me a trust fund and it is a shade over twenty-two.\"\n\n\"Well, then we can give Lucy more than I thought.\"\n\n\"Steve, she doesn't need our money. Mom left her two million and a new condo.\"\n\n\"Steve, I knew the type of man you were a long time ago. I just didn't want to step on your masculinity without first asking you. So, you give your notice, I'll give mine and we'll find a little shack on the beach with a pool where we can swim naked and have sex whenever we want.\"\n\nLife got a lot easier after that day. Now every night, after making love with my wife, in my mind I quietly thanked Esther and remembered the words she'd always say to me. 'Steve, I've got plans for you.' I guess she did."
    ],
    "authorname": "Slirpuff",
    "tags": [
        "oral",
        "marriage",
        "love"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/esther-and-me-ch-04"
}