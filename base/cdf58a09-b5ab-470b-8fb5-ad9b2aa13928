{
    "title": "Amber Ch. 03",
    "pages": [
        "I hope you all enjoy this final chapter!\n\nPlease leave a comment! I love getting to read ALL of your feedback!\n\nXOXO-SkylerLuv\n\n******\n\nMy heart is beating a million miles per hour. My breath is coming out in short gasps and I have to wrap my hands around myself to keep them from shaking. I feel a slight headache forming and my stomach growls.\n\nI'm looking out the window but I'm not seeing anything. It is midnight black out side and there are no streetlights on this lonely back road. The guy next to me tries not to notice my fidgeting but hasn't turned the pages on his book in the last half hour. If he tries talking to me I know I will break down and I can't call that much attention to myself on the bus. I pretend not to hear him when he asks me if I'm okay. I continue to stare out into the night with a blank stare for the next fifteen minutes.\n\nI look down at my watch and hug myself tighter. I'm too late.\n\nIf I lose her I don't know what I will do. My heart contracts again and I suck in a breath. Get a grip, I silently tell myself. I'm so close already to being there already. I can't lose my composure now.\n\nOnly two more stops and I'll be by her side again\n\n******\n\n\"Only two more days and I'll be right next you again!\" Stacy says on the other line. I can tell she's distracted but she does sound excited. I smile a little remembering how nice it was to have my mom over for last week and now Stacy gets to come back this week. The summer is almost over and I am so stressed about my last two exams. Scar does her best to cheer me up but she knows a visit from my mom and Stacy always does the trick. Ever since Dani left that night, Scar has been trying to make it up to me with small gestures. I assure her that I am not mad at her, but she still feels responsible. I wonder if she asked Dani to come that night? Maybe all of my tears were finally wearing her down. I shake the thoughts from my mind.\n\nStacy doesn't say anything after a while. \"Are you sure you're okay?\" I shuffle through my index cards and try to memorize the next one on my lap. I groan when I get it wrong.\n\n\"Have you seen Scar lately?\" I know this is why she called all along. I don't know if they are on good terms, and I can't add another thing to stress about at the moment.\n\n\"No, I told you she's on a work trip. Said she will be back next week.\" I don't mention that a very big scary guy, who calls himself Q, has taken her place while she's gone. He doesn't let me leave the house without good reason, but I honestly never want to go out unless it has do with school stuff or tutoring.\n\n\"Do you know what she does?\" This is the first time she's trying to fish for information through me. She knows I like to stay on neutral ground so if she's asking me for some dirt, it's probably not good.\n\nI am relieved that I can finally be completely honest with her. Any time she asks about Dani or Ricky or why I am here I have to tread lightly and recount the same story I told her the first time. It's all starting to become a little too much, on top of worrying about school. \"I honestly have no idea.\" I read through a couple of more index cards. I blow a curl out of my face.\n\n\"Dani doesn't know either.\"\n\nI grind my teeth at the mention of her name.\n\nStacy seems to snap out of her trance. \"Shit, sorry! I forgot.\" I push her apologies away. And try to change the subject but she interrupts me. \"She's in bad shape, Amber. What happened between you guys?\"\n\nMy heart skips a beat but I shake my head. \"I said I don't want to talk about it.\"\n\nStacy pouts. \"Is this what my relationship with Scar will end up like?\"\n\nI sigh. \"Of course not, Scar really cares about you. If she's not calling you it is probably because she is really busy working.\"\n\n\"Dani cares a lot about you too.\" She tries again.\n\n\"She left me!\" I blurt out in anger. Hot tears are on the verge of falling. It has been two months since I last saw her and I am just now remembering what it is like to have a life without her.\n\n\"Oh, sweetie I'm so sorry.\" I shrug away her pity.\n\n\"I gotta go. I have a big exam tomorrow. Good night.\"\n\n******\n\nI rush to the bathroom to throw up.\n\nThis is the last stop before I get to my destination. My stomach is in knots and I'm mostly just dry heaving but I feel sick. I try not to replay the conversation I overheard with Scar last night, but it's hard.\n\n'It's too dangerous.' Her tone is worried. She's on the phone, standing near the window looking out into the night. There is a long pause. 'Vegas? Why Vegas? Do you think he knows she's is here?' More silence. 'Yeah I have the address here in front of me. Tomorrow at 9pm, I know. You know I will take care of her if anything happens to you'.\n\nI knew deep in my gut she was talking to Dani. She left the piece of paper on the table and stepped out to the backyard to make a couple of more calls. I burned the address to memory and hurried upstairs to pack a bag.\n\nNow here I am, worried sick, trying to get to Dani before 9. Whatever she has planned sounds dangerous. I don't care if she wants me to stay away and stay safe; I have to make sure she is safe. I hear the bus give a warning of its departure and run out of the bathroom after washing my mouth. The guy who sits next to me looks relieved when he sees me.\n\n******\n\nThe next year goes by in a blur. Stacy and Scar have their ups and downs and I try to stay out of it. Stacy's stubborn will and Scar's deep feelings for her make them seem invincible, but all of the lies and secrecy on Scar's behalf always get in the way. I've tried straying on neutral ground but hate to see Stacy so upset. I urge Scar to be as honest as she can without putting Stacy's life in danger, and she tries but I know it is like pulling teeth with her. Scar can go hours without talking and Stacy doesn't stop talking until someone tells her to. I'm just happy Stacy visits every other month and I finally feel like my life is starting to feel normal again.\n\nI don't think about Pete that much. If I ever do it is because I am scared for Dani. I know I am safe here under Scar's care. She has this overprotective shield that follows me even when she is not around. I no longer look behind me when I'm out alone, which is not often. I have made some friends who like to grab drinks sometimes but I usually never talk to them after the semester is over. And while I have had people show interest in me, I can't stomach the thought of being with anyone, not now at least. I wonder is Dani is back to screwing Kara in her living room.\n\nRoger is my mom's new best friend and she relies on him for everything, which makes me content. I trust Roger and know that he will take care of my mom better than I can. She also visits me more frequently and I always feel my spirits rise when she is around. Though, any time she mentions Dani I have to force a smile on my face and play along. I want to tell her that truth; Dani wants nothing to do with me just so she could at least stop talking about her. I know as soon as I say anything, she will stop letting Dani come over and push Roger away. I need her to be safe now more than ever. I can't have her putting herself in danger because of my unfortunate relationship with Dani.\n\nI've made a few friends but the most consistent one has been Kevin. When I first met Kevin I was weary of his upfront demeanor. It took him many many small talks before and after each lecture for me to warm up to him. He is on top of everything and organized. I need to be like that. I have to admit he is not bad looking, I'm just not interested and I let him know upfront. He seems to understand that sometimes, other times he just compliments me until I'm three different shades of pink. I mostly keep him around because he's the most knowledgeable guy I have met here. He basically got me through the last year. Scar is not a big fan, but I never ask for her opinion.\n\nI am passing all of my classes with flying colors even with my lack of sleep. Nights are the worst for me. The night Dani left my room, encouraging me to forget her, was the last night I woke up yelling her name. There is still nights that I wake up crying but I no longer call for her. On nights where my body yearns for her, I lie awake for hours trying to get any images of us out of my head and my heart. Slowly but surely I feel the wound begin to heal. Time and distance working it's magic.\n\nScar tries to help me as much as she can and I appreciate her support. Stacy still talks to Dani but she promises me she will never tell Dani anything about my current life. I try to get the same promise out of Scar but she will not promise anything. Scar is getting paid to take care of me and keeping Dani up to date on my life is part of her job. I find it harder to confide in her knowing anything I say will reach Dani's ears. She notices the change in our relationship but doesn't push.\n\n***\n\nScar decides to take me out to eat for my one-year anniversary here. I decline, wanting to stay in and relax. Classes will start again soon and this past semester was the toughest one yet. She doesn't really give me a choice and before I know it I am walking into one of the nicer restaurants in town. I order a fancy version of chicken and waffles and Scar decides on a nice piece of steak. Ever since Pete ate that across from me a year ago, I stayed away from it. I try not to think about that while we eat.\n\nShe orders us a round of long islands.\n\n\"Are you trying to get me drunk?\" We only get these when we want to get super drunk super quick.\n\n\"Maybe,\" Her gray eyes are smiling and I turn my head to the side. \"You need to have a little fun.\"\n\n\"Well two more of those and I'll be on my ass.\" I giggle. \"My tolerance level is almost non existent now.\" I have to stay away from drinks to keep my thoughts away from Dani.\n\nShe doesn't heed my warning and I'm on my fourth one by the time I can't feel my face. I lightly touch my cheek and run a hand through my long strawberry blonde curls. \"I think I should dye my hair.\" I'm smiling like an idiot trying to imagine what color would look best on me.\n\nScar almost spits out her drink. \"Dani would-\" She stops herself and takes another sip.\n\nMy smile disappears and I sit up straighter. I rub my lips together, but don't feel anything. \"I'm thinking a nice burgundy color would suit me.\" I try to be playful again but my heart is beating erratically at the thought of Dani. Being drunk makes it harder for me to keep her out of my head. A warm feeling spreads through my lower belly as I remember her firm grip on my fiery locks as she kisses my neck. My cheeks turn a darker shade.\n\n\"I don't think that is a good idea.\" Scar takes the rest of my drink away.\n\n\"You wanted to get me drunk, now I'm drunk. Now I want to dye my hair.\" I ask for the check and chug the rest of my drink as Scar looks down at her phone. She seems to be texting something urgent. I guess I am going to be a stubborn drunk tonight.\n\nScar turns left as we leave the restaurant. I turn right. My goal is to make it to the nearby convenience store and buy at least two boxes of the nicest burgundy hair dye they have. I feel something tug on my white blouse, which stops me from moving.\n\n\"What are you doing?\" The house is this way.\"\n\nI turn to look at her. I have to look up. \"I am going to dye my hair. Weren't you there for that conversation?\" It's hard to focus on her concerned gray eyes.\n\n\"Okay, we can do it tomorrow if you're still up for it.\" She's talking to me like I have hearing problems.\n\n\"I think I am capable of doing it tonight, thank you.\" I giggle at the sound of my voice. I turn again but Scar yanks me back, making my stumble.\n\nHer phone rings. \"Shit.\" She curses as she looks down at it.\n\n\"What?\" I look down at her phone and see Dani's name. My heart drops, so does my jaw.\n\nShe motions for me to be quiet and answers the line. I want to lean in and see if I can hear her voice but she moves away. She puts her hands in her pockets and does more listening than talking. When she looks away I turn and make a run for it. Unfortunately coordination is the first thing to go when I drink. I fall forward and scrape my hands against the sidewalk. I hear Scar curse behind me and try to help me up.\n\n\"Ow.\" I say and grimace at the small drops of blood on my hands.\n\n\"She's here, she's okay. She just tripped.\" Scar says through the line. She pauses and looks at me, trying to make sure I am okay. \"Are you sure?\"\n\nShe hands me the phone after a second. I look down at it confused. Through my drunken haze I feel nervous at the prospect of hearing her voice.\n\n\"Sunshine?\" I jump at the sound. Her tone is deep and comforting just like I remembered. \"Are you okay?\"\n\n\"Dani?\" I gasp.\n\n\"I hope you're not giving Scar a hard time, you've been doing so well.\"\n\nI shake my head to try and clear it. The drinks are hitting me though and I can't sober up quick enough. I don't have anything quick or clever to say so I stay quiet, trying to make sure that I remember this conversation tomorrow.\n\n\"Now what is this I'm hearing that you want to dye your beautiful hair?\" Her tone if playful but strained as well. Dani hasn't contacted me in months. Ever since she left my room she has been even harder to reach than before. Scar has stopped talking about her all together.\n\n\"I thought burgundy would suit me.\" I don't sound so sure now.\n\n\"I love your strawberry blonde hair though.\"\n\n\"You do?\" I sound like a child, insecure and ready to please.\n\n\"I do, so please don't do that.\"\n\nI nod slowly then remember she can't hear me. \"Okay.\"\n\n\"Now, stay safe and listen to Scar.\" She says. I don't know why but that makes me incredibly sad and I start to cry.\n\nI hand Scar back her phone and walk away from the restaurant. I brush the dirt and blood from my hands against my jeans. My heart is filled with joy and hurt and I feel the tears rolling down my face. It has been so long since I heard her voice. And as if no time passed at all I am bending over backwards for her. I can't help but feel like it is worth it though. I got to hear her chuckle and husky voice if even for a couple of seconds. It is the most alive I have felt in a while. Just like when she first stepped into my life.\n\n\"I'm sorry, I didn't know she was going to do that.\" Scar is walking next to me.\n\n\"It's okay.\" I brush the last tear away.\n\n******\n\nI take a deep breath and force my tears to stay at bay.\n\nIt is a quarter past nine when the bus pulls into Vegas.\n\nThere are so many bright lights and a ridiculous amount of tourist and locals walking around. I'm pushed a couple of times and decide to step away from the sidewalk. I look around trying to gather my surroundings but the noises, lights, and smells become sensory overload. The last time I was here there wasn't a race against time and I was nervous for completely a different reason. The stranger that sat next to me on the bus is frowning as he walks towards me.\n\n\"Are you okay? Do you know where you're going?\"\n\nI step back and feel my eyes widen. \"Um\" I lick my lips and look around again. I blurt out the address Scar wrote down on the yellow piece of paper, hoping he can give me some direction.\n\nHe nods and points to a general area, it seems to be away from all the lights and glamor.\n\n\"I can take you there if you'd like?\"\n\n\"No!\" I lower my voices \"No, thank you.\" The thought of dragging a stranger into this makes me want to throw up again. I begin to walk away but he follows.\n\n\"You're not from around here and the area that you're going to is really dangerous. Please, let me at least drop you off. I have a cab waiting for me.\"\n\nI wring my hands together and see the time in one of the flashing billboards. I am so late. I nod hurriedly and follow him to the cab. \"I have to get to her soon\" I say to myself.\n\n\"Who?\" He asks once we're inside the cab.\n\n******\n\n\"Danielle Rose,\" My professor looks up the picture being projected onto the whiteboard. \"One of the youngest self made millionaire, even though I think she is close to a billion now.\"\n\nMy heart stops for second, and then it starts to beat erratically against my rib cage. At first I become paranoid and look around to see if someone knows about my connection to Dani. Half the class is writing down every word Mrs. Holmes is saying and the other half is ready to leave. There are only five minutes left before we're dismissed.\n\nI look back at the board and see Dani looking back at me with a slight smile on her face. Her light freckles are barely noticeable and her blue eyes, which I know have yellow specs, are holding me in place. Her short black hair is swept to one side; she obviously had no reason to run her hands through it then. She's wearing one of her navy blue suits and looks beautiful. The photographer did a great job capturing her self-confidence through the lens. I feel my palms get sweaty. The girl next to me, Lisa, leans in.\n\n\"She's hot.\" She gushes.\n\nI cough a little and will away the blush creeping into my cheeks.\n\n\"She is opening up a restaurant in Vegas tomorrow night. Since it is only an hour away I highly encourage you all to drop by before our next lecture. Anyone who writes a five hundred word essay, on how she has become so successful at her age and how her new restaurant is fairing, will get five extra points added to their final paper.\" When she finishes she turns off the projector and dismisses us.\n\nThe image of Dani smirking at me is burned on the back of my eyelids.\n\n\"Hey, do you want to go tomorrow?\" Lisa is packing her bag next to me. She doesn't notice my internal dilemma.\n\nAnd risk running into the one person in this whole universe that has avoided having any type of connection to me? I disregard the fact that she talked to me when I wanted to dye my hair in a drunken haze. \"I don't know if I can make it tomorrow, but I definitely need those five points so maybe next Tuesday?\" Hopefully Dani will be gone by then. My heart jumps at the thought of seeing her again.\n\nLisa nods and heads to her next class.\n\nI sit there staring at the blank whiteboard.\n\n******\n\nI'm staring blankly ahead, barely breathing.\n\n\"Are you sure you gave me the right address?\" The guy next to me asks for the second time. I didn't even catch his name.\n\n\"Yes\"\n\nThe taxi keeps driving past the safe looking areas towards some darker questionable places. Hookers are hanging around drug dealers. Street lamps are almost non-existent. Anyone walking around right now is fully aware of the danger they are putting themselves in. My heart has not stopped beating like I am running, and the fear creeping into my stomach is not helping. Unlike the guy next to me, I don't care about my safety. I just want to get there in time and the clock says we're thirty minutes too late.\n\n\"Can you please go any faster?\" I ask the cab driver.\n\nHe seems annoyed and doesn't speed up.\n\n\"I hope they're worth it.\" The guy next to me says.\n\nI look at him across the back seat and give me a small, hesitant smile. \"She is to me.\"\n\n******\n\n\"Hello beautiful,\" Kevin gives me a kiss on the cheek and sits across from me.\n\nI brush away his compliment and take out my laptop.\n\n\"Thank you so much for meeting me!\" I look through a couple of files and finally find the one I'm looking for. \"I have just been out of touch with research papers since I graduated a couple of years ago. And the last papers I've had to write have not been this extensive.\"\n\nHe runs a hand through his shoulder length brown hair and decides to put in up in a bun. He's wearing his work attire; a gray suit with a white button up. He looks very attractive. He rolls up his sleeves, showing off his strong forearms. His light brown eyes read my screen and he rubs his lips as he focuses.\n\nI catch myself ogling him and turn my gaze away. It has been over a year and a half since I have been intimate with anyone. My fingers, and even the small bullet vibrator in my drawer, are not enough anymore.",
        "\"Oh yeah, this article is great!\" He scrolls down and keeps reading some more. \"There are really good statistics you can pull from here. I can help you cite them if you want.\" His smile is catching.\n\n\"No thanks, you're already helping me so much. This is the only paper I'm worried about. Once I get my sources together, I will feel a lot better.\" I pull up two more articles and he reads through them making some suggestions.\n\n\"This is your last semester right?\" We have only taken two classes together since I started here but he pretty much knows my schedule.\n\n\"I can't wait!\" It is hard to hide the excitement in my voice. I have just a couple of weeks left and I am free!\n\nHe leans back against his chair and crosses his arms. His muscles are very apparent under his suit. \"I think that calls for a celebration.\"\n\nMy smile falters. \"I don't think-\"\n\n\"Amber, please. It's almost the end of the semester. You'll be gone in the next couple of months and we will most likely never see each other again. Let me buy you a drink.\" His brown eyes watch me as I contemplate.\n\nHe seems to be okay with the idea of me leaving. Kevin is smart and funny and attractive. He's the only person who doesn't get fazed when I try and push him away and he's fun to be around.\n\nI am nodding before I psych myself out. \"I have to visit a new restaurant that opened up in Vegas, for a short essay. We can grab a drink there.\" I worry that the food will be too expensive, which is an irrational fear considering I will probably have a heart attack if I ran into Dani and won't make it past the first course.\n\n\"It's a date.\"\n\n******\n\n\"Stop here!\" I yell when I see Dave, one of Dani's other drivers, about half a block away. He's standing outside a black SUV, which is parked in front of an abandoned building. I turn to the guy next to me and hug him quickly. \"This is where I get off.\"\n\nHe grabs my wrist. \"I'm not letting you stay here alone.\"\n\nI try to yank my arm away. \"It's too dangerous!\"\n\n\"Then let's go back.\"\n\n\"I can't!\" I am really starting to freak out now.\n\n\"Okay, okay. Let's be smart about this. We can get off here and watch from across the street. Look there is a bar there.\" He points to a place called Looney's. There are a lot of bikers in the front smoking. My stomach is in knots. I don't have a plan and I'm here all alone.\n\nI nod quickly and he pays the cab driver. He pulls me close and leads me to the bar.\n\nI turn my head and see Dave look at the cab drive by suspiciously. I turn away and sigh in relief when we make it to the bar.\n\n******\n\n\"You look beautiful,\" Kevin says, when he opens the door for me.\n\nI blush and step out. The silver dress I decided to wear hugs every curve of my body and has a revealing slit on the side. My gold heels are tall enough that I'm almost at eye level with him. Scar made a whistle noise when I came down the stairs. She gives Kevin an unnecessary speech about having back home before midnight. Kevin played along and did't think anything of it. I almost felt guilty about lying to her but then I remembered there would be no way in hell she would let me come to Vegas and risk running into Dani. My heart bangs against my rib cage at the thought of seeing her again. It is Saturday night and there is a long line outside her restaurant. I feel my heart warm. The restaurant looks like one of the more popular ones.\n\nThe bright lights and loud noises are all a hum surrounding me. I don't even have time to look around me before Kevin is pulling me to the front door.\n\n\"Amber Rose,\" Kevin says out loud. \"Like the stripper?\"\n\nI frown and look at him. Where the hell did he get that?\n\nHe points to the building and I see the name in bright gold lights.\n\nI suck in a breath.\n\n\"What a coincidence!\" He chuckles and folds my hand into the crook of his arm. He decided to wear a deep brown suit with a light pink under shirt. His hair is up in a bun and his beard is cut to perfection. Yet right now I can barely appreciate any of it because my mind is putting images of Dani and me getting married and me taking on her last name.\n\nMy mind is still reeling at the name that Kevin has to wave a hand in front of me before I notice he's talking to me.\n\n\"Do you mind grabbing us a table? I really need to use the bathroom.\"\n\nI feel winded so I just nod and wave him away.\n\nPeople around me stare as I walk to the hostess' stand. The tips of my ears are burning. Maybe this silver dress is a bit too much.\n\n\"Table for two please,\" I look around nervously and lick my lips.\n\n\"Name?\" She seems to be in hyper work mode. With such a long line outside I can see why.\n\n\"Amber,\" My hand pushes a stray curl away from my face. I decided to put my hair up in a nice bun for tonight. I am glad I did because the amount of sweat I am gathering up is just absurd.\n\nHer fingers falter and she looks up. \"Like the restaurant's name?\"\n\nI blush and nod. Now would be a good time to come up with a different last name.\n\n\"Last name?\" She asks suspiciously.\n\n\"Michaels?\" I croak, uncertain. Why can't I just say a little white lie? I try to reassure myself that there is no way in hell Dani could know I would come here someday.\n\nHer eyes widen she squints at my hair and then a bright smile takes over half of her face. \"Wait here!\"\n\n\"No, please-\" I groan when she grabs the nearest worker to her and points in my direction. The guy looks at me with wide eyes and nods. He then runs to tell the next person. The news spreads like wildfire, I see the ripple effect and I am mortified. Even those around me notice a change.\n\n\"I just need to see your ID to verify.\" She's basically gushing.\n\nReluctantly I take it out and show it to her. Her smile keeps getting bigger, if that's even possible. She types something on her screen and it back to me. Kevin comes to my side and smiles at our hostess. She looks confused to see him there but smiles professionally.\n\n\"We have a table ready for you.\" She addresses me.\n\nA few people behind me groan and become upset. Apparently a couple of them have been waiting for over thirty minutes.\n\n\"The bar area is fine.\" I assure her, my cheeks have to be at least close to the color of my hair by now.\n\n\"Oh, we insist.\" She takes two menus and urges me to follow her.\n\nKevin seems surprised but shrugs it off. Maybe he's used to these types of things happening all the time. Maybe it is just carefree character. She walks by the main dining area where the tables are all filled and the atmosphere is lively. The aromas assault my nostrils and my stomach growls. There are different shades of gold, red, and amber hues around the restaurant. I try not to get my hopes up. Maybe every restaurant she has is named after one of her dumb bimbos. We come to a secluded area in the back of the restaurant, the lights are dimmed and the seating is further apart. The tables are half circles and very intimate.\n\nOnce we are seated our waiter comes. He can't take his eyes off me. I know it has nothing to do with me being attractive and everything to do with the fact that Dani has put my name on her VIP list. Kevin notices and clears his throat. The waiter seems to notice he's there and stops staring as much. The curious look never leaves his eyes though.\n\n\"We're just getting a drink remember?\" I tell Kevin.\n\nKevin puts both of his hands up and nods. \"Whatever you say. I am just glad you agreed to come out tonight.\"\n\nThe tension on my shoulders becomes unbearable. I keep telling myself she is not here. If she were, she would have made her appearance known before we even sat. \"I'll have an apple martini and a shot of vodka please.\"\n\nBoth the waiter and Kevin look at me for a second.\n\n\"As soon as possible, please.\" I need to relax as fast as I can.\n\nKevin orders some dark liquor and the waiter rushes out of sight. I have a feeling we are about to receive the best customer service experience ever.\n\n\"So, how is your paper coming along?\"\n\nI sigh at the mention of something so normal. \"It's good! I think I have all of my sources picked out. Now I just have to make an outline. Would you mind taking a look at it before I start writing.\"\n\nHe smiles. \"Of course.\"\n\nOur drinks come out in no time and I quickly take the shot and chase it down with the martini.\n\nThe waiter looks between us. Kevin takes a sip of his drink and shrugs.\n\n******\n\nI gulp down a cup of water and the guy next to me orders a beer.\n\n\"Do you really think drinking is a good idea?\" I'm staring out the window in front of us. Dave hasn't moved. No other cars have come or went. Is Pete already there?\n\n\"They won't let us sit at the bar if we don't order anything and I doubt you're in the mood for wings.\" He gestures to my water.\n\nI nod. \"What is your name?'\n\n\"Sam.\"\n\n\"Thank you for doing this, Sam.\"\n\nA guy sits next to me and tries making small talk. I glare at him for taking away my attention from what is going on across the street.\n\n\"Keep walking, buddy.\" Sam leans around to talk to him.\n\nThe guy puts his hands up and turns away.\n\nI take another sip of my water and bite down on the ice.\n\n\"Look! There is someone further down the street!\" I point at a figure under a street lamp.\n\n\"So?\" Sam asks, confused.\n\n\"He wasn't there before. And over there.\" I point to the opposite side of the building. \"He is hanging around waiting for something.\"\n\nHe turns to look and I clasp my hands together to stop the shaking.\n\n\"So what is the plan?\" He asks. I see he's starting to look nervous. If he's nervous, I'm damn near panicking.\n\nI turn wide eyes to look at him. \"I don't know.\"\n\n******\n\n\"Did you guys decide on what you wanted to eat?\" The waiter takes out his notepad.\n\nKevin gestures to me.\n\nI shake my head. \"Another shot please.\"\n\nThe waiter looks unsure but nods and walks away.\n\n\"Are you okay?\" Kevin finally notices something is off. \"I think we should order some bread at least. You're drowning those drinks pretty quickly.\"\n\nMy smile is a bit forced. \"Yes, just a little nervous.\"\n\nHe smiles again and leans in close. He shuffles to sit closer to me and I have to force myself not to cringe away. His lips are near my cheek. \"There's no need to be nervous. The night is just beginning.\"\n\nSomeone in front of us clears their throat and I jump back. Kevin is still leaning close and looks annoyed at whoever interrupted him. Stormy blue eyes pierce my shocked green ones.\n\n\"Good afternoon,\" Dani's husky voice greets us. \"I hope you guys are enjoying your evening.\" She turns to look at Kevin and her jaw clenches. There is a hard smile on her lips that doesn't quite reach her eyes.\n\nKevin has an easy smile. \"Everything is great.\" He wraps an arm around my shoulders and I want to shake him off. \"We already have a waiter, thank you though.\" He sounds arrogant.\n\nDani smiles. \"Good, because I am the owner.\" She looks to me again.\n\nI can't move. Dani is here, looking at me. Seething at Kevin, but here nonetheless. My heart yearns for her and I bite my lip. It's as if no time has passed at all. Her soft pink lips are screaming at me to kiss them. A whole year and a half since I have felt her touch against my craving body.\n\n\"Amber,\" She greets me \"I wish I knew you were coming.\" There is a ghost smile on her lips.\n\nKevin turns to look at me surprised. \"You know the owner?\"\n\n\"I need to go to the ladies room.\" I unwrap Kevin's hand from me and give him a small smile. I drown the rest of my drink and ask him to order me another one.\n\n\"I can show you where it is.\" Dani holds out her arm as I try to walk past her. I bite the inside of my cheek and wrap my arm around hers. I walk away not looking back at Kevin, who is probably wondering what the hell is going on.\n\nDani waves and nods to people as we walk to the restroom. I try to pull away but she holds me in place. We pass the sign indicating where the women's restroom is located. She quickens her steps and I have trouble keeping up. She pushes through some double doors straight into the kitchen and everyone stops in their tracks to look at us. I can't help but look powerless. Once they see Dani though they all jump to continue working as they were. We make it to the back and she opens an office door, shoving me in.\n\n\"What the hell-\"\n\nShe cuts me off with a deep, knee-buckling kiss. My eyes are wide open in surprise hers are determined. Her hands are on each side of my face. She pushes me against the door. It takes me a beat to realize what is happening and I begin to push against her. Her arms come up and she grabs my wrist holding them over my head. Her tongue licks my lips and I feel my willpower wavering.\n\n\"Open up to me, Sunshine.\" She demands.\n\nI turn my face away \"No.\" There is no conviction behind refusal but I can't have her kissing me anymore. Not when she is just going to run away and leave me stranded again. \"I hate you.\"\n\n\"I know,\" She says against my lips and begins to nibble on my lower lip. \"I know. I'm sorry. But I've missed you. And you look...\" She groans.\n\nShe pushes her body against mine and places her knee between my legs. One of her hands comes up to pull the top of my dress down. One of my breast come to view. I moan when I feel the urgency of her lips against my nipple.\n\n\"I hate you,\" I gasp and my body leans into her touch. My breath comes out in shallow puffs. My pussy is dripping wet.\n\nShe groans against my breast and bites down.\n\nI grind my pussy against her leg and feel a familiar tingle. A tightening in my lower body causes me to moan from the back of my throat. Her hand reaches down and pushes my black silky underwear to the side. My juices coat her fingers and she inserts them with no resistance.\n\nI moan louder and she kisses me hard. She drowns out my moans with her burning lips. My breathing is still coming out fast and I feel my clit getting assaulted by her palm. I'm feeling light headed and my body is yielding like it always does for her. I start to whimper.\n\n\"Come for me.\" She groans against my neck and I do. I come hard and for a long time. It is such a delicious and forgotten feeling that I'm almost delirious. All the lonely nights and helpless attempts at recreating this exact sensation come crashing down and I moan her name.\n\n******\n\n\"Dani.\" I suck in a breath.\n\nWe have been sitting here for at least twenty minutes and have yet to come up with a plan. There are more people appearing out of nowhere around the building but all out of eyesight from Dave. I want to warn him but I don't want to call attention to myself. Then just as I am about to blow our cover Dani walks out of the abandoned building. Kara is next to her holding her hand.\n\nFor once, I am scared for Kara. Why is she putting herself in danger? She clearly has to know what Dani is involved in.\n\nI point to Dani and tell Sam she is the reason I'm here.\n\nHe looks surprised and then takes a good look at me. Recognition takes over his face and I feel my eyes widen in terror. What does he know?\n\n\"Wait.\" He grabs my arm. \"Amber?\" How does he know who I am?\n\nI open my mouth and shake my head trying to pull my arm away. I can't believe I have just given myself over to the wolf.\n\n******\n\nI can't give myself away like that again, I grumble internally.\n\n\"Where is Scar?\" Dani is helping me pull the hem of my dress down. I push her hands away and step away from the door.\n\n\"She doesn't know I'm here.\" I stand on the other side of the room, putting a table between us. My thighs are still shaking from the earth shattering orgasm. I bite my lips at the sight of her. Her cheeks are flushed and she's rubbing her palms against her thighs. She wants me again. My treacherous body is ready for her again.\n\n\"Why are you lying to Scar?\" She's asks, distressed. \"How can she keep you safe if she doesn't know where you are, Amber?\"\n\n\"She would have never let me come. I'm here for a school project anyways.\" I look away.\n\n\"Who is that idiot you brought?\" She crosses her arms.\n\nI think back to Stacy and her fight with Scar the night at the bar. I want to tell Dani that Kevin is nobody, that she is my everything, but I can't swallow my pride this time. She already told me she is the jealous type. I wonder if she is as jealous as Scar. Could she be jealous enough to want me more than to push into someone else's arms to keep me safe?\n\n\"He's my date.\" I blurt out before I back out. The drinks in my system are making me feel brave.\n\nShe sets her jaw.\n\n\"I should get back to him.\" I make a move for the door but she stands in front of me.\n\n\"I have your cum all over my fingers and you're just going to go back to him like nothing happened?\" She sounds amused.\n\nI slap her. Immediately my hand comes up to cover my mouth. I apologize three times.\n\nDani rubs her cheek but smiles. \"You will end things with him right now.\"\n\nI scoff and want to slap her again. \"You don't get to tell me who I am going to fuck or not.\" I don't know where all of this is coming from but seeing Dani's shocked reaction encourages me. I have not thought about sleeping with Kevin, but she doesn't need to know that. I think Stacy would be proud of me. \"Now move.\"\n\nDani gets furious and grabs both of my shoulders. \"You're fucking him?\" She shakes me when I don't respond.\n\nMy breasts are tightening up and my breaths hitches. I want her. God I want her lips on mine. Instead of feeling like I am in danger, my body is close to submitting. I want to give in and have her take me any way she wants.\n\n\"So what if I am? I'm supposed to be getting over you remember?\" Her stormy blue eyes make me shrink back.\n\n\"I'm not going to tell you again, end things with him or-\" She kisses me hard and I'm tugging on her hair bringing her closer to me and pulling her away. My thoughts conflicted. I moan when our tongues touch and I feel her teeth on my bottom lip.\n\nA knock on the door makes me jump. I want to pull away but Dani holds me in place. \"Come in.\"\n\nI bury my head into her neck to hide from whoever is at the door.\n\n\"Chef wants a word with you, Boss.\"\n\nDani nods. \"I'll be there in a minute.\"\n\nThe door closes and I look up at her.\n\nShe looks down at me and gives me the purest look I have ever seen. \"Amber, this is almost over. Wait for me and we can be together again.\"\n\nHer words shake me to the core.\n\n******\n\nI push past a couple of bikers who are near the bar entrance.\n\n\"Amber, wait!' Sam yells behind me.\n\nI run towards the abandoned building. Some of the bikers yell at me and then at Sam for the disruption. I don't look back though. If he knows who I am, this is not good. I am sprinting once I make it past the street and I hear his footsteps getting closer. I open my mouth up to yell but his hand comes around muffles my cries for help.\n\nDani is less than a block away from us. Kara is talking to her and then she turns to look behind her. Pete walks up with one man on each side of him.\n\nI stop struggling against Sam at the sight of Pete. Fear grips my gut and I stumble back. Sam pulls me back and turns me around. He still has a hand over my mouth. \"You need to be quiet.\" He looks serious and in charge. Whereas before he seemed to be going with the flow, his whole demeanor has changed. He calls over one of the guys near the side of the building and makes a hand gesture towards me. I watch him wide eyed and confused. Tears are rolling down my cheeks and onto his hands.\n\nWhen the guy hanging out around the side of the building finally stands next to us Sam leans in to whisper. The guy is wearing all black and I see he has two guns on him. My heart is beating out of my chest and I'm trying to figure out what to do. Obviously Sam is a part of this, if I yell Dani's name I will blow my cover and probably put her in greater danger with Sam.\n\n\"Take her back to the truck.\" He motions to me.\n\nI shake me head. Oh God, not again. How could I be so stupid?",
        "Just then gunshots go off.\n\n******\n\n\"You have to get out of here.\" Dani says once she gets back to the office. She had a short conversation with her Chef and her face gives nothing away, as always. \"Now, go back to Scar, please. I can't be worrying about you while I'm trying to focus on things with Pete.\"\n\nI nod. My body is humming to have her so close and yet nothing has really changed. I feel my throat tightening up. All those sleepless night I would just wish Dani could be close to me. And now that I got my wish but I want to take it back. Even if the orgasm she just gave me is the sweetest feeling I have felt in a while, I would rather forget about it then have that be the last memory of us.\n\n\"And I was serious when I said you have to end things with him.\"\n\nI put my chin up. \"I will not.\" I can't tell her this is nothing to end. I am not going to make myself look pathetic in front of her again.\n\nHer mouth is set and she puts her hands in her pockets. \"Do you think it is fair to drag him into this? You're putting his life in danger.\"\n\nI look away and shrug. I didn't think of that. \"You said it yourself, it's almost over. Then I can be with whoever I want.\"\n\nShe sighs and shakes her head. \"You don't want him.\"\n\n\"I'm going to leave now.\" My heart is beating unsteadily. Am I ever going to see her again?\n\nShe pulls me into her arms but I stand still. She kisses me temple. \"I know I have screwed up and you probably want nothing to do with me. But I will make it my goal to make you mine again.\"\n\nI push her off me.\n\nShe sighs again and takes my hand leading me out the kitchen.\n\n******\n\nI hear Kara's blood curdling scream.\n\nSam loosens his grip on me and I yank away. I run around the black SUV parked in front of the building and stop in my tracks at the sight before me. Pete has his gun out pointing it down to the floor. Dani is laying there, blood staining the right side of her chest. My heart stops and I have trouble breathing. I fall to the ground but quickly get up and try to run towards her. Suddenly there is a bright light coming up from the sky. Men from all different directions swarm the scene and they are yelling at everyone to get on the floor. I fall again and feel someone grab me from behind.\n\n\"We have to get her out of here.\" Sam yells over the loud noises around me. Police and ambulance sirens drown out Kara's cries and it's not until I'm being dragged away by one of Sam's guy that I see Scar behind Pete. She has a gun to his head and is wearing a SWAT uniform. She barely looks down at Dani as she yells for him to drop his gun.\n\n\"Scar!\" I yell at the top of my lungs. I can't let Sam take me away. I can't leave not knowing that Dani is okay. I don't care what happens to me, I just need to know she's okay.\n\nScar looks past Pete's shoulder and looks at me, furious, for a friction of a second. She continues to yell orders at Pete. He finally lowers his gun and puts his hands behind his head. He's looking down at Dani in disgust. The two men next to him follow his lead and they all kneel. Scar puts him into handcuffs while two of her men follow her lead. The guy behind me finally stops trying to yank me away and throws me over his shoulder.\n\n\"Put her down immediately!\" Scar barks behind me.\n\nThe guy stops in his tracks and puts me down. Why is he listening to Scar?\n\n\"Get Kara, take her to the police station, make sure the ambulance gets Dani out of here ASAP. Make sure those bastards are out of here immediately. Keep the bystanders back!\" Her orders have people around her scrambling.\n\nShe puts her gun away and yells at me. \"What the fuck are you doing here?\"\n\n\"Scar I need to see Dani! Is she okay?\" The tears are flowing down my face and I can't stop the shaking in my hands.\n\n\"Amber how can you be so stupid and put your life in danger?\" She pulls me into her and hugs me fiercely, \"If any happened to you...\" She pulls me tighter and I am sobbing against her. \"How did you sneak out from under Q?\" Q is the big bodyguard she left me with.\n\n\"Scar, please.\" I'm shaking against her. \"I have to see her.\"\n\nShe pulls back and turns to look behind her. \"They're taking her to the hospital right now. I'll drive you there. Just give me a couple of minutes to finish things up here.\"\n\n******\n\n\"Make sure she gets home safe.\" Dani addresses Kevin when she walks me back to the table.\n\nI know I probably look a mess. My bun was ruined when Dani pushed me against the door. My lips are probably bruised and my cheeks are still flushed from having Dani's hand in between my legs. I don't make eye contact with him.\n\nDani leans in and kisses my cheek. She pulls my chin up so I'm looking at her. \"I'll be in touch.\"\n\nMy heart flutters at her promise. When will I ever learn?\n\n******\n\nI'm listening to Dani's even heartbeat on the monitor.\n\nThere is some whispering going on behind me. My head is still resting near Dani's hand, which I haven't released since coming here. She hasn't woken up and it has been almost 24 hours. Besides closing my eyes for a couple of minutes I have not been able to rest. My heart is heavy and I cry with each passing hour. She lost a lot of blood and has a concussion. She hasn't moved once and I can't bear to look at her like this.\n\nBeing in the hospital scares me. I have avoided them since I lost my dad. They're so sad, cold and unforgiving. The beige walls and grey tile floors reflect my somber mood. I shut the windows closed, not wanting any light to come in. The smell of disinfectants burns my nose but I don't care. I want to be here when she wakes up...if she wakes up.\n\nI close my eyes and level my breathing.\n\n\"How did you know who she was?\" I hear Scar's rumbling.\n\n\"I didn't.\" Sam whispers back.\n\nThey're both near the entrance and probably think I'm asleep.\n\n\"So how...\"\n\nSam sighs. \"I was on the bus tracking one of Pete's men. He was on there and I'm pretty sure there were others.\"\n\n\"So that whole time you didn't know who she was?\" Scar sounds incredulous.\n\n\"Blind luck.\" Sam explains. \"She looked so scared, I offered help and out of nowhere she gives me the address of where Pete was going to meet Dani. I don't why it took me so long to put it all together. I thought she might be with Pete.\"\n\n\"Keep her name out of this.\" Scar says to Sam. \"Dani doesn't want any trace of her in this.\"\n\nAfter some silence, the door opens and closes.\n\n******\n\nI walk through the door and sigh when I see Scar sitting on the couch.\n\n\"What the hell is wrong with you?\" Her tone is for once, sounds full of emotion.\n\nI shake my head and try to head upstairs. I just said bye to Kevin, who is more than eager to take me out again. I don't know why, considering this was most possibly the worst date ever. He didn't ask who Dani is to me and I didn't offer any explanations. I did stay away from kissing him when he walked me to the door. I don't think my lips could take feeling his against my own when Dani already claimed them earlier today.\n\n\"I know I'm an idiot.\" I feel dejected.\n\nShe walks to stand in front of me, blocking the stairs. \"How am I supposed to keep you safe when you lie-\"\n\nI put my hands up, exhausted. \"Spare me the lecture, Dani already gave it to me.\"\n\nShe crosses her arms and her expression turns soft. \"Are you okay?\"\n\nI shake my head and feel the tears forming. \"She-\" I clear my throat. \"She says she wants to be with me.\" I put my head in my hands and cry. I had to keep myself in check the whole car ride back. It feels so good to let it out.\n\nI feel her arms wrap around me. \"Isn't that a good thing?\" She removes the pins from my head and shakes my curls out.\n\nI cry some more and finally compose my breathing. \"How can I trust her again? My heart can't take another hit. If she decides to leave me again...I can't-\"\n\n\"Okay, okay.\" I start to sob again and Scar hugs me tighter. \"We'll talk about this tomorrow. Go and get some rest.\"\n\n***\n\nThe next week goes by without incident.\n\nDani kept true to her word and called me that night. I couldn't answer. I actually haven't been able to answer any of her calls. I delete the voicemails before I'm tempted to listen to them and I avoid checking my emails. The more I ignore her the more persistent she becomes. At night I lie awake wishing myself to be in an alternative universe where Dani and I have a chance. Where she never gave up on us and where I got to be by her side until the end of time. Of course that dream is killed when I feel the tears rolling down my eyes. It is during one of these pathetic nights that I vow to myself to stop crying over our officially ended relationship.\n\nIn the past I promised myself to get over her and move on. I now know it is going to take a while before I can really say I am over her. Maybe I will never stop loving her, but I need to start loving myself more. Do I really want to go back to her after she caused me so much pain? To her, she was saving me from herself and from her fucked up world. To me, she gave up on us and took the easy way out. I try not to think about how I would react if the roles were reversed. Would I be capable of leaving Dani if I knew her life was in danger because of me? Why would destiny make us meet only to dangle our impossible relationship just out of reach?\n\nI'm in the bathtub staring out the window. Scar is out of town and Q is downstairs watching TV.\n\nI lay back and push the soapy bubbles around the tub. It has been a while since I have taken a bubble bath. Today has been one of my gloomier days; I thought a nice day of pampering was in order. I bring some of the bubbles closer to me and lay them on my chest. The suds slide down my rose pink nipples and I feel them tighten in response. I think back to the last time I had an orgasm. Dani's pink lips latched on to my nipples come to mind.\n\nI groan and go underwater. I hold my breath until my lungs are burning and I can't take it anymore. The heat of the water is not helping. I slide my legs against one another and finally come up for air. I imagine Dani laying me down on her office desk, that night, pulling my silver dress aside and sliding my underwear down and off my ankles. I slide one leg up and hang it over the tub. My hand teases its way to my heated center. The other one cups my breast. I arch my back and picture Dani's skilled tongue in between my pussy lips. I moan and run my fingers along my center.\n\nMy phone rings. It's on the chair next to the tub.\n\n\"Fuck!\" I want to let it keep ringing but see that it's Stacy. It could be something serious. I dry my hand against the towel and answer quickly. \"Unless this is a life and death emergency, I'm going to need to call you back.\" I sound out of breath.\n\n\"So you are avoiding me.\" Dani's husky voice answers.\n\nI sit up and press my legs together. \"I'm hanging up.\"\n\nThere is a low chuckle. \"Why do you sound so out of breath? I know you abhor working out. Did I catch you at a bad time, Sunshine?\"`\n\nI sit back and bite my lip. What I wouldn't give to have her here right now. I look down at my disloyal pussy. I would not be thinking that if I had just gotten this bath over with.\n\n\"I'm with someone.\" I lie, breathlessly.\n\nThere is silence.\n\nI need her to stop calling me. I need her to treat me like she did before; it is easier to stay mad when she acts that way. Not when she uses Stacy's phone to call me because I have been ignoring her everywhere else. She needs to ignore me and fall of the face of the Earth.\n\n\"I'm going to call bullshit on that.\" She sounds cocky.\n\nI scoff. \"I'll tell Kevin you said hi.\" I hang up.\n\nI throw my phone on the chair and submerge under the water again.\n\n******\n\nI feel like I'm drowning.\n\nIt has been three days and she hasn't woken up. The doctors say she just needs to rest.\n\nScar has brought me food and clothes and comes whenever she is free. I have so many questions I want to ask her but I can't think straight. All of these sleepless nights are starting to catch up to me. I want to sleep but I can't do it here and I don't want to go back home. I can't leave her.\n\nSomeone else walks through the door, waking me from a small nap.\n\nI can't lift my head but I open my eyes. It's Kara, her eyes are puffy and her nose is red. She looks at Dani on the bed and begins to cry again. I slowly sit up and watch her. I want to feel hate or jealousy for her but I feel nothing.\n\n\"I'm sorry,\" Her voice quivers. \"I just had to see her.\"\n\nI nod and look down at Dani. She's pale and has needles in her arms. There's a bandage around her head, covering her beautiful black hair. \"I'll give you a moment.\" I get up from my chair. My muscles are tight and I feel bones popping. I haven't moved much since I have gotten here. I walk out the door and decide to go to the cafeteria.\n\nI see Scar talking to a doctor. I walk down the hall to them.\n\n\"As soon as she gets up she is free to go back home, her recovery is going as planned.\"\n\n\"How much longer?\" Scar sounds bored, but I know she's just as worried as I am.\n\nThe doctor gives a slight shrug. \"We just have to let her rest for now. Her body has been through a lot.\" He gives me a slight nod and walks away.\n\nScar notices me for the first time. She hugs me. \"What are you doing up?'\n\n\"Kara is in there.\"\n\nScar pulls back to look at me. I don't know what she's looking for but she sighs. \"I can tell her to leave.\"\n\nI shake my head. \"She has known Dani a lot longer than I.\" I wrap my arms around myself. \"So I think it's about time we talked.\" I look up at her through my lashes.\n\nShe shifts uncomfortably. \"I think Dani should be the one to tell you everything.\"\n\nI nod. \"I just need to know, is she going to go to jail?\" This is a fear I have had in the back of my mind since getting to the hospital. Fate would just be too cruel if Dani is taken away from me as soon as she recovers.\n\nScar points to a couple of chairs against the wall. We sit. \"Dani helped us get to Pete. In exchange she gets to walk away, after paying some fines of course.\"\n\nI feel myself sigh in relief.\n\n\"That doesn't mean she's out of the woods yet. She has to testify against Pete and his men. She can potentially make a lot more enemies out of this.\"\n\nI bite my lip, worried. \"You'll keep her safe right?\" My eyes are pleading.\n\nShe smiles a little. \"You know Dani can take care of herself. But yes, I am here to help her. She did the right thing. Had she gone back to work for Pete, she could have ruined everything she worked for.\"\n\n\"Was it your idea?\"\n\nScar nods. \"She called me one night, worried and, I don't know, heartbroken.\" Scar looks down at her hands. \"She came to the resolution that she was going to have to give you up for good.\"\n\nI suck in a breath.\n\n\"I had been encouraging her to go to the police but she refused. It wasn't until she actually thought she was going to lose you that she started to listen to me. She knew I could help because of my connections, we have been trying to get to Pete for years.\"\n\n\"Is that why they hired you?\" I try to think of Scar as an ex drug dealer turned SWAT leader.\n\n\"More or less.\" She stays silent for a second. \"You can't tell Stacy.\"\n\nI sigh. \"All of the secrecy is going to get in between you guys. Stacy is going to want to know.\"\n\nScar sits back. \"It's already happening.\" Her tone is regretful. \"But I am going to try and hold on for as long as I can. I really care about her, Amber. I want to be with her, I also want her to be safe.\"\n\nI shake my head, disappointed. \"You saw how well that went down between Dani and me. I told you to stay away from her.\" I feel myself getting distraught for Stacy.\n\n\"I know.\" She sounds defeated. \"But, I am a selfish bitch who wants it all. These last months with her have been the best month of my life. I wouldn't trade them for anything.\"\n\nI put my hand over hers. \"Then don't let the lies ruin it all. Stacy is a strong girl. She can take it.\"\n\n******\n\nStacy is crying like a baby.\n\nMy mom is hugging her and they are both cheering me on as I walk across the stage. It is a small ceremony but the arena is filled with friends and family of those graduating. I wave the diploma that took me two whole grueling years to get over my head. My mom takes pictures and Scar holds Stacy as she claps for me, extremely proud. Roger sits back, holding my mom's purse and claps for me as well. I smile so hard my cheeks begin to hurt.\n\nI feel myself looking for her, disappointed. I still can't believe she didn't come. I didn't send her an invitation but I am positive Scar told her about it.\n\nAfter the ceremony I find my mom and rest. She hugs me so tight I begin to complain. Next I hug Scar and Stacy and finally Roger. I thank them all for coming and I feel my tears on the brim.\n\nLisa comes up to me and hugs me. We congratulate each other and talk about the last couple of exams. As we give a final hug I see Kevin walking towards me. He's wearing a button up baby blue shirt and some slacks. His hair is up in a bun and his beard is well kept. My mom and Roger look surprised when they see him hug me and plant a small kiss on my lips. I feel nothing but I smile anyways. I haven't told my mom about Kevin, she had an inkling that Dani and I were not on good terms but she didn't think I would move on so quickly. Scar gives him a stern handshake and Stacy doesn't even smile at him. I want to tell them all to behave.\n\nHe gives me another hug though. \"Congrats, grad!\"\n\nI smile again. \"Thanks for coming!\"\n\nWe all talk and try to decide on where we are thinking of going to eat when I see everyone look behind me. I turn and see Dani standing there.\n\nShe's wearing a pair or black tight jeans with a gold and red blouse that has a deep neckline. I see the small swells of her breast on display and my mouth goes dry. Her hair is swept to the side and her lips curve when she sees me eyeing her. She comes up to me and hugs me tight. I am so surprised it takes me beat to return her hug. When she pulls back she looks at me and smiles.\n\n\"Congrats, Ginger.\" There is a glint in her eye.\n\n\"Thanks,\" I murmur and step out of her arms. My heart is threatening to beat out of my chest. My mouth is watering at the image of her lovely breast out on display. I want to be alone with her.\n\nEveryone around me starts greeting Dani with warm hugs and kisses. Kevin steps next to me, slightly suspicious.\n\n\"We were just debating on which restaurant to go to.\" Stacy tells Dani.\n\nDani shrugs \"That's easy, Amber Rose. I got us a table.\"\n\nEveryone around me nods and agrees but they all look at me to make a final decision. I smile slightly and nod. This is going to be interesting.\n\n******\n\n\"Amber,\" I hear her croak behind me.\n\nI jump at the sound and turn around. I was looking out the window, into the grey sky. The weather reflecting my mood.\n\nDani is looking at me through heavy lids.\n\nI rush to her side and hold her hand. \"I'm here.\" I say quietly. Tears are rolling down my eyes and my heart beats erratically. She's finally awake. It has been a week and I could feel myself becoming desperate.\n\n\"What happened?\" She looks down at her arms and I can see her mind trying to think back.\n\n\"You're okay.\" I reassure her. \"You just need a little bit more rest.\"\n\nShe looks up at me and licks her lips. \"Where is he?\"\n\nI shake my head. \"He's gone, it's over.\" I wipe my tears and smile down at her.\n\nShe tries to sit up but cringes. \"My head is killing me.\"\n\nI get up. \"I'll get the doctor.\"\n\nHer hand shoots out to grab mine. \"No,\" She pulls me but her strength is weak. \"Don't leave. Come here.\" She moves aside and makes room for me.\n\nI look at the door and back at her. I sigh and make my way into her arms.\n\nI feel her lips on top of my head and release a breath. I close my eyes and it's not long before I am out cold.\n\n******\n\n\"Wake up already.\" Dani is saying through her teeth.",
        "I am staring up at her defiantly. All throughout dinner she has been driving me insane. Stacy is also to blame, since she purposefully asked Kevin to sit next to her so that he sat across from me and Dani could sit next to me. If Dani wasn't sharing some of her best kitchen stories, she was lightly running her hands through my thighs, even after I kept pushing her away. My body was on fire and I could feel myself ready to burst, which is why I asked her to follow me outside.\n\n\"I am here with Kevin. Show some respect.\"\n\n\"If you say that one more time, I'm going to throw you over my shoulder and take you back to my hotel room where I am going to make you cum so many times you won't remember who he is.\" Her cheeks are slight pink and her tone is serious.\n\nI feel my eyes going into slits. \"You wouldn't dare.\"\n\nShe crosses her arms. \"Try me. You're lucky your mom is in there or I would have you cumming all over my fingers under the table.\"\n\nI push against her. \"You asshole! I'm just trying to enjoy my dinner.\" I try to ignore the hunger deep in my gut and the tightening of my breast. My pussy is dripping wet, and Dani's possessive demeanor is getting me all hot and bothered.\n\nShe grabs my wrist. \"And I will let you enjoy your dinner once you tell him to go home.\"\n\nI open my mouth to protest but her lips crush mine. I feel her frustration and hunger and match it with my own. She swallows my moans and finally pulls back when I am a whimpering mess. \"Now stop making a scene and tell him to leave.\"\n\nI push against her again and groan. \"We're here together, for God's sake-\"\n\nBefore I know what is going on Dani throws me over her shoulders and I'm looking at her tight butt covered in black pants. She gives my own ass a slap. \"I warned you.\"\n\n\"Put me down! Are you insane?\" I know people are watching which makes me struggle more.\n\n\"You make me insane.\" She slaps my ass again and keeps walking through the crowd.\n\n\"Dani, this isn't funny! Put me down! Kevin is probably-\"\n\nShe slaps my ass hard.\n\n\"Ow!\"\n\n\"Stop saying his name.\" She takes out her phone and makes a call. \"Hey, I'm taking Amber back to my suit, she just can't get enough of me tonight. Tell the others she apologizes for her abrupt departure, except for that idiot. Yeah, stay for as long as you guys want, everything is on the house.\"\n\nI bang against her back. \"You are so petty!\"\n\n\"I can't wait till we get to my room.\" She gives me ass a nice rub before slapping it again.\n\nI can tell we're inside a hotel now. The floors are a nice marble but that is pretty much all I can see. I am too ashamed to try and look around. What grown woman gets thrown over someone's shoulder and spanked in public? The front desk lady greets Dani by first name. Her tone is friendly, she probably sees Dani doing things like this all the time. I struggle again, angry that I am actually getting jealous right now.\n\n\"Stop, we're almost there.\" She pushes a button on the elevator.\n\n\"Wild night, Miss.Rose?\" Someone next to us asks.\n\n\"Oh, I hope so.\"\n\nI bite my lip and feel my face heat up again. A shiver travels up my spine.\n\nWhen the elevator doors ding Dani walks out. She inserts her room key and turns on the lights as she walks in. I am thrown over her shoulder and land on the bed. I try and flip around, ready to let her have it but she is quicker. With ease she pulls my wrist across her body. She's sitting on the edge of the bed and maneuvers me until I am splayed across her lap. She brings her leg up and uses it to hold my legs down. Her hand has a hold of my wrists, which are right under my chest. My head is face down in the bed. I try and struggle but I am not match for her. She is right, I hate the gym and she probably works out every morning. I turn my head to the side.\n\n\"Let me go right now!\" I'm breathless.\n\n\"I don't think so.\" Her free hand lands on my ass and she gives it a nice squeeze before throwing my dress up and uncovering it. She sucks in a breath. \"And just what were you thinking not wearing underwear with such a short dress?\" Her hand rubs my bare ass. I feel myself dripping when her hand keeps rubbing the junction of where my thighs and ass meet.\n\n\"I thought Kevin would get lucky tonight.\" I bite back.\n\n\"There you go again.\" She chuckles. Her dark laugh is drowned out by my squeal when her hand swaps on of my ass cheeks. She repeats the action and I jump.\n\nThe bite from her hand makes my skin burn. All too soon my yelps turn into moans and I am arching my back painfully. I feel my juices dripping down my bare pussy lips.\n\n\"I think you knew I was coming today and wanted me to have easy access.\" Her slaps are getting closer to my pulsing pussy lips and I am thrusting my ass in the air. This sweet painful sensation is unlike anything I have ever experienced. I start to plead. \"Admit you did this for me.\"\n\nI shake my head to think through the delicious feeling. \"No.\"\n\nDani slaps my ass hard then. \"Stop being stubborn. I know you want to come. I can smell you.\"\n\n\"Bitch.\" I spit out. I want to slap her and I want to kiss her. I want to push her away and also grind against her tongue. Most of all I don't want her to stop.\n\nShe genuinely laughs. \"Naughty girl with a potty mouth, I like it.\" Two of her fingers run through my pussy and I push back against them. The delicious feeling is driving me wild.\n\n\"Dani, please.\" My voice is raw and I try not to think about how pathetic I sound.\n\n\"I know, baby.\" Her tone is no longer playful. Her fingers go back to my pussy and she slides them in with deliberate ease. I moan louder. I feel my hair getting stuck to my forehead and my mouth is dry but at this moment I can only think about her fingers pumping in and out of my sweet hole. Her thumb begins to rub my clit and I keep moving against her. The sound of my juices being spread by her fingers adds to the intense experience. \"Come for me.\" She orders and my body begins to shake. The wave washes me away and I am moaning her name over and over again as my body shudders. I feel my back arching higher, making Dani's fingers slide deeper inside me. My body quivers.\n\nI have barely caught my breath when my phone rings.\n\nI look around trying to figure out where it landed when we came in. I wiggle out of Dani's grasp and land on floor right on my butt, which is sore from her spanking. I see a light under the bed and reach for my phone. It's Kevin.\n\n\"Hey.\" I lick my lips. I take one big breath and try to ignore the tingle in between my legs. Dani looks down at me. I push my hair aside and wipe the sweat from my forehead.\n\n\"Hey, where did you go?\" He doesn't sound upset, which makes me feel guiltier.\n\n\"Sorry, Dani, uh, got a stomach ache. We came to the store to get her some medicine.\"\n\nDani lifts and eyebrow. I gulp at the look in her eyes. She looks hungry. Her hand comes up to my face and she sticks her two wet fingers in my mouth. I bite back a moan. I taste my juices.\n\n\"Are you guys coming back soon?\"\n\nI try and slap her hand away but she just looks at me expectantly. I feel my mouth sucking the juices off her fingers. \"Uh uh.\" I say to Kevin. When she finally removes her fingers I push her hand away glaring at her. I want to be pissed but I feel my juices dripping onto the carpet. I want her again. \"Kevin,\" I sound resigned. \"Give me a second.\" I get up from the floor and walk to the balcony. Once I take a breath of the night air I speak again. \"I think this is the last time we're going to talk.' I am the worst human being right now. I drag Kevin to my celebration dinner only to leave half way through with my ex.\n\nHe is quiet for a second. \"She's the one isn't she?\"\n\n\"What?\" I'm taken aback.\n\n\"The one you're thinking about when you think no one notices. The one you can't get over?\" I never talked to Kevin about Dani; I never talked to anyone really. Am I that obvious?\n\n\"Unfortunately.\" I admit. I groan and slap my hand against my forehead. \"I'm so sorry.\"\n\n\"Hey, don't worry about it. As long as you guys are working it out, I'm happy for you. I haven't seen you look so lively until tonight. It makes sense.\" I feel my lips quiver. I want to cry because this isn't fair to him or me.\n\n\"We can still be friends.\" I offer, lamely.\n\n\"Sure.\" He sounds doubtful. \"Is it true she's paying for our bill? Roger looks like he's going to drink the place dry and I might have to join him now.\" He tries to joke.\n\n\"Yeah, go all out.\" I encourage.\n\n\"Oh, I plan on it.\" With one last sigh he says goodbye and hangs up.\n\nI stare out at the flashing lights around. Vegas is such a lively place, but at the moment I'm feeling pretty numb.\n\nI drag myself back inside and muster all the anger I can. I frown at Dani who is lying on top of the sheets with a glass in her hand. She's drinking something strong.\n\n\"I hope you're happy.\" I walk to the foot of the bed. \"The nicest person I have met here so far has been hurt because of you.\" I point an accusing finger at you.\n\n\"Grow up,\" She scoffs. \"You want to be here with me. You should have not led him on.\"\n\nI open my mouth in disbelief. \"Dani, I'm being serious.\" My voice begins to rise. \"You tell me to get over you and then come back into my life demanding a place in it again.\"\n\nShe finally looks ashamed. Her jaw clenches. \"I told you everything has changed now. I am almost done here, Amber. We can be together again.\"\n\n\"What if I don't want to be with you anymore? What if I don't want any of this?\" I slap my arms to my sides. I feel my heart fluttering. She's telling me everything I want to hear and I want to believe her so badly but how long until something else happens and she leaves me again. I rub my forehead.\n\nShe looks unsure and puts her drink down. She moves to sit at the edge of the bed and rests her elbows against her knees. \"What can I do?\" She sounds desperate. \"Amber, tell me what to do so I can fix this.\"\n\nI shake my head. \"I can't do this again. Do you know how much you hurt me?\" My cheeks feel wet and I curse at how out of control my emotions get around her.\n\nShe jumps up from the bed and pulls me into her arms. I rest my head against her neck but don't hug her back. \"Amber, I fucked up. I thought I was doing right by staying away from you and letting you move on. But it was the biggest mistake of my life. I can't lose you now. Please let me fix it.\" She brushes my hair behind my ear and cups my cheek. I look at her through my tears and search her eyes. How can I know she is telling the truth?\n\nI feel myself getting lost in her blue eyes. \"I don't know if I can trust you again.\"\n\nShe wipes a tear away. I lean into her touch. My body leans into her, as if no time has passed at all and this is my place, right in her arms. \"As soon as all of this is over I will show you that you can. Please give me another chance.\"\n\nI close my eyes and think. I think of all of the heartache I endured the last two years I was here. I think to all of the missed calls and unspoken words left hanging in the air. I think back to the numerous times she made me yield to her even when I didn't think I should. Then I start to think of how she has taken care of my mom and Stacy while I have been here. How she has paid for everything and has not once thrown it in my face. I think of her talking to Scar every night to ask about me and making sure I didn't get into any trouble. Without really feeling her presence she made sure to protect me. Would I have done the same if her life were in danger because of me? I open my eyes and see her blue ones ready to cry. I would protect her with my life if I had to. I would push her away from me if I thought she could be in danger, especially if she was already kidnapped. I would do it in a heartbeat.\n\n\"I love you.\" I whisper. I get on my tippy toes and kiss her long and hard.\n\n******\n\n\"Dani, Dani...\" My head is shaking from side to side.\n\n\"I'm here.\" I feel lips against my temple. My eyes flutter open and I look up at the deepest blue eyes I have ever seen. I sign in relief and close my eyes. My breathing starts to get back to normal and I hug her close to me.\n\n\"Doctor says you'll be good to leave tomorrow. I have arranged for Dr.Kravitz to check up on you once you get home. He will keep going back for the next couple of days, until he thinks you're okay.\" I look at the foot of the bed to see Scar standing there. She gives me a slight smile and turns her attention back to Dani.\n\n\"Thanks,\" Dani kisses my head.\n\n\"Stacy and your mom are going to be waiting for you at the airport when you land.\" She's talking to me this time. She points to a pile of packed suitcases in the corner. \"I packed everything up for you. You're apartment is safe to go back to. We did a sweep this morning and we have been keeping an eye on it.\"\n\nI hug Dani tighter to me. I don't want to go back to my apartment. I don't even consider it my home anymore. \"I don't want to...\"\n\nDani looks down at me and pulls my chin up. \"What is it, Sunshine?\"\n\nI lean up to kiss her lightly. This is the first time I have gotten to do that since I have seen her. \"I want to go with you.\" She nods.\n\n\"We're just going to take my jet back to my place. Have Stacy and Nora meet us there.\"\n\nScar nods and leaves the room.\n\nI keep staring into Dani's eyes.\n\n\"You know, I will be okay, if you want to go home.\" Her tone is unsure and I feel myself getting emotional.\n\n\"Don't do this.\" I croak. \"Dani, you can't push me away again.\"\n\nShe pulls me tight and places kisses all over my face. \"Amber...\" When I don't open my eyes she says my name again. I finally look at her. \"I can't imagine being apart from you for another second.\"\n\nI cry and bury my face into her neck.\n\n\"I love you with all of my being and want you to be with me forever.\"\n\nI keep crying as she rubs my back.\n\n\"I just want to make sure this is what you want to. I don't want you to feel pressured or feel guilty.\"\n\nI hiccup a couple of times. \"I love you.\" I say through all of my tears. \"Dani I never stopped loving you.\"\n\nHer eyes look glossy and her bottom lip quivers. \"Really?\"\n\nI nod repeatedly and sit up so I can kiss the love of my life. When I pull back I see a slight smile on her lips. She reaches under her pillow and pulls out a little black box. My eyes open wide and I sit back afraid to touch the box.\n\nDani gauges my reaction and pulls my left hand to her. She lightly kisses my knuckles. \"I love you.\" She looks up at me through her lashes. \"You know that by now, right? And you love me too, right?\"\n\nI nod and lick my lips. My mouth is dry. I can't take my eyes away from the box.\n\n\"Enough to spend the rest of your life with me?\" She's smirking. \"Enough to drive me insane every time I see anyone looking at you like you're something to eat? Enough to calm my anger with a sweet look from your beautiful green eyes? Enough to be my Sunshine every morning?\"\n\nMy eyes are still wide and I can't find the right words. I nod eagerly and feel myself crying all over again. She opens the box and I gasp. Inside is a delicate ring full of diamonds in different sizes in a very classy and simple design. My heart melts when I notice the center diamond is amber and the actual band rose colored. I have never seen anything like it. The thoughtfulness has me hugging Dani until she complains that her ribs are still sore.\n\n\"I'm sorry, sorry. I'm just so happy!\" She takes the ring out and places it on my ring finger. It looks so big on my hand. I bite my lip thinking about the cost.\n\n\"Stacy helped me come up with the design.\"\n\nI laugh a little. This ring is definitely worth more than my place. I laugh louder and lean in to kiss Dani again. \"I love it. And I love you. I can't imagine my life with anyone else. I love you, Danielle Rose.\"\n\nShe grins. \"And I love you, Amber Rose.\""
    ],
    "authorname": "SkylerLuv",
    "tags": [
        "lesbian romance",
        "spanking",
        "reluctance",
        "fingering",
        "romance",
        "drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/amber-ch-03-2"
}