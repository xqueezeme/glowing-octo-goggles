{
    "title": "A Tight Fit",
    "pages": [
        "\"Ice cream? Snack?\"\n\n\"No thanks, I'm good!\" said Jodie as she dried her hair and dropped the towel into the beach bag.\n\n\"OK babe. You don't mind if I get a milkshake?\"\n\n\"Of course not.\"\n\nAidan smiled at her, then she noticed his eyes drop to her tits, enticingly cupped in her new orange bikini, and then back up to her face again. She could see his brain stall momentarily with desire, then he said \"Love you!\" and headed up towards the ice cream shack. \n\nJodie watched him lumber up the beach, six foot two and thirty-four but still just a big kid, to stand in line amongst the kids and dads. He was handsome, she knew, and sometimes funny, and very into her, so really she was lucky. The problem was sometimes he was actualy too into her, and it was verging on the needy. Always needing to be next to her. And when he was next to her always needing to touch her. And when he was touching her always needing to fuck her. Jodie often thought that if it weren't for other needs like work or food or sleep all he would ever want to do is slide his cock into her all day and all night. Aidan's enthusiasm was fine in its way, and it wasn't every woman who had access to a thick eight-inch cock whenever she felt the urge, but sometimes Jodie wanted a bit less convenience and a bit more variety than she got from having to confine herself to the attentions of her devoted fianc\u00e9.\n\nShe stood up and took a stroll down the beach, away from the crowds clustered on the stretch of sand by the car park. As the chatter of young families was replaced by the rhythm of the waves she relaxed. The light breeze dried the salt water from her swim-suit, and the sunlight on her skin filled her body with a warm glow. \n\nShe was pleased with the effect her bikini had on Aidan. That was why she chose it of course - the top just tight enough to not-quite spill out of, the bottoms clinging to the curve of her buttocks and held in place by two ridiculous bows, one on each hip. \"I suppose that's for if you needed to take them off in a hurry and you couldn't slide them down your legs because your feet were on fire or something?\" Aidan had said. \n\nAs she neared the dunes a young man with a smooth chest and a fringe of blond hair got out of the sea and walked up the beach towards her, water dripping from his torso, like he was in an advert for aftershave. She stopped, swaying her body gently, shifting her weight to jut one hip out, which pulled the wet fabric of her swim suit taught across her crotch, to see if the bikini might catch his eye too, and she was pleased to feel his gaze moving up her body, legs to hips to tits to face. He grinned at her and she smiled back, and then.... Well, nothing. After all, what did she think was going to happen? As he trudged back up the beach she wondered what it would be like call him back, then disappear into the dunes and wait for him to follow, kiss him, slip her tongue into his mouth, then kneel in front of him and enjoy his happy astonishment as she sucked him until spurts of sticky cum filled her mouth. A few years ago she might even have tried it. What was stopping her now?\n\nShe knew what was stopping her of course. She was thirty with a job and a mortgage and a wedding to plan and that was how her life worked now. She sighed and turned. The young man was already some way off. Oh well. She'd go and find Aidan, and when they got back to the tent she'd make good use of his ever-stiff cock and maybe that feeling of restless horniness in her crotch would recede for a day or two. She certainly hoped it would. She couldn't spend the rest of their camping trip craving other guys' cocks, let alone their future life together. But maybe once you're married you don't feel like that, she thought. \n\nWhen she got back Aidan was already sat on the beach towel holding a pink cardboard cup with a brightly coloured straw sticking out the top. \n\n\"Want a gulp babe?\" he asked. \"It's vanilla.\" \n\nJodie rolled her eyes. Of course she didn't want a gulp of milkshake. She was a grown-up. \"Can we go?\" she said, \"I want to get back to the tent and take off my wet things and have a lie down...\"\n\nThe suggestion of Jodie naked and lying down spurred Aidan into action immediately, as she knew it would. \"Sure, of course. I'll pack up. I can drink this as we go,\" he said. He got to his feet and began stuffing towels, books and sun cream into the bag. Jodie let her eyes wander off down the beach. The young man with the blond hair was chatting to his friends and towelling himself off. She parted her lips a little and pretended to herself she was opening her mouth to take in the hot smooth head of his cock. \"So! Much! Fun!\" she thought. She squeezed her thighs together as a warm jolt of anticipation moistened her cunt. A session of early evening fucking was definitely required. \n\n\"Right, let's go!\" said Aidan, beach bag over his shoulder, milkshake in hand. \n\nThe camp site was just a short walk through the woods at the far end of the beach where a path swung away from the sand and up a gentle slope into the trees. Aidan walked close behind Jodie along the winding track and she knew without looking that he was staring at her ass, because that was what he always stared at when he was behind her. He was kind of obsessed with her ass. She liked the thought of him lumbering along weighed down with the bag and his stupid milkshake with the added inconvenience of a hot and bothered cock tangling itself up in his baggy canvas shorts. Jodie swayed her hips a little as she walked, giving a little motivational ass-wriggle to hurry Aidan along. \n\nThe gate to the campsite was a quarter of a mile away on the main road, but the quickest route to their tent, hidden away in a quiet corner of the site, was over a low wall between two clumps of bushes. An old tree-stump gave a convenient step up, and then all Jodie had to do was swing her other leg up onto the top of the wall and lift herself over, taking care not to graze her skin on the rough stone. \n\nShe clambered onto the stump and fully aware of the excellent view Aidan was about to get of her bikini-clad crotch and ass she raised her leg high and hooked her ankle on to the top of the wall. She paused for a minute, her legs spread wide, her thigh muscles tight, and after giving Aidan a moment to enjoy the view of her splayed thighs and the thin strip of orange fabric barely hiding her pussy she levered herself up. And that was when her foot slipped on a loose rock and she slid back down again, landing awkwardly against the tree stump. Aidan leaped forward and took her arm. \n\n\"You OK babe? Do you need a hand?\"\n\n\"I'm fine.\"\n\nHe let go of her arm, but stayed next to her, just behind her. Now he'd touched her warm skin he needed more. She felt his breath on the back of her neck, and the heat of his body, and she knew his stupid fat cock would be straining against the fabric of his shorts. Yes, she thought, his stupid, fat, thick, hot, big cock. Jodie's cunt gave a little hungry twitch. \"Oh!\" she said. A little, lustful whimper. \n\nAidan placed the milkshake carefully on the top of the wall and dropped the beach bag. Birds sang. Trees swayed in the warm breeze. The hard bulge in Aidan's shorts nudged against Jodie's ass.\n\n\"You're very...\" she murmured.\n\n\"I really want to...\" he murmured back, and the two of them were suddenly too full of lust to manage to speak in sentences. \n\n\"Yup.\" she said. \n\nAnd then his mouth was on her neck, kissing her, inhaling her almost, and his body pressed up against her back and his arms wrapped around her, one hand on each breast, the left hand hot, the right weirdly cold from holding the milkshake, then his fingers slid down to her hips and then round to cup her bum, back up to her waist, her tits again, then back down to her hips, caressing, stroking, fondling every inch of her, and all the while Jodie felt his warmth and strength and the urgent bump of his very hard cock against her ass. \n\nShe turned her mouth towards him and they kissed over her shoulder, then Jodie leaned forwards to steady herself on the tree stump and nestled her ass back into Aidan's groin where she could feel the rigid bar of flesh behind the fabric of his shorts.\n\n\"Oh babe. You are amazing,\" he gasped. Jodie bent forwards, her bum thrust out invitingly, and looked back over her shoulder at him.\n\n\"So what are you going to do about it?\" she asked. \n\nAidan fumbled for the bows on her bikini bottoms. Left side, right side, then the thin strip of orange fabric fell away and Aidan saw his fianc\u00e9e's perfect ass exposed in the warm summer air. Her light brown skin, the round, yielding curves and the beautiful cleft where her buttocks met, and then beneath them the haven of her gorgeous cunt. \"Fuck!\" he said.\n\nJodie couldn't decide if this was an expression of admiration or a plan of action. She closed her eyes and after an agonising few seconds of offering her naked cunt to the open air she felt her lover kneel behind her and his mouth kiss her left buttock then her right, then his gentle but urgent kisses traced a path down until they reached the coral pink of her cunt. Warm, soft, lip to lip Aidan kissed her labia, then French kissed them, his tongue sliding over the moist and sensitive skin, probing in between the yielding lips. Jodie eased backed onto her lover's mouth, surrendering her cunt to the tongue fuck with a happy sigh. Aidan savoured her wetness, her taste of honey, musk, and the fresh salt of the sea. Slippery, golden, incredible. His tongue darted back and forth inside her, a humming bird probing an orchid. \n\nThen his probing tongue snaked down to the pretty pink swelling of her clit. \"Aaaaah\" she breathed, spreading her legs a little wider and nudging her eager crotch even further back towards the warm wet ministrations of his mouth. Credit where it was due, Aidan was excellent at oral, thought Jodie. She craved his cock now. But first she was going to savour his passionate pussy licking, like an oh-so-sophisticated starter before a hearty main meal. When it came to sex Jodie was enough of a gourmet to know that no matter how much she craved a hot and satisfying entr\u00e9e there was always something to be said for starting with an amuse bouche...\n\nShe rested her head on her arms across the tree-stump and bent forward with her legs parted, her pussy totally available to Aidan's mouth. He slurped away, and she basked in the sensation as her thoughts swirled in a lust filled haze. That was when she became aware of the sound of an argument on the far side of the wall. \n\n\"Idiot! Tu n'arrives m\u00eame pas \u00e0 monter une tente!\" an angry female voice echoed over the wall.\n\n\"Mais Claire, c'est toi qui as oubli\u00e9 le maillet!\" \n\nJodie spoke enough French to know some poor couple had arrived without the mallet to hammer in their tent pegs. But she didn't understand the string of insults the woman let fly when her boyfriend suggested it was maybe her fault. \n\nJodie giggled as she pictured the lad suffering his girlfriend's fury. Probably desperate for the first fuck of their little camping trip, but with nowhere to do it until he'd got the tent up, and now getting a fierce scolding from scary Claire. Clearly not everyone was enjoying getting away from it all. But on the plus side if they were arguing they wouldn't hear the moans when Jodie came hard on her fianc\u00e9's big fat cock in about five minutes' time.\n\nJodie felt a wave of lust for Aidan as she sat back on his mouth and splayed her legs even further. He really was good at this. More tongue on her clit, more of his hot wet lips against the lips of her eager pussy, more of every lewd sensation under the sun. Deep in her crotch Jodie could feel her climax start to build.\n\n\"Hang on! Stop for a second!\" she panted, because like the sex connoisseur that she was, she did not want to cum with the luxurious probing of his tongue. She wanted the deeper satisfaction that went with the lips of her cunt clamped around Aidan's fat cock, thrusting into her hard while the orgasm thundered through her. \n\n\"You OK babe?\" Aidan mumbled, barely taking his mouth away from the slippery delights of her quim long enough to utter the words.\n\n\"Yup. Yeah. Very!... Only, I need your cock.\"\n\n\"Your wish is my command!\" He clambered to his feet, undid his shorts and then struggled to yank the waistband of his briefs down over his huge erection. She laughed at his clumsy absurdity as he stumbled and wrestled while Jodie jutted her bum back towards him, her pussy juice and his saliva glistening on her pouting labia, teasing him with her readiness. This added distraction was no help to Aidan of course as he couldn't turn his eyes away from the beauty of her inviting ass and soaking cunt long but eventually there it was, out in the open, Aidan's long, fat cock. Jodie sighed in warm anticipation.\n\n\"Stand behind me\" said Jodie, determined to savour every moment of their al fresco fuck-fest. \"Just rest it on the cheeks of my bum! I want to feel it before you push it into me.\"\n\nAidan got behind Jodie's provocatively jutting ass, and rested the thick length of his cock between her buttocks like a man putting a warm baguette on a couple of honeydew melons. He looked down on his girlfriend. He couldn't believe his luck. Every day he was astonished that this woman was happy for him to fuck her. He loved every inch of her. Her dazzling smile, the shape of her head with her short bob of red hair, the rounded contour of her shoulders, the pert bounce of her pretty tits, her golden skin, the way her waist narrowed slightly then her hips flared out into her finest feature, the amazing, magnificent glory of her bottom. \n\nHis fiercely erect cock now lay in the inviting valley between her ass cheeks where the touch of her warm skin made his cock even harder, a rigid bar of lust wedged between the warm yielding hemispheres of her compliant bum. Slowly he edged forwards. The gentle friction of her buttocks held the skin of his cock in place while the shaft pushed forwards and the swollen tip of his dick glistened with precum while his balls nudged softly against Jodie's thoroughly aroused cunt. \n\nHe pulled back a little, and the movement of her ass against his shaft felt delicious. Then he rocked his engorged dick forward again, and back and forward, and with each push the voluptuous warm ass cheeks masturbated him with a sweet intensity while his balls slapped gently against Jodie's hot and sopping quim.\n\n\"You feel soooo hard, babe\" Jodie sighed,\n\nAidan, staring at the treasure beneath his painfully erect cock, could only manage a lustful grunt. \n\n\"So what do you wanna do now?\" she asked, eager to hear how much he needed to fuck her.\n\n\"Uhhh!\" grunted Aidan as once more his dick slid up between her ass cheeks. Now his precum oozed and dripped into the cleft of her ass, and the thick fluid helped the fat bar of dickflesh slide slip back and forth in the valley of her ass. Aidan pulled back further with each thrust, coating Jodie's golden skin with a glistening trail, until a trickle of precum gathered around the tight dimple of her asshole. \n\nAidan couldn't take his eyes off that pretty asshole. It looked so lewd, so forbidden. \"How would it feel?\" his cock demanded of him, \"How would it feel? How good would it feel to fuck her up the ass?\"\n\n\"So lover boy, where are you going to put that big fat cock?\" she asked, and her cunt already knew what she wanted to hear.\n\nBut a plan was forming in Aidan's mind now, or more accurately, a plan was forming in his crotch. He took hold of his aching erection and angled the head down so it nudged against Jodie's asshole and his hot, slippery glans pressed against the tight star of her anus. He could think of nothing more glorious than pushing his rampant erection home through that tight little hole and to lodge deep in Jodie's anal passage. The thought of her perfect ass bumping against his hips while the full length of his cock throbbed deep in her rectum brought him close to cumming on the spot. \n\nJodie had been loving the feel of hot dick between her buttocks, and even enjoyed the pressure of his swollen slippery glans against her anus. It felt lewd, smutty, fun. But she'd had enough build up now and was impatient to feel the longed-for dick piston in and out of her well-prepared cunt. \n\n\"Um... Aidan? Wanna fuck me?\"\n\n\"Yes babe. Yes! I just... I really really do... I mean, I was really hoping... oh God babe I so much want to fuck... to fuck your ass right now!\" There's he'd said it, and his cock gave an involuntary nudge against her sphincter to demonstrate its heart's desire. \n\nThis wasn't the first time Aidan had begged for anal, and in a way, it was cute how much he was into her bum. But there was no way she was letting that enormous cock up her ass. It would practically split her. She didn't want to hurt his feelings though. After all if Aidan was sulking he wasn't going to be any use at fucking her now desperately needy cunt. She tried a bit of diplomacy.\n\n\"I mean, that would be nice, babe, but you're so big, and we don't even have any lube or anything. Couldn't you just fuck me normally? I'd really like that too... \" Jodie leaned forward and jutted her hips out again invitingly, hoping the lure of her warm labia would distract Aidan from her ass, then he could fill her cunt with cum as she orgasmed good and hard like she really needed to.\n\nThat was when Aidan had his big idea. He reached forwards to the bright pink cup balanced on the wall and took a swig of the rapidly warming milkshake. Then pausing only to admire the dappled sunlight through the trees as it shimmered on the cheeks of his fianc\u00e9e's incredible ass, he aimed a trickle of milkshake and saliva from his lips between the splayed cheeks of her ass. The sweet slippery goop splatted onto her golden skin. It trickled down the cleft and oozed over her asshole dripped down into the pink cleft of her cunt. Aidan could tell that the pale viscous fluid was going to be perfect for easing the swollen head of his cock into Jodie's anal passage.\n\n\"What the fuck, Aidan! Did you come already?\"\n\n\"No babe, don't worry, it's milkshake. I thought it could be like lube. See?\" And he pushed the bulbous head of his cock against Jodie's cream-spattered asshole.\n\n\"Milkshake? Are you kidding? You put milkshake on my bum?\" Jodie pulled away. She stood up and tried to inspect the mess of sticky white gunk between the cheeks of her ass and now dripping from her cunt. \"What were you thinking?\"\n\nAidan and his cock both bowed their heads in embarrassment. They had badly misjudged this one. What thirty seconds ago had seemed the sexiest thing imaginable, using warm vanilla milkshake as lube to ass-fuck his beautiful Jodie over a tree stump, now in the spotlight of her fury seemed the dumbest thing anyone had ever attempted. A drip of milkshake, saliva and precum fell miserably from the end of his subsiding erection.\n\n\"I'm so sorry babe.\"\n\n\"Forget it!\" she growled. She picked up her bikini bottoms, and then thought better of putting them back on over her sticky ass and instead put them in the beach bag and wrapped a towel around her waist. \n\n\"Help me over the wall. Then I'm going to take a shower. Idiot.\"\n\nJodie and Aidan scrambled down into the campsite, and she stomped crossly to their tent. She was going to grab her shampoo and a clean dress and panties and get over to the shower block to wash the milkshake out of her ass crack and the salt and sand out of her hair. Aidan walked behind her, shamefaced and bitterly disappointed in himself, his balls full of sperm with no prospect of release. \n\nHis misery was interrupted when a lean, tanned and rather stressed-looking young man called over to him in a language he didn't understand, but reckoned was probably French. \n\n\"Sorry!\" said Aidan. He expected he'd be saying that word a lot this evening. After a couple of dismal attempts to communicate it became clear the young man spoke no English and as Aidan spoke no French he waved him vaguely towards Jodie who was now emerging from the tent with her washbag in hand and dressed in her bikini top and a beach towel.",
        "The young man walked over to her. He looked at her and smiled. And that smile cheered Jodie right up. \n\n\"\u00c7a va?\" he asked. \"Tu peux me pr\u00eater un maillet?\"\n\n\"He wants to borrow the mallet!\" Jodie yelled over to Aidan. \"Will you fetch it from the car?\" She turned back to the young man. He looked to be early twenties, dark hair, athletic, good-looking, and Jodie was pleased to note that when she had turned to yell at Aidan he had stolen a slightly too obvious look at her tits. \n\n\"Oui. Mon ami va le chercher,\" she said.\n\n\"Merci. On a eu des probl\u00e8mes...\" he said and he gestured towards a pile of un-erected tent in a heap on the grass nearby next to a beat-up old car. A pretty young woman who Jodie guessed was Claire was staring at them both angrily. \n\nWith a grin Jodie asked if those problems were with the tent or with the girl.\n\n\"Les deux... both!\" he laughed. Jodie enjoyed the way he struggled with the \"th\" sound of \"both\". She always was a pushover for a French accent.\n\n\"Je m'appelle Jodie\" she said with a smile.\n\n\"Paul.\"\n\nThey held each other's gaze for a minute, then Jodie felt something against her inner thigh. She looked down involuntarily and saw a blob of thick white liquid slide down past her knee and drip onto the grass.\n\nPaul saw it too. He paused for a minute, then his eyes met Jodie's again and he winked. \n\nJodie didn't know the French for \"That's not cum dripping down my leg!\" In any case she wasn't sure that the truth would be any less embarrassing. But at that exact moment Claire appeared. \n\n\"I am Claire and I am Paul's girlfriend\" she said, and grabbed Paul's arm in an unmistakeable show of ownership. \"He does not speak English.\" She tossed her thick black hair and wielded her distinctly pointy tits at Jodie like a pair of duelling pistols and Jodie half-expected to be challenged to \"Nipples at dawn\". Paul blushed. Then Aidan arrived with the mallet. He handed it crossly to Paul. Claire glared at him, then at Jodie, then at Paul. Jodie decided it was time for her shower.\n\n\"Go and get us something for dinner. And get some wine!\" she told Aidan, as she walked over to the shower block. Behind her she could here Paul and Claire were just getting stuck into another argument which from what she could hear was about whether or not Paul had looked at Jodie's tits. \"And why shouldn't he?\" she thought to herself with a mischievous smile...\n\nThe shower needed a token. She closed the door, hung up her towel and enjoyed the sensation of the warm water flowing over her scalp and shoulders. Jodie took a squirt of shower gel and washed the salt from her skin, then slid her fingers between the cheeks of her ass and lathered the sticky goop away from her asshole and the lips of her cunt. It felt good to get clean. She let a finger play over her frustrated clit and it tingled with pleasure. Then she slid her other hand between her buttocks. Stupid Aidan. Why did he ruin everything with his desperate desire to fuck her up the ass? What was the appeal? \n\nShe pressed a finger experimentally against her anus. It was too tight. Not like the welcoming slippery folds of her cunt. She compared the two -- the fingers of her left hand slipping sweetly inside her pussy, while a little soapy lather on her right forefinger was just enough to ease the fingertip past her anal sphincter and a little way up her ass. She tried to relax. The warm water eased her muscles, and with a little splaying of her ass cheeks her asshole opened a fraction more and she pushed the tip of her finger up her bum. The ring of muscle felt tight. The hole felt small. It was all a bit weird and uncomfortable.\n\n\"OK\" she thought. \"So what's all the fuss?\" It was quite a contrast the feel of her cunt. That felt... lovely. Jodie leaned back against the tiles and started to masturbate her clit under the cascading water. She spread her legs. She circled the swollen bud with her fingertips. Her other hand went to her tits to pull at her stiffening nipple. And that was when the token ran out and the shower stopped. Someone knocked at the door and asked her to hurry. She gave up. It was not her day.\n\nClean, dry, but distinctly unsatisfied Jodie walked back to the tent in a loose-fitting red sun dress that she knew showed off her cleavage, handy in case she had another breast-to-breast duel with Claire. But although Paul and Claire's tent was up now, and their car was still there the couple were nowhere to be seen. She imagined they had patched up their differences and were off on an evening walk. Meanwhile Aidan was clearly taking his time sulking as he went round the little supermarket in the village.\n\nShe sat next to the tent and got out a book - a trashy holiday novel with a murder, a stolen painting and three quite graphically described affairs in just the first 100 pages. It was a laughably awful and extremely thrilling holiday read. The low evening sun felt warm on her shoulders, and as she read about Penelope Fothergill's scandalous felation of the handsome young auctioneer on the train she felt the warm glow flicker in her still-to-be-satisfied cunt. \n\nSince nobody was around she let her hand slip between her legs and her finger pressed through her dress and into the notch in her white cotton panties. The pressure on her clit felt comforting and arousing at the same time. She read on. \"As the train thundered into the tunnel Penelope could barely fit the auctioneer's tumescent member between her immaculately made-up lips\". Hmm. Lucky Penelope. Jodie pressed her cunt again. She supposed she'd have to make it up with Aidan if she was going to get any kind of satisfaction. But really he was infuriating. What really was the point of him if he couldn't even be relied on to fuck her properly? \n\nJodie read on, and as the auctioneer ripped off Penelope's expensive designer lingerie she discretely rubbed her fingers against her crotch in a gentle rhythm. She gave a little sigh of pleasure. Then like an echo she heard another sigh come back to her on the warm breeze.\n\nShe put the book down and listened. Another sigh, then another, and another. A woman enjoying herself. She looked over to Claire and Paul's tent. Evidently the pair had resolved their differences and now the couple were fucking as only a pair of twenty-something French people can fuck, i.e., loudly and with no thought for the neighbours. \n\n\"Suce moi! Suce moi!\" Claire's urgent demands wafted towards her on the breeze. So not a fucking then, but a sucking Jodie thought. Knowing she shouldn't, but not able to stop herself she tiptoed towards the source of the moans of pleasure.\n\nThe French couple's tent was old and distinctly flimsy and Jodie noticed the zip on the door flap didn't do all the way up. \"I suppose it would be nobody's fault, she thought, if I walked past and happened to glance inside...\" And she bent forward to peer through the gap.\n\nClaire was on her back, her legs bent and spread wide, head thrown back and eyes closed tight. A skimpy black bra was pushed up past her tits and her fingers played with her erect nipples. Apart from that she was naked. Between her legs Paul crouched, his mouth evidently on her clit, and from the rhythmic movement of his arm she guessed his fingers were also at work in her cunt. And oh how Jodie wished it was her own clit that the handsome mouth was sucking, and oh how she wished it was her pussy those fingers were fucking, and oh how unfair it all was.\n\nClaire groaned louder and Jodie started to touch herself through her distinctly damp panties. She could hear the slurp of Paul's tongue now, hear the lewd squelching of his rapidly moving fingers. And then she heard something much louder as Claire came.\n\n\"Oui, ah oui, aaaaaah OUI.\" \n\nClaire thrust her crotch up into Paul's face and came hard, squirming and writhing and thrusting her hips and pursing her mouth into a perfect \"Oooooooo\". Then with a sigh she slumped back in a heap, pushed Paul's face away and lay there panting.\n\nThrough the narrow gap Jodie watched Paul pull back revealing the glistening lips of Claire's freshly climaxed pussy, and then he knelt beside her and for the first time she saw Paul's cock. Long, but leaner than Aidan's with a cute upward curve and ludicrously, rampantly erect. Jodie worked her fingers furiously inside her panties at the gorgeous sight as she watched Paul kiss Claire tenderly, then position himself between her legs, ready to slide that long lean rigid member home.\n\n\"Lucky bitch!\" thought Jodie, her fingers frantic now on her clit, desperate to watch the conclusion of the action and bring herself to her long-postponed climax. \n\nBut Claire rolled to one side. \"Trop fatigu\u00e9e!\" she said. \n\n\"No, no, no!\" thought Jodie. \"You can't be too tired! What about that poor sweet erect cock!!!\" She wanted to cry at the sheer waste.\n\nPaul rolled off his girlfriend and lay back in frustration. Aidan's car passed through the gate on the far side of the field. Jodie pulled her fingers from inside her panties and hurried back to her own tent. \n\n*****\n\nAnd now it's 8.30pm and Aidan is boiling up some fresh pasta on the camping stove as the last rays of daylight ebb away. Jodie watches him stir the pot then swig the cheap red wine he bought from the supermarket. He's on his second glass and she's barely half way through her first but never mind. She pops an olive in her mouth and enjoys the salty tang on her tongue. Neither of them are saying much but there's a tension in the air between them which Jodie puts down to Aidan sulking and Aidan puts down to Jodie sulking and they're neither of them wrong.\n\nAfter a bit of clattering, a glugging of olive oil and a grind of pepper Aidan hands a plate of ravioli to Jodie and they sit and eat. The food is good and now the wine begins to take the edge off the tension.\n\n\"Babe, I'm sorry. About the milk-shake thing. I just got carried away and... well, you looked so beautiful.\"\n\nJodie looks up at him. Sitting there with his big brown eyes, like a dog whose misbehaved waiting for forgiveness. \"He really is good-looking\" she thought, \"and if I don't get fucked tonight I might actually die of frustration.\" \n\n\"I got the mood wrong,\" he continues. \"Sometimes it's hard, you know.\"\n\n\"Actually Aidan, with you it's pretty well always hard.\" \n\nFor a moment he's puzzled. Then it occurs to him she might be joking and her innuendo is deliberate, but he's too nervous about screwing things up again to risk a smile so he sits patiently waiting for another clue.\n\n\"Yes, I made a dirty joke,\" Jodie smiles. \"Do I have to spell it out for you? Just, you know, try and have a bit more class in future...\" \n\n\"You're beautiful,\" says Aidan. He drinks down some more wine and sits closer to her, putting a hand on her leg. The touch of warm fingers on her thigh makes her crotch tingle again. \n\nThey finish the pasta, and move on to dessert -- a box of \u00e9clairs Aidan bought in supermarket. It's a peace-offering - Aidan knows Jodie loves an \u00e9clair and he watches her open her pretty mouth to take the sticky tube of cream-filled pastry between her lips. He wants to kiss the crumbs from those lips, and then replace the tube of pastry at her lips with his rapidly stiffening cock. \n\n\"Come to bed?\" he whispers.\n\nAidan kisses her, but as he does so Jodie glances over his shoulder and sees that Paul and Claire's tent flap is cautiously opening.\n\n\"In a bit.\" She licks a smear of cream from the corner of her lips. \"You go in and straighten the mattress out, and I'll finish my wine and tidy up out here first.\" \n\n\"OK babe. Apparently we shouldn't leave anything outside -- the supermarket guy says it's going to rain tonight.\"\n\nAidan clambers into their tent. Jodie watches Paul stick his head out of his tent and look around in the evening light. She feels like a naturalist filming the habits a shy nocturnal animal leaving its den. An animal in a T shirt and a very skimpy pair of running shorts. She hopes she'll get a close up.\n\nPaul sees her, and walks over with the borrowed mallet. \n\n\"Merci! Thank you...\"\n\nJodie stays seated. She looks up at him. She's glad she's wearing her sun dress. Inevitably at this angle if Paul looks down at her he will see her tits at their best, possible angle. She raises a hand to take the mallet and the movement makes the strap of her dress slide off her left shoulder. She pretends she is unaware of this. \n\n\"Tu veux du vin?\" she asks, and offers him her own glass. He happily takes a gulp. \n\nJodie pats the ground invitingly and Paul sits across from her. She stretches her feet out in front of her towards him and the movement offers Paul an enticing glimpse under the hem of her short dress, a flash of white cotton at the top of her tanned thighs. For a second he holds his breath. His cock, tense with the pressure of unspent cum, starts to swell at the sight of Jodie's parted thighs. \n\nTo Jodie Paul looks even cuter in the evening light with his warm smile and his tousled hair. Jodie wants to ask him about Claire, about what he did to her in the tent and would he do it to her too, about where he'd like to put his long lean cock. She wants to kiss him, but of course Aidan is only a few feet away waiting for her, and Claire is in Paul's tent sleeping off her noisy French orgasm and so nothing is ever going to happen. But it's always fun to flirt.\n\nThen Jodie remembers there are two pastries left. She twists round, grabs the box and kneels in front of Paul offering it out to him, closer to him than she really needs to be, her knees touching his knees, her cleavage seemingly offered up to him as well as the cream filled cakes. \"Tu veux goutter? Want a taste?\"\n\n\"Les \u00e9clairs. Sup\u00e8re! And for English you call this \"Cream pie\", n'est-ce pas?\"\n\nJodie laughs. \"God no! Cream pie means.... No, we just call them \u00e9clairs.\"\n\n\"OK\" says Paul. He smiles again. \n\nTwilight, wine, cake, a beautiful laugh and the prettiest tits he has ever seen. Paul's frustrated cock is now in a state of maximum readiness. His eyes meet Jodie's and he leans forward. But when Paul reaches out for a cake he finds, he's not quite sure how, that his fingers are not holding a pastry but are cupping Jodie's left breast. \n\n\"Oh!\" says Jodie.\n\n\"Oh!\" says Paul. But Jodie doesn't move away, and Paul doesn't move his hand. \n\nThey stay like that for a quite a bit. So of course that's what Claire sees when she sticks her head out of the tent.\n\nOnce again Claire's outpouring of furious swearing defeats Jodie's French, but she is pretty sure Claire tells Paul he is a \"cochon\", a pig, and tells her she is a \"salope\", a slut. The rest is too fast to follow but when Claire gets in her car and reverses over Paul's tent before driving off it's pretty clear what she means by that too.\n\n\"Merde!\" says Paul. He runs over to the wreckage but the tent poles are shattered and the canvas in shreds. \n\nAidan sticks his head out of the tent. \"What's happened?\"\n\n\"Paul had a row with his girlfriend. She's trashed their tent and driven off.\"\n\n\"Crazy!\" says Aidan. \"OK then. We're all sorted in here. Are you coming to bed?\"\n\nThere's a rumble of thunder. \n\n\"We can't leave him stuck out all night?\"\n\n\"What?\"\n\n\"He's got nowhere to sleep, we can't just leave him out here?\"\n\n\"Seriously?\"\n\nThen the rain starts to fall. \n\n\"Paul, viens!\" Jodie calls. \"Tu peux coucher chez nous!\"\n\n\"What does that mean?\"\n\n\"I said he could sleep in our tent.\"\n\n\"Ah no! Jodie! There's no room.\"\n\nBut Paul hurries over, and he and Jodie gather up the things outside the tent and hastily pass them through to Aidan, then as the summer downpour breaks they all three squeeze into the tent together.\n\n\"Merci!\" says Paul. \"Thank you much.\"\n\n\"For fuck's sake!\" says Aidan.\n\n\"He says you're welcome\" says Jodie to Paul. \n\nIt's a tight fit and there's a hasty rearranging or bags and boxes not to mention some muttered swearing from Aidan. Paul unrolls his sleeping bag, and then the three of them lie down, Aidan on the left, Paul on the right and Jodie lying in the space between them, still in her summer dress under a light blanket. \n\nThe rain tips down and the three of them try to sleep.\n\n*********\n\nForty minutes later Jodie remains totally awake. She lies there in the pitch dark, aware of every bump in the foam mattress beneath her, all the lumps in her pillow and something that feels like corner of the box of \u00e9clairs pressing against the top of her head. \n\nOn her left big, clumsy, puppyish, too-much-wine-filled Aidan snores gently. On her right Paul's slow breathing suggest he is asleep too. Outside the rain is tipping down, and Jodie has no idea how she's supposed to sleep when she's spent all day not quite having an orgasm and now she is lying flat on her back in the dark with a cock either side of her and absolutely no prospect of a fuck. \n\nAidan rolls over and mutters something in his sleep. He's turned towards her now and Jodie feels his hair against her shoulder. She remembers the excitement of their encounter in the woods. His tongue on her cunt. Then the hot pressure of his erection lodged in the cleft of her ass. \n\nYes, no doubt about it, she thought, Aidan has a great cock. Jodie likes the way it springs to attention the moment he sees her. She's known Aidan to get hard at just the sight of her bra on the radiator. She remembers how his thick cock follows her around the room like it was a compass and she was magnetic North. But then why, when he had her cunt dripping wet and desperate for his cum did he screw it all up? Why the obsession cramming that thing up her bum? Stupid. And that trick with the milk shake. What a pervert. It would serve him right if her attention did stray occasionally...\n\nAnd then there's Paul. She thinks about Paul's eyes, dark, boyish. He must be twenty-four at most. Much too young for her really. But then again, he seems to like her tits. She thinks about his mouth and fingers and the groans of pleasure they brought from Claire. She thinks about him drinking her wine is his T shirt and running shorts. Shorts that did nothing to conceal his over-excited cock, his own personal tent pole, when he touched her tit. It was fun the way she turned him on so much. And now here he is next to her in the tent, just a few inches away. She wonders if he's a deep sleeper. She wonders how his skin would feel under her fingers. She wonders about his cock.\n\nStill lying flat on her back with Aidan nuzzled against her left shoulder she stealthily puts out her right hand and her fingers seek out Paul's body. Gently her fingertips brush against the lean muscle of his forearm. Soft hairs. Warm skin. She softly inches her fingers up his naked arm. Will he wake up? She tells herself she will stop if his breathing changes. \n\nShe finds his bicep. Relaxed but firm. She wants to feel more now, and extends her arm a little further until her fingers find the thin cotton T shirt stretched over his chest. It's a nice chest. Smooth. Strong. Her hand explores downwards now to the exposed skin of a slim and muscular midriff, and there they encounter the waistband at the top of his shorts. She stops there. This is The Border. If she crosses it will it Claire will have been right to call her \"salope\". After all, Jodie isn't the kind of slut who wants to touch a handsome French guy's cock while her fianc\u00e9 is sleeping just inches away, is she? But then the ache in her moist cunt tells her that yes, maybe she is that kind of slut. Her fingers slide under the waistband. \n\nInside Paul's shorts she feels the heat of his body more intensely, and her fingers find the soft tangle of pubic hair. Her hand inches down further almost shaking with excitement at the illicit anticipation of touching his cock. \n\nBeside her Aidan shifts his weight and grunts. She wonders what he'd do if he woke up to find her with her hand like this, and her head says stop, you're cheating on your fianc\u00e9, and her body says \"don't worry about it, you deserve cock,\" and her body wins. And Jodie's fingertips make contact.",
        "\"Je suis une salope,\" she thinks. \"I am a slut.\"\n\nLike Paul himself, Paul's cock seems to be sleeping. Or maybe half sleeping, a \"semi\", too full of pent-up cum to be completely at rest. She traces the length of it with her fingertips. Beneath the warm soft skin there's a harder core that gives his dick a weight, a solidity. Her fingers circle it, and it seems to swell and grow. \n\nShe lies there in the dark holding Paul's cock, revelling in each gentle throb against her palm as the handsome organ grows and stiffens under her touch. It pulses, it twitches in her grasp and on instinct she squeezes back, her warm hand and his warm penis responding to each other's touch until she's grasping the hot hard bar of a fully erect cock, once again a rigid tent pole under the thin fabric of his shorts. \n\nPaul's breathing changes. Jodie knows she should pull her hand away but maybe the sudden movement would wake him up and then what? But the hot cock in her hand seems magnetic, impossible to release. Paul's body tenses beside her. Is he awake? Will he push her away? \n\nThen in one swift move Paul's hands grip the waist of his shorts and he arches his back and raises his hips and slips the shorts down, leaving his cock free. Jodie clasps it tight as it curves up rigid and obscene in the dark. \n\nJodie lies there, thrilled that her new French friend is awake and enjoying the feel of her hand on his rock-hard erection. She makes a circle with her finger and thumb around the dome of his cock and slips his foreskin slowly down, squeezing gently, then slips her fingers back up again. Paul gasps. He pushes his hips up to meet her hand. She takes the hint and once again slides her hand down and up letting Paul fuck the tight circle made by her fingers. \n\nJodie loves the feel of the young man's cock. The super-sensitive super-stiff super-forbidden dick in her hand. But she loves it even more when Paul responds to her lewd ministrations by slipping a hand under her own blanket. She pulls the hem of her dress up to her waist, and Paul's fingers rapidly find the cotton of her panties, slip beneath the elastic, through the soft thatch of her \"bikini trim\" pubic hair and immerse themselves in the slippery haven of her soft cunt. \n\nPaul's fingers are skilled, confident, quick, as she knew they would be. They part her labia, and frolic in the slippery depth of her pussy, then moist with her juices they turn their attention to the swollen pleasure point of her clit. Jodie cannot help but let out a tiny whimper of pleasure. \n\n\"Uuunh. Touche moi!\" she whispers.\n\nShe trusts to the rain to mask the noise from Aidan but he stirs. He presses his body against Jodie's left flank in the pitch darkness and whispers in her ear. \"You awake?\" \n\nShe says nothing.\n\n\"If you're awake, and lover boy there is asleep, maybe we could...\"\n\nHe waits for a response. Jodie hopes the silence will convince him she is sleeping and Aidan will drop off again but after a few seconds he puts his arm across her chest and curls his fingers down onto her right tit. His hand lies there, his thumb lazily slipping back and forth across the thin fabric stretched over her nipple. \n\nJodie freezes. Her hand stops its rhythmic caress of Paul's dick and his fingers cease their enjoyment of her swollen slippery clit. She is desperate for Aidan to drift off again so the delicious mutual masturbation with Paul can continue. Maybe if Aidan sleeps really deeply, she could even take that handsome French cock in her salivating mouth? And he could put his mouth on her and suck her and she wouldn't be a bitch to him like Claire, she'd let him spurt his hot cream in her hungry mouth as much as he wanted.... Yes, all she has to do is pretend to be asleep until Aidan's drowsy groping stops.\n\nBut while her brain is advising patience Jodie's nipple is responding enthusiastically to Aidan's thumbing, poking up through the cotton to meet his touch. Little sparks of pleasure tingle in her tits, and now Aidan holds the disobedient nipple between thumb and forefinger and pinches gently and her cunt dampens further, lubricating itself in readiness for cock. \n\n\"Baby you're beautiful\" Aidan murmurs. \n\n\"We don't want to wake Paul.\" \n\n\"I'll be quiet. I just... I just really need to touch you.\" \n\nAidan's fingers feel good on her tit. He pulls her dress down and exposes her hard nipples to the cool air and it makes them even harder. He tugs gently. He squeezes. He gropes and caresses. Jodie whimpers again.\n\n\"You have the best tits. No wonder your new friend here couldn't stop staring at them.\" \n\n\"He didn't!\" she whispers, blushing in the dark. But Jodie's protest is half hearted. After all, her she's already had her new friend's fingers in her cunt.\n\n\"He did. You loved it too.\" Aidan whispers, pinching her nipple and sending a pulse of lewd excitement echoing around her aroused body like the ball bearing in a pinball machine. Jodie shifts her hips and part her legs a little and Paul's furtive fingers, unable to resist the invitation, once more plunge between the pouting lips of her pussy. \n\nJodie moans. Aidan thinks of it as encouragement. \"Baby. My cock is aching. Can I fuck you? Please?\" \n\n\"Aidan, there's another guy here. You'll have to wait until tomorrow when he's gone.\" She turns away from him to lie on her right side, with her face towards Paul. Paul twists his hand so it stays nestled between her warm thighs. His fingers work their magic on her clit. The new position means she needs to grasp Paul's cock with her left hand instead. By now his shaft is slippery with precum and her fingers slide freely over the stiff tube of flesh. It feels full to bursting point with cum and the thought of this moistens Jodie's cunt more than ever. \n\nAidan still has a hand draped over her, massaging her tits. He kisses the back of her neck and then his fingers stray from her tit down her ribs, over her belly and towards her crotch. Jodie panics at the thought that in a moment he'll find another guy's hand has beaten him to her eager cunt. Quickly she grabs his wrist with her free hand and presses his fingers back up to her breasts. \"Keep playing with my tits, Aidan. It feels good. I like it.\"\n\nHe pulls her nipple again. \"I love your tits. Is that nice babe?\" \n\n\"Yes, it's good. Don't move your hand anywhere else.\" And then as Paul's fingers massage her clit in gentle circles she sighs with pleasure. \"Please please don't stop.\" \n\nNow Aidan is turned towards her, and she feels the warmth of his body as he spoons her, both hands now on her tits, and his hips pressed against her ass. And for the second time that day Jodie feels the hot length of his thick cock against her buttocks. Jodie wonders which cock is hardest for her, Paul's rigid tent pole slippery with precum in her left hand or Aidan's thick dick nudging and bumping against her ass. She wonders which she'd most like right now inside her? She wonders which contains the most spurts of hot thick creamy cum for her. \n\nThen Aidan's shuffles down a couple of inches and his big hot cock nudges between her thighs like a bear seeking out the honey pot of her cunt. Jodie's desire gives way to panic as she realises in a moment her fianc\u00e9's throbbing erection will bump up against her new lover's busy fingers and her greedy infidelity will be revealed. She reaches behind her and takes Aidan's thick dick in her right hand. \n\n\"Not now babe!\" she whispers. \n\n\"Aw c'mon babe. I have to fuck you. I'll be so, so quiet.\"\n\nJodie would love Aidan's dick inside her too, but there's no way she can live without Paul's secret fingers on her clit. It's the rudest most thrilling thing she's ever experienced. She has to find a way to keep her boyfriend's fat throbbing cock occupied but keep that hand between her thighs. Then she has an idea.\n\n\"Aidan I was thinking...\" she murmurs as Paul's fingers flutter again over her clit, \"Uh.. Maybe you can.... Oh...\" She feels wetter than she's ever felt in her life. \"Uhn... How about if you put that fat cock up my ass?\" \n\nAidan seems to hold his breath. In her right hand she feels his cock grow even harder. \n\n\"Oh baby. Yes. Fuck yes.\" \n\nAidan gropes for Jodie's panties. He pulls them down over her bum and she kicks them into the corner of the tent. As he does so Jodie whispers as quietly as she can in Paul's ear about what is to come... \"Ne t'arr\u00eate pas! Je lui prends dans mon cul...\" \"Don't stop. I'll take him in my ass.\"\n\nNow Paul's cock too pulses even harder in Jodie's encircling hand and his fingers plunge deeper into her drenched cunt while Aidan pinches her nipples hard. Jodie wonders what it is about assfucking that gets guys so excited but she doesn't care as long as it means Paul's fingers can carry on their blissful caress. She steers the fat shaft of Aidan's dick between her asscheeks. \n\nNow the head of his cock makes contact with the pink pucker of her asshole. Copious precum oozes from the tip and the slippery goo daubs the star of her tight little anus. To Jodie the blood-engorged cockhead feels hot and impossibly big. Her asshole tightens in anticipation. He's so erect, so fat and hard she doesn't know how she can take it. He pushes forward. It hurts.\n\n\"Gently babe,\" she whispers.\n\nJodie breathes deep. She tries to relax, willing the stiff invader to get it over with and breach the tight aperture of her ass. She splays her buttocks and opens her legs to try and ease the passage of Aidan's massive cock. \n\nThe parting of her legs gives Paul better access to her gaping cunt and he makes the best of it. \"Unnnh\" she moans again and the surge of pleasure opens her body up and allows Aidan's dick the first hint of anal penetration. Hornier than she has ever felt in her life Jodie wills her asshole to open for him, to accommodate the throbbing cylinder of over-sized dick flesh pleading for entry into her anal passage.\n\nBut the pink puckered asshole is too tight. Aidan strains forward but while her cunt is slippery with all the copious juices from Paul's lewd fingering there's nothing to ease the passage of fat cock up her ass. Her tautly-stretched ring stings in protest even while her tits tingle and her cunt does cartwheels of pleasure. \n\nBut then the sensations in the rest of her body and the feel of the pulsing cock against the opening of her ass shifts something in Jodie's head. She senses a hunger in her bowels. An emptiness longing to be filled. Suddenly she craves Aidan's cock. She knows she has to have it inside her. For the first time in her life she truly hungers to have her fianc\u00e9's throbbing dick up her ass just as much as he does.\n\nBut how? Her mind races. She wishes he still had his stupid milkshake. A good dollop of that and she knows she could take his shaft up her asshole to the hilt. She nudges back again at Aidan in frustration and her head bumps at the corner of a carboard box.\n\n\"Yes!\" she thinks. \n\nWith all her will power she releases Paul's cock from her fingers and stretches up towards the box, groping in the darkness for the \u00e9clairs. Her fingers close on the tube of pastry and she squeezes so the cool cream squirts out onto her hot fingers. Messy. Slippery. It fills her fist and a little trickles down her arm. Perfect. \n\nShe reaches behind her and wraps her cream-covered hand round the dome of Aidan's hugely swollen cock, slathers the throbbing cockhead liberally with goo and then Jodie smears one final dollop on her asshole. \"Just the way that filthy pervert likes it,\" she thinks. Then resuming her grip on Paul's cock she murmurs softly \"Fuck me now, Aidan. Fuck my ass.\" \n\nIn a second Aidan's stiff cock returns to Jodie's puckered asshole. Once again the pressure stretches the muscles of her anal ring. Once again Jodie opens her legs wide, splaying her ass cheeks to help the intruder breach her sphincter. Once again she feels the pressure, the stretch and the sting. But now something else happens. The cream has lubed up the fat cockhead just enough, and now Aidan's massive shafts begins to prize open her tight asshole. \n\nPaul's cock throbs hot in her hand. Aidan bites her neck. Paul fingers her cunt. Aidan squeezes her tits. Jodie whimpers and the pain of the anal penetration submerges under a wave of pleasure as the stiff dick reams the tight aperture of her ass. She's doing it. She's taking that cock up her ass. She presses back against him and then in one smooth piston move the thick dome of Aidan's cream-smeared dick finally pops through the narrow ring of her anal defences, and the first inch, the thickest part of the big thick organ, is finally lodged inside Jodie's ass. \n\n\"Fuck! That's beautiful\" Aidan whispers, \"You're beautiful.\" \n\nJodie breathes deeply. It's like she has entered another world now. It doesn't hurt. It feels good inside her. The asshole that complained so much at Aidan's first attempt at penetration is now wide open to him, relishing the stretch of the invading cock with the same filthy enthusiasm that her cunt feels for Paul's fingers. \n\n\"I... I really like it. You can go deeper... If you want... Babe...\" she whispers. \n\nAidan does want. He wants to more than he's wanted anything in his life. Gently but firmly he thrusts forward, and as he does so Jodie shuffles her bum back onto him, swallowing his dick up her anus inch by inch, until Aidan's slippery hot cock fills his fianc\u00e9's splayed ass right to the hilt.\n\nJodie wants to speak but somehow no words come out. She feels filled to the brim with sex. With one hand she pumps Paul's stiff cock, and the other pulls her lover against her from behind, so he can get every inch of his outsize organ up her thoroughly crammed asshole. Everything is so filthy. So fucking lewd. So fucking goooood. She feels so full of dick. \"Salope? Slut?\" she thinks. She feels more like a Queen. A royal fucking priestess of cock. \n\nMeanwhile, his cock crammed deep in the forbidden delights of his pretty fianc\u00e9e's virgin anus, Aidan is in heaven. Jodie's ass sheaths his fat cum-filled dick in a deep hot grip. It throbs around him, massaging every inch of him. It milks his shaft like a super-tight cunt and sucks it like the sweetest supplest mouth imaginable. Jodie's squirms and shudders add to the intensity as her anal ring grips the root of his cock like she will never let it go and her willing ass begs for ever deeper penetration. \n\nSlippery with the slick cream, he pistons slowly in and out of her, shaking with bliss as his cock experiences every ridge and contour of her anal passage and every spasmodic clench of her overstretched sphincter. He relishes Jodie's perfect ass, loving the feel of her inside and out, as throbs of lewd pleasure pulse the length of his cock and down into his balls where a tidal wave of cum is building...\n\nNow there's a crash of thunder. Paul pretends to stir in his sleep and in one gymnastic move he swivels round to lie the other way in the narrow tent, his head by her spread thighs, his face just inches from where Jodie's gaping ass is stretched around Aidan's cock. Then Paul clamps his mouth over Jodie's sopping cunt. \n\n\"Uuuuuuh!\" Jodie whimpers with delight as Paul licks her. He sucks her, he drinks her in, he tastes the honey, the salt, the... is that cream? He gulps her juices like a man dying of thirst in a desert. Then his tongue finds her clit. He takes the swollen bud in his mouth and circles it expertly with his tongue while he slides two fingers inside her, finger-fucking her receptive cunt while Aidan thrusts and plunders her compliant ass. \n\nJodie feels a fresh surge of lust rush through her tits, her thighs, her asshole and her cunt all at once and now Paul finds her g spot and she knows just what it was that made Claire cum so hard...\n\n\"Fuck me Fuck me. Fuuuuuu.....\"\n\nBut Jodie never finishes her sentence. Paul's cock finds her lips and her words become the stifled moans of a woman sucking for all she's worth on an impossibly stiff cock. \n\nAnd that's the moment Aidan realises Paul's head is between his fianc\u00e9e's legs, enjoying the sweet taste of her eager cunt. And that's also the moment Aidan realises that he doesn't mind at all. \n\nAfter all, he has his cock buried deep in the asshole of the most beautiful woman he has ever seen. Why would he care about anything else? So what if Paul is licking Jodie's clit? So what if she is sucking his cock? So what if the whole world is ending? This now is all that matters to him, his hands on her tits, his hips slapping against her incredible ass, his stiff dick bursting with pleasure in the tight velvet tunnel of her rectum.\n\n\"Mmm. Mmm. Mmm...\" moans Jodie. \n\n\"Mmm. Mmm. Mmm...\" moans Paul.\n\n\"Mmm. Mmm. Mmm...\" moans Aidan.\n\nAnd now everything is cocks, and tits, and lips, and thrusts and moans building and building, and then with a shudder and a grunt and a sudden tensing of muscle it's Jodie whose damn bursts first. \n\nLights flash in her head. Fireworks explode in her tits and in her cunt. A heavy red pulse of pleasure spasms the length of her bowels and then with a gush she squirts hard over Paul's hand and tongue and Jodie cums harder than she's ever cum in her life.\n\n\"Uuuuuuungh!\"\n\nIt's the start of a chain reaction, as the throb of her drenched clit on his tongue and the vibrations of her moans on his cock bring Paul to his climax, and jet after jet of his sticky semen erupt onto Jodie's tongue and into the back of her throat, filling her mouth until his sperm spills over her lips over her chin, her face, her tits.\n\nAnd then it's Aidan's turn. His fianc\u00e9e's orgasmic anal twitching, her squirming as she gushes, her groans and gasps as she swallows another man's cum tip him over the edge too, and finally in an explosion of joy surge after surge of hot sticky cum pulses from his aching cock up into the sweet tight bliss of Jodie's ass. Ten, twelve, fourteen surges of semen pump up into her bowels, and as Aidan moans and gasps he holds this incredible woman tight as his balls empty into her and he kisses her and kisses her and then with one last twitch his cock is empty and the three of them lie together spent in the tiny tent and the rain just keeps on falling. \n\nAnd maybe now, now that everyone has fucked and everyone has cum, maybe now it's going to be possible to get some sleep.\n\n*******\n\nWhen Jodie woke up the next morning she felt like she was no longer in the same reality she inhabited yesterday. Her limbs were aching, but in a good way, like after a workout or a power yoga session. Her fingers were sticky. Her sundress was a wreck. Her cunt felt moist and messy, and her gently throbbing asshole felt sticky with semen and cream. And was that cum on her chin? In any case she knew she had a smile on her face....\n\nShe lay under the blanket listening to the birds. Was it all OK what had happened? She had sucked a stranger's cock in front of her fianc\u00e9. She had given her ass up to Aidan's fat dick in the lewdest way imaginable. She had done all sorts of things. Was it OK? Was she a slut? Was she a bitch? Would things ever be the same again? Or had she crossed a line? Had she gone too far and lost Aidan for ever? She put a hand out to her left. \n\nWhere she hoped to find the reassuring shape of his sleeping body she found a piece of paper. Her heart sank.\n\nIn the gentle dawn light she read --\n\nDarling Jodie\n\nI've got to say something about what happened last night. \n\nIt's simply this. You were amazing. I love you. \n\nI've gone to get us breakfast. \n\nYours forever\n\nAidan\n\nPS. Yesterday we did a lot of things and I loved all of them. But I know you never got to have a cock in your cunt like you wanted and I feel bad about that. So, if you wake up before I get back and you need some attention, I'm sure there's someone else on hand who would be happy to help.\n\nXXX\n\nJodie blinked in astonishment. She read Aidan's note a second time. And a third. Then taking him at his word she turned towards Paul and once again slid her fingers down his body to seek out his rapidly stiffening cock. He opened his eyes and grinned.",
        "\"Bonjour\" she said. \n\n******\n\nAidan sat outside the tent sipping his coffee and listening to Jodie cumming on Paul's eager cock. His own cock was so hard it ached. In a minute he'd go in and take his turn filling the love of his life with cum in whichever hole she wanted. But there was no rush. He knew they had plenty of time for more fun together."
    ],
    "authorname": "MalDufleurs",
    "tags": [
        "anal",
        "ass",
        "mmf",
        "threesome",
        "camping",
        "al fresco",
        "cuckold",
        "voyeur",
        "group sex",
        "unfaithful"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-tight-fit-1"
}