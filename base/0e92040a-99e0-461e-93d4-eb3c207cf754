{
    "title": "A Boss, A Mentor, A Lover Ch. 05",
    "pages": [
        "Carrie lay on the bed staring up at me seductively. She propped herself up on her elbows, and opened her legs widely, revealing her gorgeous sex to me. She was naked except for her silky black stockings and garter belt, and I could see glistening wetness shining between her legs. It was time for me to pleasure her, to pay her the same level of devotion she'd just shown me.\n\nI unfastened the top button of my shirt. It was all I still had on; I'd removed my pants long ago when Carrie had sucked my cock so gloriously. \"Do it, slowly,\" she prodded, \"make it exquisite.\" It was the same demand I'd made of her earlier, and she was trying to get a rise out of me. I gave her no such pleasure.\n\n\"Only the master can make demands of the slave,\" I retorted, though I curled the corners of my lips up in a devious smile. \"Now tell me you're sorry, and rub your clit in penance.\" The same wicked grin crossed her lips when I said this, but she didn't resist me.\n\n\"I'm sorry, master,\" she said submissively. As she said it she raised her right hand to her lips and licked three of her fingers, getting them dripping wet with her spit. She then lowered her hand between her legs and began rubbing the top of her pussy in a circular motion. Her breathing sped up slightly as she did so, but she kept her eyes fixed on mine.\n\nI unfastened each button on my shirt slowly watching her. I could feel my cock twitch as it hardened watching Carrie masturbate. She noticed as well as her gaze dropped from my eyes to my crotch. Once completely unbuttoned, I threw my shirt on the floor then stripped my undershirt off quickly and tossed it aside. I stood naked before her, my cock hard and throbbing. Carrie squeezed her clit between her index and middle fingers as she made long sweeping strokes up and down her cunt, her eyes once again staring into mine.\n\nI knelt down beside the bed. \"You are so fucking sexy,\" I said in a deep and throaty voice, desperate with desire. \"Get over here.\" As I said this I grabbed her behind her knees and pulled her toward the edge of the bed. She moaned at my aggression and fixed her gaze deep into my eyes as I gently rested her thighs on each of my shoulders and lowered my face agonizingly slowly into her sex. I maintained eye contact with her as I kissed her pussy lips softly, and pressed my tongue between them. Her stare was intense, as though she were urging me to eat her with her eyes. When my tongue grazed over her swollen clit she finally broke eye contact, dropping her head onto the mattress and arching her back to meet my soft, slow licks.\n\n\"Time to cum for me, slave,\" I whispered hungrily between laps of my tongue.\n\n\"Anything you say, master,\" she whispered back. As soon as she said this, I sucked down hard on her clit, engulfing it within my lips and mouth. I sucked it greedily and made soft, flicking licks over it repeatedly, maximizing the sensations for her. Carrie arched her back further, and reached her hand down onto the back of my head, grabbing a handful of my hair and pulling my face deeper into her. I put my hand just under my chin and pushed two fingers into her pussy. Her lips gripped my fingers tightly, and I hooked both fingers upward inside her searching for her G-Spot. When I found the tiny, soft, granulated area on the roof of her vagina, she bucked her hips in reaction and grunted.\n\nI knew she was entering the throes of ecstasy now. I began a steady, unrelenting pace of long, hard licks from the entrance to her vagina up over her clit. As I licked, I massaged her G-Spot with soft, swirling strokes, working my fingers slowly into and out of her. Her clit was engorged and swollen, almost pulsating as I licked and sucked it fiercely. Carrie was moaning my name and swearing in a steady string of sexy profanity. \"Oh Jim, oh fuck, Jim, fuck... me...\"\n\nI kept my pace steady and rhythmic, coaxing her toward her peak. As she neared climax, she bucked her hips into my face repeatedly, keeping her hand behind my head to hold my mouth firmly down on her sex. Her juices became thicker, and my mouth began to fill with her heavy fluid. Her breathing became frantic and quick; I knew she was about to cum in my mouth. But just as the moment seemed ready to engulf her, she put both hands on my cheeks and pushed my mouth off of her, sliding her hips back away from me suddenly, my fingers slipping out of her cunt.\n\n\"No!\" she gasped breathlessly. \"No, Jim, make me beg for it. Make your slave earn her orgasm.\" She lay on the bed panting, gazing up at me with pleading eyes. I knew how badly she wanted to cum, but still she was gearing this encounter for my pleasure.\n\n\"Ok, slave, come here and kiss me then,\" I told her, knowing full well that her pussy juice was heavy and thick on my face. She scooched herself forward on the bed and did as I asked, leaning forward and kissing me passionately, her tongue lapping her nectar off my lips and chin. After a minute of long, wet kisses, I affirmed my authority once again. \"Now... beg me to eat your sweet pussy until you cum.\"\n\n\"Please eat my sweet pussy until I cum, master,\" she implored. I pushed her shoulders gently back down onto the bed, and stood above her.\n\n\"First... turn over, slave,\" I commanded. Her eyes widened for a split second, but she obeyed instantly. She flipped over onto her stomach and raised her hips up off the bed ever so slightly. I hooked my fingers into the straps connecting her garter belt to her stockings and pulled gently upward. Carrie got the hint and pushed her ass up toward me. I knelt behind her and squeezed her ass cheeks, kneading my fingers into the soft flesh. Then I lowered my head slowly and ran a long, wet lick up the length of her ass crack.\n\n\"Oh... my... god,\" Carrie cooed in disbelief as I ran my tongue over her, putting heavy emphasis on the last word. It was the same utterance of disbelief she'd made the first time we fucked and I turned my attention to her ass. I guessed she wasn't used to being pleasured in such a way. I squeezed her ass with both hands again, this time spreading her cheeks gently apart. The taut, dark brown, little rosebud of her asshole puckered suddenly when my warm breath hit it. I flicked it lightly with the tip of my tongue several times, drawing little squeaks of pleasure from Carrie with each flick. Then I descended on it hungrily, lapping at it with hard, long strokes, getting it soaking wet and soft. She buried her face into a pillow to stifle her loud and guttural groans as I placed my palms flat on both of her cheeks and spread her as wide as I could, giving my tongue unhindered access to her tight hole.\n\nShe reached her hand up under herself and began to stroke her clit furiously. I hardened my tongue and pushed it as far as I could into her asshole, tongue-fucking her as deeply as I could go. Her groans began to border on screams as her fingers increased their intensity on her clit and I pushed my tongue furiously into her ass.\n\nAfter several minutes, I finally pulled my tongue out of her ass and flipped myself over underneath her so I could lick her clit again. Carrie pushed herself up slightly so that she was sitting on my face. I pushed her hand out of the way and sucked hard on her engorged nub. She pulled her face out of the pillow and groaned as I licked her clit. \"Oh fuck, I am so close, Jim,\" she cried. Hearing her say this I knew it was time to give her the pleasure she'd delayed so long. I reached my hand up and pushed my middle finger into her pussy and rested my index finger at the entrance to her asshole. I swirled my index finger around her hole several times, pushing very gently against the tight muscle holding it shut.\n\n\"Do it,\" she whimpered, letting me know she was ready to be entered. I pushed my finger in just past the muscular resistance, and left it inside her only as deep as the first knuckle. I swirled it gently around inside her ass as I stroked deeper into her cunt with my middle finger. I didn't want to hurt her by going too deeply too quickly. She, however, wanted no such courtesy. \"Fucking do it,\" she demanded imploringly. At her request I pushed my index finger deeper into her asshole, all the way to the second knuckle. She groaned approvingly.\n\nI then began stroking both fingers into and out of her, my middle finger in her cunt and my index finger in her ass. My fingers were separated by just a thin sliver of flesh, but it amazed me the difference in feel. Her pussy was tight and soft, but the velvety flesh yielded welcomingly and opened to my touch. Her asshole on the other hand was tight and muscular, and it gripped my finger firmly, almost resisting my entry. I could only imagine how heavenly it would feel to have her little hole wrapped around my shaft, to feel the strong ring of muscle squeezing my cock, while her soft, silken interior enveloped it with a warm, smooth sheath.\n\nI continued to suck savagely on her clit as I sank my fingers even deeper into her. Soon both fingers were buried to the hilt and I was swirling them inside her to raise the intensity of her sensations. She bucked her hips wildly and moaned incoherently; I could tell her climax was nearly imminent. Just when I thought she couldn't possibly stand any more, she suddenly reached both of her hands down under my head and pressed her pelvis into my face so hard she cut off my breathing. Her orgasm washed over her like a wave and she punctuated it with a long, loud, \"Ohhhhhhhhhhhh!\" until even that was cut off by her pulsations and became just several rhythmic huffs of air involuntarily escaping her lungs. My fingers were buried as deeply into her as they could go, as the spasms of her climax caused the muscles of both her vagina and her asshole to pulsate rhythmically, squeezing hard on my fingers. It was as though her entire sex now had a pulse, and each beat sent wracking waves throughout her body.\n\nI gradually slowed the intensity of my licks on her clit, and the swirling of my fingers inside her, as her orgasm began to subside. She released her grip on my head and freed my airway to breathe normally again. After several moments I slipped my fingers slowly out of her, and slid out from underneath her. I again stood by the side of the bed and looked down at her. She was on her hands and knees and looked back at me seductively.\n\n\"Baby, you came so hard,\" I said, almost in disbelief. It was true. Carrie's orgasms were very intense. Perhaps more than any other woman I'd brought to climax, Carrie's orgasms seemed to grip her entire body, as though she had pent-up energy, aggression and desire stored inside and they all came erupting out of her simultaneously.\n\n\"I know, baby,\" she replied, \"you drive me so fucking crazy it just makes me explode.\"\n\n\"I love the way you explode,\" I told her, then I reached my right hand down and began stroking my cock. It was rock hard by this point and I was dying to put it inside her, to feel her warm, moist softness. She watched me stroke myself with wide eyes for several moments, her jaw hanging agape.\n\nFinally she said, \"If you don't fuck me now, I'm going to go absolutely insane.\" I wanted to dive right into her immediately, but I couldn't resist continuing our little game.\n\n\"How many fucking times do I have to tell you to ask me nicely when you want things, slave?\" I asked tauntingly. Her eyes flared momentarily, her brows furrowing impudently. But again she relented and appeased me.\n\n\"Please fuck me, master. You made me cum so hard, I just want to please you now.\" Upon saying this she reached both hands underneath herself and ran her fingers along either side of her pussy. She used her index fingers to spread her petals apart and open her cunt widely. It was such an incredibly beautiful sight; the entrance to her vagina was dark pink, almost red, engorged as it was from her orgasm. Her lips were puffy and swollen, and her wetness glistened invitingly.\n\nAfter drinking in this beautiful sight for a moment, I kneeled on the bed behind her and positioned myself just above her. I pressed the head of my cock against the entrance to her vagina, and teased her once again. \"Beg for it, slave.\"\n\n\"Please fuck me, master,\" she cooed.\n\n\"I'm not convinced you really want it. Convince me.\"\n\n\"Please fuck my pussy, master, I want it so bad.\"\n\n\"I'm almost fucking convinced, baby; tell me your pussy is wet for me.\"\n\n\"My pussy is soaking wet for you, master.\"\n\n\"Now tell me you've wanted this all day.\"\n\n\"I've wanted this all day every day for a year.\"\n\n\"Oh god baby, me too. Now tell me you wore that suit to make me want to fuck you.\"\n\n\"No,\" she replied matter-of-factly and turned back to look me in the eyes. \"I wore the suit because ever since that day you told me how sexy I look in it, every second I'm wearing it around you I get soaking wet between my legs.\" She jutted her lower jaw out and flared her nostrils in defiance when she said this, expecting me to hold it against her, to force punishment upon my slave for not doing as I asked. But the realization that came with hearing her say it, to now know that she desired me as badly as I did her, made a wave of affection wash over me. I forgot our game and instead reached my left hand out to grip her hip and pull her gently into me. With my right hand I guided my cock past the tight resistance at her entrance, and sank it deep into her cunt, gently and smoothly.\n\nCarrie gasped for a moment when my cock pushed into her, popping past her threshold and spreading her open. Her eyes rolled up for an instant as I entered her, but then she looked deep into my eyes again, urging me to take her completely. As I sank deeper we both moaned contentedly, our bodies reunited at last. I thrust as deeply into her as I could, then held my cock still inside her. I wrapped my arms around underneath her, and pulled her body into mine. I buried my face into her neck and whispered in her ear. \"God, I've dreamed about this moment.\"\n\n\"Oh, Jim,\" she moaned. I ran kisses along her earlobe and down the nape of her neck, flicking my tongue in her sensitive areas to turn her on. I backed my cock out slowly, all the way to the tip, then sunk it in again just as slowly. After I'd repeated this slow, smooth thrusting several times, I began to quicken the pace. I leaned back behind her and grabbed her hips with both hands, guiding her motions as I began thrusting in and out of her quicker and quicker. Carrie swirled her hips in a circular motion with my thrusts, meeting my rhythm stroke for stroke. The sensation felt amazing, our bodies in sync and working perfectly together. I pulled her close to me and ground my hips against her thighs, her ass pressing into me.\n\n\"Fuck, Carrie, you feel so fucking good,\" I moaned.\n\n\"Mmmm, do you like the way I feel inside?\"\n\nI buried my cock to the hilt and pulled back on her hips, pinning her ass to me with my cock plunged deep into her pussy. \"God yes,\" I said, \"you're so warm and tight.\" I began swirling my hips and Carrie followed suit. She twisted around and put her hand on the back of my neck, pulling me down to kiss her. She pushed her tongue into my mouth and swirled it around, mimicking the motion of our sex. I sucked her tongue and massaged it with my own, never breaking rhythm with my thrusts. After kissing passionately and aggressively for several moments, Carrie finally broke the kiss.\n\n\"You like me nice and warm and tight?\" she asked breathily.\n\nI kissed her again several times. Between kisses I said, \"God... yes... I just wonder...\"\n\nCarrie broke off our kiss again. \"Wonder what?\"\n\nI leaned back and slid my hands from her hips onto her ass. I squeezed her ass cheeks in both hands and pushed them wide apart. Carrie's jaw swung open as I spread her, and she jutted her lower jaw out and fixed her gaze upon me as though she could read my thoughts. I ran my finger in a little circle around her asshole, pressing gently against her soft, sensitive flesh, still moist from my earlier ministrations. \"I wonder... how warm and tight your little asshole must be,\" I said lustily, letting my finger slip slightly inside her, her muscle gripping it tightly. I slowed my thrusts into her pussy down to an excruciatingly slow and deliberate pace, teasing her. She continued to thrust her hips back and forth into me, sliding my cock in and out of her. All the while she maintained eye contact with me, willing me to fuck her harder.\n\nFinally, after several moments, she said, \"Then why don't you find out?\" When she said this, I pushed my finger deeper into her ass, and leaned down and kissed her mouth again. This time I pushed my tongue into her mouth, and she massaged it with hers. I pulled back gently and my cock slipped slowly out of her pussy. I broke off our kiss then made a trail of kisses and licks down her back until I came to her ass crack. I pulled my finger out of her asshole and replaced it with my tongue, swirling it in circles and pushing it gently inside her. Carrie dropped her face onto the bed and groaned throatily. I ate her ass lustily for several minutes, moaning along with Carrie as I lapped at her hole.\n\nOnce I had her ass dripping wet again, I raised myself up behind her and pressed the tip of my cock into her crack. \"You want me to find out how tight your little ass is?\" I asked her.\n\n\"Oh god, yes, do it,\" she moaned.\n\n\"Do what? Tell me, slave.\"\n\n\"Fuck my ass and see how tight it is for you.\"\n\n\"It's for me?\"\n\n\"Oh fuck yes, it's all yours.\" Hearing her tell me her asshole was all mine drove me over the edge. I spit onto my palm and rubbed my saliva over the tip of my cock, which was still wet from Carrie's pussy. Once I rubbed it with my spit it became slick and lubricated, ready to enter her. I then pressed my cock forward against her hole, guiding it with my thumb on the tip. She gasped as her hole opened and enveloped the tip of my cock. I paused before letting it sink any deeper, knowing she would need a moment to get used to its size. I kissed the back of her neck softly, reassuring her that I wouldn't move too aggressively and hurt her. She moaned in response to my kisses, then urged me to give her more. \"Do it,\" she prodded, just as she had earlier.\n\nI thrust my hips forward gently at her request and groaned as my cock sank slowly and deeply into her. Her sphincter muscle clenched tightly around my shaft, gripping it firmly. Once inside her, I let her ass cheeks go so that they would tighten around my cock and provide a cushion for my thrusting. I put my hands on her hips and pulled her back into me, providing leverage so that I could bury my cock into her ass as deeply as it could go.\n\n\"Mmmmff,\" Carrie spluttered as the girth of my cock sank deeper into her. Her breathing had become shallow and I knew she was adjusting to having something as big as my cock inside her. I willed myself to hold still so that I didn't hurt her; it wasn't easy with how warm and satiny her tight little asshole felt on my dick. After several moments her breathing steadied and she reached her hand back onto my hip, willing me to give her more. I relaxed at her urging and plunged my cock into her as deeply as it would go. This time she moaned contentedly as I filled her, adjusting completely to how stretched her hole was to accommodate me. She arched her back and growled into my ear, \"Fuck me, master.\"\n\nI grabbed a handful of her hair to keep her back arched, and slid my cock slowly out of her to the tip. Then I sank back into her, slowly but determinedly. She groaned with my thrusting but it wasn't from pain. She was adjusted to my size and I could tell it was starting to feel pleasurable for her. I slowly increased the rhythm and depth of each thrust until we were fucking loudly and aggressively. Carrie was grunting on every thrust into her, almost shouting with intensity. \"Uh... uh... uh... fuck yes!\" she yelled.\n\nI, in turn, groaned into her ear on every thrust, a sound primal and animalistic from deep in my throat. It felt so unbelievably filthy and naughty to be fucking this woman in her ass. On one hand, Myers was right. She did come off like an ice queen at work. Based solely on how she acted in the office, one couldn't possibly imagine she would be willing to take it in the ass. She always had control at work; she always knew the answer to everything and she insisted on being one step ahead in every matter. She was calculating and exacting, not cold exactly, but she always wanted to be in control and she always commanded unequivocal respect. It was impossible to imagine, knowing her solely professionally, that she would sacrifice her control this much. That she would open her most secret place and share it willingly and lovingly. Yet here I was, balls-deep in her asshole, thrusting into her with wanton abandon.",
        "Finally, after several minutes of unbridled, animalistic fucking, I slowed our pace down. I let her hair go and she relaxed her back. I kissed the back of her neck and settled into a slow grind, swirling our hips in unison. I reached my right hand underneath her, and ran my palm from her belly down onto her sex. I ground the heel of my hand against her mons, feeling the short bristles of her pussy hairs tickling it, before curling my fingers over her vulva. \"Mmmmmmm,\" she moaned, as my fingers massaged her labia and the soft hood of flesh just over her clitoris. She reached her arm back and wrapped her hand around my head, pulling my face down into her neck. I nuzzled her and kissed her neck as my fingers spread her pussy lips apart and exposed her clit to my ministrations. \n\nI swirled my index and middle fingers in tight, little circles over her clit as we continued our slow, rhythmic pace. I grabbed her hip with my left hand and pulled her closer to me, allowing my cock to slide as deeply into her as possible. Her ass felt indescribably good. Her hole was tight and unplundered, the muscle rigid and taut gripping my shaft. Her insides were warm and satiny, massaging the length of my cock as I thrust slowly in and out of her. The toned muscles of her ass cheeks clenched with every thrust, tightening her grip on my manhood and driving me to the point of ecstasy. I wouldn't be able to hold out long before I exploded and I needed her to know it.\n\n\"Fuck, Carrie, you feel so fucking good,\" I groaned into her ear, practically slurring every word in my lust for her. \"I won't be able to hold out long.\" Even as I said it I felt the cum boiling up inside my balls, nearly ready to spring forth out of me.\n\n\"Stay with me, baby,\" she moaned back, \"don't cum yet. Just keep fucking me.\"\n\nI willed myself to calm the eruption building in my loins. It wasn't easy; her ass was soft and tight, and the slopping noise of my cock thrusting in and out of her hole was nasty and alluring. Keeping my head clear and holding out for her was becoming a struggle. \"You have to cum with me, baby,\" I pleaded.\n\n\"Just keep fingering me, oh god yes, just like that,\" she moaned. I increased the quickness of my fingers swirling over her clit just slightly in my eagerness. I longed to cum in her so badly, to let my load shoot out of me deep into her. I was beginning to lose the battle of willpower; I could feel my orgasm building. It was a fight now to hold it off.\n\n\"I'm so close, baby, I'm so fucking close,\" I moaned desperately. It felt as if my cum had risen to the tip of my cock and was ready to boil over. She buried her face into the pillows and groaned loudly.\n\n\"Don't stop, oh fuck me hard, don't fucking stop,\" she cried. I was now swirling my fingers over her clit frantically. Her bud was swollen and engorged and I practically pinched it between my fingers in my exuberance. She thrust her hips back and forth desperately as her climax built like a volcano ready to erupt. Finally after several excruciatingly long moments it was as though something exploded inside her and her entire body twitched and convulsed. She pulled her head out of the pillows and let out a primal wail. \"Ahhhhhhhhhhnnnnggg... now baby, cum with me!\"\n\nI took three quick thrusts in and out of her then sank my cock as deeply into her asshole as it would go. I released the cum boiling inside me, and my orgasm enveloped me. I felt spurt after spurt of my cum shoot deep inside her, filling her with my seed. \"Ngaahh, ngaahh, ngaahh,\" I groaned on every spurt, as a deep and satisfied calm began to rush over me.\n\nHer body convulsed below me as her second orgasm overwhelmed her. She twitched and shuddered as wave after wave of pleasure washed over her, bathing her in satisfaction and release. After several moments I slowed my stroking of her clit to let her begin to calm, not wanting to overstimulate her sensitive bud. Her breathing began to slow and her moans became soft, contented sighs. She eased herself down onto the bed and I collapsed on top of her in exhaustion, my cock still buried deep inside her warm, soft ass. I swirled my hips gently and lovingly, feeling the last few drops of my cum spilling into her.\n\nI kissed the back of her neck tenderly as we both gasped for air. Our simultaneous orgasm had drained us both of energy, and I lay on top of her trying to catch my breath. My cock began to soften inside her. After several moments, our breathing finally slowed to normal. With one final kiss on her neck, I propped myself up and rolled slowly off her. The length of my now softened cock slipped slowly out of her ass as I laid down beside her, and her moan almost sounded disappointed that I was no longer inside her.\n\nShe rested her head on my shoulder and I wrapped my arm around her to hold her. I kissed her forehead and said, \"That was fucking unbelievable, Carrie.\"\n\n\"Yeah,\" she replied, \"that was intense.\" She smiled and chuckled. She seemed very at peace and content. Still though, I wanted to know things were ok between us. We'd just played a very erotic game, one in which I had to be very aggressive, and I wanted to be sure I hadn't offended her.\n\n\"Listen, Carrie,\" I began, not knowing how to say what I felt. My conscience was going to weigh on me if I didn't clear the air. \"I want you to know I respect you. I want you to have faith in that. And I want you to trust me. What we just did, I only wanted to please you. That's all I ever want. I just want you to be happy. I want to satisfy you.\"\n\n\"Jim,\" she interrupted, raising her head to look deep into my eyes to make sure she made her point, \"shut the fuck up.\" She said it authoritatively, and then kissed my mouth deeply. We kissed passionately for several moments before she broke the kiss off. \"You made me feel so good tonight, so alive. So don't let your brain mess that up. This night was incredible; being with you is incredible. I really needed this. And wanted it. So relax, ok?\"\n\nI smiled at her. \"Ok,\" I replied. It was good to know she thought so highly of me and the passionate time we spent together.\n\n\"Good,\" she replied, \"and don't let this go to your head or anything, but that's the first time in many years I've given up my ass. And it's the first time I've ever gotten off from it. So be happy, Stillman, for god's sake.\" I smiled silently. It did feel good to know I was special enough to be offered her trust. That she'd opened herself to me and was able to receive pleasure from it. \"Now, if you'll excuse me,\" she continued a moment later, \"I have a lot of you inside me right now, and I have to take care of it.\"\n\nShe snickered and pushed herself up and walked to the bathroom. I watched her naked body as she walked, her lithe, supple form moving gracefully across the room. \"How the hell did I get this lucky?\" I asked myself silently, wondering what stroke of luck had blessed me and allowed me to have such an extraordinary woman. I still wasn't entirely sure why, but Carrie, one of the most remarkable women I'd ever known, and I shared an intense sexual attraction, and every moment alone with her was erotic and arousing.\n\nShe returned from the bathroom several moments later and lay next to me, her head resting against my shoulder, her arm across my chest. There was nothing more to say; the evening was perfect. I kissed her forehead and eventually we both slipped off into sleep.\n\nWhen we awoke the next morning, the sun was already shining brightly. I wondered when we'd have to get on the road, and almost as though she'd read my thoughts, Carrie said, \"We've got another couple hours. I emailed and said we wouldn't be in until later. A little reward for our success.\"\n\nI laughed. \"Thank you for that,\" I told her and nuzzled my face into her neck, giving her soft, little kisses. We relaxed for a while in bed, cuddling against each other. After a while she started fidgeting under the covers. I wondered what she was up to and got my answer a moment later when she pulled a stocking up from under the covers and tossed it on the floor. She then fidgeted again, and I realized she was stripping the stocking off her other leg. She tossed that to the floor as well then lifted her hips up off the bed and pushed down, and a moment later she pulled the garter belt up from under the covers.\n\n\"That was fucking sexy,\" I told her, laughing.\n\nShe snorted in response and jumped on top of me, nibbling my ear. Then she pushed herself up off of me and grabbed my hands, standing beside the bed.\n\n\"Come on, Stillman,\" she coaxed, \"shower time.\"\n\n\"Already,\" I pleaded, \"I thought we had lots of time?\"\n\n\"Oh we do, but you stink and I can't stand it anymore,\" she joked.\n\n\"Oh really, do I now?\" I joked back climbing out of bed. \"And I suppose you smell like roses, huh?\" I asked, grabbing her by the waist and pulling her naked body into mine, pretending to smell her.\n\n\"Of course, I'm a delicate, fragrant flower!\" she laughed.\n\nI scooped her legs up in my arms and lifted her. She squealed and threw her arms around my neck and held me tightly. \"Yeah, you're my delicate flower, all right,\" I laughed, holding her in my arms and carrying her to the bathroom. She nuzzled her face into my neck as I walked.\n\nIn the bathroom she threw open the curtains to the shower and I put her down on her feet in the tub. I stepped in next to her as she turned on the hot water. We had showered together after our first night of lovemaking and it had been a sensual affair. This time was no different as we took turns lathering one another's bodies, cleaning every inch of each other. I ran the bar of soap over her breasts repeatedly, then I knelt down and let it slip between her labia, up into her ass crack, and over every secret curve of her feminine form. She, in turn, ran the soap under my scrotum, into my ass crack, and along the length of my cock, showing me the same caring attention I'd shown her. I felt so close to her, as though no secrets existed between us here beneath the warm, rushing water where our hands caressed every inch of each other. We held and kissed one another passionately and deeply, our bodies sliding slickly against each other, our tongues dancing together, before finally rinsing off and shutting down the water.\n\nWe stepped out of the tub and toweled one another off. When we walked back into the room she stooped over and opened her traveling bag. From it, she pulled out a pair of panties, a bra, jeans, and a light, blousy t-shirt. She threw the clothing on the bed and dropped the towel she had wrapped around her torso to the floor. \"Wait,\" I said, stopping her before she could begin to dress. \"Can I help you?\" I asked.\n\nShe stood naked before me, her hair wrapped in a towel on her head and a surprised look on her face. \"Really?\" she asked.\n\n\"Yeah, I've never done that before. I mean, I've undressed you, but now I want to dress you. Is that ok?\"\n\n\"Yes,\" she replied after thinking about it for a moment, \"I'd really like that actually.\"\n\nI smiled and walked over to her. I picked the panties up off the bed first. It was a semi-transparent black thong, the spaghetti strap running from the crotch up her crack barely thicker than dental floss. I kneeled down and looped her feet into the leg holes, then lifted the panties slowly and seductively up her legs, rubbing her calves and thighs as I did so. When I hoisted them to her crotch, I slowly and softly worked the fabric between her legs and over her sex, pulling up on the back gently as well to work the thong into her crack. My face was just inches from her mound, and I could clearly see the top of her labia and her landing strip of jet black pubic hair through the semi-transparent material. I resisted the urge to push my tongue against her clit through her panties, and raised myself up reluctantly to stand before her.\n\nNext I grabbed the bra, black and semi-transparent to match the panties, and stepped behind her. I held it up so that she could loop her arms into the holes, then pulled it tightly against her. I lifted each breast tenderly and placed them into the cups. This was probably unnecessary but I wanted to squeeze her soft flesh again. Then I fastened the clasp in the middle of her back, and I stepped back in front of her.\n\nI picked the jeans up off the bed and kneeled before her. She lifted each foot in turn, and I pushed her leg into each pant leg. This wasn't easy because the jeans were almost skintight on her. But I slowly worked the waist of the jeans up her legs until I got them all the way up. I made sure to caress each leg to make sure the fabric was straight and not bunched up. Then I stood and grabbed the waistband in both hands, pulling up and snugging the jeans over her waist and ass. I ran my hands over her waist and butt to ensure the jeans were on straight, squeezing her playfully as I did so. Then I buttoned them and pulled the zipper up seductively.\n\nThe whole time Carrie just watched every move I made with a wry smile on her face. She was enjoying this as much as I was, and despite the fact that it was a kind of tongue-in-cheek joke to be dressing her like this, the moment was also very erotic.\n\nI leaned over and grabbed the blousy, light blue t-shirt. I held it open so that she could push her hands into the arm holes, then I lifted her arms over her head and pulled the shirt down onto her, grazing her breasts as I did so. I then pulled the shirt down and straightened it, pulling the shoulders straight and even as well.\n\n\"There you go, Sterling,\" I said once done, \"dressed and ready to face the day.\"\n\nShe stood before me, fully dressed but breathing heavily through her nostrils. After a moment of staring at me she asked, \"So are you as turned on as I am right now?\"\n\n\"You tell me,\" I said and dropped the towel I had wrapped around my waist to the floor. My cock was fully engorged and throbbing. I couldn't believe how intensely erotic it had been to dress Carrie, and I was completely turned on. She gasped when she saw my erection standing at attention before her.\n\n\"Holy shit,\" she whispered hoarsely. Without a word I stepped into her and tore open the button on her jeans. I pulled the flaps aggressively in opposite directions and the zipper slid quickly down. She moaned as I kneeled and grabbed the waistbands of both the jeans and her panties, and tore them savagely down to her ankles. I pushed her back onto the bed and lifted her legs up. I could see her wetness glistening between her lips. In one quick, fluid motion I stepped into her and pushed the head of my cock into her wet pussy. She groaned deeply as I entered her.\n\n\"Not exactly what I had in mind when I asked to dress you,\" I said as I began thrusting in and out of her. Her wetness quickly coated my cock and lubricated each thrust.\n\n\"Yeah, kinda defeats the purpose,\" she said breathlessly.\n\n\"I can't help it, Carrie, I just want to fuck you every minute of the day.\" I pushed her legs up so that her knees were on either side of her head. This let me plunge deeply into her, and I kept my pace rapid and deep, looking at her from over the bunched jeans and panties around her ankles.\n\n\"Fuck, I know,\" she panted, \"I want you all the time too.\" She bucked her hips up to meet my thrusts, and our sex made loud, wet slapping noises. We fucked quickly and aggressively for several minutes. We were both intent on a singular goal. This wasn't relaxed, attentive, or caring lovemaking. This was fucking, unbridled and animalistic. I grabbed her hips to gain leverage and fucked her as hard and as fast as I could. She reached down between her legs and rubbed her clit, practically growling as she met every thrust into her with a roll of her hips.\n\n\"You gonna cum in me, baby?\" she teased.\n\n\"Right after you cum for me,\" I told her.\n\n\"You want me to cum for you?\"\n\n\"Fuck yes, baby, I want you to.\"\n\nI ground my hips into her, giving her the full length of my cock. After several minutes she closed her eyes and started bucking uncontrollably. The orgasm erupted out of her without warning and she screamed in pleasure. Just as her convulsions began to subside she gave me the most devious look and pushed the fingers she'd just been masturbating herself with into my mouth. Her fingers were soaked with her thick, pungent juices, and the taste and smell hit my mouth and nose simultaneously and overwhelmed me. The orgasm exploded out of me in an instant. I felt jet after jet of my seed filling her cunt as I sucked her juice off her fingers. I had completely lost myself in her sexiness and I collapsed on top of her.\n\nWe caught our breath and after several minutes she said, \"Well, that was unexpected and awesome.\"\n\nI laughed breathlessly. \"Yeah, that was ridiculous.\" We both laughed together.\n\n\"Ok Stillman, you know I hate to end this, but we gotta round up Myers and get out of here. They'll be expecting us home soon.\"\n\n\"Right, I know.\" It wasn't what I'd wanted to hear, but I knew it was true. I stood up off of her, and let her legs down gently. I walked around the room and collected my clothes, watching Carrie hoist her panties and jeans up as I dressed.\n\n\"God, you are so unbelievably sexy,\" I told her as she buttoned and zipped her pants.\n\nShe smiled and walked over to me. \"You make me feel so good, Jim,\" she said, and leaned in to kiss me. We held our kiss for several moments. I broke it and said the inevitable.\n\n\"All right. I'll go down and rouse Myers.\"\n\nShe sighed, looking somewhat downcast. \"Ok. Meet you downstairs in like 20?\"\n\n\"Sounds good.\" I kissed her deeply once more and made my way to the door. I opened it and gave her a look over my shoulder. She half-smiled and waved. I smiled back, then left the room. I didn't want our time together to end. The electricity and magnetism between us was palpable and it was such a pleasure to be in her company. I realized how truly happy I was when I was with her.\n\nI made my way down to my room. As I slid the key card in, Myers popped his head out of his door. \"There you are, man, where the fuck you been?\" he asked.\n\n\"Oh I went out for coffee, you know,\" I replied, thinking of the easiest lie I could.\n\n\"You shoulda woke me up, I'da went with you. I need some coffee after the night I had. While you were crying into your pillow all damn night, I went out and scored with this sweet college girl. She goes to Temple, majoring in... uhhhh... fuck if I know. She's a hot piece of ass, who cares what she's majoring in. Name's Lindsay Somethingorother. So I get her back here and I...\"\n\nI really couldn't care less about his stupid conquest story, and it probably wasn't true anyway, so I cut him off. \"Will, I gotta shower, man. Carrie called and said we're leaving in 20 so you should do the same.\"\n\n\"Right yeah, cool. I'll hit the shower. I'll tell ya the story later or something. Girl was like a Hoover fucking vacuum man, I'm telling ya.\"\n\n\"Sure, right,\" I replied half-heartedly as I entered my room. Part of me had wanted to put him in his place. To tell him that while he was in his room conjuring up a fictional story about Temple student Lindsay, I was upstairs fucking Carrie's brains out. But screw it. Let him think I spent the night crying in bed instead of between Carrie's legs. I would never sell her out like that and I didn't give a shit what he thought anyway. But boy would it be nice to put him in his place. Some other time, I thought.\n\nI showered quickly, packed, and met up with Carrie and Myers in the lobby. We checked out and got on the road. Once on the highway, we stopped at the first rest station to gas up and get breakfast. While I was pumping gas, Carrie ran inside for coffee and food. I filled the tank and hopped in the backseat. Myers was driving this time and I figured I'd let Carrie have shotgun. A couple minutes later she came out with three coffees in a carrier and a bunch of packaged snack treats. She came to the open backdoor and dumped the treats on my lap, then handed me the coffee carrier. I looked at the snacks excitedly.",
        "\"Holy shit! Ho-Hos, Coffee Cakes, Twinkies, Sno Balls... nice haul, Sterling! Breakfast of champions!\" I exclaimed.\n\n\"Yeah, I know the best, Stillman,\" she replied laughing, \"you're traveling with a pro here.\" She hooked her hand into the \"oh shit handle\" in the backseat and swung her head into the car smiling. I leaned forward and for a split second we both leaned in to kiss each other. Then just as quickly we realized Myers was in the front seat fiddling with his iPod, so we caught ourselves and backed away from one another, somewhat awkwardly. I couldn't believe how comfortable and affectionate we'd grown toward each other. We had almost just lost our heads.\n\nMyers turned and looked in the backseat. \"No way, throw me up a Twinkie, dude!\" Carrie and I made eye contact and chuckled. I gave Myers his coffee and Twinkie, Carrie jumped in the front seat, and we were on our way. The ride home was pleasant. We reminisced about our job well done, and Carrie totally made fun of Myers when he told the story about his night on the town. She poked holes in every facet of his story until finally he admitted that he didn't really score with a college girl.\n\n\"I totally could have though,\" he protested. \"I was talking to a bunch of girls. If I'd had a wingman I could have landed one! Too bad Jim was such a pussy and had to get his beauty sleep.\" This surprised Carrie. She raised her eyebrows and turned to look at me in the backseat.\n\n\"So you wussed out, huh, Stillman?\" she asked, smirking at me with a twinkle in her eye. \"Not cool enough to go out and score some chicks with Will?\"\n\nMyers laughed thinking Carrie was busting my balls. Little did he know she was actually joking about something much different. I let him have his little moment.\n\n\"I guess I'm just not that good with women, what can I say?\" I said with mock shame in my voice. Carrie locked my eyes with hers and gave me a meaningful, deep look.\n\n\"Well, don't give up, Jim,\" she said smirking once again, \"I think there may still be hope for you yet.\" I returned her smirk and bit my tongue, causing her to giggle. Oblivious to the humor of the situation, Myers just snorted.\n\n\"Ha! Nah, he's just a pussy,\" Myers blurted out, \"don't go all easy on him, Carrie. You busted my balls hard, now bust his too.\" At this, Carrie laughed out loud. I did too but I tried to contain myself. She looked back at me again.\n\n\"No, Stillman doesn't want me busting his balls,\" she said, lowering her eyes to my crotch seductively as she said it.\n\n\"I can take it,\" I retorted, \"I'm a big boy.\" Again she laughed out loud and bit her lower lip looking at me. But Myers changed the subject a moment later as he began recounting a \"true\" story about another one of his conquests. So the rest of the trip went. We were all pleasantly joking around and happy.\n\nWhen we arrived back at the office, we unloaded the car and put our luggage in our respective vehicles. We walked into the building and Myers split off toward his desk. Carrie and I paused together. \"Well, I'll see you soon, Sterling,\" I said, not knowing quite what to say.\n\n\"Yeah, see you soon, Stillman,\" she replied reaching her hand out. I shook her hand in a business-like way, but I held it a second longer than I should have, grazing her fingertips with mine. She smiled.\n\nAs I turned to walk away, I whispered, \"I'll miss you.\"\n\nI barely heard her say as she turned, \"I'll miss you too.\"\n\nI made my way to my desk and started working. It wasn't easy at all. I was completely distracted. It was the same way the next day. And the day after that. In fact, the entire week was pretty much a waste; I got next to nothing done. It was early the next week that I realized I had to do something. Carrie was all I thought about, and I couldn't stay this unproductive and fixated forever. By that point I would have preferred to have her tell me to let it all go then to be stuck in this limbo, this in-between state where we knew we cared about one another but had never defined what we were meant to be to each other. It was gnawing at me. All of a sudden I knew I had to do something. But what? I couldn't march into her office. I couldn't request a meeting with her. So what to do?\n\nThen it dawned on me. I had her cell number saved in my phone from when she had sent me a txt message. I could send her a message and go for broke. She had set up the rules during our night together. She had wanted me to be her master, to lose herself in submission and give her trust over completely to me. Maybe she would do it again.\n\nI checked her schedule for the day and found that she had an hour free in the afternoon. I wasn't sure my plan would work. It was possible she saw our affair as a mistake, that she wished I'd leave her alone and let her forget what we'd done. But at the same time I longed for her, and I worried about her situation.\n\nSummoning all my courage I typed the txt message to her. \"Master has not forgotten his slave. U have free time today @ 3. U will meet me at Holiday Inn on Fairmount Blvd. I will send room #.\" It took all my strength to hit the send key. As I did, I exhaled. It may have been a huge mistake, but I had laid my cards on the table. Minutes seemed like hours as I awaited her response. Or would she even respond? Would she just ignore me to let me know whatever we had was over? After about an hour and a half of excruciating waiting, finally my cell phone buzzed on my desk. I looked down and saw that it was Carrie's number. This was the moment of truth. Would she shoot me down? Tell me to leave her alone and end this exquisite attraction that we shared? I picked the phone up agonizingly slowly, torturing myself. I was afraid to know what the message held. I didn't want her to be out of my life. Again I summoned my strength and clicked the message open.\n\n\"Whatever you say, master,\" it read simply. I exhaled in relief. She did still care about me! My heart raced in my chest. Once again I was distracted but this time for a much better reason. I practically counted the minutes until our afternoon meeting.\n\nI left work at 2:45 and made the quick drive over to the hotel. I rented a room and sent a message to Carrie with the room number. I propped the door open just slightly so that she wasn't locked out, then sat on the bed waiting anxiously for her. My heart beat rapidly but I tried to stay calm. Finally, several minutes later there was a light knock on the door and it swung slowly open. I stood up from the bed as Carrie entered the room. \"Hi,\" I said softly, barely more than a whisper.\n\nShe stood still at the doorway for a moment, then stepped into the room and let the door swing shut on its hinges. She looked into my eyes for a single beat, the air thick between us. \"What took you so fucking long?\" she said quickly, then crossed the room in three quick steps and threw herself into my arms. I ran my hand into the hair on the back of her head and pulled her mouth onto mine. We kissed passionately for several minutes before she pushed me backward onto the bed. She jumped on top of me and stripped off her jacket, tossing it aside. Within seconds we were dry-humping each other furiously, our pent-up desire erupting out of us uncontrollably.\n\nWe fucked each other like animals that day, barely even undressing ourselves in our eagerness. And so began our routine. Once or twice a week for the next three months I would send Carrie a txt telling her to meet me at various hotels. I always checked her schedule to make sure she had free time, and she always wanted to see me when I asked. It wasn't always sex. Sometimes we would talk, and she would tell me things she said only I would understand. Things about work or about life in general. Sometimes we'd just hold each other and take a quick nap as a release from the stressful day. Sometimes one of us would just please the other for fun, with our hands or mouths. It was an arrangement without rules, where we simply enjoyed one another's company in any way we pleased.\n\nThen one day in our third month of meeting up, the company had a bit of a setback. One of our major clients was dropping us for one of our competitors. Carrie had assigned the client to a couple of people on her team that were very competent, but somewhere along the line they had dropped the ball. It wasn't clear how much of the blame would fall on Carrie, but it was a tense time. I hadn't talked to her since the fallout happened, and one day word came around that several members from way up in corporate were coming to meet with her. I checked her schedule that day and saw that she had a long meeting booked in the morning. I sent her a txt that read, \"Know u have a big meeting this am, if u can and want to I can meet in pm.\" After just a few minutes her reply came through, \"Yes, pls.\"\n\nI booked the hotel room and sent the room number to her phone. She never replied back so I feared maybe she wouldn't come. But true to form, she came through the door just minutes after our scheduled meeting time. Her shoulders were somewhat slumped but otherwise she looked ok. I met her at the door and hugged her. \"You wanna talk about it or no? It's up to you,\" I said.\n\nShe gave me her patented half-smile. \"It's ok, Jim. I mean, they're not happy. Shit, I'm not happy. But they're not blaming me.\"\n\n\"Oh, well good,\" I replied. \"That's... a relief.\" I kissed her forehead.\n\n\"You were really worried?\"\n\n\"Well, yeah. I know how much pride you put into your job. I didn't want to see you take a hit on this.\"\n\n\"That's sweet, Jim.\" She raised herself onto her tiptoes and kissed me softly.\n\n\"Don't start with that sweet shit again,\" I joked. She laughed. \"You gotta be pretty pissed though, huh?\"\n\n\"Yes,\" she replied in a short and almost venomous tone. \"I specifically told Neely and Tompkins to bend over backwards for this client, and to keep me in the loop about everything. But did they? Nooooooo. They decide to keep things to themselves and play it cool, so this is what happens! I'm left dangling in the wind for them. Dammit!\" She ran her fingers through her hair in exasperation. I took her by the waist and guided her to the bed.\n\n\"Come here,\" I said gently, \"have a seat and relax.\" She sat on the bed and I sat down behind her. I removed her suit jacket and began to massage her shoulders. \"Listen,\" I told her, \"vent if you want to vent or don't if you don't want to. I know this morning had to be trying for you.\"\n\n\"Thanks, Jim,\" she said softly, leaning back into me as I massaged her. She then told me the details of what had gone down. At times she got heated, but for the most part she was just getting everything off her chest. I was glad that the bigwigs weren't blaming her. They chewed her out a little bit and told her to keep a shorter leash on her team. That wasn't really Carrie's style but all in all it wasn't such a bad thing. She'd just have to be more aware in the future. \n\nAfter several minutes she began to relax and the tension began seeping out of her muscles. She closed her eyes and moaned contentedly as I massaged her. A few minutes later, out of the blue she said, \"Ya know something, Paul didn't even know I was having that meeting this morning.\"\n\nI didn't know how to respond to that. \"Why not?\" I asked.\n\n\"Well, I tried telling him the story the other day, but he changed the subject to something going on in his little political world. It was pretty clear he wasn't paying a bit of attention to what I was saying. So I just didn't bother explaining.\"\n\nI didn't stop massaging her. I also didn't speak. There was nothing I could say to that. Here I was doing anything I could to spend mere minutes with this woman, and every minute I spent with her was the highlight of my week. And he had her there with him every night, and he just didn't care. The thought angered me. He had all this time to be with her, and enjoy her, and he simply didn't give a fuck. I was lost in this thought when suddenly Carrie shifted her weight and lay back onto the bed. She smiled at me as she did so and I just smiled back, admiring her from above. Then she lifted her legs slightly onto the bed, and slowly, seductively, hiked her skirt up. When the hem of the skirt rose to the top of her thighs, she slowly spread her legs and revealed her sex to me.\n\nShe wore a pair of blue and green striped cotton panties. They were incredibly cute. Most of the time she opted for sexy lingerie, silky and seductive, but these were simple and lovely. They had a very \"girl next door\" quality about them, and as soon as I saw them I looked up at her and smiled.\n\n\"They're my lucky panties,\" she said, blushing slightly. \"I've had them for way longer than I'd like to admit. But I kinda thought I might need them today.\" She bit her lip after she said this, expecting me to poke fun at her. But that wasn't my intention at all. Seeing her in her lucky panties just further humanized her for me. It told me she had a vulnerable side, and I liked that she was willing to show it to me.\n\nInstead of making fun, I smiled at her. Then I took the hint and lowered my head slowly into her crotch, not breaking eye contact for a moment, and kissed her warm mound through her lucky panties. She groaned loudly and I could smell and taste her wetness through the panties. I reached up and pushed the crotch of her underwear to one side so that I could lick her bare pussy. And that was how we spent that meeting time. I ate her out, slowly, deliberately, and passionately, until she came for me with an explosive orgasm. My sole wish was to please her, thoroughly and completely.\n\nAfter she came she said, \"God, that was just what I needed, Jim.\"\n\n\"I thought so,\" I replied. \"You had a rough day; I hope that helped make it a little better.\"\n\n\"You have no idea,\" she whispered. I held her for a few minutes after her orgasm. She would have to return to the office soon, but I wished we could have longer together. I buried my face in her hair and inhaled the sweet fragrance of her shampoo. I cherished every second I spent with her. After a few minutes, she sat up and kissed me softly on the mouth.\n\n\"I gotta go, sweetie,\" she said softly.\n\n\"I know. Have a good rest of the day,\" I said as I smoothed her hair behind her ear. She smiled and stood up off the bed. She put her jacket on and headed to the door. She turned the handle, opened the door a few feet, then stopped. She was silhouetted in the door frame by the bright lights in the hall outside. She turned her head halfway back toward me, and said simply, in a calm and even voice, \"I love you.\" Then she turned and looked me in the eye for a split second, and walked out the door.\n\nThe air in the room felt still as the door swung closed behind her. I sat on the bed for several minutes, my heart pounding. I knew everything had just changed. And I knew, beyond any shadow of a doubt, that I loved her too. I had for a very long time, but I could never be honest with myself. I chose to have her any way I could, but I knew deep down inside that it wouldn't be enough. I was in love with a woman married to another man. And now, as the reality of my love for her sprang out of me, I feared I would never truly have her.\n\nI made my way back to work and finished the afternoon in a trance. I went to bed early that night without eating dinner. I had no idea what to do next.\n\nThe following day I made up my mind. Honesty, pure and simple. I cared about and respected her too much not to give her that. So I sent her a txt message. \"Please meet me today. No games. No master. No slave. Just want to talk to you.\"\n\nAfter a few minutes came the reply, \"Of course.\" I waited anxiously in the hotel room that afternoon. I was always anxious with anticipation as I awaited her arrival, but usually it was from excitement. This time, it was fear. Not because I feared what she would say, only because I feared this might be the last time I would ever be alone with her. The thought weighed on my heart like an anchor.\n\nShe walked into the room slowly, like she always did. She gave me a weak smile, as though she too had feared this moment. I stood and went to her. \"Listen, Carrie, just let me talk for a second, ok?\" I asked.\n\n\"Ok,\" she whispered back.\n\n\"Ok...\" I paused not knowing how to begin. Several times I started but then something kept holding me back. Courage, I needed courage. Finally I looked into her eyes and her beauty stilled me. I knew what I had to say. \"Ok, I'm just going to be honest with you, because that's all I've ever been.\"\n\nShe nodded.\n\n\"I love you, Carrie. I have for a long time. I thought I could be strong and not fall for you but now I realize I was a fool for ever thinking I could do that.\"\n\n\"Oh Jim,\" she whispered.\n\n\"Hang on, I gotta get through this,\" I interrupted. \"So I just want you to know that, above and beyond everything else. I love you. I love you because you're the most amazing woman I've ever known. You're smart, you're funny, you're crazy, you're sexy, you're gorgeous, you're just... amazing, Carrie.\"\n\nShe laughed and bit her lower lip.\n\n\"And I just want you to be happy. So I'm going to leave you alone. I'm going to give you whatever space you need to live your life the way you want to. Because if I left it up to myself, so help me god I'd sweep you up right now and take you away from here, somewhere far away and just keep you to myself forever. But I can't do that. I have to let you go so you can do what you need to... whatever makes you happy.\"\n\nA single tear welled up in Carrie's eye. \"What if what makes me happy is you?\" she asked in barely more than a whisper.\n\n\"I don't know,\" I replied, \"but I know it's up to you now. I'm letting you go. I have to. But before I do, I just have to say one more thing. Don't ever settle, Carrie. Don't ever compromise anything that makes you who you are. Because who you are is an incredible person. And I don't ever want to see you sacrifice that. Not one little bit.\"\n\nI pulled her into me and kissed her forehead. When I stepped back, the tear trickled out of her eye and ran down her cheek. I hated seeing it. \"I'm sorry,\" I whispered.\n\n\"Don't be. Thank you, Jim. Thank you... for everything.\" She lowered her head, unable to look me in the eye. \"I'm sorry,\" she said back to me and took a step toward the door.\n\n\"Please don't be either,\" I said. \"I have cherished every minute I've spent with you, Carrie. And I always will.\" After I said this she reached her hand out to me. I took it. Still she was looking straight down, refusing to look at me. She squeezed my hand then let it go suddenly. She paused for a moment, then looked me in the eyes. Tears had welled in her eyes, and my heart broke seeing them. But after a single moment, she turned and opened the door. My heart sank when she stepped through it, and let it close behind her.\n\nI stood in the middle of that hotel room for almost an hour in shock, refusing to believe what I'd just given up. But I knew it was for the best. I could have fought for her, could have pleaded, begged, yelled, demanded. But what good would that have done? I had to let her go and I did, even though it was one of the hardest things I'd ever had to do in my life. After a while I steeled my nerves and went back to the office.\n\nIn the weeks and months that followed, I finally got my strength back and became a creative force once again at work. It wasn't easy though. I had to watch the woman of my dreams walk away from me, and the image of that door closing her from me was permanently etched into my mind. It took a terrible toll on my heart, but in the end it made me stronger.\n\nIt would be quite some time before I saw Carrie again. We went our separate ways and gave one another space. I would see her on occasion in the halls and we would nod pleasantly to one another, disguising our feelings. After some time, we could even smile at each other and wave.",
        "It was a bleak time for me, waiting for her. But time can be a strange friend sometimes. Because with time, some things you thought impossible can suddenly become real. It was a long time before I'd have Carrie again, and longer still before she would become my wife and the mother of my child. But I learned that with time, many things can become possible. And although it may have been a bleak time, one in which I did some crazy and foolish things, it was a necessary one. And it made our eventual, inevitable reunion all the sweeter."
    ],
    "authorname": "johnwhoknew",
    "tags": [
        "affair"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-boss-a-mentor-a-lover-ch-05"
}