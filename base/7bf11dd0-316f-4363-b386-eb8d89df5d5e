{
    "title": "My First Reel Porno",
    "pages": [
        "Jasmine gives her boyfriend the boot after she finds out he posted a secretly recorded video to an amateur porn site. Embarrassed, ashamed, and short the rent, she decides that if her video is going to be out there, she might as well get paid for it. With a little help from her friends, she connects with a reality porn producer and... well; she makes the rent! And then some.\n\nThis story is a work of fiction, intended for adult readers. All characters are adults, eighteen or older, and unusually horny. \n\nTaylor VanCannon.\n\n*****\n\nI sat hunched over a cup of steaming coffee, enjoying my private pity party in a quiet corner of the student lounge.\n\n\"Jasmine?\"\n\nI looked up to see Frida and Joan approaching my table.\n\n\"Problems?\" Frida asked. Her furrowed brow conveyed genuine concern.\n\nI tried my best to smile. It didn't work. Normally, Frida's bubbly personality cheered me up, but not today. \"Sorry, this day is not off to a good start.\"\n\n\"What happened?\"\n\n\"I had to kick Kyle out of the apartment this morning, and now I'm short the full rent for next month.\" I'd dumped him several months ago, but worked out an arrangement for him to sleep on the couch and continue to pay his half of the rent. Bad idea.\n\n\"Why?\"\n\n\"It's a long story. But, the short version is that he posted one of our videos when I wouldn't take him back, on one of those revenge porn sites.\"\n\n\"Get out of here!\" Frida exclaimed, \"What possessed you make a video in the first place?\"\n\n\"I didn't, I mean, he secretly taped me without telling me about it.\" She paused, thinking about what she had just said. \"Well... I guess after the first time, it wasn't so secret.\"\n\n\"You knew about it?\"\n\n\"Can't you just let it go? I mean, it's hard enough putting this behind me when anybody can see it.\"\n\n\"So,\" Joan asked, \"who are you seeing now?\"\n\n\"Shit! I'm so gun shy about that video, I haven't found--\"\n\n\"Jasmine!\" Frida exclaimed, raising her voice. \"Don't tell me you're still seeing Kyle.\" Her short hair was jet black with thick curls that bounced when she shook her head, disgusted with me.\n\nI shrugged my shoulders. It had been a moment of weakness, after he fixed a nice dinner and we drank a bottle of wine. I know I shouldn't have done it, but... he was such a good fuck... and it had been a long dry spell. \"What can I say, I was horny, and he was right there?\"\n\n\"I thought you were over him,\" Frida said.\n\n\"I know, I know, it was a stupid thing to do. It was just one time, I swear.\"\n\n\"So,\" Joan asked, \"has anybody seen it? I mean... you know, said anything to you about it.\" She was a very petite Asian woman with sympathetic eyes. Her long straight hair flowed softly over her shoulders.\n\n\"Yeah,\" I said, disgusted, \"his friends know about it, and who knows how many people they told. He did it with his cell phone, and the damn HD quality is fantastic. There's no hiding the fact that it is me.\"\n\n\"What a rat,\" Frida said, \"can you find another roommate?\"\n\n\"I don't know. Most students are away for the summer, so it's unlikely I'll find someone in time to make the rent. Besides, it's just a one bedroom, and I don't really want to share it with a roommate.\"\n\n\"Can you get extra shifts at the hotel?\" Joan asked.\n\nThe tips were good in the hotel lounge, serving drinks to out-of-town businessmen. That and student loans kept me afloat. \"I picked up one extra shift, but that was all I could get. Besides, I've got classes this summer and I'm just barely keeping up.\" My hotel management major was intense, and I still had at least two years to get my degree.\n\n\"Well,\" Frida said, \"if you lose your place you can crash with us until you get back on your feet.\" They shared an apartment, just off campus.\n\n\"Thanks, but I need to keep my place. I don't want to lose my security deposit, plus, I'll have my landlord all over me for not giving notice.\"\n\n\"How about writing?\" Joan said. \"People are always looking for someone to write their term papers.\"\n\n\"Yeah, that crossed my mind. I've done it before, but just for friends. Too bad it's the wrong time of the school year.\"\n\n\"You remember Cindy...\" Frida said, turning to Joan, \"what was her last name?\"\n\n\"The one that did the porn video?\" Joan asked, \"I think it was Harley, yeah, that's it, Cindy Harley.\"\n\n\"Oh, no!\" I said. \"One sex video is enough for me.\"\n\n\"It was just a suggestion,\" Frida said, \"since you're already out there. I'll bet Kyle got paid for your video.\"\n\n\"No fucking way!\" I said, suddenly unsure of myself, \"Can he do that?\"\n\n\"Not legally,\" Frida said, \"but who will stop him. You'd have to get a lawyer, and that would be big bucks up front.\"\n\n\"Fuck!\" I said, resigned to my fate. \"So, what did Cindy do?\"\n\n\"I'm not sure,\" Frida said, turning to Joan, \"what did she tell you?\"\n\nJoan said, \"She did a reality porn shoot, but it didn't go very well. She was supposed to make $2,000, but she got cold feet and quit halfway through. She came away with $500, I mean, for what she did before she walked out.\"\n\n\"Mmmm,\" I said, \"$500 would get me through next month. Did she say what she had to do?\"\n\n\"Yeah,\" Joan continued, \"this guy, I think his name is Derrick, sets up this casting couch scenario where he gets girls to think he will get them work in the adult film industry. But it is just a ruse, you know, to have sex with them.\"\n\n\"So, it's all fake?\" I asked. \"Like acting?\"\n\n\"Totally fake,\" Joan replied, \"but, it's not really acting. You just have to be yourself.\"\n\n\"But I still have to have sex with the guy while somebody films it, right?\"\n\n\"Yeah,\" Joan said, \"he has a pay website where he posts the videos, you know, like the video he made with Cindy. But it's just him; he does all the filming. I think he even had Cindy hold the camera for some shots.\"\n\nWhat a conundrum. It sounded like I could make some quick money doing a sex video with just one guy. I was just pissed enough learning that Kyle might have been paid, that I gave it serious consideration. \"Text Cindy and see if she still has the guy's number.\"\n\nMoments later, Frida's phone displayed Cindy's reply: Yeah I have it, who wants it?\n\nFrida texted: Jasmine.\n\nCindy: Let's meet, I should try to talk her out of it.\n\n\"How about tonight?\" I asked. \"My shift ends at ten.\"\n\nAfter exchanging a few more texts, Frida said, \"Okay, ten o'clock it is, at your place. Do you want us to be there with you?\"\n\n\"Yeah,\" I replied.\n\n*****\n\nI had just poured us a second round of white zin when Cindy knocked on the door.\n\n\"Come on in,\" I said, opening the door, \"I'm glad you could make it.\"\n\nCindy gave me a hug and asked, \"Are you sure you want to do this?\"\n\n\"Well, no,\" I said, hesitantly, \"but I need the money, so I want to find out a little more. What was it like for you?\"\n\n\"Awkward in the extreme,\" Cindy said, \"I just couldn't get into it, and it shows on the finished video.\"\n\n\"So, you actually made a video?\" I asked, \"Joan said you walked out.\"\n\n\"I walked out...\" Cindy said. \"But... well... maybe I should just show it to you. It's on his website.\"\n\n\"So, he posted your video?\" I asked.\n\n\"Yeah,\" Cindy replied, \"I had to agree to let him do it to get paid.\"\n\n\"Okay, show me... us,\" I said, a little too eagerly, passing her my laptop.\n\nCindy brought up the website, logged in, and selected her video. \"It's kind of short. They're supposed to last about thirty minutes, but mine was less than fifteen.\" She clicked play, and they crowded around the small laptop.\n\n\"Can you put it up on the big screen?\" Cindy asked.\n\n\"Sure,\" I said. A few clicks later, and Cindy's video streamed to the fifty inch HDTV. I handed her the remote control.\n\n\"Ready?\" She clicked play.\n\nCindy walked into a spartan office and introduced herself to Derrick. He invited her to sit down on a tan leather couch, and then took a seat behind the desk, facing her. There were several cameras on various size tripods, along with a handheld camera sitting on the desk. Derrick went through his spiel about being a casting agent who could find lucrative work for her in the adult film industry. When Cindy asked how much, he talked about traveling to exotic locations for shooting and getting paid thousands of dollars.\n\n\"Just so you know,\" Cindy said, \"this is all scripted ahead of time.\"\n\n\"So, you know what's coming?\" I asked.\n\n\"Yes, but he directed me to appear skeptical, you know, make him have to convince me I could make big money,\" Cindy replied.\n\nDerrick conducted an interview, asking about her background, delving into her personal life and getting her to divulge details of her sex life. This went on for several minutes, with Cindy getting more uncomfortable with each question. It was clear she was making up answers and sometimes got confused when she contradicted herself.\n\n\"How much longer does this go on?\" I asked.\n\n\"The interview is almost over, and then I had to strip,\" Cindy said. She stood in front of the desk, looking into the camera. \"He convinces me that the so-called producers want to see me naked before they can cast me in any movies.\"\n\nThe quality of the video surprised me. You could see every freckle on her fair skin, and her blue eyes were bright and sparkling. Her long flaxen hair hung straight down to her lower back; two small pigtails tied with colorful baby blue bands gave her a youthful appearance. Her large breasts strained against a tight halter. Her hard nipples poked the thin fabric, and her low-cut jeans showed off her tight abs.\n\nHe directed her to strip, slowly, taking off one item at a time. When she was down to her black lacy bra and panties, he had her turn and look back over her shoulder, directly into the camera. She had a great body, and it looked sexy in the video.\n\nWhen the bra came off, he had her approach the desk so he could squeeze her tits, roughly, with no tenderness. Like he was checking to make sure they were real. He guessed at her bra size, incorrectly, and Cindy nervously corrected him. He tried to make a joke of it, but it fell flat.\n\nNext he had her turn away from him, bend over and slide her panties down, exposing her ass to the camera. After she kicked them away, he asked her to bend back down and spread her cheeks. As the camera zoomed in, the computer screen filled with a tight shot of Cindy's rosy pink asshole and waxed pussy lips.\n\nI took the remote from Cindy and pressed pause.\n\nCindy turned beet red as Frida and Joan both giggled.\n\nI just stared at the big screen, unsure what to say.\n\nFinally, Frida said, \"I guess it's obvious what Derrick wants.\"\n\n\"Duh, Hindster Productions!\" That got a laugh. Cindy was over her embarrassment. \"He even put it in the fucking contract.\"\n\nI looked at Cindy and asked, \"What's in the contract?\"\n\n\"If you want the full $2,000,\" Cindy said, \"you have to take his cock up your ass... for a cream pie.\"\n\n\"Holy fuck!\" I said. \"And you agreed to do that?\"\n\n\"I signed the contract,\" Cindy said, \"but since either party could quit at any point, I figured that it wouldn't get that far. He had each scene priced out and I figured I would stop at the $500 mark.\"\n\n\"Oh,\" I said, turning back to the screen. Cindy was back on the couch, her legs spread wide, massaging her pussy. She alternated between her clit and her cunt, sliding two fingers deep inside herself. At one point, she brought her fingers to her mouth and tasted them.\n\nDerrick asked her how she tasted.\n\nShe smiled, licking her lips, and then offered her fingers to Derrick.\n\nCindy laughed, \"At least I liked this part.\"\n\nDerrick's head was between her legs, licking her pussy while Cindy held the camera, getting a closeup of his tongue flicking her clit.\n\n\"Did he get you off?\" I asked.\n\n\"Not really,\" Cindy said. \"He was such a sleaze-ball: I just couldn't get turned on.\"\n\nShe was on her knees now, pulling down his pants and taking his limp cock into her mouth. He used two cameras, one handheld looking down on her face, and the other on a tripod, getting a closeup from the side. The images cut back and forth as she sucked him, struggling to get him off. It seemed to take forever, but she finally pulled it off and did a decent job of getting his cum shot on video. She made a half-hearted attempt to play with his cum before swallowing it; it wasn't a convincing performance.\n\n\"This was as far as I would go with him,\" Cindy said.\n\nThe video ended with Cindy and Derrick in a dispute about getting paid for the blow job. She spit at him and stomped out of the office.\n\n\"So, you didn't get paid.\" I said.\n\n\"No,\" Cindy said, \"we improvised that ending for the video and I got the $500. He was a real gentleman about it and understood why I didn't want to continue. He labeled my video a walkout; some of his customers get off watching girls that can't go through with it.\"\n\n\"Fucking pervs,\" Frida said.\n\n\"Maybe,\" Cindy said, \"but looking back, I didn't handle if very well. I mean, I focused on Derrick and what I had to do with him. I should have given more thought to the cameras.\"\n\n\"I don't understand,\" I said, \"what is the difference?\"\n\n\"Derrick's not the type I would choose for a hookup, and I let that show. I should have thought of him as a prop, you know, like one of my dildos, and focused on turning on all the guys watching on their screens, you know... the guys jacking off, wishing they were in Derrick's shoes. Does that make sense?\"\n\n\"Kind of,\" I said, \"did you ever go back to try again.\"\n\n\"I called him once,\" Cindy said, \"but he'd already posted my video and his clients loved it. He wasn't interested in a re-make, so I let it drop.\"\n\n\"What do you think Jasmine?\" Joan asked. \"Could you do it?\"\n\n\"Maybe,\" I said, grinning, \"he's not that bad looking, and I like what Cindy said about thinking of the guys jacking off while they watched me. I'd hook up with him for that.\"\n\n\"Well,\" Cindy said, \"I've still got his number and I get a $200 referral fee if you go through with it. So, don't expect me to talk you out of it.\"\n\n\"Cool,\" I said, \"set it up.\n\n\"*****\n\nI arrived a few minutes early for my 9 a.m. appointment with Derrick. I found Hindster Productions in the directory and headed up to the third floor. The door was ajar and Derrick was sitting at a desk in a small spartan office. The only other piece of furniture was the same tan leather couch in Cindy's video.\n\n\"Hi,\" I said, extending my hand, \"I'm Jasmine, Cindy Harley made an appointment for me.\"\n\nHe took my hand and gave me a warm greeting, then motioned for me to sit on the couch. It felt awkward as I sunk down into the soft leather, looking up at Derrick. He was better looking than I expected, especially after what little I saw of him in the video. He wore a crisp white shirt with grey slacks and had a professional look to him. His neatly cropped beard was more like stubble, and his bald head gave him a handsome appearance.\n\n\"Thanks for coming,\" he said, \"Cindy told me you were interested in getting into the adult film business.\"\n\nI gave him a wry smile, and said, \"I'm sort of already in it, thanks to my ex.\"\n\nHe gave me a quizzical look. \"Oh? Cindy didn't mention that. But that's good; the second time is always easier.\"\n\nI didn't mention that there was no first time, at least not that I knew of at the time. I needed the money, so I just said, \"Yeah, it will.\"\n\n\"Great,\" he said, handing me a clipboard with several sheets of paper, \"This is my standard contract, look it over and let me know if you have questions.\"\n\nIt was pretty much what Cindy had described, starting with an interview, then stripping, masturbating, eating pussy, a blowjob, a straight fuck and then ending with an anal fuck. There were three 'money shots' spelled out, and each had to be done right the first time in order to continue on. I double checked the walkout clause and made sure that I could get $500 after a blowjob. He even spelled out that I had to swallow to get paid.\n\n\"What's this bonus section?\" I asked, \"Cindy didn't mention that.\"\n\n\"It's something new,\" he said, \"an additional incentive to complete the contract. You get $100 each time you get off.\"\n\nI gave him a skeptical look. \"That's easy to fake.\"\n\n\"Not really,\" he replied, \"at least not for the camera. A real orgasm will produce some involuntary muscle contractions in your face and eyes. Those are harder to fake.\"\n\n\"So, if I get off three times,\" I asked, \"that's an extra $300.\"\n\n\"Right,\" he replied, \"but only if you complete the contract, the full $2,000. But, I should warn you, getting off while being filmed is harder than you think, and I rarely pay for more than one orgasm. But, it's something you can shoot for.\"\n\nThe contract seemed so impersonal, like I was a piece of meat ready for inspection and grading. \"I don't know,\" I said, \"do all the girls sign this contract?\"\n\n\"Yes,\" Derrick replied, \"it's a binding agreement, including a release to use all the video as I see fit.\"\n\n\"You mean for your website?\" I asked.\n\n\"Well,\" he replied carefully, fearful that I might head for the hills, \"My website or any others that I can sell to. It's how I make money, it's how I can afford to pay you.\"\n\n\"So, anybody can see it?\"\n\n\"Listen Jasmine,\" he said, \"the only reason to do porn is so people will see it. So, yes, anybody that knows where to look will see it.\"\n\nHe had a point. I sighed, it was now or never. I had seen enough of Cindy's video to know what I had to do. \"What happens after I sign?\"\n\n\"I schedule a time to shoot your video,\" Derrick said. \"It takes about four hours to shoot, and I try to schedule it from 11am to 3pm, when I can use the natural light in this office. Also, I only shoot on Monday, Wednesday and Friday.\"\n\n\"How come?\" I asked, realizing I knew the answer before the words were out of my mouth.\n\nHe laughed, \"I'm not superman, and I need the time to recover to hold up my end of the contract. Besides, it usually takes a full day to edit the video down to 40 minutes.\"\n\nI giggled at his candor. I didn't have that problem. But it raised a concern I had. \"What happens if you can't produce your money shots, do I still get paid.\"\n\n\"Yes,\" he said, coming over to the couch and pointing out a clause in the contract, \"you'll still get paid.\"\n\n\"Okay,\" I said, \"today is Wednesday, when is your next opening?\"\n\nDerrick looked at the calendar on his phone and said, \"Two weeks from this Friday, does that work for you?\"\n\n\"Not really,\" I said, \"that will make me a week late on my rent.\"\n\n\"Sorry,\" he said, \"it's my first opening.\"\n\nI gave him my best fuck me look, along with a little pout, \"I'll have a $50 late fee to pay, any chance you can add that to my contract.\"\n\nIt worked. He made a handwritten note on the contract and said, \"Okay, an extra $50, but only if you complete the full contract.\"\n\nMy initial thought was to get the $500 and run. But the more time I spent with Derrick, the more I warmed up to him, along with the potential for more money. I printed my name and date and then signed the contract.\n\n\"Great,\" he said, looking over the signed contract. \"I'll text you a copy.\"\n\n\"Thanks,\" I said, \"see you back here in two weeks.\"\n\nOn the drive home, I thought about what Cindy had said about performing for the camera, not for Derrick. It was making sense, and with the additional financial incentives, I steeled myself for the possibility of completing the contract, including the anal sex. Fuck! It made me horny just thinking about it.\n\nI was stuck in traffic, waiting for the light to change. I glanced around to see if anyone was watching, and then copped a quick feel of my breast, pinching my hard nipple. Mmmm, it felt so good and left me wanting more. The light changed and traffic started moving, but I kept my hand on my breast, gently massaging it without attracting attention.\n",
        "At the next light, I slipped my other hand down between my legs, pressing my fingers into my crotch. I didn't get why Cindy was so put off by Derrick. I wouldn't pick him for my lover, but jeez, for a quick fuck, why not? I was moving again, but this time I let go of my breast to drive and kept massaging my crotch.\n\nBy the next light, I was so fucking hot I thought I could come. I raised my ass and slipped my panties down, getting one leg free. I spread my legs and pressed a finger between the wet folds of my pussy. God that felt good. I tried to imagine Derrick, standing behind me, fucking me from behind. I tried, but couldn't quite bring myself to imagine a cock in my virgin ass. I pressed down on my mound and slid my finger deep into my cunt. Shit! I had put off getting waxed until I resolved my money troubles, and I could feel the prickly stubble tickling the palm of my hand. I would have to take care of that before my video debut.\n\nDriving again, I eased off with my finger, fearful of getting off while the car was moving. Besides, I was almost home, and could take care of business soon.\n\nI reached to turn off the ignition when my phone chimed with an incoming text. It was from Derrick: Had a cancellation, can you come back now?\n\nOh, my God! I was horny enough, and I definitely needed the money. I knew that I could earn a cum bonus, maybe even several. But, was I ready to take a cock up my ass? I'd showered after my morning dump, so yeah; I was good to go in that department. Should I say something about needing a wax, or just wait until he sees it?\n\n*****\n\n\"That was quick,\" I said, sinking down into Derrick's couch, \"what happened?\"\n\n\"My 11 o'clock reconsidered,\" he said.\n\nMore like cold feet, I thought. Would that happen to me?\n\nSensing my hesitation, he said, \"Look, my customers aren't looking for typical porn, you know, perfect hard bodies fucking endlessly. They're looking for the girl next-door, caught in an awkward situation, unsure of herself, but just horny enough to want to keep going. If it's a little rough around the edges, it just makes it that much better.\"\n\nThat put me at ease, so I didn't mention my stubble. \"Let's do this.\"\n\n\"Great,\" he said, \"step back outside and wait for me to call you. When you come in, remember, you're applying for your first job in the adult film industry, and you don't really know what to expect today. Never let on that we have a contract for today's shoot, or that we've rehearsed. Got it?\"\n\nI nodded and stepped outside. During the drive over, I played out how to shoot my video. I took Cindy's advice to heart, and would focus on the guys who would watch my video, no matter how creepy Derrick got. I'd watched enough porn to know that watching girls that weren't enjoying themselves was a real turnoff. I wanted to come across as a little na\u00efve, perhaps even a little shocked by Derrick, but ultimately eager, ready to try anything. And I wanted to come for the cameras, as many times as I could.\n\n\"I'm Jasmine,\" I said, extending my hand to Derrick, who remained seated behind the desk.\n\n\"Thanks for coming,\" he said, \"how are you today?\"\n\n\"Good,\" I said, giving him a tight smile. I sat upright, my legs tightly pressed together.\n\n\"Are you nervous?\" he asked.\n\n\"A little,\" I replied coyly. \"I mean... I've never done this before.\"\n\n\"Well, just relax,\" he said warmly. \"As we discussed on the phone, I represent film producers looking for new talent. We'll start with an interview, and as you can see, I'm filming right now. This will be what I send to producers, so they can see what you're like and hopefully cast you in one of their projects. Is that okay with you?\"\n\n\"Yes,\" I said, sitting back and opening up my legs ever so slightly. Derrick took forever to get though his bullshit spiel about how glamorous the adult film industry could be. \"Oh, wow!\" I said when he mentioned how much money I could make in one day. I nodded my head enthusiastically when he mentioned some exotic shooting locations. I did a respectable job of falling for it hook, line, and sinker.\n\n\"Why do you think you would be a good choice for my producers?\"\n\nI remembered how Cindy came across in her interview as argumentative, annoyed by Derrick's questions. It was unpleasant to watch. If I was a guy watching this, what kind of response would excite me; make me want to watch more? \"Well,\" I said looking a little shy, \"I get turned on by the thought of somebody watching me have sex, so I... you know... want to do a good job for them.\" I think I even managed a tiny blush.\n\n\"Great,\" he said, \"that is what my producers are looking for. Has somebody watched you have sex before?\"\n\nI recounted the story of my boyfriend secretly taping us and posting it on the internet. \"I get turned on every time I think about some guy watching that video.\"\n\n\"Did you get paid for it?\"\n\n\"I think he did,\" I said, slightly pissed, \"but I didn't get a dime. In fact, that's why I'm here now, to learn how I can get paid for doing a video.\"\n\n\"Good,\" he continued, \"how many partners have you had?\"\n\nI gave him a quizzical look, feigning shock, \"Do you really need to know about that?\"\n\n\"Yes,\" he replied, \"my producers want to make sure you are experienced enough to perform in their videos.\"\n\n\"Ok,\" I said, after a long pause. \"I guess that makes sense.\" I stuck with the truth to avoid the trap Cindy fell into. \"I've had three lovers... and maybe four one-night stands.\" He looked surprised that number was so low, so I added, \"Should I count women?\"\n\nThat answer wiped the concern off his face. \"You enjoy sex with other women?\"\n\n\"I do,\" I said, giving him a wide grin. I took a moment to describe my most recent encounter with the sister of one of my ex-boyfriends. She kept tabs on her brother and would show up unexpectedly, when she knew he wouldn't be around.\n\n\"So, both men and women, that's great,\" he said, \"how about threesomes?\"\n\n\"No,\" I said coyly, \"but it's something I'm willing to try.\"\n\n\"Fantastic,\" he said. \"Do you have a boyfriend now?\"\n\n\"No,\" I said, licking my lips, trying to put off a horny vibe. \"I dumped the last one, the guy that posted the revenge video.\" Watching Derrick's reaction, it was obvious he was getting horny. I wondered how much longer he could resist making his move.\n\n\"You're very exotic,\" he said, switching subjects, \"tell me about your parents.\"\n\n\"You mean their nationality?\" I asked, pretending not to understand.\n\n\"Yes, of course.\"\n\n\"Well, let's see. My mom grew up in Barbados, and my dad was Danish, so I'm a weird mix. My dad was a blue-eyed blond, and my mom had very dark skin.\"\n\n\"Your skin is like milk chocolate, and your hair is much lighter than most black girls. You are very sexy.\"\n\nI gave him a coy smile. I was sexy. \"Thanks, I appreciate that.\"\n\n\"You're welcome,\" he said. \"My producers can't just cast a pretty face; they need to see your body.\"\n\n\"Naked?\" I asked.\n\n\"You look surprised,\" he said.\n\n\"Well... I mean...\" I stammered, \"I wasn't sure what to expect today.\"\n\n\"I understand,\" he said, \"but put yourself in the position of my producers who will cast you for their adult films. They have to know that you will be comfortable performing for the cameras.\"\n\n\"Yes,\" I said, \"that makes sense. When you say performing, what exactly do you mean?\" I was into this now, dishing out the innocent act for the camera.\n\n\"Let's just start with showing them your body,\" he said, ducking the question. \"Stand up here in front of the desk.\"\n\nI stood, reluctantly, clasping my hands together, blocking the view of my fully clothed crotch. How's that for inhibition?\n\n\"Ok,\" he said, \"turn around, and drop your hands to your sides.\"\n\nI gave him a twirl and flared out my long hair. I focused on the camera, trying to see the guys stroking their cocks just behind the lens. I smiled for them, dropping the innocent act for a moment. \"Like that?\"\n\n\"Yes,\" he said, \"now take off your clothes.\" The way he said it nearly turned me off, so matter of fact with no hint of eroticism. If this was going to turn on the audience, it was up to me to do it. It occurred to me that I was only wearing two pieces of clothing, my halter top and pleated skirt. I had already kicked off my panties in the car. This should be interesting.\n\nSensing my hesitation, he said, \"You're doing fine, take all the time you need.\"\n\nI grinned, pulling my halter up and letting my large breasts spill out. I lifted the halter over my head and tossed it aside. Looking into the camera, I copped a quick feel of both breasts and squeezed my hard nipples between my fingers. I was so focused on the camera; I never even saw Derrick's reaction.\n\nHe started to speak, but I put a finger to my lips to silence him. I unzipped the side of my skirt and let it drop to the floor, exposing my nude body. If he noticed my stubble, he didn't react. I grabbed another quick feel of my breasts and then turned around slowly, wiggling my ass for the camera. I knew what was coming next, but decided I better wait for him to ask.\n\n\"No underwear?\" he asked, smiling.\n\n\"Not today,\" I said, with no further explanation.\n\n\"Nice,\" he said, \"now turn your back to me and bend over.\"\n\nI gave him a brief look of concern, then did as he asked, holding the position as he adjusted the camera, zooming it in. \"Like this?\" I asked, looking over my shoulder.\n\n\"Yes,\" he said, \"now reach back and spread your cheeks.\"\n\nCindy's video had not been pleasant to watch. Her performance was more degrading than erotic; at least until the point her asshole filled the screen. It was the moment I saw her tight pink rosebud that it first occurred to me I might make a similar video. Now my moment had arrived. I'd practiced this in front of my mirror and realized that if I grabbed myself just right, I could open up both my asshole and my cunt at the same time. This would blow his mind. \n\n\"Wow!\" It was all he could manage to say when he saw my performance.\n\nI knew it was awesome, and to gild the lily, I tightened my muscles, giving him a little wink with my asshole. Fuck! That turned me on just thinking of the guys watching me on their computers. \"Nice,\" he said, finishing his close-up shots. \"You can sit back down.\"\n\nI eased myself back into the leather couch, letting my legs fall apart. I couldn't resist reaching down and pressing my fingers into my mound.\n\n\"Do you masturbate?\" he asked.\n\n\"Of course,\" I said, giving him a wicked grin.\n\n\"How often?\"\n\n\"Every day,\" I said, letting that sink in, then added \"just like this.\" I worked my fingers in small circles, forcing the outer lips of my pussy open.\n\nHe looked surprised. \"Every day?\"\n\n\"Un-huh,\" I said, moaning softly as my fingers honed in on my clit, \"want to help?\"\n\nHe smiled and pointed his camera down at my glistening pussy. Handing me the camera, he said, \"Get a shot of me going down on you.\"\n\nI raised the camera and pointed it down at my pussy, trying to hold it steady as his soft tongue slid between my wet lips. \"Ahhh...\" Finding my hard button, he flicked it mercilessly with the tip of his tongue. He was good, and the thought of earning an extra $100 crossed my mind. \"You will get me off if you keep that up,\" I said, breathlessly.\n\nHe glanced up and said, \"Turn the camera to film your face when you come,\" then went back down and ravished my clit.\n\nI gazed into the camera lens, trying to hold it steady. I squeezed my breast with my free hand, giving me just the additional stimulus I needed to get off. It was quick, intense, and sent a shock of pleasure coursing through my loins. I don't know if I captured my expression when I got off and really didn't care. He kept up the assault with his tongue, sending tiny little orgasms through my body, like the aftershocks of an earthquake. Exhausted, I dropped the camera to my belly, and felt my rigid body relax, melting back into the soft leather.\n\nComing up for air, he said, \"I think you just earned the $100 bonus.\"\n\n\"You think?\" I asked incredulously, \"I must have come three times.\"\n\nI detected a look of pride in his face as he laughed, \"Let's call it once. Also, we have to be careful to stay in character. I can edit this out, but we can't be referring to our contract.\"\n\n\"All right,\" I said, winking at him, \"but I have more in me.\" For emphasis, I dipped my fingers into my wet pussy and brought them to my mouth, sucking my juices off one finger at a time.\n\n\"Taste good?\" he asked.\n\n\"Yummy,\" I replied. \"Before we start, do you mind if I order a pizza? I missed breakfast, and I'm starving.\"\n\n\"Go ahead.\"\n\nI called in the order and then got back into character.\n\n\"My producers will be impressed with your...\" he hesitated, looking for the right word, \"your enthusiasm.\"\n\nI was pleased with my performance and toyed with him, giving him the innocent girl routine. \"Good,\" I said, giving him a hopeful look, \"do you have everything you need?\"\n\n\"Well,\" he stammered, \"they will want to see how you work with male talent.\"\n\n\"Oh?\" I asked, giving him a look of confusion.\n\n\"Yes,\" he said, regaining his composure. \"They will want to see how well you can suck a cock. Do you like to suck cock?\"\n\nI smiled. \"Of course!\"\n\n\"Good,\" he replied. \"I don't hire actors for auditions, so do you think you can suck my cock?\"\n\nI stood and looked into his eyes. \"Now?\" I did my best to appear incredulous.\n\nHe moved closer to me. \"Of course now, whenever you're ready.\"\n\nI dropped to my knees and unzipped his pants. I looked up, into the camera and smiled. I was ready for this, but didn't want to appear too eager. I tentatively reached into his pants and fished his soft cock out over the top of his underwear. I thumbed his cock head and then gave it a quick lick.\n\nHe unbuckled his pants and let them fall to the floor. \"That's nice.\"\n\nKeeping his cock in my mouth, I slid down his underwear. I placed my hands on his thighs and used only my mouth on his cock. When he was hard, I leaned back and looked up into the camera, licking my lips. I stroked his wet cock with one hand and fondled his balls with the other.\n\nI looked into the camera and imagined how many guys would see this, watching me while they jacked off. It was exhilarating. I held his cock up and licked his balls, keeping my eyes on the camera. I sucked one into my mouth, then the other, all the while thumbing the head of his cock. Derrick was moaning. It was time to go for it.\n\nI sucked him hard, keeping one hand on his balls, and the other wrapped around his cock. In and out, faster... faster... I could tell he was getting close. I wanted the guys to see him come, see him shooting into my mouth.\n\n\"Oh, yeah...\"\n\nI opened wide and jacked him hard, feeling his first shot splatter against the back of my throat. Despite my best efforts, I'm sure I winced.\n\n\"Oh, fuck...\"\n\nI pumped him dry, filling my mouth with his sticky goo. I closed my lips, and then pushed out a little blob, letting it ooze down my chin before slurping it back in. I opened my mouth wide for the camera and used my tongue to push the goo from side to side until I swallowed, with a loud gulp.\n\nI squeezed one last drop of cum from his cock. I touched it with the tip of my tongue and pulled back, stretching it from his cock until it was as thin as a strand of spider web. Before it could break, I slurped it into my mouth and went back down on his cock.\n\n\"Oh my God.\" Derrick said it breathlessly.\n\nHow many guys would blow their loads watching that!\n\nDerrick kicked off his pants and sat down behind the desk. He turned the cameras off. \"Jesus, Jasmine, that will make me some serious coin. You really got into it.\"\n\nI batted my eyes at him. \"Was it worth counting those two extra cum bonuses from before?\" When he didn't respond right away, she added, \"You won't regret it.\"\n\n\"So, you expect three bonuses?\"\n\n\"Sure, I think I'm worth it, don't you?\"\n\nHe nodded, reluctantly. The last thing he wanted to do was have me walk out now. \"Remember, you still have to finish the contract.\"\n\nI'd forgotten about that stipulation. One look at his face, and I knew it wouldn't be long before I had a cock up my ass.\n\nThere was a knock at the door. \"Pizza.\"\n\nDerrick still had a shirt on, but no pants. I was naked. I handed him his pants, along with a twenty from my purse. \"Can you get that?\"\n\nHe opened the door just enough to pass the pizza through.\n\n\"This is for Jasmine, is she here?\"\n\n\"I can take--\"\n\n\"Peter, is that you?\" I said, recognizing the voice. He was a regular at my apartment, delivering at least twice a week. When money was tight, he'd let me slide on the payment. To show my appreciation, I'd send him off with a big smile on his face. He was a local college kid, tall and skinny. Kind of nerdy. However, he had a big dick; would he want to be in my movie debut?\n\n\"Hey Jasmine, what's happening?\"\n\nIf only he knew. Derrick looked at me and shrugged his shoulders.\n\n\"Peter, come on in.\"\n\nHe barely had two feet in the door when he saw me on the couch, stark naked. \"Whoa!\" One look at the cameras was all he needed to figure out what was going on. He set the pizza on the desk and stared at me. \"You're making a porno?\"\n\n\"My first,\" I said. \"I need it to pay the rent this month. Want to watch?\"\n\nHe stammered something that sounded like, \"S-ure.\"\n\n\"Peter, I want you to meet Derrick.\"\n\nDerrick shook his extended hand. \"Good to meet you. Think you can operate a camera?\"\n\nPeter nodded. There was a note of excitement in his voice. \"I can do that.\"\n\n\"Good,\" Derrick said. He slipped out of his pants. \"Let's get started.\"\n\n\"Hey,\" I said, \"what about the pizza. I'm hungry.\"\n\nThat got a laugh, and we took five so I could wolf down two slices.\n\nI checked out Derrick's limp dick. \"I'm ready, but I'm not so sure about you.\"\n\nDerrick gave his soft cock a few tugs. \"This is where a fluffer would come in handy.\"\n\nI grinned and dropped to my knees in front of him. \"Do I get extra?\"\n\nHe thought about it for a moment, and then shook his head.\n\nIt was worth a try. I took his cock all the way into my mouth and sucked him for a minute or two. Nothing. I pulled back and looked up at him. \"What do you need?\"\n\n\"Time,\" Derrick answered.\n\nI glanced over to Peter and noticed his cock nearly bulging out of his pants. \"Can I use a sub?\"\n\nPeter's eyes lit up.\n\nDerrick eyed him. \"Sure, and if he does a good job, I'll even let you count it as part of our contract... one of your money shots.\"\n\n\"Sweet,\" I said. \"What were you going to shoot next?\"\n\n\"Straight fuck, with a cream pie. Not too complicated.\"\n\nPeter was on his feet, brimming with excitement.\n\n\"Want me to dirty it up a little?\" I said, giving Peter a wink. It didn't happen often, but I'd blown him before, when I was short on cash to pay for the pizza. He had great tasting cum.\n\nDerrick's curiosity got the better of him. \"How dirty?\"\u2028I grinned. \"He can suck his junk out of me, and then we can do some cum swapping.\"\n\nPeter's eyes were the size of saucers. He had his shirt off and was unbuckling his pants.\n\n\"Jeez Jasmine!\" Derrick rubbed his hands together. \"Do that and I'll add one more bonus.\"\n\nI smiled at him. \"You won't have to give it to me, I intend to earn it.\"\n\n\"Nice,\" Derrick said, looking over at Peter.\n\nHis pants were around his ankles, and his cock was sticking straight up. It was noticeably bigger than Derrick's.\n\n\"You got all that, Peter?\" Derrick asked.\n\nHe nodded his head enthusiastically.\n\nDerrick set up the equipment and had me stretch out on the couch, with my head resting on the arm cushion. \"Okay, Peter, when I give you the signal, move in and eat her pussy for a minute, then move up and fuck her. Got that?\"\n\n\"What about the finish, I'm not exactly sure what I'm supposed to do?\"",
        "I chuckled. Derrick started to speak, but I cut him off. \"Just listen to me Peter, you'll do fine. I'm ready.\"\n\nDerrick pointed to Peter and motioned him over to the couch.\n\nAs he approached the couch, I said, \"Hey Peter, try to look happy to see me.\"\n\n\"Hi Jasmine,\" he said, a little uneasy.\n\n\"Come here; let me get a close look at that big cock.\" When he was within reach, I wrapped my fingers around his cock and gave it several quick strokes.\n\n\"Mmmm.\" He bent down and kissed me, reaching between my legs and rubbing my mound.\n\nI continued stroking his cock until he broke off the kiss. \"I want you to eat me, Baby, get me off with your tongue.\" I pulled my legs up, opening myself up for him, just as he dove in. His soft tongue was exquisite, sending waves of pleasure through my loins.\n\nDerrick used three cameras, two on tripods, and one handheld, which was getting hard to ignore. He really liked to get in close.\n\nHe was doing such a good job; it tempted me to let him go until I got off. But I could see that Derrick was getting impatient. \"Come up here, Peter, I want your big cock inside me.\"\n\nHe was in me in a flash, sliding his big cock into my wet cunt. He stretched out on top of me, raising his upper body up on his straight arms. His pumping reminded me of a dolphin kick I learned in swimming.\n\nI gave Derrick enough time to get some good close-ups and then stretched my legs out to get a better angle of his cock hitting my clit. I was so close and wanted to come so bad. I tried to wait for him, afraid I might fuck it up if I wasn't ready when he got off. It didn't work.\n\n\"Oh, fuck... Peter... I'm going to come...\"\n\nMy head rolled back and my entire body shuddered. He kept it up, pounding me relentlessly, keeping my orgasm going.\n\n\"Aaaragh,\" he shouted, just as I was getting myself back under control, I felt his release deep inside me.\n\n\"That's it, Baby, come inside me. Fill me with hot cum.\"\n\nHe quit pumping and let me take over. I squeezed on his cock and used gentle thrusts to milk him dry. I grabbed the back of my knees and pulled my legs up, nearly to my chest. \"Baby, that was so good. I want you to go down on me and... and clean me up.\"\n\nHe didn't hesitate, scooting down and pressing his open mouth over my cunt, sucking out his goo. \"That's it, Baby, don't swallow; save it for me.\"\n\nHe crawled up and gazed into my eyes, grinning with his lips tightly closed.\n\nI opened wide and let him drizzle a little into my mouth. I swallowed and licked my lips. \"Oh yeah, Baby, give it to me.\" He locked his lips on mine, giving me about half of what he had sucked out of me. It surprised me to see him swallow the other half.\n\nI gave him a little smack on the ass. \"Nice job, Peter. What do you think Derrick?\"\n\nDerrick's cock was rock hard, and he was ready to go. \"You're a natural Jasmine. You too Peter, nice job.\"\n\n\"Uh-oh,\" I said, giving Peter a wink, \"Looks like I'm about to take Derrick's cock up my ass. Want to stick around for that?\"\n\nPeter grinned and nodded enthusiastically.\n\nDerrick patted the top of the desk and motioned me over. I bent over the desk and waited while he set up the cameras. He placed one in front of my face on a small tripod. Another was behind me, also on a tripod. He handed Peter the handheld. \"Okay, Jasmine, whenever you're ready. I want you looking into the camera in front. I want to film your expression as I enter your ass. Understand?\"\n\nI did. Since it was my first time, I was a little nervous. How much was it going to hurt? I assumed that was why he wanted me looking into the camera. \"Ready,\" I said into the camera.\n\nHe started by massaging my back, getting me to relax. He moved down to my ass, squeezing my cheeks, and then pushing them open. He didn't have to tell Peter to move in for a closeup.\n\n\"Have you had a cock up your ass before?\"\n\nI sighed for the camera and shook my head. \"No, it's my first time... Will it hurt?\"\n\n\"A little,\" Derrick said, \"I'll use plenty of lube. Can you spread your cheeks for me?\"\n\nI reached back and pulled myself open. I hoped I looked as good as Cindy did when her ass filled the screen. The lube was cool and felt good in my ass crack. Next came a finger, wiggling into me. I gasped for the camera and then looked back over my shoulder. \"Careful!\" It was a lie. As soon as his finger went in, I knew I would enjoy it.\n\n\"You're doing great.\"\n\nI felt a second finger slip into my ass. \"Ouch,\" I said, gritting my teeth. \"Not so fast.\" I took another big sigh. Was I protesting too much? I could feel my cunt tingling. Would he notice if I slipped my hand down there?\n\n\"Relax; just one more finger.\"\n\n\"Yeow!\" I cried out. \"Easy... It hurts.\" That had to sound good for the cameras. I wondered if he knew I was enjoying it.\n\n\"You're doing fine, keep looking into the camera.\"\n\n\"Whew!\" He pulled out his fingers. I took a deep breath and looked back again. He was coating his cock with lube.\n\n\"I'm going to put my cock in... Are you still okay with this?\"\n\n\"Uh-huh.\" I felt the head of his cock up against my asshole. I gripped the sides of the desk and grimaced for the camera. Just the tip of his cock in my ass had my pussy quivering. I could feel myself on the verge of getting off.\n\n\"Look into the camera and push back, just a little.\"\n\nI gripped the desk and pushed back against his cock, forcing the head into my tight ass. I gasped for the camera. It felt so fucking good. Could I come with just his cock in my ass? \n\n\"I'm going in now.\"\n\nHe was halfway inside me when I felt an orgasm bubble up from my cunt. I slammed myself back, impaling myself on his cock. My rigid body froze on his cock, gripped in the throes of a pulsing orgasm.\n\n\"What happened?\" Derrick asked.\n\n\"I got off,\" I said, \"that's what happened. It was fantastic. Can you fucking believe it?\"\n\nHe laughed. \"Not really, I barely had my cock in you. That's quite a talent you have. Is it okay if I finish?\"\n\nI looked over my shoulder and caught sight of Peter's big cock, standing at attention.\n\nPeter blurted out, \"Can I try it?\"\n\nDerrick glared at him, then at me. \"It's up to you.\"\n\nI hesitated. Could I handle that monster? Faking the pain of having Derrick in my ass was easy. With Peter, it might be the real thing. Could I take it? I nodded my head and turned back to the camera. \"Go easy, Peter, your cock is so big. Don't hurt me.\"\n\nHe was behind me in a flash, the head of his cock pushing into my asshole. \"Ouch!\" That was for real. It felt like he was tearing me open. \"Use more lube.\"\n\nHe pulled out and slathered his cock with lube. It went in a little easier this time. I was so distracted by the pain; the thought of getting off again never occurred to me. I pushed back, just a little. It hurt like hell, but I was determined to push through it.\n\n\"Oh fuck! It's so big.\" I let go of the desk and reached back to stretch my cheeks open. It helped a little.\n\n\"You're doing fine,\" Derrick said, \"just a little more to go.\" He reached between my legs and fingered my gash. \"That should help.\"\n\nI closed my eyes and focused on Derrick's hand, massaging my clit. I tried my best to ignore the big cock inching its way into my ass. He nicked my hard clit with his fingernail. It sent a shiver through me and got me thinking I could get off again. I looked over my shoulder and was shocked to find Peter all the way up my ass.\n\n\"Are you okay?\" Peter asked. \"It's so fucking tight.\"\n\nDerrick worked my clit, driving me to the edge of another orgasm. I was panting so hard I could barely get the words out. \"Yes... yes... Peter... Fuck me now... hard... make me come...\"\n\nI felt his cock slamming into me, oblivious to any pain. So close. Derrick pressed hard on my clit, sending me into orbit. I shrieked, my body convulsing with jolts of pleasure.\n\n\"Aaaragh!\"\n\nAs my orgasm ebbed, I realized that Peter had just blown his load in my ass. He pumped me hard, draining his cock into me. By now, I felt only pleasure; there was no pain.\n\nDerrick moved in close with the camera and captured Peter pulling his cock out of my ass. I could feel his cum oozing out of me. That would make Derrick happy.\n\n\"Holy fuck!\" Derrick shouted. \"That was incredible. Did you come again? How many times is that?\"\n\n\"Too many to count,\" I said. It was the truth. I lost count around five. I was exhausted, but I knew that Derrick had to get off one more time to fulfill my contract. I flipped over on my back, drawing my legs up, exposing my oozing asshole.\n\n\"For me?\" Derrick asked.\n\nApparently he'd forgotten who was in control. \"I'm good for one more.\"\n\nHis hard cock easily slipped into my cum-filled ass. This time, I fingered myself, keeping my eyes locked on his.\n\nHe gritted his teeth and pounded me hard, making a loud slapping sound with each stroke. He didn't last long. But then again, neither did I. It was a gentle orgasm, sending little waves of pleasure coursing through my body.\n\n\"Here it...\"\n\nI felt him erupt inside me. He had a look of sheer joy on his face. I'd like to think it was from fucking me, but it was probably because he knew that he had a blockbuster video on his hands. He pulled out and got several more close-ups of his cum oozing out of my ass.\n\nHe pulled a box of wet-wipes from the desk drawer. Cleaning up in front of each other would have been awkward, except for the fact that we couldn't stop talking about the video. Which scene was best? Who had the best cum shot? Derrick couldn't wait to get started on the editing and promised to call as soon as he posted it.\n\nHe was so preoccupied with packing up his equipment that I was the one who had to bring up payment. Fortunately, he was only too happy to pay. He pealed of $3,000 in hundred-dollar bills. \"That should take care of it. You must have come at least ten times.\"\n\nHe was joking, but just a little. I gratefully accepted the money and gave him my phone number.\n\nPeter insisted that I take his, too.\n\n*****\n\nI waved to Frida and Joan from across the cafeteria and walked over to join them.\n\n\"You're in a good mood,\" Frida said. \"Did you get your rent taken care of?\"\n\nI gave her a big grin.\n\n\"You already made the video?\" Joan asked.\n\nI nodded. Getting the rent monkey off my back was a big relief, and the video made it possible. \"I did, and Derrick should post it this Friday.\"\n\n\"You haven't seen it?\"\n\n\"Not yet, but I know what's in it. Duh! I was there.\"\n\nThey both giggled. \"How much did you get?\" asked Joan.\n\nI leaned in, bringing them in close to me. I didn't want anybody overhearing us. \"$3,000.\"\n\nBoth were skeptical.\n\n\"I got the full $2,000, plus a $1,000 bonus.\"\n\nJoan was the first to realize what that meant. \"You took him up your ass?\"\n\n\"Hush! Not so loud. I was going to stop at $500, like Cindy did. But there was something new in my contract--bonuses. By the time I got to $500, I already had $300 in bonuses.\"\n\n\"So, why didn't you quit then?\"\n\n\"He only paid the bonuses if I completed the original contract. If I quit, I would lose the $300.\"\n\nConfused, Joan asked, \"Oh... So what were the bonuses for?\"\n\nI flashed them both eyebrows. Twice. \"Coming, $100 for each time.\"\n\nFrida was incredulous. \"You got him off three times?\"\n\nI shook my head, but didn't tell them any more.\n\nJoan figured it out. \"You got off three times?\"\n\nI nodded.\n\nThe wheels were turning in Frida's head. \"At $100 a pop?\"\n\nJoan blurted out, \"That's ten... Holy shit! No Way!\"\n\n\"Way!\" I said it proudly. \"But I'm not even sure, we lost count. He was so happy with my performance, he made it an even $1,000.\"\n\nFrida asked, \"What about him?\"\n\n\"Yeah, he did okay. He came at least twice, maybe three times, I can't remember. And Peter got off twice.\"\n\n\"Who?\"\n\nI couldn't help but laugh. \"The pizza delivery guy. There's one in every porno, right?\"\n\nFrida shook her head. \"Cute, tell us what really happened.\"\n\nI laughed. \"Why don't you come over Friday, and we can all watch my debut together? Bring Cindy.\"\n\n\"It's a deal,\" Joan said.\n\n\"Yeah, and invite the pizza guy, too,\" Frida said sarcastically.\n\nThey laughed hard enough to attract attention from the surrounding tables.\n\n\"Maybe I will.\"\n\n*****\n\n\"Hi,\" I said, giving both Joan and Frida big hugs. \"Where's Cindy?\"\n\n\"She texted that she would be a few minutes late.\"\n\nI had just opened a bottle of white zin when a text came in. I glanced down at my phone, expecting it to be Cindy. \"It's Peter.\"\n\n\"Who?\" Frida asked.\n\n\"The pizza guy, the one I was telling you about.\"\n\nFrida stared at me. \"You were serious?\"\n\n\"Of course,\" I said, laughing hysterically. \"You didn't believe me?\"\n\nJoan and Frida were slow to realize what they were in for. Watching my video with the girls was one thing, but having a guy around?\n\n\"Shit!\" Frida said. \"I could use a drink. I have to tell you, I thought that story about the pizza guy was complete bullshit. I'm a little nervous about him coming over... I mean, we'll be watching porn...\" She let her words hang.\n\n\"I'll second that,\" Joan said. \"I still don't understand why you invited him over.\"\n\nI poured the wine. \"Drink up! You two seem to have forgotten, that I'm the one that's in this porn, along with Peter. Besides, I promised I'd let him see the finished video.\"\n\n\"Why didn't you tell us?\" Joan asked.\n\n\"I thought I did, yesterday, in the cafeteria.\"\n\n\"Okay,\" Frida said. \"It's our fault for not believing you, but it's just that... I mean... what if... Oh fuck it!\"\n\nJoan laughed. \"Jasmine's right, it's her video, so it's her call. Why's he texting you?\"\n\n\"He wants to know who will be here. I guess your two aren't the only ones with a case of nerves.\"\n\nI texted back: Three of my girlfriends; you haven't met them. I held up the phone for the girls to see before pressing send.\n\nPeter: I was afraid of that.\n\nMe: You'll be fine. Bring us a pizza.\n\nPeter: Can I bring a friend?\n\nJoan saw the text. \"No fucking way!\"\n\n\"Calm down, Joan,\" Frida said. \"I can't blame him, there will be four of us girls.\"\n\nI stayed out of it and let the two of them hash it out. The doorbell rang. \"Cindy's here, we'll let her decide.\"\n\nJoan did her best, but Cindy wouldn't have any of it. She figured since her ass was all over the internet, what's a few more guys looking on? She won the argument.\n\nMe: Sounds good, when can you be here?\n\nPeter: 30 min. Should I bring beer?\n\nMe: Unless you want wine.\n\nPeter: Be there soon.\n\nWe were well into our third glass of wine, and more than a little buzzed when Peter and Steve arrived. Wow! Where in the hell did Peter find him? Everything missing from Peter's skinny ass, Steve had in spades. He wore tight jeans, and an even tighter tee.\n\n\"Hi, I'm Steve,\" he said, in a deep baritone voice. \"And you know Peter.\" There was no doubt who was in charge of this duo.\n\nI took his hand and made the introductions, trying my best not to stammer. When they took a seat on the couch, Frida and Joan were quick to squeeze in next to Steve, blocking out Cindy and I. So much for their reluctance to watch porn with guys around.\n\nI served up the pizza and got the guys their beers. I thought we'd chat for a while and finish eating, but Cindy had other ideas. We were barely settled into the crowded couch when she selected her video and clicked play.\n\nIt annoyed me. I had planned to ease into this. I was still a little nervous about having my friends watch me... Fuck! Too late for that, the video started.\n\nCindy faced the guys. \"This is the one I did. From what I hear about Jasmine's, hers will be much better.\" She winked at Peter. \"Isn't that right, Peter?\"\n\nPeter knew exactly how much better and gave me two thumbs up. If Steve knew about it, he didn't let on.\n\nI clicked pause when Cindy's ass filled the screen, prompting some nervous laughter in the room.\n\n\"Jasmine!\"\n\nFrida whispered something to Steve, causing him to blush.\n\nHe stood, doing his best to hide the bulge in his tight pants. \"I think I need another beer.\"\n\nHe handed Peter a fresh beer, and tipped his up for a long swig.\n\n\"I think we've all seen enough of my ass,\" Cindy said. \"Please start the video.\"\n\n\"Never!\" I teased. That got a rowdy cheer from the guys and prompted a round of applause for Cindy. I pressed play.\n\nCindy's blowjob definitely focused their attention. Frida and Joan each kept a hand on Steve's thigh. Those tight jeans had to be causing him problems.\n\nWhen Cindy walked out of her video, the guys booed. I handed them two more beers and cued up my video. I started to explain the setup and why I was doing the video when Cindy interrupted me.\n\n\"We've already heard it, and I don't think Peter and Steve are interested. Just play the video.\"\n\nI shook my head in disgust. I'd had a great time making the video, but was still a little nervous about seeing it for the first time, with so many people watching.\n\nCindy grabbed the remote and started the video.\n\nThe contrast with Cindy's video was immediately clear. I was much more relaxed, and the interview was interesting to watch. This time, it was Cindy that paused the video, just as my ass filled the screen.\n\nIt got an even bigger round of applause than last time.\n\nI smiled and took a slight bow.\n\n\"Steve, whose ass do you like best?\" It was Joan. It had to be the wine.\n\nSteve tried to keep his cool, but fell short and could only stammer something unintelligible.\n\nPeter asked, \"Can you put them both up, side by side?\"\n\nFrida blurted out, \"What about us?\"\n\nThat surprised Peter. \"You want us to pick the best ass, from all four of you?\" He pointed to the screen. \"Like that?\"\n\nFrida realized what she had done and tried to walk it back.\n\nIt was Steve who sealed the deal. \"That's a great idea, Peter. What do you say girls, you up for that?\"\n\nJoan mounted a weak protest before caving in. All four of us were committed to letting the guys decide which one of us had the best ass.\n\n\"Let's ease into this,\" I said. \"How about we start the judging with our tops?\" I stood in front of the couch and pulled my shirt over my head. \"Who will join me?\"\n\nSteve gave Frida and Joan a nudge to get them to their feet. On the count of three, all four of us bared our breasts.\n\nIt wasn't much of a contest. We massaged our tits and pinched our nipples, putting on a show for the guys. Despite our best efforts, both guys immediately went with Frida, the one with the biggest tits. She pumped her fists and gave her tits a nice shimmy, getting a round of applause.\n\nSince I seemed to be in charge, I asked, \"Ready to judge our asses?\"\n\n\"What about them?\" Cindy asked, pointing to the guys. \"It's their turn to get judged.\" She was not happy about losing the tit contest and wanted to get even with the guys.\n\n\"Yeah!\" Frida chimed in. We all joined in with a loud cheer. We sealed their fate. We pulled them off the couch and changed places.\n\nThey pulled their shirts over their heads and gave us their best body building poses. It was no contest. Steve was a stud.\n\nJoan wagged a finger at them. \"That's not what we're judging.\"\n\nFrida caught on right away. \"Joan's right, you judged our tits, we're judging your cocks.\"\n\nSteve held up his hands, trying to protest. That got us chanting, \"Cocks... Cocks... Cocks...\"\n\nPeter smiled. He knew he'd just gone from a loser to the winner. However, when the two sprung their hard cocks free, it was a split decision. Cindy and I went with Peter, the largest. Frida and Joan had the hots for Steve and could care less what he was packing.\n\nPeter gave Steve a high five. \"Ready to judge some ass?\"\n\nThat got a giggle from all of us girls. \"Pussies first,\" I said.\n\nWe girls swapped places and took off the rest of our clothes. The guys took their time, giving their cocks the occasional stroke as they contemplated their choices. Cindy was shaved, and I was freshly waxed. Frida's thick bush was neatly trimmed, but still obscured the lips of her pussy. Joan's hair was untrimmed, wispy and straight, barely covering her lips. Another split decision. Steve picked Joan and Peter went with me, although I think I had an inside edge, especially after having fucked him twice in the video.",
        "Already buzzed from the wine, I was ready to jump either of the hard cocks facing us. And we hadn't even got to the fantastic parts of my video. I got the girls to their feet, and we lined up in front of the guys, locked arms, and then bent down at the waist, showing off our asses.\n\nSteve couldn't resist reaching out with both hands, fondling our ass cheeks.\n\n\"No, no, no!\" Peter said. \"It has to be like you did in the video.\"\n\nThere was no question what he wanted. We spread out a little, enough so we could look back at the guys from between our legs. They were eager to see what we were about to show them. We unlocked arms, reached back and spread our cheeks for them. I could only imagine what was going though their minds. Four tight little assholes staring back at them.\n\nJoan's giggle was infectious, and soon we were laughing too hard to maintain our poses. We stood and demanded to know who the winner was. Joan got the nod, the petite Asian with the tight little ass. When I asked why, they only shrugged their shoulders.\n\nWe got comfortable on the couch and got back to my video. Joan and Frida couldn't keep their hands off Steve's cock. It wasn't long before he slipped his hands between their legs. By the time Derrick made me come for the first time, eating my pussy, all four of us were ready for more.\n\n\"How about another contest,\" Cindy suggested. There was no question what she had in mind. The ground rules were simple. The guys would change girls every thirty seconds, and the first one to make one of us come would be the winner. Before we started, Cindy added a new rule. \"No using your own fingers! It has to be the guys.\"\n\nWith the guys on their knees, and the four of us on the couch, our legs pulled up and spread for them, I set a 30 second countdown time on my phone and said, \"Go.\"\n\nSteve's tongue was magical, even better than Derrick's. Too bad the time was so short. The thirty second wait for Peter's tongue was much longer. I was dying to finger my clit. Damn Cindy's last-minute rule. Peter's tongue got me back in the grove, but was nowhere near as skilled as Steve's\n\nI was on my eighth tongue job and close to getting off when Frida shrieked. It was Steve's tongue that finished her off. He went well past his thirty seconds to keep her orgasm going, until she finally cried uncle.\n\nThere was a brief discussion about what exactly Steve had won, until Cindy complained about being left hanging, unsatisfied. The guys offered to take care of that and returned to the contest. Joan was the last to get off. Although Steve won the contest, Peter was the one to get both Cindy and me off.\n\nWe got back to the video and watched Derrick get a first rate blow job. After playing with his cum, the next contest was an easy decision. The four of us sat on the edge of the couch and gobbled in cocks, one at a time, using the same thirty second rule. And no hands.\n\nSteve's cock was just the right size for sucking and stuck straight out. It was relatively easy to take deep. Peter was the problem. His was a banana shape that pointed north and was just too fucking big. He received a lot of ball sucking and licking up the underside of his cock. It was no surprise that Steve blew his load on the second round. Joan was the winner and made a show of swallowing his cum. Peter lasted until the fourth round, giving Cindy second place.\n\nWith both guys out of commission for a while, I served up another round of drinks and fixed a platter of cheese and crackers. I started the video again. There was much discussion about exactly what Joan and Steve had won.\n\nPeter got a round of applause after our cum-swapping scene. It was hot. By the time Derrick blew his load in my ass, Peter and Steve were both sporting boners, with a little help from the girls on either side of them.\n\nThe video ended with Peter and Derrick blowing their loads into my ass. It got a big round of applause. After much discussion, we decided that the prizes would be winner's choice. They could re-enact any scene in the video, with a partner of their choice.\n\nJoan went first and picked Steve for the cum swapping scene. I pointed out that she couldn't do that, since Steve was already a winner and got to pick for himself. Joan took one look at Peter's big cock and grimaced.\n\n\"Hey,\" I said, \"it could be worse. You could have picked the ass-fuck scene.\" That got a big laugh, and a relieved smile from Joan.\n\nShe got into position on the couch and motioned Peter forward. She gasped and bit down on her lower lip as he entered her, filling her tight cunt. We had a front-row seat as Peter pounded her tiny body. I'm sure she came twice, before Peter unload inside her. As he did with me, he sucked his cum out of her oozing cunt and drizzled it into her waiting mouth. She lapped it up and got a huge round of applause.\n\nIt was Steve's turn, and each of us knew someone was going to take it up the ass. But who? With a gleam in his eye, he pointed to Frida. She clasped her hand over her mouth in mock protest. She knew it was coming. Her first ass-fuck would have an audience.\n\nI retrieved a bottle of lube from my bedroom and waved it at Frida, daring her to turn it down. She took the lube and put a dab on her finger. She was just buzzed enough to try it. She faced Steve and fingered her ass, wrinkling her nose as she wiggled her slippery finger in.\n\n\"I don't know,\" she said, heaving a big sigh. \"It... feels kind of funny.\"\n\nOh-oh. I knew cold feet when I saw it. I took the lube from her hand. \"Let me help.\"\n\nShe gave me a nervous smile. I pulled Steve up off the couch and had Frida kneel on it. I bent her forward until she was resting her tits on the top of the couch. Her tight ass stuck out, begging to be touched. \"Spread your cheeks,\" I said firmly. She obeyed, without question, exposing her tight rosebud.\n\nSteve watched closely as I worked my fingers into her ass. After getting three fingers in, I coated Steve's cock and turned him loose. He was gentle, entering her slowly. If it hurt, she didn't let on. \"Good girl,\" I said when he was all the way in.\n\nIt took her a while to get used to Steve's cock in her ass, but once she did, she grunted passionately with each thrust. Her tight ass was too much for Steve. He blew his load before Frida ever got close to getting off. When he pulled out, she turned and looked back. \"The scene includes Peter, don't I get him too?\" Apparently size no longer mattered.\n\nPeter came up behind her. He hadn't fully recovered from fucking Joan, but gave it a try. He was barely hard enough to squeeze the head of his cock into her asshole. She held her breath and groaned loudly when he was all the way in. He lasted a long time and had Frida shrieking with pleasure several times. She was relieved when he finally erupted inside her, bringing the evening to an end.\n\nWhat a night. I could only hope the promise to do it again, soon, would prove to be true. After all, Joan and Cindy had yet to have their virgin asses challenged."
    ],
    "authorname": "tv46",
    "tags": [
        "sex video",
        "double penetration",
        "cum in mouth",
        "cream pie",
        "big cock",
        "hairy pussy",
        "snowball",
        "anal"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/my-first-reel-porno"
}