{
    "title": "Helping Her, Saving Me Ch. 02",
    "pages": [
        "Helping Her, Saving Me Ch 2\n\nMany thanks for the feedback and comments on the first chapter, which have encouraged me to continue -- which is great, as I felt this story had the potential to go on for a while longer. All characters are over the age of 18 and, regrettably, are not based on anybody I know.\n\nLike most Lit authors, it's always a thrill to log in and see that somebody's left a comment. Please do, even if it's just a few words of praise or criticism. Thanks.\n\n \n\nI made my way more than a little nervously down the stairs.\n\nI was acutely aware of the ridiculousness of the naked male body. I was in reasonable shape, but now I wished I'd spent more time exercising and less time in the library. And how could any woman look at male genitals in their unaroused state and want to do anything but laugh?\n\nI could hear Belinda talking to the girls in the kitchen. As I came into the room there was a moment of silence.\n\nThey were all naked too, of course. Ellie was leaning on the breakfast bar with her bottom angled towards me and her breasts almost touching the counter. In any other circumstances it would have looked provocative and saucy, but at that moment it looked perfectly natural and innocent. Jessica, her younger sister, was perched on a stool eating a piece of toast. Her mouth formed a perfect 'o' as she stared at me.\n\nThey were, of course, quite gorgeous. Both were blonde, though Ellie's hair was much more at the yellow-ish end of that spectrum and Jessica was darker. Jessica was also slightly bustier than her sister, though both seemed perfectly proportioned in that department to me. Their tanned, glowing, taut skin exuded youthfulness and health.\n\nBut I was careful not to ogle them too obviously, of course. The only woman who mattered to me, at that moment, was their mother.\n\nBelinda was pouring some water into the coffee machine. She looked at me, a brief mischievous glance, and then asked me casually if I'd like a cappuccino.\n\n\"Er, thank you,\" I said. \"That'd be nice.\"\n\nI may have been discreet in my inspection of them, but Ellie and Jess quite blatantly looked me up and down. I stood up straight and tried not to look too obvious about sucking my stomach in.\n\n\"So,\" Ellie said, \"you've come over to the dark side. I wondered if you would.\"\n\n\"Holy fucking shit!\" said Jess, finding her voice.\n\nHer mother tutted.\n\n\"Sorry... but... like... wow!\"\n\n\"I hope you don't mind,\" I said. Which was a fairly gormless thing to say, but I challenge you to find the right words when you're naked for the first time in front of your lover's equally naked daughters.\n\nEllie looked at me once more, then at her mother, then back to me.\n\n\"So does this mean, you and mum, are like... together?\"\n\nI decided to let Belinda answer that one.\n\n\"Yes,\" she said. \"Rob and I are... together, as you say. He's decided to stay here, for the time being at least. In town, I mean.\"\n\nI looked at the girls for their reaction.\n\n\"That's great!\" Jessica's delight was clearly genuine. \"Penny's going to be so pleased!\"\n\n\"I hope so,\" I said.\n\n\"Oh come on! You know she will be.\"\n\nI looked at Ellie. She didn't seem to be taking the news quite as enthusiastically. She didn't look downcast, not exactly, but she certainly didn't seem as pleased as her sister.\n\n\"I hope it all works out for you,\" she said, slightly coolly, and went back to looking at her phone. Belinda and I exchanged glances. Belinda just seemed amused, but I was a little more worried. Jessica and Penny would be off to their college soon, a ninety-minute drive away, but Ellie was going to be living here. More than that, I was going to be a student at the same place as her, so we'd be seeing a lot of each other. If she didn't approve of her mother's new boyfriend, that was going to be difficult.\n\nBut, for now, I found myself on a stool, with Belinda on one side and Jess on the other, all of us completely naked and sipping our drinks. I wouldn't say I felt comfortable, it would be some time before I stopped even thinking about the novelty of not wearing any clothes -- but I did feel strangely liberated. It was like when you realise you have an ability to do something that you'd previously been unaware of, or doubtful about. And then, when you do it, you wish you'd done it earlier.\n\n**\n\nA week later I drove Penny to college while Belinda followed in her car with Ellie and Jessica.\n\nWe found her hall of residence where she'd be sharing a room with Jess on the campus for the first year. I carried an unfeasibly large number of bags from the car up to her room, then found myself doing the same for Jess.\n\n\"You're so... useful,\" said Jess, appreciatively. \"I mean, men can be quite stupid and boorish sometimes, but you are great at carrying stuff.\"\n\n\"Thanks,\" I said. \"That's the words on my tombstone sorted.\"\n\n\"I think he's very useful in all sorts of ways,\" said Belinda, taking my arm and squeezing it gently.\n\nJess rolled her eyes. \"Oh please! Don't be gross! I don't want to think about that!\" But she was smiling as she did so. I thought the men on campus probably wouldn't know what hit them once Jess and Penny hit their stride.\n\nBelinda and Jess went back down to the car where Ellie was waiting, and I was left alone with Penny to say goodbye. We hugged each other, a little tentatively at first, and then I felt her body relaxing and she held me tight. I kissed her cheek.\n\n\"Keep safe,\" I said.\n\n\"You too,\" she said. Then she seemed to hesitate. \"I just wanted to thank you again for... you know, staying on. In the house.\"\n\n\"I told you, Pen. I like it there. A lot. It's a new start for me too.\"\n\n\"Yes, I know... but...\" She didn't seem able to find the right words. \"Well, I just wondered if it was... at least... a bit for me?\"\n\nI stared at her. \"God, Pen, of course it's a bit for you too. More than a bit. Yes, I'm staying because I like it, but... the fact it makes you happy, the fact you wanted me to stay... that's the most important thing for me. I love you, and...\"\n\nI stopped, suddenly aware of what I'd said. And then suddenly our gentle hug was a much, stronger, genuine one. It felt good. She cried a little, and it's possible I may have cried a little too.\n\nAfter a few minutes we got ourselves composed. \"Drive carefully on the way home,\" she sniffed.\n\nI shook my head. \"Belinda's driving. Though I have to say I'm a bit scared about that.\"\n\n\"But what about your car?\"\n\nI'd actually been waiting for her to ask that. I fished in my pocket for the keys and held them out to her with a slightly dramatic flourish.\n\n\"Not mine. It's your car now.\"\n\nShe was speechless for a moment. She'd started saving for a car, I knew, but was still a long way short of her goal.\n\n\"You're kidding!\"\n\n\"All yours, Pen.\"\n\n\"Fuck! No way! No fucking way!\"\n\n\"So you don't need to worry about me coming to get you if you fancy coming home for a weekend. You can just... jump in the car. Your car.\"\n\nShe took the keys from me and stared at them, disbelieving.\n\n\"It's too much... you can't....\"\n\nThen, suddenly, we were hugging again. I whispered in her ear. \"Not from me. A present from your mum, Pen. She'd have been so proud.\"\n\n**\n\nIn the car on the way back Ellie was quiet. All three girls were very close and I guessed that not having the other two around all the time was going to be quite a change for her. And, speaking of change, her mother had a new boyfriend who was going to be staying over fairly often. Not to mention that, when he did stay over, they were all going to be naked together. Plenty for her to think about.\n\nBelinda was subdued too, but that was more straightforward. Her daughter had left home, and that always leaves a hole that can never quite be filled, no matter how often you speak to them or how often they come back to visit. I admit, with Penny not there, I didn't relish being at home quite so much now either.\n\nWhen we arrived back we agreed we'd be lazy and order out for dinner. As was her way, Belinda started shedding her clothes rather absent-mindedly as she moved around the house, until within a few minutes she was completely naked. I watched her, marvelling at how lovely she was and, indeed, how fortunate I was.\n\nThen I noticed Ellie was watching me, a strange half-smile on her face.\n\n\"Aren't you going to get undressed?\" she said.\n\n\"Sure,\" I said. I began to undress too, very aware of Ellie's eyes on me. I got down to my boxers and then hesitated.\n\n\"Don't be shy,\" said Ellie. \"We're all family now.\" There was definitely something mocking in her tone. Not unkind, exactly, but certainly challenging.\n\nI peeled off my last remaining item of clothing and placed it carefully on the top of my pile. Ellie stared at my crotch quite blatantly for a few moments. Then she stood up, and began to undress as well. She lifted her t-shirt off first, exposing a dark blue lacy bra that emphasised her modest but lovely breasts. Then she unsnapped the belt of her jeans and tugged them down before stepping out of them, showing v shaped panties in the same blue. She was a vision.\n\nShe knew it too. Her eyes teased me some more as she reached behind her back to undo her bra. It was a conscious effort not to stare at her, but I filed away a memory of the soft, creamy flesh, slightly whiter than the rest of her body, tipped with brown nipples that seemed almost too dark for her fair complexion and blonde hair.\n\nWhen she'd taken off her panties she stood opposite me for a second, her shoulders back slightly, as if presenting herself to me for inspection. I didn't say anything.\n\n\"Tell me when the food gets here,\" she said. Then she went up to her room, her rolling buttocks taunting me as she ascended the stairs.\n\nBehind me, Belinda cleared her throat. I turned and faced her guiltily. But she was looking amused.\n\n\"I think you might have a bit of a challenge on your hands there,\" she said.\n\n\"What do you mean?\"\n\n\"Well, she either doesn't like you at all, or she likes you a lot. Maybe she doesn't know herself yet. But either way, it'll be interesting to see how the two of you sort it out.\"\n\nWith that she turned and went back into the kitchen. I followed her. She was putting some glasses away in a cupboard when I went up behind her and put my arms around her. She pressed her body back into me, my cock nestling happily in the gap between her ass cheeks. I felt myself hardening.\n\n\"You're the only woman I want,\" I said to her.\n\nShe turned around in my arms and looked at me. Then she kissed me gently. As she did so she reached down and took my cock in one of her hands and squeezed it.\n\n\"Oh Rob,\" she said. \"You still have a lot to learn, don't you?\"\n\n**\n\nIt was strange being a proper student again. Before, I'd set my own pace, and worked out my own reading plan, and decided for myself whether or not I wanted to write an essay. Now I found myself working to somebody else's timetable, and initially I found it less fun than I thought it would be. As I've said before, I don't respond well to people telling me what I can and can't do, even if it's a requirement to write two thousand words on the imagery used in Shakespeare's early romantic plays by a week on Friday.\n\nBut I gritted my teeth and got on with it, and within a few weeks it hardly bothered me at all. Belinda was encouraging and I also, rather sweetly, received regular encouraging texts and messages from Penny. She was loving her studies and loving the social side of it as well. This pleased me, of course, though I missed her being around the house.\n\nMy routine was, wherever possible, to study in the mornings and to work on my consultancy and copy-writing work in the afternoons. I found mornings were my best time for focused, original work that required actual proper thought. My paid work, while mostly enjoyable, wasn't really that challenging and it suited me better to do that later in the day when I found I wasn't as good at concentrating. I would do all this in the small house that Penny and I had shared.\n\nMost evenings after finishing work, I would head over to Belinda's house and hang out there. I was a little nervous initially about outstaying my welcome, and early on I'd even made a point of staying away to give her and Ellie some more time on their own. But that night, after an hour of sitting rather gloomily in my armchair watching a film, the doorbell had rung and there was Belinda on the doorstep, holding a pizza box.\n\n\"Hey,\" she said. \"Did you order this?\"\n\nI shook my head. I was ridiculously pleased to see her.\n\nShe stepped inside and I closed the door behind her.\n\n\"Smells great,\" I said.\n\n\"Me or the pizza?\"\n\n\"Both. Though I think you just win.\"\n\n\"So gallant. Thank you.\" She started removing her clothes.\n\n\"Hey,\" I said, pretending to be outraged. \"This is not a nudist house, you know.\"\n\nShe looked at me, all wide-eyed and innocent. Not a look she did very well, if I'm honest.\n\n\"Oh,\" she said. \"I'm not taking my clothes off because I'm a nudist, Rob.\"\n\n\"You're not?\"\n\nShe shook her head. \"I'm taking my clothes off so you can fuck me. Unless...\" There was that devilish glint in her eye again. \"Unless you'd rather have the food first?\"\n\nI didn't. Twenty minutes later we were cuddled up together on the sofa, eating some rather lukewarm slices of pizza.\n\n\"So why didn't you want to come over tonight?\"\n\n\"I just thought... I'm sure sometimes you just want it to be you and Ellie. Or just you, if she's out. Alone time, you know?\"\n\nShe kissed me. \"When I want 'alone time', I'll tell you, OK?\"\n\n\"OK,\" I said.\n\n\"And if you want 'alone time', that's fine -- you just tell me. Charles would sometimes go off on his own for a trip. He'd say it was for business, but I think sometimes he just wanted to be on his own. And that was fine with me. So don't feel you always have to check in with me, Rob, OK?\"\n\nI nodded again.\n\n\"But having said that,\" she said, wriggling deliciously closer to me. \"Just at the moment, if you don't mind, I need you to fuck me like that every single day.\"\n\n\"I can do that,\" I said. \"No problem at all.\"\n\n**\n\nAnd so, most evenings I would head over to her house and let myself in. I would shout a hello up the stairs and usually receive a distant cry of welcome from wherever she was. Then I would remove my clothes and put them on a chair by the door. This felt rather strange at first, but as with most things, I got used to it. After a few weeks it felt perfectly natural to be nude, and I started doing it at home as well. Unless I had a video call, of course.\n\nEllie was coolly friendly when she was there, but no more than that. She seemed to be out quite a lot. Belinda said she had a new boyfriend, a graduate student who she thought was very good-looking but also almost unspeakably pretentious.\n\n\"He's an older student -- studying for his Masters degree. He's got a motorbike. And a goatee beard. God... the sort of person Charles absolutely couldn't stand!\"\n\nShe often talked about her late husband. It was always fondly, usually with a smile or a laugh about something he'd done. She'd clearly adored him, and indeed often said as much. In my younger days I might have felt threatened by his shadow hanging over us, but not now. It was as if Belinda's life was a jigsaw, and he was an important piece of it -- several pieces of it. And now I was another. And that was just how it was.\n\n\"Jesus... I'll tell you one thing Charles never did for me,\" said Belinda. She was lying in bed, her hair matted to her forehead. She'd had, I'm proud to report, just been crying out very loudly indeed.\n\nI waited, though I'd guessed what it was.\n\n\"He never went down on me. Nobody had really done that to me for years and years, until you turned up.\"\n\n\"I hope you approve,\" I said.\n\n\"You know I do. God, I thought I was going to faint just then. But... I'm still getting used to it.\"\n\n\"I'm not sure I really understand.\"\n\n\"Well, with Charles it was always very traditional. Maybe that's not the right word. But it was very -- very much about the dominant male. And I had no problem with that, I've told you before. I loved the feeling of being used by him. That my body gave him pleasure. And that gave me pleasure. I mean, it's not like I didn't come when he fucked me. I really, really did -- a lot. But... you going down on me, that's kind of... I don't know. I just have to sort of lie there and let you pleasure me. And I'm just not used to that.\"\n\nI stroked one of her hips and she stretched herself out like a cat. I almost expected her to purr.\n\n\"Well,\" I said. \"I think you're doing an admirable job of trying to adapt.\"\n\n\"I am, aren't I? Though maybe, just to be on the safe side, I should practice a bit more.\"\n\n\"Sure. You just lie there and let me do all the work.\"\n\n\"Mmm,\" she said. \"OK. I can do that. But, Rob, when you've done that, I really want your cock in me too, please.\"\n\nOne of the things I loved about Belinda was being able to have conversations like that with her. She was very open and honest and candid about what she liked and how she felt. I'm slightly ashamed to say that I had never had conversations even remotely like that with any of my previous girlfriends, though as they'd usually only lasted a few weeks perhaps I was being too hard on myself. But I think the old me would have shied away from that kind of honesty. Sex for me back then had been a strange, rather unhealthy combination of selfishness and showing off. I would congratulate myself for having seduced a woman, I would enjoy her body, but I would also be conscious of performing for her, as if to show her how lucky she was.\n\nWith Belinda it was both simpler and much, much deeper. She taught me a lot in those first few months. I don't mean in terms of technique, though she did have a few favourite things which surprised me -- she loved having her ass cheeks squeezed almost painfully hard, for example. I mean in terms of connecting, and communicating. She was vocal, and encouraging, and loving, and considerate. And, by no means a minor factor, she loved sex.\n\nShe was always interested to hear about my other experiences, and about my fantasies. I was a little tentative about sharing these, but she was gently persistent. And of course, she was happy to share her own.\n\n\"Rape,\" she said. \"That's a tricky one. Most of me hates the idea, but part of me... yes, I could get turned on by it in the right circumstances. I think so, anyway. But I think I just prefer slightly rougher sex.\"\n\nWe were lying in bed, her cuddled up beside me.\n\n\"Doesn't do anything for me,\" I said. \"Rape, I mean. I don't think I could ever do that.\"\n\n\"And rough sex?\"\n\n\"Well, how rough are we talking?\"\n\n\"Pinning me down, maybe. Not choking -- that would scare me.\"\n\n\"OK. Pinning you down is added to the list.\"\n\n\"Your turn,\" she said. \"What have you always dreamed of doing?\"\n\nI felt a bit shy, even now, and I didn't answer immediately.\n\n\"I don't know... maybe doing it somewhere we shouldn't. Like a... changing room or something.\"\n\n\"Well, we can definitely do that. Next time we go into town. It's a bit tame though. Come on -- let's hear something really depraved. All men have some filthy fantasies lurking.\"\n\n\"Not really,\" I said.\n\n\"Come on. You can tell me. I won't be shocked.\"\n\n\"Well... I've always thought a threesome would be pretty hot.\"\n\n\"Oooh. Now we're getting somewhere. Charles and I had some threesomes.\"\n\n\"Did you enjoy them?\"\n\n\"Yes... mostly. I loved how turned on he got. Me and the other girl taking turns to suck him... that felt very fun and dirty.\"\n\n\"Would you... get it on with the girl as well?\"\n\n\"We kissed a bit. That was... ok. But it was mainly about him. One of us lying beside him talking dirty while the other rode him. That kind of thing.\"\n\nI reflected, not for the first time, that Belinda's late husband had been a lucky man indeed.",
        "\"You're getting hard again,\" she said. \"I can see we'll have to put threesome on the list at some point. When you're bored with me.\"\n\n\"I'll never be bored with you,\" I said.\n\n\"We'll see,\" she said, and kissed me. \"What else? How about... uniforms?\"\n\n\"You're a nudist. Are you allowed to wear uniforms when having sex?\"\n\n\"Very funny. You don't fancy me in a French maid's outfit?\"\n\n\"I'd fancy you in a suit of armour,\" I said. \"Though on reflection, that wouldn't be terribly practical.\"\n\n\"How about a naughty nurse outfit? We could pretend you're in a coma and I have to give you a sponge bath and I notice you're getting hard and I think to myself, well, nobody would notice if I popped it into my mouth for just a minute... we could do a whole role play.\"\n\nI wrinkled my nose. \"I don't think I could really get into role playing. I'd just feel a bit silly, I think.\"\n\nShe sighed. \"So unadventurous. Well, I guess we'll find something.\"\n\n\"You think about it some more,\" I said. \"And while you do, I'm going to lick your lovely pretty pussy until you scream the place down.\"\n\n\"Yes,\" she said. \"Let's do that.\"\n\n**\n\nIt was a couple of days after that, I think, that Ellie asked me if I could give her a lift home after college. It was one of the afternoons when I had to go in for a seminar, so I agreed. We'd not spent much time together recently and I was hoping perhaps we could get back on slightly friendlier terms.\n\nI should probably be honest about how I felt about Ellie. Did I fancy her? Did she stir me sexually? Did I sometimes allow myself to fantasise about her? An emphatic 'yes' to all of the above. She was a stunning looking girl and I would defy any heterosexual man not to look at her and fall at least a little bit in love -- or lust -- with her.\n\nMy younger self would have probably tried to make a move on her not caring or not thinking about how it would impact my relationship with her mother. But then, my younger self was a bit of an idiot. I was attracted to Ellie, and I was attracted to Belinda, but I was only in love with one of them. And for the first time in my life, I actually tried to think beyond my short-term gratification. This isn't something men find easy.\n\nSo I was on my best behaviour when Ellie slipped into the passenger seat beside me. We exchanged hellos and I detected something in her voice that made me take another quick look at her. It looked like she'd been crying.\n\nI didn't say anything, just started the car and headed home. I figured if she wanted to tell me anything, she would. But probably I was the last person she wanted to confide in.\n\nWe were about half-way home when she suddenly put her hand on my knee.\n\n\"Hey,\" I said. \"What do you think you're doing?\"\n\n\"What does it look like?\"\n\n\"Well... just stop!\"\n\n\"You don't fancy me? I've seen how you look at me.\"\n\n\"Ellie, you're lovely... but no!\" Her hand had been advancing up my leg towards my crotch.\n\nI firmly removed her hand and put it back into her lap.\n\n\"God,\" she said bitterly. \"Let me out here. I'll walk.\"\n\n\"No,\" I said. \"It's late and it's dark. I'll take you home.\"\n\nShe took out her phone and began to tap out a message. \"I'm going to tell Mum you came onto me and I had to fight you off.\"\n\n\"OK,\" I said. \"You do that.\"\n\n\"You don't care?\"\n\n\"I do care, very much. But I hope she won't believe you, and that she will believe me.\"\n\n\"And if she doesn't?\"\n\n\"Then... congratulations. You'll have made two people very unhappy. And I don't know why you'd want that.\"\n\nShe irritably threw her phone back into her bag. \"Fuck!\"\n\n\"You going to tell me what's the matter?\"\n\n\"No.\"\n\nWe drove on for another few minutes. I thought I heard a quiet sob, but I was careful not to look at her. I focused on the road.\n\nFinally she spoke again. Her voice was quiet and almost inaudible.\n\n\"You going to tell Mum about this?\"\n\n\"Yes.\"\n\n\"Why?\"\n\n\"Because she loves you, and she should know.\"\n\n\"She'll hate me!\"\n\n\"She would never hate you,\" I said. \"She likes me, a lot, I hope -- but you and Jess are the most important things in her world. Nobody else comes close. And if you're unhappy, she'd want to know. I don't want to have secrets from her. Not about you or Jess.\"\n\n\"Fuck,\" she said, but more out of weariness than anger.\n\n\"I'm not trying to get you into trouble,\" I said. \"But you're obviously having a rough time of some sort, and I think your Mum will want to help you, that's all.\"\n\nShe was silent again for a while.\n\n\"Can I ask a different favour then?\"\n\n\"You can ask,\" I said.\n\n\"Let me tell her. I'll be completely honest about it, don't worry. But -- if I can tell her first, I think that would be... easier.\"\n\n\"OK,\" I said. \"But you have to tell her tonight.\"\n\n\"I will.\"\n\nWe were nearly back at their house by now. Ellie turned to look at me.\n\n\"You trust me to tell the truth?\"\n\n\"Of course.\" I did, too. Belinda had raised two terrific girls.\n\n\"Thank you,\" she said.\n\nI nodded. Then, a few seconds later, I pulled up on their driveway.\n\n\"I'm going to go home,\" I said. \"Tell your Mum I'll call her later, OK?\"\n\nIt was her turn to nod. Just before she got out, she leaned over and kissed me hurriedly and clumsily on the cheek. Then she was gone.\n\nI watched her disappear into the house. Then I reversed the car and headed back towards home. I'd like to say that I knew exactly what had just happened. But that would be to claim that I understood women, and I'm not sure any man can ever really claim that.\n\n**\n\nWhen I called Belinda, she told me Ellie had told her everything that had happened in the car but they were still talking about the reasons behind it. She thought it might take a while longer, and would I mind if I didn't come over tonight? I said that was fine, though part of me was a little dismayed. Being completely honest, having Ellie come onto me in that very understated way had excited me more than I'd thought. My leg still seemed to have the faint memory of where her hand had touched me. I remembered the times I'd seen her naked. I started thinking about what she'd feel like, sitting astride me, those gorgeous young breasts bouncing as she rode me to a frantic climax.\n\nAnd so, for the first time in many weeks, I masturbated. Belinda had taken up all of my sexual energy in recent weeks but now I found myself very hard, and very horny. I lay on my bed and within a few minutes my thoughts of vigorously fucking an enthusiastic Ellie had me climaxing very intensely indeed.\n\nBut afterwards I felt strangely guilty. It felt like a betrayal. I resolved I wouldn't do it again, though I knew that would be difficult.\n\nBut, as it turned out, it wasn't difficult at all.\n\n**\n\nThe following night I invited Belinda out to a smart, up-market restaurant. I knew she liked dressing up for an evening out sometimes. I hated it, much preferring to eat at home and wear what I wanted (or nothing at all, these days), but I wanted to do something nice for her. She was delighted.\n\nTo be fair, the food was very good and the service attentive and courteous without being intrusive or fawning. It was eye-wateringly expensive, but I could afford it - I'd had just been paid for some work and my living expenses these days were considerably lower than when I'd been living the bachelor lifestyle in the city.\n\n\"That was... delicious,\" murmured Belinda, as she swallowed her last piece of cheesecake. \"But I'll have to diet for a week now.\"\n\n\"You're perfect,\" I said. \"You should have another piece.\"\n\nShe smiled. \"Don't tempt me. And you may change your mind when my ass is twice the size and I try and sit on your lap.\"\n\n\"I'll risk it. I can't imagine ever getting tired of your ass on my lap.\"\n\n\"We'll see. Anyway, thank you.\" She looked around the restaurant. \"I do like this place. Charles and I used to come here sometimes. In fact...\" She lowered her voice. \"I once sucked him off in the bathroom here.\"\n\n\"God, really?\"\n\n\"Mmhmm. So much fun.\"\n\n\"I'll bet it was,\" I said.\n\nShe licked her lips provocatively. \"Do you want to try it?\"\n\nI considered, then I shook my head. \"No, I think it'll look too obvious if we both head off to the bathroom and leave the table empty.\"\n\n\"Hmmm, guess so. We had the girls with us when we did it before, which helped. They did wonder why were gone so long, though I think Ellie might have guessed, based on how pink she went.\"\n\nWe were silent for a while. There was a noticeable increase in the sexual tension between us. It was never far away -- but now it was definitely heightened.\n\n\"I have an idea,\" I said, finally. \"Or, a challenge, if you like.\"\n\n\"Ooh - I like a challenge.\"\n\n\"Make yourself come, sitting here, just talking to me.\"\n\nHer eyes brightened. \"Mmm! Very naughty. Can I... touch myself?\"\n\n\"If you're discreet, yes. We don't want to get arrested.\"\n\nShe wriggled a little in her seat. I guessed she was hitching up her skirt. Then her right hand dropped into her lap, and she leaned forward over the table, her head closer to mine.\n\n\"That's better. I'm touching myself now. So... are you going to talk dirty to me?\"\n\n\"We'll talk dirty to each other,\" I said, and paused, trying to think of where to start. I remembered what she'd just told me about. \"Did you swallow all of Charles's cum when you sucked him off?\"\n\n\"Of course,\" she said. Her breathing had become slightly heavier, but you'd only have noticed if you were watching her closely. \"I always swallowed his cum. I remember... I remember coming back to the table and sitting down next to the girls and sipping my coffee and how the taste of the coffee felt, mixing with his flavour...\" She paused, as if remembering something else. She also shifted slightly in her seat. I could imagine her fingers working away at that lovely slit of hers, teasing and tormenting that clit that I'd feasted on so many times now.\n\n\"I remember... Ellie had some of my coffee too. And so did Jess... just a few sips... and I remember thinking god, I wonder if there was the slightest taste of their father on that cup.\"\n\n\"Fuck!\" I said softly. That was a direction I hadn't expected.\n\n\"I know... so wrong... but it got me so wet. I was so eager to go home... get him to fuck me after I thought that.\"\n\nShe looked at me, her breathing more noticeably laboured. \"Does that... make me a bad person?\"\n\n\"No... are you going to come for me, Belinda?\"\n\n\"Mmm yes... soon. Are you hard, Rob?\"\n\n\"Yes. Very hard. I wish I could fuck you right now. Slide my cock into that lovely wet pussy of yours.\"\n\n\"God yes... I'd love that. Talk to me some more, please.\"\n\n\"Let me taste your fingers,\" I said, and she quickly took her hand from below the table and reached over, as if feeding me a titbit from her plate. I took the tip of one finger into my mouth and sucked it gently for a second before she took it away and dropped her hand back down.\n\n\"I love the taste of you,\" I said. \"I can't believe Charles never licked that pretty cunt of yours.\" The moment after saying that I wondered if I'd gone too far, if that would spoil the mood, but she just smiled in a slightly distracted way. I could see her arm moving a little more obviously now.\n\n\"I would have loved to have had you both,\" she said. \"We never did that, with another man. Not Charles's kind of thing... but sometimes, god, when he was fucking me or I was sucking him I wished I had another cock there as well. And yours is so lovely...\"\n\n\"Both of us spurting all over you,\" I said. \"Perhaps both of us taking you off to the bathroom and you sucking us both off, one after the other...\"\n\n\"God yes... what a lovely slutty thing to do.\" She was close now, I could sense it. If I could just find the right image, the right words, I could send her over the edge.\n\n\"Sitting back down at the table with two lots of cum still in your mouth.\"\n\n\"Fuck yes... so fucking filthy...\"\n\nSo, so close. I took a breath, wondering if again I was going to go too far. But sometimes, in those moments, you just have to go for it. And I had a hunch it would work. \"Two lots of cum on the rim of your coffee cup. Two lots of cum for the girls to taste...\"\n\nThat was as far as I got. Her body jolted and her spare hand suddenly closed over mine, squeezing it painfully. Her face flushed a deep red and I thought for a moment she might even faint. I was worried that a waiter might see and rush over in case she was unwell, but luckily for once they weren't being attentive. Or perhaps they were, and were just being commendably discreet. If so, they definitely deserved the large tip I left them.\n\n\"Oh... fuck,\" she said after a minute or so had passed. \"Oh fuck, that was... so intense.\"\n\nI lifted her hand to my lips and kissed it. She pulled it away gently and stroked my face.\n\n\"Please get the bill,\" she said. \"I need to get you home and fuck you absolutely senseless. Unless you want another coffee?\"\n\n\"I'm good,\" I said. \"Where's that damn waiter got to?\"\n\n**\n\nAn hour later we lay cuddled up together in her bed, sweaty and happily exhausted. Her hand was clasped affectionately around my slightly deflated and leaking cock.\n\n\"You worried it's going to fall off?\" I asked her, kissing her hair.\n\n\"No... I just like holding it. It's very... comforting, somehow. Naughty but nice, to be able to do it. Or maybe I'm just weird.\"\n\n\"I like it,\" I said. \"I once had a girlfriend who said it helped her sleep, holding onto a guy like that.\"\n\n\"Yes. I can completely see that. It's very relaxing. At least in its current state.\" She giggled. \"And what's nice is when I wake up, it'll be ready for action again, which is even better.\"\n\n\"I think you only want me for my body,\" I said. \"Which, of course, is completely fine.\"\n\n\"Mmm. Glad we've got that sorted.\"\n\nWe lay there contentedly for a little while. Then we heard the distant sound of the front door opening and closing, and then the sound of footsteps on the stairs as Ellie went to her room.\n\nBelinda sighed. \"Poor Ellie.\"\n\n\"She OK?\"\n\n\"She'll be fine, I think. Her and the grad student didn't work out, which I confess I'm glad about, but she's pretty down about it.\"\n\n\"Do you know what the problem was?\"\n\n\"It turned out they weren't as... compatible as she hoped.\"\n\n\"I'm not sure I quite know what means.\"\n\n\"Well, I gather that he was fun at parties, and very knowledgeable, and he was a good-looking boy -- once you got past that horrible beard -- but... in bed, not so great.\"\n\n\"Ah,\" I said. I felt we were moving into potentially dangerous territory. As open-minded and plain-speaking as Belinda was, how comfortable was she going to be discussing her daughter's sex life?\n\nStill, I felt I had to be supportive and helpful if I could be.\n\n\"Couldn't she... teach him to do more of what she liked?\"\n\n\"I don't think that was really the problem.\"\n\nThere was a silence for a moment.\n\n\"So... what was the problem?\"\n\n\"He didn't want to... quite as often as she did. It made her feel a bit... unattractive. Unwanted.\"\n\n\"Jesus,\" I said. \"The boy's an idiot.\"\n\n\"Maybe he just had a low sex drive. But... yeah, I think your theory is probably closer to the truth.\"\n\nShe squeezed my cock slightly. \"She is a pretty girl, isn't she?\" She wasn't teasing me, she was genuinely wanting reassurance. Which was sweet -- all parents want to be told good things about their offspring.\n\n\"She's lovely,\" I said. \"They both are, you know that.\"\n\n\"But not just pretty... She's sexy, isn't she?\"\n\n\"Very sexy,\" I said, although I tried to make it sound like a reasoned, considered opinion rather than a statement of male lust.\n\n\"She's feeling very down,\" she said. \"Girls aren't used to men not wanting them. Not the ones they fancy, anyway.\"\n\n\"I'm sure she'll have a queue of guys lining up if that's what she wants.\"\n\n\"You think so?\"\n\n\"Sure. She could have any guy she wants.\"\n\nShe stroked my cock. \"Any guy?\" There was a definite emphasis on the first word.\n\n\"Well... maybe present company excepted.\"\n\n\"Liar,\" she said, smiling. \"I can feel you getting hard again.\"\n\n\"Yes... because you're doing that!\"\n\n\"I think you're thinking... very naughty thoughts about my little girl.\"\n\n\"Well... I am now, because you're putting them in my head!\"\n\n\"Oh... so it's all my fault?\" Her hand was relentless, up and down my shaft, which was nearly fully erect again.\n\n\"Completely your fault.\"\n\nShe leaned closer, so her mouth was right next to my ear. \"You're sure you don't want to fuck my daughter?\"\n\n\"Jesus, Belinda... what do you want me to say?\" I was turned on but also nervous and a little defensive. I felt I couldn't win -- to say I didn't want to fuck Ellie would almost be an insult, but to say that I did... that was a whole new world of problems, surely?\n\n\"Just the truth.\"\n\nI looked at her. She was looking at me quite steadily.\n\n\"I don't want to do anything that would... make things bad between you and me.\"\n\n\"I know. I'm putting you in a terrible dilemma, aren't I? But... imagine she's not my daughter for a second. Didn't you ever play that game with your other girlfriends, the ones where you agree who you get a free pass for? Talking about film stars or celebrities you'd like to fuck?\"\n\nActually, I had played that game with one of my girlfriends. I nodded.\n\n\"Who did you let her have her free pass for?\"\n\n\"Brad Pitt,\" I said. \"She was crazy about him.\"\n\n\"Well... not very imaginative, but I can see the appeal,\" she said. \"Particularly in his younger days. He was rather delicious then. And how about you? No... let me guess.\"\n\nShe was quiet for a moment, smirking, her hand still sliding up and down with that perfect rhythm, the grip just right, as if it was the most natural thing in the world.\n\n\"I'm going to guess... Britney Spears?\"\n\n\"Nope.\"\n\n\"Film star, pop star, or somebody else?\"\n\n\"Film.\"\n\n\"How old?\"\n\n\"Um... still in her twenties, I'm pretty sure.\"\n\n\"Mmm... Kristen Stewart?\"\n\n\"No,\" I said. \"But that's not a bad guess. Close. She was in the same sort of films.\"\n\n\"Oh god, I know! Jennifer Lawrence!\"\n\n\"Very good,\" I said. \"How about you? Somehow I can't imagine you and Charles ever having that kind of arrangement.\"\n\n\"No,\" she said. \"Charles and I talked about a lot of things when it came to sex... I told you he came from a very... unusual background, really. But no, he wouldn't have contemplated me going off to fuck Russell Crowe, I'm afraid. Though I'm sure he would have been delighted to fuck Ms Lawrence, and I can't say I would have minded watching that either.\"\n\nWe lay there for another few moments. I was rock hard, and her hand didn't let up. Then, in an easy graceful movement, she swung one lovely leg over and straddled me. She reached down and guided me back inside her. She was wonderfully wet. Then she sighed and nestled her head on my chest.\n\n\"Ellie really likes you,\" she said. \"She did, right from the start, even when you were a bit of a bastard.\"\n\nI didn't quite know what to say, so I put my arms around her and thrust a little more deeply into her. She gave a low murmur of appreciation.\n\n\"And I think it would be good for her, to be with a man like you. You've got that nice streak of... meanness in you. When it comes to fucking, I mean.\"\n\n\"Really?\"\n\n\"Oh yes. As a person, you're much nicer than you were, Rob. But you're still a bit of a bastard in bed, though I don't think you even realise it. Knowing how to keep me on the edge, not letting me come, knowing when to hold me down... lots of women really want that from their bed partner, you know. To feel... totally dominated by their man.\"\n\nI tightened my grip and thrust even more vigorously into her, using her body quite blatantly for a minute or two. Then, when I felt her breathing begin to grow more ragged, I slowed right back down again.\n\n\"Like that, you mean?\"\n\n\"Yes... just like that you bastard! Jesus!\"\n\n\"So... what exactly are you suggesting?\"",
        "\"She's your pass from me,\" she said. \"Fuck her as well you can for me. Fuck her as much as she wants, as much as she needs. But don't you dare hurt her. She's the one that chooses when it finishes... if she ever does, OK?\"\n\n\"Fuck,\" I said. I could hardly believe what I was hearing. \"Are you... sure?\"\n\nShe kissed me deeply, her tongue sliding between my lips. Then she pulled away slightly. \"It's what I want,\" she said. \"Now fuck me hard, please.\"\n\nThen, just before I was about to start doing just that, she put a finger on my lips. \"But don't worry... if Jennifer Lawrence comes calling, you can still fuck her too.\"\n\n**\n\nWhen I woke up the following morning Belinda was gone. She'd texted me a message though.\n\nI'm treating myself to a spa day. Back later. Ellie's here all day. You should stay here too. Xxx\n\nI took a long, long shower. Partly because I needed it, and partly because it avoided going downstairs. Though perhaps Ellie would just be in her room all day. Maybe I should just go home and pretend the whole conversation had never happened. But Belinda would never let me get away with that.\n\nEventually I stepped out of the shower and dried myself off. I looked for my clothes, which I thought I'd left on the chair the previous evening. But they were gone. I checked all the other places I could think of, including the laundry basket in case Belinda had dropped them in there. But they were nowhere to be seen.\n\n\"You sneaky bitch,\" I said aloud. Belinda really did intend for me to stay there all day, it seemed.\n\nI listened out for any noise from downstairs. It seemed very quiet. It should be safe enough, I thought, to nip downstairs, brew some coffee and toast a couple of bagels, then scarper back upstairs and just watch TV in Belinda's room until she returned.\n\nBut...\n\nShe wants you to sleep with Ellie.\n\nWell... yes. But did she? Or was it some kind of test?\n\nShe's never been one to play those kinds of games.\n\nThat was true. One of the many things I loved about Belinda was her almost total lack of guile. She said what she thought, and had no time for mind games or anything less than complete honesty. I remembered at least one previous girlfriend who was a master of passive aggression, who sometimes wouldn't speak to me for hours or even days because of some real or perceived transgression -- though of course it had been up to me to try and work out what that transgression was. I couldn't imagine Belinda ever acting like that. Though her hiding my clothes definitely qualified as sneaky at the very least.\n\nI thought about putting a robe on, but then decided that, in this house, that would invite more comment than not wearing anything. So I padded downstairs, a little more aware than usual of my naked state.\n\nThe kitchen was empty. I put some coffee on, and found some croissants in the bread basket that I popped in the oven to warm up. It was a bright sunny day outside, and as I waited for the coffee to percolate I stared out into the garden, watching the birds hop around the lawn in search of whatever titbits they could find. I wondered how Penny was getting on. Last time we'd spoken there had been hints of a very active social life and possibly a new boyfriend, and she'd been very amused when I'd sent her a modest lecture about not neglecting her studies. The memory of our conversation made me smile.\n\n\"Good morning.\"\n\nI turned around and saw Ellie standing there.\n\n\"Jesus! You made me jump.\"\n\n\"Sorry. You looked lost in thought.\"\n\n\"Yes... I was a bit. You want some coffee?\"\n\nShe nodded. She seemed a little shyer than usual -- not common for her at all. She was naked, of course, but I tried to block out any thoughts of her body. Which was almost impossible. She looked particularly beautiful this morning, sleek and toned and lovely.\n\n\"Your mum's gone out, I think,\" I said, by way of conversation.\n\nShe nodded. \"Yes, she sent me a text. Said her muscles were feeling a bit sore, so she's gone for a massage and then a few other treatments.\"\n\n\"You should have gone with her,\" I said.\n\n\"You think I need some beauty treatments?\" Her tone was hurt but her eyes were suddenly playful.\n\nI sighed. \"I just thought it was the kind of thing that girls like to do with their mothers.\"\n\n\"Yeah, I've been with her a few times. It's a good place, very chill.\"\n\n\"Maybe I could get Penny some vouchers for there. Or would she be insulted, and assume I was also telling her she was ugly?\"\n\nEllie smiled properly for the first time. \"Well, there's always a risk with presents like that, but no, I think she'd love it. Just don't get her anything gross or painful, like a bikini wax.\"\n\n\"Jesus,\" I said. \"What a thought. Thanks for the advice.\"\n\n\"Though if you're going to have it done, they do it pretty well, I have to say. It feels odd though, another girl doing that to you.\"\n\n\"Yes... I can imagine.\" This wasn't necessarily the best kind of conversation to be having, I thought.\n\n\"But... you guys seem to like us being all smooth down there, so I guess we're stuck with doing it.\"\n\nThis seemed like another potential minefield, so I just shrugged, doing my best to seem non-committal on this issue. Instead I poured her some coffee and put a croissant on a plate for her.\n\n\"I'm going to... head back upstairs,\" I said.\n\n\"You don't want to stay here and talk about bikini waxes?\" Her eyes were wide and innocent. She was really teasing me now.\n\n\"Well... that would be a first for me,\" I said, a little lamely. \"I'm not sure I have much to... usefully contribute.\"\n\n\"Well, Mum said you promised to look after me today, so sneaking back upstairs to watch telly or just sleep is definitely not allowed.\"\n\n\"She did?\"\n\nShe nodded.\n\n\"And... do you need looking after?\"\n\n\"Oh, you know. I don't expect you to play dolls with me or anything, but we can hang out, can't we?\"\n\n\"Sure,\" I said. \"We can do that. Did your... mum, er... say anything else?\"\n\n\"Like what?\" The innocent face again. And once again, I wasn't sure I believed it.\n\n\"I don't know... just wondered. She told me I should stay here as well, but I didn't know looking after you was part of my duties.\"\n\n\"You don't have to.\" She was suddenly hostile. I reminded myself that she'd recently been dumped or at least rejected by her dickhead of a boyfriend, and I should tread carefully.\n\nShe got up and emptied the rest of her coffee down the sink. Then she banged her plate down and started to leave the room. I darted after her and caught her by the hand, swinging her back towards me.\n\n\"Hey,\" I said. \"I'm sorry. I was just... teasing.\"\n\nShe sighed. \"It's fine. Really. I'll go and watch something in my room.\"\n\n\"No... stay with me. We can... hang out. Chill. Talk about... bikini waxes if that's what you really want.\"\n\nShe softened a little.\n\n\"You're just being nice.\"\n\n\"I'm never nice,\" I said. \"You should know that by now. I'm totally selfish and only care about myself. And what I want is to spend time with you.\"\n\nShe looked at me for a moment. I was aware that we were standing very close together, our naked bodies just a few inches apart.\n\n\"I'm sorry I've been a bit weird about you recently,\" she said. \"That business in the car, and being a bit of a bitch to you sometimes.\"\n\n\"You're never a bitch,\" I said. \"And don't worry about anything.\"\n\n\"It's just... it's a bit weird, Mum having a new boyfriend. And... you know, lots of other stuff going on.\"\n\nI nodded.\n\n\"Anyway, I want us... to get along.\"\n\n\"I think we will,\" I said. \"I really love your mum, Ellie, and I think you and Jess are just... fantastic. Really.\"\n\nShe smiled. \"Thank you.\"\n\nI thought for a moment. How do you endear yourself to a young woman who's a little conflicted about you? Inspiration struck. \"Do you maybe... want to go out and do some shopping or something? I'll take you to the shops, maybe even buy you a new dress. As long as we get one for Jess as well. What do you say?\"\n\n\"But you haven't got any clothes to put on, have you?\"\n\nThen she realised what she'd said, and her face went pink.\n\nI stared at her. \"How do you know that?\"\n\nShe didn't say anything.\n\n\"That cunning... so she has hidden my clothes! And she told you!\"\n\nI had still been holding her wrist. Now I let it go as I looked at her. I looked down at her, at that lovely body, those young firm breasts, those luscious legs. Not only hadn't Belinda been joking, but it seemed she'd tipped her daughter off about what to expect as well.\n\nI said slowly. \"So - your mum... told you...she'd hidden all my clothes. And I was to stay here... and look after you.\"\n\nEllie looked a little tearful. \"Is that really such a terrible thing to think about? I don't want us to do anything if you're just being kind... that would be even worse!\"\n\n\"I'm not saying anything like that... I'm just saying... I want to fully understand exactly what we're doing here.\"\n\n\"I think you know,\" she said. \"But you don't have to do anything, really. I understand if you just want Mummy. It's just... she said she thought you'd be good for me.\"\n\n\"And... is that what you think?\"\n\n\"I think it'd be nice,\" she said. \"I think it'd be really nice, but only if you wanted it too.\"\n\n\"And... what exactly are we talking about? Just so I'm... completely clear.\"\n\nShe took my hand and carefully placed it on her right breast. She didn't say anything, just looked at me. Her skin was soft and cool and the nipple was hard under my touch. I slowly took my hand away and she flinched almost as if I'd struck her. But I raised the hand to her face instead, and stroked her cheek. She opened her mouth and took one of my fingers into it, her tongue running over the tip.\n\nShe looked down. My cock was pointing directly at her, almost grazing her stomach. She reached down with her other hand and stroked it. Her touch was exquisite.\n\n\"You do want me,\" she said, as if in wonder.\n\n\"Of course I do, Ellie, you're completely beautiful. I just... didn't want to mess anything up.\"\n\n\"You won't,\" she said. \"Mum said... if you were hesitant, I was to say 'Jennifer Lawrence' to you. Your free pass. OK?\"\n\nFor an answer I pulled her close to me and kissed her. Her body pushed against mine and she gave a low moan in the back of her throat. Her grip tightened around my cock as if she was afraid to let it go.\n\n\"Oh god,\" she said. \"Please don't change your mind now. I need you so badly.\"\n\n\"I'm all yours,\" I said.\n\n\"Come up to my room. Quickly.\"\n\nI followed her as she led me out of the kitchen and up the stairs. As I followed her I had a vivid memory of that same lovely bottom scurrying up the stairs on my first visit to the house all those months ago. That visit had not ended well. How different things were now.\n\nHer room was slightly untidy but charmingly girlish. I was pleased to see her mother had had the foresight to get her a small double bed. As we entered the room Ellie turned again to kiss me. She felt a little more tense now.\n\n\"You can do whatever you want,\" she told me, a nervous break in her voice. \"Anything at all. Please. I want to be good for you.\"\n\nI hushed her. \"You will be good for me Ellie, I already know that. Just relax, and take your time... we have the whole day, remember?\"\n\n\"Oh god,\" she said. \"We really do. Oh... that's such an amazing thought.\"\n\nShe kissed me again. \"I'm shaking. So pathetic.\"\n\n\"Lie down,\" I said. \"On your tummy.\"\n\n\"You want to start by... taking me from behind?\"\n\n\"Just do what you're told,\" I said, with mock severity. I remember Belinda saying I was something of a bastard in the bedroom, and that was what a lot of women liked. Time to see if Ellie shared that same opinion, perhaps.\n\nEllie obediently lay down, her head on the pillows, and I took a second to greedily look at and glory in her body. Her flawless skin, showing just a few goosebumps. Her smooth back. Two perfectly rounded, fleshy buttocks.\n\nI reached out and dragged some fingers slowly across her back.\n\n\"You deserve a massage too,\" I said. \"A nice slow one, I think.\"\n\nI began to stroke all over back and arms and shoulders, taking my time, varying the speed and force as I swept my hands over her. It was hugely erotic to be touching this young woman's body, this body I'd been seen naked so many times now but never really touched. And to be doing it with her mother's blessing and consent -- well, I'd be lying if I didn't say that added to my arousal.\n\nAfter five minutes on her back and shoulders, I allowed my fingers to go a little lower. I gently squeezed those lovely ass cheeks and then focused on her legs, rubbing firmly from the back of her knees up to the top of her thighs. Without being asked, she spread her legs a little more, allowing me a glimpse of her pretty bare slit. I resisted the temptation to touch it -- for now, at least.\n\nInstead I focused on massaging her upper thighs and lower back, my hands sliding over her bottom as I moved back and forth between the two areas. I knelt between her legs, with my cock occasionally bumping against her. I felt completely in control of her, and it both excited me and instilled a feeling of protective tenderness. If I wanted to, at any moment I could pull her on her knees and thrust deep inside doggy style. Or I could flip her over and take her in the classic missionary position. Or lie down beside her and pull her on top of me. I knew she would comply with whatever I asked. And I knew, too, that she was waiting for exactly one of those things to happen.\n\nInstead, after another few minutes, I allowed one of my hands to explore very daintily between her legs. She moaned as she felt my finger run the length of her slit. She was very wet.\n\nThen I lowered myself down onto her, careful to take most of the weight on my arms, so my cock dropped into the gap between her legs. She started to reach down so she could push it into her, but I tutted firmly and she stopped. Instead she began to twitch her hips, trying to get better contact between us.\n\n\"You're beautiful, Ellie,\" I told her. \"You have the most perfect, wonderful body. Just perfect.\"\n\n\"Thank you.\" A soft voice, muffled by the pillows.\n\nFor a few more seconds I allowed myself to just lie there, enjoying the feel of her smooth back on my chest and the slight movement of her hips. Then I raised myself up on my arms again so our bodies separated.\n\n\"Roll over,\" I said. \"I want to see you.\"\n\nObediently she turned herself around, still lying directly beneath me. She looked up at me, her eyes wide and questioning. This was a softer, more timid Ellie than the one I was used to, and it made my heart melt.\n\nI kissed her on the forehead, and then lightly on the mouth. Her arms went around me as my weight settled on top of her. My cock was pushing eagerly at her entrance, and it took all of my self-control not to just push into her.\n\n\"Please,\" she said simply. \"Please!\"\n\nI almost relented. But Belinda was right about my mean streak, it seemed. I merely smiled and pushed myself lower down her body, suckling at first one young breast and then the other. I felt a hand go around the back of my head, her fingers sliding through my hair.\n\nLower still, gentle kisses on her flat stomach. I could feel her hips twitching once more. And lower, my tongue gliding over the faint slope of her pubic mound.\n\n\"Oh god... oh fuck Rob.\"\n\nThen my tongue was darting between her legs, first up one side of her slit and then the other and back again. I couldn't wait too much longer, I knew -- there is a fine line between delicious anticipation and irritable frustration.\n\n\"I'm going to fuck you, Ellie.\"\n\n\"Yes... god, please.\"\n\nI delicately ran my tongue over her clit, and her body jolted.\n\n\"I'm going to slide my cock deep inside your beautiful pussy.\"\n\n\"Mmm... I need that. Please!\"\n\n\"Tell me what you want me to do...\"\n\n\"I want you to fuck me. Fuck me hard, god, so hard!\"\n\n\"I love the taste of you, Ellie,\" I said. \"You taste so sweet. I could do this all day. But that wouldn't be fair, would it?\"\n\n\"No...\"\n\n\"I mean, I want you to suck me as well.\"\n\n\"Anything you want... fuck... just hurry, please!\"\n\nI pushed myself back up her body and, almost simultaneously, locked my mouth back to hers as my cock slipped easily and deliciously deep inside her in a single, flowing movement. Her whole body bucked upwards and I felt her arms and legs go around me, enfolding me in a tight embrace that was surprisingly strong for such a slight girl.\n\nFor a few moments she lay completely still, almost as if she'd fainted. I didn't move either, savouring the feeling of being inside her, that primitive, base, male feeling of possession.\n\nThen, as I felt her body relax ever so slightly -- she told me later she'd had a small orgasm the moment I entered her -- I began to fuck her. Slow, teasing strokes at first, over-riding my own instincts which were to crudely hammer away at that eager young body. She loved to kiss, it seemed, as every time I broke away to steal glances down at our writhing bodies or even just to grab some extra air, within a few moments I could feel her face anxiously seeking mine. Her mouth was soft and sweet and her passionate kisses heightened the connection between us, making it feel even more intimate and special. Somewhere a very distant warning bell rang in my mind, that perhaps this was more than just fucking... but I didn't care.\n\nAs my strokes became deeper and less nuanced, her kissing became more frantic and her grip on me even tighter. I could sense her orgasm was approaching. There was also a danger I would come soon as well if we kept up this pace, and I didn't want that to happen yet.\n\nSo I used a technique I had first been taught by an older woman I'd had a one-night stand with. I'd also used it successfully with Belinda. I simply stopped moving, and lifted my weight slightly so Ellie had more room to move beneath me. My cock was still deep inside her, but now she could move herself up and down on me and apply whatever pressure and friction worked best for her.\n\n\"Use my cock, Ellie,\" I told her. \"Use my cock and make yourself come on me.\"\n\nIt took her a few seconds to get the idea but then she began to push and grind against me, a little slowly at first but then with increasing abandon. Her arms and legs were still wrapped around me and I could feel her hot wetness as she enthusiastically used my body.\n\n\"That's it... use my cock. Just like that.\"\n\nShe was close now, so close, and I pushed my hands underneath her bottom and gently squeezed her cheeks. With that she cried out, her mouth still on mine, and her whole body jolted.\n\nAfter a few moments she collapsed back down on the bed, still whimpering a little from the intensity of her climax. I felt myself begin to slip out of her and I lowered myself to follow her down, not wanting to lose that glorious wet tightness.\n\nI covered her forehead with soft kisses. As any man would, I now felt like a preening peacock, proud of what I'd been able to do for that that soft, sweaty, wonderful bundle of girl. Pathetic, yes, but there are worse things to feel.\n\nAfter a while she was able to focus again. She smiled up at me.\n\n\"God,\" she said. \"That was... fucking amazing. Thank you.\"\n\n\"We're just getting started,\" I said. \"We have the rest of the day, remember?\"\n\nHer eyes widened. \"Oh yes. Oh... my fucking god.\"\n\nI began to thrust deep inside her again. \"My turn now,\" I whispered, and then her mouth was back on mine, and her arms once again tight around me, as if afraid to ever let me go.\n\n**\n\nWe were dozing when Belinda came home. It had been a long, blissful day, one to linger long in the memory. In recent months I'd become rather proud of my fitness, but six hours in bed with a horny, greedy teenage girl is not to be taken lightly even if you're in peak condition.\n\nDistantly I heard the front door open and close, then Ellie stirred beside me.",
        "\"Mum's home,\" she whispered. \"We should go and see her.\"\n\n\"OK,\" I said, a little woozily.\n\nEllie looked down at me. My cock lay flat against my stomach, still leaking softly onto me. \"I think you need a bit of cleaning up first.\"\n\n\"I'll shower.\"\n\n\"No.\" She smiled. \"I'll do it. Just lie back.\"\n\nAnd then, with her mouth and tongue, she lovingly and carefully licked my cock and stomach clean. Then, with a slight sigh, she got up from the bed and went and peered at herself in the mirror.\n\n\"Jeez,\" she said. \"I won't have to say anything. Mum will know as soon as she sees me. I look like a... well-fucked little slut.\"\n\n\"Not a slut,\" I said. \"Never a slut. But if you're not well-fucked after all that, I'd hate to know what would qualify.\"\n\nShe grinned, a more confident, happy smile that I was delighted to see. \"OK, we'll agree on the well-fucked bit. See you downstairs. Give me a minute with her first, OK?\"\n\n\"Sure,\" I said, and watched her leave the room, her delectable bottom once again rolling cheekily at me.\n\nI stretched out, and lay there for a few moments. I hoped Belinda didn't expect too much from me that night. I felt utterly spent. I wondered how things would go from here on in. Was that just a one-off with Ellie? Or would I be shared regularly now? I remembered the hunger and passion behind those kisses. This was a girl who craved affection -- perhaps love - as well as sex. I would have to tread carefully.\n\nThen I swung my feet off the bed, sat up, stretched, and somewhat wearily got to my feet. Whatever the future held, it seemed even brighter and more promising than I'd ever thought possible less than a year ago. Then I opened the door and went downstairs.\n\n \n"
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "daughters",
        "nudist",
        "older man",
        "younger girl"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/helping-her-saving-me-ch-02"
}