{
    "title": "Ransom Ch. 06",
    "pages": [
        "Paul laughed out loud. Mira stared at Nathan strangely \u2013 he was still gripping her arm mid-air.\n\n\"Nice one, Nath,\" Paul joked, \"Now here, give me the phone.\"\n\nKailee seemed to be the only one who realised her brother was deadly serious. She hadn't particularly wanted her captors hunted down anyway, but that wasn't the point. Why wouldn't Nathan want to find them? \"What do you mean we're not going after them?\" she frowned at Nathan who looked as though he was calculating something over in his head. He released Mira's arm and ran a hand through his ruffled hair. His weary green eyes were slightly wider, a little panicked.\n\n\"This isn't about the money,\" he breathed, \"This was never about the money... \" he trailed off and lowered his eyes.\n\n\"What is he talking about?\" Paul glanced at Mira who shrugged in confusion. \"Nath, are you feeling okay?\"\n\nKailee had stilled. There was something in Nathan's expression she hadn't seen before. It was a mixture of fear and guilt. He wasn't telling them something. Her mind whirred. Dominic wasn't an idiot - why would he only request ten million dollars for her ransom? Of course it wasn't about the money. It was about winning. It was always about winning with him. But who was the opponent? Her glance moved to her older brother whose eyes were still at his feet.\n\n\"You know him,\" she whispered. \"You know Dominic.\"\n\nNathan looked up at her, his expression grim, and she knew it was true. \"Can you give us a moment?\" he spoke to Paul, who frowned back in response.\n\n\"What? No way! We all deserve an explanation, Nath.\"\n\n\"Paul, please?\" Nathan pleaded softly to his brother.\n\nFor a moment, Kailee thought Paul wasn't going to budge, but then he let out a heavy sigh, stood and walked out glumly like a dog who had been kicked outside.\n\n\"You too, Mira.\" Mira glared at Nathan with her pretty blue eyes and glanced at Kailee for approval. She waited until Kailee gave her a nod 'okay' before she stood gracefully and followed Paul into the next room.\n\nThere was a long silence in which Nathan swirled his mug of hot chocolate, his eyes cast downward, brow creased in agitation. Kailee just stared at him and waited for him to speak.\n\n\"We were friends in college.\" He spoke regretfully, but didn't break eye contact. \"Me, Dominic, Jake... good friends.\"\n\n\"College?\" Kailee shook her head in confusion, \"They couldn't afford college. Dominic... he lived on the streets, he had nothing. Jake told me.\"\n\nNathan nodded. \"That was until Jake's father took him in. Dom's father had worked for him briefly before he died. When he found Dom on the streets he took him in and gave him a home.\"\n\nKailee remembered Jake's story, he had said Dominic's father worked for a wealthy man. He hadn't told her that the wealthy man had been his own father. \"So Jake's Dad paid for his college?\"\n\n\"No. Dominic wouldn't take a cent even though the old man insisted. Everything Dominic owns he earned himself. And not from a life of crime. He founded new software for the Government when he was in high school. Since then, he's been investing in hotels, casinos, all sorts. Kailee, Dominic is richer than us.\"\n\n\"Fuck.\" Kailee leaned back into the couch, completely dumbfounded. That bastard hadn't even needed the money! Why put her through the stress of the past few days if he didn't even care about the money? A hundred thoughts were rolling through her mind, until she came to focus back on her guilt-ridden brother. \"So what did you do to him?\" she asked darkly.\n\nNathan blinked up at her. \"What?\"\n\n\"Dominic. You must have done something to him. Why else would he kidnap me?\"\n\nNathan's eyes narrowed in irritation. \"I didn't do anything.\"\n\nKailee glared right back at him. \"I've been locked up in handcuffs for 48 hours, Nath, the least you can do is tell me why.\"\n\n\"I. Don't. Know.\" Nathan was flustered and a faint pinkness was spreading across his neck and ears. \"I haven't spoken to Jake or Dominic in years.\"\n\n\"Right.\" Kailee could tell he wasn't being entirely honest with her. She stood angrily. \"I'm going to bed. If you decide to tell me the truth, you know where I am.\" She stormed towards the hallway, her head a chaos of confusion and anger.\n\n\"Kailee wait,\" Nathan's voice held a hint of desperation. An unusual characteristic for him. She stopped in the doorway and looked back at her brother. \"You're okay, right?\" his eyes were full of concern.\n\nKailee shrugged, \"Nothing I couldn't handle.\"\n\n***\n\nKailee ascended the stairs towards her bedroom. Most of the upstairs lights were off and the hallways were painted with dark shadows. She could hear Paul and Nathan's rough murmurs from downstairs, but didn't want to listen to anything else. The floorboards creaked beneath her feet as she pushed the bedroom door open. A soft evening breeze brushed her skin and she realized the window was open. Had it been left open from the night she'd climbed out? Her heart beat hard in her chest and she fumbled her hand across the wall to find the light switch. With a click, the room was bright and her eyes scanned her surroundings anxiously. Everything was as she'd left it. She let out a shaky breath. \"Get a grip, Kailee.\" She walked towards the open window nervously. The curtains were floating softly on the breeze and she gathered them to the side in her hands. From up here, she could see the length of the driveway and across the lush green gardens to the main street. She kept her eyes on the bushes, her mind expecting to see movement at any moment.\n\n\"Kailee?\"\n\nShe jumped suddenly, her back pressed flat against the wall in fear.\n\nMira stood in the doorway, her eyes full of concern. \"Sorry...did I frighten you?\"\n\nKailee urged her rapid heartbeat to calm. \"No. I mean, you did, but I'm fine.\" She moved to sit on the edge of the bed. Mira joined her. Together they lay on their backs, heads next to one another, staring up at the ceiling.\n\n\"Do you want to talk about it?\" Mira asked.\n\n\"Nope. Let's talk about something else.\"\n\n\"Okay. Umm...\" Mira paused in contemplation. \"Oh! Carl finally kissed me!\"\n\n\"Bleugh!\" Kailee stuck her tongue out in disgust. \"Spare me the details, I can't stand the Duchennes! You can do way better than him, Mira.\"\n\nMira let out an irritated little growl, \"Why does everyone keep saying that?\"\n\n\"Because it's true.\"\n\n\"Well if I recall correctly, you were once quite taken with a Duchenne boy.\" Mira teased. Kailee stiffened at the mention of that, she hadn't told Mira the full story about Carl's older brother Rob, only that it had ended and she didn't care for him anymore. She'd left out how he'd taken advantage of her and Nathan had nearly murdered him for it.\n\n\"I was stupid. Don't make my mistakes. New conversation please.\"\n\nMira sighed loudly, \"Oh, I don't know \u2013 what do you want to talk about?\"\n\nKailee smiled devilishly, \"Hmm... how about what's going on between you and my brother?\" she turned her head to the left and gave her fast blushing friend an accusatory stare. Mira sat upright faster than if she'd had a bucket of ice thrown over her.\n\n\"What!? Nothing! Why would you think there was something going on?\" Her pitch was unusually high.\n\nKailee scoffed. \"Are you kidding me? You two have been side-stepping each other since the moment I arrived home \u2013 you've barely said a word to each other.\"\n\n\"Well nothing is going on \u2013 aside from him being his usual asshole self of course.\" Mira was twirling her hair angrily. Kailee didn't think she'd ever seen the girl so agitated in all the years she'd known her.\n\nKailee laughed softly, \"Okay, okay. But just so you know,\" she touched Mira's arm assuringly, \"if there was something going on, I'd be happy for you.\" She slid beneath the bed covers and Mira flicked off the light, jumping in beside her. In the darkness, Kailee's mind flew to Dominic. She wondered if he was still furious with her or if he was just content to have received the money. Technically he'd won his little game. He had the ten mill; he'd proven whatever ridiculous point he was trying to make. Still, his words kept echoing in her head.\n\nYou know I'll come after you.\n\nShe pulled the blanket tighter around herself. She was being silly. There was no reason to fear him now. She was safe.\n\n\"Mira?\" she whispered to see if her friend was still awake.\n\n\"Yeah?\" a soft voice replied from the darkness.\n\n\"Could you please close the window?\"\n\n***\n\nKailee took in her reflection in the full length mirror. She'd lost a bit of weight over the past few days and her jeans had a bit of slack around her waist. Her eyes looked bloodshot from lack of sleep and not even her eyeliner had been able to cover it. She'd been restless all night and in the moments she had found sleep, her dreams had been of a tall, dark man touching her and making her scream out in pleasure. She'd woken with damp underwear, a flushed face and a dark craving. Thankfully Mira had still been sleeping, unaware of her shameful state.\n\nKailee reached for her sunglasses on the bedside table and placed them over her tired eyes. It was overcast outside, but what the hell. \"Mira, you ready?\" she yelled to the bathroom door.\n\n\"Two seconds!\" Mira called out sloppily, obviously with a toothbrush in her mouth. After what sounded like a quick gargle, the door swung open and Mira waltzed out, clad in a daring high-waisted leather mini skirt and soft white lace singlet. Kailee did a double take. Her friend's usual ringlets had been straightened out and fell in long, soft blonde drapes down her face and back.\n\n\"Woahh! Who are you and what have you done with Mira?\"\n\nMira rolled her eyes. \"Don't be so dramatic; I've straightened my hair before.\"\n\n\"Yeah, like twice. Is that my skirt?\n\n\"\n\nMira smoothed down the leather over her thighs and nodded. \"Yeah, I thought I'd give it a go; what do you think?\"\n\n\"Looks hot. Keep it.\"\n\nMira flushed slightly, then collected her bag from the edge of the bed. The two of them walked downstairs, their heels echoing on the wooden steps. They'd just about reached the front door when Nathan appeared out of the kitchen, a frown on his face.\n\n\"Kailee, what are you doing?\"\n\nKailee shrugged casually at her brother. \"Nadia is hosting brunch, we told her we'd make an appearance.\"\n\nNathan looked at her like she was crazy. \"You're kidding right? You've just got back, you can't... \"\n\nHis eyes suddenly fell on Mira who had been rustling in her handbag before pulling out her lip balm. His gaze ran over the length of her and Kailee noticed his mouth drop ever so slightly before he turned back to her to continue his sentence. \"I don't want you out in the public on your own, not so soon.\"\n\n\"Nath, what are you going to do? Keep me in hiding for weeks on end? They have their money. Whatever vendetta they had against you is over now. I'm safe.\" Wow, she just about convinced herself with that line. \"Besides, safety in numbers, right?\" she nodded to Mira who was sliding her glossed fingertip across her bottom lip.\n\nNathan's eyes skittered over Mira's bare legs. \"Who else is going?\" His eyes stayed on Mira, but Kailee gave the answer.\n\n\"Just the usual crew. Old school friends.\"\n\n\"It's forecast rain today; you should both dress warm.\"\n\nKailee motioned to her jeans in confusion, then realised her brother's eyes were still focused on Mira's legs. Her gorgeous blonde friend was blatantly ignoring every word Nathan said and had started typing a text message on her phone. \"We'll be fine; it's probably indoors.\"\n\nNathan grabbed his sister's elbow and pulled her aside while Mira was preoccupied with her phone. \"Are the Duchennes going to be there?\"\n\nKailee had never seen her brother look so concerned. \"I think they've gone to the country for the week.\" She narrowed her eyes. \"Why?\"\n\nNathan released her arm and shook his head. \"They're trouble. I don't want you hanging around them.\"\n\nKailee stifled a laugh. \"Me or Mira?\"\n\nNathan glared back at her. \"Either of you.\"\n\n\"Well while you like to think you have some influence over my actions, sadly you have none over Mira's.\"\n\n\"You're infuriating. Just stay safe \u2013 please.\"\n\nMira was already walking out the front door, but Kailee stayed a moment longer. \"Nath... \" her tone was serious.\n\nNathan's eyebrows raised slightly. \"What is it?\"\n\n\"Mira's my best friend and she's a beautiful person.\"\n\nHe frowned, \"I know that.\"\n\n\"Good. Then you know she deserves better than to wind up with a guy like Carl Duchenne.\" Kailee stared him down for a moment, then turned and followed Mira out the door, leaving Nathan standing in the hallway, completely stumped.\n\n***\n\nNadia's house was half the size of Kailee's, but impressive in its own right. It had a generous back garden full of pink and white roses and a large sunroom which had been set up for at least twenty guests with white clothed tables and an abundance of canap\u00e9s and champagne.\n\nMira and Kailee plucked a glass each and joined the small crowd of guests outside on the perfectly manicured lawn.\n\n\"Kailee, darling!\" Nadia, ever the schmoozer, bound over to her, her fake breasts protruding over her too-tight pink crop top. She air kissed Kailee with plump red lips, then did the same to Mira.\n\n\"Mira, you look simply delicious \u2013 you should wear your hair like that more often!\" She gave the quick-blushing Mira a saucy wink before turning back to Kailee and linking her arm through hers, guiding her away from Mira.\n\n\"We missed you at the Northmount last weekend \u2013 poor Jean Marc was so looking forward to meeting you.\"\n\nKailee turned back to Mira and rolled her eyes. Nadia had been trying to set her up with her French cousin for over a month now.\n\n\"Luckily he's here today! Come, I'll introduce you right now.\"\n\nKailee necked her champagne, dropped it on a nearby table and collected a fresh one while Nadia led her over to a group of young men surrounded by a cloud of cigar smoke. The last thing she needed right now was to meet more men. All eyes turned to Kailee and Nadia as they approached the group and Kailee felt a few appreciative gazes wander over her body. Nadia pulled her over to a young-faced man with tanned skin and a cute smile.\n\n\"Kailee, this is my cousin, Jean Marc.\"\n\nThe young man stepped forward and, with his cigar free hand, he took one of Kailee's hands and brought it to his lips, holding her eye contact.\n\n\"A pleasure,\" he said with a strong accent, \"Please, call me Marc.\"\n\nHe was slightly shorter than her with her stilettos on, but for his lack of height, he made up with charm. Kailee might have actually been into him if she could manage to get a particular pair of black eyes out of her mind. \"Nice to meet you,\" she smiled lightly, then reached out to his cigarred hand, \"May I?\"\n\nMarc looked slightly surprised, but handed her the cigar. Kailee drew the smoke into her mouth and savoured it for a moment before releasing a soft cloud from her lips into the air around them. \"Not bad,\" she handed the cigar back to him and sipped from her champagne flute.\n\n\"It's rare to find a woman who enjoys a cigar.\" Marc was watching her intently, standing a little too close for someone she'd only just met. Or maybe she was just being paranoid; she never used to have an issue with proximity.\n\n\"Most women are boring,\" Kailee shrugged, distracting herself by glancing around the yard. It was the usual crowd she'd gone to school with. Mostly the rich and arrogant showing off their latest outfits or, in Nadia's case, latest assets. She caught the eyes of a few people she actually liked and nodded at them with a light wave. Jean Marc was asking her a question, but she didn't catch it because Carl Duchenne had just walked in, looking as cocky as ever. He kissed a few girls' cheeks sleazily before his eyes fell on Mira. Kailee didn't miss the sly smile on his face, nor the hunger in his eyes as they drank in her tight skirt and creamy legs.\n\n\"I'm sorry Marc, would you excuse me for a moment?\" she touched his arm lightly and gave him a winning smile before walking away, leaving him with a baffled expression.\n\nBy the time she'd crossed the lawn, Carl was already planting a full kiss on Mira's lips, one hand firm on the back of her neck, the other snaking around her tiny waist. Mira seemed rather stiff for a girl who was being kissed by her prince charming. When they parted, Mira looked around nervously, a dark flush in her cheeks.\n\n\"Carl! What a nice surprise!\" Kailee smiled falsely as she reached the happy couple. \"I was under the impression you were hiking this weekend.\"\n\nCarl gave Kailee a snide look, then turned back to Mira, pulling her closer to him. \"Well that was until I heard this gorgeous girl was attending Nadia's brunch. I couldn't miss out on the opportunity to see her.\" Mira was beaming with joy at his words; apparently she didn't see right through him the way Kailee did.\n\n\"How strange, we only RSVP'd an hour ago.\" Mira was giving her daggers, but Kailee ignored her.\n\n\"Yeah, well, you know how fast word travels around here.\" Carl planted a soft kiss on Mira's shoulder and Kailee resisted the urge to scrunch up her nose in disgust.\n\n\"It certainly does. Speaking of, I hear the Jardine Hotel Chain might be up for sale soon; I hope business isn't going badly?\" Kailee gave him her best false-concerned expression.\n\nCarl looked agitated. \"I don't know where you heard that nonsense. The Jardine brings in an annual profit that rivals the Brook,\" he referred to her own family's main hotel chain. \"My brother is managing it now and business is booming. You remember Rob don't you?\" Carl spoke casually, but Kailee didn't miss the knowing glint in his eyes.\n\n\"How could I forget?\" Kailee smiled disdainfully, \"his manners were impeccable. Clearly a family trait.\"\n\nMira was shifting uncomfortably, unsure of whether to cut into the conversation. Carl matched Kailee's cool smile and collected a full glass of champagne from the table beside him. \"Enough shop talk,\" he turned to Mira, \"Come, let's go inside; I hear the oysters are amazing.\"\n\nMira glanced at Kailee as if seeking her permission. \"Would you like to join us, Kailee?\"\n\nKailee shook her head, \"No, you run along. I've got a few people to make small talk with.\" Jean Marc was already walking toward her eagerly.\n\n***\n\nIt was early afternoon when they left the party and the sky was threatening to drizzle, despite the warm air. \"Are you sure you're okay to drive?\" Mira was walking airily towards the Audi Nathan had loaned them for the day. Although Kailee had knocked back several champagnes at the start of the day, she'd skulled some water at lunch time and felt level-headed enough to drive them both home.\n\n\"I'm fine,\" she said, opening the passenger door for her stumbling friend and yanking her skirt down, which was slowly creeping up her thighs.\n\n\"Thanks,\" Mira smiled and climbed into the car. \"I don't know how I got tipsy so quickly.\"\n\nKailee shook her head and closed the passenger door before walking around to the driver's side and sliding in. \"Maybe it had something to do with the amount of drinks Carl was handing you.\"\n\nShe saw Mira's mood deflate instantly. \"You really don't like him, do you?\"\n\n\"I just don't trust him with you.\"\n\nMira collected Kailee's hand and squeezed it hard. \"Look, I know you all think I'm a delicate flower who needs protecting, but I'm a big girl, you know. You're always getting ticked off at Nathan for being overprotective so you should know how shit it feels when you do the same thing to me.\"\n\nKailee thought for a moment and then nodded, she hadn't ever considered it from that perspective. \"You're right. I'm sorry. If you want to be with Carl then I fully support your decision. But,\" she paused for effect, \"if he hurts you, he gets a broken nose. And that's if I'm feeling generous.\"\n\nMira laughed, \"Okay, deal.\" Kailee steered the car down the driveway and onto the main road. \"So um, what exactly is Nathan doing about the kidnappers?\" Mira spoke softly, her hesitation about the topic obvious. If she didn't have alcohol in her system, Kailee though, she likely wouldn't have brought it up at all.",
        "\"He's not doing anything.\" Kailee kept her expression blank.\n\nMira scoffed, \"What do you mean he's not doing anything?\"\n\nKailee changed gears angrily. \"Leave it, Mira.\"\n\nMira looked like she wanted to say more, but kept her lips pursed. They both stayed silent for a few minutes and Mira relaxed back into her chair, the topic clearing from her mind. \"So Jean Marc seems lovely,\" she eventually said, her tone light.\n\nKailee rolled her eyes; she was surprised Mira had waited this long to bring up the man's name. \"Yes. He was very charming,\" she agreed nonchalantly.\n\nMira waited for her to continue. When she didn't, she gave her an incredulous look. \"Oh, come on, Kailee! The guy was perfection in every way. Not even you can be that selective! Nadia told me she's sure he's going to ask you to be his date at the Grandeur this weekend.\"\n\n\"He did ask me.\" Kailee said casually.\n\n\"What!\" Mira grabbed Kailee's arm so forcefully that she very nearly veered into the sidewalk. \"Oh my gosh, what did you say?\"\n\n\"I said 'no' of course.\"\n\nMira's excitement deflated instantly. \"What do you mean you said no?\"\n\n\"I mean, I politely declined his offer.\"\n\n\"But you don't have anyone else to go with, do you?\"\n\n\"No. And that's precisely the way I'd like to keep it.\"\n\nMira frowned, \"Oh, Kailee. The poor guy must have been devastated.\"\n\nKailee snorted. \"Oh, please! Every girl there had her eyes on him. He won't have any issues finding another date.\" She pulled up into a parking bay near a small shopping centre.\n\nMira looked around in confusion. \"Oh, why are we stopping?\"\n\n\"I just need to duck in and get something. You wait here, I'll be back in five.\" She jumped out of the car before Mira had a chance to protest. The glass double doors opened as she approached and she ducked into the chemist on the right hand side. Thankfully there weren't many people around. She practically sprinted up to the counter, eager to get in and out as quickly as possible.\n\n\"Hi, can I help you?\" The lady at the counter was middle-aged and motherly, a genuine smile on her face, which made Kailee feel slightly more comfortable about what she was there to do.\n\n\"Um, yeah,\" her eyes dropped to the floor. \"I need the morning after pill.\"\n\n***\n\nBy the time they arrived home, the sun had already set and Nathan had called twice to check up on them. Mira had insisted they stop in at the jewellers on the way home; she'd already bought earrings for the Grandeur Ball, but she wanted to be sure she'd made the right choice. Kailee had told her several times that the earrings she had were gorgeous, but Mira wasn't entirely satisfied with them. \"I just want something that really stands out with my up-do,\" she'd said with a frown. Kailee honestly couldn't care less, but had nodded and tried to seem enthusiastic.\n\nNow she sat in the kitchen with a large glass of white wine in front of her, anxiety clawing at her stomach. Anxiety, confusion, and even a touch of sadness, though she couldn't quite understand why. She heard footsteps and glanced up. Paul's eyes were bloodshot, which always happened when he'd been spending too much time looking at a computer screen. He was wearing the same as what he'd had on yesterday and his clothes were terribly creased. He looked surprised to see her sitting alone and pulled up a chair beside her.\n\n\"Hey, I thought you were hanging with Mira?\"\n\nShe nodded, \"I was. I think she's gone and passed out upstairs or something.\"\n\nPaul smiled amusedly, \"Lightweight.\" Kailee smiled back and sipped at her wine. \"Everything okay?\" he was watching her with concerned green eyes. She simply nodded back. \"Look, Kailee...\" he paused for a moment, trying to find words. \"Nath has told me he's not looking for the guys who did this to you. He's also told me I'm not to do anything either. He's our older brother and I respect him.\"\n\nKailee nodded, \"Paul, it's okay-\"\n\nHe interrupted before she could finish her sentence. \"But at the end of the day, I care about your safety. And if you want me to track them down, I will.\" His expression was dark and she realised he wanted her permission to hunt these guys down. Part of her badly wanted to see Dominic suffer, to be punished for what he'd done to her, but mostly she just wanted it to all be over.\n\n\"I think Nathan's right,\" she said firmly. \"We should leave it.\"\n\nPaul looked surprised at her answer, then shook his head in disappointment. \"Okay, if that's what you want.\" He stood sulkily and walked around to the sink, filling a glass with tap water. He took a mouthful and then collected a small parcel that was sitting on the bench. \"This arrived for you today,\" he handed it to her. \"Must be an early birthday present.\"\n\n\"Oh,\" Kailee frowned. She rarely received birthday presents in the mail. Her relatives had always been distant and the last time she'd seen most of them had been her parents' funeral. She used her nails to tear the thick paper apart and pulled out a small velvet box. It was the kind used to hold jewellery. She flipped the lid open and then suddenly she was falling backwards off her chair.\n\n\"Shit, Kailee!\" Paul quickly ran to her side, holding her upright. \"Are you okay?\"\n\nKailee breathed. Hard. \"I'm fine. Just a little dizzy spell.\"\n\nPaul bent down to collect the velvet box which had fallen from her fingers and landed on the ground. He examined the contents and frowned, \"How funny, it looks just like the necklace Mum used to wear. The same heart pendant and everything.\" That's because it was the same necklace. Kailee's heart pounded ferociously in her chest.\n\n\"Oh, there's a tiny card in here, too,\" he pulled out a small piece of white card. Kailee snatched it from him and stared at the words, the colour draining from her face.\n\nSoon x\n\n\"Paul,\" she looked up at her brother and tried to keep her expression neutral. \"I changed my mind. I want you to find out as much about Dominic as you can.\"\n\n***\n\n\"That's great news, Mr Jamieson, I look forward to seeing you on Monday.\" Nathan wrapped up the conversation with one of his clients. It was getting late and Paul had been on his case about making calls after business hours. His office door creaked open and Nathan looked up to see Mira in the doorway, her straightened hair now in soft, thick waves past her shoulders. He hung up the phone and turned his attention to her.\n\n\"Mira,\" he said uncertainly, \"I wasn't expecting you.\" She started walking towards him, her expression unreadable. \"I wanted to ask you about Kailee. Did she seem okay today?\" Mira still didn't respond; instead, she approached him headstrong. Nathan opened his mouth to speak again, but Mira's hand came down hard against his cheek. The contact made a loud clapping sound and he felt an instant stinging sensation. He stood suddenly, eyes wide. \"What the hell, Mira!\"\n\n\"YOU!\" she yelled at him, her eyes sparkling with ferocity, \"I can't believe you're not tracking down Kailee's kidnappers! She's your sister for crying out loud!\" she lifted her hand to strike him again, but Nathan took a firm hold of her wrist and pushed her back against the wall behind them, causing her to let out a tiny \"oomph\". He caught a whiff of alcohol on her breath and shook his head in disapproval.\n\n\"You're drunk.\"\n\n\"Don't change the subject.\" She became awfully bossy when she had alcohol in her system, he noticed. She even looked beautiful when she frowned, her eyes a sexy stormy blue and her glossed lips full and pouty. \"Why haven't you called the police? I don't care how you know these people, they need to be behind bars!\"\n\n\"Sit down!\" Nathan growled at her and released her wrists, motioning towards the chair across from his desk. Mira huffed, but took a seat anyway. She flattened out her singlet which had crumpled slightly, and brushed her long hair over her left shoulder. Nathan sat back into his own chair. \"Now, I'll tell you the same thing I told Paul. Their vendetta was against me. They were angry at me. It's over now.\"\n\n\"It doesn't matter,\" Mira argued, \"Kailee could have been harmed! That's your sister, Nath.\" She shook her head at him angrily.\n\nNathan let out a heavy sigh. \"Look, Mira, I know these guys. Jakob has a kind heart and wouldn't have let anything happen to her. I'm sure Dominic would have been leading the whole operation and, although he's a hard man, he wouldn't have touched her. I dare say she would have drove him up the wall with her attitude though.\" The right side of his mouth twitched into a light half smile. \"The point is, it's over. As much as I want to kick the shit out of the both of them, it will just cause more dramas for all of us and we've been through enough.\" He let out a slow breath. \"So are we okay now?\"\n\nMira bit her bottom lip, her expression frustrated. \"It's just that Kailee seems so distant lately. You're certain they wouldn't have hurt her?\"\n\n\"I'm positive. Trust me, if I thought otherwise I'd be out there demanding blood.\"\n\nMira nodded slowly. \"Okay.\" Her features softened, evident relief washing over her. Then she scrunched up her nose guiltily, \"I'm sorry for slapping you.\"\n\nNathan smirked, she was the most well-mannered woman he'd ever met. \"I'll live.\"\n\nThere was a moment of awkward silence between them and Mira looked down at her hands, then pushed her chair back, making to leave. \"Wait, Mira... \" Nathan stood suddenly, he couldn't bear to see her go, not yet. She looked up at him, her eyebrows raised, waiting for him to speak.\n\nHe walked around the desk, coming to stand in front of her small frame. She was angelic in every way. \"I'm sorry about what I said the other night.\" He paused, trying to find the words to continue. Mira simply stared at him, waiting. \"I don't think you're inexperienced,\" he looked her straight in the eyes, \"I think you're intelligent, kind hearted, and gorgeous.\"\n\nMira's eyes fell to the floor shyly. \"Nathan... \"\n\nHe caught her chin lightly with his fingertips and gently lifted her gaze to his. \"Come to the Grandeur with me tomorrow.\"\n\nShe frowned slightly. \"I already told Carl I'd go with him.\"\n\nNathan felt a pang of jealousy and anger run through him. Like hell she was going to the ball with a Duchenne. He wrapped his arms around her tiny waist and slowly began pulling her into him. If she wanted to pull away, he'd let her. But she fell into him without any reluctance at all. Perhaps it was the alcohol making her so willing, but he didn't care. He brought her soft body up against his own built one and he could feel the quick pounding of her heartbeat against his chest. He breathed in the scent of her sweet, floral perfume and then slowly dipped his head down, bringing his lips agonisingly close to hers. Mira's eyes fluttered closed in hesitation as his mouth continued to hover. \"Tell him you changed your mind,\" he whispered. \"That you're going with someone else.\"\n\n\"Mmmm...\" Mira's eyes remained closed, her head tilting upward, anticipating the touch of his lips. He didn't leave her waiting. He gently kissed her at first, teasing her lips with his. She moaned softly, her lips parting and allowing him to explore her mouth sensually with his tongue. He could taste champagne on her breath and deepened the kiss further. Her body leaned into him and he wrapped his arms protectively around her, kissing more and more forcefully. Her hands clenched at his shirt, drawing him as close to her as she could; it seemed as though their bodies couldn't get close enough. Wanting more, he broke the kiss, bent his knees and grabbed her by the hips, collecting her up into his arms. Mira let out a tiny exclamation of surprise before wrapping her legs around his waist and running her fingertips through his hair. Nathan looked at the goddess of a girl in his arms and couldn't help but smile in appreciation. He turned on the spot and began carrying her towards the adjoining door which led to his bedroom. \"Where are you...? Oh!\" Mira jumped slightly in his arms as he used his right leg to push the door open.\n\nThe room was dark aside from the bedside lamp which dimly lit the bedspread. Nathan carefully lowered Mira onto the mattress and she let her legs drop from his waist, self-consciously tugging at the hem of her skirt which had started to slide up her thighs. He couldn't help but smile at her innocence. She looked up at him nervously from the flat of her back. Her cheeks were flushed, most likely a combined result of the kissing and her bashfulness. His lust grew at the sight of her, lying on the bed waiting for him. Slowly he joined her, placing his knees on either side of her hips before leaning down to kiss her again. Her gentle hands found his lower back and, hesitantly, she started untucking his shirt. He reached behind him, caressing her hands before taking hold of the material and drawing his shirt over his head. He tossed it onto the floor and turned back to find Mira drinking in the view of his bare chest. Her fingertips brushed over his abdominal muscles and he felt his dick pulse in response. Mira must have felt it too, because her eyes widened slightly and her fingers suddenly stopped moving.\n\n\"Nathan... \" her voice was barely a whisper and he saw a flash of uncertainty in her eyes.\n\n\"What is it?\" He brushed a lock of blonde hair back from her face.\n\nShe bit her lip shyly. \"I'm nervous.\"\n\nNathan cupped her face in his hands and shook his head in amazement at the loveliness of her. \"You're safe with me,\" he said softly. \"I promise I'm not going to do anything you don't want me to.\"\n\nShe smiled lightly and brought her hands to fall atop his. \"I know, I trust you.\"\n\nThey lay there for a moment, staring at one another and he could still feel her heavy heartbeat against his torso. Then, slowly he started to shift down the bed, his hands softly tracing her sides as he moved, caressing her waist, her hips, and then her legs. He could hear her soft, relaxed exhales as she responded to his touch. Her skirt was already high up on her thighs from their movement, and now he started to gently slide the material higher, carefully watching her face for any objections. Her eyes watched him curiously, her lips slightly parted and he didn't break eye contact with her as her skirt was lifted up to her waist.\n\n\"Tell me if you want me to stop,\" he said with sincerity. She nodded her understanding and then his fingers found the hemline of her cotton underwear. He drew the material down and she slightly raised her hips to allow him to fully remove them. His lips traced her thighs and calves as the underwear was trailed down to her ankles, over her feet and onto the carpet. Mira's legs stayed together, her body slightly tensed at the sense of being exposed. Rather than remove his own pants, Nathan moved to lie next to her, gently rolling her onto her side and nestling in behind her. She looked back at him, confused, and he softly brushed her neck with his lips. He brought his arm around her and traced her upper leg with his fingertips, then moved his hand gently between her legs. He was relieved to find her already wet; as his forefinger gently touched her, she let out a deep sigh and her legs relaxed, parting ever so slightly. He traced slow circles around her clitoris, drawing more and more sighs from her and when he moved his finger inside her, she moaned loudly and ground her ass into his groin. He wanted nothing more than to fuck her sensually right then, but this was Mira. And she deserved to be treated like a queen.\n\nNathan's fingers continued to tantalise her, and as he teased, she dampened further. He loved the feel and the smell of her as she coiled in his arms, opening her legs wider to give him more room to move. While his finger delved deeper, his thumb continued to rub against her clitoris. She began squirming in his arms, the pleasure overwhelming her. She rolled onto her back, her desperate eyes capturing his as his fingers continued their torture. Her legs began to roll about, while she struggled to contain the sensations. Nathan caught one of her legs with his own, pinning it to the bed and making her still.\n\n\"Nathan...\" she breathed, her voice high and strained.\n\n\"I've got you,\" he murmured in her ear. He slipped another finger inside her and increased the pace of his hand. The combined sounds of his fingers dipping inside her with the heightening of her moans caused his erection to further strain against his pants. Mira's back arched and her mouth opened wide as her orgasm hit. Nathan caught her open mouth with a passionate kiss and allowed his fingers to gradually slow. She pulsed around his fingertips and her body tensed and relaxed as wave after wave rolled over her. As he kissed her she let out tiny, blissful moans, coming down from her climax. He gently slid his fingers out of her and pulled her tighter into him.\n\n\"You are so beautiful,\" he coaxed in between kisses. She smiled sleepily and let her head nestle into his chest. He collected the blanket from the end of the bed and brought it over their bodies, his arm wrapping protectively around her. He listened to her breaths as they slowed into slumber, and then he too allowed himself to fall into a deep sleep.\n\n***\n\nKailee fingered the heart pendant, tracing the curved edges. She'd watched that necklace wash down the drain the first day of her entrapment. How had he managed to get it back? Perhaps he'd just bought a new necklace, it wasn't hard to find a heart pendant. Yet, it was the same size, the same weight, and the clasp was perfectly intact.\n\nHer head was pounding. She'd consumed a good three quarters of a bottle of wine last night. Paul had been suspicious as soon as he saw the card, but Kailee had brushed it off and said it was likely Jean Marc, her newfound admirer who had sent her the gift.\n\n\"Seems a little eager for someone who's only just met you,\" he'd said, not entirely convinced.\n\nKailee felt terror in the pit of her stomach. The note had said 'Soon'. Did this mean Dominic was going to come after her? Or was this just his way of scaring her, of making her pay for shooting him? She'd asked Paul to find out where he lived, where he worked, what events he attended. But she'd made it perfectly clear he wasn't to take any action.\n\n\"Kailee, we're leaving in five!\" Mira's voice travelled up the stairwell.\n\nShe stood and faced the full length mirror. She had chosen the dress out months before, a full length black and red gown with small loose straps that sat off the shoulder, a slight dip at the chest to show just a hint of cleavage and a daring back that dropped all the way to her hip bones. It accentuated her slight waist and the curve of her hips, while still maintaining elegance. She'd scooped her hair up nicely, with the exception of a few dark strands which fell in soft waves down her perfectly made up face. Anyone who saw her tonight would never tell she was a wreck of nerves inside. She looked down at the necklace in her palm. Part of her wanted to get rid of it now that it was associated with Dominic, but it was her mother's necklace. She wouldn't let him take that memory away from her. She brought the chain around her neck and did the tiny clasp at the back. The little heart sat perfectly above the dip in the dress.\n\n\"Kailee!\" Mira's voice rang out again.\n\nKailee took a deep breath and then made her way out to join the others. Mira looked beautiful in a deep blue gown with lace detail; it was a modest and classic look that suited her well. Her brothers were both in black tuxedos and Nathan wore a dark blue tie to match Mira's dress. As she descended the stairs she noticed Nathan place a gentle kiss on the tip of Mira's nose and she couldn't help but smile. She was still angry at her brother - she was positive he was withholding some major details from her - but these were two good people who deserved to be together and she was happy for them. As she reached the bottom of the stairs, Paul came to her side and collected her arm in his. He gave her a peck on the cheek and then spoke in a low tone so only she could hear, \"His full name is Dominic Malikov and he won't be at the ball tonight.\"",
        "\"Malikov,\" she whispered the Russian surname, trying out the pronunciation herself, then looked up at Paul uncertainly. \"You're sure?\"\n\n\"I'm positive. He's out of town on business.\"\n\nKailee nodded and Paul led her towards the front door, but Kailee hesitated. \"I'll meet you in the car... I forgot something.\" She ducked into the kitchen and started rustling through the cutlery drawers before she came across a sharp filleting knife. It had a protective sheath over the blade and was the perfect size. Collecting some duct tape from another drawer, she carefully positioned the knife against her lower leg, just above her ankle and taped it securely in place before letting her dress drop over it. No one was going to mess with her tonight.\n\n***\n\nThere was a queue of black and white limousines piling up at the entrance of the building. Never a clich\u00e9, the Brooks had chosen to arrive via Ferrari. Nathan tossed the keys to the nearest valet and then opened the side door for Mira, gently taking her hand and helping her out of the vehicle. Paul offered the same to Kailee, but she didn't need the helping hand and shrugged his away. As the four of them approached the entrance, they were bombarded with photographers, the flashing lights causing Kailee to blink numerous times in order to maintain her vision. Nathan wrapped a hand modestly around Mira's waist and the pair posed for a quick photograph. Kailee rolled her eyes; they were a beautiful couple and the press was going to go mad over them. Paul pulled her in for a brotherly hug and the two of them posed for a photo of their own before heading towards the entrance of the building.\n\nThe hallways were humming with a mix of conversation, laugher and music. The young man at the register requested their names before recognising Nathan and blushing ashamedly. \"I'm so sorry, sir, I didn't recognise you.\"\n\nNathan smiled kindly back at him. \"There's no need to apologise.\"\n\nThere was a large draped curtain at the entrance and the four of them wandered through, but Kailee turned back at the last minute, a nagging thought in the back of her mind. \"I'll be just a minute,\" she said to Paul, encouraging him to continue on inside without her. She strolled back to the register and the young man looked up at her in surprise. \"Excuse me,\" she said softly, \"Would you be so kind to tell me if a Mr Dominic Malikov is in attendance tonight?\"\n\n\"Certainly, Miss Brooks.\" His eyes ran down the attendance list, checking all the surnames starting with 'M'. \"Ahh no, we don't seem to have any Malikovs listed here, Miss Brooks.\"\n\nKailee let out a breath of relief internally, but frowned slightly at the man. \"Oh, that's a shame. Thank you for letting me know.\"\n\n***\n\nShe was three quarters of the way through her fourth glass of wine when she noticed Jean Marc approaching her through the crowd of suits and dresses. He looked even more handsome than he had at Nadia's brunch, his black tuxedo perfectly fitted, his light brown hair trimmed and a carefully shaped shadow outlining his jaw. He wore a hopeful smile and collected her hand without hesitation, taking it to his lips and gently kissing her knuckles.\n\n\"Kailee,\" her name sounded sexy with his European accent, but it was no match for another accent she knew all too well.\n\nHe released her hand and she half-smiled. \"Marc, always lovely to see you.\"\n\nMarc raised an eyebrow knowingly, \"I'm not sure you truly mean that, but I'm determined to make it true.\" Of course he did. \"I was hoping to find you in time for the waltz.\"\n\nKailee took a sip from her glass and nodded towards the dance floor, \"Looks like you've missed your chance.\"\n\n\"There's another waltz after this,\" his eyes remained hopeful.\n\nKailee laughed lightly, \"You're persistent, I'll give you that.\"\n\n\"Some things are worth persisting for.\"\n\nShe had to try very hard not to roll her eyes. Europeans were all the same \u2013 overdramatic romantics until they had what they wanted. She sighed heavily, \"You can have one dance.\"\n\nMarc smiled confidently, \"One is all I need.\"\n\nThe music to the current waltz began to fade and Marc held his hand out for her invitingly. She placed her now empty glass on the table beside her and took a hold of his hand. He intertwined his fingers with hers gently and pulled her towards the sound of the music. Together they walked to the centre of the dance floor and she felt many eyes fall on them before they were joined by several other couples. Marc's eyes were on her intently; it was lucky she'd worn low heels or they might have looked odd with her taller than him. His palm brushed her lower back, pulling her softly into him as his other hand collected her left one. She lifted her right arm to rest on his shoulder and then the music was starting.\n\n\"You are so very beautiful,\" Marc cooed in her ear. She had a sarcastic response building, but the music didn't give her the time to get it out because before she knew it their feet were moving and she was struggling to keep up.\n\nA natural at most things, ballroom dancing wasn't Kailee's forte. She could dance the legs off any girl in a nightclub, but she wasn't passionate enough about something as formal and structured as a waltz so she never bothered to perfect which way she needed to step. Thankfully Marc was a natural and she followed his lead, allowing him to guide her side to side, back and forth. He kept his eyes on hers the entire time, a genuine smile on his face, which was so contagious she soon found herself mirroring it. A couple nearby bumped into them and Kailee looked up to meet Mira's ecstatic face. Nathan was sweeping her along the dance floor and he'd purposefully lined up his path with theirs.\n\n\"Fancy meeting you here!\" Mira piped over the music and Kailee couldn't help but laugh. Nathan gave a welcome nod to Marc, obviously sussing the young man out and determining whether he was a worthy dance partner for his little sister. Then Marc spun her around and quickened their movement, making her giddy with excitement. All of the thoughts she'd had running through her mind disappeared as the music and the movement took over. She was twirled around again and again until not a centimetre of the floor had been untouched by their shoes. When the music finally began to fade out, she was surprised to find herself disappointed that it was over. She looked around the room, breathless and grinning from ear to ear, then brought her gaze back to Marc. He was looking down at her adoringly. The smile was gone from his face and she realised all too late that he was leaning into her. She felt an inner panic, but couldn't turn away from him while they were in the centre of the dance floor, what would people think? His lips met hers lightly, his fingertips brushing her flushed cheek. She didn't return the kiss, but she didn't pull away either; she simply let the moment happen. It was a nice sensation, but she couldn't help feel a craving for the wild, forceful kisses she'd experienced with Dominic. In that moment, she realised, she craved that loss of control, of having someone take her so passionately and relentlessly.\n\nShe pressed her hands against Marc's chest, creating a space between them. \"Uh, sorry, Marc. Would you excuse me for a moment? I just need the bathroom.\" She avoided his eyes, knowing full well she'd see disappointment in them.\n\nShe moved quickly towards the ladies room. She needed air. One look at the long queue of women at the bathroom and she knew there was no air in there. She cast her eyes around the corner. Carl's brothers and a few of their mates were sitting at a table, drinking heavily and eyeing off every woman who walked past. She wasn't in the mood to deal with those assholes. A staircase was next to their table and, as a young busty blonde walked past and caught their attention, Kailee dashed to the stairs and ascended them quickly without being seen. She spotted a small, closed off lounge area at the top of the stairs which appeared to be empty. Thank God. She ducked in and half closed the door before taking a seat on the large leather couch. She placed her head in her hands. Jesus, what was wrong with her? Jean Marc was nice. Nicer than any man she'd ever met, not to mention attractive, and yet she wasn't able to make herself interested in him. She heard the door click shut and she jumped up suddenly, her heart beating fast. When she turned around and saw the tall, dark figure standing in front of her, her legs just about buckled from underneath her.\n\n\"Miss Brooks,\" Dominic's accented voice sent shivers up her spine. He bowed ever so slightly and took a bold step forward. \"Looking as lovely as ever.\"\n\nKailee didn't realise she'd stepped backward until she felt the firm wall against her back. \"How did you get in here?\" her voice came out more frantic than she'd planned. \"The security... it's not possible.\"\n\n\"Yes, well, the funny thing about being a major sponsor for an event is that you tend to get an invite to attend.\" The corners of his lips turned up ever so slightly.\n\n\"But the guest list... \"\n\n\"A last minute RSVP I'm afraid; how terribly tardy of me.\"\n\nKailee quickly reached down to the hem of her dress and pulled out the knife she'd prepared. She tossed the blade cover onto the floor and held the knife up with a shaking hand, pointing it directly at him. \"Don't come near me.\"\n\nDominic leaned casually back against the door, a dark smile on his face. \"Do you remember the first night we met? I said you looked like a quick learner.\" He placed his right hand on his left shoulder, the same place she'd shot him on the day of her escape. \"Turns out I couldn't have been more wrong.\"\n\nHe moved so quickly Kailee barely had a chance to think. His body hit hers with such force that the wind was knocked clean out of her. As she struggled to catch her breath, he grabbed a hold of her wrist and twisted it so hard she cried out in pain. The knife fell to the ground and Dominic shoved her forcefully up against the wall while she struggled frantically in his grasp. Her free fist aimed at his wounded shoulder, but it was exactly where he expected her to aim. He caught a hold of her elbow and used both hands to spin her around. A forceful shove and the front of her body was firmly against the wall, her right cheek pressed into the surface.\n\n\"Let me go!\" She tried to kick a leg out, but her foot caught on the length of her dress.\n\nDominic used one strong hand to hold both of her wrists still and used the other to loosen the tie at his neck. He yanked the loop over his head and then wrapped it roughly around both of her wrists. The material cut into Kailee's skin and she squeezed her fingers tight to keep the circulation flowing.\n\n\"Stop!\" Kailee cried. \"You have your damn money! Let me go!\"\n\n\"You're right,\" Dominic pushed her harder against the wall and spoke directly into her ear. \"I'm sure Jakob will pass on his regards to Nathan next time he sees him.\"\n\n\"Jakob? I thought the money was for you?\"\n\n\"Ahh, so big brother didn't tell you the full story? That doesn't surprise me.\" Dominic took a hold of Kailee's bound wrists and gave her a firm push so she landed face first into the armchair.\n\n\"Ugh,\" she used the strength in her legs to heave herself upright and face Dominic. There was a few days worth of stubble on his jaw, but it only added to his masculine sexiness. His dark eyes watched her curiously.\n\n\"So are you going to tell me why you did it?\" Kailee lifted her chin haughtily, wanting answers. \"You both clearly don't need the money.\" Dominic began unbuckling his belt and Kailee's eyes widened. She clenched her fists and pulled desperately, but the bindings remained tight.\n\n\"I didn't come here to give you a history lesson, girl.\" He slid the belt from his waist and folded it in half before stepping toward her, holding the looped leather in one hand. \"I came to collect your debt.\"\n\n\"Wh-What?\" Kailee's eyes were on the swinging belt in Dominic's hand. \"I don't have any debts, I don't owe you anything!\" She glanced behind him at the closed door. Would anyone hear her over the music if she screamed?\n\n\"No?\" He raised an eyebrow sceptically. \"Your little routine earlier this week left Jake with a concussion and my arm in a sling for three days. He touched his injured arm again, \"Luckily for you, the bullet only grazed the surface.\" he took a step forward, \"Now are you going to take your punishment quietly or do I have to force you over my knee?\"\n\nHis words sunk in and panic overcame her. She collected her skirts and bolted headstrong towards the door. Dominic's arms were tight around her waist within seconds and the room spun as she was lifted over his shoulder. Her legs kicked out, but met only air as he kept them at a distance from his face.\n\n\"Definitely a slow learner,\" he huffed.\n\n\"Stop!\" she cried. The world spun and then came to a halt as Dominic took a seat, Kailee's stomach lying across his lap. She squirmed, but he held her firmly, and all the movement did was send pain through her restrained arms. \"I'll scream!\" she threatened.\n\nDominic's hand smoothed slowly over her bare back. \"Every news station in the state is here tonight. Your brothers are likely meeting new clients, networking with existing clients, making important business deals...\" his hand moved down towards the curve of her arse. \"How do you think business will go for them if their little sister is caught in such a state?\"\n\n\"But I'm not...\" Kailee began, but she stopped short as Dominic clenched his hand around the silk of her dress and began to drag the material upward. Kailee clenched her eyes tightly shut and she heard Dominic's slight intake of breath at her exposed flesh. His fingers hooked around the hem of her panties, then slid them easily from her hips and down her long legs, dropping to her ankles. She shivered at the cold air against her bare skin.\n\n\"Spread your legs.\" Dominic ordered, his voice low and gravelly.\n\n\"Fuck. You.\" Kailee gritted her teeth and kept her legs firmly together.\n\nShe heard the crack before she felt the pain. The leather of Dominic's belt hit her hard against the bare flesh of her ass and she couldn't stop the loud cry that left her mouth as her bottom burned from the strike. \"You fucking bastard!\" she roared, squirming in his grip.\n\nCRACK! Another strike, this time against her upper thigh. She yelped in agony and tried to roll off his lap. A firm, warm hand on the flat of her back kept her in one place and she growled in frustration. The next hit came down even harder on the soft flesh of her right butt cheek and she let out a frustrated sob, her vision blurring from the hot tears welling in her eyes.\n\n\"Stop...\" she choked.\n\n\"Spread your legs,\" Dominic repeated firmly.\n\nKailee kept her head down and didn't budge. The belt landed on a fresh patch of skin and she hissed. Swallowing her anger, she parted her legs ever so slightly.\n\n\"You'll have to do better than that.\"\n\nShe ignored him, but when she felt his arm move to strike again, she cried out in protest. \"Okay!\" she spread her legs wider and felt the coolness of fresh air on her most sensitive parts. A few tears fell down her face in humiliation.\n\n\"Good girl,\" Dominic lightly brushed his fingertips over the burning skin he'd just flogged and Kailee breathed in deeply at the tingling sensations the motion sent through her body. His fingers traced soft tiny circles around her bottom, and then brushed between her legs, making her jump.\n\nCLAP! The palm of his hand smacked firmly against her upper leg.\n\n\"Argh!!\" Kailee yelled out angrily. \"I did what you asked!\"\n\n\"You did,\" Dominic agreed, \"and you'll continue to do what I ask until your punishment is over.\"\n\nKailee growled in response, then pushed her face further into the side of the armchair. Just let him be done with it, she prayed, let it be over quickly.\n\n\"Lift your hips up,\" he ordered. She bit down on her lip to stop herself from arguing, and lifted her hips off of his lap. He wedged a cushion underneath her so that her bottom sat higher than the rest of her body, allowing him easier access to her.\n\n\"Now I'm going to give you four more strikes and you're going to remain absolutely still or I'll start again. Do you understand me?\" Kailee nodded her head and clenched her restrained hands into fists. \"Good. I want to hear you count them out nice and loud for me.\" His hand came down on her raw bottom and Kailee sucked in a sharp breath as she felt the sting. It wasn't as painful as the belt had been, but her ass was already tender. She realised after a moment of silence that he was waiting for her to start counting.\n\n\"One,\" she spat out bitterly. As soon as the word left her mouth, his hand came down again on the opposite butt cheek with a loud crack. She cried out this time, but continued the count. \"Two.\" Halfway. He struck in the exact same place, but harder this time and she yelled out louder. \"Three!\" It took all of her willpower not to struggle in that moment, her ass was on fire and she knew he would make the last strike count the most. There was a lengthy pause and she cursed him for making her wait for it. Her breaths had become heavy and her face flushed with humiliation. She could already feel her skin bruising up from the abuse. Just when she thought maybe he was finished with her, he landed the final blow and she screamed painfully into the armchair. She waited a moment for the pain to subside, then finally choked out, \"F-four.\"\n\nHis palm was still on her ass and the skin beneath his touch throbbed achingly. Ever so slowly, he started moving his hand in soft strokes across the places he'd struck. Softly and tenderly he caressed the tender skin and she found her breathing start to calm.\n\n\"How do you feel?\" he asked her, his hand continuing to stroke her. She almost caught a hint of concern in his voice.\n\nShe wanted to scream at him, but knew that wouldn't do her any favours. \"Sore,\" she said, her tone poisonous. His fingers continued to caress and her body relaxed involuntarily. Again, he gently brushed in between her legs, but she didn't flinch at the sensation, wary of any punishment she might gain for doing so.\n\n\"And how do you feel... here?\" one of his fingers slipped into her and this time she did jump, because she was shocked that his finger had been able to slide in so easily.\n\n\"Oh!\" she cried out. How was she so wet? A flat hand on her back pushed her firmly back down while his finger delved deeper. Apparently he wasn't as surprised as she was about her apparent arousal. She sucked in a sharp breath and closed her eyes tightly. He stroked down towards her clitoris and her body betrayed her mind, little tremors running blissfully through her. She contained the moan she wanted to let out, and pressed her face into the armchair angrily. Every soft touch seemed heightened after the flogging she'd received, and he obviously knew this. His finger dipped slowly in and out, circling her clitoris and continuing to touch and tease her.\n\n\"Mmm... \" she breathed into the side of the chair, hoping her voice would be too muffled for him to hear.\n\nHe must have known what she was doing, because he suddenly withdrew his finger and lifted her roughly off of his lap. \"I want you on your back,\" he said gruffly. She turned awkwardly around to face him, her bound hands making the motion difficult. His hungry black eyes bore into her greedily. He slid out from underneath her and guided her fully onto her back, her legs stretching out across the length of the couch. She glared up at him, furious at him for what he was doing to her, but also angry at herself for responding so easily to his touch.\n\nHe took a hold of the back of her upper legs. \"I'm going to leave your legs unrestrained,\" he said, watching her expression carefully. \"But I'm warning you. If you try to escape, I will find you. I'll always find you. And when I do, I'll punish you so severely that you won't sit comfortably for a month.\" Kailee's eyes narrowed, but she bit her tongue. She didn't doubt him for a minute.\"Are we clear?\" She pursed her lips and nodded, her heart beating hard against her chest. He pushed her legs upward, her knees bent back towards her. His eyes held hers as he lowered his head towards her entrance. Then he planted a warm, wet kiss on her sex, causing her insides to coil. His tongue dampened her folds and then he took her clit into his mouth and sucked hard. She moaned involuntarily at the sensation, her eyes rolling back. He lifted her legs higher and with one long lick he traced his tongue from her rear entrance, to her front and deep inside her.",
        "\"You taste incredible,\" he murmured, his breath hot on her most intimate parts. Kailee's legs were shaking from the pleasure. Her toes curled and her back arched as he continued to torment her with his tongue and lips. She so desperately craved more, wanted that full sensation that only he could give her, but she'd be damned before she asked him for it. She turned her face to the side and shut her eyes tight. \"Uh-uh,\" his teeth brushed against her and then he trailed a series of rough kisses up her stomach until his body was atop hers, her legs at his shoulders. He gripped her chin with his thumb and forefinger and rotated her face towards him. \"Open your eyes,\" he demanded. Kailee did as he said, staring up at him in a daze. His eyes were softer than she'd expected, despite the obvious lust reflected in them. His erection was pressing into her core through the restraint of his pants and she realised in that moment that she wanted him more than anything. She could deny it all she liked, but the truth was in the cushions dampening beneath her. Shame washed over her and internally she finally gave in.\n\nShe shook her head sadly. \"Just do it.\" He frowned down at her, studying her face. \"You want to fuck me, then do it. I don't care anymore.\" Kailee's voice was barely a whisper and tears prickled in her eyes.\n\nDominic watched her curiously for a moment, and then he took her by surprise. He leaned in and kissed her. But it wasn't the dominating, forceful kiss he usually took from her; it was gentle, almost like an apology. She could taste herself on his breath as his tongue softly met hers. The stubble on his face brushed against her cheek and made her skin tingle delightfully. He drew her bottom lip in between his teeth and sucked gently before breaking the kiss. He pulled her up into a seated position and turned away from her, standing up from the couch. Kailee watched as he picked up the knife from the ground which she had attacked him with earlier. Her eyes widened and she scrambled backward on the couch, preparing to defend herself. \"Keep still.\" Dominic's calm tone stilled her. He bent and brought his arms around her and then she felt him carefully begin to cut through the tie that was binding her hands together. She eyed him cautiously; what was he doing? The material gave way and she brought her hands in front of her, flexing her wrists and bringing life back to the muscles in her arms.\n\nDominic tossed the knife back onto the floor and then started undoing his pants. Her insides stirred as his erection sprung free; she wanted to reach out and touch him, but she remained in a paralysed state on the couch. He took a seat beside her, the couch sinking slightly with his weight.\n\n\"Come here.\" He took a firm, but not unkind, grip on her upper arm and guided her back onto his lap. This time, rather than being face down, she sat facing him, her legs entwined around his waist. It was an intimate position, staring directly into his dark eyes. He brushed a few strands of fallen hair back from her face, studying her features. She felt like looking away, his intense gaze made her nervous, but she found herself studying him too. She knew from Nathan's explanation that he was roughly around the same age as her brother, but his masculine features looked more aged than Nathan's. There were lines of exhaustion under his eyes which she was certain hadn't been there when she had been in captivity, and his eyes themselves looked glary from lack of sleep.\n\nDominic's hands found her ass and she flinched slightly at the contact, her bottom still feeling the effect of his strikes. He carefully lifted her up so he could adjust himself, and then she felt him pressing against her entrance. Kailee let out a small desperate moan, dampening at the anticipation of him inside her. But, to her surprise, he waited there, hovering against her, making her ache for him. She narrowed her eyes. The bastard wanted her to make the choice. She so desperately wanted to say no, but there was no turning back now. Slowly, she pushed her hips forward, allowing him to slide, inch by inch, deep inside her. Dominic made a deep sound in the back of his throat, his eyes darkening with lust. He placed his hands on her tiny waist and leaned back into the couch, allowing her to take control.\n\nUnaccustomed to being the one in charge, Kailee moved slowly at first, testing the waters. She lifted her hips, drawing her pelvis backwards and letting him almost slip completely out of her, then moved forward again, teasing both of them. She could see the desperation in Dominic's eyes; it was evidently difficult for him to not just grab her and take over. While her hips continued to move, her hands gently explored his chest, her fingertips brushing over dark hair and rippled muscle. Dominic's eyes closed, his forehead creased. When her hand came to the centre of his chest, he flinched and his right hand came roughly around her wrist. She froze. His eyes had opened and now he looked up at her with an intense gaze. As she stared into his dark eyes she could feel his heartbeat under her palm. It was slow and steady, but gradually building. His chest rose and fell with each breath he took. Her own breath had also quickened. His expression was always so dark, so tortured and she wondered what his smile looked like; not the vengeful smirk he often held in her presence, but his natural, peaceful smile.\n\n\"So much anger... \" she whispered.\n\n\"What?\" Dominic's frown deepened. She hadn't realised she'd voiced her thoughts. Her eyes dropped, not wanting to be punished for her words. Dominic's hand tightened around her wrist. \"What did you say?\"\n\n\"Anger,\" Kailee spoke softly, \"There's so much of it inside you.\"\n\n\"Yes.\" Dominic released her wrist and instead gripped her hips. He roughly pulled her forward, his cock filling her forcefully and making Kailee cry out in surprise. \"And you have an exceptional talent for bringing it out.\" His teeth grazed threateningly along the length of her neck and she shivered.\n\n\"You need to let go,\" she whispered. He responded by biting her neck; it wasn't painful, but it wasn't exactly gentle either. She hissed and then spoke again. \"You're not one to bask in an anguished past, either.\" She quoted him from the first night they'd spent together. \"But that's exactly what you're doing.\"\n\nDominic growled loudly and a firm hand found her throat. Kailee's eyes widened, expecting him to choke her, to hit her, to punish her in some way for her words. His chest was heaving angrily, a murderous look in his eyes. But instead of striking out, his mouth crashed into hers, kissing her ferociously. His right hand tightened around her throat, but didn't cut off her airway. His left hand moved to her lower back and he used that angle to hold her in one place. Then he began to thrust in and out of her, fucking her senselessly.\n\n\"Oh God!\" She moaned desperately into his mouth, the pounding of his cock making her dizzy with pleasure. When his mouth left hers, she wanted to lean against him, the sensations exhausting her, but his strong hand around her throat kept her upright. He stared into her eyes as he thrusted, the intensity in his eyes further warming her. His cock grinded directly into her g-spot and she could feel herself being pushed towards the edge. As her climax approached, his hand tightened even further around her throat to the point where she struggled to find her breath.\n\n\"Dom-inic...\" Her hands came over his in an effort to loosen his grip, but then her orgasm hit with such force that her body convulsed in a state of ecstasy she'd never experienced before. Her mouth opened and she let out a silent scream, her pussy pulsating desperately around his cock. She was so overwhelmed by the sensations that she barely noticed Dominic coming hard inside her. It was only as he released her throat, that she realised he had stopped moving. Her body gave in to exhaustion and her head fell to his shoulder, her legs shaking uncontrollably. She felt Dominic's lips against her forehead, but her eyes remained closed.\n\nThey sat there intertwined for a while and gradually both of their breaths began to slow. Then Dominic moved to get up, lifting her from his lap and then placing her gently back on the couch. Almost immediately she wished he was touching her again. He started pulling his pants on, his eyes searching the floor for his belt. Kailee watched him from her seated position, still dazed from their lovemaking.\n\n\"You should fix your dress,\" Dominic muttered as he collected the strip of leather from the ground. His voice sounded bland without the angry passion it had held earlier in the night. Kailee frowned up at him.\n\n\"What do you mean?\"\n\n\"Your dress,\" he said with irritation, not looking up at her. \"You can't go back out there with it up around your waist.\"\n\nKailee shook her head with confusion. \"You're just going to let me go?\"\n\n\"The ransom's been paid. You're not my hostage anymore.\"\n\n\"I... I don't understand.\" She felt a lump forming in her throat; he didn't want her anymore? She felt so stupid. Of course he didn't. She was just a means to an end, a way of getting to her brother. She should be thankful he was releasing her. Instead, she felt a wretched, dull ache deep within her chest.\n\n\"Go.\" Dominic turned his back to her and started straightening up his tie. \"You shouldn't leave your French boyfriend waiting.\" he said bitterly.\n\nKailee frowned. French boyfriend? It dawned on her that he must have seen her with Jean Marc earlier. \"Dominic... \" she looked up at him, but he wouldn't meet her eyes.\n\n\"Go home, Kailee. We're done here.\"\n\nTears filled her eyes and she brushed them away hastily. Stumbling to her feet, she straightened out her crumpled dress and tried to ignore the evidence she could feel running down her legs. She pushed past Dominic and pulled open the door, rushing down the stairway. The music was louder than before, the night becoming less of a formality and more of a party. As she reached the bottom of the stairs, her heel got caught up in her skirts and she slipped on the last step, landing hard on her knees.\n\n\"Ugh!\" She ignored the pain shooting up both legs and staggered to her feet, eager to get out of the building and away from this mess. Then she heard the drunken jeers of the Duchenne boys and their friends.\n\n\"Well, well, look what we have here.\" The oldest, Rob Duchenne, stood and drank in Kailee's body hungrily. He looked back at the others, who bantered along with him in response. Kailee noticed the drunken glaze in his eyes as he observed her cleavage eagerly. She was embarrassed to say she'd once been attracted to this filth. \"You look a little flustered, beautiful. What were you doing upstairs?\" He gave her a sleazy, knowing smile, then leaned in closer, softly brushing a loose strand of her hair behind her ear. \"Want to slip back up there with me while big brother's not around to stop us?\"\n\nKailee moved to slap him hard across the face, but before she could, Dominic swooped in out of nowhere and shoved him hard against the wall. Rob's expression changed from one of confusion to recognition, then he smiled casually. \"Holy shit, Dom, it's been years! I had no idea you were here tonight.\"\n\nDominic's eyes were murderous as he held Rob firmly against the wall. \"Did he touch you?\"\n\nThere was a moment of silence before Kailee realised he was speaking to her. She was so overwhelmed by everything that had happened tonight she couldn't seem to find her voice. Rob's gaze went from Kailee, back to Dominic and a hint of understanding crossed his features. \"Woah, Dom, I had no idea you two had something going on, man.\" He raised his arms slowly, gesturing for Dominic to calm. \"A loose girl like that, you know, she could be sleeping with anyone. It was an honest mistake.\"\n\nKailee's blood boiled and her face reddened in anger. \"You fucking asshole!\" She moved to attack him, but Dominic struck first. His fist landed hard into Rob's abdomen and he slid to the floor with a loud groan.\n\nA few people had started to gather and suddenly Nathan came around the corner, a concerned look on his face. He took in Kailee's angry expression, then his eyes moved to Rob Duchenne on the floor in pain. \"What the hell is going on?!\" He moved quickly towards the crumpled mess on the ground. \"Rob, I thought I made it clear to you that if you ever touched my sister again I'd fucking kill you.\"\n\nRob let out a raspy laugh while trying to catch his breath. He looked up at Nathan, a sly smile on his face. \"Why don't you ask your old friend Dominic what's going on.\" Nathan looked up in astonishment and finally noticed Dominic, who had been standing inconspicuously near the stairwell. There was no hint of emotion in his eyes, just that same steely look he held so well. Rob chuckled. \"He's the one boning your sister.\"\n\nNathan's eyes turned back to Kailee. She felt his eyes run over her dishevelled state, noticing her messy hair, her smudged lipstick and her crumpled dress. She saw his fists clench in anger before he turned back to Dominic, a determined hatred in his eyes. Kailee collected the hem of her dress and bolted towards the exit as fast as she could."
    ],
    "authorname": "AmandaSarah",
    "tags": [
        "reluctance",
        "bdsm",
        "kidnap",
        "power play",
        "ball",
        "spank",
        "rough",
        "ransom",
        "heiress",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/ransom-ch-06"
}