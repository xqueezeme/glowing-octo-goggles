{
    "title": "Sex Slave Spooktacular",
    "pages": [
        "Good evening Boils and Ghouls, and by that, I mean readers over the age of eighteen. Tonight's gory is about a man who is hoping to have the fright of his life, but soon finds that he is in over his dead and has bitten off more than he can goo. I would like to hacknowledge my deaditors MagicaPractica and margarita for treading through a terrifying maze of madverbs, comma slices, sentence gagments, and strangling modifiers. Enjoy and Happy Halloween!\n\nThe anticipation is starting to get the better of me. To avoid pacing, which is a guaranteed way to get on my wife's nerves, I'm testing and retesting the traps around the house: the killer clown, the haunted kitchen, the backyard maze, and my favorite, the coffin ride to hell. \n\nSatisfied with the traps, I head down to the wine cellar for a pre-game drink. A sliver of light escapes through the crack of the cellar door and casts itself against the brick basement wall. Did I really leave the light on again? I've spent so much time and effort creating frightful illusions that I'm quick to scare if I find something out of place that wasn't by my design.\n\nI open the door slowly and peek into the wine cellar. \"Who's there?\" I ask.\n\nNothing but an expansive collection of wine, of course. Quit being ridiculous. I grab a bottle and turn off the light on my way out, making a mental note of it this time. \n\nWith two wine glasses in hand, I return to the second floor. Approaching the master bedroom, I see Livia putting on her lipstick in front of the mirror. Her jet-black hair and icy hazel eyes make her an especially intimidating accomplice. Livia isn't just dressing up as a Hungarian tonight, she really is one. When I met this gorgeous Eastern European model with a sadistic temperament that rivals mine, what choice did I have but to make her my wife?\n\n\"How do I look?\" Livia asks. She never fails to excite me with that accent of hers.\n\n\"You are equal parts gorgeous and dangerous. Why don't you give me a spin?\"\n\nLivia cracks a smile and does a spin, as requested. She is quite a sight: a crisscrossed ribbon laces up the front of the dress, her big bosoms bulging at the bust line, and silk gloves extend to her elbows. Livia is dressed up as Elizabeth B\u00e1thory, the legendary, bloodthirsty Countess and I couldn't imagine a more suitable costume choice for her.\n\n\"Come test your fangs, Clive. You don't want them falling out.\"\n\nLivia presents her neck to me and I take in the intoxicating scent of her perfume. I kiss her on the neck and press the plastic tips of my fangs against her skin. She moans with approval and cringes slightly, waiting for me to give her a hard bite. There will be time for that later.\n\nI turn to check myself in the mirror. My costume is a classic Bela Lugosi Dracula with a black tuxedo and white bow tie. I look intense and downright handsome with my hair combed back and my dark eyebrows furrowed in anger. The Count and Countess are officially ready for a carefully orchestrated night of costumed debauchery.\n\n\"This isn't going to be like last year?\" Livia asks.\n\n\"Of course not. I double checked every single detail,\" I reply, defensively. \"You can't let one bad year ruin almost a decade of tradition. It was a fluke. Now, let's toast.\"\n\nI lift my glass and Livia does the same.\n\n\"To our new slave girl.\"\n\n\"To our new slave girl. For one week,\" Livia reminds me.\n\n\"Yes, just a week. We'll be bored with her after that,\" I say, picking up on a hint of jealousy. Livia was only twenty when I met her and here we are ten years later, still going strong on a steady diet of sadistic, sexual thrills. She likes the young women just as much as I do, perhaps even more.\n\nWe make our way to the balcony and notice two tiny headlights in the distance. One of our drivers has nearly completed his climb up the hilltop driveway with one of our special guests in tow. I'd like to see the looks on their faces when they pull up to this ominous looking estate. We have several homes, but I am partial to this hilltop mansion in western Massachusetts, which I refer to as Castle Atwood. With the unmatched foliage scenery and the eerie nearby cemeteries sporting old tombstones, jutting out from the hills in every which way, it is truly a Halloween lover's paradise.\n\nI remain at the top of the staircase and Livia carefully descends to answer the front door, filling the lofty foyer with the reverberation of clicking heels. \n\nRhea is the first to arrive. She is a nineteen-year-old Filipina cutie. Her tan breasts and bubble butt were on display in the pictures she sent us earlier this month, but nothing beats seeing her in person. Livia proceeds with a necessary frisk and phone check, as this troublesome teenybopper is a self-professed selfie and social media addict.\n\n\"Hi Mr. Atwood!\" Rhea calls up to me with a wave. The schoolgirl costume is an excellent choice and made even better with the addition of nerdy glasses. Already I can see that her plaid skirt is probably not long enough to cover the bottoms of her butt cheeks.\n\n\"Good evening, Rhea. You can refer to me as Count from this point forward. Allow me to show you to your room.\"\n\nShe climbs the stairs with her travel bag and stands before me. Her nipples are poking out of that tie-on white top of hers. I want to help myself to a feel, as is perfectly acceptable in our arrangement, but I resist. I like to at least put on the guise of being a gentleman, even if I am anything but. I lift my cape in a dramatic fashion and drape it around her shoulder.\n\n\"Right this way.\"\n\n\"Count, is it okay that I didn't wear any panties?\" Rhea asks me upon entering her room. She lifts her skirt to show off her bare pussy and then turns to reveal to her butt, giving me an innocent smile over her shoulder. It is quite bold of her to think I will be so easily seduced.\n\n\"Panty free is perfectly fine for tonight. However, Livia will dress you as she sees fit, assuming you are offered the job.\"\n\nI overhear the second guest climbing the stairs and make an abrupt exit, catching a glimpse of Rhea's frown as I slip away. I rush into the bedroom down the hall, pulling the door closed behind me, and I turn off the lights. Soon enough there are two small shadows at the bottom crack of the door and the knob begins to turn.\n\nOur second guest opens the door and lets out a scream of surprise when she sees me standing a few feet in front of her with my cape extended. My wife is standing behind her and lets out a laugh at her expense. I can see from the blonde hair that it is Emilia.\n\n\"Sorry, sir. You scared me,\" Emilia says, flustered and blushing. She is wearing a German beer maid costume and hiding her huge natural breasts behind a ruffled white top. It is an astute costume choice, considering how many drinks she will be serving me if she lands the job.\n\nI step forward and take Emilia's chin into my hand while my wife put her hands up the back of her skirt for a feel of her ass. Something about this girl looks familiar to me. I wonder if I spent too much time ogling her pictures during the recruiting stages. \n\nEmilia is a bit paranoid and perhaps ashamed of this highly unusual arrangement which is\u2014let's face it\u2014-tantamount to prostitution. Unlike the other girls, I get the feeling that innocent Emilia has never done anything close to what we have planned for her.\n\n\"I haven't scared you yet, Emilia. Would you like me to scare you?\"\n\n\"If it pleases you, sir,\" she responds.\n\nLivia raises her eyebrows with approval from over Emilia's shoulder.\n\n\"That was a good answer,\" I tell her, still scanning and trying to figure out how I know that face.\n\nThe sound of the doorbell interrupts us and Livia rushes off to go answer the door. I stay for a moment to take in Emilia's big blue eyes and bleach blonde hair. \n\n\"Does anyone know that you are here tonight?\"\n\n\"No, sir. I'm following your rules,\" she assures me.\n\n\"I think you are going to fit right in. Do you like to do as you are told?\"\n\n\"I do, sir.\"\n\n\"Well you can start with this\u2014I want you to call me Count. Understood?\"\n\n\"Understood, Count.\"\n\nI let go of her chin and rush past her, my cape flowing behind me as I approach our final guest at the top of the stairway.\n\n\"And you must be Zoey.\"\n\n\"Hello, Count,\" she says, unenthusiastically, chewing her gum. \"I already met the Countess. Nice place.\"\n\nZoey is the brat of the bunch. She's only eighteen and has plenty of attitude to go with her emo style. Her banged black hair outlines a pasty face which is highlighted in dark purple lipstick and eyeshadow.\n\n\"I'm a sexy witch,\" Zoey explains. That is no lie. Her black gown is tiny and revealing and she does well to match it with fishnet stockings and a lace choker around her neck. Aside from the witch's hat, I imagine this is her normal everyday attire.\n\n\"Your room is right around the corner, third door on the... fright.\"\n\nZoey rolls her eyes and makes her way to the room. Livia and I stand in the hallway and look over the three occupied guest rooms with a sigh of relief. All three girls made it on time and are now officially ours for the evening.\n\n\"They are pretty much like we expected,\" I comment.\n\n\"The slut, the saint, and the bitch,\" Livia adds with a giggle.\n\n\"Any favorites?\"\n\n\"I like Zoey. Punishment is always more enjoyable when they deserve it,\" Livia quips. \"And you?\"\n\n\"Emilia scares easily, which is a plus in my book. Rhea will do anything that we want. Tough choice.\"\n\nI call the girls into the hallway and they quickly exit their respective guest rooms to line up in front of us.\n\n\"Ladies, I would like to officially welcome you to Castle Atwood on this fine Halloween Eve. We ask that you not refer to us as Clive and Livia, but instead Count and Countess from this point forward. By the end of the evening, only one of you will be chosen to spend the next seven nights with us for the sum of fifty thousand dollars. This is very serious money for a very serious job. No one will ever know about what takes place here. You have offered up your bodies to us this evening in exchange for this opportunity, and we will gladly indulge ourselves in due time. Are there any questions?\"\n\n\"Have you done this before with other girls?\" Emilia asks.\n\nI share a glance with my wife and clear my throat. \"We have hired college girls like yourselves in the past and sent them on their way safely and in a much better position to afford their costly tuition. However, it turned out that some were not ultimately up to the task. This why we are hosting our first ever competition. Tonight will be a trial run to see who, if any of you, would be a good fit for the job.\"\n\n\"When are you going to pick a maid?\" Zoey asks.\n\n\"Slave,\" I say, correctively. \"The girl that we select will have maid duties, but I don't want to be misleading. We are looking for an obedient sex slave to serve my wife and me, nothing less.\"\n\n\"When do you pick the slave?\" Rhea chimes in with the change in terminology, cementing her status as teacher's pet and highlighting her sharp instinct to undermine the other girls.\n\n\"At the stroke of midnight.\"\n\nI ponder my statement for a second, wondering if I won't literally be stroking my cock at midnight and cumming all over their pretty faces.\n\n\"Count,\" Livia says to me with a nudge, noticing that I've lost my train of thought.\n\n\"Ahem, now, the Countess and I are going to make some preparations. We'll leave you to get settled in to your rooms, but don't get too settled. You are all expected in the study at nine pm.\"\n\n\"Where is the study?\" Emilia asks.\n\nLivia and I shared a wicked smile and she responds.\n\n\"Finding the study is part of the fun. Good luck!\"\n\n<center>****</center>\n\nOur eyes are fixated on the monitors and hands ready at the controls. We watch from the surveillance room as the girls chat with each other in the hallway for several minutes, probably trying to figure out their strategy or alliances or some other nonsense that will not make a bit of difference in the end.\n\nAt eight forty-five they make their descent down the staircase. Once they are safely off the stairs, I kill the lights on them. Haunted houses are so much more effective when the guests don't even know that they are in one.\n\nThanks to the infrared cameras, I can see their position clearly and I wait to spring my first trap. They walk into the hallway and with the click of a button on my control panel, a pop-out mannequin clown emerges from the closet wielding a knife and the hallway fills with a recording of maniacal laughter. I top the whole thing off with a strobe light that does a good job of creating instant panic.\n\n\"Wrong way, girls,\" Livia announces into the microphone. Rhea and Emilia are nearly tripping over each other as they run towards the other end of the hall and Zoey follows behind, looking irritated.\n\nLivia and I share a satisfied laugh and I turn my attention back to the monitor to see that the girls are headed for the kitchen. Once they are all through the door, I activate controls for haunting mode. The kitchen doors slam shut, trapping them inside. A single flickering bulb kicks in to give them a view of the kitchen cabinets, which are swinging open and shut to a guttural sound from hell playing on the speakers. The girls huddle together near the kitchen island, looking around for an escape.\n\nAfter a full minute, Livia steps in to help. \"Use the back door,\" she announces into the microphone, holding back her laughter.\n\n\"You're so merciful. Why not just let them panic for a while?\"\n\n\"I want to get them into the dungeon already,\" Livia explains. She puts her hand in my lap and looks me in the eyes to assure me that she is primed with lust for our newly frightened playmates.\n\n\"Very well.\" I press a button and the back door opens up invitingly for the girls. They run through the backyard maze, a short but effectively disorienting route that will ultimately lead them back though the house and face to face with the study door.\n\nLivia and I exit the control room and head down to the first floor to meet up with the girls. We hold hands and hurry down the staircase together with giddy smiles. There is one last stop on this haunted house ride before the real fun can begin.\n\nZoey pushes open the study door and yelps when she sees Livia and I waiting patiently behind it.\n\n\"Very funny,\" she says, breathing heavily and looking quite annoyed with our antics. Emilia and Rhea are at her back, clinging to each other.\n\n\"Congratulations, you found the study!\" I say to them.\n\n\"This isn't what we signed up for,\" Zoey fires back.\n\n\"Our agreement was very clear. Your bodies are ours for the evening. We will not cause you any harm. Your safe words will be honored and a driver is waiting at the ready for anyone who would like to go home.\"\n\n\"I'm having a great time,\" Rhea interjects. \"I love haunted houses!\"\n\n\"I'm so happy to hear that. Would you like to be the lead in our next activity?\"\n\n\"Hell yes!\" Rhea steps forward, shoving Zoey out of her way.\n\nLivia takes Rhea by the hand and guides her to the center of the room, towards a precariously placed coffin. The girls are eyeing the candle-lit study at this point and who can blame them? It is filled with occult oddities, books, and paintings, not to mention a large wooden lever next to the coffin that has yet to be explained.\n\nLivia helps Rhea climb into the coffin and secures the coffin lid in place. It is slotted for air, not to mention, a view of the poor victim's facial expression when the time comes.\n\n\"Ready,\" Livia announces.\n\nI approach the coffin and peek in at Rhea. She is nervously peering up at me through the lenses of her glasses.\n\n\"This coffin once belonged to Mr. Thaddeus Cornish. Perhaps you have heard of him?\"\n\nRhea shakes her head.\n\n\"Well then, I will tell you the story. There was a time when the laws weren't quite as strict as they are today, with regards to the pronouncement of the deceased by highly trained medical professionals. Mr. Cornish, for example, was pronounced dead in the middle of the night by an incompetent and most likely drunk, town coroner only a few miles away from where we are standing. He was rushed to burial, as there was no family or friends to claim him. They say that Mr. Cornish suddenly awoke from his coma from within the coffin. Perhaps it was his body's final push to fight for survival as the oxygen depleted around him. It would have been a miraculous recovery, were the circumstances different. It wasn't until the gravedigger was halfway done with his work that he heard the pounding and the screams of this poor old man from under the dirt. Mr. Cornish died of a heart attack minutes before the coffin was finally uncovered. Rhea, I want you to press your hands against the top of the lid. Can you feel the scratch marks?\"\n\n\"Yes,\" she replies. I can tell she is reaching up to feel the splintered wood from the cringe on her face.\n\n\"He didn't have any fingernails left when they uncovered him. In fact, there are still a few fragments in the wood if you feel closely enough.\"\n\n\"Oh gross,\" Emilia whispers in the background.\n\n\"Now, close your eyes,\" I command Rhea. She does as she is told and takes a deep breath.\n\n\"Are you curious as to how I ended up with this coffin?\"\n\n\"Yes,\" Rhea says with a crack in her voice.\n\n\"I dug it up, scooped him out of it, and put him in the basement where he is waiting for you! Huuuahahahaha!\" I pull the lever to open the bottom of the coffin and send Rhea flying down a stainless steel slide. She screams the entire way in complete darkness. The other girls gasp in shock and Livia is standing at their side, smiling proudly at my performance.\n\n\"Don't worry. It's just a slide,\" Livia explains. \n\nI pull the the lever and lock the bottom of the coffin back into place. Livia climbs into the coffin and I send her sliding into the basement after Rhea. After a few moments she calls up. \"Clear!\"\n\nI look up to see Emilia and Zoey looking back at me with jaws still dropped. Their reactions are priceless. God, I love this toy.\n\n\"Who's next?\"\n\n\"What about Rhea? Is she okay?\" Emilia asks.\n\n\"I'm fine!\" Rhea calls up from the basement. \"That was fucking awesome!\"\n\nZoey shrugs and steps forward. \"I'll do it.\"\n\n\"Can I ride with you?\" Emilia begs, clutching Zoey by the shoulder.\n\n\"Sure,\" Zoey says with an eye roll.\n\nWith that, I help the girls into the coffin and put the lid in place.\n\n\"Is that story true? About Mr. Cornish?\" Emilia asks me through the slot in the coffin lid.\n\n\"Why don't you ask him yourself?\" I pull the lever and send the girls soaring down the slide. The giddy screams echo through the study and I chuckle to myself with satisfaction. Their hearts are racing, their blood is pumping, and the main event has not even begun.\n\nI put out the candles in the study and make my way down to the basement the old fashioned way\u2014using the stairs. How convenient it is to pass by the wine cellar, since I feel like having a drink. I approach to see the light is again glowing from under the door. Livia has been down here with the girls for a few minutes. It was probably Livia. It must have been. I shake of my momentary unease and draw my attention back to my original purpose.\n\nI grab a bottle of 1997 Domaine Ramonet and nearly trip over a bump in floor on my way out. I really should have done a better job with pouring the concrete. I'm a hopeless do-it-your-selfer, which is important if you want your secret lair to remain a secret. I rush into the dungeon room to meet up with the women.\n\nJust behind the coffin slide I can see our fine young ladies of the evening, standing at attention in front of my wife. The flickering glow of the candle wall-lanterns provides ample visibility.\n\n\"Did everyone enjoy their ride?\"\n\n\"Yes, Count,\" they reply in unison.\n\n\"Well done girls,\" Livia says, proud of the discipline that she has already managed to impart them with. \"Did you have something else that you wanted to say to the Count?\"",
        "\"We are here to serve you, Count.\"\n\n\"Well, that's what I like to hear. You can start by opening this bottle of wine.\" I hand the bottle and a corkscrew to Emilia. She is the oldest of the three and I doubt the other two have ever drunk anything that didn't open with screw top or an aluminum tab. Emilia is admirably quick and careful in removing the old cork and gives my wife and I a pour.\n\n\"You know this should aerate for at least a few hours,\" Livia says to me.\n\n\"Damn it. Oh well. Let's toast to a Happy Halloween Eve,\" I suggest. We clink glasses and sip a subpar taste of our overpriced and\u2014as my wife was kind enough to point out in front of our guests during a crucial moment of tension\u2014under-aerated wine.\n\nI turn to girls, finally ready to indulge myself after all of the foreplay. As I circle the lineup of women, Livia follows behind me, eager to get her hands on them. She singles out Rhea, since she is the outgoing one.\n\n\"Let me help you out of this,\" Livia suggests, untying Rhea's top. Rhea lifts her arms and allows Livia to pull away the fabric, revealing a set of perky tits. Rhea gasps as Livia enjoys handfuls of her breasts and pinches her cute little brown nipples.\n\n\"Have you ever had a cock in your ass, Rhea?\" Livia asks. She lifts Rhea's schoolgirl skirt and allows everyone a view of her gorgeous posterior.\n\n\"No, Countess,\" Rhea replies.\n\n\"If I was to command it, are you going to let my husband slide his big dick into that tight little ass of yours and fill you up with his load?\n\n\"Yes, Countess.\"\n\nMy cock is swelling inside my pants from my wife's dirty talk. She knows just how to prepare a scene, not to mention, me.\n\nDespite all of the stripping and fondling, the girls can't help but stare over at an ominous, custom-made toy of ours. It was built to restrain up to three people, with carefully measured slots for their heads and wrists. A padlock, employed mainly for the psychological impact, would keep the helpless victims secured and vulnerable.\n\n\"Do you know what this is?\" Livia asks Rhea. She steps over to run her hand across the finished wood.\n\n\"Stocks?\"\n\n\"A close guess,\" I interject. \"Technically, it is a pillory\u2014a fine Massachusetts tradition. It was abolished in the eighteen hundreds for use in criminal punishment, but it is perfectly acceptable to use in our dungeon when we feel like restraining some willing slave girls. Are you willing?\"\n\n\"I am willing,\" Rhea assures us.\n\nLivia helps Rhea step out of her skirt and I can't help but ogle her firm young body as she stands before us in just her knee high socks and sneakers. Livia takes her to the pillory and guides her wrists and head into the slots. My ingenious design is built on a platform, so that the victims can kneel comfortably and provide us unencumbered access to both rear and throat.\n\nI approach Emilia from behind and gently breathe on her neck. She trembles as I trace the plastic tips of my fangs from her earlobe to the middle of her neck.\n\n\"Do you like vampires?\"\n\n\"They're scary. Wait, I mean yes!\" she says. Livia giggles at nervous Emilia and steps in front of her. She pulls down Emilia's dress to reveal her big pink nipples and strokes her breasts in admiration.\n\n\"Those are some beautiful big tits,\" Livia says, propping them up and making them jiggle. \"As our slave, I would expect you to oil them up on command and let my husband titty fuck you as long as it takes for him to shoot his load all over your neck and face. Would you be okay with that, Emilia?\"\n\n\"Yes, Countess.\"\n\n\"Good. Now let's get you out of that dress.\"\n\nI am enthralled, watching my wife undress this busty twenty-something. Her breasts are so large that they have a natural sag to them, which I find very attractive. She is well tanned for the occasion, a fact that doesn't escape me when Livia pulls down Emilia's throng and proceeds to pinch a juicy labia between her fingers. Emilia stands nervously before me in nothing but her thigh-highs, moaning softly as my wife explores her body.\n\n\"What do you think?\" Livia asks me, turning Emilia around to give me a complete view. Her butt, like her breasts, is round and full and will be just as much fun to play with.\n\n\"Would you like to join your friend Rhea in the pillory?\" I ask. \"Of course, you don't have to. Only willing slave girls are allowed.\"\n\n\"You're not going to hurt us?\" she asks.\n\n\"Absolutely not. Well, not any more than you would like. Do you remember your safe word?\"\n\n\"Yes,\" Emilia says, eyeing the stairs and seriously considering her departure.\n\n\"I'll go ahead and call the driver, no hard feelings,\" I say, reaching for the phone in my pocket.\n\n\"No, wait. I want to do it,\" she pleads. With that, Livia gladly leads her into position next to Rhea. Their head and wrists are in place and they are both waiting to be locked in securely.\n\nI turn to Zoey and she tosses her witches hat and pulls off her dress. It turns out she's wearing more than just fishnet stockings. It is a crotchless body suit that she must have picked up for ten bucks at the local adult store. Her perfectly round, medium-sized breasts are visible beneath the material and the slit of her bikini-waxed pussy is staring back at me.\n\n\"I never asked you to undress,\" I scold her. Admittedly, she is giving me a stir in my pants, but I must maintain order.\n\n\"Sorry, Count,\" Zoey says with a shrug.\n\n\"Sorry isn't good enough. Here at Castle Atwood, your mistakes will be met with punishment.\"\n\nI take a seat on the sofa behind the pillory and point at my knee. Zoey lays across my lap, angling up her butt up in the air. Livia approaches and tugs at the rear gap in her bodysuit. With a sharp tear, the fabric peels away from Zoey's ass.\n\n\"Thank you, Countess,\" I say. I raise my hand into the air and bring it down hard on Zoey's butt, causing her to let you yelp.\n\n\"You won't do anything unless commanded, is that understood?\" I ask, giving her a few more hard spankings.\n\n\"Yes, Count.\"\n\nI am very much enjoying the feel of her firm butt as I swat it with the palm of my hand. I stroke her ass and caress her inner thighs teasingly. \"Go kneel onto the pillory platform next to Emilia and prepare yourself for some additional punishment.\"\n\n\"Yes, Count.\"\n\nShe walks over to the pillory, giving me a view of pale butt cheeks on the way. Livia puts Zoey's head and wrists into position and then fastens the top stock of the pillory in place and padlocks it.\n\n\"I sure hope we don't lose the key,\" I say, trying to ratchet up the suspense for these now utterly helpless young women.\n\n\"Oops,\" Livia says, tossing the key off onto the floor. She approaches me and we share a passionate kiss before taking our place on the sofa to enjoy our wine with a view.\n\nWhat an unbelievable sight: three gorgeous young women locked into place and bending over in our direction, giving us a full view of the banquet between their legs. Threes slits and assholes for the taking; lower case i's, if you will.\n\nWe swirl our glasses and enjoy a delicious gulp. It is starting to open up.\n\n\"Are you comfortable, girls?\" I ask.\n\n\"Yes, Count.\"\n\nLivia and I set down our wine glasses and help ourselves to their bodies. We admire the soft skin of their asses and give them some playful spanks. Already, I can see the glistening juices beginning to drip down from their cunts. We stroke and squeeze their hanging breasts. There is a nice variety of sizes to choose from. Emilia's oversized bosoms are the clear winner, but Zoey is a close second, offering the perfect handful.\n\n\"Okay, then. It is time for some punishment,\" I announce. \"I want you all to understand what happens to bad little girls when they disobey their Count. Livia would you bring me my paddle?\"\n\nI don't have to see their faces to know that they are cringing in suspense as Livia walks across the room and removes the wooden paddle from where it is hanging on the wall.\n\nI grip the paddle and carefully rest the cold wood against Rhea's butt cheeks, letting it linger for a moment so that she can appreciate what is coming. I pull back and give her a medium strength swing, crashing the paddle against her buttocks and causing her to yelp out in surprise.\n\n\"Would you like another?\"\n\n\"Yes, please,\" she begs. I linger for several moments to build the suspense and then give her another hard swat, admiring the visible jiggle as wood meets with skin. \"Thank you,\" she says, politely.\n\nLivia takes her place in front of the women and seems eager to get out of her cumbersome dress. I nearly miss my third swat entirely, watching my wife reveal her blood red, lace lingerie set, complete with stockings and garter belt. I sometimes forget that Livia was a lingerie model until I see her in a getup like this. She bends over to peel off of her g-string in front of the young women's faces and approaches Rhea.\n\n\"I want you to give me a long, slow lick,\" Livia instructs, running her fingers through Rhea's hair. She lifts her leg and rests her foot on the platform so that her pussy is at face level. Livia has a thin landing strip of pubic hair above that gorgeous pussy of hers, my favorite style. Rhea sticks out her tongue and enjoys a greedy taste of my wife's slit, causing her to purr with satisfaction.\n\nMoving down the paddling line to Emilia, I decide to ease up my swing, even though she has plenty of butt to absorb the impact. I give her three good swats and she does not protest in the slightest. Just short, quiet yelps followed by the appropriate thank you's. Livia moves down the line as well, testing out Emilia's oral skills and moaning with greedy lust.\n\n\"I'm going to give you the paddling that you deserve, Zoey. Do you think you can handle it?\"\n\n\"I can handle it,\" she assures me. The muscles in her legs tense up in anticipation and I proceed with the swatting. After five extra hard paddlings and a reddened ass she is still holding on strong, without so much as a peep.\n\n\"I can't break you with pain, but perhaps pleasure?'\n\nI lick my finger and trace it down the crack of Zoey's ass. She gasps in shock as I repeatedly outline a figure eight around her pussy and ass. Livia positions herself in front of Zoey for some oral servicing and a wet drip of Zoey's juices lands on my finger as I'm stroking her.\n\n\"I think she likes you,\" I say to Livia. \"And I have a feeling that someone else likes me.\" I walk back over to Rhea and give her a similar treatment, tracing around her genitals and teasing her mercilessly. She moans and sways her hips, desperate for sexual release. It's not going to be that easy.\n\nWith Livia at my side, we proceed to help ourselves to a taste of the women in front us. They are so wet and eager to feel our tongues between their legs. Each of them offers a distinct and appealing flavor.\n\nThe girls squirm as I trace my fangs on their butt cheeks. I give each ass a firm bite, careful not to break the skin, and they all yelp in surprise. As a little reward for everything that they have endured so far, Livia and I team up, licking the cunt and ass of each girl together. I'm dragging my tongue up Emilia's butt crack and I feel Livia stroking me over my pants. \"I want to see them suck it. I'll get the camera,\" she says. She doesn't have to tell me twice.\n\nI remove my costume and boxers, but the cape and fangs remain. My cock is already at half-mast and my balls tighten up in anticipation as I stroll past the lineup of restrained heads and hands. Livia puts the camera strap over her neck and then stands at my back. She reaches around to cup my balls and stroke my swelling cock in front of Rhea's face.\n\n\"Are you ready to worship the Count's cock?\" Livia asks Rhea.\n\n\"Yes, Countess.\"\n\nLivia presses my shaft against Rhea's forehead and gives her a few playful swats against the cheeks. I can already see a bead of precum forming at the tip of my cock and Livia is quick to wipe it off onto Rhea's lips.\n\n\"Stick out your tongues. All of you,\" Livia demands. The girls comply and Livia works my cock down the line, rubbing and slapping their faces with it. I am so incredibly hard and dying to feel myself in their throats, but I won't deprive my wife of her favorite routine, which has become an honored tradition at this point.\n\n\"Lick his balls,\" she says to Emilia, who laps her tongue across my sack with enthusiasm. Livia raises the camera and begins snapping pictures. I rest my balls on the bridge of Emilia's nose and jerk my cock. What an incredible feeling it is to have my sack resting on this busty blonde's face while my wife documents it.\n\n\"That's a good one!\" Livia says with a laugh. \"Let's get some with the other girls now.\"\n\nI pose with my cock and balls pressed against the girls' faces and I chuckle to myself as Livia snaps her pictures. She seems overly amused at the sight of these young women being cock slapped and tea bagged by her husband.\n\n\"Okay, now,\" I finally intervene. \"It is time to test out their throats. Rhea, give me an ahhh.\"\n\n\"Ahhh,\" Rhea says, mouth agape and eyes widened as she experiences my girthy shaft sliding into her throat.\n\n\"Do me a favor. Since you're unable to speak, you can ball up your hands into fists if you need mercy. We aren't really monsters, after all.\"\n\nWith that, I enjoy some slow, deep plunges into her throat. The flow of saliva runs across my shaft and drips onto my balls. Livia sets down her camera and positions herself behind Rhea to stroke her wet slit and massage her asshole with a lubricated finger. It is remarkable how secure Rhea's glasses remain as I grip her hair and pump my cock deep into her throat.\n\nRhea is gagging on my cock and drooling all over the floor, so I decide to give her a break. Down the line I go, stuffing my cock into the young women's wet and willing throats while my wife works them from behind. Emilia gags more easily than the other girls so I decide to go easy on her and focus on Zoey, who doesn't appear to have a gag reflex at all. She just looks up at me with watering eyes while my balls rest on her chin for nearly a full minute, never once giving me the signal for mercy.\n\n\"Well done girls,\" I say, breathing heavy from such an extraordinary stimulation. I am getting close to blowing my first load, but I will be damned if my wife isn't going to enjoy the fruit of all of this throat-labor. I wipe off Zoey's sticky saliva onto her forehead and turn to Livia.\n\n\"Come to me, Countess.\"\n\nLivia's gorgeous eyes light up with glee and she rushes to the front of the action, stepping onto her absurdly expensive dress which is now nothing more than a throw rug. I guide her to her knees and she opens her mouth expectantly, like the good wife that she is. Holding her by the back of the head, I pound her throat with abandon and send a river of spit flowing down her chin and between her breasts.\n\nThe girls are looking on with fascination as I throat fuck my wife and fill the room with echoes of sloppy cock gagging. Livia shows these girls what a real cock worshipping looks like, eagerly slurping on my balls and slapping my messy shaft against her face. Worried that I can't hold back my load much longer, I help Livia up and turn her towards the girls. She bends forward rests her hands against the top of the pillory, paying no mind to the trapped women below her as she presents herself to me.\n\nI stroke her ass and grip her garter belt to pull her against me. My manhood is still slobbered in saliva and it slides easily between Livia's wet pussy lips. My throbbing cock head grazes her clit and it is feeling so engorged that it almost hurts. I press into her vaginal opening as the enthralled young women look on. I proceed to ram into her with everything that I have, shaking the pillory and groaning with satisfaction.\n\n\"Suck on my tits,\" Livia says, shoving her breasts into Zoey's face and moaning from the persistent penetration. I'm slapping my balls against my wife's clit with every thrust and soon enough I can feel the warm liquid of her orgasm pouring over my shaft. I pull out of Livia and show the girls my cock, glazed in juices and ready to explode with some juices of my own.\n\n\"Who wants it?\" I ask, jerking myself with intent and eyeing their reactions.\n\n\"Me! Me! Me!\" they all beg, eager to show off and earn my favor. I can't help but to drift over to Rhea and those sexy glasses of hers. I start jerking myself over Rhea's face. Livia kindly takes to her knees and sucks on my balls while I finish myself off.\n\n\"Yes! I want your cum!\" Rhea begs as the first warning shot dribbles out onto the bridge of her nose. I groan in pleasure and send a high velocity spurt across her forehead and into her hair. Ropes of semen streak across her lenses and dangle down onto her cheeks.\n\nI realize I am not sharing the wealth like I ought to and aim at Emilia next, doling out a gooey taste to her extended tongue. Finally, I bury myself into Zoey's throat, allowing the remainder of my seed to swim into her belly while I wait for the signal of discomfort. After enduring nearly a minute of my draining cock lodged in the back of her throat, Zoey finally clenches her fists. I pull out with a slimy strand of spit hanging from my phallus.\n\n\"Great finish, Zoey,\" I say, feeling buzzed from such a memorable and satisfying orgasm.\n\nLivia is already fast at work to document the occasion. She uses her finger to artistically rearrange the ropes of semen on Rhea's face before taking a set of pictures. She collects some of Rhea's massive facial on her finger and paints a cum mustache onto Emilia. \"You should have cum on all of them,\" she tells me. Can I do anything right for this woman?\n\nWith three pretty faces now smeared in cum and saliva, Livia manages to capture the pictures that she wanted. The girls have been very good sports so far with the restraints, the cock gagging, and now the face painting.\n\n\"Are you enjoying yourselves?\" I ask on my way to the couch for a quick breather and to enjoy the view.\n\n\"Yes, Count,\" they say, and to look at them from behind provides confirmation. Their labias are engorged and their thighs are shiny with their dripping juices. They would do or say just about anything for some release, but we have other plans at the moment.\n\n\"Here you are, Count,\" Livia says with a wink as she hands me a bottle of lube. \"Nice shooting, by the way. It's a good thing she was wearing glasses.\"\n\n\"Why thank you, Countess. You couldn't have found us a prettier set of cum sluts. Shall we test them out from behind now?\"\n\n\"Can we?\" she asks with excitement.\n\n\"Of course. We can do anything that we want.\"\n\n\"Okay!\" Livia reaches behind her back to unclasp her bra, giving me an eyeful of her tanned breasts. I've never seen a more perfect pair: big, round, and natural. I drizzle them with lube and spread it around, making her chest nice and slick.\n\nLivia presses her breasts against the girls' butts. She slides them up and down the cracks of their asses and grazes her nipples across the slits of their pussies. The dungeon is filled with the soundtrack of pleasured moaning.\n\nThe pillory platform is conveniently equipped with drawers at the bottom so I help myself to some of the carefully arranged contents inside. \"This will do,\" I say out loud, holding up a stainless steel butt plug.\n\nI slide it up Rhea's inner thigh and across her cunt. She gasps when she feels the drips of lubrication falling onto her anus followed by the thick steel head of the plug, threatening to penetrate her virgin hole. I linger for a bit and then slowly push the plug into Rhea's ass, waiting in suspense to see if she will blurt her safe word. She moans in pleasure and I push it all the way until the flanged end is resting against her cheeks.\n\n\"Good girl, Rhea. Do you like how it feels inside of you?\"\n\n\"Yes, Count!\"\n\nWith that, I move over to Emilia, who was just receiving a generous rim job from my wife. I drip some lube onto her ass and attempt to penetrate her with a plug when I hear the dreaded word.",
        "\"Mercy!\" she begs.\n\nFinally, I find myself stopped in my tracks after all of this unhinged debauchery. Emilia's resistance makes me want it more than anything else in the world. To put my cock inside of that tight little hole of hers and feel my balls bouncing off her pussy. Livia takes over where I left off and teases a butt plug against Zoey's ass, getting no resistance in return.\n\nI notice that my cock is standing at attention from all of my anal exploration and now seems as good a time as any to help myself to these neglected cunts. Emilia ass is off limits, but I'm eager to find out about the rest. I slide my cock up and down her wet slit and rest my head at her opening.\n\n\"Do you want me to fuck you?\" I ask, grabbing onto her hips in anticipation.\n\n\"Yes, Count,\" Emilia replies.\n\nI push forward, allowing my swollen head to spread out her pussy. Just the tip. She is moaning and moving her hips, desperate for more and I cruelly take my cock away from her and move down to Rhea.\n\n\"Please, Count!' Emilia begs.\n\n\"Silence!\" I command. She will endure the frustration while I help myself to Rhea at her side. With a hard thrust I plunge my cock into Rhea's wet cunt and I am filled with newfound energy. She is so tight and hot, I can hardly contain myself. I pound Rhea's pussy and squeeze her little tits for several minutes, watching on as my wife presses small vibrators against the other girls' clits.\n\nHearing Zoey call out in a fit of passion is all that it takes to convince me that she is next. I move down to her and find Livia graciously reaching for my cock to help guide me inside. Not quite as tight as Rhea, but still a very satisfying fuck. It certainly helps that my wife has begun to sucking on my balls while I doggystyle this young slut. I can't help but to groan out loud as I experience the wet sensations of Livia's tongue lapping at my balls and Zoey's juices leaking down my shaft.\n\nI clench the torn fishnet fabric of Zoey's body suit and rotate back and forth between her pussy and my wife's throat. Their gaping orifices are mine for the taking: throat and cunt, gagging and dripping respectively from my aggressive thrusts. I am going mad with lust and there aren't enough holes in the world to satisfy me at this point.\n\nFinally, I decide to let poor Emilia in on the action. I grab onto her butt cheeks and thrust into her swollen pussy. Her ass is looking back up at me, mocking me as I pound away at her in frustration. I grab her tits and watch her butt cheeks shake with every hard thrust. I'm about to blow my load. I need to slow down and hold on just a little longer.\n\nI move over to Rhea and remove her butt plug, causing her to gasp. Livia is kind enough to move in with some lubrication and squirts it all over my cock and Rhea's ass. She watches with excitement as I put my cock into position.\n\n\"Are you ready for your first ass fucking?\"\n\n\"I'm ready, Count,\" she insists.\n\nI push in slowly and relish the sensation of her hole as it envelopes my generous girth. Rhea is yelping in pleasure and pain as I penetrate her with half of my length and give her some moderate thrusts. Her cum-covered glasses fall onto the floor as I pound away at her ass with increasing speed and power.\n\nLivia cups my balls and plunges her fingers into Rhea to massage her g-spot. After only a few minutes of steady anal plunging, Rhea is yelling \"Yes! Yesss!\" and squirting all over my thighs.\n\nI pull out and move down to Zoey, who I'm sure is eager to have a hard cock inside of her in place of the plug. Zoey moans and sways her hips as I plunge into her ass. My balls slap against her pussy and feel the surge of an orgasm building up inside of me.\n\nLivia rewards Zoey's anal enthusiasm, just as she did Rhea, by fingering her and licking her clit. Zoey's orgasm comes fast and hard and I nearly lose my load inside of her as her body spasms in pleasure. As good as it might feel to fill up Zoey's ass, I think the occasion calls for something much more theatrical.\n\n\"Livia, go ahead and release the girls. I want them all kneeling in front of me.\"\n\n\"Great idea!\" Livia says. She fetches the key from the floor and unlocks the padlock. Before the girls have a chance to enjoy their newfound freedom, my wife is already arranging them on the knees and pressing their heads together, cheek-to-cheek. Then, she does something unexpected.\n\n\"Here, open these up and hold them under your chins,\" Livia instructs them as she passes out a handful of peanut butter cups. Wait, we have a candy dish down here? \n\n\"Are you ready?\" she asks me with a nudge. I'm just staring down at these naked women in amazement and trying not to crack up as they lift the classic Halloween treats under their chins.\n\n\"Girls, stick out your tongues,\" Livia commands. She spits on my cock and jerks me off onto a wall of pretty faces.\n\nI'm absolutely pulsing with an intense orgasmic buildup and groaning loudly as Livia brings me to orgasm. My first massive spurt bounces off of Emilia's tongue and drips down from chin to chocolate. Livia aims my cock at Zoey and a thick gob lands on her forehead and hangs down off of her eyebrow. Another rope of semen escapes and lands on Rhea's nose and cheek as she leans in eagerly to catch it.\n\nI spill out the remaining drops onto their tongues and treats. Livia encourages them to collect any dangling strands of semen onto their peanut butter cups. They eat their cum-glazed Halloween candy as Livia takes pictures.\n\n\"There's no wrong way to eat a Reese's,\" I tell them.\n\nKnowing that the stroke of midnight is most likely upon us, the girls go out of their way to impress me by licking the rest of my load off each other's faces and swapping it back and forth between their mouths.\n\nUtterly exhausted, I take a seat on the sofa and call my wife over. Rather than make a big tear-filled ceremony out of this decision, I simply whisper a name into her ear and, to my surprise, she instantly agrees. The women stand at attention before us, naked and anxious.\n\n\"Rhea and Zoey, gather your costumes and follow me upstairs,\" Livia announces.\n\nThe girls look down at me with confusion and proceed to do as they are told. A parade of naked asses goes up the stairs and Emilia is still standing at attention in front of me in nothing but her thigh-highs. I stand up and approach her.\n\n\"Emilia. I want you to gather my clothes from the floor and help me get dressed. No need to dress yourself.\"\n\n\"Yes, Count.\"\n\n\"It's Master now. Do you understand?\"\n\n\"Yes, Master,\" she answers, attempting to conceal a boastful smile. She helps me into my pants and then the shirt, button by button.\n\n\"Go to the shelf below the pillory platform and grab yourself a collar,\" I tell her. She finds a collar quickly and brings it to me so that I can buckle it on. It is a good look for her: a ring of black leather to accessorize her neck and a polished steel ring to attach a leash.\n\n\"Come now. I'll give you the tour. You'll need to know your way around the property in order to serve us in the coming week.\"\n\n\"Yes, Master.\" <center>****</center>\n\nWith the competition at an end, Livia and I are ready to unwind and celebrate. We show Emilia to the bathroom and the three of us strip down and step under the massive rainfall showerhead for a much needed shower.\n\nLivia instructs Emilia to use the sponge on us first, before she is allowed to clean herself. I am already growing hard again from all of the intimate, soapy contact. My swelling erection presses into Livia's butt cheeks and then she slips out of the shower like a tease and towels herself off.\n\nEmilia and I follow Livia out of the shower and soon after I'm lying back on our bed, drinking from an overfilled glass of wine and watching Livia play dress up with our new slave. My towel is still wrapped around my waist and I'm threatening to pop it open with my erection as I watch Emilia pose in different corsets, garters, and stockings. Livia is giggling drunk in her bathrobe, chugging wine and stroking Emilia's breasts and ass at every opportunity.\n\n\"Do you like this one, Master?\" Emilia asks me.\n\nShe's wearing nothing but a black corset to match her collar. What a sight it is to see a busty woman like Emilia in a corset, breasts hanging over the top and completely bottomless below. I admire a trimmed tuft of light brown pubic hair at the top of her beautiful mound.\n\n\"That is perfect, Emilia.\"\n\n\"I chose it,\" Livia blurts, giving me a playful eyebrow raise.\n\n\"Why don't you both come over here onto the bed?\" I suggest.\n\nLivia gladly tosses her bathrobe to show off her nude body. She escorts Emilia onto the bed and has her lay back and spread her legs so that we can enjoy the view. We refill our wine glasses and have Emilia masturbate in front of us. Then come the toys: a collection of different dildos and vibrators that Emilia thrusts into her cunt for our pleasure and hers. She fills the room with her moaning. I think about throwing in a butt plug, but I'm starting to get drunk and sloppy. This isn't the time to push boundaries. I'll work on convincing her tomorrow.\n\nLivia pulls open my bathrobe and helps herself to my erection. She deepthroats me, gagging all over my shaft and leaking her drool all over the sheets. Soon enough, she pulls Emilia into the action and despite all of the alcohol, I'm raging hard inside their throats as they take their turns blowing me.\n\nI haven't had a taste of my wife all night and I'm quick to correct that. I guide her over my face and tongue her delicious pussy while she throats me in a 69 position. My cock and balls disappear into the women's mouths and it makes me intensify my tongue strokes against Livia's clit until I feel her quivering in climax.\n\nLivia grabs some oil from the bedside table and smothers Emilia's chest, making her all slippery and shiny. I climb on top of her and slide my hardon between her giant breasts while Livia rides her face. The sensation is too much take. I can barely contain myself, feeling my cock sandwiched between slippery bosoms watching my swollen head poke out from the cleavage.\n\nI clench my toes and push Livia forward, squirting uncontrollably onto Emilia's chin and neck. With my cock in hand, I proceed to jerk out the rest of my load onto Livia's ass and watch it drip down onto Emilia's face. Emilia runs her tongue across my wife's ass, scooping up as much cum as she can and swallows it.\n\n\"Hey, we were just getting started!\" Livia says over her shoulder. She turns around and starts throating my waning erection, determined to bring me back into the action without a break.\n\n\"Come on Livia. This is too much. How young do you think I am?\" I protest, exhausted from the wine, not to mention, my third orgasm of the evening.\n\nLivia persists and gets Emilia to suck on my balls. I can't believe my wife. She is the most skilled cock-charmer on earth. I'm raging hard and fucking their throats with abandon in no time at all. I put Emilia onto her back, lift her knees, and ram my cock into her pussy. I'm squeezing those oiled breasts and fucking her hard enough to hear my balls slapping against her ass cheeks.\n\n\"Bury her!\" Livia says.\n\n\"What?\" I'm suddenly feeling confused and light headed. Maybe I have the alcohol spins?\n\n\"Bury your cock in her!\" she repeats.\n\nI pull out of Emilia as I'm starting to run out of stamina.\n\nLivia eyes my glazed erection and greedy intercepts. \"Where do you think you're going?\" she scolds. \"I need it!\"\n\nLivia mercilessly throats on my cock, determined to keep me in the action. She smears my shaft with a handful oil and pushes me on my back, mounting me in reverse cowgirl position. I forget about my earlier moment of distraction when I feel the extraordinary sensation of my cock entering my wife's ass. She moans loudly, hopping up and down on my cock and shoving Emilia's head between her legs.\n\nLivia is shaking and squirting her juices on my thighs and Emilia brings me to the brink with an unexpected tongue against my ass. I reach around to squeeze Livia's breasts and unload inside of her ass. The orgasmic contortions are so intense, almost painful. I lay back in a daze, mesmerized by the sight of Livia angling her cum-filled ass over Emilia's tongue. Livia is still shaking from her orgasm and moaning as Emilia laps the cum from her rim.\n\nCompletely wasted, I stumble back to the bathroom and lie down in the shower. Eventually, the girls towel me off and tuck me into bed.\n\n\"I didn't do it,\" I mumble out loud, half asleep.\n\n\"Clive, you're talking again,\" Livia says with a nudge. \"Go to sleep.\"\n\n\"It was the coffin. The coffin,\" I say as I fade into darkness. Comfortable, quiet darkness. \n\n<center>****</center>\n\n\"Good morning!\" Livia says to me, pulling open the shades on a sunny Halloween day. I'm still processing all of the wild memories from the previous night and now I find myself waking to a no less exciting reality.\n\nI sit up in the bed to see that Livia has already dressed Emilia for work. I rub my eyes and stretch my arms, taking in the sight of Emilia in her skimpy maid's outfit with visible thigh-high stockings and garter straps.\n\n\"How do we greet the Master in the morning?\" Livia quizzes Emilia.\n\n\"Good morning, master. Would you care for some oral pleasure?\" Emilia asks me with a smile.\n\n\"Um... well...\" I stammer barely conscious with my eyes still adjusting to the sunlight. Did I really cum four times last night? Maybe I should consider a morning off.\n\n\"Yes. He would love some,\" Livia insists.\n\nEmilia pulls away the sheets from my naked body. I'm already raging hard with morning wood when she takes my cock and balls into her hands. Livia is dressed in her silk nightgown and climbs onto the bed to supervise.\n\n\"Okay, help yourselves,\" I say, too tired and hungover to bother resisting. These women are going to break me if they keep it up.\n\nEmilia rubs my cock and balls all over her face and nudges the point of her nose against my taint with a giggle. The women slide their tongues up and down my shaft in unison and take turns deepthroating me while I rest my arms behind my head, delirious with pleasure.\n\n\"I think I am officially awake now,\" I announce, watching the action with a satisfied smile.\n\nThey prop my knees up and their wet tongues massage my balls and ass mercilessly. My God, what an intense morning blowjob this is. Emilia is poking her tongue into my ass and Livia is throating me like she is starved for semen. I can't take it anymore.\n\n\"Would you like to cum on my face, Master?\" Emilia asks.\n\n\"Well, since you asked so nicely... Livia can do the honors.\"\n\nLivia rubs my swollen head across Emilia's nose and then jerks me off onto her face. Spurts of semen splatter her forehead and drip down between her eyes, parting across the bridge of her nose and onto her cheeks.\n\n\"That was a big sticky load,\" Livia says with a laugh, sliding her finger through the damage and putting it in Emilia's mouth to give her a taste.\n\n\"Would you like your morning coffee now?\" Emilia asks us.\n\n\"Yes, we would,\" I say. \"You're quite the morning person.\"\n\nEmilia winks at me hops off of the bed with enthusiasm. As she makes her way down the stairs to the kitchen, I lay back onto the bed with Livia and we share a satisfied smile.\n\n\"She's too perfect.\"\n\n\"Because I trained her,\" Livia says, correctively, poking me in the chest.\n\n\"Of course. I think this is going to be the best Halloween yet,\" I add, admiring the orange and red landscape from the bedroom window. \"I must be the luckiest man on earth.\"\n\n\"And I'm the luckiest woman,\" Livia adds.\n\n\"Here you are, Master,\" Emilia says, entering the bedroom with two cups of coffee. My load is still dangling from her cheeks as she hands me the mug.\n\n\"Now that is a good slave girl. No rush to clean up, if you enjoy it,\" I tell her.\n\n\"I told you, I trained her,\" Livia boasts.\n\nI send Emilia for a notepad and when she returns I begin to dictate a shopping list. I'm sipping on my coffee and rattling off items at random when I start to notice the slur in my speech.\n\nLivia attempts to get up from the bed drops her coffee mug, shattering it against the hardwood floor. I just sit in place, watching without reacting. I try to set down my own mug. My hand feels heavy. The hot, brown liquid pours out and soaks into the comforter at my side. My head is so heavy. And my eyelids, for that matter.\n\nEmilia stands there and watches, making no attempt to help clean up the mess. That's okay. I think I'll go to sleep now. The bed is so comfortable.\n\nEyelids closing.\n\nYes.\n\nSleep.\n\n<center>****</center>\n\nI feel awake, but I am completely submerged in darkness. Weird shapes keep forming and swirling in the black. The same shapes I see when I close my eyes for sleep. Fragments of light breaking up and recombining as they crystallize into my dreams. Or is it nightmares?\n\nI can't move.\n\nI can't move!\n\n\"Livia!\"\n\n\"She right here next to you,\" Emilia says to me. \"Are you comfortable?\"\n\nI try to reach out and feel my way through the darkness, but my arms are restrained at the wrists. My neck is surrounded by the surface of what must be the dungeon pillory. How did I get here?\n\n\"Emilia! Is that you? What is happening?!\" I blurt. My head is aching and the rusty taste of puke and bile is on my tongue. We've been drugged.\n\nEmilia's face is suddenly illuminated in front of us. She's holding our camera, pushing buttons and changing the gradient of colors across her forehead with each click. She shoves the screen in my face, nearly blinding me. When my eyes adjust, I can see Emilia's face in the picture next to Rhea and Zoey. They are kneeling together during a special moment from last night.\n\nThe scene is familiar enough. The girls are cheek-to-cheek and smiling at the camera with peanut butter cups in hand. And then I see the face. Pale, almost transparent as it blends into the background. Black holes in place of eyes. I get sick to my stomach and feel a cold rushing over my body.\n\n\"She's here,\" Emilia tells me.\n\nMy mind is still swimming from the drugs as I try to process this.\n\n\"She's here and I've seen her,\" Emilia says.\n\nShe presses a button and confirms the deletion.\n\n\"Delete,\" Emilia says out loud. \"And I was never here. You won't find any pictures or videos of me.\"\n\n\"Emilia, what is this? What are you doing?\" I ask, coughing up some spit and feeling an uncomfortable acidic burn in my throat.\n\nShe holds out a printed photo and uses the camera display to cast some light over it. I recognize Emilia in the picture immediately, but her hair is brown and curly. She is standing with her arm around another familiar woman, slightly younger and with the same style of hair.\n\n\"Marta and I have always had a special connection. She's my little sister. Now that you've seen both of us, I have to ask. Who is prettier?\"\n\n\"I've never seen that woman before. Now, please\u2014\"\n\n\"I didn't ask if you've seen her before. I just showed you a picture and asked who was prettier. Why are you being defensive, Master?\"\n\n\"Emilia, why don't you unlock the pillory and turn on the lights\u2014\"\n\n\"She didn't tell me where she was going the night she disappeared. She didn't even know herself. A driver picked her up. I swore that I would do anything it took to find her. Well, not anything.\"\n\nEmilia turns her back to me and lifts her skirt.\n\n\"I've had plenty of men inside of my ass, but not you, Master. You know, I didn't expect to actually get the job. I just wanted to get in to your place, to be sure that this where it happened. Winning was sort of a bonus.\"\n\n\"Emilia, this is crazy\u2014\"\n\n\"Marta said she was going off to work as a maid!\" she interrupts with a raised voice, getting emotional. \"It was the day before Halloween! Does that sound familiar?!\" Emilia asks, wiping a tear away from her cheek.",
        "I try to calmly reason with her. \"What that sounds like, is very typical job opportunity with hundreds if not thousands of residences in the area. Did you see all the surrounding houses on your way up here? Do you think we are the only people with hired help?\"\n\n\"Marta is here. I told you I've seen her. You saw her too. She was in the dungeon last night.\"\n\n\"Don't be ridiculous. You can't lock up people against their will based on superstition and strange pictures.\"\n\n\"Today is different, though. She is here in the flesh. The dead rise and walk among the living. Don't you know anything about Halloween?\"\n\n\"You are making a big mistake, Emilia. Unlock the pillory now and we promise not to call the police,\" I say, trying to reclaim my authority.\n\n\"Of course you won't call the police! Not with what you're hiding! You put her in that super fun happy slide of yours didn't you?! Marta was claustrophobic and she had a heart condition. She always had to go through life carefully, but she would have done anything to bring back money to our family. She didn't survive the fall, did she?! You didn't call an ambulance to help her because you'd have to explain that you threw her down a surprise slide into some creepy sex dungeon! They would have locked you up!\"\n\n\"Marta, I swear to you, we have never seen your sister before.\"\n\n\"My name isn't Marta. It's Emilia. Well, that's the name that I gave you, anyway. Why did you call me Marta?\"\n\n\"Damn it, I don't know what I'm saying. I've been drugged! Now listen to me, whatever your name is. I can give you the names and addresses of every woman that has passed through here. I have pictures too.\"\n\n\"Your wife Livia was pretty helpful before she passed out. She even gave me some of your passwords. I've seen your pictures and your videos of the other girls. You must have cleared Marta from your archives. I went ahead and cleared myself too. What do you think I've been doing all day while you slept off those ruffies?\"\n\nMy god, how long have we been here? Is it already night time? I start pulling hard on my wrists and kicking my legs in desperation. It's no use. The pillory is unmovable, unbreakable, by my design. I have to get through to her. It's our only hope.\n\n\"Listen. You have to free us so that we can help you. We have money and resources to help you find your sister. I'm sure she is alive and well. If she is missing, we can help you find her!\"\n\n\"I've already found her. She lives here now. This is her home. She'll live here forever. Just like you.\"\n\nEmilia turns abruptly and begins scaling the stairs to the first floor.\n\n\"Wait! Wait! Okay! We did it. We buried her body. We didn't mean to hurt her, it was an accident! I swear! Go ahead and call the police! I'll tell them everything!\n\n\"It's too late for that. She wants to say hello.\"\n\n\"You can't do this! You can't leave us locked up down here!\" I scream.\n\n\"Oops,\" Emilia says, tossing the padlock key onto the cement floor. The ominous metal clink echoes through the dungeon as she climbs the stairs. She slams the door shut and I can hear footsteps across the first floor slowly fading from earshot.\n\n\"Livia, are you alright?\"\n\nShe has been dead silent ever since we were drugged and restrained.\n\n\"Livia!\"\n\n\"We are going to hell,\" Livia whispers.\n\n\"I need you to stay with me, Livia. Help me think. We can get out of here\u2014\"\n\n\"We are going to hell!\" she screams at me, violently shaking her body against the restraints, sobbing and grunting.\n\nOut of the corner of my eye I see a sudden flash. A crack of light casts against the brick wall next to the cellar.\n\n\"Who is it?\"\n\nThe light is obscured by a shadow momentarily. My heart stops for a few beats and I feel the temperature drop.\n\nThere is just enough light to help me make out an approaching shape. Someone is in the room with us. Perhaps Emilia made her way back down, but how? Does she have an accomplice?\n\n\"You,\" a voice speaks. It's gravely and awful. I've never heard anything like it. I clench my eyes for a moment and pray to be removed from my body. What am I doing? This can't be real. I open my eyes again and try to control my panicked breathing.\n\nI can only see a vague outline of the thing in front of us, enough to tell that the arms are hanging asymmetrically and one of its twisted legs is lagging behind it. The foot seems to be encased in concrete, dragging along the floor with an unbearable scraping sound.\n\n\"Who is it? Please stop. You win. Turn on the lights. Please!\"\n\n\"You buried me alive.\"\n\nI didn't! I didn't bury anyone alive! I took her pulse. I checked her breathing. She was dead. I'm sure of it! Damn it, I'm sure of it! The lumps in the concrete were just sloppiness. I didn't see movement of any kind when I poured it on! \n\nThe faintest of light illuminates grey skin and thin clumps of matted hair dart out from its skull. The eye sockets are nothing but empty black caves that stretch back to infinity.\n\n\"Help! Help!\" my wife screams so loud that it leaves a constant ringing in my ear. Twisted fingers are reaching towards us. Livia is shrieking and shaking our monstrous restraints so much that it feels like an earthquake. And then the screaming stops.\n\n\"Livia! What's happening? Livia!\" She must be in shock. Unconscious. \"Livia, talk to me!\"\n\n\"You buried me alive,\" it repeats, laying a cold, concrete-crusted hand on my cheek.\n\n\"No! Please! Stop!\" I beg, in desperation. I fight with everything that I can, pulling so hard to free my hands that my skin tears and my wrists dislocate. \n\nThe voice speaks again, this time directly in my ear. Cold breath penetrates the caverns of my soul, haunting me for an eternity on an infinite loop.\n\n\"You buried me alive.\" "
    ],
    "authorname": "masterandmargarita",
    "tags": [
        "bdsm",
        "bondage",
        "pillory",
        "paddle",
        "anal",
        "throat fucking",
        "facial",
        "cum eating",
        "ffffm",
        "sex slave"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/sex-slave-spooktacular"
}