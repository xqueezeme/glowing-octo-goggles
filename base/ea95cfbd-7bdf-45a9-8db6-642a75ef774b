{
    "title": "A Weekend at Sonya's",
    "pages": [
        "I rested my head in my hands as I stared up at the clock. \n\n\"3:48?\" I muttered in disgust. \n\nI was twelve minutes away from beginning my weekend, but it seemed as though time was grinding to a halt. I had finished with my last client an hour earlier and was simply waiting out the rest of my shift. I groaned again and looked out over the gym. To further my disappointment there were not even any half decent women to look at. I dropped my head back into my hands, content to simply waste away the final ten minutes. I was so wrapped up in my own boredom, I didn't even notice the sound of the door opening. \n\n\"Damon?\" \n\nI almost jumped as the voice spoke my name. I quickly raised my head to see where it had come from and, to my delight, I laid my eyes upon the most attractive girl I had ever known. \n\n\"Sonya!\" I exclaimed. \"What are you doing here?\" \n\n\"I'm a member here now,\" she stated, smiling exuberantly. \"I joined last week.\" \n\n\"Really?\" I asked. I haven't seen you, and I've been working almost every day.\" \n\n\"Well, I guess I haven't been coming enough then.\" \n\nI was about to make a dirty joke but I held my tongue. \n\n\"Geez, How long has it been?\" she asked, cocking her head to the side. \n\nI pondered the question for a moment before answering. \n\n\"About two years I guess.\" \n\nSonya placed a hand on my arm and looked straight into my eyes. \n\n\"It's been way too long\" she said with a smile. \"I almost forgot how cute you were.\" \n\nI smiled back but couldn't think of anything to say. Sonya had always made me nervous, and after two years, nothing had changed. Back in college I had wanted her so bad but I never made a move, firmly believing that she was way out of my league. \n\n\"So,\" she continued. \"You're a trainer now?\" \n\n\"Just during the summers,\" I responded, still a little thrown off by her previous comment. \"I'm actually starting med school in the fall.\" \n\n\"Wow\", Sonya exclaimed. \"Look at you!\"\n\nI smiled again, cursing myself for not coming up with something witty to say. \n\n\"Well, Dr. Damon,\" she joked. \"I'm going to have to sign up for a few training sessions with you. I'm so out of shape right now.\" \n\nI furrowed my brow in disbelief as I gazed at Sonya's flawless body. She had always had issues with her looks even though she was as close to perfect as any woman could ever get. As she stood before me she was dressed in a pair of black spandex shorts and matching top that exposed her impossibly tight stomach. She was tanned to perfection as always, and her hair was even more perfect than I remembered, shimmering and silky, although it was a lighter shade than before. \n\n\"Absolutely\", I answered, trying not to stare too hard. \"I'm off now, but you can make an appointment with Stacey before you leave today.\" \n\n\"Great\", she said with a wide smile. \"I guess I'll see you soon.\"\n\nI said goodbye as Sonya turned and headed into the gym. As she began to walk away, my eyes drifted down to her ass, which was and always had been, Sonya's best attribute. \n\n\"Oh, Damon?\" she said, suddenly turning back and catching me in the act of checking out her ass. \n\n\"Y..Yeah?\" I stammered, a little embarrassed. \n\nShe gave me a sly look and sauntered back towards me. \n\n\"You don't make house calls do you?\" \n\n\"Well, not usually, but...\" \n\n\"Well then how about drinks then? My place? Tonight?\" \n\n\"Uh..Yes! Sure. Absolutely.\"\n\n\"Good,\" she purred. \n\nShe then grabbed my hand and scribbled down an address on my hand. I was trying not to shake with anticipation at her touch. \n\n\"There,\" she said. \"Be there at about eight. okay?\" \n\nI nodded in agreement. I was trying to remain calm on the outside even though I was going crazy on the inside. I bit my lip and watched Sonya walk away again. She looked back over shoulder catching me again, but we both just smiled. \n\nI hurried home and jumped in the shower. I couldn't believe it. After years of jerking off to the thought of fucking Sonya all through college, I was actually going over to her house for drinks. I remembered those days. I used to sit and watch her at cheerleading practice just so I could 'conveniently' offer her a ride home afterwards. She had acted quite flirty towards me but she had always been dating some asshole boyfriend so I never even got the chance to make a move. Not that I would have anyways. As I mentioned before, she had been so very, very far out of my league! \n\nThe time dragged on as I waited. I passed the time watching a little TV and soon fell asleep as I usually do after work. When I woke it was almost time to go, so I got dressed, trying to make myself look as best as I could, and headed out the door. \n\nI tried to read the smudged writing on my hand as I drove through the winding streets, looking for Sonya's house. \n\n\"This can't be right,\" I muttered to myself, looking at the houses on either side of the street. \n\nThis had to be the richest area of the city. How could Sonya afford to live here? \n\nWhen I finally came to the address that was scribbled on my hand I was astounded. Before me was a massive house surrounded by trees with a circle driveway passing under a large balcony held aloft by two immense Greek style columns. \n\n\"What the fuck?\" I blurted out loud, staring at the mansion. Did Sonya win the lottery or something? \n\nI parked my car on the side of the street and walked up the driveway, still in utter awe. As I got to the door I rang the doorbell, hearing the hollow sound reverberate throughout the house inside. Some time passed and I began to suspect that maybe I had come ot the wrong address. I was about to ring again when the large oak door swung open before me to reveal Sonya standing there, looking completely irresistible in a very tight, very short white dress. \n\n\"Good evening,\" she said with an inviting smile. \"I was beginning to think you weren't coming.\" \n\n\"Wow,\" was all I could say. \"You look amazing!\" \n\n\"Thanks,\" she answered in a cute little voice. \"I thought you might like it.\" \n\nWith that she gave a twirl, showing off the dress and the incredibly hot body within it. Her legs looked even better, with her flawlessly tanned skin contrasting beautifully with the pure white fabric. In the back, it barely came below her ass, with the tightness of the material firmly cupping her taut cheeks. The dress was low cut as well, showing ample cleavage although I was more preoccupied with the bottom half. \n\nI stepped inside and closed the door behind me, tearing my eyes away from Sonya only to gaze around at the splendor of the house.\n\n\"Sonya?\", I asked, following her into an adjacent room. \"How in the hell did you get to live in a place like this?\" \n\n\"It's my husband's.\" she answered matter of factly. \n\nI stopped dead in my tracks.\n\n\"Husband?\" \n\n\"Yeah, I got married last year.\" \n\nI was stunned and trying to think of something to say when we entered a room with a large stone fireplace and a couple huge red sofa's. Against the wall was a fully stocked bar. \n\n\"So....You're married?\"\n\n\"Uh huh. Why? Does that bother you?\" she asked flashing me a sexy smile. \n\n\"What? No. Not at all!\" \n\n\"Good. He's away on business anyways. He wont be back until monday.\" \n\nI started to relax a little more with that little bit of information, although I was still in a state of shock that Sonya had a husband. And a very rich husband from what I could tell. I was about to ask some more questions but I thought it was a better idea to mention as little about her husband as possible. \n\n\"Have a seat,\" Sonya suggested, as she walked over to the bar. \n\nI sat down and waited patiently as she fixed us a couple drinks. When she was done she came over, handed me mine and sat down right next to me. We immediately began to reminisce and soon one drink turned into four or five. I could tell Sonya was getting a little bit buzzed and with each new drink she moved a little closer to me. I was also starting to feel the liquor and our conversation began to move in a new direction. \n\n\"So Damon,\" she began, placing a hand on my leg. \"How come you never made a move on me in college?\" \n\nI took another large sip before answering. \n\n\"Well, I never thought you were interested.\"\n\n\"What?\" Sonya scoffed in amazement. \"It was so obvious that I had a crush on you!\" \n\nI was taking another large drink when Sonya's confession came out, causing me to cough and sputter. I quickly tried to regain my composure. \n\n\"Are you joking?\" I asked, hitting my chest, trying to prevent my rum and coke from entering my lungs. \n\n\"No! You mean you never noticed?\"\n\n\"I never noticed anything. I mean..You always flirted with me and stuff, but I thought you were just kidding around.\" \n\n\"Nope,\" Sonya stated bluntly, sitting back and taking another drink. \"I wanted you. Bad.\" \n\nI couldn't believe my ears. The girl I lusted after for years had wanted me just as much! I shook my head, cursing myself for being such a pussy back in those days. \n\n\"I can't believe this,\" I said, still shaking my head. \"This would have been nice to know two or three years ago.\"\n\nSonya leaned forward and smiled. \n\n\"And why is that?\" \n\n\"Because I wanted you too! You have no idea how bad I wanted you! Every time I was around you I just wanted to rip your clothes off!\"\n\nSonya let out a giggle, and moved her hand higher up on my leg. I had a full on-on erection but luckily it was not visible from the outside. \n\n\"Well,\"she began, tossing her shimmering hair to one side of her head. \"Maybe it's about time we made up for lost time.\" \n\nI looked into Sonya's smoldering eyes and almost melted. She was close enough for me to smell the faint scent of vanilla, the source of which was probably some cream she had applied to her luscious body. My eyes drifted down to the hemline of her dress which was riding so high up her shapely thighs, I could actually see a portion of her firm, tanned ass. I looked up again and our eyes locked. A second later her lips were on mine, her sweet little tongue darting around inside my mouth. \n\nMy hands immediately went to her waist and subtly drifted downwards to her ass as she straddled me, climbing aboard my lap. In an uncontrollable frenzy I groped her ass as she moaned into my mouth. Her hands were running through my hair as she ground her pelvis into mine. \n\nThen she stopped. \n\nI looked at her curiously as she pulled away, still staring intensely into my eyes. \n\n\"Fuck, you're hot,\" I blurted out. \n\nSonya didn't flash her usual sexy smile, but instead dismounted from my lap and stood in front of me. I started to stand up as well, but she put both hands on my shoulders, pushing me back down to the sofa. She then bit her lip and reached down, pulling her tight white dress up her smooth tanned legs. My mouth was watering just at the site as she slowly exposed more of her legs to me. \n\n\"You like my legs?\" she asked in an innocent voice, revealing just a bit of the white fabric of her underwear. \n\nI nodded. \n\nSonya then lifted a leg onto the sofa and nuzzled her foot into my crotch as she sensually ran her hands up her thigh. Reaching out, she put her hand behind my head and gently pulled my face to her inner thigh. Along with the vanilla, I could make out a faint erotic scent, telling me that she was just as turned on as I was. I could hear her purr like a kitten when my lips touched her skin. \n\nGently and softly I kissed her inner thigh, slowly moving my way up. Her breathing was becoming more and more labored, but then she grabbed my hair and pulled me away. \n\n\"How about my ass?\" she asked in the same innocent voice, pulling her foot from my aching crotch. \n\nWith that, she spun around to show off her best asset. Arching her back, she turned to look at me over her shoulder. \n\n\"You like it?\" \n\n\"God yes!\" I stammered as she began pulling her dress up again, this time from the back, exposing just the bottoms of her cute little ass cheeks. \n\nShe continued teasing me, pulling the skin tight dress up further. I could now see both globes of tanned flesh separated only by a thin white string. My cock was straining against my pants, just begging to be released. Cautiously, I reached out to touch Sonya's ass, but she slapped my hand away with a playful giggle. \n\n\"First,\" she said. \"You have to kiss it.\" \n\nMy mouth watering, I leaned forward planting a soft wet kiss on her firm, muscular ass. Sonya moaned in appreciation as I traced my tongue towards inwards. I wanted to do more, but Sonya had other ideas. \n\n\"Unzip me.\" she ordered. \n\nWith great reluctance I pulled my face from her perfect ass and took hold of the zipper on the back of her dress. Slowly, I pulled it downwards, exposing more of her sexy back. She then took a step forwards and turned to face me once again. Tossing her hair back, she slipped the straps from her shoulders and pealed the tight dress down her even tighter body. \n\n\"There.\" she said emphatically, kicking the dress away from her feet. \"That's much better.\" \n\n\"Yes,\" I agreed with a huge grin. \"Yes it is.\"\n\nSonya was now standing before me wearing nothing but a tiny white g-string and her wedding ring. I took a moment to take in the spectacular sight as she sauntered towards me. \n\nPutting her hands on my lap, Sonya leaned in, kissing me again. As our tongues entwined, she subtly moved one of her hands inwards, giving my crotch a gentle squeeze. \n\n\"Mmmm,\" she moaned in approval, feeling the hardness in my pants. \n\nShe moved to my neck, sensually sucking at my skin as she climbed onto my lap, pressing her firm little body into mine. Again, I grabbed her ass with both hands, pulling her tightly to me. Sonya moaned again, and threw her head back in pleasure as I took one of her nipples into my mouth. \n\nI played with it for a while, flicking it with my tongue and gently squeezing it between my lips, before Sonya began unbuttoning my shirt. \n\n\"And just what do you think you're doing,\" I asked, joking of course. \n\n\"I want to see that sexy body of yours,\" she replied, throwing my shirt open. \n\n\"Oh fuck yeah.\" she said quietly, biting her lip and running her hands down my chest and stomach. \n\nWith that, Sonya climbed backwards off my lap coming to rest on her knees in front of me. Her hands immediately went for my pants, undoing the button and zipper in one second flat. I lifted my ass so that she could pull my pants down, which she did with more enthusiasm than I would have expected. \n\n\"Mmmm, hello!\" she said, tossing my pants aside and eyeing up my dick which was now standing at full attention about a foot away from her face. \n\nWith her eyes fixated on the area below my waist, Sonya reached out eagerly and wrapped her tiny hand around my shaft. I closed my eyes, relishing the feeling of her soft hand as she began to slowly pump up and down. With every movement of her hand, her pace quickened and a small droplet of pre-cum began to form on the end of my cock. \n\n\"You have a beautiful cock!\" Sonya exclaimed, moving her face a little closer as if to tease me. \n\n\"Thank you,\" I gasped in the hope that it would soon be between her sweet lips. \n\n\"You want me to suck it don't you?\" she asked, smiling up at me. \n\n\"Yes.\" \n\n\"Tell me. I want to hear you say it.\" \n\nSonya then flicked out her little pink tongue and licked the droplet of pre-cum from my dick. \n\n\"Tell me,\" she reiterated, staring up me with her dark, sultry eyes. \n\n\"Suck my cock.\" \n\nSonya smiled as I spoke the magic words, and an instant later her sweet lips were wrapped around my shaft, sucking it into the back of her mouth. \n\n\"Oh fuck!\" I moaned, as I felt her tongue swirling around the head of my dick. \n\nI reached down and placed a hand on her head, stroking her silky brown hair as she began to slowly slide her lips up and down as her hand remained firmly grasping the bottom of my shaft. I was just beginning to relax and enjoy the feeling of Sonya's warm, wet mouth when she suddenly stopped. \n\n\"I have a better idea,\" she said, pulling my cock from her mouth. \"Lay down.\"\n\nI was a little disappointed that my blowjob had ended so early, but I was sure that whatever Sonya had in mind would be pleasurable enough. \n\nI swung my legs up onto the couch and laid down on my back as Sonya arose from her knees. I turned my head to watch as she tucked two fingers into her g-string and pulled it from between her legs and let it drop to the floor revealing the most perfect pussy I had ever seen. She was completely shaved and without a tan line in sight. \n\nShe stared intently at me as she approached the sofa and rested a knee beside my head. Just as I was wondering what she had planned, Sonya swung her other leg over to the opposite side, straddling my head in the 69 position. I was now face to face with her tight little ass and delicious pussy which was already glistening in anticipation. Shifting her hips downwards a little, she brought her dewey lips in contact with my mouth as she gave the underside of my cock a long, wet lick, running her tongue down to my balls. \n\nI moaned in appreciation and opened my mouth fully to cover her little wet hole, my tongue snaking its way inside her. Sonya moaned herself, as she felt my tongue push past her delicate lips and up into her hot little pussy. Running her tongue back up my shaft, she wrapped her mouth around my head and lifted my dick off of my stomach and sucking it deep into her mouth once again. I placed my hands on her ass and pulled her hips downwards initiating a gyrating motion which Sonya continued to do, grinding her hot pussy into my face. \n\n\"Yesss,\" she hissed, giving my cock a few quick pumps with her hand. \n\nAs good as Sonya's lips and tongue felt on my dick, I was doing my best to center my attention on her pussy instead of the amazing blowjob I was receiving. That last thing I wanted was to blow my load and put an early end to this incredible experience.  \n\nAs Sonya continued to fuck my face with her wet pussy, I stared lustfully at her little pink asshole which was winking at me with every gyration of her hips. Using my hands to pry her tight cheeks apart I pulled my tongue from her pussy and lightly flicked it across her tiny puckered opening. Sonya responded by inching forward a little and running her nimble little tongue over my balls. I gave her butt hole a few more licks before returning to her pussy which was now soaked with her juices. \n\nShe slipped my cock back into her mouth and began bobbing her head up and down faster than ever before as her free hand continued to work over my aching balls. I was afraid I was about to cum, when Sonya stopped, gasping for air. \n\n\"I want to fuck you!\" she said between breaths. \"I want this cock inside me now!\"\n\nWithout waiting for a response, Sonya jumped off and ordered me to sit back up. I did as I was told and she quickly climbed onto my lap reaching down to grab my pulsating dick in her hand. \n\n\"I've been waiting for this for so long,\" she said, rubbing the head of my cock along her slit. \n\nLowering her body, Sonya then pushed my dick past her swollen lips, closing her eyes and throwing her head back in ecstasy as her tight little pussy slid down around my shaft. I placed my hands on her tiny waist and helped guide my cock inside her. Her pussy was impossibly tight and gripped my dick like a vice. \n\n\"Just so you know,\" I said as she nestled down. \"I may not be able to last very long.\" \n\nSonya smiled and leaned in to kiss me. \n\n\"That's okay,\" she said. \"We have all weekend.\" \n\nWith that, she wrapped her arms around my neck and began to gyrate her hips into mine. \n\n\"Oh my god!\" she moaned. \"Your dick feels so fucking good in my pussy!\" \n\nReaching down behind her, Sonya began to play with my balls, keeping one arm wrapped around my neck as she ground her clit against my body. She was beginning to work up a sweat and her skin was starting to stick to mine, especially her tits which were pressed firmly against my chest. ",
        "\"Fuck!\" she said through clenched teeth. I think I'm going to cum soon!\" \n\nShe was grinding herself against me even harder as she stared directly into my eyes with her penetrating gaze. My hands gripped her tight sweaty ass as she continued to talk. \n\n\"Make me cum!\" she blurted out. \"Make me cum all over your cock and then do whatever you want with me!\" \n\n\"I can do whatever I want with you?\" I asked, sliding a finger down between her ass cheeks. \n\n\"Yesss,\" she moaned. \"I want you to fuck me in every way possible!\" \n\nSonya's words turned into incomprehensible moaning as I began to massage her asshole with my finger. I was just starting to think about all the dirty things I could do with her, when her body began to shake. Her fingers dug into my shoulders and her thighs locked together, pressing hard against my legs. \n\n\"Fuck!Fuck!Fuck!Fuck!Fuck!\" she squealed, as her pussy convulsed around my cock. \n\nSonya's cursing soon turned into slow, quiet moaning as her orgasm subsided and she eased her self back into a gentle rhythm.\n\n\"Wow,\" she exclaimed, brushing her hair from her face. \"That was so good.\"\n\nI managed to crack a smile just before she wrapped her arms around me and pressed her sweaty, sticky body against mine, kissing me with renewed passion. \n\n\"Now,\" she said, breaking away from me and staring back into my eyes. \"Fuck me!\" \n\nI needed no further encouragement. \n\nSonya's eyes went wide as I gripped her ass tightly and rose to my feet, her juicy little cunt still impaled on my cock. She gave out a startled shriek and wrapped her legs around my lower back as I walked across the room holding her with her tiny body suspended off the ground. Our lips locked again with Sonya grabbing the back my hair and stuffing her tongue into my mouth. \n\nForcefully, I slammed Sonya against the wall, driving my dick deep inside her and eliciting a surprised squeal from her lips as they broke from mine. \n\n\"Oh fuck yeah!\" she moaned as I began sucking at her neck and driving my hips into her again. \"Fuck me hard!\" \n\nHer nails were clawing at my back as I continued my relentless thrusting, slamming her repeatedly into the wall. Her pussy was now slick with her cum and my cock was sliding in and out effortlessly, causing her pert little ass cheeks to tense with every thrust. \n\nStepping away from the wall, I turned and dropped to my knees, laying her down on the soft carpet. I then grabbed her ankles and pushed her legs up into the air in front of me. Sonya then did me one better, by grabbing her own ankles and pulling them down to rest on either side of her head. \n\nI looked at her in surprise before I remembered that she used to be a cheerleader, and that moves like that required next to no effort on her part. I then resumed fucking her tight little pussy, causing her body to slowly inch across the floor. \n\n\"Uh! Uh! Uh!\" \n\nWith every thrust of my cock, Sonya would let out a sexy moan although the subtle sounds of her enjoyment were soon drowned out by the wet sound of my balls slapping against her ass. I slowed down a little, but Sonya reached down and clawed at my ass, urging me to continue. \n\n\"I'm going to cum soon,\" I groaned, driving my dick back into her hot little hole. \"Do you want me to cum inside you?\"\n\n\"No.\" she replied between moans. \"Let's be dirty.\" \n\nI was intrigued.\n\n\"How dirty?\" I asked, sinking my cock up to the balls in her tight, wet pussy. \n\n\"I want it all over my face! Cum on my face! I want to be a little slut!\"\n\nSonya's words sent me to to the edge. A couple more pumps and I unsheathed my dick, holding back the irresistible urge to release. \n\n\"Oh yeah.\" Sonya said, licking her lips. \"I want that! Give it to me!\" \n\nI crawled over and knelt beside her head firmly gripping my cock in my hand. As my body tensed I could see the head of my dick swell before firing forth a creamy stream of white cum onto Sonya's perfect face. She closed her eyes and moaned as it was followed by a second and then a third stream, splashing off her lips and outstretched tongue. \n\nBy the time I was finished, Sonya's beautiful face was a slimy mess, coated and glistening with my cum. I sat back and took a deep breath as she propped herself up onto her elbows.\n\n\"Wow,\" she said, wiping a thick gob of jism from above her eye. \"That was a lot of cum!\" \n\n\"Yeah, sorry,\" I returned only to have my apology brushed off. \n\n\"No, no. I loved it!\" she said before licking the cum from her finger. \"Tastes pretty good too. Well, for cum anyway.\" \n\nI gave a laugh and reached for my underwear, suddenly feeling very exposed. \n\n\"Well,\" Sonya said, hopping to her feet. \"I think I need a shower. Just make yourself at home, but don't you dare sneak out. I have more plans for you.\"\n\n\"I wouldn't dream of it,\" I responded, sliding my underwear back on. \n\nSonya then blew me a kiss and turned and headed for the nearest staircase. I slumped back down on the couch exhausted, wondering what other \"plans\" Sonya had in store. Needless to say, I had not intentions of \"sneaking off.\"\n\nI noticed a massive big screen TV on the far wall and began to look for a remote control. I figured I might as well watch a little Sports Center while I waited for Sonya to come back. After a few minutes of searching I found it jammed into the couch underneath were Sonya and I had recently been engaged in a 69. I pointed the remote at the gargantuan TV and pressed the 'power' button.\n\nMy jaw dropped open as an image appeared on the screen showing a woman on her hands and knees getting fucked from behind by man wearing a police man's uniform. I stared in amazement at the massive sexual image before it hit me. Sonya had been watching porn before I came over!\n\nI quickly turned the volume down and continued watching. Gradually I could feel my limp, lifeless penis begin to stir within my pants. Although the sex scene on the TV was very hot, I was more turned on by the fact that Sonya had been watching it. I watched the woman on the screen getting fucked and it made me realize how bad I wanted to fuck Sonya from behind. I closed my eyes and tried to picture her bent over on all fours with my cock sliding in and out of her tight little pussy. I started to reach my hand into my pants before I came to my senses. \n\nTurning the TV back off, I quickly took off up the stairs. \n\nWhen I reached the top of the staircase, I listened for the sound of running water and navigated myself through the hallways until I came to the bathroom. The door was open a crack and I could feel the warmth of the steam from the shower as I peaked in. \n\nLike the rest of the house, the bathroom was very large. The floor was adorned with sparkling white tile and an extravagant octagonal shaped shower (which was about as big as my entire bathroom) was situated in one of the far corners. Through the frosted glass, I could make out Sonya's sexy silhouette cleansing herself of the mess made by our previous activities. \n\nSlowly pushing the door open, I crept across the smooth floor,slipping my boxers off in the process. When I reached the shower, I pulled the handle down and opened the door. Standing before me was one of the most glorious sights I had ever seen. Sonya was facing the opposite direction with her back arched as the hot water cascaded down her perfectly tanned body. \n\n\"I was wondering when you were going to get in here,\" she stated, obviously not surprised by my appearance. \n\nI smiled to myself and stepped into the shower.\n\n\"I just couldn't stay away,\" I said pressing my body up against hers and kissing her softly on the neck. \n\n\"Mmmm, hello,\" she sighed as she felt my dick pressing into the crease between her ass cheeks. \n\nThe feel of her firm, wet body against mine sent a rush of blood surging through my cock causing it swell and press hard against her ass. I paced my hands on her hips but they soon found their way up to her pert little tits, cupping each one as I gently kissed and sucked at her neck. Sonya moaned and pressed her ass back into me. \n\n\"So,\" I said, running my fingers over her erect nipples. \"Do you let all your friends cum on your face?\" \n\nSonya let out a cute little giggle before responding. \n\n\"Only if they're extremely hot,\" she said, taking hold of one my hands with hers. \"Did you like it?\" she asked, as she pushed my hand down between her legs. \n\n\"Oh yeah,\" I affirmed, stroking two of my fingers along her slit. \"Did you like it?\" \n\n\"Uh huh,\" she moaned, as I slipped a finger into her tight pussy. \"It makes me feel dirty.\" \n\n\"You like feeling dirty?\" I asked, pushing my finger farther up inside her. \n\n\"Yes!\" she gasped, bringing her hand up to pinch and pull on her nipple. \"I love it! I love acting like a dirty little slut.\" \n\nMy fingers soon found Sonya's clit, causing her to moan louder, reaching up behind her to grab the back of my head. Our wet bodies were writhing in ecstasy as the steamy water shot down onto us. My cock was now completely erect, and pressed up tightly between my stomach and Sonya's lower back. She was moving her hips in a circular motion, grinding her ass into me as I continued to run my fingers over her tiny button. \n\n\"I love your pussy,\" I whispered, flicking her ear lobe with my tongue. \n\n\"Mmmm, and my pussy loves you,\" she moaned back, turning and throwing her arms around my neck. \n\nOur lips locked as she lifted a leg grinding her hairless pussy into my hip. I reached down and hooked a hand under her thigh, holding her leg in place as my other hand found its way to her ass, gently squeezing and feeling her incredible firmness. As my hand touched her ass, she let out a low moan, showing her appreciation. \n\nSonya then did something that nearly drove me over the edge. As her little wet body squirmed under my touch, she reached behind her and grabbed my hand, guiding it between her ass cheeks. A little surprised, I pressed a finger against her asshole to see if that was what she wanted. \n\n\"Oh Yessss,\" she hissed, answering my question. \n\n\"You like that?\" I asked, pressing two fingers against her tight little hole rubbing in a slow circular motion. \n\n\"Yes, she replied quietly, wiggling her ass backwards onto my hand. \"It felt so good, when you were playing with it earlier. It made me cum so hard.\"\n\n\"Have you ever been fucked back there?\" I asked, wiggling the tip my finger past her tight muscular ring. \n\nSonya inhaled deeply, closed her eyes and bit her bottom lip. \n\n\"Uh uh,\" she shook her head. \n\n\"Would you like to?\" \n\nShe opened her eyes and stared directly at me as I forced my finger a little further into her ass. \n\n\"Yes.\" \n\nThat simple word was like music to my ears. Pulling Sonya tighter to my body, I kissed her deeply as I began to wriggle my finger in and out slightly, although the range of motion was still quite limited due to the tightness of her hole. I wondered to myself if I could even get my dick inside her. \n\nReaching over, Sonya turned the shower off leaving us with only each other's wet, naked bodies to keep us warm as we stood embracing in the middle of the steamy shower stall. After a few more minutes of making out, I slipped my finger out of her ass and she turned and exited the shower, stepping gingerly through the doorway. She was in the process of getting a towel, when I stepped out after her, grabbing her from behind and bending her over at the waist. \n\n\"Ooh, Damon!\" she cooed, allowing me to move her body as I wanted. \n\nShe was obviously turned on by my forcefulness, so I gave her a little push, sending her to her hands on knees on the cold hard bathroom floor. As soon as she dropped, she arched her lower back, sticking her beautiful ass out and up in the air. I followed, dropping to my knees behind her placing one hand on her ass and using the other to push her head down towards the wet tiles. \n\n\"Oh yeah,\" I said quietly to myself licking my lips and giving her firm little ass a light slap. \n\nI then leaned down and planted a kiss on one of Sonya's muscular ass cheeks, causing her to purr with delight. \n\n\"You have no idea how fucking sexy you look right now!\" I exclaimed, running my hands all over her firm flesh, as I took in the unbelievable sight of Sonya's soaking wet body on her hands and knees on the bathroom floor. \n\n\"Take me Damon!\" she moaned loudly. \" I'm yours! Do whatever you...Ooohhh!\"\n\nSonya's lewd words turned into an incomprehensible sexy groan as I pressed my tongue against her tight puckered opening. I smiled to myself and wiggled my tongue against her wet asshole. \n\n\"Oh my God!\" she said, throwing her head back in ecstasy. \"That feels so fucking good!\" \n\nEncouraged by her words, I used both hands to splay her ass open and plant my lips around her hole in a deep wet kiss. Sonya tilted her pelvis giving me better access as I continued attacking her ass with my tongue. Her hands clenched and unclenched in futility, clawing at the wet tiles as her body squirmed under me. Inserting two fingers into her pussy, I stabbed her tight little rosebud, forcing my tongue inside her. Sonya squealed and her ass clenched tight, squeezing the tip of my tongue as It tried in vain to snake its way farther into her asshole. From her mouth began to spew a non stop stream of profanity as I sawed my fingers in and out of her pussy and continued tongue fucking her butt hole. When I had had my fill of Sonya's delicious ass, I lifted my head and pulled my fingers out of her pussy.\n\n\"Do you want to go to the bedroom?\" I asked, sucking her juices off my fingers. \n\n\"No.\" she stated, gasping with lust. \"Fuck me here on the floor! Just like a dirty little slut.\" \n\nI was more than happy to oblige. Bracing her body with my hand I used my other to work my dick into her wet, warm, inviting pussy. Sonya moaned and pressed her face against the floor as she reached under her body and spread her lips for my invading cock. Once I was about halfway in, I took hold of her hips and pushed the remainder inside, pressing my balls up against her engorged pussy lips. Slowly I began to build up speed as I gazed down at her asshole which was glistening wet with my saliva. \n\n\"Baby, I can't wait to fuck that tight little ass of yours.\" \n\n\"Oh yeah, Damon. I want it so bad!\" \n\n\"You want it now?\"\n\n\"Yes! Fuck Yes! I want your cock in my ass!\"\n\nI gave her pussy a few more quick pumps, before withdrawing my dick.\n\n\"Do you a have anything we can use as lube?\" I asked hopefully. \n\n\"There's some lotion on the counter. Will that work?\" \n\n\"I don't see why not.\"\n\nWith that, I hopped up and grabbed the bottle from the countertop, anxiously opening it and pouring some of the white cream into my hand. \n\n\"Mmm, Hurry Damon. I can't wait to get that thing in my ass!\"\n\nSonya then surprised me again by reaching back and running her fingers over her spit soaked asshole.\n\n\"Oh yeah,\" I encouraged, rubbing the lotion over my shaft. \"Play with it. Play with your ass!\"\n\nShe was purring like a kitten as she used two fingers to slowly massage her anal opening which was beginning to relax after the thorough tongue fucking I had just given it. I smiled down on her prone body as I stroked my cock, coating it with makeshift lubricant as I watched two of her fingers slip into her ass. One of the fingers was adorned with Sonya's wedding ring, and there was something highly erotic about watching the massive gemstone glimmer in the light as she used it to finger fuck her own asshole. \n\nAs I resumed my position, kneeling behind her sexy body, Sonya slowly withdrew her fingers from her virgin ass. Pressing the head of my cock against her little pink star, I pushed forward using my thumb to help work my head past her tight muscular opening. Sonya let out a strange squealing sound as her sphincter clamped down around the head of my cock, trapping it within the confines of her tight little asshole. \n\n\"Try to relax,\" I urged, holding my cock by the shaft. \"Play with your pussy. It'll make it easier.\"\n\nShe did as I suggested and almost immediately her ass relaxed enough for me to guide my dick slowly inside. I looked down and smiled at the sight of my cock disappearing into Sonya's most private hole. \n\n\"And I thought your pussy was tight,\" I exclaimed, pulling back an inch just to slide it in deeper once again. \n\n\"Fuck!\" she cursed. \"Your cock feels so good in my ass!\" \n\nWiggling my hips, I managed to work the rest of my dick into Sonya's butt, until my balls were firmly pressed against her pussy. Her asshole was now firmly clamped around my shaft as I spread her cheeks wide to get a good view of the lewd scene. Pulling back, I then freed my cock, inch by agonizing inch until just the head remained planted inside her. \n\n\"Oooooh, put it back!\" Sonya begged. \"I want it deep in my ass!\"\n\nComplying with her wishes, I pushed forward sinking the entire length of my dick back into her tight, slippery hole. I was amazed at how quickly she was adapting to getting fucked in the ass. It had been only a matter of minutes and already she was begging to be fucked harder! \n\n\"i'm gonna cum soon!\" she gasped, wiggling her ass back into me. \"Fuck me hard!\" \n\nThe steamy bathroom was soon filled with the sound of my hips slapping against Sonya's firm, muscular ass as I repeatedly drove my cock into her tight hole. Her moans of pleasure gradually turned into screams of lust as her body trembled though its second orgasm of the night. Biting into her arm to prevent herself from screaming too loudly, Sonya's asshole began to pulse around my shaft and her muscular cheeks tensed so much I thought she would break my dick off in her ass! After a brief moment longer, she relaxed, dropping her head to the floor. \n\n\"Oh my god,\" she gasped, pulling her cum soaked fingers from underneath her body. \n\nShe was finished but I was only beginning. \n\nReaching out, I grabbed Sonya's shoulders pulling her back onto my cock. \n\n\"Uhhh,\" she moaned as I impaled her with my dick. \"Yessss.\"\n\nAgain I pulled her back, eliciting the same response. \n\n\"Yes Damon! Fuck me! Use my ass! Use me like a dirty little slut!\"\n\nI continued fucking her asshole as she stuck her fingers into her mouth, moaning like a whore as she sucked them clean of her juices. I was nearing the end and Sonya's dirty talking was once again doing the job. Forcefully, I slammed my hips into her, pinning her petite body flat against the floor. grabbing a handful of her silky,wet hair I placed my face next to hers, speaking directly into her ear. \n\n\"I'm going to cum in your asshole!\" I said through clenched teeth as my hips continue to rise and fall, violating her body there on the bathroom floor of her husband's house. \n\n\"Y..e..s....s....s,\" she managed to stammer, her voice broken up by my relentless pounding. \"Ccccuuuuummmm iiinnnn mmmmyyyyy aaaaassssssss!!\"\n\nWith one final thrust that completely took Sonya's breath away, I unleashed a torrent of hot cum into her virgin asshole. \n\n\"Oooooohhhhh,\" she moaned quietly as the fucking of her ass was gradually replace by the gentle pulsing of my cock squirting cum inside of her. \n\nI took a much needed deep breath and peeled my body off Sonya's. My cock slipped from her ass, followed by a thin rivulet of cum which dripped down onto the wet tile floor. Slowly, Sonya regained her composure and gathered enough strength to pull her ravaged body up to her feet. \n\n\"Fuck, that was hot!\" she said pulling her wet hair out of her eyes. \n\nI nodded in agreement picking up the bottle of lotion from the counter. \n\n\"This actually works pretty good,\" I said, inspecting the bottle. \"Looks pretty fancy though.\" \n\n\"It is,\" Sonya confirmed with a naughty giggle. \n\n\"What's so funny?\" I asked, casting a suspicious glare her way. \n\n\"Oh nothing,\" she answered. \"I was just thinking about what my husband would think if he knew that the hundred dollar lotion he bought me was being used as lubricant so that his wife could get fucked in the ass on the bathroom floor!\" ",
        "I just laughed as I set the bottle back on the counter. \n\n\"Well,\" Sonya began, grabbing a white bathrobe from a hook on the wall. \"I think I worked up an appetite. Are you hungry?\" \n\n\"A little,\" I answered. \"I think I'm going to hop back in the shower first though. Why don't you go ahead and I'll be down in a bit.\" \n\n\"Okay,\" she agreed, giving me a peck on the lips. \"I'll have a snack ready for you.\"\n\nAs Sonya walked out, I stepped back into the shower. After a refreshing ten minutes later, I dried off, wrapped a towel around my waist and headed back downstairs. \n\nI made my way back to the living room, expecting to find Sonya, but she was nowhere to be found. I walked through another set of doors into a large kitchen, again expecting to find her, but again, no luck. \n\n\"Sonya!?\" I shouted. \n\n\"In here!\" came a reply from another doorway to my right. \n\nAs I walked through the doorway, following her voice I came into a large dining room lit by an ornate chandelier hanging from the ceiling. in the center of the room was a huge, deep red, very expensive looking wooden table surrounded by matching chairs. And sitting atop that very expensive dining room table was Sonya, completely naked. \n\n\"Hey sexy!\" she said with a mischievous smile, spreading her legs wide open. \"I have your snack all ready for you!\" \n\nI smiled back at her and walked towards the table. \n\n\"Aren't you tired yet?\" I asked jokingly as my dick began to grow once again, forming a ridiculous looking tent under the towel around my waist. \n\n\"I just can't get enough of you,\" she stated, calmly reaching dow to rub her hairless pussy. \n\n\"Why?\" she asked, lifting her leg to give me view of her asshole. \"Don't you want this?\" \n\nSonya pursed her lips together in a sexy pout and reached under her raised thigh, sliding her finger into her tiny hole. \n\n\"Ooooooh,\" she cooed, slipping her finger in up to her knuckle. \"I can feel your cum in my ass.\" \n\nMy heart began to race as I watched the scene unfolding before me. Taking the towel from my waist, I tossed it aside, eliciting a lustful gaze from Sonya, who began to eye my cock hungrily. Casting a wicked smile, she pulled her finger out of her ass and held it up to my view. I could see that it was covered in the glistening sheen of the cum I had recently injected into Sonya's ass. Then, with her eyes transfixed on mine, she parted her lips and placed the finger into her mouth, sucking sensually. \n\n\"Mmmm,\" she moaned in approval, licking my cum from her finger. \"I love the taste of your cum!\"\n\n\"Now,\" she continued, pulling her finger from her mouth. \"Get Over Here.\" \n\nIn a flash I was at the table, dropping my face to her pussy. I managed to get in about three flicks of my tongue before Sonya stopped me. \n\n\"Uh uh,\" she said, tilting her hips upwards and pushing my head down lower. \"There.\"\n\nI happily granted Sonya's request and began poking at her exposed asshole with my tongue. She immediately began moaning and grabbed my hair, pulling my face into her ass. \n\n\"Fuck yes,\" she said, running her hands through my hair. \"Lick my asshole! Stick your tongue up my ass!\"\n\nI tried to make my tongue as stiff as possible before stabbing at her little pink hole, bobbing my head back and forth. Sonya grabbed her ankles and laid back, pulling her legs out wide into the full splits. Eager to please, I pushed forward harder, feeding more of my tongue into her hungry butt hole. I continued tongue fucking her anus for a few more minutes before moving back up to her pussy. I wrapped my lips around her clit and sucked it gently as slipped my middle finger into her well-licked asshole. The combination of my cum and saliva had turned her ass into a tight, but slippery tunnel and my finger slid in and out easily. \n\nWithout waiting for further instruction I stood up and pulled Sonya closer to the edge of the table as she remained in the splits position. She looked up at me and flashed one of her sexy smiles as I placed the tip of my dick against her eager asshole. \n\n\"Yes,\" she agreed. \"Stick that thing up my ass again!\" \n\nI was a little surprised at how dirty Sonya was becoming. Since I had first arrived at her house I had witnessed her transform from a sexy but classy woman into a lewd, sex starved cumsut!\n\n\"Oh yeah!\" she howled as I slid my cock right up her ass on a river of my own cum. \n\nI wasted no time in fucking her ass and immediately began thrusting in and out, gazing down in amazement as her tight little hole repeatedly swallowed up my cock. Sonya lifted her head and strained to see, as she pulled her legs farther back. \n\n\"Oh my God, I can see it! she exclaimed. \"I can see your cock sliding in and out of my ass!\"\n\n\"Do you like it?\" I asked, my dick pumping in and out of her like a piston. \n\n\"Yes! It looks so dirty! Oh, fuck me Damon! Fuck me like a whore! Fuck my ass on my husband's dining room table.\" \n\nHooking my hands under her thighs, I began to pull her firm little body to meet each thrust of my cock as Sonya continued to spew profanity from her sweet little mouth. \n\n\"Fuck yes! Oh my God Damon, your dick feels so good in my ass! The next time I eat dinner with my husband at this table I'm going to think about how you fucked my asshole!\" \n\n\"Fuck,\" I groaned. \"I'm going to cum! Where do you want it?\"\n\n\"In my mouth!\" she shouted with enthusiasm. \"I want to taste it! Cum in my mouth!\" \n\nI pulled my dick from Sonya's ass with a wet \"pop\", as she scrambled down from the table top. Dropping to her knees, she grabbed my shaft with one of her tiny hands and sucked my dick into her warm, waiting mouth. She bobbed back and forth on my cock a couple times before the first stream of cum erupted forth, splattering the back of her throat. She closed her eyes and moaned with pleasure as she milked the hot load from my dick, swallowing every drop of the creamy liquid. When I was finally spent, she gave the head of my cock a teasingly flick of her tongue before letting it fall flaccidly against my leg. \n\n\"Damn girl,\" I gasped. \"You really are going to wear me out.\" \n\nSonya giggled and rose to her feet. \n\n\"And just think,\" she said, giving my balls a playful squeeze. \"We still have all weekend. We can do it in the hot tub, in the pool, on the balcony......\"\n\nSonya's voice trailed off as she walked out of the room. Calmly, I walked over and picked up my towel, wrapping it back around my waist. I wasn't sure if I was going to survive the whole weekend, but I was willing to give it a try. After all, what are friends for?\n\n*\n\nIf you would like to see more of Sonya, drop me a line and let me know. \n\nDamon X"
    ],
    "authorname": "damonX",
    "tags": [
        "anal",
        "adultery",
        "ass licking",
        "cheating"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-weekend-at-sonyas"
}