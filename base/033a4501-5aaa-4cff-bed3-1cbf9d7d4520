{
    "title": "Late Night Coffee Ch. 05",
    "pages": [
        "Part Five.\n\n two girls moved into his hotel room suite. Brigitte took the car keys and came back with a bag full of clothes for them. She also brought Chinese food and they sat on the bed feeding each other. Ethan was at a loss for words. He felt weirded out that two complete strangers were moving into his hotel room. Then his cock caught sight of their gorgeous bodies and his doubts fled.\n\nWhile Brigitte was away at their apartment, Amber called in sick at work for both of them, saying they needed a few days. As soon as she put the phone down, she sidled up to Ethan and started necking with him. He loved the feel of her naked body against his and his cock surged to life. It had been several hours since he had worn himself out with Brigitte. They had slept, showered and then lounged in bed watching the television. Now Amber had him to herself.\n\nAmber had a hunger about her that Ethan found so very exciting. She had let him explore his body that morning. Brigitte had watched. Ethan had examined every inch of her, with soft kisses, a warm tongue and fingers. He had spread her legs and spread her pussy and looked and licked. She had cum softly around his fingers. He hadn't stopped there. He examined her asshole and spread it open. He had licked her from tailbone to clit in broad strokes and she had cum harder. He flipped her over and played with her gorgeous firm bum.\n\nFinally, he had penetrated her from behind, her ass pressed up against his stomach. His cock was just long enough to make it work. He felt his cock slip past her lips and soak up her hot juices. He kept his weight off her but kissed the back of her neck and her ears. She flipped her hair away and moaned.\n\nHe fucked her slowly and never stopped kissing her head and shoulders. He felt his nuts tighten and stopped thrusting. He continued kissing her and she pushed back with her ass. He loved the warmth and feel of her ass against him. Soon he was thrusting again, his imminent orgasm under control and suppressed. He didn't want to cum. Not now. Three times he had to stop. Finally, Amber cried out in pleasure and an orgasm rippled through her frame. She shook under him, clenching the mattress in tight fists, her face pressed against the mattress and screaming in joy.\n\nEthan looked at Brigitte and saw her watching Amber with an expression of wistful desire. He almost came then. The pleasure of Amber's pussy around his cock was unforgettable. She was so wet. Her pussy clenched him and just the right moment. He could smell her. The room was filled with the smell of her pussy. It filled his nostrils and fed his hunger.\n\nHe pulled out and collapsed fully on to Amber. She made an oomph sound but didn't complain. He held her and felt her orgasm continue to run through her. He was nailing it with these two women, and he was proud of himself.\n\nThat had been a couple of hours ago. He had a constant erection. He noticed Amber's eyes constantly watching it. She was fascinated by it. Now she was kissing him and stroking it softly in one hand.\n\n\"Brigitte will be away for an hour at least. Probably two,\" she said against his mouth. \"I need your cum inside my mouth. I need to feel you spasm and ejaculate in my mouth, baby. I crave it.\"\n\n\"Um, okay. If you insist.\"\n\nAmber chuckled a husky laugh and started kissing down his jawline. He tilted his head back and she moved to his earlobes. She sucked in his right earlobe and he felt pleasure run down his spine to his balls.\n\n\"Ugh, Jesus, that feels good.\"\n\nHe could feel her mouth smile, then she continued to suck on his earlobe. Her right hand ran across his chest to his stomach with a light, feathery touch and he felt goose bumps rise on his skin. He was lost in the pleasure of her attention.\n\nShe kissed down his neck and then the hollow in his throat. He felt her wet, hot tongue lick him. Her hand on his stomach moved lower and circled around his cock. He wanted her to touch him, but she refused. His cock jerked, lifted off his stomach, and then flopped back down with a meaty thump. Amber moved her head so she could watch his cock.\n\n\"Do it again,\" she whispered.\n\nHe obliged her. He jerked his cock and it rose up again and fell back against his stomach.\n\n\"Oh my God,\" she said. \"That's amazing. Keep doing it!\"\n\nEthan continued to spasm his cock. It lurched upward and bobbed. Amber squealed and watched it in fascination.\n\n\"I knew men could do that, but wow! It's so alive! How do you do that?\"\n\nEthan grunted and his cock danced once again. \"I think it's like your Kegels. It's a muscle at the base of my cock. I just flex it. It's more dramatic when I'm hard.\"\n\n\"Oh my god. It's awesome. You have to show Breeg! What else can it do?\"\n\n\"Helicopter it?\" he offered.\n\n\"Show me!\"\n\nEthan got off the bed and demonstrated the helicopter effect. His swirled his dick around and around and Amber clapped and hooted her appreciation. Laughing, Ethan fell back on the bed on his back and Amber kissed hi, laughing hard.\n\n\"I love your dick. The whole place smells like your dick.\"\n\nEthan blinked at that. \"Um, what? No, it doesn't. I can only smell your pussy.\"\n\nAmber lifted her head and looked at him. \"What?\"\n\n\"The whole room smells like pussy.\"\n\n\"No, it smells like cock. And cum, your cum.\"\n\nEthan sniffed the air. He smelt pussy. \"Nope. Pussy.\"\n\nAmber stared at him for a moment. \"That's interesting. You smell pussy?\"\n\n\"Yeah, it smells good. I love it.\"\n\n\"And I smell your gorgeous cock. It's unique. And your cum.\"\n\n\"My cum smells?\"\n\n\"Yeah, a little like bleach. Faintly. Honestly, you can't smell that?\"\n\n\"Nope.\"\n\nAmber shook her head and kissed him. This time she crawled up on top of him, putting her whole weight on him. \"Well, the smell of your cock is making me horny.\"\n\nThey kissed for a while with Ethan massaging her bum and lower back. She broke the kiss and sat up. He reached up and caressed her small breasts. He loved the feel of them. They fit his palms perfectly. He could feel her nipples pressed hard against them. He pinched them gentle and she raised her hands over his and squeezed with him.\n\n\"I love the feel of your hands on my tits. So strong and rough. I missed that about men. Brigitte is soft. Men are hard.\" She ground her pussy against his cock for emphasis. \"I want to explore your body. May I?\" She grinned down at him, her hair hanging down in front of her face, framing her eyes.\n\n\"Be my guest.\"\n\n\"Don't cum until I say so, can you do that?\"\n\n\"Depends.\"\n\nAmber grinned at him. \"That's fair. Just let me know, okay?\"\n\n\"You'll know.\"\n\n\"Yum!\" she exclaimed and then rolled off him. Like Ethan before her, she took her time. Her touch was gentle, her kisses light, her breath a warm breeze against his cool skin. The hairs on his body stood up and he shivered. He loved the attention. He never had a woman do this to him and he didn't want it to end.\n\nShe took her time and he lost track of it. She had him roll over and she tickled his back with a light touch. She ran her fingers lightly up the crack of his ass and he thrust into the mattress. She made cooing noises and repeated it over and over. Each time he thrust into the mattress. It was almost too much for him.\n\nWhen she finally flipped him back over, she turned her attention to his cock. He could feel his pre-cum leaking from the tip. She sniffed at it and giggled. \"Yup, bleach.\"\n\nHe lifted his head to look at it just as she licked the pre-cum away. She drew a broad tongue across it as he watched. Her eyes were closed in bliss. She tongued it slowly and he saw his pre-cum glisten thick on her tongue.\n\nHe came. He couldn't help it and it surprised him. A thick rope of his cum launched with force from his cock deep into Amber's open mouth. He could see it must've hit the back of her throat. Her eyes flew open in surprise and she started to cough. His second rope launched right back into her open mouth and landed on the back of her tongue. Her mouth closed and he could see her start to swallow. His third rope hit her lips and splashed across her chin and cheeks.\n\nHe expected her to complain but she opened her mouth, cum stretched across it, and she took his cock into her mouth and drove it deep. He ejaculated again into her throat and she made happy noises. She bopped her head on his dick, sending waves of intense pleasure through him. He felt his cum being sucked out of his cock and felt her throat move as she swallowed.\n\nHe flopped his head back down and for a time Amber sucked and licked his cock. She was making smacking sounds with her mouth and little noises of pleasure. He loved that she loved his dick. He felt free somehow. His wife never would do this in a million years.\n\nAmber started lapping at his balls with a firm but gentle tongue. It sent shivers through him. His cock was still hard, and he felt the desire to keep going. These women have breathed new life into me, he realised.\n\nHe closed his eyes and enjoyed her attention. Soon she was massaging his calves and feet with firm hands. He fell asleep and woke when Brigitte burst in carrying a heavy bag.\n\n\"Hey, you two! It smells like sex in here! Yum! What've you been up to? Huh?\"\n\nEthan raised a bleary eye to see Brigitte drop the bag to the floor. Amber bounced off the bed and ran to Brigitte and hugged and kissed her.\n\n\"I taste cum! Amber! You stole some!\"\n\n\"I didn't steal anything. It was freely given.\"\n\nBrigitte kissed her harder. Ethan could see their tongues dancing in their cheeks. Brigitte broke the kiss. \"Damn, all gone. Just a faint taste.\" Brigitte looked over at Ethan and then lunged at the bed. She flew up beside Ethan and took his soft cock in her mouth and started sucking it hard.\n\nEthan groaned and lay back watching. Amber came up beside Brigitte and started undressing her. Piece by piece her clothes were removed until Brigitte lay between his legs sucking his cock, fully naked.\n\nShe took his hard, wet cock and rubbed it over her large nipples. He liked the feel of it against his head and he made an encouraging sound. Brigitte grinned and placed his cock between her tits and started tit-fucking him. Amber squealed and helped hold Brigitte's tits around his cock.\n\nWhen his cock head emerged from the warm mounds of soft flesh, Brigitte would lick it quick. Amber caught on and spat between her tits for lubrication. Her mouth fought with Brigitte's to see who would get to taste him.\n\nBrigitte told Amber to back off. \"This cock is mine, Amber! My turn! I get the next sweet load.\"\n\nAmber nodded and sat back. She looked at Ethan for a moment and then moved over to sit on his face, her hands on the headboard. She lowered her pussy to his waiting mouth and moaned when he licked deep inside her opening. His hands came up to grab her ass and pull her down harder against his mouth.\n\nThe feeling of his cock between Brigitte's massive tits was glorious. He had a mouthful of the most delicious pussy. Every now and then his cock would find the hot hungry mouth of Brigitte. He felt his nuts tighten and could feel his cum surge into his cock. It wouldn't take much.\n\nHe pushed Amber higher and she obliged, knowing what he wanted.\n\n\"Oh yeah, Ethan. Eat my ass, baby.\"\n\nHe drove his tongue past her sphincter and deep into her ass. She moaned and her hand flew to her clit.\n\n\"Oh that looks hot,\" said Brigitte. \"I can see him licking your ass. Jesus, Amber, that's so fucking hot. That's what I look like, I bet, when I do that.\"\n\nBrigitte shifted and Ethan felt her weight settle on the bed on either side of him. He felt her fumble for his cock and hold it and then her pussy engulfed his cock. He sank into wet heat. Every part of his cock was surrounded by the wet welcoming folds of her pussy. She bottomed out and he heard her gasp of pleasure.\n\nShe paused a moment and then started to ride him. She would rise up until his cock would nearly fall free and then she would lower herself back down on him. She kept a slow pace, getting used to the limits and soon sped up. The only part of her touching him was her pussy.\n\nHe felt her weight shift again and then her tongue joined his at Amber's asshole. Amber moaned and pushed back until Ethan had her pussy on his mouth. Brigitte kept her attention on her ass and soon Amber was crying out in pleasure. Liquid flooded his mouth and he swallowed and savoured the taste. She was like a river of pussy juice. It was a constant trickle of juice and he loved it. She tasted so sweet and musky. I could live on this alone, he thought.\n\nIn moments, Amber came loudly. Her pussy gushed and he swallowed reflexively. Brigitte seemed to lose her rhythm on his cock, and he heard her join Amber in her pleasure. His cock suddenly grew slicker in her pussy and he knew she had gushed more juice. It was too much for him; he grunted with pleasure and came into Brigitte. He ejaculated his full load into her spasming pussy. He heard her squeal in pleasure and announce it to Amber.\n\n\"He's coming inside me! Oh, my god!\" she screamed.\n\nAmber flew off of Ethan. She cupped his balls and then licked the base of his cock. The added sensation prolonged his orgasm and he grunted harder. His orgasm abated and Brigitte collapsed on top of him, breathing heavy. Amber continued to lick his balls and the base of his cock sending shivers of pleasure through him. His cock lurched deep inside Brigitte.\n\n\"Oh! I can feel that. Do it again!\" she breathed against his neck.\n\nHe twitched his cock and felt more cum ooze out inside her. \"I've filled you up.\"\n\n\"Mmm, yum. I love it. That was intense. Feeling you cum inside me did something to me. It felt so right. I felt so much more a woman. Does that make sense?\"\n\nEthan shook his head. \"Nope, but I believe you. Coming inside a woman is the best feeling. It's where I'm meant to cum.\"\n\nAmber grabbed the base of Ethan's cock and pulled it free from Brigitte's pussy. They both complained loudly and then Ethan groaned as Amber wrapped her lips around his cock and started sucking.\n\n\"Is she sucking your cock?\"\n\n\"Yeah.\"\n\n\"Lucky boy.\"\n\nAmber popped his cock free. \"You both taste delicious. Want to taste Brigitte?\"\n\n\"Uh-huh, but I'm too comfortable here.\" She wiggled against him for emphasis.\n\nEthan felt Amber move and then she was kissing Brigitte right in front of his face. He could see their tongues swirl together. He watched fascinated and turned on. Seeing two beautiful women kissing is every man's dream. I love women and seeing another woman loving another woman just confirms my attraction. \n\nThey turned their kissing to him, laughing as they fought to win access to his mouth. After a moment, Ethan realised he could taste Brigitte and himself in their mouths. He shrugged mentally and accepted it. Fair is fair.\n\nLater that day Ethan showered alone and left to get supper from the sushi place. He ordered a massive amount and lugged it back up to the hotel room. When he entered, he could hear the shower running and the girl laughing inside.\n\n\"Supper's here!\" he yelled out.\n\n\"Yay!\" came the chorus of reply. \"Just a minute!\"\n\nEthan pulled out the plastic containers from the large paper bag and laid them on the dining table. He had edamame, tons of maki rolls and nigiri, he even ordered some teriyaki beef. He was starving.\n\nNext he pulled out a bottle of Jack Daniel and a litre bottle of coke and then got the suite glasses. He poured three stiff drinks and added ice from the fridge freezer. He took a sip and then set it down.\n\nHe stripped naked and flopped on the bed and listened to the girls laughing. He heard the water shut off and then a squeal. The bathroom door flew open and Brigitte came rushing out laughing, her large breasts rocking on her chest, with an expression of mock horror on her face. She was being chased by Amber. Ethan could see the large strap-on that Amber wore.\n\nBrigitte spotted Ethan and ran to him. \"Help me!\"\n\nShe leaped onto the bed and then tried to hide behind him. Amber jumped up and then stuck the dildo of the strap-on at Ethan. It was white, bigger than him, and glistened with moisture. \"Suck my dick, bitch!\" she ordered.\n\nEthan looked at Brigitte and saw her looking at him.\n\n\"I think she means you, Ethan.\"\n\nEthan looked at Amber and saw the mischievous look on her face. \"Suck it!\"\n\n\"No fucking way!\"\n\n\"Do it!\"\n\nEthan shook his head and started to get up off the bed, but Brigitte grabbed him and wrestled him to the bed. \"Suck it, Ethan!' laughed Brigitte. \"It was just in me, it tastes like me!\"\n\n\"Not gonna happen! I have limits. That's one!\"\n\nBrigitte relaxed and looked at him. \"Really? It would be awesome. Maybe try a little?\"\n\nEthan shook his head and struggled out from under Brigitte. Amber got off the bed and slipped off the strap-on. Brigitte pouted on the bed.\n\n\"Brigitte really wants to watch you, Ethan.\"\n\nEthan looked at Amber. \"I'm sorry. I don't swing that way.\"\n\nAmber looked sad for a moment and then spied the food. \"Oh! Sushi! Look at it all, Brigitte! It's been so long since we could afford it! Ethan, thank you!\"\n\n\"You're welcome. I made JD and cokes. Hope you like it. The edamame is gonna get cold. Eat up!\"\n\nThe next thirty minutes was all about eating. They were famished and the food was excellent. A third round of JD and coke was ordered by Brigitte and Ethan handed them over. They took turn feeding each other.\n\nAt one point, Ethan took a salmon nigiri and held it up. \"Hey, Amber. Can I eat this off your pussy?\"\n\nAmber's eyes lit up. In moments both girls lay back on the bed and Ethan would place a nigiri on the lips of their pussies and gobble up the treat. He would give them little licks and the girls giggled. They demanded a turn and carefully balanced nigiri on his cock and ate them off him. They all agreed to forgo the wasabi.\n\nMore drinks later and Ethan found himself eating the girls out one after the other. They went on all fours on the bed with their asses in the air and their shoulders pressed to the mattress. He would eat one and finger the other. He went back and forth, enjoying their unique tastes and textures. He licked their lips and sucked their hard clits. It was a dream come true for Ethan. Two women open and exposed to his attention. He had them coming in no time and they collapsed on the bed.\n\nHe pulled them until their horse remained on the bed. Their round gorgeous asses looked back at him. He could see their assholes and the beautiful slit of their pussies. He found the lube and lubed up his cock. The girls had their faces together, with their cheeks on the mattress. They watched him and he could see the delight in their eyes.\n\nHe lined up behind Brigitte and thrust his cock into her pussy. She gasped. He thrust away, lost to his own pleasure. He lubed up Amber's pussy while he fucked Brigitte. He switched girls. He ran his cock up through the lips of Amber's pussy and was rewarded with her moan. He lined up and thrust himself inside her with one steady push. Her pussy was tighter than Brigitte's and he felt his balls surge in pleasure.\n\nHe thrust with abandon, using their pussies for his own pleasure. He grabbed their hips and drove them back onto him. His pelvis rocked them. He switched back and forth, enjoying the sight of his cock disappearing into their hot wet depths. He thumbed their assholes and watched it wink back at him. He added lube and was soon driving his middle finger to the third knuckle into their assholes. He could feel his cock through their ass.\n\nThe girls were panting and moaning now. Each had already come around his cock. His fingers in their asses was driving them wild. He didn't know which one he wanted to cum inside. He switched back to Amber and saw her asshole gaping back at him. He grabbed the lube and squirted it into the opening and without warning drove his cock deep into her ass.",
        "Amber cried out and thrashed under him. He kept his hands on her hips and held her in place. He thrust deeply enjoying the sight of his cock in her ass. Amber grunted. \"About. Time.\"\n\nHer words encouraged him, and he thrust harder. He grabbed the lube and pulled out. He positioned himself behind Brigitte, shot more lube into her ass, and plunged himself deep inside her. Her ass was tighter than Amber's. He thrust harder and harder. He didn't care if he hurt them. He wanted his pleasure and took it.\n\n\"Fuck. Yeah,\" grunted Brigitte. \"Take me.\"\n\nEthan felt his cum boil hard. He was going to come. \"I'm going to cum!\"\n\nBrigitte pulled away from him. The girls swung around and knelt quickly in front of him. \"Blast our faces! Cum on our faces!\"\n\nEthan grabbed his cock and stroked it hard and furiously. The girls turned their faces up toward him with their mouths gaped open like two starving birds. He grunted and felt his orgasm hit him. He stroked once, then twice, and his cum erupted from him in thick white ropes. He aimed for their mouths. He ejaculated his first rope in Brigitte's mouth and then shot the second into Amber's. He kept coming and shot one more rope into each of their mouths.\n\nHe thrust his cock into Brigitte's mouth, and she clamped her lips around him and started to suck and blow him. Amber ducked her face down lower and lapped at his balls. Ethan looked down and watched his women clean him up.\n\n\"That was excellent,\" he finally managed to say.\n\nAmber nodded her head and stood up and kissed him. Brigitte kept sucking his cock. \"It was. Jesus, Ethan. I love your cum.\"\n\n\"I love making it for you.\"\n\n\"We need a break,\" declared Brigitte. She reached behind herself and winced. \"My ass is on fire.\"\n\nEthan apologised, horrified.\n\nThey girls chuckled and kissed him. \"It's fine. Just a little sore. You fucked us pretty hard, baby.\"\n\nEthan looked relieved.\n\n\"More drinks!\" ordered Amber.\n\n\"As you wish,\" replied Ethan. The girls chuckled and Ethan wondered if they got the joke. He looked at Amber and she smiled at him.\n\n\"Inconceivable!\" She laughed.\n\nEthan laughed with her. These girls are a wonder. He fixed the drinks while the girls cleaned up the supper remains. They still had nigiri and maki and it disappeared into the fridge. Brigitte found a full bag and squealed and pulled out bags of chips and pop.\n\n\"I thought we might need snack food,\" he said and handed Amber her drink.\n\nBrigitte came over and took hers. They clinked glasses and toasted each other. Ethan admired their breasts. He would never get tired of their blatant exposure. He loved the look of them. The swell and rise. The nipples stand out so predominantly. The girls watched him staring at them and grinned at each other.\n\n\"I think he likes us,\" stage whispered Amber to Brigitte, glancing sideways at Ethan.\n\n\"Me thinks he does. Look at his staff. Tis hard and erect! Is that for us, I wonder?\"\n\nAmber sidled up next to him switched hands on her drink. She lowered her hand down to his cock and wrapped it around him and the cold from the drink and ice shocked him. He yelped and jumped away. The girls exploded into laughter.\n\n\"What the fuck?\"\n\n\"Poor baby!\" replied Brigitte.\n\nEthan growled and opened the ice bucket and grabbed a handful of ice. He turned toward Brigitte and ran at her. She squealed and turned to run but Ethan caught her and held her from behind. He took his hand full of ice and rammed ice up inside her pussy.\n\nBrigitte froze and gasped and then cried out. \"Fuck! Get it out!\" She pawed at her pussy and squatted. The ice fell out and she pointed a finger at him. \"It was Amber, not me!\"\n\n\"True,\" he said and ran to the ice bucket and grabbed more ice.\n\n\"No, no, no!\" cried Amber and ran around the bed.\n\n\"Get her, Breeg!\" he ordered, and Brigitte shot after her. He watched them chase each other, enjoying the look of beautiful sexy women cavorting before him. Brigitte caught Amber and pulled her down on the bed on top of her. Amber lay on her back.\n\nEthan crept up and Amber squealed and kicked at him. He waited and then darted between her legs and shoved his ice into her pussy. She gasped and squealed. The ice shot out and Ethan grabbed it and this time jammed it into her ass. She froze and then screamed.\n\n\"Jesus! Get it out!\" She grunted and pushed, and the ice shot out hitting Ethan on the head. Amber saw that and started laughing. Brigitte reached down and started playing with her pussy and her laughter turned to noises of pleasure.\n\nEthan watched for a moment and then knelt and lapped at her pussy. Brigitte concentrated on her clit and Ethan inserted two curled fingers into her pussy. He reached in and found her g-spot. He stroked it gently and Amber moaned hard. He would spit on her pussy to add lubrication to help Brigitte.\n\nAmber started to make strange noises and encouraged by the sounds Ethan worked harder but kept his fingertips gentle on her spot. He could see Brigitte peering over Amber's shoulder at him. Her eyes were round, and she looked surprised. Amber was making a low guttural sound. Her breathing came in hitches. Ethan saw a tear stream down her face.\n\nOn a whim he reached up with his free hand and stroked her gaping asshole. The effect was immediate. She came explosively. Brigitte was barely able to hold on to her. She came hard around his fingers still deep in her pussy. He could feel her clench with force and her legs tried to clamp shut around him. He pulled his hand free and a large gush of warm liquid shot from her and splashed all over his head and chest. Amber cried out in pleasure and a second stream of liquid shot from her and landed on him.\n\nEthan had his mouth open in shock. Amber was still coming hard. She was shaking all over and Brigitte held her tight against her. He watched her pussy, liquid still dripping off him. Her pussy flowed with a small stream of liquid. The mattress was soaked under her. He had never seen a woman come this hard before. Not in person and not in porn. It had been so real and powerful. Brigitte was still staring up at him and mouthed the letter \"O\".\n\nEthan crawled up and carefully pulled Amber off Brigitte. Amber closed her legs and shoved her hands between her legs. She curled up on her side and Ethan held her, spooning behind her. She was still shaking.\n\n\"I think she's still coming,\" he whispered to Brigitte.\n\nShe nodded and bit her lip. She stroked Amber's hair and pulled loose strands from her hair. \"She squirted. She only did that once before with me. She squirted twice! You're soaked.\"\n\nEthan could feel the liquid cooling. \"What is it?\"\n\n\"Pee, I think. She lost control of her bladder. She came so hard!\"\n\n\"She just peed on me?\"\n\nBrigitte nodded. \"I think so.\"\n\nEthan laughed and held Amber closer. Brigitte lay down and hugged her from the front. Amber eventually stopped shaking. Brigitte was wiping at Amber's eyes.\n\nBrigitte tutted. \"You okay, hon?\"\n\nAmber nodded but remained silent.\n\n\"That was pretty powerful.\"\n\n\"Y-yes,\" murmured Amber. \"I couldn't stop coming. It was so huge. I had no control. Never felt anything like that. Jesus.\"\n\nBrigitte stroked her hair. \"I'm jealous.\"\n\nAmber chuckled a little. \"You're next. Careful what you wish for. I'd do anything for this man, now. Anything. Jesus. I'm his.\"\n\n\"What?\"\n\n\"Kidding. But Jesus fuck that was amazing. Ethan?\"\n\n\"Yes?\"\n\n\"You can do whatever you want with me. Anything. Anytime.\"\n\n\"Um, okay. I already thought we were.\"\n\n\"Hmm. True. Well, we can DP Brigitte later, anyway.\"\n\n\"DP Brigitte?\"\n\n\"Yeah, it's on our list.\"\n\n\"You have a list?\"\n\n\"Uh-huh.\"\n\nEthan grew silent. After a bit he stirred. \"Can I see this list?\"\n\n\"Nope.\"\n\n\"Well, if I can do anything, I would like you to repeat what you did to me today. Exploring my body.\"\n\n\"Oh, goody. I liked that. Okay.\"\n\n\"Awesome!\"\n\n\"Baby, I owe you. Now shush, I need to close my eyes. I'm wiped out.\"\n\n\"Um, okay.\"\n\nEthan looked at Brigitte and saw her wink at him.\n\n\"I'm next.\"\n\nEthan nodded and closed his eyes.\n\n* * *\n\n next two weeks were a blur of pleasure. The girls returned to their work at the Coffee Shop and Ethan went back to his seminar during the day. But they spent all their spare time together exploring each other.\n\nThe hotel room became a den of sex. Brigitte had her powerful orgasm and passed out. Ethan was getting better at it and knew just how to get the girls off. They were finding new ways to get him to cum. They ate in the room, fucked and sucked and did whatever they wanted to one another.\n\nThe girls were insatiable. They loved his cock and spent all their time simply holding it. They never stopped touching it. His ego had never been higher. He came inside them both over and over. They insisted, saying it made them feel so much closer.\n\nBut all good things had to come to an end. Ethan was flying home to Virginia Beach in the morning. His time in Seattle was over and he would have to return to his mundane life.\n\nHe cared for these two women. They had bonded emotionally. Ethan caught them crying more and more and when asked they would tell him to shut up and leave him alone. He understood.\n\nTonight was their last night. They wanted to make it special. Amber and Brigitte had filled the room with candles. The bed was made fresh and they had all showered. They asked Ethan to give them a moment and then they called him in.\n\nHe found them lying together in the bed making out. He moved to join them when Amber stopped him.\n\n\"No. Watch. We're lesbians, Ethan. These past two weeks were something we needed. We needed a man, but when you leave we will have each other. We want you to see the love we have for each other. Sit there. In the chair. Watch us make love to one another as only women can. You can stroke yourself but don't come baby, okay?\"\n\nEthan nodded and looked at the chair set up at the end of the bed. He sat down and watched.\n\nBrigitte lay on the left side of the bed on her side facing Amber. They moved together and starting kissing. It was gentle and loving. Ethan could sense their desire, smell their arousal. They kissed and their hands caressed each other. They stroked exposed skin, gently and tenderly. Ethan could see the hairs on their bodies rise up.\n\nTheir kissing and caressing became more frantic, but still controlled. They were in tune with one another. He could feel the love in the room. Legs opened and fingers probed. He could see them gently inserting their fingers in their openings, and just how wet they both were. Fingers rose up to gently circle their exposed clits.\n\nLittle moans escaped their mouths, only to be breathed in by the other. By some invisible cue, they broke their kiss and found each other's neck and ears. Their breasts were mashed together, and Ethan could see them moving their chests to rub them together. Hands sought ass cheeks and squeezed.\n\nEthan could hear the wet sound of fingers making love to their pussies. The sound only made the scene in front of him hotter. He stroked his aching cock. He wanted to taste them. Feel them. Join them.\n\nBrigitte growled and pushed Amber onto her back. She followed her over and started running her tongue down her body. She continued down past Amber's glistening pussy and licked the inside of her thighs. She kissed down the leg and lifted her right foot. As Ethan watched, Brigitte ran her tongue along Amber's arch and up to her toes. She leaned forward and gently inserted a finger in Amber's pussy while taking all of her toes into her mouth and sucking on them.\n\nAmber had a small orgasm. Ethan could recognise it now. She shuddered and forced her thighs together crushing Brigitte's hand in her pussy. Brigitte kept sucking and Ethan could see her hand still working on Amber's pussy.\n\nIn time, Amber spread her legs. Ethan could see just how wet she was now. Brigitte lowered the right foot and repeated it with the left. He had never sucked toes and would never be convinced to do it. But watching Brigitte doing it to Amber, he felt himself grow harder.\n\nBrigitte lowered the foot and Amber sat up and gently laid Brigitte down on her back. She slid down between her legs and used her fingers to spread her pussy wide. Ethan could see Brigitte was soaking wet. Her lips were swollen with arousal and her hood was already pulled back exposing her glorious clit. Amber sucked the clit into her mouth and made love to it. She sucked it gently, bobbing her head on it like she was giving it a blow job. Her fingers snaked up and started finger fucking her pussy. Brigitte was making noises of pleasure and writhing her ass.\n\nAmber pushed her left leg back exposing the crack of Brigitte's ass and her perfect asshole. Ethan knew Brigitte adored having attention on her asshole. He watched Amber move her mouth down and lick it and probe it with her tongue. He heard Brigitte moan and knew she wasn't far from coming.\n\nAmber moved her mouth back to her clit and return her fingers to her pussy opening. She took her pinkie and ring finger and slid then effortlessly into Brigitte's asshole. Brigitte cried out and pulled her own leg back to give Amber full access. Amber drove her fingers into her pussy and ass. Her mouth worked her clit with tender passion.\n\nEthan felt his cum boil and he released his cock, panting with how close he was to coming. Brigitte looked down at him and smiled. Then her eyes rolled back, and she came. She cried out and Amber continued to fuck her and suck her clit. Brigitte seemed to calm and then she came again, harder and longer.\n\nAmber removed her hand and then spun around on top of Brigitte. They assumed the sixty-nine position with their sides toward Ethan. He could no longer see what they were doing but he could hear them. They licked and sucked and moaned. Hands grabbed ass cheeks to pull their pussies down harder. They thrust into each other's face, going faster and harder. Moans filled the room and Ethan watched with his mouth open.\n\nSoon their asses were bucking and then they froze for a second and came together. Hips thrust wildly and moans grew louder. Ethan was sure they were done, but they kept licking each other. Asses slowed and the resumed quietly eating each other. This continued for some time, but Ethan was enthralled. Soon their moans grew louder, and their hips thrust wildly, and they came again.\n\nI wish I was a woman, he thought with envy. They can come and come.\n\nEthan looked down at his engorged cock. His head was deep purple. He was full of come. His balls felt heavy between his legs. His scrotum was relaxed, and his balls were on display. He lifted them and felt their weight. When he looked up the girls had their heads turned toward him and they were smiling.\n\nAmber spoke first. \"That's a nice cock, Ethan.\"\n\n\"I like his balls. Look at them! Hanging so low. They look full.\"\n\n\"Uh-huh. Full of baby batter, just for us. Did you like the show?\"\n\nEthan nodded. \"That was beautiful.\"\n\n\"It is. The love of a woman and the pleasure of her body is what we crave, Ethan. We needed to reaffirm our love for each other. We wanted to share that with you. When you leave us, know that we are together and happy, okay?\"\n\nEthan nodded. He had his life to go back to. They had theirs. \"I understand.\"\n\n\"After you leave, that's it, okay? We never meet again, okay? This is important.\"\n\nEthan nodded, instantly saddened.\n\n\"I see the look on your face, baby. I get it. This was a onetime thing for us. Brigitte and I wanted this. We needed it and we lucked out with you. Boy, did we ever. Fuck, it's gonna be so hard to see you go.\"\n\nBrigitte gave Amber's pussy a quick lick, eliciting a gasp from Amber. \"Shush, Amber. Ethan, it's not so bad. We have a surprise for you. We know someone in your hometown. She was married, like you. Her name is Kelly, and she needs love in her life. Passion. So we told her what you are capable of. She wants to meet.\"\n\nEthan blinked at the words. \"Um, what? Someone in my hometown? She knows about me? What did you say?\"\n\n\"That you are an amazing attentive lover. That you can make women come like there's no tomorrow. That you are up for anything. And then some.\"\n\nAmber laughed. \"She has other friends, too. Another married couple, Angela and Donald. They all live together down there. We visited once.\" Amber looked at Brigitte and they smiled at one another. \"It was memorable. You're gonna thank us later. Trust us.\"\n\nEthan nodded, unsure.\n\n\"Okay,\" said Amber. \"Now get behind me and fuck me, baby. I need your cock.\"\n\nEthan smiled and rose. He climbed up behind Amber and looked down at Brigitte. Brigitte smiled up at him and then reached up with both hands and spread Amber's ass cheeks. Ethan grabbed his cock and ran it along the length of Amber's pussy and then up and over her asshole. He rubbed it up and down, enjoying the feeling and the freedom to be able to do this.\n\nHe had been liberated sexually. Every dream he had imagined had been fulfilled this past two weeks. He felt satiated and whole. He felt a confidence about him stronger than ever. He pressed his cock up against Amber's pussy opening and with one steady push buried himself. He groaned and the tight wet feel. He loved this pussy. It was the best. Every square inch of his cock was in her pussy and soaking in her juices. Pleasure rippled through him.\n\nBrigitte reached up and tongued his balls with a broad soft touch. Ethan groaned with the added pressure.\n\n\"Fuck, Breeg. I love your mouth on my balls. Don't stop licking them. Lick my fucking balls while I fuck this gorgeous pussy.\"\n\nEthan slowly withdrew and pushed back in. He loved watching her pussy grip him tight and seeing her pussy stretch out when he pulled back. When she got relaxed and excited, he knew her asshole would open slightly. He would insert his finger then and finger fuck her ass. Meanwhile Brigitte was sucking on his right testicle. It hurt slightly but the pleasure of it made it worthwhile.\n\nHe never felt harder. His cock never felt bigger. He thrust gently letting Brigitte work her magic on his balls. She squirmed under Amber and suddenly she was licking his taint.\n\n\"Oh fuck, baby. That's awesome. Lick my fucking ass. Brigitte, eat my fucking ass while I fuck Amber.\"\n\nBrigitte rose higher and she grabbed his ass cheeks and spread them. Her tongue snaked out and lapped his asshole. He thrust and Brigitte kept her face pressed tight against his ass. Her tongue rimmed his asshole and then probed inside. He couldn't believe how deep she was. He grunted with the pleasure.\n\nAmber reached between their legs and found his balls and stroked them. \"Cum inside me, baby. Fill me up.\"\n\nEthan was lost to the pleasure. Threesomes had become his norm and he loved it. He needed a tongue in his ass and his cock buried in a tight pussy. He thrust and thrust, and he felt his balls tighten painfully against him.\n\n\"I'm coming...\" he grunted and thrust deep and ejaculated his thick white cream deep inside Amber. She came around his cock and Brigitte grew more frantic and fucked his ass with her tongue. He shot rope after rope of cum grunting with each release. He could come inside this woman forever.\n\nSpent he pulled out and Brigitte dropped her head. He lifted a leg and moved away from the girls. Amber scooted over to the headboard and lifted her legs up, pushing her shoulders to the bed. Brigitte knelt in front of her and Amber dove her face into her pussy.\n\nBrigitte did the same and lapped at Amber's cum drenched pussy. Ethan watched and stroked his cock. These women are amazing.\n\nBrigitte came on Amber's face and then flopped down beside Ethan with her head near his lap. She spied his cock and grabbed it and pulled it into her mouth. She sucked it hard and swallowed what little cum she could extract.\n\n\"Fuck I love your cum. Maybe you can send me some? A care package?\"",
        "Ethan looked down at her and raised an eyebrow.\n\n\"Kidding. I only like it fresh from the source. Hot and sweet.\"\n\nAmber was still lying up against the headboard.\n\n\"Amber what are you doing?\" he asked.\n\n\"Um, nothing.\" Amber slid down and crawled over beside Brigitte. Her mouth went to his nuts and she started licking him gently. Brigitte kept herself busy on his head and shaft.\n\nSoon they had Ethan on all fours. Amber and Brigitte ate his ass together and stroked his cock between his legs. Soon it was just Brigitte. She tongued his ass hard, working her tongue inside. Soon she had a finger in his ass, and he moaned in pleasure. She added a second finger and then squirted lube inside him. He was lost to the pleasure. She rubbed his prostate and waves of pleasure surged through him.\n\nEthan wondered where Amber was when he suddenly felt something hard against his asshole. He looked back and saw Amber wearing her strap-on. She pushed it inside his ass, and he moaned in pain and pleasure. She's fucking my ass, he thought in horror.\n\nBrigitte put her head between his knees and sucked his cock into her mouth. Amber stroked his lower back and thrust deeper. To Ethan it felt like ten feet of strap-on was inside him.\n\n\"That's it, baby. Take it. You want it. I'll be gentle.\"\n\nEthan didn't fight it. A part of him wanted it. No way this is gay having a threesome with two women. Just go with it. Fuck it feels good.\n\nSoon Amber was thrusting gently into his ass. He was surprised by how good it felt. It was a unique feeling. His ears started to ring. \"Fuck,\" he grunted.\n\nBrigitte stopped sucking him. \"Are you going to cum, baby?\"\n\n\"I think so.\"\n\n\"Wait! I need you to fuck me while she does that!\"\n\nBrigitte scrambled out from under him and then lay on her back and spread her legs. Amber pulled out and pushed him toward her. He positioned himself between her legs and thrust himself inside her pussy. Brigitte cried out and wrapped her legs around him, pulling him in tight.\n\nHe felt Amber settle on top of him and then the strap-on was inserted back inside his ass. It took a while, but he soon found a way to thrust into Brigitte and then back against the dildo. He was overwhelmed with pleasure. Brigitte was crying out in joy.\n\nAmber fumbled a hand between them and found his cock and gripped the base. She stroked him as he fucked Brigitte. The added sensation was too much and he cried out with a powerful orgasm. His orgasm hit before he came. His cock spasmed once and twice and then erupted with his cum. He ejaculated deep inside Brigitte. He was crying in pleasure. The dildo added to everything. It was one of the most powerful orgasms of his life.\n\nWhen it was over he could no longer support himself. He lost all strength and collapsed on Brigitte. Her breasts pressed hard between them. Amber pulled out.\n\n\"Oh shit,\" she said.\n\n\"Wah?\" murmured Ethan against Brigitte's neck. She still had her legs wrapped around him and she was still coming down from her own orgasm.\n\n\"Um, well we had a little mess back here. Don't move. I'll clean it up.\"\n\n\"Huh?\"\n\n\"There's shit everywhere. Men. Jesus.\"\n\n\"Oh, fuck. How bad is it?\" Ethan felt so embarrassed.\n\nAmber kissed the back of his neck. \"Don't worry baby. It's nothing.\"\n\nEthan closed his eyes. He woke with the feeling of wet wipes wiping his ass. It felt good and so he closed his eyes again.\n\nWhen he woke, Brigitte and Amber were nestled up against him. They were whispering to one another, not aware he was awake.\n\n\"I'm gonna miss him, Breeg.\"\n\n\"I know. This was too much. It's gonna hurt.\"\n\n\"Our fault. We should have only done the one night.\"\n\n\"It was so wonderful. That was the best. I never thought a man could pleasure me like that. Did you like watching me get fucked?\" asked Brigitte.\n\n\"You know I did. It was even better than I hoped. I love you, Breeg.\"\n\n\"Of course you do. Soon we'll have a family. Just you and me. One of us is bound to have it happen.\"\n\n\"I hope it's both of us.\"\n\n\"Me, too.\"\n\n\"Go to sleep. I want to blow him one more time. Fuck, his cum is delicious.\"\n\nBrigitte snorted. \"I know, right? How's that possible?\"\n\n\"I dunno. Kelly is going to eat him up.\"\n\n\"Lucky girl.\"\n\n\"Lucky Ethan.\"\n\n\"Maybe we can see him again?\"\n\n\"Not for a year, baby,\" whispered Amber. \"If this works. We'll talk about it then, okay?\"\n\n\"Okay, night Breeg. Love you.\"\n\n\"Night, love.\"\n\nEthan lay awake for a bit, trying to understand the conversation. He found himself thinking only about the woman Kelly and wondering what she would be like. He hoped he would like her. It excited him he would have a lover in Virginia Beach. It made leaving the girls so much more bearable. He closed his eyes and drifted off to sleep, savouring the delicious smell of pussy that filled the room.\n\n \n"
    ],
    "authorname": "Estcher",
    "tags": [
        "erotic coupling",
        "lesbian",
        "married",
        "threesome",
        "ffm",
        "rimming",
        "oral",
        "fetish",
        "aroused"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/late-night-coffee-ch-05"
}