{
    "title": "Poison Ivy Ch. 02",
    "pages": [
        "ETA: This is the revised edition of Chapter 2. If you are new to the story or re-reading it, just be aware that some minor things have changed and may not line up with the next chapters. I'm slowly working through all of them and will have revised all chapters before posting the final. Thanks for your patience!\n\nHi again! Thanks to everyone for the feedback, I wasn't entirely confident about this story so I'm glad some of you like it! \n\nAnother disclaimer, lots of cursing in this story and lots of military lingo. If cursing offends you, please don't read it. \n\nFor those who haven't read the first chapter yet, this is an Omegaverse story. If you're unfamiliar, I suggest you google it first so you're not entirely lost with the Alpha/Beta/Omega dynamics. \n\nOkay! Thanks for sticking with me! Hope you enjoy! \n\n...........................\n\nThe room sung out its emptiness to her before she even opened her eyes. Ivy squinted, scanning the monstrous place for signs of Sir Alpha, just to be safe. Finding herself truly alone, a thing she had almost never experienced in her five years as a medic except for the occasional solo cold-water shower, she peeled back the fresh dressing covering her bullet wound. It had been stitched up by a skilled hand and no longer ached quite as much, and she found herself feeling grateful for that otherwise terrible Beta who had attacked her with that fucking needle. And maybe she felt a little guilty for punching him in the jaw. A little. Maybe.\n\nOfficer Muscles apparently had better things to do with his time than to babysit her all day. Good. She didn't think she was quite ready to face him after what had happened the night before. She looked over at the luxurious, oversized leather recliner at the other side of the room, blushing furiously at the memory of what he'd done to her on that chair.\n\nHad he drugged her? It made sense. Why else would she have been so... responsive? She had never felt anything like that before, the insane sensations from having his fingers buried in her core that went all the way through to her bones. And that... stuff... that had come out of her, in response to his goddamned growling. The slick. What an appropriately disgusting word.\n\nNope. No fucking thanks. She was going home. She had, no doubt, already been replaced by one of her medics, which was just fine with her. She hadn't wanted the shitty supervisorposition to begin with. She would sneak her way back onto Chid Forward Operating Base if she had to, but she was going back to Rico Battalion if it fucking killed her. No way was she sticking around with the overgrown, arrogant Lieutenant General (Leon? Liam?), who had, by the way, essentially sexually assaulted her because he had mistaken her for some newly discovered, lost-in-the-wild little Omega.\n\nFuck. That.\n\nShe swung her legs over the side of a bed so huge that her toes dangled several inches off the ground. She was a modest girl, but she took pride in keeping her body strong in order to keep up with the Betas in her battalion. However, there was only so much lifting weights and daily runs could do for a girl whose father had once called an angry kitten. The implication was clear. She could work as hard as she wanted, eat as much spinach and eggs as she could stomach, and she'd still be only a miniature version of the strong Beta soldier who had raised her. For whatever reason, once she had reached a certain point, she had just... stopped growing. The toned muscles in her body could do little to hide her nearly childlike bone structure. It was infuriating. So Ivy had found other ways to kick ass and take names.\n\nNamely, by kicking ass and taking names. It was a rare Beta who knew how to react to a tiny girl who could throw a punch, and she used hesitation and confusion as advantages. Her handicap, as it were.\n\nAnd holy shit. She was naked again. Shocker. \n\nThat son of a bitch.\n\nShe hopped to the polished marble floor and strode over to the \"walk-in\" (if walking-in meant doing laps in a space bigger than her apartment). The light switch on the wall illuminated a small army's worth of designer dresses, designer jeans, designer blouses, designer shoes... Okay pretty much everything in this room was designer. She looked up. Including the crystal chandelier, apparently. Sir Alpha claimed this entire room was meant for her. Or, more accurately, the Omega she was being mistaken for. She swallowed, overwhelmed. Where did one even begin looking for something to put on in this department store of a closet? If she wore a single outfit every day, it'd still take her five, maybe six years to make it through everything in here. Fuck it, he could take his closet and shove it up his ass. Or maybe sell a tiny fraction of it, and use the proceeds to save a bunch of disposable lives.\n\nRifling through a relatively safe-seeming section of muted colors, she wasn't at all surprised to find that every single item of clothing was either skin tight or shamelessly revealing. If they thought she was Omega, they would have wanted her to put herself on display for the benefit of the Alphas, one of whom she might one day be given to. She shuddered.\n\nShe felt sorry for the Omegas, the rare group of beautiful women who were put up in what were essentially palaces, given every comfort, and eventually parceled out as gifts to high-ranking Alphas like some gold retirement plaque. Their futures were so limited. Everything was decided for the supposed submissive dynamic; Their daily activities, hair color and wardrobe selections, even the food they put in their own bodies. Eventually, even their mates were chosen for them. It was not a life she envied, and she didn't for one second buy into all that submissive shit. Dynamics usually presented themselves in adolescent years. At least some of those girls had to have been broken in like wild horses. Ivy thought of herself at that age and what it would have been like to have been plucked from her home and sent to live like isolated royalty.\n\nIt would not have gone well. Not that her father would ever have let it happen.\n\nIn the end, she decided on a pair of black gym leggings and an army green jacket with running shoes and a black beanie. All well made. All designer brands. The jacket was perfectly tailored and would have cost her three month's pay.\n\nNone of it really even mattered. Once they found out what Muscles had done, coming up with this crazy theory that she'd been suppressing heat cycles or whatever the fuck he'd said, and then procuring what had to be the nicest room in this place and the priciest wardrobe to boot, they'd punish him and send her back to her Battalion. This stuff was crap, anyways. Crap compared to her little family back in Chid. Her mother was long dead, her father more recently, but still just as dead. Serg, Kentucky, and the rest of her boys... They were all she had left.\n\nAnd Officer Dickwad had called her family fucking disposable. Fine. If they were disposable, they would be disposable together. She wasn't going to wait around for the morons running this operation to figure out how badly they'd fucked up. She was going back. Now.\n\nShe walked over to the door she had watched the medic come through. Kind of ridiculous that one room had so many doors, and only one of them lead to the outside, but whatever. Holding her breath, she clutched the doorknob and twisted.\n\nIt turned.\n\nShe let out a low whistle and cracked the door open a few inches. A shamelessly luxurious hallway, complete with a thick, royal blue carpet and gold inlets filled with pretty trinkets, stretched for several yards on each side. It was lined with doors similar to hers, polished, blackwood masterpieces adorned with what she suspected were pure gold knockers.\n\nHonestly, were Alphas that lazy that they couldn't use their fucking hands to knock on a damn door?\n\nShe thought about the meager supplies that were delivered every week to Chid FOB and clenched her hands into fists. There was never enough medical gear in the boxes that were unceremoniously dropped outside her tent by stone-faced soldiers from the main base. She and her boys worked their asses off coming up with creative ways to stretch what they had and made (or creatively acquired) their own supplies in order to make sure there was at least the minimum amount of what was needed to patch up the 1,500 men in Rico Battalion.\n\nA box of tampons was dropped off to her every month when they eventually noticed there was a female on the roster for Rico battalion. She worked out so often that she had never gotten a period, so they used sliced-up sections of the absorbent sticks to shove into gunshot wounds in the field when they were low on the grey powder they used to staunch heavy bleeding. They collected and washed old fatigues to cut into strips and paired them with used pens to function as tourniquets. Shit, they even found herbs and roots from the forest outside base gates to use as sedatives, pain killers and fever reducers. They made do.\n\nBut staring around at the hallway, the freakin hallway, where even one of the little golden trinkets in the alcoves lining the walls every two yards or so could buy enough supplies to save hundreds of the men who ended up in her medical tent after sustaining horrible injuries in combat... It was sickening.\n\nShaking her head, she re-focused on the task at hand. Like a tactical ninja, she crept out the door and silently melted into the walls (the immaculate white marble walls, where, to be fair, anyone who wasn't legally blind would immediately be able to spot her from the opposite end) until she reached a larger, especially opulent door that she figured must lead to the outside. Hmm, no knocker. She inched the door open a sliver and peered out. A black tar roadway, damp from a dreary, overcast afternoon, separated the building she was in from a neat row of dark green canvas tents across the way. A formation of Beta soldiers marched by singing cadence as green netted army vehicles rode past. A group of guys in PT gear jogged past the door, making her startle and jump back a little, biting back a surprised yelp.\n\nThe satellite base in Chid forest, where she'd been stationed, lacked the rigidity and organization of this much larger, much more established foothold. They never sang cadence in Chid, or had to wear the standard-issue Army physical training gear when they worked out. Without the presence of Alpha Officers constantly over their heads, Chid had relaxed the tight restrictions on Army life. That wasn't to say that the work they did, or the way they did it, was any less than the work done on this base. Perhaps even the contrary. Without so much of the focus being centered around merely looking like badass rockstars, the soldiers stationed in Chid actually were badass rockstars. She wasn't sure how often the units on main base ever left main base to do anything except for supply runs, but she knew it couldn't be anywhere near as often as Rico Battalion sent teams out to patrol Chid forest.\n\nIvy knew that the reasons they were in still in Torrin, after a nearly 35 year-long campaign, had to be largely financial and entirely political. She got behind it for one reason, and one reason only. As backwards thinking as Lostra could be about women (of all dynamics, really, since even Alpha females were barred from most military positions), they at least didn't enslave, torture, rape, and brutally murder rebellious girls and female prisoners of war. But Torrins did.\n\nOppressed to a staggering degree, as she understood it, Torrin's female population was forbidden to go to school, procure employment, travel outside the country, or... really, anything that didn't involve serving a man and his needs. Her father used to say that anytime a population is put under such strict, impossible restrictions, revolt and rebellion will inevitably follow. Maybe small and secret, at first. But as Lostran bases became more established throughout the entire country, more and more Torrins began showing up at the gates, sometimes half-dead, asking for help and safe passage to a less restrictive country. When Torrin's political elite began to catch on, they set up special Factories solely dedicated to the rehabilitation of renegade citizens.\n\nIt still made Ivy sick to her stomach, thinking about the images she'd seen, taken by undercover operatives, of the inside of some of those Factories. Tortured and starved, raped and beaten, the creatures that had been immortalized in those infamous black-and-white prints resembled little more than spectral wraiths.\n\nSo whatever the real reasons Lostrans found themselves in Torrin, the handful of fleeing women and girls (and occasionally, the men who hoped for a better future for their families) who were picked up every month by patrols helped, in some small measure, to justify their military presence. And Chid, her dinky little outpost in the middle of nowhere, picked up more of these runaways than any other base in Torrin, including the vastly overmanned, vastly overfunded main base. Speaking of...\n\nA large group of leisure Alpha Officers sat watching the hustle and bustle of the base around them from a covered patio nearby. Being served lunch. On china plates.\n\nGoddamnit...\n\nShe figured she must be looking at the main road and peeked around at some of the drab buildings nearby. Three buildings down, four trucks were being loaded up with stacks of supplies and laundered linens. What day was it? Deliveries always came from main base on Tuesdays. The disaster that was the Officer's arrival on Chid, and her subsequent kidnapping, had happened on Sunday. Had she really lost more than a whole day? How much of that sedative did they give her?\n\nIf she could sneak her way into the building and find out which truck was going to Chid, she could hide among the supplies and get back to base that way. With spotty running water and little electricity, washing uniforms could be a struggle. Ivy preferred to take hers to a little stream tucked behind the medic tent with some soap her dad sent her every week... Well, had sent her, before he died. Most of the base did the same, washing their clothes by hand in the few streams and one lake (really more of a puddle) around base. Some soldiers, however, preferred to send their uniforms with the supply truck every week to be washed, which they'd receive back with the next shipment.\n\nThe trick would be getting a set to fit. Maybe she would be lucky enough to find a pair of trauma scissors and some sutures in the box of medical supplies, although she doubted it. She'd figure something out.\n\nShe quickly opened the door and slipped out, closing it silently behind her and moving to the side of the building. She kept her eye on the group of Alphas, seated comfortably at what looked like an expensive hotel patio, as she went. She knew it wasn't unheard of for an Omega to be at the main base, to visit a mate or spend her first few weeks with a fresh pair-bond, but she wasn't Omega and it would look damn strange to anybody who noticed to see a Beta female slinking around in Civilian clothes, and the last thing she wanted to do was bring attention to herself when he could be nearby.\n\nShe shouldn't have worn the jacket. It was late autumn, just on the cusp of winter, but it felt more like the middle of summer. She wiped the sweat from her brow and moved in the shadows to the next building, and then the next. Eventually she was just around the corner from the supply hangar, the trucks poised just past the entrance, close enough to listen to any idle chatter that might give her a clue about which truck was headed to Chid. She chanced a quick glance. Two soldiers carrying linens walked toward the vehicles. She ducked back down again, crouched in a hunched position, listening.\n\n\"... shittiest base in Torrin.\"\n\n\"Yeah dude, but they have that hot little shorty medic there. Fuck, I'd like to spend a couple of hours alone with her.\"\n\n\"I bet you anything she's a crazy bitch though. Hot chicks are always fucking crazy.\"\n\nIvy bristled. It took all her self-control not to stomp around from her hiding spot and show these two asshats how much of a crazy bitch she was and --\n\n\"What the fuck are you doing?\"\n\nIvy yelped and spun around to see an unusually tall Beta peering down at her, arms crossed. He reminded her a little of Turbo. Only this dude was still skinny as a string bean. Also, their faces weren't anything alike. And they had different hair. And different skin tones.\n\nOkay so they were both just really tall.\n\n\"Uh... I'm a little lost. I'm looking for medical? I'm a new medic, just reporting.\"\n\nHe narrowed his eyes. \"Where's your uniform? New soldiers showed up four days ago. You mean to tell me you've been fucking around for four days?\"\n\n\"Uh, no Corporal. They sent me separately. You know...\" she gestured to her curves. What little there was of them. \"Being female and all. They wanted to keep me separate.\" She flashed him her flirtiest smile.\n\n\"Why are you making that face? Are you sick?\"\n\nFuck, she needed to practice her flirting skills.\n\n\"No, Corporal. Sorry. I'm just nervous. So, ah... The medical building?\"\n\n\"The uniform?\" he retorted.\n\n\"Right. That. My gear was lost in transit. I only had my workout clothes with me. They said they had spare fatigues waiting for me at medical.\"\n\nHe glared at her suspiciously.\n\nPlease believe me, please believe me, please believe me. She knew she was a shitty liar, but... Come on. The universe really owed it to her to cut her some slack.\n\n\"Medical tent's right down the way, directly across from the Alpha barracks. You know... The giant mansion.\" Even this hardass had a little bitterness in his tone.\n\n\"Right. Thank you.\"\n\nThe Beta turned on his heel and stormed off, and she breathed a sigh of relief. She turned her attention back to the trucks. The same two dickwads were loading up a handful of cardboard boxes. There was a little white container on the top of crazy bitch guy's load, and she looked closer. Tampons.\n\nBingo!\n\nShe was the only female stationed on any of the satellite bases. Those tampons were headed to Chid, and she was going with them. She waited until the Betas had turned around for more supplies and skittered over to the tampon-mobile. Heaving herself up over the lip of the truck, she quickly scanned the dark interior for any easy hiding spots. There wasn't much in the way of spare space, but she was little and could squeeze herself into some pretty tiny places. She had learned of this particular skill set in boot camp during an obstacle course, when she had mistakenly crawled under a net that was low to the ground instead of balancing on top of it, like she was apparently supposed to, and then hoisted herself up through the rafters of the inclined rope climb immediately following her crawl, wriggling out from the tight space on the top just ahead of her peers.\n\nHer drill sergeant had not been amused.\n\nShe picked a spot between two boxes that were relatively hidden from view by the laundry piles and settled down. Tweedledee and Tweedledum walked back to throw a few more boxes in, then slammed up the trunk bed and climbed around to the front seats.\n\nSo far so good. \n\nThe engine roared to life, and suddenly they were driving away, off main base and onto the road leading back to Chid, back to her little makeshift medic family.\n\nShe breathed a sigh of relief and rested her head against the cardboard box at her back. Her eyes closed, the rumble of the engine lulling her into a relaxed stupor, and she soon found herself fighting to keep her eyes open.",
        "The truck suddenly hit a ditch, jostling her awake with a startled snort, and she wiped a bit of drool off her chin, happy no one had seen her passed out and snoring with her mouth open. She could hear the two up front talking, their words a bit obscured by the sounds of the engine.\n\n\"... enough of this shit. Alphas don't have a legitimate war to fight so they make one up to keep up appearances. You know how many grunts lost their lives in that shit? Twenty-eight. Twenty-eight fucking Betas died, and their bodies were left to rot in Chid forest, all so some Alpha prick could claim it was a victory over the Torrins trying to encroach on one of our bases. Fuck them.\"\n\nIvy straightened, now completely awake and alert. She tilted her head closer to the cab, focused on hearing more.\n\n\"Wait, that really happened?\"\n\n\"Yeah it happened, but it didn't fucking have to. Are you not fucking listening? Torrin ambassadors came three weeks ago to negotiate with Nelson. They came the three weeks before that, and the three before that. Nelson's got some kind of a fucked-up deal going on with them. I heard about the raid on Chid while I was restocking his fucking liquor cabinet. Three days before it happened.\"\n\nIvy felt sick. Her mind raced. What they were saying was impossible. Right? She wasn't General Nelson's biggest fan, but he wouldn't intentionally put his own people on the chopping block. Twenty-eight soldiers. Twenty-seven... And Markus. He wasn't that evil.\n\nWas he?\n\nDisposable Betas. He called them disposable. Like plastic forks. \n\nShe was going to throw up. She started shivering, even though it was way too fucking hot in the back of this goddamned truck. She needed to get the hell back to Rico Battalion, find Sergeant Prescott and Kentucky, and figure this shit out.\n\nIvy started rifling around in the boxes, careful not to draw attention to herself. She grabbed a pair of fatigues and pulled them on over her leggings. She decided to wait until they were closer to Chid to pull on the uniform top, wearing only a white tank top and her pants. Oh, and a very lacy, very skimpy pushup bra. Complements of Lt. General fuckface. You may call me Hunter, he had said.\n\nAsshole. By telling her to address him by his first name, instead of his military title, he had effectively stripped her of her rank and status. Like she was a fucking civilian. She stiffened as a terrible thought occurred to her. Had he been in on it? Was that why he'd come to Chid in the first place?\n\nNo. The dude had some fucked up ideas in his head, but she'd been there. She'd seen him shooting down Torrins. He might have been angry that she was out there, but he'd grabbed Markus. He'd defended them while she was treating the injured.\n\nA slicing pain shot through her abdomen, and she doubled over. Fuck. When was the last time she'd eaten? Or had anything to drink? Was it possible to feel nauseated and starving simultaneously? She gave her head a good shake, slapped her cheeks a few times, and told herself to get on with it. She needed to find something that would make this uniform just passably believable until she could get one of her own, much smaller ones on. Had they cleaned out her locker already? Taken down the sheet that isolated her from the rest of the males in her barracks? Dismantled the hammock she had built for herself so she wouldn't take up a whole three-tiered bunk?\n\nThere were no scissors in the medical box. Shocker. Nor sutures. Double shocker. She looked around. Boots. She had forgotten all about the fucking boots. She looked down at herself and shrugged. If anyone gave her uniform any kind of good look-over, she was fucked anyway. Running shoes weren't going to be her downfall. She rolled up the extra fabric on the bottom of her pants and tucked her hair into the collar of her shirt. She needed a belt, but she couldn't find anything she could use. She gave her make-shit uniform a quick glance.\n\nGood enough for government work.\n\nIt was another two long hours before they reached Chid FOB. By that time, she was sweating bullets, alternating between hot and freezing. Her muscles ached from the ride. The hole in her shoulder burned. She needed some fresh air.\n\nThe truck finally, finally began to slow. Ivy grabbed the uniform top and pulled it over her head, groaning when she looked down at herself. She looked exactly how she would expect anyone else to look if they put on clothes that were five or six sizes too big. But they were here, and there was little she could do about it now.\n\nAs soon as the truck stopped, she crawled to the end and squirmed out of the narrow opening between the truck bed and the lower plank. Dropping to her feet, she glanced around, stood up, took two steps, and promptly fell flat on her face.\n\nFuck.\n\n\"Poison?\" she heard someone call. Double fuck. \n\n\"Poison, what the fuck?\"\n\nShe looked up, brushing the pine needles off her face, to see Kentucky jogging over to her. Oh, thank God. Of all the disastrous possibilities, Kentucky was probably the only person on base that would help her unconditionally. He was her best friend in this Battalion, and no matter what happened on the field or in the hell that was the med tent after a raid, they always had each other's backs.\n\n\"Hey Kentucky,\" she said quietly as she shooed off his attempt to help her up and got to her feet. \"How's life?\"\n\n\"Poison, what the hell are you doing here?\" Kentucky hissed under his breath. \"You're not supposed to be here!\"\n\n\"Sure I am,\" she said confidently, drawing herself up to her full, albeit unimpressive, height.\n\n\"Seriously, Poison, what the fuck? We all saw you get dragged out of here by that Alpha, and rumor is...\" he dropped his voice to a whisper, \"that you're a fucking Omega!\"\n\nShe laughed. \"That's ridiculous. You know I'm Beta. It was all a misunderstanding. I'm just short, and that guy is just a prick.\" Ivy gave her friend a calculating look. \"What's changed, Kentucky? Did you change your hair?\" She gasped. \"Did you get the job?!\"\n\n\"Yeah,\" he said, looking a little too elated in Ivy's humble opinion. \"I got the job.\"\n\n\"Congrats, asshole,\" she said, punching his arm, and she meant it. If it had to go to someone, Kentucky was the obvious choice. He was intelligent, compassionate, and fair. The guys loved him, and especially the younger ones looked up to him like a big brother. He'd make a great boss.\n\n\"Thanks, Poison. So... what's going on with your uniform?\"\n\nShe looked down at herself. \"Uh... They, ah, they wrecked mine when they brought me back to main base. These were the smallest they could find on such short notice. Let me just grab my gear and I'll report for duty.\" She started to push by him when he grabbed her arm and pulled her closer to his side.\n\n\"I don't know what the hell you're doing, Ivy,\" he whispered into her ear, \"but don't fucking lie to me, okay? We both know that you were not put on that truck purposefully. You're a crazy good medic, and you've saved my ass more than once, so I'm giving you a pass for now. But as soon as you get back to med tent, you will tell me what your plan is. Because if you think for one second that Alpha motherfucker isn't going to figure out where you are in a matter of hours and come raising hell to drag you back a second time,\" he said darkly, \"you've got another think coming. You got me?\"\n\nIvy nodded and swallowed hard. He was right. How long could she possibly have expected to stay here before Officer Fuckface (or Logan, or Hunter, or whatever) came looking for her? In her haste to escape him and get back home, she obviously hadn't thought that part over very well. Until the Alpha figured out she wasn't what he thought she was, he was going to keep coming after her.\n\nKentucky released her arm and walked off. Careful of her too-long pants, Ivy shuffled across the dirt path that passed for their main road, clutching the bunched-up fabric at her waist to keep it there instead of around her ankles. She reached med barracks and rushed in, immediately kicking off her pants and heading for her locker.\n\nCareful not to wake up the sleeping night shift Betas, she opened her locker and breathed a sigh of relief to find her pint-sized uniforms right where she left them. She grabbed a pair and pulled them on, sighing with pleasure at the familiar feel of the scratchy material against her skin. Trying to rub away the oncoming tension headache she was getting, she grabbed the bottle of her iron supplements, made a mental note to get more, and popped one in her mouth, swallowing it dry as she hightailed it back to med tent.\n\nWhen she walked in, she only saw Kentucky, Q and Bear. Q and Bear looked up from their work sorting through that damn pile of paperwork and jumped to their feet. \"Poison!\" they said in unison.\n\n\"Hey guys,\" she nodded.\n\n\"Kentucky said you were back, I guess I just thought he was fucking around with us,\" Q said, his damn baby blues glistening.\n\n\"Fuck, Q, you need to learn how to hold it together. And didn't I tell you to get a fucking hair cut? I'm back, but maybe only for a few days. Kentucky?\" she said, looking at him pointedly. He nodded and got to his feet. \"Keep working,\" he barked behind him as he walked toward her. \"We'll be back in a sec.\"\n\nHe led her out the screen door with a hand pressed to her lower back and over to a bunch of picnic tables across the way. It was later in the day and everyone had cleared out after dinner, so they had the little area to themselves.\n\n\"Spill it,\" he said after they sat down, straddling the bench and facing each other, like schoolyard children about to share a secret. She took a deep breath. \"Okay, yes, the fuckface Alpha does still think I'm Omega. But I'm not!\" she finished quickly, before he could say whatever it was he was going to say when he opened his mouth. \"I'm not, okay? So just settle down. I admit I wasn't thinking when I hitched a ride back here. But listen to me. On the way here, I heard the drivers from main base talking. Kentucky... This whole thing is one big fucking lie.\"\n\nHe was looking at her like she was insane. Okay, fair enough. But she knew what she'd heard.\n\n\"Nelson has been feeding the Torrins information. They've been coordinating raids on Lostran bases together. The guy in the truck said he heard Nelson talking about the ambush three days before it happened. I don't understand why, and I don't know what the old fuck is getting out of it, but what does he care if a few thousand soldiers die? I don't have all the answers. But I do know I just held Markus's hand while he died for fucking nothing.\"\n\nHe blinked. \"You realize you sound crazy, right?\" he asked her, shaking his head. \"Did he give you something? Some drugs or something? You were pretty out of it when you guys left. Maybe you're hallucinating?\"\n\nShe slammed the palm of her hand down on the table, making him jump. \"I'm not hallucinating, jackass. I'm serious. I need to find Prescott and tell him. Maybe the enlisted can go above General Nelson's head, you know? Maybe the Chief of Staff doesn't know!\"\n\nThe concerned look on his face just pissed her off. \"Ivy...\" he started.\n\nShe held up her hand. \"Stop. Just stop.\" She looked at him squarely. \"I know it sounds crazy, okay? I wouldn't have believed it had I not heard it myself. But it's true. You should see the room they put me up in, Kentucky. It's in a fucking mansion. Like, a legit mansion, with gold and silver and marble in it. They're living like kings! He thinks of enlisted soldiers as consumables. Like they can just keep replacing us with new, fresh faces every so often and it'll be fine. How many lives have been lost in this campaign, huh? A few hundred thousand, not counting the Torrin lives lost?\"\n\nHe looked down at the table and ran his fingers through his dark hair. All of a sudden, she had a horrible feeling. \"Kentucky?\" she said softly. \"What is it?\"\n\nHe looked up at her, and she knew what was coming before he even said it.\n\nOnly Q and Bear. No Toad.\n\n\"No,\" she whispered. \"No, no I sent you with him to make sure he was okay!\" Tears began to gather in the corners of her eyes, and she tried to blink them away as she shook her head. He looked down again and something twisted in her gut. \"Say it,\" she ground out between clenched teeth. \"I need to hear you say it, Brad.\"\n\nHe looked up at her and she watched in horror as a tear drifted down his cheek. \"Toad didn't make it, Ivy. He's dead.\"\n\nHer heart dropped all the way to her toes. She groaned and put her face in her hands. \"Toad,\" she whispered.\n\n\"I'm sorry, Ivy. You told me to watch out for him. I just... It all happened so fast. I heard gunfire, I turned around, and he was on the ground.\"\n\nShe looked up at him through her fingers. He was pale as a sheet. The fingers raking through his dark hair were shaking. She reached out to grab his hand and squeezed it. \"Not your fault. It's not your fault, Brad.\"\n\nHe looked down. \"If what you're saying is true, Poison,\" he said, reverting back to her nickname, \"then he died for nothing. I can't accept that.\"\n\nNo. Not for nothing.\n\n\"How many fugitives did we pick up in Chid this month?\" she asked him, chucking a finger under his chin to bring his eyes to hers. \"How many, Brad?\"\n\nHe swallowed. \"Twelve.\"\n\nShe nodded. \"Whatever our reasons for being here, twelve people now have a chance at life because of people like Toad and Markus. Don't cheapen their sacrifice.\"\n\nJust then, the high-pitched whine of the alarm sounded, startling them both. Wide-eyed, they sat facing each other for a tense moment. Ivy moved first.\n\nBefore she got more than two steps away from the picnic table, Kentucky shot to his feet and grabbed her wrist, yanking her back. \"STOP, Poison! You fucking know you can't go out there!\"\n\nShe whirled on him, yanking at her wrist until his hold broke. \"Fuck you, Brad,\" she hissed, bloodshot eyes burning with anger. Not at him, not really. But if he thought he was going to prevent her from doing exactly what she had signed up to do five years ago, to protect and save the entirely bull-headed and frustrating dickheads of Rico Battalion, she was damned well going to tell him exactly where he could shove it.\n\nAnd it sure as shit wasn't up his nose.\n\n\"After everything I just told you, after what we've been through, after Toad, you're going to stop me? And why, because some fuckhead Officer got a hard-on for a girl he just happened to stumble upon and didn't want to take no for an answer? You're going to send me back, to him?\" She blinked, surprised as anyone when a few frustrated tears ran down her flushed face. \"Fine. Send me back,\" she growled, shoving him back a few feet with two open palms to his chest. \"Call the fucker up, Kentucky. Rat me out. Maybe he'll rape me this time instead of just forcing his fingers into me. Maybe he'll send me back here after he gets his fill. Whatever you're going to do, you'll do it after the fucking mission.\"\n\nKentucky just stared at her, his mouth gaping, some undefinable emotion twisting his features into something almost ugly.\n\n\"He... He forced you?\" He asked quietly when she stubbornly refused to meet his eyes. \"Ivy, I'm...\"\n\n\"Forget it, Brad.\" The base was a buzzing hive of activity, soldiers rushing to get into gear and report to their assigned units. She watched it all through a blurry filter, knowing this really might be the last time she'd head out those gates. After all, she was a disposable Beta, wasn't she?\n\nShe sighed, her shoulders letting go of some of the tension she'd been wearing like a rucksack. \"You're already down one medic. Let me go now, and I'll do whatever you decide is best after the mission. You know you could use the extra body. Besides,\" she shrugged, the corner of her mouth pulling up in a smirk. \"I physically assaulted an Officer. I ran away from a Lt. General. I snuck off base in a supply truck, stole a uniform, and ignored direct orders to stand down. Can't be in much more trouble than I already am.\"\n\nArms crossed, Kentucky nodded and took a step back, giving her room to maneuver around him. \"After the mission. You know he's going to come for you. And when he does, you're going back to the main base with him, and you're gonna stay there this time. Deal?\"\n\nShe flinched, as if his words had flown out of his mouth and actually slapped across her face. It stung. The thought of Kentucky, Kentucky of all people, her best friend in this godsforsaken place, wanting her to stay away made her heart sink to her stomach. \"Deal,\" she said, forcing the word out of a throat tight with emotion.\n\nAnd maybe a touch of nausea.\n\nThey took off together to the med tent to gather up their gear. Once night shift was awake and geared up, they separated. Day shift absorbed Kentucky, Turbo and Icepick. Ivy, since she technically wasn't part of the club anymore, went with Turbo, the youngest of the medics, and Kentucky went with Q. She looked over at Kentucky as they were getting ready, watching him check the locks on his rifle and do a quick survey of the supplies in his med pack. His words still hovered in the air between them, and he snuck his own, pitying glances her way. Why had it felt so shitty to have him tell her to go away, and never come back?\n\nThey separated out into their respective units and left base. Ivy and Turbo's unit headed toward the East side of the perimeter. Another attack coordinated with the enemy and General Nelson, Ivy guessed. She experienced d\u00e9j\u00e0 vu as they walked through the towering pines, rifles drawn, their footsteps padded by the floor of pine needles below their feet.\n\nThey hadn't gotten very far when she heard a soft thump, and then a short, muffled cry, like someone had fallen to the ground behind them. She spun around, narrowed eyes sweeping the area. Nothing. Same old gloomy, weirdly beautiful forest.\n\nWhen they reached the perimeter, the unit split up into two teams of six. Usually positioned in the middle of any formation, Ivy grabbed Turbo before they parted ways, pulling him in for a hug. \"Be safe out there, kiddo,\" Ivy breathed, arms tight around his waist. She would have ruffled his hair, if she could reach his head. He laughed and pulled back a little. \"I always am. You gonna be ok, Poison?\"\n\nShe nodded, finally letting go and stepped back. \"I always am.\" She smiled, and if it was a little sad, she didn't think Turbo noticed. Patting him twice on the arm, Ivy turned to where the five soldiers she'd been teamed up with turned around a corner, the last guy to disappear around the bend giving her a sharp whistle and waving her forward. \"Better go, Poison,\" Turbo said, shoving her playfully. Grinning in earnest, she flipped him off and started jogging to catch up.\n\nReaching the spot where her team had veered off to the left, Ivy looked around, confused. Where had they gone? She hadn't been that far behind.\n\nA soft crunch, like a twig snapping beneath a boot, sounded to the side. She peered into the dense thicket of evergreens, watching for any movement. There. Several yards away, something low to the ground was moving forward. An animal? A few steps forward, through a ground littered with roots and stones, brought her to the object now rolling to a stop. Frowning, she bent to scoop it up, dropping her med pack from her shoulders as she straightened.\n\nIt was a helmet.\n\nA hand clamped over her mouth, another around her waist. She was yanked backwards into a hard torso, her feet kicking several inches off the ground. Her grip on the rifle slipped and it fell forward and out of reach. Her breath hitched. Officer fuckhead had found her once again.",
        "Her blood ran cold when an unfamiliar voice laughed quietly and rasped, \"What do we have here, boys?\" Out of the dense wood, four extremely large, extremely well-armed Alphas emerged.\n\nTorrin Alphas.\n\nSome innate instinct stilled her frantic movements, her chest heaving with the effort to breathe through the hand still held over her nose and mouth. The four massive men moved closer. The Alpha at her back dragged his nose up her neck, inhaling her scent. A coarse tongue licked at her cheek, the bastard chuckling when she shuddered. \"A sweet little Omega, out here all alone.\"\n\nHer heart raced. Forcing herself to calm, she desperately searched her mind for a way out of this. Think, Ivy, think.\n\nOkay, this is good. They think you're Omega. They'll underestimate you. You're fast. You can probably outrun them. Play into it. Wait for an opportunity. Strike out and run like hell.\n\nShe willed tears into her eyes and whimpered. Wolfish, predatory smiles turned menacing as they closed the trap and stepped closer. The man behind her spoke threateningly into her ear. \"Your friends are too far ahead to hear you, sweetheart,\" the stubble of an unshaved face rasped against her ear as the dickhead holding her threatened her. \"But if you scream, I'll slice your throat anyway. Got it?\" She nodded quickly, and he released her mouth and set her on her feet, his grip sliding down to roughly fondle her breasts through her gear. Fucking dumbass. She hoped he was enjoying his handful of Kevlar.\n\nThe largest Alpha stepped closer, waaay too close, and flipped the clasp on her chinstrap, knocking the helmet off her head. Grimy fingers bit into her jaw as he lifted her gaze up, his other hand burying into her braided hair, making her eyes water as he pulled back to arch her neck. She curled her hands into fists. Fuck this guy. \n\nWait, no. The opposite of that. \n\nSneering cruelly, he leaned down and covered her mouth with his, forcing his tongue past her lips and halfway down her throat. She fought back bile. Shrinking further against the douchebag still trying to fondle bits of her anatomy she seriously doubted he'd know what to do with even if she'd been topless, she let out another pathetic little whimper, obviously exciting the dude thrusting grossly into her mouth. He bit down hard on her lip and broke off the assault on her mouth, dragging his tongue up her cheek before he stepped back. Fucking disgusting.\n\n\"Please don't hurt me,\" she begged, watching him pull away, his fingers still tangled roughly in her hair. The dude had an ugly ass scar that ran across his face from his forehead to his chin, and she found herself wondering how he'd gotten it, hoping it'd been one of his victims, since clearly, he had done this before. He laughed, and a second later, the rest of them laughed too.\n\nBehold, the ringleader.\n\n\"Oh, this is going to be too sweet,\" he drawled. \"Let her go, Mason. I don't want to fuck her while you're holding her.\"\n\nShe clenched her teeth. Nobody was going to be doing any fucking today, but they didn't know it yet. She let more tears drip down her cheeks and begged again. \"No, please,\" she cried. \"You can't, I... I'm not even supposed to be out here. Please, just let me go!\" she wailed. Mason released her and shoved her forward, and to her dismay, Ringleader brought his fist up into her gut, hard. She doubled over, groaning in real pain.\n\nThat son of a...\n\nHer braid was grabbed again and twisted out of its messy bun, and she was pulled roughly up and dragged deeper into the thick tangle of woods. She let out a most non-Omega-like \"oomph\" when her side collided with the rough bark of a tree. Gritting her teeth, she cursed the bastard under her breath, but the shock of pain he'd provided made it easier to think.\n\nWait for it... Just wait... \n\nMen are so fucking predictable, she thought, disgusted when the ape started fumbling with his dark Torrin fatigues. Her hand slipped down by her thigh, her fingertips grazing the cool metal of the sidearm strapped to an inner holster. \"All that shit is going to take too long to get off, princess,\" he said, gesturing to her gear. \"So I'm gonna fuck your pretty little mouth before I get you ready for my friends.\"\n\nShe tried to look scared. Her eyes flicked up behind him, watching as his friends settled down with their backs to them, apparently providing a bit of privacy for their fearless leader. Perfect. She looked back to Scarface just as his cock sprang free from his pants.\n\nWhat the fuck? \"Good God, you want to put that thing in me?\" she said, staring at the thick, purple veined monster between his legs. She clamped her hand over her mouth.\n\nDid you really just say that out loud, Ivy?\n\nHe chuckled darkly and started reaching for her. She grabbed the grip of her sidearm and brought it up, aiming and shooting in one smooth motion.\n\nHis cock exploded.\n\nHe staggered back and looked at her, wide eyed, sucking in a breath to scream just as his buddies were climbing to their feet to come investigate. Ivy spared him a quick, saccharine smile and then turned heel and got the hell out of there.\n\nShe heard Scarface screaming behind her. \"GET THAT FUCKING CUNT BACK HERE! I WANT HER ALIVE!\" He bellowed.\n\nShe rolled her eyes. Men can be so goddamn sensitive, she thought. Blow one cock to bloody shreds and all of a sudden, you're a fucking cunt. Nice. Real nice. \n\nShe sprinted through Chid forest, heading back to base. She most certainly was not going to lead the hostile Alphas back to her unit, wherever they were. Hopefully somewhere safe. Once she reached the perimeter, Lostran snipers would see the pursuing Alphas and take them out.\n\nShe hoped.\n\nShe darted between the pines as she backtracked through the path they'd taken out here. They hadn't been out for very long, she couldn't be that far away. Pounding footsteps behind her synchronized with the frantic beat of her heart as she ran. The Torrins were fast. Fast enough to keep up with her. Would they be fast enough to catch up to her?\n\nHer ankle snagged on a root and, for the second fucking time that day, she sprawled face first onto the ground.\n\nWell, fuck me sideways. \n\nA hand clamped down on her ankle and gripped the fabric of her uniform at the waist. She was hoisted up to her feet and spun around. Four very, very pissed off Alphas surrounded her. \"That was a big fucking mistake, Omega,\" the dark haired one to her right growled. \"We were going to keep you as a fuck toy, but now...\"\n\n\"Now you're going to the Factory.\" A grinning blonde to her right this time.\n\nFour of them. One of her. Quickly scanning the area for something, anything she could use to get out of this, her eyes swept the ground until she spotted the metal glint of her sidearm several yards away, and between two of the rapidly closing in giants. Even if she could dart between them and grab it, she would only be able to get off one shot, maybe two, before they grabbed her again.\n\nShe could fight. Maybe if it had been four Betas, she would have had a chance. Alphas were a tiny bit more of a problem. Her eyes darted between them as she spun, fighting to keep her composure even as her heart tried to beat its way out of her chest.\n\n\"What are you looking for, sweetheart? A way out? Relax, we're not gonna make that mistake again.\"\n\n\"Fuck you, Mason,\" she snarled, and they all howled with laughter.\n\n\"Such a dirty mouth from such a pretty little Omega,\" the last of the four drawled, his bright red hair reflecting a glare off the sun. Like an ugly, angry lizard. \"They're going to have such fun playing with you at the Factory. Get ready, bitch.\"\n\nShe swallowed, hard. She'd seen images of those factories, and she'd rather die, right here, right now, then to ever get close to one of those places where demons reached out from Hell to spread their influence.\n\nShe wasn't sure she'd make it out of this alive.\n\nBut she sure as fuck wasn't going to a Factory.\n\nShe looked up into the afternoon sky. \"You know,\" she said thoughtfully, \"I think I've had about enough of you fucking Alphas. How about you just kill me now, boys?\"\n\nHer hand shot out, the heel of her palm smashing upwards into blondie's irritatingly perfect nose. His hand clamped down around the bloody half of his face and he staggered back, howling. Before she could turn around to take another shot, thick fingers wrapped around her throat and tightened, trapping the air left in her lungs. She kicked out, connecting with someone's knee, and despite the almost certain doom she was heading toward full throttle, despite the black spots dancing across her vision, she smirked inwardly at the shouted curse that followed the crunch of cartilage and bone.\n\nThis was it. It'd been a hell of a ride, but this was her stop.\n\nWhen the shot rang out, it took her a few seconds to catch onto what had happened. The grimy fingers wrapped around her throat suddenly loosened, and mindless, she sucked in desperate breaths. Turning, she saw the redhead on the ground, a bullet lodged right between his eyes.\n\nMason was the next to go. Eyes wide and locked on his buddy, he lunged forward just as she fell back. Another shot. Warm blood sprayed across the side of her face. She gagged, nearly losing it.\n\nThe third and final shot struck the only Alpha left standing, sending his body, quite inconveniently, careening directly into her. She grunted as he fell on top of her, both of them now sprawled on the pine-needle mattress.\n\n\"Get the fuck off me, you oaf!\" she screeched at his already lifeless body. A few feet away, blondie was struggling to get to his feet. A massive pair of boots stepped over her and the human garbage compactor, and she watched the last of her attackers choke on blood until he went still, a knife plunged into the side of his neck.\n\nShe turned her attention back to getting the incredibly heavy body off her. Grunting with effort, she finally managed to roll the dead Alpha on to his side. She sucked in a deep breath she knew was embarrassingly audible. Her hands shook a little as she climbed to her feet, wincing at the fresh pain lancing through her shoulder. Shit, that wound was never going to heal at this rate.\n\nSlowly, she turned around to face her big-booted savior.\n\nShe knew it was coming but groaned anyway. There, in all his geared up, muscular, bronzed skin glory, was Lt. General Jerk Face.\n\n\"Hello, Jerk Face,\" she mumbled. Clearly, she was going to be kicked out. Given the Big Chicken Dinner. Bad conduct discharges stayed with you forever. She was probably going to have to find a job as a cocktail waitress in a strip club. She was nowhere near graceful enough, or tall enough, to be one of the actual strippers, but she could hand out drinks like the best of them, she guessed. All because an Alpha in Chid on a surprise inspection saw her short ass and thought she was Omega.\n\nShe felt a little name calling was in order.\n\nHis stormy winter eyes narrowed, and he crossed his arms. Arms that were almost bigger around than her waist. What kind of garbage was that? She rolled her eyes.\n\n\"Hello, Poison,\" he said back, equally snarky. Apparently, he now agreed with the soldiers who had given her the nickname to begin with. Poison Ivy, they said, because she was an itch in the ass that just wouldn't go away. Get it?\n\n\"I suppose you're here to drag me back and kick my ass all the way home to Lostra,\" she grumbled. He arched an eyebrow. \"Just tell me, big guy. I can take it. I have a backup plan, you know? I'm gonna bartend at a strip club. Just need to get a step stool. And learn how to bartend.\"\n\nOh boy. He was positively seething. She was in deep shit. Like, next level shit.\n\n\"I came here,\" he growled, \"to save you. Again. And you will NEVER step foot in a fucking strip club.\"\n\nShe glared at him. \"You don't get to tell me what I can and cannot do, dude. I can take care of myself. And you didn't save me last time, you pulled me out of a situation I've been in a hundred times before while my Betas were left bleeding on the ground with no medic to help them. As for them,\" she gestured to the bodies splayed on the ground around them. Like the petals of the world's ugliest flower. \"I was managing just fine.\"\n\n\"You were.\" He said it flatly. He really was quite talented, to be able to arch an eyebrow and narrow his eyes at her like that. He was pissed and indignant. Wonderful.\n\n\"I was.\" She said it just as evenly. \"But... thank you,\" she mumbled. \"For this time. Not for last time,\" she clarified.\n\nHe glared at her a moment longer. In the silence, she looked again at the bodies of the men who had been about to torture and kill her. The unpleasant tang of helplessness and terror were fresh. Worse was the feeling of resignation, of knowing she was doomed and not being able to do a single fucking thing about it.\n\nIt was absolute bullshit, and they both knew it. If he hadn't come along, she'd have been toast. Probably stripped, branded, and skinned alive toast, if she'd made it to the Factory.\n\n\"Come here.\"\n\nShe was so lost in thought that when he spoke, she jumped and let out a tiny yelp. Her cheeks burned as she scowled at him and the hand he proffered. Only it wasn't an offer. It was an order.\n\n\"Come,\" he said again, softer this time. Instead of waiting for her, he stepped closer and gently touched her shoulder. \"Let's go back.\"\n\nShe thought about arguing, but decided to go along with him. Just this once.\n\n.........................................................................\n\nBack at base, he brought her to the med tent to say goodbye to her boys. The perimeter had been recovered, and no lives had been lost. This time.\n\nShe hugged each of her medics in turn, ruffling their hair and warning them to be good for Kentucky. When she got to the man himself, she couldn't stop the tears that started streaming down her face. She scowled at him. \"You're an asshole, you know that?\" she said, for no reason at all. He understood.\n\nHe wrapped her in a warm hug, holding her close. His lips grazed her brow, a warm, sweet goodbye. A low warning growl came from the corner of the tent where the Alpha stood watching, and in seconds he was at her side, pulling her out of Kentucky's arms. Kentucky took a few steps back and held his hands up. \"I apologize, sir,\" he said, his voice shaking a little.\n\nIvy yanked on the arm in the Alpha's grip but, predictably, couldn't move it. \"Don't apologize to him, Kentucky, he's just an asshole.\" She turned to glare up at him, but he kept his murderous eyes on her retreating friend. He started walking backwards, dragging her with him. \"I love you guys,\" she called to the group of her kiddos.\n\n\"I love you,\" she said softly as she looked back at Kentucky. Why hadn't they ever said it before? He was her closest friend, they had spent hours together, joking around and talking. They did love each other, and it shouldn't have taken an asshole officer ripping her away from him to admit it.\n\nThe Alpha's growl deepened at her words and his grip on her arm tightened.\n\nThey reached the screen door and he pulled her through, finally turning around and stalking toward the Humvee-slash-Limo he'd apparently chased her down in. Another ridiculous display of Alpha wealth and power. The inside was darkly lit with sapphire ambiance lighting. The front seat was blocked off by a partition, and the extended back was upholstered with supple black leather. She rolled her eyes as she climbed into the side door. Ridiculous.\n\nHe got in beside her and immediately threw a thick arm around her shoulders, dragging her against him and almost onto his lap. She huffed and tugged halfheartedly at the hand clamped around her. She had figured out by now that he was practically immovable.\n\nHe had made her change back into the leggings and tank top she had taken from that ridiculous closet to aid in her escape. He'd wrapped her up in the oversized fatigue top she'd stolen from the supply truck. It made her feel sick. It was so hot. Too hot. Something was wrong. She had a cramped feeling in her gut as she looked out the window, watching as they drove away from her home and her family.\n\nShe had been lucky, having been allowed to stay in the same Battalion for her first five years as a medic. She had ranked up quickly, and she signed on for an extension before being officially promoted to Corporal. They were low on medics and she was glad to stay. She knew eventually she would have to change duty stations, and would have one day left Rico Battalion for another assignment.\n\nBut this, being taken away by an officer who had essentially stripped her of her rank, this was different. She had no idea what would happen to her when they got back to main base, but she knew she wouldn't be sleeping on a bunk in the barracks, getting to know her new medical team.\n\nActually, she had a pretty strong suspicion that she couldn't really call herself a medic anymore.\n\nAnother sharp pain seized her stomach and she groaned, doubling over, resting her forehead on her knees. The Alpha was rubbing comforting circles on her arched back, and she hated to admit it, but his presence was soothing.\n\nWhy was it so hot? A migraine was building behind her eyes. Her muscles were cramping up and her vision was going blurry, and everything just felt wrong.\n\nOfficer jerk face curled an arm across her chest and lifted her upright. He felt her brow with the back of his hand and pushed her head into the crook of his arm. \"The heat suppressants you've been taking have lost their effectiveness. You're about to enter your first estrous, little Omega.\" The sound of his magnificent purr permeated the air around them, and she sank into him a little further.\n\n\"I'm not taking heat suppressants,\" she argued. \"And I'm not Omega.\"\n\nHe reached into a console on the side of the vehicle and pulled out something she recognized immediately. A nondescript bottle of pills. \"You take these every day?\"\n\nShe nodded. \"They're just iron supplements,\" she bit out between excruciating knives of pain stabbing deep into her gut.\n\n\"And where do you purchase these iron supplements?\" His tone turned irritated, almost angry. It was becoming hard to think.\n\n\"I... I don't know. I haven't had t-to buy them yet. My d-dad always sent them, but he died two m-months ago.\" How had she gone from feverishly hot to ice cold? Her teeth chattered, and her words were getting stuck halfway out of her mouth.\n\n\"Ah. And I suppose your father has always supplied these? Sent them along with care packages, or brought them home from deployments? Since you were what, 12? 13? Close to puberty.\"\n\nThe way he was speaking to her, like a condescending adult speaking to a child who wasn't understanding the lesson, was grating on her nerves. Full-bodied tremors accompanied her exasperated scoff, ruining the effect a bit. She gritted her teeth and pressed on. \"My father would nev-\"\n\nHer indignant response was cut off by a very large hand covering her mouth, a silent command to hush. She shook harder.\n\nThe Alpha continued to purr as he gently gripped her chin and tilted her head to his. \"Ivy, these are heat suppressants. Very potent heat suppressants. Do you understand? The father who raised you was not your biological father. He knew you were Omega, and he tried to hide you from us. He did a terrible thing,\" he continued, his voice dropping into a low rumble, \"but I was able to find you before it was too late.\"",
        "Us. Who the hell was \"us\"?\n\nA salty hand (she'd been trying to bite him the entire time he'd been speaking) still covered her mouth, so she shook her head in denial instead.\n\n\"Yes, Ivy,\" the infuriating man continued. \"Have you ever purchased iron supplements for yourself? Have you ever gotten them from anyone but your father? Did you get sick when you were in boot camp, when you couldn't take these? Did you have withdrawal symptoms... nausea, headaches, night sweats? Don't you think it's odd, Ivy, that you've never had a monthly cycle?\"\n\nShut up shut up shut up shut up shut up. She didn't want to think about these things right now, and with her mouth still trapped behind a stubborn palm, she could say nothing to defend her father. Yes, she'd gotten sick at boot camp. Everyone got sick at boot camp, at one time or another. She had just pushed through, refusing to report to sick call, and hid her discomfort.\n\nNo, she hadn't thought it odd that she'd never bled. She worked out constantly, seven days a week, at least an hour every day. She ran. She lifted weights. She could do more pull-ups and pushups than three quarters of the Battalion. The kind of rigorous training she put her body through was enough to mess with her cycles.\n\nHer father had been a good man. Kind and strong and intelligent. He'd never do anything to put her in harm's way.\n\nHe put the little white bottle back into the console and started stroking her hair. Her mouth was finally freed, his hand moving instead to cover her brow to press her closer. \"It's a lot to take in. I will take you through your first estrous, precious one, and then we will talk more.\" It was disgusting, how deep and calming his voice was, how wonderful his purr felt against her fevered body.\n\n\"You're not taking me through shit,\" she grumbled. Her words felt sluggish and slurred. He gripped her chin and lifted her face, his eyes moving over her in an assessing way. \"Your eyes give you away, Ivy.\" He released her. \"You are very close now.\"\n\nWhat the hell was that supposed to mean?\n\nShe closed her eyes and leaned further into him as he purred and stroked her hair.\n\nThis was so fucked up.\n\n.................................................................\n\nThe trip back was quite a bit faster than her trip in the supply truck. The Humvee/Limo was able to navigate the dirt roads at high speeds, and the ride was smoother and considerably more comfortable. At least, she assumed it was, since she had slipped in and out of consciousness for the duration of the trip.\n\nBy the time they got back to main base, she felt as though every inch of her skin was on fire. A permanent, invisible ice pick had been embedded itself into her lower abdomen. Her muscles ached, and there was an awful throbbing behind her eyes that she thought for sure would end up delivering a painless death via a brain aneurysm.\n\nDidn't sound too bad right now.\n\nThe driver dropped them off directly in front of the Alpha's mansion. Ivy could barely walk straight but refused to let the delusional Alpha carry her back into the oversized room he insisted was hers. When they passed another Officer in the hall, he clutched her and squashed her between his body and the wall, growling threateningly, until the other Alpha had passed. She could do little more than grumble, muffled as it was with the way he was crushing her lungs.\n\nWhen they got to her door with the ridiculous gold knocker, Officer Muscles opened it for her and led her in with a steadying hand wrapped around her arm. He led her toward the bed, but she shook him off and went to the couch. Like everything else in the room, it was entirely too big and obviously built for giants, but she felt more comfortable curled up in a writhing ball on something that wasn't the size of a fucking truck.\n\nFor the most part, the Alpha left her alone, bothering her only intermittently to force her to drink what felt like gallons of water. He attempted to get her to eat, but her stomach had adamantly refused all thoughts of food, rumbling in angry disagreement whenever a morsel was brought close to tempt her.\n\nThe fire licking over her skin was unbearable. Sweat-drenched clothes were stripped and discarded, her earlier horror at being naked in front of the unfamiliar Alpha now entirely forgotten. She was beyond caring about such things. She just wanted this insufferable fever to go away.\n\nAs if someone had actually severed the two hemispheres of her brain, and then walked off with one of them, she felt half of herself drift off into some useless, unreachable place. It was only then, when she'd been reduced to a shuddering, huddled mess of mindless nerves, that she allowed the male to scoop up her feverish body and plunk her directly into the middle of the oversized bed.\n\nThe soft feel of downy pillows beneath her cheek accompanied the first hint of relief. Reaching out blindly, she gathered all of the fluffies within grasping distance, arranging them around her like a trench. Which seemed to be quite a lot, actually.\n\nHad she been in her right mind, she would have noticed the Alpha discreetly placing more soft, thick blankets and cozy pillows just inside the perimeter of her stretching arms while maintaining his position at a safe distance away. Not knowing or caring where they were coming from, she continued snatching at warm bits of fabric, piling them up into the ultimate pillow fort.\n\nThe second hint of relief came once she had settled comfortably in the center of her magnificently fortified, tactical wall of the cozies. The flames that had been licking over her skin settled to a warm glow as she snuggled deeper into her fortress.\n\nThe third hint of the relief was, ultimately, her undoing. Safe and sound in what she would eventually understand was her very first nest, a tantalizing sensation began tickling at her nose. Her admittedly half-fried brain became a paradox of simultaneous relief and painful need when the scent of the nearby Alpha reached her. She whimpered, torn between staying securely huddled in her fluffy bunker and seeking out the source of the smell that was slowly driving her mad.\n\nHad he sensed the change in her? Had he been waiting for signs that she was ready to accept him? Either way, the dilemma of her inaction was settled when strong arms plucked her from her position, only to settle her back down after he'd claimed a foothold within her fortress. He came to her as she was, bared and exposed, intimate places open to hungry eyes. The sharp ridges and valleys of his muscular torso flexed and bunched beneath her hands as he positioned her on top, straddling his thighs. Hands tangled in her loose chocolate locks, the pressure on the back of her skull bringing her head down, down, down until she was inches away from the scariest cock she had ever seen. Which, admittedly, had not been that many.\n\nTentative fingers reached out to trace the veins that lined his massive shaft, the little bead of precum at the tip of his crown so fragrant and tempting, she was unable to stop herself from closing the short distance and lapping up the foreign elixir. His cock jerked under her tongue, the massive head somehow growing even larger, which should have terrified her. Instead, she moaned, the sudden and painful feeling of emptiness replacing the ice pick in her abdomen. She wanted... No, she needed, him to fill her to the brim, until she flowed over and settled back into herself.\n\nThe hands fisting her hair tightened as she wrapped her lips around the head of his cock, encouraging her to sink further onto him, to take all that he was offering and more. Invigorated by the potently sublime taste and feel and smell of him, she licked and suckled at a shaft so thick, the palm she'd wrapped around it was insufficient to fully enclose the pulsing girth. Hands holding the hair at her scalp stilled her movements as he moved his hips, gently thrusting in and out of her wide-open mouth as he grunted and groaned.\n\nHis breathing quickening even as hers stopped, she thought maybe she'd unhinged her jaw like a snake to take him further down her throat, as if he might replace the air in her lungs. Chuckling, he pulled her up with a firm grip around the nape of her neck, ignoring her protesting snarls and frustrated growls. He countered with a growl of his own, so deep and primal that she felt the power of it replace the very marrow in her bones, and keeping her pressed tight to his chest, he flipped her beneath him, prowling over her supine form, the same threatening rattle pulling all manner of reactions from the body that was no more familiar to her than a stranger's. His nose, positioned above her navel, grazed her belly as he moved south, his reinforced growl turning more into a hum of approval when slick gushed from her center, flooding the fingers that had begun to separate her swollen folds. Like a cat making languid laps at a bowl of cream, his tongue swept her entrance from bottom to top. Again, and then again, and his mouth latched onto the bundle of nerves that he'd growled awake the last time they'd been alone in this room together. She squirmed restlessly, hissing in angry protest when his hand clamped down on her thighs, pushing them to the side and preventing her attempts to make him go faster, harder, to give her whatever it was that the thick fingers slowly fucking her were promising.\n\nThe vibration of his menacing rumble against her clit, coordinated with the rotation and hook of fingers thrust deep against some inner detonator, would have seen her jumping straight off the bed, had fingers and hands and tongue and arm not been pinning her securely to the mattress.\n\nHer head thrashed wildly from side to side, overwhelmed and incapable of any coherent thought beside the absolute assurance that she would die soon if he did not bring her to that elusive peak. And then, deep voice murmuring soothingly, skilled fingers lodged deep, he delivered.\n\nThe sound she made was not a scream. Nor was it a moan or a sob, or any comprehensible word. She had no way to describe how half-formed thoughts had sank into some unexplored depth, her own sense of self flooded into obscurity by the sensations playing a symphony of pleasure across her skin.\n\n\"Again,\" a deep voice commanded, and it was as if he had total control of her body and mind, the way a second orgasm split her composure in two, his tongue extending that brief period of intense relief until she shuddered and went limp.\n\nToo soon, the pleasure receded, and she was left again with that intolerable feeling of emptiness. Later, when her mind had returned to her, she would try to convince herself that her desire, her lust, her desperate need, was purely biological. This, she would tell herself, had been her sexual awakening, and it was simply her transition into her first, full-fledged estrous that had caused the sharp claws of insanity to puncture the armor she'd built up around her suddenly broken heart. She would not be able to admit, at least not right away, that the emptiness being patiently stroked to the surface by a strange man who felt like home, went much further, much deeper than his physical body had the ability to fill.\n\nIt was as if all the pain and loss in her life had left gaping, sore wounds that she'd tried to bandage like an injured limb in the field. Briefly patched up, but not expected to last longer than the time it took to get to safety. Tucked deep into her fortress, the Alpha between her thighs keeping her balanced on an excruciating precipice, her defenses were torn away to expose the pain of emptiness left behind by the people in her life who'd abandoned her.\n\nThese half-finished thoughts, irretrievable and indecipherable, did not distract from the changes happening in her body. If they had been two magnets, she still wouldn't have been as drawn to him as she was in this moment. The Alpha crawled back up her trembling body, trailing kisses and licks and gentle bites as he went, stopping only when his forearms, positioned on either side of her head and shoulders, held the majority of his weight off her considerably smaller body. His eyes held sparks of amusement as his head canted slightly to the side, and startled, she realized she'd been snarling and growling at the infuriatingly stubborn male. Her nails scratched at his chest and the back of his neck in a desperate attempt to pull him closer. As if she was being branded, her skin seared in scorching agony in all the places he touched, trailing his fingers like a flame sparked to dry timber.\n\nAnd he was making that sound again. Not the warm comforting rattle of his purr, nor the dangerously low growl of disapproval, but the possessive, dominating rumble that brought forth a sudden cascade of liquid heat from between her legs. She groaned and writhed, mindless in her frenzy, unable to vocalize what it was she needed from him, what was making her core clench so painfully in search of something. Tears of frustration gathering at the corners of her eyes, she was incapable of understanding the words meant to calm and sooth spoken against her brow, the Alpha's lips pressed to her skin in an incomprehensible sign of affection.\n\nAnd then he was there, rocking into her, eliciting more slick to ease his way with that sound, the one that stabbed into the base of her spine and cut upwards until it spread like pins and needles over her scalp. His palm gently circled her neck, the thumb tucked under her jaw directing her gaze up, and up, into darkening stormy skies.\n\n\"There she is,\" a deep voice murmured when her eyes firmly locked onto his. There was discomfort, a sharp pain with each short thrust in, followed by a deeper ache when he withdrew, and she didn't know if she was flying or falling but either way, she was about to crash. When at long last he was firmly seated, her wheezing pants keeping time with the way her body throbbed around a girth and length that most certainly should not have been able to fit, she came to the surface enough to acknowledge the barrage of emotions and sensations coursing through her being the way water surges a riverbed after a deluge of summer rain. Yes, discomfort and pain, but also ecstasy at being full in a way it felt she'd been waiting for, always waiting for. Horror at the changes that were occurring, the feel of things shifting within her that she'd never realized had been out of place. Fear of being alone with the domineering, bull-headed wall of muscle moving over her. Fear of being alone without him.\n\nAnd there, at the base of her entire existence, a truth that had been slowly weaving itself into her consciousness and now burst through the remaining barriers like a storm cloud cracked apart by sunlight. Something primal, instinctive, cold. Animals. They were both animals, debased and released into pure, ancient dissolution of the physical and the spiritual. There was nothing left but the here and now. Nothing but the drive to come together, to claim and be claimed, to take and be taken.\n\nThis man, she knew, would take. He would take it all, and never ask for forgiveness.\n\nThe first climax was like coming home. A warm, familiar feeling swept through her abdomen, ruby fingers of flushed skin climbing up her chest and neck like trellises of her namesake. Her rapturous moan was interrupted by the swift withdrawal of the weight on her chest and the fullness of her core, and quicker than her sluggish mind could process, she was flipped and mounted, a possessive grip on the back of her neck ensuring she remain subdued and still.\n\nThe Alpha's movements were no longer languorous and smooth. Having ensured her pleasure first, the intrusion became an invasion, a conquering of a thing untamed and wild. Driving into her from behind, hips thrusting with a force that was overwhelming in its stringent need, she felt him swell and pulse and felt sure she was about to be split in half. As if responding to her unspoken terror, a thick, tanned forearm banded just below her breasts, pulling her up and into the heat and safety of his chest. His fingers twined through her hair and gripped hard, the sounds of skin slapping against skin echoing in the increasingly vacant corridors of her mind as he jerked her head to the side, exposing the unmarked expanse of a slender neck.\n\nBeyond the capacity for lucid thought, her body knew what was happening full seconds before her mind caught up. An expanding bulge pressed tight against her pulsating core, her womb doing its best to coax out the fluid his cock was enthusiastically surrendering. A scream, born from a place of unrestrained rapture and unchecked agony, tore itself from her chest like the last surge of a dying flame as teeth, much sharper than they looked, locked around the nape of her neck and sank into tender flesh.\n\nIf her last orgasm was like coming home, this was like launching into the stars or plunging deep into dark waters. Her weakened attempts to get away were stilled by a warning growl that vibrated around a locked jaw and the tightening of the arm still banded below her chest. The sounds of her own ragged sobs became muffled and distorted, and soon after, when the last of her tremors had quieted and stilled, he lowered her back into the protection of her fortress of fluff and released his violent, rapacious grip. A thick blanket of darkness fell over her then, murmured words of praise pressed like hot breath against her ear as they both settled and calmed. Dropping beneath the surface of consciousness, Ivy's eyes slipped shut, and she knew what it felt like to die.\n\n...................................................\n\nPrecious hours fell to sacred days, each thrust of his cock buried into her perfect, silken heat reinforcing the blossoming bond he'd carved out deep beneath her ribs. The wound, a source of great pride for the newly mate-bonded Alpha, was healing wonderfully, with the aide of semen and saliva worked into beautifully broken skin by his gentle, massaging fingers.\n\nShe slept for hours at a time, curled into the cradle of his arms, lulled to silence and calm by the resonance of his wicked purr. He knew it's effect on her and used it often. Her lack of proper preparation was a constant source of anxiety, her slip of a body unnourished except for the come he fed to her on fingers drenched from the tight walls of her pussy, and the dry crackers with peanut butter he forced into her every morning, when she could stomach the snack and keep it down. All the while, he promised himself she would never again enter estrous without full days of proper nutrition and hydration in preparation.\n\nTwice, he'd nearly lost her to the bloody, haunted woods of Torrin. Twice, he'd had to track her scent through towering pines to find her injured and in harm's direct way. He would have followed her right into the underworld, would have sold his soul to drag her kicking and screaming back into life if he'd had to. His thumb skimmed over the swollen, pink skin of his claiming mark, his inner beast calming at the sight of it, at the knowledge that whatever might have happened, she was here with him now, safe and sound and satisfied.\n\nHis hand stroked soothingly up and down her bare back as she lay sprawled across him, well-sated from another bout of carnal fucking. She was saturated with his scent, every inch of her caramel-smooth skin having been touched and licked and nipped, the fluids from their couplings rubbed into her like a lotion. He was drunk on her, on the feel of her tongue skimming down his chest, like a kitten lapping up sweet buttermilk from a proffered hand, on the undulating grip of her core as his knot tied her to him as surely as a titanium chain. She tasted like honey and wildflowers. He never wanted this precious time to end.",
        "Pressing warm lips to her brow, he shushed her stirring protests as he shifted her hips and slid into her once more, his thumb finding her clit and rubbing gentle circles until she moaned and began to grind against him. He tempered his grip on the protruding angles of her pelvis so as not to bruise as he moved her up and down on his cock, the bones he carefully palpated an unpleasant reminder of how he'd failed to properly care for his Omega. She was so incredibly responsive, so wonderfully receptive to his touch, and with little effort, he coaxed her into another orgasm, swallowing her cries with a hungry growl and chasing her back into sleep once he'd flooded her core with his own shouted release.\n\nHe felt it, the moment she began to come back. It was in the subtle tightening of the muscles around her mouth, the slight quickening of her breath every time she caught his gaze. She would be frightened and overwhelmed once she was fully awake. She'd need space and time, and he would begrudgingly grant it in small, controlled doses.\n\nWhat would it take, he wondered, for Ivy to give herself to him so freely without the cloud of estrous obscuring judgement and reality? His mate was an enigma, raised up into early adulthood with no knowledge of her dynamic or her proper place in the world. She was a wild mare, strong-willed and fiery, but the submissive characteristics of an Omega was writ into her DNA. She would try and test him, but eventually, she would yield.\n\nHe would be patient and forgiving, but in this, she had no choice.\n\nShe was his bonded mate. She was his. \n\n.......................................................................\n\nEarly in the morning on the fourth day of her estrous, she started to become more aware. The pains in her body slid up closer to her conscious mind. She fully awoke, horrified and aching, after one of her short naps sprawled across the Alpha's sweat-drenched chest. Ivy pushed herself off him and scrambled further down the bed, away from the fortress of fluff, now stiff and sticky and very un-fluffy with the remnants of their couplings. Her breathing came in panting gasps as panic crept up her chest and gripped her throat.\n\nThe giant stayed back but projected his purring louder, which calmed her just enough to make it possible to breathe. He watched her carefully as she crawled off the bed and began pacing, wringing her hands, tears streaming down her face, as the reality of what had just happened fully assaulted her. She stopped and glared at him.\n\n\"What the fuck did you do?!\" The question came out as an anguished cry as she clawed at the place right below her sternum where a dull, worming sensation had buried itself deep beneath her flesh. Even his loud, patient purr could not stop the panic from closing in around her this time, and she braced herself against the side of the bed as her breathing sped up.\n\nThe Alpha reached down and plucked her up off the floor, pulling her into his lap and settling back against the tall oak bedframe. He held her head to his chest and thread his fingers through her hair. She was slick and disgustingly crusted with the come he had rubbed onto her body, smeared across her lips, and pet into her chocolate locks. The sound of his purring against her ear slowly pulled her back down to sanity.\n\nThe place on her nape where he had bitten her throbbed dully. He had bitten her! She swept shaking fingers over the raised, tender half-crescent marks his unexpectedly sharp teeth had carved into her, shuddering violently when she felt the thing beneath her ribs react like a plucked cord to her exploring touch.\n\n\"I'll explain everything, precious one. First, you need to eat and sleep.\" She felt his rumbling voice interrupt the calm of his purr. All of a sudden, she needed to be far away from him. Very, very far away.\n\n\"Let me go. Let me the fuck go!\" she screamed and scratched at the arms holding her until they loosened enough to wriggle away. She hurried off the too-large bed and ran across the polished marble floor to the washroom, slamming the door and locking it quickly behind her. Her back hit the wall when she scrambled away, and she slid to the floor, sobbing into her hands.\n\nPair-bond. That's what he'd done to her. He'd put a claiming mark on her, and he'd forced a pair-bond, and she had let her instincts take over and had continued to fuck him. The place below her sternum seared and burned with her shame. She felt the invisible thread connecting them. It strummed unpleasantly, seemingly displeased with her lack of submission.\n\nShe was Omega. She really was Omega. How could that be true? How had she not known?\n\nWith shaky legs, she stood up and walked over to the enclosed shower at the end of a washroom that, like everything else in this horrible place, was entirely, obnoxiously too big. She turned the nozzle as hot as it would go and stepped into the burning stream created by two waterfall showerheads. Unlike the crowded showers at Chid FOB, the water stayed hot instead of giving her a blissful ten seconds and then turning ice cold. But of course, it would. These were Alpha quarters, after all.\n\nShe found expensive, un-scented soaps and shampoos in the little shelves lining the polished stone walls of the shower. She scrubbed her skin until it was raw, washing off the dried and sticky come that covered her body. She needed his scent scrubbed clean. She tried to scrub away the worming, digging feeling of the pair-bond, but no matter how hard she clawed and scratched and scrubbed at it, it only wormed and carved its way in deeper.\n\nA luxurious white pile of fluff awaited her when she emerged from the steaming-hot shower. A towel, bathrobe and slippers had been carefully laid out on the sink, which was overloaded with more ridiculously expensive amenities she had no need for. She rolled her eyes and walked forward, wrapping herself in the soft, thick bathrobe and ignoring the slippers and towel. She used what she wanted of the lotions and creams, leaving the rest to figure out or give back later, and cautiously opened the door to the room beyond.\n\nThe Alpha was gone. Breathing a sigh of relief, she opened the door wide and stepped out. A steaming platter of food sat on a velvety navy-blue ottoman beside the oversized couch she preferred. She paused, disturbed to realize that already, she was considering this her place, familiar and comforting.\n\nShe crossed the room and sank to her knees beside the ottoman, digging into the food with enthusiasm. The autumn-themed platter had a little bit of everything you might find at a thanksgiving dinner. Turkey, chicken and ham filled an entire plate surrounded by small bowls of sweet potatoes, green beans, creamed corn, mashed potatoes, cranberry sauce and stuffing, and a piece of pumpkin pie. Wait... Was it thanksgiving? She tried to remember but couldn't even focus enough to decide what month it was.\n\nShe ate from the platter until she was full and carried the tray over to a blackwood table by the door. She wasn't about to go exploring to find a kitchen to return the china dishes to. She would worry about it after she slept. A large pitcher of water and a crystal glass sat on the same table, and she poured herself a cup and gulped it down greedily, refreshing cold dousing the uncomfortable heat of her throat and stomach. Filling the glass again, she carried it with her over to the walk-in closet to find something to wear before she fell asleep. She could already feel a deep exhaustion overtaking her. A selection of satin nighties and pajama sets hung from a section of the closet, and she chose the warmest looking pair and slipped them on. She was slightly annoyed to admit that they felt fucking amazing against her raw skin.\n\nShe eyed the big bed where the fluffy fortress still gave off scents she really, really didn't want to think about. Shuddering, she turned away and padded over to the couch, pulling a blanket that weirdly held no trace of his scent off the back and wrapping herself up in it.\n\nThe Alpha never came back. The worming sensation never went away. Ivy laid curled up in a ball, crying silently as she waited for sleep to come. Fuck. \n\nFuckity fuck fuck fuck fuck.\n\nFuck. \n\nWhat the fuck had she gotten herself into?\n\nBad fuck. Big fuck. Shitty fuck. \n\nOh, Fuck. "
    ],
    "authorname": "ReckingBall",
    "tags": [
        "alpha",
        "omega",
        "omegaverse",
        "noncon",
        "military",
        "nonhuman",
        "non-human",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/poison-ivy-ch-02-1"
}