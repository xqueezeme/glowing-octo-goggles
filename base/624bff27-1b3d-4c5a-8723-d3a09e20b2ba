{
    "title": "The Thin Line Between",
    "pages": [
        "Hello everyone. Quick little explanation for long time readers of this site. If this story, whether it's the title or what you read below, seems a little familiar, you are not experiencing d\u00e9j\u00e0 vu. I submitted a number of stories a couple of years back but ended up deleting my profile and stories for... 'reasons'. Don't want to go into it too much but the subject of most stories I was submitting bit me in the arse in real life. My own fault.\n\nSo, anyway, I've let time pass by before starting again with a new profile and hopefully more anonymity than before. At least it's given me a chance to make little edits here and there of all my works. If this jogs the memory, hope you enjoy it again. If you haven't read it before, I hope you enjoy it!\n\n*****\n\nSibling relationships. I think most people out there have at least a half decent relationship with their brother or sister. Or brothers and sisters. Sure, when growing up, you probably had the usual issues when maturing. With hormones raging, and teenage angst, life would always be difficult in a household full of young people growing up. I even feel pity for the parents out there that have to put up with more than one moody teenager.\n\nUntil the age of about 10, the relationship with my older sister, Charlie (born as Charlene, she preferred Charlie), had been rather nice. I didn't worship the ground she walked on or anything, but she was kind and rather smart, and until that age, she was nice towards me, and I towards her. I remember we liked to be around the other more often than not. I like to think we were close, as close as siblings around three years apart would be.\n\nThings changed when she turned 13. She started to get mean. Mostly it was just teasing. But it was incessant. And it didn't take long for it to get cruel. The sort of digs and comments that stay with you for a long time. The real problem? According to my parents, the sun shone out of Charlie's arse. She could literally do no wrong. So in addition to the teasing, she knew how to push all my buttons to get a reaction out of me. And I soon found myself in trouble with the parents. 'Be nice to your sister'. 'Don't say that about your sister'. 'You shouldn't say things like that to your sister'.\n\nSlowly but surely, I realised my relationship with Charlie had changed. I was no longer the darling little brother. I was... I wasn't quite sure what I was. The enemy? Possibly. An annoyance? I was left feeling more and more like that. I tried to remain as friendly as possible, but when someone treats you like dirt on their shoe, you realise the relationship is perhaps irretrievable.\n\nThen something happened when I was 14, she being 16, which completely destroyed our relationship, in my eyes at least. I was minding my own business in my room, looking forward to the summer holidays fast approaching. I could hear an argument in the living room between my sister and parents. I couldn't help the smirk that formed. Finally, the golden child is in trouble. By now, Charlie and I had little to do with each other, and I think that suited us just fine. She was a 16-year-old teenager who had made it perfectly clear she wanted nothing to do with me. I'll admit, I was saddened that we couldn't have a normal relationship. Most of my friends had one or more siblings, and they all appeared to get on far better than Charlie and I. Mostly, I still wondered what exactly I had done wrong. But trying to talk to Charlie only ended in an argument, and with me in trouble for arguing with my sister. So I'd just given up in the end.\n\nI only knew something was wrong regarding myself when my mother and father both appeared at the door to my bedroom. \"Matthew James Thompson, where are they?\" my mother demanded.\n\nAll three names? Shit, what have I done? \"Where are what, Mum?\" I asked carefully.\n\nHer eyes narrowed as she walked towards where I was sitting. \"You know exactly what I'm talking about. Where are the cigarettes?\"\n\nI swivelled in my chair, looking between Mum and Dad. I couldn't help the chuckle that escaped. \"Smokes? Do you think I smoke? I'm 14!\"\n\n\"Someone is smoking in this house, Matthew. And your sister said it isn't her.\"\n\n\"And, of course, you believe every bloody word she says, don't you?\" I retorted sarcastically.\n\n\"Matthew!\" my father shouted, \"Don't you speak to your mother like that.\"\n\n\"Do you seriously think I'm smoking?\" I asked, glaring daggers at the man.\n\n\"We're going to search this room, young man. And you'd better pray to god we don't find any.\"\n\nOf course, they found some. Half a carton, to be exact. I had no idea they were in there. And I knew exactly who had put them there. I don't know when or how she had the opportunity to put them in the back of my wardrobe. Even I had to admit she had me hook, line and sinker. But that minor part of me that respected the play was overshadowed by the hatred that now consumed me, particularly once my parents grounded me for the entire summer holidays. All my plans, gone in an instant.\n\nFrom that day forward, as far as I was concerned, I had no sister. The cigarette incident was the straw that broke the camel's back, in the long line of incidents that happened between us. From now on, Charlie was just a girl that happened to live in the same house. As for my parents, I tolerated their presence in my life. Even at 14, near enough to 15, my birthday in February not long after the holidays finished, I set my mind to getting out of the house as soon as possible.\n\nI barely talked to anyone in the house after that incident. My parents received short, one word responses to most questions. My sister was ignored completely. And I knew she noticed. She tried pushing my buttons. I just looked right through her, like she didn't exist. Teasing didn't work. Trying to wind me up didn't work. She even tried talking to me like a normal person after a while. I just walked out of the room. Sounds immature, but it prevented me blowing up and telling her what I really thought.\n\nMy 15<sup>th</sup> birthday was when shit well and truly hit the fan, and my parents and sister were left with no doubt what I thought about the lot of them. By this time, I got up, showered, dressed and headed straight to school, trying to avoid the kitchen if anyone was in there. If I saw anyone, they got a grunt. I sat down to dinner with them in the evening simply because I had no choice. I needed to eat, but I spent as little time with them as possible otherwise.\n\nOn the morning of my birthday, there was a knock at my door. I opened it to see Charlie standing there. She smiled and wished me 'Happy Birthday'. I returned at look that would have shown all the hatred and disdain I had for her by that time, and noticed the smile slowly disappeared.\n\n\"I'm...\"\n\n\"Fuck off and die, Charlie.\"\n\n\"What?\" she asked quietly.\n\n\"You heard me. Fuck off. Die slowly. What the fuck are you even doing at my door anyway?\"\n\nI glared at her and noticed her wilt slightly under my gaze. She could barely meet my eyes. \"I wanted...\"\n\n\"I don't care what you want, Charlie. Fuck off. Leave me alone.\" I slammed the door in her face.\n\nShit hit the fan no more than ten minutes later. My door opened and my father dragged me out of my room by the back of my shirt, into the living room. Charlie was on the couch, crying her eyes out. Mum stood in the middle of the living room, crying to herself, though when she saw me approach, I could see the anger. My father released me and stood next to my mother.\n\n\"How could you say such a thing to your sister?\"\n\n\"I don't have one.\"\n\nMy father looked perplexed. \"Have one?\"\n\n\"A sister. I don't have one.\"\n\n\"Don't be so stupid, Matthew.\"\n\n\"She has made it perfectly clear what she thinks about me over the past few years. So she can fuck off as far as I'm concerned.\"\n\nI knew the slap was coming. And, boy, did it sting. I rubbed my cheek as Mum started to cry. I just glared at my father, ignoring her. \"You want a shot too? I mean, you've made it perfectly clear what you think of me after all these years.\" I gestured towards my sister. \"Golden child who can do no wrong.\" I gestured towards myself. \"And then there is me.\"\n\n\"Is that really what you think?\" my father asked in return, and I thought he actually sounded... disappointed.\n\n\"She can fuck off, at the very least. As for you two, quite frankly, if you wanted rid of me right now, you'd be doing me a massive fucking favour. Send me to the grandparents. Kick me out onto the fuckin' streets. Honestly, I'm past caring. How does that sound? 15 years old and doesn't even want to live at home anymore. Should tell you everything you need to know.\"\n\nI'd never sworn in front of my parents until that day. Now that I was on a roll, I was letting them know what I really thought. Baring my conscience, mind and soul, all in one go.\n\n\"You're our son, Matthew. We love you,\" Mum sobbed.\n\nI snorted in undisguised disgust. \"Could you have fooled me. Are we done here? Ground me for however long you want. I don't give a shit.\" I glanced towards my sister, still crying. She looked at me, and I could see her heart was broken. I just hardened mine in return. \"And don't talk to me again. Far as I'm concerned, you don't exist.\"\n\nIt being a Saturday, I stayed in my room all day, only leaving to have a shower. In my favour was the fact I saved my pocket money over the year, putting it all in a savings account, so thanks to interest rates, and the fact I didn't spend anything, I actually had a few hundred dollars. So when I got hungry, I dressed and readied myself to head out. It was then that I noticed a small pile of presents next to my door. Figuring I'd well and truly make my point, I gathered them up and walked into the kitchen, noticing the other three were sat at dinner. Mum smiled a little as I approached.\n\nAfter placing them down on the table, I simply said, \"You can keep your presents.\"\n\n\"What? Why?\" Mum asked, already sounding upset.\n\n\"Feed me and clothe me. Do the minimum you need to do as parents. Obviously don't want CPS involved in all this. Other than that, I'll take care of myself.\"\n\n\"Don't be so...\"\n\n\"Stupid, Dad? I may be stupid, but I know what to think. So, don't do me any favours anymore.\" I turned and readied to walk out of the kitchen.\n\n\"Aren't you going to have dinner with us? It's your birthday!\" Mum cried.\n\n\"No,\" I stated, and walked out the front door. I heard footsteps behind me as I reached the end of the driveway, turning around to see Charlie, of all the people in the world.\n\n\"I'm sorry,\" she sobbed.\n\nI laughed in her face. \"You're sorry? Fuck you, Charlie. It's a little late for sorry.\"\n\nShe stepped closer, and I'll admit that I raised my hand, only stopping once I realised what I'd done. Charlie looked at me with eyes wide, almost as if she noticed how I looked at her for the first time. I could see Mum and Dad watching from the front door. I lowered my hand but stepped forward. \"Fuck. Off,\" I growled, before turning around and walking away.\n\nI had McDonald's as a birthday treat to myself. Even had a McFlurry as dessert.\n\nLife in the house may have been awkward for the other three over the next couple of years, but for me, they were absolutely fine. I think I barely swapped a dozen words with Charlie, though that was because I generally avoided her presence. Mum and Dad tried their best, but I was a brick wall, swallowing all the emotions I could feel. It was definitely not healthy but I soldiered on. On my 16<sup>th</sup> birthday, I found another pile of presents on my bed, returning those to their bedroom.\n\nI found a part time job within a week of turning 16, and was soon burning the candle at both ends. School during the day, working most evenings and weekends. Anything to keep me out of the house. I wasn't too worried about my studies, as I planned on leaving at the end of Year 10, having already talked to a guidance counsellor about apprenticeship schemes. I wanted to be a mechanic, so she helped me put together a CV and in contact with local shops.\n\nThe only time I ever felt awkward was when the grandparents came to visit, particularly at Christmas or if they popped over on my birthday. I had no idea if they were aware of the complete collapse of my relationship with the parents and Charlie, but if they were aware, they certainly kept their opinions to themselves. When they were at the house, I was always pleasant and friendly towards them. The same grandson they had always loved. Hell, I even smiled while they were around. My Nanna knew it was all fake. She never said as much to me, but she knew something was going on. She never said a word to me, though, I guess figuring it wasn't her place to get involved.\n\nMy parents had no idea of my plans to leave school, or they didn't until the school sent a letter, notifying my parents that I intended to leave. I had no idea about any letter until there was a knock at the door, opening it to see my father. I just looked at him as he held up the letter.\n\n\"We need to talk, Matthew.\"\n\nI swallowed down the sarcastic retort and followed him into the kitchen. Mum was already sat there, the pair sitting alongside as I sat opposite to them. There was no sign of Charlie. To be honest, I had next to no idea what she was even doing with her life by that stage. I'd made my feeling perfectly clear towards her, and amazingly, she respected them.\n\n\"When were you going to tell us?\" my father asked.\n\n\"I wasn't.\"\n\n\"We're your parents and we have a right to know what you're going to do with your life, Matthew.\"\n\nI folded my arms across my chest. \"If you say so.\"\n\n\"What's happened to you?\" Mum asked quietly, \"You used to be such a nice, friendly boy.\"\n\n\"If you need to ask that question, then I'm not the one to provide an answer.\"\n\n\"Why aren't you staying at school? Your marks are good enough to eventually get into university,\" my father stated. First time I'd heard any form of praise for him since... forever.\n\n\"Because I don't want to. I'm going to work, make money, then get out of this place.\"\n\nMum started to cry. My father just shook his head. \"Why do you hate us, Matthew?\" my father asked quietly.\n\nI smirked. \"I don't hate you. I don't care enough to hate you. The opposite of love is indifference. That's how I feel about you. Hatred means I care. Figured I'd be doing you a favour once I'm out of here.\" Mum leaned into my father, watching as he hugged her. The look he returned to me was only one of sadness. Not even disappointment. I still had humanity. Deep down, I still cared. Still loved them. And I hated seeing Mum cry.\n\nBut I swallowed that down. I was a brick wall. Emotionless. Nothing but a dark void.\n\n\"Are we done here?\"\n\nFinishing year 10, my marks were actually rather good, but there was no chance I would be staying on. I had an apprenticeship lined up and I was fully employed by the time I turned 17. In addition to working, I was also doing a part-time college course in mechanics, as I wanted all the certificates possible so I could become a fully certified mechanic.\n\nFor the year until I turned 18, I finished my apprenticeship, graduated college with a few certificates while I also spent time at the gym, keeping myself fit. At home, I was completely self-sufficient. I learned to cook my own meals, eating at different times to the rest, did my own laundry, all the things I would have done if I'd been living alone. I could afford to buy my own car, and had obtained my licence as quickly as possible. Through all this, every Christmas and birthday, I'd wake up to find presents at my door. Each time, they were returned.\n\nAs for Charlie, she still lived at home. I had no idea if she was studying or not. No idea if she had a boyfriend, or girlfriend, if she was so inclined. I saw her from time to time, and by the time she was 20, she was certainly... Well, I still had no time for her, but I'd have to be blind not to notice she was beautiful. Brunette with blue eyes. A pair of pert boobs similar to most girls. She wasn't thin, wasn't fat. She was, well, a woman. In the brief moments I did see her, I did what any red-blooded man would have done. I checked her out, barely remembering she was my sister.\n\nMy parents attempted to make a big deal of my 18<sup>th</sup> but I had my own plans to go out with my friends, considering I was now legal to go out and drink. There was now the tradition of returning the presents that sat near my door, but Mum stood in the way of the front door as I was ready to go, preventing me from leaving the house.\n\n\"Please don't go,\" she said quietly. I just looked down at her from my height of around six foot. There was no hatred in my eyes. No disdain. They probably looked empty of any emotion. Shit, I probably verged on sociopathic, at least according to the family. She stepped forward and I knew she wanted a hug. \"Please,\" she pleaded.\n\nI was a brick wall. But I'll admit my heart was breaking. I'd kept the act up for so long, I'd become the act. Somewhere deep inside was the little boy my mother no doubt remembered. I couldn't remember the last time I'd even hugged her. I realised how much I missed them. And, seeing my mum cry and plead for her son just to do the small thing of giving her a hug, she nearly broke me completely. I wrapped her in a hug and felt her sob in my arms, holding her for around a minute. I kissed the top of her head.\n\n\"I'm going out, Mum,\" I said quietly, keeping my tone as even as possible.\n\nI felt her squeeze me even tighter. \"Don't. Please don't...\"\n\nI gently grabbed her by the arms and untangled myself from her. My father was watching, escorting Mum so she could hug him. As Mum sobbed, he held out his right hand towards me. I looked at it for a moment before I grasped it. \"Happy birthday, son,\" he said quietly.\n\nI didn't smile, but I returned a respectful nod before turning and walking out the door. I got in my car, started it up and drove for about five minutes before I had to pull over and stop because my vision started to blur. I cried for a good few minutes, feeling like completely shit. Wiping my cheeks, I started the car and headed off to celebrate my birthday.\n\nI didn't enjoy myself. I was a fool, but I'd dug a hole I felt I couldn't get out of.\n\n*****\n\n\"I would like to drive across the country. It'll take a week or so. I'll be honest. I've barely had any time off since I left school.\"\n\n\"That's reasonable, Matt. We definitely want your expertise so whenever you can get here will be grand.\"\n\nI looked at the calendar on my smartphone. \"Why not the first of next month? That'll give me a week to sort out all my issues here, then a week to get across the country. I won't have much with me.\"\n\n\"Sounds good. I'll have one of the boys here find you a place to live until you find somewhere of your own.\"\n\n\"Sounds good, Steve.\"\n\n\"Do you need to know anything else?\"\n\n\"No. Just email me the contract and I'll sign that once I arrive.\"\n\n\"That I can do. If that's it, I'll have one of the girls email the contract and all I can say otherwise is that I look forward to seeing you in a couple of weeks, Matt.\"\n\n\"I'm looking forward to it too, Steve. I'll keep in touch, letting you known when I'm on my way, and then when I arrive in town.\"\n\n\"No worries. Speak to you soon.\"\n\nThe mechanic shop where I was working were already aware that I would be leaving. They were disappointed to see me leave, but I explained I wanted out of home and the city. I'd be leaving plenty of friends behind, but I wanted a completely new start. Most of my friends understood, stating they'd fly over and visit on the odd occasion. Whether they would actually do that or not was up to them.\n\nAs for home, I gave no indication of what I was up to. They only realised what was going on when I walked through the living room with a large suitcase, walked out to put that in the boot of my car. Walking back inside to grab the last bits and pieces, it was Charlie who stood at my doorway. \"Where are you going?\"",
        "\"Leaving.\"\n\n\"Are you moving out?\"\n\n\"Obviously.\"\n\n\"Where are you going?\"\n\nI just glared at her. \"Why the fuck do you care? Why are you even asking?\"\n\nI grabbed my backpack and made to walk out my bedroom door for the last time. Charlie stood in my way. \"Please talk to me, Matthew,\" she said quietly.\n\nI laughed. \"Talk to you right now? Why now, Charlie? We've barely shared a word in... shit, four, five years. Why are you attempting it right now?\"\n\nShe started to cry. \"I'm sorry. I didn't mean any of it.\"\n\nI bent down and glared into her eyes. \"Too fucking late for sorry now, isn't it?\" I growled, \"You made your feelings perfectly clear over a number of years. You had our parents wrapped around your little finger our entire fucking lives and did nothing but make my life miserable. All I ever wanted was a normal relationship with my sister. And you threw that back in my face. So fuck you.\" I stood up straight, towering over her. \"Now get the fuck out of my way.\"\n\nShe did the sensible thing of standing aside. Mum and Dad were at the table in the kitchen. They knew what I was doing, and knew that nothing they said or did was going to stop me. I took out my keys and took two off the keyring. \"House keys. Front door. Back door.\"\n\n\"Where are you going?\" my father asked.\n\n\"Somewhere far away from here.\"\n\nMum just cried quietly. \"Will you stay in contact?\"\n\n\"No.\"\n\n\"We have your number and email,\" Mum said quietly.\n\n\"You do.\"\n\nNeither of my parents moved. This was not a happy goodbye. \"Look after yourself, son,\" my father said.\n\nI nodded towards him. \"I will.\"\n\nDumping my bag in the passenger seat, I wasn't surprised to see my parents and Charlie follow me outside. Mum and Charlie were both crying. My father watched impassively though I knew the old man was probably breaking inside. I didn't look back at them once I'd turned and driven away.\n\nIt doesn't always take a week to drive from Sydney to Perth. You could do it in three days if you pushed yourself, though that would take at least two to three drivers. But I wanted to take my time, spending a couple of days in Adelaide before the long trek across the Nullabor. I made sure my car was in perfect condition, and that I had plenty of supplies, before undertaking the drive. It would take two to three days to cross, always remembering to stop and rest every couple of hours, but otherwise, it was a rather long and boring drive.\n\nUpon arriving in Perth, I quickly found the shop I would soon be working in, got to know a few of the staff and signed the contract. I sat down with my future boss to discuss details.\n\n\"You know, Matt, you could always join the Navy if this sort of work interests you.\"\n\n\"You think?\"\n\n\"You're not far away from 19. The perfect age to join, and with your experience already, they'd probably accept you without a problem. You're fairly fit, right?\"\n\n\"I like to keep myself in shape.\"\n\n\"Something to think about then. We'd love to keep you on for a long time, but not only will you have the fact you've worked with the Navy on your CV, but you'll get to see some of the world at the same time.\"\n\n\"Do you suggest this to all your new starters?\"\n\nHe nodded. \"We do, actually, because we do some work on behalf of them, and have no problem sending them possible recruits.\"\n\nI spent a year in my new role before I sat down with the boss again and suggested I was interested in joining the Navy. While sorry to see me go, he supported my decision and I quickly sent through my application to join. I was accepted pretty much immediately, passing the physical tests while my experience meant I was eventually given a role that suited me completely.\n\nAll in all, I spent ten years serving in the Navy. It was hard work most of the time, but I had the time of my life. I ended up travelling the world, spending time in bases across Asia, America and Europe. Time on a ship was never dull. There was always something to do. Continuous maintenance, while things failed more often than you'd care to realise. I made friendships that would last a lifetime, though we came from all parts of the country.\n\nThrough it all, I barely gave those back in Sydney a second thought. I'd changed my number as soon as I'd reached Perth, but I kept the same email address, just in case something disastrous did happen, such as one of my grandparents passing. I received the occasional email from Mum and Charlie, though I read them then deleted them. I said I wasn't going to keep in touch, and I was keeping my word. I felt like a right bastard, as I occasionally typed out a response to let them know that I was at least still alive, but they only ever sat as drafts. I never pressed send.\n\nThe occasional girlfriend asked about my family. I told them the truth. They were back in Sydney, I had no contact with them. A few tried to dig further, and they were shut down. None of the relationships lasted too long. I guess they thought I was damaged goods because of the relationship I had with the relatives. I never said anything bad about them. Not even Charlie. I said my parents were good people. My sister was a good person. So I guess they were left thinking I was the problem. In all honesty, I was just as much to blame. Sometimes I knew I was completely to blame. I'd walked out in the end. But it was too late for things to change.\n\nI will be honest. All the anger and bitterness I had felt upon leaving had disappeared rather quickly, once I was out on my own. I wouldn't exactly say I missed them, but I knew I was fooling myself, as I felt incredibly alone at times. I know mates I'd made on the ship had family waiting for them whenever we returned to shore. As for me, I simply got off the boat and returned to the small apartment I kept. At the end of my last tour, I received an honourable discharge and thanks for my service.\n\nTen years pass quicker than you realise. I was now 30 years old, single, rather good looking, or so I thought whenever I looked in the mirror, as I was tall enough, looked after myself, still had all my brown hair, kept short, with blue eyes and what I'd been told was a masculine face. I know I certainly turned heads as I walked down the street. I'm not being cocky, it was hard to ignore the occasional stare, from females or males.\n\nExpecting to spend a couple of weeks just relaxing, I opened up my email account to find a message from home. The messages from Sydney had diminished over the years, I guess everyone finally giving up trying to get me to respond, but they still sent one around once a month. This one was from Charlie. It simply said 'Please read me'.\n\nOpening the attachment, it was news I had always expected to receive eventually.\n\nNanna is in a home with late stage Alzheimer's. She won't last more than another couple of days. We're already organising the funeral. I'm not sure if you'll even read this, but we'd all love for you to come home and at least say goodbye. I'd love for you to come home too.\n\n\"Love for me to come home?\" I wondered aloud.\n\nI figured it was time to bury the hatchet. Mostly because I'd been fooling myself. I was lonely. And I missed my family. Definitely Mum and Dad, but even Charlie, saddened that our relationship was non-existent, knowing it was my fault. I booked a flight home for early the next day, made sure I had a hire car ready to collect and packed a bag. Arriving at the airport the next day, I'll admit I actually felt a little nervous about returning home, unsure of what sort of reception I'd get. Those words were still floating through my head.\n\n'I'd love for you to come home too.'\n\n*****\n\nI parked up the hire car on the side of the road in front of the house. It was exactly as I remembered. Dad kept the front lawn maintained. Mum tended her flower garden. There were three cars in the drive, all rather new. I guessed two were my parents, while the third may have been Charlie's. I got out and collected my bag, walking up the pathway to the front door and knocked.\n\nMum opened the door and nearly collapsed in surprise. \"Oh god,\" she whispered before she wrapped her arms around me. \"Matthew!\" she cried and then burst into tears.\n\n\"Hello, Mum,\" I said quietly. She looked up at me and I smiled. Probably the first time she'd seen me smile at her since I was around 13 or 14. That just made her cry a little more. I just closed my eyes and hugged her tightly. Any residual ill-feeling that may have existed in the back of my mind evaporated as soon as I saw her. She was my mother, and I loved her.\n\nI'm not sure how long she hugged me until I heard a cleared throat, looking up to see my father. Mum let me go of me as he stepped forward. \"You look different, Matthew.\"\n\n\"It's a long story, sir.\"\n\nI noticed the look of surprise at 'sir'. \"How are you?\"\n\n\"I'm good.\"\n\nHe held out his hand, which I accepted, before he dragged me forward to embrace me, hand patting me on the back. \"Damned good to see you, son.\" I swear I heard the old man's voice break.\n\nI blinked rapidly. \"You too, Dad.\"\n\nWe cleared out throats and stepped back, Mum hugging me again. \"It's been way too long,\" she whispered.\n\nOf course, I felt guilty, knowing I hadn't communicated with them for over ten years. I'd had reasons at the time that, looking back, were rather petty. No, not just petty. Completely and utterly stupid. I'd put up a wall between us that didn't need to be there. Looking back at how I was a teenager, I couldn't help but shake my head. I shouldn't have been angry at my parents. Or, at least, I shouldn't have been angry at them for as long as I was.\n\n\"I'm sorry,\" I said, \"I was an idiot. A stupid, hot-tempered, immature idiot.\"\n\n\"Don't, Matthew. It's okay,\" my father said, \"You're here now. That's all that matters.\"\n\n\"At least we know you're alive now!\" Mum exclaimed, \"And you have to tell us everything you've been up to.\"\n\n\"And Nanna?\" I asked, \"The last message said...\"\n\nMum sighed. \"She's somehow holding on. Would you like to see her for the last time?\"\n\n\"What about Pop?\"\n\n\"Soldiering on, as always.\"\n\n\"You want to go see her and say goodbye?\" Dad asked. I nodded. \"Charlie is there now.\"\n\n\"Oh...\"\n\nMum stepped back and looked at Dad. \"Is that a problem?\" Dad asked gently.\n\nI shook my head. \"No. It's fine.\" I thumbed outside. \"We can go now if you want. We can take my hire car. Guess I'll just need to dump my bag first.\"\n\n\"You can take your old room, Matthew,\" Mum said. That surprised me, and my face must have shown that. \"We always hoped....\"\n\nI wandered through the house towards my old room, opening the door to be transported to the past. The double bed had clearly been made up for a potential visit. The walls had been painted, the few posters I had on the walls having disappeared. The closet was empty of clothes; I'd taken everything with me when I'd left. The TV and stereo I had, that I'd left behind, were still in place. But it was obvious that the parents had never planned for this to be anything else.\n\n\"We should talk when we get back, Matthew,\" I heard my father say behind me.\n\nI put my bag on the bed and turned to face him. \"Sure thing, Dad. I guess we have a lot of catching up to do.\"\n\nHe met my eyes and nodded. I think he wanted to say something else, but kept it to himself for the time being.\n\nThere wasn't a lot of talking on the way to the care home. It wasn't really the time to start sharing our thoughts and feelings about everything. Mum had insisted sitting as shotgun, and the car being an automatic, she spent the entire time holding my hand. After parking up at the care home, the three of us signed in before walking through long, well-lit corridors towards the room. My parents walked in first, hearing Charlie say hello to them, before I walked in a couple of seconds later.\n\nShe turned towards me and dropped the plastic cup of water she was holding. \"Holy shit,\" she muttered, \"Matthew, is that you?\" I nodded, a little speechless myself.\n\nCharlie was... She was just... beautiful. I know I stared at her, jaw hanging open slightly, as her eyes definitely ran up and down my physique. She slowly walked towards me, her eyes drinking me in, before she wrapped her arms around me. I didn't stop her, completing the hug. I racked my mind, wondering when we had last held each other in such a way. \"I've missed you,\" she whispered into my chest. I wasn't sure how tall she was. Maybe 5'6 at most. I felt her breasts press into me. She smelled... wonderful. Blood started to flow south, which surprised the hell out of me.\n\nEver read those stories of siblings who'd never met that had an attraction to each other, not knowing they were related? That's what I was feeling right now, because still in my mind was the fact I hadn't thought of Charlie as a sister for years.\n\nMum cleared her throat, breaking up our hug, though I couldn't help notice the smile on her face, and I know I returned it. Then my attention turned to Nanna. Pop was on the opposite side of the bed. He looked old, but still fit as a fiddle. He nodded towards me. \"Matthew, good to see you.\"\n\n\"You too, sir,\" I said, reaching across to shake his rather bony hand. I noticed the surprise on his face, and my fathers. They obviously had no idea why.\n\nI then turned my attention to Nanna. She was awake, though there was next to no life in her eyes. Certainly no indication she recognised me at all. The vibrant, elderly woman I remember from over a decade ago had disappeared. It's not that she didn't look well, though her face was rather gaunt, and it was hard to ignore the machinery around her that probably kept her alive. It was just clear that she was waiting to die.\n\nPop took hold of her hand and said something that damn near caused me to break down. \"I think she's been waiting for you to return, Matthew.\"\n\n\"We all have,\" Mum said quietly, \"Before she started to go, Mum always wondered when you would walk through out door again. At least you're back in time to say goodbye.\"\n\nWe spent at least an hour in the room, not talking much. It wasn't the time or place. Mum and Charlie took turns sitting next to me on the small couch, Mum holding my hand while Charlie wrapped an arm around my waist. Not too difficult, though it would have been harder around my shoulders, considering they were rather broad.\n\nA nurse eventually wandered into the room and politely informed us that visiting hours were over. We all kissed Nanna goodbye, before Pop spoke to the nurse in private. He would stay, as we knew there wasn't long to go now. \"Are you sure you don't want us to stay?\" Mum asked.\n\n\"Go home and be with your son. They will call when it happens. I'll be fine.\" Pop wasn't one to show emotion. And he wasn't about to fall apart now. From the little I'd heard from them, he'd been watching his wife slowly die over the past five years. He'd long said goodbye to her. Now he was just observing her finally be at peace. I had a feeling Mum, Dad and Charlie felt the same.\n\n\"I don't know about you, but I can do with a drink,\" I stated once the four of us were in my car, \"Where's the nearest bottle shop?\"\n\n\"I can direct, Matthew,\" Charlie said, my parents in the backseat.\n\nI picked up a bottle of Jack Daniels, while the others grabbed whatever they wanted. We stopped for a take-away lunch on route as well, gathering around the table once back at home, digging into the burgers and chips we'd bought. It was the first time we'd sat down and eaten as a family in over a decade. Mum couldn't stop smiling, while Charlie sat next to me, dragging her chair closer until her arm was rubbing against mine. Once dinner was finished, we sat around in silence for a few minutes, just sipping at our drinks.\n\n\"Should we move into the living room and talk, Matthew?\" my father finally suggested.\n\n\"Sure.\"\n\nThe living room had two couches. Mum and Dad sat on one, I sat on the other with Charlie beside me. Again, she sat as close as possible to me, leaving me a little confused as to why she wanted to be so close to me. She looked me in the eyes and smiled. I returned the gesture, resulting in her just cuddling into my side. My confusion increased as my body started to react again to the presence of a rather attractive woman. It didn't help that I hadn't looked upon the woman next to me as a sister in years.\n\n\"So, where have you been, Matthew?\" Dad asked.\n\n\"You want the long or short version, sir?\"\n\n\"We have all evening, Matthew. Whatever you want.\"\n\n\"Okay, let's see. The day I left, I spent a week driving all the way to Perth. I'd lined up a job there working on ships.\"\n\n\"We're aware you worked as a mechanic,\" Mum said, \"But you were good at it?\n\n\"Yeah, I like to think so. Have some good recommendations from everywhere I've been employed. So I worked there for a year before I joined the Navy.\"\n\n\"You joined the Armed Forces? Served our country?\" I nodded, and I met his gaze. I don't think I'd ever seen him so proud of me until that moment. It obviously explained the occasional 'sir'.\n\n\"Served for around ten years until just after my 30<sup>th</sup>. Been all around the world. Singapore. Los Angeles and San Fran. Ended up in Europe at one stage, working alongside the Royal Navy.\"\n\n\"What rank did you reach?\"\n\n\"CPO.\" I noticed three confused looks. \"Chief Petty Officer. The only reason I was able to be discharged when I wanted is that there was an adequate replacement on the ship.\"\n\n\"So did they call you 'Chief' like in the movies?\" Mum asked, giggling to herself.\n\nI couldn't help smile. \"Yes, they did. And serving is nothing like you see in the movies. When you're at sea, it's pretty much non-stop. These ships are the best money can buy, but it's amazing how often something will go wrong. Then again, shore leave could be... ah...\" I trailed off, though my father gave me a knowing glance.\n\n\"Subs or ships?\" Dad wondered.\n\n\"Frigates. To be honest, it was lucky Charlie's message arrived when it did. I'd only just arrived back from my last tour.\"\n\n\"So what are your plans now, son?\"\n\nI shrugged. \"I hadn't given it a lot of thought, to be honest. Take a break, I guess.\"\n\n\"Have a wife or girlfriend?\" Charlie wondered.\n\n\"No. I'm single.\"\n\n\"Why?\"\n\nI shrugged again. \"Haven't found the right woman, I guess.\"\n\n\"So no grandkids?\" Mum asked.\n\n\"No, Mum. Or, at least, none that I'm aware of.\"\n\n\"Matthew!\"\n\nI laughed. \"Don't worry, Mum. I'm always careful.\"\n\nWe continued to chat until the late afternoon, when Mum said she'd start making some dinner. Charlie disappeared, leaving me with Dad, where we chatted about nothing in particular. Mostly about sports, as despite the time at sea, I always managed to keep up to date with the latest results. I asked about his job. He said he was now counting down until his retirement. Mum had retired early and now just looked after the house. I asked about Charlie, Dad suggesting I should ask her instead of him.\n\n\"She missed you, you know,\" he finally said, \"I'm not sure what happened between you two, but she always cared for you. Loved you as an older sister should. She was heartbroken when you just walked out on us.\"\n\n\"Dad...\"\n\n\"Tell me the truth, son. What happened? What caused you to... hate her, us, for so long?\"\n\nI leaned forward, resting my elbows on my thighs, running a hand over my short hair. I sensed movement and looked up to see Charlie enter the room, no doubt intent on hearing what I had to say.\n\n\"I remember the exact day. The day you found cigarettes in my room when I was 14 years old.\" I noticed the looked shared between Dad and Charlie. \"They were not fucking mine,\" I stated softly, keeping the anger out of my tone for the moment, \"But you didn't believe a word I said. You never did. From that moment, I let only the bad thoughts consume me. In the end, I couldn't stop even if I wanted to. I was committed, all in, I guess you could say.\"",
        "\"We know about the cigarettes. Charlie admitted they were hers, though only a little later.\"\n\nI looked at her, and she appeared to be on the verge of tears. I kept looking at her as I spoke. \"Then add to that she treated me like shit for I don't know how long. The golden child. How the hell was I supposed to react? I got blamed for everything. Absolutely everything. Apparently I was supposed to know better, despite I was the youngest one. All I ever wanted was an older sister who... shit, showed that she cared for me. Helped guide me through life. Show that she had a little love for me. Instead, I got diddly fucking squat.\" I was getting angry, as although I'd dealt with everything, just thinking about it made me caused feelings I'd long got rid of to return. Dad and Charlie noticed, and I got to my feet. \"I'm going to step outside for a couple of minutes and calm down. Don't worry, I'm not going anywhere. I'm not the same person I was when I left. Just thinking about it, though...\"\n\nDad nodded as I wandered outside, eventually sitting under the tree in our front yard, leaning back and closing my eyes. I heard footsteps approach but kept my eyes closed, sensing someone eventually standing in front of me. \"I always loved you,\" a tiny voice said.\n\n\"Could have fooled me,\" I stated, unable to keep the bitterness out of my tone.\n\nFootsteps again, and I felt the presence of someone close to me, then two smaller hands take mine. \"I didn't know you felt that way.\"\n\nI opened my eyes to see Charlie, tears running down her cheeks. \"I was a kid, Charlie. All I ever did was look up to you. Hell, I know for a fact I loved the shit out of you when I was a kid. I still don't know what I did wrong, or what I did to upset you, but you made my life hell for years. First it was the relentless teasing, then I was just.... Fuck, I don't know. Add to that the fact Mum and Dad never believed a word I said, is it little wonder I eventually told you all to fuck off.\"\n\n\"I'm sorry.\"\n\nI couldn't help smirk. \"I know. Those were the last words you said to me.\"\n\n\"Do you believe me now?\"\n\nI took a deep breath and kept her waiting. Then I nodded. \"I do. I did then. I just put it my mind not to believe you.\"\n\nShe held back a sob and, to my surprise, pulled me forward to hug me before she well and truly started to cry. I couldn't help hug her in return. \"Did you mean it?\" she asked through her sobs.\n\n\"Mean what?\"\n\n\"For me to fuck off and die?\"\n\nMy stomach dropped. She remembered. \"No, of course not. I was angry. So angry at you. At them.\"\n\n\"And now?\"\n\n\"I'm here, aren't I?\"\n\nShe leaned back and looked at me in the eyes. I hadn't been this close to her since I was a kid. I noticed her eyes take in each inch of my face, my eyes taking in hers in return. Her eyes were gorgeous, full of life and mischief. Her nose was perfect. Her lips were... I could have kissed them. I noticed a slight colour to her cheeks as I looked at her in silence. I ran my right hand through her hair, watching as her eyes closed, holding back another sob. \"Do you know how long I've waited for this?\" she asked quietly.\n\n\"For what?\"\n\n\"To have you hold me.\"\n\nI thought that a strange turn of phrase. Not hug her. Hold her. \"What do you mean?\"\n\n\"I've missed having my little brother in my life. And now he's returned, a tanned, tall, handsome... beefcake!\" I couldn't help laugh as she snuggled into me again, her head against my chest. It was all rather awkward, but I didn't mind. I was beginning to realise just how alone I had felt for years. I ran my hand gently up and down her back, feeling her get comfortable in my arms. It felt... I hadn't felt so close to anyone ever.\n\n\"Are you going to stay?\"\n\n\"I will for the time being.\"\n\n\"And after?\"\n\n\"I honestly haven't thought that far ahead. I'm still adapting to this. I can't remember the last time I hugged you before today.\"\n\n\"You were 11,\" she said quietly.\n\n\"You remember?\"\n\nShe started to cry again. \"I was a bitch. But it was because... I....\"\n\nI kissed her forehead. \"It's okay.\"\n\n\"It's not. I forced you away from us for years.\"\n\n\"I wasn't much better. I was a right fuckwit before I left.\"\n\n\"That was my fault. And I knew I was the cause, which is why I occasionally tried to... talk to you. But you looked at me with such hatred in your eyes whenever I did. And then when you said what you said...\"\n\n\"Guess it's my turn to say I'm sorry.\"\n\nShe leaned back and smiled. \"Apology accepted,\" she said softly, before leaning up to kiss my cheek. She met my eyes again and I felt this... urge, real sudden urge to kiss her. It had been so long since I'd seen Charlie as a sister, in my mind she was just a gorgeous, 33-year-old brunette, who happened to think I was handsome. I'm not sure what crossed her mind, but her eyes suggested something too. Through it all, I'd missed the fact that I'd been getting hard. It had been a long time since I'd had any female company.\n\nCharlie got to her feet and offered her hand. \"We should go back inside.\"\n\nI took it and she refused to let go, though I had to stop and adjust myself. Charlie noticed and just smiled. I shrugged, almost sheepishly. \"Long time on a boat,\" I offered as an explanation.\n\nWe ate dinner for the first time as a family in years, and the one sound I enjoyed was laughter. Mum, Dad and Charlie regaled me with stories of events over the past ten years and more. My parents were still very much in love but there is no doubt that my return had helped put the smile on their faces. Charlie stayed as close to me as possible, almost as if she was worried I was going to disappear. After dinner, we continued to sit and chat, enjoying a couple of drinks until Mum and Dad said they were heading to bed.\n\nMum wanted a hug. A long hug. In fact, it took Dad to disentangle Mum before he hugged me too. I'd never heard his voice with as heavy emotion when he said, \"Damned glad to have you home, son.\"\n\n\"I'm glad too, Dad.\"\n\n\"Actually, before you go to bed, Matthew, I have something for you,\" Mum said.\n\nShe took my hand and led me into their bedroom, sitting me down on their bed. She opened her wardrobe and grabbed two bags, setting them down in front of me. I looked at her, unsure of what this was. \"What's in the bags?\"\n\n\"All your birthday and Christmas presents.\"\n\nStraw that broke the camel's back. I couldn't even look before I stood up, hugged Mum and burst into tears. I don't know how many times I said sorry. For being an asshole. For disappearing for so long. For leaving them thinking that their only son hated them. Charlie eventually showed up and I hugged her too, a little tightly, as she giggled when saying she was finding it difficult to breathe.\n\n\"How long have you wanted to let that out for?\" Mum asked once I'd wiped my cheeks.\n\n\"15 years or so, I guess.\"\n\n\"Take them with you, Matthew. I know they won't mean much...\"\n\n\"They'll mean everything, Mum. Why did you keep them?\"\n\n\"They were your presents. And I knew you'd come home eventually.\"\n\n\"Never gave up hope?\"\n\n\"My boy was going to return to us one day.\"\n\nI collected the bags, kissed Mum on the cheek, wished my parents goodnight, before I headed to my bedroom, feeling Charlie follow me closely, though she headed to her own room. That surprised me, though I realised I didn't know if she lived at home, or had her own home, or even had a boyfriend or husband. After placing the bags in my room, I grabbed a towel and headed to the bathroom, enjoying a shower, shaving and brushing my teeth, before heading to bed.\n\nI was busy reading a book when there was a knock at the door. \"It's open,\" I called. The door opened, revealing Charlie standing in her pyjamas. I couldn't help smile as she looked adorable. \"What's up?\"\n\n\"Can I sleep with you tonight?\"\n\n\"What?\"\n\n\"I haven't seen my little brother in over ten years. I want to sleep close to him. I'm still wondering if this isn't all some dream.\"\n\nThankful I at least wore shorts to bed, and that at least it was a double, I put the book on the bedside table before I shuffled across. \"Okay, if you want to.\"\n\nShutting the door behind her, she glided across the room before sliding herself under the covers. I turned towards her as she got on her side to look at me. It was.... I guess it should have been weird, but it didn't feel weird. I'm not exactly sure what I felt at that moment. But when she raised a hand to caress my cheek, my cock immediately responded by hardening. I thought it was just the fact a female had touched me for the first time in a quite a while.\n\n\"So, you're single?\" she asked.\n\n\"Yeah.\"\n\n\"Why?\"\n\n\"Could never find the right woman.\"\n\nThen it hit me like a tonne of bricks, and my face must have shown it. Most of the women I'd been out with shared similar features. Brunette. Blue eyes. Curves, but slightly athletic. Two decent handfuls of boob. Shorter than me. Intelligent. Mischievous. Adorable. Beautiful.\n\nLike her. Fuck... But it wasn't just me. There was... something about her as well. The teasing. The pushing me away for years. But then, in an instant, she was trying to be my friend again, as if... she'd sorted out her feelings. Fuck, fuck, fuck. Were we both fucked up completely and only just realising it now? Or had she felt this way all the time and... Did my parents figure it out and that's why...?\n\nIt was a lot for my mind to cover in the space of five seconds and I simply didn't know what to think. But maybe that was what my immature mind did, protecting me from doing something even worse?\n\n\"Something wrong, Matthew?\" she wondered, her voice barely above a whisper, like she knew what I was thinking.\n\nI cleared my throat. \"No. No. Nothing at all. What about you? Boyfriend? Husband? Kids?\"\n\n\"No to all three.\"\n\n\"Never married?\" She shook her head. \"Why not?\" She shrugged. \"Boyfriends?\"\n\n\"A few but none of them lasted too long.\"\n\n\"What do you do for a career?\"\n\n\"I'm a graphic designer.\"\n\n\"Really? That's quite the occupation. Always knew you had brains.\"\n\nShe smiled at the compliment. \"I definitely enjoy what I do at least.\"\n\n\"Where do you live?\"\n\n\"Here. I've tried moving out but it didn't take. Mum and Dad said their kids would always have a home here. Some would think a 33-year-old woman still living at home must have something wrong with her, but I've never had any real reason to leave.\"\n\n\"I have a nice little apartment in Perth. Not that I see it all that often. I'll usually rent it out while I'm on tour.\"\n\n\"And now?\"\n\nI shrugged. \"It's where I lay my head at night at most. I don't have what I'd call a home.\"\n\nShe shuffled closer to me. \"You have one here, Matthew,\" she said quietly, the she smiled, \"Still, you'll have to show it to me one day.\" I couldn't help raise eyebrows at that. \"I've never been to Perth. Barely been out of Sydney except one or two holidays.\" She shuffled even closed, and I automatically wrapped my arm around her waist. Her face was now incredibly close to mine. \"I've missed you so much,\" she whispered.\n\n\"I've realised since getting back I feel the same way.\" I kissed her forehead, noticing she closed her eyes and smiled at the contact. \"We should get some sleep. It's been a long and I'd admit rather emotionally exhausting day, and I'm knackered.\"\n\nShe shuffled so close her head was under my chin, feeling her left arm wrap around me. Our legs crossed another, and I was left thinking this was all incredibly intimate. There was a small kernel in my mind that this was my sister. The rest of my mind said she was an available woman. I'll tell you what, though. I slept like a log.\n\n*****\n\nCHAPTER TWO\n\n\"Matthew,\" I heard a voice call. I thought I was dreaming. Then I felt a hand ruffle my hair. I opened my eyes to see Mum looking down at me. She tried to smile but she looked sad. Then I realised I was spooned against Charlie.\n\n\"Oh shit. Mum... It's....\"\n\n\"You were comforting your sister, Matthew,\" Mum said gently.\n\n\"Um, yeah.\"\n\nMum chuckled. \"Her clothes are still on, Matthew. You haven't done anything wrong.\"\n\nShe obviously wouldn't have known about the erection currently poking my sister in the butt, who was in the process of waking up too. I couldn't help notice her press down into my cock, hearing her gasp slightly. Then she noticed Mum and tried sitting up. I just held her in place. \"Mum!\"\n\n\"I just had a phone call, kids.\"\n\nShe didn't have to say anymore. \"I understand, Mum,\" I said.\n\n\"There's not a lot we can do now. We've said our goodbyes. I'm up, though, so if you want breakfast soon, just come out and join me.\"\n\n\"Are you okay, Mum?\" I asked.\n\nShe ruffled my hair again. \"My boy is home. I'm a little sad, but my mother passing has been expected. My son coming home is the surprise. That makes me very happy.\" She looked down at my sister. \"I'll leave you two alone for now. Come join me whenever you want.\"\n\n\"What's the time?\" I called, just as she was about to leave.\n\n\"A little after 7. Don't worry, it's not too late or early.\"\n\nMum wandered out, closing the door quietly behind her. Charlie just wriggled her butt into my groin. \"Jesus, Matthew,\" she gasped.\n\n\"It's a natural thing to happen,\" I stated with a chuckle, \"Helps when a pretty woman is in bed next to me though.\"\n\nCharlie turned over to face me, a smile lighting up her face. \"You think I'm pretty?\"\n\n\"I'd use the word beautiful to describe you, Charlie.\"\n\nShe kissed me. And I don't mean the sort siblings would normally share. It was the most passionate kiss I'd received from anyone in a long time. In fact, of all the women I'd been with, I couldn't remember an equal to it. And I couldn't help respond, holding her close to me, our tongues meeting as I felt Charlie wrap a leg around me, my cock pressing into mound and I hear her whimper.\n\n\"Holy shit,\" I exclaimed, having to break the kiss, \"Charlie, where the hell did that come from?\"\n\nShe looked at me with such intensity, I had difficult holding her gaze, watching her take a number of deep breaths. Then she seemed to realise what she'd done. She urgently disentangled herself from my arms and legs, lifting the covers and off she went. I was so surprised, I barely had a chance to react. \"Charlie?\" I managed to ask.\n\nShe looked back as she crossed the room to the door. \"Sorry... Sorry...\" Then she disappeared.\n\nStill a little confused by what just happened, I put on a shirt and headed into the bathroom. I needed to piss, always difficult with a hard-on, then realised the thing wasn't going down. Knowing the door was locked, I had a five knuckle shuffle. Having spent a decade on a boat for much of the time, I had quite the active imagination, but surprised myself by thinking of Charlie as I jerked off. And I didn't feel guilty one little bit. After I'd finished and cleaned up, flushing the toilet of the evidence, I wandered out into the kitchen, Mum at the stove, cooking some bacon and eggs.\n\n\"Smells good, Mum,\" I said, as she turned around to give me a hug.\n\n\"Expect plenty more of those, sunshine.\"\n\n\"What? Bacon and eggs or hugs?\"\n\nMum laughed. It was a good sound. \"Take a seat. Your father should be out in a minute. Where's Charlie?\"\n\n\"Oh, she headed to her room. Guess she may have wanted a bit more sleep.\"\n\n\"She'll be out shortly. She'll want to spend as much time with her little brother as possible.\" Then she looked me up and down. \"Hmmm. Perhaps little isn't the right word, considering you now tower over all of us. When did you get so big and strong?\"\n\n\"The Navy helped.\"\n\n\"So I guess you have a big appetite?\"\n\n\"I try to eat healthy, but when I'm working, yeah, I eat a lot.\"\n\nDad appeared a minute later carrying his paper and glasses, wishing me good morning, kissing his wife on the cheek, before he sat down and started reading. Charlie appeared just as Mum was putting plates in front of Dad and I. She smiled at me somewhat awkwardly, though sat in the same seat next to me, shuffling it across to be a close as possible.\n\nWe ate in silence. No-one appeared relatively upset by the news Mum had obviously received. I guess everyone had made their peace with her loss long ago. I was still a little stunned about what happened in bed with Charlie to begin thinking about Nanna passing.\n\n\"The funeral will be in a couple of days. We had everything organised. To put it bluntly, we were just waiting for Nanna to pass,\" Mum said once we all sat back, breakfast completely, coffee in hand.\n\n\"Do you want to do anything, Matthew?\" Dad asked.\n\n\"Might catch up with an old friend or two, though to be honest, I've fallen out of contact with pretty much all of them.\"\n\n\"We could always do something,\" Charlie offered.\n\n\"Sure, why not? What would you like to do?\"\n\nShe patted my hand. \"I'll think of something.\"\n\nMum and Dad disappeared after breakfast, stating they'd go collect Pop and start preparing things quickly. That left me alone with Charlie. I sat on the couch, watching a bit of television. I wasn't really paying attention, I rarely watched TV, but I had nothing better to do. I didn't see her until near lunchtime, when she wandered out wearing a part of tight fitting jeans, showing her shapely legs and butt, and a tight t-shirt. She'd done her hair, and if I didn't know any better, even had on a little make up. \"You want to head out now?\"\n\n\"Yeah, just give me a couple of minutes to get dressed. Where do you want to go?\"\n\n\"Why not head into Parramatta? We'll get some lunch and then perhaps walk around the park?\"\n\n\"Sounds good,\" I replied with a smile. The smile she returned... Well, it would have been very easy for me to misinterpret.\n\nShe made sure to hug me as I walked past, letting me go after a couple of minutes. After throwing on a pair of jeans, shirt, jacket then trainers, I wandered back into the living room. Charlie looked me up and down in silence a couple of times before wolf whistling.\n\n\"Damn, Matthew, you look good.\"\n\nI just smiled as I grabbed my sunnies and car keys. Once settled in the car, Charlie surprise me again by grabbing my hand, locking our fingers together. Another intimate gesture. I found myself liking it, squeezing her hand in reply, earning another smile though I couldn't see her eyes behind her own sunglasses. I parked up in Westfield's and then we walked into the mall. Both of us reached to hold the others hand. I have absolutely no idea why but it felt entirely natural. I was beginning to understand just how much I'd missed her presence, wasting so much time trying to make myself believe I didn't care and that I hated her. With each minute that passed, I realised I'd spent over a decade fooling myself.\n\nIt appeared the line between love and hate was thin. And the fact I felt hate meant I still cared.\n\nAfter lunch, where we shared little conversation but plenty of eye contact and smiles, left thinking this was a date rather than a reunion of siblings, we walked through town towards the park. Still hand in hand, I walked slower and soon held Charlie around the waist as she leaned into me, ending up walking to the river that ran near the edge of the park.\n\nSitting down side by side, the sun warming our faces, the silence continued for a little while longer. It wasn't awkward or uncomfortable. Maybe we were both lost in thought. I know I was, left wondering what was going on, and why my heart was beating at a million miles an hour. And why I had a building, burning desire to make love to the woman next to me. I was left thinking I was more fucked up than I realised.\n\nWe turned to face each other at the same time. It was like one of those situations, where you're not sure if you want to say something, or do something. I grabbed her hand and moved her so she straddled my lap, facing me. I removed her sunglasses so I could see her eyes, removing my sunnies so she could see mine. I ran a hand down her cheek, watching her eyes close and a slight smile cross her lips, running it back up and over her ear. Then I pulled her in close and kissed her, gently at first, just for a few seconds, before letting her go.",
        "\"What's going on, Charlie?\" I asked quietly.\n\n\"I don't know. But I know I want... this. You?\"\n\n\"Honestly, I'm shitting myself.\"\n\n\"Why?\"\n\n\"Because I want to do things to you that I really shouldn't. You're my sister.\" She surprised me by starting to cry. I had no idea why as I just hugged her closely. \"What did I say?\"\n\n\"You don't remember?\" I jogged my memory and then it hit me. God, if reuniting was going to be like this, I was going to need a lot of booze. Or something... \"You said I'm not your sister. That I don't exist.\"\n\nI held her face gently in both my hands. \"You do exist to me right now, Charlie. You're the most beautiful thing put on this earth.\"\n\nShe threw her arms around me and kissed me again. Her tongue was in my mouth within seconds, not the stupid shit you see in porn, but the sort that says 'I love and want you desperately.' Neither of us wanted to break it, hearing both of us exhale through our noises, and I felt her slowly start to grind against my burgeoning erection. I gently rolled her over so she was on her back, her legs wrapping around me and I know I pressed down into her as she whimpered into my mouth, watching her eyes open in surprise, before there was no missing the lust and love in them. I had to break the kiss again.\n\n\"Are we really doing this? I only got back yesterday.\"\n\n\"I don't know. It's happening so fast.\"\n\n\"Yeah...\"\n\n\"Do you want me, Matthew?\" I couldn't help but nod. \"Good. Because I definitely want you.\"\n\n\"You do?\"\n\n\"God yes. You have no idea how much.\"\n\n\"Since when?\"\n\nShe clammed up immediately and I knew it was a secret, perhaps one she wasn't ready to share. At least, not yet. It left me wondering for how long, but the thought was 'Has she really wanted me for this long, as in over ten years? But why? I was an asshole to her for years in return. And I don't buy into the whole women like assholes thing. So was it before all that? Fuck, too much to think about.'\n\n\"Should we go?\" I asked.\n\n\"Yeah, we should.\"\n\nI got to my feet and helped her up. We hugged again and I don't think either of us could help kissing again, though managed to keep our hands from exploring... too much. Finally, we broke apart, putting our sunglasses back over our eyes and headed back to the car. It was amazing how something as simple as hold each other's hand conveyed all the feelings required, as she didn't let my hand go the entire drive home, thankful I was driving an automatic.\n\nMum and Dad were home as we walked in the door, looking up from their position on the couch, turning off the TV at our appearance. Mum smiled, almost as if she knew exactly what we'd been up to. \"You kids have fun?\" Dad asked.\n\n\"It was wonderful, Dad,\" Charlie stated, looking up at me and I couldn't help notice the look in her eyes again.\n\nShe didn't just love me. She was in love with me.\n\nAnother tonne of bricks on the mind and soul of one Matthew James Thompson, wondering how long she'd felt that for me.\n\n\"You kids hungry?\" Mum asked, breaking my reverie.\n\n\"Not right now, but definitely a little later.\"\n\n\"Me too, Mum,\" Charlie added.\n\n\"Might just go lie on the bed for a while,\" I said.\n\n\"I'll shout when dinner is ready.\"\n\n\"Thanks, Mum.\"\n\nUnsurprisingly, Charlie followed me down the hall and into my room, closing the door behind her. A part of me wanted to take her in my arms, strip her naked and do many, many naughty things to her. The other part, the more sensible part of my brain, kept warning me that, despite the fact I hadn't seen her in over ten years, she was still my sister, and I definitely shouldn't be thinking about having sex with her. Though I was left wondering if her mind was as conflicted.\n\nAfter taking off my shoes, I lay back on my bed and flicked on the TV, simply for a bit of background noise. Charlie didn't even hesitate, immediately lying beside me. It took all of thirty seconds before we were all over each other, almost like a pair of teenagers, mouths joined, hands wandering. I had my hand under her shirt, feeling soft skin of her back, gently running my hand up and down her spine. She smiled into my mouth as I then kissed down her cheek onto her neck, hearing her gasp when I did.\n\n\"Our parents are home, Matthew,\" she whispered.\n\n\"What do you think I'm going to do?\" I asked in reply.\n\n\"I don't know, but I'm not sure I want to stop you.\"\n\nWe continued to make out as I ran a hand up her body, realising for the first time that she didn't have a bra on. Unable to hide the slight smile, I readjusted my hand to her front and managed to get high enough to one of her breasts, unsurprised her nipple was hard as my hand brushed against it.\n\n\"I do believe you're feeling up your sister,\" she breathed.\n\n\"I believe I am.\"\n\n\"Would you like to feel more of me?\"\n\nI knew what she meant, though she even helped me by undoing the button of her jeans and lowering her fly, then actually grabbed my hand and placed it at the top of her panties. I kissed her again as I slowly lowered my hand underneath the band of her panties, smiling to myself as I felt hair above her pussy.\n\n\"I keep it neat,\" she stated with a smile.\n\n\"Good,\" I stated, keeping my eyes open to watch her reaction as I ran a finger up her slit. She was wet. So very wet, that it was actually a surprise to me that I'd turned her on so much. I teased her, running my fingers on the outside of her pussy, up and down her labia, gently brushing over her clit, before teasing her entrance.\n\n\"Oh god, you're such a tease,\" she groaned, though she smiled before kissing me again. I then gently inserted a finger inside her, watching her mouth open slightly, her eyes close at the same time before an even larger smile formed. I'd been with enough women over time to have a good enough idea of what I was doing, but for some reason, I was left wanting to impress Charlie. I really wanted to make her cum hard.\n\nI inserted a second figured and, though difficult thanks to the confines of her jeans, managed to start the correct gesture that I knew would hit her g-spot. She kissed me hard again to cover her moans, unsure if our parents would hear us or not. We were both in our 30s, but the fact we were siblings probably wouldn't impress our parents.\n\n\"You're going to make me cum,\" she said.\n\n\"That's the general idea of what I'm doing, Charlie,\" I stated with a chuckle.\n\n\"So good.\"\n\nI then removed my fingers for a second and surprised her by sucking my fingers. That actually made her blush. \"Bloody hell!\" I exclaimed quietly.\n\n\"What?\"\n\n\"You taste absolutely fucking divine.\"\n\nShe blushed even brighter, if possible, as I returned my fingers to what I was doing before. Still awkward because of the jeans, wanting to remove them but worried someone was bound to walk in, I used my fingers to gently fuck her while trying to turn my thumb so I could rub her clit at the same time. It took a few attempts to get right, but once I did, I soon had Charlie bucking on my fingers, my mouth clamped over hers to stifle the noise she was making.\n\nI'll be honest, I hadn't enjoyed anything with another woman as much as I had to that moment in my life. Charlie was gorgeous, and I hadn't even seen her naked yet. But her body, even clothed, was something else. I felt the walls of her cunt started to squeeze my fingers, and I knew she was getting close.\n\n\"Don't stop. Please don't stop,\" she cried quietly.\n\n\"Not planning on it. I want you to cum for me.\"\n\nShe kissed me hard as I was now properly fucking her. She was bucking wildly against my hand, and I pumped into her even faster. It was the hottest thing I'd ever done with a woman. Naughtiest too, considering this was my sister.\n\nAnd then she came. It was glorious, the noises she made into my mouth, knowing she couldn't stop kissing me, otherwise our parents would definitely come to investigate. She held tightly onto me, leaving me barely able to move my hand as she slowly stopped her movements. Once she settled down, she leaned back and I could see her eyes glistening.\n\n\"Jesus Christ, no-one has ever made me feel that good,\" she whispered, before kissing me gently, \"No-one, Matthew.\"\n\nI removed my fingers and she surprised me again by grabbing my hand, sucking one of my fingers before putting the other in my mouth. She smirked as no doubt my eyes widened in surprise. \"What?\" she asked.\n\n\"Kinky.\"\n\nShe giggled and snuggled into me. I just held her tightly in my arms. \"So good,\" she said, and I thought she was on the verge of sleep.\n\n\"I'm glad you enjoyed it.\"\n\n\"Understatement of the bloody century.\"\n\nShe fell asleep rather quickly. I just kissed the top of her head and held her. I wasn't tired but felt... content. Far more content than I had felt in years. I listened to her breathing as she slept, continuing to run a hand up and down her back, feeling her shuffle every so often, always closer, almost subconsciously worried, even while asleep, that I was going to disappear.\n\nI'm not sure how long it was, but there was eventually a light tap at the door. I called quietly for it to open, Mum poking her head through the gap. She noticed Charlie fast asleep in my arms, thankful that she couldn't see the fact her jeans were undone, immediately smiling at me. \"Dinner in five minutes,\" she called quietly.\n\n\"Okay.\"\n\nMum closed the door and I gently shook Charlie away. \"Dinner soon,\" I whispered in her ear.\n\nHer eyelids flicked open, watching the smile form on her face as I leaned down to kiss her. \"Matthew?\"\n\n\"Yeah?\"\n\n\"I love you.\"\n\nI couldn't help the smile that formed. \"I love you too.\" And I meant every word. That stunned me for a minute. I didn't hesitate returning those words, but the fact I know I meant it? Even Charlie realised that fact, feeling her hand on my face. \"That's why,\" I said quietly.\n\n\"Why what?\"\n\nI had far too many thoughts crossing my mind to make any sense. \"I'm not sure. I think I know what I mean, but... lot of thoughts in here,\" I put a finger to my temple, \"And I'm trying to make sense of them.\"\n\n\"You don't regret...\"\n\n\"God no. I want to do so much more with you, Charlie.\"\n\n\"Good.\"\n\nWalking out into the kitchen together, I swear Mum smiled knowingly at the pair of us. I tried to ignore it, but I don't think Dad was entirely oblivious either. But, once again, dinner was full of conversation and laughter, and a couple of drinks. We ended up in the living room, watching a movie. I'm not entirely sure what it was, as my attention was completely taken by my sister. She was very affectionate, not so much that it would appear rather wrong.\n\nBefore Mum disappeared off to bed, she told us that the funeral would be the day after tomorrow, then asked what I would wear. \"I packed my dress uniform. I'll just need to iron it.\"\n\n\"Bet you're going to turn a lot of heads wearing that,\" Mum said.\n\n\"I'll say. My tall, handsome brother will be beating off the ladies with a stick.\"\n\nMum smiled knowingly at my sister again before she practically dragged my father away. And I don't think it was because they wanted privacy. Though that may have been because I didn't want to think about my parents having sex.\n\nCharlie ended up in my bed again that night, once again dressed in her pyjamas. Apart from a little making out, we didn't take another step forward. I guess we were both a little nervous. I know I was. Fingering my sister was one thing. Giving her oral, or fucking her, was an entirely different thing. I know I wanted to. I know she wanted to. But to actually make that step?\n\nI think we both struggled to sleep that night.\n\n*****\n\n\"Wow,\" my sister said quietly as I walked into the living room, \"And you're single because?\"\n\n\"I only wear it to special events.\"\n\n\"You look very handsome, Matthew.\"\n\n\"Thanks, Mum.\"\n\n\"You ready to go?\"\n\n\"Yeah, Dad.\"\n\n\"I'll take your mother. Can you escort Charlie?\"\n\n\"Sure, Dad. No worries.\"\n\nMum and Dad quickly disappeared as I helped Charlie to her feet. She was wearing a sensible black dress, knee length, tight to her body, didn't show any cleavage and covered her shoulders. She wore black stockings and heels, adding a couple of inches to her height. She wore her hair loose, faint make up on her cheeks, and a little colour to her lips.\n\nEven though we were heading to a funeral, she looked spectacular.\n\nShe wrapped her arms around the back of my neck, her eyes looking into mine. \"Do you have any idea how much of a turn on you are right now?\"\n\nI glanced behind to see Dad was reversing out of the driveway, before I lifted her dress until I could feel her panties. She was a little wet. \"That's just from how I look?\"\n\n\"God yes. If you ever do fuck me, wear that the entire time!\"\n\nI couldn't help laugh. \"Well, if I do that, it'll definitely need a dry-clean afterwards from all the sweat.\"\n\nShe hooked her arm through mine as I escorted her outside. Mum had given me back the keys I'd handed over so long ago, letting me lock the house up before getting in the car. Charlie guided me to the funeral home, and I was soon inundated with a million questions from aunties, uncles, cousins and my other grandparents about why I was wearing a naval uniform, what I'd been up to for years, what I was doing now that I was back and what I was doing in the future. The entire time, Charlie remained on my arm, occasionally gazing at me like a devoted girlfriend or wife. I was sure rumours were going to start, though I didn't really care.\n\nI'd never been to a funeral before. I shed a tear or two, but it was Mum and my sister I was more worried about. Mum required plenty of comfort from my father, while I wrapped an arm around my sister, gently caressing her side or upper arm as she sobbed quietly.\n\nThe wake we held afterwards wasn't as sombre as I thought it would be. Pop was on fine form, particularly after a couple of whiskies, entertaining us with stories from their youth, particularly when he started to court his wife, through their struggles with a young family, through their middle age and retirement, all the way up until she was diagnosed. Then he didn't say a lot more, the wounds still a little raw.\n\nOnce everyone left, and I'd driven Pop home, the old man adamant he was capable of looking after himself, I returned home to help Mum clean everything up. By this time, it was rather late and everyone was exhausted. Mum hugged me tightly again, once again telling me how handsome I was, before she disappeared with Dad. I walked to my room with Charlie on my arm.\n\n\"I'll join you in a couple of minutes.\"\n\nI made no mention of the fact she had slept in my bed every night since I'd returned home. \"Okay.\"\n\nI was under the covers, dressed in only my underwear, when Charlie appeared a couple of minutes later. She was dressed in her pyjamas as usual, though she abandoned those quickly, revealing a lacy black bra and panties. She smiled shyly as my eyes drank in her form. My cock hardened immediately at the same time. I gestured for her to join me, holding open the covers. I wasted little time dragging her towards me, kissing her deeply, wasting little time requesting entrance for my tongue, my sister accepting immediately.\n\nMy hands immediately rounded her back, looking for the clasp of her bra. I unhooked that with ease as she sat up slightly and shook it free. I spent a moment gazing at her breasts. They were perfect, just like the rest of her body. And I had to have them. I gently squeezed one of them, running my thumb over her nipple, feeling her shudder when I did so.\n\n\"You're so gentle,\" she whispered.\n\n\"I am?\"\n\n\"You were the other night. It's just... unexpected.\"\n\n\"Do you want it rougher?\"\n\nShe smiled. \"No. This is perfect.\"\n\nI kissed her as I felt her up, running my mouth down to kiss her ear, hearing her giggle when I did that, before moving down to her neck, tempted to leave a hickey, but figured that really wasn't a good idea, as it would be noticed, and only one person would have done it. As I kissed and nibbled her neck, I ran a hand down her body and she wasted no time spreading her legs. I ran a hand over the top of her panties and she was already soaking, her body eager for my hand and a lot more.\n\nShe eventually rolled over onto her back, allowing me to pleasure both her breasts at once, hearing her moan or giggle as I did, taking one nipple in my mouth, licking and nibbling at that one, before I did the same to the other. I covered her entire body in kisses, worshipping her beauty in the only way I figured I could. I felt her chest and stomach rise and fall with deep breaths as I kissed down over her abdomen. I teased her as I kissed over her panties, though I could inhale her scent. If possible, it made me even harder.\n\n\"Your scent is wonderful,\" I stated quietly, looking up at her with my eyes.\n\n\"It is?\" she asked, looking down, clearly blushing.\n\n\"God yes.\"\n\nI quickly removed her panties and she spread her legs, allowing me the unobstructed view of her pussy. Jesus wept, it was perfect. I mean, the greatest artist couldn't have painted anything better. I know I spent a moment just looking at it, glistening in the low light of my bedside table. I just had to taste her.\n\nRunning a tongue up her slit, I think she nearly came straight away, covering her mouth to stop her crying out. I was confident my parents knew what we were doing, and surprised they didn't say anything. I put that to the back of my mind as I enjoyed the taste of my sister's pussy, putting all the things I'd learned over the years into pleasing her. I wasn't selfish with others, but with Charlie, I actually cared about getting her off. I wanted to make her cum with my tongue. With my cock later on, if possible.\n\nI teased her as well, kissing up and down her thighs, leaving her untouched for a few moments, knowing it was driving her a little nuts, breathing on her entrance and watching her shudder. Then I surprised her with a couple of fingers, raising her head, her eyes meeting mine. All I did was smile.\n\n\"You're going to make me cum so hard, Matthew.\"\n\n\"Good,\" I said, gently flicking her clit, once again causing her to cover her mouth as she cried out. Gently thrusting in a couple of fingers, using the right motion to hit her spot, I slowly played with her clit, learning what worked by her body movements and the noises she made.\n\n\"Oh fuck!\" she cried out. I couldn't help chuckle, as I have no doubt our parents would have heard that. I didn't care, though. If they walked in and found us, so be it. I focused on making my sister cum, my tongue now circling and flicking her clit as I figured that was working best, my fingers slowly picking up the tempo as she gently bucked against them.\n\n\"Are you going to cum, Charlie?\"\n\n\"Uh-huh.\"\n\n\"Are you going to cum for your brother?\"\n\n\"God yes!\" she hissed.\n\nI returned my mouth to her clit, not intending to stop until she had an orgasm. With my right hand inside her, I moved my left hand up her body to play with one of her breasts, hoping to cause sensory overload. It did as she was soon making a lot of noise and not bothering to hide it. \"Don't stop. Please don't stop,\" she cried, and I picked up the pace further with my fingers, completely running slick with her juices. My tongue didn't stop attacking her clit and her body was now shuddering against my ministrations. I knew it wouldn't be long now.\n\n\"Oh god, so close!\" she cried. And then she came. It was beautiful as my sister writhed and shuddered as I guess she had one hell of an orgasm. Certainly the biggest one of any partner I'd ever had. And I knew my sister wasn't faking it.\n\nI kept going, though I slowed the tempo of everything I was doing significantly until I finally heard her whisper for me to stop. Removing my fingers, I licked those clean as she watched me do that, then wiped my chin before crawling up the bed. Charlie just wrapped her arms around me and kissed me, and I noticed the tears in her eyes.",
        "\"Happy tears. My god, only happy tears.\"\n\nCharlie asked if I wanted anything. I said no. I was absolutely fine. And I was, simply holding her close to me as she drifted off. Once my erection disappeared, I followed her into slumberland.\n\nThe next morning, I was woken up by a pair of soft lips, opening my eyes and immediately responding to Charlie. I finally smiled once she stopped. \"I could get used to being woken like that.\"\n\n\"Every morning?\"\n\n\"Definitely,\" I replied, holding her close to me again.\n\n\"Did you mean it?\"\n\n\"Mean what, Charlie?\"\n\nShe met my eyes, the first time I'd seen concern in them for days. \"That you love me?\"\n\n\"I meant every word.\"\n\nShe took a deep breath. \"I meant...\"\n\nI immediately kissed her, because I knew what she meant. \"I meant the same thing, Charlie.\"\n\n\"You did?\" I nodded. \"But... How?\"\n\n\"There is a thin line between love and hate. I always have, Charlie. Always have. I knew it at the time, but... I thought you hated me. So I hated you back. And then I let that hate consume me, turn me into someone I didn't even like, and I drove myself away from those that I love most.\"\n\nShe burst into tears. \"I never hated you,\" she eventually sobbed.\n\n\"I know you didn't. That's why I was stupid. A complete idiot.\"\n\n\"I've always loved you.\"\n\n\"I'm beginning to realise that.\"\n\n\"It's why I was the way I was. Because I freaked out completely. I thought it was just a crush, because I always thought you were cute and smart and... I had feelings... But what kind of freak loves their little brother in such a way?\"\n\n\"I know. I understand. So do you know what we do?\"\n\n\"What do we do, Matthew?\"\n\n\"We spend a lot of time catching up. We've lost ten years.\"\n\nShe looked me in the eyes, hers glistening. I'll admit, I had to blink rapidly once or twice to clear mine. There as a knock at the door and I knew it was Mum. I called for her to open it, poking her head through again. I didn't even consider the fact we were naked, Charlie's clothes on the floor beside the bed. Charlie had her head buried in my chest, her tears slowly starting to fade. Mum just smiled. \"Would you like breakfast?\" she asked softly.\n\n\"Yes, Mum. Charlie?\"\n\n\"I'd love some too.\"\n\n\"Very good. Take your time, kids. There's no rush. Enjoy each other's company.\" She smiled at me again then closed the door. If I didn't know any better, she knew exactly what we were up to last night. She couldn't have missed the clothes. And I was left thinking that she didn't actually care, which left me more confused than anything. I mean, I knew exactly what we were committing being together. I'm sure Charlie did too. But I was beginning to realise neither of us cared at all.\n\nAfter I'd put on a pair of shorts and a shirt, Charlie and I wandered out into the kitchen hand in hand. Dad looked up from his paper, wished us good morning, then returned his attention to whatever he was reading. Mum simply told us to sit down. A plate was put in front of each of us, and I'll admit I was feeling a little ravenous.\n\n\"Any plans today, Matthew?\" Mum asked.\n\n\"Er, no. I hadn't actually planned this far ahead.\"\n\n\"Did you get a return ticket?\"\n\n\"No. I didn't know how long I'd be here for. Since I'm unemployed at the moment, I didn't know what to do next.\"\n\n\"Will you catch up with friends?\"\n\n\"Probably not. I've sent one or two messages but they're either too busy or don't appear inclined to meeting up. So be it, I have been gone for over ten years.\"\n\nMum smiled. \"Guess that just means spending more time with your sister then.\"\n\nShe knew. Mum definitely knew. \"I'd like that,\" Charlie stated quietly.\n\n\"It's a nice day. Why don't we go to the beach?\" I suggested, \"Dad, what's the weather supposed to be like today?\"\n\n\"It's meant to get rather warm by the afternoon, Matthew.\"\n\n\"There we go. We'll head to one of the quieter beaches, take a picnic, just us two. What do you say?\"\n\nI figured my sister wanted to say a lot of things. She went with, \"That sounds lovely.\"\n\nAfter breakfast, I headed into the bathroom for a shower, and received quite a shock when the curtain was pulled back and Charlie stepped in, completely naked. It was the first time I'd seen her body in daylight, and my cock was instantly at attention. She was absolutely stunning, having clearly looked after herself. Her breasts were handfuls, with no sag at all. Her stomach was flat though soft. Her hips were... fantastic. I noticed the hair above her pussy and smiled. Well-trimmed, but womanly. She only had a faint tan, particularly compared to mine.\n\nShe gently pushed me until my back was against the wall opposite the shower head. \"I'm going to suck your cock, Matthew. And you're going to cum. Now, where do you want to cum? On my tits or in my mouth?\" I could only look at her slack-jawed. \"Mouth?\" I could only nod dumbly. \"Very well. Oh, and Matthew?\" I still stood there in silence. \"I love you.\"\n\nShe lowered herself, her right hand holding my cock at its base as she ran her tongue up and down my shaft, almost like an ice cream. That alone was enough to set me off, and I knew I wasn't going to last long at all. I told Charlie as much. \"Cum in two minutes or twenty, Matthew. I don't care. I just want to make you cum like you made me.\"\n\nI don't think I have the biggest cock in the world, but watching Charlie wrap her mouth around mine made me think I had the biggest in the galaxy. I had no idea how many partners she had. How many dicks she'd sucked. I didn't care. All I knew is that she was currently on her knees right now, in the shower, sucking mine. And she was good. I watched, enraptured, as my entire length disappeared into her mouth and down her throat. Her eyes always looked up into mine as I stroked the side of her head, knowing she was trying to smile despite my cock wedged in her mouth.\n\nIt didn't take long to feel the end approaching. I let Charlie know, but that only made her work faster, and I warned her a last time just before I came. It was probably the best orgasm I'd had in my entire life up until that moment, unable to stop the loud groan that escaped my throat as I pumped what felt like gallons of cum into the mouth and down the throat of my sister. She couldn't take it all, seeing some of it drip down her chin onto the bottom of the bathtub, but anything that remained, she scooped up and sucked down once my slowly softening cock plopped out of her mouth.\n\n\"Holy shit!\" I exclaimed.\n\n\"Good?\" she asked, surprisingly timid all of a sudden.\n\n\"Good?\" I laughed. \"Good? Fucking hell, Charlie, that's the best blowjob I've ever had.\"\n\nHer face lit up as I helped her to stand, holding her close and kissing her. That left her surprised. \"You kissed me!\"\n\n\"So?\"\n\n\"But you just came in my mouth!\"\n\n\"And?\"\n\nShe blinked a couple of times, then smiled again before she kissed me in return. \"Nothing. We should get clean.\"\n\nWe washed each other, of course, and we were relatively well behaved. My sister definitely spent time appreciating my physique, while I enjoyed running hands over her soft curves. There was plenty of making out and I knew we'd been in the shower a long time when there was a knock at the door.\n\n\"Matthew?\"\n\n\"Yes, Mum?\"\n\n\"Would you like me to make you some sandwiches for your picnic?\"\n\n\"Sure, Mum, that would be great.\"\n\n\"What would you like?\"\n\n\"Anything, Mum. It'll be fine.\"\n\n\"Charlie, what would you like?\"\n\nWe looked at each other with wide eyes. 'She knows?' Charlie mouthed. I could only shrug helplessly. Charlie returned the gesture. \"Whatever's easy, Mum,\" she replied\n\n\"Okay, I'll make a few for you then.\"\n\nI turned off the shower and we dried each other in silence, opening the door to find an empty hallway. We walked towards our bedrooms, both of us lost in our thoughts, wondering what the hell was going on. Charlie disappeared into her room as I wandered into mine, quickly dressing before sitting on the bed, running a hand over my head, deep in thought. I only knew Charlie was in the room with me when she sat down on the bed.\n\n\"Matthew, how does Mum know?\"\n\n\"Well, you are sleeping in my bed. But each morning she's stuck her head in, it's appeared completely innocent.\"\n\n\"But she seems entirely fine with it! I mean, we were in the bathroom together.\"\n\nI scratched my head again. \"I know. It's... weird. Maybe she thought you were just in there but not in the shower.\"\n\n\"Are you okay with it?\"\n\n\"You mean with what we're doing?\" She nodded. \"Absolutely. If you think I'm stopping now, I'll only do that if you want me to.\"\n\nShe grabbed my hand and squeezed. \"I want you to make love to me, Matthew,\" she said quietly.\n\n\"That's what I plan on doing. Trust me. Not at the beach, though. Sands gets in, er, certain uncomfortable places.\"\n\nThat caused her to giggle. \"Good advice.\"\n\n\"Come on, let's go see if anything is said before we go out.\"\n\nWe wandered out to see Mum packing a picnic basket for us, cutting up the last of the sandwiches before wrapping them in some cling film. She looked up and smiled at us. \"Plenty of nibbles inside. Also a thermos of coffee, and a bottle of wine if you want, though I know you'll be driving, Matthew.\"\n\n\"I've got towels and sunblock. I'm already wearing my bikini, ready to strut across the sand, and swim if I feel like it,\" Charlie added.\n\n\"Bikini?\" I asked, unable to hide my surprise.\n\n\"Um, yeah, of course.\" She must have noticed my train of thought as she just smiled, before leaning across to kiss my cheek. \"Good thoughts?\" she whispered in my ear.\n\nI just cleared my throat. \"Where are you planning on going?\" Dad asked.\n\n\"I'm thinking Avalon Beach. It's a bit of a drive, but will give Charlie and I plenty of time to chat on the way.\"\n\n\"Good thinking, son. It's nice to see you two getting along so well.\"\n\nI glanced at Charlie, and noticed her blush. I tried very hard not to put my foot in it. \"Me too, Dad.\"\n\nSome of the roads on the way were absolutely packed, but as it was a weekday, the closer we got to Avalon, the less traffic we encountered. Once I'd parked up, I carried the basket and towels to find the beach practically deserted, despite the good weather. But, as it wasn't the holiday season, as far as I knew anyway, I assumed that's why it was quiet. We found a good spot to put down the blanket. Thankfully, there was little wind so sand wouldn't be a problem.\n\nWhen Charlie immediately started to remove all her clothes, my cock sprung into life again. It was a white bikini. It wasn't the skimpy thing I'd originally imagined, but it still left little to the imagination. I noticed her turn around to show off her shapely arse.\n\n\"How do I look?\"\n\n\"Absolutely fucking stunning.\"\n\n\"Want to go for a swim?\"\n\nI stripped off down to my swimming trunks, though we first covered ourselves in sunblock, my hands definitely wandering all over her body, leaving her giggling as I tickled her. Satisfied we shouldn't get burned, I grabbed her hand, and we ran into the water, laughing away as we almost fell over across the soft sand and once we hit the water. Though it was a warm day, the water was very cold, noticing Charlie's nipples immediately harden, though it helped my erection subside rather quickly. Once we couldn't feel the ground, and had escaped the worst of the waves, we swam towards each other, Charlie wrapped her arms and legs around me, and we made out for a little while.\n\n\"Have you ever felt like this about anyone before?\" she asked.\n\n\"Never. Because I've realised I compared every girl to you. Subconsciously or not, you were always on my mind.\"\n\nShe smiled then leaned close to my ear. \"I did exactly the same thing.\"\n\n\"Guess that proves everything we need to know.\"\n\nWe kept swimming until we were hungry, walking back to our blanket hand in hand, drying ourselves off first before we sat down and devoured the food Mum prepared. After lunch, we applied a little more sunblock as Charlie lay down, saying she wanted a little sun. She certainly wasn't tanned, not as much as me, telling her that she was perfect how she was.\n\n\"You mean that?\"\n\n\"Wouldn't say it if I didn't mean it.\"\n\nShe got a little sun, but she also got a lot of attention from me too. Nothing too rude, as we were certainly not going to do anything in public, but there was little doubt we ended the afternoon rather excited. The weather eventually turned cool and we decided it was time to head home, gathered up all our belongings after we dressed, and walked hand in hand back to the car. I don't think we looked alike, so I'm sure people thought we were a couple. Well, if not, they would have been in for a hell of shock.\n\nIt was dark by the time I parked up outside the house, Charlie leaning across to kiss me once I'd switched off the engine. \"Thank you, Matthew.\"\n\n\"You're welcome. But why are you thanking me?\"\n\n\"I think that's the best date I've ever been on.\"\n\nI could help chuckle. \"That was a date, was it?\"\n\n\"If it wasn't a date, what was it?\"\n\nI thought for a moment. \"Hmmm. You have me there.\"\n\nMum and Dad were watching the news as we walked inside, greeting us as I carried everything into the kitchen, Charlie helping me wash up whatever was dirty. We hadn't touched the wine, so opened the bottle and sat together at the kitchen table. We sat quietly, hand in hand, keeping them under the table. I think we both knew what was going to happen that evening. I was full of nervous anticipation. I had little doubt she felt the same way.\n\nWe watched a little TV with the parents, though I wasn't concentrating on anything, my thoughts only about one thing. So distracted, I barely heard them wish Charlie and I goodnight, and I swear Mum had that same knowing smile on her face as she kissed Charlie then me on the cheek. But I put that to the back of my mind.\n\nCharlie flicked off the TV and grabbed my hand, walking us down the hall. Stopping outside my door, she grabbed me by the back of my head and dragged me in for a kiss. \"I'll change then join you,\" she said quietly, turning and closing her bedroom door behind her.\n\nI quickly brushed my teeth and then undressed, figuring there was little point wearing anything under the covers. I lay back, feeling my heart race, knowing what was likely about to happen. If it didn't, I wasn't going to be too upset. I was just glad my relationship with Charlie had been completely restored. What surprised me is how much love I felt for her, left wondering if I'd suppressed these feelings all my life. As I said, I was probably more fucked up than I realised.\n\nCharlie entered my room a few minutes later in a dressing gown. Closing the door behind her, she took a couple of steps forward and then disrobed. I couldn't help smile as she wore nothing underneath. She then posed and smiled.\n\n\"What do you think?\"\n\n\"You're a goddess.\"\n\nThe smile broadened. \"You really think that?\"\n\n\"Charlie, you're the most beautiful woman I've ever seen.\"\n\nI wasn't lying. She really was.\n\nShe joined me under the covers, leaping on me, causing me to chuckle as she covered my face in kisses. Eventually her mouth met mine as she lay beside me, running my hand through her hair, holding her tight to my body. I ran my hand up and down her back, occasionally cupping or squeezing her little butt, earning a smile as we continued to make out. Honestly, I'd have been happy with nudity and kissing all night. But I knew what we both wanted.\n\nCharlie took the initiative, eventually rolling herself onto her back, taking me with her so I was positioned between her legs. My cock lay against her mound, and I could feel her warmth. I snaked a hand down her body, lifting myself up slightly, and wasn't surprised to find she was ready for me.\n\n\"Make love to me,\" she whispered, almost pleading with me. I raised an eyebrow in surprise, as she reached down and grabbed my cock. \"Stick this big thing inside me, Matthew. I've been thinking about it since that first night.\"\n\n\"Condom?\"\n\nShe smiled. \"I'm on the pill. And I want you to cum in me.\"\n\nI shuffled so my cock was at her entrance. I could feel her warmth and her wetness. She moved downwards, wanting me to enter her, though I pulled back, earning a frustrated groan. \"Good things come to those who wait, Charlie.\"\n\n\"I've waited long enough,\" she complained.\n\nResting my forearms on either side of her head, I gently stroked her hair and kissed her as I moved forward and slowly entered her, enjoying the feel of her warm tunnel around my cock. I took it slowly, as she was rather snug. I didn't have the largest cock in the world, but she felt divine. \"Take it slow. It's been a long time since I've been with anyone,\" she whispered. I just nodded, thrusting until about half of my cock was inside her, before slowly pulling back, leaving on the head inside, before slowly moving forward again, feeling her adapt to my cock being inside her.\n\nI had to stop for a moment and think about that. I'm her brother, and my cock is inside my sister. And already it felt perfect. It didn't feel wrong at all. It felt... right. I continued my extremely slow thrust until I was all the way inside her, feeling her arms run up my arms onto my back.\n\n\"Wait a second,\" she said quietly.\n\n\"We've got all night.\"\n\nI felt her shuffle, moving her legs slightly further apart, before moving a hand to the back of my head and moving me down to kiss her. I felt her nod so I started to... make love to my sister. I just enjoyed the feeling of her wrapped around my cock, listening to her little moans, assuming I was hitting the right spot or spots. Her hands gently stroked my back and we continued to kiss as I slowly upped the tempo.\n\nThen I had to stop, feeling a little embarrassed. \"What's wrong?\" she asked.\n\n\"I'm going to cum really quickly,\" I admitted, \"It's been a while for me too. Plus, it's you, Charlie.\"\n\nShe kissed my cheek. \"Then cum,\" she whispered, \"As you just said, we've got all night. You think this is it?\"\n\nI chuckled, as she was right. Plus, if I came quickly, I'd last a lot longer second time around. So I grabbed her thighs and lifted them so her legs wrapped around me, lifting her butt ever so slightly, hearing her gasp at the slight change of motion as I slowly started to thrust inside her again. I knew banging her mercilessly wasn't going to be required. My orgasm wasn't far off.\n\n\"Jesus, Charlie,\" I muttered.\n\n\"I know,\" she gasped in return.\n\nUpping my tempo again, I kissed her hard, using every technique possible to stop the impending flood of cum that was about to erupt inside my sister, but her pussy was far too warm and tight, and I am but an ordinary man, who hadn't had sex in quite a while, and was beginning to realise how much I wanted exactly what was happening. Slowly but surely, I upped the tempo further, hearing Charlie gasp and moan below me.\n\nThen I felt the point of no return. \"Oh, god,\" I groaned as I started to cum, slowing down as I buried myself inside Charlie, not even counting how much I emptied inside her. Sucking in deep breaths, all Charlie did was continue to stroke my slightly sweaty back, feeling her kiss my cheek as I recovered.\n\n\"I love you,\" she whispered, kissing my cheek again, \"So much, Matthew.\"\n\nI met her eyes and smiled. \"I love you too, Charlie.\"\n\nWe kissed again, soft and gentle, lacking the intensity of only moments before. I was still inside Charlie, surprised that my cock was still semi-hard. Not that it immediately went soft, but I could have kept fucking her if I wanted. But we simply made out for a while before we stopped, just looking at each other.\n\n\"Can you look at me like that for the rest of your life?\" she finally wondered. I must have look confused. \"I remember... you know...\"\n\n\"Don't, Charlie. It's the past. Leave it there.\"\n\n\"Now it's the future?\" I nodded. \"Am I in it?\"\n\n\"If you want to be. But I want you in it with me.\"",
        "The smile that appeared on her face meant I couldn't help but return it. \"We'll discuss that later. First, I want to cum while your cock inside me.\"\n\n\"Sorry.\"\n\nShe kissed my cheek, then leaned up to my ear. \"I always cum on top.\"\n\nI laughed at her suggestive tone. Soon enough, I was on my back, Charlie sat between my legs as she spent a few minutes blowing me. It didn't take too long for my cock to harden, surprising me once again. Not that I ever had problems, but I usually needed a few more minutes than that. Once I was ready to go, Charlie straddled my lap and, after grabbing my cock by the base, positioned herself over it and lowered herself down in one slow movement.\n\n\"Oh, fuck!\"\n\n\"Good, right?\" I asked with a smirk.\n\n\"You have no fucking idea.\"\n\nGrabbing her by the hips, I lay back and watched my sister pleasure herself on my cock. It was an absolute vision, continuously running my eyes up and down her body. Her beautiful face. Slim neck. Gorgeous breasts. Kissable stomach. The fur above her pussy. Watching my cock disappear inside her as she slowly bounced up and down, then rubbing herself back and forward, I assume to rub her clit.\n\nShe kept her eyes closed to begin with before they opened and she stared into mine. I stared back, watching her mouth part as she panted, occasionally moaning as her breathing slowly increased.\n\n\"Fucking hell, Matthew,\" she cried. It was loud and I'm sure our parents heard. But they could have opened the door at that very moment and I wouldn't have stopped.\n\n\"You have no idea how good you feel,\" I admitted, because it was true.\n\nShe giggled. \"I've never had a cock this good inside me.\" She continued to giggle as I no doubt had a self-satisfied smile on my face. \"And I've wanted it for so long.\" I raised an eyebrow. She just shrugged, or I think she did, considering she hadn't stopped. \"It's true. That's all you need to know.\"\n\nI wasn't going to argue. If it was in the past, I think it was time to leave it there.\n\nSo I continued to watch her, enjoying the feel of her body in my hands, running one up and down her stomach, occasionally caressing one of her breasts, perhaps giving one of her nipples a tweak, earning me a gasp or giggle. Maybe even both. Otherwise, I focused on the feeling of being inside her. I know I lay back with a small smile the entire time, slowly realising this was what I had been looking for my entire life, certainly over the past decade and more.\n\nCharlie eventually leaned forward, hands to either side of my head as she kissed me again. I trailed my hands from her side down to her arse, cupping both cheeks, bending my knees slightly. If she loved this position, she knew what was coming next.\n\n\"Fuck me and make me cum.\"\n\nShe knew. I fucked her gently to start off with, as she met my thrusts. She continued to look into my eyes, her mouth still agape, hearing her breathe, hair hanging down, framing her face, noticing the slight sheen of sweat on her forehead. I started to fuck her harder, hearing her grunt as I did so, before she gasped.\n\n\"Oh fuck, that's the spot.\" Figuring I had the right tempo, I just did that, watching the smile broaden on her face once again. \"God, my brother can fuck me well,\" she muttered, moaning loudly again, \"I'm going to cum so hard in a minute.\"\n\nSo was I, to my surprise, putting it down to the fact it was Charlie, and she just made me that way. I pulled Charlie down to kiss her, remembering how she moaned into my mouth earlier, fucking her just that little harder, hearing her squeal with delight as I did so. She lowered herself onto her forearms, resting her forehead gently against mine, still looking into her eyes. She was panting heavily now, closing her eyes every so often, before reopening them. \"Oh god, I'm close,\" she whispered, \"Go faster.\"\n\nI fucked her. Not hard, just fast, enough to get us both off. I know I started to grimace, trying to hold off cumming again before my sister had even cum once. I heard her moan loudly again and felt her start to squeeze against my cock. I knew she was holding back so I moved up to kiss her, then trailed down towards her neck. That did the trick as she yelled something intelligible before collapsing on top of me. \"Don't stop!\" she pretty much demanded, so I kept right on fucking, wrapping my arms around her as I felt her shudder. \"Christ almighty!\" Well, I wouldn't compare myself to the big man but I appreciated the compliment. Feeling her continue to squeeze my cock, it didn't take long for me to finish again, hearing my sister giggle as I unloaded what I assumed was a much smaller load inside her.\n\nI lowered my legs to the bed and felt myself relax. Charlie didn't move from on top of me, listening and feeling her breath against me. \"Holy shit!\" she finally muttered.\n\n\"Yeah...\"\n\n\"I mean... If it's always going to like this...\"\n\n\"I hope so.\"\n\n\"Me too.\"\n\nI continued to hold her in silence as we recovered from our exertions. I felt bathed in sweat. She felt like it too. Complaining that she felt like jello, I suggested we should have a shower, then perhaps change the sheets. It took a little convincing, though she finally agreed. Causing her to giggle as I lifted her up in my arms, I carried her to the bathroom and suggested we could have a bath, as it was big enough. She told me to wait, disappearing for a minute, returning with some bubble bath and some candles. Ten minutes later, I lay back in the steaming hot water, my sister lying back against me, as we soaked by candlelight.\n\nOur appetites for one another sated, at least for now, I simply held Charlie in my arms, occasionally but awkwardly making out. It was otherwise blissful silence. I think we'd told each other everything that we needed to. The past would always be there, but I hoped that we could eventually leave it behind.\n\nWe must have soaked for a good hour before finally getting out, and after changing the sheets, we got into bed. Charlie lay on her side, ensuring she faced me, an arm each wrapped around the others waisted. She just looked at me, that slight smile on her face that was no doubt on mine. She kissed me, told me again that she loved me, closing her eyes and drifted off to sleep. I watched her for a little while, kissing her forehead, telling her the same thing, before I closed my eyes too.\n\n*****\n\nCHAPTER THREE\n\n\"Matthew,\" a voice said quietly.\n\n\"Yes, Charlie?\" I stated, automatically squeezing her, body pressed against mine, enjoying the sensation of her warm skin against mine.\n\nThen I realised it wasn't Charlie who asked the question. With a sense of dread, I opened my eyes to see my mother standing next the bed. Before I could say a word, she put a finger to her lips, as Charlie was still asleep. I couldn't help notice her smile, though. That really confused me. \"We should talk later, Matthew. After breakfast,\" she whispered.\n\n\"Huh?\"\n\n\"Once Charlie is awake, come join your father and I. Okay?\" I nodded. \"Take your time. There's no rush.\"\n\nAfter Mum closed the door behind her, I had to shake Charlie awake. She turned around, opened her eyes and smiled, though it disappeared once she saw my face. \"What's wrong?\"\n\n\"Mum knows.\"\n\n\"Oh god...\"\n\n\"Wait. It's... weird. It's like she's okay with it.\"\n\n\"Huh?\"\n\nI shrugged. \"I have no idea what's going on. She just said we needed to talk.\"\n\nWondering what the hell was going on, we got up. Charlie kissed me then disappeared to get dressed as I did the same. I waited outside her door until she was ready, automatically grabbing her hand as we wandered into the kitchen. Dad was already at the table, cheerfully wishing us a good morning, which I know confused the hell out of us even more. If Mum had told him, I figured he would have hit the roof, and probably would have tried killing me. So Charlie and I sat down as Mum eventually set a plate of bacon and eggs in front of us. We devoured it, as both of us had worked up an appetite the previous night. Once breakfast was cleared away, Mum and Dad sat opposite us. Charlie and I shared another glance, still obviously confused.\n\n\"You had sex last night,\" Mum stated bluntly.\n\nI glanced at Charlie, who blushed and looked away. I just shrugged. There was no point in lying as it was obvious. \"Yes, we did, Mum.\"\n\nI wanted to say more, but Mum shook her head. \"Don't want to know details,\" she stated with a chuckle.\n\n\"Do you love him, Charlie?\" Dad asked. She nodded. \"Are you in love with him?\"\n\n\"Definitely,\" she said quietly.\n\n\"And you, Matthew. Do you love Charlie?\"\n\n\"More than anything, Dad.\"\n\n\"And are you in love with her?\"\n\n\"I've always been in love with her.\"\n\nMum smiled. Dad nodded, as if understanding what everything had been about. It was what I'd finally realised and understood. Then he leaned forward, placing her elbows on the table. \"I'm sure this isn't the reaction you were expecting.\" I couldn't help chuckle, though I grabbed Charlie's hand, as I figured she needed support. \"You're both adults and clearly in love with each other. Who are we to stand in your way? If we drove you apart, all we'd do is force you both away from us. We don't want that again.\"\n\n\"But we know you can't stay here,\" Mum continued, \"Too many people know you, and it's not possible for it to remain a secret. Someone will find out, then all our lives would be destroyed. So we have a suggestion.\"\n\n\"What is it?\" I wondered.\n\nDad looked at Charlie. \"Go with Matthew, Charlie. Go with him to Perth. No-one knows you over there. You can act as husband and wife. Not just act. You can be husband and wife.\"\n\nShe looked at me first, jaw agape, before looking at our parents. \"You're serious?\" I finally asked.\n\n\"Completely,\" Mum said.\n\n\"We'd prefer both of you remained close, but we know that isn't possible,\" my father continued, \"But neither of us are stupid. We know this has been coming since... since it all started to go wrong.\"\n\n\"What are you talking about?\" Charlie asked.\n\n\"We thought it was just a pair of crushes, that you couldn't be in love with your sibling. And we quickly realised that is why you pushed him away, Charlie. We wanted to get involved, particularly once Matthew started to... change, but by the time we realised what was happening, it was too late,\" my mother explained.\n\n\"It's not your fault,\" I told both of them.\n\n\"It's no-one's fault. It was a unique situation which none of us were capable of understanding or dealing with at the time,\" my father said.\n\n\"So, what, this has your blessing?\" Charlie wondered.\n\nMum and Dad looked at each other and smiled. \"Obviously to your surprise, yes, it does. Granted, we think it's a little strange, we can't deny that. But... You make each other happy. And, as parents, all we want is for our children to be happy, but more importantly loved. You've found it with each other. So be it.\"\n\n\"Thanks, Dad,\" Charlie said, using her free hand to wipe her cheek.\n\n\"We could tell you to be careful and what not, but we guess you'll figure it out as you go along. And, if you go to Perth, you can live your lives as you see fit.\"\n\nCharlie was silent for a few seconds. \"Okay.\" Then she looked at me and smiled. \"Okay. I'm doing it. If that's what you want?\"\n\nI laughed. \"Are you kidding me? Of course it is!\"\n\n\"Holy shit, I've got so many things to organise. I'll have to quit my job. Start packing. Say goodbye to so many people. It may take some time.\"\n\n\"Okay. So how about this? I'd like to stay the entire time, but I guess I should head back and prepare for your arrival. Plus, I guess I should find a job too. I'll probably end up where I was before the Navy. I kept in contact with my old boss and he's keen to have me back. So, why don't you wrap up your life here then either fly or drive to Perth?\"\n\n\"Sounds like a plan.\"\n\nI stayed for another week. Though Mum and Dad were understanding, we obviously tried to keep our relationship as siblings in front of them, though they walked into us making out on the couch more often than not. All Mum did was tell us to go to one of our rooms and keep the noise down. Dad was a little more circumspect about things, but he could see we were in love, so although a little awkward at times, he never said anything.\n\nUnlike the first time I left, leaving the second time was a hell of a lot harder. Charlie was already crying by the time we got in our hire car, Dad driving his car so she could be taken back. We spent as much time together as possible before I had to catch my flight, shaking hands with Dad, then hugging Mum for what felt like forever.\n\n\"I'll call when I land, and every other day. I promise, Mum.\" She could only nod as she cried into my chest. \"Don't worry, it won't be another ten years.\"\n\n\"It better bloody not be. Otherwise I will come and find you!\"\n\nWe both laughed as I leaned down so she could kiss my cheek. \"I love you, son.\"\n\n\"I love you too, Mum.\"\n\nDad escorted Mum away, leaving me alone with Charlie. The kiss we shared was probably the most intense and passionate of all those we had shared up to that time. I have no idea how long it lasted. I honestly didn't want it to stop. But we finally had to come up for breath, Charlie just looking up into my eyes, her own filled with tears.\n\n\"Will I definitely be okay driving?\"\n\n\"You'll be fine, Charlie. Just take your time. It took me around a week the first time, though I know you'll be in a rush.\"\n\n\"And you definitely want me there?\"\n\n\"For the rest of our lives.\"\n\nShe smiled and I hugged her tight towards me, not wanting to let her go, even for a second. But she would soon be with me, and we could then live our lives together as a couple. I kissed her again a final time before telling her how much I loved her. She told me the same before breaking down again. Dad appeared as I handed her over. I have no problem admitting I needed to wipe my cheeks as I waved goodbye.\n\nThe next month sucked, only because I felt alone again. The same shipyard I'd worked at before the Navy happily accepted me back, so that was something. Now that I would be living at home full-time, I started to fill the apartment with furniture, though made sure I communicated with Charlie that she liked what I was buying as it was going to be her home too.\n\nI received a text message one morning from Charlie, letting me know that she'd left Sydney. She didn't know how long she would be but would let me know when she arrived at the apartment, as I'd given her the address. I had butterflies in my stomach from the time I received the message, though the guys at work joked about the permanent smile. Thankfully, none of them had a clue Charlie was my sister. They only knew I'd reunited with an old flame.\n\nI was in the bowels of a yacht we were fixing a week later when I heard my name being called. I wandered out onto the deck to see Steve beckoning me. \"You have a visitor,\" he said.\n\n\"Who?\"\n\n\"No idea. They just asked for you by name.\"\n\nI grabbed a cloth to clean my hands before I followed Steve into the front office. I came to a halt as the person waiting for me raised their hands in the air and yelled, \"Surprise!\" before she ran forward and jumped into my arms, covering me in kisses.\n\nCharlie.\n\nWe must have made out for a while as there was eventually a cleared throat, Charlie and I breaking our kiss to see Steve looking at us. \"So, Matt, going to introduce us?\"\n\n\"Oh, right,\" I said, lowering Charlie to the ground, \"Steve, this is Charlie. Charlie, Steve, my boss.\"\n\nThe pair shook hands, before he gestured and I realised we had a crowd. \"So this is the lovely lady who put a smile on your face?\"\n\n\"Damn, Matt, how'd you manage to pull that?\"\n\n\"Does she have a sister?\"\n\n\"Charlie,\" I stated, before I started pointing, \"This is Mark, Chris, Adam, Paddy and Tom. They're usually okay, but show them a pretty lady, and they act like dicks.\" I turned towards her. \"When did you get here? Your last message said you wouldn't be here until tonight.\"\n\nShe made a gesture with her fingers. \"A little white lie. I wanted to surprise you.\"\n\nI just hugged her. \"You sure did. Best surprise ever.\"\n\nI heard Steve shoo my colleagues away before he cleared his throat again. \"Matt, I think you have holiday the rest of this week.\"\n\n\"Seriously?\"\n\nHe nodded. \"I remember what you were like before. If this is the woman who has put that stupid but constant smile on your face, then I think you need to spend some time with her. So get the hell out of here and I'll see you next week. Charlie, delighted to meet you and I hope I'm invited to the wedding.\"\n\nWe held up our hands. \"We're already married. You didn't notice the ring?\" I asked, pointing at my left hand. There wasn't actually a wedding, but we'd bought them the day after the conversation with our parents. Neither of us minded that we'd never have an actual wedding. All that mattered was that we were together.\n\n\"Well, shit, no I didn't. There goes my idea of a piss up. Er, congratulations. That was fast!\"\n\n\"I wasn't letting him get away again,\" Charlie stated.\n\n\"And I finally realised what I was missing in my life,\" I added, wrapping an arm around her waist, \"Charlie.\"\n\nWe drove to my apartment separately, helping Charlie carry her two suitcases, as she grabbed her handbag and backpack. I put those in our bedroom before showing her the view of the city, then a quick tour of the apartment. I think I'd done a good job decorating, though it wasn't a strong suit of mine, but I was learning. Charlie was impressed with what she was shown.\n\n\"How's the bed?\"\n\n\"Been a bit lonely lately the past few weeks.\"\n\n\"Can it handle two people?\"\n\n\"I think so.\"\n\n\"What about two people who want to fuck each other's brains out?\"\n\n\"I think we can definitely put it to the test.\"\n\nWe ended up in our bedroom rather quickly, undressing each other with a sense of urgency. Just before I was about to throw her on the bed, she stopped me for a moment. \"I have to ask you something.\"\n\nI didn't like the tone. It wasn't going to be bad news, but I was still nervous. \"What?\" I asked carefully.\n\n\"Do you want to start a family?\"\n\nI couldn't help smile. \"With you? Definitely.\"\n\n\"I may have planned this rather well. I finished my last pack yesterday. I do have another pack if you're not sure. I'm not entirely sure when I'll be completely ready, but... I can stop taking them if you're ready to try?\"\n\nI couldn't help wrap my arms around her, then kiss her. She smiled as that answered her question. \"I want one with you, Charlie. Never doubt that. But we're going to need a bigger place and really sit down and figure things out.\"\n\n\"Okay. We have plenty of time. I'll find a doctor and a job. Then we can talk about it... When we're clothed and you're not standing in front of me with a nice, hard looking cock that I definitely want inside me.\"\n\n\"Oh, it will be soon, but first,\" I retorted, gently pushing her backwards onto the bed. She grinned, knowing exactly what I wanted.\n\n\"Anyone would say you were addicted, Matthew,\" she said, running fingers down her body to just above her slit, \"Are you a pussy addict, Matthew?\"\n\n\"Of yours? Yes!\"\n\nShe laughed, dragging me up to kiss her first. \"You want to worship me as the goddess you think I am?\"\n\n\"That's the general plan.\"\n\n\"I love you.\"\n\n\"I love you, Charlie.\"\n\nShe shuffled back so she could rest her head on a pile of pillows, her eyes focused on everything I would do to her body. As I've said, I was no sex god. But the one thing I wanted to do was make her happy. I wanted to make her moan loudly when I touched her, shudder uncontrollably when she had an orgasm and scream my name as I fucked her.\n\nI kissed her everywhere. Her lips, her neck, that little spot on her earlobe I'd learned. Her breasts were shown plenty of attention. They were not too large, but they were perfect. Not just as in they were perfect breasts, but they were perfect for her frame. Even her stomach was shown plenty of attention, all the way down towards her mound, before I moved down her thighs, and even showed attention to her feet and toes. I wasn't a big fan of feet, but knew even that could be erotic, and she certainly giggled when I tickled and kissed them. It helped that my sister did have very pretty, little feet.",
        "She eventually told me to stop teasing her. I could see why, her pussy glistening with her juices, her excitement clear as she was already panting from everything I had been doing, figuring she probably wasn't going to last long.\n\n\"How do you know all this?\" she wondered.\n\n\"Part experience, part reading, part I want to make you as happy as you make me.\"\n\n\"Make me cum and I'll love you forever.\" I kissed back down her leg to her mound, inhaling her natural scent. I made sure I made that obvious, as she giggled again. I barely touched her with my tongue and she almost jumped off the bed. \"Holy shit! I'm so turned on right now!\" Keeping my eyes on hers, I then took one, long, slow lick up her slit. Her eyes closed as she groaned loudly. We didn't have to worry about noise now.\n\nPushing her legs slightly further apart, I know I tormented her as I kissed and licked all around her entrance while completely ignoring her clit, knowing I was driving her nuts, feeling her push her cunt into my face. \"Please,\" she pleaded.\n\n\"Enjoy it.\"\n\n\"I'm going to pass out when I cum!\"\n\nWetting two fingers, I slowly inserted them inside my sister, hearing her moan loudly, even thanking me for doing it. I didn't immediately start finger-banging her, I was incredibly slow, feeling her body react and move as I started to gently run my tongue up and over her clit. That caused her to make even more noise. \"Fuck me!\"\n\n\"Later.\"\n\n\"I didn't... I'm not going to last long, Matthew.\"\n\nI would have preferred to have done this all night, but I know I'd been horny since leaving her in Sydney. I figure she was feeling just the same, so little wonder I was getting her off rather quickly. I started to fuck her with my fingers a little faster, knowing exactly what to do and what spot I should be hitting. I clamped my mouth above her clit and started to slowly flick and circle it, having already learned she liked that and it worked. I felt her hands run through my lengthening hair, letting it grow slightly longer, precisely so she could grab it when I ate her out.\n\n\"You love my pussy, don't you?\" she somehow managed to ask. I just mumbled a positive response, not taking my mouth away. She was now properly fucking into my face, having to hold her onto the bed around one of her legs, now driving my fingers into her. \"Keep going, not long,\" she moaned, feeling her hands disappear, noticing she was now gripping the sheets tightly, her head back on the pillows, breathing rapidly.\n\n\"Oh god!\" she cried out. I knew she was very close, but she was almost holding back. Now I properly fucked her, while her clit was being practically abused by my tongue. I could barely keep hold of her as she writhed against me, my hand running slick with her juices. I wanted to lick them up but wasn't going to stop until she had an orgasm.\n\nAnd then she did. And it was a big one. I think my neighbours may have applauded, or called the cops, depending on what they thought was happening. I kept doing what I was doing until she told me to stop, unable to take anymore, immediately removing my fingers and licking those cleans, watching with a smile on my face as she continued to shake. She finally blinked and looked my way, unsurprised to see a few tears in her eyes. She didn't do that all the time, but I think being the first time back together meant a lot to both of us.\n\nGrabbing me by an arm, she pulled me up over her to kiss me, her hands again running through my hair as she did. \"That was ridiculous,\" she whispered, \"How the hell do you do that to me?\"\n\n\"You're my sister. I love you. And I love making you cum.\"\n\nI watched her take a deep breath before saying, \"Well, I think it's time I made you cum. Give me a minute, then you can fuck me.\"\n\nI didn't last long the first time. Five minutes at most, simply because I'd barely masturbated since leaving her, because it just didn't feel the same anymore. And I was so turned on after what I'd done to her, I was never going to last very long. Charlie didn't mind, simply holding me close as I groaned, unloading inside her, before virtually collapsing on top of her. Surprisingly, my cock stayed relatively hard while inside her, causing her to giggle as she squeezed the walls of her cunt against it.\n\n\"Leave it in,\" she said quietly, \"It's back in its home.\" I couldn't help chuckle, as I was thinking exactly the same thing.\n\nWe made love the rest of the day and night, only getting out of bed to go to the bathroom, or collect the pizza that we had delivered to the apartment. Other than that, we made love or fucked, depending on the mood. By late in the evening, I was feeling utterly drained, Charlie was exhausted, but we continued to make love, not worrying about orgasms by then. Eventually, we just stopped, continuing to kiss, laugh, cuddle and talk about nothing at all, before we finally ended up laying on our sides, facing one another. I caressed her face and told her I loved her, watching her eyes sparkle in the low light, a slight smile appeared on her face, before she closed her eyes.\n\n*****\n\nEpilogue\n\n\"How much longer, Daddy?\" a tiny voice asked, her hand squeezing mine.\n\nI looked down at my five-year-old daughter. \"Not long now, munchkin. Their plane just landed.\"\n\n\"And they're really staying forever?\"\n\n\"As I've told you time and again, yes, they are. You've already seen the house they'll be living in,\" I replied with a chuckle. I still don't think she believed me. She only saw my parents once or twice a year, but the fact they were now moving cross country to Perth was even difficult for me to believe at times.\n\nI could see my wife returning from the bathroom, carrying our three-year-old son in her arms. He was laughing away about something, though when she met my eyes, the smile she returned was the same I remembered the first time I saw in the old house, after the day at the park, when I realised she was in love with me. Her eyes had never changed. Still that same look of love and devotion.\n\n\"What's amused him, Charlie?\" I asked, as I lay a kiss on her cheek.\n\n\"Oh, you know three year olds and silly things. To be honest, I have no idea.\"\n\n\"What's tickled your funny bone, little man?\" I asked my son. He couldn't reply, still laughing away about whatever he found funny. It was infectious, as soon my daughter was giggling away as well. The wife and I just shared a glance before chuckling as well.\n\nThe parents appeared ten minutes later, the two kids rushing towards them. Grabbing Charlie's hand, we walked towards them too, letting the kids say hello first before we did the same.\n\n\"Looking good, you two,\" I said.\n\n\"Retirement does wonders for the soul, Matthew,\" my father stated.\n\n\"Yeah, but I have at least another thirty years until then.\"\n\nMum hugged Charlie first, then me. \"Good to see you, Matthew.\"\n\n\"You too, Mum.\" We only saw each other twice a year, but we spoke nearly every day.\n\nI helped carry their bags to my car, Charlie taking the kids in hers. Once Dad was settled next to me, and Mum in the back, I followed Charlie out of the parking spot. \"Are you sure you guys don't mind looking after the kids so soon after arriving?\" I asked again.\n\n\"Oh, hush, Matthew. When was the last time you and Charlie had a holiday?\"\n\n\"That would be Fiji, five years ago. Just happens that was when Charlie fell pregnant.\" I smirked as I looked in the rearview mirror, my eyes meeting Mum's. \"Ah, memories,\" I added wistfully. She just laughed. Mum and Dad fully accepted our relationship, but I could joke about it more with Mum. Dad was fine with it, but even now, it was still a little awkward for him. I understood and respected why.\n\n\"And how are you and Charlie?\" Dad wondered.\n\n\"Stupidly happy, Dad. I know I am. I have the woman I love as my wife, in all but name. I have two brilliant little kids. We own our own house. I make bank at work, while Charlie can work from home and dote on the kids at the same time. I wouldn't trade it for anything.\"\n\n\"Any more kids?\" Mum asked, a little hopefully.\n\n\"No, Mum. That's been taken care of. Snip, snip. The first pregnancy was okay, but the second was... difficult. Considering she's nearing 40, it becomes more difficult. Add who we are, and the risks increase significantly.\"\n\n\"We've got two grandchildren, Matthew. That's all we ever wanted,\" Mum said.\n\nArriving home, we let Mum and Dad settle in. After an hour, they were practically pushing us out the door, as were the kids, as they knew they were going to spoiled rotten for the next week. \"Call us when you arrive, don't worry about a thing here. We'll pick you up from the airport when you return,\" Mum stated.\n\nWe hugged and kissed the kids, now distracted by the arrival of their grandparents, hugging them too, before Charlie and I got in my car, looked at each other, shared a kiss then burst into laughter. \"Thank god for grandparents,\" I said.\n\n\"A whole week without kids, Matthew. What are we going to do?\"\n\n\"I'm going to fuck my wife senseless pretty much the entire time.\"\n\n\"I like the sound of that. When do you intend on starting?\"\n\n\"As soon as we get to the airport hotel. Then I'm thinking on the plane, if you're up for it. Then as soon as we get to the resort on the island.\"\n\nCharlie giggled. \"Good thing I can't fall pregnant anymore.\"\n\n\"All the more reason for us to fuck like rabbits.\"\n\n\"Not the most romantic thing you've ever said, Matthew, but by god I can't help but agree.\"\n\nShe grabbed my hand and kissed it before locking our fingers together. Every time I had a chance, I just turned to look at her. She kept her eyes on me, the slight smile on her face I knew so well, the eyes that of a devoted wife and partner, nothing but love for me in them. I still had to pinch myself at times that this was all real, that she was with me now, that she was my wife, the mother to my children, and that she would never leave me. I look back at my earlier life and had to shake my head at times, wondering how close I had come to throwing it all away. The lost decade, I now called it. I know, at the back of mind, I continued to make up for it every day. I told her I loved her waking up every morning, I told her throughout the day, and it was the last thing I told before we went to sleep every evening.\n\nThe line between love and hate is thin, but in my life now, there was only love."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "incest",
        "taboo",
        "romance",
        "siblings",
        "brother",
        "sister"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-thin-line-between-1"
}