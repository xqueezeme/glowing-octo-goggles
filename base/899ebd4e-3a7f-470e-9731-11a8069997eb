{
    "title": "Dindi Pt. 03",
    "pages": [
        "TRAVIS\n\n I overslept. \n\nThere was a thumping in my head.\n\nFuck.\n\nAnd today of all days.\n\nI had only myself to blame. As usual.\n\n I woke up and forced my tired legs out of bed. The stiffness had worked its way inside every muscle in my body, and I tried to stretch it away, unsuccessfully. Glancing sideways at the clock on my bedside table I saw it was past noon already. Shit. The plan was to ask Morena for lunch, but now I was too late. I ran a hand down my face squinting at the sunlight piercing through the window. Maybe I could ask her for coffee. \n\n Gropping the bed, I found my phone hidden under my sheets. Ten missed calls. All of them from my mother probably calling me to ask when I'd go home. Had I answered any of her calls I would've promised her I'd go home for my birthday. Same promise I made her every year. Same promise I broke every year. Shoving my family issues into the back of my mind I searched my contacts list for her.\n\n Dindi.\n\n A smile moved my lips. I put the phone to my ear and waited -impatiently- while it ringed. One, two, three, four, five, six...nine times, until her soft voice said, \"Hello?\" with a careful tone. She didn't know it was me. She had given me her number, but she didn't have mine. \n\n \"Dindi.\" I breathed relieved she'd taken the call.\n\n There was silence in the other side of the line for a painful moment. \"Travis.\" She finally said. \n\n What now? How do I do this? Why the fuck am I so nervous? Some hours ago she was coming on my fingers, moaning my name and now I had trouble asking her out for coffee. Me. Nervous. When I could make a living out of swaying women into my bed.\n\n \"So...\" I began, \"You promised I would see you today.\" The bad night of sleep had conferred my voice an unpleasant rasp.\n\n \"So I did, didn't I?\" I heard her smile.\n\n \"I was wondering if you would like to go for a coffee with me?\" Another torturing pause followed where I forced myself not to think she was hesitating or having seconds thoughts about seeing me. \n\n \"Mmm, I'm actually close to you. Do you know anywhere nice?\"\n\n I felt a weight being lifted from my chest. My relaxed exhale was audible. \"Yeah, I do. I'll text you the address. Can you be there, hmm, let's say,\" I checked my watch, but in truth I could be ready to bolt out the door right that second. \"In one hour? Does that work for you.\"\n\n Five minutes would be less bitter to wait, but I had to find a way to look like a person instead of a train wreck.\n\n \"Yeah. It's perfect. See you in one hour.\" She said.\n\n \"I can hardly wait, Dindi.\" And that was the understatement of the year.\n\n She chuckled, the sound reaching me through the line. \"Alright. Travis Keegan.\" And she hang up.\n\n Right. One hour. I raked my hands through my mess of a hair, running it down my beard which was starting to get way too bushy. One hour would have to be enough for me to get clean and sober up. The least I could do was look decent to meet her. At least on the outside.\n\n ****\n\n I had texted her the address of one of my favorite cafes in Brooklyn as soon as she hung up the phone. The pungent scent of roasted coffee grains surrounded me while I waited for her, my fingers drumming rhythmically on the wooden surface of the cafe little table. I arrived early, not bearing to pace around my loft anymore. She was late, though. \n\n Weren't British people supposed to be punctual? \n\nMaybe she decided not to come after all.\n\n The thoughts were still hanging around my mind when she walked in through the doors. I immediately pushed up from the table and stood to receive her. Her eyes searched around the place and I saw some heads turning in her direction. Absentmindedly, I wondered if she knew how beautiful she looked. How beautiful she was.\n\n She was wearing a high waisted skirt long enough to cover her knees in a burgundy colour that made her skin stand out. The white top she wore tied behind her neck left a flash of the skin of her stomach exposed. Just a thin, innocent line of skin between the hem of her top and the waist of her skirt. Enough to set my imagination on fire, though. My fingers knew just how soft that skin was.\n\n Morena's eyes found mine and she flashed me a smile that had my mouth morphing into the widest grin in the world, just as it always did around her. She moved toward me, swaying her hips and making her skirt wave around her. I just smiled wider. \n\n \"Hi.\" She said when she reached me.\n\n When I left home I had made up my mind to act normal. However, with her here in front of me I was reduced to a smiling idiot. Why the hell must she be so beautiful? I leaned into her and kissed her forehead, allowing my lips to linger there for a while. She smelled of vanilla, a scent I began to associate with her.\n\n \"I'm so glad you came.\" I said when I finally gathered the strength to pull away.\n\n She cocked her head to the side, smiling shyly. I could tell she was blushing. \"I told you I would.\" \n\n I had chosen the smallest table I could find, but still had moved her stool closer to mine when I arrived. \n\n \"Can I get you a coffee?\" I offered and I was, not surprisingly, still smiling at her. At some time I was sure my cheeks would freeze and that satisfied grin would become permanent.\n\n \"Oh, I think I'd rather have tea. Green tea, please.\" She brought a hand up to her ear and put some loose curls behind it. \n\n Her hair was arranged in a messy bun on top of her head, a few stubborn coiled tendrils escaped and fell to the sides of her face and nape, leaving the naked skin of her shoulders unprotected from my gaze. When I circled around the table to go order our coffee I saw that all of the glorious, and chocolate creamy skin of her back was unobstructed from view -and touch- with the exception of a thin white line tying her top secure in place. \n\n My fingers moved without the consent of my brain, and when I caught myself, I was feeling the smoothness of her skin under my fingertips. She shivered, and stood still as a rock as I ran the fingers of my right hand from one of her shoulders to the other.\n\n \"Travis.\" She whispered my name and I drew my fingers back, but before I left I placed a kiss on her nape, and again her body shook slightly. It would have been a sin not to kiss her there when her hair was up offering me her skin on a silver platter. She had to know what showing skin like that did to a man.\n\n I ordered her green tea and my coffee and returned to our table. She was looking out the window, at the view of the East River under the Brooklyn Bridge.\n\n \"This place is really nice.\" She remarked.\n\n \"I like my view better.\" I said, my eyes fixed on her face. \n\n She reached for the cup of tea I'd previously pushed in her direction, laughing softly. \"Gosh, you're impossible.\" She muttered, pouting her lips to blow at her steaming tea cup.\n\n I had my back to the window, and the light that came in through it lit her up, making her skin glow like she was made of pure chocolate gold. The little green in her eyes leaked through the light brown. As much as I had studied her face from the picture I had, there were things I hadn't noticed before. Little things like the freckles on top of her cheeks and nose, which were so subtle over her dark skin they were easily missed; or the almost imperceptible dimples in the corners of her mouth that would make you think she was always smiling; or the brown outlining her lips, with a rich pink tinging their center.\n\n \"I've told you're beautiful, haven't I?\" I was loving the way I was making her blush so violently. Even her round little nose was coloured pink. \n\n She rolled her eyes, all shy smiles. \"Let's strike a deal, you and I, Travis Keegan.\" She said, and I'd never enjoyed the sound of my name so much. \"You stop saying that, because I get it. You think I'm marvellous and gloriously beautiful. Thank you very much, by the way.\" I laughed heartedly, paying as much attention as it was possible to how she moved her hands when she talked so fluently. Her whole body was so expressive, it was hard not to. \"You stop it, and we'll talk about anything you want. Anything at all. You can ask me any question you like, so long as you stop with the 'you're beautiful' comments. And go easy on the smiles, too! I think it's quite lovely really, but I'm starting to worry for your facial muscles.\"\n\n I needed a minute to catch my breath with the laughter she drew out me. The way she said my name -Trah-vis-, made me wonder just how she would sound whispering it breathless under me. This time, though, I wanted to enjoy talking to her as much as I could to learn more about her, and so far I liked what I heard. I would risk saying she wasn't only beautiful, but quite possibly the funniest girl I've ever met. Real, not feigning any emotion, any laughter; not pretending to be someone she wasn't just to please me and get something out of that.\n\n \"Anything, Dindi? Really?\" I asked her.\n\n She trapped her bottom lip between her teeth and my eyes found it hard to look anywhere else. When I looked up into her eyes she held my gaze and we just stared at each other. The round table we sat in was little enough that it was easy for me to lean over and kiss her. \n\n And I did it. \n\n At the same time my body leaned toward hers, hers leaned toward mine. I just touched her lips. Just placed a chaste kiss on her mouth, just to feel its softness. She moaned ever so slightly, and I pulled away just enough to take in her reaction. She drew in a sharp breath and I was ready to sit back on my stool when her hand on my nape brought my mouth back to hers. \n\n I felt her parted lips on mine and I opened my mouth to her. The taste of the coffee I had drunk transferred to her tongue. Like it had been the night before, her kiss was soft, if only more tender. My whole body had only began to register how good it felt to kiss her once more when she broke the contact. She sat upright in her place, and I was left with my body leaned over the table, facing her satisfied expression. \n\n \"You like your coffee strong.\" She pointed out .\n\n I beamed with pleasure at her observation. I fucking beamed. She knew how I liked my coffee from tasting it on my tongue. In that moment a certainty struck me. That was the third time that woman and I talked, and I could already say with absolute conviction I would always compare her to the women that would follow her. Because there would be women. Morena already proved herself too smart to stick around me for too long. She deserved better. But I hoped she'd give me some of herself before she came to her senses. Whatever this insane attraction was I knew she felt it too.\n\n \"I'm actually thinking about switching to hot chocolate.\" I teased.\n\n \"Oh, bugger off.\" She gave me another one of her eye rolls, and again I smiled. \n\n I smiled around her. It was what I did. Anyone who could see me would think I was retarded. It'd been so long since I smiled with such genuine ease, but with her it seemed smiling was the only thing I could do. \n\n She was nervous. I could tell by the way she kept biting at her lip and trapping those loose curls behind her ear. The other two occasions, when I'd had a chance to be with her were too awkward, too intense. This time I wanted to go easy with her, make her feel comfortable and make her talk to me so that later, when I touched her, she'd welcome me.\n\n \"So, Dindi, you said I can ask you anything. So here's a question for you.\" \n\n She raised one eyebrow while sipping her tea.\n\n \"How old are you?\" I asked. First I would get the basic information, then later the things I really wanted to know. Which pretty much included everything about her.\n\n She laughed. \"Mmm, well, I'm 32 actually.\"\n\n My surprise was obvious on my face.\n\n \"Do not make that face, Travis! I'm practically a baby!\" She jabbed a finger on my shoulder and just that little contact felt good.\n\n I held up my hands. \"I didn't make a face!\"\n\n \"Yeah, you did!\" She accused.\n\n \"Well, it's only because you look younger. I would've said you were 27 tops.\" She really did look younger. If she'd told me she was 25 I would have believed her without a doubt. Her skin was smooth and even, the fullness of her lips revealing she liked to laugh. Those incredible eyes of hers shone with youth.\n\n \"However did you come by those eyes, Dindi?\" They were extraordinary and unusual for her skin tone.\n\n She eyed me amused and I saw her lips forming the word 'Dindi'. She liked it when I called her that. \"They're my father's.\" I noticed a flash of sadness cross her features. \"He was German.\"\n\n Was. Past tense. I knew a thing or two about losing a father. \n\n \"I'm sorry.\" I said sincerely. \n\n She lowered her eyes to her cup of tea and entertained herself with the spoon. \"I was 9. All my memories of him are blurred.\"\n\n In a rush of sympathy I reached for her hand, resting on top of the table, and entwined her fingers into mine. I let them stay that way. Morena was looking at me with curious confusion and I could see she was about to ask me something.\n\n \"And your mother?\" I asked her first to divert the conversation from the dead fathers topic. My memories of my father were fresher than I would've liked them to be. \n\n Her entire face beamed when I asked about her mother. She had to be the source of such delightful skin.\n\n \"My mother is very much English, but she's black. This is all hers.\" She said winding a curl around her index finger. \"Papa taught German literature in the university and she was his student. He waited until she graduated to ask her out. His name was Mirko and he was 16 years her senior.\" She stopped, catching herself as if she'd been telling me someone else's secret. It was easy to see she had loved her father very much, but mentioning him also made her sad. I didn't like that.\n\n \"Do you look like her?\" I shifted the topic back to her mother. The smile on her plump lips made my body automatically lean forward, wanting to kiss her again.\n\n \"I'm the spit image of her, actually.\" \n\n \"Then your father was a smart man.\" \n\n Morena's expression softened. \"He was.\" She said softly. A shade of sadness lingering in her voice.\n\n I brought her hand to my lips and kissed the soft skin on the inner part of her wrists. I was beginning to think that maybe she was made of vanilla, so sweet she smelled.\n\n \"What are you doing in NY?\" I hoped her stay was permanent.\n\n \"Teaching.\" She sounded breathless.\n\n I smiled into her hand and brushed my lips over her skin, closing my eyes. When I opened them, her teeth were trapping her lip.\n\n \"Teaching what?\" I convinced myself that her inability to elaborate was caused by me, my touch. \n\n \"Art history.\" She said composing herself and pulling her hand back, making me ache from the loss. \n\n She shifted, obviously uncomfortable in her stool, but there was no mistaking her reaction. She too felt the magnetic attraction I did, even if she was fighting it when I gave in to it. It wasn't one sided. It wasn't my wishful thinking. She wanted me, too. I had seen it in her eyes last night.\n\n \"Last night, when-\" I began.\n\n \"How old are you, Travis?\" Morena asked suddenly, cutting me off and looking anywhere but at me. \n\n Sensing where I was going with my question, she stopped me. She stopped me when I was about to ask her what would have happened had George not taken her away from me right when her hands were getting rid of my belt. Maybe she needed time. And I was willing to give her anything she wanted, or needed, or asked for in order to get what I wanted. \n\n \"I'm 35.\" I answered. \"Well, actually I'm still 34. I'll be 35 in two months.\"\n\n \"Really? I would have thought you were older.\" She was clearly as surprised with my age as I had been with hers.\n\n \"Do I look that bad?\" \n\n \"Oh, no! Of course not!\" She said wide eyed. \"You just seem to be older. There's something about you. You kind of look like someone who's seen a lot. Experienced, I mean\" She explained herself with a distant look in her face, as if she were seeing past me, through me. She had no idea how right she was.\n\n \"Yeah. Well, maybe you'll come to my party.\" It was half a question, half a statement.\n\n \"Will there be chocolate cake? I'll go if you promise me there will be chocolate cake.\"\n\n I took in her look of light happiness. It was contagious. \"There'll be anything you like, Dindi.\" The sound of her laughter was music to my ears. The joy I felt knowing I was the one making her laugh that way was indescribable.\n\n \"Where did you come up with that name? Dindi?\" She asked, resting her elbows on the table and her chin on her joined hands. \"Sounds like the name of a cow you grandma owned.\"\n\n There she was again, coaxing a real laugh out of me. \"It's the name of a song.\" I explained.\n\n \"Hum?\" She arched one brow.\n\n \"You've never heard it?\"\n\n \"Nope.\" \n\n \"Well, it's kind of old. It was playing in the elevator that day I saw you.\" That day you took away my sanity.\n\n She furrowed her brows. \"I didn't pay attention.\" She admitted, and the way her eyes met mine confirmed she had felt the same way I did that day.\n\n I reached for my phone to search for the song so she could hear it, but she put her hand over mine.\n\n \"Sing it for me.\" She commanded.\n\n \"What?\" Did she want me to sing?\n\n Morena looked at me like I was stupid. \"Come on. You know it, don't you?\"\n\n An awkward chuckle escaped me. \"Yeah, I know it. But I'm a shy singer.\" \n\n \"I don't mind.\" She said with playful innocence. \"If you're so shy you can sing it just for me. Here.\" She pointed to her ear. \n\n Oh, that I could do. \n\n \"Alright. You asked for it.\" I said.\n\n I shifted my stool even closer to hers. Before putting my mouth to her ear though, I put a curled tendril of hair behind her ear, something I've been itching to do myself since the first time I watched her do it. Then I kissed her earlobe, delighting myself with the shiver that took over her body. I mentally searched for a verse in the song that most suited the moment. I took a deep breath and my voice, hoarse and unmusical invaded her ear. \n\n \"Oh, Dindi, if I only had words I would say all the beautiful\n\nThings that I see when you're with me, oh my Dindi.\" I sang to her, picking up the song from the middle. \n\n Morena's shoulders lifted when she shivered, and her breaths became short and ragged. She leaned her head against mine and grabbed my arm, her nails biting the skin under the fabric of my t-shirt. I went on singing when her reaction to my awful voice was one of pleasure when I expect her to laugh.\n\n \"Don't you know, Dindi, I'd be running and searching for you like a river that\n\ncan't find the sea, that would be me without you, my Dindi.\"\n\n Mirroring hers, my own breathing was hard. She turned her head to the side and suddenly my lips were no longer brushing her ear, but her parted mouth. I didn't kiss her, though. I was enjoying her need to be kissed too much. \n\n With my thumb under her chin, I asked her \"Do you want me to kiss you, Dindi?\" \n\n She simply nodded.\n\n \"I like to hear you say it. You should know that by now.\" I whispered, my mouth moving against hers as I spoke.\n\n \"Yes.\" Her voice was husky and heavy with her need. Her need for me. \"I want you to kiss me, Travis.\" \n\n When she said my name, she couldn't have known how lucky she was we were in such a public place. My mouth crushed hers and I groaned with her pleasure, easily heard in her little moans. I weaved my fingers through her hair and silk could not have been smoother. I was in my mid thirties. I thought I knew want. I thought I had experienced it countless times before, but when I felt the scratch of her nails in the skin of my neck I pulled away abruptly, because I was getting way too hard in a place with too many people watching me kiss her as if we were alone. ",
        "My head slid down until it rested on her shoulder, my face in direct contact with the softness of her breasts while I waited for my body to calm down. She nuzzled my hair and her hands worked patterns over my scalp. I was sure she was making a mess. I didn't give a shit about my hair, though. Not when I could so clearly hear the thumping of her heart through her chest. I figured that was a good moment to ask her the question she avoided before.\n\n \"Last night,\" I felt her tensing, but went on anyway. \"If George hadn't stopped you. Would you have?\" Her chest rose and fell under the weight of my head. \n\n \"Would I have what?\" She feigned misunderstanding. \n\n She'd make me say it.\n\n \"Stopped yourself. From having sex with me.\" \n\n Morena didn't answer me. I forced my head up and put both of my hands on each side of her face. I repeated the question in silence, while I locked my eyes with hers. My answer was there. 'No'. She wouldn't have stopped, just like I couldn't have. I kissed her again, tenderly, and slowly until she moaned. \n\n \"Do you still want it?\" I asked when I pulled away.\n\n That was it. All I wanted from life in that moment. For her to say yes. \n\n \"Yes,\" She admitted to my absolute relief. \"Otherwise I wouldn't even be here now.\"\n\n Before her words had even fully sunk in my brain, I gripped her hand and led her out the cafe's door.\n\n ****\n\n MORENA\n\n George wanted to eat out. I said yes to his suggestion in the blink of an eye. Last night we had both crashed into his bed. He being way too drunk on vodka, and I, way too drunk on Travis. We'd woken up a little before noon, the weight of George's pale, long legs over my short, dark ones. None of us had the energy nor the stomach to cook anything, so going out was the best option.\n\n We were in some vegan restaurant in Brooklyn and it didn't take him long to start questioning me about about my night. I had hoped he'd been too drunk to remember I spent some time locked in a bathroom with Travis. Apparently he remembered it all too well.\n\n \"I want to hear everything, Mo! Spill it!\" He choked on his excitement.\n\n I forked more lettuce than I was able to chew and shoved it inside my mouth hoping that it'd give me time to concocted an answer. He'd tease me for eternity once I told him the truth.\n\n The truth? The truth was that I was helpless to resist a gorgeous man sliding his hands into my panties. The truth was that Travis Keegan had me coming on his fingers and I fucking loved it. The truth was that I wanted more. There. Zero points to my self control. Of course I would never say that out loud. Not even to George.\n\n \"You can try and hide it all you want, darling, but I know you had an orgasm .\" He leaned back in his chair and crossed his arms over his chest while I choked on lettuce.\n\n I coughed and drank some orange-kale smoothie to force the food down. \"What?!\" I croaked, eyes watering.\n\n George had this look he liked to give me, a knowing look that said he could always call me on my bullshit. \"Tell me what happened. If you don't I'll have to imagine it and my imagination is very fertile, Mo.\" He threatened.\n\n Of course I would tell him. He was my best and oldest friend. Also, Gee knew something about Travis, which was more than I could say myself.\n\n \"Yes, George, I did have one.\" I said with a defeated sigh. \n\n His smug grin was as annoying as it was contagious. \"Was it good?\" He practically leapt off his chair with enthusiasm.\n\n I gave him my best roll of eyes, but smiled nonetheless. \"Yes.\" I drawled. Oh, yes. It had been good. Fucking fantastic. \n\n\"So is it really as big as they say?\" Gee's curiosity knew no bounds.\n\n Who the fuck are they?\n\n \"Well...\" I began. \"I didn't exactly see it, mind you...\" I brought my juice to my lips.\n\n \"What the fuck do you mean? Was it really dark or was it really small you couldn't even see it?\"\n\n I laughed into my juice, sending drops of it into my nose. George was sitting under the sun, despite me telling him not to, because he always got red and new freckles sprang on his skin. He looked lovely, though. He had that kind of 'I've just had a shag' hair, its red shone so brightly under the mid-day sun it was like a real living fire. \n\n \"No! It wasn't small! I think...I didn't see it, George! I didn't have a chance to, because you interrupted me!\" And for that I was equally thankful and resentful toward him.\n\n \"Wait a minute!\" Gee's hand made a swirl in the air. \"So if you didn't see it, did you at least use it?\"\n\n My blood temperature seemed to go up a few degrees. \"Well...\" The beginning of a laughter stopped me. \"He's got really agile fingers.\" Little Me and Travis's Magical Fingers.\n\n \"WHAT!?\" Every head within hearing distance spun our direction. \"You're glowing like that because of a bloody finger bang session?! Lord! Imagine when he fucks you properly, Mo!\"\n\n Yep. I had imagined that.\n\n My body was shaking with laughter and I put my hands on my face, groaning. \"He says he wants to see me today. I gave him my number, but I'm not sure...\" I admitted.\n\n Gee took my hands in his. \"Mo, don't you think is time you let someone in?\" The sympathetic look he gave was the same one I received before he punched my 'Enchanted Dance' date for kissing another girl. \"Even if it's just for fun.\" \n\n I was starting to worry Gee knew something about this Travis- besides the fact that he apparently had sex with everyone- he wasn't telling me. Obviously he was a fan of the idea of me to sleeping with him, but no more than that. \n\n \"Gee? What do you know of him? I mean about him. What's he like?\" Better to talk about Travis than my emotional walls.\n\n George pouted his freckled lips and shrugged. \"Well, I only know of what most people- meaning gossipers- do. He's really famous, Mo. I mean, he's one of the best in his business. He's always dating some model, but besides that, I hear he's a bit private so I can't tell you much. He seems to be fine from what I hear but he's a bit of a slut, really.\" He gave me a little smile when I arched an eyebrow at his last remark. \"Darling, I've told you before. You can handle him. It's not like you're going to marry him and have his babies. Just have some sex. I hear he's good at that.\" Seemed like George was pleading with me to just pawn the pum, I wanted to side-eye him.\n\n \"I don't know, Gee. A man whore is all I've ever tried to avoid.\" But I felt drawn to Travis, even though there was a keep out sign on his forehead. Then again, you were required to have some kind of irresistible appeal to became a man whore. \"I think Travis just wants to-\" My phone started ringing before I could finish my sentence. \n\n An unknown number flashed on the screen. Could that be him? I didn't pick it up, I just stared at it pondering what I would say if it turned out to be him when I answered - if I answered. Unexpected calls always made me a bit wary.\n\n \"Mo? Won't you pick it up?\" George asked.\n\n Making up my mind, I picked up the phone and excused myself from the table. If it were Travis, I didn't want to talk to him under George's scrutinising gaze. \n\n \"Hello?\" I said with caution.\n\n \"Dindi.\" It was him. His voice was pure relief. \n\n I pressed the phone to my chest, uncertain of what to do next. He was going to ask me out. I wanted to say yes. I wanted to with of all my body, because my mind screamed at me; Say no! He's a slut!\n\n Just have some sex. George had said. Just sex. Nothing more. \n\n I bought the phone back to my ear. \"Travis.\" I said.\n\n \"So...\" His voice wavered, husky and tired as if he'd just woken up. \"You promised me I'd see you today.\"\n\n I had. I had promised him just that when he had his lips on mine. I smiled at the memory. \"So I did, didn't I?\" \n\n \"I was wondering if you would like to have a coffee with me?\" He asked.\n\n There it was. He'd asked me out. I wanted to go. I didn't even tell myself I didn't, because I really did. The thing was, my mind had doubts about it. George, though, had been right as always. God, I needed a shag, and Travis was right there, offering it to me on a silver platter. My pussy seemed to demand I say yes to him, moistening on its own from the sound of his voice and the memories of his fingers making me thank god for having a clit. In addition, I've always been good with separating the physical from the emotional. Even if I felt like Travis wasn't so easily deconstructed. \n\n \"Mmm, I'm actually close to you. Do you know anywhere nice?\" I said, afraid he'd suggest his own loft as the site for our meeting. It was a bad idea to be so close to his bed. Bad, bad idea.\n\n Travis let out a long, loud exhale. \"Yeah, I do. I'll text you the address. Can you be there, hmm, let's say,\" He paused. \"In one hour? Does that work for you.\"\n\n One whole hour would give my thoughts too much time. Maybe he needed it to get ready. \"Yeah. It's perfect. See you in one hour.\" I agreed.\n\n \"I can hardly wait, Dindi.\" He said it and I believed him, feeling myself blushing.\n\n Last night he'd said: \"I can't wait to feel you coming like that on my dick, Dindi.\" And as much as I'd tried to, I couldn't shake that image out of my head.\n\n I chuckled stupidly. \"Alright. Travis Keegan.\" And I hung up on said Travis Keegan. Trouble's middle name. With whom I had a date. \n\n Isn't it fantastic how the mind can find plausible excuses in order to convince itself is it correct to do something you know you shouldn't? \n\n Before I went back to the table to face Gee's interrogation I said a little mantra to myself:\n\n Just sex. You'll see him and it will all just be about the sex.\n\n Because, whether I had reservations about it or not, it did not matter. I wanted him, and I wasn't even going to try to deny my desires. \n\n ****\n\n Travis texted me the address of a cafe near the East River. It wasn't far from where George and I had been having lunch so I decided to walk there. The day was beautiful, the heat wasn't so uncomfortable that I'd get all sweaty and disgusting.\n\n While walking, it occurred to me that I didn't know a thing about Travis, not a single significant thing which would tell me what kind of person he was, besides an alleged man whore with all the skills of one. Also, the not knowing just made me want him more. It made me curious to peel away his layers and know what he hid, even though I shouldn't want to get in so deep with him. Knowing more might lead me to caring. The last time I had allowed myself to care was the sole reason why I treated so cautiously now. \n\n Regardless of the fact he smiled all the time, there was something under that instantaneous happiness. To me it seemed like a sadness, some darkness he kept at bay. His eyes, though, clear blue as the sky, made it all too easy to see he wasn't always as smiley as he had me believe at first.\n\n Glancing at my wrist watch, I berated myself for being a little late. I had been walking unnaturally slowly while lost in my thoughts. Picking up the pace, I turned a corner and the address he'd given me came into view.\n\n I pushed the cafe doors open and caught a whiff of toasted coffee beans. The place was crowded with people and I was silently alleviated of my fear of throwing myself at him if he just fixed those blue eyes on me for too long.\n\n I spotted Travis standing up behind a little round table. He stood above most people being unimaginably tall. His hair was tied messily, in a bun, behind his head. There was a loose strand of gold falling to one side of his face; and he'd had his beard neatly trimmed. I smiled, in spite of myself. He really was a handsome man. I wasn't in the business of putting myself down, but he really was very, very handsome a man, and George had said he always dated models. So, I couldn't grasp why on earth he was trying so hard on me. I was fine with who I was, but I also knew how much I could take, and he was more than I'd dare bargain for.\n\n He smiled back at me with that wide, sincere grin that sent goosebumps throughout my skin. Remembering how to move, my legs led me to him.\n\n \"Hi.\" I said when I reached him, sounding shy to my own ears.\n\n Travis did the same thing he'd done the first time I saw him: He smiled at me. A short few seconds went by before he closed the distance between us and placed a soft kiss on my forehead. Heat spread through me faster than fire burned gasoline, especially since he did not immediately pull away. His lips lingered on me, and I really loved the way they felt against my skin.\n\n \"I'm so glad you came.\" He said with a clear exhale of relief.\n\n I found it funny that he would feel as anxious as I did. I doubted many women ever said no to him. \"I told you I would.\" I said, and sat on the only other stool around the table.\n\n \"Can I get you a coffee?\" Travis asked me with that smile that I was prone to believe was the normal setup of his mouth.\n\n \"Oh, I think I'd rather have tea. Green tea, please.\"\n\nHe nodded, eyeing me in a way that made me feel naked, then circled around the table to go and order our drinks. Suddenly, I felt him touch me. My heartbeat went wild, the blood thumping in my ears. A delicious shiver ran through me, from head to toe, as he skimmed his fingers across my exposed back, going from one shoulder to the other. I twisted my fingers in my skirt to keep myself from spinning around and jumping his bones right there and then.\n\n \"Travis.\" I said under my breath in a plea for him to stop. He was driving me crazy.\n\n He understood me, and his touch left my skin, only to be replaced by his lips on my nape. The sensation going straight down my spine to reach that warm, moistening spot in between my crossed legs. When he went to get our coffee my skin was left tingling with the memory of his touch. \n\n From where I sat I had a perfect view of the East River through the windows. Travis returned with our drinks and sat across from me, making for a better view in my opinion.\n\n \"This place is really nice.\" I remarked.\n\n He fixed his blue eyes on me and pushed the cup of steaming tea in my direction.\n\n \"I like my view better.\" He said with a mischievous grin.\n\n My face felt hot and I laughed awkwardly. I wasn't behaving accordingly with my position in life. I was way past that phase when a smile from a cute boy -or a drop dead gorgeous man- sent butterflies flying in my stomach.\n\n \"Gosh, you're impossible.\" I brought the cup of tea to my lips, blowing at the hot liquid.\n\n Travis didn't disguise his direct gaze. He stared at me as if he were looking for something in my face. I saw his pale blue eyes go over my nose, my cheeks and then down to my lips, where they stopped. I had to fight the urge to squirm when a shiver raised the hairs on my nape and arms. Even if I tried to tell myself I didn't want him, that would never do. Who was I kidding? I was dying to kiss him again. \n\n The light, coming from behind him, cast a shadow over his features, but outlined his broad shoulders. The sunlight that reached him made his golden hair shine like he had a halo around his head. I could see the various shades of blond that coloured his hair; wheat yellow, gold and sandy. His beard, hiding a gloriously chiseled jaw, was darker with shy hints of red. \n\n \"I've told you're beautiful, haven't I?\" He said a bit distracted, and I had been thinking exactly the same thing about him. He really was beautiful.\n\n By that point the blood running under my skin was boiling. As it had happened that day in the elevator I felt giddy with his flattery. I gave him an eye roll, but couldn't help but to smile.\n\n \"Let's strike a deal, you and I, Travis Keegan.\" If I was to concentrate and have an actual conversation with him, he'd have to stop with the flattery. \"You stop saying that, because I get it. You think I'm marvellous and gloriously beautiful. Thank you very much, by the way.\" I was speaking nervously with my hands making him laugh at me which I loved. He sounded so light and young with his eyes crinkling. \"You stop it, and we'll talk about anything you want. Anything at all. You can ask me any question you like, as long as you stop with the 'you're beautiful' comments. And go easy on the smiles too! I think it's quite lovely, really, but I'm starting to worry for your facial muscles.\" \n\n Travis was still laughing when I finished, and I caught myself staring at him, admiring him and that ridiculously obvious male beauty he had. I watched the way his mouth, large despite his thin lips, rolled over his perfect teeth when he smiled, or how he automatically ran his hand over his hair to try and keep that stubborn blond strand back, when it insisted in falling back down. It seemed to me it wanted to touch his face as much as I did. \n\n He caught a breath before speaking and looked positively devourable. \"Anything, Dindi? Really?\"\n\n Anything, but not everything.. I thought with myself. \n\n I bit my lip hard, to focus on something other than my uncontrollable desire to kiss him. Travis's eyes travelled down to my mouth again, he seemed to know what I was thinking, because when I felt my body leaning toward his, I saw his was leaning toward mine as well.\n\n His lips touched mine very lightly. It was barely a kiss, more of a skim of lips. I heard myself moan, wanting more but he pulled away. That wasn't enough for me, not even close. So I snaked a hand around his nape and pulled him down to kiss me properly. My lips forced his mouth open and my tongue touched his savouring the bitter aftertaste of strong coffee. I wasn't as eager about it as I felt, and I pulled away before the spark in between my legs became an all consuming fire. Travis gave me a delightful smile before returning his body to his stool.\n\n \"You like your coffee strong.\" I said tilting my chin and pointing at his coffee cup.\n\n He presented me with the brightest smile I'd ever seen in my life and for a second there I felt breathless again.\n\n \"I'm actually thinking about switching to hot chocolate.\" He teased with a suggestive look my direction.\n\n \"Oh, bugger off.\" I gave him another eye roll and honestly only didn't giggle like an idiot because I forced myself not to.\n\n When my gaze went up to meet Travis's he was all smiles, so much so he looked dumb like he had a week ago in the elevator.\n\n Why did he smile like that? Why at me?\n\n The air became thick when that same sexual tension from the elevator came creeping back in.\n\n \"So, Dindi,\" Travis began, breaking the mood, thank goodness. \"You said I can ask you anything. So here's a question for you.\"\n\n I sipped my tea wishing into the cup he wouldn't ask me anything I wouldn't want to answer.\n\n \"How old are you?\" He asked.\n\n Oh, an easy one. A relaxed laugh left my lips.\n\n \"Mmm, well, I'm 32 actually.\" Lord, I wasn't that young anymore. Not nearly young enough to be blushing so much.\n\n Travis's blond eyebrows shot up and he widened his blue eyes which I noticed, belatedly, seemed to be darker today, like two big sapphires. He was surprised. \n\n \"Do not make that face, Travis! I'm practically a baby!\" I poked him in the shoulder with my finger. A nervous, silly reaction of my body caused by a repressed need to touch him.\n\n He brought his large hands before him, holding his palms up in a gesture of pacification. \"I didn't make a face!\" His amused expression was heavenly.\n\n \"Yeah, you did!\" \n\n \"Well,\" He began, licking his lips and making my whole body hum with jealousy. \"It's only because you look younger. I would've said you were 27 tops.\"\n\n Again, I blushed fervently. Most people did think I looked younger than I was. I supposed I had mom to thank for that.\n\n \"However did you come by those eyes, Dindi?\" He asked, his voice low and grave while he looked at me like I was a cute puppy dog. Travis had his blue eyes concentrated on my face and it was like a fire scorching my skin. How was it possible for a simple look to make you feel so good underneath your clothes? ",
        "Dindi. I mouthed the name, testing it on my lips. But it was his nickname. It belonged to his tongue. \"They're my father's.\" I confessed, and felt the familiar sting of longing I had anytime I thought of Pappa. \"He was German.\"\n\n Travis's eyes dropped a little at the corners and his smile vanished. \"I'm sorry.\" He said knowingly.\n\n The teaspoon in my cup was suddenly the most interesting thing in the world. I remembered with a painful vivacity, my father had eyes just as clear blue as Travis's were.\n\n \"I was 9. All my memories of him are blurred.\" And I was afraid I'd lose them all together one day.\n\n An incredible warmth engulfed my hand that rested on the table and I looked up to see -and feel- Travis clasping his fingers around mine; His pale and long, and mine thin and dark. He seemed to be lost in some memory, and I saw a shadow of the same sadness I felt on his face. He could tell my father was dead by the tone of my voice alone. Had he lived through the same experience? I was about to ask him of his father when he spoke.\n\n \"And you mother?\" \n\n Maybe he didn't want to talk about it, so I let it go. I really shouldn't even be trying to uncover all of his secrets. It was supposed to be about sex, not learning every bloody thing about him. Except that, the more we talked, the more I wanted to talk. Despite being well aware of the danger knowing presented, I was all too willing to answer his inquiries. \n\n \"My mother is very much English, but she's black. This is all hers.\" The sadness I felt when I thought of my dad was replaced by sheer happiness when I thought of mom; I missed her so much it hurt. I wound a loose curl around my finger, thinking of my mother's own stubborn curly hair. Travis looked at me like I was the most fascinating creature in the world. \"Pappa taught German Literature at the university and she was his student. He waited until she graduated to ask her out. His name was Mirko and he was 16 years her senior.\" I caught myself, smiling and swallowing the lump in my throat. I'd gotten carried away and was talking too much. Magnificent job for someone who claimed she didn't want to dive in too deep.\n\n \"Do you look like her?\" Travis asked.\n\n I smiled when I recalled the day a man in the grocery shop had asked us if we were sisters. \"I'm the spit image of her, actually.\"\n\n \"Then your father was a smart man.\" \n\n Wow. Travis Keegan, flattery will get you far. Probably far inside me...\n\n \"He was.\" I lowered my eyes to my cup again, trying to recall what he looked like from my memories alone, but failing at it. All I had were the eyes. Tender blue eyes. Just like the ones staring at me from across the little cafe table.\n\n I felt Travis's soft lips kissing the thin skin on the inside of my wrists. I crossed my legs under the table, pressing my thighs firmly together. I could feel the moisture gathering. \n\n \"What are you doing in NY?\" He asked, his warm breath condensing over my skin.\n\n I tried to remember how to speak. But the only thing my tongue seemed to remember was what kissing him felt like. \n\n \"Teaching.\" I responded under the little breath I had.\n\n I felt his smile on my hand and his lips brushing against it. He closed his eyes, as if delighting himself with that simple touch. My whole body was concentrated on my hand, where his lips touched. I squeezed my thighs harder, torn between pulling my hand back, and throwing myself at him. I bit my lip hard enough to almost draw blood. Travis's eyelids fluttered open. I marvelled at how clear blond his eyelashes were. From afar they were almost invisible, colourless. \n\n \"Teaching what?\" There was the slightest hint of a grin on his lips. He knew what he was doing to me. Just as he had known the night before. \n\n Imagine when he fucks you properly, Mo. Gee had said, and I had imagined it. Countless times. \n\n My brain only worked to process the sensitive information it was receiving from my hand. If he didn't stop touching me my entire body would dissolve.\n\n \"Art history.\" I mentally counted to five, straightened myself on my stool, and pulled my hand back. \n\n I saw something like disappointment cross his features, but then his eyes became a bit brooding.\n\n \"Last night, when-\"\n\n \"How old are you, Travis?\" My tongue worked faster and I cut him off. No talks about last night yet.\n\n No talking about how good his fingers felt on my pussy.\n\nNo talking about how I came on those fingers.\n\nNo talking about how much I had loved it and how much I wanted more.\n\nBecause if we started on the last night topic, I was sure I would climb over the table and rip his trousers off.\n\n He pursed his lips and shook his head infinitesimally. \"I'm 35.\" He said, his voice even and cool. \"Well, actually I'm still 34. I'll be 35 in two months.\" \n\n I smiled at that. He'd thought I was younger when I thought he was older. It wasn't that he looked older, exactly. He had little wrinkles around his eyes, which I presently attributed to the frequency of his smiles. Still, there was something about him, in his eyes. It seemed to me he carried the weight of the world on his shoulders. As if he'd seen a lot and wanted to forget some of it.\n\n \"Really? I would have thought you were older.\" I admitted.\n\n \"Do I look that bad?\" He asked in mock offence.\n\n \"Oh, no! Of course not! You just seem to be older. There is something about you. You kind of look like someone who's seen a lot. Experienced, I mean.\" I told him sincerely.\n\n He smiled a smile not quite as amused as the others. \"Yeah. Well, maybe you'll come to my party.\" It wasn't really a question.\n\n \"Will there be chocolate cake? I'll go if you promise me there will be chocolate cake.\" I joked, trying to lighten the mood. Things were becoming way too intense for me.\n\n \"There will be anything you like, Dindi.\" His voice was a little absent as those eyes pierced through any resistance I still had.\n\n What it did to me when he called me Dindi... I thought it a funny name, Gin Gee. Wherever had he come up with that?\n\n \"Where did you come up with that name? Dindi?\" I asked to satisfy my curiosity, planting my elbows on the wooden table and resting my cheek on my crossed hands. If I didn't watch myself, next thing I'd be battering my eyelashes at him. \"Sounds like the name of a cow your grandma owned.\" \n\n He laughed again; a real, heartfelt laugh, even throwing his head back and making something flutter in my stomach. I could pat myself on the back for making him laugh like that.\n\n Congratulations, Morena. A gorgeous, hot man thinks you're funny.\n\n \"It's the name of a song.\" He said, breathless.\n\n \"Hum?\" What kind of song was that now?\n\n \"You've never heard it?\" There was a trace of incredulity in his voice and I felt a little uncultured. Which I absolutely wasn't.\n\n \"Nope.\" I confessed.\n\n He smiled one of his sexy smiles. The kind that made me want to run my tongue over his lips.\n\n \"Well, it's kind of old. It was playing in the elevator that day I saw you.\"\n\n That day he saw me. As if I could've paid attention to anything but him and his smiles and his eyes that day. \"I didn't pay attention.\" Because I couldn't have.\n\n Triumph, I supposed, made a corner of his lip quirk up. Of course Travis knew I had felt the massive sexual tension that dominated the air inside that elevator. He reached for his phone, lying on the table, but I put my hand over his, stopping him.\n\n \"Sing it for me.\" I couldn't tell what on earth made me say that, but I did.\n\n \"What?\" Travis looked at me like I was green martian.\n\n I had made my bed, already...\n\n \"Come on. You know it, don't you?\"\n\n He chuckled, a bit taken aback. \"Yeah, I know it. But I'm a shy singer.\"\n\n My eyes fell to his lips. \"I don't mind.\" I said. His lips were so soft. How could such thin lips be so soft? \"If you're so shy you can sing it just for me.\" The boldness that overtook me was scary. \"Here.\" I pointed to my ear. \n\n I had invited Travis Keegan to sing me a song- whisper me a song- into my ear. That when I had a hard time dealing with a kiss on my hand. The irony. \n\n \"Alright! You asked for it!\" He threw his hands up as if he had just lost a battle, when he hadn't even fought me.\n\n He moved his stool closer until he was beside me, dangerously close. I felt his breath before his touch. A long cold finger put a loose curl behind my ear and I felt the beginnings of a shiver coming over my spine, raising the little hairs on my arms. Then he kissed my earlobe and just like that I was aware of how embarrassingly wet I was. He drew in a deep breath and, when he started to sing, I had to grip the edges of my stool to keep myself from melting into him.\n\n \"Oh, Dindi, if I only had words I would say all the beautiful \n\nThings that I see when you're with me, oh my Dindi.\"\n\n My Dindi. His alright. My weak resolve made sure I was.\n\n Reflexively, I shrunk my shoulder, trying to brush my ear against it, but only managed to press my temple to Travis's forehead. One of my hands let go of my stool to grip his biceps, hard and strong under my fingers.\n\n \"Don't you know, Dindi, I'd be running and searching for you like a river that \n\ncan't find the sea, that would be me without you, my Dindi.\" \n\n Had I ever really thought I could resist him? How bloody stupid of me.\n\n I turned my face, my lips already parted to meet Travis's mouth which exhaled shuddering breaths that I, in turn, inhaled. I thought he'd kiss me. I was offering myself to him, but he didn't, to my utter disappointment. An involuntary whimper escaped me when he put his thumb under my chin.\n\n \"Do you want me to kiss you, Dindi?\" He asked teasingly, into my wanting mouth.\n\n I nodded. I couldn't think of anything I wanted more. Or maybe I could...\n\n \"I like to hear you said it. You should know that by now.\" Just like he had wanted me to say it in his bathroom.\n\n I want you to make me come. I had said. And I still wanted it.\n\n \"Yes.\" My voice was barely audible, so full of want it was embarrassing. \"I want you to kiss me, Travis.\" \n\n His mouth collided violently with mine, and my moan was too loud for my own ears. My tongue seemed to be fighting with his to see which one had a better claim on his mouth. I went crazy, sitting on the edge of my stool which was balanced on only two of its four legs. I felt his fingers in my hair, tangling themselves in it, my sloppy bun almost dissolving, just like the rest of my body. I felt the delicious wetness in between my legs increasing. I leaned more into him, my hand still gripping his arm for support worked its way up his neck. Just when I was about to lose any sense of propriety I still had, he pulled away. I was disoriented for several long seconds. I had lost the simple skill of breathing.\n\n Travis's head fell to my shoulder and stayed there. His face pressing against my breasts didn't help with my trying to breath normally again. His shoulders rose and fell with his heavy breathing. I pressed my mouth and nose to his hair. He smelled like a man, all musky and warm. My fingers stroked his hair, not caring about disheveling his bun.\n\n \"Last night,\" I froze, but this time I didn't stop him. There was no point. \"If George hadn't stopped you. Would you have?\" \n\n I still felt dizzy, without enough air going in my lungs \"Would I have what?\" I asked, to buy time, because I knew well enough what he meant.\n\n \"Stopped yourself from having sex with me.\" \n\n Would I have? Fuck, no. Not in a million years. But I didn't answer him. I was afraid to. \n\n Travis lifted his head and held my face in his hands while his impossibly blue eyes searched my brownish ones for an answer. And he saw it, clear as day. It was no good trying to hide it. He kissed me again. A soft, slow and long kiss that had me moaning deep in my throat.\n\n \"Do you still want it?\" He asked hoarsely when he pulled away.\n\n Even if I tried I couldn't elaborate an excuse creative enough to convince myself that I had accepted his invitation for a coffee wanting anything else other thanhim.\n\n \"Yes,\" I sighed. \"Otherwise I wouldn't even be here now.\"\n\n Next thing I knew I was struggling to keep up with Travis's long strides as we rushed out through the cafe's doors.\n\n ****\n\n TRAVIS \n\n They say expectation is better than the thing itself. I say fuck that. No expectation, not a thing in this world could feel as good as her mouth when I kissed her. \n\n The cafe was three blocks away from my loft, and I was practically dragging Morena there. I turned to look, and she was having trouble keeping up with me. What a jerk I was being in my impatience to get her into my bed. Still, I didn't slow down, instead I put an arm around her narrow waist and another under her knees, picking her up in my arms. \n\n \"Oh!\" She squealed, startled. \n\n \"You're a very slow walker.\" I stated, flatly. \n\n She laughed loudly into my shoulder and I looked down at her in bewilderment. \"You must really fancy me, mate.\" she said with a smug smile on her face.\n\n She was light as a feather, so I was able to keep the rhythm of my steps even while carrying her whole weight. \"You have no fucking idea.\" I replied. \n\n I sounded stern, but the thing about it was that I was too focused on her to speak. The feel of her body so close to mine, one breast pressed against my chest, even through all those clothes layers, had me hard. Hard enough that it would be mortifying if anyone in the street took notice. \n\n What I loved about NYC? No one gives a fuck about other people walking in the streets. Even if it's a 6'5\" man with a hard on, carrying a gorgeous woman in his arms. \n\n I stopped in front of my building door and I could've put her down, but I didn't. \"The keys are in my pocket. Front pocket.\" I said with a smirk. \n\n She blushed yet again but reached her hand down into my pocket, her eyes never leaving mine. They were warm brown, almost amber like old whisky, the few hints of green melting into the dominant darker color. Her fingers dug in my pocket. I groaned when I felt them brush against my hard cock. She handed me the keys, after which, I promptly opened the door. \n\n We got inside the old freight elevator and I finally put her down. I stepped back, away from her, until my back hit the opposite elevator wall. It was my little self-imposed torture game. I wanted to touch her like I needed to breathe, I waited, though. Instead, I looked at her, already anticipating all the things I wanted to do with her and knowing that one time wouldn't be enough because I wouldn't have enough time before I exploded. \n\n She stared back at me with a look of confusion in her eyes, but she didn't say a word. She just stood there, allowing my eyes to travel over her body. Body I would take total and complete care of in a few minutes. \n\n Once again we were together inside an elevator. Only this time I knew I would get everything I wanted from her. Strangely, I didn't smile. I felt too worked up to smile. \n\n Her breathing was loud enough for me to hear. Her cheeks were stained hot crimson, clearly perceptible regardless of her dark skin. The elevator stopped, and unlike last time when she had run from me, I extended my hand to her and she took it, stepping out of it with me. \n\n She already knew where my room was, so we easily walked toward it. I pushed the door open, going in, pulling her with me. When I turned to her, she was staring at her picture. I saw it in her face that she was recalling that day, same as I. That'd been a little more than a week ago. I had bumped into her, when something in me- or rather her- made me run after her like a crazy, perverted man. Now, she was here. In my room. Ready to give herself to me. \n\n \"You're so beautiful it's ridiculous.\" I said, looking at the real Morena, the one made of flesh and blood. Flesh I had to touch or else I'd go insane. \n\n I pulled her to me, and her body molded itself to mine like she was made out of plasticine. All of her soft spots framed into me as if she'd been made just for me. Just for my hands to touch and my mouth to kiss. She allowed her hands to slide down my chest, slow and exploratory, reaching between us. She settled on my obvious hard cock pressing her palm against it, then went up again, biting down a grin. \n\n \"I think you should kiss me now, Travs.\" She more ordered than said. \n\n \"Travs?\" I laughed. \n\n \"Yeah.\" She stood on the tip of her toes but I still had to bend down to kiss her. \n\n Just as it'd happened the other times I had kissed her, her tongue was insistent, demanding. I smiled into the kiss. This woman would not just take what I'd give her. She would take what I'd give and then ask for more. As I kissed her until I had her panting I realized what I had in front of me. Her whole body to discover, to uncover, and bring to life. I would get to find what makes her tick. What she likes, where she likes it, why the fuck she likes it, everything. \n\n I broke away, not bearing to delay getting what I've been wanting for what felt like a very fucking long time. \"Turn around, sweetheart.\" I spoke in her ear, delighted when she whimpered before turning her back to me. \n\n She had absolutely flawless skin, as if melted chocolate had been poured over her. It took me a minute to decide where I'd begin. I pulled at the end of the little knot that kept her top together and then pulled at the one on her nape. The little piece of cloth came undone falling down to her feet. \n\n When I pressed my mouth to the crook of her neck, she moaned, throwing her head back and offering me more. I inhaled the sweet scent of vanilla on her skin. It was intoxicating. My hands, roaming, tasted the smooth skin of her back, going up and down her spine, feeling her shiver. I let them go around her ribs until they found her breasts. They fit my hands like a glove.\n\n My lips brushed her shoulder and I looked down to see the top of her breasts inside my hands. Her nipples were hard, pointing ahead and upwards, like two little drops of dark chocolate. My mouth watered at the thought. I brushed my thumb over them and spun her around abruptly, making her gasp when I put my mouth to one breast and my hand to the other as soon as they came into view. \n\n \"Oh, god.\" She moaned letting her hands get tangled in my hair. She pulled at the little rubber band holding it. I felt it fall around my face like a curtain. I stepped back until I fell seated on the edge of my bed. She stood in between my legs, her body arched toward my mouth. \n\n I was busy flickering one hard nipple with my tongue while my other hand squeezed and massaged the other soft mount. My hand surrounded her tit completely. She didn't have small breasts, on the contrary, they were perfectly proportional, befitting her body, but it was fantastic how small she was under my hands. I bit lightly on her nipple and moved to lick and suck at the other one. \n\n Dindi was moaning loudly, saying my name that way she did that made me want to suck the words out of her mouth \n\n Trah-vis. She chanted, over and over again. \n\n My hands traveled down her ribs, her hips, her legs, until they met the hem of her skirt. They went under and moved up her thighs, feeling how warm and silky her skin felt against the tips of my fingers. I was going up and up, until...I stopped, pulling my face from her breasts. \n\n \"Dindi?\" I called. Her head was thrown back and she lowered it to meet my eyes. Her curls falling in front of her eyes. \"Where are your panties, sweetheart?\" \n\n She gave me the most wonderful devilish grin. \"I might have dismissed them for the day.\" She bit down her lip, naively. \n\n I groaned and pulled a nipple between my teeth, producing another shiver on her. The thought that she had purposely not worn any panties, intending the whole time to come home with me...fuck, it drove me crazy. ",
        "My fingers resumed their exploring and found that warm, wet spot in between her legs. Fuck, she was so wet she could be dripping. \n\n \"Mmm, fuck, Dindi.\" I said on her breasts. \"Is this all for me, uh? You want me this much?\" I let my thumb do a little circle around her clit and she whimpered from the action, something almost like a sob. \n\n She nodded, but then caught the warning in my eyes. I liked to hear her voice, honeyed and husky with need. \n\n \"Yes.\" She mumbled. \n\n \"Yes? How do you like this?\" My thumb went on working on her swollen, wet, little clit. \n\n She pulled my hair and dug the nails of her other hand on my shoulder. \"...mmm...god...yes...\" She moaned. \n\n Her face was a picture. Pure lust. She was flushed, her eyes shut tightly, her brow creased. However, I wanted her to see me. \n\n \"Open you eyes, Dindi.\" She didn't listen, so my thumb stopped. She opened her eyes then, looking at me pleadingly. \n\n \"Keep them open for me, Dindi. I want to see you coming all over my fingers again.\" \n\n I resumed my massage on her clit, while my mouth worked on her breasts. Biting and licking, sucking and pressing inside her, circling her warmth... \n\n \"...agh...Travs...god...I'm gonna...ah\" She kept moaning through ragged breaths. \n\n I could feel on my fingers she was almost there; her clit all slippery and puffed up. \"Come for me, Dindi.\" I said as I inserted my middle finger inside her to find her so tight my finger got sucked in like it belonged there. \n\n \"....oh, Travis...\" She kept her eyes on mine. I could see her pupils widening, stretching the green around them. \n\n I pumped my finger inside her, barely able to wait until it was my cock. I pushed in and then out, while she gripped me tighter, and tighter... \n\n \"Travs, I...jesus...ah...ah.\" And she came. Her walls pulsing around my finger. \n\n I didn't wait for her to recover when I pulled my finger out. Her knees wobbled and I pulled her down to straddle me. The sensation of her bare breasts against my clothed chest caused me to groan. I could feel her nipples hard against my skin. I brought my fingers to my mouth and sucked at them while she watched me. Even the tip of her nose was pinkish, flushed with the blood in her veins my touch had heated up. \n\n I kissed her, pushing my tongue inside her mouth. She felt warm and soft, almost liquid when we had barely started. \n\n \"Can you taste yourself on my tongue, Dindi?\" \n\n \"Mmmm.\" She didn't even manage a coherent phrase. I was triumphant. \n\n The caveman in me wanted to take her hard and fast and fuck her to within an inch of her life, but I knew better. It wasn't her fault I was so damned obsessed with her. I mean, it was, but she hadn't asked for it. So I would take my time, enjoy her as much as I could. I didn't know if she'd give me another chance. This was for her as much as it was for me. If I could, I'd make her enjoy it even more than I would; if such a thing was even possible. \n\n I held her tightly, my arms had a solid hold around her ribs and as stood up. She wrapped her legs around me and her mouth found mine. She kissed me so hard I had to pull away for air. \"Christ, Dindi.\" \n\n I put her down on the edge of the bed where I'd been sitting and knelt in between her legs. From that angle I had such a view of her the photographer in me came into play. \n\n \"Let me take your picture, Dindi?\" \n\n She looked confused at first, then gave me a tentative grin. \"You already did.\" She said and her eyes went to the her picture on the wall behind my back. \"And without asking for permission, you weirdo.\"\n\n \"I want a picture of your face when you come, so I can show you how fucking beautiful you look.\" I explained myself. \n\n She ran her a hand down through my hair, going down my face. She outlined my jaw, her nails running over my beard before her thumb brushed my lips. \"Alright.\" She said softly. \n\n As swift as the wind I ran to the little room where I kept my gear and found the polaroid camera I wanted. When I returned to my room, Dindi was sitting on my bed, completely naked. Her skirt thrown to some forgotten corner. \n\n \"Holy fucking shit, Dindi.\" She was just lovely. \n\n She was a thin, small woman, but yet so soft, rounded-edged with curvy hips, soft thighs, soft everything. She smiled such a naive smile it didn't suit the situation at all. \n\n \"If you're going to take my picture you might as well capture all of me.\" She teased.\n\n Was that the same blushing woman I've had coffee with minutes ago? I felt elated to see she was so comfortable with me. I couldn't have asked for things to feel any better. \n\n Just like that the first picture was taken. The film slid down to the floor. I hadn't either the patient nor the mind to shake it. I took another one as I fell to my knees before her. \n\n \"Let your hair down.\" I said, using my professional voice. \n\n Morena pulled at the rubber band on her hair, her messy bun came undone, her curls falling down down her face as she softened them with her fingers. I took another picture as she did it. \n\n \"So fucking beautiful.\" I muttered to myself. \n\n When I was done being senselessly taken with her. I took in what was right in front of me. Dindi, my Dindi, completely naked, sitting there with her legs opened. I put my camera to the side and focused on touching her again. \n\n I pushed her knees farther apart, spreading her as wide as she would go. I kissed one knee, moving up the soft skin on the inside of her thighs. My beard grazed her skin with little delicacy and she shivered so hard from the scrape, her leg retreated in a reflex. I pulled it back to me, holding it firmly in place. I went up until I was close enough to smell her essence. She was intoxicating like a drug. I repeated the process, kissing her other knee up to the thigh. \n\n But I saved the best for last. \n\n The hairless skin of her pussy glistened with her lust. As careful as I was able to be, I pushed her lips apart with my thumbs to find the moist and pink flesh of her entrance. It was mesmerizing how the brown of her skin, somehow darker there, contrasted with the soft pink of her parted pussy. I laughed, in spite of myself, and felt her tensing. \n\n \"What...did you just laugh at my vagina?\" Her voice was serious enough, but there was a smile there. \n\n \"Yes.\" I said, smiling. \"You're beautiful even down here,\" was the last thing I managed to say before putting my mouth on her. \n\n If I had to describe what she tasted like, I would fail at it. She was perfect, delicious and fucking gorgeous. I tasted her want. I wondered how long had she been this wet, just waiting for me.\n\n I gave her a firm lick, which caused her to squirm and moan-scream my name. I found her clit with my lips and teased it with a flick of my tongue. She almost mounted my face. I had to laugh again. \n\n \"Oh, Dindi, you just wait for when I get my cock inside you.\" I said and then resumed my lavishing, thinking that experience would prove to be as fun as it would be pleasurable. \n\n **** \n\n MORENA \n\n Travis Keegan made me come for the second time in the span of ten minutes. He crawled up my body, my hand still fisted in his hair, as he kissed fucking everything in his way. My belly, my stomach, my sternum, my breasts, my neck, my mouth. He tasted like me. He smelled like me. There were droplets of my wetness on his beard and the smile I tried to bite back was stronger than me. \n\n \"What's so funny, uh?\" Travis asked on my neck. \n\n What was so funny? I had no idea. Why was it all so fun?\n\n \"What's funny? You're still fully clothed. That's funny. You should be fucking naked by now.\"\n\n While I was being sucked on, licked at and aroused enough to come, I didn't pay much attention to it, but now that I wanted to kiss and touch every inch of Travis's skin I could get my hands on, I minded his clothes very much. \n\n \"Well, I was kind of busy, you know. With making you scream my name so loud, I'm sure my neighbor will come knocking any minute now.\" \n\n I started to laughed again, but his lips cut me off. None of this was going the way I imagined. Was it supposed to be so fun? So right? So comfortable? Once I was already here with him I saw no point in being all coy and shy, or cute. I'd done that in my early twenties. And yet, I felt so loose, so in my element. That all with a man I had thought to be a perverted idiot only a week ago.\n\n I ran my hands down his back, finding the hem of his shirt. I pulled it up until it bunched up over his shoulder blades. He wouldn't take his lips away from mine, not even to take his shirt off. I wasn't having that.\n\n \"Mmmm.\" \n\n \"Uh-hmmm\" \n\n \"Travs.\" I don't know why the fuck I was calling him that, but I was. \"Take this off.\" I said when I managed to evade his kiss. \n\n He knelt on the bed, hesitating before pulling his shirt off. I couldn't fathom what on earth would make a man who looked like that be afraid of taking his shirt off. Something like insecurity wavered across his features, but it vanished as quickly as it appeared; when he pulled the fabric over his head I then needed a minute. I knew he had a fine body and well defined muscles underneath it all, but I honestly needed a minute when I saw him shirtless. \n\n My hands moved to feel him; the trail of hairs under his belly button leading right where I wanted to go and up, going over one, two, three bumps and farther up his chest where more hair tickled my fingertips. As if all that wasn't enough, he had that ridiculous and sexy v-cut that was a secret turn on for me. However, when my initial amazement faded away I saw what had him nervous. Running across his ribs, on his left side, there was a long, protuberant pink scar maculating his skin. It stretched for at least eleven inches. \n\n My fingers rose to touch it, I couldn't help it. It felt cold, contrasting with the warmth on the rest of his skin. I let my fingers travel along it, from his side to his front, under his heart. Travis closed his eyes and stood there, statuesquely clenching his jaw. He shivered and opened his eyes, fixing me with his blue gaze. He caught my hand to stop me, the atmosphere around us charged, suddenly heavy. \n\n I forced my mouth to form a smile. \"Oh, Travs, you're so unattractive. I'm actually sorry for you.\" I joked, trying to lighten the mood and show him that didn't mean a thing to me. Why should it? I just couldn't help but wonder; how had he gotten it? It seemed to be caused by a serious gash.\n\n Graveness marred his face, it lasted long enough to let worry start to seep into my bones. Had I ruined it all? But then he laughed what sounded like an authentic laugh, while bending down to kiss me.\n\n \"Don't you worry, sweetheart. I'm sure we can find a way to avoid you looking at me while I fuck you.\" The way he called me sweetheart...It turned me on even more.\n\n I laughed, relieved he felt comfortable enough to banter with me.\n\n \"Shit. I knew I shouldn't have put so much whisky in your tea.\" Travis said, making me laugh so hard I felt tears run into my hair. \"Now you're all giggly.\"\n\n My body was still shaking with laughter when I noticed his hands weren't on me anymore. When I looked at him he was unbuckling his belt and looking down at me with those blue eyes of his. A feeling that was growing to be familiar struck me whenever he looked at me that intently. I felt revered, up on a pedestal, as if I were the single most desirable woman in the world.\n\n \"What?\" I asked. \n\n He just shook his head. \"I can't believe you're naked in my bed.\" He whispered. \n\n A strange thing passed between us then, something I couldn't quite put my finger on. It was like we knew each other. That didn't even feel like the first time we were having sex, but like the thousandth. It was weird. A good, very good weird, but weird nonetheless. It felt so right it scared me. \n\n I had a sudden urge to ink myself into his skin. Let him use me just like I wanted to be used, let my body be completely consumed by his. I extended my arms, allowing him to take my hand, then he pulled me to my knees on the bed. I moved close to him, my body molding itself to his the way a key fits its lock. That same strand of blond hair that kept falling to his face earlier was now mingled with the rest of his golden mane, impossible to discern. I brushed his hair back with both my hands, leaning in to kiss him. \n\n His hands caressed my naked back, sliding down, grabbing my ass. He squeezed the cheeks and pulled me more into him, I was taken by his masculinity. I felt his cock, still hard inside his pants as I roamed my hands around his back, feeling the outlines of his shoulder blades, the contracting and relaxing of his muscles while he touched me.\n\n I pushed him, causing to him to fall back on the bed. I made a quick work of pulling his pants, underpants -everything in my way- off with a few tugs, before tossing them aside. He sprang free, gloriously hard and long. A smile played in my lips when I chose that very inopportune moment to remember Gee saying Travis had a reputation. Now I could clearly see why. \n\n Travis looked as if he were high, not even on this planet. I took his cock in my hand feeling how hard, warm, and, smooth he was. He groaned a delicious sound in his throat when I began to stroke him. \n\n \"Oh, goddamn, Dindi...\" His eyes fell closed, he bit down on his lip, making me suddenly jealous of his teeth. \n\n I dragged myself on my knees until my hips hovered over his. My hand never left his cock. It pulsed as I felt it getting harder under my grip. I bent down to lick his lips, tracing them with my tongue. \n\n \"Dindi,\" He whispered, just when I had trapped his lip between my teeth. I let go so he could speak. \"Jesus...\" He moaned to my delight. \"Can you get my polaroid?\" \n\n \"What?\" I asked, smiling, and gripping his cock harder. \n\n \"Agh!\" He breathed. \"I just want to...fuck...want to photograph you riding me.\" He managed to say. \n\n The idea of being photographed while I fucked him was undisputedly erotic. The only inconvenience about getting the bloody camera was taking my hand off of his wonderfully hard cock. I let him go and moved to the edge of the bed to get the camera from the ground, returning as quickly as I could. \n\n \"Here.\" I handed him his camera. \"And you have better not keep any funny looking pictures of me.\"\n\n \"But those are  just the ones I want to-  oh, fuck, Dindi.\" My hand restarted the stroking. I positioned myself over the place where my hand was working and lowered my body. With him in my hand, I used the tip of his cock to rub on my clit. \n\n \"Mmm.\" It was like masturbating but infinitely better. I thought of the nights I had fantasised about doing just that this past week, using his cock to pleasure myself. \n\n Travis's right hand ran up my torso, reaching and engulfing a breast. I looked down, amazed by the contrast his big, pale hand made on my skin. My breast disappeared inside his hand. I suddenly felt like it was too small. I took his hand in my free one and brought it to my lips. I sucked at his fingers, as if thanking them for their earlier work. Then I heard the click of the polaroid engine. \n\n \"Dindi, I'm gonna fucking come in your damn hand.\" He croaked. \n\n I had been absently stroking him, rubbing him on me, lost in my own pleasure. I was slick and slippery, more than ready to take him in. With his cock still in my hand, I positioned his head at my entrance and lowered myself down onto him. My eyes rolled back inside my skull. He felt beyond amazing, juicy. I sank down on him slowly, feeling my body stretching to accommodate his length. Travis was bigger and thicker than I had anticipated. Also, it had been a while, so I winced a little when I felt a sharp sting of pain. When he was all the way in I sat still, giving my body time to adjust  to the feel of him. The feeling of being so full again. \n\n I had my eyes closed, but fluttered them open again when I heard another click of his camera. The films fell on his chest, forgotten as the images slowly appeared. I moved and he reacted accordingly, by groaning loudly. A hand squeezing my hip, which began to work, moving to and fro. I clenched my muscles around him, and marvelled at how his eyes went wider and bluer.\n\n \"God, Dindi, you have no idea how good you feel.\" His voice was rasping, so fucking sexy I'd come sooner than expected if he kept talking. \n\n I threw my head back and just surrendered myself to the feeling of being full of Travis. As I gradually moved harder and faster, I felt that fluttering that started deep in my belly, going up my spine. He arched his hips toward me, thrusting up and invading me completely. His body flexed, going up as mine went down. \n\n Looking down between us, I saw him entering me. When I lifted my body he slid almost all the way out, and then all the way in when I lowered it again. The disparity between our skin tones was transfixing. \n\n I was dominated by a frenzy that clouded any thoughts I could've had. All I was able to do was chase the feeling of Travis's cock sliding in and out of my moistening pussy. My body moved as its own entity, I didn't have to think, I just knew to roll my hips over him, arching my body to rub my clit on his skin.\n\n When I looked down to see Travis under me, he seemed to be so consumed, so lost in his own pleasure. He kept his eyes open, that blue gaze directed right at me. His hands went everywhere, but his eyes, full of lust, were on my face the whole time. It made me feel strange, somehow more connected to him. I couldn't tear my own eyes away from his. My toes curled behind me and I leaned my body forward to feel his lips move against mine. \n\n He snaked his arms around my middle and sat up, bringing me with him. With the new position, my clit was right there, pressed to his skin as he moved. \"Oh, bloody hell!\" He was sweaty and I was soaking wet. I dug my nails on his back and started to rub myself on him like a crazy woman. His smug smirk was delightful. He'd gotten what he wanted; I'd given it to him with very few objections. \n\n He used his heels, planting them on the bed to propel his hips forward, undulating into me. Travis groaned in my ear, the sound alone enough to leave me feeling boneless. \n\n I threw my head backward, only vaguely aware of his lips running over the sensitive skin of my neck and then moving down to my breasts. The dominant feeling was the one in between my legs. The force of his hips was such that it even ached a little when he pushed in. A torturing, good ache. \n\n Travis filled me up, from my pussy to my mind. He was all I could feel. He bit my shoulder and I would have cried out, however, I wasn't able to. No actual sounds came out of my mouth, groans and moans died in my throat. \n\n As he forced himself inside me, I felt my body began to dissolve. My hand felt the skin of his back, my fingers felt the silk that was his hair. In that moment my brain didn't process any of that. Only the pumping of his cock in and out, faster with every movement, leading me closer to my undoing. He was under my skin.\n\n Our bodies swung, back and forth but together. Inside I felt the muscles of my belly clenching, my body squeezing him tighter. Travis grunted and his forehead fell forward, resting on my own. Our sweats mingling. \n\n He weaved his fingers through my hair and held my face inches from his, keeping our eyes locked together. I saw every sensation my body provoked on his flash across his features. I realised that this golden brown colour rimmed his pupils, almost imperceptible there, lost in all that blue. \n\n I saw his pupils go wider, as his hips moved, chasing his release, and mine. I held him more desperately, my thighs pressing more against his sides, making my internal muscles grip on him as well, gushing, lubricating his path. \n\n Arching my body, I stretched my arms behind me, gripping his sheets. Travis continued to pump his cock inside me, forcing it in and making my whole body bounce as he did it. I rolled my hips over him, rubbing as much of me on him as I was able to, letting him catch the drop of my uncontrollable rolling. My body knew to make me wetter to aid Travis's forceful thrusts. He had his hands on my ribs, holding me to him, but he let one travel to my sternum, and run down my belly.",
        "\"Jesus...you're so...fuck...so beautiful.\" \n\n I laughed and lost the strength in my arms, falling on my back on the bed and bringing Travis on top of me. How on earth did he still have the mind to say that?\n\n \"You think I'm funny, uh?\" He said, with his mouth moving on mine. \"Let me show you what's funny.\"\n\n He pushed himself back in with a rough jerk, burying himself so deep inside me it hurt. I clasped my ankles together around his waist to keep him there, digging my heels on his ass to urge him back in, anticipating the pounding of his cock in that dark, hidden spot.\n\n The whole time Travis kept his eyes on me. His face contorted into a mask of strained pleasure, flushed with his effort. I traced a finger over the crease in his brows while he took his pleasure from my body, giving me my own. \n\n In my mind, while I screamed intelligible words, I knew none actually left my lips because I felt the pressure of my teeth on them. I kept it all in, all that pleasure, all that felt good about Travis's body over mine. I heightened it. His weight, the slippery dance of our bodies rubbing against each others', his blue eyes on me, the terrible and hollow feeling I got when he withdrew, quickly followed by the unimaginable sensation of being so full and overwhelmed by someone else you forgot your body existed in a world ruled by gravity. All of it was kept inside, just building up, waiting for the moment it would all explode.\n\n I lifted my head to reach his lips. I wanted- needed- to kiss him even though none of us had any breath to spare. But he allowed me to kiss him for as long as I could, taking in gulps of air on between sloppy kisses, our tongues tangling desperately.\n\n I wasn't aware of my own body anymore. I didn't know where my legs began or where they ended, nor my arms for that matter. I only knew the ins and outs of his cock in my pussy. \n\n My hands on his ass tried to pull him into me more than it was possible. I felt the contracting of the muscles on his cheeks as he thrust in, and those muscles relaxing as he withdrew.\n\n His sounds were so desperate, so helpless. He reached behind him and took my hands, pinning them on each side of my head, entwining our fingers together. \n\n I squeezed my eyes shut even though he'd asked me to keep them open. It felt too intense, too good. The pleasure of his sweaty skin rubbing right at my clit and his cock sliding inside me was at that point where it ached..\n\n \"O-open...\" He stammered in between grunts.\n\n I did as he asked. I opened my eyes to meet his. Travis was looking at me, seeing me, wanting me. I was right there where he wanted me to be and he was demanding all the more still. As if he couldn't get enough of me. As if he would still want more and more when it was over.\n\n The sun was setting, the twilight lights that came in through the window did a poor job at illuminating the room, but still I could swear it was almost possible for me to see my own reflection in his clear eyes. \n\n I was there, right under him, full of him and aching, holding him tighter and closer, closer every time he moved against me. \n\n I had never had a man look at me the way he did it. I felt like my body was an altar, at which he'd knelt before to worship me as a goddess. At that moment, I went crazy. Every single thing I was keeping trapped inside was let free. I screamed, loudly. The sound befitting a woman who hadn't had any decent sex in over six months. \n\n Travis splayed his palms on the mattress, on each side of my face, and supported himself on his arms. The way he fucked me then, made me realized he'd been holding back. His cock went in and out, strong and fast. I had to brace my hands against the headboard to keep from hitting my head in it. My whole body glided against his bedsheets, bunching them up around us.\n\n Colours danced in front of my eyes, like a kaleidoscope. If my body had any sensitive capacity, all of it was concentrated on my pussy. Travis had a fantastic rhythm, like a dancer whose sole purpose was to make me come. Even though the intensity of his thrusts and the look on his face told me that this was not for me any longer. It was for himself alone. For his pleasure, his release. Which in turn would led me to mine. \n\n Everytime he slid in, after pushing out, I felt myself sucking him in more eagerly. As if my body wished to keep him inside forever, my pussy gripping his cock with a maniac possessiveness. \n\n My legs trembled uncontrollably. The feeling went up, reaching my middle, my arms. A surge of pleasure so intense shook me in a way that made me push Travis away when all I wanted was to keep him in. It was overwhelming, it was too much. My body was unaccustomed to such pleasure. \n\n I was having trouble breathing because the muscles in my chest and belly were too tight, coiling in anticipation. Travis was wild, I could only hear his raw and masculine noises since I was too busy with my own pleasure to register anything before my eyes.\n\n \"Ah, fuck!\" Travis dropped his weight over me, his face hidden in the crook of my neck. I could feel the heaving of his chest on my squashed breasts. \n\n\n\nHis thrusts were blind, violent. I bit his shoulder, smothering moans and screams, but that only gave him more encouragement. \n\n The ache in my pussy was the pulsing kind. I fought against it, not wanting to let go yet. Not wanting it to be over. My body didn't listen to me, I had no control over it, Travis did, and he wanted to break me considering the way he hammered his cock into me.\n\n My clit was the focal point of all sensation my body experienced. Every time Travis's cock slid out I felt its head around my entrance, only inches from pulling out completely, before I felt it sliding against my walls until it hit bottom; That place inside he had such agility to find. \n\n \"Dindi...\" Travis growled on my neck. He pulled his head from my neck to look me in the eyes again. Everything I felt was reflected on his own face. \n\n He tried to kiss me, but the movement was a sloppy one. None of us could focus on ours mouths when down south my world was about to erupt into a million pieces. \n\n His cock pushed to the edge of my self control. Whenever he tried to slid out, my head on his ass urged him back in. \n\n \"Oh, god!\" Something surged deep inside me. It began on the top of my spine, running down like electricity until it reached my pussy, making my walls start to quiver. \n\n \"...agh...fuck...\" Travis groaned with his mouth so close to mine, it brushed my lips when he spoke. \n\n We were so close. Both of us. \n\n Travis's hips worked a punishingly fast dance, building up a wild, delicious sensation in me. I felt like I was floating. There was a moment there when time stopped; a second when I felt nothing, just a tiny second suspended in time. Then I exploded.\n\n \"AH!\"\n\n I raked my nails on his back and he growled like a wounded animal. The heavy stroking of his hips against me didn't waver. He kept his pace, driving me crazy, until the feeling was too much, too intense. It was beyond my control. \n\n My pussy spasmed and with one single, long slide of his cock inside me, I came. I threw my head back and screamed something, while my whole body turned into mush. My bones melted around my muscles. My clit pulsed frantically. \n\n Inside my walls still quivered, my orgasm was still shaking me when Travis made a desperate sound in his throat as his lost himself, shooting his essence inside me. He stood still for an infinitesimal moment. His pupils went so wide they almost smothered the blue. My legs trembled uncontrollably as Travis's hips regained strength and he pushed himself inside me with an automatic motion, unaware of himself. \n\n We came. Together.\n\n Without even acknowledging it at first, I exploded around him, pulsing and shivering with a silent cry of agonised pleasure. Travis groaned as he emptied himself inside me, his hips still moving as he leaked in, pouring all he had to give, never stopping, moving in a such a brutal manner he almost pierced through me.\n\n His cock throbbed, as my walls pulsed and I could feel and define every sensation we created together in each other's bodies. We were both still moving. My hips still rolled under him, his still pounded into me, tough slower now.\n\n We stared at each other, panting, our eyes wide. Every muscle below my waist still spasmed. My eyes followed a little drop of sweat that ran down the side of his face. Freeing one hand from his hold, I caught that running bead of moisture between my fingers.\n\n That had never happened to me before. Why on earth had it happened with him? I opened my mouth to speak. \"That...\" But I promptly shut it again. Words failed to explained what had just happened to my body.\n\n \"I know.\" Travis said huskily. Then he let his lips find mine. \n\n Our bodies quieted, with the exception of the echoes inside us. I still felt a slight shake inside. His cock was still hard and pulsing. My whole body still hummed with his closeness. \n\n Before I had even touched him I felt an inexplicable attraction to him. Now this. This rare, deep connection I had never felt with a man before.\n\n Travis lifted his head, pulling away only the necessary distance to look me in the eye. \n\n \"Give me fifteen minutes, then we'll do it again.\" He said, not even bothering to pull out of me.\n\n I searched his blue eyes for a clue to tell me what was on his mind, but I found nothing. \n\n \"Alright.\" I said, and his mouth crashed over mine again.\n\n ****\n\n \"Stay the night?\" Travis asked taking a huge bite of his croissant.\n\n We were eating at the little bistro at the corner of his loft. I had drifted blissfully into sleep, feeling as sated and satisfied as I ever remembered being after coming five or six times, I wasn't even sure. When I woke up though, I was so hungry I could have eaten an elephant.\n\n \"Oh, no. I can't.\" I said. \"It's Sunday night, I have to go home and get some sleep. I have to work tomorrow.\" It was the truth. I had a good excuse, but also I didn't want to stay. I was afraid to. Once the sex haze had evaporated I realised that my 'It's just sex' mantra would be harder to keep than I hoped.\n\n It had felt too good. Too easy. Too comfortable. Way too right. It was preposterous for it to be so right.\n\n \"Then come after your class. When do you finish?\" \n\n Travis's eyes reflected the light dimly illuminating our little table. They shone like crazy, I was suddenly drowning in their depths.\n\n \"Six.\" I said distractedly. \n\n Of course I wanted more.\n\nOf course I wanted to come back.\n\nAnd of course I would come back. \n\nGood sex was addictive.\n\n \"I'll wait for you around nine. How's that? We can have a late dinner.\"\n\n Have dinner?\n\n \"Travis?\" I said his name carefully and he looked up at me frowning with a bit of worry.\n\n \"We're having sex, yeah?\" I asked. \"This is just sex.\" \n\n He looked at me for a long moment, his expression unreadable. Then his face softened and he smiled at me.\n\n \"We're having sex.\" He agreed. \"We're doing anything you want.\"\n\n I sighed relieved. \n\n Not that I fancied myself irresistible and was thinking that after one shag session the man was head over heels for me, regardless, I felt like I had to make things clear. To lay all the cards on the table, so that later, when it all ended, there would be no confusion. No mess.\n\n I sipped the wine I had ordered and watched him over the rim of the glass. He was so, so handsome, disgustingly so. My goodness. My eyes caught the half-moon prints of my nails on the back of his hand while he brought his coffee cup to his lips. I had dug my nails there when we'd come together.\n\n \"I'll come back if you promise to take that awful picture down. It's weird. I'm not narcissistic enough that I want to be fucked while staring at my own picture.\" I said.\n\n He clicked his tongue. \"I'll take it down, but that's a damn pity, Dindi. That picture is the very best of my work.\"\n\n Frankly, it scared me a little just how taken with me he seemed to be. It was flattering. Very. Still, I couldn't understand what it was about me he found so fascinating.\n\n I was an attractive woman in my own way. At a very early age my mother had taught me the important lesson of loving oneself. Even so, I wasn't the obvious kind of beautiful. Not like Travis or his models. I still didn't understand what exactly had attracted him to me. Whatever it was I was thankful for it, though.\n\n \"Travs.\" I called for his attention again, using the new nickname I had invented out of nowhere.\n\n He smiled. \"Yes.\"\n\n \"Whatever made you do that?\" I asked, thinking of my picture hanging on his wall.\n\n \"Do what exactly?\" He asked.\n\n \"Come running after me that day. Take my picture. I don't know, just...why me?\" I feared I sounded insecure, but I just wanted to understand what on earth had possessed him that day.\n\n \"I heard you laughing.\" He said matter-of-factly.\n\n \"Heard me laughing? My laugh is awful.\" Personally I thought I sounded like a dying hyena.\n\n \"No, it isn't.\" He said wrinkling up his nose.\n\n Heard me laugh? What the fuck did that mean? It made no sense at all.\n\n \"So, you came after me because you heard me laugh?\" I insisted on it, wanting to understand him, even if he didn't care to explain himself.\n\n He sat his coffee cup down. \"Actually I heard you first, and then I saw you. You were real.\" \n\n \"I was real?\" I chuckled, getting more confused by the minute.\n\n \"Yeah. You are real.\" He said, looking at me with a dreamy expression and such a lovely smile I gave up on my inquiries.\n\n I'm real. \n\nWhatever did that mean?\n\n ****"
    ],
    "authorname": "Nanaya",
    "tags": [
        "black girl white guy",
        "romance",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/dindi-pt-03"
}