{
    "title": "Split Trails Ranch",
    "pages": [
        "She was a feisty little thing, flaming red hair, large breasts spilling out of her transparent gown. \"You like it? It came all the way from Paris France.\"\n\nI grinned. I'd been on the trail for two months with only my brother for a companion, and I was in need of a little female comfort. \"I like it just fine, but I like what's in it even better.\"\n\nI pinched a nipple lightly and she squealed, sliding around in my lap, feeling my raging hardon. Like I said, it had been a while. We had already discussed and agreed on price. I was to get her for the night, and for the price I could fuck her as much as I wanted. She even threw in a 'French' for that price, and I was pretty sure I was going to start the festivities with her mouth wrapped around my cock.\n\nI looked over at my brother and grinned. He was just as randy as I was, and had latched down on a buxom little blond. He had her tits out, stroking the nipples as she moaned. The madam came into the parlor, grinning. \"Enough, boys. Nobody gets to look for free. Take it upstairs and have a good time.\" Bradley had made the same deal, and I had a feeling somewhere during the night we would change partners. After all, they were getting the same amount of money. What difference would it make?\n\nI stood up, offering my soiled dove my hand, when all hell broke loose. A large, heavyset man charged into the parlor mad as hell. \"Delilah (like anyone believed that was her real name), what the fuck's going on here? Get your ass away from that cowboy. We got a standing date. It's Saturday night, remember?\"\n\nShe blushed and stuttered, so I decided to smooth things a bit. \"Mister, I don't know what arrangement she has with you, but I've bought and paid for her services. She didn't say nothin' about no previous commitment to me, so I consider her a free agent. I'll be gone come tomorrow, you can have her then.\"\n\n\"Fuck you, saddlebum. Pick someone else.\"\n\nThe saddlebum comment got me. Brad and I were just back from the Colorado goldfields, flush with money. Our little claim proved up, and when we found an eight pound nugget, the big boys came calling, after we'd settled the hash of a few claimjumpers. It really didn't do to piss Brad off. They all offered us a deal,and we picked the best. They would run the mine, and we got fourty per cent. To cement the deal, they gave us twenty grand upfront. We intended to amble on down to Texas, find us a decent spread somewhere, and become gentlemen ranchers. Yeah we looked like bums, because it was a lot safer to look broke than to flash that kind of money around. Actually, the money was in a Wells Fargo bank except for a few hundred, and we had a certified letter of credit. If we found something we liked, we'd wire the bank and get the money transferred locally. Before they had bought us out, we'd cleaned out thirty thousand in ore and dust. For the time, it was a small fortune.\n\n\"If I'd wanted someone else, I'd already be with someone else. Now go away. Me and Miss D have some serious getting acquainted to do.\"\n\n\"Back off, boy. Drop the bitch and get the fuck out of here.\"\n\nThe man was starting to ruin my good mood. I grinned lazily. \"Or what?\"\n\nHe seemed confused. \"What you mean?\"\n\n\"I mean what if I don't get the fuck out of here, as you put it? Is there a whore anywhere on this earth worth getting into a gunfight over? You need to draw those horns in before we stop being friends.\"\n\n\"I ain't your friend, kid. Move along.\"\n\nI'd gotten Delilah off my lap and stood, facing the asshole. Brad had dumped the little blond, standing off to the side. He had a couple of friends and now they had to face two fronts. You could tell it made them nervous. Apparently this was the Bull of the Woods, and wasn't used to anyone bucking him.\n\nI stood, looking bored. \"Draw when you feel a mind too. Just don't take too long. I got some serious fucking to do.\"\n\nHe looked at me like it was the first time he'd laid eyes on me. I was in beat up trail clothes, lean from eating my own cooking, with shoulders and arms that came from swinging a pick and using a shovel every day for five months. I had a bullet hole in my hat thanks to a Kiowa who thought he was a better shot, and a scar on my cheek from a Mexican pistolero whe fancied himself a knife man. He should have stuck to the pistols. Just short of six feet, black hair and far seeing grey eyes, I looked like a bundle of trouble waiting to happen. If he had any sense at all, he'd see my guns were the cleanest thing on me, one Remington in a side holter, the other rigged for a cross draw, and an old Navy Colt in another cross draw holster, the butt pointing to my left.\n\nJust then the Madam came up, raising hell. \"Goddamn you Buck, there ain't gonna be no gunplay in here. I just got done putting up the new wallpaper, and I don't need no more bulletholes. You boys need to take this outside.\"\n\nHe turned to jaw at her and I moved. Caught by surprise, he turned just in time to see my fist before it made contact with his nose. I put every bit of the muscles I'd built up mining into it. For a minute I thought I'd knocked his head off, it flew back so fast. I felt his nose crunch, and he went down, out like a light. Brad took advantage of the commotion to draw his pistols, an old LeMat I wished he'd get rid of, one of his Smith & Wesson Russian .44's in the other hand. He grinned and spoke for the first time.\n\n\"You boys need to take him on out of here. You tell him when he wakes up if he wants to have any discussion with us, to look up the Walters brothers. We'll be right here until about noon tomorrow.\"\n\nOne of his buddies glared at me. \"You sucker punched him!\"\n\n\"You'd rather I spread his brains all over Miss Toussant's new wallpaper? I ain't braggin' here, but he ain't the first one to brace me with a gun. Tell him what my brother said. Now go home, or to another whorehouse, or back to the saloon. If I see any of you here before I leave, I'll think you have evil intent and shoot you down where you stand. Now get out.\"\n\n\"You'll regret this mister. He's the fastest man I ever seen with a pistol.\"\n\n\"That may be so, but you ain't seen me. Or my brother. Hell, he's a lot faster than I'll ever be. Now let sleepin' dogs lie.\"\n\nThey dragged him out, grumbling, and I turned back to Delilah. \"Come on honey. You and me got unfinished business.\" Brad had his blond over his shoulder, carrying her up the stairs while she squealed and laughed. First thing we did was get into the bath I'd had drawn. I wanted her clean and the trail dust off me. I made a note to give the maid a little something in the morning for all the water we spilled.\n\nDelilah wasn't the hellcat I was expecting, but the little blond, now she was something. Delilah did a half ass job on her French, but Blondie made me feel like she'd sucked my brains out. We swapped back sometime in the early morning, and I was just sliding into her when she woke. \"Hey, the deal was for the night!\"\n\n\"Still dark, honey, so it's still night.\n\nBrad and I took another bath just before we left. I tipped Delilah a five, but gave Blondie a ten. Red was a little pissed off when we left. Blondie gave us both a big kiss and a promise. The next time we were through, it would be just the three of us. \"Nobody's ever fucked me to a standstill, but you boys came closer than anyone else. I'd like to see what it's like when you're both fresh.\" We promised faithfully, knowing we would probably never see her again. We were decked out in the new clothes we'd had the local tailor make, feeling good about shedding our trail gear. I had on a black shirt with a twin row of pearl buttons, grey pants tucked into tooled black boots, with a brand new black Stetson and a red silk neck scarf. Brad had went with brown. We'd gotten haircuts and I'd had my handlebar mustache waxed. He grinned when he saw me. \"You look like a dude straight off the train.\"\n\n\"Well, yeah, but I always thought they was sharp dressers.\"\n\nWe'd checked out of the hotel, and were lazing on the porch. We'd decided since it was late we'd eat at the diner before we left, another meal we wouldn't have to cook. I was sitting with my feet up on the porch rail, my hat over my eyes, while Brad was sitting on a rocker. \"Set up, boy. You got trouble comin.\"\n\nI casually stretched and sat up. It was the asshole from last night and his cronies. He looked kind of funny, at some point he'd been to a doc and had white plaster all over his nose. His black eyes made him look like a 'coon. \"You bastard!\" He'd tried to yell, but it came out muffled. It was all I could do not to laugh. \n\n\"Don't bitch, mister. You got what you deserved. She's just a whore, liable to be gone on the next stage. Count your blessings it didn't come to shootin'.\"\n\nHe went even redder, if that was possible. \"You know who I am, boy?\"\n\n\"Nope. Don't care none neither.\"\n\nHe seemed stunned I'd never heard of him. \"I'm Jack Benson. I own the Split Trails Ranch.\"\n\nI knew who he was then, though most people called it the Split Tails, because besides the looker of a wife he had, there were three more women there just as hot. One his sister, two hers. Make that three, but one was just a child. The place got a lot of visitors. In fact, Brad and I had planned to grubline by there, to get a hot meal and look at some outstanding females. I had a feeling I wouldn't be welcome now. I wondered that why, if his wife was as beautiful as everyone said, he was getting all upset over a skinny whore. Ain't no accounting for tastes, as my Grandma used to tell me.\n\n\"I've heard of you,\" I grinned. \"More importantly, I've heard about how beautiful your wife is. But to be honest, I ain't impressed much. You got a good woman, a big spread, yet you're willing to die over a skinny bitch that will throw you over for the next guy who waves around a bigger bankroll? You might be rich, mister, but you ain't too smart.\"\n\nOne of the townspeople laughed, and he whirled, to be met by a wall of blank faces. He might be an asshole, but he was still the biggest spender in town. Realizing he'd turned his back to me, he whirled back around. I was still there, leaning against the porch rail. \"Go home Mr. Benson, while you still can.\"\n\n\"You have no idea who I am! I'm the fastest man around here.\"\n\nBrad finally joined the conversation, and his crew blanced when they saw him standing, the Colt revolving shotgun I'd just bought held loosely in his hands. I was pretty sure when it came down to it, his crew was out of the fight. They were bunched too close, three rounds would tear them to pieces. \"That may be so, but you know what? We ain't from around here, and we ain't seen your graveyards.\"\n\nThat gave me an idea. \"Tell you what, why don't we mosey up to Boot Hill and look at some of the men you've put there. I'll go halvers in the cost of having a grave dug. I'll stand on one end and you stand on theother and we'll draw. That way nobody has to drag the carcass anywhere, they can just tumble you in and start covering.\"\n\nHe didn't like that idea at all. A shootout at six paces pretty much meant both were gonna die. He finally got his voice back. \"NO! By God,we do it right here, right now!\"\n\n\"No.\"\n\nHe looked at me, so mad he couldn't talk for a minute. \"What in hell you mean no?\"\n\n\"I mean no. If I'm gonna get plugged, it needs to be over something bigger than a two dollar whore. Tell you what, you put up 52% ownership in your ranch against my twenty five thousand dollars. Get a lawyer over here, draw up a contract, and we'll commence.\"\n\nHis mouth opened and closed several times before he started cussing. I grinned, unbuckled my belt and let it fall to the ground, laying the Colt on top of it. \"I ain't armed. You shoot me now and you'll hang. I ain't putting them back on until you agree to the deal.\"\n\nBrad grinned. \"There won't be no trial. If he shoots you, I'll blow him in two right where he stands.\"\n\nSomeone had finally got enough sense to get the county sheriff. We were lucky, there was a U.S. Marshall there to pick up a prisoner, and he trailed along. \"What's going on here, fellers?\"\n\nBrad told the marshall, and the Federal man had a hard time keeping a straight face. \"Well then, it looks to me like ever'body needs to go home, and you two need to get out of town.\"\n\n\"It's what we were planning all along. If this asshole hadn't showed up, we'd be an hour down the trail by now.\"\n\nPeople were starting to talk, and Benson realized he was standing there looking like a fool. Still a little drunk, he signed his death warrent. \"Hold on just a minute there! This is a private affair between two citizens. The law don't need to be getting mixed up in it.\"\n\n\"That's true, Jack, but he ain't armed. Come on now, pull your horns in, go home to the ranch. You can come back again next month.\"\n\n\"We'll be leaving now,\" I told the Marshalls as I stooped over to pick up my pistols.\n\n\"Like hell you will! Get a damn lawyer, and I'll sign the contract.\" Well hell. Just when I thought it was over. Suddenly I just didn't care anymore. He'd asked for it, begged for it, and nowhe he was going to get it.\n\nWe all went into the saloon to have a drink while we waited for the lawyer. We sat with the law, making a bunch of the locals nervous. \n\n\"You gonna go through with it?\"\n\nI looked at the Sheriff. \"Looks like I got no choice. If I leave, I'm a coward. If I dodge him some other way, he'll take his boys and hunt me down. So yeah, I'm going through with it.\"\n\nThe U.S. Marshall was deep in thought, then he asked a question. \"Ya'll any kin to Randall Walters?\"\n\nBrad grinned. \"He's our old man.\"\n\nThe Marshall sighed. \"He ain't got a chance, does he?\"\n\nI shrugged. \"Everybody's got a chance in something like this. I might be a little slow today. The pistol might misfire, or the shell be a dud. I might step on a rock and lose my aim. But all things considered, he's pretty much a dead man. When the dust settles, I want it clear I done everything I could to stop it.\"\n\nWe sat in silence until the lawyer bustled in. He was a small guy, but he had sharp eyes and an erect bearing. Ex-military would be my guess. \"This is the stupidest contract I've ever written up. Is there not some way bloodshed can be avoided?\"\n\nThe federal marshall spoke. \"The boy gave him every opportunity, but the fool won't take it. So no, somebody's gonna die today.\"\n\nIt was written up in a matter of minutes. If I won the gunfight, I became majority owner of the Split Trails ranch. If I lost, Benson was twenty five thousand richer. I showed the lawyer and marshalls my letter of credit, signing the contract. He took the contract over to Benson, who'd been sitting on the other side of the saloon. I'd seen him take four drinks, pretty foolish behavior for someone about to enter into a gunfight. He explained everything, and Benson signed with a flourish. Both marshalls signed as witnesses.\n\nThe lawyer had made two copies, and had given each of us one. Nothing for it now, I guess.\n\nI got up and called out. \"Come on then, Benson. The quicker I get this over with, the quicker I can inspect my new property. Who knows, maybe your old wife will become my new one. Then I'd own it all.\"\n\nThe man was all but foaming at the mouth in rage, stomping to the door. I think the whole town turned out to watch, especlially on the balconies, where they felt they'd be safe. The Federal Marshall tried one last time to talk him out of it. It was a waste of breath.\n\nI walked to the edge of town, giving him no choice but to follow me. I didn't want some gawking kid to get hit by a stray bullet. We stood, twenty feet apart, the by now afternoon sun behind the saloon, the Marshall off to one side. \"I'm asking one more time for you boys to forget this foolishness.\"\n\nBenson never said a word, so I just shook my head. \"All right then, shoot when you've a mind too.\"\n\nBenson wanted to talk. \"I'm gonna enjoy kil...\" He looked down in surprise at the two bullet holes that had appeared in the center of his chest. He looked up, seeing me holding the Colt in my left hand. He went to his knees, trying to raise his pistol. He actually managed to get a shot off, into the dirt beside his feet. I stood there while Brad stood guard, carefully ejecting the shells and reloading before I moved.\n\nAnd that's how I became the majority owner of the Split Trails Ranch.\n\nSPLIT TAILS RANCH\n\nChapter 2\n\nI looked over at the four who'd rode in with Benson. \"Looks like I'm your boss now, boys. Let's walk over to the saloon and have a beer. Then you can tell me all about what I just acquired.\"\n\n\"Fuck you!,\" said the obvious leader. \"Just 'cause you kilt the boss don't mean shit to me.\"\n\n\"You were his foreman?\"\n\nThe man nodded and spit. \"Well then, I guess you just quit. You figure out what wages you got coming, and I'll pay you off here and now.\"\n\nI looked over at the other three. \"That goes for you boys. You can stay, or you can go. I'm pretty easy to get along with, but my new foreman is a hardass. Meet Bradly J. Walters. He'll be carrying out what I think needs to be done.\"\n\nBrad looked at me stunned, then grinned as he nodded. \"All right, for now. I ain't stayin' in New Mexico forever though. There's a dark eyed little senorita down Nogales way that's just pinin' for me to sweep her off her feet, and carry her home to rule my new ranch. She don't know it yet, but I'll tell her when I find her.\"\n\n\"Fair enough. I might just take one look and sell out. Either way, I might as well go see what I got.\"\n\nTwo more of the hands quit, but one stayed. We took him to dinner that night, then to the saloon, and pumped him. He was not impressed with the way Jack 'Buck\" Benson ran the spread. \"He's too heavy on the graze he's using now. The grass is startin' to give way, and soon prime grazin' land won't be nothin' but a bunch of gullies and weeds. I tried to tell him, the foreman tried to tell him, hell, even his wife tried to tell him. He told us all to go to hell, he knew what he was doin' Them cow critturs ain't gonna be nothin' but skin and bones unless you do something.\"\n\nThis was news I was not happy hearing. \"Is there nowhere else to let them run?\"\n\n\"Hell yes there is, almost five times as much as he's grazing now. He absolutely refused to move the cows, and told us he'd fire the first man he caught messin' around on the South side of the ranch. Somethin' not right there.\"\n\nI agreed. Then I asked him how many hands they had, and how many he thought would stay when I took over. He snorted. \"There's close to fifty, but prob'ly twenty of them just loaf around. Boss refused to fire them, though. I figure when you show up, they'll all leave, along with maybe ten more. You better try rounding up hands while we're here.\"\n\nHe told me they were in town for their monthly supply run. I asked, and he said he had a list, so I told him to fill it. He asked where the money was coming from. That led me to the lawyer. \"Benson had money on him for supplies, and I'm thinkin' that it belongs to the ranch.\"\n\nJoshua Clemmons, esq., let out a sigh. \"Well, that helps. I got his personal effects, I though his wife might want them. Here's his money belt. He banks here, so you might want to talk to the banker come Monday morning. After all, you have controlling interest in the ranch now, so you need him to change things around.\"\n\nI hired him to be my lawyer right then. He'd spoken plain so far and had done what was fair without offerin' anything extra, and seemed to be a decent man. He accepted with a nod and slight smile. \"You'll have to fire his old one. He's the only other lawyer in town. He probably won't take it well, there's not much use for lawyers round here, and he'll be losing his biggest client.\"\n\nThere wasn't as much in the moneybelt as I figured there would be, but it was just barely enough to buy what they came for. I pulled another hundred out of my own belt and gave it to the new segundo, Bill Williams, and told him to make sure we had enough to last the month. Then we sent him around the saloons with a little money to buy drinks with, in case he could find anyone worth hirin'. He just ended up getting a bunch of bums sloshed. \"Ain't a real cowpoke in the whole bunch,\" he said with a sad face. Then the Marshall came to see me. ",
        "\"Hear you're lookin' for hands?\"\n\n\"Yeah, but we ain't doing so good.\"\n\n\"Well then, maybe we can help each other out.\" I invited him to breakfast, and as he ate, he told us what he had.\n\n\"I got three boys in the pokey. Tougher'n nails, even the small one. He don't drink, but he's mean as a snake and good with a knife. They come in with a drive, had words with the boss over wages, and he left them here. Two of the locals tried to roll them, and he sliced them up pretty good. Then the other two sobered up, and beat the hell out of them. They're all pretty young, and kind of green, but they seem solid. I think they're related, but they don't talk much, at least to me.\"\n\n\"All that sounds kind of straight up. Why are they even in jail?\"\n\n\"The boys that got their asses kicked tried to ambush them after they healed up. The little one run them home, swinging a Bowie knife that was almost as big as he was. Then set the shack on fire, standing outside with a shotgun and daring them to come out. The other two showed up and started watching the back. Ever time one of the men in the house showed their face, they shot at them, making sure they missed. They was screaming and beggin' by the time we got there, and we damn near had to shoot the little one to get him to back off. The boys came running out, their clothes on fire and screamin' like banshees.\"\n\nI grinned. These were my kind of people. \"What exactly, are they charged with?\"\n\n\"Arson. The gent that owned the shack tried to jack them up, they didn't have it, so I had to put them in jail. If you was to take them off my hands, there would be a few in this town who'd sleep better at night. One thing though, you have to pay the guy who owned the shack for his loss. I'll make sure it's fair, because it really was a shack. Maybe at most a hundred, maybe less. You don't take them before the judge comes through next week, and they're all off to prison for at least two years. I don't think the young one would do well there, he'd end up killin' somebody before the week was out, and his kin would jump in to help him against the dead man's friends, and they'd all end up dead. I'd hate to see that, mister.\"\n\n\"Finish your breakfast, Marshall, and then we'll mosey over to the jail.\"\n\nThree sullen faces looked up at us when we walked in. All of them seemed pretty young, especially the little one. I skipped the formalities. \"You boys know how to handle cows?\"\n\nFor the first time, I saw a little interest. The one I figured was oldest spoke up. \"All we ever done our whole lives was ranch and farm. So yeah, we know how to handle cows, dig postholes, plant crops, chop firewood, and Tiny here is a damn good cook.\" The little one blushed, which seemed odd on a man.\n\n\"Are you a man of your word?\"\n\nThe question surprised them. The middle one spoke. \"A Higgins never goes back on his word. You can take that to the bank.\"\n\n\"I ain't interested in banks, I'm interested in hands. I just acquired a ranch, and I'm in need of a few good people. Can I trust you?\"\n\n\"You get us out of here, Mister, and we're yours for life.\"\n\n\"Good enough. I'm going to pay your debts to get you out, and I'll take half your wages until we're square. Deal?\"\n\nRelief showed on their faces, and the little one looked a little misty-eyed. I paid their fines and damages, and they walked out with us. Me and Brad shook hands with every one, even the little one. I looked into a pair of green eyes, and knew. I glanced at Brad and he grinned, so I knew he'd figured it out too.\n\nThey gathered their packs, mostly what little spare clothes they had and some wore out percussion rifles. The oldest had an ancient looking Dragoon that looked like it would fly to pieces if it was ever fired, so I knew I'd need to kit them up with some decent weapons. I took them straight to the gunsmith, them complaining the whole time.\n\n\"This ain't charity. There might come a time I need you to back me up, and I need to know you got decent weapons. I'll add it to what you owe me.\" The oldest, Bud, picked a decent looking Peacemaker. Sonny, the middle one, took a shine to an old Starr the gunsmith had reworked for .38 cartridges. Tiny looked with longing at a Colt Lightning in .32-20 caliber. It was only a five shot, but it was slim and looked like it would fit nicely in her little hand. Yep, it didn't take us long to figure out she was a girl. I suspect the Marshall knew, another reason why he wanted them off his hands.\n\n\"You like this one, Tiny?\" She looked at Brad and shook her head shyly.\n\nI grinned at her. \"Don't make me regret this, the Marshall said you was pretty bad to fly off the handle. There is one condition, sweetie, you tell us your real name.\"\n\nHer eyes flew wide and the boys looked shocked. I put the pistol back after a couple of minutes. \"Well, then, if you can't tell me the truth, I can't trust you with a weapon. Total me up, Mr. Herman.\"\n\nHer hand shot out, grabbing mine. \"It's Jessica! Jessica Alise Higgns.\"\n\n\"Well then Miss Higgins, it's a pleasure to meet you. If I get this for you, you need to give me your bond you'll be responsible with it. Word is you got a pretty hot temper.\"\n\nShe drew up to her full height of five feet, maybe, looked me in the eye, and promised. I turned to Mr. Herman. \"Well sir, I'll guess we'll be adding this as well. You wouldn't happen to have a child's size holster for it, would you?\"\n\nHe grinned. \"As a matter of fact...\" He pulled a really nice black handtooled cartridge belt and holster, studded with little silver stars. \"This might do. Had a midget through here about six months ago, a gambler called Big Mike. Some kind of joke I guess. Anyway, he had me make this for him, then discovered he weren't near the cardsharp he thought he was. Got caught holding a pair of aces, that were the same suits another gambler had. He had nerve, but nerve and a two shot derringer don't get you out of a shooting scrape. He already paid for it, and I was gonna take it apart for the silver and leather. Give me the cost of that, and it's yours. I'll even put her initials on the holster.\"\n\nLittle Jessica was begging with her eyes, so I agreed, while Brad just grinned. I'm sure he remembered how our baby sister used to twist me up just by batting her eyes. She almost skipped out of the gun shop, she was so happy. That grin turned upside down when I took her to a dress shop. The owner eyed me warily, wondering what I wanted.\n\n\"I got a job for you. I want you to give this little hellcat a proper female wardrobe befitting a young lady of quality, including a few split skirts suitable for riding.\" She almost threw a hissy, but I didn't back down. She mouthed off one time too many, and I snatched her up, holding her off the ground at eye level. She suddenly got very quiet.\n\n\"You listen here, little missy! There's a few things you need to know. I don't take a lot of backtalk. You sass me and I'll tan your hide in front of everyone. You're going to dress, act, and comport yourself as a proper young lady, if I have to beat you into it. You understand me, girl? This ain't up for discussion.\"\n\nIt was just her, me, and the milliner in the shop. I wouldn't embarrass her in public, but she didn't know that. Tears were starting to fall. \"Now, look me in the eye, and say 'Thank you Zeke Walters. I appreciate your gift.' And it is a gift, you don't owe me diddly for the things you'll get. It wouldn't kill me to know you were just a little happy about it. Can I depend on you?\"\n\nI put her down and she wiped away the tears, nodding her head. \"You can, Zeke Walters. And thank you. I been beat pretty hard, but nobody has ever spanked me before, and I don't want to find out what it feels like now. I'll be a good girl.\" She said something under her breath and thought I didn't catch it, but I heard just fine. \"A very expensive good girl.\"\n\nThe milliner was grinning, and suddenly I knew I was going to have a lot of restless times over this girl. It kind of made me feel good. It took three hours, but that included a bath and some pampering. The Milliner called in her friends, for shoes, hats, underthings probably, every single item a young lady would need.\n\nWe had thought about having a beer, then decided against it. We were in a town of strangers, and none of us were what you'd consider popular. Instead we poked around town for a little bit, found a Mexican restaurant that had some amazing smells coming out of it, and decided that was where we'd eat supper. The we piled up on the boardwalk in front of the saloon, waiting.\n\nBrad had dozed for about an hour, as well as the Higgins boys. Seemed they hadn't slept well in jail. When they roused, me and Bill settled back, pulling our hats over our eyes. Bill was sawing logs, and I was dozing in and out, when I heard Brad's chair thump on the boards, as well as exclamations from the boys. I woke instantly, coming to my feet, looking for trouble. \n\nAnd I found it. Lots and lots of trouble. She had on a long gray skirt, the tips of her new black boots sticking out, with a frilly white shirt and a matching gray jacket. She was carrying a little straw hat, her shining blond hair done up in an elaborate braid and held in place by pink ribbons. She was followed by two boys roughly her age, both of them stumbling over their tongues as they followed her. They held bags, three hat boxes, two shoe boxes, and a small trunk. She stopped in front of us, and twirled. Then she looked me right in the eyes. \n\n\"How do I look?\n\n\"You look like I need to buy a couple more shotguns. You look lovely, Jessica, just perfect.\"\n\nShe blushed and Brad laughed. He suddenly smiled, truning on the charm that had separated many a young thing from her knickers. \"It does indeed, Jessica. I'm glad I wasn't appointed Dad, at least I can sleep with both eyes shut. How old are you, baby?\"\n\nShe blushed. \"I'm not sure. Thirteen, I think. I'm not even sure when my birthday is.\" She keyed into the 'daddy' statement, and it opened up a whole new world of possibilities to her.\n\nSeems her folks had belonged to some obscure religion that didn't believe in holidays or birthdays. She looked so sad I had to cheer her up. \"Well then, since you've already got a bunch of presents, I declare today your birthday. Happy birthday, baby.\"\n\nI didn't expect the reaction I got to that statement. She jumped onto my lap, hugging me like I was going to disappear, mumbling \"thak you, thank you,\" over and over. I cuddled her, and felt for the first time the love a parent must have for his child. I was a little misty-eyed myself by the time she had settled down. I stood, setting her down gently.\n\n\"Come on baby, we need to get you and your brothers rooms.\"\n\nI'd given the boys enough money for a couple of new pair of jeans and shirts, and a decent pair of longjohns. They wanted to fight it, but I shut them down. \"You work for me now, and I want to present a certain image. So you'll always be clean and well dressed when we go to town or in public, do you understand?\" They stopped arguing and stood straighter.\n\nWe'd extended our stay at the hotel due to the circumstances, and things were slow, so rooms were easy, until Jessica spoke up. \"Do you have a room next to my Daddy?\" Brad just grinned bigger and I jerked a little. Daddy? Well, why not?\n\nThe clerk, confused, nodded. First he comes into town and kills the meanest man in the territory over a whore that wasn't that good, then he shows up with a daughter out of nowhere. Who is this guy?\n\n\"Does it have a connecting door?\" He nodded again. \"Then I'll have that room, please.\" The way she said please meant don't you dare say no, so soon my new daughter was walking through our adjoining door, smiling. Brad was right behind her, he had the room on the other side, and it connected as well. She was just about as safe as one could be, not even considering her brothers were the next room over on one side, and Bill was the same on the other.\n\nSleeping arrangements covered, we walked down to the Mexican restaurant, after making sure it was family friendly. Jessica had changed hats, wearing a little Stetson that looked like a mineature of mine. She had locked down on my left hand, and looked like she had no intention of letting go.\n\nThe woman who walked us to our table had to be the owner, the way everyone deferred to her. I wished her a good evening in Spanish, asking what was good tonight. She seemed surprised, even more so when Brad asked if she had chile relleno. It was his favorite meal. We were from Texas, close to the border. What people forgot about Texas was that it was Mexico a lot longer than it was Texas, and most everybody in our area spoke Spanish almost as well as English. Brad actually preferred Spanish, when he had a choice.\n\nPleased to be able to converse with someone who spoke her native tongue, she chatted happily, promising us our favorite dish. I asked Jessica what she wanted, and she blushed. \"I ain't never et...I mean, I've never had any food like this, Daddy. Order for me please.\"\n\nI ordered her a chicken and rice dish, asking the owner to make it mild. Her brothers opted for the same thing, and Bill surprised us all by asking for tamales, the spicier the better. The food came pretty fast, considering, and Jessica loved her dish, until she tasted mine. \"Ooh! I want his next time, please Daddy?\"\n\nI tried not to laugh when Bill got the brothers to taste a tamale, gasping and sucking down the dark Mexican beer, trying to cool their tongues. Conchita was removing dishes, and I saw the sly grin. \"It's my daughter's birthday today, Conchita. Thirteen. She's quite a beauty, isn't she?\"\n\n\"She is indeed. You must be very proud.\"\n\n\"I am. Very. It's like every day is the first day with her.\"\n\n\"We must celebrate! I have just the thing!\"\n\nShe was back in few minutes, holding a piece of tres leches cake with a small candle in it. She was followed by a slight young man with a guitar, dressed in a nice suit, holding a guitar. He sang just for her, looking into her eyes the whole time. A traditional Mexican love song, fraught with emotion. She couldn't understand it, but she understood the meaning. Tears were streaming down her cheeks as the last chord lingered. Most of the patrons applauded, many wishing her a happy birthday in two languages. She stood, shyly, and executed a perfect curtsey, saying thank you in both languages.\n\nShe'd been running on adrenaline for almost twelve hours and I was pretty sure the events of the day was overwhelming her. She'd gone from a jail cell where it looked like she was bound to prison to a pampered daughter in twelve hours. Jessica was flagging to the point I was seriously thinking about carrying her, bending over to take her, when the shot rang out and a post splintered right where my head had been seconds before. I shoved Jessica to the ground, coming up with a Remington. It was a useless gesture, because the brothers, Bill, and Brad were all shooting in the same area, the spot where the shot came from. There was a highpitched wail, and the ex-foreman tumbled out from behind a water barrel. There were nine holes in the man, seven of them capable of being fatal. We were walking forward cautiously when a shot rang out and another man tumbled off a balcony, the shotgun clattering to the sidewalk. We turned, to see the slight Mexican who had serenaded Jessica during dinner. He touched his hand to his sombrero, as he slid the silver mounted, ivory handled revolver back into his holster, and disappeared into the darkness.\n\nThe marshall came around, investigating. It was another plain case of self defense, but you could tell he was getting a little tired of it. \"Boys, you seem like decent folk, but something about you is bad for the air of this town. It's suddenly got too much lead in it. I hope ya'll are leaving sometime soon. I think the only one in this town who will miss you is the undertaker.\"\n\n\"We'll be leavin' tomorrow, just as soon as we do our banking.\"\n\nThat seemed to please him. I had to sit beside Jessica and hold her hand until she stopped shaking and went to sleep. I looked at her honey blond curls spilling across the pillow and smiled. This girl was mine!\n\nWe were up with the dawn, eating breakfast at Conchita's. I asked about the man from last night when I caught her alone. \"My nephew,\" she said, sighing. \"He got into a little trouble at home. Nothing he provoked, but the man he killed has a vengeful family. My sister sent him up here until things cool down. I don't think he will be staying much longer, he is used to working outside, from a saddle. He has a way with horses, senor! I have never seen the like.\"\n\nHe sounded like a man I could use, and I told her so. Her smile got bigger, and she promised to talk to him.\n\nI left them at the restaurant. Conchita was trying to teach Jessica a few phrases in Spanish, while the brothers and Bill dawdled over coffee. Brad went with me, and we were standing at the bank when the doors opened. The banker, while not happy to see us, didn't openly fight us. He showed me the amount in the account, and it seemed way low. I was going to wire Wells Fargo, and transfer two thousand into to it. This did wonders for the manager's disposition.\n\n\"Why don't you just use the other account?\"\n\n\"What other account?\"\n\n\"Mr. Benson has a side account. I think it's connected to the ranch, he would transfer funds from it into the general account from time to time.\"\n\nHe showed us the receipts. Fourteen thousand! In this day and time,that was a small fortune. Something was not right. I closed it out, transferring it all to the ranch. I did keep five hundred because I'd run through a good bit of my stake and half of it belonged to my brother. I gave him 250 over his objections, so I'd have a clear conscience spending the rest. \n\nWe talked about the attempt on my life from the night before. \"Something don't add up here, brother. The foreman was pissed, but you paid him off and he seemed satisfied. Suddenly he's hiding in the dark instead of calling you out? He never struck me as a coward. Then there's the galoot with the shotgun none of us had ever seen before. What was his stake in this? Just guessing here, Zeke, but I'd say someone wants one or both of us dead.\"\n\nThe same thing had been running through my head, and we agreed to keep a good eye out, and watch those around us. We picked up the boys and Jessica, thanked Conchita for her hospitality and the fine breakfast, and walked to the general store. Bill went to the livery and picked up the buckboard, along with the foreman's horse. it belonged to the ranch, after all. It occurred to me I needed to get the brothers something to ride. Jessica was going to ride beside Bill in the wagon. We'd do it after the supplies were loaded. I thought the order was light, so I added a few things, including a bag of dried apples and a case of canned peaches. I always loved pies. Jessica brought it up, and I bought a pound of cinnamom.\n\n\"Got any other ideas on what we need?\"\n\nShe hesitated, and I told her to speak. \"You're going to a ranch with four females who have good reason to hate you. You killed a husband and a brother and placed their lifestyle in danger. You own the majority share, you could take the house and kick them out and they wouldn't be anything legally they could do about it. I wouldn't expect kisses and hugs when you roll up to the front door. What you need is a peace offering.\"\n\n\"Like what?\"\n\nJessica amazed me, going from broke and struggling one day to throwing money around like it grew on trees the next. Well, it weren't really her money, but still. She piled bolts of cloth, ribbons, combs and brushes, as many ladie's magazines as she could find, several bags of candies, and at the last minute added an assortment of perfumes, until the counter was in danger of losing half of it. She looked at a few hats, but decided that was too personal a choice and left it be.",
        "It hit me while we were loading the buckboard that I only needed one horse, so we walked towards the livery stable. The young Mexican just seemed to appear out of nowhere, dropping into step with us. \"Do not go there, Senor. His horses are no good. Come, I know where to go.\" He said it in Spanish, and I never let on, walking right by the livery stable.\n\nI decided to trust his judgement, and we rode a few miles out of town, stopping at a little ranch. It was owned by a Mexican family, and these people really, really knew horseflesh. We looked over the stock, conversing with the man and his son int their native tongue, while Jessica visited with the wife and daugthers. Bud was really taken by a dun mare, and there was a black stallion I really liked. Brad was looking at a bucksin gelding, running his hands over it's body while talking to it in Spanish. Bill and Sonny were also looking, so I bought a chestnut mare with white stockings, and another buckskin mare. Jessica was on the porch pouting because the horses were all too big for her (in my opinion, not hers) and said so. The daughters laughed and tugged her up, going around behind the barn. I got to looking for her after we had made our deals, when she walked back around leading the prettiest paint mare I had ever seen. It was also the smallest, maybe going twelve and a half hands. It was the result of a small mustang with obvious Arabian traits mounting a mare pony. I took one look in her eyes and hoped the rancher wouldn't gouge me too badly. He laughed and gave me a really good price, saying he hadn't found anyone who needed a horse that small. Jessica was crying, hugging the horse, then me, back and forth.\n\nCarlos Diego Santos had a gray gelding with a white tail and mane. That horse was cleaner than I was. Carlos was to wrangle the extra horses, including our old ones, good solid mounts, but not in the league with what we had just purchased. We got ready to roll out, and I couldn't find that wayward child anywhere. I was about to get aggravated when she came riding up. Seems besides horses, the rancher made tack. She was sitting in a black saddle that looked custom made for her, grinning to beat the band. \n\nI remarked as she rode beside me how easy it seemed to find things that fitted her, and she grinned. \"It's fate. You were meant to find me, so everything just fell into place.\"\n\nShe was a little living doll, her hair in a loose braid under the Stetson, wearing a black divided dress, a gray shirt, and a black vest. I had no idea where the vest came from, but she was a fetching figure. You had to look close to see the little Lightning snugged to her waist in a cross draw. Her horse had a gait that made her look like she was prancing down the road.\n\nWe had paid one more visit to the gunsmith, for long guns. Sonny got an old Henry that had been reconditioned, and Bud went with a Yellowboy. He didn't have anything small enough for Jessica to carry, but I made her happy by ordering a Lightning pump rifle in the same caliber as her pistol, 32-20, to be picked up the next time we made a supply run. He held me back as the others took their weapons out. \n\n\"Thought you might like to look at this. It might come in handy for the little miss down the road.\" It was a pair of Henri Deringer short guns, double barrel, in .25 caliber. I bought them and one box of shells. I fugured she wouldn't need to target practice, if she had to use one, they would be right on top of her anyway. She carried one in a small pocket in her riding skirts. I carried the other in a vest pocket.\n\nWe were finally on the road. It would take ten days to get to the ranch at the speed of a loaded buckboard. I wondered as we idled along what kind of reception we'd get.\n\nSPLIT TAILS RANCH Part 3\n\nWe idled down the trail, saving our horses and getting a feel for the land. This part of New Mexico was high country, with surprisingly large mountains. We were down a bit lower, so it was mostly rolling hills covered with timber and grasslands between.\n\nIt was late spring, so it was comfortable during the day, and a little brisk at night. Jessica followed me around like a little shadow, and once when her constant questions got on my nerves I touched the spurs to my black, and he took off like he forgot he was supposed to be somewhere else an hour ago. I heard whooping, and looked down, surprised to see her beside me. That little hoss could sprint. She stayed with me for half a mile before falling back, and by then my aggravation had worn off, so I stopped while she caught up. Her eyes were dancing with excitement.\n\n\"Did you see? Did you see? My little pony can RUN! Good girl, Sweetie.\"\n\nShe'd named her Sweetie because she liked hearing me call her that. The little mare had gone back to her prance, not even breathing heavy. It occurred to me we could win a bit of money on Fourth of July races. At least for the first time, especially if we egged it on, asking if they were afraid to race a little girl and her pony.\n\n\"What am I gonna do when we get to the ranch?\"\n\nI grinned. That girl was so anxious to be a good daughter But really wasn't sure what I expected. \"I don't know Sweetie. Maybe I'll just keep you around because you're so cute.\"\n\nHer smile was huge, but she stayed on subject. \"You have to let me do something. I can't abide being idle for long.\"\n\nI had noticed that. She was the cook when we made camp, selecting the menu as we rode, then jumping on it as soon as we stopped. Not only could she cook, she came up with things that made your mouth water. We all praised her and she glowed. \"I was camp cook on the drive. I found the trick was a good supply of spices and to be creative. There was a lot of things about that drive to complain about, but food wasn't one of them.\"\n\nI'd gotten the story out of Bud. They were trying to get a stake, and worked the brush where they were finding Mavericks, unbranded cattle no one had a claim to. It took them a year of backbreaking work, but they had two hundred cows to show for their efforts. Knowing they couldn't drive them alone, they hooked up with trail boss whos struck a deal. They helped with the drive without pay, and he'd take their cattle along with his. They worked like dogs all summer, but go the herd to the railhead, only losing twenty of their cattle and fifty over all. The man sold them, then refused to give them the money. They braced him, but he had a crew of pretty salty boys, and they never had a chance. He dumped them in the next small town they came to, stealing everything they had but the clothes on their back. Bud and Sonny were anxious to pay me back so they could go searching for the man.\n\n\"Leave it be for a while. A snake like that will leave plenty of track, and you need to hit him when he least expects it, cut him out of the herd, and get your justice. What do you have in mind?\"\n\nSonny obviously had been thinking about it. \"First and foremost, we want our money. Then we're gonna kill him. I'd prefer to hang him for a rustler, but I'll settle for putting a bullet in his gut.\"\n\nThey had met him in Arizona, so they had a starting point. I thought maybe I'd drop a line to my older brother, who had a ranch above Prescott, see if he'd ever heard of him. It never hurt to know as much as you can about an enemy.\n\nOn the ninth day Bill rode up beside me. Me or Brad usually rode point, Carlos had the horses so well trained they just trailed along beside us, and he'd usually go off a couple times a day, looking for high country to keep watch. We never saw another soul until just after Bill came up beside me. Five riders were coming up the road, riding side by side, spread out. A trouble formation. We pulled up and waited. They stopped about twenty feet away, saying nothing. Bill grinned suddenly.\n\n\"Howdy, boys. A bit off the range, ain't ye?\" Bill parent's had been Quakers, and he'd picked up the speech pattern but not the religion. There were a lot of, 'ye's, thee's, and thou's,' scattered throughout his conversations. It took a little getting used to.\n\n\"Who ya ridin' with Bill? Where's Buck and Johnson?\" Johnson had been the foreman. \n\nI think it gave him a good bit of satisfaction to tell them. \"Buck's probably in Hell by now, and Johnson should be close behind him. Buck finally ran into a man he couldn't buffalo or outshoot. You should have seen it, he almost begged the man to shoot him! He gave Buck every chance, even told him he wouldn't fight him without a wager to make it worth the effort. You're looking at Mr. Zeke Walters, owner of the Split Trails Ranch! if you don't believe it, he's got papers, notartized by a lawyer, the local sheriff, and a U.S. Marshall. How you like them apples?\" \n\nThere was bedlam for a few minutes, then they got quiet. \"Where does that leave us?\"\n\n\"If you're good workers, it leaves you with your jobs. If you're slackers or troublemakers, it leaves you ridin' the grubline until you find someone foolish enough to hire you.\"\n\nI said it quietly, but they got the point. \"I don't know, mister. Buck waren't much of a boss, but he paid regular.I think maybe I'll draw my wages and mosey on.\"\n\nI looked at the man and shrugged. \"Suit yourself. If you're moseying on, though, I suggest you go back to the ranch so I can pay you, and you can get off that horse. It's got the ranch brand on it, so I figure I own it.\"\n\nYou could tell by the look in his eyes he hadn't thought about that. \"Now look here, mister! I...\"\n\nApparently Bill didn't like the man much, bulling into his horse, making it prance. \"You'll shut the hell up, that's what you'll do! When we get back to the ranch, you can straddle that crowbait you rode in on. It's still in the pasture, eatin' everything in sight. You wouldn't want the new boss thinkin' you were trying to steal his hoss, now would you? If he didn't plug ya, he'd hang you from the highest tree he could find, and leave you danglin' until you rotted and fell to the ground in pieces for the coyotes and skunks!\"\n\nHe was backing the horse up, hands held high. \"Calm down, Bill. I'm ridin' back with you. I might draw my pay and hang around until Buck's friends show up. That would be a conversation worth listenin' to.\"\n\n\"Those friends need to know if Buck ain't around anymore, they got no one to visit. I'm segundo now, and I aim to prove my worth. And we're movin' them critters to better pasture.\"\n\nOnr of the other men had been quiet until then, just listening. \"You know that ain't a good idee, Billy.\"\n\n\"I think it's an excellent idea, one that's been a long time comin'\" \n\nI jumped in then, marking my territory. \"Here's the deal boys. It'ss my land now, to do with as I please. I don't intend to let cattle starve and land ruin when all I got to do is move them a little ways, on MY spread. Why don't you go tell Buck's friends to come see me if they don't approve. I know it would be damned interesting to hear their reasons why.\"\n\nI stopped to let that sink in. \"Know what? I've been thinkin', and my brother can tell you that never comes to a good end. I'm thinking you're drawing wages for a spread you ain't even workin'. Where were you going? Who told you to leave and go gallivantin' off? Somethin' stinks boys, and the wind's behind you. I think you should turn them nags around, and fetch your own mounts when we get back. I don't think I'll be needing you. Bill says we're a little top heavy, handswise.\"\n\nI could see their minds working. There were five of them, and just Bill, Brad, Sonny, and me. They weren't even counting Jessica, who was sitting off to the side, bigeyed. Sonny didn't look to be totin', although his pistol was in his waistband and his rifle in the floor beneath his feet. They figured it was going to be five to three, and liked the odds. Bud was off with Carlos, up on the ridge somewhere. If I had to guess, I'd say two of them had rifles lined up on them.\n\nI was afraid that Jessica might get hurt, so I thought I'd try to talk them down. \"Boys, don't go gettin' no foolish ideas. There's a couple fellas on the ridge behind us, probably got their rifles already on you. My brother ain't totin' no rifle. What he's got in his hands is a Colt revolving shotgun, in ten gauge. You're bunched up kind close, if he gets two shots off, all of you might be down. Now pull your horns in, and turn around. There's always another day.\"\n\nOne grinned, and I knew. He wasn't going to back down. \"No time like the present,\" he said, reaching. He jerked as a .32 caliber ball went through his shoulder. The rifles fired from the ridge kicking dirt up in front of their horses, making them buck like crazy. I noted all our mounts stood stockstill, even Jessica's little pony. I resolved to buy as many horses from Carlos's rancher friend as he could spare on the spot. By the time they got them under control they were facing the shotgun, Sonny's rifle, and three pistols, not counting the two rifles on the ridge. The fight went plumb out of them. The loudmouth was holding his shoulder and cussing a blue streak while my little hellcat grinned. He saw her pistol for the first time, and started off again.\n\n\"This ain't over! When Buck's friends come I'll be with them, and I'm claiming the little bitch. I'll make her beg before I kill her. AFTER I fuck her boney little ass.\"\n\n\"My little ass ain't boney, mister. The closest you'll ever get to it is if I let you kiss it. You should have never threatened my Daddy. More important, you should have never threatened his little girl.\"\n\nFor the first time they noticed my look. One actually paled. Brad backed up a little, knowing the look. Bad things were coming. \"Get off your horse, now!\"\n\n\"You wouldn't kill a wounded man, would you?\" I laughed, causing the man speaking to worry.\n\n\"If he don't get off that hoss, I'm letting my brother cut loose with that scattergun. It won't just be him dying in the dust today. Now's a good time to make a choice.\"\n\nThey all backed up, leaving the loudmouth all by his lonesome. \"I'm giving you a chance, asshole. She didn't hit your shootin' arm, so you got just as gooda odds as you had before my baby plugged you. This is advice for all of you. Never threaten a man's children. NOW CRAWL DOWN OFF THAT FUCKIN' HORSE!\"\n\nHe stood, swaying, as I waited. He snatched at his weapon and looked foolish. He'd untied the leg strap to make it more comfortable to ride, and the holster was sliding everywhere. I waited until he got his hand on the butt and it was halfway out before I palmed my crossdraw Remington. I hit him dead center, then put one through his mouth before he could fall. He deserved it. All the others were holding their hands high. I grabbed his rope off the saddle and tied it around his feet, and looped the other end around the pommel of his saddle.\n\n\"What you doin' Mister?\"\n\nIt was a pretty respectful bunch, after we had collected all their weapons and piled them in the wagon. \n\n\"Takin' his ass back to the ranch. I figure it might be a good lesson for the men still there. I don't take shit, work slackers, or waste time on loudmouths who threaten me or my family.\n\n\"You're gonna drag him?\"\n\n\"All the way.\"\n\n\"That ain't respectful of the dead.\"\n\n\"I'm as respectful of him dead as I was when he was alive. I have none. The man thought he had good odds and was willin' to start a fight with strangers, telling me he was going to molest my child after I was dead, then kill her. If you object, maybe you'd like to join him.\"\n\nOne of the other men, one that had said nothing the whole time, grinned. \"Looks like the Split Tails finally got what Buck fancied himself to be. A genuine hardass. I almost wish I could hang around to see how it turns out. Bullets are gonna fly and men are gonna die when this starts. I don't wanna be on either side. I got the feeling the life expectancy for men in the immediate area just got a lot shorter. You won't have to worry none about me, because as soon as I get my hoss and wages, I'm gone. I always wanted to see California.\"\n\nIt was later in the day, so we decided to stop where we were. I threw the rope over a tree a distance away from the campsite and pulled the dead man up off the ground, tying the rope off. He was dangling upside down six feet off the ground. Bet it would have been pretty miserable if he'd been alive to feel it. Now I didn't have to worry about the varmits knawin' on him during the night.\n\nJessica, after living as a man and being dirty for so long, was almost fanatical about her desire to be clean at all times, so she asked me to stand guard while she took a quick bath in the creek. I stood behind a natural screen of brush and listened to her splash and sing softly. She had a very good voice. She didn't take long, coming back clean and shining in a long flannel nightgown. She led me over to a rock, where she climbed until we were eye level. it was then that I saw her tears. \"I was so scared, Daddy. I couldn't abide the thought of those men trying to kill you. I have to tell you, I meant to kill him but my hand shook a little. I'll do better next time.\"\n\nI petted her until she calmed. \"I'm going to try to make sure there isn't a next time. I don't want you roamin' our ranch looking for gunfights. You're gonna have too many girl things goin' on to worry about stuff like what happened to day. Say something bad happens to me. You'll still have Brad, your brothers, Bill, and Carlos. They'll take care of you. I promise.\"\n\nI guess she hadn't had a lot promised to her in her life, because the tears came again. I was kinda new at this fatherhood stuff, so I just held her until she calmed down. I decided that the next time we were in town, I was gonna have the lawyer draw up a will, leaving her my part of the ranch and our gold mine, just in case. Brad could be her guardian, that way no one would try to cheat her. We walked back to camp, and she made a point of kissing everyone good night before she crawled into the little tent I had bought for her. We'd be sleeping outside. I was used to it, and it would be a lot handier than trying to crawl out of a tent if bullets started flying. Two of us took a turn as guards, just in case some of their friends came looking for them. All in all, it was a pretty quiet night.\n\nIt was half a day's ride to the ranch, and we left early the next morning. We'd loosely tied the former hands up, and we released them while Jessica made breakfast, a dish Conchita had taught her, and fried potatoes. One of the men even thanked her for a fine meal.\n\nCarlos ate and promptly disappeared. Bud had pretty much partnered with him, so he took off right behind him. The closer we got to the ranch house, the less I liked. Bill was right. The cattle were underweight and the range looked to be in terrible shape. We rounded a curve, and saw the house in the distance. I was surprised at how large it was, a huge white two story with wings. Wonder how many rooms it had?\n\nI stopped at the tree line and strung the loudmouth up. The trip had taken most of his clothes and good bit of his hide. His head was practically gone, the bullet through the mouth had messed it up to start with and being bounced around along a rocky road hadn't helped. \"Let all the hands get a good look at him, Bill. Then bury him tomorrow afternoon. Nothin' fancy, just a nice deep hole. You don't even have to put a marker up unless you want to.\"\n\nBill smiled. \"Oh,we got a little graveyard just for the likes of him. We've had a few Injuns and rustlers who found out the hard way not to mess with the S T. They're planted a ways back, away from the 'family' graveyard, reserved for the men who died defending the place. I'm sure the hands will find it educational to see what happens to anyone who crosses you.\"\n\nAs we rolled into the yard, I let my eyes wander over the ladies on the porch. Plainly dressed for the most part in working ranch attire, they were an admirable group. There were two blonds, a red head, a ravenhaired little girl that looked a little younger than Jess, and a stunning brunette. I'd heard enough descriptions to know she was the widow.",
        "We'd sent word ahead, a couple of letters from the lawyer that included a copy of the transfer of ownership, a letter from the U.S. Marshall detailing how it all happened, including my numerous attempts to avoid gunplay. I sent the widow a letter with instructions from the lawyer, that incuded forms to make the ranch a corporation, guaranteeing nothing like what had just happened could happen again. I thought it protected everyone's interests.\n\nWe'd cleaned up a little before we arrived, so we wouldn't look like trail bums. I was trying to make the best impression I could for someone who had shot her husband. I dismounted, turned to Jess and lifted her from the saddle. The little girl seemed fascinated by her.\n\n\"Ma'am, I'm...\"\n\nOne of the blonds, a beauty with hard eyes and a sharp nose, screamed out. \"We know who you are, you murdering bastard! You killed my brother! Get off his ranch, right this instant!\"\n\n\"Henrietta! We talked about this! If you can't keep control of your temper, perhaps you'd like to retire to the parlor.\" The blond never said another word, stalking away, her posture rigid with hate.\n\nThe woman turned, and I got a glimpse of amusement in her eyes. \"I'm sorry. She hasn't taken the death of her brother very well, or the news of what he lost dying. I'm Mrs. Claire Benson. I believe you met my husband.\"\n\nShe certainly didn't seem to be too shook up by his death. I bowed slightly. \"I apologize for the circumstances of our meeting, madam. I'm Zeke Walters. The man to my right is my brother Brad, and this fine young lady is my daughter, Jessica.\"\n\n\"Oh, so you're married? Will you wife be joining us?\"\n\n\"I regret to say I have never married, although I hope to find a wife in the future. No, this is my daughter by choosing, and I have to admit she did the choosing and just dragged me along.\"\n\nJessica just grinned, and gave a nice curtsey. \"It's a work in progress, ma'am. Thank you for your hospitality.\"\n\n\"Well then. I'ts very nice to meet you, Miss Walters. Please allow me to introduce my sisters. This is my oldest sister in age, Paris Johannsen.\"\n\nThe blond did a little curtsey, not speaking. When she introduced the redhead, she had plenty to say. Her name was Courtney, and I found out later her nickname was Corky, because she was bad to pop off. That girl had a temper on her.\n\n\"Welcome, Mr. Walters, to you and your family. It is probably no secret that I despised my brother in law. You did the world a huge service by removing him from it.\"\n\n\"Courtney! A civil tongue, if you please. And this little lady is Sabrina, my baby sister, although I often think of her as just my baby.\"\n\nShe did a small curtsey as well. At least they had manners. She seemed too shy to speak, so I grinned at her. \"It is very nice to meet you, Miss Sabrina.\"\n\nClaire turned to her. \"Sabrina, why don't you take Miss Jessica to your room to freshen up a bit? Lunch will be in one hour. Mr. Walters and I can use the time to discuss business.\"\n\nWell, she was direct if nothing else. In a few minutes we had settled into the ranch office. She had Paris with her, and I had Brad. Claire sat behind the desk, hands clasped together as if in deep thought. Se spoke suddenly, in a dull, flat voice.\n\n\"My husband was a foolish, reckless man, convinced of his own rightness, and that others should bow to his bidding. The problem was he surrounded himself with companions that stroked his ego, until he was firmly convinced everyone else were idiots. It proved to be his undoing. You hold the cards here, Mr. Walters. When would you like us to leave? I would ask you give us a month, to find lodging. Maybe we will go back home.\"\n\nThe idea that they would leave surprised me. \"I have no intention of forcing you from your home. If you wish to leave, I will pay you a fair price for your share of the ranch.\"\n\n\"That is very generous of you, under the circumstances. If we chose to stay, may we continue to live in this house until we can build something to suit our needs?\"\n\nShe could see the surprise in my face. \"Why would you leave this house? It's yours, and I have no intention of taking it from you. I can deed it to you, if you like. We will be the ones building, not you.\"\n\nI was almost cetain I saw a small tear on her cheek. Paris had more than a few, snuffling quietly in the background.\n\n\"I must say I'm surprised at your generosity. Building won't be necessary. You can have the west wing for yor needs, it's standing empty and it needs to be used.Tell me, what do you expect from us in exchange?\" There was a hard edge to her voice, and it hit me what she was asking. They were a pretty attractive bunch, but I had no intentions of taking advantage of them.\n\n\"I would hope that you would help me run the place. After all, you have a vested interest in it's success. We need to take a trip into town, so I can add you to the bank account. I don't expect you to work the range, but I do expect intelligent conversation and suggestions for the betterment of the place. I saw some things on the way in that were disturbing.\"\n\nBoth the women were looking at me like I'd grown two heads. The fact that a man would seek out their opinions was a totally new concept to them. They were both smiling.\n\n\"I need to tell you the truth, Mr. Wal...\"\n\n\"Please, if we're to be partners, call me Zeke.\"\n\n\"As you wish. You may address us by our given names as well. My husband was not much of a rancher. He was lazy, inept, and atracted like men to his side. I suspect he may have been invovled in illegal pursuits, especially since he was so adamant about keeping our stock on such a limited range when we had plenty of land to rotate grazing. It is time for lunch, though. Maybe we can continue the discussion afterwards?\"\n\nThey rose, as did we. I pulled her chair back and opened the doors for her. \"It is quite refreshing, Zeke, to spend time with a man who has manners. Who taught you?\"\n\n\"My mother. She was from an old Tennessee family, who lost everything in the war. My father was an officer assigned to the area. They met, fell in love, and when the conflict was over he took her home to Texas.\"\n\n\"I'd love to meet her.\"\n\n\"Sadly, it cannot happen. There was a cholera outbreak, and she tended the ill until she became infected and passed. She left a hearbroken husband, five sons, and an infant daughter.\"\n\nClaire could tell I had difficulty talking about it, and took my arm. \"I'm sure she was a wonderful mother. I regret she passed before I had the pleasure of making her acquaintance. Mine, on the other hand, is very much alive but refuses to go past the Mississippi. I think perhaps if I see her again in this life I will have to visit her. I couldn't go before, for a variety of reasons. Perhaps when you're settled in I'll visit.\" \n\nI didn't really know how to respond to that as the others entered the room. Brad and I offered to seat them, and all seemed grateful except Henrietta. She huffed as she seated herself. Frankly I was surprised she was at the table at all. \n\nSabrina and Jessica came in giggling and whispering. I looked at Brad and he grinned, and I knew what he was thinking. I was just barely handling the concept of raising one daughter, and now I had another young girl in the mix. Looked like I was fixing to live through some pretty interesting times. I seated Jess, and Brad seated Sabrina.\n\n\"Thank you, Daddy.\"\n\nShe grinned as Sabrina shyly thanked Brad. Courtney flounced in, all flaming hair and attitude, but Claire directed a few words her way, and she settled down. Conversation was stilted until Sabrina brought up the supply wagon. It seemd the late and unlamented (mostly) Buck was a bit stingy, and the ladies were wondering what he had missed, again Before I could answer Jess jumped in.\n\n\"I think you will find my father a bit more sensitive to the needs of his business partners. Perhaps Sabrina would like to help me inventory some of the items this afternoon?\"\n\nShe agreed instantly as the older women looked on, wondering what caused the smirk on Jessica's face. The food was good, it seems they had an Irish lady who cooked and kept house, with the help of most of them. Henrietta thought it beneath her dignity to do labor of any kind. I decided I was either going to bring her into the real world, and if she gave me the least amount of grief I was going to give her a small stipend and point her towards the East. I think she understood some of what I was thinking when she directed a small tirade towards me.\n\n\"Ladies, with the exception of Sabrina, I will require you all meet me in the office at three this afternoon. It's time to thrash out the details of this partnership, and what we expect of each other going forward. You don't have to like me, but you have to accept me. If you make it too difficult for me to function as managing partner, I will put my portion up for sale and let you deal with whoever buys me out. He or they may not be so understanding of your plight. Claire, thank you for lunch, it was quite good. You cook is to be commended. Ladies, if you will excuse us?\"\n\nI strode out, Brad, Jessica, and Sabrina close behind me. I was already aggravated, so I headed towards the bunkhouse, steering the girls towards the supply pantry. There were at least a dozen men lounging around in the middle of the day, and it was plain they weren't in any hurry to do any work.\n\n\"You lot want to tell me why you're not out working?\"\n\nThe self appointed leader grinned. \"We had an agreement with Buck. Since you've replaced him, we figure if you know what's good for you you'll stick to it.\"\n\nI got right in his face. \"I ain't Buck. I don't see anything in writing and I see no reason to pay wages to anyone who doesn't work. If you're not out on the range in an hour, I'll consider it your notice.\"\n\nSome were mumbling, and the leader, Tom Stuart, went red with anger. \"What if we decide we like the way things are just find. You gonna be able to buck us all by yourself?\"\n\n\"What made you think I'd be by myself? I've got a few boys around, and my brother isn't too shabby in a scrap. You don't think I'm serious? Ride out to the treeline on the East side of the ranch. That feller thought he could buffalo me with better numbers and tough talk. Take a look and tell me if it worked out like he had in mind. Ask the boys who rode with him if it's a good idea to push me or insult my family.\"\n\nThere was a little grumbling. The boys riding with the loudmouth had gone straight to the bunkhouse and gathered their stuff, going out to the horse pasture and wrangling their personal mounts. I paid them for the time they had worked, and wished them a good life. \"A word, boys. You already tried bucking me once. If I see you on this range again, I will consider it an insult and you a danger to my family. I will take steps to resolve the situation immediately. You boys get my drift?\"\n\nThe man bound for California grinned. \"I'd almost like to hang around to watch the sparks fly. I've never met a man before who has such a polite way of threatening my life. I like breathin', though, so I'm gone. If you ever do run into me somewhere down the line, I can assure you it will be by complete accident, and I will make it a point to keep my hands where you can see them. Luck to you mister. You're gonna need it.\"\n\nOne of his partners decided California sounded like the promised land, filled with milk, honey, gold lying around loose on the ground, abounding with beautiful women, and rode out with him. The other two drifted into town, to wait and see what happened.\n\nI turned around, going to my meeting with the ladies. The hands had had their timeline and I was pretty sure after laying it out for the women my attitude would still be sour. If push come to shove, I'll shoot first and let the chips fall where they may.\n\nSPLIT TAILS RANCH \n\nPart four\n\nI walked around for a few minutes to calm down, damning Buck Henson straight to hell for creating this mess. I should have been in Texas by now, with my family. Instead I'm stuck here, hated by almost everyone I ran into to, including the attractive women who surrounded me. I couldn't regret it though, because of Jessica. All that little girl had to do was bat her eyes at me and I was in a good mood.\n\nSpeaking of angels, I walked around the house to be met by Jessica and Sabrina. \"There you are! Everybody is already in the office waiting for you. I know it's early Daddy, but you need to go in there and make everything all right. Please? Oh, and thank you for letting me share the contents of our surprise with Sabrina. She has something she wants to say.\"\n\nI looked at the child, obviously scared to death, taking in her almost threadbare clothes. I noticed she had her hair done up just like Conchita had taught Jessica to do. She even had new ribbons in her hair that matched what Jess wore. I also noticed a smudge of what looked a lot like chocolate on her cheek. They had found the candy, then. I'd almost bought the store out while Jess was with Conchita, hiding it among the supplies.\n\n\"Thank you, Mr. Zeke.\" It was said so softly I almost didn't hear her. I rubbed her cheek, smiling, knowing another piece of my heart had been claimed.\n\n\"You are very welcome, Miss Sabrina. You look very nice in your new hairstyle and ribbons. Let's get you into some new dresses, and I won't be able to tell which one of you looks better.\"\n\nShe blushed and I noticed a little tear, so I brushed it away, telling her not to cry. She jumped into my arms in a full on hug. Jess decided she was horning in on her territory so she jumped in, hugging me from the other side. A very nice feeling.\n\nWe broke, and they each took a hand, delivering me to the office. There were some wide eyes and startled expressions when they noticed each child had a hand, then Claire grinned.\n\n\"Ladies, it appears our new business partner has exposed a weakness, one we must exploit in our negotiations. Every time we feel he is being unreasonable or stubborn, we will turn our junior members loose on him. I'm sure after a few hugs he will be helpless to resist us. Girls, you may go now but stay close, in case we need you. Sabrina, your hair looks lovely, and those ribbons set it off. Another thing we must thank our partner for. Jessica, you are now a full fledged sister in the organization. Welcome.\"\n\nJess grinned, stuck her tongue out at me, and took Sabrina's hand, tugging her along. \"Come along, Sabrina. We still have boxes to unpack.\"\n\nThey walked out, looking back and giggling. Claire had the first real smile I'd seen from her on her face. \"Once again I find myself in your debt, Zeke. Sabrina has led a lonely life, and the appearance of your daughter has cheered her immensely. The ribbons helped. How did you think to bring them?\"\n\n\"I didn't. After this meeting, those who are interested should check out the things Jessica insisted I buy. She is responsible, and she is the one you should thank.\"\n\nHenrietta ruined the mood, spitting out her usual bile. \"Ooh! The nice man brought us pretty ribbons! Let's all bow down to our new lord and master.\"\n\nJust like that, my sour mood was back. I drew a breath to calm myself. \"Miss Benson, what exactly is your role here? What expertise do you bring to the table? If it bothers you so much to be here at this ranch, or in the room with me, why don't you leave? I certainly would not want you to stay in a place that makes you so miserable. I'm truly sorry that I killed your brother, the taking of a life is no small thing no matter who it is. But truth be told I can give you a town full of witnesses that will tell you I gave him many opportunities to avoid bloodshed. It was his choice to turn them down. The wager for the ranch was my last attempt to deter him. He refused and died for his decision. So, if all you're going to do is make snide comments and disrupt this meeting, please leave. I'm sure one of the others will fill you in on what is discussed.\"\n\nShe had progressively gotten paler. Maybe I was getting through to her. Then Courtney spoke up. \"I hope you throw her out! I'm tired of living with a bitch! Nothing is good enough yet she refuses to get off her ass and do anything to make it better. Her asshole brother let her sit around and act like a princess while he tried to have relations with every other female in his house. I hope it was painful and he suffered horribly before he died!\"\n\n\"Miss Courtney, that is quite a revalation. I can see by the look on Miss Claire's face she was unaware of this. But, yet again, why didn't you leave if the situation became unbearable? Please contain yourself and if you find it impossible, leave the room.\"\n\nIt was her turn to grow paler. In the end both stayed but were very subdued. Claire sighed. \"The truth of the matter, Mr. Walters, Zeke, is that we're all stuck here. My father passed and left us in dire straits. I had married Buck, he seemed very nice and had a big ranch, so they came to stay with us. The same is true for Henrietta. Her parents passed and Buck was the only family she had left. She has no money of her own, no one she can turn to. She feels trapped, because she truly is.\"\n\nShe sighed once again. \"I feel I should be frank with you if we're to truly be partners. The fact is I made a mistake when I married my husband. Oh, he was charming and I thought I loved him. In retrospect I believe it was more infatuation. His attitude changed when we got here, he was more lord and master than loving husband. I think his frustration with me grew when I didn't bear him a child. Perhaps there was something wrong with me. Perhaps it was him. We'll never know now, will we? I still long for children, perhaps, if I ever remarry, I will be blessed. Sorry, back to business. The fact is we're all stuck here, Zeke, and all pretty much at your mercy. Perhaps if you would tell us what you expect, and we shall see what we can do.\"\n\nI had to think about it for a minute. Then it came to me. \"I expect you to help me make this ranch a thriving business. I see trouble ahead, the amount of hands your late husband has is almost twice what it would take to run this spread, and most seemed disinclined to work. I will handle that, as soon as I find out why there are so many. I suspect it has connections to criminal enterprises. I hope one of you has some training with treating wounds.\"\n\nFor the first time since the meeting started, Paris spoke up. \"I was studying to be a nurse when we were forced to move out here. I'm not afraid of the sight of blood.\"\n\n\"Well then, Miss Paris, you are the official doctor for the Split Trails Ranch. Make a list of medical supplies you might need and I will see that you get them.\"\n\nShe was still stunned when I turned to Courtney. \"What skill set can you bring to the group, Miss Courtney?\" She was still trying to process my request, started to smart off, and thought better of it. \"I'm afraid the only things I can offer are domestic skills. I will admit I'm a very good seamstress, and I have a good eye towards making a house homey.\"\n\n\"Very good. I appoint you directress of domestic affairs. It appears you could all use new dresses, so make that your priority.\"\n\nHenrietta finally admitted, after prodding, that she had no skills at all. \"Very well, then. You'll be the spare hand, assisting where needed. Understand?\"\n\nShe nodded, not knowing if she was going to like it or not. That just left Claire. She grinned. \"I've had some business training, with my late father and at school. I've a good head for figures. It used to irk me no end that Jack wouldn't let me close to the books. After he passed I understood why. There weren't any.\"\n\n\"Very well then, you are the new business manager. Again, if you need supplies, tell me and we'll acquire them.\"\n\n\"What about Sabrina?\"\n\n\"Sabrina has a full time job being a child. I don't know what kind of education she has, but she needs to be able to read, write, and do sums. I would like her to have as much knowledge as possible. I expect each of you to instruct both her and my daughter according to your strengths. Are we all agreed then?\"",
        "They nodded, some with more enthusiasm than others. \"Very good. Now we will discuss wages. I do not expect you to labor for just room and board. I will pay you a fair wage for your skills. Henrietta, since you have little skills, you will receive twenty dollars a month, with raises as your skills increase. Courtney, you will receive thirty. Claire and Paris will receive forty each, because of their knowledge. Is this acceptable?\"\n\nI could tell they were surprised to hear I was paying. A good ranchhand made thirty a month, so Claire and Paris were drawing what a good segundo would make. It was what I was paying Bill and he seemed quite pleased. It would increase it as he became foreman. Brad would be leaving as soon as he thought it was safe to do so and I would need him. He had his own dreams to pursue.\n\nThere were actual smiles, and they seemed to be getting along for the first time since I'd arrived. Maybe this would work after all. After the meeting was over Jess and Sabrina met us at the door, almost quivering with excitement. They dragged the ladies off to see the treasures I had brought. Brad met me on the porch.\n\n\"Most went out to see what was left of the fella you plugged. One got a little pale. A couple got mad. Upshot is four came to me wanting to draw their wages and leave. I paid them off and they're gone. A couple of the others were arguing with the rest, and I think they may be out of the equation. One disappeared with a rifle. Bud is dogging him. If he even looks like he's about to do something foolish he'll get a bullet for his trouble. Still leaves five. Sonny and Carlos are waiting.\"\n\nHe was holding the Colt, and I had a feeling I'd be looking for another shotgun soon. He was talking about shortening the barrel and the stock to make it a better close quarters weapon.\n\nWe walked back to the bunkhouse, Carlos and Sonny falling into step. \"If it's just one on one, I'll handle it. If it turns into a free for all, pick your targets. I'm going to try to make it personal for the leader and maybe the rest will stay out of it.\"\n\nFour were lounging on the porch and I frowned. I knew about the one with the rifle, but where was the fifth? Sonny must have been reading my mind, because he split off, going around back. I was suddenly tired of talking people out of gettin' killed.\n\nBefore the man could speak I cut him off. \"Leave right this minute or pull you piece. I'm tired of wastin' my time talking and ending up killing somebody anyway.\"\n\nWe heard a grunt, and Sonny walked out the side door. The man inside was no longer a concern. Their edge gone, the leader tried to talk. I shot him. Brad's shot gun boomed twice, and two more went down, one almost blown in two. The other one had his hands up, crying. He had obviously pissed his pants. I left him alive for one reason. \"I want you take a messge. You tell whoever is behind all this I'm not fooling around. If you're on this spread and not working for me, I'm shootin' you where I find you. You make sure they understand. Now change your pants and gather your stuff. Leave the others lying, and if I can find out they have relatives, I'll send them their possibles along with whatever wages they had comin'. Just then a rifle boomed and I grinned. \"I'll do the same for the feller on the hill. And once you deliver that message, you clear out of this territory. I'm not even gonna threaten you with what will happen if I run into you. Be gone before an hour passes. Understand?\"\n\nI turned around, surprised to see Claire standing about fifty feet back, a rifle in her hands. \"You'll do, Mr. Walters, yes indeed tou will.\" She turned and walked off grinning. Apparently violence and death didn't upset as much as most women.\n\nBy the end of the week I was down to just enough hands to run the spread. Claire turned out to be an excellent horsewoman, and Henrietta was fair. I took them with me on an inspection tour, and we made plans to move the cattle a little farther South. The hands had already moved them once but not far enough for my liking. We also did a rough tally, and Claire frowned. \"There should be about a third more, according to what Buck told me. I wonder where the others went?\"\n\nWe resolved to find out once things were running smoothly. The ladies had settled to their tasks with a vengeance. I was particularly impressed when Sabrina and Jessica appeared a the supper table in matching new dresses. They were quite a pair, Jess with her honey blond hair and Sabrina with her jet black tresses. Of course I praised them, as well as their seamstress, for the way she made them look. All the ladies were sporting new clothes, except for the seamstress. Seems she was too busy making the others to make one for herself.\n\nI turned to Courtney. \"As managing partner, I am ordering you not to make another dress until you have made two for yourself, and I expect to see one in two days. Understand?\"\n\nShe was a lot calmer these days, and instead of snapping off, she grinned. \"Yes boss. I'll need the spare hand to help.\"\n\nEven Henrietta was calmer, even if she wasn't the friendliest person on the ranch. She nodded her head, agreeing.\n\nThe girls had been very excited to see all the things Jess talked me into buying, stuff they had needed that Jack had refused to get. The meals improved, and I think Jess had a little to do with that. When she and Sabrina weren't helping, they were being schooled. Henrietta was the best at making them understand things, and I knew she would get a raise soon. She seemed to enjoy teaching. I may give her the title of head of education. When they weren't studying or helping, they were off on little adventures. They were riding Sweetie double, and Jess informed me Sabrina had a birthday coming up. \"She needs her own horse, Daddy.\" The hands that had stayed were shaping up into a pretty good crew, and part of their rides were delivering homemade cookies and snacks to the men close by on the range, often riding along and watching them. Jessica was especially impressed with the roping skills, and an older hand took them under his wing and taught them how to it. Sabrina was better at it than Jess was, but she was a better horsewoman. Sweetie seemed to take to it naturally, until she had developed into a pretty good cutting horse.\n\nI had Carlos send a message to his rancher friend, asking him to be on the lookout for a small horse if he didn't have one. It seemed I had a hard time telling the ladies no, especially the small ones. A fact they recognized and often used to their advantage.\n\nA week before we were due a supply run, they presented me with all kinds of lists. I just laughed and tossed it down. \"I won't be getting any of that.\"\n\nThey were shocked and I laughed again. \"I won't be getting it because you will. I won't have time to run all over town, so I'm taking you all along. Beside, it'll be payday. I haven't run into a ranchhand yet that didn't like to go into town and blow off some steam and spend some of their wages. Make plans.\"\n\nThat triggered off a flurry of activity, and the addition of another wagon, an old Conestoga that had been in storage. I wondered how much it was going to cost the ranch to fill that up.\n\nWe hadn't run into anyone when we moved the cattle, and they were fattening up nicely. I figured for a fall drive, if I could get a good price from the Army. They were buying everything they could, to feed their own troops and the Indians they had on reservations. I had culled a lot that I intended to sell, leaving as many cows and young heifers as I could. I was also thinking about importing a couple of bulls from back East to improve the Longhorns that made up most of the herd. I discussed it with Claire and the girls at the dinner table, and she sent some feelers out, even advertised in a few stock journals.\n\nThe girls were so excited to be going to town they hardly slept the night before. Seems it had been over a year since any of them left the ranch. We were rolling before daylight. Bill and Sonny were staying behind to keep an eye on things. Carlos was going along to visit family. Bud was going because Soibahn was. When they told me they had an Irishwoman for a cook, I was thinking about a grandmotherly type. Sissy was just seventeen, a willowy redhead with green eyes. Bud was smitten the first time he saw her. She flirted back gently, and now all they had eyes for was each other.\n\nClaire was on her horse, the buckskin mare I had brought along. She had bonded with it the first time she rode it, declaring it her horse and was off limits to anyone else. Courtney and Henrietta were on the seat of the big wagon, apparently getting along quite well. Sissy and Paris were on the buckboard. Sabrina was with Jessica, riding double. They would get off every once in a while to give Sweetie a rest, sitting between the women on the wagons.\n\nI was amazed at how much trouble it was to set up camp. Jess and Sabrina were sleeping in her little tent, the girls in the Conestoga. All the men were sleeping on the ground, and there was always two of us awake, watching. Jess and Sabrina were assistant camp cooks, helping Sissy feed the traveling horde. Besides Carlos, Brad, Bud, and myself, we had six hands along. They got to go by luck of the draw, and it was understood they were out of it the next month. We rode loose in the saddle, these were still unsettled times.\n\nWe were quite a sight when we rolled into town. The desk clerk at the hotel almost fainted when all the girls trooped in, demanding rooms and baths. He knew Jess was mine and asked which one of the others was. \"All of them,\" I said grinning.\n\n\"You some kind of Mormom?\"\n\n\"Nope, just lucky, I guess.\"\n\nHe started mumbling and sorting rooms. I took advantage of the time to go to the bank and see my lawyer. I made arrangements to pick up the payroll on the way out of town, but pulled out enough to pay off the boys with us, and the girls. Then I went off to get my own bath and put on my 'city clothes', a suit I'd ordered, as well as ones for Brad, Bud, Carlos, Sonny, and Bill. Like I said, I wanted to project an image as a successful businessman and rancher and wanted those around us to reflect that.\n\nThere was a lot of hoorahing and joshing as we bathed, two at a time. I still wasn't sure how we'd be received. Then it was off to the barber, where we had our boots shined as we waited. I don't know who was more impressed when we met up for dinner. The girls were wearing new dresses, in a style copied from one of the magazines I'd brought when I arrived, with matching hats. Even Jessica and Sarbina were dressed to the nines, living breathing dolls. It was gonna break my heart when they grew up. We complimented each other, turning heads as we walked down the boardwalk.\n\nThe men tipped their hats and the women smiled in greeting. Most had never seen them and weren't sure who they were. One older gentleman smiled. \"You have a lovely family, sir.\"\n\nI thanked him for the compliment. I was escorting Claire, holding her elbow. Jessica was on one side holding Claire's hand, and Sabrina was locked down on mine. Bud was holding Sissy's hand, Henrietta was being escorted by Carlos, and Brad was trailing along behind, Courtney on one arm and Paris on the other.\n\nConchita broke into a big smile and rushed up to Carlos, wrapping him in a hug. Then she did the same to me. I saw Claire's eyes narrow a little, Conchita wasn't much older than Carlos, and was a very handsome woman. It bothered her even more when we held a conversation in Spanish. Then she turned to Claire. \"Be careful with this one, senorita. I think maybe he could be very dangerous to love.\" Claire was shocked for a minute and then grinned. \"I don't know, madame. So far it looks fairly easy, judging by the girls.\"\n\nI flamed red and the whole crowd laughed. Soon we were dining, Brad and Jessica giving a running description of what we were eating. Sissy was doing everything but taking notes, so I knew our dinners were about to expand for the better. I had read the local paper while I waited for my haircut, and there was a traveling company of actors presenting a lighthearted piece by a modern playwright. I managed to secure good tickets, declaring it a reward for all the hard work they had put in, and after dinner we stolled over to the theater.\n\nIt was quite good, with more than a few laughs. Sabrina and Jessica sat in front of us, spellbound. Claire and the girls were also having a good time, and I noticed about halfway through the performance she was holding my hand. Deciding it was a pleasant feeling, I left it there. At the end, she suddenly realized she had been doing it, turning loose of my hand and flaming red. I just grinned and put it back.\n\nThe night was not quite over, and when we left the theater we went to the hotel dining room. In honor of the entertainment, they were staying open late, offering cakes, pastries, and frozen pudding, which was the rage at the time. Sarina and Jessica had never tasted it, and ate so fast they got headaches, trying to wash it away by drinking their saspirillas. The adults had the surprisingly rich coffee, and I chose an almond torte. The rest of the women went with the frozen puddiing, something they had also never had.\n\nWe stood in the lobby after dessert, not wanting the night to end. The children were starting to droop, so Claire and I escorted them to their room. They insisted on staying together in a room between mine and Claire's. Before they went in, they seated me on a chair in the lobby. \"Daddy, Sabrina and I have been thinking. We have decided to become sisters. Since we are now sisters, that gives her the right to call you Daddy as well. Please tell us you agree.\"\n\nClaire as looking on shocked while Sabrina was near tears. Stunned, i thought it over. For about five seconds. I gently placed her on my lap and gave her a hug. \"Welcome, daughter. It would be an honor to be known as your father. Thank you.\"\n\nShe was full on crying by then, holding me like her life depended on it. She finally calmed down, kissed my cheek, and said \"Good night, Daddy. I will love you, you'll see..\"\n\n\"I can already see. I'll love you too, baby. I'll love you as much as I love your sister. Now you girls go to bed, there's lots to get done tomorrow.\"\n\nClaire was looking at me with a small smile on her face, tears rolling down her cheeks. My eyes were a little blurred as well. Damn, it looks like a hotel as expensive as this one would do a better job of dusting.\n\nWhen she could finally speak, she surprised me. \"Please don't hurt her, Zeke. She hasn't got a lot of love from men in her life, and this is all new to her. It will break her heart when you leave.\"\n\nI grinned. \"Why would I leave? I own most of what will eventually be one of the nicest spreads in the state, surrounded by beautiful and intelligent women. I'm a family man now, with two daughters to consider. So if you're thinking about running me off, I'm putting you on notice. It won't be near as easy as you think. Goodnight, Claire. I had a really nice time tonight.\"\n\n\"So did I, Zeke Walters. The best. You're a hell of a man, mister.\" The she shocked the shit out of me by giving me a little kiss, grinning as she shut her door. Jessica had forgotten to tell me something, and opened the door just as it happened. She just smirked and closed the door.\n\nWe had breakfast in the hotel dining room, then it was time for business. I pulled out my wallet. \"Payday, ladies. I want you to know you all did a good job this month. A man couldn't ask for more.\" I went from the least to the most, surprising Henrietta by handing her twenty five instead of twenty.\n\n\"You deserve it, Henri, you've done a really good job, especially as a teacher. You may have missed your calling.\"\n\nI gave Courtney hers next, adding the same bonus as I gave Henri. \"You are a whiz with a needle, Corky. The best I've ever seen.\" I cheated a little and paid them all in fives to make it look like more. She joined Henri in her sniffling.\n\n\"Paris, thank you for taking care of us. When the girls got the sniffles, and Tony broke his arm, you were right there, knowing exactly what to do. You would have made a hell of a doctor.\"\n\nFinally I turned to Claire, handing her fifty dollars. \"You're the glue, Claire, the one who held this family together trough some pretty rough times. Now that you have our finances in order, maybe there can be bigger bonuses in the future.\"\n\nFinally I turned to my girls, handing them five ones apeice. \"Here babies. This is for being good daughters and paying attention to what Henri is teaching you. Don't spend it all on candy!\"\n\nThey grinned and Sabrina spoke. \"We won't, Daddy. We'll get you to buy that for us.\"\n\nThe women, except for Claire, all looked at me funny when she called me Daddy and I just smiled.\n\n\"Well then, now that business had been conducted, it's time to shop!\" They practically ran out of the room, but not before I cautioned them. \"This is your personal money. You spend it on the ranch and I'll tan your hides. If you need something, tell Claire. If she thinks it's a good idea, you'll get it. Now go!\"\n\nI took advantage of their shopping spree to see Senor Gomez. I made sure I brought gifts for the family, ribbons for the wife and daughters, as well as a good stock of candy. I gave him a nice pocketknife. He had some more stock for sale and I bought the best of the lot, eight horses that looked like they had stamina and speed. Five were mares, and I figured I'd let my black have a go at them, and increase my herd naturally. \n\nI was disappointed on one level, thinking he hadn't found anything for Sabrina, when one of the daughters brought out a little chestnut mare, almost exactly the same size as Sweetie. \"I've been working with her. She has a good disposition and she'll be more than gentle enough for your little girl.\" He had made a brown saddle that looked like part of her back, along with a matching bridle. I couldn't wait to see Sabrina's face. I made arrangments to have her brought out last when we picked them up.\n\nI was met with a whole group of irritated women who wanted to know where I went. It bothered them no end when I told them it was 'man business', smiling and refusing to say more. They all looked a little miffed until Sabrina and Jessica laughed. \"We'll get it out of him. He might be about to say no to one, but both of us will wear him down.\"\n\nThat calmed them, and they decided to tell me what they had purchased, item by item, until they saw I was kind of glassy eyed. \"Girls, stop. He's a man, and it's just not good to give them too much information at one time. We'll be gentle, and give it to him in small doses. They're serving frozen pudding in the dining room, let's take him and get some sugar in him, then he might be able to pay attention.\"\n\nThe frozen pudding did indeed revive me. The 'juniors', as the girls called them, got huge bowls, and sprinkled it with jellybeans and cookies. It was quite a sight. I walked them back to their rooms for some rest, all but Claire and the little ones. Those I needed.\n\nWe went to the bank, and I was surprised when the manager called her by name. She grinned. \"We were in here while you were gone. All of us opened accounts and deposited half our wages. A practice we will continue.\"\n\nI commended them, then we entered the private office, leaving the girls outside. I asked if he had the letters of incorporation filed, and he surprised me by saying he hadn't, pending my approval of changes Claire had made. We would have to get our lawyer to file the revised version, then notify him. I looked at her, wondering what she was up to.\n\n\"We thought about what you said about the ranch belonging to all of us. I agree, and decided to give them a vested interest. Paris, Henri, Courtney, and Sabrina all will get five per cent, with me as Sabrina's guardian. I didn't include Jessica because if anything happens to you your share will automatically go to her. Oh yes, I found out about the will. I approve, a parent should always try to insure their offspring are provided for in case of his or her sudden demise. I kept the rest. Do you agree?\"",
        "I smiled. \"This is me figuratively bowing to your keen business sense. Of course I agree. Now, on to money.\" I showed her the balance and she was shocked. I explained about the bloated savings account while the operational account was almost empty. I then proceeded to sign papers authorizing Claire access to the money should I be unavailable. I could sense the banker disapproved of allowing a woman unfettered access to that much money, but he didn't know Claire. I made sure we had a copy of the agreement, and another to be filed at my lawyer's office. I again pulled a few hundred out for expenses, giving most of it to Claire. \n\nWe met with the lawyer, and once again I was impressed. He grinned at us. \"Just so you know, the rumor now is that you manipulated Buck into the agreement before killing him with the intent purpose of taking his wife. It doesn't matter that you had no idea who Buck was, that he owned a ranch, or that he was married to such a stunning woman.\"\n\nI grinned back at him. \"If I had known about her, I would probably shot him a lot quicker. Alas, we are just business partners.\"\n\nClare blushed before her spirit rose. \"If I had known what kind of man he was, I may have fiddled with Buck's pistol, to make sure he had no chance of hurting Zeke.\" \n\nWe all laughed, and he sorted out the papers for us. I shocked Claire no end when I changed my will, naming Jess and Sabrina equal beneficiaries of any estate I might have should I pass. I also named Claire guardian of Jessica until she reached 21 years of age. She surprised us by crying.\n\nThe business concluded, he invited us to a dance being held that evening, a benefit held to help finish a school for the town. The building was almost complete before they ran out of funds. I saw Claire perk up, and knew we were going.\n\nAfter we left, I had one more stop to make. The gunsmith was very glad to see me. \"Did you get the items I asked for?\"\n\n\"Most of them. Some haven't come in yet. I'll send them along as soon as they get here.\"\n\nClaire was wandering the shop, looking at the weapons. It occurred to me I didn't know if she knew how to shoot. I asked. \"Buck didn't allow guns in the house, except in his office. I think he was afraid of Courtney. I've shot before, but I'm not very good.\"\n\nI didn't like that at all. I still felt like trouble was coming, and they needed to know how to defend themselves. \"Well, I'm not him. I feel women should know how to defend themselves, in case a man is not around. Would you be adverse to the idea of me getting weapons for all our girls?\"\n\n\"A month ago I would have said no, afraid Henrietta would try to kill you. Now, though, she would probably shoot at anyone who looked at you crosswise.\"\n\n\"Let's hope it doesn't come to that.\"\n\nI asked the gunsmit for an opinion, and he didn't hesitate. \"Double barrel shotguns. You don't have to be a good shot, you just have to be close. Double ought buck would be my choice of shot. It's not as lethal as triple ought, but it puts more lead in the air. A couple of Winchesters to keep them away, and a few pistols if it gets up close and personal.\"\n\nI almost cleaned him out. Eight double barreled shotguns, all twelve or ten guage except for one I had custom ordered for Sabrina. A smaller version, in .410 guage. I bought all the buckshot shells he had, along with some birdshot, and ordered a couple more cases deliviered to the ranch when they came in. I also picked up the little 32-20 rifle I'd ordered for Jessica. I got four Peacemakers, three Remingtons, and two S&W's, with five boxes of ammo for each. I was almost out the door when he asked if I still wanted the Lightning. It was in .38, not .32 like Jessica's, and he'd also had a custom holster made, with Sabrina's initials in it. It was of brown leather, and not quite as fancy as the rig Jess had, but it would do. It got added to the pile.\n\nClaire was deep in thought as we walked away. \"You're expecting troule.\" It wasn't a question, and I had no intention of lying to her.\n\n\"The whole deal with the South side of the ranch, that money Buck was sitting on, yes I do. I got the feeling that wasn't his money, and sooner or later somebody will want it back. I have no intention of giving it to them, so there will be a fight.\"\n\n\"Do you think if you gave them the money they would leave?\"\n\n\"Not a chance. They've had a good thing going for a while now, and they'll want to continue. If we don't give them what they want, they'll come after us. No, I'd rather bring the fight to them.\"\n\nShe was deep in thought as we walked, and without realizing it she reached for my hand, and held it like a lifeline in a stormy sea.\n\nSPLIT TAILS RANCH , PART 5\n\nShe didn't realize she was holding my hand until the girls came running up to us. They stopped and stared before breaking into huge grins. She looked down, flushed to the roots of her hair, and let go. It just wasn't done in the day and time, especially if the woman was newly widowed. It especially wasn't done with the man who had killed her husband.\n\nShe was expected to wear black in mourning for a year, but she steadfastly refused. \"To do so would honor the bastard, and that's not going to happen.\" As a compromise she wore muted brown and dark blues. It didn't matter, because she looked spectacular in everything she wore.\n\nThe girls stopped staring and blurted out what they were going to tell us. \"We've been thinking. We both have a Daddy now, but we don't have a mother. I know she's your sister and I'm a stranger, but we'd like to call you mother, or Momma? May we?\"\n\nTears sprang into her eyes, and she knelt, opening her arms. They piled in, giving her a tremendous hug. When they finally broke, Sabrina smiled. \"Is it all right then? We call you Momma?\" \n\n\"That would please me greatly, my babies. I, in turn will introduce you from now on as my daughters. Now come , my children, and escort us back to the hotel. We have news.\"\n\nWe walked sedately down the boardwalk. Claire had the girls firmly under her arms, and they were hugging her every chance they got. I enjoyed the view greatly. The moment was broken by the sound of a strident and jarring voice.\n\n\"Zeke Walters! I heared you was in town! Why ain't you been to see me yet?\"\n\nThere she was, the whore that had started the whole series of events that led me to where I am now. She was almost sedately dressed, carrying a couple of boxes. Whores are people too, I guess, and they sometimes walked the street, visiting the stores. They weren't always welcomed but they were tolerated. Claire took one look and sent the children to gather everyone in the lobby.\n\n\"Miss Delilah,\" I said in acknowledgement. I looked over at Claire, surprised to see her grinning. That couldn't be good.\n\n\"Honey, where are your manners? Introduce us.\" 'Honey?', where did that come from? I liked the sound of it though.\n\n\"Miss Delilah, this is Claire Benson of the Split Trails Ranch, my business partner. Miss Claire, this is Miss Delilah, a local...business person.\"\n\nClaire actually shook her hand. \"It appears I must thank you madam. Apparently you are the thing my husband valued enough to lose his life over, leaving me free to live mine. I think I came out ahead, do you not agree? Oh, and I think I can speak for Zeke here when I say he won't be requiring your services anytime soon.\" She put her hand possesively on my arm to drive home her point.\n\nThis was indeed a strange conversation, one I wanted to end quickly. I note Delilah looked like she had aged five years in the weeks since I'd seen her, but that could be because I was seeing her in the daylight through sober eyes. She'd lost a tooth, right in front, and had the remnants of two black eyes. Disappointed customer, I'd wager.\n\nDelilah couldn't resist. \"There's always next time, Zeke. Perhaps you won't be as distracted then.\"\n\nThe steel in Claire's voice came through. \"There will be no next time. Zeke has his hands full running the ranch and seeing to the needs of four rather attractive women and raising two daughters. I'm sure he'll have fond memories of your time together, but that part of his life is over. Isn't that right, Zeke?\"\n\n\"Yes dear,\" I said, trying to hide my grin. \"I will remember you fondly, Delilah. You're the reason I'm where I'm at today. Please accept this as a token of my gratitude.\" I held out a twenty dollar gold eagle, more than she could make in a week in her profession. She didn't hesitate to take it, running her hand over my palm.\n\n\"If you ever change your mind...\"\n\nI thought fire would shoot out of Cliare's eyes, as she snatched my hand back. \"I'm quite sure he won't! Good day, Miss Delilah.\"\n\nShe practically dragged me down the street. \"What was that all about?\"\n\nShe rolled her eyes. \"Men are idoits. My husband was, you are, I'm sure all your male relatives have impared reasoning. I guess I need to draw you a picture. We'll be having that discussion after the dance.\"\n\nShe let go of me just before we got to the hotel, stalking regally into the lobby. Our crowd was gathered, wondering what the news was.\n\n\"There is to be a dance tonight, a fundraiser for the local school building. We have been invited to attend. Men, make sure your suits are clean, your boots polished,and make be clean shaven. Girls, with me. We must prepare.\"\n\nBrad and I grinned. We were pretty good dancers, our mother instructing us in the social graces expected of a young gentleman. The rest of our crew were in good shape. Jessica wanted to learn to dance, and it seems Courtney could play the piano, so we spent two nights a week teaching her and Sabrina, and taking turns with the rest of the ladies. Bud and Sonny had no clue, but the ladies patiently walked them through, even though they had bruised toes the first week. Bud tended to partner with Sissy, and they moved well together.\n\nThe hands could hear the piano, and one told Brad he was classically trained, but hadn't touched a piano in years. Brad told Courtney, and she immediately confronted him when he came in, odering him to the parlor when he was cleaned up. She let him noodle on the days we weren't practicing until he got his skills back.\n\nClaire surprised us all by having the piano moved out onto the wraparound porch on Thursday evenings. The hands would come in, eat, and gather in the yard as Wilhelm played. He'd come with his parents from Hamburg when he was a child, and sitll had a trace of an accent. He would play for awhile, and then Courtney would take over. When they played waltzes, I would gather up Claire and spin her across the yard. Bud would dance with Sissy, showing off his skills. Brad usually had Henrietta and Paris partnered with Carlos. Carlos would get out his guitar, surprisingly knowing a few of the classical pieces. Then he would play a few Spanish songs, singing in his high clear tenor. He taught Henri a few of the milder Spanish dances, and they would show us all up as they flew through the steps. Jessica and Sabrina would drag the cowboys out, making them dance. Some were pretty awful. \n\nThe second week Courtney made an announcement. \"Gentlemen, it has come to our attention that some of you cannot dance. As representatives of this ranch, you are expected to be competent in all skills, so tonight, we start lessons. You do not have to particpate, but when we go to barn dances, do you really want to be the ones sitting on the sides while your partners are twirling some pretty young thing across the floor? Now, those who want to learn step up.\"\n\nThey formed a line, not one refusing. It was pretty funny at first, but soon enough they got the hang of it. Thursday night became a big thing. Sissy and the girls would prepare an extra good meal, the boys would clean up, line up, and the music would start. We would be done by nine, as everybody needed their sleep. I noticed the crew seemed to be a lot neater than before, and seemed a more closeknit group. I said as much to Claire.\n\n\"Zeke, you're a good man, and there's not a lot you don't know about cattle. But you're a man, and you don't really consider everything else. That's why you need us. We'll keep the crew balanced, make sure they understand they belong here. You have to admit, things have run a lot more smoothly since we got involved. If nothing else, you'll have the best dancers in the territory. It's why I send the girls out with snacks. Everything we do binds them to us tighter, makes them more loyal. Some of the boys just stayed to watch you fail. That's not working out so well for them, is it?\"\n\nI wanted to kiss her right then, in gratitude. In honesty, I had begin wanting to kiss her in ways that had nothing to do with gratitude. Claire was a fine figure of a woman. She'd lost her girlish figure, and the only word I can think of to describe her is lush. Her body was very well rounded, a really nice bust tapering to a narrow waist before flaring out into a very nice bottom. As nice as her body was, I was attracted to her mind just as much. In all my life, I don't think I ever met a smarter person. Many of the things implemented came fom her, and they almost always improved life on the ranch.\n\nNot that the others didn't have ideas. They always followed Claire's lead, and little Sabrina even came up with one that pleased the ladies no end. She came to me one day, holding a book, almost stuttering in excitement. Jess and she seemed to be joined at the hip, if you saw one, you saw the other. She finally got tired of her stuttering.\n\n\"Sabrina! Calm down. Show Daddy what you found.\"\n\nIt was a history book. I had a system in place. If anyone could find reading material and bring it to the house, I gave them a bonus. It didn't matter if the newspaper was two months old, we always found something worth remembering in it. I paid a premium for books and magazines. This book came from an engineer who had gone broke. I bought his whole collection, thinking they would never get read. Sabrina and Jessica had a habit of reading all we got at the urging of Henri, to improve their skill and expose them to things they couldn't find in a primer. They roared through everything, dazzling us with information at the dinner table.\n\nShe finally got her voice to work. \"Daddy, could we please build this?\"\n\nThe book turned out to be on ancient plumbing techniques. One chapter dscribed in detail how the Romans heated their houses with hollow ceramic pipes that ran through the floor of every room, the heat being pushed through the pipes by natural invection. I filed that away for later. What she wanted me to look at was a bath system based on waterfalls. The water was piped in to an overhead tank, and could be heated by the sun or a small furnace. A person stood under the tank and pulled a chain, that released the water through small holes in a large spout. It was kind of like standing in the rain, except the rain was warm. It beat the heck out of having to heat massive amounts of water for their Saturday night baths.\n\nI told the girls to say nothing, and got our resident carpenter in on it. We ordered a couple of galvanized stock tanks and all the piping we would need. There was a small waterfall about a half of a mile from the house, perfect for our purposes. We set a series of pipes to convey the water to the tanks, in a spot that got full sun. The first tank was usually warmer, and as the water level dropped, the second tank filled it. You usually had about two hundred gallons before the water got cold. We deliberately misled the ladies, telling them it was a new watering system for the cattle.\n\nWe built a bathhouse under the tanks, including a changing room and a cupboard for towels. The floor was concrete with a small drain set into the middle, the waste water going into a holding pond. The water usually evaporated in the summer. Paul rigged up the heads from four watering cans I'd found, so it really was like standing in a warm rain.\n\nThe girls got to try it first, and I grinned listening to them laugh and play. They probably used up all the water in the first tank playing, but it was worth it. Since I was the only one around, they came out in their petticoats, carrying their clothes. Sabrina was only eleven, still a child, but Jessica was starting to get a woman's shape. She was going to be a real heartbreaker when she got older. I had a vision of lovestruck boys mooning around. They shimmied into their riding skirts and blouses and ran to me. The hugs and kisses flew, and the time and expense was worth it just to see their happy faces.\n\nWe rode up to the house later, and I gathered the women. \"Sabrina has found a way to make our lives better, and I followed her suggestion. She will tell you what you will need. Please follow her without question, all will be revealed when you get there.\"\n\nThey were buzzing with excitement, wondering what was going on. They gathered a change of clothes, and we rode out to what I called the bathhouse. Once they understood what it was the clothes flew in the changing room. I sat under a tree on watch, listening to the squeals and laughter. To save water, they bathed two at a time. They came out, all but Claire, hair shining from the products Sabrina had me buy. No lye soap for my girls, no sir.\n\nThey all gave me hugs and kisses on my cheek. Henrietta seemed the most grateful. \"You know, I hated you for a while. But then I found out how my brother was. I think I always knew, but refused to admit it. You're probably the best thing that ever happened to us.\"\n\nThen she planted a kiss on my lips, and it wasn't exactly what you would call sisterly. I looked up to see Claire frowning. I was shocked to see her in her pantaloons. I had to revise my opinion of her body. It was beyond stunning. She slammed the door, obviously pissed.\n\nI saw a lot of butt kissing in my future. Then I got a vision of being able to actually kiss her butt, and got even more flustered.\n\nAll this happened about two months after the first time we all went to town. I realized of all the girls, the only one I could see was Claire. I was a little confused, wondering if she could stand a life with the man who killed her husband. She was sending out subtle little signs, a touch here, a kiss on the cheek there, always when we were alone or with just the girls.\n\nI grinned, thinking back to the dance. The girls were dressed to the nines, even Jess and Sabrina. We were at least presentable in our cleaned suits, hair slicked back, boots shining. Claire hadn't outright asked, but she'd hinted how much more handsome I'd be cleanshaven, so the handlebar went. Brad, Carlos, and the rest of the crew just grinned, and once when my back was turned I heard a bad falsetto \"Zeke's so handsome now! I think I shall swoon!'' I whirled around but the whole crew had all found something fascinating to look at that was nowhere near where I was standing. They couldn't hide those grins, though.\n\nThe dance was just a short walk, and we strolled along, the girls chattering happily, the guys grinning because they were in such good company. Claire had her hand on my arm, and each of the girls had a hand. We made a pretty good looking family, in my opinion.\n\nThe room was huge and still a little crowded. There was punch and little nibbles on a table, and a band consisting of a guitar, a mandolin, and a fiddle. There was a piano in the corner, but no one knew how to play it. I was sure Courtney would be sitting in front of it before the night was out. Wilhelm was one of the lucky ones, and I knew he'd be spelling her. They had dressed up as best they could, wearing what Courtney called their 'company shirts.' She'd made one for every man on the ranch, bright red, double breasted with brass buttons. The name of the ranch was embrodried on one breast, their first name on the other. The girls told me they'd done that because a lot of them were the same size, and they didn't want squabbles to break out. They'd gotten red scarves to match on their own. They cut quite a figure, especially when it became known they all knew how to dance. There was a lot of jealous cowboys that ended up watching while our bunch monopolized the ladies."
    ],
    "authorname": "qhml1",
    "tags": [
        "novel",
        "novella",
        "romance",
        "romantic"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/split-trails-ranch"
}