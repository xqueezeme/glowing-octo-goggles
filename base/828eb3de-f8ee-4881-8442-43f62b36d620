{
    "title": "My Little Ventrue Pt. 02 Ch. 10",
    "pages": [
        "Author's Note: Second edit pass complete! Check out my bio for details.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nThe drive back to the Prince's tower in Elysium was terrifying.\n\nHe didn't say a word. She didn't say a word. They both sat in silence in her limousine while one of her bewitched kine drove them. The woman behind the wheel, Jack noticed, was visibly nervous and made sure to keep her words short, concise, and polite. Perhaps she had never seen Antoinette angry? Her hands were shaking and stuck at the two and ten.\n\nJack had never seen the Prince angry, not really, and being in the limousine with her felt like being trapped in a shark cage with the shark. She looked out the window, but the beast aura she radiated crushed down against Jack with enough weight he felt his own beast being forced down into his bowels. Is this how ancient civilizations felt, when a great storm was upon them, and they all assumed they were suffering the wrath of their mighty and fickle gods?\n\nWhen he dared to look at her red eyes, he had to look away quickly. She never broke her gaze from the window, but just seeing the fury in her face was enough to strike him still. Like a stake through the heart, paralyzed.\n\nIt didn't get much better once they arrived at her glass tower. The lone receptionist gave them a nod, but the man was quick to also notice the anger pouring out of every motion of the Prince. He looked away, and resumed typing with the softest but fastest typing Jack imagined possible.\n\nAnd with how Antoinette was stomping forward, she didn't even check behind her to see if Jack was following. But, she'd taken him from the ball, so, into the lion's den.\n\nThey went down, and down, down the black marble of the basement levels of her great tower, past the multiple levels of complex, interwoven layers of her underground facilities, and down toward the giant vault door.\n\nShe opened it with enough snap to her movements, Jack was sure she would rip the huge thing from the wall before it slid open, and she stepped inside. \n\n\"In.\" Her words left no room for debate, or even a word of his own. Absolute obedience was his only option. He looked down, afraid, almost trembling, and stepped past her into the room.\n\nHe had never heard someone slam a giant vault door before, and the way it rung metal in the room created a weird roar of vibration.\n\n\"I will kill him! Kill him! I will rip out his throat, remove his limbs, and let the sun take him! I will roast his screeching body over fire! I will grind his bones into powder and -- you, sit!\"\n\nHe squeaked, and sat down on the edge of her giant bed. Antoinette paced back and forth in front of him, fists clenched, and when her shoes failed to handle her stomping well, she took them into her hands and threw them at the wall so hard they flattened.\n\n\"I will open his gut and pull out each foot of his insides and feed them to him while I burn his testicles with a blow torch!\" She turned then, and punched the wall. A wall of solid marble, but she punched it, and the wall cracked open for several feet in several directions. The impact forced her back several feet across the floor, but her stance did not waver, she just slid. Bruce Lee would have been jealous.\n\n\"... Antoi\u2014\"\n\n\"What!?\" She threw her gaze at him then, and he had to dig into every fiber of his being to not crumble like her shoes.\n\n\"A-Antoinette, I... do you... want to be alone?\"\n\n\"Yes! But I will not let you leave the tower. That monster, that delusional sadist will do whatever it takes to ruin me, to destroy me, to tear away at everything I care for and he will start with those I care for.\" She walked over to him, and he pulled away onto the bed a few feet to give her room while she started to stomp back and forth in front of him. \"Not this time. I will not let him this time. Ashley and Julee rest within their private quarters, and there they shall stay as well until this madness is over.\"\n\nNot this time?\n\nHe opened his mouth, stopped himself, and considered. She said she wanted to be alone, she didn't want him here, but wanted to keep him safe. And from the way she was moving, his question would be poking the bear with a hot iron.\n\n\"... what did Lucas do to you?\"\n\nHe never was good with people.\n\nShe came to a stop, and turned to face him with heavy, slow steps. Her fists did not relent, and her eyes were wide with frenzy. She came closer, until her knees were touching the edge of the bed, and her great height cast a shadow over him.\n\nAnd then he forced himself to look her in the eye. Terrified, trembling, probably would have pissed himself if he could, fucking scared to a second death, but he looked her in the eyes and kept it. He actually started to shake like a petrified, injured animal, with how intense her gaze was. Was that all he was to her right now? Just a scared mouse? \n\nWell, fuck that, he wasn't going to just leave her to her misery, not after everything that had happened. \"I can't... even begin to understand what you're going through and angry about. It's beyond me. But I can listen.\"\n\n\"Understand? Listen? You are not even a year embraced!\" She put both hands onto the bed and leaned toward him. Her fangs were bared, like some sort of cat ready to tear him open. \"Decades, decades I worked to remove that filth! People were killed! My... my....\"\n\nWith agonizing minutes, Antoinette calmed down. He was sure they were staring at each other for years, and all he could do was try his best to not panic or crumble as he tried to smile. A sad, pathetic smile of a scared young man, but he gave it to her nonetheless. He expected a punch, maybe a harsh verbal beating, but she kept his own gaze and slowly released her fists. Her steel gaze softened, her shoulders slumped, and her mouth parted.\n\n\"You would... you would tempt fate so?\" she said.\n\nNow she was the one who look shattered.\n\nHe gulped on nothing, inched across the bed toward her, reached out, and took her hand. She let out a small cough, as if she was holding back a sob, and gripped his fingers with her own once they were intertwined. She even tried to pull away with a weak, half-hearted effort, but he kept her hand in his, and tugged on it. Her attitude had changed as quickly as wind.\n\n\"I am sorry, my little Ventrue. What have I done, I... must seem so horrible.\"\n\n\"Not horrible! Just angry. Come on, you're beautiful. Scary, terrifying even, but beautiful.\"\n\nHis dumb words managed to pull a chuckle from her. They held hands, like a lovey-dovey couple, and she even rubbed her thumb against his. After a while, she sat down beside him, and leaned over to rest her tilted head atop his. He could still feel rage pouring out of her, but undertones of mourning and sadness joined it.\n\n\"Ashley and Julee are precious to me. They are close friends who I share my feelings with, gossip with, and blood with.\" She talked, kept her head on his, and continued to stroke his thumb with hers. \"Do you understand?\"\n\n\"Y-yeah, I think so.\"\n\n\"Lucas is one of many branches of the Lancea et Sanctum beliefs and doctrines. His particular views are very... anti-relationships with kine. His belief is that kine and Kindred are to be kept separate, and that you must not lay with them. He made an example... of... the ghouls I....\"\n\nHe squeezed her hand. He didn't need to hear anymore, he got it. Lucas killed her ghouls.\n\nThe thought sounded so plain in his head, but when he pictured Ashley or Julee being killed -- in very likely a horrific manner -- just to hurt Antoinette? That gave the image weight, context, and it made his insides burn.\n\n\"There were others, Kindred too. Lucas sacrificed and tortured and... it was not just a war for him. It was a holy crusade.\"\n\nPictures started to form. Torture on Kindred? The sort of things you could do to a vampire before they died were limitless. \n\n\"I'm sorry that... yeah. I didn't know. Julias never really went into the details and... yeah.\"\n\n\"It is fine, little Ventrue.\" She lifted her head, and looked around with a weird expression, like she were checking to see if they were safe, before she pulled herself up further onto the bed. In the center of it, she reached out, plucked Jack up like he weighed nothing, and set him down laying beside her, away from her.\n\nShe'd grown quite fond of the large spoon position, apparently. Her arms wrapped around him, her fingers squeezed his, and she just held him to her.\n\n\"The sun will be up soon,\" he said.\n\n\"Yes.\"\n\n\"Um, should we\u2014\"\n\n\"Just... do not leave the tower, Jack. Until Lucas is dealt with, please, stay here.\" Her grip tightened until he was squished against her breasts. They were still both dressed in their ball clothes, but the Prince didn't seem to mind. She even slipped a leg over his, and held him down.\n\nShe was terrified.\n\nIt hurt to see her so afraid. To see her afraid at all was barely something he could wrap his mind around, but she was clutching him like a girl and her teddy bear.\n\n\"I'll stay... as long as you want.\"\n\n~~~~~~~~~~~~~~~~~\n\nHe awoke in her arms.\n\nThe jolt of Kindred vitae pumping through his corpse woke him with a startle, like it always did, but Antoinette's grip was still on him, and she woke with grace.\n\n\"Good evening,\" she said, and she kissed his head. Still the big spoon.\n\n\"Good evening.\" He gave her hand a squeeze, and looked over his shoulder to smile at her.\n\n\"It will be a sad night. Knowing my little Ventrue is here waiting for me will make me eager to end my affairs, but my affairs are many, and important.\"\n\n\"Very understandable. With Lucas and Dolareido and... yeah, I can't even imagine.\"\n\n\"It is not all horrible, Jack. Before the morning, I will be back, and I will make sure this cage I have forced upon you is a gilded one.\" She squeezed him harder, hard enough that he felt her breasts through her dress and his jacket. \"When my affairs of tonight are dealt with, you will have me. I do look forward to the warmth of your body upon my breasts.\"\n\nOh god. \"Sounds... wow.\" What did he ever do to deserve a woman who enjoyed breast play so much?\n\n\"Good.\" She gave a chuckle, got up, and headed to the wall on the side of the room. It held a door with a very subtle indent handle, and she slid it open to reveal her changing room. Built so deep into the earth, metal, and marble, it was the most secure changing room on the whole planet probably.\n\nShe stripped, sat in front of her mirror, and took the time to apply her make-up, comb her hair, and peruse her selection of dresses. Jack watched, mouth open with how gorgeous the nude creature was when just going through her morning routine.\n\n\"Jack, forgive my teasing, but your gaze softens me. I must steel myself for the night's horrid mess of decisions to come.\" She grinned at him, but it didn't last. The ancient Daeva resumed her dressing, and with no ceremony or dance, put on a power suit for the day.\n\nThe whole business of getting ready for her day took her only a few minutes. She put on her mask and her clothes with such efficient speed, she must have been doing it for centuries. The dumb thought made him chuckle; of course she'd been doing it for centuries.\n\n\"Hey, Antoinette... why don't you ever talk about yourself? You know everything about me.\"\n\n\"I....\" She was on the way toward the vault door, but his words stopped her. In fact, they stopped her cold. When she finally did turn around and looked at him, her eyes were torn somewhere between a frown and sadness. \"They are painful memories, little Ventrue, as you heard with Lucas.\"\n\n\"They can't be all bad! Come on, I\u2014\"\n\n\"Another time, Jack. Please.\"\n\nHe was pushing his luck, but something about last night's conversation had made him realize something. He knew absolutely nothing about Antoinette except for what Julias had told him, which wasn't much. No knowledge about her tastes, her past -- what she remembered of her ancient history anyway -- or her hobbies. Did she have hobbies?\n\n\"... ok.\" He forced away his frown. Now was not the time.\n\nAntoinette gave him a small nod, opened the vault door, and left.\n\nJack watched after her, but did not follow. She probably had business upstairs, in her grand tower of mystery business, and he couldn't exactly walk into that and absorb the secrets.\n\nHis mind drifted back to that angry, terrified look she had last night when she locked them both in her room. \"Christ those eyes. She looked terrified for me... for me. Fucking scary, but...\" But it had been so powerful, even moving, how she protected him with so much emotion behind it. Like love. \n\nHe thumped himself in the temples with both hands before he started to caress his buzzed head. Do I love her? Damn it, now is not the time to get romantic, Jack. Shit was on Antoinette's doorstep and there was a good chance it was going to get on his shoes too.\n\nToo late. The thought was already there. She was holding onto him so tight yesterday, and that look in her eye, like as if the thought of him dead petrified her. Love, or Daeva obsession?\n\n\"Does she know how to love?\" He paced around in her empty room. \"Julias warned me it may be beyond her, with how old she is. But... those eyes certainly spoke otherwise. I have to dig just to get any information about her though; she won't open up to me. And if I dig too hard I could really piss her off.\" Fuck, he wished he'd had some real relationships in his first life, just for a little practice. Antoinette being the first love of his life was like learning how to swim in the deep end of the ocean in a storm.\n\nOn the way up and out of the deep vault levels of the tower, he checked his phone for a signal. Finally, after a few floors up and out of the deep bowels of the dragon tower, he dialed his sire. \"Julias?\"\n\n\"Yeah Jack?\"\n\n\"Yeah!\" a loud voice called through the phone.\n\nJack moved the phone away from his face and grimaced down at the device. Beatrice was there, with Julias. He could only wonder what sort of kinks shark-mouth had.\n\n\"What's up Jack?\" Beatrice again. She must have taken the phone.\n\n\"... right, wanna tell Julias that I'm going to be staying with the Prince until Lucas is dealt with?\" He'd already spilled his guts to her earlier, about Viktor and Tony, no point in worrying about minor shit now.\n\n\"Smart. Good move. I'll let him know.\" She hung up.\n\nAnd then she sent a picture of herself, topless. She was wearing a nipple chain, and grinning the biggest grin, with all her crazy extra teeth on full display. Julias was in the background, face in palm, embarrassed.\n\nJack took maybe a couple seconds too long looking at the picture. Beatrice was really ripped, and he had to admit, he liked the nipple chain. He put the phone away, rolled his eyes, and walked out in the main lobby of the tower.\n\nAll the glass walls scared him. If the sun came out, it would be death no matter where he moved, but Antoinette assured him many of the floors were capable of blocking out sunlight in an emergency. Still, it chilled him right to the bone.\n\nHe wandered around. Normally he'd hang out downstairs with the Prince and her ghouls, swim in the pool, browse the internet on a computer between conversations, but none of that really interested him then. It was such a weird situation to be in, just wandering the Prince's tower while he waited for her to deal with what could become a war.\n\nWar. How did vampires fight a war? The act of killing a Kindred was not easy. You either had to burn them in fire or sunlight, cut off the head, or do so much damage that all that was left is pulp. He tried to imagine how you could do that; a fully automatic assault rifle and several clips? A dozen shotgun shells? Or a sword?\n\nHe shuddered. The front lines of battle were not for Ventrue. Julias and Viktor were, according to others, unusual for how comfortable they were with combat. Ventrue usually controlled, manipulated, and dominated servants into fighting for them. And he could see the appeal of that, instead of risking your neck.\n\nHe wandered toward the front doors of the glass tower. The receptionist -- just a kine -- gave him a nod, and resumed his work.\n\n\"... whatcha doing?\" Jack said.\n\nThe man was a portly fellow, balding, but he had one of those nice faces, and Jack found himself wanting to talk to him.\n\n\"Good evening Mister Terry. Organizing the Mistress's assets; she has a mountain of them.\"\n\nMister Terry. Not his Invictus title, but it was nice to be called Mister anyway, better even.\n\nAssets? So not a receptionist then. Weird, considering he had a circular counter desk in the front of the otherwise empty lobby. \"How did you come into the Prince's employ?\"\n\n\"Ah! It was thirty years ago. Prince Antoinette was using one of her old disguises, and playing the cello at a concert. I had to meet her, so I got a backstage pass and\u2014\"\n\nHis voice faded to white noise. Antoinette played the cello? How had he not known? So much, so damn much the ancient vampire never told him. Why so little about herself? He bit down on his teeth just to keep himself from saying something in anger before he focused on the not-receptionist again. Mr. Chunk according to the nameplate on the desk. Really?\n\n\"\u2014the few of us got invited back to the glass tower here in Elysium. There's no way we could say no to a lifetime of servitude. Right? Right?\" \n\nJack thought he was joking for a moment, but Chunk looked at him with awaiting eyes.\n\n\"Uh, yeah....\" Chunk was another kine under his Antoinette's spell then. \"Cya then Chunk.\"\n\n\"A fine good evening to you too, Mister Terry.\" The big guy started typing again. And eating a donut.\n\nTerry drifted to the back of the tower where the elevators were, and leaned against the marble wall between them. He didn't know what to do. Cello? She played the cello?\n\nMaybe... maybe ask her to play for him? He smiled. He would love to hear it. He should ask Ashley and Julee if they knew anything else too.\n\n~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~\n\n~~Damien~~\n\nThe next night, it was just him and Natasha. He looked down at the woman who had put a bullet through his skull.\n\nIt was only the two of them, within the sealed and room of sacred objects. No air or sound could escape. With the door sealed, no one but an elder would be able to escape it. It was a tomb, now that he thought about it, of metal walls and godly artifacts.\n\nHe made a small sneer at the girl. At her apartment, she'd been quite surprised at how fast he was; he remembered the look in her eyes when he staked her in the heart. \"Because this time I did not underestimate you. I thought you were just a stupid, weak little girl. I should have known better. Stupid stupid stupid.\" He turned, and smashed his head into the wall. Pain. Pain was recompense. He couldn't make mistakes, not before God, not for the Sanctified.\n\nBut this whole night was turning into a mistake.\n\nHe reached down and removed the stake from her heart. The wound closed quickly, but the stake had left a hole in her shirt. It was the least of her worries. She sat up a moment later in that sudden-but-controlled way Kindred do.\n\n\"... you.\" She put both hands to the floor and started to push herself away from him. No panic though, he noticed. She was thinking, analyzing the room she was in, just as he would if in the same situation.\n\n\"Hello,\" he said, and he squatted down in front of her with the sheathe of his sword in hand, tip on the floor, its grip resting against his shoulder. His fingers rotated the sword against his palms.\n\n\"What... what do you want? Why am I here? Where's here?\"\n\n\"Deep within the underground network Tony left behind. This is the Archbishop's alter room.\" He made a sweeping gesture to the alter with its artifacts, the couple of lit candles, and the various paintings. \"God's dark little corner of this hellhole.\"\n\nThe tiny Mehket looked down, then around at the array of Godliness around her. Damien managed a small smirk. She wasn't panicking, but he could see she wanted to.",
        "\"What and why,\" he continued, \"is because we need to disarm the sheriff. He won't stop us while we have you.\"\n\nHer eyes went wide, and they flickered around in the same way his did when thinking at extreme speeds. Yes, little girl, that's right, we know.\n\n\"... and... Lucas said... Maria is letting you d-do this?\"\n\n\"Indeed. We promised her you would not be harmed.\"\n\n\"Harmed? What are you... you're....\"\n\nHe nodded, but his smirk vanished. \"You will be going with us when we assault the Prince.\"\n\nHer eyes opened so side, he could see far more than he wanted. It hurt. He hated that it hurt.\n\n\"B-b-b-but the Prince... she'll....\"\n\n\"We will see, we will see.\"\n\nWith that, they both went silent. He watched her, she watched him, and like edges of sand in the wind, the tension faded. Just two Mehkets sitting in the dark, thinking, analyzing, just like home. After a while, he got up and began to look around the small room, at the paintings and the artifacts, and the sword on the alter he had touched earlier, Saint Peter's sword. He dared not touch it again; the images and emotions the ancient relic had scarred him with were terrifying and powerful.\n\n\"Damien,\" she said. He looked at her, and motioned for her to continue. \"D-did Maria, did she... really just... betray me?\"\n\nHe sighed and shrugged. \"Lucas talked with her, not I. It is the two of them who care for each other.\"\n\n\"She betrayed me....\" The little girl pulled her legs up to her chest and lowered her face to her knees. \n\n\"Your safety was promised.\"\n\n\"You can't promise that! If you're going t-to use me and force Daniel to stand d-d-down, you'll have to take me there and... show it.\"\n\n\"Yes.\"\n\n\"And... you're all just going to... attack the tower?\"\n\n\"Yes.\"\n\n\"That's insane. Crazy. Lucas is crazy! I read a lot about Lucas, and... he was always... brutal. He\u2014\"\n\n\"Archbishop Lucas was a beacon of purity of God's purpose, Invictus.\"\n\nNatasha blinked at him, like he was speaking insanity. \"You... you're only as old as me.\"\n\n\"And?\"\n\n\"And... you don't know. You don't have access to the records.\"\n\n\"I know enough!\" He stomped toward her, and she cowered backward into the corner. \"We serve the church, we serve God. The Prince and Garry and the sheriff, they marched in here and slaughtered the priests, the Bishops, even the faithful who dared stand against them!\"\n\n\"They d-did that b-b-b-because... Lucas was taking over, and killing... everyone.\"\n\nHe froze. What?\n\n\"It's true,\" she continued. \"He... and the Bishops, they... killed... a lot of people. They were t-taking over, and... a lot of Kindred died.\"\n\n\"Then they must have deserved it.\"\n\n\"They did not! This was... it wasn't what you think, Damien. Your sire was... slaughtering p-people b-b-b-b-... before the war began.\"\n\nAnger rose up through his body. He slammed the sword down between her legs; he didn't even remember when he'd drawn it from its sheathe. They locked eyes. She was ready to cry, but like a chipmunk, she scrunched up her face and glared at him.\n\nThe tiny girl shook her head. \"And... and now you're going to... attack the Prince directly. K-kindred will die. Do you... do you think Lucas is... innocent in this?\"\n\nHe gripped the handle of his sword hard enough to hurt. He wanted to cut her head off right there, but he would not. He needed her, not a pile of ash.\n\nBut it wasn't just that. Truth ate at him, terrible in his gut, cockroaches on his skin, burning behind his eyes. The way her pathetic eyes glared at him with defiance ringed so loud it threatened his mind. He was just a child back then, not yet embraced, and he had looked up to the vampires and even ghouls around him with nothing but envy. Every word Lucas had said, that his Bishops and priests had said, he had absorbed with need.\n\nAnd it was all falling apart. Was it all an act? Like with how Lucas had spoken with the Prince at the ball, calm and wise. All an act? Fifty years, did he spend fifty years serving a sleeping master only to have such madness greet him? Like a twisted black play, and he was the tragic figure to be undone by his mistake.\n\nHe really wished he could stop thinking. Stop analyzing. Stop questioning everything and just accept faith. But dark, disgusting thoughts were laying bits of trail before him and he could not look away. Mehket were creatures of secrets; he gobbled them up and put them together whether he wanted to or not.\n\n\"He is\u2014\"\n\nThe door opened.\n\n\"Bishop Damien, how is our prisoner?\"\n\nIt was Lucas. He had a warm smile on his face, one that reminded Damien of the old days when he had first met the man. Natasha frowned though, and Damien found he had to look away from Lucas's face now. The subtle smirk on his sire's face and twitch of the eye, they were like cracks in a porcelain mask.\n\n\"She is... fine.\"\n\n\"Is she then?\" The ancient Mehket got down onto a knee before the tiny woman, and pulled back the hood of his robe. \"If you would turn around please? So that we may detain you. The effect of this presentation will be stronger if you are awake, but I will stake you again if I must.\" The Archbishop produced some black rope, and gave it to Damien.\n\n\"How... d-d-d-d-....\"\n\nHer stuttering made Damien grit his teeth. He wanted to slap her hard enough to drive her timid nature out of her skull.\n\n\"Speak, child,\" Lucas said. His warm smile never wavered.\n\n\"... How did... you find out about me.\"\n\n\"Divine intervention!\" Lucas got up and raised his hands in a praying manner. \"Damien has been my scout for my entire slumber, Miss Vola. He has devoured information about all the covenants, and he has kept an eye on all of you in that time.\"\n\n\"... when... Daniel visited me.\"\n\n\"Indeed.\" The Archbishop stepped over to Damien and patted him on the shoulder. \"He observed it all. My Bishop has served God well.\"\n\nDamien smiled, but it was hollow. Natasha looked at him, with a quiet begging in her eyes, but also a glint of awareness. She saw the doubt. She saw the cursed thoughts he could not shake.\n\nHe got down next to her, she turned around, and he tied her hands behind her back. The rope was strong, strong enough for Natasha, or any Mehket for that matter. He made sure to use a knot a crafty creature like her could not slip either, something that would have ruined her hands for lack of blood if she were alive.\n\nShe said nothing, but looked over her shoulder at him, and stared into his eyes with little bits of fury in her gaze.\n\nHe looked away.\n\n~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~\n\n~~Julias~~\n\n\"Did you just send a topless selfie to my childe?\"\n\n\"Bah, he's seen my tits before. Besides, kid probably has his dick between those giant tits the Prince is sporting every night.\"\n\nWell, he was certainly happy his childe was enjoying himself, but the image was unneeded.\n\nHe reached out for the woman and hugged her closer to him. They were both in the master bedroom, cozy under the ridiculously luxurious blankets, and naked. Beatrice wasn't even trying to act disgruntled or anything; instead she was snuggled against him with a cat's grin, rubbing her breasts and nipple chain up and down the side of his torso in teasing circles.\n\n\"So,\" he said, \"I know you've been up to something.\"\n\n\"Oh?\"\n\n\"Garry tipped me off. Said you were in some shit? And I can see you've been rather... sneaky lately.\"\n\nShe sat up, smiled a wicked smile, and dragged one of her monster claws up and down his chest. \"I have been. It doesn't have anything to do with you though.\"\n\n\"Keeping secrets from me?\"\n\n\"Oh, mountains. I've been making friends, moving up in the Danse, but it's nothing to worry about.\"\n\nThe wording was weird. Nothing for him to worry about? \"Can't tell me?\"\n\n\"I could... I just... I don't want to ruin anything. I'm pretty happy and call me paranoid but I've had a pretty shitty life up until now. I'd like to stay happy.\"\n\n\"Same boat.\"\n\n\"Ha! You've been fucking bitches and living in luxury your whole second life.\"\n\n\"Yeah, but I've never been happy with it.\" He took her claws in his hand, and his other reached out to caress her cheek. She hated his romantic gestures, but he didn't care. Right then, just holding her hand and touching her face, brushing her hair aside, even running his finger down her giant extra teeth, it made him happy. \"You think I'd give you up?\"\n\n\"Well... no.\" She tried to ignore his touch, but he was no child. He knew just how to touch her, how to read her expressions to see what she liked, even if she hated that she liked it. \"Just, I don't know, it's pretty big.\"\n\n\"Something you can't tell me because of the Carthians?\"\n\n\"Ah, uh....\"\n\nHe stroked her thumb with his. The huge claw that excited where a thumbnail normally would was terrifying in its own right, but he was used to it. Thrilled by it even, with how its sharp tip ran along his chest on its smooth side. Like coaxing a scared animal to him, he just went slow, and continued to slide his fingers along her jawline. \"Yeah?\"\n\n\"Um... I'm not a Carthian anymore.\"\n\nHe didn't see that coming. \"... really?\"\n\nShe nodded, and looked away. The expression was hard to read. Embarrassed maybe, but happy? Proud? Like a little girl with a secret, but one she was dying to share.\n\n\"I joined the Circle of the Crone.\"\n\nJaw drop. \"... you're a witch?\"\n\n\"I don't think they like being called that. I'm an Acolyte,\" she said. His hand had dropped from her mouth from sheer surprise, and it earned a frown from her. \"What do you think?\"\n\n\"I think... I think... I don't know, honestly. Really, not sure what to think. You work for Jacob?\"\n\n\"Work for isn't really what the Circle does, you know? Jacob is the alpha, I guess, but we all sort of... follow his lead.\" Her eyes fell, and she sat up a little straighter, away from him. \"Don't approve?\"\n\n\"I have no love of Jacob. I can't deny that.\" He sat up with her, but when she tried to pull her hand in his grip away, he did not let go. \"But... tell me about it.\"\n\n\"Yeah?\"\n\n\"Yeah. All I know are the hard details, not the experience. And... you do seem happier, as of late.\"\n\nShe grinned a huge grin and slid back in closer to him again. \"Part of that is because of you, and your stupid white knight bullshit that I can't seem to shake. And part is because... life in the Circle just makes so much more sense to me.\"\n\nHe quirked a brow down at the creature as she pushed her shoulder against him. The Carthians were dangerous, but predictable. Jacob though, he thrived on stirring chaos, just because it served as a culling. The ancient Nosferatu liked to keep the Kindred numbers from growing too large; he wanted them to be few, and strong. If Beatrice was a witch -- Acolyte -- now, then she was among those Jacob prized.\n\nHe thought back to when Beatrice had saved him, and had torn Jessica apart with her claws, a vampire much older than her. Yeah, his girlfriend was very dangerous.\n\nHe liked that.\n\n\"I had no idea. Does anyone know?\"\n\n\"Just Garry, the Circle, and... the Prince. Cause she's too fucking smart.\"\n\n\"Agreed. So you're an Acolyte then? How does that work? What secrets am I privy too, dark creature of the night?\"\n\nThat made her chuckle. \"I can tell you whatever I want, hell I can do whatever the fuck I want. There aren't any stupid rules. I'm given freedom to be my own animal.\" She crawled onto him then, complete with a cat crawl arch in her back, and she slipped onto his stomach to straddle him. \"No stupid ideologies, no stupid power structures of complicated red tape. We worship ancient gods that have been around for thousands and thousands of years!\"\n\nHoly shit. He had no idea Beatrice had such a primal side to her. \"You worship gods?\"\n\n\"Not really, but Jacob points to all the creation myths, the vampire parallels of many entities in these myths, and the myriad of gods that have existed since well before written history.\" She shrugged, and slid her claws up and down his chest. \"I'm not going to say I believe it, but I'd be stupid to ignore the possibility. Have you seen what blood magic can do? Cruac? Fuck, Julias, the things... like, ancient things. Things so old it defies explanation. Things that lived in the Earth for ages. Things old, dark, things done with blood, death, and sex.\" Her hips were moving back and forth, and she blushed for him. In seconds, he could already feel her wetness on his stomach.\n\nHer new covenant life agreed with her. It really scared him, the lack of rules, the religious views of ancient gods and old ideas like blood sacrifices, but... it reminded him of the first time he'd really talked with Beatrice. Back in the catacombs, when she had both saved and captured him. Something about that dark, scary, beautiful monster straddling him was just so damn arousing.\n\n\"I uh... have to admit... that is a whole new level of scary stuff from you.\" He blushed too, and he was right behind her in arousal. His erection raised, and she slid herself back so it rested between her ass cheeks.\n\n\"Good.\" She leaned in closer, and placed her fangs against his neck, just hard enough so he could feel it before she started kissing his jugular.\n\n\"I\u2014\" The phone rang. It was Jack's ringtone.\n\n\"Fucking hell. Should I send more pics?\"\n\n\"No, no I think if you did, and the Prince saw, she'd deal with him.\" He sat up and reached for the phone. \"And then she'd deal with you.\"\n\n\"Ha yeah, good point.\"\n\nHe hit the button on the phone, but had to pull it away from his ear when the loud cracks and explosions of noise assaulted his ear. \"Jack?\"\n\n\"Julias! Get help, get fucking help! Here! Now!\"\n\n~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nIt was just her and the sheriff.\n\nAll alone in her office, she had her wall converted to a digital touch display. The idea had been planted by her Invictus primogen, and she had to admit that she enjoyed both the compromise of digital and tactile, and the ease of its use. Before her, she had her city map displayed, but also the mappings of its sewers, the underground network Tony had built, the Circle of the Crone pit in the rock canyon, the districts of feeding zones she had given to each covenant, and the Elysium zone where she deemed violence was not allowed.\n\nBut there was more than that, things only she and Daniel knew. There were the various colored circles around various places, places where the Carthians, Invictus, and the expunged Lancea et Sanctum housed influence. Also were every Wyrm's Nest in her city circled, places of mystical power that only she could appreciate. She, her sheriff, and that infernal witch Jacob.\n\nShe reached out and touched one such circle of power. A ghost had haunted a mansion there. She touched another; catacombs where, deep in underground layers far below what Beatrice had explored, undead and mindless corpses roamed. Another Wyrm's Nest was a spring beneath forest and rock, and the strange energies there attracted things that she did not understand. Ghosts, but not ghosts. Spirits, entities, things that did not speak but existed. It was where she spent much of her secret life learning her Coils of the Dragon.\n\nBut her eyes were on Tony's underground network. Tony knew it was also a place of power, a gentle one, but one that created a point of influence. It gave power to voice, and neither she nor Tony could figure out why. But Tony did not need to know why, he was content to abuse it. And now, she imagined, Lucas too was abusing it.\n\nThat idiot fool would not understand why his words would resonate with such power in Tony's old nest, and he probably did not even realize it was unnatural. The nest did not brainwash, but it just a touch more influence to any preached message. \"That fool will have every wayward soul serving his delusions by the end of the year, Daniel. I should have sealed that nest shut when Tony was killed.\"\n\n\"We didn't know. Lucas's childe raised him only days after Tony's death,\" Daniel said. Voice quiet, monotone, dressed in his long coat and wearing his boring glasses. But at the moment, she could use his predictability. He was the rock she could rely on in their conquest.\n\n\"Do you think Lucas will leave, as I demanded?\"\n\n\"Perhaps. Even if every covenant-less childe, and more than that joined him, he would not have the power to stand against both us and the Carthians.\"\n\n\"I do not want the Carthians involved. Garry will bring fire, explosives, bullets upon bullets, and destruction. I do not want that again. We need to be surgical.\" \n\nDaniel stepped up to the map, reached out with a gloved hand, and pointed at the entrance to Tony's underground nest. \"Perhaps we should not wait? If we move now, we\u2014\"\n\nRed lights started to flash on the screen. Not just the main screen though. She moved around to her desk and down at her laptop, where the screen displayed more flashing red. Daniel blinked at her, and she clicked a few prompts on her software. Multiple camera feeds appeared on the wall display, and they all showed the same thing.\n\nLucas, surrounded by at least fifty robes, walking up to her doorstep.\n\n\"He... he cannot be serious,\" she said.\n\nDaniel stepped closer to the wall display, adjusted his glasses, and then reached into his robes. The sword he carried was long, something that belonged in ancient warfare, unlike the shorter and more intimate swords used by Kindred in the modern age. The blade was thin, it had a subtle curve, and Daniel had to reach behind his neck to draw it upward and out to the side. She would have said it was something from Japan, but the blade had no ornamentation or even layers to its grip. The blade was as lifeless as the man himself.\n\nPanic hit her. Jack. For a split moment, she had forgotten her lover was downstairs. She could only hope he had stayed within the the basement of her tower.\n\nShe stomped after Daniel, and moments later they were both in the elevator. \"He is insane.\"\n\n\"Probably.\"\n\n\"This carnage could summon the police!\"\n\n\"Perhaps.\"\n\n\"He is only recently revived from half a century of torpor! He cannot hope to face us in combat.\"\n\n\"He'll have a trick up his sleeve.\"\n\nShe nodded while she flexed her hands in front of her. Here and now then. Here and now, on her own doorstep, the madman was going to bring his fate. She did not fear for herself or Daniel, but her ghouls were downstairs, and so was Jack. Losing her ghouls a second time would be a horrible tragedy, one she was not sure she could withstand without leaving many, many Kindred tied to her rooftop for sunrise. But losing Jack was not acceptable. She would not have it, could it not have it, she would burn her whole city to the ground to kill Lucas if it came to that.\n\nThe elevator was not a slow elevator, but every second was a wasted one, and by the time it finally dinged open, she was ready to tear through the door. But just as it opened, Lucas stepped in through the front doors of her glass tower, at the opposite end of the Lobby.\n\n\"Prince?\" Jack said. He was leaning against the wall by the elevator and playing with his phone.\n\n\"Jack, my Jack, please get downstairs, you must\u2014\"\n\n\"Antoinette! Daniel! How lovely to see you both here.\" Lucas made a grand sweeping gesture with his arms. He was wearing the same sick, disgusting robe from last night, and just like last night his crowd of robed followers fell in beside him.\n\nHer assistant Chunk backed up and away like someone had laid Ebola at his feet. Jack inched to the side, back to the wall, but he too was just as shocked as her assistant.\n\n\"Lucas. How dare you. How... dare... you.... Do you think I will let you leave after this?\" She stepped forward, and with the grace of a feline, stepped out of her shoes. Shoes were a mistake for any creature that planned to move quickly, with force. With intent to kill, you needed to feel your ground beneath you, so you could tell how fast you were moving before you crushed someone's face in with your fist.",
        "Daniel followed beside her. He said nothing, but his sword was still drawn and at his side. He kept his shoes on, but when the violence began, he would not even touch the floor.\n\n\"No, I did not think that you would. But then, I will not be leaving as you instructed either. My flock and I have, with heavy hearts, agreed that the only course of action is to remove you from your position.\" He stepped forward a little closer. She noticed he was carrying a very old looking sword; how quaint. \"Will you step down as Prince?\"\n\nShe laughed. \"You are pathetic, Lucas. You have only recently awoken from half a century's sleep, do you honestly expect me to fear you? Daniel, would you please disp\u2014\"\n\nLucas held up a hand. \"Damien, if you would?\"\n\nThe crowd of robed Kindred stepped aside like water, and the young prot\u00e9g\u00e9 who had stalked her streets for fifty years stepped forward. He seemed like such nice a young man, with an average if athletic build, and a half-shaved head that combed long black hair to one side. He was the one Daniel had spared in their purge.\n\nAnd he was the one who held Natasha in front of him, with his sword against her throat.\n\nOh no.\n\nShe stopped walking forward. Daniel stopped walking forward. They both just stopped, and stared at Damien and Natasha each. The girl was awake, bound, and glancing around with panicked eyes. She knew what was coming.\n\n\"Daniel,\" Lucas said, and he moved over to stand beside Damien, \"I don't suppose you could save us all the trouble, and execute the Prince for us?\"\n\nFear. For just a second, just a passing moment, fear hit her. Fight Daniel? Could she fight Daniel? She could not win against her sheriff, not in a straight fight.\n\nThey looked at each other. Daniel's eyes downcast once they met hers, and flickered up to meet them again several times. He was... sad. A lifetime of conversations, of actions, of events, of decisions and anarchy and vengeance and justice and conquest and secrets and learning flashed before her eyes, of her and her friend Daniel. Her quiet, monotone friend, supporter of all her endeavors, was torn. More emotion than she had ever seen on his face in the centuries that she had known him.\n\nHis eyes flickered to her, then back to Natasha.\n\n\"Sire, you....\" Natasha twisted to get free, but Damien held her strong. \"Sire, you c-c-can't-t-t-t... give int-t-to these... monsters.\"\n\nIf only it was that simple, girl. Daniel had only ever sired two, one long long ago, and that was tragedy for him. Antoinette could not imagine what sort of emotional wreckage her friend had to dig through to build up to siring Natasha. It was not a choice she envied.\n\nDaniel, with sadness etched into his face with pain, fell to his knees. Jack gave a tiny gasp, echoed by the host of terrorist in her home.\n\n\"Ah, it is the way of things is it not?\" Lucas stepped around in front of the crowd of cultists, and made another sweep of his arm with the old sword. \"Our childer, our future. And for some, our weakness.\"\n\nDamien winced. Antoinette noticed it, just that quick snap of the lip edge, but she noticed. \n\nLucas smiled. \"I knew it would be too much to ask you to kill the Prince for us, but understand that if you intervene, sheriff, your childe's ashes will scatter the floor.\"\n\n\"You... you will all die if you touch her.\" Daniel's voice was a broken thing, wavering and cracked.\n\n\"We have faith, sheriff. You should try it sometime. And you,\" the Archbishop said, and he pointed that silly sword at her once again, \"you, I suppose, will not step down just because I hold your friend's childe hostage?\"\n\n\"I think not. She is not my childe, and this is my city.\" She took another step forward, and unfurled her fingers like claws at her side. \"I am going to kill every last one of you.\"\n\nJack was still around. The fool boy had at least moved aside and out of the way of the inevitable carnage, but he was poking his head out from behind one of the pillars near the stairway to the depths of her castle. The boy was still wearing the tuxedo he wore last night, and a Ventrue was nothing without weapons or servants. \n\nShe, on the other hand, found herself looking forward to finishing this with her bare hands. As long as she kept herself between the zealots and Jack, this would be easy.\n\n\"It is ok Daniel.\" She set her hand on her friend's shoulder; he did not move. \"He will not touch her if you do not intervene.\"\n\nDaniel did not even move, he simply knelt there, head lowered, eyes flickering between the floor and the feet of the mob before them. To see her friend so ruined was enough reason for her to tear Lucas's teeth out, force them through his eyes and into his withered, worthless insides.\n\nBetter yet, she was going to make Lucas's flock do it for her.\n\nShe stepped forward a few more times, reached out her hand, and pointed it at the crowd of Kindred. \"Kneel.\"\n\nShe dug deep into herself, far into the endless reservoirs of vitae she had to muster. Elder Kindred harvested blood, coveted it, held it dear inside them and pooled it into oceans within. And when they wanted to, they could draw on that ocean to unleash the absurd.\n\nForgive me Jack.\n\nThe aura was invisible, but not subtle. Like a goddess, like a succubus, her presence filled the room, overflowed and overwhelmed everyone within. As if a divine spotlight was on her, and only her, every mind would bend, break, and succumb to her allure. The beast in their guts would bow, beg, and their every desire would be replaced with a need to serve her.\n\nAnd it was working. She grinned at Lucas when, like a choir preaching to their new god, his flock began to fall to their knees. One by one, they went wide-eyed at the sight of her as she broke them with something they could not see, but only feel. Lucas was out of her reach, as was Daniel, but everyone else was enthralled, enslaved, and defeated. She was their goddess. If a choir of angels had joined the sudden silence to announce her presence, it would have been only too perfect.\n\nDamien and Natasha were beginning to fall, and Jack beside her was already on his knees with gaping jaw. It broke her insides to see him enslaved, to see his honest face ruined by such fake admiration. Those beautiful eyes of his were empty of anything but total love for her, but like a perfect doll, devoid of anything real. She would make it up to him later, if the poor boy could look her in the eyes again. It would kill her, if she damaged the normal look in his eyes she cherished so much.\n\nLucas noticed, and reached down to pluck Natasha from Damian before Daniel had the opportunity to act. The elder's grip was more than enough to pluck Natasha's head from her body in an instant, if it was needed.\n\n\"This serpent is strong. Step aside children,\" Lucas said. \"And behold the glory of God.\" Then the damn idiot zealot held the sword high, and started to hum a hymn.\n\nAntoinette rolled her eyes and stepped closer. \"You cannot be serious.\" He was just a Mehket. His were the powers of speed, secrets, and shadows. He had no way to stop her majesty.\n\nBut then the sword started to glow.\n\nEveryone stopped moving. The Lancea et Sanctum backed away, gasped, and froze. Jack's jaw dropped even more. Daniel raised his head, and even his mouth parted. Natasha and Damien gazed up at the glowing sword with stunned faces. Even Antoinette, despite herself, raised her gaze in surprise and watched, shocked.\n\nOnly Lucas was smiling. \"I pray unto the, O Lord, to smite the wicked. Your will be done.\"\n\nShe would have gagged, if not for the increasing glow of the sword. Soon, the lobby itself was bathed in so much light, she worried that the sun had risen and she did not notice. Many vampires raised their arms and covered their eyes, but not Lucas, and not her. They both gazed at the searing light, blinded but unable to look away.\n\nFor a brief moment, she thought she was looking at the sun again. Old, dead memories of ten lifetimes ago flooded her. She remembered standing on a street, horses with carriages were trotting by, and a man was holding her hand. The air was filled with the sound of hooves on cobblestone, calls of the crowd chatting about their day, wearing frilly dresses and fancy vest tuxedos. She could smell the sea.\n\nAnd like lightning, the light cracked white and streaked outward into the air. Then thunder that vibrated the glass tower and the earth it rested on, until it nearly cracked. A wave of invisible weight pushed against them all, as if the air was water, and it threatened to crush her. All she could do was stand there, confused, dazed, eyes wide, and let the madness consume them.\n\nA second crack of lightning, but this time the sword Lucas held incinerated from the explosive crash of white energy. The lightning smashed into her chest, and she fell to her knees as the weight increased a hundred fold for a single moment. Everything went black before coming back as blurry shapes, so the crowd of robes before her were blended together like mist.\n\nThey were getting up, her majesty discipline broken. She reached out with a hand and dug deep into her insides, but the vitae would not rise. She could still feel the vitae coursing through her fingers, toes, through her chest and her eyes, but when she tried to use it to engulf the lobby in her majesty, it was blocked.\n\nWith time, her vision started to return, but nausea and pain coursed through her. She reached out and steadied herself against a pillar, and her other hand rested on Jack's shoulder.\n\n\"... Jack? Jack please, you must... get... downstairs.\"\n\n\"He just hit you with lightning!\"\n\n\"A miracle, boy!\" the Archbishop said. All that remained of Lucas's sword was dust at the zealot's feet.\n\nAntoinette scoffed, and dug her nails into the rivets of the pillar to try and stand straighter, but for all her proud posturing, it was taking effort to not lean on Jack. \"Sorcery. Theban sorcery.\"\n\n\"Strong are the miracles of God, Dragon. Now my children, bring her down. She cannot enchant us with her serpent gaze any longer.\" Lucas chuckled, a dark chuckle, something a cartoon villain would do. Did his flock not hear it? Could they not see how deranged and psychotic their leader was?\n\nThe crowd of Kindred started to stalk forward toward her, like hungry but desperate animals. They had crazed looks in their eyes, and they lowered their hoods when they got closer to her. \n\nShe pushed out against Jack, hard, and sent him flying back against the wall toward the stairwell and down. There was no way to escape her tower's deeper levels, as such escape routes often backfired an elder. Now, all she wished was that she had such a route for that damn fool boy who should have been running.\n\nAnd poor Daniel was forced to watch it all from only ten feet away.\n\n\"Wow, she looks wrecked!\"\n\n\"Yeah, this'll be easy.\"\n\n\"Faith. Reward for our faith.\"\n\n\"The Archbishop will be Prince before the night is done!\"\n\nThey had knives, large ones, they had pistols, they even had shotguns. Nothing military, nothing extreme. If they had taken more time they could have perhaps armed themselves appropriately, but in their hubris they came unprepared. Their mistake. She had no sheriff, she could not use her majesty discipline, she was outnumbered, but she was going to kill every last one of them herself.\n\nAt first she feigned weakness, trembling, her body against the pillar like it was the only thing keeping her up. For a moment it was true, but she found the strength in her bones. Once they encircled her, that confidence in their eyes like poison, that was when she struck out. She did not need to enthrall these fools to destroy them, no, she had all the strength and speed of any Daeva, and that speed was a blinding blur of motion and force. The first one, she grabbed by the throat and slammed it back into the pillar she was leaning against. If the Kindred had any intentions of protest, they were rendered meaningless by a destroyed larynx. \n\nBut she did not stop with merely crushing the enemy's throat. With no time to play with her prey, she struck hard. The vampire's throat crushed inward, then into the spine, and then apart as Antoinette's hand cut through withered vampire flesh and bone until her grip found the marble of her tower's pillar. The body fell away, and the girl's head sat on her hand for a moment before it rolled off to the side. She glared anger into the young Kindred's face even as the woman she just killed blinked at her. Then the dead vampire fell apart to ash.\n\nShe turned to the three Kindred who surrounded her; they jumped away, but not before she managed to grab the one with the shotgun, the dangerous one. Her first kill had forced her right hand against the pillar, but she spun with the motion so her left hand could grab the other in a reverse spin. Her hand was open palm so her fingers sunk into the Kindred's skull, through bone, into teeth and ashy flesh from the strength of the impact. The grip was more than enough for her to pull the arm in as fast as she could, and smash the Kindred's face into the same pillar.\n\nThere was a split moment where the Kindred she had caught could not understand that Antoinette had driven her fingers into their skull, eyes wide with shock, but it all went away when their face crumbled against the pillar.\n\nThe result was explosive. For a single second, she could feel bone resist, but then it collapsed and exploded in a mess of dark, Kindred blood, hair, bone and eyes. She didn't bother to keep her gaze locked with his as he dispersed into the tiny flames of death before ash was all that was left. There would be more than enough death eyes tonight.\n\nShe slowly turned to face the stunned crowd of onlookers, curled and uncurled her fingers, and growled. Thick clumps of warm ash fell from her palms like death's tears. The Kindred closest to her were terrified. Good. \n\n\"Come then.\"\n\nShe could faintly hear Jack calling out for help into his phone as the hail of gunfire began. "
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "blood",
        "violence",
        "vampire romance",
        "vampire",
        "vampire novella",
        "drama",
        "non-human",
        "nonhuman",
        "supernatural",
        "supernatural romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-02-ch-10"
}