{
    "title": "The Shadow Doctor Ch. 04",
    "pages": [
        "Series disclaimer: This is not a love story. I'm interested in exploring the power dynamic behind mind control, and there is very little consent in this story. This story contains violence, rape, trauma, and abuse. I understand that's not what a lot of readers are looking for, so consider this fair warning. That being said, if you're interested in a dark fantasy of sex and control set in magical world loosely inspired by Wuxia stories, please enjoy.\n\n Chapter notes: Thanks for waiting, everyone! I hope you enjoy another day in the life of Tam and Yelena. This chapter ended up having a lot of sex in it, so hopefully the scenes are good for you. As usual, chapter tags: Oral, Anal, Bondage, Noncon, Mind Control, Abuse (milder than normal), mild Exhibitionism, etc. \n\n\n Tam woke with the dawn as he usually did, his sleep schedule seeming to be back to normal. It was still unusual to wake sharing his bed, but quite pleasant. He woke curled around Yelena's back, one arm under her head and other around her waist, his morning erection rubbing against the gauze bandage over her tattoo. Curious to see how it was healing, he tugged the bandage lose, making Yelena murmur in her sleep. Tam wanted to study her without interruption, so he commanded her to stay asleep until he woke her. \n\n Tam traced the tattoo lightly with his finger. The black ink stood out beautifully on Yelena's pale skin, sharp lines proclaiming his ownership of her. He pushed her forward to lie on her front and admired her body. The lines of her back called for his fingers to trace them, and he did so. He fondled the firm muscle of her ass, still slightly discolored from when he'd spanked her so brutally in the stable. Tam was seized by a sudden desire to have his slave wake up with his cock in her ass. He smiled and decided to also try out some of the toys he had been too tired to play with the night before. Climbing over her sleeping form, he used the chamber pot and splashed some water on his face, then opened the pack she had carried back from Gao's shop and inspected his options. \n\n Once he had picked out what he wanted, he brought the toys back over and set them on the lamp table next to his bed. He slid the leather arm binder over Yelena's arms, but it caused her hands and wrists to cover her new tattoo. Deciding to save it for later, Tam tugged it back off and set it aside. He tied Yelena's wrists together with the green silk and lashed them to the head of the bed, then pulled her back and positioned her on her knees with her face pressed into the bed. \n\n Picking up the bottle of oil, Tam drizzled some onto her asshole and worked it in with his thumb until she was slick and partially stretched. He rubbed a bit of the oil onto his erect cock, but paused before he entered. The thought occurred to him that Yelena might scream and panic if she woke up restrained and being fucked. While that was fine, he didn't want to annoy Lin Song, who was probably up and getting the household ready by now. He was annoyed with himself for forgetting to buy a gag the night before. He shrugged and implanted a command forbidding her from talking or screaming, then grabbed her hips and pushed himself into her.\n\n Even with the oil, Yelena's ass was a tight fit. Tam loved the feeling of pushing into her, grunting with effort as he forced himself in all the way. Once he was fully sheathed in her, he gave a couple slow thrusts to ensure she was stretched enough that he could move, then reached down to turn her head so that her cheek was on the sheets and he could watch her face in profile. Satisfied with his preparation, he gripped her hips, released her from the command to stay asleep, and began to fuck her. \n\n Yelena woke almost instantly at the feeling of his thick cock hammering her ass. Her eyes flew open and she thrashed in panic. With her wrists securely tied to the headboard and Tam's firm grip on her hips, her struggles proved useless. She opened her mouth to shout, and her eyes widened in panic when no sound escaped her lips. Tam grinned and tightened his grip while he continued to fuck her. He saw the moment when Yelena caught sight of him out of the corner of her eye, and the dawning realization as the situation became clear to her sleep fogged mind. \n\n She closed her eyes and gasped in pain as he continued to plunder her ass. Tears welled in her eyes but she blinked them away and opened them again, looking back at him over her shoulder. She opened her mouth and attempted to say something, then sighed as she confirmed that he'd taken away her voice again. With a groan she shut her eyes again and buried her face in the sheets, her jaw clenched as she did her best to endure. \n\n His slave's shock and fear had been everything Tam had hoped for. Part of him wished she had struggled longer, but he was glad she was learning to submit. With the thrill of watching her wake over, Tam settled in to enjoy the purely physical pleasure of fucking her. Yelena presented a pretty picture from his vantage point above her, bent forward with her arms outstretched in a posture of supplication, the muscles in her shoulders and back rigid and tense. Between his hands, the flesh of her ass shook as his cock slammed into her, her tattoo framed perfectly above the stretched ring of muscle as he penetrated her. \n\n Tam took his time fucking her, enjoying warm sensation of her intestines gripping his cock, the sight and sound of her suffering under him. Still, he didn't make any particular effort to prolong things. When he felt himself nearing his climax, he went ahead and let go, emptying his sperm into her. Yelena had come nowhere close to a climax of course, but that was fine. Tam gave her ass a light slap then pulled his cock out, wiping the mess off it with a rag. Yelena groaned and tried to relax, then squealed in surprise as Tam pushed one of the steel plugs into her ass before it could close. \n\n Tam piled the pillows at the head of the bed and sat back against them next to Yelena's bound form, then released her wrists with a tap of his finger. \"Good morning, slave. You may speak once more.\"\n\n Yelena pulled her wrists loose of the green silk and rubbed at them, then rolled onto her side facing him. She took a deep breath and rubbed the remaining tears from her face then met his eyes. \"Good morning, Master. You look very pleased with yourself.\" \n\n \"I suppose I am. Since I promised to keep you informed of what I do to you, the fact that you stayed asleep while I prepared and penetrated you was a command, as was of course the temporary removal of your ability to speak. I am also giving you a new rule. Whenever I put one of those plugs in your ass like I just did, you are not allowed to remove it unless you need to relieve yourself. After doing so, you must immediately replace it after cleaning yourself. How does it feel, by the way?\"\n\n \"Odd. I can feel it shifting in my ass whenever I move.\" Yelena frowned and reached back to trace the seal of the plug where it protruded from her. \"If you don't mind my asking, what do you have planned for today, after that . . . interesting method of waking me?\"\n\n \"My clinic is closed today, one of three days that I keep it closed so that I can focus on my studies. Today, you are going to be the focus of those studies. I mentioned that I was going to use you to experiment with the abilities of the control spell. Today you'll see what that means. First though, I intend to play with a few more of things I bought for you last night. Hand me that leather arm binder, let's see how you look in it.\"\n\n Yelena grimaced but obeyed. Tam had her sit up and face away from him while he guided her arms into the long black leather sleeve. He tightened the laces until her elbows were pressed together behind her back then buckled the leather straps into place over her shoulders. Her hands were free but useless, trapped in the small of her back. He felt himself getting aroused again seeing her in restraints, and pushed a quick jolt of chi into his penis to finish hardening it. \n\n Tam stroked Yelena's head. \"Alright little slave, we're putting the rule about you loving it when my cock is inside you back into place. You managed to work yourself into a good heat without it when you were begging me yesterday, but I like how quickly it turns you into a wanton little slut. I'm adding another new rule as well \u2013 whenever I have an erection like I do now, you're going to get wet and ready to be fucked; no delays, your body will always be ready for me.\"\n\n Yelena gasped as her body sprang to obey the new rule, her pink lips swelling and moistening. Tam lay back on the bed and had her mount him. She moaned as he guided her wet slit onto his cock, her body reacting helplessly to the enforced surge of pleasure. He let her adjust to being filled, then picked up the riding crop and snapped the leather tongue against the underside of her breast. Yelena yelped, the sudden sting catching her by surprise. Her pale skin reddened where it had been struck, but Gao had assured Tam the crop would not leave lasting marks unless used with excessive force. \n\n \"I didn't just mount you there for the view, girl; get that tight little slave cunt of yours moving. I want to see your tits bouncing while you ride me.\" Spurred on by a strike to her other breast, Yelena quickly began to move, pushing up his length and then plunging herself back down. She was a vision in action, her thighs and stomach moving as she rose and fell. Her shoulders were pulled back by the tight arm binder, pushing her firm tits forward. They bounced as he'd demanded, the little silver wings of her piercings bracketing her stiff pink nipples. Her head fell back as her passion mounted, mouth open and earrings dangling, moaning as she fucked herself on him. Silver gleamed at her ears, her nipples, around her neck; ornaments for her beauty and marks of his ownership. Tam felt a surge of pride and possessiveness watching his girl work herself on him.\n\n Tam reached down and lightly brushed her clit each time she took him to the hilt. He opened his vision to see her chi network and used the crop occasionally on her stomach and the bottom of her breasts, alternating pleasure and pain. He timed both his strikes with the crop and his strokes on her clitoris to the pulses of pleasure in her chi, pushing her up to her peak and over it until she stiffened above him with a cry. \n\n Tam had been waiting for her orgasm, and as her womb flowered with qing, he entered the Taoist meditation mindset he'd studied the previous day and harvested it. The Taoist exercise helped noticeably \u2013 unlike before, almost every spark of qing slid into him where their bodies were joined, none of it fading uselessly in her torso. He shifted to a different Taoist exercise and fed the qing into his chi, converting it almost instantly. He would need to practice the techniques more, but they clearly worked as advertised.\n\n Satisfied with the effectiveness of the Taoist techniques, Tam relaxed and looked at Yelena. She sat slumped above him, still impaled on his hard cock, panting from her orgasm, her face and shoulders flushed. \n\n He frowned up at her, \"Are you doing this for your pleasure? I haven't come yet, why have you stopped?\"\n\n Yelena yelped as he gave her a hard strike with the crop to the side of her breast. \"I'm sorry Master, I just came, and my pussy's too sensitive.\"\n\n \"That's not my fault, slut. Get to work.\"\n\n Yelena moaned and began to falteringly pump herself on his cock again. Tam used the crop to encourage her. He was harsher this time, driving her harder. She rode him desperately, clenching her inner walls around his cock, sweating and crying in pain as he targeted her pierced nipples directly with stinging slaps from the crop. She focused only on staying in motion this time, not the angle of her movement, and Tam could feel his cock bumping against the plug through her inner walls every few strokes. When her cunt spasmed around him a second time, he joined her, hot jets of cum bathing her womb. Yelena collapsed limply on his chest, letting out a stifled cry of pain as her tormented nipples were crushed between them.\n\n Tam held her on top of him as she lay there overwhelmed, carefully freeing her arms and stroking her back as she shuddered. Her skin was slick with sweat and her tears dripped onto his shoulder as she sobbed. He felt his softening cock slide out of her, followed by their mixed fluids. He kissed her softly on the forehead, running a hand over the light golden stubble on her head. \n\n \"You did very well, Yelena. You were such a good girl. You looked so beautiful crying on my cock for me. I love your new piercings; you wear them so prettily for Master. You took the crop very well for your first time.\"\n\n Yelena sniffled against his shoulder. \"Thank you Master.\"\n\n \"Thank me by cleaning up the mess your sloppy little cunt made.\" Tam pushed gently on the top of her head.\n\n Yelena pushed herself up on trembling arms and moved down his body to lick his thighs and cock clean. Remembering what she had said the day before, Tam also had her scoop up the cum leaking out of her cunt and lick it off her fingers, blushing with humiliation as she did so. She sat back on her heels afterward, looking at him, her face blotchy and her eyes distant. \n\n Tam smiled at her. \"That was intense. I find I greatly enjoy these little additions to our bedroom games. How did they make you feel?\"\n\n Yelena blushed. \"If you ever hit me in the nipples again with that vile little crop, it'll be too soon for my taste. You wouldn't believe how sore and tender my nipples are right now with these bits of metal shoved through them; it was pure agony when you hit them. Um, when you were using the crop on my stomach and the underside of my breasts, it stung like crazy, but the way you were alternating it with playing with my clit and your cock filling me up was an amazing sensation. It hurt but it felt good too. Getting fucked with a plug in my ass is crazy, I feel so full it's almost agonizing, but it's also really intense.\"\n\n Yelena hid her face against her shoulder as she was compelled to continue. \"I, ah, I kind of like the arm binder. It was uncomfortable and my shoulders started to hurt after a while, but I liked the way it made me feel helpless. When you take away my ability to resist with the restraints and the rules, it's easier to just embrace the pleasure of getting fucked since I can't fight it anyway. I, um, would kind of like it if we did the arm binder again sometime, if maybe you didn't lace it quite so tight?\"\n\n Tam laughed. \"You're a treasure, Yelena. If my little slut likes being tied up while she's fucked, I'll certainly try to indulge her.\"\n\n \"That's not what I . . .\"\n\n \"Were you trying to say that's not what you meant? But you do like getting tied up during sex, don't you?\"\n\n \"Yes Master, I guess I do. Stupid truth spell.\" Yelena turned to look at the wall, avoiding his gaze. Tam laughed and ordered her to help him bathe. \n\n After they bathed and she dressed him, Tam put Yelena in one of the new outfits he had bought for her from Gao. It was a skimpy thing, two pieces of white silk. \n\n The top was simply the undergarment a high class woman would wear, a diamond of white silk that covered her from her collarbone to just above her midriff, but had no back. It was held in place by two pairs of strings which knotted behind her neck and between her shoulder blades. It displayed her firm stomach and the elegant lines of her back with her new tattoo. Two quick tugs would drop it from her body leaving her topless, and he could also reach in the side to palm her breasts with ease. \n\n The skirt was just a length of cloth wrapped around her hips, with another pair of strings that tied the ends together over her right hip. Her long legs were bare below the knees, and when she moved her hip flashed through the gap below the knot. The outfit kept her most private areas technically covered, but readily available at her master's whim. It could also be put on or removed while she was shackled into her sirik, though Tam did not plan to shackle her until later in the day. He had bought identical sets in black, dark red, and a pale green. \n\n He surveyed Yelena in her new outfit with satisfaction, but something was missing. After a moment's reflection, he went and found the silk sash he had enchanted and been using to restrain her, and knotted it around her left shoulder, the ends trailing down her arm. The touch of green matched her eyes and gave a contrasting accent to the white silk and silver jewelry, and it just seemed better to have that little length of silk bound to some part of her body again. \n\n They left the private wing of the manor and took breakfast in the central portion with Lin Song. Tan Jiao served the meal, looking at Yelena with disgust as she placed a bowl on the floor for her. Tam glanced down, trying to see Yelena through the maid's eyes. She was the picture of sex, kneeling beside him on a cushion: barely clothed, her piercings visible through the thin silk stretched across her breasts. Aside from the bruises on her face and her lack of hair, Yelena looked like the perfect image of a bed slave, an exotic fruit begging to be plucked. \n\n Since Tan Jiao refrained from actually commenting on Yelena, Tam returned his attention to discussing the day's schedule with Lin Song. Today was the second of three days he normally reserved for himself; he ran his clinic four days of the week, keeping the other three days for his studies and experiments. During the days his clinic was closed, the staff each had one day off to spend with their families. Yesterday had been Luong Fai and Ho Tien; today was the cook and Lin Song, tomorrow Bin Hsui and Tan Jiao. Since the cook was out, they were eating a simple breakfast of bread and fruit. Lin Song discussed the day's business with Tam despite it technically being her free day; she and her husband rarely took advantage of their days off, as they both lived at the manor and had no children. \n\n Tam had very little that he needed to do today, which was good as he planned to spend most of it with Yelena. He would need to give Ho Tien a project, and he had a lunch meeting scheduled that he didn't want to delay; a scroll merchant was bringing by some new acquisitions that he thought Tam might be interested in. \n\n Tam gave his input on a few household matters Lin Song brought to his attention, mostly asking what she thought would be best and telling her to do that. She knew the details of maintaining his lifestyle much better than he did, and he suspected she only consulted him because she felt it would be improper to make the decisions without his approval. \n\n After breakfast, he took Yelena to his clinic. Ho Tien was waiting for them, having broken his fast in the kitchen with Bin Hsui. To give his apprentice practice, Tam had Ho Tien treat Yelena's bruises, piercings, and tattoo, and prepare her a cup of Whore's Milk. He studied his apprentice's technique as he worked and declared it satisfactory. Once the young man was done, Tam assigned Ho Tien to study a pair of scrolls from his library on the surgical removal of tumors.\n\n His responsibilities for the morning taken care of, Tam led Yelena into his laboratory. After complaints from Lin Song about the noise the animals made when he experimented on them, Tam had paid to have the window looking out from the lab walled over. He had also enchanted the walls to block sound, and put in some enchanted lamps to light the room without smoke. Combined with the various tools he stored there, the room had the highest concentration of enchantment of any room in his manor by far. \n\n Yelena looked around curiously while Tam activated the lamps. He had her strip and gave her permission to remove the butt plug, then gave her a full physical examination, recording everything on a scroll for future reference. He then tested her physical capabilities, having her do push-ups, sit-ups, and chin-ups, as well as testing her flexibility with various stretches. He recorded everything as a baseline. Tam let Yelena rest for a few minutes then he began testing to see what she could do with the help of his magic. ",
        "During the baseline testing on push-ups, Yelena had made it to twenty-five repetitions before she began to tire, but pushed on at his encouragement and reached thirty-four before she declared herself unable to continue. She was a fit young woman, but she had not done that exercise often and her muscles were unused to it. \n\n Tam brought out an enchanted rod he had used testing animals in the past. It was engraved with the character for lighting, repeated three times down its length. He activated the first character with his chi and touched the rod to Yelena's arm. She yelped in surprise as sparks jumped from the tip. He explained the three levels of shock the rod could produce to her, then activated the second character and shocked her again. She collapsed with a cry of pain, her muscles still twitching even after he removed the rod. \n\n Tam crouched down beside her. \"Now, Yelena, do you feel that fear of the second level of shock will motivate you to push yourself to your limits?\"\n\n \"Yes, I'm extremely motivated. Please don't shock me.\"\n\n \"If you want to avoid the shock, all you have to do is sixty push-ups. Get started.\"\n\n Yelena gulped in fear, but got into position and began. She slowed as she passed thirty, but pushed on, sweating and straining. At thirty-seven, her form slipped, and Tam let her feel the first level shock again and made her repeat it. At forty, she began to beg and plead for mercy. When Tam threatened her with the second level, she managed to push through six more before she collapsed, utterly unable to continue. \n\n Satisfied that she was at her limit, Tam used the spell and commanded her to begin doing push-ups again. Yelena instantly resumed form and began to smoothly push out repetitions, trembling as she reached the top each time and sobbing but continuing to push up and down with perfect form. She made it to a total of a hundred push-ups without pause before Tam stopped her, worried that she might tear a muscle. He took a towel and carefully rubbed the sweat off her, making her drink as much water as she could hold. After she had stopped shaking, he had her lie on the table and gave her arms and back a gentle oil massage.\n\n \"I think that's enough physical exertion for today. You did very well, Yelena. You pushed yourself as hard as you could to make the test valid, and then we learned that under my command your limits are far beyond what you thought. We won't try and determine what your true limits are until I can think of a way to do it that ensures you won't be badly injured in the process.\"\n\n \"Define badly injured.\" Yelena frowned over her shoulder at him as he worked on her back. \n\n Tam laughed; he was glad to see Yelena retained the ability to be sarcastic despite what he'd just put her through. \"Well, I suppose anything worse than what you've already endured would merit discussion. Anything that really hampers your ability to function, or that won't heal in a week or two.\"\n\n \"So, no more piercings then, that's good. I swear, every day you find new ways to make me feel pain. You're up to three today already \u2013 the crop, the shocks, and the push-ups. Four if you count the strain from binding my arms that tightly while we fucked. The ass-reaming hurt too by the way, I just wasn't counting it because it wasn't new.\"\n\n Tam smiled. \"Pleasant memories; I quite enjoy how you squirm when I fuck that firm little ass of yours.\"\n\n \"Please, can we talk about anything else? Um, where on earth did you find that horrible little lightning rod? And how do you have an enchanted tub that heats the water for your bath, or make this stupid sash on my arm knot itself, or those lamps in here? I've never seen anything like those before. If something like that tub is possible, wouldn't everyone want one?\"\n\n \"Well, that can be a complicated or simple answer. How much do you know about chi workings?\"\n\n \"I know that chi is the basis for Han magic. It means something like life force, or energy. I've seen some pretty incredible things at the martial arts challenges in the Square of Flowering Hands. But everything I've seen or heard about doing magic with chi involves the body \u2013 making yourself stronger or faster, turning your skin as hard as iron, jumping to the top of a building and things like that. There are some legends that chi magicians can summon fire or wind like our wizards back home, but I've never seen that demonstrated in person. Are you saying that your enchanted objects are powered by chi? I've never heard of anything like that.\"\n\n \"It's still relatively rare. During the warring states centuries, all chi workers had to focus on martial capabilities, as even sages or healers would be challenged by warriors who wanted prove their strength. The process of enchantment, infusing one's chi into an object or another person, was first used in healing, and then extended to weapons and armor. Since the First Emperor unified the land and introduced the era of peace and prosperity we enjoy today, men like me have had the opportunity to focus on the use of enchantment instead combat. Healing has been revolutionized in the last two centuries, and things like the enchanted tub are simple to make now if you know how.\"\n\n Tam poured some more oil on his hands and moved to massage Yelena's legs as he continued to lecture. \"Enchanted objects are not commonplace for two reasons. First, because each enchantment is bound to the enchanter's chi. I could enchant a sword to make it supernaturally sharp and give it to a warrior, but if I do not personally replenish the chi, the spell will cease to function within a few hours or days.\" \n\n \"Even if I wished to perpetually replenish the enchantment, I would not do so because of the second reason enchanted objects are rare. By law, only those of imperial blood may employ personal enchanters. The governor of Nihai is a distant branch member of the imperial family, and he has two men as court enchanters, ensuring that he lives in perfect comfort. Fortunately, the emperors in their wisdom have not chosen to forbid enchantment for personal use, so I am able to make tools to make my own life easier and more comfortable without breaking the law. I can also gift enchanted objects to my friends or servants, but that risks an investigation to ensure I am not receiving any recompense for the gift and thus breaking the law. My only personal constraint is the amount of chi I have available to infuse and recharge objects; for instance, I have to charge the tub in my bathing chamber and the one in the servant's wing each week. The tub in the bathing chamber reserved for guests is also enchanted, but I don't waste chi keeping it charged.\"\n\n Yelena propped herself up on her elbows and turned her head to watch him as he worked. \"If that's the case, it seems like everyone would want to learn to work chi. There must be some reason they don't \u2013 do you have to be born with natural ability or something like that? That's how wizards back home say our magic works.\"\n\n \"I can't speak to your home, but I suspect that the truth is not what your wizards say and it is actually more like it is here. Theoretically, anyone can learn to use chi, but there are three main limiting factors. First, the amount of chi a person is born with varies. Training can deepen the pool you can draw from, but some start with a puddle and others with a lake, with most somewhere in the middle; if you start with a puddle, there is little point in training. Secondly, you must find a teacher. The knowledge is valuable, and those with the power are not incentivized to share it easily. Finally, even with natural ability and an instructor, the process of actually learning to access chi is very difficult. Many students take years to reach the first stage or give up before they reach it. Roll over, I'm going to go ahead and massage your front since I've done everything I can reach in this position.\"\n\n Yelena frowned thoughtfully as she rolled onto her back. \"So, I guess I'm actually an enchanted object now? All those characters you painted onto me in the Tong basement were like a complicated version of what you did when you painted the belt sash. How often do you have to infuse me to keep me under your control?\"\n\n Tam gave her a light slap on the hip, smiling as he did so. \"Calling my masterpiece a complicated version of a simple binding spell is a profound disrespect to my genius, girl. The enchantment I cast on you is likely the most complex spell ever cast by man. If I were foolish enough to publish it, scholars would weep at its subtlety. And I never need to recharge it; one of the many ingenious aspects of the spell is that it is powered by your own chi.\"\n\n Yelena smiled at his mock indignation and stuck her tongue out at him. \"Oh, yes, Master is a veritable demigod of intellect. This humble slave is honored that he deigns to speak of his mind shattering brilliance to a mere mortal like herself.\"\n\n Tam laughed. \"Well, you seem to be recovering from your exertions. Lie still and let me finish this massage.\"\n\n Yelena complied for a few minutes then began to squirm slightly. \"Master, do you have a hard-on?\"\n\n \"Why do you ask?\" Tam had indeed developed an erection as he focused on massaging her without the distraction of his lecture, but he didn't plan on giving that information away for free.\n\n \"Well, my pussy's getting wet and I'm feeling horny. And while this is a very good massage, it wasn't exactly arousing me until the last minute or two. And then I remembered that I get wet now whenever you get hard, so I thought that might explain things.\" She blushed and looked away. \n\n Tam gave up on the massage and began to toy with her nipples, which had hardened into erect little nubs between the silver wings bracketing them. \"That's a good deduction, slave. And you're right. What should we do about this?\"\n\n Yelena glanced at him then looked away again. \"Well, since you went to the trouble of making a rule for me, I suppose you probably think you should use my wet pussy to get your dick wet.\" Her tone was sarcastic, but Tam had seen her eyes darkening towards jade. \n\n \"You could have phrased that more respectfully, but you've got the right idea. To encourage more respect in the future, go put your plug in before I fuck you.\"\n\n Yelena groaned but refrained from any further verbal complaints. She slid off the table and went to fetch the butt plug, oiling it with the massage oil before squatting down to work it into her ass. Tam undressed while she did so. \n\n Tam positioned Yelena bent over the table, head down with her elbows braced. Despite her protests, the arousal his erection induced in her had her quite ready for sex, and she willingly spread her legs wide and pushed her ass up into the air, her pussy fully exposed and ready for him. \n\n Tam took a moment to admire the view. The oil coating her skin glistened in the light of the smokeless lamps and gave off a light scent of sandalwood. He ran his hand possessively over her ass, toying with the base of the plug where it protruded, making it shift inside her. Yelena whimpered and pushed herself back to press into his hand. \n\n \"I love having your exotic body available to fuck whenever I'm in the mood. Do you like being available to satisfy Master at his whim, slave?\"\n\n \"No Master, I don't like being your fuck toy.\"\n\n \"But you want my cock, don't you?\"\n\n \"Yes Master.\"\n\n \"Beg for it.\" Tam slid his hand over his cock, pulling the foreskin back, and rubbed the bare head up and down her dripping slit.\n\n Yelena moaned, feeling what she wanted so close. \"Please, Master, fuck your slutty slave in her needy pussy. You turned her into a cock hungry little slut with your spell, please let her feel you inside her. She wants Master's cock.\"\n\n She squirmed under his hand, trying to snare his cock with her opening. Tam stepped back slightly and gave her a hard slap on the ass, the sound of his hand impacting her oiled flesh echoing in the room. Yelena yelped and stilled herself. \n\n He repeated the cycle a few times to amuse himself, teasing her until she begged and twitched, then spanking her until she held still again. Finally he gave in and grabbed her hips, pushing into her sopping hole with one long hard stroke. Yelena was so on edge from the teasing that she had a small orgasm as soon as he entered her. Tam fucked her hard and fast, finding himself almost as impatient as he'd made her with the teasing. He grabbed the plug and pushed it down so that it pressed against his cock through her inner walls as he fucked her, and Yelena gasped and came hard, her body shaking as she wailed. Tam felt his own orgasm take hold, and pulled out of her in time to spray the second and third shots of his cum over her back and ass instead of inside her. \n\n Yelena dropped to her knees, leaning against the table to brace herself. She moaned softly, one hand rubbing between her legs to prolong her pleasure. Tam stepped over and grabbed her collar, pulling her against his leg. She knew what he wanted without prompting and turned her head to suck him clean. Tam patted her on the head then gave her permission to clean up and get dressed. He pulled his own clothes back on then spent his chi recharging the various enchanted objects in the lab, draining his reservoir to allow her qing to refill it. \n\n Finished, Tam turned to inspect Yelena. She was waiting by the wall in her skimpy silks, her face still slightly flushed. \"Time for another test, slave. Don't worry; this one won't require any physical exertion. Pull a chair over to the table and sit down.\"\n\n He gave her another cup of water and let her relax while he set up the test. Tam took a tray and set out a dozen different small objects on it under a cloth. Placing the tray on the table before Yelena, he lifted the cloth just long enough to give her a brief glimpse at the array of trinkets before hiding them again. He asked her to describe each of the objects and how they were positioned relative to each other; she managed five out of the dozen, not bad for the half second he'd given her to view them. \n\n He then used the spell and commanded her to describe them, and she closed her eyes and described each one with perfect detail. They were both excited by the performance, and after duplicating it with a different arrangement, Tam had her try to describe various memories from her past. Some details were permanently lost to the fog of time, but each time he added the command, Yelena was able to produce details her conscious mind could not reach unaided, marveling as she remembered details from her childhood she hadn't realized she still retained.\n\n They went through different memories of hers until Tam noticed that it was almost time for his meeting with the scroll merchant. He called a halt and had Yelena help him tidy up the lab. She glanced over at him as she was putting the tray away.\n\n \"I have a question, Master.\"\n\n \"Go ahead and ask it.\"\n\n \"There's something I don't understand about what we were talking about earlier. You said that the control spell you enchanted me with is powered by my chi. I thought chi was just a Han magic?\"\n\n \"You have chi. Everyone does. I suspect that the wizards in your own country draw on chi to fuel their spells, though they likely call it something else. Sadly, they are even more secretive about their techniques than we are. I have been unable to procure any texts on foreign magic, besides secondhand histories and unverifiable legends. Anyway, you definitely have chi, and your natural starting point is quite strong; you actually have more chi naturally than I did before I began training.\"\n\n Yelena eyes widened \"Wait, does that mean I could learn to work chi? You just said I have the natural strength, and you could be my teacher. You wouldn't have to worry about sharing power, because you would still control me. All I'd have to do is pass the third hurdle, actually learning.\"\n\n Tam frowned in thought. \"I suppose theoretically you could.\"\n\n Yelena slid to kneel before him, taking Tam's hands in her own. She looked up at him pleadingly. \"Tam, Master \u2013 please, would you teach me how to use magic? I used to dream about being a wizard when I was a little girl. You said you wanted me to be happy being your slave; I still can't imagine how that would be possible, but this would help. I could be useful, too. Imagine having a chi user under your control, completely obedient to you. I'd be the best slave wizard ever, I promise.\"\n\n Tam laughed. \"I'm sure you would be, especially since I've never heard of a slave wizard before. And you're right, the possibilities are tempting. I never considered the idea, but I can't think of any way it would hurt to let you try. Very well, I'll show you the first lesson tonight.\"\n\n Yelena squealed and lunged at him, hugging his hips. \"Oh, thank you Master, thank you!\"\n\n Tam awkwardly patted her on the shoulder until she let go and sat back. Yelena was smiling, the first genuine smile he'd seen on her face. Tam grinned back; her happiness was infectious. \n\n He made himself look more serious. \"Don't let yourself get discouraged by failure though \u2013 the first lesson is extremely hard. It took me six weeks to first touch my chi, and my teacher said I was a prodigy. Ho Tien has been trying for four months and hasn't touched it yet, which is more normal.\"\n\n Yelena nodded, but he could see she didn't believe him. He had been the same way when he started, full of confidence. He liked her enthusiasm, though it remained to be seen if she had the determination to actually succeed. \n\n Yelena smiled all the way back to his chambers, but sobered when Tam locked her into the sirik. \"Whenever you're out of my sight, you'll wear this. I'll leave it up to Lin Song to decide if you can be trusted without it, so you'll have to convince her that you're a biddable and willing slave, but do it without revealing our secret. I've given her permission to discipline you if she feels it's necessary, and you may have to give her an excuse or two to discipline you over the coming weeks to convince her that you're learning. Use your best judgement on the balance between submission and your natural insubordination.\"\n\n Yelena nodded. As long as she was aware of the need, the rule to preserve the secret would ensure that she acted as he wished in the matter. He dropped her off at the kitchen with instructions to eat there and help the staff out if needed then went to his lunch meeting.\n\n Tam enjoyed a pleasant lunch with the merchant, served by Tan Jiao. They talked scholarship then retired to his study with tea to examine the man's selection. Tam found several scrolls that interested him, and depleted most of his research budget for the month. If he hadn't spent so much money on Yelena, he would have bought the man's stock out, but he had to settle for the best pieces, asking the merchant to save two of the more esoteric texts for him to acquire later if possible. \n\n Once the merchant left, Tam meant to go find Yelena and continue testing her, but he got distracted by one of his purchases. The merchant had managed to find a rare copy of a scroll by Sian Fei, the legendary doctor who had first successfully treated tumors of the brain. Tam considered Sian Fei one of the titans of medicine, and had based portions of his control spell on concepts first proposed by the man. He had read all of the published excerpts of the man's work before of course, but this was a full copy of one of Fei's earliest treatises, and there were several fascinating details the excerpts had left out. \n\n Tam lost track of time, as he usually did when absorbed with new knowledge. The first hint he had that the afternoon had passed was when the door to his study opened and Yelena entered with his dinner on a tray. \n\n Yelena set the tray on his desk with a bow then knelt beside his chair with a light rattle of chains. \"Mistress Lin says that she does not need me for the rest of the evening, and I am to serve at your pleasure.\"",
        "Tam reluctantly put the scroll away and turned to his dinner. \"There's only one portion here. Did they forget to make enough for you?\"\n\n Yelena blushed. \"No Master, I had lunch and dinner with the staff. They did not think that you would want to hand feed me. I can go and ask for a bowl of scraps if it would please you.\"\n\n Tam waved her off. \"No, there's no need to apologize. If you're still hungry, go and ask for some, but as long as you're eating well it's fine that you ate with them.\"\n\n Yelena shook her head. \"No, I'm full, thank you for asking.\" \n\n \"What did you do with your afternoon? To be honest I expected to see you earlier.\"\n\n \"Mistress Lin said that you never want to be interrupted when you've just bought a fresh load of scrolls, so she decided to see if I was any use around the house. I cleaned all of the dishes from lunch, and then helped Mistress Tan sweep and dust all afternoon. I was a little slow because my arms are still sore from all those push-ups, and apparently I'm just not very good at housekeeping, but Mistress Lin said at least I worked hard and wasn't lazy.\"\n\n She blushed and looked down.\n\n Tam raised an eyebrow. \"Why are you blushing, Yelena?\"\n\n Yelena blushed harder. \"I'm embarrassed at doing menial labor. I'm also blushing because I was wondering if Master would enjoy it if his slave sucked his cock while he ate his dinner.\"\n\n Tam grinned; his life was truly blessed by the gods. \"I think that's a brilliant idea. Do you think you can fit yourself under my desk here?\"\n\n Yelena nodded, her face still crimson. \"Yes Master.\"\n\n Tam pushed his chair back and unfastened his robe as she crawled under the desk. Once she was in position, he moved back so he could reach his food. Unless he leaned back, his view of Yelena was blocked by the desk, and he found that the sensation was heightened when he couldn't see the delicate fingers that pulled him out of his pants, the soft invisible lips and tongue that teased his cock to attention. \n\n Yelena kept her attentions slow and languorous, letting him enjoy his meal, alternating her attentions. She licked her way up and down his shaft, held the head in her mouth while she teased it with her tongue, bathed his balls with her tongue; all the while keeping both hands busy with whatever part of him her mouth wasn't covering. Her rules made it so that she was soon moaning with need every time her mouth closed over him, but she stayed focused on prolonging his pleasure, in no hurry to finish him. It was the best meal of Tam's life. \n\n When he finished, he pushed back his chair and stood, tugging her out to kneel in front him. She closed her mouth around him as soon as she reached him, taking him as far into her mouth as she could. It wasn't deep enough for Tam \u2013 he was ready to come, and he wanted to do it in her throat. Suppressing her gag reflex with a command, he grabbed her head and forced her to take the last inches, her nose pressed into his groin. Her eyes watered as he held himself buried in her throat, but as soon he pulled back, she took a quick breath then grabbed his hips and forced herself forward, taking him to the hilt again. \n\n Yelena's acceptance freed Tam from any lingering urge to restraint and he tightened his grip on her head and began to fuck her face. Tears streamed down her face but Yelena took it as best as she could, gasping for small breaths when she could and choking when she couldn't. Fortunately for her, Tam was on the edge from the prolonged teasing during his meal and finished quickly, firing directly into the depths of her throat. \n\n Yelena fell back coughing when he released her, but as soon as she caught her breath she quickly rose to lick him clean before tucking him back into his pants. She knelt at his feet, smiling tremulously up at him with her face streaked with tears. \"Was Master pleased with his slave?\"\n\n Tam stroked the soft stubble on her head. \"That was excellent service, slave. Did you come for Master while you were doing that?\"\n\n Yelena blushed. \"No Master, your slave did not want to distract herself with an orgasm. She had to take Master out of her mouth a few times under the desk because of her rules and lick him instead to keep herself under control. If Master wants her to orgasm, he could make her do so quickly. She is very wet.\" To demonstrate, she tugged her skirt up to her waist. She was soaked, her pussy glistening with lubrication.\n\n \"If Master wants? I thought my hot little slave liked having orgasms.\"\n\n \"Your slave does enjoy having orgasms, Master. But Master had mentioned that he might start teaching his slave magic this evening?\" Yelena looked up at him hopefully.\n\n Tam laughed. \"I wondered why you were so eager to please. You wanted to make sure Master was feeling generous and in the mood to indulge you, didn't you pet?\"\n\n Yelena nodded. \"Mistress Tan said that when Master has a new set of scrolls, he sometimes forgets to eat or sleep. Your slave thought if she made Master come, Master might be distracted enough from his reading to be willing to teach her.\"\n\n \"It was a good plan, Yelena. I don't think I would have forgotten, but I definitely appreciate your effort. But I can tell you from my own experience, you won't be able to make any progress while you're as distracted as you are right now. I'm going to let you out of your sirik, and then I want you to go lie on the couch and give yourself a good orgasm. Keep your legs spread, I want to watch and we both know you like being watched.\"\n\n After he released her from her chains and pulled his chair around for a better view, Yelena walked over to the couch but hesitated nervously when she reached it. Tam thought he understood; she got off on being exhibited, but it was the humiliation that keyed it for her. She needed to be given instructions, preferably in a way that debased her. \n\n \"Start by taking your skirt off. Use it to cover the couch so you don't stain it with all that juice leaking out of your cunt.\"\n\n Yelena complied, her motions stiff with humiliation. \n\n \"Good. Now lie down on your side: one foot on the floor, other one stretched out over the arm of the couch. Put your ass right on the edge of the couch and spread that slutty little pussy of yours as wide as it can get. Reach down and spread those little lips open; show me that hungry little hole you keep between your legs. Look at how wet you are; you're fucking dripping, Yelena. No, don't touch your clit yet you greedy little whore.\"\n\n Yelena moaned. \"Oh god, Tam, what are you doing to me? Please, just let me masturbate for you as fast as I can, this is too embarrassing.\"\n\n \"Trust your teacher, Yelena. It'll be better this way. I'm going to talk you through a big one that will really clear your head, because you're an attention slut who gets off on humiliation. Pull your top up and show me that pretty jewelry in your tits. Ah! Keep those hungry little pussy lips spread wide; I didn't say you could stop doing that.\"\n\n Yelena awkwardly fumbled loose the back string on her top and pulled it up to bunch around her neck, wincing when it caught momentarily on one of her piercings.\n\n \"Good girl. You like it when I call you a good girl, don't you? Now slide a couple of fingers into your little hole, pretend your fingers are the cock it's so hungry for. Fuck your hand, bitch. Play with your tits for me. Do you know why you've got pieces of silver shoved through your tender nipples?\"\n\n \"Ah, because Master thinks they look pretty?\"\n\n \"That's right, because I think they look pretty on your pretty little tits. You're a hot little bed slave, and a bed slave needs to look pretty for her master. Go ahead and rub your clit, but don't you dare come yet. If you come before I say so, I won't teach you anything tonight. Did you like sucking my cock while I ate?\"\n\n \"Yes, your slave liked sucking Master's cock while he ate.\"\n\n \"Who is my slave, Yelena?\"\n\n \"Um . . . I am?\"\n\n \"Good. Now again: did you like sucking my cock while I ate?\"\n\n \"Ah, yes, I did. It made me feel good, holding your cock in my mouth. Ah, can I come please?\"\n\n \"No. Pinch your tender little nipples for me; show Master you appreciate the money he spent to make them pretty. What do we call girls who like sucking cock?\"\n\n \"Ah, dirty foreign trash?\"\n\n \"I would call them sluts. If you like sucking my cock, what does that make you, Yelena?\"\n\n \"It makes me a slut. I'm a slut.\"\n\n \"And whose slut are you?\"\n\n \"I'm your slut, Tam, your dirty little slut. Please, can I come?\" Yelena was getting desperate, her hips bucking as she fingered herself. \n\n \"Not yet, almost there. Keep rubbing that little clit of yours; keep yourself right on the edge. Now, if you learn to work chi, are you going to stop worshipping Master's cock?\"\n\n \"No, no I won't, I promise. Please, I can't hold it back.\"\n\n \"So instead of just being my little slave wizard, what will you be?\"\n\n \"I'll be, I'll be your little slave wizard slut?\"\n\n \"That's right; you'll always be my slut no matter what else you are. Now come for me, you dirty little cock-loving slut.\"\n\n Yelena gasped and came hard, her leg falling off the back of the couch as her thighs clenched around her desperately rubbing hand, her eyes rolling back in her head as she lost herself in shame and rapture. Tam walked over to the couch and tugged her up into his lap as he sat. She whimpered and clung limply to his chest as he whispered nonsense and stroked her back. He checked for qing; he could sense it in her, but because he hadn't been touching her while she came, he couldn't absorb it. The texts had said as much, but it was disappointing to confirm. Not her fault of course, she'd followed instructions perfectly.\n\n \"Good girl, Yelena. You feel all wrung out now, don't you? Like you're just floating in a void?\"\n\n Yelena nodded against his chest. \"Yeah, kind of. You were right, that was a big one.\"\n\n \"Okay, try and remember this feeling. It's a distant cousin of the first lesson in working chi. In order to sense your chi before you can manipulate it, you have to empty your mind completely. No thoughts at all.\"\n\n Yelena frowned into his shoulder. \"How do you do that? Thinking about nothing is thinking about something, isn't it?\"\n\n \"I told you it was hard. Monks call the process seeking enlightenment. There are a few different meditation techniques that help, but it takes lots of practice and effort. If you think you're ready to start, I'll talk you through one of the ones I like and let you start practicing a little while I read.\"\n\n Yelena sat up instantly. \"I'm ready. Let's get started.\"\n\n Tam laughed at her eagerness. \"First, you'd better tug your clothes back on. And go ahead and use the napkin from my dinner to clean yourself up a bit.\"\n\n Yelena blushed but hurried to obey. Her skirt was wet from her juices, so she made an attempt at wiping it off as well before giving up and tugging it into place. \n\n \"Alright, go ahead and make yourself comfortable; sit on a cushion or something. Find a pose you'll be able to hold for a long time; moving always tends to disrupt meditation.\"\n\n Yelena experimented with a few positions, not finding anything that worked. After a moment Tam took pity on her and gave her permission to remove the plug from her ass. She sighed with relief as she slid it out, then went back to getting ready to meditate, finally settling in the classic lotus pose, with a cushion beneath her still slightly bruised ass. \"Okay, I think I can hold this for a while. I guess there's a reason you see monks on the street corners like this?\"\n\n \"Yes, it's called the lotus pose. Now, I want you to picture your mind as a pool of water. Close your eyes and concentrate on that image. When you feel a sensation or have a thought, that's a ripple in the surface of the water. Imagine smoothing that ripple out, leaving just the still water. When you have no thoughts left but the water, and the surface is perfectly smooth, let the water drain away. If you do it right, there will be nothing left, and you'll be able to sense your chi where you used to have thoughts. That's just an exercise to teach you the process, of course. Eventually you'll be able to reach your chi in a heartbeat. But sensing it for the first time is the hardest step, and it's where most fail.\"\n\n Yelena closed her eyes and frowned in concentration.\n\n Tam studied her face. \"No, don't try and bull your way through it. You have to be relaxed. Be the water. The water is patient. Take one thought or sensation at a time and smooth it away; don't be distracted by the other ripples, just do one at a time. Don't get discouraged when you fail. Like I told you, this will likely take months, weeks if you're lucky. Just keep trying; if you feel yourself getting frustrated, take a break; anger and impatience are your enemies in this process. Go ahead and take your time trying for a while, I'll be over here reading.\"\n\n Yelena nodded, her brow smoothing and her breathing falling into a slow rhythm as she did her best to follow his instructions.\n\n Tam got up and returned to the Sian Fei treatise. He had finished his first reading of it before Yelena brought his dinner, and was now studying the portions he thought he could modify to his own uses in detail. He looked up occasionally to check on Yelena. When he saw her lose her concentration twice in a row during one brief observation he called a halt.\n\n \"Yelena, I told you need to take breaks when you're frustrated. I can tell you're trying to force it right now. You have to let it come calmly. Take a break and regroup. Go make us a pot of tea and bring it back here, it will help relax you and I'm in the mood for some. You need to take the dinner tray back anyway.\"\n\n Yelena clearly didn't want to quit, but she sighed and accepted the order. She returned more quickly than he would have thought. \n\n \"Mistress Lin met me in the kitchen. She had the water for tea simmering for whenever you thought of it. She also told me to remind you that I shouldn't be running around the house without my shackles. She's going to switch me in the morning for it, but she said it's really your fault for being absent-minded. Also, there's a message for you from Wong Gao. The messenger apologized for the late delivery and said you could send your reply any time tomorrow.\"\n\n \"I swear, that woman thinks she's my mother sometimes, not my steward. I'm sorry you'll be switched, she's right that it's my fault.\"\n\n Yelena shrugged. \"It's my fault too for forgetting. Besides, you said I should make sure she punished me once or twice before I improve my behavior enough that she'll consider letting me out of the sirik. Given the amount of things you put me through on a daily basis, I'm not too worried about getting switched by an old lady. Do you want the message first or the tea?\"\n\n \"Tea, please. He's not expecting a reply until tomorrow, there's no urgency. Pour yourself a cup too. Think about something besides trying for enlightenment for a bit; you'll find yourself more refreshed when you try again.\"\n\n Yelena served his tea, then settled back onto her cushion and took a slow appreciative sip from her own cup. \"Wow, you have excellent tea. This is the best I've had.\"\n\n \"It's one of my primary vices. I'm glad you like it; I may make it a reward for you when you're especially good and obedient like you've been today.\"\n\n \"Oh great, now I want to throw it your face so you don't have another tool to use in turning me into your perfect slave. You're ruining perfectly good tea for me.\" Yelena smiled at him as she said it, indicating that she was at least partly joking. \n\n \"Hmm. I could alter you so that you don't enjoy tea, would you prefer that?\"\n\n \"God, no! Forget I said anything.\"\n\n Yelena pouted for a moment then changed the subject. \"What are you reading?\"\n\n \"It's a treatise on the treatment of brain tumors by the famous doctor Sian Fei. Modern knowledge of the mind outstrips what he knew two centuries ago, but it's still fascinating to see the first steps he took on the road. The spell that enchants you is a distant descendant of the pioneering work he did on the human mind.\"\n\n \"So, poring over centuries old medical techniques was how you spent your time before you decided to buy a pleasure slave?\"\n\n \"I'll admit the intellectual enjoyment is a bit dry in comparison to fucking you, but you shouldn't discount the value of research. In fact, if I'd had this scroll two weeks ago, you might not have had to lose your hair. Sian Fei had a technique for writing spells onto the scalp without first shaving it. He gave up on it because it requires an excessive expenditure of chi, which is probably why it never showed up in the excerpts I read before, but it's mentioned here in his original treatise.\"\n\n Yelena frowned in dismay at the thought that she could have avoided the loss of her hair. Then her eyes widened as another thought struck her. \"Wait, Tam, that's it. I can reach the first step tonight. I won't have to work at it for months.\"\n\n Tam raised his eyebrow at her. \"Usually one doesn't achieve enlightenment while holding a tea cup halfway to their mouth. I highly doubt that you've managed to find a way around the process that the most brilliant minds in history haven't found.\"\n\n Yelena smiled and sipped her tea. \"Do you want to bet?\"\n\n Tam grinned. \"I can hardly lose. What do you want if you do turn out to be the greatest chi prodigy in history?\"\n\n Yelena frowned. \"How about my freedom?\"\n\n \"No. Not even as a joke; you're mine, and that's not changing.\"\n\n She sighed. \"I know, but I had to ask. Alright, if I'm right, I want one hour a day to myself. I won't leave the manor or bother the staff, but I get one hour every day without you or anyone else telling me what to do. And I get to drink as much tea as I want during that hour.\"\n\n Tam nodded. \"As long as you remember that all your rules will still be in place, the magical ones and the mundane ones. No wandering around unshackled without Lin Song's permission, you stay plugged if I have you plugged, and so forth. I pick the hour, obviously, not you. Not that you're going to win.\"\n\n He sat back and stroked his chin. \"Now, what do I get when you lose? Nothing too bad, since you're going to lose, but it has to be something to make you scared enough that you'll consider backing off. Ah, I have it. If you lose, we're taking you back to Master Gao's tomorrow to get your tongue pierced; it's supposed to make it feel even better for me when you suck my cock, and it'll make you think twice before you make foolish claims. Are you sure you don't want to back down from the bet? I'll give you one chance to do so.\"\n\n Yelena gulped and considered the option. Then she shook her head. \"No. I'm right, I'm almost certain I'm right. I'm going to take the first step towards learning magic tonight, and you're going to give me an hour of freedom a day. Grab forearms and let's bet, unless you want to back down.\"\n\n Tam grinned and reached out to clasp her forearm. \"You're going to look so pretty tomorrow with a little silver stud in that eager tongue of yours. Go ahead and tell me your imagined breakthrough.\"\n\n Yelena smiled as she returned his grip. \"It's a technique that won't work for anyone else but me, which is why no one's ever thought of it before. It's really simple, actually. You command me to do it.\"\n\n Tam frowned. \"What do you mean?\"\n\n Yelena's smile broadened. \"You should have figured it out yourself, if you're as much of a genius as you think you are. You can control my thoughts \u2013 you made me calm, you make me feel pleased or aroused with the rules, you can sharpen my memory. You know from your own experience what needs to happen in order for someone to sense their chi. You just have to frame the commands in the right way so that my mind empties exactly the way it should.\"",
        "Tam stared at her in awe. \"Gods above, you might be right. Be quiet and let me think about it; altering your mind is the last thing we want to rush into doing.\"\n\n Yelena paled slightly; she evidently hadn't considered the possibility of side effects. She sat quietly while Tam rose and paced the floor, muttering to himself. Once he was satisfied, he quickly came over and sat on the floor in front of her.\n\n \"Alright, we're going to try it. Lie down and put your head in my lap; I don't want to risk you falling over or anything like that. Cross your arms over your chest and close your eyes. Good, just like that.\"\n\n He placed his hands on either side of her face, holding her loosely. \"We're going to steal some techniques from hypnosis; what we're trying doesn't bear any real relation to that parlor trick, but the framing should help. Now, everything I say from here on out is going to be a command. Let me know when you're ready.\"\n\n Yelena took a deep breath and shifted herself slightly to be more comfortable. \"I'm ready. Make me a wizard.\"\n\n Tam rolled his eyes but began anyway. \"Listen to my voice. Clearly picture everything you sense and feel right now. Preserve this moment in your mind. When I tell you to wake up, you will return to this exact state. Now, become calm, like you did yesterday. Picture the pool of water in your mind. Describe the first ripple in the surface to me.\"\n\n \"Your voice is the ripple. I'm thinking about what you're saying.\"\n\n \"Good. Smooth the ripple away. You can still hear me and understand me, but you do not think about it as you do. It simply happens. Tell me the next ripple.\"\n\n He slowly talked her through the process, taking away the thoughts about her physical sensations, her thoughts about what they were doing and how it would or wouldn't work, her worries and fears about her new life. Tension slowly eased out of her body, until she was perfectly motionless except for the slow rise and fall of her chest, her voice a quiet monotone as she responded to his prompts without thinking about her answers. Finally, when he asked for the next ripple, she replied \"There isn't one. The water is perfectly still.\"\n\n \"Good. Now let the water go. It's draining away, but it's not taking you with it. You remain. There's nothing else in your mind but you. Now tell me what you sense.\"\n\n \"I don't sense anything. Wait, no, there's something. There's a ball of light; it's a sphere, resting inside me. It's down in my center, between my hips. It's all gold like the sun, with little threads of darker gold running through it.\"\n\n Tam wanted to run around the room screaming in triumph, but he stayed calm and kept going. \"Good. Reach out with your mind and touch it carefully. Just brush the surface for now. Don't try to do anything with it. Just get used to the feeling. That's your chi, Yelena. Describe it to me.\"\n\n \"It's beautiful. It feels so warm. The threads feel different when I touch them though; they don't move to meet my touch like the rest of it does.\"\n\n \"The threads must be my chi; they're the enchantment that binds you to me. Alright, that's enough for your first time. Let go of the chi. Let it rest like it does when you're not in this state; it knows what's best for your body on its own. Feel the water rise again, float on its surface. Are you floating?\"\n\n \"Yes, I am. The chi is shining under the water but I'm not touching it anymore.\"\n\n \"Good. Wake up.\"\n\n Yelena blinked slowly in confusion and stared up at Tam. He waited nervously; as stunning as it had been to see her find her chi so easily, it would still be a horrible failure if she somehow lost herself in the dive. Her brow wrinkled slightly with a small frown. \"I told you I'm ready, Tam. What are you waiting for?\"\n\n Tam laughed with joy. \"I already did it, Yelena. You've been in a trance for just over an hour. We did it together. You found your chi.\"\n\n Her eyes widened in shock. \"But I don't remember anything! How does that help?\"\n\n Tam laughed again. \"Here, sit up. Carefully, your muscles will feel a little unfamiliar to you for a moment. Now, here's the magic trick \u2013 without actually repeating the process, I now command you to remember everything that happened while you were in the trance.\"\n\n Yelena gasped. She slumped forward as the memory poured through her; Tam hurriedly caught her, berating himself for having her sit up. He'd planned everything else out so elegantly, and she almost hit her head on something because he forgot to anticipate one detail. \n\n Yelena put her hands on his shoulders and pushed herself up to face him. Tears were running down her cheeks, but she was smiling the purest smile he'd ever seen on her, her eyes glowing with joy. \"Oh Tam, it was so beautiful. That was my chi. It's pure magic and I touched it, I really touched it, even if it was just for a moment.\"\n\n Tam grinned and stood, tugging her to join him. \"You were right. We did it. You've done something no one else has ever done in recorded history. You touched your chi on your first day trying.\"\n\n Yelena laughed and threw her arms around him. \"We really did it! Oh, thank you Tam, it was wonderful. You moved me through it so perfectly; I touched magic because of you!\"\n\n Tam returned her embrace and tilted her face up to look at him. \"My spell made it possible, but you were the one who realized we could do it. I never thought of the possibility. You made this happen just as much as I did.\" He lowered his head and kissed her. Yelena kissed him back passionately while he tightened his arms around her, both of them drunk on their success. \n\n Yelena was the first to return to her senses. She gently pulled back, breaking their embrace. \"So, do you think it'll take me months to learn to do it without you putting me in a trance?\"\n\n Tam kissed her on the forehead and released her. \"No. Finding the path is the difficult part. Because you remember what happened, you should be able to retrace the steps on your own. It's always easier after you make that first contact; you can feel the chi waiting for you once you start, and it will help guide you. You'll fail as often as you succeed at the start, but you'll gradually get better and faster at it. It might take you a little longer to become proficient than most because of how we cheated, but you did really touch your chi. You can try again right now if you want to.\"\n\n \"I do, yes, thank you thank you!\" She gave him a quick kiss and hurriedly returned to the lotus position. \n\n \"Yelena. Before you start, one warning \u2013 if you make it there, don't go any farther than I took you. Just touch it lightly, don't try to do anything yet. It takes training to use chi properly; you can permanently damage yourself or your chi trying to use it if you don't know what you're doing. Never try to do anything with chi until you've been shown what to do.\" \n\n She nodded seriously, then closed her eyes and began to empty her mind. Her breathing quickly slowed and she became perfectly still with the ease of someone who had been practicing meditation for months. Tam still almost couldn't believe they'd done it; his spell truly was amazing. \n\n He went to pour himself a cup of tea while Yelena made her attempt, but realized it had grown cold while he kept Yelena in the trance. He sighed and decided to make another pot; he wouldn't be able to sleep any time soon anyway, not with the rush of adrenaline from success coursing through his system. Yelena would be busy trying to reach her chi; she likely wouldn't even notice his absence. He found a lamp and lit it, then walked to the kitchen.\n\n As he waited for the water to heat, Tam began to consider the possibilities. He had another chi user under his control, hard as that was to believe. True, she was a raw novice, but he could use the spell to speed her training. She could assist him in enchanting, or he could have her trained in more martial techniques, giving him another set of abilities to use to complement his own specialization. His mind raced through plans and schemes; the ultimate goal of the mind control technique was power, of course. He reviewed old plans that he had dismissed as too hasty or over-ambitious, fitting the possible uses of this new Yelena against their flaws, drawing up the outlines of new schemes. \n\n He was still scheming when he returned and settled behind his desk with the fresh pot of tea. He had almost finished his first cup when Yelena opened her eyes. She relaxed out of her pose, stretching her legs out in front of her, and smiled at him.\n\n \"I take it from that contented expression that you just touched your chi unaided for the first time?\"\n\n \"No.\" She grinned. \"That was the second time. I reached it earlier, but you were gone. While I was touching chi, I could sense where you were, just like when we were testing the ten foot rule. Based on the direction, I thought you were probably in the kitchen. It looks like I was right.\"\n\n Tam smiled in pride. \"You're a natural, Yelena. Even without cheating, you would have been a prodigy. Are you ready for your first lesson in how to use your chi?\"\n\n \"Oh, yes, definitely. But it will have to be something you can teach me in five minutes or less.\"\n\n Tam frowned. \"Why on earth would you say that?\"\n\n Yelena pointed at the clock behind him. \"You may remember that we made a bet. You get to choose which hour of the day is my free one, but in five minutes there will only be one hour left in the day, so either I start my free hour now, or I start it in five minutes.\"\n\n Tam slapped the top of his desk, rattling his tea cup. \"You are infuriating, woman! We make the greatest breakthrough in the history of learning chi, you have a master willing to teach you, and you want to spend an hour lazing around pointlessly?\"\n\n \"A bet's a bet.\"\n\n He brought himself under control with an effort. \"And what if I don't feel like teaching you anymore once your hour is up?\"\n\n Yelena studied him for a moment. \"I think you want me to be more useful, so you're going to teach me eventually even if you make me wait. And besides, you shouldn't punish me for taking my free hour. It was an honest bet and I won fair and square.\"\n\n \"You'll recall that there were no terms in the bet regarding how I treat you during the rest of your day outside your hour, and I don't need a reason to punish you if I feel like it.\" Tam softened. \"But you're right, we made the bet and you won it. I won't spoil tonight by sulking. Your time is your own for the next hour. What do you want to do with your hour?\"\n\n Yelena grinned wickedly. \"Oh, I think you'll be happy with my choice. I really should demand some time to myself, but I feel too alive and amazing right now. I want to fuck.\"\n\n Tam stared at her wordlessly. She grinned back at him. \"Yeah, I thought you'd like that. Don't get too excited though; if we're fucking in my hour, I get to decide how we do it. No tying me up or hurting me; I call the shots in bed for the next hour. If you can't handle that, I guess I'll just meditate in the garden or something.\"\n\n Tam nodded. \"I can handle that. Where do you want to get fucked first? Couch, desk, floor?\" \n\n Yelena wrinkled her nose at him. \"First I am going to finish this excellent tea. I get Master's cock plenty every day, but this tea is a treat. After that, I would like to get fucked in a bed, thank you very much, like a proper lady.\"\n\n Tam grinned and raised his tea cup to her in a silent salute. They stared at each other wordlessly as they drank, the tension slowly mounting. Finally Yelena rose, and Tam moved to join her, but she just refilled her cup and sat back down on the couch, grinning at him. Tam raised an eyebrow at her and sat back down himself. \n\n After a moment's thought, he reached under his desk and undid his robe, slipping his hand into his pants and stroking himself hard. Yelena coughed with her cup halfway to her mouth as her pussy suddenly flooded to match his hardness. \n\n \"That's not very sporting.\"\n\n Tam tried to look innocent. \"I'm just making sure I'm ready to please the lady whenever she's ready to be pleased.\"\n\n She growled at him and went back to sipping her tea, her nipples hard little dents in her top. She finished her second cup a bit more quickly than her first one, but she did finish it before rising and extending her hand.\n\n \"Would you please escort me to your chambers, Doctor Hsien?\"\n\n Tam rose, picking up the lamp, and took her hand. \"Of course, Miss Alexovna.\"\n\n They managed a sedate stroll through the hallway, but as soon as the door to his bedroom closed behind them, Yelena wrapped her arms around his shoulders and kissed him hungrily. Tam managed to deposit the lamp on an end table and kissed her back, hands now free to roam over her bare back. She moaned and pressed herself against him, but when his fingers went to the knots holding her top in place she grabbed his arms and pulled back. \n\n \"Wait, wait. I always end up naked first. I want to watch you strip. Can you do that for me?\"\n\n Tam wanted to rip her clothes off and fuck her on the floor hard for stopping him, but he had said he would follow her lead. He carefully stepped back and slowly unfastened his robe, sliding it off his shoulders to fall around his feet. He tugged his tunic off and dropped it as well. As his hands went to the laces of his trousers, he felt himself becoming oddly self-conscious. \n\n Tam had never considered his physical appearance much. He supposed he was fairly average; a bit taller than most men, slim and without much in the way of muscles. An average face, perhaps. Women had never made much of him, but he didn't think about it much. The occasional visit to a Silver House had satisfied his infrequent need for companionship, and he had always assumed his eventual marriage would primarily be a business transaction, a woman whose dowry and connections would matter more than any physical attraction between them. \n\n He had certainly never thought about his appearance around Yelena. She was his slave, in every imaginable fashion, and was there to serve his pleasure. But here, now, he was giving her a limited form of freedom, and she was actually watching him drop his pants and stand naked before her, choosing to take him as a bed partner. He had a sudden irrational fear that she wouldn't want him, despite her declared intention and the fervor with which she had just been kissing him. \n\n Tam shifted slightly under her silent gaze, unsure what to do next. Then he saw Yelena was staring at his crotch and unconsciously licking her lips. He grinned and stroked his erection for her. \"See something you like?\"\n\n \"Mm-hmm.\" Yelena looked up to meet his eyes, blushing at being caught. \"Would you . . . um, could you try seducing me? Like just a woman and a man, not a slave and her master?\"\n\n Tam grinned. \"I think most seductions are already considered a success when they reach the point where the couple is in a bedroom, one partner is naked, and the other is practically naked. But let me try this and see how you like it.\"\n\n He walked up to her and reached out to gently cup her cheek. \"Yelena, you look beautiful. You're like a ray of moonlight in the dark, so pale in your white silks. But the moonlight is cold; your skin is warm to the touch, and I love the way the way you redden when you blush.\"\n\n He leaned forward and kissed her gently on the cheek, then moved to trail soft kisses down her neck. When he reached to untie her top again, she didn't stop him, letting the thin scrap of silk slide off her and settle on the floor. He kissed her shoulders, the hollow of her throat, moving gently to the slopes of her breasts as she made small sounds of pleasure. \n\n He was very tender when he reached her nipples, just barely brushing the hard tips with his tongue, bracketed by the little silver wings. She gasped as he did so, clutching his shoulders, but let him work. He didn't linger too long, kneeling before her as he kissed his way down her stomach. He kissed his way across her hips, then caught the string at her side in his teeth and tugged it loose, her skirt dropping to leave them both naked in the lamplight. \n\n He knelt before her pink lips, glistening with moisture in the lamplight, and inhaled deeply, savoring the scent of her arousal. He breathed out over her sensitive skin then softly kissed her at the top of her cleft, shifting with tantalizing slowness until he took her clit in his mouth and sucked gently on it. She gasped and leaned on his shoulders, her knees growing weak. \"Ah, damn. Whatever other talents you have, poetry isn't one of them, but you know how to kiss a girl's body. Bed. Now.\" She bit out the last two words tensely. \n\n He rose and followed as she pulled him after her, falling into the bed and tugging him down to cover her. \"Get your damn cock inside me; I want to feel that magic.\"\n\n She cried out as he entered her completely in one long thrust, shuddering as he stretched her open. \"Ah, so good. Wait, don't move yet please.\"\n\n Tam held himself back and let her adjust. She hooked her legs around his back then looked into his eyes. \"Um, can you prop yourself up a bit? Your weight is right on my poor nipples.\"\n\n Tam grinned and complied, lifting himself up on his elbows. Yelena winced in relief. \"Alright, Tam. Fuck me now; slow and gentle, like a lover.\"\n\n He slid slowly in and out of her, watching her face below him as he experimented with different strokes. She closed her eyes, concentrating on the sensation. As he patiently worked, she began to moan and pant, eventually reaching down to rub her clit and crest into an orgasm, gasping as she did so. He held himself still inside her as she peaked; she opened her eyes and smiled up at him. \"I'm surprised you haven't come yet.\"\n\n \"I've actually been using chi to hold back my release for the last few minutes, by cutting off the channels from my balls.\" Tam explained.\n\n \"Wow. You're using chi while fucking? How do you maintain that level of concentration?\"\n\n \"Years of study. And it gets easier as your mind becomes more accustomed to it. More of the same, Miss Alexovna?\"\n\n \"Mm, yes please.\" She slid her hands over his shoulders and Tam slid smoothly into motion again. Yelena tugged him closer and slid her hands farther up, running them over his braid where it fell down his back. She lifted her head and whispered in his ear. \"You can fuck me harder, now. Do it like you mean it.\"\n\n Tam needed no further encouragement. He'd been kind and patient, but if she was ready to really get fucked, he was going to give her what she wanted. He thrust into her with a steady rhythm, slamming his pelvis into her with each thrust, grunting with effort. She rose to meet him with equal fervor, her heels locked together beneath his ass, her hips flexing to match his rhythm. She reached up and tangled one hand in his hair at the base of his braid, pulling her head up to kiss him clumsily, their tongues pushing against each other, lips sliding as she shook beneath him. She bit his lip as her orgasm hit her, spasming beneath him. \n\n Tam felt the copper taste of blood in his mouth and growled, grabbing her shoulder and pushing her down. He grabbed her biceps and pinned her to the bed, changing the angle of their joining until her waist was bent up and he was fucking downward into her. She wrapped her legs around his waist and wailed as he fucked her through her orgasm. \n\n Yelena wrestled one arm free, but only so she could reach down to frantically rub her clit. Tam used his free arm to grab her ankle and push it back to hook over his shoulder, her other leg still clenched around his waist, spreading her wide so he could fuck deeper into her. She spat curses at him and urged him on until she lost control of her voice, head rolling back and crying out with each thrust. She came again, hard, and Tam pushed off her and scrambled to kneel over her, spraying his cum across her stomach and breasts. ",
        "He sat back on his heels, hands on his knees, and surveyed his handiwork. Yelena sprawled limply across the bed, limbs akimbo. She was panting and flushed, her thighs slick with fluids, her torso spattered with cum. She let out a low moan and blinked at the ceiling. \"Oh god, that was just what I needed. Why'd you come on my stomach though?\"\n\n Tam shrugged. \"Because I wanted to?\"\n\n Yelena rolled her eyes. \"Font of wisdom, you are. Feel like cleaning up the mess you made?\"\n\n \"No. The bet was that I can't give you orders, not that I become your servant. The bath's right through that door, you still have a little time left in your hour.\"\n\n \"I don't think I can walk right now. You really gave it to me at the end there. You want me to scoop it up and lick it off my fingers again, don't you?\"\n\n Tam nodded. Yelena pouted at him, but he just sat there and grinned at her.\n\n \"Alright, I'll do it, but only if you cuddle with me afterward. Deal?\"\n\n Tam considered for a moment then agreed. Yelena stuck her tongue out at him, but reached down and scraped his cum off her stomach and swallowed it. He made her go back for a couple spots she missed, but eventually had to agree she'd gotten it all. She even licked his cock clean without too much protest, then curled on her side and had him lie down behind her, his arms wrapped loosely around her. \n\n She sighed contentedly. \"You know, you were right, that peaceful feeling after a really good fuck is kind of like when you reach for chi. I'm going to try and touch it again right now, just lying here worn out in your arms.\" Her eyes closed and her breathing deepened as she made the attempt. Tam summoned his own chi with a thought and enhanced his vision, studying her network. Her chi glowed beneath her skin, millions of tiny branches following the network of veins and nerves. \n\n Tam could see her chi reservoir, the pool between her hips slowly gaining definition around the edges as she reached for it. Above it, in her stomach a smaller chi pool slowly dissolved, his chi from the sperm she'd swallowed dissipating uselessly without access to a fertile egg. Something tickled the back of his mind. He thought back to the Stone Mountain history he had been reading when trying to understand the extra chi when he rage-fucked Yelena in the stable. Could he have stolen Yelena's chi? It shouldn't be possible, but then again, it wasn't possible to touch your chi on your first day either. \n\n The control spell had laced his chi permanently into her; he could only see it in the anchors left at her key points, the copies of his chop still embedded inside her hands, feet, head, heart, spine, and stomach, but Yelena had said she saw threads of his chi laced through her central essence. Tam couldn't see it, but he had no reason to doubt her. Could it be that simple? Was her chi his to use if he wished?\n\n He had to try. He'd been lost in rage, acting on instinct the first time he did it, so he wasn't sure exactly what to do. He settled for reaching out with his mind, similar to drawing on his chi, but focused on the glowing reservoir in the slim body pressed against him instead of his own. After a bit of probing, he felt something respond. He gently tugged at it, and Yelena's chi reservoir eddied in response. His guess was right; he could access her chi to supplement his own. He pulled about a third of her chi out and fed it into his own reservoir, feeling a rush of energy as he did so. \n\n Yelena frowned and blinked her eyes open. \"Tam? The strangest thing just happened. My chi just shrank, while I was touching it. Did I do something wrong?\"\n\n Tam grinned. \"You didn't do anything, pet. I did that. Now, I have good news and bad news for you.\"\n\n Yelena blinked in confusion, still coming out of her chi-trance. Tam pulled the green silk loose from where it was still knotted around her arm and caught her wrists with it, tying them to the headboard before she realized what was happening. Yelena tugged at her bound wrists and looked up at him. \"Tam? What's going on?\"\n\n Tam grinned wickedly. \"The good news, little slave, is that your Master just learned he can use your chi to supplement his own, which means among other things that he can fuck all night if he wants to.\" As he spoke, he demonstrated, pushing the stolen chi down to stiffen his cock. \"The bad news is, your hour ran out about ten minutes ago, which means that we're back to doing it however I feel like doing it.\" \n\n Yelena's face paled at his expression. Tam reached down and toyed with her piercings, enjoying her winces of pain. \"I'm feeling generous though, slave. I'll let you pick which hole I fuck you in.\"\n\n \"Please, fuck your slave in her tight asshole. You haven't fucked her there since she woke up; she wants to feel your fat cock split her open again.\" Yelena's eyes widened in shock. \"No fair! You just commanded me to say that! That wasn't a choice!\"\n\n \"I don't remember slaves getting to complain about fairness. Still, I bet you're already wet again just thinking about me fucking your ass, aren't you? Let's check.\" He reached down and ran two fingers through her slick lips, holding them up so she could see her juices glistening on them.\n\n \"Ah, damn it, that's because you have a hard-on!\"\n\n Tam laughed and wiped his fingers on her face, smearing her juices on her upper lip so she would smell her own arousal with every breath. \"Don't worry, Yelena. I'm not mad at you, this isn't a punishment fuck. But you'd better get that ass in the air by the time I count to three if you don't want me to go get the riding crop. One, two,\"\n\n Yelena yelped and scrambled to turn over, pulling her knees under her and shoving her ass up. With her hands bound to the headboard, she ended up with her arms awkwardly crossed under her face, her weight on her elbows and knees. \n\n Tam moved to kneel behind her, pushing her knees wider apart so that her pussy and asshole were displayed before him. He reached down and lightly slapped her pussy. \"Higher, bitch. Keep those knees spread.\"\n\n Yelena whimpered and scooted forward, her ass thrust lewdly in the air. Tam followed, sliding his cock into her pussy to lube it up. He let it rest there while he reached over for the bottle of oil and began to rub some into the little star of her asshole. \n\n \"Yelena, listen to me carefully. I don't begrudge you your new hour of the day. I actually think it will be good for you to have a little time free for yourself. But just because you've earned an hour to yourself, just because I'm going to teach you magic, I don't want you to forget your place. Tell me what you're going to remember.\" He pushed a finger through her tight ring. \n\n \"I'm your slave, Master. I won't forget; how could I? I'm your little slave slut, an enchanted object and a tool in your hand.\"\n\n \"Good. Keep that in mind; keep working to be obedient and pleasing. You've done very well today; Master's very pleased with you. You're intelligent and funny; you're the hottest little fuck around, you figured out how to cheat your way to touching chi in a single evening. You're a valuable possession, and I'm going to treat you like that as long as you keep earning it. But you're still a possession.\"\n\n Yelena gasped as he worked a second finger into her. \"Yes Master! Your slave understands. Thank you for giving her the hour each day. She will remember that it is a gift from Master, she will not let it make her forget what she is.\" \n\n \"It's not a gift, girl. You took a risk, made a bet, and won your hour fairly. But you've grasped the main point; don't let it make you forget what you are. Now be quiet and try your best to relax your ass. It's time to take Master's cock.\"\n\n Tam pulled out of her pussy and held her hips steady as he pressed his soaked cock into her asshole. Yelena moaned as he pushed into her tight heat, stretching her poor asshole wide. He pushed all the way to the hilt in one long thrust; wearing the plug for most of the day had made her a bit easier to penetrate, though she was still pleasantly tight. She grunted and panted as he began steadily fucking her.\n\n Tam reached down and traced the lines of his chop tattooed on the small of her back. It looked perfect there, the sharp black lines standing out against her pale skin, perfectly positioned above his cock as her ass swallowed it. They were ending the day just as they had started it, with Yelena bent over and taking him in her ass while her wrists were bound to the headboard, but now he was taking the ass of a chi worker, not just a bed slave. \n\n He was in no particular hurry; he didn't have any rage to burn off, and Yelena's chi floating inside him gave him plenty of stamina. He wanted her to feel him in her tightest channel for a good long while. As he'd said, this was a reminder of her place: on her knees, her cunt dripping, and his cock deep inside her. \n\n Yelena whimpered and squirmed under him, her growing arousal overtaking the discomfort as she adjusted. Tam gave her a sharp slap on the ass, stilling her briefly, but she soon began writhing again, moaning in growing heat. Tam wondered how long it would take her to come just from getting ass-fucked, without any clitoral stimulation or extra commands beyond her basic rules. He decided to find out, taking a firmer grip on her hips and speeding his thrusts.\n\n Yelena shook and cried under him, sobbing with need, her bound hands pressing against the silk as she futilely struggled. Her body shook as Tam pounded her, the firm globes of her ass quivering as his hips slammed into them. Her elbows slipped at one point, and she fell farther forward, her face and tits crushed into the mattress as Tam continued to pound her ass without pause. Tam ended up coming before she did, though only by a heartbeat; the feeling of his hot sperm jetting into her depths pushed her over the edge to join him, her wails stifled by the mattress. \n\n Tam staggered to the bath and wiped himself off with a damp towel, then brought another one back for her. Yelena was still folded over on her knees, mumbling to herself in her own language, and he had to gently tug her into a more comfortable position to sleep after he cleaned her up. He checked her wrists to ensure the silk wasn't bound too tight, but left them trapped above her head for the night. As an afterthought, he pushed the plug back into her ass, ensuring that she'd sleep with her ass stretched and full of his cum. Tomorrow he would start teaching Yelena to use her chi, and see what possibilities her extra chi gave to his own workings, but for now he would sleep the sleep of a very satisfied man. \n\n\n  If you enjoyed, votes and comments are always welcome. I don't have an eta on the next chapter yet, as I'm going to try and focus on finishing the next chapter for Keeping a Kitsune before I work on Chapter five. Once I have an estimate I'll update in the comments and my bio. Thanks!"
    ],
    "authorname": "TehCorinthian",
    "tags": [
        "wuxia",
        "male dominant",
        "anal sex",
        "female submissive",
        "nipple piercings",
        "riding crop",
        "arm binder",
        "nonconsent",
        "mind control",
        "slave"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-shadow-doctor-ch-04"
}