{
    "title": "In Step Ch. 03",
    "pages": [
        "\"What do you mean, show you?\"\n\n\"I mean, show me.\"\n\n\"Like . . . kiss you?\"\n\n\"Well, don't make it sound like a chore!\"\n\n\"No, I didn't mean that, I\u2014\"\n\nWithout further discussion, she placed her hand around the back of his head and pulled his face to hers. He attempted to pull away, not because he didn't want to do it, but rather, he didn't like the way she was doing it. However, her grip was firm around his neck. Finally, he managed to break it off.\n\n\"What's wrong?\" Kendall asked with a frown. \"You really don't want to do this?\"\n\n\"It's not that. It's just not how I would do it. If you really want me to show you, then let me.\"\n\n\"Okay,\" she answered with a giddy smile.\n\nMark sat sideways on the sofa, both legs on the floor, facing Kendall, and then turned her to face him. She sat on her heels to elevate her head to the same height as his. He looked deeply into her eyes, and then ever so slowly touched his lips to hers. The first kiss was soft, tender and short. This he followed up with two more before allowing their mouths to remain together in a jaw-opening and closing kiss. He could tell she was eager by the way she wanted to move it faster, but he maintained a slow pace. His hands found hers, their fingers interlocking, arms extended to the sides of their bodies as though they were doing an old-fashioned dance, which to some extent, they were.\n\nMark allowed his tongue to brush against her lips and she responded by opening her mouth slightly. She wanted to shove her tongue past his lips, but he met it and pulled an inch away before again making contact. Now, when their lips touched, so did their tongues. His hands now went to the outside of her shoulders making little caressing motions while hers rested next to his neck. Then he grabbed her outer thighs lightly, rubbing his palms up and down slowly. All the while, he kept their kissing gentle, pulling inches back when she attempted to ramp it up, then reattaching with the same deliberate pace.\n\nTheir hands changed positions with hers on his thighs and his tenderly encircling her neck. He gradually allowed her to feed more of her tongue into his mouth and he did the same. When she pulled back, smiled her enjoyment, then reconnected, he let his hands slide slowly down her upper chest to the top of her breasts, but only for an instant before moving them back up\u2014all to gauge her reaction. She offered none, so this time, his hands eased along the top slope of her shoulders and then down the sides, and with her hands still on his legs causing her arms to be spread out a bit, he brought his palms forward brushing the sides of her tits before moving back up atop her clavicle.\n\nMoving her head back far enough to focus her eyes\u2014which seemed to hint at mischief\u2014on his, she whispered, \"When did copping a feel become part of kissing?\"\n\n\"Kissing is not just mashing faces together,\" he explained in the same tone, \"it's the melding of emotions manifested by the sensation of touch.\"\n\n\"Oh. Okay,\" Kendall accepted without further question, her lips back on his before the echo of her okay faded.\n\nNow, he stepped up the kissing with a bit more pressure while reaching back to her hips lightly cupping the outside of her ass. She copied the gesture. He then gradually slid his hands up her side, up her arm and shoulders back to her neck, then with just one hand he rubbed the exposed part of her chest boldly touching the top of each breast and an inch or so of cleavage. There was reaction this time: greater suctioning of her lips and more aggressive tongue action. Mark felt he could have held more of her tit, but eased his hand back up to her neck.\n\nKendall threw her arms around his neck, so he took the opportunity to run his around her back under her arms. They pulled each other closer as though their lips could lock even tighter. Mark drew his hands back very slowly caressing the sides of her breasts and going so far as to cup them from the front\u2014but only for a second. Boy, did they feel good. He resisted the urge to continue playing with them and moved back up her chest to her neck.\n\nMark really was not attempting to arouse Kendall as though to fuck her. His only goal was to demonstrate that the total experience of a kiss was much more than just lips suctioning. However, it was difficult not to become excited kissing a passionate young woman like her. It felt as though his hard on was twice as long as normal and he could feel the stream of pre-cum oozing wherever it could. Likewise, his last pass over her tits revealed two solidly hard nipples that seemed ready to rip right through her top.\n\nOnly after raising the bottom of her shirt to expose her abdomen and lower back so his hands could experience her soft skin did he decide it might be time to back off and let them cool down. He broke the latest kiss and rolled his head forward so that their foreheads were touching, then tried to catch his breath.\n\nWhen he leaned back, Kendall was smiling.\n\n\"See what I mean?\" Mark asked.\n\n\"Yes,\" she answered dreamily, drawing it out. But her utter contentment quickly turned to a frown. \"That's it?\"\n\n\"That's how I kiss,\" Mark answered with a shrug.\n\n\"But I mean you're just going to stop now?\"\n\n\"You wanted me to show you how I kiss,\" he answered in a confused tone. \"That was it.\"\n\n\"But we can't just stop.\" With obvious urgency, Kendall pulled the ottoman that went with the easy chair closer to them. As Mark had done with her earlier, she had him sit on the foot rest straddling it. She did likewise, except she sat so close to him she had to drape her legs over his. Their crotches were only inches apart. Without further discussion, she put an arm around his waist and the other around his neck and pulled their lips together. He didn't resist\u2014he wasn't a fool\u2014but he did control the pressure.\n\nOkay, so she was aroused and not shy about it, so he let his own emotions go also. Again his hands went around her exposed abdomen and lower back. He pulled them forward and back a few times, slowly, softly, caressingly, but each time, he went a little higher up her rib cage. Around front, he lifted the garment to just under her breasts and lightly brushed the underside of her bra from side to side.\n\nKendall did the same, lifting his shirt to touch his bare tight abs, then up to his chest toying with his nipples.\n\nMark felt another squirt of pre-cum ooze out. Nearly losing control, he lifted her shirt over her breasts, touching them affectionately as they continued to swap copious amounts of saliva. Instead of resistance, she actually pulled him closer. Nearing the point of no return, he gambled on raising her bra over her tits as well and he could feel her lips turn to a grin before regaining suction.\n\nNow, he held those two glorious orbs in each hand, his fingers spread out to form a hand bra. His thumbs rubbed and flicked her nipples and he could feel the vibration of her moaning from her throat through her lips to his.\n\nWhen she threw her head back slightly, breaking their kiss, his lips were magnetically drawn to her firm nipples. Mark had never done this before but he performed as though practiced. With his mouth on one breast, his fingers twirled the other nipple.\n\nAble to endure it no longer, Kendall pulled back, unzipped her top all the way, then pulled it and her bra all the way off. Topless now, Mark's eyes nearly popped out of his head. His most vivid mental pictures had not conjured an image anywhere near as perfect as what he was now staring at.\n\nHis eyes then shot up to hers to see what her reaction was. To his surprise, she was smiling proudly, recognizing the true admiration on his face.\n\nNot wanting to be the only one topless, Kendall quickly removed Mark's shirt, then pulled him to her to feel skin against skin. She instantly remembered that it was this sensation that got her started with her mother. She also knew that this activity with Mark had caused her to become extremely aroused. She wanted to question it, ponder it, analyze it, but she didn't want to stop and lose the feeling. Her mind briefly entertained the notion that she had been correct earlier in determining that it wasn't lesbianism or incest that was driving her, but rather the erotic nature of what was happening here: two teens doing something they shouldn't whose parents were dating each other.\n\nForgetting about it when she felt his hands gliding up and down her back, Kendall returned to the action, anxious to see not only where it would take them, but how far they would let it go.\n\nFor her part, she scooted the ottoman against the sofa and forced Mark back so he was leaning against the back of the couch. It was her turn to kiss and suck his nipples.\n\nMark couldn't believe what an incredible feeling Kendall's mouth and tongue on his nipples was. He was content to just slouch there and let her do it. He toyed with her tits while she assaulted his chest, but he had no purpose other than to simply enjoy what was happening.\n\nKendall attempted to move him to a completely supine position, her leg braising his solid erection sending electricity charging through her body; but his legs dangled uncomfortably off of the ottoman. Instead, she stood extending her hand for him to take. He did as she wanted and she led him down the hall to her bedroom.\n\nHowever, Mark had to halt at the entrance. \"Whoa. What are we doing here?\"\n\n\"Getting more comfortable,\" she answered decidedly.\n\n\"Where is this leading?\" he wanted to know.\n\n\"Wherever it does.\"\n\n\"Are you sure you want to go there?\"\n\n\"Mark, have you ever gone this far with a girl?\"\n\n\"Nowhere near.\"\n\n\"Don't you want to?\"\n\n\"Well, of course. I just . . . this is just way beyond me showing you how to kiss.\"\n\n\"Okay, well, you said kissing is more than just sucking face. I've never gone so far with a boy either. Know why?\" Kendall didn't wait for an answer. \"Because not one has been as kind, caring, gentle, and most importantly, as skilled as you. You're not only teaching me, but I'm learning volumes about myself. I mean, in one evening\u2014that I hope is nowhere near over\u2014you've completely transformed me. So, do I want to see where this goes? You bet your ass!\"\n\nAgain without waiting for his response, she went into her bedroom and plopped down on the bed on her back.\n\nThe most important lesson Mark's mother had taught him was to always think before acting. He was trying to do that now and do it with the right head. What she had not taught him was how to think while being influenced by the sight of a beautiful, half-naked creature laying on a bed, her breath sucked in so her spectacular tits sat firmly above her chest, beckoning him to come to her.\n\nHe quickly reasoned that they were both 18 and neither was forcing the other to do anything against his or her will\u2014if that vision could not be considered influential\u2014so, what was the harm in at least going a little further?\n\nWith no more consideration, he went to her. She pulled him down on top of her, but quickly rolled him over onto his back so she could be on top. Her legs split his and he could feel her upper thigh rubbing against his dick and her pussy dragging on his thigh all through his and her jeans. Their lips instantly met. She let her weight down on him so their bare chests rubbed together and she thrust her crotch slowly against him but picked up speed as their kiss intensified. Mark rubbed back, his hands latching onto her tits hanging down.\n\nKendall seemed almost possessed as she rolled off of him and moved down to his knees where she hurriedly unsnapped his jeans and pulled down his zipper. She then tugged his pants down and off. Her eyes widened as she palmed the huge bulge in his drawers with a growing wet spot below the elastic waistband. After only a couple of seconds, the girl sat back, and within a few more ticks of the clock, her jeans were on the floor with his. This was escalating fast as both were now only clad in underpants\u2014what little there was of hers.\n\nMark pulled her back up, and with a new kiss underway, Kendall blatantly humped her dampened panties against his moistened jockeys. He couldn't help but let his hands slide down her back to grab the soft exposed cheeks of her ass. Her hands found their way inside his drawers smearing the pre-cum all around his cock. It took all of his concentration not to blast her palm with a load of cum.\n\nTurnabout being fair play, Mark reached down, inserting his hand into her panties to find her soaked pussy. He diddled her clit amidst her heavy breathing and moaning. She let go of his penis and used her hand to push down her panties. Being the gentleman he was, he helped as much as he could. However, when they joined the pile of clothes on the floor, she needed no assistance in pulling his off.\n\nLying back down on top of him, before their lips touched again, both paused to gaze deeply into each other's eyes as the realization that they were both completely naked set in. A myriad of thoughts flooded their passion intoxicated minds: him comparing the feeling to the many times he had fantasized doing this with his mother; her mind comparing the feeling of being pressed against a male body with that of her mother's soft frame.\n\nBut the heat of the moment prevented either from dwelling longer before Kendall again straddled his right leg. She rubbed her spread pussy lips along his shaft as it lay against his belly. Whether a calculated move or not, she slid high enough that when she went back down her vagina sucked him into its lair. She nearly passed out from the incredible sensation of his huge piece of meat filling her. It was unlike anything she could think of, certainly no comparison to the lifeless dildos she had used.\n\nWith his cock fully sheathed in her velvety wet cave, Mark became lightheaded and feared losing consciousness, so intense was the overwhelming feeling. Difficult though it was, he grabbed her hips to halt her second thrust. She looked up at him as though he had slapped her in the face.\n\n\"Are you sure?\" he asked.\n\n\"Like I've never been of anything.\"\n\n\"I don't have a condom.\"\n\n\"I'm on the pill.\"\n\n\"Okay, but what about STDs?\"\n\nYou said you've never been with anyone; neither have I, so there should be no problem, right?\"\n\n\"I guess.\"\n\nAnd with that, she rode his cock with her head nestled in the crook of his neck. But Mark was so charged up, he feared coming too soon, so he stopped her again.\n\nIf looks could kill... \"Look, if you don't want to do this, just say so.\"\n\n\"No, no, I'm afraid I'll come too soon.\" With that, he took control and rolled her onto her back, then slid down, spread her legs, used his hand to spread her secretion over her clit, then pressed his lips to her pussy lips and kissed nearly as though he was kissing her facial lips. When his tongue began work on her clit, she thought her head was going to explode. His finger found its way into her hole and gently explored her inner walls. Now flicking his tongue back and forth over her clit, he knew that licking pussy was turning into the thrill he knew it would be. However, to his disappointment, she was as wired as he and came with a gush after only a few minutes, thus depriving him of further tongue action.\n\nKendall thrashed around on the bed for a couple of minutes until her orgasm subsided, then grabbed his head and pushed it away from her now highly sensitive organ. She maintained her grip on his pate to prevent any further contact.\n\n\"That was magnificent!\" she roared, her body still tingling from the experience. She couldn't remember a climax so powerful with her mother.\n\nMark merely smiled, an inner feeling of triumph at having not only satisfied her, but apparently way more than either of them expected.\n\n\"Where did you learn to do that?\" she wanted to know. \"If you tell me your mother taught you that you better be prepared to tell me how.\"\n\n\"Maybe I'll tell you later,\" he grinned mischievously.\n\nKendall's eyes widened at the tease, but instead of being annoyed as he expected, it seemed to recharge her, prompting her to pull him to her, wrap her arms around his neck and her legs around his waist, and devour his lips. As her fervor grew, she pivoted her hips from side to side and he could feel his cock being bathed in what must be a mixture of his saliva and her pussy juice. Once again whether by design or not, his cock slipped into her yearning snatch and she tightened the clasp of her legs around his waist to prevent him from pulling out.\n\nLittle did she know, he had no intention of leaving that pillowy softness this time, and he demonstrated that desire with long, deliberate thrusts.\n\n\"Oh, yes, Mark, yes,\" Kendall cried. She grabbed his face, holding it so their eyes were fixed on one another. \"Fuck me, Mark, really fuck me.\"\n\nIn his own euphoric state, Mark eagerly obliged. If he thought just having his cock in her pussy before was heavenly, thrusting back and forth was an intoxication no artificial substance could ever achieve. He was oblivious to her pulling their mouths together, but apparently nature took over and had him mindlessly participate in the kiss. All his sex drugged mind could focus on right now was the incomparable pleasure originating from his dick and coursing throughout his body.\n\nFinally, Kendall released her wrestler's grip around his waist, allowing her legs to drop to the back of his thighs. She then reached down, grabbed his ass and pulled it firmly to her on his in-stroke, as though so doing could drive him deeper within her. As it was, his length was more than fulfilling.\n\nHer hands moving up to his head, she guided his face to hers jabbing her tongue forcefully into his mouth. She then fucked his oral cavity with her tongue matching him thrust for thrust. When it became more than even she could endure, she pressed the back of his head to the crook of her neck as one did with an infant, then whispered in his ear, \"Come on, baby, fuck me.\"\n\nThat spurred Mark on causing him to pick up the pace a bit.\n\nSo, she followed up with, \"That's it, baby, fuck momma.\"\n\nAnd subconsciously, he did.\n\nKendall continued, \"Give momma that big hard cock. Momma wants you to fill her hot pussy with your boy cum.\"\n\nHe really started plowing her now.\n\nShe was about to say more, but it was having as much effect on her, and all she could do was moan, knowing she was close to coming again.\n\nBut, however close Kendall was, the roar that Mark let out followed by the blast of semen in her pussy sent her the final step over the edge.\n\nFor Mark, every nerve in his body came alive to produce a sensation like none he had ever experienced. In addition, he felt that he was shooting so much sperm that before long his balls would turn to liquid and he'd ejaculate them into her as well.\n\nKendall was clinging to him so tightly it felt as though they were one in a greater sense than the metaphorical definition that accompanied sex. They were also a mix of bodily fluids: spit-swapping, sweat fusing, and of course, cum commingling.\n\nFinally, after several minutes, Kendall relaxed her muscles allowing Mark to roll off onto his back beside her. Both were still winded.\n\nKendall turned on her side to face him. There was a seriousness in her expression and a softness in her voice as she asked, \"Please tell me how you learned to be so incredible.\"\n\nStudying the earnestness in her eyes, he had a feeling that if their parents continued to date and the two teens got to know each other even better, Kendall would be a very difficult person to turn down. As he was about to answer her question and he thought about what that answer was, he snickered.\n\n\"Aw, please don't tease me, Mark.\"\n\n\"I'm not.\" He snickered more. \"It's just that you're not likely to believe me.\"",
        "\"Try me.\"\n\n\"I think I just did!\"\n\n\"You know what I mean.\"\n\n\"I told you my mom got too sick to really teach me all the things that she wanted. What she did tell me to do to learn to be a good lover was to,\" he took a deep breath, \"watch lesbian porno movies, particularly ones with older women, or what they call MILFs. She said they're about women treating women like they want to be treated.\"\n\nThere was a look of stupefaction on Kendall's face.\n\n\"I said you wouldn't believe me.\"\n\n\"No, I actually do believe you because my mother told me something very similar,\" Kendall recounted. \"When we discussed my concern about being a lesbian, she said that there would be nothing wrong with that, or at least to be bisexual and enjoy both sides. Anyway, her point was that no one could make love to a woman like another woman.\"\n\nMark pondered what she said. He turned on his side to face her, unintentionally drawing his knee up near her pussy. A number of questions arose, but the one he wanted most to ask was: \"So, do you now consider yourself bi?\n\n\"I would say that's a safe assumption.\" Her hand went to his thigh, moving tenderly up and down.\n\nHe nodded absently, the other questions he had fading and a new one emerging. \"So, what now?\"\n\n\"Well, it's only ten. I'm sure my mom won't be home for a while. She was hoping they would end up at your house doing what we're doing. So, I'm game for another go.\" Kendall giggled. \"That's weird. We're fucking and our parents are fucking.\"\n\n\"Yeah, my dad was hoping for the same thing. But I meant longer term.\" He rubbed his hand below her neck and upper chest never really touching her tits.\n\n\"I know what you meant, but I don't know the answer to your question. You know they don't want us to date each other?\" Her hand was gradually traveling up his side.\n\nHe sighed, \"Yes, I know. They're afraid if we did and we broke up it would affect their relationship.\"\n\n\"You have to admit, though, it's probably true.\"\n\n\"Probably.\" Now his finger rode the slope of her upper tit down to her nipple where he gently rubbed the tip.\n\n\"Would you want to date me?\" Her hand had made its way to his chest to toy with his nipple.\n\n\"After what just happened, I would be a fool to say no.\"\n\n\"But that's not saying you really want to.\"\n\n\"When my dad asked me that question, I told him I thought it would be too weird dating you while he dated your mother. However now, the truth is, I don't know. But I would like to get to know you better.\" He lightly squeezed and twisted her nipple.\n\nThough it absolutely did not hurt, Kendall eyes widened. \"I guess I would say the same.\"\n\n\"I think if our parents continue to see each other, that will happen.\"\n\n\"Yeah, but if the four of us start spending more time together, we won't have more opportunities like this.\" She performed the same maneuver on his nipple.\n\nIt caused him to suck in his breath. \"And you'd want to do this again?\"\n\n\"I want to now.\" She leaned in and touched her tongue to the tip of his nipple softly rubbing side to side.\n\nSpeaking through a moan, Mark pointed out, \"Well, they're not always going to want to take us out with them.\"\n\nShe stopped long enough to respond and he stole the moment to suck her nipple. \"True, but don't you think they'd get suspicious if we wanted to stay together every time they went out?\"\n\n\"Depends on how clever we could be with reasons.\" Mark hesitated a moment, then went on, \"But we might be getting ahead of ourselves. We just had sex with each other and it was the first time for both of us. To top it off, we lucked out and it was great sex. So, of course, we think we want to have it again at the next opportunity.\" They had stopped playing with each other and Kendall started to interrupt, but he stopped her and resumed. \"There is a chance that the next time won't be as good, or maybe the time after that or the time after that. Or, even worse, the time six months from now.\n\n\"You liked it because it was erotic; but if we keep it up, after a while, it might not be erotic anymore, it might just be you and me having ordinary sex. Then one of us will think it's the other losing interest or some such and the rift will start. Then what will happen? We will eventually dislike each other and will that be any worse than our parents's fears of us dating and breaking up?\"\n\n\"So, you don't want us to fuck anymore?\" Kendall surmised.\n\n\"I didn't say that. I'm just saying that if we continue this when we can, we need to be smart about it and agree to be honest and try to work out any problems that might arise. The last thing I want to do is mess up my dad's chance at happiness just to,\" he shrugged, \"you know, get my rocks off.\"\n\nKendall giggled at his choice of words, and then pointed out, \"Wow, your mom really did teach you to think first.\"\n\nMark grimaced, \"Yeah, sometimes it's a curse.\"\n\n\"But in this instance, your right,\" Kendall agreed. \"Except that your dad has already had many years with a great partner, and while I would never want to deny him another chance at happiness, my mom has not been anywhere near as fortunate. My point is, I am even more determined not to do anything to screw up her chances.\" She reached down to caress his flaccid, sticky cock. \"But you might be wrong about one thing. You said it's the erotic nature of this that I like. I told you earlier that you transformed me. When this evening began, I thought I was driven by lesbian sex, then when you told me about your mom's lesson's I thought it was incest, and then finally it seemed it was the erotica. But now I know\u2014I know\u2014it's none of those. It's the person. Both my mother, and now you, have given me experiences I have not been able to get from anyone else. So, I guess what I'm saying is, if you want this to work, if you want it to last, don't change.\"\n\n\"That works two ways.\"\n\n\"Deal.\" She removed her hand from his now hard again cock and held it out for him to shake, which he did. She then leaned over and kissed him again. \"There; sealed with a kiss.\" And she went in for another, this one longer.\n\nAfter that one, Mark slid down so his mouth was level with her nipple. He sucked it.\n\n\"Oh, yeah,\" she moaned, \"you can keep doing that for a while.\"\n\nSo, he did, rolling her on her back so he could give each breast equal attention.\n\nHer arm was not quite long enough to fondle his cock while her mouth was occupied, so she just moved her palm around whatever she could: chest and abdomen. Becoming easily aroused again, Kendall whispered in a sexy voice, \"Maybe I lied a little bit.\"\n\nHe discontinued sucking long enough to ask, \"About what?\" But he instantly resumed.\n\n\"Maybe eroticism is a small part of it.\"\n\nNow, he looked up. \"I'm afraid to ask what.\"\n\n\"Lick my pussy,\" she said seductively.\n\nMark immediately started to slide down to accommodate her, dragging his tongue on her skin, thinking there was nothing wrong with that.\n\nThen she added, \"Suck your cum out of it.\"\n\nHe halted when he reached her navel, rimming it. \"What?\"\n\nAlready pretty worked up himself, the concept of her request was further stimulating, even though the thought of it was not so much. Then he reasoned, how bad could it be? And here he was with a girl so beautiful any guy in his right mind would jump at the chance to suck cum out of her pussy, even if it wasn't his own. And yet, here she was with him, and only wanted him, so how could he possibly deny her?\n\nTo work up to it, Mark pulled the hood of her clit out with his thumb and forefinger, squeezed it together slightly then moved his fingers back and forth.\n\n\"Oh, that feels good!\"\n\nHe then swathed the hood in saliva before turning his head slightly to press the hood between his lips and suck. It caused her body to jerk slightly, but he knew it wasn't in pain. Then, after the first couple of swipes with his tongue inside of her, he was so into it that he didn't even think about some of that liquid being his cum\u2014until he had another thought. Without looking up, he asked, \"So, you think this is erotic?\"\n\n\"Oh, fuck, yeah,\" Kendall cooed.\n\nHe rubbed his mouth all over her pussy. \"Then what do you think about this?\" In one rapid motion he pulled himself up between her legs and pressed his lips drenched in a mixture of his and her cum to her mouth, kissing her more passionately than he ever had.\n\nHer response came in the form of a very guttural groan followed by her tongue moving all around the inside and outside of his mouth, as though she was trying to scoop up as much of the mixture as she could.\n\nDriven now by such unbridled passion, with a burst of adrenalin, Kendall rolled both of them over so that she was on top, grabbed hold of his pulsing pole of steel and rammed it into her molten vagina. She rode it like a cowgirl on a bucking bronco and he had to grasp her hips to prevent her from falling off.\n\nFortunately, she came quick and hard because the ferocity with which they were fucking was physically draining them fast. Because of this, and the fact that he had not yet come when she was finished, she considerately did not stop, but rather changed her movement from a taxing up and down to a hula hoop type swivel of her hips around his cock. To his surprise, he found it more stimulating and he blew his wad in no time.\n\nWhen she felt his cock stop pulsing inside of her, she just fell off of him completely spent. Panting deeply, she managed to say, \"Okay, so, that makes us two for two. I think we can report to our parents that we hit it off.\"\n\nHe smiled. \"Yeah, but we might want to leave out some of the details.\"\n\n\"You think?\"\n\n\"So, what do I report to my dad?\" Mark wondered. \"I mean, I was told that your mom was the one who wanted me to spend the evening with you because she thought one reason you didn't date much was because you hadn't spent much time with boys, and maybe a few hours with me might make you more comfortable around boys.\"\n\nKendall burst out into a real belly laugh. \"That's almost exactly the reason I was given for you. You didn't date much, yada, yada, yada.\"\n\n\"Well, that might buy us more time together.\"\n\n\"How?\"\n\n\"How was Kendall? Oh, kind of shy. We talked a little, but mostly watched TV.\"\n\n\"Got it.\"\n\nThey continued to lay facing one another, touching, but not in any stimulating manner, and before long both drifted off to sleep.\n\n* * *\n\nAbout the time Mark and Kendall began their kissing lessons, George and Donna arrived at his house. \"Be it ever so humble,\" he said gesturing her in.\n\n\"There's no place like\u2014\" she started to complete the anecdote, but was forced to add, \"Wow! What a home!\"\n\n\"Come on, I'll give you the cook's tour. There was a small foyer that led back to the living area. To the left was a kitchen that opened to the living area and a dining area beyond.\n\n\"I love this openness,\" Donna commented.\n\nTo the right of the foyer was a hallway that led to the bedrooms. Immediately on the right was Mark's room.\n\n\"Is he really that neat?\" Donna asked at how tidy the teen's room was.\n\n\"Yes. He took on much of the housekeeping responsibilities when his mother was ill, and fortunately, he has not given them up,\" George explained proudly.\n\n\"I hope that rubs off on Kendall.\"\n\n\"I thought girls were neat.\"\n\n\"She's just a typical teenager. Needs reminding.\"\n\nDirectly across the hall was the master bedroom. \"I moved out when my wife took sick and I haven't gotten around to moving back.\"\n\nDonna eyed him with mock suspicion. \"Somehow, I think there's more to it.\"\n\n\"Guilty. I have no real excuse.\"\n\n\"You don't need one.\" She looked him in the eye. \"At least not for me.\"\n\nAt the end of the hall was another bedroom. \"This is the guest room, which I now occupy.\"\n\n\"Looks cozy,\" Donna remarked, sitting on the bed to adjust her shoe. In the process, her skirt rose showing off considerable thigh.\"\n\n\"And you make it look cozier,\" George noted with a hint of playfulness.\n\nDonna laid back resting on her elbow, making no attempt to pull down her skirt. \"So, what are you going to do about it?\"\n\nNervously, he said, \"I'm going to get us each a glass of wine and then we can discuss where we go from here.\"\n\nWhen he returned a few minutes later, to his further surprise, Donna was laying much the same: on her side, her head resting in the palm of her hand held up by her elbow. But her attire had changed radically: she was now clad only in one of his dress shirts, the shirt tail barely covering her \"tail,\" which was draped to entice, but not to reveal. Only a couple of buttons were fastened, with much of her breasts tantalizingly peeking out.\n\n\"Perhaps I wasn't clear when I said we should talk about where we go from here. I meant\u2014\"\n\n\"I know what you meant,\" Donna said seductively. \"I chose to interpret it differently.\"\n\n\"Well, may I say I like your definition better.\" George said, the edginess still in his voice.\n\n\"I though you might,\" she responded with a knowing smile. \"Now, come here so I can show you where we are going from here.\"\n\nGeorge eased onto the bed, and when he was within range, she pulled his head to hers guiding their lips together. Even though they had kissed before, it had been different because at those times they knew it could never go further. Now, knowing where it was going, there was a greater thrill to it.\n\n\"Am I being too aggressive?\" Donna asked.\n\n\"Well, I haven't gone this far in a very long time, so you feel free to lead the way.\"\n\nAnd so she did. Donna started with another kiss, this one wet. She moved her mouth from side to side with her tongue in exploration mode. In the process of rolling him onto his back and her on top, she could feel his cock and could tell that it was so hard it was about to rip through his pants. The poor man probably had so much sex built up inside that he was ready to burst. She knew that if she didn't give him some release he'd never settle down and make the rest of this evening enjoyable.\n\nShe sat up straddling his abdomen and slowly unbuttoned his shirt (the one he was wearing). While doing that, he reached up and undid his shirt (the one she was wearing). She felt his cock pulse when her tits were fully exposed, and she feared that maybe he had already blown his load. Therefore, she kissed her trail down his chest and abdomen at a quicker pace than she originally intended. Deftly, she undid his belt and zipper as she felt him kicking off his shoes. That made it easy to remove his pants and underwear.\n\nTo her relief, he had not ejaculated, but had let loose a fair amount of pre-cum that wet both his cock head and a section of his lower abdomen. He had a beautiful cock: about seven inches and fairly straight with an appropriate circumference to his length. She lifted it from its resting place on his stomach, licking the puddle of pre-cum that had collected, then cleaned the head of its residue. Next she bathed his shaft in saliva as he whimpered in response. For good measure, she sucked one testicle in her mouth then the other,\n\nThen, with one final lubricating layer of saliva on his shaft, Donna virtually inhaled his cock all the way to the root in one motion. Based on the indescribable noise he emitted, she would have loved to see the look on his face. Certainly his eyes were probably ready to pop out. She drew back slowly, licking the glans and pee hole with her tongue, then went back down at the same pace. Holding his balls in one of her hands to gauge when he was ready to shoot, she continued to deep throat him.\n\nAfter only five or six swallows, George's moans became more urgent and his balls began to tighten. Donna timed her movement to where her mouth arrived at his mushroom just as he unloaded, which he did with such force she couldn't swallow it all. What she didn't just oozed down her lower lip and chin. When he finally finished, she figured she had swallowed only about half.\n\nThen to her complete surprise, he pulled her up to him and kissed her passionately with his cum still on her lips. She wasn't sure he realized it was there until he kissed all around her mouth and chin, effectively cleaning it all off.\n\nDonna was already very turned on, but that unexpected gesture made her hotter. She had intended the blow job as a release of steam so he could build back up slowly. But to her surprise, he still had a raging boner, so she grabbed it and shoved it into her hot, yearning pussy, hoping that he would last. Fearing that he would not, she fucked him fast, even though this was not the way she wanted their lovemaking to go.\n\nLooking down at George's face, Donna saw that he was smiling so she did likewise, going so far as to cup his face. In it, she noticed that it was more than just two people fucking; there was something more. Still, it felt so good to have a cock in her pussy again, particularly one that fit her perfectly. That it was George made it all the better. Concentrating solely on the sensation of his shaft rubbing the inner walls of her vagina was all it took to bring her to the edge. She exploded with an orgasm more powerful than any she could ever remember having, and amid the countless emotions that she was currently experiencing, she knew she had found her soul mate.\n\n\"Damn, that was good,\" George exclaimed, as his breathing gradually returned to normal.\n\n\"Yes, it was,\" Donna agreed.\n\nHe was laying on his back; she was on her side facing him, so close her breast was resting on his chest and her leg was draped over his just below his deflated cock.\n\n\"But I have a bit of bad news,\" George said somberly. \"I'm never letting you go.\"\n\nHer instant of fear quickly turned to amusement. \"Just based on one good fuck?\"\n\n\"No,\" he responded, grinning. \"That was the icing on the cake, the exclamation point at the end of the sentence, the final agreement that clinched the deal. You are as perfect a woman as I could ever hope to find. My only concern is whether you feel the same.\"\n\nDonna briefly toyed with the idea of teasing him as he had her, but dismissed the notion. \"I do feel the same. But as you know, I don't have the best record with men. I always want to believe it's not me, but . . .\"\n\n\"Yes, there is that to consider,\" George mused, playfully. \"But I'm willing to take the chance if you are.\"\n\n\"I am!\" With that, she glued her lips to his and they kissed as passionately as they ever had, and yet, it was a kiss like none they had ever had, as though their profession of a continuing relationship gave more significance to this gesture of affection.\n\nGeorge rolled her over onto her back and continued kissing her while easing into a squatting position. He then rotated himself around so the he was above her head, then he kissed his way down her neck to her tit, stopping to suck her nipple. He straightened his body out and Donna was able to reach over her head to stroke his cock back to hardness. With his free hand he reached down to finger her still wet pussy and he felt her nibbling on his chest, though she couldn't quite reach his nipple.\n\nThe feel of her pussy became more of an allure so he continued kissing his way down until his tongue was able to replace his finger on her clitoris. As he lapped at the delectable cum cocktail, he suddenly felt his cock become engulfed in warm, wet softness, and he knew instantly that Donna had taken his rod in her mouth.\n\nAh, 69. George couldn't remember the last time he had been engaged in the classic position. Giving and receiving at the same time; what a feeling! But they did little more than clean each other's genitalia with their tongues before moving on.\n\nSo far, everything George and Donna had done sexually was fun and exciting. But now he wanted to make love to her\u2014really make love to her. So, as difficult as it was, he tore himself away from her sweet pussy and moved back up on top of her in the classic missionary position. He kissed her tenderly on the lips, soft but not urgent, then with a mental image, guided his cock blindly into her waiting pussy. Whether he would have made it or not didn't matter because her hand was there to make certain his aim was true. As his shaft slid slowly in, he relished the feeling that was like nothing else in the world. With gentle motion he began pumping. He gazed lovingly into her eyes and she returned the look. To complete the total emotion, their lips met once more and she wrapped her arms around him.",
        "This was much more than sex and they both knew by the look in each other's eyes that this was a very special coupling. Neither rushed to climax, but the sheer emotion of the act had them coming together in a calm, sensual orgasm. Their kiss continued long after climax subsided.\n\nGeorge and Donna remained in each other's arms for a long time. His emotions were running so high he wanted desperately to tell her he loved her, for he really did. But something in the back of his mind prevented him, as though it was too early in their relationship. Still, he felt it and he knew it in his heart.\n\nDonna's feelings were running a similar course, and even though George was so far different\u2014in a better way\u2014than anyone else she had ever dated, she feared expressing too much of her feelings at this time might jinx her. She knew she was falling in love with him, but to reveal such emotions after the glorious lovemaking they had just enjoyed could be perceived as the euphoria that follows the act and the meaningless words that people so often spout at such a time.\n\nBut she did feel comfortable saying: \"You said before you're never letting me go; well, right now, I have no desire to go anywhere.\"\n\n\"Then don't.\"\n\n\"Would that be wise with our children at my house?\"\n\n\"Well, I don't know about Kendall, but I don't think it would come as a surprise to Mark what we're doing here. I mean, if you didn't go home until morning.\"\n\n\"No, it definitely would not be a surprise to Kendall either. Still, I hate to displace Mark from his own bed. We'll have to plan this better next time. Or at least, make better arrangements for them.\"\n\n\"I guess you're right.\"\n\nBut she detected the disappointment in his voice. \"I'm sorry. Have I let you down?\"\n\n\"Absolutely not. Tonight has greatly exceeded my expectations. And more than that, there will be many more evenings like this.\"\n\n\"I love your positive attitude.\"\n\n\"Do you want me to take you home now?\"\n\nShe grinned sheepishly. \"Not just yet.\"\n\nTo be sure, they made love two more times before departing, and when they arrived at Donna's house, they snuck in quietly, ostensibly not to awaken them if they were sleeping, but also curious to see what they would find . . ."
    ],
    "authorname": "RonCabo",
    "tags": [
        "18-year-old"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/in-step-ch-03"
}