{
    "title": "After the Fall Ch. 05",
    "pages": [
        "This Chapter is dedicated to the reader who sent me anonymous feedback through the site on Chapter 4. Your kind comment came at exactly the right time.\n\n \n\nThank you to YukonNights for suggestions on scene selection, and to DeathMarch4 for the good advice on the problematic scene.\n\n____________________________________________________\n\nAuthor's Note: As a rule, I avoid prefatory notes about the content of a chapter because I don't want to try to influence the way you read it. I'm making an exception this time because I don't want you to feel like this chapter leads you on with the promise of things that aren't in it. There are no sexual encounters involving anyone other than Michael and Mariah. I'm sure many readers will see the opportunities for girl-on-girl, threesomes, foursomes, etc. I didn't want you to think those things were coming and be disappointed when they never arrived. I hope Michael and Mariah's encounter will leave you satisfied. ;-)\n\n____________________________________________________\n\nIt was about four in the afternoon on one of the most exhausting days in either of their lives. That morning, four of \"mayor\" Hawley's men attempted to abduct Mariah, using a ruse to coerce her to climb over the wall of the compound. Michael's entire security team had scrambled and intercepted them before they got far. During the standoff, one of Hawley's men drew a gun and was shot in the shoulder. He had already been questioned and released to the town doctor. Two other men ran away just as Michael arrived on the scene, and the fourth man remained locked in a holding room in the basement complex, awaiting questioning.\n\nAfter Michael brought Mariah safely back to the compound, he was determined to get it through her head that he would not tolerate her endangering herself. He had driven his point home with a very real spanking before he fucked her with a possessive fury that left her aching. In the midst of delivering the spanking, he inadvertently referred to her as \"the woman I love,\" and it made her angrier than he'd ever seen her. They hadn't talked about it, yet. If it was up to Mariah, they never would.\n\nThe day was still far from over, and they were sharing a shower in a temporary state of truce when it suddenly occurred to Mariah that Hawley must have Sarah.\n\n\"Michael, they have Sarah!\"\n\nMichael reacted to the fear in Mariah's voice without having any idea what she was talking about. \"Who is Sarah?\"\n\n\"Sarah Jenkins. My friend. You must have seen her on the feeds. She's the little tiny black girl with big natural hair. Michael, I have to get her away from them!\" Her voice rose as panic crept in.\n\nHe held her by the shoulders and backed her slowly against the wall of the shower. \"Look at me, Mariah.\" He had to give her shoulders a little shake before she focused on him.\n\n\"Take a deep breath. We're going to get her back. And by \"we,\" I mean the security team. Not you. You are not leaving this house.\"<br ><br >Michael quickly rinsed off and left Mariah in the shower to finish rinsing herself. He grabbed his radio and some clothes from his room and came back to her bedroom to dress. He had no intention of leaving her alone long enough to go running off on some harebrained rescue attempt. When she walked out of the bathroom, he was pulling his clothes on while he talked to Ezra over the radio.\n\n\"I don't know how she knows. I don't want to waste any time. She can tell all of us at once. Just have everyone meet us in the conference room.\"\n\nMichael finished dressing, but Mariah was still struggling. She had been in too much of a hurry to dry off properly, and now her damp skin was sticking to the fabric of the bra and panties she was trying to pull on. He stopped her.\n\n\"We're going to get to the conference room before the rest of them. Slow down.\"\n\nHe brought her a towel from the bathroom. She did a better job drying off while he squeezed the water from her dripping hair and towel-dried it. He knew she wouldn't cooperate with blow drying it right now. As soon as she got her clothes on, she dashed down the hall. He caught up to her and took her hand.\n\n\"Mariah, you've got to calm down.\"\n\n\"You don't know what they'll do to her!\"\n\nHis stomach churned. These were the same men she had gone with voluntarily after they threatened Henry.\n\n\"Baby, I promise we will get her back just as fast as we can, but I need you to focus.\"\n\nBy the time they got to the conference room, Mariah had collected herself. She was glad to see Yvonne was already there. She had some questions that were bothering her.\n\n\"Yvonne, do you know how those guys knew where I was this morning?\"\n\n\"You know that hill on the other side of the road from the compound? There was a rough platform, built way up in a group of trees. There were two men up there and they had a telescope. They radioed the four guys outside the walls and told them where to throw the rock and where to throw the ladder over. Today was the third morning we saw people out on the road. Until now, they never did anything suspicious, besides just being all the way out here for no apparent reason. We think they just got lucky that you happened to go near the wall while they were out there waiting.\"\n\nBy the time Yvonne finished explaining, the rest of the security team was arriving. When everyone sat down, Michael prompted Mariah to start.\n\n\"Hawley's guys have my friend, Sarah Jenkins. Remember how you guys never figured out where I lived? Only a few people knew, and only Sarah knew Henry. She checked in on Henry, Julia and Duncan if I had to be gone for more than a day. She is the only person who knew Henry's name, or even that I had a dog.\"\n\n\"What about his original owner?\" Michael asked. \"He would know his name.\"\n\nMariah didn't waste time trying to figure out how he knew she wasn't Henry's original owner. \"Henry is the name I gave him. I never told anyone but Sarah. That note they threw over the wall identified him by name, so they had to have gotten that information from her. She wouldn't have given it to them voluntarily.\"\n\nEzra nodded. \"Okay, let's operate on the assumption that they got the information from Sarah. Why do you think they still have her?\"\n\n\"If they had let her go, she would have tried to warn me. You would have seen her at the gate. Besides, they'd keep her because tomorrow is the fifteenth. They have a party on the fifteenth of every month. Most of the time, Hawley's guys pay women to come to their parties. There are always women who need the tokens badly enough to do it. But, everyone knows that if they happen to have their hands on any woman when the fifteenth is getting close, they'll hang onto her for the party. It's happened at least a handful of times that I know of. They gave the women tokens afterwards, as if that made it okay, but the women were there against their will.\n\n\"Sarah's exactly the type of person they target. She's single and doesn't have family. They know nobody's going to come looking for her and there won't be anybody in town raising hell about it. She's not likely to fight them, and she wouldn't be a physical threat to them even if she tried. Sarah's tiny. I don't think she's more than five feet tall, and probably doesn't even weigh a hundred pounds. She's everything these jackals see as prey, and we HAVE to get her right away.\" Mariah's voice broke. \"Please.\"\n\nMichael reached for her hand when he heard the agitation creep back into her voice. It was vaguely embarrassing, but also reassuring. If it were up to her, she would forgo the reassurance in favor of dignity, but this was not the time to fight him over something of only symbolic importance. She allowed herself to draw comfort from the warmth of his hand around hers.\n\nEzra nodded. \"We won't waste any time, Mariah. I promise. I'm going to question Carruthers about this, but I need you to give me some background information. To have any kind of an idea whether Carruthers is being truthful, I need to ask him for information I already have, to see whether he lies to me. Right now, I have practically no information to work with.\"\n\nMariah nodded. \"What do you want to know?\"\n\n\"Let's start with where they have their parties. If she's being held for that reason, she's either already there or will be brought there. I know they like to hang out at the lake house off of Three Notch Road. Is that where they have their parties?\"\n\n\"Yes. They use the cabins around it, too, but I think they would have her in the Lakehouse itself. The cabins would be easy to check, though. There's not normally anyone in them. The cabin windows are all blacked out, but each one has the same layout. There's a front room, a back room, and a bathroom.\"\n\nEzra glanced at Michael to see if he was noticing how much Mariah seemed to know about Hawley's setup. From the way Michael's jaw was tightening, Ezra guessed that he had.\n\n\"What about the lake house?\"\n\n\"There are two stories above ground, but there's also a full basement. The basement is all one big room. They keep it locked up because it's where they make their drugs and keep their valuables. There's a cellar door, the kind that's sort of like a hatch, on the side of the house. If you open the hatch and somebody's in the cellar, they'll see you right away. I think the other way to get to the basement is better.\n\n\"There's a door in the back of the house that opens on a very small landing. There are a few steps going up to a door that opens on the ground floor, and then there are steps going down to the basement. About halfway down, the stairs turn again at another landing. It would be easier to avoid being seen going that way. The stairs creak, though.\"\n\nMichael's hand tightened hard around Mariah's, and she pulled her hand away. Ezra thought it was probably a good thing that Mariah wasn't facing Michael, because he was livid.\n\n\"Is the basement where you think they would have her?\"\n\nMariah hesitated. \"No, but I'm not sure. It's where it would make the most sense to keep her, but I don't think they would want her near their loot. They've got tokens, drugs, and valuables for trade down there.\"\n\n\"Okay, what about the ground floor?\"\n\n\"There's a front door and a side door, but they both open onto the living room. It would probably be easier if I draw the layout for you so you can see where the lines of sight are. I doubt they have her on the ground floor. The bathroom and the closet are the only places on the ground floor where it would be easy to lock someone up.\"\n\n\"So, you think she's on the top floor?\"\n\n\"Yes, but it really is just a guess. There are two ways to get to the top floor. There's a staircase opposite the front door, and there's a deck on the back of the house. The deck has a sliding glass door that can be lifted out of the track. The deck is off the master bedroom. The whole top floor is just bedrooms and a bathroom. There's a long hall straight down the middle that connects with the main staircase, and the bedrooms are on either side of the hall.\"\n\n\"What about locks and alarms?\"\n\n\"There's an old alarm system, but I don't think it works. They only get electricity when the rest of the town gets it, usually between eight and nine in the evening this time of year. I've never seen any exterior lights on after dark.\n\n\"The sliding glass door on the second story has one of the standard locks that deck doors usually have -- the kind where there's a plastic slide that you move up or down. Last time I saw it, there was a sawed-off broomstick in the inside track to keep the door from sliding while the broomstick was down. The front door and side doors have keyed deadbolts and locks in the doorknobs, but I don't know if they have any additional locks. They aren't locked all the time. The first-floor windows have nails driven partway into the window sashes to keep them from opening.\n\n\"The cellar door is locked with a chain through the handles and a padlock on the chain. The door I was saying is the best way to the basement has a hasp with a combination lock through it. The combination is 9-9-9-9-9, or at least, it was recently. The contact points for the alarm system are disconnected on that door, so it wouldn't go off even if there was electricity.\"\n\nEzra tried to keep his face neutral, but everyone else at the table was looking skeptical or leery. Everyone except Michael, that is. Michael looked like steam might come billowing out of his ears at any moment.\n\n\"Mariah, you know I've got to ask. How do you know all this and how recent is your information?\"\n\nShe had known this was coming, and she had felt the looks on her as she explained the layout. \"The information about the cabins is at least a year old. I rarely check them. My information about the main floor is also about a year old, and my information about the top floor is a couple of years old. My information about the back door and basement is a few weeks old.\"\n\nMichael exploded. \"What the hell, Mariah! What were you doing there, and why?\"\n\nMariah went on without acknowledging the interruption. Michael wasn't going to calm down anytime soon no matter what she said, and she had no intention of participating in a public argument.\n\n\"I've checked the lake house once a month for the past few years. The combination on the lock has stayed the same in all that time. The combination on the safe is 10-right, 20-left, 30-right, 40-left, 50-right, in case you need it. They keep things simple - very simple. They wrote the combination of the safe and the exterior combination lock in a ledger they keep in the safe.\"<br >\n\nShe saw Ezra frown and held up a hand, \"I know. Why did they lock the safe combination inside the safe? These guys weren't Ashland's best and brightest even before they were cooked on blaze all the time. I adjust their ledger and take some tokens from their drug sales off their hands once a month. I just make a phony entry in the ledger to account for it and as far as I can tell, they've never noticed. I go early on the morning of the sixteenth of the month when I know they're all incapacitated. I usually only go to the basement. I check the rest of the house and the cabins about once a year just to see if anything's changed, and it's always been the same.\"\n\n\"So how did you get in the first time, if the combination was in the ledger in the safe?\" Ezra asked.\n\n\"They left their doors open and their safe unlocked after their party. I just walked in. It's practically impossible to underestimate these guys. That's why what happened earlier today bothers me.\"\n\n\"That's the reason?\" Michael asked incredulously.\n\n\"What I mean to say is that it was completely inconsistent with Hawley's group. They don't plan like that. As far as I know, they didn't have radios, either, or batteries for them. I think they're getting help from someone. I don't know who could be helping them, or why anyone would want to help them, but I just can't believe these guys turned competent overnight.\"\n\nEzra was silent for a few moments. \"If you're right about somebody providing them assistance, it's possible that the security at the lake house has been upgraded. That's the sort of thing I can ask Carruthers about. I'm going to go talk to him now. Is there anything you can tell me about him that might be useful?\"\n\n\"I'm sorry, but I can't think of anything you don't already know from seeing him in action. He's motivated by fear and ego, but that's nothing unique. If I had to guess what's going through his mind right now, it's trying to avoid punishment by Hawley once he gets out of here. I'm generalizing based on what I know of these guys as a group. I don't know Jim Carruthers personally.\"\n\n\"Fair enough.\" Ezra stood to go. \"I'll see what I can get out of him. Go ahead and sketch the floorplans while I'm busy with that.\"\n\nMariah sketched the layout of each floor of the lake house, the layout of the cabins, and a rough map showing the way the lake house and cabins were grouped. Ezra still wasn't back when she was done. Jack had gone down with Ezra. Andy, Yvonne and Nate were talking amongst themselves. Michael pulled Mariah out of the conference room and down the hall to one of the empty offices. He closed the door behind him.\n\nShe spoke first. \"Michael, you're angry about things that happened before you even met me.\"\n\nHis fists clenched. She always insisted on acting like she didn't exist to him before she met him in person. It seemed to mean nothing to her that he had been watching and worrying over her for years.\n\nWhen he spoke, his voice was low and dangerous. \"Why did you go to the lake house in the first place, and why did you keep going back?\"\n\n\"The first time was partly out of curiosity and partly to look for opportunities. I wanted to see what was going on there. A lot of things were being stolen, and I thought that might be where they ended up. I knew they gathered there, so I wanted to know why.\"\n\n\"You went because you were curious? Mariah, what is wrong with you?\"\n\nShe didn't bother answering him, because her answer wouldn't have mattered.\n\n\"Why did you keep going back?\"\n\n\"Tokens, like I said.\"\n\n\"What did you need tokens for? You had an unlimited line of credit at Lois's shop.\"\n\nShe shook her head. \"You aren't making any sense. First of all, I needed tokens to buy medicine. How do you think Dr. Becker gets medicine? It's certainly not because his patients can pay him. I'm not made of tokens, Michael. In case you hadn't noticed, I didn't have a real job. I spent nearly all my time gathering food and scavenging. I do a little treasure hunting in old buildings to find things to sell to the couriers when there's time for that, but that's not exactly a reliable source of income. Second, I don't know where you got the idea that I had unlimited credit at Lois's shop. I never even used credit. Even if I did, she doesn't sell medicine. Unless you're Michael Kincaid, the only way to get medicine is to buy it from couriers.\"\n\n\"So you stole tokens from a dangerous gang of hoodlums.\"\n\n\"Barely dangerous.\"\n\n\"If they're barely dangerous, why are you so frantic to get your friend away from them?\"\n\n\"Sarah isn't me, Michael. She can't defend herself and she's a very sensitive person. I only went there when I knew they would be incapacitated and I wouldn't get caught. She is already caught.\"\n\n\"Yes, I know, I know. Sarah's tiny. Just how big do you think you are, Mariah?\"\n\n\"Bigger than Sarah.\"\n\n\"By what, a few inches and a couple of dress sizes?\"\n\n\"I'm a lot stronger than she is, but what's your point? I was evading them, not trying to arm wrestle them.\"\n\nMichael closed the space between them in a blink. Before she knew what he was doing, he had picked her up by the waist and was holding her above him off the ground. \"All anyone needs to do is pick you up, and you're done. You are not invincible.\"\n\nHe couldn't see her rolling her eyes. \"Okay, Michael. I'll play your little game. I'll even refrain from kicking you in the face. How long do you think you can hold me like this?\"\n\nHe put her down on a nearby desk. \"My point is that you aren't King Kong.\"<br ><br >\"And I wasn't climbing skyscrapers in Manhattan. I was sneaking around a building with doped out blaze-heads in it. I wasn't even on the same floor as they were.\"\n\nMichael pinched the bridge of his nose. \"You're smart enough to know the risk you were taking, yet stupid enough to take it anyway. Why?\"\n\n\"I already told you why. I needed the tokens.\"\n\n\"Right. For medicine. Because you're the self-appointed town savior.\"\n\nHer face froze. She turned and walked to the door, intending to return to the conference room. He caught her before she got to the door.\n\n\"Mariah, I'm sorry. I don't know why I said that.\"\n\n\"Well, I do know why you said it. Now stop manhandling me.\"",
        "He let her snatch her arm away from him, but he put his hands on her shoulders. \"I'm sorry. It scares me to think of you doing those things. I didn't mean it like it sounded.\"\n\n\"I think you meant it exactly like it sounded. And you know what? If you didn't like the way things were going in town, you could have come out from behind your walls and done something about it instead of watching it through a camera. Your father didn't chain you to the wall. You had free will. If you had used your resources to get medicine for people, I wouldn't have been doing it. If you were so worried about what I was doing out there, why didn't you help?\"\n\nHe had known all along that she must have had thoughts like that, but hearing them hurt. \"Hurt\" didn't really begin to describe it. Her words ripped at him, knocked him down, and clawed at his belief in himself. They left him with a physical ache in his gut.\n\nUnshed tears burned Mariah's eyes. It was painful to see Michael hurting, no matter how richly he deserved it. He was always doing and saying things to hurt her. So why, when he finally felt a little bit bad about it, was she the one fighting back tears? Her friend was out there, suffering and in danger because Mariah was in the compound instead of out there where she belonged, and Michael chose this moment to pick a fight over things she did before she even met him. And he thought he loved her?\n\n\"I'm sorry,\" Michael whispered.\n\nMariah looked up at him, shaken. The apologies she was accustomed to receiving from Michael were nothing more than the required expression to smooth things over. They were just a social nicety, like saying \"excuse me,\" after a sneeze. This time, he sounded like he might genuinely feel remorse. She didn't know whether he was sorry he mocked her for doing something to help or if he was sorry because he never had. It wasn't something she should have to be thinking about right now.\n\n\"Michael, I\u2014\"\n\n\"We can talk about it later. Just please know that I am sorry.\"\n\n\"Thank you.\"\n\n\"There is one more thing, though. Why don't you think you had credit at Lois's shop?\"\n\n\"How could I have credit? I'm sure she would have given me a little, but I never asked for any. Why are you hung up on shop credit?\"\n\nHe sighed. \"Because I had arranged with Lois for you to have unlimited credit. It didn't occur to me that you wouldn't have used it.\"\n\nShe was taken aback, and unsure whether his gesture had been sweet or creepy. She decided it was both. There were a lot of people in town who had needed that help more than she did, but it was a generous impulse.\n\n\"Thank you. I didn't know.\"\n\nHe wrapped his arms around her and kissed her forehead. \"We'd better get back so we'll be there when Ezra finishes with Carruthers. When we get back in there, I want you to explain why you were stealing the tokens.\"\n\n\"Why?\" If he was embarrassed to be associating with a thief, that was his problem.\n\n\"Because you want to be able to work with the security team as we move forward on the project. Leaving them with a falsely unfavorable impression isn't going to help.\"\n\nShe realized he was right.  She didn't see anything wrong with siphoning their drug money, but other people might. People like Michael. Possibly, people like his security team.\n\n\"Okay, I'll tell them.\"\n\nWhen they got back to the conference room, Nate, Yvonne and Andy were looking over the floor plans Mariah had drawn. They had a few questions, like window height and what the interior walls were made of, but they seemed satisfied with the drawings. They were still looking at them when Ezra and Jack came back. Ezra took the drawings and made some notes on them.\n\n\"Carruthers confirmed that they do have a woman at the Lakehouse. Based on his physical description, I'm sure it's Sarah.\"\n\n\"Did you find out if she's okay?\" Mariah interrupted.\n\n\"No. He doesn't know anything more than the fact that they have her and are holding her in a bedroom on the top floor. I circled the bedroom on the drawing. Carruthers never saw her. The physical description he had was based on what somebody told him. When he left this morning, she was still on the top floor.\"\n\nMichael cleared his throat noisily.\n\n\"Oh. Uhm, it was brought to my attention,\" Mariah shot a glance at Michael, \"that I should mention why I was stealing tokens from the lake house. It was because courier tokens are the only way to buy medicine. You can't trade for it at the shop. People in town can't pay for medicine, and the doctor can't buy it without being paid. Hawley's crew bled the town dry of tokens, so I helped Hawley contribute to the medicine fund. To be clear, I'm not claiming I kept a separate account or that I never used a token for myself. I don't really use tokens much, so I never kept track. Anyway, that's why.\"\n\nJack grinned. \"I've never seen a more unrepentant thief. Honestly, Mariah, I wouldn't care if you took their tokens just to throw them in the river. It's great that they went to such a good use, but you certainly don't need to justify it as far as I'm concerned.\"\n\nNate didn't look very amused, and Ezra was studiedly neutral, but Yvonne and Andy were in agreement with Jack.\n\n\"Sorry for the interruption. Did Carruthers have any other useful information?\" Mariah asked.\n\n\"Nothing that's concretely applicable to what we have to do tonight. More of a wildcard. He confirmed that there is someone who's giving Hawley advice. He only knows the new guy as Dave. He's in his forties, brown hair, medium build, medium height. Carruthers can't remember what color eyes he has and can't remember any identifying marks. It really doesn't do us any good.\n\n\"Carruthers says Dave came to town about a month ago. He's staying in one of the cabins. I circled the cabin he's staying in on the drawing. Carruthers doesn't know where Dave came from or how he traveled here. He says Dave is Hawley's advisor, but he doesn't know what he is advising Hawley about. He confirmed that Dave gave them the radios, the telescope and the rope ladder they were using, which is something we need to consider further when this is over. Mariah hasn't even been here two whole weeks, but Dave already got those supplies. Unless he had them on the way for some other reason, it suggests an awfully short supply chain.\n\n\"Michael, if we get Sarah out of there without anyone noticing, I'd like to take a look at Dave's cabin, assuming he's not in it. I'd also like to try to get a look at Dave himself. Maybe we'll recognize him. I don't want to be paranoid, but the way he got supplies so fast makes me think there's a connection to the Elites.\"\n\nMichael nodded. \"I can't imagine what any of the Elites would want here, but we need to find out. Do what you think is best once Sarah's safe, but I want everyone back at the compound as soon as possible.\"\n\n\"So, what's the plan for the lake house?\" Nate asked.\n\n\"That's up for discussion, but Jack and I were talking on the way back up, and we were thinking that there's no reason to mess with anything but the second floor if we don't have to.\n\n\"It'll be dark in another couple of hours. Carruthers confirmed there aren't exterior lights. We can lift the sliding deck door off of its track whether or not the slide latch is locked and whether or not there's a stick in the track. The problem is that the deck is off of the bedroom Hawley uses when he's there.\n\n\"Carruthers says Hawley wasn't there this morning, but he doesn't know if Hawley is coming tonight or tomorrow. He doesn't know who or how many people will be there. He says it's usually only a few people there at a time except for the night of the party and the day after that. Dinner is every man for himself, but they all usually end up eating shortly before dark. If we get there just after dark, they may all be downstairs eating. Going in around dinner time increases the risk that someone will come up to bring food to Sarah while we're there, but waiting longer increases the risk of someone using the bedroom.\n\n\"I view the entry as the most dangerous part, so I'd rather gear our arrival toward getting in the deck door without being seen. The bedroom where they're keeping Sara is only two doors down. We won't even have to cross the top of the stairs if everything goes right. Her room is circled on the drawing.\n\n\"If we have time and opportunity, I'd like to make it look like she escaped on her own. If that's possible, we'll put the deck door back in the frame on our way back out. Once we're out, Nate and Jack, you'll check out the cabin. Nate, you know more faces around Elite security than any of us, and Jack, you know the newer ones. Wait for the rest of us to get out of the area, then see if you can lure him out and get a look at him. If you can satisfy yourselves that he's not there, take a look through the cabin.\n\n\"You guys know your business, but remember that you may be dealing with a professional. Don't take risks. If you get eyes on the guy, don't bother with his cabin. The identification or description you can provide is too valuable to do anything but bring it straight back to the staging point. We'll designate the amount of time we can wait once we get there.\"\n\nMariah spoke up. \"When do we leave?\"\n\nEzra took a strategic moment to study the drawings. Michael's hand clamped down on Mariah's wrist. \"Let's let them finalize the plan.\"\n\n\"But\u2014\"\n\n\"Come on.\"\n\nIt was obvious to Mariah that Michael was prepared to drag her out of the room in front of everyone, so she stood and walked out on her own. She paused at the door and turned back to the team. \"Thank you for doing this.\"\n\nAs soon as the elevator door closed, Mariah went off. In the short time it took to get from the second floor to the third, she shared quite a few of her opinions about Michael's \"paternalistic Neanderthalism,\" none of which seemed to trouble him.\n\n\"You knew perfectly well that I was not going to let you go. Did you really think I would change my mind just because you brought it up in front of everybody?\"\n\n\"But she's my friend!\" she argued, as he tugged her down the hall.\n\n\"Yes, that's why she's getting rescued.\"\n\n\"I have a right to go!\"\n\nHe stopped and backed her against the wall. \"What was the first condition of our arrangement?\"\n\n\"But this is different!\"\n\nMichael reached for her chin, but she tossed her head away. He put his hands against the wall on either side of her head and waited. Eventually, she looked up at him.\n\n\"What was the first condition?\"\n\n\"Listen to you about security. I get it, but this is different.\"\n\n\"You agreed to follow my instructions about security without question. Does that ring a bell? And how about the specific agreement that it applied to your personal security. Remember that?\"\n\n\"Yes, but\u2014\"\n\n\"No buts. What you did this morning already grossly violated the spirit of the agreement.\"\n\n\"You didn't give me any instructions that had anything to do with what happened this morning.\"\n\n\"That's because I didn't realize I needed to tell you not to get kidnapped. And I did tell you in the very beginning that you could only leave the compound on limited occasions, accompanied by a guard. But, just in case there's any confusion, I'm telling you now. Don't get kidnapped. Don't go outside the compound without my permission. Don't run with scissors.\"\n\nUnexpectedly, a good-humored smile broke over his face, catching her completely off guard. She was still trying to make sense of it when they arrived at her bedroom door. Inside, he sat on the bed and pulled her down beside him.\n\n\"Sweetheart, I know you're going to be very angry with me, but you can't go.\" He brushed her hair back and kissed her, gently at first and then more passionately. \"I do love you, whether you want to believe it or not. We're going to bring your friend back.\"\n\n\"What do you mean, 'we?'\"\n\nHe spotted Mariah's dressing gown on the bed beside them. While she was distracted, he pulled the belt off, looped it and made a slipknot.\n\n\"We, as in Ezra, Nate, Andy\u2014\" She saw the loop and jumped up, but he caught her. \"Yvonne, Jack, and me,\" he finished, as he secured the belt around her wrist. He stood in front of her, trapping her against the bed while he tied the other end of the belt to the bedpost. She started tugging at it, but he held her wrists.\n\n\"What are you doing? You can't just leave me tied to the bed? Why do you get to go and I don't?\"\n\n\"I'm doing this because I don't trust you not to try to sneak out. Can you promise that you won't sneak out if I let you loose?\"\n\nShe scowled at him.\n\n\"That's what I thought.\"\n\n\"Why do you get to go?\"\n\n\"Because I'm making the rules. Now be good for me, kitten. It's an easy knot. You'll be able to get yourself untied in no time. I want you to have a glass of wine and relax in your room. I promise we'll be back as soon as we can, and we'll bring Sarah to you.\"\n\nHe kissed her forehead and was out the door a second later.\n\n\"Michael!\"\n\nShe scrabbled at the knot. \"Michael!\"\n\nHe hurried down the hall. He would be lucky to make it to the end before she got loose. At the end of the hall, he flipped up a panel hidden on the floor six feet outside the entrance to his private wing. A similar panel was hidden in the floor on the other side of the entrance, about fifteen feet down the hall. The panel he opened held a keypad, two dials, and a key fob with a large button. He slid the fob down the floor of the hall, then turned one dial all the way and the other two-thirds of the way. Panels in the ceiling and floor flipped out and two motorized security gates rolled down over the entrance to his wing. The inner gate was a flexible grate. The outer gate was made of horizontal steel panels.\n\nAs the gates came down, he could hear Mariah running down the hall. When she saw the gates lowering, she stopped. The grated inner gate came all the way down and locked into a track on the floor. The outer gate stopped two-thirds of the way down. He knelt down beside it.\n\n\"Sweetheart, there's a fob in the hallway. I want you to come get it.\"\n\nShe was spitting mad, but curious enough about the fob to come pick it up.\n\n\"The button on that fob is a panic button. If you press that button, the second gate will come all the way down. Do you understand?\"\n\nShe pressed the button. Michael stepped back as the second gate came down and locked into the floor. He hadn't expected her to do that. He had activated the inner gate to make sure she stayed in his wing, and partially lowered the outer gate so it would close quickly if she pressed the button. He had hoped that leaving the outer gate partially up might make her feel better about being locked in. Apparently not.\n\nWhen he got to the second floor, he went to the security office and flipped the switch to close the steel shutters over all the windows in the house. He radioed the rest of the staff.\n\n\"We've got something going on that everyone needs to know about. Could each of you confirm you're receiving?\"\n\nHe continued after Paula, Seth, Marcus, Daniel, and Amy confirmed they were listening. \"As you know, some thugs attempted to abduct Mariah this morning. They're part of a local gang, and we found out they've abducted another woman. The security team and I will be leaving shortly to get her away from them. We'll be bringing her back here until we figure out what to do next.\n\n\"The house will be in lockdown. Mariah's in my wing, and it's already secured. When we're ready to leave, we'll activate the hall gates on all floors. I suggest returning to your quarters or wherever you want to spend lockdown. Please make sure you have your backup radios with you and review the codes for the gates in case you need to open them. I'd also like a volunteer to man the security office, just so someone can monitor the video feeds.\"\n\nSeth volunteered, and everyone else chimed in with \"good luck,\" or \"be careful.\" Michael's father had run lockdown drills for years out of paranoia. Michael never expected them to actually be useful. When he walked back to the conference room, everyone looked perplexed.\n\n\"Are you sure you want to come, Michael?\" Ezra asked. Except for this morning, he couldn't remember the last time Michael left the compound to go anywhere but the old airfield or to Quinland's complex in Bluffdale.\n\n\"Yes. I'm not going to send the five of you out there by yourselves. I have complete confidence in you all, but I'd feel better being there in case I can give you a hand with something. I'll stay out of the way if that's what you want, but I'm going to be there if you need me.\"\n\nEzra nodded briskly. He told himself that he must be getting soft. This was the second time today he'd almost gone misty-eyed over the way Michael was stepping up.\n\nJack broke the silence. \"Thanks, man.\" The others added their thanks, except for Nate, who just shook his head.\n\nThey spent a few minutes reviewing the plan before everyone split up to get into their gear. Michael was fortunate to have a couple of spare sets of fatigues and body armor in the armory. He had forgotten to get his before he locked down his wing, and there was no way he was going back in there to face Mariah again until he had Sarah with him. When everyone else was suited up, they joined him in the armory. Ezra found a pistol for him that was similar to the one he'd left in his bedroom. Michael wondered what Nate would say if he knew he left an angry Mariah locked up with a gun and ammunition.\n\nEzra handed out night vision goggles, mics, and earpieces to everyone. They paired up to smear the sticks of camo paint over each other's faces, ears and necks. When they finished, Michael wasn't sure whether they looked fearsome or ridiculous. Everyone gave their radios, mics, earpieces, and weapons a final check, and then they were ready to go. When they got to the garage, they radioed Seth to lock down the house.\n\nThey drove out with two jeeps. The lake house was just past the edge of town, but it was isolated by the geography. Three Notch Road was a former state highway, turned over to county maintenance decades ago when a newer, straighter highway was built through town. It forked off from the newer highway and curved around the lake outside of town, then rejoined the newer highway on the other side of the lake.\n\n<br >Shortly before they turned onto Three Notch Road, they turned off their headlights and maintained radio silence. There was no way of knowing what sort of radio equipment \"Dave\" might be providing, and they couldn't risk being overheard and alerting Hawley's group before they even got to the lake house. When they reached the site, they would use the radios as needed with mics and earphones.\n\nThey parked in an old lay-by where people used to park when they fished. It was less than a quarter of a mile from the lake house, but the trees between the lay-by and the lake house ensured that even in daylight, it couldn't have been seen from the house. As they approached through the woods, they didn't see any indications of perimeter alarms.\n\nWhen they neared the lake house, they stopped for a final reconnaissance with the night vision goggles. There was no activity around the cabins. The lake house itself was lit well enough that they had to switch off the night vision to look at it. Some of the windows on the first floor of the house were lit by firelight. A smaller point of light, presumably a lantern, lit up a first-floor window near the back of the house. No lights were visible on the second floor.\n\nWhen they reached the deck on the back of the building, Nate stayed near the foot of the stairs. Jack snuck up the stairs first and used night vision to look into the dark bedroom. When he gave the all-clear, the others joined him on the deck. Ezra eased the sliding door out of its tracks and set it aside. Michael had been chosen to take the position on the outside of the deck door.",
        "Ezra, Yvonne, Andy and Jack crept into the bedroom. They crouched listening at the bedroom door for several minutes, but other than their own breathing, the only sounds were from downstairs. Yvonne eased the door open enough to look through it. Nobody was in the hall. The door started creaking, so she quickly pulled it open the rest of the way. Even if the creak was a little louder that way, a short creak would be more easily dismissed than a drawn-out creak.\n\nThey waited again, but the sounds from the first floor didn't change. Desultory conversation filtered up from two men in the vicinity of the fireplace. Occasional clinking sounds from the kitchen suggested a third man, but they didn't hear any other voices. There weren't any sounds of activity from the back corner of the house where they'd seen the lantern in the window.\n\nOn Ezra's signal, Yvonne slipped into the hallway. Ezra followed behind her. Jack followed Ezra. Andy remained inside the master bedroom's door. When she reached the second door down the hall, Yvonne tried the doorknob. She exchanged stunned looks with Ezra and Jack when the knob turned freely. Jack eased past Yvonne down the hall to cover the top of the stairs. Yvonne pushed the door inward and crept in first. Since there were no women in Hawley's group, they hoped her appearance might be reassuring to Sarah.\n\nSarah was secured to the bed by a single chain around her ankle. She appeared to be asleep. Yvonne crawled toward the bed while Ezra worked his way to a position on the opposite wall. Then they heard footsteps on the stairs. Yvonne slid under the bed. Ezra stood up against the wall, partially shielded from the door by a tall dresser. The steps on the stairs woke Sarah. Even in her sleep, she must have been listening for that sound.\n\nSarah saw Ezra right away. Her eyes widened and she clutched at the sheet on the bed. He quickly put his finger to his lips to signal her not to speak, and was relieved when she gave him a little nod. In frozen silence, they all listened to the footsteps. When the steps reached the top of the stairs, Ezra and Yvonne waited to hear signs that Jack had subdued the man. Instead, the footsteps continued toward the opposite end of the hall. A moment later, they could hear a groan as the man took a noisy piss.\n\nThe bedroom door opened and Jack backed in. Sarah's eyes widened, but Ezra waved to get her attention and put his finger to his lips again. Without turning around or taking his eyes off the hallway, Jack whispered, \"He's drunk. Too drunk to have the sense to stay quiet if I grab him. He just walked by without even noticing me. We could let him go back downstairs. Orders?\"\n\nEzra whispered. \"If he walks past the stairs towards us, use a chokehold and drag him in here. If he goes downstairs, let him go.\"\n\nEveryone waited in silence. Ezra looked at Sarah and gave her what he hoped was a reassuring smile, but he was afraid that it might not seem very friendly with all the face paint. She tried to smile back, but she was plainly terrified. He saw the reflection of tear tracks on her cheeks and wished they didn't need to let the noisy pisser go back downstairs unmolested. None of these guys should go unpunished.\n\nThey heard the footsteps again and held their collective breath as the drunk approached. He stopped. A few seconds later, they heard his footstep on the stair. When he reached the bottom of the stairs, they heard him shuffling off to the back corner of the house. He must have been the person who had the lantern back there. That meant there were at least four people downstairs. Jack slipped back into the hall to take up his position outside the door.\n\nEzra whispered to Sarah. \"There's a lady with us. Don't be afraid.\"\n\nWith that, Yvonne crawled out from under the bed. Sarah gasped and jumped further back on the bed. Ezra cringed. He should have handled that better. Sarah was holding her hand over her mouth and her eyes were wide as saucers. She looked petrified, probably afraid someone might have heard her gasp.\n\n\"Don't worry, Sarah,\" Ezra whispered. \"Nobody could have heard you. This is Yvonne.\"\n\nSarah looked over to Yvonne and grimaced. She was probably trying to smile, Ezra thought, but she was just too scared. He gestured to Yvonne, and they switched places. He knelt beside the bed so he could whisper to Sarah. \"I'm Ezra. We're Mariah's friends.\"\n\nSarah looked hopeful. \"Is Mariah okay?\"\n\nEzra nodded. \"She wanted to be here, but it wasn't safe for her to come. We need to get you free of the chain. Would you like Yvonne to help you?\"\n\nSarah looked over to Yvonne. She was still spooked by Yvonne's sudden appearance from beneath the bed. She looked back at Ezra, pleading with her eyes.\n\n\"Do you want me to help you?\"\n\nShe nodded.\n\n\"Okay. We need to hurry, so I'm going to have to touch your ankle a little bit where the chain is. Are you ready for that?\" He didn't' know what had happened to Sarah since being abducted, and didn't want to make her panic.\n\n\"Okay,\" she whispered.\n\nHe took a look at the lock. They hadn't even bothered with a manacle. The lock was looped directly through two links of the chain. Even in the dark, he could see that her skin was raw and abraded where the chin had rubbed it. It looked like she had tried to free herself. The heavy links of chain looked obscene around her delicate ankle.\n\nThe lock itself was just a basic padlock. He could have picked it with a couple of bobby pins, or even bent paperclips, but he didn't have to improvise. He pulled a kit from one of his pockets and selected a small tension wrench and a single-pin lockpick.\n\nHe inserted the L-shaped tension wrench into the slot for the key. It would turn the lock once the pins were lifted, so he kept pressure on it with one hand, like he was turning a key. He slid the pick in the keyhole next to the tension wrench, with the pick's curved end pointing up in the same direction that the teeth on the key would have pointed. There were four pins. All he had to do was rock the pick so that the pointed end of the pick pushed each successive pin up in its channel until it caught on the cylinder. When the fourth pin caught, the tension wrench turned the lock. The entire process took less than thirty seconds.\n\nAs quietly as possible, Ezra removed the chain and left it laying on the bed. Sarah's hands flew to her ankle. He saw the tears shimmering in her eyes when she whispered her thanks. Before he put his kit away, he took a couple of bobby pins from it, twisted them, and left them beside the lock. If everything went right, Hawley's men would assume Sarah picked the lock herself.\n\n\"Can you walk?\"\n\nShe stood beside the bed, but stumbled. Ezra steadied her. She leaned close to whisper to him.\n\n\"My foot's asleep from the chain.\"\n\nHis jaw clenched and his teeth ground together. He was tempted to burn the whole fucking house down once they got her out.\n\n\"That's okay. How about this? You can get on my back and we'll get out of here. Do you think you can do that?\"\n\nSarah's lip was trembling, but she nodded her agreement. Ezra unstrapped the gear from his back and handed it to Yvonne. He crouched down and Sarah climbed onto his back. She didn't weigh more than a full pack.\n\n\"Okay, Sarah. We're going to leave now. Put your chin on my shoulder and tighten your arms around my neck. You won't hurt me, so just hold on as tight as you can. Same thing for your legs. Just squeeze them around me as tight as you can. If you feel like you're going to let go or fall, just whisper to me. Ready?\"\n\n\"Ready.\"\n\nWhen they got to the door, Yvonne went first and Jack took up the rear. They closed the door behind them to delay discovery that Sarah was gone. They made it to the sliding door in the master bedroom without incident, and Andy fell in behind them. Jack took the broomstick out of the door's track so it would look like Sarah got out that way.\n\nWhen they were out, Ezra motioned them all close. \"Jack, wait for us to get to the tree line before you set the door back in, just in case it makes noise. Then join Nate and head for Dave's cabin. If you can't draw him out or get into the cabin in twenty minutes, come back to the vehicles. If you're not back by,\" he checked his watch, \"20:41, Michael will drive Sarah back and Yvonne and I will come back for you.\"\n\nJack nodded. Ezra carried Sarah down the stairs, followed by Yvonne, Michael and Andy. Nate gave them a nod as they set out for the trees. The sky was clear and the moon had risen while they were in the house. They were uncomfortably visible in the moonlight, but they didn't have far to go. They started running after they were safely within the cover of the trees. In a matter of minutes, they were back at the lay-by.\n\nMichael took the driver's seat in one of the jeeps. Ezra crouched to let Sarah get down, then lifted her into the jeep. \"Sarah, this is Michael. Mariah's been staying with him.\"\n\n\"Hi, Michael.\" It came out in a croak, and she started coughing. Her throat was dry, and it was the first time she had spoken above a whisper in a long time. She drank eagerly from the canteen Yvonne offered her. Ezra wondered how long it had been since those assholes gave her any water. He quickly looked away so his anger wouldn't frighten Sarah. The last thing she needed was an angry-looking man in face paint looming over her.\n\nSarah handed the canteen back to Yvonne. \"Thank you. I was thirsty.\" Her voice was soft and mellow now, with only a hint of roughness remaining.\n\nEzra turned back to Sarah. \"Yvonne and I need to stay outside the jeep to keep an eye out for the others. Can you stay in here and keep Michael company?\"\n\n\"Okay,\" she agreed, but she looked frightened. She wasn't afraid of Michael. She was just nervous about being away from Ezra because she felt safe with him.\n\n\"Andy, take the wheel in the other jeep. Don't start it until we see them, but be ready.\"\n\nOnce Michael was alone in the jeep with Sarah, he was at a loss for something to say. Sarah spoke first. \"Ezra said Mariah's safe.\"\n\n\"Yes, she is. The house is locked up tight until we get back to it.\" He thought about the way he'd left Mariah. She was safe, but definitely not happy. He hoped she would forgive him when she saw Sarah safe and sound.\n\n\"What about Henry? Those guys were asking about Henry.\"\n\n\"Yes, Henry's with Mariah. I'm not sure how much you know about what's happened, but they never did have their hands on Henry. Julia and Duncan are safe at home, too. So are the mouse and the cricket.\"\n\n\"Julia and Duncan are at home? At Mariah's house?\" She was immediately alarmed.\n\n\"No, I meant my house. All of them are with Mariah at my house. That's where we're going to go as soon as we get out of here, and you can see them all for yourself.\"\n\nA little later, he asked, \"Are you okay? Do you need a doctor or anything when we get back?\"\n\n\"I'm just shaken up pretty bad. My ankle hurts, but besides that, I'm okay.\"\n\n\"Nate's a medic. You might not have seen him. He was near the bottom of the stairs when we came out. He can look at your ankle for you.\"\n\n\"Thank you.\"\n\nHe was relieved that Sarah didn't seem to share Mariah's habit of avoiding any sort of assistance. It was nice to be able to just help her. Seeing her in the backseat, Michael understood why Mariah kept saying Sarah was tiny. It wasn't just that she was petite. She was so delicate that she looked fragile.\n\n\"Are you hungry?\"\n\n\"Yes. It's been a while since I've eaten.\"\n\n\"I'm sorry. We'll get you something to snack on as soon as we get back. Then Marcus can fix a real meal for you. He's a really good cook. Mariah calls him my kitchen wizard.\"\n\nSarah smiled. \"I'll be glad to see Mariah. I've been so worried about her.\"\n\n\"She'll be glad to see you, too. As soon as she realized that Hawley's men must have you, she started trying to get you rescued.\"\n\n\"Did they try to get her? I don't know what happened. I only know they wanted to get her.\"\n\n\"They tried earlier today. They made her think they had Henry, so she went to them, but we caught them right away. Henry was safe the whole time, but she didn't know that.\"\n\nSarah burst into tears. \"It's my fault! I told them about Henry! I told them there was nothing they could do to get Mariah because her pets were the only thing she would come for, and they were safe inside the wall.\"\n\n\"Sarah, that's not your fault. You didn't have any reason to think they would find a way to use that information. It's their fault, not yours. Besides, they didn't get her. You'll see her very soon without a scratch on her.\"\n\nShe kept crying anyway. Ezra opened the door and saw Sarah crying. He glared accusingly at Michael. Michael held his hands up helplessly.\n\n\"Get the engine started. They'll be here in a few seconds.\" Nate and Jack had made it past the tree line and were running for the vehicles. When they reached the jeeps, Nate climbed into the passenger's seat beside Michael. Jack and Yvonne ran to the jeep Andy was driving. Ezra climbed in beside Sarah. He helped her with her seatbelt as they drove away. Her tears subsided to a few sniffles.\n\n\"Did you see him, Nate?\" Ezra wanted to know if they had identified \"Dave.\"\n\n\"Sure did. He came out after we threw gravel at the window. He's Burt Lansing. Last I knew, he was working for Gregory Quinlan.\"\n\nMichael's hands tightened on the steering wheel. They drove in silence until they neared the old airfield.\n\nEzra cleared his throat uncomfortably. \"Sarah, I'm going to have to ask you to close your eyes and lean forward over your knees so you can't see anything. I'm sorry about it, but the way into the compound is something we have to keep secret.\"\n\n\"It's okay. I understand.\"\n\n\"Thank you. It will just be a couple of minutes.\" Ezra patted her shoulder reassuringly.\n\nAs soon as they arrived in the garage, Ezra told Sarah she could open her eyes. As they were getting out of the vehicles, he radioed everyone on the regular channel.\n\n\"We're back. Seth, you can take the house out of lockdown.\"\n\nEzra looked surprised when various cheers and whoops came over the radio.\n\n\"Did you find her?\" Amy asked.\n\n\"Yes, Sarah's with us.\"\n\n\"Are you okay, Michael? Is everyone okay?\" Paula asked.\n\n\"Everyone's fine. It went off without a hitch,\" Ezra assured her.\n\nWhen they got out of the car, Ezra began giving instructions. \"Yvonne, take over from Seth at the video feeds once you've had a chance to clean up. Jack and Andy, once you guys have cleaned up, get that ass\u2014\" he glanced at Sarah, \"uh, get Carruthers to a bathroom. It looks like we're going to have to keep him overnight, so get him something to eat and drink, too. Stay with him until he's done eating. I don't want dishes or utensils left in there with him. He'll have to make do with the cot that's bolted to the wall without any sheets or blankets. You can leave him unrestrained in the room for the night, but we'll have to schedule periodic checks. I don't want him to know that we paid his buddies a visit, so make sure you don't have any camo paint left on you when he sees you. Since I asked him earlier about the layout up at the lake, I don't want him putting two and two together until after we question him again.\"\n\nWhen they all got into the elevator, Sarah thanked them. \"I didn't think anyone would come for me. I was so scared. They were having a big party tomorrow, and they were going to\u2014\"\n\nEzra interrupted. \"Mariah explained the parties.\"\n\n\"Then I hope you know how grateful I am.\"\n\nThe elevator door opened, and Mariah pounced. \"Sarah!\"\n\nShe drew her friend out of the elevator and looked her over. \"Can I hug you? I don't want to hurt you.\"\n\nSarah threw her arms around Mariah and cried against her shoulder. The others filed out of the elevator, stepping around the two women. Paula arrived a few seconds later, fussing like a mother hen with a new chick to care for. She shooed the security team away, but Ezra hovered anxiously nearby. The other members of the household made appearances, only to be shooed off by Paula. Michael called Marcus back before Paula chased him away.\n\n\"Marcus, can you make something for Sarah? Maybe you can find a snack now and then cook her something?\"\n\n\"I'll be happy to.\"\n\n\"Sarah?\" Marcus tried to get her attention to find out what she would like, but she was still crying.\n\n\"Mariah? What does Sarah like? For a snack and for a meal?\"\n\nMariah tried to remember. She moved to Ashland and met Sarah during the early days of The Fall. Intermittent food shortages were already a problem. What she was used to seeing Sarah eat had very little to do with what Sarah actually liked.\n\n\"Let's try some fruit and bread, and then I can let you know what else she wants.\"\n\nThe room was finally cleared of everyone besides Sarah, Mariah, Paula, Ezra, Nate and Michael. Nate was standing off to the side, waiting to check Sarah's ankle. Michael leaned against the wall and took a deep breath. The nervous energy keeping him on edge was dissipating, leaving him feeling strangely flat, like someone coming down from a stimulating but unpleasant high.\n\nHe wondered how Mariah had gotten out of his wing. She couldn't possibly have guessed the reset code for the digital console in his room, so she must have found the hidden panel in the floor of the hallway. But how did she know to look for it? He ground the heels of his palms against his eyes. He was suddenly so tired.\n\nWhen he looked back up, Mariah was looking at him over Sarah's shoulder. She smiled when he met her eyes. \"Michael, can we get Sarah upstairs?\"\n\n\"Of course, but maybe Nate better look at her ankle first.\"\n\nMariah disengaged herself from Sarah to look. \"Sarah! Your ankle!\"\n\n\"They had her chained by her ankle,\" Ezra muttered.\n\nMariah led Sarah to a bench seat to sit down, then knelt down in front of her and took her hands, trying to get her attention. Sarah still hadn't stopped crying.\n\n\"Sarah, you're safe now.\"\n\nSarah only cried harder.\n\n\"She thinks it's her fault they claimed they had Henry,\" Michael explained.\n\n\"Sarah, is that what it is? You think it's your fault?\"<br >\n\nSarah nodded and tried to talk between sobs and sniffles. \"When they came looking for you, I said there was nothing they could do because you were inside the estate. They said that's why they were taking me. They were going to get you to trade yourself for me. I told them they were too late, that the only thing you would have come out for was Henry, and he was already inside. I was just trying to make them give up. I'm sorry.\"\n\nMariah squeezed Sarah's hands. \"You didn't do anything wrong. There's no way you could have guessed they would pretend to have Henry. Besides, if they didn't do that, they would only have gone back to their original plan. Nothing you could have said would have stopped them. They were always going to try to get me, and it would have turned out the same. If you didn't tell them Henry's name, we never would have known they had you. I'm sorry you've gone through all this because of me, Sarah. You have absolutely nothing to apologize for.\"\n\n\"Neither do you.\"\n\nMariah gave her a grin. \"Okay. Neither of us needs to be sorry, and we'll blame it on, hmmm... I dunno... the jackasses who keep kidnapping people?\"\n\nSarah smiled a little. \"They're going to be confused when they find out I'm gone. Ezra made it look like I picked the lock and got out by myself.\" She glanced over at Ezra, who gave her a comforting smile.\n\n\"Can Nate take a look at your ankle? He's a medic.\" Mariah almost asked Sarah if she had any other injuries, but decided to wait until they had some privacy. She was afraid Sarah might have injuries of a more personal nature, and the thought was making her sick to her stomach.\n\nWhile Nate was looking at Sarah's ankle, Mariah introduced Paula. Paula kept Sarah talking during the examination, so Mariah stepped out of the way and stood against the wall next to Michael. It took him by surprise when she slipped her hand into his. He had been expecting to be on the receiving end of her wrath for locking her in his private wing before he left.",
        "She squeezed his hand. \"Thank you.\"\n\nHe drew her closer and put his arm around her. \"You're welcome.\"\n\nNate finished his examination. \"Your ankle doesn't seem to be sprained, so there's no reason you can't walk on it if you're able. It's going to hurt for a while. You have some very nasty bruises from the chain, and the abrasions are going to be raw for a little while. There are some places where it looks like your skin got caught between links in the chain. As soon as you've had a chance to bathe, have Michael call me and I'll bandage your ankle. You can wash it with regular soap and water, but be gentle, and don't touch it with the towel when you dry off.\"\n\n\"Thank you.\"\n\nNate flashed her a rare smile.\n\nMarcus arrived with a dish of sliced fruit and bread, and Paula took charge of it. Eager to get Sarah upstairs, Mariah led her to the elevator, accompanied by Paula and Michael. Ezra stepped in, too, without a word, and walked with them to Mariah's bedroom.\n\nSarah was barely settled on the small couch in Mariah's sitting area when Henry came over to greet her with enthusiastic tail wags. Once he got a kiss, he started sniffing her all over. Sarah had to discourage him from licking her ankle, but she gave him a big hug. \"Such a sweet boy trying to take care of my boo-boo.\" Henry's tail thumped. He couldn't resist praise.\n\nJulia and Duncan were not far behind Henry. Julia jumped up beside Sarah and rubbed her cheek on Sarah's arm. Duncan jumped on the back of the couch and tried to renew his favorite game to play with Sarah. From the first time Duncan met her, he had been trying to sit on her head. Neither Sarah nor Mariah had any idea why. It was a game for him, and he would go to any lengths to play it. Mariah shooed him off.\n\n\"Are Mister Barnaby and Quincy here, too?\" Sarah asked. As the designated babysitter for Mariah's \"kids,\" she was familiar with them all.\n\n\"Right over there on the shelf. Can you believe Michael doesn't think Quincy looks like a Quincy?\"\n\nSarah turned to Michael. \"What did you think his name should be?\"\n\nMichael was at a loss. \"He's umm... I'm not sure, actually. He's the first cricket I've ever been introduced to.\"\n\nWhile Henry, Duncan, and Julia were greeting Sarah, Paula had bustled off to the kitchenette for a tray, napkins, and some water. She returned just in time to catch the end of the conversation about Quincy. She tutted at Michael. \"Of course he looks like a Quincy.\"\n\nMichael raised his hands and looked to Ezra. \"Going to help me out here?\"\n\nEzra shook his head. \"Sorry. You're on your own.\"\n\nPaula pulled an end table in front of Sara and arranged the fruit and bread on the tray. Sarah thanked her and drank half the glass of water before she started with the fruit. She had been so thirsty, even after the water Yvonne gave her in the jeep.\n\n\"What would you like for dinner?\" Mariah asked. \"Marcus is waiting to make something for you. I didn't get a chance to introduce you, but you'll like him.\"\n\n\"Oh, this is more than enough. It's really good, too.\"\n\n\"I doubt anyone is going to let you get away with just eating that. They are very insistent on feeding people around here. Somebody will probably start chasing you around with a dish of food, so you might as well decide what you want in that dish.\"\n\nSarah was already shaking her head when Ezra spoke up. \"You've been through a terrible ordeal, Sarah. You need to keep your strength up.\"\n\nSarah looked to Ezra. \"Okay. What do you think I should have?\"\n\nEzra hadn't thought beyond making sure she ate something. \"I caught some trout this morning that I don't think Marcus ever got a chance to use. I like it when he pan fries it.\"\n\n\"That sounds good.\"\n\nPaula called Marcus on the house phone to let him know, then turned back to the group. \"The poor girl doesn't need you guys staring at her while she eats.\"\n\nMariah interceded. \"Actually, I was just about to suggest that Michael and Ezra clean up and wash their face paint off. Ezra can use my shower if someone could get him a change of clothes.\"\n\n<br >Paula started to ask why Ezra couldn't use his own shower, but she caught Mariah's subtle shake of her head. Instead, she offered to get a change of clothes from Ezra's quarters. Ezra thanked her gruffly.\n\n<br >The door had just closed behind Paula when Mariah jumped up, saying she'd forgotten to ask Paula for something. She caught up with Paula in the hall.\n\n\"What was that all about, sweetie?\" Paula asked Mariah.\n\n\"I'm not sure exactly, but Ezra is following Sarah around like her personal guard and she seems to feel safer when he's with her. She keeps checking to see where he is.\"\n\n\"The poor little thing. Well, Ezra wouldn't let anything happen to her, that's for sure. She couldn't be safer. We'll just do what we can to let her stay with him as long as she needs to. Have you thought about where she'll sleep tonight?\"<br ><br >\"I thought she could just sleep with me. Even if there was a spare bedroom made up, she probably shouldn't be by herself tonight.\"\n\nPaula nodded approvingly. \"Mind you, if Ezra insists on staying in your bedroom, I think Michael's going to have something to say about it.\"\n\nMariah rolled her eyes. \"I'm sure he would. We'll think of something. Maybe she'll feel safe enough to be away from him by then.\"\n\nWhen Mariah returned, Ezra was telling Sarah a story about a nun, a highwayman, and a leprechaun. Mariah stayed close, but Sarah's attention was on Ezra. When Paula came back with Ezra's clothes, he was just finishing a story about the Flying Dutchman and a racehorse named Cigar. Marcus arrived with Sarah's dinner, and Mariah made the appropriate introductions, feeling a bit like her bedroom had become Grand Central Station. Ezra waited for Sarah to start eating before he took his shower.\n\nWhile Sarah ate, Maria tried to put her at ease. She didn't want to push Sarah to talk about anything too private while everyone kept going in and out.\n\n\"You must be exhausted.\"\n\nSarah nodded. \"I am. Not really sleepy, but just so very tired. I slept a lot while they had me, but it was like the sleep didn't do me any good.\"\n\n\"When you're finished eating, let's get you comfortable. Wait until you see the shower and bathtub! The bathtub is huge, and there's enough hot water to fill it all the way up if you want a bath. If you want a shower, you'll love the water pressure.\"\n\n\"There's no way I would turn down a chance to sit in a bathtub full of hot water.\"\n\n\"It gets better. There's shampoo, conditioner, and soap from before The Fall.\"\n\nSarah's eyes got big. \"You're kidding. Where did they get that?\"\n\nMariah wasn't sure how much she was allowed to tell Sarah, so she just gave a non-committal shrug. She was saved from trying to explain further, because Ezra came back, freshly showered and in clean clothes. It was the first time Sarah had seen him without the camouflage face paint. There was a silence that went unnoticed by either Ezra or Sarah. Mariah felt like she was intruding on a private moment.\n\nMariah hadn't thought about it before, but Ezra was a striking man. His dark hair was prematurely grayed in just the way that inevitably made people think, \"distinguished.\" His gray eyes were kind, with tiny lines at the outer corners that only appeared when he smiled. He had a firm jaw, broad forehead, and a generally good-natured look. There was steel beneath the affability, though, and an ever-present watchfulness. Physically, he was every inch the guardian, with a strong build and disciplined bearing. It was no wonder Sarah felt safer around Ezra, especially since he seemed to have appointed himself her protector.\n\nMariah cleared her throat. \"Ezra, would you mind keeping Sarah company while I find something for her to wear?\"\n\n\"My pleasure.\"\n\nIn the closet, Mariah reviewed the clothing options. The pajamas Michael provided her were variations on the same theme: skimpy shorts and a top that was cropped, practically transparent, skin-tight, or all of the above. For once, that might be a good thing. Since the pajamas were close-fitting for Mariah, they shouldn't be too big for Sarah. All of Mariah's dresses would be too big for Sarah, so they would just have to get her clothes washed and dried before morning.\n\nAs she took the pajamas to the bathroom, she overheard Ezra assuring Sarah of the safety of the compound. She stayed in the bathroom while the tub filled, so Sarah and Ezra could have more time to talk. It was a little concerning that Sarah might be becoming too attached to someone right after her trauma, but on the whole, it seemed like a good thing. Mariah didn't believe Ezra was the type of man who would take advantage of a situation like that.\n\nEzra was keeping Sarah entertained with more funny stories when Mariah came back to let Sarah know her bath was ready. It was obvious that Ezra didn't want to leave yet, and he looked rather awkward without a reason to be there.\n\n\"Ezra, would you mind sticking around for a bit? I'd like to get Sarah's clothes washed tonight. I've got pajamas for her to change into, and I was hoping you could get her clothes to Paula to wash.\"\n\n<br >\"I can just put them in the wash myself if you hand them out to me.\"\n\n\"Thanks, Ezra.\"\n\nSarah was stunned by the bathroom. She was trying to look at everything at once, but her eyes kept going back to the tub. \"Bubble bath!\" she exclaimed.\n\nMariah nodded. \"Told you that you wouldn't believe it. You'll find all the soap and shampoo and conditioner on the ledge at the end of the tub. There are towels all over the place, but I put one on the bar next to the tub for you. Can you think of anything else you need?\"\n\nSarah shook her head. \"No, but would you mind staying with me? I don't really want to be alone.\"\n\n\"Of course I don't mind. It will give us a chance to talk, anyway. I haven't had a moment alone with you since you got here.\"\n\nAfter Sarah sank into the hot bath with a deep sigh of enjoyment, Mariah gathered up her clothes and took them to Michael. He took them and hurried off, probably eager to get back and stare at the bathroom door.\n\nShe sat on the ledge at the end of the tub while Sarah soaked in the hot water.\n\n\"Nice, huh?\"\n\nSarah kicked some water up at her. \"Nice? You've been bathing like a princess and you call it 'nice?' No wonder you're staying here.\"\n\nMariah stuck her tongue out and they both laughed.\n\n\"Yeah, this place is ridiculous.\" She wished she could tell Sarah why she'd been living in luxury instead of being back out there, doing something to contribute.\n\n\"So, I gather this is Michael's house? I thought Cameron Kincaid owned it. Is he still here?\"\n\n\"No, Cameron died. Michael is his son.\"\n\n\"So are you and Michael...?\"\n\nMariah sighed. \"It's complicated.\"\n\n\"But you're sleeping with him, right?\"\n\nMariah rolled her eyes at Sarah. \"You're incorrigible. Yes, I'm sleeping with him.\"\n\n\"He's pretty cute. You guys look good together.\"\n\n\"He's too pretty,\" Mariah said, more harshly than she intended. \"Sorry, I don't mean to snap. He's just really aggravating. \"\n\nSarah grinned. \"Sounds like you guys are serious, if you get that aggravated with him. I won't pester you about it, though.\"\n\n\"Well, while we're talking about uncomfortable subjects, I feel like I need to ask about what happened to you. I've got some stone seed root if you need it.\"\n\n\"Stone seed root?\"\n\n\"To keep from getting pregnant.\"\n\n\"Oh, you mean...\" Sarah realized what Mariah must think. \"No, they didn't rape me. Two of them argued about it, and one of them said there was a rule that Josh Hawley got to go first. If he had come to the lake house before Ezra did\u2014\" She broke down crying.\n\nMariah moved to sit on the edge of the tub beside her and stroked her hair. \"You're safe now. Ezra's right outside the door. The house is locked up and there are cameras in the wall around the compound. Yvonne is watching the video from the cameras to make sure nobody tries to come in.\"\n\nSarah sniffed. \"I'm not afraid that something will happen now. I'm just still afraid of what could have happened.\"\n\n\"I can't imagine what it was like for you. How long did they have you?\"\n\n\"Five days.\"\n\n\"God, Sarah. I'm so sorry. I had no idea until today.\"\n\n\"You couldn't have known. Like you said, everything they've done is their fault, not ours.\"\n\nThey chatted about lighter topics while Sarah finished her bath. When she was done, Mariah stepped out to give her some privacy. Michael had joined Ezra in the sitting area. Having determined that Michael was back in relatively good graces, Henry was laying on the couch resting his chin on Michael's leg. Ezra and Michael were eating peanut butter sandwiches. Michael handed one to Mariah.\n\n\"Thanks. I was getting hungry.\" She wolfed the sandwich down before Sarah came out. The peanut butter was homemade, and delicious in its own way. It had a fuller, nuttier taste with a slightly bitter note and a thinner, grittier texture than the kind she used to eat right out of the jar. It was sort of like peanut butter for adults, but tonight she'd rather be sitting at the kids' table. It got the job done, though.\n\nEzra's breath caught when Sarah came out of the bathroom. The dullness and grime of five days was gone, bringing her mocha skin back to its usual velvety texture. Layers of damp ringlets framed her face. The pajamas she was wearing were just a tiny bit too big, making her look even smaller than she was. Ezra swallowed hard.\n\nBefore things could get awkward, Mariah called Nate on the house phone so he could come up to bandage Sarah's ankle. When Nate arrived, he looked surprised to see Ezra there, but he didn't comment on it. It only took a couple of minutes to apply the ointment and the bandage. As soon as Nate left, Mariah started giving serious thought to how she was going to get Ezra to leave.\n\nSarah tried to smother a yawn. \"Sorry. Just about all I did was sleep for the past few days, but I can't stop yawning.\"\n\n\"Okay, you two.\" Mariah looked pointedly at Ezra and Michael. \"Time to let Sarah get some sleep.\"\n\nMichael stood and stretched. \"Goodnight, Sarah. Mariah, come see me before you go to bed.\"\n\nEzra stood as well. \"If you guys need anything at all, just call me. Would you like me to lock the door to this wing on my way out? It might make Sarah feel better.\"\n\n\"Sure,\" Mariah agreed.\n\n\"If you need anything at all, just call me,\" Ezra repeated on his way out the door.\n\nMariah stifled her laughter as she closed the door behind him.\n\n\"Well, now that we've gotten everyone cleared out, please, make yourself at home. The bed is super-comfortable. I'll go see what Michael wants.\" She paused on her way to the door. \"Will you be okay? I'll keep the door between the rooms open so you won't really be alone.\"\n\nSarah giggled. \"Pretty sure he wants a goodnight kiss. Go ahead. I'll be okay.\"\n\nMariah tapped on the door to Michael's room. He opened it so quickly that he had to have been standing right on the other side of it. She stopped him when he started to close the door behind her. She beckoned him over to the side and whispered, \"She's afraid to be alone right now.\"\n\nHis soft growl sent a shiver down her spine, but when he reached for her, she shook her head. \"Behave. I told her I'd leave the door open.\"\n\nUndeterred, he pulled her in for a kiss with an arm around her waist. He kissed her insistently until her lips parted, allowing him to deepen the kiss. Before he released her, he whispered against her ear, \"I want you back in my bed tomorrow night, kitten. No exceptions.\" She turned to go, but he caught her arm. \"I love you, Mariah.\"\n\nShe glared at him, then glared harder when he smiled back, completely unphased. Turning on her heel, she stalked back to her room and shut the door soundly.\n\n\"Uh-oh,\" Sarah teased.\n\n\"It's nothing,\" Mariah muttered. \"He just enjoys getting under my skin.\"\n\nShe climbed into bed. Henry jumped up and plopped down in between them, stretching to take up more space than either Mariah or Sara. Duncan followed Henry up and laid down on Henry after Henry put up some token resistance.\n\n<br >\"At least Duncan's not trying to sit on your head.\"\n\nSarah laughed. \"He's probably just waiting for me to go to sleep.\"\n\n\"Probably.\"\n\nJulia sprang up on the bed and took her customary place by Mariah's pillow.\n\nMariah switched off the light. \"Make sure you wake me up if you need something, or just need to talk, okay?\"\n\n\"Okay. Thanks for everything.\"\n\nMariah was drifting off to sleep when Sarah spoke. \"Mariah, would you mind leaving the light on?\"\n\n\"Hmmm?\" she answered groggily. \"Oh, the light. Yeah, sure.\"\n\n\"Thank you. I'm sorry,\" Sarah apologized after the light clicked on.\n\n\"Don't be sorry. I should have thought about that. Are you okay?\"\n\n\"I'm better now. I just felt alone in the dark.\"\n\nSarah didn't look like she really felt better. She looked frightened, but Mariah wasn't sure how to help.\n\n\"Do you want to talk? Either about what happened or about something else?\"\n\nSarah shook her head. \"I don't think it would help. I just want to feel safe. I know I am safe, but I'm still afraid because what's scaring me isn't what's happening right now. I'm still scared from before.\"\n\nMariah nodded. \"I think I understand what you mean.\"\n\n\"I should be okay now with the light on.\"\n\n\"If I fall asleep before you do, wake me up if you need company, okay?\"\n\nSarah nodded.\n\nMariah was drifting off to sleep again when she felt the bed shift. Sarah was sitting up in bed with her arms wrapped around her knees. Mariah scooted around Henry to sit next to her.\n\n\"I'm sorry,\" Sarah apologized.\n\n\"There's nothing for you to be sorry for. You've had a terrible experience. We can't just shrug it off like it was nothing. If there's something that would make you feel better, let's figure out what it is. If there's nothing we can do, then at least I'll keep you company.\"\n\n\"Thank you. I wish I knew what would make it better.\"\n\nMariah was torn. The only solution she could think of was Ezra. Sarah felt safe with him. Even if Mariah could talk Michael into letting Ezra sleep on the couch in her bedroom, she was afraid it might turn into a regular thing. She had a feeling Sarah was going to have to stay with them for a while. It wouldn't be safe for her to go back home.\n\nFinally, she just asked. \"Do you think you would feel safer in Ezra's room?\"\n\nSarah looked up. \"I couldn't do that.\"\n\n\"Okay. Just thought I should ask.\"\n\nA moment later, Sarah asked, \"Do you think he would mind?\"\n\n\"Mind? Are you kidding? I was afraid I wasn't going to be able to get him out of here. He's been acting like your personal watchdog since you guys came back.\"<br ><br >\"He's been so nice.\"\n\n\"He's a nice guy, and I have no doubt you could trust him not to take advantage of the situation. I do think he's very interested in you, though. I'm not saying that means you shouldn't stay near him if that's where you feel safe. It's just that you've been through so much that I thought I ought to mention it, just in case you hadn't noticed it.\"\n\n\"Do you really think so?\"<br ><br >\"That he's interested in you? Yeah, I'm sure.\"\n\n\"I was afraid I was just imagining it.\"<br ><br >Mariah gave her a playful shove. \"You knucklehead. He's mooning over you.\"\n\n\"I still don't know if I should spend the night with him. I just met him. That would just be weird.\"\n\n\"Then don't. We'll just sit up and talk. Maybe you'll get sleepy after a while.\"\n\nThey were talking about the latest antics of Mrs. Tellenbaugh's twins when Sarah suddenly stopped talking.\n\n<br >\"What's wrong?\"\n\n\"Do you really think Ezra wouldn't mind?\"\n\n\"I'm pretty sure he would much rather have you close than be in his room worrying about you. But it's about what you want.\"\n\nSarah sat chewing her lip, looking uncertain.\n\n\"Do you want me to ask Michael to call Ezra and see how he feels about it before we actually ask Ezra if you can stay with him?",
        "\"I don't want to wake Michael up.\"\n\nMariah snorted. \"You don't have to wake him up. I will, and I don't mind a bit.\"\n\nWhen she knocked on the door, Michael called for her to come in. He was sitting up in bed, still wired from the combination of fatigue and nerves.\n\n\"I don't know why you always knock. You can just come in.\"\n\n\"I doubt you would have appreciated it if I barged in a week ago.\"\n\nHe fixed her with a glare. \"Do you really want to talk about that right now?\"\n\n\"No. I want to talk to you about Ezra.\"\n\n\"What about him?\"\n\n\"Sarah's having trouble. She feels safe with him. I was wondering if you could see if Ezra would mind if she stayed with him tonight.\"\n\nMichael raised an eyebrow. \"You realize he's infatuated with her, right?\"\n\n\"It's hard to miss. But that's not what this would be about. She just needs to be near him. Unlike some people, I think Ezra can refrain from trying to jump the poor girl's bones. Don't you?\"\n\n\"That's not fair. I've never tried to jump her bones.\"\n\n\"Cute. But seriously, don't you think he would be a gentleman?\"\n\n\"Of course I do.\"\n\n\"Would you mind calling him just to see how he feels about it? Maybe just tell him it's something we're thinking about? If he seems okay with it, Sarah and I will call him and ask.\"\n\n\"Sure, I can do that. You guys are making it a lot harder than it needs to be, though.\"\n\n\"Probably so. Let us know how it goes.\"\n\nSarah was twisting her hands anxiously when Mariah returned.\n\n\"Are you nervous about staying with him or nervous about what he's going to say.\"\n\n\"I'm nervous about everything.\"\n\nSarah didn't have to be nervous for long. Michael poked his head in -- without knocking, Mariah noted -- to tell them Ezra was on his way up.\n\n\"On his way up? You were just supposed to find out how he felt about it.\"<br >\n\n\"I did. He felt like coming up to get her right away.\"\n\nShe looked at Sarah and shrugged. \"Men.\"\n\nMariah collected a dressing robe and some socks for Sarah. \"Can you think of anything else you need?\"<br ><br >\"No, mom,\" Sarah teased her.\n\n\"Brat.\"\n\nIt wasn't long before Ezra arrived. The awkwardness only lasted a moment. Before long they were on their way down the hall while Ezra put Sarah at ease with another silly story.\n\nMariah flopped down on her bed and yawned. She felt a little guilty that she was so relieved Sarah was staying with Ezra. Before she could crawl under the covers, Michael was back, without knocking, naturally.\n\n\"I'm sleepy.\"\n\n\"Come be sleepy in my bed.\"\n\nShe grumbled about it, but she followed him back to his room and burrowed beneath the covers. He crawled in after her and turned off the light. With Mariah safely tucked against his body, he expected to fall asleep right away. Instead of drifting off, he found himself at the mercy of the imperative to claim her again. Her near abduction this morning left him with a territorial impulse he had difficulty ignoring now that Sarah was with Ezra. The slow, deep rhythm of Mariah's breathing suggested that she was already asleep, untroubled by similar compulsions.\n\nHe gently stroked her stomach, bared by the crop top of the pajama set she was wearing. When she didn't stir, his hand crept lower, edging beneath her sleep shorts. Her skin was soft and warm, tempting him lower to indulge in the casual intimacy of doing something just barely naughty to her while she slept. His caresses drifted down to the verge of her mons and back up again, over her stomach and under her pajama top to stroke the velvety undersides of her breasts.\n\nWhen she showed no signs of waking, he brushed his fingers across her nipple. There was a little hitch in her breathing, but it settled back into the same even rhythm. Light caresses made her nipple stiffen and swell. He was tempted to see how far he could take things without waking her up. Another time, maybe. He wanted her awake. He pinched her nipple gently and rolled it back and forth between his thumb and forefinger, provoking a soft grunt of protest followed by a low moan.\n\n\"Wake up for me, kitten.\"\n\nShe stretched against him and encountered his erection. Still sleepy, she wiggled back against him and snuggled down into the bed.\n\n\"Mariah?\"\n\n\"Hmmm?\"\n\n\"Can you wake up for me?\"\n\n\"Okay,\" she agreed, but seconds later, she was asleep again.\n\nMichael felt bad about waking her, but not bad enough to deny the urge that was as much emotional as it was physical. He wanted to fuck her, but more than that, he needed to have her. Only hours had passed since he had driven home his claim, but it felt far longer. After the tracking device debacle, followed by the miserable week and a half of her rejection, and -- if he was honest with himself -- his mistreatment of her, capped by those horrible minutes when he feared he would lose her, he needed the reassurance as much as he needed her body.\n\nHe slipped his hand down beneath her pajamas again to squeeze her pussy possessively. The gasp he elicited was not born entirely of pleasure. Earlier, he had been determined to give her a fucking she would feel for a while. It seemed he had accomplished that, but now wanted her again. He rolled her onto her back and sat her up. She blinked in the moonlight.\n\n\"I need you to take your clothes off for me, kitten.\" She nodded but made no move to do anything about it.\n\nHe needed to give serious thought to instituting a rule about sleeping naked. That went for him, too. His sleep shorts had become uncomfortably restrictive. Standing beside the bed, he shed his shorts and reached for Mariah. It wasn't until he tugged her hand that she noticed he was standing up. She looked up at him and gave him a funny little smile. Dealing with her when she was half-asleep was a bit like dealing with a very cooperative drunk.\n\nWhen he reached for her other hand, her attention fell to his bobbing cock.\n\n\"Oh,\" she said. The tip of her tongue ran along the seam of her lips, clearing up any confusion about the meaning of \"oh.\"\n\nHe let go of her hands and stroked his cock. \"Do you want this, kitten?\"\n\nShe watched without answering, so he stopped. That got her attention.\n\n\"You didn't answer me.\"\n\nShe scrunched up her forehead, trying to wake her brain up. \"What did you ask?\"\n\nHe sighed. \"Never mind. Come here.\"\n\nShe crawled over to him, all lazy grace and bedroom eyes. She tried to lick his cock, but he backed away.\n\n\"Uh-uh. You ignored me when I asked if you wanted it.\"\n\n\"I did not!\"\n\n\"Yes, you did.\"\n\n\"You never asked me.\"\n\nAt least she was awake now. The interval between truly waking up and arguing with him was practically nonexistent, but since she was arguing over losing her chance to get her mouth on his cock, he couldn't be too upset over it. In fact, the more he thought about it, the less aggravated he was. She was in his bed, on her hands and knees, pouting because he didn't let her lick his cock. And he was denying her because she had been too sleepy or too distracted to pay attention? He decided to overlook it.\n\n\"I did ask you. Do you want to argue about it, or do you want to make up for ignoring me?\"\n\nShe looked away and didn't answer. He tilted her chin up, making her stretch her neck to look at him. \"Which is it, kitten? What do you want to do?\"\n\n\"Make up for ignoring you.\"\n\n\"How do you think you can do that?\"\n\n\"I don't know.\"\n\nHe heard the frustration in her voice and realized that once again, he'd pushed her a little too far. She was looking back over her shoulder now, eyeing her pillow.\n\n\"It's okay. Just come here and stand up.\"\n\nHe was relieved when she stood without argument. After he undressed her, he stopped her from returning to bed before he could look at her. The moonlight silvered the golden tone of her skin and lent it a lambent glow. The line of her jaw, her collarbone, her navel, and the cleft of her thighs were shaded by soft shadows. Deeper shadows below her breasts emphasized the fullness of their lower curves.\n\nWhen his hand fell from her shoulder, she crawled back under the covers and curled up in her spot. It had taken so little time to go from watching her crawl to him across his bed to watching her retreat in frustration beneath the covers. Sometimes, he really was his own worst enemy. He pulled the covers off of her and climbed onto the bed next to her. When she didn't move, he rolled her onto her back so that she was looking up at him. She started fidgeting with the pillowcase.\n\nHe traced the bottom of her lower lip with a fingertip. \"I need you, sweetheart.\"\n\nShe frowned. \"Then why do you make it so hard?\"\n\n\"I don't know.\" He smiled ruefully. \"Why do you?\"\n\n\"It depends.\"\n\nA few gentle caresses over her throat were all it took to get her to arch her neck for him. \"What does it depend on?\"\n\n\"Whether I can't help it, or I don't want to help it.\"\n\nIt was so rare for her to give him a real answer, even a cryptic one, that he wasn't sure at first how he should follow it up.\n\n\"What's the reason when you can't help it?\"\n\n\"I don't know.\"\n\n\"What about when you can help it?\"\n\n\"Sometimes it's because you've been being awful. Sometimes it's because I feel like a butterfly pinned to a board. Sometimes it's because I'm afraid of things being worse later, like they have been. Sometimes it's because I know I'll feel sad afterward. And sometimes,\" she looked at him challengingly, \"it's just because you deserve it.\"\n\nHe was stunned to get that much information out of her. His mind was racing, trying to figure out what to ask next, while she was being forthcoming.\n\nShe must have guessed what he was thinking. \"If I answer one question and you try to dissect me with a dozen others, do you think I'll answer your questions next time?\"\n\nHe frowned. She had probably just saved him from making a mistake that would have set back his efforts to get her to talk to him. But how was he supposed to understand anything if he couldn't ask? He wondered if she had intended to help him, or if her sole purpose was to preempt more questions. Either way, she was warning him off. As a general rule, he was disinclined to let her get away with that sort of thing, but this seemed like a good time to make an exception.\n\n\"No more questions for now,\" he agreed. He leaned down to brush a kiss over her lips. \"I'm still going to have you, though, kitten.\"\n\nHe nuzzled her breasts, breathing in her subtle scent. Teasing her, he licked the sensitive undersides of her breasts, tasting the saltiness layered over the slight sweetness of her skin there. He lowered his mouth over her nipple, exploring the texture as it plumped and tightened against his tongue. His gentle sucking grew steadily firmer as his own excitement grew. As much as he enjoyed her breasts, he was even more aroused by knowing what it was doing to her. He slipped a hand to her pussy. God, she was so slick already. His cock throbbed against her thigh.\n\nBefore things had gotten so bad between them, he discovered how much he enjoyed keeping her nipples sensitive, knowing that the slightest stimulation would have them swollen and aching for him; knowing that when he checked between her legs, her pussy would be wet and ready for him. It had been a heady experience. He wanted that back. He wanted it all back.\n\nHe sucked her nipple hard, then closed his teeth around its base and tugged it gently. Encouraged by her soft moan, he moved to her other breast and took the nipple into his mouth. Her breathing grew faster as his tongue swept back and forth across the peak. He sucked hard and drew back, letting her nipple slide between his teeth as he pulled away.\n\nSuddenly, he felt like he wasn't getting enough of her. Not nearly enough. He slipped an arm between her shoulder blades to pull her up against his chest. As he bent to kiss her, he caught the scent of the gardenia and sandalwood shampoo she used. His gentle kiss quickly grew feverish. With his other hand cradling her head, she couldn't have escaped his kiss if she wanted to, and she was too overwhelmed by his onslaught to try. She was touching him now, and the simple act of wrapping her hand over his bicep felt erotic to him. She was still holding something back, though. He could feel it.\n\nHe relinquished her mouth reluctantly. \"Mariah?\"\n\n\"Hmm?\" She looked confused. He had plunged her down into a sea of arousal only to pull her back from it.\n\n\"I know there are things we have to work out, but,\" he hurried on quickly when he saw her guarded expression, \"can we set that aside just for tonight?\" He brushed the side of his thumb against her cheek. \"All those things will still be there tomorrow.\"\n\n\"I know.\" She sighed. \"Every day, those things will still be there.\" She drew back, and he realized he'd done it again. He had pushed too far, gotten too greedy.\n\n\"No, Mariah. Things will change.\"\n\nShe was willing to believe that he thought things would change, but not that any real change was possible. Every morning, she would wake up to the same intractable mess. Every day, he would erode her ability to avoid being swallowed up by it.\n\n\"I'm so tired, Michael.\"\n\n\"Then don't fight me. Just let us have this tonight.\"\n\n\"I wasn't fighting you. What I gave you just wasn't good enough for you.\" The weary resignation in her voice carried a despondence deeper than her words alone conveyed.\n\nHe wrapped his arms around her. For a long moment, he held her close without saying anything. When he spoke, his voice was husky. \"I'm sorry, baby. What you were giving me was beautiful. I just always want more of you, and I get stupid sometimes.\"\n\nWith a single finger beneath her chin, he tilted her face towards his. He kissed her forehead, the tip of her nose, and her cheek; brushed a kiss along her cheekbone; and trailed light kisses along her jawline, and back towards her mouth. When he kissed her this time, his tongue plunged into her mouth, coaxing her tongue with his. He kissed her until she lost track of everything but his mouth on hers.\n\nWhen he lowered her to the pillow, she tried to prop herself up on her elbows, but the pressure of his hand against her chest urged her all the way down. He laid on his side, propped up on his own elbow. When she reached across her body to touch him, he twined his fingers with hers and put her hand back on the bed.\n\n\"Not yet, kitten. Later, you can touch. Right now, I just want you to let me touch you.\"\n\nHis eyes fell to the mark he left on her neck earlier, and he dipped to kiss it. He kissed his way back to the center of her throat. Her neck arched for him, lucent in the moonlight, and he startled himself with a low growl that vibrated in his chest. She seemed to like it, and her chin tilted back further. He swirled his tongue in the hollow of her throat before he sucked at the delicate skin there.\n\nWhen he raised his head, her little moan of disappointment made him smile. He leaned back on his elbow to observe the path of his hand as it wandered over her body, tracing her collarbone and drifting over the slope of her breast. He cupped her breast and squeezed it gently, watching it mound in his hand. Michael's face was partly shadowed, but she could see where he was looking, and it gave her a fluttery feeling to see him watching himself squeeze her breast. He flicked a finger across the tip of her nipple, and her breath caught, attracting his attention.\n\nShe shivered. He was looking at her face now, watching her reactions as he fondled her nipple. It was too intense, too naked, to be watched like that, and she wanted to look away. She knew he wouldn't let her. He never did. She bit back a moan as he squeezed and rolled her nipple back and forth between his fingers.\n\nHis hand trailed further down her body, over her stomach and toward her pussy. She was craving his touch, but she didn't want him taking her to pieces with his fingers while he watched it play out on her face. She reached for his hand and pulled it to her mouth to kiss his palm.\n\nHe smiled at her. \"Trying to distract me?\"\n\nInstead of answering, she wrapped her lips around his thumb and sucked it softly. She really was very distracting, laying there with her tongue busy against the pad of his thumb, looking up at him as she sucked. He gently pulled his thumb away.\n\n\"As much as I enjoy your lovely little oral fixation -- and believe me, I do -- you're not going to sidetrack me.\"\n\nHis hand covered her pussy, and she could feel the heat radiating from his palm.\n\n\"Open your legs for me, sweetheart.\"\n\nShe moved them slightly apart.\n\n\"Do you need me to spread them for you?\"\n\nShaking her head, she opened her legs wider.\n\n\"Good girl.\"\n\nHis hand slid further between her legs to fully cup her pussy. A gentle squeeze reminded her of the lingering tenderness from the possessive pounding she had taken earlier in the day. His hand felt so good, though, despite the tenderness -- maybe even because of it. When his finger slid into her, the small of her back came off the bed as she arched. His cock pulsed against her flank in response to her drawn-out moan.\n\n\"You're so wet for me, baby.\"\n\nShe closed her eyes, as if that would shut out the wet sounds he was causing.\n\n\"Eyes open.\"\n\nHer eyes snapped open. She knew he'd stop if she didn't open them, and she desperately wanted him to keep touching her. Seeing him watch her face as he pumped her pussy was uncomfortably intimate, but undeniably erotic. Her eyelids tried to flutter closed when he slid a second finger into her, but she kept them open and saw him smile when she sighed in satisfaction.\n\n\"Tell me how it feels.\"\n\nWhen she didn't answer, he jammed his fingers in harder. She wanted him to do it again.\n\n\"Tell me how it feels,\" he repeated.\n\nShe struggled to think coherently, and lost her train of thought, until his fingers stopped.\n\n\"Kitten...\"\n\n\"I'm trying.\"\n\nHe smirked. \"We can stop while you think about it.\"\n\nSifting through her thoughts for a response was hard when all she wanted was for the pleasure to start again.\n\n\"It feels like I need more,\" she attempted.\n\nMercifully, he resumed the movement, pushing in hard and pulling out slowly.\n\n\"I think you can do better than that.\"\n\nShe shook her head. She really couldn't.\n\n\"How about this?\" He strummed his thumb across her clit. \"How does that feel?\"\n\n\"Please do it again.\"\n\n\"I will, just as soon as you tell me how it feels.\"\n\n\"Like...\"\n\nHe could see the moment she gave up. The tension left her face and she relaxed around his fingers. A moment later, she tried to push his hand away. When she couldn't budge his hand, she huffed in frustration and looked away.\n\n\"Give me just one word, kitten.\"\n\n\"No.\" She folded her arms over her chest, despite the ridiculousness of the pose while lying down.\n\n\"Not the word I was looking for.\"\n\n\"I don't know what word you're looking for. Just do whatever you want to do, and I promise I'll do my part.\"\n\nHe withdrew his fingers and frowned. \"Mariah, we are not going to go there again. If I ever catch you playacting again, I promise you that we will deal with it. You're not going to avoid things that way.\"\n\nWhen she remained silent, he moved down between her legs, pushing them up and apart. The moisture along the seam of her pussy glistened in the moonlight. He inhaled deeply, trying to pin down her scent. It reminded him of musk and rain and chardonnay, but that didn't come close to capturing the essence of it. His cock ached beneath him as he scented her, and he shifted his hips to relieve the pressure. He could feel the heat rising from her body, but when he glanced up at her, her face was turned coolly aside.\n\nLowering his head again, he pointed his tongue and ran it up the center of her pussy, then watched it unfurl. He could hear her sharp inhalation, but she laid perfectly still. So stubborn. Pressing his tongue deeper, he dragged his tongue lazily up between her folds. He considered her intransigence as he pressed his tongue to the roof of his mouth to appreciate the buttery texture all over his tongue.",
        "A muscle in her inner thigh twitched when he trailed his fingers up the inside of her leg and up to the crest of her hip. She was being willful, but he decided he didn't mind. He was still acting on the urge to stake his claim, and he was in the mood to test her stubbornness. He would claim her with every little victory.\n\nHe began his slow torture, licking and nipping his way up the engorged lips of her pussy. The tension in her body told him she was growing restive, but she was still refusing to acknowledge it. He pressed an openmouthed kiss against her clit without touching it with his tongue. Her breathing grew shallower, but he intended to have his bratty little kitten panting before he gave her a chance to relent. He smiled to himself. Mariah would be so mad if she could hear him thinking that. It wasn't difficult to imagine her insistence that she was not a kitten, not little, and not bratty. If she tried to claim she wasn't his, though, she would be going too far.\n\nWhen his tongue flicked across her clit, she couldn't stifle her gasp. He kissed it again, slowly sucking it between his lips and laving it with his tongue. The tension in her hip and thigh muscles ratcheted up as he suckled her clit, but she was still fighting it. He curled his arms around the tops of her thighs, holding her securely and keeping her spread wide. Knowing that she was bracing herself in anticipation of his next touch, he blew across her stomach instead. She shuddered and he struck, pushing his tongue into her. A second tremor ran through her and then another as his tongue slid in and out. She was losing the fight.\n\nHe flattened his tongue to lap his way back up to her clit. Alternating suction with fluttering licks, he gradually stepped up the intensity, building to one plateau and then holding her there until he was ready to take her to the next. She was panting now, and the sound of her breathing was harsh in her ears. When he lashed his tongue suddenly from side to side, her stubbornness broke. She moaned and arched her hips towards him.\n\n\"Please, Michael.\"\n\nHe flicked his tongue across the very tip of her clit before he looked up.\n\n\"One word.\"\n\nHe lowered his mouth and lapped her slowly, enough to stimulate, but not enough to satisfy. She whimpered each time his tongue ran over her clit. He sucked it in hard and she arched off the bed.\n\nShe had her word. \"Thrilling!\"\n\nHe rumbled his approval against her pussy. Unwrapping his arm from her thigh, he laid his index and middle fingers on either side of her clit and spread them outward, leaving her clit isolated and vulnerable to the lashes of his tongue. Soon, her hips were straining upward and her breath was coming in gasps. When he felt her trembling on the edge of climaxing, he stopped. She whined at the loss of stimulation.\n\n\"You're mine, Mariah.\"\n\nHe sucked her clit back into his mouth again. With rapid flicks of his tongue, he pushed her over the edge. He held onto her hips so she didn't buck him off with her thrashing. When she finally stilled, he teased her with light licks that made her jerk in response. He pushed himself up on his elbows.\n\n\"All mine. And I'm not nearly done with you.\"\n\nHe knelt between her legs and draped her legs over his thighs. Grabbing her buttocks, he pulled her to him until his cock was resting on her up-tilted pussy. Leaning back, he positioned himself at her entrance. The way he positioned her left her no leverage to push herself onto his cock. He waited for her to realize that she was at the mercy of his timing.\n\n\"Please?\"\n\n\"Please what, sweetheart?\"\n\n\"Please fuck me.\"\n\n\"Oh, I'm going to fuck you. I can promise you that.\"\n\nHe briefly teased her entrance before he ran the head of his cock up through her slit, up to her clit. The gasping mewl she made when he rubbed the ridge of his cockhead across her clit told him it was still very sensitive. He did it again. Encouraged by her whimper, he rocked his hips, rubbing the ridge up and down over the little nub. Before long, she was panting raggedly.\n\n\"Please fuck me, Michael.\"\n\nThe plaintive note in her voice made him throb against her clit. Stranded over his thighs like she was, she couldn't even squirm very much.\n\n\"Impatient little kitten. Just can't wait for your fucking, can you?\"\n\nEven in the moonlight, he could see her face flush. She turned her head to the side.\n\n\"Uh-Uh. Look at me.\"\n\nHe repositioned himself at her entrance. \"Play with your pussy for me, baby.\"\n\n\"But\u2014\"\n\n\"No buts. You want me to fuck you, don't you?\"\n\n\"Yes.\"\n\n\"Well, I want to fuck you while you play with your pussy.\"\n\n\"Please?\" She was begging now; there was no other word for it. His cock was throbbing in time to his pulse, and he desperately needed to be inside of her. He was willing to wait, though. This was how he was going to claim her tonight: one victory at a time.\n\n\"Please fuck your pussy?\"\n\nShe nodded.\n\n\"You think I should fuck you because you asked me nicely?\"\n\nShe nodded again. \"Yes. Please?\"\n\n\"I think you should play with your pussy because I asked you nicely.\"\n\nHer forehead creased. She understood the trap she had walked into, but not how to get out of it. He wasn't helping her think by rubbing the head of his cock in circles just outside her entrance.\n\nHe egged her on. \"The sooner you get started, the sooner you're going to get my cock. That's what you want, isn't it? You want to feel your pussy stretched around my cock? To feel all filled up?\"\n\nShe groaned. His suggestible little kitten. She reached for her pussy, and as soon as her fingers started moving, he began sliding into her.\n\n\"Ohhh...\" Her eyelids fluttered and her fingers stilled. He stopped.\n\n\"Please!\"\n\n\"Please play with your pussy for me.\"\n\nShe didn't seem to have realized she had stopped. Prompted, she began again. He buried himself to the hilt. Her moan trailed off into a whimper when he bottomed out. Her fingers barely paused this time.\n\n\"Does that feel good, sweetheart? Do you want more?\" Her pussy grabbed at him when he spoke.\n\nShe nodded, then remembered to say it aloud. \"Yes, please more.\"\n\n\"I want to give you more, but you're going to have to do some more for me. I want to see two hands on your pussy.\"\n\nHe slid back just enough to watch. She did it without argument, and as her hands came together on her pussy, her breasts were squeezed between her arms, just begging him to splash his cum over them. Not tonight, though.\n\n\"Good girl.\" He rocked back and then pushed back in. \"Spread your pussy for me, kitten. I want to see your fingers on your clit.\"\n\nShe frowned, whether from aggravation or concentration, he couldn't tell. When she had her pussy spread with one hand and her fingers busy on her clit, he pushed back into her. He could feel her fingers moving, but he would rather see them. He knew she wanted him in deep, though, so he stroked in and out through the silken tug of her clutching channel.\n\nWhen he needed to slow down, he paused with only the head of his cock inside her and watched her fingers running through her spread pussy. When he didn't resume his movements, she stopped rubbing her clit. He watched her fingertips travel down her slit to tease his shaft. The little minx was trying to turn the tables, and he was starting to have a very difficult time holding back.\n\n\"Mmmm... That's nice, kitten, but you can't get what you want that way. All you have to do is come on my cock. As soon as you do that, I'll give you the fucking that you need, deep and hard.\" He felt her shudder. \"Come on, sweetheart. I want to give it to you. All you have to do is let me feel your little pussy coming around my cock.\"\n\nHer fingers returned to her clit, moving with greater purpose.\n\n\"That's my good girl.\"\n\nShe resented the flood of warmth she felt when he said things like that, but she was too focused on getting the fucking he promised to dwell on her pique. Her fingertip sped over her clit. She whined through gritted teeth, reaching for the orgasm that would get her what she needed.\n\n\"That's it, kitten. Come for me. Show me you're mine.\"\n\nAs soon as his words registered, she snatched her hands away as though she'd been scalded. He took over, rubbing the pad of his thumb over her clit as he rocked slowly in and out of her. The pleasure was enough to keep her from trying to get away from him, and she was too far gone to argue. He could already feel her pussy contracting. She wasn't going to be able to stop.\n\nWhen he increased the pressure on her clit, mashing it against her body, her shoulders came off the bed. He knew he had her now.\n\n\"Show me, Mariah.\"\n\nHe thrust in deep and strummed her clit faster and faster to a panting, convulsive climax. While she was still spasming around his cock, he shifted her off of his thighs and hooked his arms behind her knees. He leaned over her, pushing her legs back and bracing himself on his forearms. He drove himself into her. There was no more holding back. He pulled all the way back through the clinging grip of her inner muscles and thrust in again.\n\nSuddenly, fucking her became a struggle for control. She had managed to curl her arms around his shoulders and was trying to pull him down against her body. When he pulled back, he could feel her nails dragging over his shoulder blades. By the time he got her arms disengaged and her hands trapped against the bed, she had her legs locked around his hips and was trying to pull him in deeper.\n\n\"Settle down, kitten.\"\n\nHer movements beneath him remained frenzied. She wasn't paying attention to anything except trying to get his cock deeper into her.\n\n\"Kitten!\"\n\nA shiver ran through her body. The growl in his voice had gotten her attention, and she wanted to hear it again. She looked up at him challengingly, and he stared back, his eyes shadowed and unreadable. He still had her hands pinned beside her head, so she turned to nip his wrist. When he didn't respond, she licked the inside of his wrist, watching him out of the corner of her eye and rubbing her calf against his thigh. Then, she got the growl she wanted from him. No words, just a deep, rumbling growl that traveled straight down her spine and made her pussy clench around his cock.\n\nHe drew back and slammed back into her. Fast, short strokes left her panting with her head thrown back and a look of enrapt concentration on her face. He released her hands and caught her behind her calves to push her legs back. He fucked her slowly, watching his cock sink into her upturned pussy, slide out slick and shining in the moonlight, and push back in again. An occasional light smack over her clit made her pussy seize around him.\n\nEventually, he needed more. He plunged in, fucking her with deep, steady strokes, wanting it to last, but getting inevitably closer to the point of no return. He let go of her calves and hooked her knees over his arms again and leaned into her, hands braced by her shoulders, fucking her face-to-face, daring her to look away. He drove his cock in a final time, shuddering as he came with a strangled groan. His hips jerked with every spurt, and her walls clutched at him in response, drawing out the pulses of pleasure.\n\nHe looked down at her, lying blissed-out and well-fucked beneath him, and he didn't even feel the need to tell her she was his.\n\nLater, as they were drifting off to sleep, she felt compelled to mutter, \"You don't own me.\"\n\nHe pulled her closer and tucked a strand of hair behind her ear. \"No, I don't own you. But you are mine.\"\n\n\"That makes no sense,\" she complained groggily.\n\n\"It doesn't have to.\"\n\n____________________________________________________\n\nChapter 6 is still in the early stages, so I hesitate to give an estimate on when it will be ready. It will be at least two weeks, and less than a month. I update my profile page with publication information, so when I have a better estimate, you can find it there. \n\n \n\nThank you again for the feedback on previous chapters. I do respond to feedback, whether it's left in the comments section or sent as anonymous feedback through the site. I usually post the response within a day or two, so if you're interested, check back. \n\n \n\nI appreciate the encouragement, which helps keep me wanting to write, and the criticism, which helps me get better at it. If this story doesn't rate a 5 for you, let me know what I can do to fix that next time. Even if it's just something that bugs you, I'd like to hear about it. \n\n \n\nI would really appreciate it if you vote for this story. It lets me know how the chapter is received. I compare the scores of chapters in this series to see if I'm going in the right direction. \n\nThanks for reading!\n\n \n"
    ],
    "authorname": "Enchantment_of_Nyx",
    "tags": [
        "dominant male",
        "post-apocalyptic",
        "reluctance",
        "submissive female"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/after-the-fall-ch-05"
}