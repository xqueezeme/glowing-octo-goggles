{
    "title": "I Kissed a Girl Ch. 09",
    "pages": [
        "This chapter is dedicated to all of my loyal readers of the \"I Kissed a Girl\" series who have racked up over 580 favorites and 460,000 views at submission time. Especially, to those who have requested Jenna's story over the years.\n\nI wanted to do her justice, to include what happened before she reconnected with Kat...through their first time together (Chapter 1). Which has resulted in a mini novella of itself. Though it has been a longtime coming, I have thoroughly enjoyed getting into Jenna's head. I hope you do, too.\n\nThank you in advance for your patience (9 pages, yikes!) ...and for your loyalty.\n\nSSW\n\nI'll let Jenna take you on the journey into her part of the saga...\n\n*****\n\n---\n\nPRESENT DAY\n\n---\n\nSome would say I had it all. A nice condo in a sought-after part of the city. Loyal friends. A well-paying job that gave me prestige in the industry despite having an asshole for a boss. What more could I possibly want or need to make my life happy?\n\nThat answer was simple: the one that got away.\n\nOver time, the ache inside had dulled. Though I wanted it to, I knew it would never cease completely. There would always remain that sliver of a dream of what could have been.\n\nTo make matters worse, I'd never really had her to begin with. She was oblivious to my longing. And it was all my fault.\n\nI'd never even hinted to her that I saw her as more than a classmate, a friend. The latter was barely even that. I don't know how things would have turned out if I had admitted my true feelings back then. But I'd eventually accepted reality. Stopped wishing for a second chance to share my heart with her.\n\nMaybe that's why fate finally stepped in.\n\nThere, at the bar, stood the most beautiful person I'd ever laid my eyes on. Even with her current drowned-rat appearance, I could tell that the years had been good to her. Very good. And I could only imagine that they had also enhanced all of those qualities that had endeared her to me on that dreary fall day of my senior year. The day that I saw a ray of hope to help me through the rest of the hellhole they called high school.\n\nI had stopped in a dark section of the club on the way back to my table from the restroom. It had taken a long moment to realize what had drawn my attention to the main entrance. In the dimness of the room, I saw Donna talking to a woman...leading her to the bar. Normally, I wouldn't have paid attention as Maggie's was a lesbian bar and I wasn't really looking for a relationship right now. But the person standing opposite our designated greeter for the night wasn't just any woman.\n\nShe was Katrina Jenkins. Kat, as everyone had called her. Kitty Kat, on some occasions, although I remember how her brow would furrow at the sound of it. Which was a shame, because many a times, I had licked my lips at the thought of her purring beneath the ministrations of my fingers\u2014my tongue\u2014while I coaxed her with that pet name.\n\nA shiver ran down my back. I hadn't had a thought like that in almost four years. About anyone.\n\nThough she was at least thirty feet away, I felt the heat of Kat's gaze when she glanced around. She paused, and I held my breath... Surely, she couldn't see me standing here, watching her?\n\nBut I still felt her eyes piercing into my soul as time rolled backwards in my head.\n\n###\n\n---\n\nTWENTY YEARS EARLIER\n\n---\n\nThe rumors had started the fourth week of my last year of high school. I had transferred in due to my father\u2014The Colonel, as he was known among family and friends\u2014being restationed. Thankfully, our move had been during the summer, so I wasn't joining mid-year. It was by far not our first move. But this was the first time I wasn't being homeschooled with my younger sister, Meredith. That I was going off base to get an education. Nathan, our brother who was five years older than me, had gone the military route like our father and had already been out of the household for four years prior to his graduation from college the prior spring. He was now stationed at a naval base in Hawaii. Lucky duck.\n\nIt was hard enough adjusting to a regular classroom, much less thinking about having to make new friends. My parents assured me that they'd heard many of my classmates had late birthdays, so I shouldn't feel too out of place being 18 entering my senior year. My mother thought I deserved the experience of all the rites of passage one got being a senior: homecoming, football games, prom, and graduation. She seemed to have forgotten the one about immature teenagers teasing new students...and joking about adult topics as though they had any clue.\n\nIn my specific case, the joke was a play on my last name, Swallow. I first heard it in the place one always learns about what others think of you: from behind a stall door in the girls' restroom.\n\nTwo female classmates gossiped about random topics at the sink, completely unaware of my presence. I'd seen them around the halls, boasting about how more mature they were than others because they'd already turned the legal age. Amidst the debate of which varsity football player had the best ass, the topic changed to who was going to ask them to the Homecoming Dance.\n\n\"Well, I should be going with Scott Martini,\" one of them bemoaned. \"The cheerleading captain always goes with the quarterback.\"\n\n\"Jill, he'll ask you. Guys like to wait until the last minute.\"\n\nAnother stall door creaked open then closed loudly.\n\n\"Not if he's going with someone else, Tiffany,\" Jill scoffed.\n\n\"What do you mean?\" Tiffany's voice echoed over the walls of the enclosed toilets.\n\n\"Well...\" Jill started, and I could see through the crack between the parts of my door that she had turned and leaned her backside against one of the sinks, her arms crossed. Her mouth dropped with a deep sigh into an open grimace while she stared at the ceiling. \"I heard in trig class, he has his eye on the new girl.\"\n\n\"And I heard he has a big dick.\" Tiffany let out a snort. \"Doesn't mean it's true. Guys like to exaggerate.\"\n\n\"Oh, that part is true.\"\n\nThe other toilet flushed before Tiffany asked, \"How the hell would you know?\"\n\nJill studied her nails for a moment, her frown morphing into a smirk. \"I had the pleasure of giving him a blowjob under the bleachers after the game last week. It was my congratulations present to him for passing the winning touchdown. Not that it's made him make a decision any faster.\"\n\nTiffany made a retching sound before washing her hands. \"That is so gross.\"\n\n\"The only gross part is the end.\" Jill turned and primped her hair in the mirror, giving pouty lips to her reflection. \"But I spat it out...even though Scott asked me not to.\"\n\nI flushed the toilet and opened my stall door just when Tiffany quipped, \"He'll like it then if Jenna lives up to her name and swallows.\"\n\nI froze, realizing they had been talking about me. My face burned even hotter when they noticed me and just smiled, apparently unfazed that I'd overheard them. I would never forget the sound of their laughter echoing off the tile walls on their departure.\n\nI was aware of the topic at hand. I had been raised on military bases, not in a cave. But I didn't know what bothered me more... The fact that one of them had carnal knowledge of the act they were referring to. Or that those girls didn't know anything about me, yet they found humor in making crude jokes about me just because of my name.\n\nTo my amazement, Scott did ask me to the dance the very next day. I turned him down, partly because of the bathroom conversation. As a result, he granted Jill Johnson her wish. I also got something: Scott's revenge for rejecting the star quarterback.\n\nThe story I heard was, I'd offered to suck his dick if he'd take me to the dance. He'd felt sorry for me being new, so he'd agreed. But when the time came to do the deed, I'd flown off like the scared, little bird I was. It's funny what people will believe when it's some pompous ass making the accusations.\n\nMy punishment was to bear a slew of sexist jokes for the remainder of the school year. Many a night, I cried myself to sleep; thankful I had my own room. I had thick skin after being raised by a military father, but I was still human.\n\nA twist of fate a few weeks after the Homecoming fiasco gave me a ray of hope that I would survive public high school. I was taking a test in Mr. Timm's Advanced Algebra class. I was seated in the middle of my row, trying to concentrate. But I was constantly distracted by the girl seated in the front of the next row over. Mr. Timm had briefly introduced her before he'd handed out the exams and explained she had been in his class at a different hour but had switched due to moving her study hall.\n\nHer name was Katrina Jenkins...Kat, for short. Another one of the barely-legal group from what I'd heard around the halls. I'd caught glimpses of her before in passing but actually had never had the chance to take a good look at her. From my perspective now, she had long, auburn hair with a gorgeous red tint that set it apart from normal brown hair. It kept falling forward across her desktop, and she kept tucking it behind her ears.\n\nHalfway through class, she stood up and went to see the teacher. I kept my eyes on my paper, but I could hear her ask him for a rubber band...or a pair of scissors.\n\nI dared a peek and was in time to see her sweep her hair up into a ponytail then turn back to sit down. But she bumped her chair, and her pencil rolled off the meager desktop attached. I don't know why I kept watching her. But I noticed how her shirt grew just a little tighter across her chest when she stooped down. Was the room spinning?\n\nAs she stood again, her eyes lifted, meeting mine. It lasted for the briefest moment, and it was over when she blinked. One second, she was facing me. Then, she was sitting down again. But I couldn't get her dark gaze out of my mind throughout the rest of class.\n\nThe next day when I saw her, Kat had cut her hair into a pixie style. I felt a lump in my throat at the loss of those long tresses. Yet the shorter do was more becoming. It allowed more of her beautiful face to show.\n\nSo began my daydreams of wanting to get to know her better. But I was afraid. Mostly because, while I wanted to be her friend, I found myself fantasizing about what it would be like to hang out for more than doing homework and comparing study notes. I wanted to go to the movies with her. Hold her hand. Stare deep into her eyes. Touch her hair. Maybe even kiss her.\n\nThat was not what two female friends usually did with each other, though. So I suppressed my desires and just admired from afar. Every now and then, I'd hear Kat laugh with other classmates. And she smiled a lot. I just wished I was part of whatever was making her happy.\n\n---\n\nAfter Thanksgiving break, I was sitting in the cafeteria by myself at one of the tables...as usual. The varsity football players with my same lunch hour had taken the table behind me. The blowjob jokes started the moment they sat down. And I hunched over my lunch tray, trying to tune them out.\n\nSame shit, different day.\n\nI was just wondering why they couldn't be more creative when I heard a familiar voice that made my pulse race.\n\n\"You know what, Scott Martini?\" Kat said. \"If you and your buddies spent as much time practicing for football as you did gossiping about Jenna Swallow, maybe we'd win more games this year.\"\n\n\"What's the team record?\" another girl asked. \"Two to six?\"\n\n\"Yeah, Kitty Kat?\" Scott sneered. There was the sound of a chair scraping against the linoleum, then he added, \"What's it to you? You got a thing for girls?\"\n\n\"Ooh, cats like birds,\" another boy jeered. \"Kat and Swallow.\"\n\nI knew that voice as Tim Jacobs, one of the normal hecklers. Another football player. Easy on the eyes, but a jerk all the same.\n\n\"That's the best you can do?\" a third girl laughed. \"A girl defending another girl makes her queer? Coming from a bunch of guys who like to swat each other on the bare ass with towels in the locker room, that's pretty pathetic.\"\n\nThere was a light twitter of giggles and whispers.\n\nKat snorted. \"They're just jealous that she won't give any of them the time of day. I don't blame her. Who wants to be with a bunch of jocks who've already banged the entire cheerleading squad?\"\n\nThere were several gasps and low oohs, a brief smattering of applause, and the sound of several more chairs scraping the floor as the bell rang, dismissing us. I remained after I heard the football guys leave. After I heard Kat's voice fading away while she chatted about something else with some other girls.\n\nWhen I blinked, the tears that had welled in my eyes trickled down my hot cheeks.\n\nI had once snuck a couple of my brother's Playboy magazines before he'd left for college. The pictures had entranced me. How they'd teased at what was hidden by fabric or the creative placement of an object. I'd been interested in the female body ever since, though it hadn't occurred to me what that might actually mean.\n\nBut I thought of that now. And of what Kat's friend had said...that if a girl stood up for another girl, it didn't make her queer. Because surely I was if I actually liked other girls in the way that boys liked girls.\n\nOne thing for certain, Scott and his crew could never know the truth of that. If I'd thought the oral sex jokes were bad, I couldn't imagine what my classmates would say if they knew I was pining after another girl. I considered but chose not to pull rank and have my father talk to the principal about the verbal bullying. I didn't know if it would stop or get worse if he stepped in, so that left it up to me to handle it on my own. Which meant just putting up with it.\n\nLittle had I known I'd had someone right here in my corner. Kat's decision to stand up for me didn't stop the whispers, but it made them more bearable. Though I never knew for sure if she had known I was in the cafeteria that day, I found that Kat smiled at me more when we passed in the hall or in class.\n\nThe more often I saw her, the harder it was to fight my feelings. I found myself daydreaming even more in Advanced Algebra, staring at Kat's hair while Mr. Timm droned on about quadratic equations, coefficients, and polynomials. Thankfully, my grades didn't suffer.\n\nWhen prom came around, my mom asked if anyone had invited me. I lied and told her that Kat had asked me to join her friends who were all going stag, but I was still hesitant to go. The invitation actually hadn't been directed to me specifically. I'd just heard them talking about it at lunch one day. But I couldn't admit to my mom that all of the boys hated me because I wouldn't sleep with them. So it was go alone or not at all.\n\nMy mother insisted I go with the girls. It was important for me to experience the ritual. I would never tell anyone, but I only agreed so I could see Kat in a dress. I had not been disappointed. Yet, I had remained in the background, just observing the entire time. Which allowed me to witness Scott Martini and Tim Jacobs spiking the punch before a teacher waylaid them. Although I had not been the one to tattle, I couldn't help smiling and giving them a wave as they were marched past where I was sitting on the way out of the gym. As a result, the jabs and sneers doubled. But it was worth it.\n\nSomehow, I managed to make it through the end of the school year with my sanity.\n\n***\n\nCollege was a welcome respite to the jeers I'd gotten used in such a short time. Although I'd only had to endure it for one school year, it had felt like so much longer. I was glad I could bury my nose in the books again and not worry about what others were saying behind my back.\n\nI was also glad to be out on my own, though I missed my sister. We had always been close, telling each other everything. Though I'd never revealed my secret crush to her. I didn't trust anyone that much. No one would understand.\n\nI was glad that my younger sibling had friends of both sexes from the base...and a tougher skin. Hopefully when our mother decided to send her to public school, too, Mer wouldn't be bullied. She was a bit of a tomboy and more like our brother. I had a strong feeling she'd punch someone in the face after the first crack they made about her name...if they even got that far.\n\nThough I drew the attention of boys, I still found I had no interest in them. I went on a couple of dates just to be sure, but they only liked to talk about themselves, gaming, or sports. I even let one kiss me goodnight. It was wet, sloppy, and he smelled like garlic from our dinner. Plus, he was trying to grope me at the same time. Thankfully, he had not attempted a second kiss...or a second date. And I swore off men from thereon out.\n\nDespite my failures in intimate relationships, I learned to be more assertive when it came to the rest of my life. I was finally becoming my father's daughter. I aimed to make him proud. And while I didn't want to pursue a profession in the military as he and my brother had, I could still use those skills in whatever field I did choose. I only wished I'd developed the backbone years earlier. Not only to stand up to the haters, but to be honest with the one person I wished I'd mattered to.\n\nEvery now and then, I'd see someone who reminded me of Kat. Once, I approached a girl on campus thinking it was Kat from behind. She'd had the same hair color. Same short style, too. To say that I was disappointed to find out I had been mistaken was an understatement. I'd lain in my dorm room that night, staring at the tiled ceiling. Trying not to let my roommate hear me cry while envisioning my high school crush in my head and wishing I'd brought my one-and-only yearbook with me so I could see her face again. Those eyes.\n\nI resolved that I needed to force myself to move on or Kat would forever haunt me. So I doubled my efforts in getting through my classes and avoided a social life whenever possible. It's funny how time seemed to fly after that.\n\n---\n\nI spent my junior year abroad in Italy and France mostly. It was easy to blend in either place having taken both languages my first two years at the university. The freedom to do what I wanted whenever I wanted\u2014within reason and when I wasn't studying\u2014was refreshing. Meredith even came to see me for a week between Thanksgiving and Christmas.\n\nBut it wasn't until my senior year back home at the university that I openly admitted I was a lesbian. It happened on one of those rare nights in the early spring when I ventured outside of my apartment.\n\nI would like to say that I had willingly agreed to go to the gay club with some of my classmates. They'd heard it was a great place to dance. I'd been tempted more than once before to go for obvious reasons. But I'd always feared I would be recognized by someone I knew. And now, that the girls who I studied with would see the real me.\n\nIt had taken some coaxing, but I'd gotten into the car with them. Once we'd arrived at the club, they paired off, leaving me standing there alone as the literal fifth wheel. So I threw back my shoulders, lifted my chin, and marched up to the bar. But even with a drink in hand, it was difficult to relax.\n\nThe music was loud, and the lights were obnoxiously bright as they bounced around the otherwise dark space. Two of the girls had made their way up onto one of the raised platforms and were dancing wildly. At least they had the sense to hold onto the safety railing with the hand that wasn't fisting a bottle of beer. For now.\n\nI found a seat at a corner table where I could keep an eye on at least the girl who was driving. I wondered if I should have insisted on taking her keys. I was half-worried I might get left behind. Plus, she didn't look like she should get behind the wheel.\n\nI was contemplating abandoning my seat to get another beer when a waitress appeared with a tray...and a single bottle of what I was drinking. I glanced around, but she just winked at me and waved her hand when I tried to pull some bills out of the pocket of my leather jacket. I nodded my acceptance and leaned back against my chair, taking a long swig of the cold brew.",
        "I hadn't seen the tall, skinny woman approach. One minute, I was watching my classmates, and the next, someone was sitting at the table with me. I flinched, taking in her black cowboy hat, dark plaid shirt, dark jeans, and a pair of black boots. One of the latter of was propped up on the chair between us.\n\n\"Do you want to dance, darling?\" the woman said, tilting her hat down on her blonde head before she gestured with her chin toward the far side of the room. \"I bet you could show those girls a thing or two.\"\n\nI followed her gaze and saw that my friends were bumping and grinding at the air now. On the level below them were a couple of empty black cubes that had previously been occupied by two other women. I looked back at the uninvited guest and gulped, forcing a smile. \"No, thank you.\"\n\n\"Your loss, darling.\" The woman stood and sauntered over to a group of girls who looked like they'd used fake IDs to get in.\n\nI tried not to laugh. I had never been hit on before by a woman. I'd never imagined my first time would be by the female version of a cowboy.\n\nIt was in the midst of finishing the gifted bottle when the waitress returned. As soon as she set a new bottle down and walked away, another offer to dance from another club patron appeared. After the fourth one, I snuck off to the bathroom.\n\nReturning to the dance area, I found my table was now occupied by the cowgirl and one of the younger women she'd corralled. I both felt relief and a little envy. I considered calling a cab, but I had to admit, I was kind of enjoying being out and the music was nice. I really wasn't ready to leave.\n\nI wandered into the next room, which was mostly just another bar. The light was steadier and the music more muffled, but the level of chatter still made it difficult to hear. I was about to return to the darker dance room when I saw the door off to the side of the far end of the bar. Specifically, the sign on it that read \"Jazz Suite.\"\n\nNot even thinking twice, I made a beeline across the room and turned the doorknob.\n\nWhere as the previous two rooms were loud and crowded, the third had a more relaxed feel. Though still dark, there were clusters of padded chairs situated around small tables that had little, glowing lamps at their centers, creating a cozy ambiance. Swirls of smoke could be seen rising above the heads of the few patrons in the lamplight while sultry tunes oozed from a man playing a saxophone on a stage in the far corner.\n\nA redheaded woman wearing a black-sequined dress sat on a stool, crooning in a deep voice about lost loves. At least I thought it was a woman until she shifted under the light on the stage and I saw her Adam's apple. But I didn't care. His...her voice was spellbinding.\n\nI eased into a nearby chair and leaned my arms on the tabletop. The more I listened to the singer and the musician, the more I relaxed. I found myself swaying to the music. The song changed, and I sat back, looking around the room at the groups of women...men. Some were holding hands. Some were leaning on another with an arm around their shoulders. All seemed like they wanted to hang out together. Maybe were even doing more than hanging.\n\nOnce again, I was an outsider. After all these years, trying to fit in, I was still hiding. Afraid to embrace the deepest part of myself. Now that I was in the one place I should be able to do it, I still felt like I didn't belong. Even in a gay bar.\n\nWith a soft cry, I got up and left the room, intending to call that cab. But I ran into one of my friends at the bar. She grabbed my hand and dragged me back into the dance room despite my protests. I held my ground when she started to climb up the steps to the next dance level. For a long moment, I just stared at her. Then I turned and started to leave again.\n\nGuilt made me stop when I saw an empty booth in the corner. I reminded myself how badly I had felt just a short time ago when I wondered if my friends would abandon me. I shouldn't do the same to them. So I plopped myself down and sighed deeply.\n\nThe longer I watched them make a fool of themselves, the more I wished they weren't here. That I could let loose and be myself without the fear of repercussions in the morning. And when I noticed the cowgirl grinding away with the younger gal I'd seen her with earlier, I chided myself for not having the guts to accept when I'd been given the offer to dance. God, I was pathetic.\n\n\"Can I buy you a drink?\"\n\nI turned my head and blinked up at a man of average height with broad shoulders wearing a dark polo and khakis. His blond hair was cut short, but I couldn't see the rest of his face due to shadows. \"I'm sorry. Thank you, but I'm not interested in dancing.\"\n\n\"Neither am I. It's just a drink.\"\n\nI almost turned him down, but I figured, what the hell? \"Sure. A drink would be nice.\"\n\nHe disappeared after I rattled off my favorite beer, and I thought maybe that was that. No big loss that I wasn't going to get intoxicated tonight. But he returned a few minutes later and set two bottles of my beer on the table and took the seat next to me.\n\nRelax, girl. Just relax. He's a guy. You have nothing to worry about.\n\n\"My name is Susie.\"\n\nI took a better look at my tablemate now that we were on the same level. Then I swallowed heavily. Sure enough, Susie was a woman, not a man. Somehow, I managed to say, \"I'm Jenna.\"\n\n\"It's nice to meet you, Jenna. Can I be honest with you about something?\"\n\nI couldn't speak. I was still kicking myself for thinking she was a he...realizing that she was just butch. Just as I had mistaken the lounge singer for a woman, when she was really a man in drag.\n\nSusie didn't wait for me to respond, anyway. \"I've been watching you ever since you came in with those chicks over there. You're not like them. And I don't mean just the drinking and the dancing. This your first time in a gay club?\"\n\nI felt myself nod.\n\nSusie nodded herself and took a sip of her beer. Her eyes studied me for several minutes while the base thumped like a rapid heartbeat matching the pounding in my chest, and the lights bounced off the black walls, lighting up the crowd of clubbers. Then she patted my free hand I'd rested on my lap and said, \"You belong here, honey. They don't. Everything will be okay.\"\n\nWe sat without another word, occasionally drinking our beers while the loud music surrounded us. It filled my head along with the questions of who this woman was. Why she had sought me out. Where had my friends gone? And why were no other women approaching me now?\n\nAfter a time when I said I was getting a headache from the music, we moved to the Jazz Suite. And when the club started to shut down for the night, I automatically walked with her toward the door. That's when I noticed my friends were nowhere around.\n\n\"I need to call a cab,\" I mumbled, digging my phone out of my purse.\n\n\"Me, too. I don't drink and drive. Do you want to share one?\"\n\nWhich is how I found myself riding beside Susie across town. My apartment was closer, and as the cab pulled up to the curb, my mouth seemed to move on its own. I blamed it on the alcohol and a longing sense of not wanting to be alone. I meant just to tell her goodnight. But her hand brushed mine in the dark, and what came out was, \"Do you want to come up for a drink? Maybe chat?\"\n\nA few minutes later, we were both sitting on my couch\u2014each with a beer in hand\u2014to the soft backlight from a sole table lamp behind me. There was the occasional conversation about the club, city life, and the fact that I was finishing college and she worked at a local factory as a welder. But it was mostly odd patches of silence where I could hear the sloshing of beer in the bottles as we each took sporadic sips.\n\nIt'd been quiet for a long time when the air suddenly seemed to be closing in on me. I clenched my eyes. Had I made a mistake of asking her to come up? Why had I gone to the club in the first place? Who was I kidding? I should never have left the military base.\n\nSusie took my free hand, squeezing lightly. \"It's okay. You don't have to hide anymore.\"\n\nI gulped. \"I don't know\u2014\"\n\n\"Honey, I can tell.\"\n\nMy eyes opened slowly. \"What?\"\n\n\"You're one of us. You know it, too.\"\n\nI just blinked at her.\n\n\"I can help you adapt. To help you fit in where you truly belong.\"\n\nI opened my mouth, but nothing came out. Though I felt a tear in my eye.\n\n\"Jenna, you don't have to be afraid.\"\n\nMy voice trembled when I was able to speak this time. \"Of what?\"\n\n\"Shh.\"\n\nSusie took my drink and set both beers aside. Then her hands, cool from the bottles, cupped my cheeks, holding my head still while her lips lightly touched mine.\n\nI expected to pull away. But I just sat there and felt the tension drain from my shoulders instead. A tear trekked down my cheek when I closed my eyelids. Then I whimpered and accepted that this was really happening. Finally happening.\n\nShe rained feather-light kisses against my lips with brief pauses where she brought our gazes together. Her movements seemed purposeful and done with caution. It took several times before I realized she must have been testing my reaction.\n\nWhen she pulled back the next time, I leaned toward her and returned the kiss. I moaned softly when she reciprocated by sweeping her tongue along my bottom lip.\n\nHer arms slid around me, gently holding me to her while she coaxed me with more soft kisses. And then one hand pulled back and grazed over my nipple through my shirt.\n\nI cried out at that and rolled into her body, clutching at her arm.\n\nSusie moaned herself and pressed a little harder on her next pass, her palm cupping around the curve of my breast. Then her kisses intensified. Her tongue teasing until I parted my lips and let her inside with a soft gasp while her free hand cradled the back of my head now, her fingers burying in my hair.\n\nMy tongue joined hers in a slow dance until they were chasing each other. Then our moans combined. Her hand plied my breast while mine echoed the motions on her bicep and shoulder.\n\nGravity took over. I ended up on my back on the couch with Susie straddling me, one of her knees wedged between mine. Gradually, she pressed up against my pussy through my jeans, her hand sliding down to pull the hem of my shirt out of my pants. Then she was underneath the material, stroking the skin of my abdomen with her fingertips and the underside of my breast through my bra.\n\nI pressed my lips together, arching my neck and back as a ripple of new feelings burst like little firecrackers in various places inside me. My hands clutched at her, sometimes making only purchase with the air as she moved.\n\nShe tugged my bra cup down and teased my nipple in the most delicious way while her tongue traced my lips until they parted again.\n\nMy mind was hazy from the night of drinking and the adrenaline pumping through my veins. Her soft touches. The building urgency within once I'd told myself it was okay to stop fighting the truth.\n\nJust when I thought the feelings would never end, she backed off. I whimpered loudly until I felt her unzipping my pants. I held my breath while her hand snaked in between my panties and my skin. Her work-roughened fingers searched, rubbing along the way, making my hips arch up and wiggle back-and-forth. When she touched my clit, she silenced my cry with her mouth.\n\nI felt my body bucking underneath her, her fingers burying deeper within my pussy.\n\nHer hand splayed out, two fingers curling up and sliding inside of me while the heel of her hand pressed against my pelvic bone. Then she was jerking upward in the confines of my jeans and panties.\n\nI yanked my head back further and cried out, gripping her shoulders tighter. Her moans were muffled against my neck while she nuzzled there, her breath hot against my skin. One moment I was begging for release, and the next, I was floating.\n\nSusie rolled off and adjusted so she was lying behind me on the couch cushions, her hand still buried between my legs. My body twitched when her fingers continued to stroke languidly.\n\nI started to drift off and heard her whisper in my ear, \"Welcome to the dark side, Jenna.\"\n\n***\n\nI met with my classmates on Monday for our usual study session, but no one mentioned what had happened Friday night. Which meant that no one apologized for leaving me behind. When I excused myself to use the restroom, I overheard two of them saying I was a bore and not to mention the plans for the upcoming weekend. They didn't want to get stuck with me again.\n\nA lump formed in my throat at their words. It wasn't the same as high school, but it was pretty damn close. Same shit, different year.\n\nHonestly, I shouldn't have been offended. I didn't want to hang out with them, anyway. I wasn't the partying type of girl.\n\nI stopped in the kitchen on the way back and grabbed a soda. I had just taken a long gulp when one of them asked if they should go back to the gay club. That's when I choked on my drink.\n\nSusie and I had plans for this Friday. At the club.\n\nWhile I was coughing like a chain smoker, I struggled to hear the others respond. The conversation was partially muted\u2014probably because they could tell I was nearby\u2014but I managed to hear someone say the club was a bust. They wanted guys to hit on them while they were dancing, and that just wasn't going to happen at a gay bar.\n\nThe tears in my eyes were mostly because I was trying to draw air into my lungs. But they were partially from relief that I wouldn't risk the chance of running into them and therefore revealing my secret. Yet.\n\nSusie and I spent a lot of time together over the next few months. I met her roommate and a couple of other friends who weren't straight\u2014some men, but mostly women. We spent the weekends at the club, usually in the Jazz Suite. Over the weeks, it became easier and easier to drop my guard.\n\nThe first time she went down on me, I'd just stared at her in awe with my forearms propped up behind me, my shirt rolled up under my breasts. She'd been so gentle. So thorough. I tripped on a couple of small orgasms before my arms gave out. Then I was gripping the bedsheets, my body frozen in an arc while her tongue and fingers brought me more pleasure than I'd ever imagined.\n\nWhen I'd finally felt comfortable to take my turn, my hands had still shaken so badly that Susie grasped them in hers and guided me on what to do as though I'd never known what a pussy was. My first touch of her with my fingertips was strange but exciting. I'd touched myself, of course, over the years. But touching another body? Another woman?\n\nMy inhales became jagged when I felt her hot and pliable skin. How it was damp with arousal. More so the further south I ventured. Her heavy breathing told me I must have been doing something right. Especially when I eased my finger inside her tight channel, and she pulled her knees up, spreading her legs wider while her hips arched toward my face.\n\nI smiled against her swollen flesh when I sucked her clit into my mouth and she cried out, her body jerking above me. My chin touched wetness, and I tentatively ran a finger between her lips again. That earned me a couple of sharp gasps. They morphed into moans when I circled the sensitive ring to her entrance with first my fingertip then my tongue before gently pushing inside with the latter. Her heat increased against my face, and I ran my tongue up the length of her, inserting my index finger again along the way. Her muscles clenched around the digit, both pulling it in and pushing it out.\n\nThe taste of her on my tongue was slightly bitter, but not unpleasantly so. A muskiness joined the flavors when I pulled back the hood of her clit with my fingers and used my tongue to test the hard nub until it poked out, seemingly begging for more attention. I happily obliged.\n\nThe longer I licked and fingered her, the more I found I was getting aroused myself. I had caused this. I was the reason she was wet and writhing on the bed. Squeezing her thighs around my head and bucking her hips, moaning my name. I had caused her pleasure, and that made my heart swell with pride.\n\nYet despite opening myself up to this new world...my new lover...one thought always hung at the back of my mind. I couldn't help wondering what it would be like to be with Kat in my bed. To be the one making her writhe and shiver under my touch. To feel the slickness I'd caused between her thighs. To taste her essence and smell her womanly musk filling my head while I teased her with my tongue.\n\nI didn't imagine that Susie was Kat. Or at least not consciously. But I think that Susie eventually realized that my heart didn't belong to her. She never asked, so I never admitted it. Though she did mention my melancholy on what would be our last day together...the day I graduated. I just said I was sad that another milestone had passed.\n\nSusie took her time when she went down on me that night. Drawing out orgasm after orgasm until they all seemed to merge into one and I felt boneless. Ethereal.\n\nShe slipped out sometime in the night while I slept. I found a note the next morning that said she had accepted a job on the East Coast. She hoped I wouldn't forget her, but it was time we went our separate ways. She wished me all the happiness with my future and wanted me to know she cherished every minute we'd had together.\n\nFighting the tears in my eyes, I knew I felt the same.\n\n***\n\nI believed that graduating college and then law school meant my past was finally behind me. I knew what I was going to do with my life. Who I really was inside. I had a purpose. Even a goal: to be successful in my career. I was resolute that nothing would get me down now.\n\nEverything went smoothly for about six years. I was hired for my first job at Tompkins Legal Consulting. I had a supportive boss, worked with a great staff, and I enjoyed going into the office each day. I even went out with a couple of ladies for drinks after hours on Fridays. But there was no one I felt comfortable opening myself up to. Not in the way that mattered most.\n\nThen I met Celene.\n\nShe was one of three accountants Tompkins used, and technically not an employee of the firm. We worked closely during a drawn-out settlement for a troublesome client. Five weeks of mostly ten-to-twelve hour days in a crowded conference room kind of close. The last night after finally finishing the lawsuit, everyone else on the team had gone home by 6:00pm, so it was just the two of us left to close up the office.\n\nI locked the doors and walked beside her to our cars, carrying a binder of paperwork while she managed a filing box. At her trunk, I waited for her to deposit the box. \"I'm so glad that one is over. We can finally enjoy a weekend off. Not to mention sleeping in tomorrow.\"\n\n\"Thanks, Jenna, for helping,\" she said, her hand lingering on my arm after I leaned over and placed the binder beside the box.\n\nI slowly stood. My pulse was racing by the time I looked into her eyes. Then my breath hitched when she moved her hand to cup my cheek.\n\n\"I've enjoyed working with you these late nights. Seeing your lovely face every morning. Hearing your laugh. Watching you debate with the men for what is right.\"\n\nI just blinked at her, too afraid to speak.\n\n\"They don't know what a gem they have here.\" Celene gave me a warm smile, her thumb caressing my skin, which made my hands shake. Then she leaned in and kissed me.\n\nMy eyes closed, and all I could do was feel. Her hands holding my face. Her lips covering mine. Warm air whispering over my skin when she exhaled through her nose.\n\nI put my hands on her arms and returned her advances, hoping I didn't come across as desperate. But my hormones had been dormant for too long. They remembered what Susie had awakened within me. They wanted to be released again. My fingers must have clutched her a little too hard because she squeaked and flinched.",
        "\"I'm so sorry, Celene!\" I released her and stepped back, my face now in my hands. I let out my own cry\u2014one of frustration\u2014and scurried away. I had made it to my car three spaces down when I was stopped by hands on my shoulders and gently turned back around.\n\n\"Jenna, it's okay. Look at me.\"\n\nI lifted my head to see Celene smiling at me through my tears, her head tipped slightly.\n\n\"You can't scare me off that easily.\" She brushed her thumb at my wet cheek. \"Why don't we go somewhere and talk. I know the perfect place.\"\n\nMy eyes widened at the thought of going back to one of our apartments. I let out a soft moan, which made her laugh.\n\n\"Patience, Jenna. Patience.\"\n\nShe had me follow her to a side of town I'd never been to. We parked on the street along a line of two and three-story brick buildings, some residential and others commercial. One of the former had a blue neon sign hanging above a door. The words \"Maggie's Lounge\" surrounded a miniature martini glass. Inside, after descending a flight of blue-lighted steps, I looked around at all of the other women. I felt tears in my eyes, but for a completely new reason.\n\n\"Here, you can be yourself,\" Celene whispered in my ear, leading me to the bar and then a table in a quiet corner after we were handed our requested drinks. \"Here, there is no judgment.\"\n\nThat night was the first time I smoked a cigarette. She lit one and stuck in between her painted red lips before offering me the pack. She didn't pressure me, but she did say it might help me relax. She was right...and said I was a natural. I just blew a stream of smoke directly at her, making her laugh while she swatted the cloud away.\n\nWe sat there for over two hours, me doing most of the talking between drags and puffs, her fingers casually playing and holding mine at times while smoke tendrils decorated the air between us under the low glow of the wall sconce. I told her about Kat but never mentioned Kat's name. Sometimes I cried. Sometimes I laughed. Never did she criticize.\n\nAfterwards, she followed me to my place. She made my promise not to touch her while she pampered me. It was sweet. Slow. Perfect.\n\nWe spent most of our time at Maggie's or my place since Celene had a roommate that worked nights. Like Susie, she always took special care to meet my needs first. I felt blessed to have her in my life, though I wish I could be more outgoing with her like I had become in my job. I always felt like I was one step behind and not measuring up to what she would really want in a girlfriend.\n\nIn mid-June, my boss announced his retirement. I was sad to see him go. He'd given me many opportunities to grow and prove myself in a workforce mostly made up of men. We held a party the Friday before the July 4 holiday. He affirmed that he knew he was leaving us in good hands and then told us to enjoy the long break because we would meet with our new division head first thing Tuesday morning.\n\nI spent the weekend with Celene and some of the ladies we knew at Maggie's. One of them had a houseboat upstate, and we lounged around the lake under the sun until it grew dark. Then we all watched the fireworks display. But I was so glad to get home and have Celene all to myself. She seemed to agree, although we mostly just fell asleep in each other's arms.\n\nTuesday morning, on the way to my desk, I walked past my old supervisor's office. That's when I saw the new name embossed on the window next to his door: Tim Jacobs. One of the jocks from hell. I almost turned around and walked out of the building. Something deep inside me convinced me I could do this. Maybe he had changed. I definitely had.\n\nAt first, I didn't think Tim remembered me. He barely glanced my way when we went around and did introductions in the conference room. Then he was down to business, wanting updates on all of our open cases.\n\nOver the next two months, things pretty much ran business-as-usual. Tim stayed out of our way for the most part. I was already involved with a case that kept me negotiating with the other law firm at a neutral location. Then I was assigned to another. And another. Keeping busy kept my mind off who my boss was. The few times we were in the same room, he merely gave me a brief nod in passing or from across the conference table when I gave updates on the cases. And there were still no obvious signs of recognition who I was. Maybe I was lucky and he just had a bad memory.\n\nAfter spending the morning reaching a settlement that swung in our favor, I returned to my office to finalize paperwork. I silently gave thanks that tomorrow was Friday. Only one more day until I could luxuriate with my girlfriend. Mostly in my bed, but probably the shower as well. We were going to shut off our phones to cut ourselves off from the world for forty-eight hours and just revel in each other.\n\nIt was almost time to go home when Tim knocked on my office door.\n\n\"Good job on the Anderson suit.\"\n\nI blinked up at him, my tongue suddenly thick, making my words trip out of my mouth. \"Oh...uh, thank you...Mr. Jacobs. Sir.\"\n\n\"Sir?\" He chuckled and leaned against the doorframe, crossing his arms. The action pulled his fitted suit jacket even tighter across his chest.\n\nIt did nothing for me, which almost made me smile. Almost. Though a half-cocked smile did appear on his face.\n\n\"Jenna Swallow. Time has been good to you, I see. Funny how fate works things out, huh? You and me here, working in the same place?\"\n\nHeat rushed into my cheeks. I sat up straighter and clasped my hands together on top of my desk, trying to keep myself composed. \"Small world, I guess.\"\n\n\"Very small.\" He seemed to study me for a long moment, the opposite corner of his mouth twitching as his gaze briefly lowered. Presumably to look for a hint of cleavage, which would be more viewable from his angle...but not in my case with my higher-cut neckline. Then he was looking me in the eyes again. And helping himself to one of the two chairs that faced me. \"I know I'm keeping you from your work, but I would like to talk to you about something important.\"\n\nDare I hope for an apology after all these years? I couldn't help glancing at the clock as I sat back, my hands now dropping to my lap though my fingers were still laced together. I had an appointment for a bikini wax at six, and they liked their clients to be punctual. It was quarter after five. I hoped this didn't take long.\n\n\"As you know from the internal memo today, we are expanding our name to go nationally and are looking for firms outside of Illinois that would be good to merge with. Management has met and decided the first three teams of two to go for research.\"\n\nThis time, I let my frown appear...and my hands tightened. \"According to that memo, the research teams will be acting as sales reps offering our services to potential firms.\"\n\n\"Yes. And they will be getting commission on those firms that agree to collaborate with us. Win, win.\"\n\nMy forehead furrowed. \"Excuse me for being blunt, but what does this have to do with me?\"\n\n\"Management wants to give everyone a chance at this opportunity, so they've looked at all areas in the company. It'll be a great learning experience.\"\n\nI highly doubted that. \"Our department negotiates. With existing cases. I don't see how\u2014\"\n\n\"You'll still be negotiating.\" The corner of his mouth twitched again. \"When you're here.\"\n\nI felt sweat gathering at the small of my back. \"What?\"\n\n\"You've been chosen for the first round, Jenna. Your plane leaves for California at 6pm on Friday.\"\n\nI could feel the color draining from my face. I had plans for this weekend. To ravish and be ravished. Plans that did not include flying across the country to work, even if it was on the West Coast in fall.\n\nTim stood and straightened out the bottom of his jacket then the cuffs of his sleeves. \"You'll be gone until Wednesday. It'll mostly be business lunches and meetings, possibly some dinners, so pack accordingly. I've cleared your calendar until then.\"\n\nSomehow, I found my voice, though it sounded a little high-pitched. \"You said there were teams of two. Who am I going with?\"\n\nHis smile was full wattage now. \"Oh, that would be me.\"\n\nAll I could do was stare at his back while he walked away, his hands in the front pockets of his pants. And I swear I could hear him whistling.\n\n***\n\nThe next day passed by in a blur. I kept remembering my conversation with Celene last night. How I'd cried in her arms while she assured me we could do our off-the-grid date next weekend when I got back. We'd made love then I fell asleep with her still holding me.\n\nI'd only been smoking if I was stressed. A pack could last me weeks. Today, I lost count of how many smoke breaks I took. I realized my new pack was down to less than half by the time five o'clock came around. While the day seemed to creep by, quitting time was too soon for once.\n\nI felt disconnected from my body when I got in the cab with Tim, went through security at the airport, and found my seat on the plane. Then we lifted off to head west. He talked with me, and I managed to answer, though I couldn't tell you what either of us said. My brain had shifted into autopilot.\n\nBy the time we touched down in Los Angeles over four hours later, it was dark. We checked into our separate rooms, my intent to go right to bed. But I ordered room service when my stomach kept growling. Although I ate all of the food, it had no taste. I finally donned the T-shirt I'd swiped from Celene and crawled beneath the covers, but I barely got any sleep.\n\nSaturday had me up early, as Tim wanted to discuss our itinerary for the next five days over breakfast. Then we were off to our first meeting. He'd already told me to let him do the talking. The entire team got the commission if they scored a deal, so I didn't have to worry about not pulling my own weight. I just needed to watch and learn.\n\nFor the next four days, that's what I did. I became the silent partner. Or rather, the arm candy. There was no disguising the lustful looks in some of the men's eyes. Or, if I was to be honest, in Tim's whenever our gazes happened to cross. If they only knew I batted for the other team.\n\nIt would have been easy to tune everyone out and just think about Celene. To think that if I failed at this trip that I wouldn't be asked to go again. But that wasn't me anymore. I was not going to let a high school jock ruin my career.\n\nSo I pulled up my big girl britches and remained attentive. I took notes, both mentally and on paper. And I was courteous around Tim despite my desire to slug him each of the handful of times I saw him staring at me. Or rather my breasts.\n\nWe returned home with one definite and one maybe agreement for firms willing to jump on board. I thought that was a victory for our first time doing this. Tim did not seem as pleased. I wanted to tell him where to shove it, but I kept my mouth shut.\n\nI let Celene pamper me the following weekend. It was all I'd hoped for and then some. Maybe absence does make the heart grow fonder.\n\nTwo weeks later, I was heading to Florida. With Tim. Then it was New York. Washington, D.C. Texas. All with Tim. By December, we'd been to at least a dozen states and acquired potential partners in just over half of them.\n\nMaybe that's why Tim seemed a little more laid back our last night in Louisiana after our final dinner. He'd decided we should walk to and from the restaurant since the hotel was just a couple of blocks away. The weather was that perfect not too cold, not too hot. Although, there was a light breeze, and my dress did not have very long sleeves. Which resulted in him insisting I take his suit jacket...after he'd already put it over my shoulders.\n\n\"Thanks,\" I mumbled, trying to hold my clutch under my arm while gripping the lapels with my fingertips.\n\n\"You know, Jenna, you impress me. When we started this adventure, management didn't think you'd last. They were reluctant to let any women do this. Yeah, it's a sexist attitude, but it's the way of the business world. I told them to give you a chance, though. I knew you. Your personnel file only provided more leverage. Your work ethic proves you are reliable. Professional. Successful even. I took a gamble on giving them your name, but I didn't know how you'd do in the field. That first trip? I was sure you were going to buckle under the pressure. Obviously, you didn't. And I can tell you've grown so much these past four months. I think you're ready to take the lead next time, especially after tonight.\"\n\nMy face burned when I thought about how Tim had disappeared after we were seated at dinner. He'd not returned by the time our guests had arrived, so I had to carry the conversation and start the meeting. It was twenty minutes later when he decided to grace us with his presence. Being put on the spot like that had made me livid. But what else could I have done? Of course, Tim had taken over once he'd joined the party. But the two partners of the firm we'd met with had said talking to me had sealed the deal for them to come on board with Tompkins Legal Consulting. That I knew my stuff, and they looked forward to working with me in the future. Little did they know, my part in the mergers would end here.\n\nI was so lost in thought that I hadn't realized we'd stopped walking. Tim had his hand on my arm. I looked up at him for a moment, and then my eyes focused behind him to see that the hotel entrance was only a few feet away. An ornamental lamppost cast a wide circle of light across the paving stones leading to the door, but we were still hidden in shadow.\n\n\"You did a good job tonight, Jenna.\"\n\n\"Thanks.\" I brought my eyes back to him and opened my mouth to ask him where the hell he'd been when he spoke first.\n\n\"I'm sorry. I truly am.\"\n\nMy knees shook for a moment, and I stumbled back a step. Tim's grip on my elbow tightened, helping me regain my balance. I held my breath. Was this really happening? Was I getting the long-awaited apology?\n\n\"I never meant to put you on the spot like that. I had a call from home I had to take care of. I wouldn't have done it if it hadn't been an emergency.\"\n\nNo, he didn't remember the torture he and his friends had put me through. Or at least he felt no remorse. It had been too much to hope that he'd matured with age.\n\nThe air escaped slowly from my lungs as though I was a deflating balloon, the sound a wheeze that seemed like it would never end. And if not for his hold on my arm, I felt my whole body would have collapsed with that exhale.\n\nMy thoughts returned to the fact that he even had his hand on my right elbow\u2014and wondered why\u2014just as his other hand cupped my left cheek. Realization hit when he leaned toward me. I turned my head, causing his lips to graze the corner of my mouth and left cheek as I took another step backwards.\n\n\"Jenna?\"\n\nI couldn't see his face, but I heard his confusion in just that simple word. Felt it when his fingers tried to reclaim his hold on me while I pulled my arm free.\n\n\"Do you know how hard it was to stand back and admire you from a distance?\" he said, his voice a little hoarse. \"Scott wanted you so badly. Me, too. But he was my best friend, and best friends don't steal their buddy's girl. Even if she didn't want him.\"\n\nSomething akin to malice seeped into my bones. He was a moron. A complete, fucking moron. I so wanted to tell him off finally. But a little voice inside my head said it wasn't worth it to lose this job. I took another step back. Right into the side of the hotel. My jaw dropped in a gasp.\n\n\"But I'm done with childish games.\" His fingers were on my bicep now, and he was leaning forward again. His mouth was drawing closer. His breath caressing my face.\n\nI couldn't move. In my head, I was screaming a litany of, \"No! No! No!\" but there was no actual sound outside except for the breeze rustling leaves on the sidewalk.\n\nFinally, my brain sent three words spilling out of my mouth. \"You're my boss.\"\n\nTim seemed suspended with his lips only an inch from mine.\n\nTogether, we stood there like statues for at least a solid minute, neither of us seeming to breathe. Then I felt the breeze dancing around my ankles. Rustling the bottom of my dress. Like the Fairy Godmother's wand and magic on Cinderella, it lifted up my legs, slowly releasing the spell over us. I shivered as the air caught and tousled my hair.\n\nThe light grip on my arm was released. Tim stepped back, blinking while he glanced around. He wasn't looking at me when he finally said, \"Yeah, you're right. I'll see you in the morning.\"\n\nAnd then I was standing there in the dark, watching him walk away. But there was no sense of relief. Instead, worry weaved its way into my thoughts that he would hold this against me. After a few more minutes of trying to slow my racing pulse but failing, I went inside.\n\nI was putting the key card in the slot on my door when I realized I still had Tim's jacket around my shoulders. Reluctantly, I walked across the hall to his room and knocked on his door. A part of me prayed he wouldn't answer. I'd just hang\u2014\n\nThe door swung open. For a moment, Tim just stared at me with bright eyes. When I didn't say anything, his right eyebrow lifted, then lines appeared on his forehead. His hair was tousled, as though he'd been running his hand through it. The ends of his tie hung on either side of his unbuttoned collar, and a glass with amber liquid was in his left hand.\n\nHe opened his mouth, but I was faster.\n\n\"Your jacket.\" I held it out to him.\n\nHe sipped his drink then propped the door with his hip. His eyes studied me for a moment before he took the rest of his suit from me.\n\n\"Thanks, again.\" I turned and went back to my room before he could misread anything else in the gesture.\n\nI managed to fall asleep without crying.\n\nNeither of us said anything on the flight home nor the following day at work. I wasn't going to mention it to Celene, either, but she could see right through me. Over a bottle of wine, I had once told her about my brief stint in public high school...how I knew Tim. I'd barely taken a sip this time at Maggie's Lounge Friday night before tears were clouding my vision when she said two simple words: What happened?\n\nDespite my fears, Tim didn't treat me any different. If anything, he avoided me more. I was just glad he didn't fire me in order to try to pursue a relationship. I had briefly considered telling him I wasn't interested in him\u2014or any man in that regard\u2014but Celene reminded me I was there to do a job. I shouldn't draw attention to something that wasn't yet an issue because it could force me to stand on a soapbox. If I wasn't being harassed or my job threatened, I should just let it go. I heeded her advice. For now.\n\n***\n\nCome time for the next trip, I was assigned a new teammate. She was a legal secretary from the fourth floor named Lauren. And now I was the seasoned leader. I'd heard through the grapevine that I'd been matched up with a woman to save money on a second room. I wondered, in part, if Tim just didn't want me traveling with another man. Either way, I was much more relaxed being around another female, even though she didn't speak much.\n\nLauren was tall, just like me, but with brunette hair cut into a severe angle that was longer on one side instead of the darker blonde that adorned my head and barely swept my shoulders evenly all around. Hers was the kind that hung straight and shiny and made all women envious of how it stayed that way all day without any apparent effort. She also had the deepest green eyes that always seemed to get brighter when she smiled.\n\nShe seemed very timid, but she caught on quickly, just as I had. Maybe it was out of necessity. Although it was never said aloud, most of us knew our regular jobs now depended on us doing the sales part, too. We may not like being forced to broker deals just to generate more income, but this was actually something I was used to and good at: negotiating. And I think most, if not all, of the firms appreciated my knowledge and professional approach when it came to finagling the terms and conditions. With more experience in the field, so too did my confidence grow.",
        "Over the next year, I actually began to look forward to the trips with Lauren. As much as I'd originally despised needing to travel, it became a welcome respite from the daily grind of actually working with clients, most of whom were argumentative. Plus, Lauren and I had a similar sense of humor, and we both smoked\u2014her more than me\u2014which helped when we had a long day or a tough sell...or both. We weren't always successful, but we made a good team.\n\nCelene and I had been dating for six months when I returned from a four-day trip to Michigan with Lauren. We'd had no luck except to catch an earlier flight since our last meeting had been cancelled. The entire trip, my travel partner had been pestering me about where I went on Fridays after work when we were home. So I called up my girlfriend when we landed and arranged to meet at Maggie's.\n\nI didn't tell Lauren what kind of bar it was, but the surprise was on me. Brad, the buff bartender who also served as a bouncer and was the lone male in the bar, was also her brother. The fact that Lauren was surrounded by lesbians didn't seem to faze her one bit, though I'd had no previous indication that she swung that way herself.\n\nIt was the first of many nights to follow that she hung out with Celene and I after work to decompress. I had grown used to my new schedule, my new boss, my new partner, and my new friend. Life was good.\n\nWhich is probably why it decided to shake things up like a snowglobe.\n\nEight months into our relationship, Celene sat me down on a Tuesday night after an overly long day of work and asked me if I loved her. I didn't know how to answer. I liked spending all of my free time with her. I liked having someone to care about. Someone who cared about me, listened to me, and understood me.\n\nBut did I love her? That was a strong word. And not one I easily threw around.\n\nI didn't know what had prompted this conversation. She'd never given any signs that I was holding her back or not committing enough. But whatever her reasoning, I felt like I was back on autopilot mode when Celene gripped my hands and told me through her tears how much she had enjoyed what we had shared.\n\nI knew right then what was coming.\n\nShe didn't say she wanted more from me. Or that she wanted it from someone else entirely and didn't want to hurt my feelings by saying it aloud. What she did say was that it was time to go our separate ways.\n\nIt was Susie all over again, except it was harder this time because it had been face-to-face.\n\nI found myself telling her I understood, unable to hide my own tears. She hugged me tightly, briefly pressed her lips to mine, and walked out my front door and my life. It would be another five years before I saw her again, but that's a story for another day.\n\nI hadn't known how many tears my eyes could produce. How badly my body would ache without her touch. Knowing I'd never hear her words of comfort again.\n\nMaybe I had loved Celene in some way that I hadn't been able to express or even admit aloud. Or maybe it was just the concept that I'd been hurt yet again by someone I thought had cared deeply for me. Was this how it was when a boy broke a girl's heart? Could it possibly have been worse because we were two females capable of being more emotional?\n\nWhat scared me was that she might not be hurting as much as I was. I began to question what we'd really had together in the first place if she could walk away so easily because I'd hesitated to say that four-letter word to her when she wanted me to.\n\nThe next day at work, I felt numb. Unable to focus. Even the weather seemed to share in my misery as a constant curtain of rain coated the windowpane, matching my fresh tears each time I checked my phone and didn't have a message from Celene. My hopes that she would change her mind grew slimmer as the hours ticked on.\n\nLauren tried to console me at my desk. Tim stopped by once and started to ask what was wrong, but Lauren had met him at the door and said something about an ill relative. He narrowed his eyes for a moment then gave me a nod of his chin and moved on, telling Lauren not to stay away from her own job for too long.\n\nThe rest of that week, I cried myself to sleep at night. Spent my days second-guessing the decision not to fight for Celene to stay. To not call and beg her to reconsider.\n\nBy Friday, I almost took a sick day. If I hadn't needed to be there to sign time-sensitive documents, I would have just rolled over in bed and slept through the weekend. Lauren must have had enough because she insisted we cut the day short and go to Maggie's around three o'clock.\n\nWhile I wasn't open at work about my preference for women, Maggie's was a different situation. I could be free there. I had no fear of retaliation from a jealous boss or coworkers. I had friends there, and we respected each other's privacy. Lauren's idea made sense.\n\nBut the moment we walked into the bar, I broke down again. Just for a different reason. Meredith was sitting at our table, a big smile on her face.\n\n\"What are you...? How did you...?\"\n\nMer's arms wrapped around me, holding me tightly. \"Hello, Jenna. A little bird called and said you needed some cheering up.\"\n\nI smiled at Lauren over my sister's shoulder and mouthed, \"Thank you.\"\n\nAn hour later, I sat awestruck as Mer described her own pitfalls of being a lesbian. After two more hours and several more drinks, the three of us moved the party to my apartment. Both my sister and Lauren reminded me that losing Celene was not the end of the world. That someday, I would find another. Maybe even one I could honestly say that I loved her.\n\nWe talked well into the night, which ended in an impromptu sleepover where we relieved my fridge of several bottles of wine. I felt ten times better in the morning, though I needed a Bloody Mary to chase the pounding in my head.\n\nMer and I made a pact to stay in touch more often, then I hugged and kissed my little sister goodbye. After she left, I was still shaking my head at her revelation that she was more like me than I knew. I wondered what The Colonel would say if he knew neither of his daughters would ever provide him with a son-in-law.\n\n***\n\nWe continued to rotate with the other teams, a week here and there on the road then back to our regularly scheduled program until we were sent out again. That summer, Lauren and I were sent to Arizona and Georgia. They were some of the hottest days on record. In the fall, we were sent back to other states where we'd already been...and firms who'd already declined interest in joining Thompkins. Once it started getting colder, we were sent to Minnesota and North Dakota. It was in the latter during an early snowstorm that Lauren and I started putting the pieces together.\n\nAfter keeping our ears and eyes open for a week upon our return, Lauren discovered that a female intern in her department had snubbed one of the lawyer's advances...because she, too, was a lesbian. She'd blurted that she wasn't the only one working here and had mentioned our names, knowing us from Maggie's. She'd threatened to report him to Human Resources if she was let go. Although the lawyer had left the poor girl alone, we found out he was friends with Tim. And friends talk. Especially guy friends who have dirt on women.\n\nIt made sense. Tim was punishing us. Or at least me. It didn't matter that Lauren and I actually weren't together. I had rejected him, and he was making me pay by recommending our team for the worst locations at the worst possible times.\n\nDuring the Christmas weekend, I attended an alumni party at my university and ran into Dr. Robard. He had used our services on multiple occasions, and I'd personally helped win two suits in his favor. Over glasses of champagne, he revealed that Tim had reached out to him about the firm's desire to expand overseas. In addition, Tim was put in charge of setting up a team to go abroad to seek out potential clients, and Dr. Robard was at the top of the list since he lived in France. Having a trustworthy, local firm on retainer would be beneficial to his business in plastic surgery.\n\nArmed with my knowledge of Tim's potential shady business practices as well as his power over deciding which team would go to France, I sauntered into his office the day after the holiday. First, he denied doing anything wrong with the assignments he'd given to Lauren and me. I didn't have any concrete proof except what Lauren had heard. But he blanched when I reminded him that for four months, he had been the one to arrange to take me on the research trips...and on the last, he'd attempted to kiss me...twice. I asked him what HR would think of that information when I told them of my latest assignments after I'd denied his advances. Then I handed him the letter Dr. Robard had me pick up on my way in that morning with his recommendation I lead the team visiting him abroad.\n\nNew Year's Eve was spent in Paris with Dr. Robard and his wife after Lauren and I sealed the deal with the local firm he used. I should have been utterly happy. But as I waited for the final event beyond the Eiffel Tower, something in my heart ached. I wished I were here with someone special. Someone I hadn't thought of in a long time.\n\nLauren kissed me on the cheek at midnight then asked if I was okay when she noticed my glossy eyes. I returned the chaste kiss and forced a smile with a nod. She linked arms with me and rested her head on my shoulder while the fireworks started. It was the first time she'd shown me any sign of affection. And the first time I considered that maybe, what I needed had been here all along.\n\n***\n\nI mulled over my thoughts from France multiple times upon our return. I resolved to talk to Lauren the following Friday, but she wasn't at our normal table after work. In fact, I hadn't seen her all week at the elevators each morning where she'd been meeting me for the past few months. When I inquired with Brad about her absence, he said she'd gone to help their mother take care of their ailing grandmother out of state. It could be anywhere from a few days to a few weeks depending on the doctor's latest prognosis. So I set my unsteady feelings on the back burner and focused on my work again.\n\nJanuary and the following months brought back a regular schedule. I was working more legal cases and going on fewer trips. Which allowed me to spend more time at Maggie's on the weekends. Where I met Beth.\n\nShe was a redhead with a spitfire attitude that matched. There was something about her eagerness to learn\u2014how innocent she was, being with another woman\u2014that drew me to her. Little did I know how much more there was for me to learn myself.\n\nI had my reservations at first since she admitted outright that she was bisexual. But she grew on me, and after only a few dates, I was showing her what Susie and Celene had shown me. Helping her blossom. Taking her under my wing.\n\nIn turn, she introduced me to the art of body piercings. She had her clitoral hood pierced. I had been turned off by it at first. But the more time I spent with her, the more I understood how the piercing intensified the feelings in her body when she orgasmed. The more I became obsessed with playing with it just to hear her moans and mewls of pleasure.\n\nDid I want it for myself? No. But if the right woman had it... Oh. My. God.\n\nBeth planned to get both nipples pierced, too. She had been using small clamps off and on for weeks to get adjusted to the eventual feel of what it would be like to have metalwork there all the time. After a little convincing, I let her clamp my nipples. I was still unsure if I liked the feelings it caused within me, but I was happy to play with her when we were together. And I told her she might want to switch to clip-on earrings instead of nipple clamps, the latter of which were more compressing...and a little painful.\n\nShe was also into ropes and other bondage techniques. An ex-boyfriend had introduced her, and she admitted that it made the sex better. After a little trial and error, we both discovered that I was more aroused from binding her than the other way around. She said that meant I was a Domme or Dominatrix, the female version of the Dominant role in the realm of BDSM. What fun I had perfecting the different methods that brought her the most pleasure, though I drew the line at causing her pain.\n\nLauren returned after almost two months. Her time away seemed to have drained her. While she joined Beth, I, and our friends at Maggie's, she was quiet and kept her distance.\n\nWhen the next assignment was handed down to us, Lauren wasn't my partner. I spent four days with a female lawyer in Texas. She ran the show, and we ended up getting a free hotel stay and meals out of the trip as none of the firms wanted to join with us. It was obvious that the traveling salesmen bit had lost its appeal.\n\nOn my own return, Beth broke the news to me that she didn't think she was completely over guys. Since she didn't think it was fair to me to have to share her, we agreed to end the relationship. Lauren seemed to perk up a bit after that, but she still wasn't her old self when I went to France by myself for three weeks to check in with Dr. Robard and have a mini-vacation in Italy.\n\nThe third day I was abroad, I met a lovely little thing named Chloe who worked as a waitress at Acqua Al 2 in Florence, one of my favorite places I'd found while studying. Although I'd explained that I was only there for a very short time, she was more than happy to show me around and make me feel comfortable. In every way possible.\n\nI hadn't been so relaxed in years. But soon enough, the daydream ended.\n\nThis time when I came back, Lauren asked me to join her for dinner. She told me all about her grandmother and mother. How hard it had been to see the former wasting away. How the latter had chastised her daily for being a lesbian, making Lauren wish she'd never gone home. She had almost told her mother that Brad worked in a lesbian bar, so she could share her burden, but she knew that wasn't fair to her brother. So she had borne her mother's criticism and left as soon as her grandmother passed. Because she knew, she would return to the comfort of our special relationship where she felt safe.\n\nShe hadn't said it, but I knew she must be thinking her expectations had been dashed because she'd found me in the arms of another. Hence her being withdrawn. She'd never come right out and said she wanted more than a friendship from me, but I had a strong suspicion that it was in there somewhere, and she was just waiting for the right time to let me know.\n\nIt pained me that she'd opened up so much to me about her feelings when I hadn't been able to do the same for her months ago. That I wouldn't be able to return the sentiment if that time ever came. Because during the time apart, I had realized that while what I'd felt in Paris had been a longing, it hadn't been a longing for Lauren. She wasn't even close to what Susie..., Celene..., Beth..., or even Chloe had meant to me.\n\nAnd none of them compared with Kat.\n\n***\n\nI fell back into my groove. With the success of expanding the firm to France, I was being sent overseas more, along with another team. Once, Lauren went with me and we stayed with Dr. Robard again, but mostly, I was either alone or with an actual lawyer. On the solo trips, I was able to jaunt around when the time allowed. Visiting places I hadn't seen in years since my studies had taken me abroad. But I refrained from hooking up with anyone, as I had grown tired of the short dalliances that I knew would lead to nowhere. Not unless I moved to Europe, and I had no desire to do that. At least quite yet.\n\nI was always happy to return to the states where I could get back to my regular job and see my friends, especially at Maggie's. No one special caught my eye there, either, which seemed to please Lauren as she smiled a lot more around me. Maybe she'd accepted that me being single and having time to spend with her like the old days was enough for her. In any case, I was glad to have a reliable friend. Especially since Meredith had moved out to the East Coast, restricting my venting sessions to our cell phones.\n\nOver the next several months, the international trips slowly phased out just as the ones in the states had. Upper management determined we could now do conference calls both stateside and overseas to accomplish what in-person meetings had once done. I thought it was very impersonal, but I wasn't in charge of the company's budget. Plus, it meant I could stay in Chicago and concentrate on my actual job, negotiating settlements.\n\nLife finally seemed back to normal, or as normal as it ever was for me. Which just meant something was around the corner to flip it upside-down...\n\n###\n\n---\n\nONE YEAR LATER\u2014PRESENT DAY\n\n---\n\nThe moment Kat walked from the bar to the restroom, the spell over me was broken.\n\nOh, my God! Kat! Here in Maggie's, of all places!\n\nI wanted to go after her, but my feet seemed glued to the spot in the shadows. My brain was fuzzy, as though I'd had ten drinks, not two. What would I even say?\n\nFor the longest minute I'd ever experienced thus far in my life, I stared at the door under the glowing red neon \"Exit\" sign. Then I closed my eyes and took a deep breath before I forced my feet to head back in the direction I'd just come from.\n\nEach step forward now seemed to bolster my confidence. I told myself to remain calm. It was just Kat. Surely, I could tell her hello without having a panic attack.\n\nBut the moment the old wooden door squeaked closed, cutting off the chatter and music in the other room\u2014allowing me to hear the sobs coming from the last stall\u2014my resolve crumbled. The cries stopped abruptly when I crossed the narrow room, the only sound now my heels clicking on the mosaic tiles of the floor.\n\nI raised my hand, but something held me back from knocking on the stall door. Fear, mostly. What if she didn't remember me? What if she was here to meet someone else? I'd not heard her name mentioned around the club, but despite having been a regular for the past six years, I didn't know everyone who came here. Most, but not all.\n\nWhen I heard a ragged wheeze and then a hiccup, my fears were replaced with genuine concern once more. \"Kat? Are you okay?\"\n\nThere was no response at first. Then I heard the paper roll spinning, the flush of the toilet, and finally, the click of the lock being disengaged. Another second later, the door started to swing inward.\n\n\"Yes, I'm fine,\" Kat said, her voice shaky, belying her attempt to sound convincing. The door stopped halfway when our eyes met, and I swear I heard her laugh before she hiccupped again.\n\nMy heart thudded wildly in my chest. I wondered what was going through her head while those beautiful chocolate eyes regarded me. God, I would do anything to comfort her...to dry those tears for her. Even beat up whoever had caused them. That thought made me smirk. Where had that sudden bravado come from?\n\nShe was blinking at me, but it didn't seem to clear the glossy haze in her eyes.\n\n\"Kat, are you sure you're okay?\" I stepped toward her, and she retreated. Only to run into the toilet and sit down heavily. Which, for some reason, made her start crying again. Hard.\n\nI rushed to the sink and grabbed a couple of paper towels then returned to squat at her feet. I tried not to cry myself as I blotted the tears from her red cheeks. Oh, my poor Kat. Who had done her so much wrong?\n\nHer shoulders were noticeably shaking while she seemed to try to get ahold of her emotions.\n\n\"Hey, it's okay,\" I soothed. \"I didn't mean to startle you.\"\n\nWhen Kat made several quick gasps, I refrained from running my hand over her hair. But I did dip my head to catch her gaze. \"Take a deep breath. Nice and slow. And another.\"\n\nHer mouth twisted, maybe to form a smile. But the result was closer to a grimace. Then she looked down at her hands in her lap.",
        "The allure was too much. She was too close for me to ignore it any longer. She was in obvious pain, evident by the fresh tears rimming her eyes, and my words were not helping.\n\nIt was a miracle that my left hand was steady when I placed it on the right side of her face. Her skin was so hot. My thumb swiped at her raised cheekbone, collecting the dampness that had gathered there. My inhale was sharp when I felt her shudder...and she flicked her gaze to mine again.\n\nI smiled at her, warmth filling my chest. \"Hey, Kat.\"\n\n\"Hey, Jenna.\" She managed a real smile herself this time. Then she added, \"Thanks.\"\n\nHer words made my smile broaden. She remembers me!\n\n\"What brings you to Maggie's?\" I managed to get up without falling over or twisting my ankle in my heels. Then I took her hand, not thinking twice as I helped her stand as well. \"And on a night like this? Oh, by the way, congratulations. I saw the announcement in the paper last week.\"\n\nThat fact had slipped my mind when I first saw Kat in the bar. I had sat dumbstruck at work on my lunch break when I'd read the brief notice. God knows why the memory suddenly came back to me in the bathroom with Kat only inches away. My chest hurt again now that I remembered someone else\u2014a guy, for that matter\u2014had swept Katrina Jenkins's heart away.\n\nI shrieked at the tight squeeze on my hand and automatically jerked my arm back.\n\n\"Sorry,\" Kat mumbled, loosening her grip...but she didn't let go completely.\n\nHer skin was so soft in mine...her fingers so delicate. No. Don't go there. I shifted my eyes from our linked hands back to her face. That's when I saw her lower lip trembling.\n\nHer voice cracked when she continued. \"Thank you, but there isn't any engagement now. Not after tonight.\"\n\nA fury I'd never known\u2014not even when the boys had harassed me\u2014filled my head. My prior vow to beat up the offender was no longer enough. I would literally kill the bastard who had caused Kat this distress if we ever crossed paths. And I had a strong suspicion it was the other person in the newspaper photo. I didn't know him, but I hated him all the same.\n\nI pursed my lips to quell the flood of emotions. We could deal with the Danny character later. Right now, my priority was taking care of Kat. \"No need to explain. Let's get you cleaned up, and then you will come with me.\"\n\nNeither of us spoke while I turned on the faucet and searched through my bag. I took my time and tried to be gentle when I cleaned away the streaks where her mascara had run. Covered the splotchiness on her cheeks with powder. Applied some lip-gloss with my finger to draw attention from her puffy eyes.\n\nA sense of calm settled over me as I ran my hair pick through the tangled mess of her mane, which I was glad to see that she'd grown out. I sighed, basking in the feeling of her hair sliding through my fingers after all these years, even if the moment was fleeting. I may have lingered a little longer than necessary once her tresses were smooth though still damp, but she didn't complain. If anything, she seemed to have relaxed herself because her shuddering exhales had become more sporadic until they ceased entirely.\n\nToo soon, I stepped back and put away my comb and cosmetics. I gave her a warm smile and said reluctantly, \"Okay, I think we're ready.\"\n\nKat just stared blankly at me after she turned around. Even when I took her hand in mine again. So I tugged lightly. Only then did she seem to break her daze and acknowledge what I'd said with a nod.\n\nShe followed when I led her across the room. I let go of her hand to open the door then guided her out into the bar with my palm on the small of her back. My fingers tingled with awareness of how close I was to her body, although she was wearing two layers. I resisted the growing desire to give her a hug. She may have appreciated the gesture as an act of sympathy, but I knew it would have been partly selfish just so I could feel her in my arms.\n\nWith a little more difficulty than I had expected on my part based on my racing pulse, I steered her toward the bar where Lauren was waiting. My coworker turned just as we approached and gave me one of her megawatt smiles. But it fell completely when her gaze shifted to Kat then back to me.\n\nLauren's lips pressed into a scowl before she handed me a glass with a dark liquid\u2014nodding at Kat\u2014and turned back to Brad who gave her two more glasses. Then she walked away with our drinks.\n\nI stared after her for a moment, trying to figure out what had just happened. Not coming to any conclusions, I shook it off and guided Kat ahead of me in the same direction.\n\nBack at our table on the far side of the room where we could always talk and the music was merely a backdrop, I offered the chair on the long side of the table to Kat and sat in the one next to her, against the wall. Lauren slowly sat with a not-so-quiet huff in the third and final chair, which was also against the wall and opposite me. It didn't occur to me until we were all seated that Lauren might be miffed that my friend was now sitting in the chair she had vacated in order to get our drinks. That I had gone to the bathroom but returned with another woman.\n\nI took my Malibu and pineapple from where Lauren had set it in the middle of the table and raised my glass to my old classmate, glancing between both ladies. \"Lauren, this is Kat. Kat, Lauren.\"\n\nKat offered a small smile. \"Nice to meet you.\"\n\n\"You, too,\" Lauren nodded and smiled back, but I couldn't hear any sincerity in her voice.\n\nI pushed the glass of dark liquid toward Kat and watched her wrap both hands around it without taking a sip. My gaze returned to Lauren, who was looking at her own glass, her mouth forming a frown while she twirled the swizzle straw through the same concoction I was drinking.\n\nGood grief! Is she seriously in a snit because I was helping a friend and didn't get our next round right away? That I gave away her chair? Phft. She'll have to get over it.\n\n\"Anyone got a cigarette?\" Kat mumbled, breaking the awkward silence.\n\nBoth Lauren and I reached for our purses, but I could see she wasn't putting much effort into her search as she barely stuck her hand inside and shrugged. Resisting a sigh, I pulled out my pack, tapped a cigarette loose, and handed it to Kat before I offered my lighter as well. She put the filtered end in her mouth, leaned forward, and drew a couple of puffs until the other end lit up. Then she sat back and closed her eyes.\n\nI had to suppress the soft groan rising inside of me while I watched her lips moving as she inhaled the smoke then blew it out. How her slender fingers capped with light pink-painted nails trembled slightly but kept hold of the cigarette. After another minute, the creases in her forehead disappeared.\n\nLauren's foot bumped mine under the table. She tipped her chin at me when I faced her. I wanted to deny her just to give her something genuine to pout about, but I tapped out two more cigarettes, handed her one, and lit us both up. She turned and rested against the wall, her right arm propped up on the top of the chair back, supporting her head while she stared out at something in the room beyond, occasionally taking a drag or tapping off ashes with her left hand.\n\nMusic thumped in the distance, matching the beating of my heart. Three different tendrils of smoke swirled and merged around the light sconce illuminating our table. I studied my coworker for another moment longer then shifted my attention back to Kat.\n\nI noticed that she alternated between closing her eyes and fixing them on the table. I couldn't help following the lines of her throat...her face. Her hair was drying into waves, and my fingers itched to tame the few flyaway strands. To bury completely in her locks while my lips caressed hers.\n\nI moaned softly at that thought and took a long drag myself to steady my nerves. God, I still have it bad for her. Even though she's engaged. No...wait...not anymore, she isn't.\n\nStill...\n\n\"We went to school years ago,\" I heard myself saying, feeling guilty at my thoughts as though I'd expressed them aloud. I tapped off the ashes and tipped the end of my cigarette at Kat, swirling the straw in my drink for a moment with my other hand before throwing back a big swig of the alcohol. The fruit juice-alcohol combination bit the back of my throat after it mixed with the remnants of nicotine on my tongue. \"Kat was a bookworm, like me. But she was so much better at it than I ever was. Teacher's pet and all that.\"\n\nKat raised her head and blinked at me. \"I was not! I couldn't help it if they liked me.\"\n\nMy smile grew, though sad memories filled my head with the good ones. \"Everyone liked you.\"\n\n\"Everyone but Tim Jacobs,\" Kat said with a soft snort.\n\nI followed the movements of her hand as she raised the cigarette to her mouth to take another drag\u2014the end of the stick glowing a mean orange-red at the deepness of her inhale. Her shiny lips parted, releasing a stream of smoke. Then her words registered in my lust-filled brain, and I rolled my eyes. \"He was a jerk. Still is. You're better off without him.\"\n\n\"Oh, you keep in touch with him?\" Kat's voice held a hint of what sounded like hope, but in that way that was always an attempt to be nonchalant although it never really quite was. She finally tasted her drink, cringing slightly but taking a second sip before her eyes drifted closed.\n\nI watched the smoothness of her throat as she swallowed, and something deep inside me stirred. If she only knew what she did to me, even after all these years. I was right. I would probably never get over her.\n\nI took a sip of my drink and licked my lips before admitting, \"He's my boss.\"\n\nKat coughed suddenly, spraying the table with her drink before she clamped her mouth shut.\n\nLauren actually laughed, which made me frown. For some reason, I was sure her reaction was due to Kat's episode, not my comment. Although, Lauren did hand over the cocktail napkin that had been under her glass. \"Here.\"\n\nKat blotted her mouth, still coughing. \"He's your boss? Damn.\"\n\nI couldn't help laughing now, too. \"Yep. Cruel world, isn't it?\"\n\n\"Men! Who needs them?\" Kat said, shaking her head. Then her eyes widened with a soft gasp. \"Sorry, preaching to the choir, I guess.\"\n\nI smiled at the sudden rosiness of her cheeks. God, she was beautiful.\n\n\"Preach it, sister.\" Lauren clinked her glass against Kat's and then mine, her eyes sparkling at me over the rim when she took a sip. She seemed to have relaxed, maybe thinking Kat wasn't an actual threat.\n\nOver the time that I'd known her, Lauren had made no advances toward me except that brief kiss on my cheek in Paris. And I hadn't shown her any special treatment that should indicate I saw her as anything more than a good friend. At least not to my knowledge. But Brad had warned me more than once that his sister could be determined when she set her mind on something...or someone. Maybe even obsessive.\n\nI hadn't been interested in anyone since Beth, and Chloe was just a fling. One I hadn't even told Lauren about because it was none of her business. No one had shown me any interest, either. Yet, if I thought about it now, all of my free time had been spent at Maggie's...with Lauren.\n\nKnowing how the clientele here were usually respectful of any couples who visited but were also quick to try to rope anyone who entered alone, that could explain why no one ever approached me. The first time I'd come here, I was with Celene. All subsequent times had been with her, too. And since she'd left, I'd always arrived with Lauren after work.\n\nHuh. Does everyone think Lauren and I are together?\n\nI should have been upset with that possibility. Or at least mad at myself for being too blind to see it sooner. But I really hadn't wanted to hook up with anyone. Not at least until now.\n\nThe three of us chatted well into the night, mostly about what we'd been up to since high school. We emptied my cigarette pack that had been mostly full, and I lost count of how many rounds we ordered. I realized the more she drank, the more Kat opened up. I could have listened to her talk for days. Which was entirely plausible since she'd revealed she was on vacation the following week.\n\nShe cried a few times when she told us how she had met Danny. How he had proposed. Broken up with her. My heart ached for her...for me. We were two of a kind, unlucky in love.\n\nEventually, Brad announced last call. The patrons slowly trickled out and the lights came up, making me wince at the sudden brightness.\n\nKat leaned on my shoulder, my arm around her when we made our way to the door and back upstairs to street level to catch a cab. She blinked slowly at me after all three of us had crawled into the backseat together and I asked her where she lived. Her answer was clear, and she said she was fine. But her slow smile and half-lidded eyes told me she was going to be hurting tomorrow. Both from a hangover and heartbreak once she remembered what had happened tonight.\n\nI wanted to walk her up once we stopped outside her brownstone. But Kat was out of the cab and shutting the door before I even had a chance to make the offer. A lump filled my throat and a plan came together in my head while I watched her climb the steps. I wasn't letting her get away that easily. Not this time.\n\n###\n\nI barely slept. When I did, my dreams were of strange people asking me to prove I loved them. Of me crying that I only ever wanted a cat and my mother telling me no, we couldn't have one on the military base. I woke in a sweat, panting. The moon was still high in the sky when I stumbled to the window to pry it open and get some fresh air.\n\nI went back to bed. But though my eyes were closed, my thoughts were jumbled with grocery lists and lawsuit details and worries that I was stupid for wanting to try to win Kat's heart for myself. Deep down, I knew at least that I had to try. If she denied me, I would walk away, as much as I felt that would destroy me. I just had to know for sure.\n\nMy back ached when I woke again, and I was glad to see that the sun was starting to peek between the buildings opposite my apartment. A shower and two cups of coffee later, I paced my living room, glancing at the clock. Was it too early to call on her?\n\nAfter fretting for almost forty-five minutes, I headed to the market closest to Kat's place, practically running up the stone steps leading to the entrance to her brownstone, my purchases by my side. My free hand shook when I reached out to the panel of buttons by the metal-framed glass doors. I clenched my fingers, took a deep breath that did nothing to calm my nerves, and tried again.\n\nThere was a distant buzzing sound, but then nothing else happened. I checked my watch. It was after nine, but maybe she was still sleeping off the effects used to drown her misery. If so, she deserved the break from reality for however long it lasted.\n\nI was still considering whether to leave or press the button next to 'Jenkins, K.' on the panel again when the door in front of me made a clicking sound followed by a buzz. I grabbed one of the handles and let myself into the lobby. Which had two doors and a staircase.\n\nThe panel outside had not had any apartment numbers, nor did the metal row of mailboxes adorning the wall to my left. Of course, I didn't have her phone number, either. Shit.\n\nI was turning to ring her button again when a man entered from outside.\n\n\"Excuse me, sir. Do you know which one is Katrina\u2014\"\n\n\"Number four, upstairs.\"\n\nMy thanks died on my lips as he hurried past me and disappeared through the first door on the right. I shook my head and ascended to the second floor, rapping on the door with a gold number four affixed above a peephole before I lost my nerve.\n\nThe door opened to reveal Kat in the same clothes I had last seen her in, her hair down around her shoulders. Both were slightly rumpled. And fucking sexy.\n\nIf you look like that on a bad morning, be still my heart.\n\nAloud, I just said, \"Hey.\"\n\nShe pressed her hand to her temple, her eyebrows furrowing for a moment while she stared at me.\n\n\"Are you going to invite me in, or are you just a tease?\" I bit the inside of my cheek for being so brazen and narrowed my eyes. \"Looks like I'm just in time.\"\n\nShe stepped back and slowly closed the door once I'd passed. \"Sorry, I must have pressed the wrong button.\"\n\nHer apartment had an open floorplan with a decent sized living room and a kitchen with a small island dividing the two spaces. I made a beeline for the latter.\n\n\"You didn't want to let me in?\" I glanced at her over my shoulder with a smile while I unpacked the contents of the bag.\n\n\"Yes. No.\" She shook her head. \"I mean I didn't know it was you.\"\n\nShe was so adorable. Please, God, please. Let this work.\n\n\"You are a tease. Interesting.\" I put my hand on my hip and looked around the kitchen. There were several cabinets. I didn't know where I would even start. I turned back to her. \"Do you have a martini shaker?\"\n\n\"Sorry. How about a blender?\" She pointed to a mini cabinet that looked like a garage door situated in the corner on one counter then sat down on the other side of the island, facing me.\n\nThere was a soft curse behind me while I located the appliance. It looked almost brand new. At least that meant it probably worked. What better time than the present to use it? I found a spoon in the drawer next to the sink and got to work.\n\nKat's fingers were tapping noiselessly on the counter, and she was worrying her lower lip. I'd smoked enough to know the signs when someone was nervous, craving a fix to calm down. And she was out of cigs if the empty bowl nearby was any evidence.\n\nI poured the small bottle of tomato juice into the blender, spooned some horseradish from a jar, and added several shakes of Worcestershire sauce and tobacco sauce. After some celery salt, garlic salt, and pepper, the final ingredient\u2014vodka\u2014joined the mixture.\n\nNow for some ice. I opened the freezer and took a good handful out, glancing back at Kat. I felt my forehead furrow at the sight of the dark circles under her eyes. \"Did you get any sleep?\"\n\n\"I remember you dropping me off last night and then waking up this morning on my bed. So I must have slept.\"\n\nHmm. It had probably done her as much good as it had done me. \"Why don't you go take a shower?\"\n\nShe cringed. \"Do I smell that bad?\"\n\n\"No, but a hot shower does help with a hangover. Now, shoo.\" I wiggled my fingers at her and raised an eyebrow when she obeyed.\n\nOnce she disappeared into the bedroom where I assumed she had access to a bathroom, I pressed my palms against the countertop and tried to stop the wheezing that suddenly overcame me.\n\nI was actually in Kat's apartment. Standing in her kitchen. Making her a fucking Bloody Mary...all because I'd helped get her drunk the night before. Geesh, what a lousy friend I was turning out to be.\n\nFriend. I scoffed at that word. I didn't want to be her friend. At least, not just. And I suddenly felt horrible inside for wanting something so much more than that.\n\nWhat had I been thinking? She meant too much for me to take advantage of her misery when all she needed was someone to show her sympathy. To comfort her.\n\nI finished mixing the Bloody Mary and poured it over some ice then set it out by the chair she had vacated. I was considering that maybe I should just leave when my cell phone rang. The caller ID said it was Tim. Shit.\n\nI took the call, trying not to swear aloud when Tim asked me to come in around eleven to go over some paperwork. He was rambling about some numbers when I saw Kat walking down the hall in sweats and a sweater. Her damp hair hung loose around her face, and I could suddenly recall how it had felt to run my fingers through the wet strands last night. A moan tried to inch its way up my throat, but I stomped it down. I pointed to the drink on the counter...and raised my eyebrows when she picked up the glass, sniffed it, and took a big gulp. Well, that was one way to do it.",
        "By the time I'd finished my conversation with my boss and hung up, Kat had finished the drink. And I had revised my plan. Just hearing Tim's voice had reminded me of that night in Louisiana. That he had simply gone after what he'd always wanted without regard to what I might want, too. I couldn't do that to Kat. She was grieving, having just lost her fianc\u00e9. What kind of person did that make me to swoop in when she was at her lowest and try to be a hero...merely for my own gain?\n\nI refused to be callous, even if I never told her my true feelings for her. Instead, I would be whatever Kat needed me to be. If it was only a shoulder to cry on, I would offer my shoulder. I would lend my ears to listen if she needed to vent. Nothing more. It was the least I could do after she'd been there for me in high school, although she probably didn't even remember that day in the cafeteria. And though it may kill me inside, I would find a way to be content with just being her friend.\n\nI set my phone on the counter and gave her an honest smile. I really did empathize with her situation...even the part that I had nothing to do with. \"Feel any better?\"\n\n\"A little.\"\n\nI headed to the couch to sit down. My back was still aching from all the tossing and turning last night. Suddenly, she was behind me, following me. She sat down first, and I took the opposite end of the cushions after I discarded my shoes.\n\nShe cringed. \"Not a big fan of Bloody Marys, though.\"\n\n\"Trust me. It's better than a migraine.\" I thought of something else that had worked when Celene had tried to help me relax the night Tim told me I was traveling with him to California. I wondered how Kat would react. \"Give me your feet.\"\n\nTo my surprise, she swung both legs up onto the couch and rested her head on the padded arm. She moaned when I took her right foot in my lap and massaged it, pressing my thumbs into the cool sole.\n\nI gulped at the sound...at the thought of what else would have her melting like putty in my hands, vocalizing her content. And the combined softness of her skin on top and the roughness underneath by her heel? I had goosebumps popping up all over. This was going to be torture just being friends.\n\nMy fingers lingered over her toes that had the same polish as her fingernails. And the longer I had my hands wrapped around her foot, the more the coolness dissipated. \"How are you dealing with the guy thing?\"\n\nShe took her time answering. \"Oh, Danny. I'm okay, I guess. Haven't heard from him.\"\n\n\"You're probably still in shock. After the fourth drink last night, I knew you were feeling no pain.\" I switched to her left foot. \"You were entitled, though.\"\n\nKat shrugged, which must have been difficult from how sunk into the couch she appeared to be. She was practically lying down with her neck at an odd angle on the armrest still. \"I haven't really thought about it much. Maybe I just don't want to.\"\n\n\"You'll have to, eventually. You can't help it.\" Tears choked my throat as my thoughts took over and became words. \"Something, someone, will remind you, and then you'll just break down when you least suspect it.\"\n\nHer voice was equally strained when she asked, \"Speaking from experience, huh?\"\n\nI couldn't look at her. If I did, I'd end up crying. Admitting my true feelings for her that I'd kept buried just under the surface for all of these years. Because I'd just promised myself I wouldn't go there. Somehow, I managed to whisper, \"You could say that.\"\n\nAfter a moment, Kat scooted upright and continued. \"Danny and I have gone together for over two years. It became...routine, I guess. Marriage just seemed like the next step. Not that I was opposed to it. In retrospect, maybe he was. At least to me.\"\n\nMy eyes snapped back to hers, and a fire lit in my belly. \"Was he cheating on you?\"\n\nShe seemed to consider that but then shook her head. \"I think he wanted to. Why else break off the engagement and say he doesn't want to see me ever again?\"\n\nMy hands stilled around her left foot that I realized I'd still been caressing, and I sat up straighter myself. That fire burned brighter. \"He said that?\"\n\nShe nodded, and this time, she was the one to glance away, her voice cracking. \"If he wasn't ready to get married, he could have just said that. I would have understood.\"\n\n\"He's a jerk.\" I heard the venom in my voice. That word wasn't harsh enough. Scott Martini? Tim Jacobs? They were jerks. Bullies. But Danny? He was an asshole. A bastard. And it was at that moment that I knew I needed to be more than a comforting friend to Kat. I needed to protect her. Because this wasn't over with Danny. Not by a longshot. I needed to be here for her if he tried to convince her to take him back. I leaned toward her, and she looked me in the eyes again. \"He doesn't deserve you.\"\n\nPink spread across her cheeks when she stared at her lap. \"Thanks.\"\n\n\"I mean it, Kat. You deserve so much more.\" I reached out and gently tucked two fingers under her chin. My words suddenly failed me when she lifted her eyes and stared back at me. I could see the dampness on her thick eyelashes when she blinked. She was so close, and my gesture so intimate...\n\nShe suddenly yawned. \"Sorry. I'm not the greatest company right now.\"\n\n\"It's fine.\" I smiled and took her hand, helping her to her feet. My heart beat faster when her fingers wrapped around mine. As she followed me down the hall and into her dark bedroom. I suppressed the thoughts that told me where I was...who I was with. I needed to be in control of my emotions, or it would be disastrous for us both. \"You need more rest.\"\n\nWhen she didn't move, I gestured to the bed and said, \"Lie down.\"\n\nAnd she did.\n\nLike a child, she kept her eyes on me while I pulled the covers up over her chest and lightly tucked them in around her shoulders. I felt my resistance waning and took the risk to briefly put my fingertips on her forehead. To slip her hair behind her ear.\n\n\"I'll call on you later,\" I said hoarsely. I checked my watch. I needed to hurry to meet Tim, but I could be back after lunch. It was the hardest thing to walk across that room and close the door behind me.\n\nGod, how I had wanted to stay with her. To lean down and kiss her. To crawl into bed with her and hold her, telling her it was going to be okay.\n\nI cleaned up the blender and the counter then packed up the remains of the items I'd brought. At her front door, I bit my lower lip, fighting against the desire to bail on my boss. In the end, I knew I did the right thing by leaving. But I vowed to come back as soon as I was able.\n\n###\n\nAs much as I detested being around Tim for too long, I was thankful for the distraction from my thoughts. By the time we were done, it was later than I had anticipated and past six. My stomach rumbled loudly on the elevator to the lobby. I just wasn't sure if it was from hunger or nerves.\n\nOn a whim, I stopped at a corner liquor store to pick up two packs of cigarettes before I swung through a Chinese takeout place and headed back over to Kat's. I was glad she answered the buzzer and wasn't still in bed. When she opened the door to her apartment, she looked refreshed with her hair pulled back into a messy ponytail. Her smile rendered me speechless for a moment. I had to swallow a couple of times before I could form any words. Even then, I stumbled over them.\n\n\"Um, I brought food. Chinese.\" I lifted the plastic bag as though I needed to provide proof. I gulped while I took in her T-shirt, jeans, and bare feet. My gaze landed on her breasts which were emphasized by the tightness of the fabric, and my voice was raspy when I said, \"And cigarettes.\"\n\nHer eyes lit up at those words, and her lower lip rolled into her mouth. A glimpse of her teeth peeked out while her grin widened and she stepped aside.\n\nI went directly to the kitchen again, as though I lived here. And Kat followed, taking a seat at the island facing me with her back to the living room area.\n\n\"I hope you like chicken lo mein.\" I silently cursed myself for not thinking of asking what her preference was...for assuming she wasn't a vegetarian and ate Chinese in the first place. Then again, I didn't have her phone number to have called her to check. I pulled the containers out of the bag\u2014a sense of d\u00e9j\u00e0 vu sending a shiver across my shoulders\u2014and then turned to search for plates in her cupboards. Everything from spices to cookbooks to pantry items were neat and organized, just like I assumed she was on a daily basis. One more thing like me. I suppressed a sigh and glanced back at her. \"I have both white and fried rice. You pick.\"\n\n\"I'll take fried, if you don't mind. Plates are to the left of the sink. Forks in the drawer below.\"\n\nI nodded and opened the only cupboard I hadn't checked yet. And I'd seen the forks this morning when searching for a spoon to measure out the ingredients for the Bloody Mary. I could use one of those myself right now. A drink, not a fork.\n\nKat was quiet while I divided the mixture of soft noodles, vegetables, and chicken in a tangy sauce over the two piles of rice on the plates. She stared wide-eyed and shook her head slightly when I put an eggroll and fortune cookie beside the entr\u00e9e and pushed her dish toward her. I just raised an eyebrow and spiked a piece of chicken on my plate.\n\n\"Thanks.\" She dug into her food but suddenly jumped up. \"Geesh. Do you want something to drink, Jenna?\"\n\nI swallowed my bite and waved at her to sit back down. I knew where the glasses were\u2014above the plates\u2014and started toward the fridge to see what she had to offer. \"How about some vino?\"\n\nHer laugh was musical. \"After my experience last night, I'll pass.\"\n\nI considered her reasoning briefly but said, \"Nah, it'll actually be good for you.\"\n\n\"Okay, Doc. There should be a bottle in the fridge, but it's not open.\"\n\nSpotting a bottle of Chardonnay, which would pair well with the fried rice, I poured us two glasses and toasted hers before taking a sip. It not only tasted good, but it also felt wonderful, coating my throat.\n\nWe ate in silence, me standing while she sat, alternating between twirling noodles onto our forks and taking swigs of the white wine. I wondered what she was thinking about. She kept her eyes downcast most of the time, but occasionally, I saw a sparkle within when she glanced up and smiled at me. I couldn't help but return the gesture, though I don't know if she saw it. At least she seemed content with my presence because I had begun to wonder if she was offended that I'd shown up twice today, unannounced.\n\nOnce again, I cleaned up her kitchen. It felt second nature to me. She opened her mouth at first, probably to object, but then she just crossed her arms on top of the counter and sighed. I could feel her eyes on me while I moved around and put the clean dishes in the rack to dry. It made something deep down twitch that she was paying particular attention to me.\n\nWhen I was done, I considered leaving. I'd made sure she had gotten some rest earlier and had something to eat at least once today. I didn't want to impose. I was sure she would still want to be alone. But when I started to wash my wine glass, she asked me if I wanted to stay and have another.\n\nFor a couple of hours, we sat on opposite ends of the couch and watched a movie I hadn't seen before. Kat said it had been popular when we were in high school and had since become a cult classic. I just smiled. I didn't point out that I only went one year to public school, and my parents had been a little strict with what movies they'd let us watch on the base. A bunch of high school seniors hazing freshman and getting drunk and high on the last day of school wasn't exactly my mother's idea of appropriate. Then again, both of her daughters had turned out to be lesbians.\n\nI had to admit, the movie was good. Or maybe it was the company...and the fact that we were both smoking and drinking. I, at least, was relaxed. I think she was, too, though she was very quiet. Especially, after I ran to the restroom.\n\nSuddenly, Kat laughed, but nothing funny had happened on screen. I did a double take between her and the TV. \"Did I miss something?\"\n\nShe was grinning. \"Nope, it was inside my head.\"\n\nI narrowed my eyes at her. \"As long as you don't talk back to the voices, you should be fine.\"\n\n\"I'll keep that in mind.\" She snuffed out her cigarette and got up. \"Do you want more wine?\"\n\nMy heart did a little pitter-patter. \"Are you trying to get me drunk?\"\n\nI was joking, but I was also honestly curious since she'd previously said she wasn't imbibing after last night's ordeal. I finished the last swallow and handed over my glass. \"Not that I'm complaining.\"\n\n\"It was not my intention.\" She disappeared into the kitchen and stuck her head in the fridge. \"I have no idea how to cure a hangover for you.\"\n\nThat pitter-patter was a full-blown base drum now, and it was pounding at my chest and in my ears like no tomorrow. My voice sounded husky to me when I said, \"Oh, I could teach you.\"\n\nBoy, what I wouldn't give to make good on that promise.\n\nKat seemed to freeze in the kitchen, her back to me. I watched her for a full minute before she shook her head and took a sip of her wine. Then she brought me my glass. And muted the TV.\n\nI faced her on the couch now, my glass at my mouth though I didn't drink. \"Something's up.\"\n\nHer tongue darted out and licked her lips, making me groan softly, which I disguised by taking a long sip. She echoed the motion and seemed to back up a little. \"Danny called.\"\n\nMy hand stilled in the process of lowering my glass. I locked eyes with her over the rim, holding my breath.\n\n\"Or rather, he sent me a text.\" She picked at the leg of her sweatpants, although I saw nothing there. \"He wants to come over tomorrow and get his things.\"\n\nI knew this was coming. Yet, I still wasn't prepared. After a long exhale, I managed to keep my voice calm and asked, \"Is that so?\"\n\nKat shrugged.\n\nMy hand was shaky, but I was able to set down my glass without knocking it over or spilling any of the wine. I turned a little more and pulled one leg up under me. I had to let her lead this discussion.\n\n\"I guess it's better to get it over with.\"\n\nMy jaw clenched, and my hands fisted in my lap. She was agreeing to his wishes?\n\nNo! You need to scream at him. Tell him to fuck off! Throw his stuff to the curb just as he did with you.\n\nBut the longer I stared at Kat in disbelief, the more I could tell it probably hadn't been an easy decision taking the high road. As cathartic as my ideas would have been, she needed to do this amicably. Make a clean break. As long as she didn't kowtow to him and take him back in the process.\n\nShe was worrying her lower lip, and I got the impression that she was waiting for me to tell her meeting Danny tomorrow was okay. But I couldn't do that. I refused to make the decision for her. So I said the next best thing.\n\n\"You know, you can say no. If you're not ready, that is.\"\n\n\"Will I ever be ready?\" Kat shrugged. Maybe in response to me, maybe answering her own question. Or maybe signaling that she was giving up trying to talk herself out of doing this entirely. \"There isn't much stuff. I could even get it together tonight. Have it ready by the door so he doesn't have a reason to stay long.\"\n\n\"Yes,\" I said slowly, watching my words so not to just agree with every suggestion she had, \"that sounds like a good idea.\"\n\nShe glanced around the living room, and I tried to see what she was looking at before her head turned and looked elsewhere. Then with a gasp, she jumped up and ran out of the room.\n\n\"Kat, wait!\" I went after her, my feet pounding on the hardwood of the hallway. I slid in my socks and came to a halt at the doorway, grasping the frame.\n\nShe was coming out of the closet with a medium-sized empty box. Then she disappeared into the adjoining bathroom. I could hear drawers and cupboards being opened and slammed closed. At least she was finally showing some anger.\n\nI had been concerned about how calm she was being. Letting Danny make all the demands. That wasn't the Kat I had known in high school. She stood up to bullies. Defended the weak. I'd really hoped she hadn't changed.\n\nI could see some bottles and such in the box when she returned and set the box on the floor. Only to cover them with the contents of a drawer in the dresser. I could hear her heavy panting as she looked around. I closed my eyes for a second, failing to push away the thoughts of how I'd love to hear those sounds coming from her for the right reasons.\n\nWhen I opened my eyes, Kat was yanking on her ring finger. I managed to catch her arm as she drew back as though to throw the diamond in the box as well. I didn't close my fingers very tightly, but I had to pull a little when she resisted. \"He doesn't deserve to get it back.\"\n\nI released her just as suddenly and choked back a soft cry. The electricity I'd felt when I touched her skin scared me. Mostly because it thrilled me.\n\nKat broke my concentration when she said, \"Really?\"\n\nI saw her holding the ring up to the light. \"Keep it. For now. You can always pawn it.\"\n\nShe seemed to consider the idea then shrugged and took a small black box from a smaller dresser drawer. The ring secured inside, the black box flew threw the air and landed somewhere in the closet with a thud.\n\nI was still shaking my head about that action when I realized Kat had departed...with the box of Danny's things. I returned to the living room to see her kneeling in front of the small entertainment center encompassing the TV.\n\nI wanted to offer to help, but she seemed to have it under control. I took my seat again and relit my cigarette. The TV screen now showed a new movie where a guy was proposing. I was just wondering if that bothered her when she cussed and yelled for me to shut it off. Then she returned to tossing the chosen DVDs and CDs into the box with a crash that made me cringe. I fumbled with the remote and managed to hit the power button.\n\n\"Thanks.\"\n\n\"Of course.\"\n\nI turned and rested my arms on the back of the couch when she dropped the box by the front door. A leather coat was the icing on the cake. And the cherry on top was a plastic-wrapped box that sounded quite heavy when it landed. I'd noticed the label earlier and knew it was the wedding invitations.\n\nKat snorted. \"Ironically, he paid for them with his credit card. Said it wouldn't matter in the long run, because it was going to be 'our' money.\"\n\nShe kicked the box and it shifted, hitting the wall. Then she joined me on the couch with a loud plop that actually scooted the piece of furniture.\n\nI watched her gulp half of the glass of wine. I wanted to laugh, but I feared I would upset her. She had seemed to get a great sense of relief from that spontaneous activity of purging her ex's possessions. \"Feel better?\"\n\n\"Yep.\"\n\nI clinked my glass against hers when she raised hers and tilted it in the air.\n\nAfter several minutes of the only sound being a ticking clock on the wall and the hum of the refrigerator\u2014the thoughts in my head even seemed quelled for the time being\u2014I offered, \"If you need me to be here tomorrow for moral support...\"\n\n\"Thanks, but I should be okay.\"\n\nI wanted to insist. I didn't trust this guy. But I had already decided I wouldn't push her. I'd offered, she'd said no. End of discussion. \"All right. You call if you need me. I put a business card on your fridge.\"\n\nKat nodded, and I could feel her watching me while I finished my wine. It was borderline awkward.\n\nI stood slowly. \"I guess I should get going. Let you relax.\"\n\nShe didn't try to stop me but followed me to the door, her voice soft when she said, \"Thanks, Jenna. For everything.\"\n\n\"You're welcome, Kat.\"\n\nOn impulse, I cupped her face. But I resisted the desire to brush the pad of my thumb across her soft skin. To trace the rise of her cheekbone. To pull her close and hold her.",
        "I smiled at the surprise in her chocolate depths. At the apparent confusion while she seemed to try to read my eyes, as well. There was so much I wanted to say to her. I just knew it wasn't the time. So I lightly patted her cheek, retrieved my jacket and purse, and gave her a quick wave. Then I exited into the hall. Before I did something I would regret.\n\n###\n\nIt was about twelve hours later that I became my mother.\n\nI didn't recognize the number on my phone, and I usually let unknown callers go to voicemail. But for some reason, I hit the green button and said, \"Hello?\"\n\nI was met with a barrage of broken words due to someone crying. My heart dropped into my stomach a moment later when I heard my name in a sob. Danny's name. The name of a hospital.\n\n\"Kat, calm down!\" Fear slid up my spine. I had no idea how I wasn't crying, too. \"I'm on my way. Just hang in there, okay?\"\n\nI pinched the top of my nose while I waited for an answer, and when I heard her echo my 'okay,' I ended the call and stormed downstairs to the street. To my right, I could see my car about fifty feet away, though it seemed like a mile. But to my left, a yellow cab was turning onto my street.\n\nWho was I kidding? I was in no shape to drive.\n\nI'd barely shut the back door of the cab before I rattled off the hospital's name. Then I gripped the headrest of the passenger seat while we sped off. I ignored the driver's frantic glances at me, and he only told me once to sit back before he gave up.\n\nOh, God. Please let her be okay. Please!\n\nTen minutes later, I pushed through the emergency room doors and located the curtained area the front desk had told me about. Which is where I found Kat sitting side-saddle on a gurney, her legs lightly swinging over the edge and her head rolling back an forth against the wall.\n\nBut the moment her red eyes turned to me\u2014her right hand reaching out to me like a child\u2014my resolve to remain cool and collected crumbled.\n\n\"Are you okay?\" My shoes made a screeching sound on the linoleum when I skidded to a stop. I didn't wait for an answer before I pulled her to my chest. Finally, she was in my arms. Though it hadn't played out like I had planned, I would still take it.\n\nI pressed my lips against her head, holding her face gently. I felt like I was going to hyperventilate, but I didn't care, Kat was alive. And I was in a hospital anyway if something happened.\n\n\"You should see the other guy.\" She hiccupped and swiped one hand at her eyes and nose.\n\nReluctantly, I released her. Which allowed me to give her a good appraisal. I frowned at how her left arm just hung there in front of her, her hand supposedly buried under the towel bundled in her lap. \"How bad is it?\"\n\nKat gestured with her chin at the towel. \"Broke it.\"\n\nA nurse appeared from the other side of the curtain and wrote something on Kat's chart. \"It's a clean break. The doctor will be back in a few minutes to put on your cast and give you a prescription for some pain medication. Sit tight, okay?\"\n\n\"Sure,\" Kat mumbled and then sighed.\n\nI sighed myself when she laid her head back against my chest. I tightened my arm around her and pressed my lips to her hair. I closed my eyes and tried to control my breathing, but it was a futile effort.\n\nMy emotions were in turmoil. I was elated and sad that Kat had called me. Angry that her meeting with Danny had landed her in the emergency room...not him. But overall, there was a fight between the peace that started to settle over me the longer I held Kat and the flickers of desire that couldn't help being stirred at our closeness. At her apparent contentedness of having me here. She even seemed to snuggle up to me a little. But that could have been the adrenaline still rushing through both of our bodies...or just wishful thinking on my part.\n\nI ran my hand over her hair, brushing it back from her forehead with my fingertips in light motions like my mother used to for Mer, Nathan, and me to soothe us when we were upset. I heard Kat's sudden ragged cry, felt her shoulders slump. The poor thing. She'd had a rough two days.\n\nShe sobbed for a few minutes, gripping my arm while I rocked her. When her cries subsided, she released me and took a heaving breath. I patted her back and kissed the top of her head again.\n\nA laugh bubbled up when I thought of one of the few words I'd understood in her frantic phone call. \"So you punched him?\"\n\nShe nodded against my chest. \"Gave him a bloody nose, too, I think. He called on the way over. Asked if I could step out for a few minutes while he collected his things. I told him to be a man and face me. Plus I didn't want him stealing anything.\"\n\nI saw a box of Kleenex on the other side of her and handed her one when I heard the telltale sign of congestion after a cathartic cry in her voice. She blew her nose and continued, a stray sniffle escaping.\n\n\"When he finally showed up, I opened the door and asked for his key. Once he'd handed it over, I shoved his box out into the hall and punched him in the nose. Slammed the door in his face. That's when the pain hit me. I screamed and kicked the door. Forgot I wasn't wearing shoes. Broke a toe. That's taped up right now.\"\n\n\"Oh, my!\" I couldn't control my laughter now. My shaking caused her to shake, too, since I still had one arm around her shoulders. \"Then what?\"\n\n\"He asked if I was okay. I told him to go to hell. After I saw him drive away, I grabbed my purse and asked my neighbor to drive me to the hospital. She insisted on staying, but I told her I would be fine.\"\n\n\"Oh, Kat.\" I tipped her chin up with two fingers. I intended to tell her how proud I was of her, but I was still trying to find the right words when she blinked at me, her eyes still shiny from the shed tears. She was so close. I could feel the warmth of her breath as it caressed my face.\n\nFor just a moment, there was just her and I. And I wanted to show her how special she was to me, despite my promise to reign in my desires for her.\n\nThen the world rushed back in when a doctor pulled the curtain aside and rolled in a small table on tall legs. He smiled at me and then at Kat as he sat down on the stool beside the gurney and snapped on a pair of gloves.\n\n\"Let's get this wrapped so you can get home and get some rest, okay?\"\n\nI couldn't agree more.\n\n###\n\nThe cab ride was a one-sided conversation where Kat thanked me profusely for coming to the hospital. For being there for her. Both today and yesterday, not to mention the night before. But she didn't want to impose on me any longer. If I could just help her upstairs, she'd be fine.\n\nThe minute we entered her apartment, I put my foot down. \"I'm staying, and that's all there is to say.\"\n\n\"Fine, but I'm never a good patient. I tend to turn bi-polar.\"\n\nI could hear a tinge of anger in her voice, and I was unsure if it was aimed at me. Her lips pressed together for a moment\u2014during which I wished I could see inside her head\u2014before I saw a hint of a smile. Then there was a full-blown smirk.\n\nI made a mental note not to get on her bad side. \"I'm tough. I can handle it.\"\n\nShe shook her head, blinking rapidly, as though remembering I was still there. Which granted me some relief that her mini display of mood swings had not been because of anything I'd said or done.\n\nIt was my turn to press my lips together. Then I raised an eyebrow at her. \"You are going to take a nap. I'm going to run home and grab a change of clothes. You know, you're lucky you have this week off.\"\n\n\"Oh, joy. Just how I wanted to spend my vacation.\"\n\nI couldn't see her face, but I imagined she was rolling her eyes. I couldn't help laughing. \"Are you always this sarcastic, or is it just the drugs talking?\"\n\n\"Who knows? Ask Danny.\"\n\nI was betting on the drugs. Or maybe it was a little of both. \"I'll ignore that one.\"\n\nShe insisted she could put herself to bed when I pulled back the comforter that had been carefully smoothed out over the pillows. Her tone was a little snippy, and I knew not to press any further on that issue.\n\nBut I placed my hands on her warm cheeks and smiled at her. Heard her sharp inhale. Felt that slight jolt of energy from touching her skin. And once more, I shoved its meaning aside. Then, without a word, I left her and closed the bedroom door behind me.\n\nIn the hall outside her apartment door, I leaned my forehead against the number four and closed my eyes, pressing out a sudden welling of tears. With a strangled groan, I slammed my fist against the doorframe and turned, sliding down to sit on the floor with my back against the wall. Pulling my knees up to my chin and wrapping my arms around my legs, I let loose of the frustration swirling inside of me.\n\nI didn't care if anyone heard me crying, as long as it wasn't Katrina Jenkins.\n\n###\n\nThe fact that I had stolen Kat's keys only bothered me a little. It had been done with good intentions. Because it was the only way I was able to ensure I'd be able to get back in after I went to the store and ran home to pack a small overnight bag just in case. As an afterthought, I also grabbed my laptop and phone charger then headed back across town.\n\nThe apartment was eerily quiet. I took several minutes to stand in her kitchen\u2014palms pressed to the cool marble countertop of the island\u2014and surveyed the humble abode Kat had sought solace in day after day for the last several years per our conversation at Maggie's.\n\nIn school, the most I had known about her was how she dressed\u2014sophisticated yet not overly so in that cliquey kind of way. How she acted towards others\u2014standing up for those who were bullied, like me. And how she was dedicated to her studies\u2014placing in the top ten of our graduating class.\n\nFriday night, I had learned she was an only child. Her parents were both teachers, her mother at an elementary school and her father at a community college. She'd chosen not to go in the same direction but to pursue a degree in business administration. Only she had dropped out two years into the program to help her mother when Mr. Jenkins was diagnosed with Alzheimer's and quickly deteriorated. He'd passed away a year and a half ago. Although her mother was in a retirement home now, Kat had never completed her education. Thankfully, she'd had enough classes to get her Associates Degree, which allowed her to get a job as a personal banker at a credit union.\n\nNow, I was seeing a more personal picture. How she liked simple lines when it came to design, kept her furniture functional, and the decorations minimal. That everything had a place, which meant no clutter. And what I'd seen of her room, it was comfortable and tidy, too.\n\nA girl after my own heart.\n\nWith a sigh, I unloaded my grocery bags for the third time in two days and made as little noise as possible while I found a stockpot and matching lid in order to start some chicken and rice soup. Leaving the stock to boil, I set up my laptop on the small dining room table flanked by two chairs along one wall. The soup could sit warming when it was finished until Kat woke up. And in the meantime, maybe I could get ahead of schedule on some things for work...in case Kat needed me again at all this week.\n\nIt took at least three hours to knockout some research I knew I'd have to do for the Bentley case that Tim had discussed at length in yesterday's impromptu meeting. Mostly because I kept stopping to pace the living room or circle the kitchen island while I kept going over my feelings for Kat. My hands were starting to cramp from wringing them so much.\n\nMaybe it had been a bad idea even showing up yesterday morning. Arriving again in the evening. I should have just dropped her off Friday night and not looked back.\n\nBut who would have been there to comfort her in the hospital? To bring her home? The confrontation with Danny would have happened even without my involvement in her life.\n\nI knew I would have felt even more miserable to walk away after seeing her again in the bar, now knowing she had no close friends or family to turn to. Danny had become her world, and then her world had disappeared with a single phone call. What a pathetic way to break up with the girl he'd wanted to spend his life with. I kept telling myself it was no accident that she had stumbled into Maggie's. And on a night that I was there.\n\nGod, it hurt so much to be around her and not be able to express how I truly felt. Yet, I cared for her too much to let her deal with this all alone.\n\nI abandoned my work after the lines on the article I'd been trying to read four times finally blurred together. Lazily, I stirred the chicken and rice, making sure the broth wasn't getting cloudy. I'd have to put the soup in the fridge if she didn't wake soon.\n\nAs though she could read my thoughts\u2014or maybe just smell hot food\u2014I heard the sound of Kat's bare feet on the hardwood.\n\n\"Oh, good, you're up. How's the hand, Sugar Ray?\"\n\nKat gave me a soft snort. \"Funny.\"\n\nI just smiled and lifted a ladle of soup when she approached the stove. I took the slight lick of her lips as a good sign and dished up a bowl for her.\n\nShe opened a tall, narrow cabinet I'd taken for storage of maybe a broom or vacuum cleaner. It was my turn to be surprised while she pulled out one of two racks I could see within that had white metal shelving and dividers. The one still inside had cans while the other had boxes of food. She retrieved a box of crackers, closed the cabinet, and took a seat at the island...the same one she'd chosen yesterday.\n\nI wondered if that was where she usually ate her meals. Or had she and Danny eaten their dinners at the small table that was my makeshift office? Maybe with a candle burning between them to make it more romantic? I shook off the scowl that was forming on my lips, set the bowl before Kat, and dished up another for myself.\n\nKat was already eating when I turned back to her, her eyes closed and the occasional moan reaching across the small space to my ears that seemed to be attuned to every little sound she made.\n\nMy legs shook for a moment while my body responded to her pleasure, even though she was reacting to food. How much more would it affect me if she was answering the movement of my fingers...my lips?\n\nShit. You have got to get control, Jenna.\n\nI took the chair next to her instead of eating standing up like I had done last night. \"I take it you're feeling better.\"\n\n\"Yeah. You know, I could get used to this personal service.\"\n\nSo could I, sweetie. If you'd only ask...\n\nI smiled, had a couple spoonfuls of soup, burned the tip of my tongue, and jumped up to get a glass of milk. I grabbed one for her as well and reclaimed my seat.\n\n\"I feel bad,\" Kat said. \"You're getting more use out of my kitchen than I ever have.\"\n\n\"So you don't feel bad that you're being a bad hostess, just that I'm using your kitchen?\" It was so hard not to snicker aloud.\n\nKat frowned at me. \"That's not what I meant. I'm sorry I was mean to you earlier.\"\n\nI elbowed her gently. \"I'm giving you a hard time. Relax.\"\n\nAfter I put away the leftovers and cleaned up the dishes from lunch, I went back to my computer. I told myself I would get some more work done now that Kat was awake. But who was I kidding?\n\nShe looked pretty comfortable curled up on one end of the couch with a blanket wrapped around her legs and a pillow wedged between her hip and the cast on her left arm. Inviting, even.\n\nTo the background of a movie and Kat's occasional laughter, it was relatively easy to imagine myself doing this every night with her. Cooking each other meals. Winding down after a day of work or researching a client while she watched TV. Chilling on the weekends. Minus the ex-fianc\u00e9 and trip to the ER, that is.\n\nThe ache returned the more I watched her, though. And my daydreams of the casual way we'd fit into each other's lives changed to cuddling with her on the couch. Holding her in my arms as we fell asleep. Pleasuring her in the ways I'd learned from women who had cared for me. Being pleasured by her.\n\nEventually, I could no longer think straight. God, this was hopeless. I couldn't even manage forty-eight hours without lusting after her. How would I be able to stand by the sidelines merely as a friend for days? Weeks? Months? Maybe even years? Watching her fall in love with another man...probably get married. Have kids.\n\nI clenched my eyes and my fists, cursing silently that I could never see her again. It was too damn hard. I was selfish, pure and simple. I hated to her kick her while she was already down. But it was unavoidable. Better for both of us in the long run. I'd probably have to stay away from Maggie's for a bit in case she stopped by to find me. And I'd have to screen my calls at work...any visitors.\n\nDamnit. Creating a plan to avoid Kat could be harder than trying to woo her.\n\nBut I wouldn't leave. Not yet. I knew I may have work in the morning, but Kat didn't and the sun was just beginning to set. Surely, I could keep her company for a little longer without it being obvious I was trying to ditch her. I'd make sure she was settled in for the night, and then I'd do the hardest thing I'd ever done by disappearing tomorrow. Maybe I'd be the one curled up in bed crying from heartache.\n\nI powered down the laptop, filled a glass with water\u2014palming the pain pills the doctor had prescribed\u2014and entered the lion's den by sitting opposite Kat on the couch. I fumbled with a topic of conversation as the credits rolled on the latest movie. What came out sounded so...stupid. \"Are you hungry?\"\n\n\"No, I think I'm good for now.\" She took the water I held out to her and swallowed the two pills, setting the empty glass on the floor before she snuggled back into her corner.\n\n\"Are you tired?\" Shit. Another stupid question. I was sounding like an overbearing mother.\n\nKat shook her head but also yawned. \"A little. But I don't want to sleep too much during the day. I won't get any sleep at night. I am, however, curious.\"\n\nBreathe, Jenna. You can do this. Act natural for a couple of more hours, then you can be done with twisting the knife in your heart every time you see her. Even if you'll bleed out once you yank the knife free.\n\n\"About?\" I pulled a leg up under me and turned toward Kat with a pasted-on smile.\n\n\"Lauren.\"\n\nMy heart leapt into my throat, preventing me from speaking, and I felt my eyebrows lifting.\n\nKat's eyes dropped to her cast where she ran her right index finger along the seams in the plaster. There was a slight shrug of her shoulders. \"Is she like...your...\"\n\nI tried to guess what word she was thinking of. Then I simply said, \"Friend.\"\n\nShe glanced up at me, though her head was still bowed. The look made my blood boil...in a very naughty way. \"But not girl...friend?\"\n\nThere was no hesitation this time. \"No.\"\n\n\"Oh.\"\n\nGood Lord, where was she going with this? \"We work at the same company. That's all.\"\n\n\"Oh.\"\n\nWas that relief I heard in her voice. I sat up and found myself moving closer to her, suddenly unable to resist the pull she had over me. \"Why?\"\n\nThere was that shrug again. A glance down with a turn of her head that had coy written all over it, even if she hadn't meant it to come across that way. \"No reason.\"\n\nDid she expect me to believe that? She'd brought up the topic. I couldn't help wanting to laugh at her bald-faced lie. \"Really?\"\n\n\"I just thought...the other night...at the bar.\"\n\nShe was stuttering. Her good hand was fidgeting. Why was she so nervous?\n\nThen it hit me.\n\nHoly hell. Is she flirting with me? Asking if I'm available?\n\nNothing about our interactions since Friday evening had even suggested in the slightest way that Kat was into women. Into me. Yeah, she had snuggled up to me at the hospital, but I passed that off as being hurt and tired. Her needing comfort.\n\nBut now? Dare I hope? If I was on the right wavelength, I'd not seen it coming to save my life.",
        "\"Girls out for a drink after work.\" My voice sounded gravelly. I could feel my heart beating faster in my chest. I licked suddenly-dry lips. \"It's a comfortable place to go where we don't have to worry about guys hitting on us. Plus, her brother works there. The bartender?\"\n\n\"Oh!\"\n\nI think her cry of surprise was because I was practically in her lap, not because of my comment. Her body went still. My eyes focused on her lips. Common sense ceased to exist. It was now or never, to hell with the consequences.\n\n\"Please forgive me, Kat, but I have to do this.\"\n\nAnd then all I knew was ecstasy. Warm and soft. Luxurious lips that formed to mine. Called for me to taste and see. So I did.\n\nIt was like no other kiss, even from Celene who could knock my socks off with a little thing she did with her tongue. I felt as though I'd not lived until now. That I was finally home.\n\nIn the depths of my brain, neurons were telling me there was pressure on my shoulder...a force trying to push me away. I resisted the call to retreat, instead increasing my own pressure against her, never wanting to stop. Because the longer I kept our mouths connected, the stronger the electricity built inside of me. And that was just lips touching lips.\n\nWhat new pleasures would I unlock with a touch of my hand?\n\nBut a soft cry\u2014the lightest sound\u2014made my ears perk up like a bat to radar.\n\nI backed off just enough to whisper, \"Shh,\" before diving back in and sliding my hand along her slender neck. Around to the nape where my fingertips were tickled by her hair.\n\nFor a few seconds, Kat didn't respond in any way. But then, as though a switch had been flipped, the pressure on my shoulder ceased and she was kissing me back.\n\nA moan raced up from deep within like a wild animal being released from a cage. Feeling no more resistance on her end, I relaxed and tried to taste her lips with my tongue. Back and forth, feeling how full they were now with blood...with arousal.\n\nLike the sun breaking through the clouds on a rainy day, her mouth parted. Her moan joined another of mine when I threaded my fingers in her hair, gently tilting her head back while my tongue flicked at hers.\n\nThen her hand was back on my arm. But instead of pushing me away, it quivered over my bare forearm. Moving slowly up over the sleeve of my sweater that I'd bunched up at my elbow. Grazing my shoulder and finally stopping on the side of my head.\n\nI closed my eyes, moaning deeper into her mouth when her tongue teased mine. When her fingers slid into my hair. But they quickly abandoned their play to return to my shoulder, this time gripping me, pulling me down. Another whimper reached my ears, and I wrapped my arm around the back of her neck, letting her know I wasn't going anywhere.\n\nMy lips moved on their own accord after that. Alternating the pressure. Closed mouth, open mouth. Barely letting her gasp each time before I took her back under again. Pouring my heart out to her, caressing her cheek with my other hand, stroking the skin there that grew warm under my touch. Relishing the intensifying sparks that seemed to travel from my fingertips and gather low in my belly.\n\nA while later, I backed off, but only a bit. I couldn't get enough of her. The sweet taste of her lips and tongue. The hot breath she exchanged with me. The feeling of her fingers back in my hair. Intoxicating didn't even begin to cover it.\n\nInstead of hungry kisses, I nipped at her bottom lip. Licked along those spots. Brushed my lips against hers before teasing her tongue with just the tip of mine. Retreating then waiting, silently teaching her how to tease me. I watched her closed eyes as they repeatedly squeezed tight and released while she adjusted to these new sensations. She caught on quickly, moaning when I responded by kneading the tight skin behind her neck.\n\nWhat happened next seemed to startle us both. One minute, I was stroking her hair. The next, my hand was moving down to caress her arm, but she moved it at the last second and my palm grazed the top of her sweater. Felt the rise of her breast beneath. We both gasped, and Kat arched her back up into my touch.\n\nThe barrier of her clothes was suddenly too much. I had to feel more of her skin. She didn't resist when I slid my fingers under the hem of her sweater and stroked them against the silky skin of her abdomen. I wasted no time in seeking out the soft mounds pressing against mine.\n\nKat moaned as soon as my hand cupped the underside of her breast, her body trembling and her mouth melding with mine again. Which muffled my cry of surprise at finding she didn't have a bra on.\n\nHow long? Just since the hospital? Was it intentional because I'm here?\n\nHer warm flesh molded into my palm, and I gently tightened my fist around it. I heard and felt her squeak against my lips. It grew louder when I rolled her already tight peak between my fingers, tugging on it slightly then flattening it out with the pad of my thumb.\n\nHer head flung back against the armrest after I did it a second time. Then it rolled to the side, and I took advantage, kissing along her jaw. Licking and nibbling at her delicate skin until I reached behind her ear. Where I smelled a trace of her sweet perfume mixed with sweat.\n\nKat suddenly cried out, \"Jenna!\"\n\nShit! Shit! Shit!\n\nI searched her face, hoping the reason for her outburst wasn't what I thought. All I saw was her eyes squeezed closed...her teeth clenched. I swallowed heavily. \"Do you want me to stop?\"\n\nShe let out a loud whimper. \"Hell, no!\"\n\nI was so relieved I laughed. Her eyes flickered open, and I stared for the first time down into the depths of her chocolate pools that sparkled from the smile stretching her swollen lips, which were tinted deep red from so much abuse at the behest of my own mouth. I felt like I was falling. Drowning. And at the same time, floating.\n\nWhen she blinked, I pulled back a little, feeling shivers prickle my arms. Her mouth parted, and her soft breath caressed my face. After she didn't say anything for several seconds, I decided to take a risk.\n\n\"May I suggest we take this to your bedroom?\" I ran the back of my fingers across her cheek, which she turned into my touch. I realized I was moving fast. I didn't want to scare her. But I didn't want to lose her, either. Not again, even though that was still a residual fear. I brushed my lips across hers then whispered, \"I don't want to hurt your arm. And we'll both be more comfortable.\"\n\nKat nodded but stretched her neck and kissed me.\n\nA feeling of euphoria started to sweep over me\u2014coaxing me to sink into whatever well of delight she was leading me to\u2014but I tore away from her with a groan. I climbed a little unladylike off her, feeling my legs shake as I helped her stand. Her own body was trembling when I took her hand and headed down the hallway.\n\nJust once, I glanced back at her. My cheeks hurt from grinning so much, and I bit my lower lip at her smile. At knowing she was on board with this, for God knows whatever reason. I wasn't going to question it. We could talk later. Right now, I just wanted to pour out every ounce of passion I'd been saving all these years onto her. I hoped we both survived.\n\nShe flicked on the ceiling fan light as we entered her most private space. But then her eyes searched mine, her hand hovering over the switch with her head tipped in a silent question.\n\nI gave her a quick shake of my head. As intimate as the darkness would be, I wanted to see her.\n\nAt her bed, I cupped her upturned face and brought our lips together again. Kissing. Tasting. Teasing.\n\nYou are the most incredible woman\u2014\n\nKat seemed to wobble, staggering backwards with a soft cry, moving our mouths just enough apart that they were no longer touching.\n\nOh, God, no! Please don't be reconsidering...\n\nBut then her good hand clutched my arm. Her lips grazed mine. On the second pass, the pressure increased. Encouraging me. Bringing me back into the heat of the moment.\n\nMy fingers moved, smoothing out over Kat's shoulders through her sweater. Down to her biceps. And then in, covering both breasts. Squeezing gently through the fabric. Lifting them up.\n\nI would have continued in this way, but I had already touched her skin to skin. I wanted more. I needed more.\n\nI was already pulling up the hem of her sweater when I rasped, \"Do you mind?\"\n\nHer only response was to let go of my arm and lift her own, allowing me to continue moving the material further up her body.\n\nI exposed a flat expanse of creamy skin broken only by her belly button. I licked my lips at the thought of playing with the gentle indentation that seemed alive, rippling with each use of her lungs. I both wanted to delay this moment as well as rip off her top to devour her. I ended up with the former, stemming the desire to rush unveiling the most precious person in the world. Mostly because I remembered her cast and didn't want to hurt her.\n\nThe more of Kat I revealed, the more my own body responded. Trembling legs. Shortness of breath. Rapid heartbeat. Increased saliva. And an urging down low and deep for something long denied.\n\nI couldn't stop a whimper when I finally saw her breasts, unrestrained in all their glory. They were the same paleness as her belly but slightly flushed from my caresses. Their rise and fall with Kat's own quickening breathing was hypnotizing, the milky swells capped in dark tan rings with rosy tips.\n\nI already knew they fit perfectly in my hands with a little to spare. Soft and delicate, I wanted to fall to my knees and worship them. I settled for reverently lifting one at a time then together once I'd discarded her sweater. My lips found hers again, moaning in her mouth when her nipples puckered under the play of my thumbs. Her own cry of surprise and delight was music to my ears. My palms lightly grazed the tightened peaks.\n\nThe temptation to linger was calling, but there was so much more to see...feel...taste.\n\nAlthough I hated to break contact with her, I turned Kat so her back was to the bed and then gently pressed on her shoulders until she sat. Those brilliant eyes stared up at me, a mixture of what I read as shock and pleading within. Her cheeks were flush now, too, complimenting the color of her breasts that were heaving more.\n\nShe'd not said a word since the living room almost ten minutes ago. Her lips parted, and a sharp inhale cut through the silence.\n\nA low groan rumbled inside me. Those innocent looks and sounds were erotically maddening. I could feel the heat increasing between my legs with each one. It only took a second to pull off my own sweater. I was about to remove my bra when Kat's fingers grazed my hips.\n\nMy world stilled, my eyes locked on the top of her dark head. I couldn't get enough air into my lungs as I realized how close her face was to my pussy. I suddenly hated my jeans and my concern for her feelings that kept us still so far away from where I wanted to be with her.\n\nKat appeared to gain some bravery because her right hand crept along the denim barrier until she reached my waistband...and gingerly touched my skin with her fingertips.\n\nElectricity zipped through me, making my body do a little wave. My eyes fluttered, trying harder and harder to stay open the further up she reached. The pain in my chest was more intense from the short gasps of oxygen I was gulping down. Then I was leaning forward, closer to her. Anticipating what\u2014where\u2014she wanted to touch.\n\nHer fingers barely touched my bra, but my pussy contracted at the sensation. She increased the pressure, tracing the lines of the silken cups encasing my breasts that were swelling with my own arousal. Moving down and around the outside of my curves with her knuckles. When the pad of her index finger ran along the top rim of the cup, I bit my lip to stave off a cry of rapture.\n\nHad Susie felt like this the first time I touched her? The novice experimenting with the veteran? How had she kept her self-control in check? I can barely manage mine. But maybe that's because of who\u2014\n\nFUCK!\n\nI hissed through my inhale. My left nipple reacted harshly to the subtle sweep of Kat's thumb over it through the material when she did it again with more courage.\n\nMy body moved forward on its own accord, following her hand when she started to pull away as though they were two ends of a magnet. Needing more of her witchcraft. Because that was the only way to describe what she was doing to me. Had done twenty years ago. She'd woven a spell around me since that first day I saw her in Advanced Algebra. No other woman had affected me the way that Kat did. My Kitty Kat.\n\nAfter another hiss and a throaty exhale, I managed to speak. \"You're accepting this more than I had anticipated.\"\n\nKat's giggle made me crack my eyes open just in time to see her shrug. Then they flew open wide when her whole hand surrounded as much of my breast that she could wrap her fingers around...and contracted. The top of my breast was naturally above the edge of my bra from the cleavage the slightly too-small cup created, although I usually kept it covered up at work. But when she closed her hand around it, it overflowed completely, like a fucking squeaky toy. Except my squeaker was stuck somewhere in my throat.\n\nShe held me like that for a second, just as I held my breath, wondering if she would lean forward and touch her lips to my sensitive flesh. To use her tongue.\n\n\"Aren't you even a little curious why I showed up yesterday?\" The voice that came out of my mouth sounded nothing like me. Husky. Needy. My lips were dry, and licking them was useless. Maybe because I was still gasping.\n\nBefore she answered, Kat released me only to stroke her fingers across the swell again, down into the valley, and up onto the other side.\n\n\"I kind of figured it out.\" This time, she tucked her fingertip inside the upper rim and reversed the path she'd just made but inside the material. Then she tugged down, releasing the confines around my breast but not the straining I felt inside my chest. \"Since I know about Lauren now.\"\n\nGood, God! Who is seducing whom?\n\nI tried to wet my lips again, cringing as her fingernail grazed the sensitive side of my nipple.\n\nHer eyes met mine. Stayed locked while, like slow motion, her body moved forward. Her tongue flicked out like a snake. And then she tasted me. Wrapped her lips around my exposed and erect tip.\n\nI growled, not wanting but needing to end this. I didn't know where I got the strength to resist her, but I said, \"Enough. This was supposed to be about you.\"\n\nEverything flowed in one continuous motion after that, all thoughts except getting us both naked were drowned out by my heart throbbing in my ears. I quickly had her on her back, lost my bra and the lower half of my clothes, and then started on Kat's sweats. But I'd only gotten them part way down when I jerked back.\n\n\"You are one naughty little girl,\" I purred, trying to contain my lust. She wasn't wearing any fucking underwear.\n\nAnd that minx, she just grinned at me.\n\nI returned my gaze to her pussy. It was so beautiful, the treasures hidden by a light layer of dark curls. And I caught a hint of her essence. A tease of what was to come.\n\nHad it been hers or Danny's decision to stay natural?\n\nNo. Don't go there. Just enjoy the gift she's giving you. Allowing you to take.\n\nI shook my head to clear my thoughts and finished undressing her before lifting her legs to the bed. She looked comfortable...except for that cast. A pillow wedged underneath seemed to do the trick. And then I knelt beside her, trying to gather my emotions.\n\n\"And here I thought you were such a good girl, Kat.\"\n\nShe raised her eyebrows but again, didn't speak.\n\nTime for payback.\n\nLeaning down, I pressed my lips to her right nipple. When she tried to put her hand in my hair, I slapped it away. My voice was muffled against her breast when I growled, \"No. No touching. You're being punished.\"\n\nSilently, I added that I planned to ravage her senseless. Especially since she had the audacity to giggle at my admonishment. Oh, she was going to get it now. But at least she put her right arm above her head on the pillow, her open hand casually cushioned by her hair.\n\nGod, she looks so fucking beautiful.\n\nI dove back in, laving my tongue across her nipple. Smiling at her whimper when I sucked it between my lips like a babe nursing. Wetting it, twirling my tongue around the softness until it hardened. With my eyes closed, I held her, caressing...massaging... adoring. Making love to her breasts with my mouth and fingers as though they were two of the most treasured gifts from heaven. Because to me, it was true.\n\nI could feel her heartbeat beneath my hands. How it sped up when I stroked my thumbs up and down along the underside of her breasts. The slowing and quickening of her inhales and exhales when I backed off or switched between her jeweled mounds, only to start over again with her moans and arching back encouraging me.\n\nWhen her body shivered beneath my head with a soft cry, I felt a deep shudder echo within me. I was losing the last remnants of my resolve. Or maybe I was procrastinating for some ungodly reason. But the longer I paid homage to her upper body, the more her lower body called to me. Her scent definitely a siren song now.\n\nMy ragged exhale whispered across her skin\u2014resulting in more shivers on her part\u2014when I finally abandoned her breasts and moved down between her legs. From my new vantage point, I saw the glistening red marks my lips, teeth, and tongue had made on her globes. Marking her as mine.\n\nI kept my gaze guarded from hers lest I lose my focus and go back to assault her lips, which I missed the moment I thought of them. But I traced every part of her body with my eyes while my fingers skidded down the lines of her sides, dipping in at her waist, and then flaring out over the slopes of her hips. I licked the tip of my index finger and made a wet trail down the juncture of her leg and pelvis, groaning softly at her soft whimper and the way her hips jerked up at my touch. Which meant I had to do it again on the other side.\n\nFinally, I could refrain no longer and touched her bed of curls. I choked back a gasp at the softness of them. The slight dampness I could feel, revealing her arousal.\n\nKat's hips jumped again, levitating.\n\nI smiled and pressed my fingers lightly against the soft skin there until she relaxed. Then I parted her legs, gently moving them so her knees were bent and splayed open under my bent arms. I was surprised there was no resistance on her part, but my question to ask if she was okay died on my lips as I stared at her bared pussy. At the glossiness on the curls...on the exposed engorged lips. At the tiny red bump peeking through the soft layer that further showed me her arousal as her clit reacted to the cooler air of the room.\n\nUltimately, it was the scent of her wafting up to my nose that rendered me speechless. I swear I was drifting through a lavender field. And then my tongue was teasing that ruby target, tasting tangy plums. Juicy, ripe, and oh-so succulent.\n\nMemories rushed back in waves of what it was like to please a woman in this way. Of fingers twining in my hair and guiding me where to concentrate my attention. It had been so long.\n\nI faintly recalled the feel of a silver ring beneath my tongue...how it felt to flick it, grip it with my teeth to tug on it making Beth squeal and buck. My eyes jumped up to Kat's breasts, and the image of what she would look like\u2014feel like under my tongue\u2014there with her nipples pierced just as Beth had wanted to do sent a wave of pleasure rolling down my back. And then I briefly wondered if Kat would ever be open to anything like that.\n\nThose thoughts made me moan and double my efforts here and now.",
        "Kat was jumping again, but my weight on her below the waist didn't allow her to go far this time.\n\nHer deep moan had me jerk my eyes up to see her gripping one of the vertical rails on her headboard. But I quickly returned to searching out the rest of her treasures, lapping up her arousal along the way. God, she was getting wetter by the minute. And I could feel my muscles clenching within the more I smelled her...tasted her.\n\nShe was so slick, my fingers slipped off the first time I tried to hold her outer lips apart. My tongue had never enjoyed such delicacies. Outlining every inch, sucking lightly between my teeth then kissing so softly before pressing the flat of my tongue from top to bottom and back again. The heat of her against my face had me sweating.\n\nThen I moved on to her inner lips, running the tip of my tongue back-and-forth slowly, flicking whenever I felt her body shudder. My breasts dragged against the jumble of sheets and comforter while I moved, the mixed textures of the fabrics reigniting my nipples to stiff peaks.\n\nIf I'd thought it had been good with any of my previous lovers... Call 911! My heart felt like it was going stop at least twice, and my body burned with desire like never before. I would die a happy woman if this was my time to go.\n\n\"God, Jenna.\" Kat gasped, pausing between words, maybe to swallow. \"Mmm. How long have you wanted to do this?\"\n\nAt first, I merely hummed against her with a moan. I had latched onto her clit with my teeth and gently tugged, feeling ripples of apparent pleasure roll through her most intimate place. When I released her, I kissed her, licked her. Hoped I hadn't caused her any pain.\n\nLooking up at her but knowing she couldn't see my eyes with my hair draped over her hips and my face against her groin, I smiled and said, \"High school.\"\n\nKat's writhing under the onslaught from my lips was more encouraging than any words she could have said in response to my admission.\n\nSo far, my fingers had only held her outer lips apart, giving me more access to drink in her heavenly essence. I'd used just my mouth to touch her intimately down under. I'd been saving the best for last. Because in my mind\u2014though tongue, lips, and teeth could provide extraordinary pleasures\u2014the art of using your fingers could mean the difference between just a fulfilling release and a mind-shattering experience. One that left your partner feeling boneless and wondering where they were for several minutes after she came back to Earth. Especially if you combined mouth and hands.\n\nI should know. I'd been at the receiving end a few times with Celene. That's not to say all of the other times with any of the women in my life hadn't been good...even great. It's just the amazing releases stuck with me more. And I'm sure there were people out there who could send you into deep space during an orgasm with just their tongue. I'd just not experienced it, nor had anyone I'd been with, either.\n\nA whimper from above as I stroked a finger through Kat's folds made me smile. I'd withdrawn my mouth completely to allow her to feel only this new sensation. To allow myself to focus on the soft, pliant texture of her swollen lips that were hot to the touch and very, very slick.\n\nOver and over, I stroked up and down with the lightest touch. Alternating from side-to-side. Each time I got closer to her entrance, her panting grew more labored. I could see that her eyes were clenched, as was her hand that was fisted in her hair. A shallow crease marred her forehead that shone with sweat. The tip of her tongue touched her lips, and then the latter parted at the same time that the line above deepened.\n\nI kept my eyes on her pussy when I finally turned my ministrations to the source of her natural scent that grew headier by the second. The pink puckered ring spasmed before I even touched it with the pad of my index finger. My own vaginal muscles echoed hers, and then we both gasped as I made contact.\n\nI licked my upper lip, circling her entrance, increasing the pressure. Catching a glimpse of the furnace burning within this gorgeous woman who had shown me so much trust when she was so vulnerable. And then, I was inside her. The tightness of her channel wrapped around my finger, my vision blurring. That was even before I felt tears in my eyes when I pulled out and her muscles repeatedly clamped down and released. It felt like her vagina was sucking on my finger. Trying to draw it back in. I didn't resist, letting her body tell me what felt good.\n\nI could have continued fingering her indefinitely, but there was so much more I wanted to explore. It took a little bit of effort on my side to extract my digit, which resulted in a soft cry from Kat. Then I flicked her clit with my finger, and began to torturous journey again. Because if she was feeling anything close to what I was...\n\nKat's strangled voice broke through the fog in my head. \"Jenna, please...\"\n\nThe sound of her begging tore away the last shred of control I had, which wasn't much at all.\n\n\"Okay, sweetie,\" I growled, holding her down with one hand on her pelvis, though she could have easily bucked me off. Without any further delay, I slid my first two fingers into her steamy tunnel, hearing a wet, sloppy sound. With a quick twist of my wrist, I rubbed her clit with my thumb.\n\nPleasure washed over me at the tightness and heat of her body. After a minute of her whimpers, I adjusted my position between her legs, kneeling now. The new angle allowed me to insert three fingers. To thrust harder, using my other hand to roll her clit in circles.\n\nI watched her eyes roll back, her eyelids flickering to try to stay open but failing. Her hips ground against my hands, her breasts bouncing. Again, that deep level of consternation crossed her face, distorting her mouth and forehead, accompanied by an assortment of moans and mewling cries.\n\nThe longer and harder I penetrated her, the more her inner muscles massaged my fingers. The more fluids coated the back of my hand. The louder her panting became.\n\nI knew her heart would be threatening to burst from her ribs. The feel of it in her chest\u2014the sound in her head\u2014probably scared her a little, but the desperate need to reach climax was more important than life itself right now.\n\nAnd all of that told me she was hanging on the edge. Had been for a few minutes, even. I wasn't cruel...I wouldn't deny her the blessed bliss of completion. Not today, at least.\n\nShifting the angle of my fingers, I changed my focus to stroking along the upper wall of her vagina. Curling up after the first knuckle and adding more pressure within and without once I'd located the slightly bumpy texture in her velvet folds. The magic button.\n\nFirst, Kat's hips launched off the bed. Then her scream tore from her so low and long I was sure her throat must be raw. Her thighs locked my arms to my sides like a vise while on the inside, her seizing muscles made it difficult\u2014though not impossible\u2014to draw out her orgasm that continued to thrash her body.\n\nAs the shaking subsided to smaller trembles I could see rippling through her by the jerk of an arm or a twist of her waist in her attempt to curl away from my touch, her thighs relaxed.\n\nGradually, I backed off, her thickened cream binding my fingers together. I held them to my nose, inhaling deeply before licking the sticky sweetness off them one at a time.\n\nThe moan that followed was from Kat, and I looked down at her, echoing the sentiment at the sight of her glowing skin.\n\nThe rise and fall of her chest was less pronounced. Her head lay tilted to the side, her good hand palm up with delicate fingers partially opened as though they had been frozen in the midst of uncurling.\n\nI couldn't help leaning down to kiss her pussy. Her cum sluiced over my tongue when I dragged it between her lips, lapping up the evidence of her release. A residual shudder in her legs on either side of mine where I still knelt made my own body shiver.\n\nShe groaned and tried to jerk away when I teased her clit, but her eyelids remained closed.\n\nHer skin was so warm and supple under my lips as I trailed light kisses along her thighs, pelvis, hips, and finally her breasts. I took some time to twirl my tongue around and into her navel along the way. And then I paid homage to her exposed neck, gently moving her hair aside like a vampire preparing to relish the blood pumping just beneath the surface. I didn't mark her but dotted her taut skin with little wet licks all the way up to her ear then down her jaw.\n\nI could tell Kat was sleeping by her lack of reaction to my mouth on her. Especially over her succulent lips that I could see were red and swollen...with a few teeth marks indicating she had tried to stave off some of her noises. Maybe hold off release.\n\n\"Oh, Kitty Kat. You are such an exquisite creature.\"\n\nCarefully, I eased the bunched up comforter from under her then shut off the light before I was in my own bliss as I held her naked body to mine beneath the covers. I had wanted to spoon with her, but the desire to stare into her angelic face while smoothing my hand over her damp hair was greater. To brush my lips against her forehead.\n\nAs much as I had enjoyed finally pleasuring the object of my affection for the past two decades, having her in my arms on her own volition was my wish come true. That she had allowed me this privilege was beyond my wildest dreams. I still couldn't believe I was here with her.\n\nMy inhale shuddered as I tried not to cry at the happiness I felt. After all this time, it had been worth the wait. I prayed it wasn't just a brief dalliance on her part to ease her pain. To cling to me because she had no other.\n\nKat eventually stirred, her slight movements awakening arousal in my own body. Her eyes slowly opened, their sparkle breaking through the duskiness of the room caused by the drawn shades blocking out the afternoon sun.\n\n\"How was that?\" My smile faltered for a moment while I traced her mouth with my fingertip. It had been amazing for me, yet this was not something she was used to.\n\nI didn't feel any sudden change in her breathing or heartrate that would indicate regret for what she'd done\u2014for what I'd done. So why was it taking her so long to answer? My own inhales became shallow, worry creeping in that my greatest fear was true. I'd just been a salve to her wounds. Been the person in the right place at the right time, nothing more.\n\nIt would kill me to lose her now, but...\n\n\"Good.\"\n\nThe huskiness of her voice made me blink several times. I was going to ask what I could have done to make it 'great'\u2014doubt in myself replacing the fear that she didn't really want to be with me\u2014when her tongue swirled the tip of my index finger...and her moist lips wrapped around, milking it.\n\nHer smile reached up her to her eyes, making them shine brighter. Mischievously.\n\nYou fucking little tease!\n\n\"You know,\" I started but paused to lick my lips\u2014to swallow heavily at the smoldering fire rebuilding within, \"I had thought maybe I was wrong about you. About us. I had hoped, but I was willing to accept it was just in my head.\"\n\nMy eyes fluttered at her tongue still playing with my finger. Shit. Did she know what that simple act was doing to me?\n\nNot wanting to end her torture but needing to claim those lips again, I extracted my digit and replaced it with my tongue while I molded our mouths together.\n\nWe were both panting when I pulled back and whispered, \"I'm glad I was wrong about being wrong.\"\n\nKat cupped my cheek with her right hand. My moan was lost to the feel of her mouth pressing against mine, tenderly and seductively. Then her words whispered across my lips, tickling them. \"This may take a while for me to adjust. I'm just warning you.\"\n\nTears pricked my eyes, and my chest felt tight from the promise in her voice that she was willing to try. To give us a chance.\n\n\"I know, sweetie. I know,\" I said once I could speak again. Her breast was like warm silk in my palm when I lifted it, rubbing her nipple against mine. Sparks shot down to my pussy\u2014which had been neglected, but hopefully not for too much longer\u2014and I slid my knee along her thigh. Anchoring it over her hip to pull her closer. \"But I've been patient this long.\"\n\nKat's eyes drifted close, her breath hitching as her head tilted back. Her fingers clutched at my arm. This time, I didn't stop her. Her touch was electrifying.\n\nMy hand buried further between her thighs in answer to her encouragement, delving into her renewed heat as her hips rolled, opening up to me.\n\nTo the sounds of her building orgasm, I vowed I would go to the ends of the earth to please this woman. To keep her safe. Even take a bullet for her, if it ever came to that.\n\nBecause I loved Katrina Jenkins. My Kitty Kat. The only girl I ever wanted to kiss again.\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "lesbian reluctance",
        "reluctance",
        "drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/i-kissed-a-girl-ch-09"
}