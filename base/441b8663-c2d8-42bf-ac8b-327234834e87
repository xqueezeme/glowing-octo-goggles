{
    "title": "Jennie's \"Nightmare\" Ch. 02",
    "pages": [
        "\"I really wish you hadn't convinced me to wear this bathing suit!\" Jennie sighed as a couple of young guys passed them on the beach.\n\n\"Why?\" Greg grinned. \"Don't you like the attention you're getting?\"\n\n\"I feel like every guy on the beach is staring at me!\" Jennie replied.\n\n\"They are!\" her husband laughed. \"Not to mention quite a few of the girls.\"\n\n\"Greg!\" Jennie cried. \"How could you say such a thing?\"\n\n\"Because it's true,\" he replied with a shrug. \"I don't blame them. You look amazing in that bikini!\"\n\n\"I've never worn one before in public,\" Jennie said. \"If my mother saw me now...\"\n\n\"...she'd pass out!\" Greg finished. \"But she's not here and I am. I like seeing you in your bikini. To be honest, I like seeing the attention you get while wearing it.\"\n\n\"Really?\" she asked in surprise.\n\n\"Definitely!\" he smiled. \"I know how lucky I am to have you for a wife, but it never hurts to be reminded by your many adorers.\"\n\n\"You're so bad!\" Jennie cried, but she finally relaxed and smiled slightly. They lay silently on their blanket for a while and enjoyed the sun. Mindy had the children today for a function by the pool. Vacation was only just starting and both of them needed it badly.\n\n\"Greg, I want to go cool off in the ocean,\" Jennie said eventually.\n\n\"Go ahead,\" he smiled.\n\n\"Don't you want to come with me?\"\n\n\"I'll be there in a few minutes,\" he replied. \"I want to see how everyone reacts when they see you stand in that bikini.\" His wife looked at him oddly for a few moments.\n\n\"You're serious,\" she finally said.\n\n\"Yep,\" he agreed. \"I'm sure I couple of guys won't be able to get up for a while!\"\n\n\"What's gotten into you?\" Jennie said with a frown.\n\n\"I don't know,\" her husband shrugged. \"Does it bother you?\"\n\n\"Not really,\" she said after a brief hesitation. \"It's just a little embarrassing.\"\n\n\"Babe, you have nothing to be embarrassed about!\" he said emphatically. \n\nJennie smiled and shook her head as she slowly stood. She took her time going to the water. She wasn't model material or anything like that, but she could feel the guys ogling her large breasts and round ass. Her thin waist gave her a perfect hourglass shape.\n\nThree guys walked by wearing sunglasses. They were all young and well built. One of them nodded in her direction, but she could tell that all of them were giving her the once over despite their sunglasses. The odd part was that she found herself liking it. Normally she would be embarrassed and cover up, but today she decided to enjoy the attention. It seemed to be what Greg wanted anyway.\n\nJennie kept her shoulders back and smiled sexily at the three. One of them actually stumbled as they went by! She had to suppress a giggle.\n\n\"That was mean,\" a voice from her side said with a laugh. Jennie jumped slightly in surprise before turning and seeing an attractive redhead standing next to her. The woman was wearing a hat and a one-piece bathing suit that covered a lot of her body, but that didn't stop Jennie from appreciating the fact that she was nicely shaped.\n\n\"You'd get the same reaction if you were wearing this bathing suit,\" Jennie said, surprising herself. She wasn't normally the type to talk like this.\n\n\"Hunny, I couldn't fill that suit in a hundred years!\" the woman laughed. \"That top would swim on me.\" Jennie smiled as she looked briefly at the redhead's breasts. They were average sized, but you could make out her hard nipples. They reminded Jennie of the blond woman she kept dreaming about. Jenny blushed at the thought and looked away.\n\n\"My name is Rosa,\" the redhead offered. \"And before you say it, I know, I don't look Latin. That's because I'm not. My mother just loved the name. Actually, on days like this I wish I did have a little Latin blood in me.\"\n\n\"Why?\" Jennie asked.\n\n\"So I could wear a bikini and drive the guys crazy like you're doing!\" Rosa laughed. \"But if I tried that I'd look like a lobster in fifteen minutes!\" Jennie laughed.\n\n\"I'm Jennie,\" she said in introduction. \"I'm here with my husband.\"\n\n\"I'm here with a couple of friends,\" Rosa replied. \"We just finished the semester and decided to take a vacation.\"\n\n\"You're in college? How old are you?\" Jennie asked without thought. \"I'm sorry! That was rude!\"\n\n\"No, don't worry about it,\" Rosa laughed. \"I get that reaction a lot. I took a few years off before going to college and I'm a grad student now. I'm coming up on thirty.\"\n\n\"Yuk!\" Jennie said. \"My thirtieth passed at the end of last year. It wasn't a fun time.\"\n\n\"Tell me about it,\" Rosa laughed. \"Just imagine going through it on an island with a group of coeds!\"\n\n\"When is your birthday?\" Jennie asked.\n\n\"This coming Friday,\" Rosa replied.\n\n\"Wow,\" Jennie said, unable to resist. \"You really are a glutton for punishment!\" Rosa laughed as Jennie added, \"Happy Birthday.\"\n\n\"Thanks!\" the redhead said with a shake of her head. \"But it's not as bad as all that. My friends are grad students as well.\"\n\nJennie was surprise at how quickly she and Rosa hit it off. They didn't seem that much alike, but she liked the redhead's sense of humor. The only problem was that she kept catching herself looking at Rosa's body. That damn dream of hers had her thinking things she'd rather not!\n\n\"Don't look now,\" Rosa said. \"There is a rather tasty hunk making his way over. He's giving you the eye.\"\n\nThat's not a hunk,\" Jennie smiled as she looked where Rosa was watching. \"That's my husband Greg.\"\n\n\"You lucky bitch!\" Rosa snapped. \"He's hot!\" Jennie was shocked by Rosa words, but instead of getting mad, she started laughing.\n\n\"Don't I know it!\" she said as Greg walked up.\n\n\"Know what?\" Greg asked.\n\n\"Nothing,\" Jennie replied. \"This is Rosa. She's a new friend.\"\n\nGreg's eyebrows rose briefly in surprise. Jenny wasn't the type to make new friends quickly and she'd spent less than five minutes talking to this redhead.\n\n\"I'm Greg,\" he said holding out his hand. Rosa took it and shook it. Greg smiled at her and the redhead felt a jolt down to her toes.\n\n'Just my luck!' she thought. 'The hottest guy at this resort near my age happens to be married to this sex goddess. I can't even hate the bitch because she's so damn nice!'\n\n\"It's nice to meet you,\" Rosa said aloud.\n\n\"We're going for a swim,\" Jennie said to Rosa. \"Would you care to join us?\"\n\n\"No thanks,\" Rosa smiled. \"I've had enough of being a third wheel on this vacation already.\"\n\n\"Third wheel?\" Greg asked.\n\n\"I came down with a couple,\" Rosa replied. \"They were kind enough to invite me and it seemed like a good idea at the time, but...\"\n\n\"I understand,\" Greg said kindly. Rosa shook her head as she felt herself responding. \n\n\"Why don't you and your friends join us for dinner?\" Jennie asked, surprising them both. \n\n\"But before you answer, we should warn you,\" Greg put in. \"We have our children with is. They are seven and five years old. It normally makes for an interesting meal.\"\n\n\"It won't be that bad,\" Jennie laughed. \"We also brought a babysitter along. Mindy is in college so you'll have something in common, although she just finished her freshman year.\"\n\n\"That sounds great,\" Rosa said. \"But before I ask my friends if they're willing, you should know something.\"\n\n\"What?\" Greg asked.\n\n\"Joanne and Tara are a gay couple,\" Rosa replied. She saw the looks on both of the couple's faces and smiled sadly before adding, \"Don't worry about it. It was nice meeting you.\" Rosa then turned and walked away.\n\n\"That was a surprise,\" Greg said. Jennie nodded, but didn't say anything. She was thinking about Rosa and her friends. Joanne and Tara might be gay, but Rosa certainly wasn't. Her reaction to Greg was too obvious. What surprised Jennie was that neither the gay couple nor Rosa's attraction to Greg bothered her as much as she thought it would.\n\n\"Let's go for a swim,\" she said. Greg took her hand and they went into the water together. It wasn't that cold and the water was calm. They swam out pretty far. \n\n\"How about a kiss?\" Greg asked as they floated next to each other.\n\n\"Oh, I think we can do better than that!\" Jennie grinned, surprising him. The next thing Greg knew she was kissing him and rubbing his cock through his bathing suit.\n\n\"What's gotten into you?\" he asked in surprise.\n\n\"Why? Does it bother you?\" Jennie asked.\n\n\"Are you kidding?\" Greg laughed. \"I'm just surprise. You're acting the way you normally do after one of your nightmares. Is it because of the way all those guys were staring at you?\"\n\n\"Maybe,\" Jennie smiled. \"Or maybe it was the way Rosa kept trying hard not to stare at you. She called you a 'hunk' and me a 'lucky bitch' before you arrived!\"\n\n\"Did she now?\" Greg grinned, helping Jennie stay afloat as her hand slipped into his suit. \"Now why would she say that?\" Jennie looked at him and smiled sexily. What the hell? Why not have some fun and see how Greg reacted?\n\n\"I bet because she'd love to feel this thing inside of her,\" she said, giving his cock a squeeze. Greg moaned and Jennie relaxed. \n\nThe last few months proved to her that Greg was more than willing to accept a wife that wasn't quite so prudish as she used to act, but this was the first time she was talking like this and it was dangerous in a way. If she kept trying new things sexually, eventually she might go too far for Greg's liking. Of course, she was having fun and nothing she'd suggested to date did anything but excite her husband.\n\n\"I can't blame her,\" she continued. \"It does feel amazing! Just like what I'm doing to you now, right?\"\n\n\"You have no idea!\" Greg moaned.\n\n\"Oh, I think I do,\" Jennie grinned, reaching lower and cupping his balls. \"You don't mind me talking like this, do you?\"\n\n\"No,\" her husband groaned. \"It's so hot!\"\n\n\"So, would it bother you if I said that I wanted to make love to you right now?\" Jennie asked. She felt his cock jump at her words.\n\n\"I wouldn't call it that,\" Greg grinned. \"Making love is what we do when we're in bed sharing. What you want is sex! Wild passionate sex!\"\n\n\"Okay, if you insist,\" Jennie said with a shake of her head, but she was smiling.\n\n\"Say it,\" Greg said. \"Tell me you want to have sex with me right now!\"\n\nJennie looked at her husband and thought about what he wanted her to say. She might have been brought up a prude, but she knew what he really wanted to hear. The question was whether she was willing to say it or not. She thought for a moment and then shrugged. She was feeling very horny. If he wanted to hear it, why not just say it?\n\n\"I want to fuck you, right here and right now,\" Jennie said lustfully. Greg's eyes grew big before he spoke.\n\n\"I don't think I've ever heard you say that word before,\" he gasped.\n\n\"What?\" Jennie teased. \"Fuck, do you mean the word fuck?\"\n\n\"Yes!\" Greg groaned, trying to pull her bottoms down. \n\n'Wow! He really is excited!' Jennie thought, but then pulled away and added aloud, \"We can't do it right now!\"\n\n\"Afraid someone will see?\" Greg asked in frustration.\n\n\"Not as much as I'm afraid we'll drown!\" Jennie laughingly replied.\n\n\"You teasing bitch!\" Greg cried in frustration. Instead of getting mad, Jennie just continued to laugh.\n\n\"I have an idea,\" she said after a few moments.\n\n\"What?\" Greg asked, trying to calm down.\n\n\"How about we stay out here for a few minutes and I continued to talk like I was?\" she asked.\n\n\"You mean you'll continue to talk dirty to me?\" Greg asked pointedly.\n\n\"Yes,\" Jennie smiled. \"I'll talk dirty to you.\"\n\n\"And then?\" Greg asked.\n\n\"And then we go back to our room and you get to release all your pent up desire,\" Jennie answered.\n\n\"Why wait?\" Greg groaned and reached for her. \"I've got more than enough already!\"\n\n\"Not so fast mister!\" Jennie laughed, pulling back again. \"I'll make a deal with you. If you can keep your hands off of me for the next fifteen minutes, I'll let you do anything you want when we get back to the room.\"\n\n\"Anything?\" Greg asked in interest. Jennie frowned, not sure what he was getting at, but decided to go with it to see what happens.\n\n\"Anything,\" she finally replied.\n\n\"Then you'd better make it good, because I want your ass!\" he growled.\n\n\"My ass!\" Jennie cried in surprise. It was so loud that a guy who was swimming twenty yards away looked their way. The tide had pulled them both in. Jennie blushed and started swimming back out. Greg followed her.\n\n\"Are you serious?\" Jennie asked when she deemed that they went far enough.\n\n\"I've always wanted your ass,\" Greg shrugged, \"But before the last few months I didn't dare bring it up.\"\n\n\"I don't know...\" Jennie began, but her husband silenced her with a kiss.\n\n\"If I win, you have to promise to at least try it,\" Greg said. \"If you really don't like it we can stop and never do it again.\"\n\n\"Okay,\" Jennie finally said.\n\n\"Really?\" Greg asked in surprise. He obviously hadn't expected her to agree.\n\n\"I'll just have to make sure you don't win,\" Jennie replied.\n\n\"Give it your best shot!\" Greg grinned. \"Only hurry! I know we both like the water, but how long do you think we can float?\"\n\n\"Just long enough,\" Jennie smiled. \"I doubt you'll make the whole fifteen minutes anyway.\"\n\n\"Watch me!\" her husband grinned.\n\n\"Are you ready?\" Jennie asked with her back to the shore.\n\n\"Yes,\" Greg said, swallowing hard once.\n\n\"Okay, then lets start,\" Jennie said as she looked around and made sure they were alone. Greg's eyes nearly popped out of his head when she flashed one of her breasts at him. No one saw because Jennie did it in a way that the people behind her wouldn't realize what she was doing, but that didn't help Greg.\n\n\"Oh fuck!\" he cried. \"You are such a tease!\"\n\n\"I'm only just beginning,\" Jennie promised, seeing his expression and realizing just how much he liked it. She swam close to Greg without touching him. Her breast was back in her bathing suit, but the damage was already done. Greg's cock was hard.\n\n\"Wouldn't you just love to feel my breasts in your hands?\" she asked, her face only inches from Greg's. \"Maybe you could lean forward and nibble on my nipples? That always drives me crazy! It makes me throb you know where!\"\n\n\"You know I want to!\" Greg said tensely. \"This is a lot harder than I thought it was going to be.\"\n\n\"I'll bet it is,\" Jennie smiled sexily. \"I'll bet it's so hard that the head is peaking out of your suit already?\"\n\n\"You're not wrong!\" her husband groaned, obviously already fighting to keep his hands off of her. \"I could just picture my cock with those monsters of yours wrapped around it!\"\n\n\"Do you like when I lick the head as it peaks out between my breasts?\" she asked knowingly, and then added seductively, \"Or should I say when it peaks out from between my tits?\"\n\n\"Big tits!\" Greg groaned.\n\n\"Big tits,\" Jennie smiled in agreement.\n\n\"Yes! I like it,\" Greg said. \"I like it a lot!\"\n\n\"Good!\" Jennie said. \"Because so do I.\"\n\nShe swam around Greg. He remained facing the same direction and Jennie moved close again from behind. She could see the goose bumps on his neck as her breath gently touched his ear.\n\n\"I should have known you'd want my ass,\" she whispered. \"Ever since I started letting you take me from behind you've been a wild man.\"\n\n\"I can't help it!\" Greg admitted. \"Your ass is just so nice and round.\"\n\n\"I love the way you grab my hips and slam into me,\" Jennie said, half closing her eyes and remembering the feeling. \"You gave me multiple orgasms that first time! It felt incredible! Think you can do it again?\"\n\n\"Wait until I get you back to the room!\" Greg promised.\n\n\"Do you want to know the best part about that position?\" Jennie asked, already knowing the answer.\n\n\"Yes!\" Greg cried.\n\n\"Me too,\" Jennie teased, \"But I can't decide.\" Greg groaned.\n\n\"It's either the feel of your...\" she started to continue, but then hesitated.\n\n\"Say it!\" Greg demanded.\n\n\"But it's so unladylike,\" Jennie replied. \"What would my mother think?\"\n\n\"Fuck her!\" Greg said, actually growling this time. \"Tell me!\"\n\n\"Okay,\" Jennie smiled. \"I just hope you don't think less of me later.\"\n\n\"You know I won't!\" her husband moaned.\n\n\"I think I do,\" Jennie smiled, swimming back around Greg before continuing.\n\n\"The thing that feels best about you taking me from behind,\" she continued, \"is either the feel of your testicles slapping against my...\"\n\n\"Call them balls!\" Greg said. Jennie blushed slightly, but then nodded.\n\n\"The feel of your balls slapping against my...\" she hesitated a moment before adding, \"...clit!\" Greg moaned.\n\n\"Or?\" he demanded a moment later when she didn't continue on her own.\n\n\"Or,\" Jennie added, her lips only inches from his. \"How hot it feels with you holding me down and driving into me so hard!\"\n\n\"Oh fuck!\" Greg groaned as he reached for her. \"You win!\"\n\n\"Not so fast!\" Jennie cried and quickly pulled back. She wasn't ready for her teasing to end. In her desperation she blurted out, \"Don't you want to hear about Rosa?\" This caused Greg to hesitate.\n\n\"What about her?\" he asked.\n\n\"Nothing much,\" Jennie replied, stalling for time. She didn't know what to say, but she had to say something. At least her husband was obviously interested.\n\n\"Have you ever slept with a redhead before?\" Jennie asked, already knowing the answer. Greg had only slept with one girl before Jennie and she was a brunette too.\n\n\"No,\" he groaned.\n\n\"I wonder if what they say about redheads is true?\" Jennie asked rhetorically. \"Do you think they're really that wild in bed?\"\n\n\"Maybe,\" Greg said. \"But they don't hold a candle to you babe!\"\n\n\"I bet,\" she began, smiling at his words, but not addressing them, \"That she's sitting in her lounge chair thinking about you right now.\"\n\n\"What else is she doing?\" Greg asked.\n\n\"Probably fighting hard not to slip her fingers between her legs,\" Jennie replied, surprising herself once more. Her own excitement peaked. The thought of Rosa playing with herself was getting to Jennie just as badly as her husband.\n\n\"You don't think she's a lesbian?\" Greg asked.\n\n\"No way!\" Jennie insisted. \"Not with the way she was looking at you.\"\n\n\"But her friends are,\" Greg argued.\n\n\"So,\" Jennie shrugged. \"Maybe she's bisexual.\"\n\n\"Oh wow!\" Greg cried. \"That's so hot!\"\n\n\"You like the idea of her being bisexual?\" Jennie asked in surprise.\n\n\"Are you kidding?\" he asked, talking without thinking now. He was just too excited. \"I can just picture me fucking your ass while your face is buried in her red thatch of hair. I bet you'd love the taste of her pussy!\"\n\n\"Greg!\" Jennie cried in shock. \n\nThere was something in her tone that made her husband think he went to far. It wasn't true. Jennie was stunned by his words, not disgusted. Greg looked at Jennie and cursed himself silently. It was amazing how quickly all the lust could drain from a situation.\n\n\"I'm sorry babe!\" he said quickly. \"It's just that you had me so worked up. I think it's every guy's fantasy to see his girl with another woman.\"\n\nJennie doubted Greg was right, but obviously it was his fantasy. She was suddenly faced with a choice that she thought she'd never have. She could accept his apology and move on, forgetting this conversation ever happened, or she could admit her own desires to her husband and see what happened. It was both exciting and scary at the same time.\n\nShe looked at Greg and saw his concern. She wanted to tell him it was okay, but she couldn't get the words out. This was in part because it would be admitting one of her deepest and darkest secrets. Yet, Jennie thought she could do that with Greg. She loved and trusted him that much. The problem was what came next.\n\nIf she did admit it, would that mean anything would come of it? Would Greg want to see her with another woman? Would he want to join in? Could Jenny watch him have sex with another woman even though she was enjoying that same woman? And what if Jennie realized somewhere in the middle that she didn't really like women? What if the reality didn't match up with her dreams?",
        "It was too much for Jenny. She was sorely tempted to forget the whole thing, but she knew that if she did, she would probably never get another chance. Her thoughts were still waffling when Greg grabbed her arm.\n\n\"Jennie?\" he asked. She looked up at him and saw his concern. She smiled.\n\n\"You lose,\" she said, trying to lighten the mood.\n\n\"Are we okay?\" Greg asked, forgetting the bet.\n\n\"We're great,\" Jennie said, kissing him briefly. \"I'm tired of swimming. We'll talk more later.\"\n\n\"Okay,\" Greg said, frowning in confusion. The next words left Jennie mouth without a conscious thought.\n\n\"I'm going to stop by Rosa's blanket and invite her and her friends to dinner again if you don't mind,\" she said. \"It was rude to let the conversation end the way it did.\"\n\n\"Are you sure?\" Greg asked. \"Your mother wouldn't be happy.\"\n\n\"Like you said earlier, fuck her,\" Jennie said, blushing slightly, but not backing down. \"Rosa seems like a nice woman and I'm sure her friends are too.\"\n\n\"Okay,\" Greg said, looking at her oddly. Jennie didn't bother saying anything. She swam back to the beach and searched out Rosa. The redhead was under an umbrella. There were two blond women lying on a blanket in front of her.\n\n\"Rosa,\" Jennie said as she walked up. \"I wanted to apologize for before.\"\n\n\"It's okay,\" Rosa said, looking at Jennie carefully. Her two friends were also watching the conversation.\n\n\"No it's not,\" Jennie continued, and then turned to the other two women and added, \"I probably should apologize to you two also. It's just that I've led a pretty sheltered life and...\"\n\n\"And you've never met a lesbian couple,\" the taller of the two finished. She had long golden blond hair.\n\n\"Greg and I would still like to invite you to dinner,\" Jennie continued. \n\n\"And what makes you think we'd be willing to eat with a straight couple?\" the other blond woman asked. She was shorter and her hair was a paler blond.\n\nJennie froze for a moment, but then saw the humor in the woman's eyes and laughed.\n\n\"Okay, I deserved that,\" she admitted.\n\n\"Well, what do you think ladies?\" Rosa asked. \"Are you two up for a meal with a straight couple, their kids and the babysitter?\"\n\n\"Kids?\" the shorter blond asked.\n\n\"Jeremy and Sarah,\" Jennie offered. \"Seven and five. They are relatively well behaved, but I can understand if you don't want to deal with children on your vacation.\"\n\n\"Deal with them?\" the woman said, sitting up. \"I love kids!\"\n\n\"That's because you don't have to have to deal with them day in and day out,\" the taller blond said. \"Try being the oldest of seven!\"\n\n\"Oh stop it!\" the shorter one said. \"You love kids almost as much as I do.\"\n\n\"I guess that means that we'll be glad to join you for dinner,\" Rosa said. \"By the way, the tall golden haired goddess is Joanne and the small elfin one is Tara.\"\n\n\"I'm Jennie and my husband is Greg,\" Jennie smiled. \"Our babysitter is Mindy.\"\n\n\"Do you think your husband will be able to take all the estrogen tonight?\" Joanne asked.\n\n\"With the way you three look?\" Jennie joked. \"He'll be in all his glory.\"\n\n\"He can look all he wants,\" Joanne replied with a smile.\n\n\"He just can't touch,\" Tara added.\n\n\"Speak for yourselves!\" Rosa put in. \"He's a hunk!\"\n\n\"Rosa, that Jennie's husband you're talking about,\" Joanne said pointedly.\n\n\"Sorry,\" Rosa said. \"Sometimes my sense of humor goes a little too far.\"\n\n\"Don't worry about it,\" Jennie smiled. \"Besides, I agree with you. Greg is a hunk.\"\n\n\"You're not so bad yourself,\" Tara put in, causing Jennie to blush.\n\n\"Down girl!\" Joanne laughed. \"We're exclusive.\"\n\nThe women chatted for a few more minutes before Jennie said her goodbyes. She left them her suite number and told them to come by at around six. The three women watched her go.\n\n\"You do know that she's attracted to you?\" Tara asked Rosa when Jennie was far enough away not to overhear.\n\n\"What?\" Rosa snapped in surprise. \"Your crazy! She's a married woman!\"\n\n\"Rosa, I know that look,\" Tara argued. \"She's into you. She may not even have admitted it to herself, but she is.\"\n\n\"Joanne, please tell her that she's crazy,\" Rosa said to the other woman.\n\n\"Tara, you are definitely crazy,\" Joanne said. \"It's one of the things I love most about you.\"\n\n\"But I'm not wrong,\" Tara insisted.\n\n\"No, I don't think so,\" Joanne shrugged. \"I think that woman wants Rosa almost as much as Rosa wants her husband.\"\n\n\"I do not...\"\n\n\"Don't even waist your breath!\" Joanne laughed. \"It so obvious that even Jennie knows it, but it doesn't seem to bother her. Maybe she's hoping to get you into a threesome.\"\n\n\"You two are so sick!\" Rosa cried.\n\n\"What's the matter?\" Tara asked. \"Afraid that you might actually go for it?\"\n\n\"I've told you two a thousand times!\" Rosa insisted. \"I like men!\"\n\n\"So does Jennie,\" Joanne replied, \"Although I'll never understand it myself.\"\n\n\"But I think Jennie likes you as well,\" Tara put in. \"Why not see what happens? At least you'll finally know if you're into women as well as men.\"\n\n\"No way!\" Rosa cried.\n\n\"Why not?\" Joanne asked. \"After all, you are in college for one more year and it is the time for experimenting.\"\n\n\"Is that how you two became lovers?\" Rosa asked, quickly changing the subject.\n\n\"Not really,\" Tara grinned. \"We knew were both lesbians long before college. We grew up in the same town. In high school I was a gymnast and Joanna a cheerleader.\"\n\n\"Talk about your stereotypes!\" Joanne quipped, forcing Rosa to laugh.\n\n\"You think that's funny,\" Tara said. \"You should have seen our poor prom dates junior year when they caught us in the hotel's pool.\"\n\n\"I assume it didn't end up in an orgy?\" Rosa asked.\n\n\"I'll never tell!\" Tara laughed, but from Joanne's expression Rosa didn't think so.\n\nThe conversation turned to other topics, but Rosa couldn't stop thinking about what her friends said.\n\n\"Maybe we should cancel,\" she said a few minutes later.\n\n\"It's up to you,\" Joanne shrugged. \"But I wouldn't. They can't make you do anything you don't want to and it really does sound like a good time. I was never one for restaurant food and I bet Jennie is a great cook.\"\n\n\"You're right,\" Rosa said, but she couldn't stop herself from being nervous. She was confident in her heterosexuality. Not even her horrible marriage that ended badly affected that. \"It's only dinner.\"\n\n***\n\n\"Mindy, I'm so sorry!\" Jennie said. \"I didn't think to ask you if it would be okay. I should have realized you might not be comfortable with our guests. Your mother is very vocal about her dislike of homosexuality.\"\n\n\"I'm not my mother,\" Mindy said quickly. \"And I don't mind that you invited them. I'm just surprised is all.\"\n\n\"Look, you don't have to stay if you don't want to,\" Greg put in.\n\n\"Mr. H, relax!\" Mindy laughed. \"I'm okay with it. Just do yourself a favor and don't mention it to my mother.\"\n\n\"Or mine either,\" Jennie said, causing the others to laugh. \"She would disown me if she knew I invited lesbians to eat with my family.\"\n\n\"It's not like Tara and Joanne are Martians or something,\" Greg said with a shake of his head.\n\n\"Great,\" Jennie sighed. \"Next time we'll invite two homosexual men to dinner and see how you react!\"\n\n\"I eat lunch with Brian and Kyle three times a week,\" Greg said.\n\n\"They're not gay!\" Jennie frowned.\n\n\"That's not the rumor I keep spreading around the office,\" Greg grinned.\n\n\"Oh, we are definitely a bunch of enlighten people here!\" Jennie groaned. Mindy laughed, but Greg grew serious.\n\n\"Maybe we aren't,\" he said. \"But people can change. You certainly have been over the last couple of months.\"\n\n\"So have you,\" Jennie sighed.\n\n\"I love you,\" Greg said. \"And always will.\"\n\n\"And I love you.\" \n\n\"If you two want me to take the kids out for a little while...\" Mindy offered with a grin.\n\n\"Tempting,\" Greg said. \"But our company should be arriving soon.\"\n\n\"Greg! You are so bad!\" Jennie said, hitting his shoulder.\n\n\"Don't worry about it,\" Mindy said, no longer smiling. \"It's great how you two are still so close. My parents barely talk to each other.\" The doorbell rang and interrupted their conversation.\n\n\"I'll get it,\" Greg said and went to the door.\n\n\"I don't know about how your parents feels about each other,\" Jennie said quickly before the door opened. \"But I know they both love you very much.\"\n\n\"Thanks, Mrs. H,\" Mindy sighed.\n\n\"Hello,\" Joanne said as she and Tara walked in. \"I'm Joanne and this is Tara. Rosa is right behind us. She's parking the car.\" The two blonds were holding hands. They were dressed in summer dresses and looked extremely attractive. Introductions were made. \n\n\"Was it a far drive from your room?\" Greg joked.\n\n\"No,\" Tara laughed. \"But what kind of guest comes to dinner without at least a bottle of wine?\"\n\n\"You didn't have to bring anything,\" Jennie said with a shake of her head.\n\n\"It was Rosa's idea,\" Joanne put in. \"I think she's hoping to get you and your husband drunk so she can take advantage of you both!\"\n\n\"Who's taking advantage of who?\" Rosa asked as she walked up carry a bottle of wine.\n\n\"Oh wow,\" Greg said lowly. Jennie couldn't argue.\n\nRosa wasn't wearing a hat anymore and her hair was thick and curly and went well with her pale, slightly freckled skin. She was also wearing a sundress. It was obvious that Rosa was attractive at the beach, but she had been wearing so much protection against the sun that Jennie didn't notice just how beautiful the woman truly was. \n\n\"Hey!\" Rosa said in embarrassment when she saw Jennie and Greg looking at her oddly. \"Jennie was the one with all the guys ogling her at the beach earlier!\"\n\n\"I might have caught a few guy's eye in a bathing suit,\" Jennie said with a shake of her head. \"But you're absolutely gorgeous! I bet you have your choice of guys wherever you go?\"\n\n\"Not really,\" Rosa replied, glancing at Greg. \"Most of the good ones are already taken.\"\n\n\"Oh! This is going to be fun!\" Mindy said with a giggle.\n\n\"Mommy, is it time to eat yet?\" Jeremy called from the couch, obviously hungry.\n\n\"Come meet our guests and then it will be time to eat,\" Jennie replied. \"And bring your sister.\"\n\nThe meal was enjoyable as was the bottle of wine the ladies brought. It wasn't the only bottle they drank, but it was the first. After dinner Tara and Mindy played with the kids while the other four sat and chatted. An hour or so later they put the kids to bed.\n\n\"Your children are adorable!\" Tara said once they were all sitting at the table once more.\n\n\"Thanks,\" Jennie smiled. \"They're good kids.\"\n\n\"And that son of yours is such a little gentleman,\" Tara added.\n\n\"He takes after his father,\" Mindy put in.\n\n\"Thanks,\" Greg said.\n\n\"Hmm,\" Joanne said. \"Rosa it look like you might have a little competition in trying to steal Greg from Jennie.\"\n\n\"Oh no!\" Mindy said, blushing badly. \"I would never...\"\n\n\"Of course you would,\" Tara laughed. \"I doubt that there are very many straight women who wouldn't.\"\n\n\"Are you all done talking about my husband?\" Jennie asked.\n\n\"Shh,\" Greg said. \"Let them talk. My ego is growing almost exponentially!\"\n\n\"I'll bet that's not the only thing growing!\" Jennie said softly, but she blushed when she realized she said it aloud. The other ladies laughed. Even Mindy joined them after getting over her initial shock.\n\nJennie got up and went to the small kitchenette to refill their glasses. Joanne helped.\n\n\"So, are you going to try and seduce Rosa?\" Joanne asked when they were alone. Jennie looked at her and blushed badly. She thought about denying it, but there was no point. She could tell from Joanne's expression.\n\n\"I don't know,\" she said softly. \"I can't say that the thought hasn't passed through my mind, but it will mean a pretty major change in Greg and my relationship. I don't know if either of us are ready for extramarital sex or lesbianism.\"\n\n\"Have you ever been with a woman before?\" Joanne asked.\n\n\"No,\" Jennie replied, but then sighed and added, \"Almost. Once, a long time ago, but I chickened out.\"\n\n\"Rosa hasn't been with one either, but I think in the right situation she'd at least try it,\" the blond answered.\n\n\"Do you think this is that situation?\" Jennie found herself asking.\n\n\"Depends on whether you're willing to share your husband or not,\" Joanne said honestly. \"I don't think you'll be able to seduce her on your own. Tara's been trying for quite a while.\"\n\n\"I don't think I'd be brave enough anyway,\" Jennie replied. \"Besides, I wouldn't want to do anything to jeopardize what I have with Greg.\"\n\n\"Well,\" Joanne smiled and patted her wrist. \"I'll help if that's the way you want to go. Just let me know.\"\n\n\"Thanks, but no thanks,\" Jennie said with a warm smile. \"At least for the time being.\"\n\n\"Let me know if you change your mind,\" Joanne smiled. Jennie looked at the woman carefully and saw a warm, kind person who was trying to help her friends in her own way.\n\nIt's difficult to get past your childhood prejudices, even when you know they're wrong. For years now Jennie knew intellectually that homosexuals were real people just like everyone else, but deep down it was hard for her to accept emotionally. Yet, looking at Joanne now, the truth started sinking in. Greg was right. They were changing. \n\n\"I really am sorry about my reaction when Rosa first told us about you and Tara,\" Jennie said seriously.\n\n\"Don't worry about it,\" Joanne smiled, guessing at the woman's train of thought. \"At least you were willing to fight against your prejudices. You'd be amazing how many people don't.\"\n\n\"Are you two going to bring us our glasses any time soon?\" Tara called from the living room.\n\n\"Coming dear!\" Joanne said sarcastically. Jennie laughed.\n\n\"So Mindy, what's your sexual orientation?\" Tara asked once the wine was passed out.\n\n\"Tara!\" Rosa cried.\n\n\"What?\" the impish blond asked. \"Joanne and I obviously as gay as gay gets. No offense to Greg, but men are fine as friends, but I wouldn't want one as a lover.\"\n\n\"None taken,\" Greg smiled and shrugged. \"Although I'd feel a lot worse without Jennie in my life.\"\n\n\"Good answer!\" Jennie laughed.\n\n\"By the way,\" Greg added. \"I'm a heterosexual.\"\n\n\"Never thought about trying the dark side?\" Joanne joked.\n\n\"No,\" Greg said calmly and confidently. \"The thought of another naked guy just doesn't do it for me.\"\n\n\"Your loss,\" Mindy said surprising everyone. She saw them all look at her and she blushed. \"What? I like the sight of a naked man. Is that so bad?\"\n\n\"Not at all,\" Rosa laughed. \"So do I.\"\n\n\"Mindy, how about women?\" Tara asked. \"Do you like to see them naked as well?\"\n\n\"I'm not into women,\" Mindy replied, taking a long sip of her wine.\n\n\"How can you be so sure?\" Tara teased. \"You're still young.\"\n\n\"I'm over eighteen and I know what I like,\" Mindy insisted.\n\n\"Maybe if you tried a woman you'd change your mind,\" Tara continued.\n\n\"Tara, that's enough,\" Joanne said, and then tried to lighten the mood by adding, \"You can't have her even if she were gay.\"\n\n\"I know,\" Tara shrugged. \"I just think that if she just tried it with a woman...\"\n\n\"What makes you think I haven't?\" Mindy blurted out. She wasn't drunk, but the alcohol had obviously loosened her tongue a little. The group fell silent for a moment.\n\n\"Really?\" Tara finally said. \"Do tell?\"\n\n\"There's not much to tell,\" Mindy replied as she blushed. \"We were young and my best friend and I fooled around a little. It was nothing special and once we found out about how it felt with guys, well, that was the end of that.\"\n\n\"You and Toni Ann?\" Jennie asked in surprise.\n\n\"Please don't tell anyone!\" Mindy cried.\n\n\"I wouldn't worry about it,\" Tara said. \"Before this vacation is over I think you'll have enough secrets of hers to keep her quiet.\"\n\n\"Don't worry,\" Jennie said, ignoring Tara's pointed comment. \"I would never tell anyone about it.\"\n\n\"I might,\" Greg joked.\n\n\"You do and you'll be awfully lonely in bed all by yourself,\" Jennie retorted for Mindy.\n\n\"Hey! I was just kidding!\" he cried.\n\n\"So, we have two homosexuals,\" Tara said, reclaiming the topic of the conversation. \"Two heterosexuals, and possibly two bisexuals.\"\n\n\"I'm not bisexual!\" Rosa cried.\n\n\"Me neither!\" Jennie added.\n\n\"Not yet,\" Tara grinned. \"But we're all here to Saturday. A lot can change in a week.\"\n\nGreg was laughing, thinking the conversation was just Tara doing what Tara did. He didn't realize that the woman was serious. Mindy wasn't certain, but Jennie and Rosa knew. Joanne took one look at Jennie face and interrupted her lover's next words.\n\n\"Tara, that's enough,\" she said. This time her voice was more serious. Tara met her gaze and nodded slowly in acceptance.\n\nThe conversation turned to safer topics for a while and everyone seemed happier for it. It was almost midnight when the party started winding down.\n\n\"I'd better get to bed,\" Mindy said, standing and stretching. \"We're supposed to be going snorkeling with the kids tomorrow.\"\n\n\"That sounds like fun!\" Joanne said.\n\n\"You three are welcome to join us,\" Greg smiled. \"I've already rented a catamaran and there is room for three more.\"\n\n\"Please come?\" Jennie smiled. \"I've had fun tonight.\"\n\n\"How about it Rosa?\" Tara asked. \"Are you up for it?\"\n\n\"Why not?\" the red head shrugged, and then laughed and added, \"Oh well, back to the big hats and lots of sunscreen.\"\n\n\"Good!\" Jennie laughed. \"Then maybe the rest of us ladies can get some attention from the guys we pass.\"\n\n\"Have fun with that,\" Tara grinned.\n\n\"Well,\" Joanne smiled at Greg. \"It looks like you're going to have a full boat tomorrow.\"\n\n\"The more the merrier!\" He smiled.\n\n\"Don't get your hopes up too much,\" Joanne said. \"Like I said earlier, Tara and I aren't into men.\"\n\n\"I didn't mean it that way,\" Greg said with a laugh.\n\n\"Sure you didn't,\" Jennie said as she patted his hand, causing the other ladies to laugh.\n\n\"Just remember,\" Mindy added. \"The kids will be with us. Do you think everyone can keep their hormones in check that long?\"\n\n\"We'll see,\" Rosa said.\n\n\"Okay, I think we've all had more than enough to drink tonight,\" Joanne said. \"It's late and we could all use some sleep. We're going to walk back to our room if you don't mind us leaving the car here until tomorrow.\"\n\n\"Not at all,\" Greg smiled.\n\nThe three women left and Mindy said her goodnights as well. The girl had her own small bedroom. She gave Greg one more look before disappearing into her room.\n\n\"That girl wants you,\" Jennie said after they were alone. Her husband frowned. \n\n\"She's just horny and drunk,\" Greg shrugged. \"I hope she's okay in the morning.\"\n\n\"So, are you ready?\" Jennie asked.\n\n\"What do you have in mind?\"\n\n\"Well, we never did finish that discussion from earlier,\" she replied.\n\n\"Which one?\" Greg asked.\n\n\"You know which one,\" Jennie said.\n\n\"Oh, that one,\" her husband said carefully. \"Do you want to finish it?\"\n\n\"I think the important question,\" she sighed. \"Is should we?\"\n\n\"What's that supposed to mean?\"\n\n\"Greg,\" Jennie said, looking at her husband as she spoke. \"The last few months have been great. I feel closer to you than ever before and I've become much more comfortable with us physically.\"\n\n\"I've noticed,\" he said with a smile. He was obviously trying to lighten the mood, but Jennie wouldn't be distracted.\n\n\"Maybe I went too far earlier in the ocean. I was the one who brought Rosa into the conversation,\" she continued. \"But you were the one that turned the conversation to lesbianism and that went way beyond anything we've even talked about.\"\n\n\"Bisexuality actually,\" Greg sighed. \"But I get the point. I'm sorry. I shouldn't have said anything. You just had me so horny talking like that!\"\n\n\"I did enjoy teasing you,\" Jennie admitted. \"But that's not really the issue.\"\n\n\"What is?\" Greg asked. \"I've already apologized.\"\n\n\"And that can be the end of it, if you want,\" Jennie sighed, tempted once again to leave it at that, but she couldn't do it. \"Or, you can join me in the bedroom is a few minutes and ask me what I really think about your fantasy with Rosa.\"",
        "Jennie quickly disappeared into their bedroom without looking at her husband to gauge his reaction. Her heart was beating quickly. She was afraid he'd come in and ask her to explain, but she was more afraid he wouldn't. Jennie put her ear to the door and heard Greg pour himself another drink. \n\n'Well, he didn't run out screaming or start calling me terrible names,' she thought, stripping off her clothes and slipping under the covers. She normally wore a nightgown, but didn't want to right now. Jennie was going to make love to her husband whatever path he chose. She needed him to know how much she loved him no matter what happened.\n\nGreg came into the room a few minutes later. It was dark and he could barely make out his wife's shape in the bed. He knew what he wanted to do, but he hesitated a moment longer and then let out a long breath.\n\n\"Jennie?\" he called.\n\n\"Yes Greg?\" she asked calmly.\n\n\"What do you really think about my fantasy with Rosa and you?\"\n\n\"I'll answer that question after you hear a story,\" Jennie replied. \"Take off your clothes and lay down next to me.\"\n\n\"What kind of story?\" he asked, doing as she asked. He realized that she was naked as soon as he joined her in the bed.\n\n\"One from my past,\" Jennie replied. \"From before I met you.\"\n\n\"Tell me,\" Greg said, spooning his wife and resting his hand on her hip.\n\n\"My first week of college in the big city I met this really nice girl,\" Jennie began. \"Laura was from the city and helped me adjust.\"\n\n\"I think I like where this conversion is going!\" Greg said, kissing her ear.\n\n\"Don't get your hopes up,\" Jennie laughed gently. \"You know how I was brought up.\"\n\n\"So what happened?\" Greg asked. \n\nJennie told him. She didn't leave anything out. She was holding her breath when she was done, waiting to see what his reaction would be. Jennie was putting all her trust in the man she loved. She prayed it didn't backfire.\n\n\"Is there anything else I should know?\" Greg asked in a monotone voice. \n\n\"Well, yes,\" Jennie sighed. \"All those nightmares I've been having recently?\"\n\n\"Yes?\" her husband asked.\n\n\"They weren't really nightmares,\" she said. \"I was dreaming about what happened with Laura.\"\n\n\"That explains you reaction afterward,\" Greg said with a shake of his head.\n\n\"Do you still love me?\" Jennie asked, frightened to death. Greg frowned at her.\n\n\"Of course I still love you,\" he replied. \"Why would you worry about that?\"\n\n\"I dream about sleeping with women!\" Jennie answered. \"Where I come from they'd probably stone me for that!\"\n\n\"Jennie, nothing you do or say will ever make me stop loving you,\" Greg said, pulling her close. He had his arm across her chest, but right at that moment it wasn't at all sexual. Jennie cuddled back into him and felt a single tear fall.\n\n\"Are you mad at me?\" she asked.\n\n\"Not really,\" Greg said. \"Although I wish you hadn't lied to me all these months about your nightmares. I've been more than a little worried about them.\"\n\n\"I'm sorry,\" Jennie replied. \"I just couldn't tell you.\"\n\n\"I understand,\" her husband replied. \"Now it's my turn to ask a question.\"\n\n\"Go ahead,\" Jennie said, swallowing hard.\n\n\"Should I be worried about losing you to a woman?\" he asked. \"If you prefer one over me, there's not a lot I can do about it.\" Jennie turned around and faced Greg. \n\n\"First of all,\" she said. \"I love you with all my heart.\"\n\nShe looked up into his eyes and kissed him deeply. Her hands once again found his cock. It was soft, but Jennie knew she could change that quickly enough.\n\n\"And second of all, do you really think I could give up this?\" she asked, tugging gently on his cock. \"Haven't I proven over the last few months how perfect we are together?\"\n\n\"From the first time we met,\" Greg replied with a satisfied smile, enjoying the feel of her breasts against his chest. \"It just sounded like you want to be with a woman.\"\n\n\"I might,\" Jennie admitted. \"But not without you there and not if you don't want me to.\"\n\n\"Oh wow!\" Greg groaned, his cock hardening in her hand. \"Maybe with Rosa?\"\n\n\"Maybe,\" Jennie smiled, seeing and feeling his reaction. \"But that's a conversation for tomorrow. Tonight, I'm going to prove to you just how much I enjoy making love to you.\"\n\n\"That sounds great!\" Greg smiled.\n\n\"Oh, and Greg,\" she added, waiting for him to look at her. \"After that, I'm going to fuck you like crazy. I might even let you have my ass if you play your cards right.\"\n\n\"Jennie, I really do like the new you!\" he said emphatically. She smiled and rolled onto her back.\n\n\"First, I want you to love me,\" Jennie said, holding her arms open.\n\nGreg went to her and pushed into his wife slowly. Jennie hugged him to her and they kissed. Greg didn't pick up the pace until she was ready. Her legs were splayed wide at first, but as her orgasm neared she wrapped them around his legs.\n\n\"Oh Greg!\" she cried. \"I'm close!\"\n\n\"Me too!\" he groaned. \"I love you so much!\"\n\nThey kissed as Greg continued to stroke in and out of Jennie. They were both breathing hard and looking into each other's eyes when their orgasms hit together. Jenny shook and moaned while Greg thrust deep and filled her pussy with his cum.\n\n\"I really do love you,\" Jennie sighed in contentment once they were both done.\n\n\"The feeling is mutual,\" Greg replied as he smiled at his wife. \"Now, about the second part?\"\n\n\"You're incorrigible!\" Jennie laughed.\n\n\"I know,\" he grinned. \"Now come here and...\"\n\n\"After I take a shower,\" Jennie interjected as she quickly jumped out of the bed. \"And don't you try and sneak in! I'm locking the door.\"\n\n\"Why?\" Greg asked in confusion.\n\n\"It could be because I want to be clean,\" Jennie smiled and went to the bathroom. \"Or it could be because I want to see how badly you really want me. Most guys probably couldn't stay awake after an orgasm like that.\"\n\n\"I'll be awake when you get out,\" Greg promised, causing Jennie to laugh.\n\n\"I hope so,\" she said. \"Because I plan on teasing you so badly that you'll go mad with lust!\"\n\n\"Is that what this shower is all about? You're teasing me?\" Greg asked.\n\n\"Maybe,\" Jennie said with a smile. She was looking over her shoulder as she opened the bathroom door. She thrust out her ass before entering and asked, \"Do you like my ass?\"\n\nGreg was out of the bed in a flash, but Jennie was quicker. She entered the bathroom and quickly shut the door. Greg checked. She really did lock it.\n\n\"Damn!\" he muttered angrily, but then he got back into bed and smiled.\n\nJennie didn't take very long in the shower, but every minute drove Greg to distraction. It was worse when she took her time exiting the bathroom after the water stopped running.\n\n\"Finally!\" Greg cried as she stood in front of the bed in a robe.\n\n\"So, here's the deal,\" Jennie grinned.\n\n\"On no!\" Greg cried. \"Not another bet!\"\n\n\"Actually, the same one,\" Jennie replied. \"You listen to me for the next fifteen minutes without touching me and I'll let you have my ass.\"\n\n\"You are a cruel woman!\" Greg groaned, his desire to grab her and his desire for her ass warring.\n\n\"You might as well give it a try,\" Jennie smiled. \"What have you got to lose?\"\n\n\"My sanity!\" Greg grumbled, causing Jennie to laugh.\n\n\"The clock starts now,\" Jennie said, dropping her robe. Greg gasped. She was wearing a dark green camisole that showed off her impressive breasts.\n\n\"I thought you didn't like sexy underwear!\" he groaned.\n\n\"It's not that I don't like them,\" Jennie smiled. \"They're just generally uncomfortable, but I thought you might like to see me in this and I expect I won't be in it long. Do you like it?\"\n\n\"Oh, I do!\" Greg cried. \"I do!\"\n\n\"I bet you'd love to take it off and get your hands on my...what did you call them in the ocean?\" Jennie teased. \"Oh yeah! My 'big tits', or was it 'monsters'?\"\n\n\"Both!\" Greg nearly croaked. \"I called them both.\"\n\n\"So you did,\" Jennie grinned. \"How could I forget?\"\n\n\"There is no way I'm going to last fifteen minutes!\" Greg cried.\n\n\"Don't give up yet!\" Jennie said quickly. \"There is still so much I want to tell you!\"\n\n\"Like what?\" he asked.\n\n\"Well,\" Jennie smiled. \"Like how I really like the way the tan lines on my ass look. See?\"\n\nShe turned and showed him her ass. It was large, round and pale compared to the rest of her body. Jennie's eyes grew big when she saw Greg take hold of his cock and start stroking it. He was really fired up! \n\n\"No cheating!\" she cried. \"Let go! That's mine for later!\"\n\n\"Wouldn't you rather have it right now?\" Greg asked.\n\n\"Yes,\" Jennie admitted. \"But then I wouldn't be able to tell you my fantasies about Rosa.\"\n\n\"You have fantasies of Rosa?\" he asked, letting go of his cock. \"You'll tell me them?\"\n\n\"Why not?\" Jennie shrugged. \"They're just fantasies after all. It's not like we have to follow through with any of them.\"\n\n\"But we could,\" Greg moaned.\n\n\"Maybe,\" Jennie smiled. \"But we'll talk about that tomorrow. Tonight, we have each other and our fantasies.\"\n\n\"Tell me!\" Greg demanded. \"Tell me what you'd do to her!\"\n\n\"I'm not sure,\" Jennie teased.\n\n\"Would you kiss her?\" he asked. Jennie could tell from his expression that Greg was already picturing it.\n\n\"Of course,\" Jennie replied. \"I'd want to see if she tastes as good as she looks. I bet she does.\"\n\n\"Me too!\" Greg groaned.\n\n\"Can't you just see the thick patch of red hair between her legs, neatly trimmed and dripping?\" Jennie asked, surprised by her own brazenness, but she was so damn horny now!\n\n\"Yes!\"\n\n\"She wants you,\" Jennie said. \"I can just picture her laying on her stomach with her tight little ass sticking up in the air! Think she'd let you take it?\"\n\n\"Jennie, I can't take much more of this!\" Greg groaned.\n\n\"Sure you can,\" Jennie insisted. \"How else would you hear about my fantasy where Rosa has her face resting between my legs while you're taking her ass from behind? Do you think she'll like how I taste?\"\n\n\"She'd be crazy not to!\" Greg cried.\n\n\"Really?\" Jennie asked, watching her husband fight against himself. His eyes were locked with hers briefly and she smiled seductively, pulled off the camisole and cupping her own heavy breasts with her hands.\n\n\"Oh wow!\" Greg cried. \"If you keep that up I'm going to cum without even touching myself!\"\n\n\"Promise?\" Jennie asked with a sexy grin. She lifted both her breasts and squeezed them together.\n\n\"Stick your tongue out!\" Greg demanded. \"Lick your own nipple!\" Jennie hesitated, but her own excitement was too much to deny him.\n\n\"Like this?\" she asked lustfully and then brushed her tongue against a nipple.\n\n\"Oh fuck!\" Greg cried.\n\n\"Soon!\" Jennie promised, and then took the entire nipple into her mouth and sucked.\n\n\"No! Now!\" Greg demanded and reached for her. Jennie couldn't have stopped him if she wanted to, but she definitely didn't want to. She needed the release just as much as he did.\n\nShe fell into his arms and thrust her tongue into his mouth. She could feel his hands on her body as their lips crushed together. He was squeezing her breasts with one hand while his other found her pussy.\n\nGreg pushed two fingers in and out of her relentlessly, but there wasn't any pain. Jennie was soaked with her desire. His other hand squeezed her breasts hard, but she loved every minute of it! Jennie lay there with her body on fire!\n\n\"Greg! Take me please!\" Jennie begged.\n\nHe pulled his fingers from her pussy. She thought it was because he was going to push his cock in, but instead Greg brought his fingers to his mouth and licked her juices off of them. He smiled when he saw her reaction.\n\n\"You really do taste marvelous!\" he said, returning to her pussy and stroking his fingers in and out a couple more times before returning them to his mouth. The third time he didn't immediately bring them to his mouth after taking them out of her pussy. Instead, he waved them slowly under Jennie nose and then tried to push them into her mouth.\n\nShe grabbed his wrist and held it steady. Greg could see the almost uncontrollable lust in her eyes. He shifted his hips slightly and pushed his hard cock into her pussy.\n\n\"Yes!\" Jennie cried. Greg grunted and slammed in deep. Jennie mouth flew open as she moaned. He took that moment to push his sticky fingers past her lips. Jennie looked momentarily started, but then she was sucking on his fingers. She was tentative at first, but a moment later she was really going at it.\n\n\"I told you that you tasted amazing!\" Greg growled. \"I bet Rosa tastes just as good!\" Jennie didn't bother to respond. She was too busy enjoying her own taste and the feel of his cock filling her. \n\nIt wasn't long before Jennie's first orgasm broke. It was so intense that she lost track of things for a few moments. She found herself on her stomach with her ass in the air when she was able to focus again. Greg was behind her. He shoved his cock into her pussy and he took hold of her hips. A moment later his balls were slapping against her clit. Jennie knew that he badly needed a release, but she was surprised at how quickly she started responding after her last orgasm.\n\n\"That's it Greg!\" she cried, knowing how much he liked her to talk like this. \"Take me! Fill me with your cum!\" His hips were now pounding against her ass. \n\nGreg was holding her in place and she couldn't escape if she wanted, but she tried anyway. It excited her to feel so totally out of control. Jennie's clit was on fire and each time his balls struck it, she felt an almost electric charge jolt her body!\n\n\"I'm cumming!\" she cried. \"Again!\"\n\nGreg didn't cum with her. It surprised her. He was obviously in desperate need, but she was too busy enjoying her own orgasm to care for a few moments. It actually took her a second to realize he was playing with her asshole with his thumb.\n\n\"Greg!\" she gasped. \"No! You didn't win the bet!\"\n\n\"I don't care!\" he growled, pushing his thumb past her resistance. \n\nJennie wasn't prepared for the pain it caused, but that was overshadowed by what it did to her orgasm. She groaned as it returned full force. Her body was shaking uncontrollably. She felt Greg pull out.\n\n\"No!\" she cried. \"I'm not ready yet!\"\n\n\"I know,\" he replied, surprising her with his control. \"But you will be.\"\n\nThe next thing Jennie knew she could feel Greg's tongue brush along the entire length of her ass.\n\n\"Stop!\" she cried, but Greg would not relent. He pushed two fingers into her pussy from behind while he licked her ass. Jennie was torn. She had no idea what to do. His fingers felt so good and he was now using his thumb to rub he clit. Despite everything else, she could feel that another orgasm wasn't far off.\n\n\"Oh Greg!\" she cried as his tongue pushed into her ass. \"That's so nasty!\"\n\n\"Do you want me to stop?\" he asked. \n\nJennie was so confused. The attention Greg was giving her pussy with his fingers and thumb wasn't helping! She wasn't sure she wanted him to take her ass because she was certain it would hurt! On the other hand, Jennie couldn't deny that despite the little pain she'd felt, she liked what Greg was doing so far.\n\n\"How badly do you really want my ass?\" she asked.\n\n\"Very!\" Greg quickly replied.\n\nJennie saw the raw desire in her husband's eyes. She couldn't deny him. She smiled sexily at him and then reached behind herself and pulled her ass cheeks part, giving him full access.\n\n\"You're the greatest!\" Greg cried before once again burying his face in her ass. Jennie was surprised at just how good it felt!\n\n\"I'm ready,\" she said softly a few minutes later. Her next orgasm was close and she wanted to feel his cock inside of her when she let loose.\n\n\"Yes, you are,\" Greg agreed and pulled his fingers away from her pussy. The head of his cock bumped against Jennie's asshole and she tensed, but a moment later Greg pushed his cock into her pussy. Jennie groaned.\n\n\"I thought...you were going...to take my ass?\" she gasped out.\n\n\"I am,\" he replied confidently as he stroked in and out of her soaked pussy. \"Now cum!\"\n\nJennie cried out as her body tensed in orgasm. She was in the middle of it when she felt Greg's cock pull out of her pussy and push past the entrance to her ass. She half expected it, but that didn't make it any easier.\n\n\"Your ass is so tight!\" Greg cried as he pushed in slowly.\n\n\"Oh fuck!\" Jennie cried in pain/pleasure. \"Oh fuck! Oh fuck!\"\n\n\"Are you okay?\" her husband asked.\n\n\"Don't stop!\" Jennie nearly growled. \"It feels...I can't explain it! Just don't stop!\" Greg smiled and pushed another inch in.\n\n\"What do you think your mother would say if she saw you lying there with your ass sticking in the air and my cock half buried in it?\" he asked.\n\n\"I don't care!\" Jennie cried. \"Push harder!\"\n\nGreg was surprised by her reaction, but not half as much as Jennie! His cock felt so big as it filled her ass! The pain was bad, but for some reason it added to her excitement.\n\n\"I'm turning into such a nasty slut!\" she said, shaking her head.\n\n\"My nasty slut!\" Greg put in.\n\n\"Yes!\" she agreed, looking over her shoulder at him. \"Yours, all yours!\"\n\nGreg saw the look in her eyes and groaned. He'd never seen her look more wanton! He doubted Jennie understood it herself. She was pushing back hard, trying to take more of his cock into her ass. He grabbed her hips and pushed as hard as he could. The rest of his cock pushing in until his hips pressed against her ass.\n\n\"I'm in!\" Greg cried. \"My cock is buried in your ass!\"\n\n\"Fuck!\" Jennie groaned, obviously enjoying the feel of his rock hard cock inside of her. \"I want to feel your cum fill me! Fuck my ass!\"\n\nGreg pulled out and then pushed back in with one long stroke. Jennie cried out and squeezed down hard on his cock. Greg moaned and then did it again. It wasn't long before he was slamming in and out of Jennie's big ass. It shivered and shook with every thrust.\n\n\"Play with your pussy,\" Greg demanded a few moments later.\n\n\"I can't do that!\" Jennie cried, more in surprise than actual denial.\n\n\"Sure you can,\" he argued. \"Think about how good it will feel!\"\n\n\"No!\" Jennie said, but Greg could tell she was fighting against herself.\n\n\"Do it!\" he demanded. \n\nJennie hesitated a moment longer before slipping her hand under herself. Greg could feel her tense momentarily in discomfort until her fingers found her clit. After that, she forgot her embarrassment and started moaning. Greg kept riding her ass.\n\n\"It feels so good!\" she gasped a few minutes later.\n\n\"I bet your fingers are soaked now?\" Greg asked in a lust filled voice.\n\n\"Oh yeah!\" Jennie groaned. \"Wet, hot and more than a little sticky.\" \n\nShe pulled her hand out from beneath her and brought her fingers to her mouth. She twisted slightly so that Greg could watch as she took first one and then the other finger into her mouth.\n\n\"Again!\" Greg demanded, slamming her ass hard. \"Do it again!\"\n\nJennie smiled lustfully and reached under herself again. This time when her hand came back out from underneath, she held her fingers up toward Greg. He leaned forward and took them into his mouth. Jennie could feel Greg's cock stiffen even more. She pulled her fingers free and reached under herself for the third time. She held them up afterward and offered them to her husband again.\n\n\"No!\" he gasped. \"It's your turn!\"\n\nJennie met her husband's gaze and smiled wantonly as she tasted herself again. Greg couldn't stand anymore! He leaned forward and kissed his wife passionately. Greg could taste her juices on her lips. He started pounding into Jennie as hard as he could. He knew her hand was once more at her clit, but this time she didn't pull it back out. \n\nGreg damn near lifted her off the bed with his last thrust as his orgasm hit a few moments later. He filled her ass with his hot cum. Jennie's juices literally sprayed out of her as she joined him. It covered her fingers and the sheets.\n\nThe two lay totally spent for quite a while afterward. It took all of Greg's strength to roll off of his wife. He watched with a smile as Jennie rolled over onto her back and brought her sticky fingers to her mouth. He leaned over her and kissed first her fingers and then her mouth. They shared the taste of Jennie release.",
        "\"So, I take it you'd be willing to give me your ass again?\" Greg asked.\n\n\"Every once in a while,\" Jennie replied. \"It felt good, but I can already tell I'm going to be sore.\"\n\n\"Well then, we'll just have to try something else tomorrow,\" he grinned, thinking about Rosa.\n\n\"We'll talk tomorrow,\" Jennie said, still not willing to commit.\n\n\"That's fine,\" Greg agreed readily before hugging her tight and adding, \"I love you,\"\n\n\"And I love you too,\" Jennie sighed, letting herself feel the warmth of her husbands' arms around her. They fell asleep together moments later. "
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "secrets",
        "drama",
        "wife",
        "holiday",
        "vacation",
        "bikini",
        "public"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/jennies-nightmare-ch-02"
}