{
    "title": "Just For the Week Ch. 02",
    "pages": [
        "The story continues with Friday afternoon.\n\nIt's after school and Tyson is driving us to my house. I regard the impossibly tall, good-looking boy next to me. Boy... I know he's eighteen, like me, and we're high school seniors, but he looks like he could be a college senior. I look away from him. This is not good. Being with him is so easy to get used to. So comfortable. So not meant to last.\n\nIt's one thing to have a crush on someone from afar, like I've had with Connor for four years now. I don't even know Connor Mills, other than that he's straight and nothing could ever happen between us. I know and accept that. It's a harmless lusting fantasy that exists only in my mind where no one gets hurt. It's another thing altogether with Tyson. Regardless of his model-like looks and athletic physique, it's Tyson the person that I'm starting to like and that's what's so dangerous. Layne hinted at it last night in the car. I am not officially \"out\" with her and Danny, but they know me better than anyone else. \"And don't hurt each other,\" she'd said. I don't think he'd ever hurt me intentionally, but I predict a big hurt coming.\n\n~~\n\nI tell Tyson, \"Help yourself to a drink in the fridge.\" I dash up to my room and quickly change into a pair of jeans and a solid black t-shirt. I find Tyson at the kitchen table with a bottle of water. I smile and say, \"You could have taken anything you wanted.\"\n\nHe grins back, \"Your 'juice lecture' is still burned in my mind.\" He looks me up and down, \"Hey, you changed.\"\n\n\"Yeah. It's your turn to be stuck in the uniform.\" Grabbing my own water, I say, \"Follow me.\"\n\nAs we head down the basement stairs Tyson says, \"I was surprised to see juices and sodas in your fridge. This is your house, right?\"\n\nI chuckle, \"Yeah, but just like with my friends, my lectures fall on deaf ears with my family too. So, not only am I the clumsy, awkward one, I'm also the freak who won't eat normal food.\"\n\nHe says, in a singsong tone, \"You're not a freak. You're eccentric.\"\n\n\"Thanks, I think.\"\n\nOur basement is finished and there's a ping pong table in the middle of the main room. Tyson's eyes light up and he asks, \"Do you play?\"\n\nI say, \"A little. You know I'm the least athletic of the Pearsons.\" I take a swig of water, \"Including my cat.\"\n\nHe laughs, \"Cats are surprisingly spry. How about a game?\"\n\n\"Sure. Do you want to warm up first?\" I hand him a paddle and bounce him a ball.\n\nHe hits it back and says, \"Let's just volley for the serve.\" We hit it back and forth a few times and then he spikes it past me. He says, \"I serve first.\"\n\nHe has a good serve. Low, fast and some back spin, but I counter that with a topspin backhand that lands perfectly on the white line. Tyson scrambles and comes nowhere close to it. \"Point. Zero serving one,\" I say.\n\n\"Wow Pearson. Was that a lucky shot or do you have some skills here?\"\n\n\"Serve and find out.\"\n\nHe serves again, this time faster and to my forehand side. I return it easily with backspin and it bounces a second time before he reaches it. I announce my second point and he says, \"Hold up a sec.\" He shrugs out of his school blazer, removes his tie and drops them both on a nearby chair. He unbuttons and cuffs his shirt sleeves, stretches his arms and rolls his neck to loosen up. I just watch him, amused.\n\nHe waves over the ball from the backhand side aiming right but tries to sneak a forehand to the left past me. I'm ready for the trick and spike a forehand he can't react to.\n\n\"Nice try Courtland. Zero serving three.\" I'm grinning from ear to ear.\n\nHe points his paddle at me, \"I've been duped. You let me win that volley.\"\n\nI say, \"You might want to try to get a point before it's my serve.\"\n\nHe doesn't.\n\nTyson, as competitive as anyone I know, seems to be more amused than annoyed. He bounces the ball to me and says, \"Five serving zero.\"\n\nMy first serve is a topspin forehand that he never even reacts to. Next, I backhand right down the sideline and he makes contact, but the ball sails over my head. I ace him two more times and it's nine to zero. For my last serve Tyson, expecting more high velocity, stands far back. I drop in a slow, shallow backspin shot. His eyes widen and he races forward to reach it. He comes up way short, but not before impaling himself on the table. I laugh, \"Are you okay?\"\n\nHe looks at me, smiling. \"The only bruise is to my ego.\"\n\nI'm laughing so hard I literally collapse to the floor. When I finally recover enough to stand, I grin at him, \"Last chance to avoid a shutout.\"\n\nHe serves the ball and I return it gently. He winds up for another spike but he aims too low. It hits the net and bounds back to him. Game over. He sets his paddle down on the table and stares at me. I am enjoying this immensely. Without warning, Tyson pulls out his phone and takes my picture.\n\n\"Dude, What the fuck?\" That's not the first time he's taken a surprise picture of me.\n\n\"Sorry. You look so happy and confident. Inspiring, really.\"\n\nDrops of perspiration bead on his forehead.\n\nI say, \"As much fun as it was to beat The Great Tyson Courtland, ping pong is just a game.\"\n\nHe hooks an arm around my shoulder. \"Do you see me sweating? This is real.\"\n\n\"It's like bowling, darts or shooting pool. These are games, not sports. I'm not gonna win any scholarships for ping pong domination. Beating you in a game doesn't make me a great athlete.\"\n\nHe says, \"Come on. That was impressive.\"\n\nI blush a little bit. \"Can I give you a tip? You're playing too big, like it's tennis. You wind up for these big arm swings and it just slows you down. Ping pong is all about reflexes and wrist flicks. Take my advice and you'll do much better against your next opponent. Assuming your next opponent isn't me of course.\" I grin at him and he playfully shoves me away.\n\nI say, \"Follow me.\" I lead him to the far end of the basement. I open the door and reveal the music room. There's a piano among other instruments.\n\nTyson's eyes widen. \"Cool. Is this all for you?\"\n\n\"I can't say that my parents don't support the interests of all of their kids. My brothers have all the sports equipment known to man and, as you can see, they've been good to me too.\"\n\nHe looks around the room. \"Play something.\"\n\nSo, I play. After a couple of piano ballads, Tyson challenges me, \"Sing An Innocent Man.\"\n\nIt's a beautiful song with a stunning vocal ranging low and high. Really high. I say, \"Okay. But the piano part can't carry the song. The bass is really the driving force. You're gonna play the bass part.\"\n\nHis eyes bulge, \"You know I don't play anything.\"\n\n\"You're about to learn.\" I pick up the bass guitar, plug it into the amp and show him a simple five note sequence: bum-bum...bum-ba-bum. I hand him the bass and he slides the strap over his shoulder. He's grinning like a kid in a candy store but he has a little trouble getting his finger placement right on the frets. I move behind him and he lets me guide him. Tyson is a good 6\" taller than me and his muscular frame is far broader than mine. I have to practically press my chest into his back for my hands to reach his. I realize that I'm pretty much hugging him and suddenly it's more intimate than I had planned. He's all taught skin over muscles and bones. His warmth is nice but I rip myself away and move back to the piano, more than a little flushed. \"See, you've got it now. Five simple notes, play and repeat.\"\n\nHe looks at me, \"I know it's more complicated than this one line over and over.\"\n\nI say, \"Okay, yes. Technically it is but that will give us the gist of it. Trust me. That's all we'll need.\"\n\nSo, we play An Innocent Man. I sing and play piano while he repeats the basic five-note bass line. Tyson gets looser and more fluid as the song progresses. It's pretty cool playing with him and not just for him. When it's over, he's beaming and it's contagious. I whip out my phone and take his picture in revenge.\n\nAfter a few songs on the guitar, it's approaching 5:00 and I want to get out before Mom gets home. It's fine for me to have friends over, even with no one else home, but I don't want to have to explain who this friend is. Not today. Not yet. I suggest, \"Let's bounce, like all the ping pong balls you whiffed at.\"\n\nNot sure if I went too far, I'm glad when he laughs, \"You dare use my own word against me?\" He checks his phone. \"Oh, yeah. We need dinner before the show.\" He frowns at the tiny screen. \"Gimme a sec, my mom texted.\" He taps, waits, reads, taps, waits and darkens his screen. He seems...troubled, but I don't ask. He'll tell me when he's ready.\n\nI say, \"Where do you want to eat?\"\n\nHe smiles, \"I have an idea. Do you trust me?\"\n\nI'm starting to.\n\n~~\n\nTyson takes me to a rotary sushi restaurant. He explains on the way that we won't be ordering anything. We'll sit at a table and a conveyor belt will carry plates of sushi right alongside us. We just grab what we want. I try to read his expression because I kind of think he must be kidding.\n\nI tell him, \"Sushi is not my family's milieu. I'm a sushi virgin,\" and he laughs.\n\n\"I'll take care of you.\"\n\nI wonder if we're talking about just dinner.\n\nWe get seated at the last open table. I had had a hard time imagining it, but it's just like Tyson described. No kidding, a conveyor belt runs right next to us and it's filled with interesting, intimidating looking things. I love seafood, but raw seafood is new to me. He says, \"Grab what looks good to you, otherwise, I'll pick some things out for us.\" He eyes what's headed our way and immediately grabs four different colored plates. I follow his lead and set up some soy sauce for dipping as well as small mounds of wasabi and pickled ginger. He explains to me that the pickled ginger is meant to be eaten in between as a palate cleanser. He also warns me that wasabi can pack a punch and a little goes a long way.\n\nHe takes two pieces from a roll with a pair of chopsticks, puts them on his plate and pushes the other two toward me. I can see salmon, avocado, cucumber, rice and maybe even a piece of asparagus. There's a drizzle of a sauce across the top. He says, \"Like this.\" He uses a chopstick to dab a small amount of wasabi on his first piece, then he dips just the bottom edge into his pool of soy sauce saying, \"You just want a touch of saltiness,\" and he pops the whole thing in his mouth.\n\nNervously, I attempt to imitate his actions. I'm clumsy with the chopsticks and Tyson watches me, amused. He tells me to hold the chopsticks like I'm holding a pencil, but I think he's punking me because that doesn't help at all. Rescuing me from humiliation, he points out that there's no shame in using a fork. Especially for a \"sushi virgin\". I eventually get the first piece in my mouth and it's like a flavor explosion. My eyes widen. It's so good. Tyson seems to be enjoying the show more than actually eating his own food. We eventually fall into a routine. Once I have the process down, we begin to talk.\n\nI say, \"I'm going to ask you a personal question, but you don't have to answer if you don't want to.\"\n\nHe says, \"Go for it.\"\n\n\"Why haven't you dated anyone since Stacey? I know it's only been a few weeks, but prom is coming up and everyone expected you to ask someone. Well...someone else.\"\n\nHe ponders the question a bit before replying. \"I can only answer that by first explaining why Stacey and I broke up.\"\n\n\"I knew I was getting too personal, I'm sorry. Just forget I asked.\"\n\nHe says, \"No, it's okay.\" He stabs a piece of a Dragon Roll with a chopstick, \"We went out for a year but I only ever asked her because I thought that was what was expected of me. It was towards the end of junior year and I'd never had a girlfriend. Being me comes with certain expectations. I guess I was feeling the peer pressure so I did what I thought people wanted.\" He pops the Dragon Roll in his mouth and continues, \"It was how it was supposed to be, the popular athletic boy dating the popular athletic girl. But it didn't feel right. I didn't feel a connection. If I'm honest with myself, I don't think I even ever liked her. She's not a nice person. I was never happy with her. When I started going through some stuff, you know, real stuff, she wasn't there for me.\"\n\nHe sips his water and eats a small piece of ginger. \"Then she started hinting at taking our relationship to the next level. Physically. I just realized one day that she was not the person I was supposed to be with. I wouldn't let my first time be with someone I didn't actually care about. I know everyone thinks that she dumped me. The truth is that was a parting gift that I gave to her. I broke up with her and let her tell people it was the other way around.\"\n\nHe grabs another purple plate off the conveyor and notices me eying him. He blushes and says, \"Yes, I'm still a virgin. And I'm not talking sushi here.\"\n\nI half laugh, half choke on something covered in bright orange fish eggs. I consider telling him I'm a virgin too, but that's kind of like telling someone that water is wet and the sky is blue. I hadn't expected him to open up like this. I'm captivated listening to him.\n\n\"So back to your original question, I guess I'm a little gun shy at this point. I don't want to make another mistake. I have no idea who I should be with. Nothing has felt right.\" He stabs at something battered in tempura. He looks down at his plate when he says, \"Except for this. Our friendship feels right. Talking to you feels right.\"\n\nWhile listening to Tyson, I had accidentally put too much wasabi on an already spicy tuna roll. I pop it in my mouth and within a few seconds my eyes begin to water and I'm under violent attack. Tyson, entertained by my predicament, says, \"I told you, a little goes a long way. It's my turn to ask you a question.\"\n\nI squeak out, \"No.\"\n\nHe cocks an eyebrow at me. \"No?\"\n\n\"I'm not done with you,\" I croak. I fumble for my water but Tyson reaches out and grabs my wrist to stop me.\n\n\"Water will only make it worse. Trust me.\" He releases his grip, \"We don't have milk, so all you can do is wait it out.\"\n\nAfter a minute, I'm okay again. As a bonus, my nasal passage has never been clearer. I sniff, \"This is our second day together now and from the moment you walked in on me playing Vienna, I feel like you've gotten to learn a lot more about me than I have about you. You'll have your chance to ask anything you want, but not right now.\"\n\nI think back to the collage he made before this all even began. \"You started out knowing more about me than I did about you and that's on me. I missed opportunities, but right now, I'm asking the questions.\"\n\n\"Oaky. Shoot.\"\n\n\"Tell me about your family and your childhood.\"\n\nHis eyes glisten. \"You know, you're the best friend I've ever had. We've been friends for of all what, twenty-seven hours? My friends don't ask me real questions. Nobody else, outside of my family, really cares. They just want me to be Fun Tyson.\"\n\nHe leans back in his side of the booth. He tells me about his parents. How they met, what they do. His mom is a speech therapist and his dad is in tech. He tells me about growing up in California, how they moved here because of his dad's job right before freshman year. He tells me about how he and his dad played one-on-one basketball on his driveway as a kid and how his dad encouraged him and instilled a love for the game.\n\nHe drops his eyes down to the table in front of him again, like he did before when he tells me, \"My parents aren't here right now. They're in New York. About two months ago my dad was diagnosed with an inoperable brain tumor and was told he only had six months to live.\" As he tells me this his lower lip quivers and his eyes well up. \"They kept seeing specialists, looking for second, third, fourth opinions and they finally found someone willing to try a new procedure. So, they had to go to New York where this trial is taking place. I'm eighteen and Miranda's almost sixteen now so they trust us to be alone for a little while. I have an aunt in Schaumburg who keeps tabs and helps out. Whenever I have to take a call or a text from my mom, it's because she's either checking in or updating me.\" He dabs at an eye with his napkin.\n\nI wipe a tear from my own eye and I take a chance. I get up and cross over to his side and slide in next to him. I take his hand in mine, discreetly under the table. \"You can talk to me any time. About anything. Call me, text me, ring my doorbell, day or night. I know I can't fix things for you, but I am a good listener and I care.\" The restaurant is buzzing with Friday night activity and nobody else is paying us any attention. I release his hand and put my arm around his broad shoulders, like he has done to me several times now.\n\nTyson looks at me. \"Sorry to be such a downer. I'm sure this isn't the answer you expected.\"\n\n\"Don't apologize. It's real. You don't have to always be Fun Tyson with me. Just be you.\"\n\nHe says, \"I don't mean to guilt you into anything. You already have your own friends - real friends - and family, performances, graduation, college to prepare for and now I've forced you into this week of unwanted attention. When this thing is over you should probably run away from me and never look back.\"\n\nI lean into him harder. \"The theme of the week was my idea, remember? You didn't force me into anything. I could have said no. It is possible to say no to The Tyson Courtland.\"\n\nHe smiles weakly.\n\n\"I decided to take this stand with you. I'm not running away, now or later. And I'm already your friend. Nothing's gonna change that.\" I give him one more squeeze and move back to my side of the booth.\n\nTrying to shake off the emotions he asks me, \"So, how was your first time?\"\n\n\"What?\"\n\nHe sees my cheeks color a crimson red and laughs, \"The sushi. Now that your cherry has been popped.\"\n\nOh, right. The sushi. Whew. \"It was great. I've been missing out all this time.\" I really have.\n\n~~\n\nAfter the play, we all pile into Tyson's car for the short ride to the frozen yogurt place. I allow myself a small sugar-free chocolate topped with fresh strawberries. Everyone else has larger cups filled with sugary twists topped with copious amounts of candies and cookies. I am, once again, the butt of the joke. It doesn't bother me though. I know they love me.\n\nWe chat comfortably for a while as we eat our desserts. I am amazed by how easily Tyson fits right in, talking with my friends like he's been tight in our group for years. With a big smile on his face, Tyson tells the story of getting me to eat sushi for the first time. He has Danny and Layne laughing as he exaggerates my awkwardness with the chopsticks and my wasabi mishap. I can't help but laugh too. And honestly, he's not exaggerating that much.\n\nDanny asks, \"Jack, have you decided if you're gonna say something before your song Monday night?\" I had texted Danny confidentially about this.\n\nTyson sits up straighter, \"What do you mean?\"\n\nDanny explains, \"Mrs. Jensen is giving him the opportunity to address the audience before he performs. You know, introduce the song, tell everyone why he chose it, what it means to him and say something to the graduating seniors.\" He talks about me like I'm not sitting right here. \"He told her that public speaking isn't his thing and he probably won't do it, but she said that she'd leave the free-standing mic at center stage, just in case he changes his mind.\"\n\nTyson says, \"Oh, Pearson, you are totally going to say something. You're not gonna miss this chance.\"\n\n\"Good luck convincing him.\" Danny stirs his sugary concoction, \"Our man Jack here prefers to be in a supporting role, not front and center.\"\n\nLayne says, \"I don't know Daniel. You haven't been around much lately. You're in the presence of a new Jackson Pearson. He takes a stand and holds his ground.\" She takes a bite of fro-yo covered in Oreo crumbles and one gummy bear -- head in, ass out. \"The class president here has two days to convince him. My money's on Tyson.\"",
        "I won't though. The performance is enough. If I walk up to that mic stand, I'll trip, it will give a feedback screech, or my fly will be open...something will happen. I'll make a fool of myself and everyone will laugh. I say, \"Look, Troy is the valedictorian, not me. He'll be making a speech soon enough. I'm just singing a song. The lyric speaks for itself.\"\n\n~~\n\nAfter dropping off Danny and Layne, I ask Tyson. \"What college are you going to?\"\n\n\"We're still on me, huh?\" He takes in a breath and explains that he has applied to and been accepted at several. He has basketball scholarship offers to consider. He should have chosen a month ago, but everything with his dad... He says, \"The good news is they all want me so badly they're willing to give me the time I need and hold a place for me.\"\n\n\"How do you feel about basketball? I mean, I know you're like the best basketball player in the universe. That's not what I'm asking. Is it your passion?\"\n\n\"I think so? I mean, it's supposed to be, right? I know I'm good at it. And I do like it. If I'm honest though, I don't know that it's my passion.\"\n\nIt feels like there's something he's not saying, but I don't push it. It's been a long, emotional day for both of us. Breakfast at Donna's feels like days ago. After everything that happened since then, I'm drained. I try to stifle a yawn but can't. I stretch in my seat and when I do, my t-shirt rises a little and Tyson pokes my stomach. I jump, \"Hey!\"\n\n\"Sorry. I couldn't resist.\" He pulls out of the parking lot and we head to my house. As he drives, he explains to me that he has to be a bad boyfriend tomorrow. It's the final road game of the season and the team bus leaves at 2:00 and he won't get home until around 10:00. He says, \"I can text you then if it's not too late.\"\n\n\"Text me any time.\" I'm a little bummed that I won't be seeing him in person.\n\nAs we pull up to my house, Tyson asks, \"Are you going for a run tomorrow?\"\n\n\"Yeah, why?\"\n\n\"I have something I have to do first thing but I'll pick you up around 10:00. We can run together and then hang a little before I have to head to the school.\"\n\nI take what I can get.\n\nTwo days down, eight to go.\n\n~~\n\nFor the second morning in a row, I wake up and realize that I did not have a fantasy dream.\n\nTyson didn't say what he had to do this morning and I didn't ask. I've never been in a relationship before, real or pretend. I haven't yet learned how to navigate between caring interest and nosey intrusion.\n\nHe's in running clothes similar to me, and wearing a Sox hat, but backwards. He should be breaking several laws looking this cute. I say, \"Hold on a second,\" and I spin my own cap around backwards to mirror his. I smile at him and say, \"Now I'm ready.\"\n\nTyson grins, \"Making fun of me is a bold move, Pearson.\"\n\n\"Sorry. I just thought there was a rule that you had to be under the age of ten to wear your hat backwards.\" I nudge his arm.\n\nAs we pull away, he says, \"Well, fortunately you could pass for ten.\" He nudges me back.\n\n~~\n\nAfter a good run, we walk back to his car and he pops the back. Not surprisingly, his trunk is full of sports equipment. There's a basketball of course, but also bats, mitts, baseballs, a soccer ball, a football, giant rollerblades, an extra pair of equally gigantic sneakers and even a Frisbee. We grab our bags and Tyson peels his sweaty shirt off, standing right there in front of me. I try not to look, but there he is in all his lean, muscular, shirtless glory. His body glistens in sweat and he looks like an Adonis. Suddenly, I have a swelling bulge in my shorts. He takes a towel and looks at me, frozen like a statue. \"What's wrong?\"\n\nI explain to him that I usually don't sweat this much and I failed to bring a towel. He tosses me an extra one from his bag. He has come much more prepared than I have. He has washcloths, water, towels, wipes. He lets me use whatever I need. With my shirt off I angle my body away from him in shyness.\n\nHe hands me a bottle of cold water from a small cooler and takes one for himself, cracks it open and takes a long pull. I drink too and we lean against the car. I go to stuff the towel I used in my bag and tell him, \"I'll wash this.\"\n\nHe grabs it from me and tosses it in the trunk with his. \"It's just a little sweat.\"\n\n\"So where are we going now?\"\n\nHe winks at me.\n\n~~\n\nHe drives for just a couple short blocks and pulls into the parking lot of Dotty's Donuts. It's a new donut shop that opened this past year. Word is, they have the best donuts. Shockingly, I haven't tried them myself.\n\nI regard Tyson. He says, \"Life's too short to deny yourself every day. After that great run we earned a reward. Obviously, I'm not going to shove a donut down your throat, but as your boyfriend for the week, I'm hoping to get you to break your rules a few times. Just live and enjoy the moment. I know it's weird to say that in front of a donut shop, but if you've ever tried these donuts, you'd understand. They're that fucking good.\"\n\nI laugh.\n\n\"Besides, seeing you enjoy a big sugary treat like a goofy kid would make my day.\"\n\nI ask, \"How's your dad doing? Any news from your mom?\"\n\n\"Mom called this morning. There's no change. He's scheduled for surgery on Thursday.\" He breaks eye contact and adds, \"Mom was worried about me, you know, having to be strong for Miranda but still being a scared kid myself. I was able to tell her that I have a new friend, someone who I can really talk to. Mom can always tell when I'm placating her, but today she heard the truth in my voice. It's hard on her; worried about Dad over there and her kids over here. Even with our aunt close by, it's tough. Thanks to you, I was able to ease that worry just a little bit today.\"\n\nI unbuckle my seatbelt. \"What the hell... Let's have a donut.\"\n\nTyson's smile comes back.\n\n~~\n\nWe open the door to Dotty's and the scent of the sugary sweet creations hits me like a fist in the face. Tyson asks what I want. There is an enormous Boston Cream in the display case that's calling to me. I pick that one. Tyson orders two donuts for himself and asks what my second one will be.\n\nI say, \"There's no way. One is all I could handle. I'm not used to a high dose of sugar like this and I could go into sugar shock,\" I don't know if that's a real thing, but it makes Tyson laugh.\n\nWe take a seat at a table and contemplate the treats in front of us. I've had plenty of donuts in my life, before I turned weird. I pick this one up and it is the biggest, heaviest, fullest donut I've ever felt. I take my first bite and my eyes involuntarily close as I softly moan in ecstasy. It's so good I'm not even embarrassed. The thick layer of chocolate, the rich custardy cream filling... When I open my eyes, Tyson is staring at me with the biggest grin. \"That's what I wanted to see.\"\n\nI pace myself and take it very slowly.\n\nTyson, making his way through two donuts, says, \"Tell me again about your diet? I mean come on; I just saw you with your shirt off. You're in great shape. You run. You're lean and healthy. What's this about?\"\n\nI had tried to hide my body from him while toweling off and changing my shirt. That's not so easy to do standing there in an open parking lot. I say, \"Most 10-year-olds are lean and healthy.\"\n\nTyson grins, \"It's your baby face that looks like a kid. Okay, obviously I was exaggerating. You said I was dressing like 10-year-old, so I said you looked like one. But with your shirt off... Let's just say you're back up to 18 again.\"\n\nI blush, \"My diet is not a body image thing. It's a long-term health thing. Heart health, blood health, brain health. 20 years from now, I don't want to regret the decisions I make today.\"\n\nHe says, \"You're 18. You are not supposed to be thinking about 20 years from now. You're supposed to be living life and loving it.\" He takes another bite. \"Brain health? Explain.\"\n\n\"Gluten attacks your brain. It affects sharpness, clarity and memory. In the long term, it can cause dementia and even Alzheimer's disease. You should watch the documentary I saw.\"\n\n\"No, I shouldn't. And, again, no one who's 18 should.\" We each take another bite. \"All kidding aside, I respect what you're doing, but you can afford to allow yourself the occasional pleasure. If I can bring that to you once in a while, I will have succeeded in my mission.\"\n\nI reply, \"Fair enough, but I could have a slight influence on you too.\"\n\n\"You already have. I had salad for lunch yesterday! And water with dinner last night.\" He only has half of his second donut left. \"I probably shouldn't tell you this but if you weren't here right now, I would totally have had at least 3 donuts.\"\n\nI shake my head, but I'm laughing. I say, \"I'm on a sugar high right now, but in an hour I'll probably crash hard.\" I take my last bite. \"It's been a long time since my last cheat.\" I look into his lake-blue eyes and say, \"This was absofuckinglutely worth it.\" Tyson busts a gut and I'm wishing this wasn't our only time together today.\n\n\"Let's bounce.\"\n\n~~\n\nAfter a shower, I pick up my music journal and flop on my bed. I open my journal and wait for inspiration to strike. I jot a few phrases down and find that I don't immediately hate them. I think about heading down to the music room, but my sugar high is fading and my eyes droop closed.\n\n~~\n\nI wake up from my nap with an idea. I ask Mom if I could borrow her car. I'm a good kid, a straight A student, rarely in trouble and my parents trust me so it's an easy yes. Despite the trust level, Mom is still Mom and she wants to know where I'm going, who I'll be with and what time I'll be home.\n\nI answer all of her questions and assure her I'll definitely make my midnight weekend curfew.\n\n\"Okay. Be safe. Call if anything happens. Make sure your phone is fully charged.\"\n\n~~\n\nWith Dad at work, Mom's car is my only option. It's an 8-year-old Honda Odyssey minivan. Not the coolest car in town, but it's what I've got.\n\nI realize that I might not even get to see Tyson at all. Of course, I'll see him playing on the court, but up close and in person? I don't know. The cards will fall where they will. No matter what happens tonight, this is way better than sitting in my room feeling sorry for myself.\n\nMy seat is at center court about eight rows back on the home team's side. I have a good view across the floor of the Chandler bench. The five starters have removed their warmup layers and they're stretching in their uniforms. There's no way Tyson will notice me on his own. He's not expecting me and they are the visiting team.\n\nThat asshole, Kevin Johnson, is not on the floor. He's the team's starting center. The starting lineups are announced and Tyson, usually playing the 'four', is announced as the center. Connor, usually the 'three', is bumped up to power forward and Ricky, Hannah Vaugh's boyfriend who usually warms the bench all game, has moved into the starting line up as the small forward.\n\nThe game starts and Tyson wins the tip, but they don't have their usual spark of energy. Maybe it's because a few of the guys are playing out their normal positions. That can't be it for Tyson. He could play any of the five positions on the floor, including point-guard, and be the best player out there.\n\nBy the end of the first quarter, Chandler is down 22 to 8. In the second quarter, they tighten up a little and by halftime the deficit is trimmed to 10 with a score of 40 to 30. I take advantage of halftime to visit the men's room. On my way back to my seat, my phone vibrates in my pocket. I look and it's a text from Tyson. He writes: \"This game sucks. I really need to talk. I wish I was with you now.\"\n\nI type back: \"Is your dad okay? Are you okay?\"\n\nHe replies: \"Nothing like that. It's team drama. We have to get back out there. I'll text you from the bus after the game.\"\n\nI'm back in my seat now. I take a chance and send one more text: \"Look behind the home team's bench, center court, about eight rows back.\" I don't see any dots and I'm not sure if he saw my message before putting his phone in his locker and heading back out to the floor.\n\nOnce again, the five starters rip off their warm-ups and stretch. Tyson twists his torso back and forth and I see him look across to the stands on my side. He scans, working his way up row by row and he spots me. Even from this distance, I can see the wide smile materialize on his face. I offer him a small wave and he nods in return. I can instantly see a change in his demeanor and energy. He holds his head and his shoulders higher. Suddenly the air in the building feels different. He gathers his teammates into a huddle and barks what I can only imagine are words of inspiration.\n\nThe third quarter starts and Tyson's energy is immediately contagious with the rest of his team. He demonstrates why he's the captain. Unlike the first half, Chandler is blocking shots, forcing turnovers, winning battles for rebounds and scoring on most of their possessions. Tyson is adept at bringing the best out in his teammates. He's unselfish with the ball, and as a result, racking up the assists. When Tyson takes the shot himself, he's much faster and more agile than his opposing center. The guy can't guard him. Tyson eludes him repeatedly, posts him up and sinks fade away after fade away. By the end of the third quarter, they're only down by two points.\n\nHere I am, watching this game and my secret crush of four years, Connor Mills, is running back and forth and up and down the court right in front of me. Just a few short days ago I would have been blind to all of the other nine bodies on the floor, but tonight, I only see Tyson Courtland.\n\nIn the end it's not even close. Chandler wins 78 to 72. Tyson finished with a triple double, 30 points, 18 rebounds, 11 assists. He also had 5 steals and 6 blocks for good measure. The way they dominated the second half, it feels like a blowout. They're all high fiving and celebrating like they just won the championship. I can't stop smiling from the vantage point of my seat. The team eventually vacates the floor and I head out of the gym and into the hallway.\n\nIt doesn't take long before my phone buzzes: \"Hey, can you wait for me?\"\n\nMe: \"I'll hang outside the main entrance.\"\n\nTyson: \"Gimme twenty minutes.\"\n\nI use the time editing a few of the videos I took. I'm still looking down at my phone when a shadow envelops me. Tyson. His hair is still wet from the showers and he's grinning like a fool. He spreads his arms and wraps me in a hug. I wasn't expecting it and I don't quite get my arms around him as I try to not drop my phone.\n\nTyson releases me and says, \"I can't believe you're here.\"\n\n\"Well, I was sitting at home, bored, and I realized, someone gave me some great advice this morning and I should take it. It was something about living in the moment or enjoying life as it comes. I can't remember exactly, but it was surprisingly good advice. So, I took a leap and here I am.\" I offer a grin of my own.\n\n\"Surprisingly good advice? Really? Sounds like you're talking about an incredibly wise person.\" He smiles back, \"No one ever shows up at my away games. Not even my parents, you know, before... Anyway, Not Stacey, none of my friends... Even at my home games my friends don't actually pay attention to the game. It's just a social gathering to them.\"\n\n\"Well, I watched the game. You were amazing. My favorite players are the ones that play on both sides of the ball. Like Scottie Pippen did. You do that. It's easy to fall for the high scorers but it pisses me off when they don't play defense. It's just lazy. Your 30-point triple double was awesome, but your hustle stats: the rebounds, assists, blocks and steals were the best part. My favorite play of the game was the one when you held your ground in the post, poked the ball away and led a fast break that ended in a Tyson Courtland dunk. You know what, hold up a second.\" I tap at my phone and send him that very video.\n\n\"You really know the game. I didn't even realize I had a triple double.\" His phone dings, he takes it out and sees what I sent him. \"What's this? You took a video?\"\n\n\"Yeah, a few. I was lucky to get that play.\"\n\n\"You're why we won the game tonight. I wasn't feeling it and I played horribly. Until I saw you.\"\n\nI wave it off dismissively and ask, \"Let's bounce.\"\n\n~~\n\nI apologize for the mom-car, but Tyson doesn't mind. \"Plenty of room to stretch out my long legs and it's not the fricking bus.\"\n\nI get it. The bus sucks. We buckle our seatbelts and I turn to him. \"So that video I sent you? I was thinking you could send it to your dad. He wants you to live your life in the moment, right? Send him that video. Show him you're doing what he asked. Tell him you scored a triple double in your first start as a center.\" I start the car. \"If I were your dad, that video would raise my spirits. I would watch it over and over again. They say that a positive mindset can be almost as important as the medical treatment itself.\"\n\nHe just looks at me for a minute. \"You...\" he stops. \"No one else hardly even cares, but here you are, showing up for me, thinking about my dad, being selfless and kind.\" He turns to hide his wet blue eyes.\n\nI am not sure how to reply to that, so I don't. I start driving. Eventually we realize that neither of us has eaten since the donuts. We stop at a family restaurant that's attached to a bowling alley. Seated at our table, I notice for the first time the reddish mark that is beginning to bruise on his jaw. In the gym, I was too far away to see details. Outside the school entrance and in the car, it was too dark and shadowy. I'm now getting my first close look at him. Remembering the text he sent at halftime about team drama, I say, \"Tell me what happened.\"\n\n\"It's nothing. I took an inadvertent elbow during the game.\"\n\nI sigh, \"No you didn't. I saw every play of the game.\"\n\n\"During warm-ups I mean.\" He opens his menu. \"Let's order.\"\n\n\"Tyson, your text said something about 'team drama' and that you wanted to talk. Here I am.\"\n\nHe takes a deep breath, \"Kevin didn't play tonight.\"\n\n\"I noticed.\"\n\nTyson continues, \"Everything seemed fine at first. Kevin sat in the way back of the bus with Ricky, like always. When we got to the school, Kevin shouldered me hard and pretended it was an accident. Once we were in the locker room, the coaches weren't around. I was facing my locker, minding my own business and suddenly Kevin was there, right behind me. He says, 'Hey' and calls me a homophobic slur -- the homophobic slur.\" He sips his water. \"So, I'm just trying to ignore him, you know, taking the high road. When I don't respond he gets angrier. I turn just in time to see his fist coming at me. Well, not in time to avoid it completely,\" he angles to give me a better look at the red streak, \"but in enough time to turn with it. It was just a glancing blow. Connor and Greg stepped in between us and suddenly the coach is there. Once the coach heard what happened, he told Kevin he couldn't play. He called Kevin's parents to come pick him up.\"\n\nI think of lunch yesterday when Kevin cornered me by the tray return. \"Are you okay?\"\n\n\"He hardly got me.\"\n\n\"No. I know you're okay. Are you okay?\"\n\n\"It sucks. We've been a team for four seasons. We were never friends, but as teammates we shared a common goal, a loyalty and a trust... The team is kind of broken now. Mills and most of the guys say they're with me, but Ricky, of course, is on Team Kevin. A couple others might be too. At least Wednesday's home game is the last game of the year. No Kevin then either.\" He leans back in his chair, \"On Monday, he might get officially expelled. Hopefully he'll be gone and not our problem anymore.\"\n\nI say, \"You know, Kevin Johnson isn't the only Kevin Johnson out there. A lot of people suck.\"\n\n\"Then I guess we'll deal with them one at a time.\" He looks at me seriously, \"Mills told me on the bus about what happened at lunch yesterday. Why didn't you say anything?\"",
        "\"Because nothing happened. Connor stepped in and saved me.\"\n\n\"I won't be careless again. I'll be glued to your side from here on out.\"\n\nIt's the \"out\" part that almost makes me cry.\n\n\"If you ever find yourself face to face with him again, keep in mind that he's slow. Don't let him catch you. He's strong as a bull but he has all the grace of a bulldozer. Like me with ping pong, he winds up and delivers a long, slow, avoidable blow. But if he ever catches you, it's over.\"\n\nI nod, pick up a breadstick and drop it back in the basket. \"So...the high road, huh? You have that much self-control? You stood there and didn't say or do anything?\"\n\n\"What are you implying?\" he has a half smile.\n\n\"Oh, nothing. I've just gotten to know you some and it's hard to imagine you being as passive as you describe. Don't get me wrong, I'm glad you didn't fight back. I don't want you expelled too, but did you maybe say or do something to, oh I don't know, encourage Kevin?\"\n\n\"That fucker stepped way over the line with you yesterday, so I don't know. I might have said something quietly that only he could hear.\" Tyson leans across the table. \"You know how Kevin bulked up in muscle mass between junior and senior year?\"\n\nI nod.\n\n\"Well, the rumor is that he hit the steroids pretty hard. You know what they say one of the side effects of steroid use is, right? After he called me the f-word, I leaned in and suggested to him that he was trying to overcompensate for his, shall we say shortcomings? I knew I'd get him. All I had to do was be able to take a punch and he'd be gone.\"\n\n\"You could have really been hurt. And you shattered your team because of me.\"\n\n\"Shatter is an exaggeration. There's only one game left.\" He gives me a serious look again, \"Nobody's gonna threaten my...\" He clears his throat, \"Look, all I did was take out the trash.\"\n\nHow was he going to finish that sentence? I pick up my water glass, \"He's gone and we're not. A win for the good guys,\" we clink.\n\nHe asks me, \"Have you ever had someone important in your life? A significant other?\"\n\nHe doesn't say girlfriend. \"No, I never have.\"\n\n\"How come?\"\n\n\"I could just say that the right person hasn't come along, but I also never imagined a meaningful relationship happening in high school. I always figured that would wait for college or beyond.\"\n\n\"That's a little sad.\" He takes another bite, \"To close a door like that when you don't know what could happen. My parents started dating in high school and it worked out for them.\"\n\n\"Well, I suppose if the right person did come along, then I'd have something to think about. Keep in mind, graduation is two weeks from today.\"\n\n\"True.\" He holds my eye for an awkwardly long moment.\n\nI check my watch and it's already after 11:30.\n\nHe says, \"Let's bounce.\"\n\nThree days down and seven to go.\n\n~~\n\nI've been assigned a new lab partner. My old lab partner is just gone. Did he move away? Did he drop the class? I don't know.\n\nMy new lab partner has lighter blond hair, blue eyes rather than hazel, he's 6'4\", built like an elite athlete and he has giant feet. He's ridiculously good-looking. So good-looking, it almost hurts.\n\nBut my new lab partner doesn't play games. Our experiments are taken seriously. They are conducted strictly by the book. We make good partners -- a good team. We work well together, we support each other and we genuinely like each other. He does not trap me between his legs, rip my pants off and do unspeakable things to me. I do not tie him to my bed posts and administer The Gay Test.\n\nBut that doesn't mean I don't want him. I just want him in a different way. In a real way. I want the real him. We're in my bedroom, just finished with studying for tomorrow's exam when he starts massaging my shoulders. He has big, strong hands and he knows how to dig deep, but not too deep. Goosebumps run down my arms and down my spine. We go sit side by side on my bed and he takes my hands in his. His sky-blue eyes bore into me. I move one inch closer and he closes the remaining distance between us. He palms the back of my head and our lips meet. He tastes so good. I part his lips and find his tongue with mine and he tastes even better. My hands wrap around his waist and through his clothes, I feel that he's all muscles and bones.\n\nHis kiss is magical. It has special powers. It gives me tingles and shivers that none of my erotic experiments of the past ever could. It's not dangerous or x-rated. It's real and passionate I don't even mind that neither of us is ripping the other's clothes off. That will come later. Another day. For now, we're happy to go slow. There's so much more of each other to still to explore and nothing is more worth the wait. Our tender kissing goes on for hours and the bell never rings.\n\nI wake up realizing how different that dream was. When Connor was my subject, never one single time did I ever kiss him.\n\n~~\n\nAfter the play, I walk into Tyson's family room where Miranda is sitting quietly with headphones on. She sees me carrying my guitar case and her expression immediately lights up. She says, \"I'll be right back,\" and she bolts out of the room.\n\nTyson says to me, \"Thanks for coming over for dinner tonight. She's way more mature at fifteen than I was but it's tough right now. She's gonna love this.\" He pulls me in for a quick hug.\n\n\"Hey, I'm glad to. I'll have at least as much fun as she will.\"\n\nMiranda reappears, wearing her guitar and Tyson says, \"Before I lose you two to the music, we have to decide on dinner.\"\n\nMiranda says, \"Whatever you guys want is fine with me.\"\n\nTyson looks at me, \"You're the guest.\"\n\n\"Just order pizza. I'll have a couple pieces. Stop looking at me like that! I can be flexible.\"\n\nMiranda says, \"Tyson told me about your...\" she searches for the words and settles on \"...dietary preferences. Do you do Atkins or something?\"\n\n\"Kind of. I wouldn't label it any one thing. But this week, I'm breaking the law.\" I growl like Judas Priest. Miranda doesn't get the reference, but Tyson laughs.\n\n\"I'll call it in.\"\n\nMiranda whispers, \"Pizza's perfect because it'll go with the salad he spent all morning making.\"\n\nHe made me a salad. I shake my head, smiling.\n\nWe start playing some chords together and I ask her to play a song she knows from her lessons. She plays Over the Hills and Far Away. She's pretty good.\n\nShe says to me, \"I'd really like to learn how to play along with songs I like.\"\n\nI thought it was cool, but I guess she's not much into Led Zeppelin.\n\nShe taps at her phone and a Pink song plays from a Bluetooth speaker on the table. I grab my guitar and we play her songs for an hour.\n\nMiranda tells me that she signed up for choir next year. \"It's not really my thing, but musically, it's all Chandler offers.\"\n\n\"I'm sure you can sing circles around your brother here. He's a man of many talents, but singing isn't one of them.\"\n\nTyson pretends to be hurt, \"Hey, I love singing. I'm a good singer.\"\n\nMiranda laughs, \"The fact that you think you're a good singer makes it so much worse.\"\n\nTyson shoots eye daggers at his sister. I play-punch his arm, \"Do you have any idea how annoying it is that you are so good at pretty much everything? Music is the one thing you're not all Tyson-Freaking-Courtland at. It's cute that you try and it's okay that you fail.\" I offer my most charming grin, \"Music and ping pong.\"\n\n\"Wow! You really went there?\" I know he's only acting mad. \"I am good at ping pong. You'll just never know it because you're some kind of super-human, invincible machine.\"\n\nI laugh and he gives me a shove. The doorbell rings and the pizza's here.\n\n~~\n\nTyson says, \"I want to show you something.\" He leads me upstairs and to the room at the end of the hall across from his bedroom. He opens the door and the west wall is all windows. It's almost sunset and the room glows in a soft, orangey comfort. The other walls are lined with artwork; drawings and paintings -- some completed, some in progress.\n\nI am not an artist but I'm practically breathless as I'm surrounded by Tyson's creations. I think back to the collage he made for me last week. I finally find some words, but I can only manage, \"Wow! This is amazing!\"\n\n\"You're the first person I've trusted to show this room to, outside of my family. None of my other friends have earned it. This is what I want to do. I'm showing you my heart here.\"\n\n\"These are brilliant!\"\n\nThere are two chairs in the middle of the room and we sit, knees bumping. \"From the moment I heard you playing Vienna in the choir room way back on Thursday, I knew you'd be the first person I'd welcome into this sanctum.\"\n\nHe begins his campaign, \"You need to know that your voice matters. Your speech Wednesday in student council, it was amazing.\" He stares into my eyes. \"You're smart, caring, sensitive, brave, strong and talented. Just in the past few days this whole inclusion week was your idea. You even stood up to Hannah Vaughn. Tomorrow you'll have a captive audience.\" He lightly pokes his finger into my chest, \"Tell them what's in your heart. Don't underestimate yourself or your impact. Remember, we have a bigger purpose here.\"\n\nHow can I forget...bigger purpose.\n\nI am overwhelmed by my emotions right now. His deep blue eyes are boring into me. The orangey sun has set, leaving behind a pinkish-purplish glow of light just beyond the window. His brilliant, intimate artwork is hanging all around us and he still holds my eye. I feel my pulse increasing and my face flushing. My heart rises into my throat and my eyes pool with tears. It's not even a conscious choice. I don't decide to do this, I find that I'm overtaken...almost possessed. The words involuntarily spill out.\n\n\"This whole thing is hitting a little too close to home for me.\" I take in a deep breath and look away from him. I did not plan this. It's not lost on me that this is about to be a watershed moment in my life. I blurt out, \"I'm gay.\" I let that proclamation resonate for a minute before adding, \"I'm gay and this is the first time I've said those words out loud.\"\n\nTyson never breaks eye contact, but he says nothing.\n\n\"I never planned on coming out in high school. High school, to me, was just something to survive; real life comes later. But I had to tell you though because of how we... I have to be honest. You need to know that not only am I gay, but I think I'm... Tyson, I like you.\" There. I said it. I feel like a fucking middle schooler, but I said it.\n\nI expect him to jump up out of his chair and order me out of his house. He doesn't. He does clear his throat and says, \"You mean like-like.\" It's not a question.\n\nI nod and look away. I can't hold his eye anymore. Not right now. \"We're putting on this show for everyone. The thing is, I'm not playing. I'm not acting. Not anymore. My feelings are real and you need to know.\"\n\nHe stays quiet; letting me take my time. I take in a rough, choppy breath, \"I have to slow this way down. I have to take a big step back. I need to protect myself or I'll get hurt, though honestly, it's already too late.\" Beads of sweat form on my brow, \"I'm such a fucking clich\u00e9. The closeted, invisible gay guy falls for the gorgeous, popular, straight jock. We all know how that story ends. And you did nothing wrong. You're just being who you are. But I'm falling hard for who you are.\" Tears roll down my cheeks. \"I didn't plan to, I didn't even want to and when I noticed it starting to happen, I tried so fucking hard to stop it, but it was already too late.\"\n\nI lift my shirt to wipe my eyes, \"I had to tell you. Don't you see? When we started all of this, I figured it was safe. I hardly knew you and we were playing a role. But now...\" I trail off. I swipe at another tear and sniff. \"It's not a role anymore. Not for me. When you take my hand or put your arm around my shoulder, you know that little flinch you feel from me? I don't flinch because it's awkward or uncomfortable or wrong, I flinch because your touch jolts me, it sparks me. It's wrong because it feels so right. But I know it'll never feel right to you. And it's totally unfair of me to put this on you. You've been nothing but honest and I knew what I was getting into when I agreed to all of this. I just had no idea I'd have to battle real feelings for Tyson Freaking Courtland.\" I realize that my heart is pounding harder than it's ever pounded in my life. I stand up and find that I'm dizzy. I try to steady myself. \"I need to get out of here.\"\n\nHe puts a hand on my shoulder and pushes me back into my chair. \"No, you don't. You're not going anywhere right now. We have to talk through this.\"\n\n\"I just talked more than I ever imagined talking on this subject. You can't keep me here.\" I look around like a cornered wild animal. Like I'm going to find some trap door or secret exit. I'm on the verge of full out sobbing now. \"All of the times and ways I imagined coming out, this doesn't come close to any of them. And to you? Oh my god! What have I done? I really have to get out of here.\" The sun has completely set now and the warm glow is gone. There's a dark, eerie atmosphere in the room and it's giving me a bad feeling. I need to go home, to my room, bury my face in my pillow and hide until college starts. I attempt to move past him but he blocks my way.\n\n\"You're in no condition to drive and I won't let you be alone. What you just told me doesn't change anything. Everything I've said to you, everything we've done together is real. I don't feel any differently about us, or about you.\"\n\nI sigh, \"Right. You don't feel any differently, but I do. Look, I believe you when you say that you want to be friends beyond just this week. I believe you when you say that I'm the best friend you've ever had. But for you, that's all we can ever be. And it breaks my heart.\" I'm full-on ugly crying at this point. \"Please let me go.\" I manage to get past him. On wobbly legs, I run down the hall and down the stairs.\n\nI see my guitar in the family room. Shit. I have to stop and pack it into its case. I sense Tyson behind me.\n\nHe says, \"You know, you just told me how I feel about all of this, but you never asked me. You are not leaving this house without hearing me out. I'll tackle you if I have to. Once I'm finished, if you still want to leave, I'll let you go.\"\n\nI snap my guitar case shut, but I stay where I am. He looks like he really will tackle me if I make him. \"I'm listening.\"\n\nHis eyes are red and watery too. \"Sometimes we make the mistake of giving people too much space, too much time, possibly at the expense of each other. I mean, 'coming out' is a personal, private decision. It's different for everybody. There's no right or wrong time or way to do it, as long as it's your choice. Not Hannah Vaughn's, not your friends' or family's, not even mine. If you had genuine emotions here tonight that led to this revelation, then this wasn't wrong.\" He looks down at his feet and toes at a knot in the hardwood floor. \"It's not my place, or anyone else's to ask you. That's for you to decide to tell, but while we're busy not asking each other, we could be unknowingly hurting each other.\"\n\nI lean my guitar against the coffee table. \"I don't think I understand what you're saying.\"\n\nHe inches closer to me as he continues, \"As I've gotten to know you this past week, I've come to understand that while I have a lot of friends, I don't have any real friends. Well, I mean I didn't have any real friends. This has never happened to me before. You and I are so different, but I've literally had the best week of my life. And it's not just the bigger things like you showing up at my game, taking those videos for my dad or your amazing musical talent... I've loved the silly little things just as much. I love that you kicked my ass in ping pong! I loved going for a run with you then eating a big sugary donut after. I wouldn't trade a minute of our time together for anything.\"\n\n\"What are you saying?\"\n\n\"I'm still figuring things out, so I don't know what to call it; bisexual, pansexual, gay...I don't know that it even needs a label.\"\n\n\"You? But how... When...\" I'm suddenly incapable of completing a sentence.\n\n\"I should have broken up with Stacey long ago. Really, I should have never dated her in the first place. She was not a nice person. For her sake, I planned to keep it going through prom and graduation. I figured we'd naturally drift apart over the summer, then leave for college and never have to deal with drama. But then that Hannah Vaughn shit happened. I knew you didn't need saving. I knew you'd be fine, but I also recognized it as an opportunity. I decided to step up and provide a distraction. It ended up being the best thing I could have done because, here we are.\" He scoots closer still, \"Aside from my family, you are the only person I care about. You're the only person I want to be with.\"\n\nI'm still in shock.\n\nHe reaches his hand toward me but stops himself halfway, \"Tears are an important part of coming out.\" He wipes his own eyes again, \"I just wish yours were tears of relief and joy, not pain and anguish. I'm sorry you didn't get to come out the way you wanted to, but I'm not sorry it happened.\"\n\nI'm still having trouble meeting his eyes. I stare down at the clean white socks on his impossibly humongous feet.\n\n\"Jackson Pearson, you are so not invisible. Anybody who thinks you are is irrelevant anyway.\" He lets out a breath, \"I truly went into this boyfriend stunt with only two goals. To transform the school and maybe make a new friend. I had no other expectations. I didn't know that you were gay too and even if I had, it wouldn't have changed those goals. But you know what? I've spent the last four days... Pearson, I 'like-like' you too. From the first notes of Vienna Thursday afternoon to showing you my artwork here tonight and everything in between, I've never felt so right with anyone else in my life. The embarrassing truth is that I've had a secret crush on you for two years now.\"\n\nOf everyone in the world, I Jack Pearson understand having a secret crush. I close my eyes but an image of Connor Mills does not form. I only see Tyson. I summon the strength to lock eyes again. My brain, now in self-preservation mode, is skeptical of his words but his face... His eyes... He means what he's saying. I wipe more tears with my shirt. I could wring it out at this point. \"You just exploded my brain.\"\n\nHe laughs. \"I was actually afraid my feelings were obvious, like with the promposal board. I'm not good at small and subtle.\"\n\nI laugh too. No, he's not. He is so the opposite of me. If I were to design my ideal boyfriend -- like making a Mii on Wii -- he would be nothing like Tyson Courtland, in either appearance or personality. But my design wouldn't be a real person. Tyson is as real as a person gets and suddenly, nothing has ever felt righter than how I feel right now.\n\nOur two lives are now completely different than they were just one hour ago. He takes my had and there's that electricity again.\n\nHe continues, \"I know we still have six more days of this 'thing' but I don't want it to end.\" He dabs at a wet eye with his sleeve. \"I know that over the past week I've thrown the word 'boyfriend' around a lot, but I want it to be for real. I want you to be my boyfriend before, during and beyond prom.\"\n\nI'm still stunned. I finally find my voice, \"You're right. I am guilty of assuming. Before this past week, I hardly knew you. You make me feel important. You push me and challenge me. You make me laugh and you give me confidence. You're generous, kind and talented.\" I stop talking.\n\nTyson's smile fades and he says, \"I feel a 'but' coming.\"\n\n\"But I'm not sure that any of this really changes anything.\"\n\n\"How can you say that? It changes everything!\"\n\n\"Nothing would make me happier right now than to go all-in with you, but that's short-sighted.\" I look at the beautiful young man who just opened his heart, sitting here holding my hand. I just want to melt into his strong arms.",
        "\"I want to be with you. But what happens in three months? In August, we both leave for separate schools to live separate lives. I know some high school couples make it work forever, but the odds are against it. In the best-case scenario, we both 'come out' as a couple and spend the best summer of our lives together. Over these few months, I would end up getting in deeper and deeper with you, falling for you even more than I already have, making the end of our relationship even harder than if you had let me walk out of here tonight.\" My eyes drop down to our entangled fingers. \"Leaving home for the first time and starting a new life in a new state will be hard enough without the added complication of a freshly broken heart. And believe me, whether it's in a week or in a few of months, leaving you will break my heart.\" I take in a hitched breath, \"If we walk away from each other after prom, it'll suck worse than anything has ever sucked. But at least we'll have the summer to recover and heal.\"\n\nTyson frowns, \"Just because the summer will come to an end doesn't mean we'll have to. There are ways of staying connected. So many ways. We can be at each other's fingertips no matter how far apart we are.\"\n\n\"But I want the real you, in real life. And that's what I won't be able to have.\" I inch even closer to him, \"When college starts, life will change so much. Sitting here today, we can't even begin to imagine. I have an older brother who's just about to graduate from Augustana. I've hardly seen him in four years and I know that of all of his dozens of high school friends, the only one he's still connected to is the one that went to Augustana with him. That's just what happens.\"\n\n\"But what if we didn't... What if we went...\"\n\n\"Stop. Don't say what you're about to say.\" I'm almost shaking. \"We're 18 years old. We have our whole lives ahead of us. As much as I want to be with you -- and believe me, I've never wanted anything more -- we can't plan our futures around each other.\" I can see that my words sting him. \"We're too young to limit ourselves; to not give our dreams their best chance.\"\n\n\"You overthink things. I'm not asking you to not go to Berklee. I'm not asking you to not follow your dreams. I am asking you to live and see where life takes us. We'll handle the future when it comes. Right here, right now, it's just us. And who knows? Maybe our dreams have room in them for each other.\"\n\nWow. He's an athlete, an artist and a poet. I look into those piercing blue eyes. He spreads his arms and we hug. It's a long tight embrace that lasts for a good 10 silent minutes. I feel safe and comfortable in his arms. It feels right. I want this feeling to last. I want my time with Tyson to go on -- forever. But I'm also a realist. I feel like one way or another, our relationship is timestamped.\n\nTyson kisses my forehead and ends the embrace first. He says, \"Can I make a suggestion?\"\n\nI nod.\n\n\"We've already committed to this week, through prom, right? Let's just go all in on it. Have a blast. Everyone knows we're together for this week anyway. Only you and I will know that it's not an act anymore. Saturday at midnight, the official end of prom and inclusion week, we find each other, go somewhere alone and cast our votes. Do we continue on as boyfriends, do we continue on as just regular friends, or do we end things completely with no future contact? Those are the choices. If we don't both vote the same, then we default into the friend zone.\"\n\nThere's more than one way to hurt someone. Someway, somehow, over the course of the past hour, I feel like I've transitioned from the one getting hurt to the one causing the hurt. I look up into his hopeful, blue eyes. I nod again.\n\nHe says, \"I'm going to win you over. You're never gonna want to let me go.\"\n\nThat's what I'm afraid of.\n\nFour days down and six to go.\n\n~~\n\nToday we go to my new lab partner's house. Like his height and his feet, his house is way bigger than mine. Everything is sleek and modern -- like something out of a magazine. We mount the stairs and silently slip down the hall, socked feet on the hardwood floor, not disturbing his sister. Hid bedroom is bigger than mine and so is his bed. Everything is proportional.\n\nWe both shed our blazers and ties. I look in his wide eyes. Grinning at me, he nods. I leap into his arms and we both tightly wrap our limbs around each other, like two boa constrictors. He walks us over to his bed where we topple and roll around.\n\nHe finds my mouth and we taste each other. After a good half hour of tongue wrestling, he nibbles my earlobe and I sprout goosebumps everywhere. Next, he plunges his tongue right into my ear. I wouldn't have imagined enjoying that, but wow... I am so turned on.\n\nI roll us over and now I'm on top. I pin his arms down, but we both know he's only pretending to be trapped. My new lab partner is way taller, bigger and stronger than me. He grins up at me, letting me have my fun.\n\nI kiss his nose. I kiss his forehead. I kiss each cheek. I kiss his chin dimple. Then I slide down his throat and I ravage his neck. I know he likes it. He moans and groans and I actually make him shiver.\n\nAs my erection presses into his thigh, I can feel his pressing into mine. We want each other -- there's no doubt. We will rip our clothes off and look at each other, touch each other and bring each other to physical ecstasies that we can't even imagine. But not today. We aren't just lusting for each other...we love each other. We're taking our time. We're doing this right.\n\nMy grip releases his wrists and I slide up to his hands where we lace our fingers together. I reintroduce my lips to his. Our tongues get reacquainted. I breath in his air and he breathes mine. I never want this to end.\n\n~~\n\nWe're quiet on the drive to Donna's. Too quiet. We're not the same two people we were when we were last here on Friday. We get seated in the same booth.\n\nMy eyes widen as the realization punches me in the gut, \"Oh my god.\" I bite my lower lip, \"I'm an unforgivably shitty person. I've been so self-absorbed in my own emotions that I never stopped to consider what yesterday meant to you. You came out too. Wow. I'm seriously a fucking asshole.\"\n\nHe shakes his head, \"Don't. You can't compare what you went through to me. Look, you were overcome with feelings and emotions. You almost had to come out. I got to decide to. I had the advantage of coming out to the most important person in my life after that person paved the way and made a safe space for me. You were the brave one. Brave and generous.\"\n\nI reach out and give his hand a squeeze. Tyson Courtland is...not straight...and he likes me! It hasn't even really sunk in yet. It's kind of freaking me out. I ask, \"Are there people in your life who you think might know? How will your friends and family react?\"\n\n\"I could care less about what my friends think. There is only one friend whose opinion matters to me, only one friend I care to keep in my life after graduation. Again, I'm looking at him right now.\"\n\nJulie brings my coffee and Tyson's juice, then leaves us again. \"As for my family, six months ago Miranda came out. My parents were pretty chill about it. No major dramas or anything. This was before my dad was diagnosed. I know how this is going to sound but I think it will be harder for them to accept my coming out than it was with Miranda's. My mom will ultimately be fine, but my dad? I'm his only son. He's certainly not homophobic, but in his mind I'm his straight, basketball prodigy, NBA-bound son. I get to tell him that I'm...not that. And the thing is, I'm proud to be a queer artist who loves playing basketball. I know it's not fair of me to make assumptions about what his reaction might be -- I'll ultimately have to give him the opportunity to show me -- but because of what he's now going through, health wise, I have to decide what to tell him and when. Fair or not, it's a factor.\"\n\n\"Your situation is a lot more complicated than mine.\" Julie drops off our breakfast plates. \"Your dad is still the same?\"\n\n\"Yeah, his operation is Thursday. Nothing is expected to change before then.\"\n\nI catch his eye, \"Hey, I want to apologize.\"\n\n\"What for?\" Tyson asks.\n\n\"Last night I said that the way I 'came out' was not how I imagined it would be. Like I was disappointed or whatever about how it happened. That wasn't fair of me. Thinking about it now, the sun was setting, I was surrounded by your beautiful artwork and I shared my feelings with the person I care most about. It was actually kind of perfect. I'll never forget it.\"\n\nIt must be opposite day because I make Tyson blush. He pays the bill, takes my hand and we head back out to the car.\n\nHe says, \"I appreciate that you want to pay sometimes, but you need to save your money for when you leave for college. For the rest of this week, it's all on me. This is not up for debate.\"\n\n~~\n\nAt lunch, I'm sitting next to Tyson and across from Danny. Layne has the dirt and informs us that Kevin Johnson has in fact been expelled and is banned from all remaining school activities.\n\nDanny asks me. \"Are you okay? You seem...not here.\"\n\nI look at my best friend and I'm suddenly flooded with guilt. I know he's been crazy busy with the play, but am I just using that as a convenient excuse? Of all the possibilities, in every scenario I ever imagined, Danny was always the first person I told my secret to. I finally came out and it wasn't to Danny. It was supposed to be him, then Layne, then my brothers and my parents last. No matter how busy he was, if Danny knew that I needed to talk, he would have made the time for me. That's just who he is. I look away from him in shame.\n\nLayne and Tyson are involved in their own little conversation. I almost whisper to Danny, \"We need to talk. I need some time with you and Layne tomorrow. Just the three of us.\"\n\nDanny nudges me, \"If you need me sooner, text me. I'm here.\"\n\nHe's too nice and I feel even guiltier. \"I know you are.\" I go back to eating my salad.\n\nLayne says, \"Jackson, how come you're not eying our pizzas longingly like you usually do?\"\n\nI say, \"What are you talking about?\"\n\nShe says, \"You might not even realize you're doing it, but usually while you eat your pretentious salad, the whole time you're eye-fucking our pizzas.\"\n\nTyson snorts out a laugh, and I say, \"This is so not true!\" Do I really do that?\n\nTyson says, \"Maybe it's because we had pizza for dinner last night.\"\n\nThere is a sarcastic gasp among my friends. Danny says, \"Now I'm jealous. He'll eat junk food for you but not for me?\"\n\nI grin at him across the table. \"You want me to eat junk food for you?\" I snatch a handful of fries from his tray and shove them in my mouth. They're limp and greasy and not at all worth it, but I had to make my point.\n\n\"Hey! I didn't mean steal my food.\" We're all laughing now.\n\n~~\n\nToday, Tyson comes with me to dump the trash and return the trays. I say, \"He's not here, remember?\"\n\nTyson replies, \"He's not the only hater, remember.\"\n\nGood point.\n\n~~\n\nMy solo performance is last on the program. Backstage, I take off my robe. My phone vibrates in my pocket and I sneak a peek. It's a text from Tyson. Actually, he sent a picture with just two words. It's the picture he took of me right after I shut him out in ping pong. The \"happy/confident\" photo. The two words are, \"For inspiration\". I smile at the memory and repocket my phone.\n\nMrs. Jensen finishes introducing me with some kind, flattering words that I only partly hear while I nervously wait. Why did I pick this song with such fast piano? I could have picked something slower, something simpler. But no. What if I stumble? I exhale. I've got this. I walk out onto the stage to enthusiastic applause. I intend to go straight to the piano, but my feet betray me and steer me to the microphone front and center. I look out into the crowd but it's hard to make out specifics with the spotlights shining in my face. I hadn't prepared a speech because I honestly had not planned on speaking. I surprised myself by stepping up to the microphone and now I have to say something.\n\nI clear my throat, not anticipating that it would carry over the speakers. I can hear a couple chuckles from the audience. I stave off a blush and say, \"Good evening. I'm a little nervous tonight, but hey, I didn't trip, the sound system isn't screeching feedback and, though I desperately want to check, I don't think my fly is down.\" They're actually laughing. I let out a quiet sigh of relief.\n\n\"Many of you know this week at Chandler is our school's first ever inclusion week. Inclusion week, to me, means embracing and honoring our differences, regardless of what those differences may be. Everyone counts, everyone is welcome and everyone is wanted. It's about diversity, respect and love. Inclusion week was conceived just five days ago. The song I'm performing tonight is about a relationship between two people that was at a crossroads, but I think it also applies to us as our own lives reach a crossroads of sorts. A great song transcends its time. A great song can mean different things to different people. To me, this song is about recognizing and celebrating both our differences as well as our similarities. Whether those differences involve race, class, religion, politics, sexual identity, gender identity or any other social issue that divides us, we are also all the same. As we prepare to leave the protected walls and halls of Chandler, try to find the similarities in those different from you and be kind to one another. I hope you enjoy the song: Summer, Highland Falls.\"\n\nI perform the song.\n\nAs the outro fades, before I have a chance to stand up from the bench, the crowd erupts into a standing ovation. It's so roaring and thunderous that for a moment I think it's not for me. I almost turn around to see if a celebrity walked onto the stage. While performing, I'm in the zone and in my element. Now that I've finished, my awkwardness has returned. Do I stand? Do I take a bow? Do I wave? Do I just sit here until it dies down? I stand up and some of lights shift onto the audience. I can now see that many of them are wiping their eyes. I scurry off the stage before I end up embarrassing myself.\n\n~~\n\nThe hall outside of the auditorium is packed. Kids I hardly know and some that I don't know at all are patting me on the back and congratulating me as I attempt to find my family in the crowd.\n\nTroy jumps in my path from out of nowhere. His beaming smile is contagious and he grabs me in a hug. \"You're freaking amazing.\" He releases me, \"I think I should have you rewrite my valedictory speech.\"\n\nI laugh, \"No, but if you want accompaniment, I'm your guy.\" I know it's not easy for Troy to get back to the school on a weeknight. I thank him and squeeze him in one more hug.\n\nAfter a few minutes with my family, I finally find my friends. Danny hugs me first and I can see that his eyes are red and damp. He nudges me with an elbow, \"Jack with the jokes. Since when are you funny?\"\n\nI elbow him back, \"I said something funny?\"\n\nThey all laugh again.\n\n\"It wouldn't have mattered even if my fly was down. I wore black underwear to match my pants, just in case.\" More laughing and playful shoves.\n\nLayne, releasing me from her clutches says, \"That was brave, powerful and amazing.\"\n\nMy eyes are on Tyson when I say, \"I received some last-minute inspiration.\"\n\nTyson is last in the reception line. He spreads his arms and takes me in. \"I can't even tell you right now what I'm feeling, but just know, that was better than ping pong.\"\n\nI laugh and say, \"Let's bounce.\"\n\n~~\n\nWe say goodnight to Danny and Layne outside of Baker's Square and Tyson drives me home. He says, \"So I was thinking about tomorrow.\"\n\n\"Yes...\"\n\n\"There's like twenty-four metric ass-loads of things I'd rather do than go to that fucking volleyball game. I know we're supposed to -- inclusion week and all -- but I think we could use a break. We deserve to have some real fun.\"\n\nI wasn't exactly jonesing for the volleyball game myself. I ask, \"What'd you have in mind?\"\n\nHe smiles, \"You know the Bulls play game four tomorrow night?\"\n\n\"You want to stay home and watch the game?\"\n\n\"No... I want to take you to the game.\"\n\n\"What! It's a playoff game! Can you get tickets?\"\n\n\"I already have them. My dad's company has a luxury suite. He texted me this morning saying that I should go with a friend. There's no one else I'd rather go with. What do you say?\"\n\n\"A luxury suite?\"\n\n\"Have you been in a suite before? Or to a playoff game?\"\n\n\"Just regular games in regular seats.\"\n\nTyson smiles, \"Oh, you're in for a treat! We're not talking about the sky boxes up in the nosebleeds. This is a private suite below the upper deck and right at mid-court. The view is perfect. Televisions. Dinner is served. Dessert is served. Private bathrooms. The game almost doesn't matter.\"\n\nWe both laugh. I say, \"I'm in!\" I drop my eyes to my lap. \"I hope you don't mind, but I need some alone time, a few hours, tomorrow afternoon with Danny and Layne. I feel like I owe them a serious conversation that I've put off for far too long.\"\n\nTyson nods in understanding.\n\n\"Is it okay with you if I tell them about us? If not, no worries. I can totally leave you out of it.\"\n\nHe takes in a breath, \"Burns and Staley are cool. I trust you. All three of you.\"\n\nFive days down and five to go.\n\n~~\n\nIn the two years Danny has owned his car, I've never gone more than two consecutive days without being in it. It's now been five days. We're headed to FlatTop Grill.\n\nI've spent much more time dreading this moment than actually planning for it. I haven't thought about what to say or how to say it. I find that I'm more nervous than I was last night standing in front of that microphone.\n\nDanny reads the anxiety on my face from across our table as we peck at our bowls. \"Hey, what's going on? You know you can tell us anything, right?\"\n\nToday I won't be opening with a joke. Here goes...everything. \"I hadn't planned on telling you or anyone else this until sometime after graduation. Long after graduation, if I'm honest. But circumstances have changed.\" I can already feel tears welling up, but despite that, I meet their expectant eyes and hold their gaze. \"You are two of the most important people in the world to me. I'm ashamed of myself for not telling you this long ago...years ago, really.\" I take in a broken, choppy breath. \"I'm gay.\" I let that simple declaration hang in the air as one tear spills out of my left eye.\n\nOf the two of them I've known Danny longer. He responds first -- nonverbally. He stands and opens his arms for a hug. Soon all three of us are in one big embrace. He asks, \"Were you afraid to tell us? Did we ever say or do anything that... You know how much we love you, right?\"\n\n\"No, you didn't, and yes, I do. That's why I'm ashamed. I should have confided in you.\"\n\nWe sit again and they've both inch their chairs around the table, closer to me. Flanking me. Protecting me.\n\n\"Neither of you seem particularly surprised.\"\n\n\"You picked good friends,\" Layne says. \"We're not your typical Chandler stereotype.\"\n\nDanny shrugs, \"You're still you. Jack Pearson -- best friend extraordinaire. Your sexual identity is part of you, but it doesn't define you. You just needed to tell us in your own time. And now you have.\"\n\nI did pick good friends. The best. And Danny's words just now make more tears streak down my cheeks.\n\nLayne asks, \"Is it okay to ask some questions?\"\n\nI sniff and dry my eyes with my napkin, \"Yes.\"\n\n\"When did you first know?\"\n\nDanny jumps in, \"Layne!\" Then to me, \"You don't have to-\"\n\n\"Daniel, I am just asking as a friend. Jackson is an important part of my life. I want to know what he's been through so I can better support him.\"\n\nI say, \"I don't mind.\" I ponder the question. \"When I was ten years old, I was at a two-week summer camp. In the evenings the boys' camp and the girls' camp would come together for after dinner activities. On one of the last nights a girl, Kaylyn, pulled me aside, took my hands in hers, told me she thought I was cute and before I could react, she kissed me on the lips. As much as it took me by surprise, I didn't feel anything except disappointment that Brandyn, the boy I'd been watching for two weeks, wasn't the one who thought I was cute and was holding my hands. I hadn't even realized that I was looking at Brandyn like that. That was my first inclination.\"",
        "Layne looks at me like I'm her new puppy, \"That just might be the cutest story I've ever heard.\"\n\nI feel my cheeks flush and I take another bite from my bowl.\n\nDanny asks, \"So this whole inclusion week thing and being Tyson's boyfriend... That can't be easy. Is it hard to separate what's real and what's not?\"\n\n\"I didn't think it would be. Inclusion week had been all my idea but our boyfriend thing, that was 100% conceived by him. I was as surprised as everyone else. I couldn't really say no; he put me on the spot and it was my own cause. I figured I'd have no problem not getting emotionally involved. I thought I knew who he was and that at most, he'd become a friend. Not to say he isn't almost devastatingly good looking, but I mean, come on. He's Tyson Freaking Courtland. We couldn't be more different. I thought I'd be able to easily walk away at the end of this thing.\"\n\n\"But...\" Layne prompts.\n\n\"But then I started to spend time with him. My preconceived notions of how I figured this week would go were blown to pieces. I started to really like him. The real him. And suddenly this whole thing wasn't a game anymore.\"\n\n\"So, is that why you decided to tell us today?\" Danny asks. \"You said 'circumstances have changed'.\"\n\nI sigh, \"That and the fact that two nights ago I blurted out to him that I'm gay and that I like him.\"\n\nLayne squeals in delight and drums her feet on the floor. \"Shut up! You did not do that!\"\n\n\"Oh yes I did.\"\n\nLayne is bursting, \"Oh my god! What did he say? I knew you two were good together. I could see it. I could tell. Remember when I said that way back, when was that? On Friday? What happened?\"\n\nDanny reaches behind me placing a calming hand on her shoulder, \"Okay honey, slow down. Take a breath and let him talk.\"\n\n\"I've never felt this way about anyone before-\"\n\nDanny cuts in, \"You mean since Brandyn when you were ten.\"\n\nI jab an elbow at him, but we all laugh.\n\nI resume, \"So yeah, the line between our act and my actual feelings became blurred. I'll spare you the gory details, but I freaked out on him. I was sobbing like a baby when I told him that this game we were playing wasn't a game to me anymore. I felt like my whole world was caving in and I told him that I needed to get the hell out of there, but he wouldn't let me leave. He threatened to tackle me until I heard him out.\"\n\n\"Oh my god! What did he say?\" Layne demands.\n\n\"He told me that even though he has lots of friends, he actually has no real friends. I was his first friend who wasn't there superficially. The first who genuinely cared. He went on to tell me that I was guilty of making assumptions about him. I sat there in complete shock as he told me that he was also...well, he doesn't want to label it. Let's just say that he's also somewhere on the queer spectrum and that he too had begun to, you know, 'like-like' me over the past several days.\" I don't mention that I was his secret crush. Tyson said he fine with me including him in today's \"coming out\", but that little tidbit is just for the two of us.\n\nDanny is stunned, \"Tyson Courtland is...?\" he trails off.\n\nLayne is practically jumping up and down in her chair. \"I was right! I called it!\"\n\nDanny asks, \"So what does this mean? Like long-term? This isn't just for the week anymore, right?\"\n\nMy eyes drop down to my still mostly full bowl. \"I don't know. He wants us to go all-in. He wants to be my boyfriend, forever. We're about to graduate high school, turn eighteen and go off to college. I'm having a hard time imagining forever.\"\n\nDanny says, \"You sound like you've made up your mind. How did you leave it with Tyson?\"\n\n\"Well, we're committed all week through prom. At midnight on Saturday, we'll sit down and decide between three choices. A, we follow the original deal and go our separate ways after prom. B, we decide to just be good friends. Or C, we continue on as 'boyfriends', but for real and we see what happens during the summer and beyond.\"\n\n\"C! Jackson Pearson, you pick C! You're not gonna break his heart on prom night.\" I'm glad Layne is across from me rather than next to me or she would have punched my arm by now. \"You grab onto him and don't let go. Make the right decision Jackson. You pick C.\"\n\nDanny looks at Layne, \"Wait. Which one is C?\"\n\nI laugh and Layne gives Danny the punch she probably wanted to give me.\n\n\"Ow.\" Danny asks, \"Are the four of us sitting together at the volleyball game tonight?\"\n\nI finish my last bite of my bowl, \"You two should blow off the game. Have a date night, just the two of you. You deserve it. With all the rehearsals and performances Danny has had lately, it's been a minute since you two had a real date. Alone.\"\n\nThey both eye me suspiciously.\n\n\"Okay, okay. Tyson and I aren't going. He's taking me to the United Center for tonight's Bulls game. We'll be in a luxury suite.\" I tell them about dinner service, dessert and the private bathroom.\n\nDanny's mouth drops open. \"Seriously?\"\n\nLayne side-eyes me, \"Yeah, I can see why you're confused.\"\n\nIn college she's majoring in sarcasm.\n\n\"You should totally dump his sorry ass.\"\n\n~~\n\nI'm a huge Bulls fan and tonight's game was the experience of a lifetime. We're in his car in front of my house and it's 10:35, already five minutes passed my weeknight curfew, but because of the game, I've been granted a grace period. I say, \"I hate to sound like a broken record. I know we've only been together, what, six days now? But today was the most fun I've had in a really long time. And it wasn't just the game, or that they won or even the luxury suite. We could have gone to Chuck E Cheese's and I would have had a blast if I were with you.\"\n\nHe snorts. \"For me, it was all about the game. I could have been with anyone.\"\n\n\"Hey.\" I'm about to deliver a Layne-style punch, but I'm stopped by the huge, stupid grin on his face.\n\nTyson leans towards me, takes my left hand in his right, puts his left hand behind my head and pulls me in for a kiss. My first kiss with Tyson. My first kiss with anyone...since Kaylyn at summer camp eight years ago. I'm starting to melt. I feel that kiss all the way down to my toes. My face flushes. I desperately want to stay and try more of that, but it's late and I'm due inside. We say goodnight and I practically float up my front steps.\n\nSix days down and four to go.\n\n~~\n\nIt's Wednesday and we stayed after school for our last ever student council meeting, where we learned from Ellen and Heather that ticket sales have quadrupled since last week's meeting. We have officially saved prom!\n\nIn the parking lot, Tyson says to me, out of the blue, \"You're a Cubs fan, aren't you?\"\n\nHere comes our first big fight. He wore a Sox hat all day on Saturday. \"Yes, why?\"\n\n\"Well, tomorrow's a half-day and the Cubs are playing a 1:20 game at Wrigley. I thought it would be fun to go.\"\n\n\"Aren't you a Sox fan?\"\n\n\"Diehard, yes.\"\n\n\"So then by definition, you hate the Cubs.\"\n\n\"I didn't say I'd be rooting for them.\"\n\nI laugh, \"Well, yeah, I'd love to go.\"\n\n\"Great. Two seats or four? We could invite Burns and Staley.\"\n\nI text them. \"Truth. Do you really hate the Cubs?\"\n\n\"With a passion. But I'd do it with you.\" His eyes bulge. \"I mean go to a Cubs game.\" His face flushes.\n\nI laugh as my phone dings a reply. I tell Tyson, \"They're in. Four seats it is.\"\n\nA few taps and he says, \"Done. Second row behind the third base dugout.\"\n\n\"What! That must have cost a fortune!\"\n\nHe just smiles at me. \"The money isn't important. The experience with you is everything.\"\n\n\"Wow, that was really-\"\n\n\"Sweet?\"\n\n\"-Corny. Cheesy. Lame. And maybe even plagiarized from a credit card commercial.\"\n\nHe gives me a playful shove.\n\nI look around the empty parking lot and I don't see anyone else. I close the space between us, put my hand behind his head, pull him down to my height and kiss him. It's only my second kiss ever, but this time...I'm no longer a kissing virgin. As I pull away, I say, \"I happen to like corny, cheesy and lame.\"\n\nTyson kisses me again and I say, \"You're not playing fair.\"\n\n\"What do you mean?\"\n\n\"How can I make an objective decision about our future together when you keep doing that?\"\n\n\"Who ever said life was fair?\"\n\nWe get in his car and he kisses me like 18 more times. His blond stubble has left my lips and chin red and raw. The first time he kissed me, IRL, I felt it all the way down to my toes. While that is still the case today, I'm also feeling a response in another place. Not that I spend a lot of time staring at Tyson's crotch -- not a lot anyway -- He seems to be bulging there a bit more than usual himself right now.\n\n~~\n\nWe're eating more fro-yo after another dominating performance by Tyson in another Chandler win in his last-ever high school basketball game. Tyson asks, \"Pearson, are you gonna eat like a person at the baseball game tomorrow? Hotdogs, peanuts, brats, nachos, pizza, cotton candy, soda, ice cream? At least the peanuts are healthy.\"\n\n\"Well, actually...\"\n\n\"You've got to be kidding me.\"\n\n\"As it happens, peanuts aren't nuts. They're legumes. Almonds, cashews or pistachios would be healthy, but peanuts...not so much.\"\n\nHe puts an arm around my shoulders, \"You're lucky you're cute and I kind of like you.\" Danny and Layne laugh.\n\n~~\n\nI ride home with Tyson. I say, \"You were awesome again tonight. As much as I love watching you play basketball, and I really do, maybe Friday, when we're off, we could do something a little closer to your other passion. I'd like to take you to the Art Institute.\"\n\nHe pulls in front my house, leans in close and says, \"Really? You wouldn't be bored?\"\n\n\"Not with you there. I want to see it all through your eyes. Right now, everything I know about looking at art I learned from watching Ferris Bueller's Day Off.\"\n\nHe laughs, \"Okay, let's do it.\"\n\nI can't help but smile in anticipation of what I hope is about to happen. I say, \"Just in case you couldn't tell, I was a kissing virgin before you.\"\n\n\"Liar! Staley told me about your solacious affair in summer camp.\" His grin is as wide as I've ever seen.\n\nRed creeps up my neck and suddenly I'm sweating. \"First of all, she kissed me. I had just turned ten. I was an innocent victim. Second of all, Layne is going to pay.\"\n\nHe cracks up, \"First of all, innocent victim? At the very least, you were guilty of being way too cute. Second of all, I'd like to see you try to make Staley pay.\"\n\nI laugh, \"You're right. Who am I kidding? She'd kick my ass.\"\n\nHe says, \"Hey, I'm not judging. I have no doubt she could kick my ass too.\" We unbuckle our seatbelts and angle toward each other, \"I consider them my first real times too because they were my firsts with someone I care about.\"\n\nTyson moves in. This one is long, deep and passionate. He parts my lips and his tongue finds mine. It's not as wild as in my dreams, but it's actually even better. It's real. Kissing Tyson Courtland rocks. It's my new favorite thing.\n\nSeven days down and three to go.\n\n~~\n\nBy far the best part of the day is staying to the bitter end and making my friends sing and dance along with Go Cubs Go. It's a tradition at every home win and making Tyson do this was especially satisfying. I could tell that he both hated it and loved it at the same time.\n\nRiding the L train westbound above Lake Street, I lean into Tyson and say, \"I haven't forgotten that today is Thursday. Any news on your dad?\"\n\n\"I was just texting with my mom. The operation is over. He's still in the recovery room and she hasn't seen him yet, but the doctors are hopeful.\"\n\nI take his hand and hold it tight. \"I am so glad.\" I lean my cheek on his shoulder and he leans his cheek on my head.\n\nHe says to me, \"When you meet my dad, don't tell him I went to a Cubs game. He would probably relapse in reaction to that news.\"\n\nI laugh. It's not lost on me that Tyson is hoping that I'll meet his father down the road. I punch his arm playfully. \"You had a great time and you know it.\"\n\n\"With you? Always.\"\n\nEight days down and two to go.\n\nPlease stay tuned for Part Three -- the final chapter."
    ],
    "authorname": "Str8SensitiveGuy",
    "tags": [
        "friends",
        "love",
        "coming out",
        "romance",
        "social change",
        "inclusion",
        "first time",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/just-for-the-week-ch-02"
}