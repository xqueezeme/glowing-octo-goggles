{
    "title": "My Only Talent Ch. 37",
    "pages": [
        "Chapter 37\n\nSummer: A Broad\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events\n\nSadly, there was no one even remotely resembling Elizabeth Ashcroft Knowles on the plane from DFW to LHR. Both my seat mates in coach had apparently, very apparently, had something with garlic, lots of garlic, to eat and then snored all the way over. I landed at Heathrow, and following the directions in the email from Abelard Peters HR people, I made my way through customs and the terminal where my flight had landed to the bus station, and then caught a bus to Victoria (bus) station, and then took another bus to Wingham, where there was what was mysteriously referred to as \"a house block reserved\" for contract employees like me. \n\nI \"enquired at the office\" as the email suggested, only to discover it closed. The letter gave some complicated instructions on how to get to nearby Aylesham and how convenient it was to then catch buses and trains to anywhere from there. Right! I soon learned it was a pain in the arse, as they say here. It was not difficult to get to the station, and there were lots of trains and buses, but they took at least an hour to get anywhere, even longer if you had to change lines. \n\nAs I circled the building looking for the manager, I noticed it was as old as any structure on the ESU campus. Historic, but not particularly attractive. The town reminded me a little of Colonial Williamsburg in Virginia, except it was much smaller, and everyone drove on the wrong side of the street, so all the traffic signs looked weird, too. There were plenty of trees and shrubs and hedges, and some very narrow streets in the middle of town. I guess it doesn't really matter what side you drive on if the street is only wide enough for one car. I did a circle search around the address where I presumed I was supposed to stay, and wondered how many bedrooms there were and if I was expected to share one. I also fretted about how long it might take to get to and from the tunnel embarkation point. \n\nI had circled about a four by four block area by this time, and arrived back at my departure point, pleased to find the door open, indicating that perhaps the office was too. A chubby, bearded guy in his 60's sat behind the desk. He smiled, displaying the worst looking and most yellowed teeth I had seen since my chain smoking teacher Miss Kuratko in fourth grade. \n\n\"Roberts, are you?\"\n\n\"Robbie Roberts, yes.\" I smiled weakly.\n\n'Welcome to Wingham. Here's your package.\" He handed me an odd sized envelope about three quarters of an inch thick, full of paper. \n\n\"You are in number four, around the back.\" He then turned back to magazine he was reading. If my reverse reading skills were on, it was called 'What Hi-Fi?'\n\nI realized he had already tuned me out completely. I looked in the envelope and discovered a key on a brass ring, and decided to make my way 'around back' and look, slipping on my backpack and carrying my suitcase and duffle. Number four proved to be up a narrow staircase, with a little rain awning above the door.\n\nThe key worked after a few tries, and first impressions were not good. The smell of stale cigarette smoke permeated everything. I think the walls were once white, but now they were a very light shade of urine yellow remarkably like Husky's target hydration level chart color that was assigned by the ESU football strength and conditioning coach. The place made my eyes itch. \n\nI dropped my stuff near the door and searched for windows to open. The ones I found were mostly painted shut, but I retrieved my handy dandy Swiss Army knife from my suitcase and set to work. Despite being early June, it was cool, in sharp contrast to Texas summer heat. A draft developed, and I hoped it would be able to dissipate the smell soon. I made a mental note to search for a store that sold Febreze, or whatever the English equivalent might be. \n\nI sat near the window that seemed to be functioning as an intake, and therefore upwind from the maximum odor point, and took all the stuff out of the envelope. The chair and table might euphemistically be described as 'distressed', but in the manner that makes used things cost less, not antique things cost more. The cloth lamp shade, once perhaps white linen, now matched the color of the walls. Ewww!\n\nThere was of course the inevitable and almost unreadable thick photocopy of a policy and procedures manual, both for Groupe Eurotunnel SE for the tunnel overall, and a section for contractors of Tier Group like me. According the front cover, I was now responsible for knowing the contents in toto backwards and forwards, lest my employment be terminated. There was a check on Lloyd's Bank for my first two weeks of per diem expenses, as in future I would receive per diem funds in my pay envelope. My dad had given me the short course on modern business travel, so my phone was activated and I had a separate but 'backstopped' debit card that worked in Britain and Europe. I had to remember to transfer funds to the account as required. I soon realized how spoiled I was with the ESU campus and its pervasive Wi-Fi installation that provided speedy and reliable connections in every nook and cranny, as that was certainly not the case here. My phone hadn't displayed the Wi-Fi or 4G icons since leaving the airport.\n\nGoogle maps told me there was no grocer nearby, but there were many in Canterbury. A foray into the kitchen revealed a refrigerator smaller than Kevin's dorm room unit, and sans the icemaker, so Febreze was still top of my shopping list. Further delving into the envelope produced a temporary paper ID pass with a note attached that a permanent photo ID would be generated at the required orientation session to be held the day after tomorrow at Folkestone. It might take me that long to get there using the scheduled buses!\n\nI finally found a \"Read Me First\" sheet, conveniently located at the back of the stack of stuff. It assuaged my transportation fears a bit, as apparently there was a contracted for shuttle bus service that ran several times per day between Sandwich Bay and Folkestone, stopping at several places along the route where employees were lodged. That made more sense, and should take a lot less time, even with all those stops. The last thing I found was a perfumed pink envelope addressed in a flowing hand. It looked very promising, but read: \n\n\"Robbie Roberts: We hope you enjoy your time this summer in our English countryside. Unfortunately, we will not be able have you spend time with our family as we hoped. You should read the section of the employee handbook on nepotism and fraternization, but the short story is that Abelard and I have come under much unwanted scrutiny, both by the press and the legal profession, because of some of our weekend parties and tennis matches. It seems a few couples involved in hotly contested and very unpleasant marriages and divorce actions have cited things that happened at our parties as key incidents, including two former employees who allege damage to their marriages as a result of their employment, plus improper termination. Of course, these suits have no merit whatsoever, but it will take time for them to be resolved. We are pulling into our shells, so to speak, to ride out the storm. The twins are traveling abroad, well removed from paparazzi and unwanted attention, and Abelard and I will have to keep our own counsel for the next few months. Missing you, Belinda Hatch-Peters.\"\n\nShit and double shit! My summer plans for many exciting weekends with the twins just evaporated and disappeared. Fizz, pop!\n\nMy stomach growled loudly. Time to become a hunter gatherer. Find Febreze and supper, in that order of priority. Canterbury was only about 5 miles away, and I had been cooped up in an airplane all day, so it was time for a little hike. It was too cool for running shorts, so I put on a pair of worn jeans and my jogging shoes, and long sleeve Cutter and Buck cotton knit shirt my mother had given me for my birthday. It was light charcoal grey with a very subdued burnt orange logo, and it felt great against my skin.\n\nI unpacked my suitcase and hung up my clothes in the tiny closet, and made my way outside and down the little stairs. When I got outside, I realized I had already accommodated to the awful smell in the room, and now the outside air smelled incredibly fresh and wonderful. I consulted the map on my phone, and started the trek: south on Preston Hill and then west on the A257, aka Canterbury Road. I passed a 'newsagent' which proved to be like a little convenience store, with a selection of magazines, newspapers, and a bunch of strange cigarette and vape brands, but they did not have Febreze. My UDP ambassador training kicked in, and I considered buying a copy of \"What Hi-Fi?\" to enable me to schmooze the apartment manager. Maybe on the way back. The cars facing the wrong way made me uncomfortable, even as a pedestrian. I laughed at my own joke: that really was a pedestrian concern, wasn't it?\n\nI passed the tiny Lloyd's bank branch and stopped to cash my meager per diem check. They looked at me funny when I spoke. I located a couple of pubs as I turned to the west, and then passed out of the town proper to find open fields, then more houses and hedgerows. Everything was very well kempt and green. My grandmother would be impressed. A gas station had a little store, but also no Febreze.\n\nThere were narrow shoulders to walk on, but they switched from one side of the road to another often. Then the shoulders narrowed to almost nothing for a while. It was a two-lane road with quite a bit of traffic. I passed through Littlebourne but did not see a grocery there. More open fields and some shady tree lined areas led me further west, until coming upon a golf club and hospital, and encountering other pedestrians for the first time. I was in Canterbury.\n\nThe population density increased rapidly as I walked further. Then the road wound around and ended in a traffic circle, surrounded by lots of retail shops. I walked across the circle and saw a Burger King sign. I suppose they won't have any Whataburger restaurants here. The Superdrug store had Febreze, so they first part of my quest was done! There were now lots of other shoppers on foot, and even an attractive woman sending some restrained Suzie for me. Things were looking up. My mood improved slightly.\n\nAs did the signal on my phone: solid 4G. I continued west and saw a big red and white building marked \"Kent Fire and Rescue Service\", then another traffic circle and an office building with a sign that said Baptist Church. My eyes were drawn to a big cathedral in the middle of everything and I walked toward it. It really was the center of things. A little more random walking found a Subway sandwich shop: familiar but not particularly attractive. I realized that I was now quite hungry.\n\nGoogle suggested Super Noodles, and remembering my happy experience with the Chinese food that Reggie had procured near Horse Guards on my last trip, I went with that. It was not as good as Reggie's suggestion, but the price was very reasonable, and the fare hot and filling. I felt much better. I circled back around the Cathedral to the north and east and made my way back to the A257, passing by the ruins of an old abbey on the way. \n\nThe walk back to Wingham seemed to take less time. \n\nOn the way, I pulled out my phone and called Peggy, getting her voicemail. I left a brief message that I had just arrived for the summer, as previously advertised, and wanted to get together. Maybe I could still have some fun weekends. \n\nI got back to my new abode just before complete darkness set in. The open windows may have taken the edge off the cigarette smell, but it was still awful. I deployed the Febreze hopefully and enthusiastically, conducting my own little hazmat drill. I couldn't find any more windows to open. Maybe if I wiped down the walls? I added paper towels to my shopping list. \n\nFinally, about 11 PM GMT, I went to bed trying to get on the local sleep cycle.\n\n+++++++++++++++++++\n\nDwight slept fitfully on the plane, if at all. His own built in scenario generator was running wild. Were the shooters there to kill all the techies, including him, after a mission this sensitive was accomplished? Why then did the shooters know the overall goals and importance of the mission and the techies were not briefed? Was there a lot of opposition expected, so they needed redundant techies and counter snipers to complete the mission? He was also tired, he had little sleep in California last night, and jumping ahead 8 times zones was always a little weird. They landed at Biggin Hill, and Jones directed the others to go into the FBO while Dwight stayed behind. \n\nMiss Jones furrowed her brow. \"I can see you are puzzling through why things have been set up like they have. It's because, although you will complete the mission successfully, you will die in the process.\"\n\nShe waited for Dwight to respond, and finally he did. \"Seems like it could get done without that being required.\"\n\nShe smiled. \"Oh, it could. It will. But the other techies are here to witness and testify to your demise, and the shooters are here to make it look highly believable. It is a convenient way to tie up the loose ends without further investigation and close out your career in the field to start your new one, in management, with a whole new identity.\"\n\nDwight's eyes rose in alarm.\n\nShe raised a hand, as if to say stop. \"Your new identify will include Carmencita, don't worry.\"\n\nBut he did worry, a lot. Perhaps this was a tale designed to have him remain calm until they actually shot him. More thinking was required.\n\n+++++++++++++++++++\n\nSuzanne Pliskin was being torn in half, emotionally. It was so wonderful that Mike was awake, but he was still in terrible condition, and even the most optimistic prognosis had him weak and sickly for a long time. Perhaps forever. But if she didn't support him, or even hinted that she wouldn't take him back, his fate would be depressingly sealed. His parents were overjoyed, but his mom was already getting a little possessive of him. Talking to Robbie on the phone had ripped her guts out, too. She couldn't quite figure his mood. He was probably in shock, too. He sent her an email about his departure for England, but her phone had been off so she could sleep.\n\nMike's parents would be back soon, and she would head back to Austin. What would it be like without Robbie and Nora there? How would Lara feel about Suzanne's decision to go back to Mike? She found it very hard to get back in touch with Robbie. What would she say to him?\n\n+++++++++++++++++++\n\nI woke early, local time. Very late for Texas time. I was starving, and there was nothing in the refrigerator. I put my clothes from last night back on, and Googled for breakfast, centering on something called the Farm Shop and Caf\u00e9. I walked south past the turn off to Canterbury. There were even narrower shoulders, but a little less traffic, and some serious hedgerows. I turned off to the left and then bore right and arrived at what I would describe as a combination general store, grocer, butcher shop and short order caf\u00e9. Not bad. No kippers, which I had developed a taste for on my last trip, but plenty of sausage, bacon and eggs. They also sold flowers and gardening supplies. I could survive here if need be. Not cheap, but good. I got some paper towels and another container of Febreze for good measure.\n\nI was the only customer that walked rather than drove in. Most were large families in small cars, or car pool groups in business attire, and I was guessing the area was mostly a bedroom community for people who commuted elsewhere. Next, back to the apartment to do another round of Febreze hazmat service, clean up, then try to preview the shuttle bus route that I would have to ride tomorrow. The stop was supposed to be near the post office. When it arrived, it could be described as a triple-size minivan or a half size bus, but my little paper ID card got me on for free and the driver confirmed it shuttled back and forth to Folkestone. \n\nI settled in to my seat to peruse the scenery, and a text pinged in, from Peggy! \n\nIt was not good news. \"Robbie. We can't go visit Belinda and Abelard anymore, and I'm in a serious relationship with a model I met though Jessica, who was with Alexis Quandry on the yacht with us. I have promised her I will not see other people. Hope you are well.\"\n\nWell, that takes the cake! My lovely Peggy was no longer excessively heteronormative, and once again, I was the dumpee. All my summer plans had just evaporated, sublimated, went up in smoke and transmogrified into nothingness. Shit, double shit, triple shit. \n\nI looked out the bus window in a daze. The bus went south, past my breakfast place, and on to Aylesham, were we picked up three very British looking guys in their 30's. They sat by themselves as far from me as possible. We took a little jog and the signs said we were on A260. Two more guys got on in Hawkinge, arguing about supporting Arsenal versus West Ham. Makes no difference to me.\n\nWe circled around Folkestone a bit and then three guys got off at the freight terminal and the other two at the vehicle departure area. The driver asked me where I was headed.\n\n\"Orientation, but tomorrow. Today I'm just checking things out.\"\n\n\"Oh, another yank with OCD! Well, tomorrow tell the driver that you are going to orientation, and they'll drop you at Holiday Inn Express conference room.\"\n\n\"Thanks.\" I think. \n\nHe laughed. \"For the whole experience, stay on all the way back through Wingham and then on to Sandwich Bay, then back to Wingham. Thrill a minute, that!\"\n\n\"Thanks.\" I think.\n\nI spent the rest of the 90 minutes considering my depressing situation, until the bus dropped me off near the post office again. All I could think of that was positive was finding someplace to do my wind sprints, and the road to Canterbury would not do. I would get hit by a car for sure. So, I began wandering around, looking for a field, a track, a trail, whatever. \n\nAs I walked down High Street, just north of the river, I saw a fit looking couple in rugby style jerseys and shorts turn off on a little almost unmarked lane. I followed, and soon found a little park. The sign on the open-sided shelter said it was a \"recreation ground\" and it had a soccer field, some playground stuff, and the funniest looking baseball diamond I had even seen. But, there was plenty of room for me to run on ground instead of pavement, and there was no one else in sight. \n\nI did my sprint, run, walk, sprint routine with some push-ups and sit-ups between sets for more than the normal number of reps until I was really feeling the burn. That was the best way I had found so far to root out bad or depressing feelings. After my workout, I crossed the road and went east and then south, to see other parts of the village. I wondered as I wandered, enjoying the scenery, when I saw a miniature version of the Kent Fire and Rescue station that I saw in Canterbury. \n\nOnly a one stall garage, and a little two-story plus training and/or observation tower, but nice landscaping. A fire crew was out on the drive, packing stuff into the lockers on the firetruck, rolling out and examining hoses, and washing things. They were all wearing black pants and dark navy-blue shirts. I was used to navy pants and light blue shirts in Austin. \n\nSuddenly I saw her. I first noticed that she filled out the uniform top a lot better than the others. She was tall -- at least 5 feet 10 inches. She was strong -- she was handling her end of a heavy hose just like the guys were. Then she bent deep at the knees to put it on the ground -- lifting with her legs as I'm sure she had been trained to do. What legs they were. She turned away from me, and her ass spoke to me. Muscular, strong, and generous. Very generous, and I'll wager not an ounce of cellulite -- just toned muscle and excellent smoothing tissue on top. I suddenly knew she would have no trouble passing the required tests for climbing, lifting and carrying. She was likely just as strong as any of the guys working here, and I bet she weighed at least 150 pounds. ",
        "You heard stories about wide hipped farm women of old who dropped a baby and kept working the harvest. I'm sure she could do that, but I just wanted to observe and adore her. She moved with grace and balance. I had to find a way to talk to this woman! She turned and noticed me, since I was plainly staring at her. Sparkling hazel green-brown smart girl eyes held my gaze. Light brown hair, and very fair and freckled skin. Was she offended? No! A mild Suzie signal sputtered, waned, and then came back. There was almost a sadness to it, but it was there! Make your move, Robbie!\n\nI walked toward her. It was now or never.\n\n\"Can I ask your professional opinion about something?\"\n\nShe looked bemused, but the Suzie signal steadied and a slight smile crossed her lips. Her face was symmetrical but plain. No makeup, seemingly all business and on the job during the workday. \"With regard to?\"\n\nI gulped. \"Getting the smell of old cigarette smoke out of an apartment.\"\n\nShe looked confused. \"A flat?\"\n\n\"Yes, I think they called it a housing block. I would call it an apartment. I guess most folks here would call it flat. But at any rate, the previous occupant must have been a devoted chain smoker. So, when I saw you, I figured a fire fighter would know something about how to get smoke smell out, plus I just wanted to think of something to talk to you about.\" Whoops.\n\nShe looked worried, then smiled again. Her Suzie signal increased just slightly. I was getting much more sensitive to subtle changes, as my Dad had predicted. Then she smirked. \"A yank, are you?\"\n\nI was offended. \"No, I am from Texas!\"\n\nShe frowned. \"Isn't Texas part of the United States?\"\n\n\"Yes, but we were an independent country first!\" I said emphatically. \"Strictly speaking, Texas is now part of the USA, but I was never a Yankee!\"\n\nShe giggled. I loved the sound of it. \"Another cheeky yank who thinks to educate me, eh?\" I wanted to educate her in several wonderful ways. \"Another British babe who thinks she is too hot for me, eh?\"\n\nShe looked stunned. Her Suzie burbled and grew. I guess she was not used to being considered too hot for anyone. I suspected that, like Peggy, she had taken some teasing about her ample ass, and maybe just for being the only female on the fire crew. She changed her stance a little.\n\n\"Well, strictly speaking, I am trained regarding smoke from burning building materials. Fags are different.\"\n\nNow I looked stunned. Where the hell did that come from? Surely, she didn't think I was gay? I thought I was showing frank interest in her. \n\nThe she looked very uncomfortable and covered her mouth with her hand. \"Oh, I think you misunderstood! I meant that tobacco smoke is different from the smoke from a structure fire.\"\n\nI must of have looked relieved. She smiled again. \"Well while we are speaking strictly, smoke from cigars is different than smoke from cigarettes, too. What have you done so far to get rid of it?\"\n\nI paused. \"Opened the windows and wiped things down with Febreze.\"\n\nShe looked more comfortable, as if she were on familiar ground. \"Keep the windows open and maybe even get a fan or two to speed up the turnover of the air inside the unit. Make up a dilute solution of vinegar and baking soda in water and sponge down the walls, floors, and all other surfaces. Then let the fan dry it completely. You may have to repeat that cycle. Is there carpet or upholstered furniture? \"\n\n\"All wood floors and furniture.\"\n\n\"That's fortunate. You should be able to clear the air almost completely. If you are really a stickler, you should repaint.\"\n\nI realized that the conversational ball was now in my court. \n\nI fumbled. \"Well, thanks. I'll give that all a try.\"\n\nShe looked at me, perhaps expecting me to say something else. I just looked at her. I really was off my game. Then the alarm bell on the station rang, and the speakers made some sort of distorted announcement about an \"undergrowth fire.\" They all donned some khaki and yellow coats, jumped on the fire engine, and took off. I watched dumbfounded as they sped away.\n\nI spent the next hour walking around and cursing what I didn't say, and rehearsing what I should have said. I didn't even get her name, much less her number. At least I knew where she worked. \n\nI went back to my stinky apartment (now slightly less stinky, at least) and showered, put on my slacks and blazer outfit, and walked to the Dog restaurant I had seen on my way to Canterbury. It was nice, but given my per diem budget, if I ate here regularly, I could only eat every third day or so. I ordered the only thing on the menu with chorizo in it, and it was good, if bland. They seemed to be puzzled by my accent, as I was by theirs. But we communicated just fine.\n\nI had some wild dreams anyway, as if I had eaten something very spicy. Those dreams featured a very spicy female firefighter, dressed in tight white and slightly damp tennis togs with her hair tied back in a ponytail, running around the tennis court on those powerful legs, digging and bending and ripping forehands and backhands across the net with aplomb. I realized she did look like a very fair skinned version of Serena Williams. I wanted to see what she looked like under those firefighter pants. \n\n+++++++++++++++++++\n\nThings moved fast once Dwight exited the aircraft at Biggin Hill. In a nondescript van, they drove north to 1 Millharbour, the building they had been studying, and took the elevator up to a very small studio apartment about halfway up the tower facing west. The RF environment was crazy - chock full of signals. One of the techs setup a spectrum analyzer and began building a signal list database that Dwight could refer to. Dwight started with the Wi-Fi bands that he could access from the wireless card on his laptop. \n\nThe other tech set up a directional antenna that could make it through the energy reflective film on the windows to access an open-air RF sniffer installation that had recently been dropped on the roof of the DoubleTree across the water. Once the spectrum analyzer was running, they turned their attention to the cellular phone networks.\n\n+++++++++++++++++++\n\nI showered and dressed in khakis and a cotton collared shirt, walked down to the farm store for an early breakfast, then walked back to the post office and caught the charter bus to Folkestone. \n\nThere was no one else waiting for the bus. Maybe I was the only one staying at Wingham. The Holiday Inn Express looked pretty much like all the others I had seen in Texas, and the morning orientation session was nothing remarkable. Some tired looking HR guy who had probably done this meeting a hundred times had us fill out forms, check some boxes, and sign off on a dozen policies to document that we had been advised of them. Then we queued up in front of a camera for ID cards, and were fingerprinted. We had a few minutes to wash our hands and go through a very sparse looking sandwich buffet, and then the afternoon session began.\n\nThis was a little more interesting -- a security briefing. The latest update was on a new alliance between Romanian gangs and the Sinaloa cartel designed to bring drugs from Central and South America into England. Apparently, the primary transport pathway was recruited 'mules' arriving via air, and the secondary was via the docks at Liverpool. But, police were anticipating the attempt to set up alternate routes through France and the Eurotunnel. This could entail bribery and attempts to plant gang people as employees. There were also gangs from Armenia, Turkey, and Serbia vying with the locals for control of the drug trade. The 'routine' stuff was the constant and increasingly aggressive attempts of migrants in France to somehow catch a ride, mostly on cargo lorries, through the tunnel and into the UK, with or without smuggled goods. I soon learned why my TA at ESU told me to stay away from Calais. This was followed by a very worrisome presentation on the tunnel as a tempting terror target.\n\nI thought about the Rosetta Stone language learning course that Adnan had given me. I hadn't listened to it yet, but it was beginning to look like I was going to have a lot of time on my hands this summer. Would it be a net benefit if I learned enough Arabic to be able to listen and perhaps detect something before it become a problem, or would mere possession of the course make me a suspicious person? What about Farsi, Urdu, Armenian, and Serbo-Croatian? Our orientation group then took a quick trip over and back to France in a passenger train -- less than two hours, and then were released for the day. \n\nTomorrow, we would enjoy the freight route and train yards, and then explore the maintenance access tunnels where I would spend most of my time. Something to look forward to.\n\nI caught the bus in front of the Holiday Inn, and we picked up quite a few riders from stops around the service road, then headed north. I was interested to see if anyone else got off at my stop when we got to Wingham. I used Google again to search for dinner, and found an Indian place not far from the bus drop-off point. \n\nWhile I was perusing the menu, my phone rang, from a +44 number with a ring tone that told me I did not have it in my contacts.\n\n\"Hello?\"\n\n\"Hello, Robbie, this is Tessa Formby, from the Tattler. Remember me?\"\n\nOf course, I did, but not with great fondness. As far as I knew, she was an unapologetic extortionist and gossip broker, plus she considered me too young and too white to be sexually attractive. On the other hand, she was connected to both Elizabeth Ashcroft Knowles and Ambassador Pliskin, plus she was damn good looking for forty-something, and a hell of dancer. I assumed she would be back in Austin for the GP race next November, too. \n\nI was just a little slow to respond for a driven type A personality like hers. \"I am not going to pump you for gossip, Robbie, so don't worry about that. In fact, I have some information for you, instead!\"\n\nI was interested. \"About?\" Now she was slow to respond. \"Well, let's see. First, I know you are here in the south of England, where you are staying, and why. Second, I have lots of interesting stories about Belinda Hatch Peters, Abelard Peters, and Peggy Duchenne. Interested?\"\n\nShe had me now, and she knew it. \"Yes, Tessa.\"\n\n\"That's better. I assume that by now you have gotten the message about Abelard and Belinda suspending their tennis parties, but you likely don't know the whole story as to why. But to get that story, and others, you have to meet me for dinner.\"\n\n\"I thought I wasn't your type, Tessa.\"\n\nShe cackled. \"Oh, you aren't. But it would be to my advantage to introduce you to certain people, and perhaps to your advantage also. I am mildly fond of you, you know, in a sort of big sister kind of way. You can certainly understand that I want to stay on Ambassador Pliskin's good side, too? \n\nI could. Ten days ago, I was concerned he might have me killed for hurting his daughter. He probably didn't care that she was hurting me, though. The last thing I wanted to do was tell Tessa anything about Suzanne. What was she up too?\n\nShe continued. \"How about tomorrow, Thursday, in Soho?\"\n\nI thought a minute, a map and an extended train schedule coming to mind. Soho in NYC was South of Houston Street, 'Soco' in Austin was South Congress, 'Sola' was South Lamar, but her Soho was in Westminster, just west of London proper, and the traffic would be heavy. 'I'm not sure what time I will finish work, nor how long it will take me to get there on the train.\"\n\n\"Don't worry, this crowd doesn't eat until late. I will have a car hire pick you up at your flat in lovely little Wingham at 8 PM GMT. That should give you plenty of time to get ready.\"\n\n\"What should I wear?\"\n\nShe laughed again. \"Ideally, that black leather mask and metal cock piece outfit from the Addicted to Austin party. You could make quite an entrance with that!\"\n\nI gulped. \"Sorry, didn't bring it with me.\" It was still in the closet in Lara's apartment.\n\n\"I wouldn't think so! Dark slacks and a blazer should do. A coat is required, but not a tie. Do you have boots and a string tie?\"\n\n\"Not with me. Didn't bring my new Stetson, either. Where are we going to dinner?\"\n\n\"Just a little barbecue place -- it should be right up your alley, Texas. The driver will call your mobile when they arrive outside to pick you up. TTFN!\" With that she rang off.\n\nWhen the bus dropped me back at Wingham, alone, I went to the Indian place for dinner. It was good, but bland. They need more curry powder and more of those skinny peppers they use. Most customers got take out. They seemed surprised when I sat down at a table. I was getting bored. My plan was to go back to my stinky flat and listen to the language course until it put me to sleep. Forty-five minutes later, I was just about there. \n\n+++++++++++++++++++\n\nDwight had the primary hack all worked out, but the misdirection, coverup, and secondary misdirection would have to be subtle, but ultimately discoverable. That meant getting data from the Russian Embassy, or at least, data that looked like it came from there. There was a lot of old style malware that had originated in Russia, some if it very clever. \n\nOne of his trainers said that the Russians had a whole generation of great theoretical mathematicians who had to grow up without the computers that those in the west had, and thus developed much better algebraic mental processes. They also had a whole first generation of programmers that had learned to squeeze lots of functionality into the very small memory spaces of early ICBM guidance systems, and younger generations that were trained by them. When the USSR went teats up, a lot of those guys needed jobs. Some came to the USA and programmed industrial control systems, cash registers and ATMs with small memory spaces, and some of them worked for criminals and developed malware. Unfortunately, a few had also found employment in the nuclear and missile trades in Pakistan, Iran, Iraq, and North Korea.\n\nThey turned those little terminate and stay resident programs into an elegant almost art form, and many of their original techniques had been incorporated in new generations of malware again and again. This resulted in systems that to the uninitiated appeared to have originated in Russia, but could have come from anywhere. Military hackers from almost every sovereign nation often included segments of that old code in their projects to mislead investigators about their origin. Usually, if you traced the execution with a debugger, you would find those segments were inactive, just included to be found, not functional. Dwight had to do better than that. The other techs had identified and compromised all the devices in the target apartment, including the cardiac pacemaker, and all the routers and cell sites that served them. The shooters had booked two hours tonight to rehearse Dwight on how things had to be done for the viewing public. They were almost ready. \n\n+++++++++++++++++++\n\nI'm not sure how long I slept, but a knock woke me up. Much to my delight, when I opened the door, it was my firefighter crush, in the very attractive flesh.\n\n\"Kent FRS, to inspect your flat for smoke damage, and attempt to mitigate it.\" She smiled, so nicely. \n\nDamn, a great ass, a great chest and a good vocabulary, too! She had shed the firefighter uniform, and was wearing a nice floral print dress with dark blue side panels that somehow accented her figure perfectly, and a blue costume jewelry necklace. Her hair was up and she had applied just a touch of makeup and red lipstick, all very classy and understated. She looked incredible. I stared at her for a moment, then recovered. \"Come in, please!\" I tried to sweep my arm and offer the place to her.\n\nShe sniffed and her nose wrinkled. \"They called him Mad Murray\" she said.\n\nI looked puzzled. She continued.\n\n\"The bloke that used to live here.\" She explained. \"He was a bit of a hoarder and more than a bit weird. The FRS made several calls here to check on him.\"\n\nSo, his name was Murray. Must have been a chain smoker, too. Name? Oh, names!\n\n\"I'm Robbie Roberts. Very pleased to meet you!\"\n\nShe smiled and sort of half curtsied. \"Likewise. I am Summer, Summer Mawn.\"\n\nSomehow that name seemed familiar. Rhetoric and Composition class, first semester. A great English novel, one that even qualified as that with the jaded Miss Wyricki. I smiled at the memory.\n\n\"Your middle name wouldn't be \"Set\" would it?\n\nShe looked pained, but laughed softly. \"My father is a joker, but not that subtle. My first name is Somerset, but everyone calls me Summer. And my last name is spelled M-A-W-N.\"\n\nThe brain between my ears began to work again. \"How did you find me?\"\n\nShe smiled shyly. \"This is a very small community, and a new fella with a strange accent gets noticed.\" Her Suzie suddenly sounded, growing louder. \n\nWonderful. I felt my confidence grow in concert. \"I'm glad you noticed. I noticed you, too. I was about to ask you out when that alarm went off.\"\n\nShe smiled again, like she had a secret. \"It's summer grass fire season. One of our busy times.\"\n\nTell her the truth, Robbie, and tell her what you want. \"I'm here for the busy season, then, until late August, but I would like to spend time getting to know you until then.\" I wanted to get busy with her. \n\nShe smiled again, and made some very encouraging eye contact. \"And then back to Texas? Bevo, KD, and Jordan Spieth, et al?\" \n\nI smiled again, my confidence growing by leaps and bounds. \"May I call you Summer?\"\n\nShe looked me right in the eye, her gaze unwavering and her Suzie accelerating. \"What would you like to call me?\"\n\nI took her arm, and held it gently. Go for it, Roberts. \"I would like to call you my pet.\"\n\nI could feel a little shiver go through her arm and her Suzie. She stepped a half step closer, but I might have been dreaming that. \"Then what shall I call you?\" \n\nI was feeling it. I hoped she was too. \"You may call me Master.\"\n\nHer eyes bounced and her Suzie wavered. She got the strangest look in her eyes. I somehow heard her say \"if only you could really pull that off\" skeptically, but her lips didn't move. Then she drew in a big breath and held it.\n\nI put my thumb under her chin and lifted it up and kissed her very gently. She shivered. \"Count on it, my pet!\"\n\nShe smiled a funny little smile, eyes downcast. Yee haw!\n\nI now regretted agreeing to go to dinner with Tessa Formby tomorrow night. \"Can we get together Friday night?\"\n\nShe looked mildly uncomfortable. \"I have a side enterprise doing bespoke food for garden parties, and I have events both this Friday and Saturday evenings, I'm afraid.\"\n\nShe looked sad, and I'm sure I did too. Don't let this stop you, Robbie! \"Could you use another hand?\"\n\nShe looked shocked. \"One of my regular helpers is out sick. Can you set up tables and bus afterward?\"\n\nThanks to my mother's socialite leanings and unwavering insistence on teaching me proper behavior, I knew about ballroom dancing, cotillion etiquette, and proper place settings. I held up my hands, making the 'perfect circle' or 'A-Okay' sign with each. I suddenly remembered Suzanne teaching me that it could be considered offensive in Southern Europe, North Africa, and South America. I hoped it was not considered so here, and that my little wave of sadness upon thinking about Suzanne didn't show on my face. As my mother had taught me, I held my hands out as if they were over a table.\n\n\"Little letters b and d. Bread and drinks. BMW. Bread, meal, water. FORKS. Fork, circular plate, remaining utensils: Knife and Spoon. Dessert spoon on top.\"\n\nShe smiled broadly. \"You're hired!\"\n\nI tried to look very sternly at her. \"That's going to cost you, my pet!\" She smiled one of those wonderful little smiles. \"Perhaps you will make me pay.\" \n\nEngland can be marvelous in the summer, don't you think?",
        "+++++++++++++++++++\n\nDwight went through the rehearsal with the shooters. It looked like it would work, even if one of the myriad of cameras in the area caught their actions. But he wasn't ready with all his malware misdirection moves yet. One of the other techs had found something strange in the wireless router in the target's apartment. Strange as in unexplained. The firmware showed the a proper, if a little out of date version number, but the file was significantly larger than the download of the same version number available on the manufacturer's website. Something wasn't right. They needed a copy of that firmware file. Someone could perhaps do a sneak and peek to attach a serial cable and hack the router password to get it. But the risk was just too great. They looked for a workaround, but hadn't find one. Yet. \n\n+++++++++++++++++++\n\nThe next morning, I was up early, energized and happy. I put my cool weather running outfit back on and walked to the recreation ground. I did my sprints and calisthenics almost joyously, pushing myself to the limit and imagining I was straining to penetrate Summer in several masterful ways. What a beautiful morning. \n\nI explored a little bakery closer to both my place and the recreation ground. It smelled wonderful when I walked in the door. But sugary cakes and doughnuts were not all that I needed -- protein was required. Luckily, they had \"filled rolls\" which was somewhere between a kolache and a sandwich, which included cheese and sausage. I got two and munched happily as I walked back to my place to shower and change. Maybe I could get them started on offering Tex-Mex style breakfast tacos. Very multicultural of me, right?\n\nI showered, and anticipating my tour of the freight yards on the French side today, I wore jeans, sneakers, and a well-worn long-sleeved shirt. The bus was right on time. We started at the Holiday Inn again, but there were only five of us going on the tour to the freight yards, so we took a small van around the service road. It looked like a dozen parallel rail tracks with several switches and sidings and another track to several big buildings. We split up into two groups and each group climbed up into the cab of a separate sleek looking electric powered locomotive to ride to France. The freight yard around us was clean and orderly, but busy with movement everywhere.\n\nThe freight cars behind us looked like big ugly rectangular bird cages filled with trucks. Several other trains were made up of what looked like half size chemical tanker cars, and others were what we called 'piggyback' cars with a truck on them instead of containers. The Union Pacific tracks along the Mopac Expressway (so called because they used to be Missouri Pacific tracks) in Austin were often full of piggybacked shipping containers, frames for trucks and SUVs or semi-trailers, and full-sized tanker cars. The civil engineers called them 'multi-modal' trains. The \"Chunnel\" was really three tunnels: a one way from England to France, another one way the other way, and a service tunnel with crossovers in between the two. That's where I expected to spend my time. There were separate trains designed to carry cargo, automobiles, and passengers (aka Eurostar). \n\nThe engineer doubled as our tour guide, narrating our journey. At one point, he said we were about 270 feet below the surface, and traveling at 100 mph, which made me think twice about those chemical cars. He said the pressure waves created by the big trains traveling so fast were significant, requiring pressure vents every couple of hundred meters along each tunnel to equalize the pressure and damp the waves. He also said that the friction between the air molecules and the concrete inner linings of the tunnels would heat the tunnel interior to 140 degrees F if it were not for the cooling and ventilation systems. Suddenly my freshman academic studies of Bernoulli and Carnot seemed very practical. The central tunnel was full of cooling pipes, air vents and valves. It was kept at overpressure compared to the other two tunnels, for several reasons.\n\nThe trains were all electric, powered by electrified grids overhead, but the vehicles that passed through the service tunnel had their own engines, so they could operate even during a power failure, which had happened several times. The tunnel complex needed a 100MW+ power plant just for its operation: train power, ventilation, cooling, and lighting. By the time he finished his soliloquy, we were in France. The train yards there were even busier, but not so clean and orderly. Despite the laser detectors, razor wire fences, security guards, and hundreds of cameras; dozens of unauthorized people roamed the parking areas, approach roads, and train yards at any given time. They set fires or put hazards on the road to stop trucks so they could board them and make it to the UK. \n\nWe saw several guards struggling to clear some of the migrants from the tracks. \"It used to be even worse, before they shut down one of the big migrant camps. The French seem to be happy to let them slip through so they are the UK's problem. Nobody wants to go the other way. They are even talking about setting up more camps.\" \n\nThe driver sounded bitter, and scared. \"Sometimes they try to throw Molotov cocktails on the trains so they burn in the tunnel. Sometimes, they wait and rush the guards in groups, overwhelm them with numbers so that some of them get through. My wife worries herself sick every night until I get home.\"\n\nWe turned around via a loop on the French side. The driver said the trains run both ways to even out the wear on wheels and tracks, which were wider gauge than the regular railroads that carried goods to and from the tunnel. I couldn't stop thinking about the mass and speed of those trains. Mass of 15 thousand tons for even a small train, speed 100 mph, the potential energy was scary huge. How about a power failure, collision and subsequent fire while you were midway along the route? I was very relieved when we emerged back into the sunlight near Folkestone. \n\nWe had the same cheesy sandwich buffet (which led me to conclude that cheese was cheaper than meat, but with some different lunch meat, at least) for lunch. \n\nThe HR guy called the roll again, handed out some schedule sheets to most of the people there, and bid farewell to everyone but me and a young guy with thick glasses and a beard named Drummond McFadden, who had been sitting in the back row. He said we should wait in the conference room for some further training. Drummond moved up to the vacant seat next to mine.\n\n\"Guess we must be the engineering contingent, in for a little extra training, aye Roberts? You're not from around here, I'll wager.\"\n\nI smiled. \"No, but actually my father's people are originally from Aberdeen. How about yours?\"\n\n\"Oban, the shining jewel of the Firth of Lorn. How about your mother's people, eh? And where were you born?\"\n\n\"My mother's people are from all over, including some Karankawa Indians, but I was born in Dallas.\"\n\n\"How did you ever get hired onto this little traveling show?\"\n\n\"It's a summer internship. Ends in August. Then back to school at ESU in Austin.\"\n\n\"Just graduated from Strathclyde in Glasgow myself, mechanical engineering, with a heavy leavening of civil and naval architecture. The Chunnel just became profitable. If they build that planned second tunnel complex, I'll have a job here for the next 50 years! I plan to be running the entire operation in less than 20!\"\n\nSo, he's a man with a plan. I thought I had one, too, a few weeks ago. What's that old saying? No plan survives contact with the enemy. My plan might not survive loss of contact with Suzanne. At this point a very dour and prematurely grey guy in his fifties, with an amazingly bulbous nose, marched in. \"Roberts, and McFadden, is it? I am Oliver Hastings Harrison. I hope you were paying attention in your classes. I'm going to give you two snotties a first cruise you will never forget. You two may take off early for your weekend. Tomorrow is the last time you'll be off on a weekday for at least 60 days, and get braced for lots of overtime! No extra pay, though. Report to the surgeon bright and early Monday morning, and then to my office, or turn in your resignation if you don't think you can cut it!\" With that he turned on his heels and marched out.\n\n\"Wow. Who was that?\"\n\nDrummond laughed. \"That was a pissed off forcibly retired Admiral. He thought he was about to be promoted to Admiral of the Fleet, like his father, grandfather, and great grandfather before him. But instead, when he turned 55 they cashiered him outright\". We began to walk toward the front drive where the bus would pick us up. \n\n\"He was brought in here to clean house, and he has turned things upside down in engineering. He was a nuclear submarine power plant officer, then captain, then admiral. He knows his stuff and he is tough as nails, and incorruptible, if a little eccentric. We are fortunate he is training us himself.\"\n\nI wondered. \"It might be good for you if you want to be here long term. I'm not so sure about me.\"\n\n\"He may kill us with work and study, but at least we won't be bored. If I meet his expectations it could advance me very quickly.\"\n\n\"Why did he call us snotty? What does that mean? Where is the surgeon's office?\" He showed me on Google maps.\n\n\"A snotty is navy slang for a midshipman: newly trained officer candidates on their first sea cruise. See you Monday at 0730?\"\n\n\"I ride the bus in from Wingham. Not sure exactly what time the first one gets here.\"\n\n\"Make it happen, Roberts. You don't want a Hastings Harrison on your ass!\"\n\nI walked over to locate the surgeon's office and Hastings Harrison's - better safe than sorry. I still waited a while for the first afternoon bus back to Wingham to pick me up. The driver assured me that early bus Monday morning would get me there by 0730. \n\n+++++++++++++++++++\n\nI got back to Wingham with lots of time to get ready for the 8 pm pickup. I made another trek to the recreation grounds and sprinted even harder, doubling my count of sit-ups and pushups. Visualizing being with Summer was a very effective motivator. My stomach suddenly realized that I might not get any actual food until 10 PM tonight, and signaled its displeasure. I stopped at the Indian place and got some lamb and rice, and the newsagents for some hard candy to tide me over. \n\nAfter a shower and a change of clothes (same old blazer but new shirt and slacks, courtesy of my mother's Christmas largess) I texted Summer at the number she had given me: \"I now have Friday off so can start working your party as early as need be.\"\n\nShe texted back almost instantly: \"Huzzah! I now have two of my regular helpers out sick so need the extra time. Pick you up at noon tomorrow?\"\n\n\"I'll be ready my pet.\"\n\n\"As will I.\" \n\nSmile, Robbie.\n\n+++++++++++++++++++\n\nI took a nap, expecting I would be up well past my normal bedtime. My phone beeped its alarm just a few minutes before the driver called. He was in a nice new Audi sedan, with the steering wheel on the wrong side. It seemed to fit the road well, though, and he made good progress, taking the A2 to the M2 and using the toll lanes. He made a strange circle near Canary Wharf and got up on an elevated roadway, then into a tunnel.\n\nAnother damn tunnel. When we finally emerged, I saw the Tower of London. We then whipped around some very busy streets and stopped in an area with a surprising number of trees. He sent me downstairs near a window filled with split logs. \n\nThe place was called Temper, and it was sure a lot fancier than any BBQ joint in Austin. But they did have a big fire pit with a massive ventilation hood above it, some meat on racks, and a sign that said they sold meat by the pound. It did smell sort of like barbecue, and I detected the faint odor of roasting jalapeno peppers. That was encouraging, but that's about as far as the similarity went.\n\nTessa was ensconced in a booth for six that decorated in green and raw wood. I realized it looked like the old Black's BBQ in Lockhart, but gentrified and gilded. There were four people with her and one seat open, presumably for me. Tessa gestured to the middle seat across from her, and I took it. She began the introductions with the guy in the corner of the booth just to her right.\n\n\"Robbie Roberts, this is Jeremy Mignot, who makes his mark as an investor, mostly tech venture capital, but also invests in restaurants, including this one.\" Jeremy looked like Gene Wilder made up for that Willie Wonka movie. He was what they call here a full-on ginger, but his hair was much subdued compared to Red Tappert. He wore what I am sure is a very expensive custom suit: rich looking pinstripe fabric with a paisley vest and matching paisley tie. There was probably a matching (or more likely contrasting) pocket square, but I couldn't see it right now. He had sparkling intelligent eyes, the kind I like to see on a woman, but I also detected a mild Suzie signal, male signaling for male, for me! That was most disconcerting. But he was also signaling strong desire for Tessa. He also was too young and too white for her, unless she had a special place for a guy who was bi. \n\n\"Very pleased to meet you, Robbie!\" Unfortunately, that was all too true. At least he was across the table from me.\n\nTessa went counterclockwise around the table to the other back corner, the person to my left. \"This is Hogan Allen, one of the top solicitors in the UK, specializing in estates, trusts, and international banking law.\"\n\nI nodded. I bet he'd like to have Sapiento's private mobile number. He looked quite bright, and reassuringly was signaling only for the woman on my right, who was the next to be introduced.\n\nTessa gestured toward her. \"Rachel Park, fashion designer extraordinaire and of necessity due to the popularity of her designs, also an active investor. Unfortunately for Hogan Allen, Rachel was not signaling for him, nor for anyone at the table, including me. She was stunning, though short and very thin. \n\nFinally, Tessa indicated the other woman at the table, in one of the outside seats. \"This is Abagail Clayton Bowles, my prot\u00e9g\u00e9' and fellow Tattler journalist\". Abagail was signaling for me, but I detected a distinctly pecuniary overtone. She couldn't possibly see me as wealthy, but perhaps as a gossip source, who might reveal something if she could engage in pillow talk with me? She was very flirty at this point.\n\nNo menus were offered, but dishes just began to arrive, presumably at the behest of Jeremy Mignot, as part owner. They called them tacos, but based on their form factor, I would call them chalupas: flat circles of carbs with stuff on top. But not exactly traditional taco toppings: crab, scallops, mushrooms, and some other stuff I couldn't identify even when I tasted it. They called the round things on the bottom tortillas, and at least they were made of corn, not flour. The hot sauce was even wimpier than at a Whataburger -- no kick at all. \n\nThings improved slightly when they served each of us a little bowl of chili that was actually pretty good, if bland and a strange color. The next thing, that featured grilled fish laying naked on the tortillas did not seem right -- it should be wrapped in banana leaves or something. Jeremy asked if I had any requests, and I sincerely hoped he meant food, so I asked for cabrito with habanero salsa. He smiled and a few minutes later, 'smoked goat' (age unknown) arrived with what I would call habanero jam -- it had the color but not the kick. They took the seeds out for sure. Everyone ordered another round of drinks and I got a sparkling water. Then they brought out a single little dish for everyone that looked like a plop of mozzarella whipped with lime gratings and topped with little slices of the least zesty jalapenos I had ever encountered. Even the seeds had no kick. They must have been grown in an English fog rather than the sun-drenched South of Spain. \n\nAnother round of drinks followed. I stuck with the water. Tessa started a conversation, and I inferred it would take some time for the next course to arrive. \n\n\"So, you all knew of Robbie before you were introduced to him, and you have all seen him, too, but wouldn't recognize him.\"\n\nThey looked interested. Tessa knew her audience.\n\n\"Do you recall the tennis parties that Belinda Hatch Peters used to have?\"\n\nI noticed that she was watching carefully for their reactions. Hogan Allen looked like he had just been kicked in the balls. Maybe he had some memories from one of those parties that he didn't want to share? Rachel Park sported a Cheshire Cat grin. \n\nJeremy Mignot broke into a wide and happy smile. \"It was a shame they stopped hosting those\". He laughed. \"It was a unique environment that made for some unique experiences.\" Some stories you want to hear, some you don't.\n\nAbagail looked expectantly at Tessa. Perhaps this was a juicy story she hadn't shared? Tessa smiled.\n\n\"Do you recall hearing about young Chasemore Gardiner Betts losing a tennis match last January? It was Robbie who bested him.\"\n\n\"Good on ya'!\" exclaimed Hogan Allen, perhaps relieved to have someone else to talk about. \"That bespawling quisby should have been drowned at birth. \"\n\nJeremy laughed so hard that he had trouble breathing, then launched into a story on his own. \"His bride to be finally slipped from his grasp, I hear.\"\n\nThat got my attention. I remembered her shrill and grating Suzie signal laced with fear and loathing when she looked at Chasemore. \n\n\"She finally exhausted all her options that were decent and above board, and then she got down and dirty. There are apparently some bedrooms in Abelard's big old castle that have peepholes in the walls.\"\n\nI knew that to be true, thanks to the two voyeuristic teenage tennis twins watching Peggy and me. The story was getting interesting.\n\n\"So, she arranged to seduce his best friend, and further arranged to have Chasemore watch, though one of those peepholes. She did things for his chum she had pointedly refused to offer young Chasemore, even hypothetically after the marriage, all the while loudly praising the friend's skills as a lover. She expected Chasemore to run screaming through the castle, proclaiming that he would never marry such a slut. \n\nBut...\" he smiled evilly, \"He had exactly the opposite reaction. He told her he had never realized how beautiful and desirable she was, and how lucky he was to have her. He wanted to marry her more than ever.\" \n\nRachel leaned forward. \"So how did she get rid of him?\"\n\nJeremy grinned. \"She ramped up the humiliation, using one of the tennis parties to do it.\"\n\n\"How?\" Rachel demanded.\n\n\"She arranged to go dogging, which apparently was something that happened on those weekends, and she further arranged for it to be videotaped. Very professionally, too, with two cameras.\"\n\nRachel was beside herself with excitement. \"Go on!\"\n\n\"She borrowed Chasemore's own Range Rover went to a car park nearby and picked up a dozen so called admirers. She then stripped and offered herself up through the rear window, taking them all on serially, doggie style. One camera filmed the action directly from the outside, and one inside the car filmed her facial expressions. It was HD quality video -- her face would be recognizable to hundreds of people in Hertfordshire alone. They were edited together on a split screen, and then she posted it on revenge porn site, something like \"my eXXX girlfriend\" and had someone send Chasemore the link anonymously, after it had been up for two weeks.\" \n\nRachel spoke rapidly \"But that just turned him on even more, didn't it?\" Her eyes were flashing, but no Suzie emerged from her.\n\nJeremy looked uncomfortable. \"He wanted to be in the next video with her, to hold her hand while she did it all over again. Now she was even more thoroughly disgusted with him. She considered suicide, but someone stepped in to help. I suspect it was Abelard Peters, but I don't know. A shell corporation formed by a group of developers bought half of her family's land, after the fix was in for the local government to issue development permits, obviating the need for the marriage and the promised inverse dowry to clear her family's debts. She was free of Chasemore.\"",
        "Rachel shivered. \"But she still goes dogging, doesn't she?\" She downed her drink and signaled for another. As did everyone else. I stuck with water. \n\nThe next course of food arrived, served family style. A huge lamb shank, and a big slab of beef, both medium rare with a charred exterior. Some new potatoes and grilled corn. It was quite good. I was getting full. What's for dessert?\n\nAbagail spoke up. \"Where have we seen Robbie before?\"\n\nTessa smiled. \"Do you remember the TMZ video from the \"Addicted to Austin\" party? During the GP race in November?\"\n\nHogan Allen barked. \"All those women dancing naked to that old Robert Palmer song? Who could forget that?\"\n\n\"They are going to do it again next year. I hope I can be there again too.\" She grinned.\n\nHogan whistled. \"You were there, weren't you?\"\n\n\"So was Robbie, he was the one in the big black suit and mask, with the girls in red and white leather suits on leashes!\" I was pleased she wasn't mentioning either girl's identity.\n\nSuddenly I was overwhelmed with Suzie signals. It seemed I was getting more sensitive, and I could discriminate between them all. Jeremy Mignot popped a big one, for me, and pictured me holding his leash. Both Abagail and Rachel launched easily identifiable curiosity Suzies about what it would be like to be on a leash, and the two other males were picturing themselves holding the leashes of the three females at the table. Wow!\n\nJeremy looked across the table and stared into my eyes. It was a little creepy. \"Robbie, I am having some people over Saturday night. Just a small dinner party. Can you join us?\"\n\nMy response was instantaneous. \"No, I have commitments this Friday and Saturday night, and I have been notified to expect lots of overtime at my internship for the next 60 days or so.\" \n\nDessert turned out to be some kind of chocolate and butterscotch thing that was marvelous. I was topped off. Apparently, so was Tessa. \"Come on, Robbie, I will give you a lift back to Wingham.\"\n\nJeremy followed us up the stairs. \"Robbie, I hope I haven't put you off, or offended you by being too forward?\"\n\n\"I'm not offended, Jeremy, just not wired that way. In Austin, some folks call me \"excessively heteronormative\".\n\nHe smiled. \"Okay, I get that. Can I invite you to some things just as a friend, then?\"\n\n\"Perhaps.\"\n\nTessa's driver was waiting for us when we got back up to the street. He reversed his previous course and soon we were speeding southeast. There was a sound wall partition between the back seat and the driver. \"So, do you really have commitments this weekend?\"\n\n\"Yes, but even if I didn't I would have said so!\"\n\n\"That I believe. It was pretty obvious he was attracted to you.\"\n\n\"He likes you too, Tessa.\n\n\"He is gay.\"\n\n\"I think he is bi where you are concerned!\" \n\n\"As you know, I like my men older and blacker than him.\"\n\n\"Perhaps you could find an old black man that you both like?\"\n\nShe giggled. \"My, my Robbie. You have come a long way, haven't you?\"\n\n\"I'm not going there, but I am learning to recognize when someone else might want to.\"\n\nSoon we were passing through Canterbury and into Wingham. I was looking forward to spending Friday and Saturday with Summer.\n\n\"Peggy Duchenne and her fashion model crush are the talk of the younger Soho artist set right now, Robbie. Peggy has become obsessed with fitness and they do erotic workout videos together. They also seem obsessed with each other, but obsession is rarely healthy. You must watch out if Peggy contacts you -- stay out of the limelight is my advice. We expect to write a lot about Peggy and I would prefer not to cover you. By the way, Abagail may ask you to escort her to a few events. I urge you to accept her invitations. Fare well.\"\n\nI watched her car speed away with a mind full of more questions. That always seemed to happen with Tessa.\n\n+++++++++++++++++++\n\nSummer arrived at noon Friday just as expected. She brought a glass lamp looking thing and some glass jars with metal twist tops and set it on my little table.\n\n\"Good morning. I brought you this oil diffuser setup to help completely eradicate the tobacco odor in here. Are you ready to go?\"\n\n\"Yep.\"\n\nShe had texted me to wear 'dungarees' and comfortable shoes, since I would be wearing one of her 'smocks' at the event. She was driving a white transit van with an understated SEC logo: Summer Event Caterers. It was almost empty.\n\n\"We have to go by the shop and pick up the first batch of food.\"\n\n\"What about chairs, tables, all that stuff?\"\n\n\"I let the clients take care of that, or I use a subcontractor. I just do what I'm good at, which is the food.\"\n\nThe shop turned out the be a horse barn converted into an industrial kitchen several miles east of town. It was apparently shared by several caterers, and several people in aprons were working on big stainless-steel prep tables and commercial stoves. Her food was in two big refrigerators and several big cardboard boxes sitting next to them. We loaded it up and took off.\n\n\"We'll have to make two trips. We'll deliver this load and then come back to make the final courses\".\n\nWe jumped in the van and headed north. \"How long will this trip take?\"\n\n\"The party is at a small estate just south of the Stodmarsh preserve. Maybe a 30-minute drive. Why?\" \n\n\"Because it gives me a chance to go over the ground rules of our relationship.\"\n\nI was watching her as she drove. Her eyes got wide and her Suzie signal rasped. She raised her eyebrows.\n\n\"And you are going to define those for me?\"\n\n\"Yes, I am, my pet. First, discretion. I will never talk about our relationship in any way with anyone but you. No gossip, no bragging, no stories. The only thing I will ever say about you is that you are a wonderful young lady and that I am proud to call you my friend. I expect the same discretion from you with respect to me.\"\n\n\"Okay.\"\n\n\"Okay?\"\n\nShe froze for a minute. I reached over and squeezed her knee, hard. \n\nShe gulped again. \"Yes, Master.\"\n\n\"Very good. Second, honesty. I will always tell you my needs and desires and even whims, and you will do them for me without hesitation. Anything I want, anytime, anywhere, any way I want it. You will tell me all your needs and desires and fantasies, and I will decide what you may have and what must remain a fantasy. But you must tell me everything, no holding back. Per the first ground rule, I will never reveal them to anyone.\"\n\nHer Suzie wailed like a siren as the van drifted across the centerline, then she startled and regained control. She gritted her teeth, then smiled.\n\n\"Yes, master.\"\n\n\"Third, I know you are attracted to me, and you know I am attracted to you. But I sensed some hesitation or sadness about your attraction when we first met. What was that about?\"\n\nHer Suzie paused completely. \"My husband.\"\n\nNow I was taken aback. \"You're married?\"\n\n\"Widowed. I married young to a schoolmate I had known almost all my life. I loved him. He was in the Army and was killed in Afghanistan eighteen months ago. There will always be a sadness there.\"\n\nI needed to keep my game face. \"Would he want you to be sad? Remain celibate in his memory?\"\n\n\"Perhaps, but it's not up to him anymore.\"\n\n\"Then you will devote yourself to pleasing me, and that will make you happy.\"\n\nShe shuddered, then her Suzie resumed. Her face turned red. \"Yes, master.\"\n\nWow. This shit really works if you find the right girl.\n\n\"Finally, we need to talk about your big muscular ass, and your plain face.\"\n\nHer face turned white. Her eyes filled with tears, and she gripped the steering wheel like she was strangling it. I sensed a wave of humiliation, shame and hatred modulating her Suzie. She would not look at me. I'm sure she had been teased about her ass in school and on the job. And certainly, as smart and observant as she obviously was, she knew her face was relatively plain. \n\n\"I am sure your big ass stands you in good stead on the job. You can lift and carry as well as any man. But...\" \n\nI paused for effect. She stopped breathing.\n\n\"Summer, I absolutely adore your ass. When I first saw you bend over, I was filled with wonder and lust. I want to hug it and kiss it. I want to caress it, spank it, and taste every square millimeter of it. I want to spend the summer exploring and enjoying it in every way possible!\"\n\nShe still did not breathe. Perhaps she was waiting for the other shoe to drop. Honesty is the best policy, Robbie, but his might be pushing it.\n\n\"When I first saw your face, I noticed your eyes. They flashed with intelligence. I thought you were no-nonsense kind of girl, didn't wear make up on the job, were a devoted career firefighter, et cetera. But when you came to my apartment, in that understated and classy dress, with just the right touch of makeup, I wanted to gently touch your face, and then grab your head with both hands and fuck your mouth!\"\n\nShe took a deep breath. Color returned to her face, and her arms relaxed on the steering wheel, but tears still dripped gently from her eyes. She looked over at me and smiled through the tears. \"Okay.\"\n\n\"Okay?\"\n\n\"I mean, yes, master!\"\n\nThere is just something about England in the summer that I really like. \n\n+++++++++++++++++++\n\nThey found a workaround for the router. The mystery file was the version that the router manufacturer had to provide to sell into the Chinese market, with all the MSS backdoors, censor traps, and monitoring hooks built in. Same version functionally, but a bigger file with all that snoop ware included. But why was it in this apartment? The agency expert system had the codes for the MSS backdoor. One day of copying the monitoring traffic and it was easy figure out why it was there. Dwight had to adapt, but it would be better than his original plan. After the heart attack, the investigators would find the Chinese monitoring software, then the bogus Russian stuff, then finally the 'real' Russian stuff that Dwight would install. It would take another day to get ready, plus someone else had to be assigned to roll up the Chinese botnet. The other techs setup the femtocell that would take over the cell phones nearby during their hack. They would also send traffic through the jiggered router and on to the Russian embassy, although the Russians wouldn't know it at the time. It would only be discovered later. \n\n+++++++++++++++++++\n\nSummer's breathing began to slow down as she drove on, but I could still see her pulse in her neck. It was lovely. We approached a big brick house surrounded by a wooden fence and some huge old oak trees. It might have fit in near Bent Tree Country Club in North Dallas -it had the same kind of wooden fences surrounding the golf course. But there were stables and a horse ring nearby -- and a couple of smaller houses too. The main house had a very complex roofline with three big chimneys. The was a nice formal garden (a big back yard) south of the house, that was currently being set up with big tents, a stage, and a dance floor. If this was Dallas, it would be a debutant coming out party. \n\nI was curious, so I asked Summer, \"What kind of party is this?\"\n\nShe laughed. \"Officially, it is a fundraiser charity auction to benefit a local children's organization. Most of the invitees are OKS. Unofficially, it's for a rising star London banker to show off his new country house and much younger trophy wife.\"\n\nI was stunned. \"Okies? You have Okies here?\"\n\n\"You say 'Oh-Kay-Ess'. Old King's Scholars. Alumni of King's School Canterbury. I went there, my father taught there. My husband went there, too. As did W. Somerset Maughan, among others, that's how I got my name. But what's an Okie?\"\n\nI may have exaggerated a little, giving her the standard Texan description, usually given to young Texans on the way to their first Texas-OU football game at the Cotton Bowl in October, of the \"hard drinking, tobacco chewing but spittoon missing, meth snorting, gas siphoning, expletive spewing, incest enjoying and highly inbred Oklahoma fans that leave their double wide trailer homes to drive to Dallas in primer colored old cars for the game. And that's just the grandmothers. The younger adults are even worse.\"\n\nShe was aghast. \"You mean like the dust bowl, Grapes of Wrath, all that that stuff from in American History?\"\n\n\"No. The nice ones went west, the dregs stayed behind!\"\n\nShe giggled. \"The Kings School dates to 597 A.D. It's a big deal.\" \"So, it's a famous public school, sort of like Charterhouse?\"\n\n\"Bloody hell! Those Carthusian, Kardashian-like cretins, twits, latecomers, pretenders, overcharged fools? It is the most expensive public school and that is about the only superlative that it qualifies for!\"\n\nI supposed I wouldn't mention Nora Upman, or her mother and father, who all went to Charterhouse. \n\nI changed the subject. \"Have you ever heard the song \"Okie from Muskogee?\" She shook her head, I hummed and sang a few bars. \"I'm proud to an Okie from Muskogee....\"\n\nShe nodded. \"I have heard that tune. I have an ear for music. But it was at a 1960's themed party. I think the words were something like 'Hippie from Olema' or something like that.\"\n\n\"One of the fraternities at ESU always plays a version called \"Asshole from El Paso\" at their spring party\". \"That 60's party was the same estate where our event is this Saturday. This time it's a 70's party. A big blowout with a tribute band stage show. Lots of bigwigs will be there! Big fee for me.\" By this time, we had pulled up to the smaller building to the left of the main house, which Summer said was atop a wine cellar and would serve as the staging area for all the food and drink tonight. They would auction off rare bottles of wine donated by the house's new owner, plus children's art projects at highly inflated prices, cooking lessons, music lessons, and even dates with some of the single ladies from leading families that supported the charity. Another van was unloading racks of plates, glasses, and silverware, and decorators were stringing LED lights and colored bunting everywhere. Tables and chairs were already set up. Summer's boxes had apparently been chosen to fit in the big wall mounted cooler inside. Summer pointed to the workers setting up the tables in the back garden. \"When we get back here with the last part of the food, we'll store it in the cooler and then make sure all the places are set properly.\"\n\n\"What time do we serve?\"\n\n\"Eight.\"\n\nWe headed back to the kitchen shop. Summer put me to work chopping onions and potatoes in mass quantities, while she browned a lot of meat in 4 huge deep pans on a big gas stove. One of her other helpers was making a big pudding in a vat the size of a 55-gallon drum. Summer was playing the kitchen like a one-woman band, cooking, seasoning, chopping and all the while giving me things to do. The Master was temporarily a sous chef. \n\n+++++++++++++++++++\n\nDwight decided everything was ready, and they kicked off the op, by waiting. The target spent the morning working out with his personal trainer, and authorizing wire transfers for his clients in the Far East. That network was how he attracted the agency's attention in the first place. Dwight's counterparts back at HQ were watching the financial traffic carefully, waiting for the moment when interrupting the process would strand the maximum amount of laundered money, in Russia, and probably cost many of the target's clients their illicit businesses, if not their lives. Left untouched, it might be pilfered, or traced, and either was very bad news for several criminal enterprises, and one very important terrorist funding network. \n\nWhen it arrived, they pounced. The femtocell took over control of the pacemaker and all its communications from its normal local cell site, and simultaneously sent a scripted and very normal looking set of readings onto the cloud monitoring center. \n\nThe target did not notice the slow changes in his heart rate -- the 'frog slowly boiling in hot water effect' worked here too. As the oxygen saturation in the target's blood went down, his normal reflexes tried to increase his heart rate and respiration rate to compensate. Dwight had to let the respirations climb, but continued to drive down the heart rate. The banker and money launderer interpreted this as stress and anxiety, which was an integral part of his job. He tried to relax and slow his breathing, exactly the opposite of what was needed. Soon he was in a spiral -- his blood gases were all wrong, and his heart muscle was not getting the oxygen it needed, and everything was moving rapidly in the wrong direction. Dwight had worked with a group of doctors at the agency to plan the duration of such an imbalance that was required to do permanent and massive damage to the heart muscle. By this time, the target was convinced he was having a panic attack. When the terrible chest pains began, he realized it was a heart attack, but he could no longer rise from his chair. He was having trouble holding his head up. He realized that he couldn't even reach for his phone. Dwight tripped off the clock counter on his phone. When the calculated time had passed, he stopped manipulating the heart rate, erased the on-board memory in the pacemaker unit, and let the normal communications resume. The cloud based monitoring service noticed the errant readings, and placed a call to their contact number for the pacemaker patient. There was no answer. Following their protocol, and given the real and very alarming readings from the monitor, they called the cardiologist listed in their records. She took a few extra moments to berate them for the delay, and then ordered them to use their system to summon an ambulance. But thanks to Dwight's planning, they didn't alert the one they thought they would.\n\nThe two shooters looked little like real EMT's, but no one would really notice that when they arrived dressed in the proper uniforms in their very real but unauthorized ambulance. The doorman got the medical alert from the monitoring system, as he had been trained, and was gratified when the ambulance arrived so quickly. He used his key to get the express elevator going for them, and accompanied them up to the apartment and back down with their patient. He was pleased when they drove away, and hoping for the best. \n\n+++++++++++++++++++\n\nSummer was amazingly well organized. Fancy food in multiple courses for 100 people was prepped and ready with less drama than it took me to microwave a frozen lasagna back home. I had seen Nora work her culinary magic for 25 people or so at her coop, and Summer was just as efficient with four times the volume. It was like a Frederick W. Taylor time and motion study come to life, with smiles and happy talk all around. She was very good at this. The only limiting factor was how quickly we could run the food to the tables (buffet lines were strictly for the lower classes). \n\nThe party goers looked like overdressed Phi Iota Gamma white bread frat alums who had married KKG girls and inherited lots of money from both sides of the family. Conspicuous consumption dripped from their apparel and jewelry. The women were mostly thin -- some a healthy thin that must have come from a good diet, lots of exercise, and concierge medical care. Some were a fragile and unhealthy thin -- that likely came from fanatic dieting, bulimia, stimulants, little or no exercise, and a good deal of psychiatric treatment. Almost all of them had seen a plastic surgeon recently. I saw lots of those expressions of permanent surprise from facelifts or incongruous calm from botox, and there were quite a few large and expensive sets of breasts in evidence. The men were on average ten years older than the women, and according to Summer, plastic surgery was becoming much more popular among them, too. \n\nThe conversations sounded strange to my American ear. Unusual words and phrases jangled my brain as I moved around distributing plates. Laughter was very polite, but some of whispered gossip I overheard was decidedly not. To most people I was an invisible non-entity, a servant to be ignored. I noticed some lilting Suzie signals drifting up from the crowd. Then carriers and images became clear - my Suzie sensitivity was improving at an alarming rate. There were some ugly overtones I was not used to. Jealousy was there, and frustration, but not much excitement or longing. There was a good deal of what Asa had taught me to call schadenfreude - enjoying someone else's pain. This was sexual, though. A frustrated and ignored wife enjoying watching the same thing happen to a younger woman, a man taking delight in the knowledge that his neighbor's wife was banging the gardener, and two women happily sharing the shocking story of a neighbor's STD. Things calmed down a bit as the emcee began the charity auction. This was conspicuous consumption turned inside out, plus a heaping helping of virtue signaling. Buying a donated week at someone's villa in the Canary Islands was an act of love for the needy children of the poor. A spa day was really 'for the children'. Video vignettes of cute kids helped in the past, and some toasts to the donors lubricated the giving. The naming of a courtyard at a school for a donor was an act of unselfish love. Everyone laughed politely about the emcee's suggestive jokes while auctioning off a week in Ibiza. Donated gift certificates for trendy restaurants were very popular items, drawing inflated bids, as were specific donations for items like buses, computers, projectors, lab equipment, and after school enrichment programs. ",
        "There was a dance floor, but only the few attendees from the under 30 crowd did much dancing. A few folks were drunk, but most guests were a little too tightly wound for that. Summer and I started our clean up at 11 PM. We bused the dirty dishes and collected all the compostable stuff in prominently labeled bins, and the trash in others. The dishes then went into a truck with built in racks, which would be loaded directly into a walk-in dishwasher and be ready for further rental by morning. By midnight we were on our way south back to Wingham.\n\nI could feel Summer's mood through her Suzie. She was tired, but tense. She was excited, but scared. That was my cue!\n\n\"Robbie, we need to talk about two things before we get to my place.\"\n\n\"Yes?\"\n\n\"I live in an old house that is undergoing DIY renovation. The bathroom is finished out, but everything else is pretty rough.\"\n\n\"Rough is okay, but I demand a working bath or shower.\"\n\nShe looked at me funny. \"Why is that?\"\n\n\"I have a little racoon in me. I like to wash something thoroughly before I eat it. Is there a bed?\"\n\nHer Suzie growled at me, pleasantly. \"Yes, but the bedroom is still unfinished.\"\n\n\"Is the bed large enough to spread you out on?\"\n\nMore Suzie, raspy and warm. \"Yes.\"\n\n\"Is the bed strong?\"\n\nEven more Suzie. \"Yes. But one other thing.\"\n\n\"What?\"\n\n\"I also have a dog. She is very territorial, and doesn't like anyone really. She barely tolerates me. I will need to see to her before you get out of the car.\"\n\n\"Is she trained?\"\n\n\"Very much so, by the military. She's pretty aggressive.\"\n\nAfghanistan, military dog, dead husband. I think I get the picture. Thanks to my grandmother, I know a little bit about that. At least a dozen of our Eldee's descendants are on duty at Lackland alone, and two of the high school kids that used to help Grandma with the dogs when I was too little to do it are now trainers there.\n\nWe pulled off the road a way and she parked in front of an old cottage, leaving the headlights on to illuminate the front door. It was old red brick, one story, with a steep roof that was probably thatched at one time, now shingled. There was a tall chimney at either end. It had relatively small windows, but lots of them, and some new and still un-weathered trellises along both sides. They were so new that nothing was growing on them yet. The outside looked pretty much finished -- it must be the inside that was still rough and unfinished. \n\n\"Hold on a minute while I kennel Mallory.\"\n\nSomehow, I knew Mallory must be a Malinois. The van's headlights went out, and Summer turned on the light in the house. When I came through the door, Mallory was already in her metal enclosure. Sure enough, a Belgian Malinois - big for a female -- at least 55 pounds, and very dark, almost uniformly black with just a few tawny highlights. She looked me right in the eye -- just like our Eldee did -- and had that same knowing look. She had a little grey on her eyebrows and face, about 9 or 10 years old was my guess. I also noticed that Summer had latched the little gravity catch opposite the hinges on the door, but not dogged down the stops on the top and bottom. That meant a smart and strong dog like Mallory could exert enough force to distort the cage's shape and open the door, if she needed to. Summer was hedging her bets. \n\n\"Hello, Mallory.\" She cocked her head a little, again just like Eldee did. I felt comfortable with her, but who knows how she felt about me. I was about to try to make myself very comfortable with Summer. I hoped Mallory would agree. \n\n+++++++++++++++++++\n\nWhen the ambulance took off, Dwight began his 'double McGuffin' scam. An obvious email when to an IP address that was supposedly anonymized and untraceable, but when examined by several techniques known to most intelligence agencies, would point to the Russian Embassy. Ultimately it would be discovered that it could have been created by anybody, not just the Russians. The original underlying hack, using the spyware built into the wireless router, might be discovered if someone looked hard enough. Their next bit of playacting was designed to ensure someone would look at things quite thoroughly. Dwight created a spoofed and untraceable (so far as he knew) tunnel into the router and then passed some traffic that was sure to be 'sniffed' and recorded by whoever was monitoring the spyware in the router, and perhaps by anyone else trying to monitor the building. He also sent a small email, via a wireless connection, that was sure to be recorded by GCHQ and perhaps other agencies, if not decoded or read right away. The when and where would be readily discoverable when they got interested. The email fingered another IP, which Dwight then used to hack some of the stranded money, transferring it to the accounts of several known bad actor hackers who had no actual part in his operation. Then he went back to the apartment downstairs they had used as a staging area, where the two techies were waiting, and begin leaving a few clues. \n\nThe shooter team by this time had delivered their patient to a very well equipped but very private and out of the way hospital room where he would convalesce, with a concurrent interrogation that would go on until he revealed what he knew and/or expired. The shooters returned to the building, now dressed in all black and well equipped with suppressed weapons and Kevlar vests. They knocked out the doorman, went up the service elevator, and shot up the place quite thoroughly, leaving lots of bullet holes and several empty magazines behind. \n\nThe techies, not knowing who they were, or why they had come there, fled toward the lobby and were skillfully but not fatally wounded by the shooters. Dwight's \"dying\" body, and his carefully constructed clues, were left behind.\n\nThe other residents of the building made multiple calls to the police, who arrived in less than three minutes. The real paramedics arrived, triaged Dwight, and rushed him first to an actual hospital, followed closely by the two wounded techies in a second ambulance. When they arrived, the head of the ER pronounced Dwight dead and signed the body over to a medical examiner. The two techies were patched up, and the cops took their statements about what happened. \n\nBoth the ER doc and the Medical Examiner had some unfortunate personal baggage that they desperately wanted to remain hidden from public view, and so they had cooperated fully with the agency's requested special protocol. A very complete and detailed autopsy report was prepared, which agreed perfectly with the witness statements, along with all the samples that were normally taken from a body, and all the relevant records were searched and recorded to establish the victim's ID. \n\nDwight \"The Dweeb\" Ebert was dead. All the i's were dotted and all the t's were crossed. Period. End of report. \n\n+++++++++++++++++++\n\nThe interior of the house was rough, but as promised the bathroom was finished and well-appointed with shining white and blue tile and brass, copper, and gold tinged fixtures. There was a huge claw-footed bathtub like something out of a Victorian-era luxury hotel, and a full built-in shower about 8' by 8' with two big shower heads. Summer was a pretty good decorator too. But the order and cleanliness ended at the tile threshold of the bathroom, for beyond it there were ancient, scarred, and yet to be refinished wood floors, exposed walls, cracked plaster, woodwork in progress, and piles of shavings and dust.\n\nSitting atop one of those rough floors in a relatively clear area was a giant antique four-poster canopy bed. It had a wide and thick wooden base that held four ornate cast iron posts about ten inches in diameter at the base and tapering toward the top. Each one looked like it could be a support for a big top circus tent. It was at least 9 feet long and 7 feet wide, and the big wooden canopy just barely fit under what looked like a twelve-foot-high arched ceiling. I envisioned Summer spread out and restrained across its broad expanse and smiled.\n\nBut first, a shower. I waited for Summer to close and latch the big wooden front door, then took her into my arms and kissed her deeply and tenderly. We melted together. She tasted faintly of the raspberry lemon tart she had allowed herself while all the guests were having desert too, and she sounded a rising Suzie signal note that called out to my darker side. This kiss and bath was about as tender as I would be until much later this morning.\n\nShe started the shower up and deftly adjusted the temperature. We soaped and washed each other with a big round white soap that smelled faintly of pears and flowers. We were both a little sweaty and tired, and it felt great to get clean. It felt more than great when Summer's nipples stiffened to my touch, and her Suzie swelled when I cupped her buttocks with my eager hands. There were some big thick white towels on the racks in the bathroom and we dried each other, then I watched while Summer combed out her thick brown hair. It had been restrained in a tight little bun all night, and now it was swinging free and wild. \n\n\"I need something to properly restrain you with, my pet.\"\n\nShe looked faintly self-conscious, but her Suzie signaled trilled. She liked the idea of being the center of my attention. She walked over a corner of the bedroom that had a free-standing clothes hanger rack like you would see in a vintage clothing store, and moved her hand from left to right, pausing to look at items in the rack. Thankfully, she passed by what where obviously some men's ties, and settled on a handful of long silk scarves in assorted colors. Perfect.\n\nI motioned toward the bed, and she sat on the edge and looked at me expectantly. I stared until she cast her eyes down and smiled. I took her right wrist in my hand and tied a red scarf to it. She leaned back, expecting that I would tie her right arm to the opposite bedpost, as a prelude to spreading her out face up on the bed. But that was not my goal. Instead, I pivoted her around, now in control of her arm, and tied it to the bedpost on the opposite side. Then I used a white one to tie her left wrist to the opposite post at the foot of the bed. Her right leg went to the post on the near side to my right, and finally her left leg was dogged down to the post to my left, both secured with floral printed scarves. I pulled the leg ties tight, such that her legs were almost in a 180-degree straight line. She was near the front edge of the bed, such that I could see her lovely light brown pubic hair just over the edge of the mattress, and her amazing buttocks lined up with her thighs in a wonderful display. She was flexible enough that the position was not a strain for her, but I planned to supply some additional tension very soon.\n\nI marveled at her form, and began to very gently caress her. \"Well, my pet, you look quite nice laid out like that. All your treasures are mine to plunder.\"\n\nHer Suzie climbed a bit higher. I used it to tune my caresses, with her upper thighs and the areas behind her knees seeming the most responsive so far. \n\n\"Did you notice that I washed your lovely ass with great care?\" \n\nShe drew a big breath and held it. I said villainously \"Oh, you did notice, didn't you? And you wondered what I might want to do with it, eh?\"\n\nHer Suzie took on a whole new tone. The reality of her vulnerable position was suddenly clear to her, and some of her sensitivities were suddenly clear to me.\n\n\"Well, the answer is yes. Whatever you may be thinking, I am going to do that. I am going to do things you may not have thought of. I am going to do things I haven't even thought of yet. You see, this honesty thing is quite freeing. You know I fancy you, and I feel tender regard for you. I know you are an intelligent and lovely woman, who deserves tender care and respect. But you also trigger a powerful wave of lust in me -- dark and deep longings I can't fully understand myself. Were our relationship different, I might have to delay or suppress my desires.\"\n\nI began to very pointedly manipulate her ass, spreading her cheeks and making appreciative little mouth noises. Her Suzie jumped at each one. \n\n\"But happily, I have already forthrightly revealed my intentions toward you, and you have agreed to do anything for me I wish. So, I can let myself go, and revel in fulfilling my darkest desires with you, unrestrained by any other consideration.\"\n\nHer breathing suddenly became rapid, and her Suzie screamed. Magically, her lovely scent, a tangy and pungent addition to the soap's delicate background fragrance of pears and flowers, wafted into my senses.\n\n\"And since we are being honest with each other, you know you can let yourself go with me. I will never betray you, I will never gossip about you, and I will be gone come September. You will be giving me everything I want, so you might as well tell me about everything that you want. I might just let you have it. But even if I don't, you will have been honest with yourself about it, perhaps for the first time.\"\n\nI touched every square millimeter of her, noting her responses. Her scent became overpowering, intoxicating. I knelt at the side of the bed and began to kiss her right ankle, slowly moving toward her center. Her leg began to shake, and her Suzie signal turned flips. I continued, languidly kissing and tonguing her leg behind the knee and up the back of her thigh. When I reached her now fragrant pussy, I passed gently over it, breathing on it pointedly, but moving all the way to her left ankle and starting the process over again. Her left leg began to shake now. I slowly made my way back to her center, and felt the heat. I began to tenderly kiss all around her ass, never touching her little rosebud. Her Suzie quivered in almost direct proportion to how close my tongue came to it. What a marvelous woman. \n\nHer pussy began to ooze and drip beautifully, a fragrant flower that sorely tempted my inner bumble bee. I began with her outer lips, a confection to be savored and enjoyed at leisure. Her Suzie signal new intensity and need. \n\n\"That's very interesting, my pet. When I kiss all around your sweet little asshole, but don't quite touch it, your pussy gets wetter and wetter. I wonder what would actually happen if I put my tongue in your asshole?\"\n\nShe groaned, deep down in her throat. \n\n\"Perhaps I'll try that later?\" \n\nI returned my attention to her outer lips, and then moved on to her inner lips. They were lovely, tender, and bright pink. Her circulation was excellent. Tasty -- bold yet delicate. Her Suzie signal, perhaps in combination with the pheromones impinging on my brain, was strong and easy to read. I circled my tongue around her clit, careful to supply only indirect stimulation, and her Suzie climbed into the stratosphere. When my face was absolutely drenched with her sexual secretions, I made my way around the bed to kiss her, and rub a good bit of her own juice onto her face. It made her Suzie swoop and soar. I stood and put my cock in her mouth. \n\nShe responded beautifully, greedily sucking me in and using her tongue artfully and enthusiastically, a very promising sign. When she was just getting into it, I popped out of her mouth and circled back around behind her, waiting before I touched her at all. She signaled desire, then need, then desperation to be touched. She was in a frenzy. I turned my hand over and put two middle fingers in her pulsating wetness, and suddenly I was connected to her even more strongly. Either I was getting much better at receiving, or she was feeling some very strong emotions, or perhaps both. I gently moved my fingers in and around until I detected the squishy area that was her \"g-spot\", and then gently moved them just away from it, so as not to trigger her too soon. I then knelt and circled her little rosebud with my tongue, contorting my hand to keep in contact with her g spot. Her Suzie was unmistakable, and served as my guide to get her off. I used my fingers to gently touch her magic spot, listening carefully as her Suzie told me she was just on the edge of orgasm. When she was ready to pop, I thrust my tongue into her ass, once, twice, and then the third time extending and holding it in as far as I could.\n\nHer Suzie exploded, she cried out, and her pussy and ass both twitched several times, and she held her breath. I heard her Suzie change and pause, signaling a refractory period, which meant I should just hold still and not overstimulate her. Her orgasm was strong, and her refractory period was long. Almost thirty seconds later, she gasped for breath as if she had just surfaced from a long underwater dive. Her Suzie began to percolate again, and so did I.\n\nMy fingers lingered over her g spot, and it seemed to crawl and vibrate in response. She came so quickly I barely had time to get my tongue into her ass, wiggling it about enthusiastically. She grunted and gasped again, her legs spasming further apart, tensioning the two silk scarves holding her ankles to their limits and lifting her off the bed slightly. Her ass grabbed my tongue, and I was more than happy to be captured. Her gasping breath was louder and more ragged, and her Suzie was ragged and strange, too. She then hesitated and almost seemed to be frozen in time. Her Suzie told me to wait, so I did.\n\nAfter almost a minute (I counted) she hummed and began to breathe deeply and rapidly, like she was running wind sprints with me. \n\n\"Oh Fuck, Robbie!\" she murmured.\n\n\"Soon my pet, but I need to train your ass more thoroughly to better please me later. Dr. Pavlov and I are associating a stimulus, i.e., my tongue up your lovely ass, as just preceding your orgasm. Once that is established synaptically in your brain, I will substitute my cock for my tongue, so I can fuck your big hot ass and we can both enjoy it. You are not ready for my cock in there yet, but soon you will be. I am an enlightened and kind master, am I not?\"\n\nHer Suzie soared in equal parts fear and excitement, just the proportions I was hoping for. Before she could answer, my fingers found her little spot again, and we triggered two more tongue penetrations followed by orgasms. Each orgasm was stronger than the ones before, and her refractory were periods longer too. At this rate, I would soon need to give her half an hour to recover. \n\nWhen her Suzie had returned to its wanton state, I put my hands on her thighs, and entered her pussy with everything I had to give her. She grunted and exhaled with each thrust, and we pumped her Suzie swing higher and higher. I couldn't quite hit her g spot with my cock in this position, but she tensed her legs against the scarves and rotated her hips slightly with each of my thrusts, raising her up off the bed and increasing my penetration and my angle of attack. Her legs were powerful almost beyond belief. My balls were slapping against her outer lips and I felt the rhythm of the heat building in us both. Suddenly her buttocks clenched and she growled, her Suzie burning its way into my lizard brain. Her biggest orgasm of the night rumbled through both of us, reverberating back and forth. I had to force myself to stop thrusting and let her recover. I felt like one of those rats with a push bar switch to energize a direct wire electrode in my brain, and I just wanted to keep hitting it again. But it would be even better for us both if I could delay my gratification a little. She signaled readiness, and I began thrusting again. I was on autopilot, but right on target. We were coupled together and when her orgasm grew and blossomed, I stopped moving and enjoyed it second hand via her Suzie signal. I suddenly realized I had a problem. Unless I could time it perfectly and come just before she did, I might be unable to come without hurting her when she needed me to pause. I recalled a lecture from Engineering 101 -- sometimes you can turn a bug into a feature if you advertise it properly. When she was ready, I started moving again, willing myself to let go and come as soon as I could. Time to place my advert, as they say around here. ",
        "\"My pet, I am almost ready to come, and when I do, it is going to be in your lovely mouth. I expect you to suck me dry and swallow every drop, making me feel respected and cared for!\"\n\nShe bobbed her head and cried out \"Yes, Master!\" and now I knew my upcoming product release would be a success. \n\nSoon the gusher arrived, and I rushed around the bed. Her earlier efforts proved to be a good estimator of her considerable talents, as she sucked me even more enthusiastically and as completely as I had demanded. \n\nThere is nothing like an English Summer. I released her from the scarves and we cuddled on the bed. She naturally began toying with my chest and soon noticed the direct connection between tweaking my nipples and making my dick jump. \n\nShe smiled and said teasingly, \"My goodness Master, we sure have sensitive nipples, don't we?\"\n\nI heard a little sneaky Suzie emerging from her broad contentment signal. I had planned to just relax and enjoy her ministrations to my chest, but I turned my head toward the edge of the bed and was suddenly looking at a big black face with reddish yellow eyes and black pupils, and a very impressive set of teeth glaring at me from about a foot away. Mallory the military Malinois had released herself from her kennel during our noisy little fuck fest, without either of us noticing it. I heard my grandmother's voice, saying \"When you train a dog, you are the alpha male, and you have to act like it.\"\n\nThere wasn't much difference between freezing in place and staring her down, so I told myself that was what I was doing. We stared across the twelve-inch gap for what seemed like a long time, and Mallory must have concluded that I had not harmed Summer. She looked away, held her tail up, and then curled up primly at the foot of the bed. \n\nSummer giggled. \"My word, Robbie, you actually have the Mallory seal of approval! I would not have believed it if I hadn't seen it myself. I guess we are both your little bitches now, Master. I hope you can handle us both.\" That sneaky Suzie emerged again. \n\nI tried to laugh in an appropriately masterful way. \"SHE is already well trained, but YOU have just begun your training. But you do show some promise. I am sure I can keep you both in line.\" \n\nSummer giggled softly, pulled the comforter up over us, and snuggled against me.\n\n+++++++++++++++++++\n\nDwight left the hospital dressed as a female nurse, complete with makeup and padding to enhance his bust and hips, and some little rocks in his moderate heels to modify his gait. He had a route mapped out to escape most cameras, and he ducked and turned his head to avoid having the others capture his facial image. He walked a circuitous route to St. Pancras station and boarded with a business premier ticket, so he could catch the available Eurostar train when he arrived and get on at the last minute. The British passport read Christine Mellette Cowan, and her credentials said she was a registered nurse employed by an air ambulance service. \n\nThe train went all the way to Brussels, about a two-hour trip. He settled into a lounge seat and ordered a meal in his best female voice. This was his first meal of the day, and adrenaline reactions always made him hungry. He checked his phone for text messages, and finding no encoded alerts, relaxed for the first time today. But no sleep yet.\n\nWhen the train arrived at Midi/Zuid he walked to the nearby shopping area and spent two hours wandering about and making sure he was not being followed. He took a taxi to Aviapartner and boarded a very ordinary looking Learjet 45. Lightly loaded and full of fuel, it could fly direct to Halifax. He would change identities in route. He was surprised to find he was going back to his original, actual birth name. He had been Dwight Ebert since he was first recruited at 14, before he went to MIT, and had used ten other names in the field. \n\nUsing his 'real' name now meant either he was finished at the agency, or he was going to be in a public facing role. Either way, his field days were over. Carmencita would not be marrying Dwight Ebert as she expected, but she would be happy that his risk profile would be much lower. Hopefully she would like life as Mrs. Alexander Walton. \n\n+++++++++++++++++++\n\nI woke up a little bit disoriented, then remembered I was at Summer's house. She was moving, but I pretended to still be asleep. She padded off to the bathroom, but she came back in just a few minutes. Curiously, she watched me sleep for a moment and then took two scarves from the bedposts and tied them up on the bed's canopy, just about midway between the head and foot of the bed. She slipped silently back into bed. I did my best to breathe evenly and seem to be asleep. She gently pulled the comforter down to expose my chest, and began to gently blow on my nipples. \n\nMy reaction was automatic and completely involuntary. I felt my dick stiffen and make a tent in the comforter, and I heard Summer launch a sneaky little Suzie signal when she saw it. She pulled the comforter off and began to kiss my nipples, licking and teasing them, and sending my cock rising even higher. Then she kept one hand on my nipples and engulfed my dick with her mouth, bringing me to full attention.\n\n\"I like that tent you made Robbie! I think it's time I went camping!\" \n\nShe effortlessly swung her leg over me and impaled herself slowly. She was wet and burning hot. It felt like heaven on earth. She grabbed the two scarves she had prepared, one in each hand, and began to move like a big monkey swinging through the trees. A strong pink monkey with a prehensile pussy -- it grabbed me and gripped me incredibly, massaging and milking me mercilessly. All that work she had done climbing, moving hoses, and rescuing citizens had built her up into a fucking machine, literally. \"Don't wait for me, Robbie. I want to feel it all hot and nasty inside me!\" \n\nHolding the scarves and moving herself to and fro with the bed's canopy over her head, she looked like a parachutist steering her descent by moving the shrouds of the chute. She was certainly able to make me shoot. I felt the tide rising and did not resist, and found my head turning left and right involuntarily as I felt my balls boil. I grunted and saw stars, and she gripped me even harder and I exploded up into her. It seemed to shoot out of me like hot oil and she grunted with me. She groaned and milked me and moved her hips in a circle like a controlled dance move. She had complete control of my dick, as if her pussy muscles had a mind of their own. Perhaps I had previously missed out on this female firefighter thing, but now I highly recommend it.\n\nShe could have easily kept kneading my breadstick until it began to rise again, but suddenly she stopped and laughed. I followed her eyes to the side of the bed and saw Mallory, with her leash in her mouth and both front paws on the bed, looking at me expectantly.\n\n\"Looks like you have been upgraded to primary dog walker, Robbie. Quite an honor.\"\n\n\"Isn't she reliable off lead?\" I wondered.\n\n\"Perfectly, but our local constabulary can be very concrete thinkers. When I take her to town, they would love to harass me by issuing an off-leash violation notice. So, I have trained her to fetch the leash whenever we go out. We have to get going early this morning on prepping tonight's event, so while you walk her I will start my shower.\" \n\nShe giggled again and walked to the bathroom. I watched wistfully as her big beautiful ass disappeared around the corner, proud to know that she was carrying a bit of me inside her as she did. \n\nShe stuck her head back around the corner. \"By the way, you needn't worry about the consequences of your hot deposit in my happy bank, as I am properly medicated to ensure that haploid does not become diploid.\" I didn't even know she was a biology major. She disappeared again into the bathroom.\n\nI slipped on my pants, shirt, and shoes, finding it surprisingly cool, and took Mallory outside, off leash. Someone had used a skid steer, or whatever the English equivalent was, to blaze a running trail around what I presumed was the perimeter of the property. They had removed all the little trees and bushes on that course, and graded the path relatively flat. I followed the trail, asking Mallory to heel. She did, and responded to most of the hand signal commands my grandmother taught me, too. But when I tried to send her out, and turn her with gee and haw, she just looked at me uncomprehendingly. I now knew she had never been taught to herd stock, which is not surprising, and it made me wonder just exactly how she had been trained. She also seemed hesitant to do her business, which all our dogs were trained to do on command when the opportunity presented itself. Finally, I saw a little metal can, a scoop, and some poop bags on a chair on the back porch. Was this dog really that fastidious? \n\nI grabbed the bags and she ran toward me and barked. She squatted and dropped a big one, looking very relieved. She watched, holding perfectly still, until I scooped it up in a bag and deposited it in the can. \n\nSuddenly the memory of Suzanne picking up poop on the trail around Town Lake in Austin, and Ivor Greentree's reaction to the sight, pulled me up short for moment. Mallory barked happily, then squatted again and urinated primly on almost the same spot. What's up with that? She bounded toward me and did a perfect heel, sitting smartly at my left and looking me right in the eyes. \"Good girl! Let's go see Summer.\"\n\nShe walked in lockstep with me to the back door of the house, and paused to wipe her feet on the mat before going through the door! I would sure like to know who trained this dog, and what for. How would I go about finding out?\n\nSummer greeted me at door in her jeans and tee shirt that were normally worn under her very professional looking smock. She looked great, suffused with a peaceful glow that I hoped I could take some credit for. She hurried me into the shower, promising that she would make us brunch when we arrived at her 'prep kitchen', giving me another reason to hurry. My stomach growled, underscoring my hunger. She laughed. \"You and Mallory are a lot alike.\"\n\nShe fed Mallory, which made me wonder when the morning meal would require Mallory to poop again. I tried to ask Summer about that, but the noise of the shower and her movement around the house made conversation impossible. I had a whole list of topics to cover on the drive today. \n\n+++++++++++++++++++\n\nDwight found it strange to be traveling openly under his real name, which now seemed unreal to him. He had come a long way since the agency recruiters, his mom and dad, and his dad's old commanding officer, sat in their living room. His dad said it was like a recruiting visit from a Division 1 football coach. They had signed all sorts of non-disclosure agreements and after graduating from high school at 13, young Alex became known as Dwight, and began an intensive summer camp before enrolling at MIT.\n\nThings had been busy. There had been 'summer camps' ever since then. The week that he was supposed to use take to make his way through Canada and back to DC would be the longest and most leisurely vacation he had had since that fateful day. What would happen when he got back? Would there be an exit interview or a new job?\n\n+++++++++++++++++++\n\nSummer drove towards the prep kitchen, and I was feeling talkative for a change. \"Summer, I have to be honest and tell you that your ass is not as great as I thought it was going to be.\"\n\nHer face fell and she gripped the wheel angrily.\n\n\"It's much, much better! I am enchanted.\"\n\nShe grinned, barely suppressing a wide smile.\n\nI changed direction. \"Is this another Okie party?\"\n\nShe laughed. \"That's OKS. Old King's Scholars. Yes, it is, but with some additional qualifications. The guy who threw the party last night was not OKS, but his wife is. He threw that party to try to get in with the crowd that is attending tonight's event. The OKS big donors -- either hugely wealthy alums or big donors who wish they were alums. People who give enough money to have fields, labs, buildings and entire schools named after them. Politicians, generals, admirals, captains of industry, media stars, and some minor royals. Much more demanding than last night's attendees. Both of my sick helpers will be recovered and on duty tonight, as will two other temps I use, and you. It's a tough crowd, but it pays well.\"\n\n\"You are OKS?\"\n\n\"Technically, yes. I went to school there, and I graduated, but I was a day student because my father taught there. We never could have afforded it otherwise. I am a yeoman among royalty, especially with tonight's crowd. \"\n\nNow I wanted to know more about Mallory. \"Who trained Mallory, and why is she so weird about doing her business outside?\"\n\nSummer looked worried. \"I'm not sure how much I should say. I don't know that much. My husband was SAS, and Mallory was a parachute dog. But that's really all I know. I'm not supposed to talk about it, even after he is gone.\" \n\n\"We just fed her. What will she do when she needs to go again? It will be a long time until we get back.\"\n\n\"I'm glad to see you are concerned about her. She's funny. When I'm not home, she goes out of her doggie door and treks way out beyond my property to void, and then digs and covers it up completely. It's almost like she doesn't want to leave anything behind that could be used to track her back to my house. The doggie door is keyed to her chip, so it's quite secure, although anyone who tried to break in would get quite an awful surprise from Mallory.\" \n\nIt might not be almost like that, it might be exactly that. That would take a lot of work to train, and there had to be a good reason to do it. I would have to do some research.\n\nWhen we reached the prep kitchen, it was a beehive of activity. Summer ran around like an orchestra conductor on Adderall, clearly under pressure to get things just right. She paused a moment and whipped up two quick but very fluffy omelets, using just the egg whites for hers and giving me three whole eggs plus the yolks from her two. She added what they call a 'banger' here to my plate, and retrieved two chocolate chip cookies from tin up high on the shelf and placed them on my plate, all while seemingly ignoring me and yelling at three different people about four different tasks. This woman may be perfect.\n\nThis party was 76 people, less than the 100 from last night, but with more courses of more elaborate food. One of her helpers tried to talk her out of Beef Wellington, as too much work and too high risk to make 76 at a time, but Summer was not amenable to changing her plan., especially since she had already submitted the menu and it was approved by the client. \n\nOnce she was satisfied that the early courses were on their way to completion under someone else's supervision, she carefully watched an older man in a chef's hat who poured out seven identical cakes and started them baking. Then he heated up some big pots, laid a thermometer next to each one, and started dissolving sugar in distilled water in them. Summer opened a refrigerator and brought out some half round steel molds that looked like melted metal misshapen animals and put them each on a white china plate on a worktable by themselves.\n\nThe man complained that he knew best how to make animals, and Summer patiently explained that he could do it anyway he wanted if he would go somewhere else and forget about being paid, but otherwise she would do it her way in her kitchen. He looked miffed and stood aside, looking on with a jaundiced eye and obviously hoping her plan would fail. It reminded me of one of those screaming and yelling cooking shows that Nora liked to watch on cable at her coop. \n\nShe watched all the thermometers, then took one pot and put it in a water bath to cool a little. When it was ready, she picked up the pot, stuck one of those wooden things you see in ads for honey in it, and proceeded to 'weave' strings of melted sugar back and forth across the cool molds. The sugar set in to a solid almost immediately, and she moved on to cover the other five molds in the same fashion. I thought I recognized some of them, but others I did not. The sugar animals were carefully removed from the molds and placed aside. Then they repeated the process again doing seven more. While the sugar animals were setting, 14 cakes were iced and decorated in various colors, then one sugar animal was carefully placed atop each on, and then each cake was placed in a sturdy looking white cake box.\n\nWhen the last one was complete, Summer sighed tiredly and spoke in my ear, \"One box for each boarding house, plus one for my crew when we are done. You and I will transport these, and they must arrive undamaged.\" The rest of the food was packed up in color coded and numbered boxes, and Summer directed the placement of each one into three cargo vans to be driven by her assistants. \n\nWe loaded the cake boxes into our van and she secured them with bungee cords to hooks built into the van's interior. \n\nOur little caravan then headed out, Summer driving slowly and carefully to avoid jostling the cakes. When we arrived, the scene was even more frantic, with Summer directing everyone and everything in accordance with her vision. The cake van was parked in a shady spot and would be unloaded last. Two of the vans had big microwave ovens in them. When there was a break in my unloading chores, I peeked around the corner of the house. It was not quite as big as Abelard Peter's castle, but it was in the same class, and more modern. There was a huge stage, reminiscent of the one at the Circuit of the Americas, set up in the back garden, several acres worth, and a seating and dancing area set up in front of the stage. Several huge speaker and amp stacks and a lighting system foretold a concert and stage show in our future. \n\nGuests were arriving and milling about in the front garden, and at the appointed time, they filed around a garden path to the tables set up between the house and the back garden. There were 13 tables, each with a big centerpiece that looked a lot like the sugar animals on the cakes. People were apparently seated by which boarding house they were in when the attended school. \n\nA soup course emerged from the microwaves first, and with seven of us to run the food to the tables it was soon served. Appreciative nods and noises were made, so Summer was off to a good start. Two big boxes produced salads in bowls, which were also approved and consumed quickly. A quick serving of lime and mint sorbet cleared the sophisticated palette. \n\nI was amazed to observe the guests while I ran food. This was the crowd the Tattler wrote about, in the flesh. It looked a lot like the English Gran Prix crowd that had accompanied 'El Supremo' and Abelard Peters to Austin in November. Very expensive clothing, especially the women, and major hair-dos. Plus, virtually every woman wore jewelry that would have required a phone call to the insurance company before leaving the house. I had noticed some police looking folks wandering the grounds and patrolling the car park. The conversations were muted and seemingly polite, which meant I probably didn't grok the undertones. I thought I recognized some of them -- maybe newsreaders on the BBC, or CNN, and a guy who sure looked like he belonged in the House of Lords. \n\nSummer nearly twisted off from the tension as we did the final heating and served the beef, but it too was very well received. Summer grabbed me and rushed me out to help her with the cakes, while everyone else cleared the plates. There was apparently a proscribed order for placing the cakes -- youngest houses first and oldest houses last, and in a break from tradition that set tongues wagging, the boys and girls houses were done in strict chronological order, intermixed with each other. I was lucky enough to be able to associate the sugar animals on the cakes with the centerpieces, because otherwise I had no idea which cake belonged where. There was polite applause as each cake was placed, and when all were done, the senior OKS and each table was charged with cutting the cake. A few if the old guys cut the cheese, too. We managed to place them all without mishap, and Summer visibly relaxed. ",
        "I did too, until an old guy in a dark blue suit and a black tie stood up, held a microphone up to his goblet and tapped it with his spoon. The microphone's signal had apparently been feed to the speakers and amps on the stage, and the crystalline tone rang out loud and clear, getting everyone's attention. \n\nI also noticed that the dark blue suit the guy was wearing also had yellow bands at the sleeves, and there were a host of medals pinned to his chest. But when my eyes finally focused on his face, I could not miss the incredible bulbous nose. He looked like a thirty years older version of my summer boss, Oliver Hastings Harrison. He tapped the glass again, and spoke in an authoritative voice. A fleet admiral voice? \n\n\"Let's all thank our own Summer Mawn for a marvelous dinner!\" Applause range out, and Summer beamed. He sounded just like Oliver, too. I suppose he would consider me a 'snotty' also.\n\nShe leaned close and said, \"That's our OKS Admiral, Huxley Hastings Harrison, or 'Triple H' the chairman emeritus of the association. He can put the arm on anybody in the country to raise money for the school, and tap alums for even more.\" I sure hoped his son wasn't here tonight.\n\nTriple H continued. \"We also want to thank The Musical Box for performing here tonight, ahead of their upcoming fall tour. Their music is appropriate to our 1970's theme tonight, even if some of the members of the original band they give tribute to went to Charterhouse.\" A disapproving murmur went through the crowd. \n\nSummer leaned into me again. \"You are going to have to dance with me Robbie! I hope you can dance.\" I could, but I was much more comfortable dancing with that big black hood hiding my face, and 50 naked women on stage deflecting the audience's attention. Somehow, I didn't think that unique tradition was going to catch on with this crowd. \n\nSummer hooked my elbow in hers and said, \"Let's lose these smocks in the truck. I have to change too.\" The music began, melodic and electric at the same time. I recognized the song from one of Ralph's favorite vintage vinyl LPs. We went back to the truck, and I was glad I had worn khakis and a white shirt with a collar rather than jeans and a tee shirt. Summer slipped off her smock and tee shirt, giving me a flash of excitement inside the van, and put on sheer white blouse over her black slacks. She looked great, and suddenly I wanted to dance with her. Most of the dancers looked like they had last danced in the 1970's, but there were a few people our age. Summer may consider herself a yeoman, but she danced like a princess as far as I was concerned.\n\nWhen the band took a break, we joined the rest of the serving crew next to where the vans were parked, and Summer served us pieces of that last cake, and congratulated us on a job well done. The cake was damn good and had a creamy middle cheesecake layer, just the sugar hit to tune my Suzie receiver up for later. She then said she had to go work the crowd for a while, networking for more food gigs, and that I should meet her on the dance floor when the band started their second set. Meanwhile, I hung around with the rest of her crew, helping to load the truck.\n\nJackie, an obviously gay guy with two earrings in one ear and three in the other and some funky tattoos, spoke to me. \"I reckon you are the one that gave her that glow. Good job, she needed her ashes hauled. She mourned her husband good and proper for a year, but it was time she got back on the horse. I prefer men me self, and you look like you can deliver the goods, eh?\"\n\n\"I'm not sure if I should punch you or laugh.\" I said.\n\n\"It's a compliment mate. We both care for Summer, but I do it in a purely Platonic way. But your ideal solid is what she needs most right now. Just be careful that her fucking dog doesn't kill you. That's the devil dog from hell if you ask me. Damn bitch won't let me come in the house. Almost scares me straight!\" he giggled. \n\nThe band returned and played a long set, including some slow songs that I could hold Summer during. The rest of the crew left soon after that, but Summer and I stayed to the end, dancing and hugging. It turned out to be a perfect evening. What I needed to make it even more perfect was some hot and funky Summer.\n\nWhen we got back to her place, Mallory bounded out and circled the car, barking happily. Summer fed her immediately. Then she locked the door and said, \"Let me get a quick shower!\" \n\nI know I had used this line before, with Suzanne, but I was trying to forget Suzanne, and it sure seemed appropriate with Summer, too. I began to strip her, roughly. \"You are a gourmet cook, my pet, and you should know that sometimes, even the sweetest meat tastes better with a little salt on it!\"\n\nI unbuttoned her blouse, which I had been dying to do ever since she put it on, and began to kiss her neck, tasting the salty sweetness there. I removed her blouse completely, and her Suzie waxed large, and she turned her head, expecting me to kiss her mouth. She was surprised when I moved her arms up over her head and began lick her armpits. But her Suzie liked it, a lot. I kissed and licked every salty square millimeter of her, enjoying it all, and by the time I got to her frothing pussy, it was a heady admixture of her funky perspiration and her sweet juice. Just right!\n\nI lost myself in it, and had to use all my willpower to hold still after she came she the first time. Her orgasm sent powerful Suzie waves through my senses, it seemed her orgasms were growing in intensity each time she had one. I needed a few more data points to test my theory, however. When I came up for air 30 minutes later, I was exhausted, but she was not. \n\nI sat back on the floor next to the big four poster bed and panted like a dog. Mallory moved around from her normal guard post at the foot of the bed, I guess to see if Summer or I were injured. Her nose flared, and to macro-osmotic creature like her the panoply of odors emanating from me must seem like some sort of riot. She sniffed, made a funny noise, and then curled up again at the foot of the bed. Crazy humans.\n\nSummer, to get my attention, made a deliberate and dramatic clearing her throat sound. I looked up so see her perched on the edge of the bed. She had hooked two of the scarves over the canopy above her, and grabbed them with her hands to hold herself up right over the edge. Her legs were spread out like a gymnast doing the splits, pushing against the bed to elevate her hips about a foot above the bed. This had the effect of holding her fragrant and shiny snatch about six inches above the sheets.\n\n\"Shouldn't we do some more training, Master?\" I didn't like her sarcastic tone. \n\n\"Careful what you wish for my pet! I may advance your training schedule, and introduce you to spanking therapy.\" Her Suzie pinged and cried out encouragingly. \n\n\"My Master knows best.\" Her tone was still challenging. She brought it on herself, and I would bring it home for her. \n\nShe took to it like a duck to water. I gave her three hot hard spanks on each cheek, listening to her Suzie resonate, modulate, and mutate. It grew steadily louder in step with the growing rubifaction of her perfect buttocks. They sang to me like massed choirs.\n\n\"Your lovely ass is even better with a hint of color, my pet!\" I gently caressed her, touching only the reddened and warmer territory, then kissed it gently. \"It may cause you some pain, but it brings me such joy to see it. You are so beautiful.\" \n\nI selected several areas flanking the red territory, still untouched, and gave her five more on each cheek. Her Suzie signal grew in anticipation just before each strike landed. She liked being the center of my world, which she surely was right now, and the pain added to her excitement, rather than subtracted from it. Could she do what Millie and Candy could, and come from the pain? Perhaps she could if trained properly. I will have to review my training plan, but right now I should keep my focus on training her lovely backside to accept my cock.\n\nA few more spanks and her entire ass was a lovely red. I gave her a few more tender kisses, then back to my real assignment -- building up her reflex to enjoy anal penetration. She gulped when I put two fingers in her pussy, but pushed back against the motion, bringing them in deeper. She was hot and wet and wonderful. I located her g spot and teased all around it, listening to her Suzie for fine guidance. She rotated her ass up to better expose her anus as she sensed me bending over to begin kissing her. What a lovely woman!\n\nI licked her gently, moving ever closer to her little rosebud, reading the signals. I was tuned in -- I was fascinated with making her come. I sucked her perfect ass flesh strongly, refreshing her pain memory and leaving new hickey marks. They were beautiful. She was beautiful. My fingers played her little wet internal keyboard, and she came so fast that I had to hurry my tongue into her to pair stimulus with response. I was more careful and calibrated with the next two orgasms, which were powerful, requiring longer waiting periods for her hypersensitivity to wane and my head to clear from the amazing Suzie wave fronts she sent. As soon as she signaled that she was ready for more, she leaned her head backwards and spoke to me, looking like one of those strange videos with the upside down speaking mouths. \n\n\"I'm ready, Master! Please take my ass.\"\n\nWhat a wonderful invitation, and her Suzie told me she meant it with all her heart. But a Master has duties, and I wanted to give her the maximum thrill when the time came.\n\n\"You are likely ready, my dear, but you do not meet my personal and very exacting standards yet. I want to enjoy your lovely butt, but in the best way.\" A shiver went through her Suzie, and a delicious inspiration shivered through my head.\n\n\"I will need to maximize your readiness, my pet. Sometime in the very near future, you will count my strokes to redden your lovely ass, and when the count reaches 50 on each of your lovely buttocks, I will take you like you have never dreamed possible!\"\n\nShe shook while hanging from those scarves, and then lifted her legs up and pointed both out in front of her, and away from me. What strength and control she had. She was testing mine. She then turned toward me and swapped her hands on the scarves, so she was facing me, and then spread her legs again, moving them like a big bird lazily flapping its wings. She stared at me in direct challenge, and a crafty Suzie found its way into my consciousness.\n\nI had to get back on top. I wrapped both her wrists in the scarves so she could not release them, and grabbed both of them in my left hand and then gripped the canopy of the bed with it, holding her arms trapped above her head. I stood up on the bed and grabbed her head with my right hand and guided my cock into her mouth. By pulling her head with one hand and pulling myself up with the other, I could fuck her mouth very effectively. I was large and in charge. I liked it, and so did she. I came quickly and she took it all. There is nothing like an English Summer.\n\n+++++++++++++++++++\n\nPillow talk with Summer was very different than with Suzanne. Summer talked half of the time, and demanded that I fill in the other half. She was like a trained interviewer, and given my promise not to lie to her, she developed a lot of information fast. She also gave up a lot, telling me about her family, school days, and her husband. I withheld everything about Suzanne, and Nora didn't come up in conversation. I begged off details about my relationship with Lara, repeating my promise not to gossip, but telling her there was a lovely young lady back in Texas whose needs led me to learn how to be a Master to her. This resulted in Summer learning about the July 4th wedding and my trip back to attend it, and the fact that I had introduced Millie and Jay, but without the gory details of my sexual relationship with Millie, and our threesomes and foursomes. \n\nThe Sunday before I began my intensive training, we had an extended session of 'conventional' sex which caused Summer to talk about her history. \n\n\"You have certainly introduced me to many things I had only read about in the past, Robbie.\"\n\n\"Like what?\"\n\n\"Well, my husband was very passionate, but very conventional, I guess you would say. He was brought up in a fundamentalist Christian sect that some here called a cult. They were a very unusual combination of British group that used to be called Dispensationalists with new age Latin American Charismatic Pentecostals. They believed that the world would be destroyed in a giant, cataclysmic earthquake before the rapture, and no one would be saved unless everyone was converted to their beliefs. They also believed that only sex that led directly to pregnancy was godly, and that any other sexual practices came directly from the devil. So, my husband was limited to traditional missionary position intercourse, at night, in bed, and under the covers. He was very vigorous and frequent, but never inventive nor adventurous. So, everything except that is totally new to me, as I wasn't with anyone other than my husband before you.\"\n\nMy mind was temporarily blown. She was so passionate and open with me, but so far had not told me about any of her fantasies. I realized that what I had considered normal foreplay and variety was radical and daring for her. I wanted to know more about what else she wanted to try. \n\n\"What was your husband's name?\"\n\n\"Darby. Nelson Darby.\"\n\n+++++++++++++++++++\n\nThe reason Drummond McFadden and I were assigned to see the surgeon become clear Monday morning, as we both passed our physical exams (which included EKG's on a treadmill) and were soon enrolled in a week of fire safety training. \n\nApparently, 'fire safetiness' was right next to godliness in the minds of Chunnel managers, and we were going through the same skills training that first line responders went through. We were assigned to memorize the labeling nomenclature and functions of all the various passageways between the central tunnel and the two main tunnels, the two designated firefighting stations and their approaches, the decision process that engineers would use to pick which location to go to before stopping if a train was on fire, and the locations and indications of the heat sensors installed to help locate a fire. We reviewed videos of the major fire events in the past, one of which had shut down one main tunnel for months. \n\nSummer was a major source of help, because apparently Kent FRS people went through the same training, and had lots of 'tribal knowledge' about how things were done. There were annual simulated emergency drills, which Summer knew all about, and she quizzed me about the stuff that was on the exams they had to pass. She gave my nipples kisses when I got answers right, which was an amazingly effective training tool, although unlikely to find widespread official adoption. As a result, when OHH (Oliver Hastings Harrison, as opposed to HHH, Huxley Hastings Harrison) drilled us on hypothetical emergencies, I did quite well. He was obviously surprised, as was Drummond. He thought he had the inside track on me because several Strathclyde engineers from classes before him were here and sharing information with him. I bet my lessons were much more enjoyable than his. Drummond explained that OHH had adopted the training methods the Navy used for nuclear submarine officers to respond to emergencies and make decisions about managing the reactor. \n\nBetween her changing shifts, overtime from summer grass fires, and my demanding and very unpredictable schedule as set by Oliver Hastings Harrison, we hardly were able to fall into a routine. But there was some predictability. Summer rarely had to work both Saturday and Sunday, and Harrison, perhaps as a devout Church of England member, rarely scheduled any training on Sundays. I didn't work any of her catered events after those first two, because her regulars needed the hours and pay, and perhaps my waiting in the wings made them a little less likely to call in sick. \n\nAs a result, we usually spent about four nights a week tougher: sometimes at my place when she had morning report at the station in Wingham, but usually at her DIY house. Sundays became our unofficial 'training day' that we both looked forward too.\n\nBy the time I finished my fire training week and began learning the operations models on how to schedule and manage the flow of people and cargo, Summer was ready for the next major milestone in her sexual training. \n\nSo was I."
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "foursome",
        "anal",
        "england",
        "chunnel",
        "fraternity",
        "malware",
        "threesome",
        "spanking"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-37"
}