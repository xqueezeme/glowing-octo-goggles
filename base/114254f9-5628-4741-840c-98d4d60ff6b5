{
    "title": "The Last of Her Kind Ch. 07",
    "pages": [
        "Hi all! Here it is, the final chapter of The Last of Her Kind!\n\nNew to the story? Start at Chapter 1. This is the end of a novel, and the story has been building to this.\n\nI would like to thank you, the readers, for being so supportive of this story. I know it wasn't for everybody, but I certainly I hope I captured a few of you in my web. This tale started as an attempt at a short story, but Ana and Darren deserved far more than just twelve thousand words, and I've been very pleased with where this has ended up.\n\nIf you enjoyed this story, don't forget leave a rating/review and follow my bio, or even just check it from time to time to see what else I am writing. The readers here at Lit are constantly inspiring me to become better, and I hope to bring you plenty of literary delights for years to come.\n\nWhen Worlds Collide\n\nLeaving the wheelchair behind in that roadside diner had felt a lot like losing a friend, leaving an empty feeling in Ana's gut as she scurried across the roof of the restaurant. The human Ana had pretended to be was encapsulated by the battered conveyance now sitting empty in the bathroom, waiting quietly to be discovered and eventually discarded.\n\nTears formed in her eyes as she snuck down and through the parking lot, her heart pounding in her chest. She was truly alone, and officially scared, her stomach churning while her eggs formed.\n\nWhen she had heard Darren's voice, she had been so startled that she almost didn't answer. She didn't deserve such a stroke of luck, didn't deserve his help. Yet he had insisted, tucking her away in the back of a stolen station wagon and taking to the open road. They had ridden in silence while she slept in the back, her hands across her slightly swollen belly. She wished she could ask her mother or a sister what to expect, knowing only that the time to lay them was coming fast.\n\nOccasionally a bump in the road would wake her, and she would open her eyes and look out the rear window, her gaze on the night sky. It had been awhile since she had seen so many stars all at once, and she watched them, the vibrations of the road helping her to relax. Ana spun a few small webs to make herself comfortable, using them like a makeshift hammock.\n\nThe bag of books was the only thing she had brought with her, except for the roll of money in her pocket. While awake, she looked at the covers of the books, barely able to make out the shapes in the dark of the car. These stories typically had a happily ever after, and she wondered if maybe Darren's arrival was a sign that she could have one, too. He had come for her, despite being told not to. Why? What was so special about her that he would risk his life? Why not go the other way, forget he had ever met her, move on?\n\nWas it her? Did he really like her? Darren was damaged, there was no doubt about it, but did that damage mean he couldn't see her for who she really was? Or did it mean he could see past her monstrous nature? It was hard to tell.\n\nOr could it be the eggs? Did he feel responsible for the life growing inside of her? He would probably be the first man to see his own children hatch, save for maybe the scientists that had experimented on the Arachne during World War Two to make super soldiers. Her mother had rarely talked about it, but Ana knew that there had been a breeding program. Jews had been forced to breed, and the resulting children had refused to take orders. Thinking it was a deficiency of race, the Germans themselves had transitioned to Aryan blood, hoping that the brood would take orders.\n\nThey didn't. The Germans had disguised the resulting bloodbath as an Allied bombing, and that's usually where the story from her mother ended.\n\n\"There's no way it could be them.\" Darren whispered from the front seat. It was like he was speaking with someone, and Ana lifted her head, wondering if she had tuned out something else he had been saying.\n\n\"What?\" Her glasses had gone crooked, and were now smudged with fingerprints. Pulling them away from her face, the world came to life around her, and she looked out the back window of the wagon at an approaching light. Over the lamp of the motorcycle behind them, she could make out the intense faces of her pursuers. \"Oh shit!\"\n\nWhen the Order drew near, she watched them pull alongside the car, but something wasn't right. Though her eyes saw them pull ahead of the car, the sound coming from outside the wagon told another story. As the figures in front of the car exploded into motes of light, she watched them appear out of the darkness, the wand in Cyrus' hand glowing brightly when he lifted his arm to fire it.\n\n\"On your left!\" Her words weren't quick enough for him to dodge the blast, but he was fast enough to slam the wagon into the bike just as the spell went off. Darren lost control of the car and was soon driving down the rocks, the car flipping. Ana got tossed around, but her instincts took over, her legs splaying out to support her weight. Her heightened senses seemed to slow time, and she watched her books fluttering around inside the car along with Darren. The pores on her body opened, coating her upper torso and hardening into an inky black shell.\n\nSeeing an opening, she grabbed Darren by the shoulders and yanked him into the backseat. Smashing a window with one of her legs, she timed her jump so that the two of them were launched skyward, falling through the darkness. The car stopped its descent, smashing into sharp rocks and flooding the air with the cancerous smell of gasoline.\n\nWrapping Darren with her arms and front legs, her other six splayed out and they rolled across the ground together like a giant tumbleweed. Pain shot up from one of her legs when it broke, and then more pain when the tip of another leg got wrenched free in between a pair of rocks.\n\nThey came to a halt, and Ana let out a shriek of rage, dropping Darren to inspect the damage. She had lost the leg at the joint, so it wouldn't slow her much, but her broken leg had cracked higher up. Putting any weight on it would be a bad idea.\n\nThey needed to move. Looking over her shoulder, she saw some distant hills just north of there. The treeline was distant, but if she could make it, they would have a chance. She had no idea how the Order had fared, but knew for a fact that Darren made solid contact with the bike before the spell had gone off. If, by chance, the two of them had survived, they would still be busy scraping each other off the pavement right now.\n\nDarren groaned, but Ana didn't have time to check him. Setting him down long enough to strip off her shirt, she slung him over her naked shoulder and ran. The black armor on her body made her slower, but it would also make her harder to see under the stars. It would be harder to track her at night, but until she made it to the trees, she didn't need her pale skin acting as a giant bullseye.\n\nGasping for air, a fearsome cramp spread across her belly. Crouching down, she placed her free hand on her gut and tried not to cry out. With her fingers, she could already feel the outline of one of her eggs. She set Darren down and stared at him. If she left him behind, he would probably slow the Order down enough that she could make a clean getaway, find somewhere to hunker down and lay her eggs. Instead, he was slowing her down right now, impeding her ability to survive.\n\nShe almost left him, the urge to flee so strong that her heart was racing. He had come for her, saved her when she needed it the most, put himself in harm's way just to be with her. Leaving him behind would be advantageous for survival, but living with her actions after would be difficult. Growling, she slung him over her shoulder again and continued forward, her busted leg folding up against her belly, resulting in a staccato cadence.\n\n\"Semper fi, Darren.\" She didn't think he was even in the marines, but it was the only motto from the military that she knew. Carrying him up the sloping hills, she saw the light of her own shadow just as a wave of heat and sound rolled over her. Crouching down against the grass, she looked back to see that the station wagon had become a funeral pyre. Horrified at the destruction they had left behind, she realized that she could make out the shape of two men standing up by the road.\n\n\"Shit.\" Clutching her gut with one hand and Darren with the other, she ran.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\n\"Fuck.\" Jeffrey gazed down at the burning wreckage of the station wagon, blood trickling down his face. \"I really hope they were still in there.\"\n\n\"We haven't been that lucky in weeks.\" Cyrus sat down on a rock and watched the inferno below. He had smacked his head when the bike had gone off the road, his magic saving both of them at the last second. He probably had a minor concussion, but there was little that could be done about it now. They were miles from anywhere, and couldn't take any chances letting the Arachne get away. \"Can you see anything from here?\"\n\n\"No. Fire's too bright.\" Jeffrey scanned the countryside. \"If they made it, I'm not going to be able to see them from here. We have to get past the wreck, let our eyes adjust.\"\n\n\"Might as well check it out.\" Cyrus stood on wobbly legs and walked down the steep hill. He felt like he was going to barf. \"Keep your eyes out.\"\n\n\"You know I will.\" Jeffrey flicked his wrist, his sword unfolding. \"I really want to carve this bitch up and call it a day. Maybe take a small vacation somewhere with a beach.\"\n\n\"Florida?\" Cyrus fought a grin. Every time Jeffrey went on vacation, it was to a cozy little villa in Florida. He would pound beers all day long, starting shortly after breakfast and going until just after a big steak dinner.\n\n\"Bet your ass.\" Jeffrey picked his way down the rocky slope, pausing occasionally to offer Cyrus a hand. The heat from the burning car was intense, and they stayed well away from it in case it blew. Scouring the perimeter, it didn't seem like anybody was in the car or nearby it.\n\n\"Find anything?\" Cyrus called out.\n\n\"No.\" Jeffrey was circling to the other side, clutching his sword.\n\nCyrus used his wand as a flashlight, looking along the ground for footprints, blood, anything he could use to find them. He kicked something soft with his foot, and knelt down to find a small paperback novel.\n\n\"You got something?\" Jeffrey asked.\n\n\"No.\" Cyrus flipped through the romance novel real quick, uncertain why it was even there. It must have belonged to the owners of the station wagon. Once the two of them had realized that Ana had fled, they had run outside to find an upset couple searching the parking lot for their car. Jeffrey had used his fake badge to get their car keys, knowing Cyrus could use them to cast a spell.\n\nIt had been Jeffrey's suggestion to take the Harley, and once they were away from the diner, it just took a little magic to find the station wagon's trail. The words on the pages of the book in his hand swirled in his vision, and he threw it back down on the rocks, fighting the urge to puke again.\n\n\"So if I was a pregnant spider bitch who just got tossed out of a vehicle, where would I go?\" Jeffrey stood next to Cyrus now, the flames from the car reflected in the blade of his sword.\n\n\"Somewhere else?\" Cyrus scanned the horizon, then looked down the road. \"I don't see anywhere obvious.\"\n\n\"I might. C'mon.\" Jeffrey pulled Cyrus to his feet, half dragging him away from the road. Cyrus was impressed that nobody had come to check on the fire yet; it was just another testament to how far in the middle of nowhere they were. The night air felt wonderfully cool away from the fire, and they gazed at the distant hills.\n\n\"That's a lot of ground to cover,\" Cyrus said, finding a rock to sit on.\n\n\"Maybe. You wait here, fix yourself up. I'm going to look for tracks.\"\n\nCyrus nodded, happy for a chance to just sit with his broken thoughts. He dug through his pockets, eventually finding a small metal tube. Twisting it open, he frowned at the yellow pills that spilled out. They were a special blend formulated by the Order, and would knock down the pain banging around in his head. However, his ability to control his magic would diminish accordingly.\n\n\"Fuck it,\" he muttered, tossing back a pair of pills. As it was, his head hurt so bad he would probably blow his own face off. Magic required concentration, and if the station wagon hadn't struck him at the tail end of his last spell, they would already be digging a pair of graves for Darren and Ana.\n\nJeffrey was gone for almost an hour before he came back, his features pinched. He said nothing to Cyrus and kept going to look in the other direction. Time was precious, and they needed to catch another break, and soon.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nDarren floated through a fog of pain, the world around him just a collection of shadows that reached for him, occasionally scratching at his flesh. One particularly long appendage grabbed hold of his wrist and then broke apart in his fingers when he tried to yank it off with his other hand. The shadow's flesh felt cold and stiff, and it wasn't until he squeezed it that he realized he was holding a leaf.\n\nThe shadows rustled, and his stomach flip-flopped inside of him, and then impact. He tumbled to the ground unharmed, and finally got a good look at his surroundings. The trees around him obscured most of the night sky, and the air was filled with gasps of pain. He held his breath, trying to hear what might be nearby, and realized the gasps weren't from him.\n\n\"Ana?\" He stuck his hand into the inky black in front of him, his fingers closing on something cool and hard. When she lifted her face, the stark white of her flesh made her seem a ghost, and he almost yelled in fright.\n\nHer face twisted up in agony, and she crumpled to the ground, her legs splaying out.\n\n\"Exhausted,\" she told him. \"Need... shelter...\"\n\n\"Where are we?\" He asked.\n\n\"Forest.\" She raised an arm cloaked in darkness and pointed. \"That way. Go that way.\"\n\nHe stood up, and realized that his left arm no longer worked correctly.\n\n\"Dislocated,\" Ana explained. \"When I pulled you out.\n\n\"It should hurt.\" He struggled to lift it, then gave up. \"It doesn't hurt.\"\n\n\"I bit you. You were moaning while you were unconscious, and I needed you to be quiet.\"\n\n\"How long ago was the crash?\"\n\nShe shrugged. \"Been a while. Dawn in a couple of hours, maybe.\" Ana tried to stand, but she collapsed again.\n\n\"Here.\" Darren turned around and used his good arm to help her stand long enough to wrap her arms around his shoulders. Her front legs clung to his waist, squeezing him tight. He had no doubt she could probably crush his pelvis if she wanted to. His bad arm hung limp while he dragged her through the woods, her abdomen crunching against the forest floor.\n\nShe directed him up a small hill behind the brush and was surprised to see the mouth of a cave.\n\n\"How did you know this was here?\" he asked.\n\n\"Spiders told me. Quick, get inside.\"\n\n\"Are they right behind us?\"\n\n\"Darren, go!\" She smacked him on his good shoulder, and he obeyed, moving into the eerie darkness. The cave itself was only thirty feet deep, and he set her down on the ground. He could barely see her silhouette in the darkness.\n\n\"What now?\"\n\n\"I need... time.\" She was catching her breath now. \"It's happening.\"\n\n\"What is?\"\n\n\"The eggs are coming.\" She grabbed her stomach again and hissed. \"I was injured in the wreck, so the eggs are coming sooner as a result. It's a survival mechanism, a way for the mother to reproduce before she dies.\"\n\n\"Who takes care of the eggs?\"\n\n\"Mother nature. When they hatch, they'll hunt on their own.\" Ana winced again. \"Darren... I'm scared.\"\n\n\"Ana, I...\" Darren stared into the darkness where Ana's voice was coming from. He was out of his depth, lost somewhere in a forest, and he could only see starlight outside of his cave. Distant shouting and gunfire washed over him, and he could suddenly smell the stinking mud beneath his feet, his skin peeling from the hot summer sun. He took a deep breath, his lungs filling with the heat of the jungle and the cold air of the cave.\n\nA sturdy hand grabbed his shoulder, pulling him back into the waking world. He fell against the cave wall, his eyes adjusting to the darkness. Hayden was smoking another cigar, the burning embers illuminating the others and nothing else.\n\n\"She needs you,\" Dwayne said from his left. \"Tell her it's going to be okay.\"\n\n\"It's going to be okay.\"\n\nThe darkness didn't answer. Moments later, he heard a loud grunt. The cave suddenly smelled of cloves and wet leaves.\n\n\"Ana? What's going on?\"\n\nThere were more grunts, and the odor was suddenly unbearable. He wanted to leave the cave, but Dwayne grabbed onto Darren's wrist, holding him in place. Ana let out a few more cries, then finally went silent.\n\n\"Ana?\" he whispered. She finally appeared in the darkness, the breaking light of dawn touching the cave. She held something in her hands that was roughly the size of a cantaloupe.\n\n\"Is that... an egg?\" His eyes were wide, and he suddenly couldn't look away from the mottled object in her hand.\n\n\"One of five,\" Ana whispered, her face lost in the darkness. \"I'm... I'm so tired, Darren.\"\n\n\"Lie down for a minute, I'll keep watch.\" His eyes were locked on the egg she still held. Was that really his child inside of that chitinous shell? It had happened so fast, he hadn't had time to process it. Was he really going to be a father to spider people like Ana? Could he even protect them from harm, or would he just be a walking talking steak to them?\n\n\"Don't let them... find us.\" She vanished into the back of the cave, and he heard her shallow breaths deepen. There was just enough daylight for him to make out the pale features of her face, hovering in the distant dark.\n\nLittle Mike, lost in the shadows, let out a hearty laugh. \"Congratulations, Darren! It's an omelette!\"\n\n\"Shut the fuck up, Mikey.\" Hayden threw his cigar at Little Mike, who ducked. \"This whole situation is FUBAR, and you want to crack jokes?\"\n\nAt the word crack, Little Mike lost it, laughing hysterically. Hayden sighed, looking to Dwayne for support. Dwayne leaned forward and grabbed Little Mike by the collar, giving him a shake.\n\n\"Calm your shit, he needs us right now.\" Dwayne looked at Darren. \"You know they're going to come, right?\"\n\n\"I... yeah.\"\n\n\"What do we have?\"\n\n\"Um... a knife.\"\n\n\"Good.\" Dwayne looked around the cave. \"That's all we need to get started. Mikey? Perimeter.\"\n\n\"On it.\" Little Mike stepped out of the cave, vanishing into the trees.\n\n\"Hayden? Keep an eye on things here.\"\n\n\"Roger.\"\n\n\"Where are we going?\"\n\n\"Out.\" Dwayne pulled on Darren's good arm to make him stand. He led his brother outside, and Darren took in the hillside where they were hiding. It was a loose collection of large boulders that had fallen down the hill, some of them resting against the trees.\n\n\"What do you see?\" Dwayne asked him.\n\n\"Um... shit.\" Darren spotted it right away. When he had dragged Ana into the cave, they had left a painfully obvious trail in the loose gravel.\n\n\"Get your head on, soldier. We need to get this cleaned up.\" Dwayne pointed at some trees behind Darren. \"Cut down a branch and use it to hide the trail. I think it goes back a hundred yards or so, when you got out of the tree.\"\n\n\"I can't.\" Darren pointed at his bad arm.\n\n\"For fuck's sake, I forgot.\" He led Darren over to sit down on a smaller rock, then picked up a small stick. \"Bite down on this.\"\n\nDarren nodded, sweat rolling own his forehead. \"Okay.\"\n\n\"It's gonna hurt,\" his brother warned him, then grabbed Darren's arm and pulled. Darren bit into the wood, trying his best not to cry out. Dwayne twisted Darren's arm around, trying to give it a yank, but it was no good. His shoulder wouldn't go back in.\n\n\"Here, try this.\" Dwayne moved Darren's hand into a gap in the rocks. \"You lean away and I'll pull on you, use the rock like a vise.\"",
        "\"Do it,\" Darren said through his stick, and Dwayne hooked his arms around Darren's torso and pulled. The world turned into fire, and Darren growled around the stick as he twisted his body, pressure building into the joint until he felt it pop back into place. Biting the stick in half, he fell off his rock, the world spinning around him. Dwayne caught him, then guided him gently to the ground.\n\n\"Easy, man, breathe.\" Dwayne patted his brother's cheeks. \"Stay with me, don't pass out.\"\n\nDarren's eyes narrowed on the canopy up above. The rays of dawn illuminated cotton clouds up above, and he felt the entire world come into focus. He stood up with Dwayne's help, and hacked down a nearby branch with his knife. He used his weak arm to aim the branch and swept with the right, doing his best to cover the tracks closest to the cave. Dragging the branch back into the woods, he swept away any trace of their trail, checking over his shoulder every couple of minutes, listening for any sounds that were out of place.\n\n\"Little Mike's on it, don't worry. Just keep going.\"\n\n\"Hold up.\" Darren tossed his branch aside, his eyes on the trail. They were easily over fifty yards from the cave now. \"We shouldn't sweep it all away. They're going to come looking, and when they do...\"\n\n\"We can control where they're going. What are you thinking?\"\n\nDarren used his knife to loosen up the soil, grabbing handfuls of it and throwing it over his shoulder. \"We're not going to be able to build anything lethal, but we will, however\u2014\"\n\n\"Create a liability.\" Dwayne finished with a smirk. He got down on his knees and helped Darren dig. \"What are you thinking? Maybe sharpen some sticks?\"\n\n\"i guess.\"\n\n\"You're not gonna shit in there, are you?\"\n\n\"I was hoping you would do it.\" Darren smirked. \"We just need to slow them down. If they're too busy following this trail, we might catch one of them in it.\"\n\nThey both kept digging with their hands, often exchanging the knife to further loosen the soil. The sun had risen, and the hole was now about two feet across and a foot deep. Drenched in sweat, Darren ran back toward the cave and stripped some of the lower branches off of the tree, then came back and started sharpening them. The knife sliced through the wood cleanly, and he only hoped that his simple pit trap would give them the edge he needed.\n\nAbove him, the forest woke up. Though the birds sang their song of morning, all Darren could hear was gunfire from a distant memory.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nAna opened her eyes.\n\nShe was on the roof of the cave, looking down on the small nest of webbing she had made. Most of her armor had fallen off, now lying in a pile below. Dropping down from above, she picked her eggs up and held them close to her chest. They were warm to the touch, the life inside swiftly developing. It would be months before they hatched, but they required no care once lain. If she could find somewhere to hide them, they would be fine as long as a hungry bear didn't find them first.\n\nHolding the eggs close to her skin, her instincts told her everything she needed to know. Every single one of her offspring was perfect. They would hatch with ten fingers and eight feet, ready to devour their first kill. Ana looked down at the eggs, her mind swirling out of control.\n\nWas this really what she wanted? Her instincts screamed YES, but her heart told her no. The cold logic of the Arachne took over, reminding her that the survival of her species depended on any decision she made regarding the eggs. They were all healthy, and capable of thriving, it was best to let them be.\n\nSetting them back into the nest, she moved outside to see what Darren was up to. Though she couldn't see him, she could smell his presence. Moving into the woods, she heard him talking to somebody, but couldn't detect anybody else.\n\nHe was huddled over the forest floor, carefully laying leaves across the ground.\n\n\"Pit trap?\"\n\nDarren looked over his shoulder at her. \"Yeah.\"\n\n\"You really think they won't see it?\" Ana frowned. \"It looks out of place, kind of obvious.\"\n\nDarren picked up the nearby knife and slammed it point down into a gap in the leaves. It stood on end, the handle casting a long shadow on the forest floor.\n\n\"I want them to see this one.\" He pointed at a spot a couple feet away. \"Cause I'm hoping they will step over there. Or over there. Or back there.\"\n\n\"Spikes?\" She was impressed with how quickly he had dug them, even with a messed up shoulder. Her venom still ran through his veins, and she imagined he would be in agony once it wore off. Scanning the forest floor, she could sort of make out the tumbled soil where the traps actually were. Obviously Darren had put a lot of time into making the ground look natural.\n\n\"Best we could do on short notice, but that one over there has a heavy rock propped up with a stick.\" Darren scowled. \"I'm hoping for a broken or stuck foot, but will settle for a rolled ankle.\"\n\n\"Can I help?\"\n\n\"I don't think... wait.\" He looked at her, a fierce intensity in his eyes. \"How strong is your webbing?\"\n\n\"Very.\"\n\n\"When I was... over there, Charlie had a couple of fun surprises for us. Here.\" He pulled the knife out of the ground and moved to an open area and started drawing in the dirt. \"There are some heavier rocks by the cave. If we can get some of them into the trees, we can rig this area with some tripwires.\"\n\n\"Darren. You know we could run, right?\"\n\nHe scowled at her. \"Until when? Right now, we know the enemy is coming, and we have time to prepare. Once those fuckers tried to off me, I promised that I would end them if given a chance. You're injured, so am I, and my best weapon right now is a knife. They know that we fucked, know that you're pregnant, and will burn the world down around us when given half the chance. When you know the enemy is gunning for you, you can't always run away. We have an edge here, you know that right? That Jeffrey guy, he beat the shit out of me in a bar. And his buddy Cyrus? He used a magic watch to reverse time right in front of me. We're going to turn their strengths into weaknesses.\"\n\n\"How so?\"\n\n\"They're both cocky mother fuckers who expect us to run and hide. They won't see this coming. So... will you help me?\"\n\n\"Darren, I... are you trying to kill them?\"\n\nHis eyes went hard. \"Yes.\"\n\n\"They're part of something bigger, Darren. Even if we kill them, the Order will send more.\"\n\n\"What about Oregon? Is something waiting for us there?\"\n\n\"Yes. I don't know what, but my friend promised we would be safe.\"\n\n\"These assholes don't have anyone helping them now. By the time their buddies show, we'll be long gone. Head back to the road, follow it to some small town, steal another car.\" Darren tilted his head as if listening to someone. \"Yeah, that would be a repeat of our last date, wouldn't it?\"\n\nAna smiled. \"I didn't like how the last one ended.\"\n\n\"I'm usually a pretty good driver.\" He tilted his head again. \"Yeah, you're right. We need to focus.\"\n\nAna looked around the clearing. They were still alone. Did Darren hit his head in the crash? Other than listening to someone who wasn't there, he seemed perfectly fine, and even more so when he scrawled out more designs for her to follow. The traps were simple enough, and she was quickly able to improve them. If Darren really was so eager to fight, then she would help.\n\nThey spent the next two hours going back over their trail and setting additional traps. Darren wasn't able to lift anything heavy with his bad arm, so Ana carried the rocks for him. She scaled numerous trees, wincing when her bad leg struck the branches.\n\n\"Is that going to heal?\" Darren asked her from below. \"It looks like it's cracked open.\"\n\n\"When I molt, it'll grow back.\"\n\n\"You molt? Like a snake?\"\n\n\"Just my lower half.\" Ana secured a twenty pound rock in place, then used a much thinner web to hold it in place. He had shown her the mechanism for a trip wire, but she could spin a fine web with steel-like strength and string it up almost anywhere. Instead of a tripwire on the ground, she was stringing her webs at various heights. As long as it remained overcast, the probability that they would be spotted was small. \"Still hurts though.\"\n\n\"Should we.. I mean, do you need to cut it off?\"\n\nAna thought about it, but kept her mouth shut. If she did cut it off, it would hurt like a bitch, and she wanted to keep her head clear, especially since she was already distracted. Her stomach growled when she climbed down. She had been hungry after laying her eggs, but now she was ravenous. Darren smelled absolutely delicious, and she could easily overpower him, then suck him dry.\n\nStrangely, the compulsion felt muted. After so many weeks of fighting her desires, they felt weaker somehow. Was it because she had laid her clutch? Or was it something else? She dropped out of the tree and stumbled, crying out in pain. Darren was suddenly in front of her, his arms around her waist steadying her.\n\n\"You okay?\" His eyes were soft now, concern written across his face. He was so close, his scent so delicious, but there was something there that she hadn't felt before. Her heart pounded, and she lifted her hands to his face, stroked his cheeks with her fingers. It was impossible to see him as a regular human, he was now suddenly something more to her. She longed to touch him, to feel him inside her once more. These were no longer her instincts speaking.\n\nIt was her heart.\n\n\"Darren.\" She whispered his name and then kissed him. He held tightly to her, his hand moving through her hair while his bad arm hung around her waist. As their kiss broke, she lightly nipped at his lip, giving his system just a bit of her venom in the hopes it would help his shoulder relax and diminish his pain. She gazed into his dark eyes, very aware of the tiny trickle of blood on his lip.\n\n\"Ana, I...\" Darren whipped around, looking into the forest.\n\n\"Darren?\" she asked, but he held up a hand to silence her.\n\n\"Perimeter has been breached. They're coming.\" He lifted his knife, then turned back to her. \"You ready?\"\n\nStunned, she nodded, letting her senses expand. Sure enough, she could feel them now, moving toward her through the forest, but they were easily ten minutes out at their current pace. How had he known? Had her venom heightened his senses? It occurred to her that there probably wasn't a human in existence who had suffered the long term effects of an Arachne bite, and wondered if it was acting like some kind of performance enhancer.\n\n\"Head for the cave.\" Darren threw himself on the ground and rolled in the dirt, coating his face with dust. He had been sweating, so it stuck to him easily, and he held the knife in his good hand. \"This is war now, got it? Protect the eggs.\"\n\nShe nodded, scurrying back as fast as she could. Standing outside the cave, she looked around, trying to figure out the best place to hide in case the Order made it this far. The slope was rocky, and offered limited places for her to hide.\n\nAna released pheremones into the air, and watched as dozens of spiders moved from their hiding places out into the open. Originally planning to ask where a good hiding spot was, she thought back to Darren. He was risking everything, just to be with her, and wouldn't stop until he was dead or the Order had been stopped.\n\nLooking at the opening to the cave where her eggs were, she felt a cold pit open up in her stomach. Inside that cave were five perfect little killers, just waiting to enter the world. If something happened to her, they would go feral, hunting indiscriminately. Her own mother hadn't seen fit to view humans as anything but food, but she had been cultured enough to teach Ana how to read and write, unknowingly planting the seeds of humanity in her daughter. It hadn't been her fault that Ana lacked the disregard for human life that her sisters had.\n\nHad her mother known? When holding Ana's egg, could her mother sense that Ana was less than perfect? How many times had she watched her mother or one of her sisters smash an egg, declaring it an anomaly incapable of thriving?\n\nAna pumped more pheromones into the air, sending out a call for anything with eight legs that was nearby. The hill became mottled and spotty as black widows crawled out from under their rocks and crevasses, complaining about the daylight. The litter of the forest churned, a small army of jumping spiders and hobo spiders racing to her aid, eager to hunt. Minutes passed as they gathered, and when there were enough of them, she told them her plan.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nCyrus walked in silence, following close behind Jeffrey's lean form. The knight had drawn his blade, moving cautiously through the forest. All around them, the forest teemed with life despite their presence. It was eerie to experience such a cheerful morning while they were about such dreadful business.\n\nIt had been nearly dawn before it had been bright enough to spot the Arachne's blood trail. The cool, blue blood of her lower half had continued for a couple of miles before disappearing into the trees, and tracking her from below had been a bitch without his magic flashlight. It had been crumpled in half during the crash, and Cyrus was convinced it had bruised his ribs.\n\n\"Do you think she's going to eat him?\" Jeffrey scrambled up a nearby tree, and Cyrus let out a sigh. This was the step that took the longest, the part where Jeffrey tried to spot her passage through the trees. She had alternated passing through the trees and along the ground, and Cyrus was grateful she hadn't crossed anything resembling a river.\n\n\"Maybe. I don't even know what's going on with those two.\" It was unheard of for a human to assist an Arachne, or for Arachne to skip a willing meal. \"I wish we had stopped to call for reinforcements.\"\n\n\"Hey, I'm sure there's a phone twenty miles up or down the road, take your pick. If she's injured, soldier boy is probably dead. No way he survived, and I bet she's sucking his brain out through his dick right now, that dumb, bug-fucking weirdo.\" Jeffrey swung his sword, and a large branch tumbled out of the tree. He looked at the surrounding branches, and then pointed off to the north east. \"They passed through here, broken branches everywhere.\"\n\n\"Great.\" Cyrus kept his eyes on the arboreal path while Jeffrey climbed down. Now that he knew where the path was, it was easy to see where she had passed. Jeffrey kept his eyes on the ground while Cyrus tracked the trees, a wand in one hand and another tucked up his sleeve. His headache had finally subsided, but Jeffrey had informed him that his left eye looked all fucked up with several broken blood vessels.\n\nThey moved in silence, for half an hour, and the treeline stopped. Cyrus looked at Jeffrey. \"She went to ground here.\"\n\nJeffrey nodded, then started beneath the tree, moving in ever widening circles, his eyes on the ground while Cyrus watched. It was another ten minutes before Jeffrey spotted some blood on the ground, then traced it back to where the Arachne had landed.\n\n\"Let's go.\" He led the way, with Cyrus looking over his shoulder.\n\nThe morning dragged on, and they alternated accordingly. The pills started to wear off, so Cyrus popped a few more, wishing he could eat something. His stomach was a mess because of the painkillers, and he felt a cramp building up in his gut. He drank most of his water, hoping it would help him keep his head clear.\n\nThey picked their way down a large rocky slope and Jeffrey held up his hand, then pointed to the ground. Even Cyrus could see the trail now, a large furrow surrounded by bootprints.\n\n\"What am I looking at?\" Cyrus asked.\n\n\"Looks like soldier boy's turn to walk. This right here is her bug ass, and you can see where her legs dragged alongside. She's either tired or unconscious.\"\n\n\"She's about to lay her eggs.\" Cyrus knelt down, his fingers hovering over the trail. \"I've seen it in the notes. They lay their eggs early and bolt. Back in the twenties, there was a big hunt for them in Greece, they were close to annihilation then, but the nest scattered when we attacked, and we found eggs fucking everywhere. They would sometimes lay them while running, on rooftops, stick them under a car, wherever they could be stashed in a hurry. The Order needed more men on the ground, so we false-flagged an assassination attempt on Venizolos, figured we would blend in with the investigations, but didn't expect the riots that followed to be so messy. We couldn't track them all down, so a couple years later, we burn down Smyrna, but the fire gets out of control, kills a ton of people, and then the Order is pulled from Greece. Colossal fuck up. Next year, a ton of refugees flood in and become spider food, and the Arachne spread.\"\n\n\"Why the history lesson?\"\n\nCyrus sighed. \"Because fifty years from now, I don't want someone else to be telling our story as a cautionary tale. A tale about two fuck-ups who couldn't even kill one monster and bust up her eggs.\"\n\nJeffrey's shoulders tensed. \"That isn't going to happen.\"\n\n\"Good.\" Cyrus stood, then drew his spare wand. The bone-white material in his hand heated up, glowing from within, and the metal wand in his other hand emitted sparks that still shocked him through his glove. \"Move slow, keep your eyes out for her clutch. Let's roast this bitch.\"\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nDarren was on the ground, his body crammed between a bush and a tree. The bark scraped against his skin through his shirt, and he could feel a slight throbbing in his bad shoulder. He took shallow breaths, confident that the shadows hid any part of him that stood out.\n\n\"Thirty seconds,\" Little Mike hissed to Darren across the clearing. Hayden was up in a tree, his gaze just over the hill, and he made a hand signal.\n\n\"You got this, brother.\" Dwayne's voice was behind him, but he could feel his brother's reassuring hand on the small of his back. \"You just gotta be smart.\"\n\n\"For Ana.\" His lips tightened at the soft foot falls that preceded Jeffrey and Cyrus. He could see them through the brush, moving so slow, their eyes constantly scanning. Ana's drag trail would take them right past his position, and into the traps. If the traps failed, then Darren would try to lead them away from the cave.\n\nHe was going to be a father. Was that something he was ready to do? He just couldn't imagine what it would be like trying to raise five children at once, especially children that were able to climb wherever they wanted. Would they even listen to him, or would Ana be considered the true parent?\n\n\"Focus,\" Dwayne hissed.\n\nLittle Mike had vanished into the underbrush, and was now making noises that sounded identical to a bird. Hayden repeated the noises, and then Jeffrey stepped around a large tree, a sword in his hands.\n\n\"His knife is bigger than yours,\" Dwayne pointed out. \"Looks super sharp, too. Oh, and here's magic man. Is he holding a magic wand? Shit, he's got two of them. They may as well be guns, right? If you do run, he's the one you gotta watch, keep the trees between you. Got me?\"\n\nDarren nodded.\n\nJeffrey held his sword up sideways, and Cyrus took notice.\n\n\"The fuck?\" Jeffrey knelt down, examining one of the false traps. \"We must be getting close. They've been setting traps.\"\n\n\"For us?\" asked Cyrus. Darren noticed that one of his eyes was bloodshot.\n\n\"No, for fucking bears. Of course for us.\" Jeffrey stared at the trap for several seconds. \"If soldier boy was carrying the bitch, and he came back to set traps, it might mean she's out of commission.\"\n\n\"But what if they're working together?\" Cyrus looked up into the trees. \"Do you think they could have built something more sinister?\"\n\n\"Don't know.\" Jeffrey took the end of his sword and rammed it into the trap. Much like Darren's knife, it pierced an inch or so of soil, and then stuck. \"That's not what I expected.\"",
        "\"These are decoys. Think about it, she's got the ability to climb up high. While we're busy dodging these, the real threat is in the trees.\" Both wands were raised, and Darren felt his heart drop. They had figured out the ruse too quickly.\n\n\"Eyes up it is then.\" Jeffrey took a couple of steps, and then swung his sword through the air in front of him. One of the large rocks swung down, and both men ducked as it passed harmlessly over head.\n\n\"That would have been nasty,\" Cyrus said, watching the stone swing like a pendulum.\n\n\"For you, maybe.\" Jeffrey sliced the stone down, and it landed with a thud. \"It's too bad you can't just blast the whole area with fire, get it over with.\"\n\n\"Yeah, well I think it's too bad that\u2014\" Cyrus' foot fell through the ground, and he stumbled forward with a cry. On his way down, one of the wands he carried let out a blinding blast of lightning, and Darren shut his eyes, trying to blink away the streaks across his eyes. He heard yelling, and rustling leaves, and opened his eyes to see that the lighting had blown away most of the tripwire webbing in the clearing. Several large rocks swung down all at once, and Jeffrey jumped in front of one that was headed toward Cyrus.\n\nIt collided with him, knocking him several feet away, but swung into Cyrus after bouncing off of Jeffrey. There was another flash of light, this time centered on Cyrus. He collapsed backward on the ground, letting out a loud groan.\n\nDarren kept blinking, his knife hand shaking. If he ran out now, he might be able to finish the job, but his vision was compromised, and Jeffrey was stumbling back to his feet, using his sword to stand back up.\n\n\"Cyrus.\" Jeffrey stood to his full height, taking a deep breath and steadying himself. He looked unharmed, which was impossible.\n\n\"Impossible went out the window forever ago. Stay frosty, brother, choose your moment.\" Dwayne squeezed his brother's shoulder. \"Bide your time.\"\n\n\"Hey.\" Jeffrey knelt down by his partner. Cyrus was lying face down on the ground, moaning. Jeffrey helped Cyrus roll over. \"Can you breathe?\"\n\n\"Yeah.\" Cyrus grunted, then coughed. \"Think my ribs are broken, despite the shield. My foot got stuck and I couldn't move.\"\n\n\"Yeah, well, they don't know who they're dealing with. Here.\" Jeffrey pulled something out of his pocket and handed it to Cyrus. \"Take this.\"\n\nCyrus popped something in his mouth and gritted his teeth. \"Ribs will still be tender for a bit. Help me get my foot out.\"\n\nBoth of them worked to pull Cyrus free, and Darren could see that his foot was pointing the wrong direction. The forest had gone quiet, and his attention narrowed on the men in front of him. Could he sneak up on Jeffrey, maybe slit his throat? After watching him take a twenty pound rock that swung from over ten feet up, he was starting to wonder if the man was bulletproof.\n\nJeffrey yanked Cyrus' foot until it pointed the right direction, and the man fell on his back, panting. \"There. The bones will heal correctly now.\"\n\n\"It will be a couple of minutes before I can walk.\"\n\n\"Yeah, the pills will fix you up, but they won't work miracles. Hang tight, Brother Cyrus.\" Jeffrey sat him up and waited, his eyes scanning the forest.\n\nFrustrated, Darren wished that he had his rifle right now, he could pull a bead right on Jeffrey and put a hole in his head, the same way Charlie did to Hayden. Minutes passed, and Cyrus let out a sigh.\n\n\"I'm good, let's go.\" Cyrus stood up, wobbling in place, then let out a cough. Jeffrey put a hand out to steady him, and the two of them resumed walking.\n\n\"Damn,\" Darren whispered. As long as the two of them were together, it didn't matter what he did. He moved forward out of the brush, his footsteps silent as he kept several paces behind the two men. Little Mike and Hayden moved ahead of him, throwing down hand signs that Darren followed instantly. More than once, Jeffrey or Cyrus cast a look back, but Darren was hidden, once more one with the landscape. They were about fifty yards out from the cave, and he needed to come up with a plan right away.\n\nBoth men stopped, then looked at each other.\n\n\"What are they doing?\" asked Hayden, who then looked at Dwayne.\n\nCyrus and Jeffrey took off running, and Darren moved from the shadows, keeping low to the ground. It was immediately apparent what they had seen, and he froze in disbelief. The hillside was beneath a thin blanket of webs, as if a thousand pounds of cotton had been stretched across the rocks. They spiraled out from the cave for almost twenty feet like a silken bullseye, and both Cyrus and Jeffrey were stalking up the hill toward it, murder in their eyes.\n\n\"Ana, what are you doing?\" Darren hissed. Once Cyrus and Jeffrey stepped into the cave, Darren broke into a run.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\n\"Watch it.\" Jeffrey walked in the front, and Cyrus held his wand up by the ceiling, the glow of the fire wand illuminating the cave. The inside was blanketed in even more webs, so Cyrus held the wand carefully to avoid igniting them. They would probably burn pretty quick, but he didn't want to end up setting himself on fire in the process.\n\n\"Smells like ass in here,\" Jeffrey muttered.\n\n\"She built a nest. The eggs must be here.\" The cave wasn't very deep, and they soon found themselves looking at a clutch of eggs attached to the upper corner of the ceiling. There were five of them, each one wrapped up nicely in a silken cocoon.\n\nOn the ground, they saw a dark figure sitting, facing the wall as if in prayer, her body covered in thick, black plates. Her legs were splayed out like spilled ink. In the dim light of the cave, it looked like they were twitching.\n\n\"Why is she just sitting there?\" Cyrus whispered.\n\n\"Does it fucking matter?\" Jeffrey took a step forward and swung his blade. It bit deep into the Arachne, cleanly severing her head, which tipped forward and fell to the cold, hard ground and shattered into pieces.\n\n\"Wait, wha\u2014\"Jeffrey took a step back as the Arachne's legs exploded into a cloud and consumed him. The decoy had been filled with spiders, thousands of them now crawling across his skin. The knight of the Order shrieked, and his sword hit the nearby stone hard enough to shower the ground with sparks. He fell backward into Cyrus, and the spiders jumped all over him, too. With the presence of so many spiders suddenly on him, he lost control, scouring the cave with both fire and lightning. The webs ignited, and the cave was suddenly an inferno.\n\nIn a panic, both men ran outside the cave, slapping at themselves. Cyrus could feel dozens of bites along his arms and legs, and his mind went blank as the spiders crawled beneath his clothes, squirming into every orifice of his body. He choked, then inhaled something that had crawled up his nose. They were in his ears now, scratching away with their tiny little legs against his ear drums.\n\nWhen he opened his mouth to scream, they crawled inside.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nThe two men exploded out of the cave, covered in a cloud of spiders, followed by a ball of fire that rolled up into the sky. Darren sidestepped Cyrus and tripped him. He tumbled backward head over heels down the slope, screaming the whole way before smashing his head into a rock and going still.\n\nJeffrey threw himself to the ground and rolled, crushing as many of the spiders as he could, his skin now covered in the gore of hundreds of spiders. The other arachnids frantically fled from him, their tiny little bodies disappearing into the surrounding hillside.\n\nSeeing his chance, Darren charged, going for the gut. Jeffrey heard him coming and spun around, his sword whipping through the air, but Darren was close enough that he stepped inside of the strike and brought his knife in low. Their eyes met, and there was nothing but hatred in Jeffrey's eyes.\n\nJeffrey swung his free hand down, striking Darren's inner wrist and parrying his attack. Darren felt intense pain radiate up his arm, and dropped the knife. Jeffrey tried to pull his sword in close and slash Darren, but Darren had pushed him against a large rock and the two of them went over it and rolled down the side of the hill.\n\nSharp stones bit into his flesh, and he heard the clatter of metal on stone down the hill.\n\nWhen he stood, he saw that Jeffrey was only a few feet away from him, but was disarmed.\n\n\"Soldier boy.\" Jeffrey stood up, a sneer on his face. \"What have you gotten yourself into?\"\n\nDarren raised his fists.\n\n\"Oh, good. I'm going to enjoy cracking your skull.\" Jeffrey's face had a couple of nasty scratches, but that was it. He raised his own fists and came casually toward Darren. \"I mean that literally, you know? I'm going to hook my thumbs into your fucking eye sockets and pull your skull apart, then stick my finger in your brain while you're still alive and watch you squirm as I erase every last bit of you.\"\n\nDarren charged, then feinted with his left, his shoulder burning in agony. Jeffrey leaned back, a lack of concern in his eyes.\n\n\"Is it true that you set little kids on fire in 'Nam, soldier boy? Stacked them up like logs and made s'mores while they burned?\"\n\n\"Don't let him get in your head,\" Dwayne warned him from his left. \"He's trying to get you to react.\"\n\n\"We sang Kumbaya while we did it.\" Darren feinted again, then drove his knee forward as a follow up. Jeffrey slapped the attack aside, but took a solid right hook in the face. Darren felt a knuckle pop in his hand, and was flabbergasted when Jeffrey popped him in the jaw with an uppercut that had him tumbling onto his ass.\n\n\"You don't get it, soldier boy. I'm a knight of the fucking Order! I've been trained to hunt the scariest shit on this goddamn planet, and you think you can go head to head with me?\" He squatted down and picked up Darren's knife. \"I'm faster than you. Stronger than you.\" Walking toward Darren, he flipped his grip on the knife, the blade pointing down, then attacked.\n\nDarren raised his feet, and caught Jeffrey in the shoulder, but the blade sliced cleanly through the side of his shirt, his skin becoming wet, and then he was pinned. Jeffrey sat on Darren's chest and grinned sadistically while lowering the knife. Darren struck him in the jaw several times, but the knight didn't flinch, just kept moving the blade closer.\n\nThe tip of the blade touched Darren's sternum, and he grabbed Jeffrey's wrist with both hands and pushed. He may as well be trying to lift a car for all it was worth.\n\n\"You're going to watch me sink this in, and I'm going to watch you die. Say hi to your brother for me,\" Jeffrey told him, blood dripping from his lips.\n\nDarren screamed, shoving as hard as he could. Fire blossomed in his bad shoulder, and his heart was racing. The forest around him came alive with smoke and gunfire, and the screams of young men crying out for their mothers, or anyone who would listen. The ground stank of blood and mud, and dark shadows appeared behind the knight.\n\nLittle Mike, Hayden, and Dwayne all grabbed onto Jeffrey's arms and pulled upwards, their faces straining with the effort.\n\nThe knife stopped moving, and Jeffrey scowled, then used his other hand to push, leaning into his attack. The others changed position, using their legs to help lift up on Jeffrey's forearms.\n\n\"You... shouldn't be... this strong...\" Jeffrey said, gritting his teeth as he pushed. Sweat had broken out across his brow, but Darren continued to resist, pulling his legs into a better position.\n\n\"No man left behind,\" Darren told him, then coiled up his body and planted his feet in Jeffrey's stomach while rolling backward onto the rocks. No matter how strong Jeffrey was, he wasn't too heavy to be lifted, and he flipped over Darren's shoulders and landed hard, scattering gravel. Both men stood, and Jeffrey came at Darren with the knife.\n\nA dark shape crashed into Jeffrey, knocking him down the slope and causing him to drop his knife. Rising up on seven legs, Ana kicked at him multiple times, and Jeffrey rolled away and stood, moving quickly toward his sword.\n\nDarren ran down the hill, picking up his knife. Ana tackled Jeffrey from behind, and the two of them rolled across the rocks, Jeffrey caught up in Ana's legs. Every blow that Jeffrey landed made a sickening crunch, and Darren couldn't help but notice that Ana looked like her skin had melted on one side of her face. She seemed disoriented, but was able to hold her own, at least for now.\n\n\"Fucking monster!\" Jeffrey grabbed a nearby rock and swung it into Ana's jaw, causing her to topple. When he turned around, Darren was there to meet him, and he plunged the knife into Jeffrey's shoulder, but it only sank in about an inch. Jeffrey grabbed Darren by the throat with one hand and shook him, lifting him into the air.\n\n\"You're... the monster...\" Darren told him, grabbing at the fingers around his neck.\n\n\"Fuck you.\" Jeffrey pulled the knife out of his shoulder and was about to plunge it into Darren when Ana grabbed his arm from behind, her face twisted in a mask of rage. Large fangs had sprouted from her mouth, fangs that she plunged into Jeffrey's exposed neck.\n\nA look of disbelief crossed the man's face, and he opened his mouth as if he was going to say something. Ana growled, and Darren could see his reflection in each of her eyes, the world spinning around him.\n\nJeffrey's arm weakened, and Darren's feet kissed the ground. He pulled himself free as Jeffrey went limp, then collapsed on the ground. Ana stood over him, her face a twisted mask of rage.\n\n\"Is he... is he dead?\" Darren asked, rubbing his throat.\n\nAna pulled the knife from Jeffrey's hand and slit the man's throat. \"He is now.\"\n\nThe ground soaked up Jeffrey's blood like a sponge, and the light slowly faded from his eyes. Darren had seen so many men die before, but it never got any easier to watch, to see the knowledge in their eyes that this was the end, then watch them vanish into oblivion.\n\nWhen Jeffrey's last gasp of air came, Ana collapsed on the ground, holding her face in her hands, and Darren knelt by her side, his hand on her shoulder. She stank of burned hair.\n\n\"We need to get him, too.\" He jerked his thumb over his shoulder at Cyrus. When Ana didn't respond, he took the knife from her hand, but she grabbed him by the wrist.\n\n\"No. It's not over. Not yet. We need him alive.\"\n\n\"What for?\"\n\n\"You'll see.\" She stood and walked over to pick up the sword. \"Darren, I... this right here is what we need to avoid.\"\n\n\"I don't understand. Didn't we just avoid it?\"\n\n\"Yes, but no. Come with me.\" She grabbed him by the hand and led him into the cave. The air smelled of fire and dirt, and he could just see the eggs tucked safely up against the wall.\n\n\"Do you think I'm a monster?\" she asked him, her voice tired.\n\n\"No more than I am.\"\n\n\"You weren't born that way. Arachne are. We hunt and kill for sport, you know that, right?\"\n\n\"Well, I'm sure it doesn't have to be that way.\"\n\n\"But it is. Inside of each of those eggs is a perfect little killing machine, waiting to go out into the world and continue the dark legacy of the Arachne. It's in our blood, you know.\"\n\n\"But you were different. You lived among humans, remember?\"\n\n\"Darren, I'm flawed.\" In the dark, he could see her crooked grin. \"I'm different from the others, more human than I should be. Our offspring, however, will be perfect, and that's the problem. How many times does the cycle need to continue before it comes to an end?\"\n\n\"I... I don't know.\" He leaned against the wall. \"I don't have all the answers.\"\n\n\"Well, I have one of them.\" She slashed at the eggs with her sword, spraying the cave wall with its innards. Darren's jaw dropped as she smashed her own eggs, his stomach lurching at the mess left behind.\n\n\"The Arachne cannot be allowed to exist, not like they have. Someday, these would hatch, and they would kill you and eat you in your sleep. They would be more spider than human, and the world doesn't need anymore killers in it.\" She contemplated the eggs, her features unreadable. \"The odds are small, but I would prefer to raise a child that is more like you than me, one who lacks that killer instinct, one who is willing to stand back and watch, to appreciate what mankind has to offer, to grow into something better. I don't want a brood, Darren, but a family.\" Her eyes shimmered in the darkness, and she rubbed them with her forearm. \"A proper one. With you.\"\n\n\"Ana.\" He looked at the eggs, uncertain how to feel. If he didn't know better, he was just staring at a mess of egg yolks that had been in the sun for too long already. A swirl of emotions moved through him, and he turned toward her and nodded.\n\n\"I would like that, too.\"\n\nAna cried, and threw herself into his arms. They held each other tightly, and tears came for them both in the darkness of the cave. In the darkness, Dwayne gave his brother a thumbs up.\n\n\"Let's head for Oregon.\" Darren said, his hands squeezing her hips.\n\n\"Not yet.\" She pushed Darren away and let out a long sigh. \"We have one more thing to do, and I need your help.\"\n\n\"Anything.\" He slipped the knife into its sheath and crossed his arms. \"Just tell me what you need.\"\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nFire ran through his veins, and his head pounded. Sitting up, Cyrus groaned and grabbed his head. Hundreds of tiny men with jackhammers threatened to tunnel out of his skull. The ground beneath his hands was cold and rough, and he pushed himself forward, then puked.\n\nIt felt like he had the flu, or something nasty, and the tiny welts all over his body puzzled him at first. Where had they come from? Looking around the rocky hillside, he remembered the spider swarm with their crawling legs and biting mouths.\n\nTrembling, he pulled a cracked vial out of his pocket and poured all six tablets into his hands. The whole world went fuzzy, and he slammed the pills into his mouth and chewed. Assuming the bites had been venomous, he needed to neutralize the toxins in his system.\n\n\"Jeffrey?\" his voice was barely a squeak. Despite puking, his mouth was completely dry. He stood up and found both of his wands lying nearby. Unable to channel magic through both at once, he put away the lightning wand and settled for fire. If nothing else, he really would burn the forest to the ground to make sure the Arachne was finished.\n\nIt didn't take him long to find Jeffrey. The knight of the Order lay on his back, vacant eyes skyward. Cyrus suppressed his emotions, his weary eyes scanning the clearing. The cave mouth was nearby, and the webs had been torched away from it. Remembering that he had fired off his wands, he limped forward, climbing the hill. In his hand, the wand became hot. Wincing, he clutched it tightly, ready to release all of his magic at once.\n\nThe mouth of the cave stank of charred flesh, and he stepped inside, the wand now burning his flesh.\n\n\"Ana!\" If she was here, she already knew he was coming. \"Come out of the shadows, you eight-legged bitch!\"\n\nThe glow of the wand illuminated the cave, and it was immediately apparent that it was no longer safe. Part of the ceiling had caved in toward the back, revealing a tiny sliver of daylight from above that illuminated the floor of the cave. From where he stood, he could see what was left of the egg sac. Beneath the stones, they had been crushed into little more than goo.\n\nThe space was eerily quiet. Moving closer to the back, Cyrus nearly tripped over something that had been pinned beneath the rubble.\n\n\"No fucking way.\" He knelt down, the pain in his body forgotten, and poked at the object. It was one of the Arachne's legs, buried beneath the rubble. Half expecting another spider swarm to attack, he gave the leg a solid kick.\n\nIt scooted to the side, but went no farther. Determined, Cyrus grabbed the leg and pulled as hard as he could, nearly throwing up in the process. The leg creaked, shifted, then popped free.",
        "\"My god.\" He examined the jagged edges of the broken end. She really must be under there. Dropping the leg, he just stared at the pile of rocks for several minutes, then looked over to the busted egg sac.\n\nSo many thoughts ran through his head, and he wouldn't be able to know unless he checked. Running outside, he knelt down next to Jeffrey's corpse. Blood had stained the hillside, but a quick examination told him that Jeffrey seemed to be intact.\n\nThere was no way the Arachne would have left such a meal behind, not if she had survived. When his wand had gone off, he had inadvertently triggered a cave in, killing the Arachne. What happened after was suspect, but he imagined that Darren had somehow gotten the drop on poor Jeffrey, then run away.\n\n\"I'm sorry,\" he told the corpse, knowing that he could have saved him if he hadn't been knocked unconscious. He had no time or energy for tears, for there was still work to be done.\n\nStanding in front of the cave, he activated the magic of the rod and blasted it, focusing the energy inside. Heat and smoke poured out of the impromptu chimney up the hill, and Cyrus poured his heart and soul into the magical burst until he collapsed on his hands and knees. The stones had been charred properly, and the inside of the cave glowed ominously with heat. If any of the eggs had survived the cave in, they were now properly torched.\n\nHe sat down on a nearby rock and took a deep breath. His body was flooded with toxins, antidotes, and pain killers. He needed to get somewhere with a phone and place a call, get other members of the Order to come out and scour the place for any eggs she may have hidden, as well as retrieve Jeffrey's body for a proper burial. The man would be heralded as a hero for his role in exterminating the Arachne threat.\n\nBut first, Cyrus needed to make it back to the road. It was a lonely walk through the woods, and the sun was going down before he returned to the overturned station wagon. He was surprised that nobody had noticed it, and it wasn't until he got up on the road that he realized that the wreck couldn't be seen from the road proper. It would likely sit there until someone pulled off the road for a quick piss, unaware that they were looking at an impromptu headstone for the extinction of the Arachne.\n\nTwo cars drove past in the span of an hour, and Cyrus worried he was going to have to spend the night by the road, but luckily an unhitched semi stopped for him and gave him a lift to the nearest town, which was hours away. Around midnight, he found a shitty motel on the edge of town with vibrating beds and working phones. He paid in cash before going to his room.\n\nThe phone call to the Sanctuary was a sobering one, and he dutifully reported that Jeffrey had been killed in action. They told him to stay put, and they would send someone to come pick him up. Uncertain of his own success, Cyrus asked if the Oracle had anything to say about the Arachne.\n\n\"The violence of the Arachne has come to an end,\" was the only response anyone got from the Oracle regarding the Arachne or her eggs. Several days later, after his own medical release, Cyrus found out that a proper search of the forest had revealed no sign of any additional eggs, or Jeffrey's missing sword. The Order eventually decided that Darren was likely a drifter once more, and unable to harm either the Order or their divine mission, and no longer worth the effort.\n\nOn the day Cyrus was assigned a new partner, he visited Jeffrey's grave in a secret graveyard just outside of the Sanctuary. It was unmarked with anything other than a symbol, and he laid a packet of jerky and a beer beneath the stone, fully knowing that it would be cleaned up by the groundskeepers in the morning.\n\n\"We did it, partner.\" The morning was cold, but his heart was warm. Knights rarely grew old, and Jeffrey was no different. He had been one of their best, and Cyrus would never forget his sacrifice. When he left, he made sure to keep looking forward, ready to move on to the next job.\n\nHe knew Jeffrey would have wanted it that way.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nThe walk through Oregon had been difficult, but Ana had done very well, despite missing two of her legs. She had Darren help her slice off her busted leg at the highest joint, then planted it in the cave under a bad portion of roof. After triggering the cave-in, the two of them had fled, stopping only long enough for Darren to help her corner and take down a black bear. Fascinated, he had watched her feast on the thing, draining it dry before carrying it to a nearby lake and loading its corpse full of rocks before tossing it in the water. They needed to leave no trace of their passage, which was why they stuck largely to small streams or hard stone while they traveled.\n\nAna made him a sling for his arm, and also a filter so that they could safely drink from the streams. He didn't pretend to understand how the silken strands from her body worked, but he loved the way she worked with her hands while spinning a complex pattern. Her front legs helped to, folding and unfolding as needed.\n\nSleeping beneath the stars, Darren was surprised how quiet the forest could be when it sensed an apex predator like Ana nearby. She built them a small hammock up in the canopy, and something about sleeping twenty feet off the ground made him feel safe. They held each other for warmth, and he often woke up to feel her legs wrapped around his lower body, holding him close.\n\nThe next morning, she left him to hunt, and came back with another bear. He made a small fire and cooked part of it to the best of his abilities, and she slurped the rest of it down, and then ran down a nearby deer while he waited for his meal to cook. Her belly full of food, she snuggled against him while he ate, and the two of them continued their hike, avoiding the main roads.\n\nThroughout the day, she scratched at the melted skin of her body. It was like watching someone peel a sunburn, only the skin beneath it was smooth and healthy. Apparently her body was covered in many fine hairs, and when the fire had burned her, she had become so disoriented that she couldn't get out of the cave in time to attack Jeffrey right away. As they walked through the woods together, he learned more about the true Ana, about how her body worked, and her fear of being alone.\n\nHe shared his own stories, surprised at how easy it was to tell her about how his squad planned to start a construction company, how he and Dwayne were going to build adjacent houses and raise their families together. It was an impossible future for him now, and he realized he had never properly mourned its passing. That night, when they made camp, he broke down, his face flooded with tears for his fallen comrades.\n\nAna held him tightly that night, and he watched his squad drift away into the darkness to keep watch, leaving him alone with her. In her arms, he couldn't help but feel a sense of belonging, a connection that he sorely missed.\n\nHe kissed her, and she kissed him back. This time, they made love properly beneath the quiet canopy of the forest, whispering to each other as if they feared the world might hear them. There was no sense of urgency, and they took their time, exploring one another properly. The stars themselves were soon hidden away by the clouds, and only when Ana and Darren were submerged in the pitch black of the wilderness did they dare cry out to each other.\n\nLaying with Ana in a hammock above the ground, he curled his fingers around hers. She let out a sigh, and pressed her head into his shoulder. Up above, the stars were winking through gaps in the cloud layer.\n\n\"We're getting close,\" he told her. \"Will probably be in Bend tomorrow. The next day, we'll get to your aunt's place.\"\n\n\"Probably. And she's not really my aunt.\"\n\n\"Any idea what's waiting for us there?\"\n\n\"No. But...\" She kissed his neck. \"Maybe it doesn't matter so much, as long as you're with me.\"\n\nHe smiled, and ran his fingers through her hair. \"Ever since I got back from the war, I've felt like I've been running. Running from the past, from Charlie, from bad dreams that find me in the middle of the day. Yet... even though we're trying to get to this safe place, I don't feel like I'm running anymore.\"\n\nAna was silent for several moments before answering. \"I think I feel the same way. I've been running since my nest was burned, and lived among humans for so long, pretending to be something I wasn't. I hid who I was, not just from society, but from myself. With you, I don't feel like I'm in hiding anymore. It's a good feeling, to be accepted.\"\n\nDarren thought on that for a bit, a smile on his face. He knew that the only reason he had been attracted to her at first was that she had chased the dreams away, sending them back to the shadows where they belonged. Now, however, it had become something more. He needed her as much as she needed him. It was a feeling he hadn't felt since Dwayne had died, and he was surprised at how much he missed it.\n\n\"Ana?\"\n\nShe didn't respond. Instead, she muttered something in her sleep, and her front legs wrapped around his waist, holding him close.\n\nThat was okay. He would tell her tomorrow.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nEpilogue\n\nDarren swerved the tires of his Jeep Renegade II to avoid the giant pothole in the road, the supplies shifting in the back. The unpaved road was washed out in places, but that also meant the odds of running into somebody else were nearly nonexistent, though he did occasionally spot hikers out here. They were usually lost, an effect of some kind of magic that existed on the land, magic that kept others away. He didn't pretend to understand how it worked, but he had long ago figured out that he now belonged to a world that was hidden away from mankind in plain sight. And they weren't the only ones either. He had been just as surprised as Ana to discover that that their new home wasn't entirely empty.\n\nMost importantly, though, he was happy. He breathed the forest in, grateful it wasn't raining today. The road would be slick with mud, and he would be a drowned rat already. At least the ash from Mount St. Helens had finally washed away; that had been a bitch to clean off the chassis of the jeep.\n\nHe navigated a complicated set of potholes, making a mental note to fill one of the more troublesome ones in. While rare, he did occasionally get the jeep stuck while out on his monthly supply runs, which meant a delay of at least a day or two while he got help pulling it out.\n\nThe jeep hit a rock, causing it to ricochet off of a nearby boulder with a loud bang. He flinched, his fingers gripping the steering wheel tightly.\n\n\"Just a rock, bud.\" Dwayne sat in the passenger seat, his legs up on the dashboard. \"Nothing to worry about.\"\n\n\"Nothing to worry about,\" Darren repeated, looking over at his brother with a grin. He hadn't seen the others for years now, but his brother was always close by, ready to offer his advice. When Darren turned his eyes back to the road, he caught a glimpse of his own face in the mirror.\n\nThe resemblance between the twins was still there, but Darren was much older now, with a full beard peppered with white, and the start of crow's feet around his eyes. Dwayne, however, would be nineteen forever. God willing, there would come a day when Darren would see an old man looking back at him in the mirror.\n\nThey rode in silence, moving slowly across the difficult terrain. Eventually, they came to the archway. Made of a pair of trees that had somehow grown into each other, Darren slowed the car down and coasted toward it. Even though he had done this dozens of times, the thick foliage he drove toward still made him nervous.\n\nThe foliage gobbled up the front of the car, and his whole body tingled when he passed through to the other side. The trail on the other side had been widened by him for the jeep, and the nearby branches welcomed him home with loving strokes against the car's paint. The road consisted of a pair of dirt paths roughly the width of his tires, and he could almost feel the taller weeds dragging along the bottom of the cab.\n\nIt was another thirty minutes through the woods before he popped out of the forest and looked down into the valley. From here, the cabin down below looked small, but it was surprisingly large on the inside. He stopped the jeep for a minute, a hint of a smile playing across his lips. Even though he was eager to get back, there was something about the view from up here that put his mind at ease. Smoke came out of the chimney, a good sign that Ana was cooking him a meal to welcome him home. He hoped it was fresh venison; she knew it was his favorite.\n\nHe heard rustling from up above, but ignored it, his eyes still on the cabin. The rustling grew louder, and with the sun overhead, he could see a large shadow bending the branches above him.\n\nSuddenly, the creature dropped down on him through the open sun-roof, all eight of her legs splaying out to catch herself on windshield and rollbar. She leaned forward, her upside down face suddenly blocking his view.\n\n\"I caught you!\" She grabbed his beard with both hands and gave it a tug. \"You didn't even see me coming!\"\n\n\"You're getting so good at stalking, Eulalie!\" Darren grabbed his daughter's head and held it still so he could kiss her on the forehead. \"Do you wanna ride with me down to the cabin!\"\n\n\"Yes!\" The tiny Arachne flipped over and spread her legs along the back of the jeep, her hands and face just above the rollbar.\n\n\"Were you good while I was gone?\" He put the jeep into gear and drove down the long, winding trail.\n\nEulalie's head drooped, and she looked away.\n\n\"Eulalie?\"\n\n\"I got in trouble for my webs.\"\n\n\"What did you do this time?\"\n\nThe five-year old rolled her eyes and let out an exasperated groan. \"I was practicing sticky webs and forgot to clean them up before lunch. Emery got stuck in one for over an hour, and mommy made me clean the barn as punishment.\"\n\nSomewhere, Dwayne let out a laugh.\n\n\"So what are you going to do next time?\"\n\n\"No webs in the house, only in the forest with mom or Uncle Foot.\"\n\n\"That's right.\" He put his hand on her head and ruffled it. She had hair that was brown like his, and her skin wasn't nearly as pale as Ana's. She shared her mother's eyes, and her shiny body was covered in a spotted pattern that would go away when she got older. \"Other than webs in the house, were you good?\"\n\n\"Uh huh.\"\n\n\"I got you something.\" He reached over and popped open the glove box, then pulled out the yellow box. \"Here.\"\n\n\"New crayons!\" She snatched them away and held them in the air, her feet doing a little dance on the rim of his car.\n\n\"Don't eat them this time.\" Darren never pretended to fully understand Arachne biology, but the multicolored webs his daughter had produced for over a week had been fairly amusing. Well, for him, anyway. Ana made him promise to wait until she was older before letting her have them again.\n\nEulalie chattered at him ceaselessly for the rest of the drive, and when he pulled the jeep into the small barn next to the cabin, he set the brake and got out. His daughter was able to carry almost as much as he could, and helped him with the boxes in the back. His limp had gotten worse in the last couple of years, and it wouldn't be long before he needed a cane, and he was grateful that they had raised a daughter who enjoyed helping.\n\nWhen they walked in the door, Ana stood in the kitchen in a plain black blouse with an apron around her neck. Standing over a couple of pots, she smiled at the two of them.\n\n\"Is that stew?\" Darren asked, his mouth watering.\n\n\"Maybe. Did you buy those books I wanted?\"\n\n\"I did.\" He set the boxes he carried down, and Eulalie set hers next to his. \"Got you enough to last through winter.\"\n\n\"We'll see.\" Ana turned her attention to Eulalie. \"Sweetie, were there any more boxes in the jeep? Can you get them, please?\"\n\n\"Uh huh!\" The little spider bolted out the front door, leaving Darren with his wife.\n\n\"I wanted to show you something.\" Ana stepped away from the stove and into his arms, placing a gentle kiss on his lips.\n\n\"Oh? But she'll be back any second.\"\n\n\"Not that... but maybe after she's asleep.\" A wicked smile crossed her face, and she stuck her hand behind her back, feeling along her waist. When she brought it back, she held a single egg the size of a small watermelon.\n\n\"Oh my god, really?\" Darren's eyes went wide in excitement.\n\n\"Yes, really. It was smaller than the others, and I can tell she's more like her father than her mother.\" She held the egg up for him to feel. It was warm, and felt like it vibrated at his touch. \"So, how do you want to tell Eulalie that she's about to be a big sister?\"\n\nHis eyes shining with tears, he pulled Ana in and kissed her deeply. The future used to be a locked door, but it was now left wide open, just waiting for them to step through it. As long as they believed in each other, anything was possible.\n\nBehind him, he heard Eulalie walk through the front door and let out a groan.\n\n\"Ew, boring!\" Eulalie set her box down by the door and scurried outside, a blue crayon already in her hand. He heard her scrambling up the outer wall of the cabin, followed by the sound of an angry squirrel chattering at his daughter somewhere up above.\n\n\"Was she holding a crayon?\" Ana asked, her face suddenly serious.\n\n\"Um... yes.\"\n\n\"If she draws on the ceiling again, I'm going to make you clean it.\" She showed him the fangs of her teeth as a warning, but then winked at him, her eyes sparkling.\n\nDarren smiled, touching her face with his hands. The world was a scary place, but with her by his side, he had finally found peace.\n\n<center>\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f\ud83d\udd77\ufe0f</center>\n\nI hope you enjoyed this little tale of mine. At times, it was difficult for me to write, but, as always, I did my best.\n\nDon't forget to rate, review, or send me feedback, I absolutely love hearing from you. \n\nAlso, the number one question I have gotten from readers so far is about Darren's squad. Were they actually there, or was he hallucinating?\n\nThe answer is quite simple, dear reader. Those we leave behind are never truly gone. What form that takes, however, is up to you.\n\n<center>POW\u22c6MIA\n\nYOU ARE NOT FORGOTTEN</center>"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "fighting",
        "monster girl",
        "redemption",
        "romance",
        "spider girl",
        "traps",
        "venom",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-last-of-her-kind-ch-07"
}