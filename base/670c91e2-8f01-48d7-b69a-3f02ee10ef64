{
    "title": "How The Troll Grinched Litmas",
    "pages": [
        "Author's note:  In case you're not familiar with Literotica, it may add to your enjoyment of this story to know that the lady whose image adorns the home page of this site is named Erica and her exploits can be found in the chain story, \"Memoirs of a Lady\".\n\nEvery Lit\nDown in Lit-ville\nLiked Litmas a lot...\n\nBut the Troll,\nWho lived outside of Lit-ville,\nDid NOT!\n\nThe Troll hated Litmas!  The whole Litmas season!\nNow, please don't ask why.  No one quite knows the reason.\nHis butt plug may not have been screwed in just right.\nOr maybe his tit-clamps were latched on too tight.\nBut I think that the most likely reason of all\nMight be that his cock ring was two sizes too small.\n\nBut,\nWhatever the reason,\nHis cock or his tits,\nHe sat there on Litmas Eve, hating the Lits.\nStaring down from his chair with a foul Trolly grin\nAt the lady whose memoirs were recounted within\n\nFor almost five years now he'd stared at that page\nAnd every new sight of her filled him with rage.\nHer tight, saucy buttocks; her jiffy-pop hair\nThat half-hidden look of \"Come on, if you dare\"\nShe made his blood boil, she made his skin twitch\nAnd he muttered to no one, \"I'll get you, blonde bitch!\"\n\nFor he knew it was she who had started this site\nA home for both readers and those who would write\nOf topics outrageous and others routine\nProvided, of course, you were over eighteen\nA place where most any thought flourished and grew\nWhere very few things were considered taboo\n\nShe stood there each day, standing guard, taking stock\nLike a bold mother hen watching over her flock\nBut the Troll snarled and hissed, \"I'll set fire to your nursery.\n\"If I have my way, there'll be NO anniversary!\"\n\nThen he laughed and he laughed till he started to choke\nBut in truth he was nervous and when he next spoke\nHis thoughts were uneasy and his voice sounded queer\n\"Tomorrow is Litmas!  It's practically here!\"\nAnd he growled, the blood in his shrunken cock thrumming\n\"I MUST find some way to stop Litmas from coming!\"\n\nFor,\nTomorrow, he knew...\n...All the Lit gals and gents\nWould log on quite early with feelings intense\nAnd then!  Oh, they'd read!  They'd read!  Read! Read! Read!\nAnd as they'd read, jerking, they'd scatter their seed!\nThey'd read all the poems and they'd read all the stories\n Of sex in the bedroom, and at holes of glory\n\nThen the Lits, old and new, would calm down and they'd vote.\nAnd they'd vote!  And they'd vote!\nAnd they'd VOTE!  VOTE!  VOTE!  VOTE!\nThey'd vote high or low and they'd vote cool or hot\nDepending on levels of cream and dicksnot\n\nAnd THEN\nThey'd do something\nHe just couldn't take!\nEvery Lit down in Lit-ville,\nThe snakes and the flakes,\nWould join close together, some shy and some boasting.\nThey'd sit at their keyboards.  And the Lits would start posting!\n\nThey'd post!  And they'd post!\nAnd they'd POST!  POST!  POST! POST!\nAnd as the Troll thought of this Lit celebration,\nHe brushed it aside as just group masturbation.\n\"It's really quite funny,\" he thought with a smirk\n\"The whole world's caught up in this great circle-jerk!\"\nBut the notion still rankled, \"It's been almost five years!\"\nWhy, the idea alone brought him nearly to tears\n\"I've put up with this nonsense for long enough now!\nI MUST stop this Litmas from coming!\n...But HOW?\n\nSo he stood and he thought\nAnd he stared at his dinky.\nIt was a pitiful thing, rather small and quite wrinkly\nThe Troll parted his legs and he poked it right through\nTill his useless appendage was hidden from view\n\nAnd what happened then,\nWell now, wouldn't you know?\nAn idea (and his dinky)\nBoth started to grow.\n\nAnd as his poor wiener poked out past his hammies\nHe thought of those Litsters asleep in their jammies\n\"I know just what to do!\"  The Troll laughed in his cheeks\n\"I'll soon get the best of those hapless Lit geeks.\"\n\nHe went to his closet and rummaged his clothes\nHe found some black pumps and his last pair of hose\nFrom under the pile, he fished out a red vest\n\"Now, this will be perfect to cover my chest!\"\nWith tennis balls adding va-voom to his shape\nAnd his dinky secured to his butt with duct tape\nThe mirror revealed him a vision in red\n\"All I'm missing is something to cover my head.\"\n\n\"What I need is a wig...\"\nThe Troll looked around.\nBut then the Troll thought, \"All of my good wigs are brown.\"\nDid that stop the old Troll...?\nNo!  The Troll simply said,\n\"If I don't have a blonde wig, I'll make one instead!\"\nSo he grabbed an old mop and he cut off the threads\nAnd he draped the old flop mop atop of his head.\n\nBut the Troll wasn't happy.\n\"I look just like Joan Rivers!\nIf anyone sees me, I'll give them the shivers!\"\nSo back in his closet he searched and he dug\nAnd something he found brought a smile to his mug\nA Santy Claus hat in bright red, trimmed in white\n\"Now, that's just what I need to wear on THIS night!\"\n\nAnd he chortled, and joked, \"What a great Trolly plan!\nNo one will EVER suspect I'm a man!\nTo Lits 'round the world and all over America\nTo Lits one and all, I'll be sweet Lady Erica!\"\n\nTHEN\nHe grabbed his spare hard drive\nThe gazillion-byte model\nAnd he laughed and he said,\n\"This should handle their twaddle.\"\n\nWith a tug on his vest\nAnd a click on his mouse\nHe began his assault\nOn the sleepy Lit-house\n\nThe BB was quiet, all the forums serene.\nThe Lits were all dreaming of stories obscene\nWhen he came to the first little thread on the screen.\n\"This is where I get off,\" said the Troll with a hoot\nAnd he climbed in the thread with his hard drive to boot.\n\nThen he made himself read and he tried not to gag.\n\"These people,\" he thought, \"must be half in the bag.\"\nHe got stuck only once, like a spider in glue\nAs he pondered the meaning of Lumberjack Foo\nHe reached the thread end and he hunkered down low\n\"These postings,\" he grinned, \"are the first things to go!\"\n\nThen he slithered and slunk, like a slinky with tits,\nAround the whole forum, and he took all the bits!\nProfiles!  Avatars!  Sig Lines!  Posts!\nUpdates! Web Links! Pictures! And Boasts!\nHe took all the data.  And then, the old sleaze,\nHe transferred it onto his hard drive with ease.\n\nWhen he finished that thread, he went on to the next\nHe added those photos!  He added that text!\nAs quick as a flash and with little decorum\nThe Troll emptied all of the news from that forum.\n\nTHEN\nWith his hard drive in tow and his smile something hellish\nHe pondered the choice of his next act with relish.\n\nHe made his decision and he started to move\nWhen he heard a small sound, interrupting his groove.\nHe turned around fast, and he saw a young Lit!\nLittle Laurel Lit bit, who was small in the tits.\n\nThe Troll had been caught by this tiny Lit lady\nWho knew right away that his dealings were shady.\nShe said with despair, \"Lady Erica, why?\n\"Why have you taken those threads away?\"  WHY?\"\n\nBut, you know, that old Troll was so smart and so wise\nAnd he knew that she hadn't seen through his disguise\n\"Now listen, young lass,\" the fake Erica said,\n\"It's really quite late and you should be in bed.\n\"Big doings tomorrow for Litmas, you know\n\"If you sleep too long, then you'll miss a great show!\"\n\nAnd little Laurel Lit smiled and she nodded okay\nAnd she gave him a hug before going away.\nBut she couldn't resist saying, her voice like a snigger\n\"Your tits may be firm, but my nipples are bigger!\"\nHe glanced at his chest, the round orbs with no tips\nAnd he wondered, \"Why didn't I think to add nips?\"\n\n\"NOW,\n\"Where was I?\" he thought, with his bushy brows bristling\nThen he remembered and went back to work, whistling.\nHe chose his next forum and went on with his task\nAnd he thought up some more lies, in case someone asked.\n\nHe ate up more cookies\nThan Santa, the old louse\nLeaving crumbs much too small\nFor a click of the mouse\n\nTHEN\nHe did the same thing\nTo the other Lit browsers\n\nLeaving crumbs\nMuch too small\nFor the other Lit mousers\n\nAnd the last thing he did, just to add to his glory\nHe went to the index and he \"1\"d all their stories\n\nIt was almost that time...\nAll the Lits, still a-snore\nAll the Lits, still a-split\nWhen he finished his chore.\nHe patted his hard drive and he chuckled with joy\n\"Five years to build and one night to destroy!\"\n\n\"Too bad for the Lits!\" The Troll said with disdain.\n\"Their story is over and there'll be no refrain.\n\"They're just logging on!  I know just what they'll see!\n\"A 'This Space For Rent' sign atop the marquee!'\n\n\"That's a sight,\" grinned the Troll\n\"That I simply MUST see!\"\nSo he logged on himself, just to check the debris\nAnd what he saw then almost gave him a stroke\n\"This must be a joke!\" he sputtered and choked\n\nFor the sight wasn't sad!\nOh, quite the contrary!\nIt couldn't be so!\nBut THIS site was merry!\n\nHe stared down at Lit-ville!\nThe Troll popped his eyes!\nThe Troll got a terrible, shocking surprise!\n\nFor all the Lits down in Lit-ville,\nThe straights and the swishes,\nWere posting Lit greetings\nAnd spreading good wishes!\n\nHe HADN'T stopped Litmas from coming!\nIT CAME!\nSomehow or other, it came just the same!\n\nAND\nThe Troll, with his troll-cock tucked under his butt,\nFelt wonder and worry creep into his gut\n\"Their web site is down; I'm quite certain of that!\n\"So how are they able to log on and chat?\"\nAnd he puzzled three hours, for the rest of the morn.\nThen the Troll got a shock, like the blast from a horn!\n\"Maybe Litmas,\" he thought, \"is no object of scorn.\n\"Maybe Litmas...perhaps...isn't just about porn!\"\n\nAnd what happened then...?\nWell...in Lit-ville they say\nThat the Troll's small cock\nGrew six sizes that day!\nHis cock ring exploded!  He jumped from his chair!\nHe had so little time and so much to repair!\nHe whizzed with his hard drive back down to the site\nHis juices were flowing; his jizz spurting white.\nAnd he brought back the forums!  And the site's inventory!\nAnd he...\n\n...HE HIMSELF...!\nThe Troll wrote a new story!"
    ],
    "authorname": "Gaucho",
    "tags": [
        "lady erica",
        "hard drive",
        "troll",
        "cock ring",
        "lit",
        "thought"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/how-the-troll-grinched-litmas"
}