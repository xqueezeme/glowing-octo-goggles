{
    "title": "For The Ladies",
    "pages": [
        "My first post in the How To section was How To Seduce a Woman, but this one is for you ladies, and hopefully, it'll show you how to spice up your love life and how to keep him coming back for more. \n\nFirst of all you should know men are visual creatures, aroused by what they see, such as breasts, nipples, buttocks, faces, luscious lips, or bedroom eyes. But you should also know that not all men are the same, and different things arouse different men. For instance, some friends of mine are turned on by long shapely legs and a nice firm ass and could care less whether a woman has big or small breasts. This may be what arouses your partner or it may not be, but in either case, you should know what turns him on and accent that part of your body. Always keep in mind what it was like when you were dating, before you became partners, and make yourself a visual feast.\n\nHere's an idea. Sit down and ask your partner what would give him a raging hard on, something he's always wanted to see or do. Now, you might wonder why your partner never talked to you about what really arouses him, but the answer is simple: almost all men have fragile egos and are afraid you might laugh at them or get mad at them if they reveal their deepest fantasies.\n\nBased on personal experience I can tell you two things most men would like to see. One is to watch a woman masturbate and the other is to watch their partner be seduced by another woman. When it comes to women making love, your partner may join in or he may not, but trust me, whatever he does, later he'll fuck your brains out.\n\nSo ask your partner what turns him on and listen to what he says. And probably one of his fantasies will be what I mentioned above, but if having another woman make love to you isn't appealing, that's fine. Let him know and make it part of the ground rules in helping him live out one of his fantasies.\n\nLet me give you a couple of examples of what's happened to me. A very dear lady friend I hadn't seen in ten years called and invited herself over to my place. I told her to make herself at home while I took a shower, and when I came out of the shower, I heard her in the kitchen washing dishes. I threw on some clothes, went into the kitchen, and found her facing me wearing an apron, the kind the covers you from neck to knees. I told her to forget about doing the dishes, but she just grinned and turned around to face the sink, revealing she had nothing on under her apron. Well, the sight of her nude body gave me a hard on a cat couldn't scratch, and I told her she looked hot as hell and was ready to get it on right then and there. But she had other plans for us and asked me if I still wanted to watch her masturbate, something she'd said years before she'd never do. \n\nOf course I told her I did, and she led me into the living room and made me sit down on the couch while she sat down across from me in a comfortable chair with arms. She lifted the bottom half of the apron, put a leg over each arm of the chair and proceeded to finger fuck herself into oblivion. I got so excited my dick was about to rip through the front of my shorts, and when she finally had an orgasm, I threw off my clothes and we fucked like a pair of rabid weasels in heat. When we finished making love and lay spent on the floor I asked her if she had ever made love to another woman. She responded that when she was younger the idea hadn't appealed to her, but recently she'd gotten curious and had made out with a girl friend but only kissed and felt each other's breasts. I asked her if she'd enjoyed it, and she said she'd got a kick out of it and next time would go all the way with her girl friend.\n\nMy second example involves an old neighbor of mine who has long since moved away but was what men refer to as a walking wet dream. She was in her early 30s and had had five kids, but she looked like she was only 20 and had the whole package, small waist, large breasts, heart-shaped face, long dark hair, and a vivacious personality. I ran into her at a local store one day, we got to talking, and I gave her my address and telephone number and told her to call me some time if she wanted to talk. Well, she called me two days later, and after talking for twenty minutes, the conversation turned to sex and within an hour, I knew what turned her on and what turned her off. She was amazed she'd revealed so much about herself, but she told me I was easy to talk to and started calling me every day. \n\nThis went on for over two weeks, but then I noticed a change in her mood and tone of voice. I asked her what was wrong, and she said her husband was ignoring her. She'd meet him at the door the night before dressed in her sexiest lingerie, and all he'd done was yawn and go to bed after eating dinner. She was upset because their love making had gone from every night to maybe once or twice every two weeks, and I told her he just might be bored. She said she'd tried everything to fire him up but they usually ended up fighting. I asked her whether she had ever tried masturbating for him, and she said she hadn't because she wasn't sure how to do it right. Then she started crying, wailing she was at her wit's end to know what to do, and I calmed her down and told her I'd walk her through what she needed to do. It took me a while to convince her I knew what I was talking about, but she finally said she'd do like I said and promised to try it that night. \n\nWell, the next day she called overjoyed that masturbation had done the trick. She'd made her husband sit down in a chair in their bedroom, tied him up, and let him watch while she finger fucked herself only a few feet away. Then she'd given him a blow job while he was still tied to the chair, and he'd blown a huge wad into her mouth. When he started to go limp she'd stood just out of reach of his tongue, bent over and finger fucked herself again. Well, that had really gotten him going, and when she'd untied him, they'd fucked until the wee hours of the morning. She wanted to try having phone sex with me, and I played along, talking dirty to her. And she loved it so much that from then on she called me each morning just to have phone sex.\n\nWhat I'm saying is if you want to spice up your sex life you have to be willing to experiment. You might try going topless while riding home with him from a party. And I know that works because I had a lady friend do that to me and I can tell you I was ready when we got home. It started out as a joke, with me betting her she didn't have the guts to go topless for twenty miles, and the next thing I knew she was buck naked not just topless. I have an open mind but it shocked me, and I told her she'd made her point and to get dressed. But she said a dare was a dare, rode all the way home that way, and when we got into the house, we enjoyed ourselves the rest of the night.\n\nI can hear some of you saying, \"But I have kids.\" So get a babysitter and check into a motel room or send them over to grandma and grandpa's for the night. And if you can't do either of those things, work out something that lets you and your partner have time alone, which is the important thing. And another way you can spice up your sex life is to call him at work and tell him what you're going to do to him when he gets home. Or put a pair of your sexiest panties or a nude Polaroid of yourself in his briefcase or lunchbox and call him at work and tell him what you did. \n\nIf you're open to the idea of another woman making love to you, I would suggest you approach a woman you already know. You don't have to eat her pussy and she doesn't have to eat yours. Start out slow and just feel each other up through your clothes. Then after a few times of this you might remove an item of clothing and go a little further. But don't rush it, go at your own speed. And if you do decide to do this for your partner, set the ground rules of what you will and won't do before you start, and this way there will be no misunderstanding that could cause a problem. And remember, you're in control, not him. Most guys are like little kids and it doesn't take much to get them in the mood.\n\nAnd like I said earlier, all men are different, and you have to let him know that you're aware of that fact while he's talking about what turns him on. And tell him nothing he says will shock you. If he wants to wear your panties and bra, don't laugh, make a game of it. And always remember, no matter how tough the man is on the outside, on the inside is a fragile ego and laughing at or getting mad at his fantasies could ruin your sex life forever. And if you want him to do what you want to do in bed, you have to listen to him. It's a two-way street and both men and women must listen to their partner's needs and wants.\n\nAnd once you both open up about what your sexual needs are your sex life will improve. You the cologne will attract women. Sales of the cologne go up with sexy women in the ads, but will stay the same or decrease if all the ad shows is the bottle of cologne. Men don't really care what the cologne smells like, they buy it because of the hot babe in the ad and what the ad suggested.\n\nRemember, if your sex life is wanting or stale, try something different. If you have a regular night for sex, switch nights. Put some variety in your love-making. Try different positions. Do it in the living room or in the kitchen. Do a slow strip tease for him. Undress him but don't let him touch you. Put on some flavored nipple cream. Attack him in the shower. Meet him at the door dressed in a robe and nothing else. Spice up your lingerie. Buy a see-through bra. Wear a thong or edible panties. Go to a party wearing no panties and let him know you want to be finger fucked on the way home. Let him watch you get dressed in a garter belt, stockings, and a half-cup bra, and tell him he can take them off later if he's a good boy. While at a party or out eating dinner, flirt with him. Touch him a lot. Let him touch you. Exchange kisses while doing everyday chores. Rub against him with your breasts or pussy. Use your imagination. And always remember it costs nothing to try something different.\n\nWell, that's my advice. Take what you need, leave the rest, or ignore it. It's up to you. But always remember men are boys at heart and if you stroke their egos a little you just might be surprised at what happens. "
    ],
    "authorname": "Sshafer",
    "tags": [
        "spice sex",
        "threw clothes",
        "call work",
        "eating dinner",
        "lady friend",
        "ground rules",
        "she'd made",
        "finger fucked",
        "phone sex",
        "girl friend"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/for-the-ladies-1"
}