{
    "title": "The Red Headed Waitress",
    "pages": [
        "In 'Electric Dreams' our recurring character, the private investigator Karin Roland, recently moved with her family from New York to Oregon where she's started back up after a two-year long sabbatical. We've given Karin another mystery to solve. There's no sex in this one; but if you're into a short tale, which we're certain some of you will solve before Karin, we hope you'll enjoy our latest submission to Loving Wives. \n\nThis is a work of fiction. All characters and incidents portrayed and names within are fictitious and any similarity to the name, character or history of any person is entirely coincidental.  \n\n*\n\nKarin Roland sat at her desk in her home office, finalizing a personnel background check for a new client when the phone rang.\n\n\"Roland Investigations, Karin Roland speaking.\"\n\nIt was a woman's voice that responded, she sounded young. \"Hello, Ms. Roland. I was given your name by my neighbor, Mrs. Coppolini. She said you're the detective that solved the Miller murder for the police. I have a strange situation and Mrs. Coppolini thought you'd be the best person to talk to.\"\n\n\"First, can you give me your name?\"\n\n\"Oh right, I'm sorry; I've never spoken to a detective before; I'm nervous. My name is Nadine French.\"\n\n\"Well, Ms. French. What do you mean by 'strange situation'?\"\n\n\"Actually, it's two situations. Is there any way we could meet in person? It's rather personal and I need to show you a couple of photographs.\"\n\nKarin double-checked her calendar before answering. \"I'm available at two this afternoon. We can meet at the coffee shop around the corner. It's never crowded at that time and we won't be disturbed. Would that time work for you?\"\n\n\"Yes, I'm free all day; thank you.\"\n\nKarin gave Nadine the address and hung up. She went back to writing up the report and didn't give Ms. French or her 'situations' another thought until one-thirty when her alarm went off. \n\n*********\n\nKarin walked into the coffee shop five minutes early and noticed a young red headed beauty sitting at a corner table, a look of anticipation on her pretty face. \n\n\"Are you Nadine?\"\n\nThe young woman stood up immediately, holding out her hand. \"Ms. Roland?\"\n\n\"Please call me Karin. Have you ordered?\"\n\n\"Not yet.\"\n\n\"Stay here and save this table. What will you have?\"\n\nAs Karin walked to the service counter she observed Nadine fidgeting. The young woman was dressed tastefully, probably Nordstrom's, wore her hair in a professional cut, no visible tattoos or piercings. Athletically slim and modest makeup. The most striking feature was the deep red hair. Karin walked back to the table with their coffees and began.\n\n\"Now, how can I help you?\"\n\nNadine could barely get the words out, in a voice just above a whisper, she stuttered, \"My huhusbband wants a dididivorce.\" Then fell quiet. \n\nKarin reached across the table to hold the young woman's hand. \"Start from the beginning, you said there were two situations.\"\n\nNadine used a napkin to wipe away the tears; then began to tell a strange tale.\n\n\"Six months ago I lost my job working as a waitress when the restaurant I worked for closed due to the Covid lockdowns. I was only out of work a week when I received a call from a headhunter, offering me a job that paid more than I was making at the restaurant, including the substantial tips I used to make. Unfortunately, I'd have to travel three days a week. I talked it over with my husband and we both agreed the money was good and the job would most likely be temporary, until this whole Covid thing passed.\n\n\"My job was going throughout the Western States, mostly into upscale restaurants, but also some chains, as well as Mom and Pops - seeing how they handled the restrictions due to the crisis. I'd go in each restaurant once or twice, order a meal, evaluate their protocols and service; then try to interview the management. I had a form that I filled out after each evaluation that I emailed to the office.\"\n\nNadine's paused, her eyes started to water, her shoulders began to shudder.\n\n\"I came home Wednesday evening after two days in Phoenix. My husband, Peter, was waiting for me. He handed me an envelope with a copy of the separation papers and three photographs. He said I'll be officially served Monday.\"\n\n\"Was this unexpected? Were you two having issues?\"\n\n\"No. I mean, there was some tension with my traveling. Peter was using the time to concentrate on his job; he's been spending more time in L.A. at his company's home office. But we've spent every weekend together and things were OK, I thought. Then this.\"\n\n\"So, what happened? Did he give you a reason?\"\n\nNadine pulled the envelope out of her purse and looked around the caf\u00e9 before sliding three photos out of the envelope. Two of the photos were of a man and woman having sex in what appeared to be a hotel room. The third was a photo of Nadine and the same man in front of a closed hotel room door, this one taken from across the atrium. As Karin looked at each photo, the woman in the photo had bright red hair and an athletic build; but neither of the two photos in the bed showed the woman's face. \n\nNadine explained. \"That's not me in bed with the man. I mean it looks like me, but it's not me. That is me at the door, but that man was never in my room.\"\n\nKarin looked at the photos again. The first thing she noticed was the two photos couldn't possibly be taken without the subjects' knowledge. \"This woman has a small tattoo of a bird on her shoulder.\"\n\n\"That's the worst part, I do, too. A parrot. Even the woman's earrings are identical to the pair Peter gave me last Christmas. My favorite pair that I wear whenever I'm dressed up.\"\n\nKarin had to ask. \"And this isn't you?\"\n\n\"NO\" Nadine had raised her voice a bit, then looked embarrassed. \"I'm sorry; of course you have every reason to doubt me. Even my husband didn't believe me when I denied it.\"\n\n\"What about this photo in the hallway?\"\n\n\"That's another strange thing. Tuesday morning I walked out of my room to start my day. As I closed the door, this man stopped me. He said I dropped something. There on the floor was a pen, an expensive one. He picked it up, and showed it to me, asking if it was mine. I said 'no' and he walked away with it. I didn't think twice about it until I saw this photo that makes it look as if we're walking out of a room together.\"\n\nKarin had worked many divorce cases during the years she owned a detective agency in New York, she had to ask the next question. \"Is there a reason why your husband would set you up and make it appear as if you committed adultery?\"\n\n\"I thought about that, but I don't think that's the case. Peter was absolutely destroyed as he shared the photos with me. He said the photos were sent to him by the guy's wife.\" Nadine pulled out another note and showed it to Karin. It was printed text. \"KEEP YOUR WHORE OF A WIFE AWAY FROM MY HUSBAND!!\"\n\n\"Peter was practically in tears. He said he wanted to hand me an unofficial copy of the divorce papers so I wouldn't be surprised; but most of all he had to ask me why I cheated on him. The papers he gave me state he's divorcing me for 'irreconcilable differences' and he's only asking for a fifty-fifty split of our assets. We don't have children, don't own a house. I can't see anything he'd gain by setting me up.\" \n\n\"But someone went through a lot of trouble to set you up. Look again at the photo; I know it's hard. But do you see anything that would confirm it's not you in this photo -- look carefully.\"\n\nNadine forced herself to stare at both photos for a few minutes; then looked up. \"There's no mace canister on the nightstand!\"\n\n\"Mace?\"\n\n\"Yes, when I took this job and began traveling, Peter bought me a mace canister and made me promise to always keep it with me, even made me promise to keep it next to the bed. I told him it would force me to always check my bag when I fly. He said he didn't care, that unless I had it with me, he wouldn't be able to sleep when I was out of town. The canister isn't there.\"\n\n\"Well it's a little thing, but sometimes little things add up. Nothing else?\"\n\n\"No.\"\n\n\"You said on the phone there were two strange situations. What's the second?\"\n\nNadine looked emotionally exhausted but took a deep breath and continued. \"Well, I told you about my new job. I've been doing it for a little over three months now and I thought everything was going OK. Yesterday morning I called into the office to ask for next week off. I didn't think I could function with my marriage breaking up. Ms. Sims, the lady who works in the office, didn't answer the phone and didn't return my call. About eleven a.m. I went to the office and it was closed. I asked the Super to let me in and when he did, the place was empty. No Ms. Sims or her desk, no chairs, nothing.\"\n\n\"Why did you have the Super let you in? Didn't you have a key?\"\n\n\"No, I've only been to the office three of four times. First when I filled out my employment papers and a couple times since then. Everything I did, I did via email and phone calls. I know it sounds strange, but nothing I was doing was illegal or unethical. My payroll went into my account via direct deposit every two weeks. Ms. Sims would email my assignments two weeks in advance with my travel arrangements; after each trip I would submit my report and expenses. My reimbursements were never questioned. I was told the information collected would be used to develop a data base of best practices that the company would sell to restaurant consultants in case of future pandemics.\"\n\n\"What's the name of this company?\"\n\n\"Service Industry Consulting, SIC; here's the cards they gave me.\" Nadine handed one of her cards to Karin. \n\n\"What's this phone number?\"\n\n\"Any time someone called that number, Ms. Sims would answer or would return a message within an hour or two. I didn't question that either, I figured since Ms. Sims was the only person in the office, that it made sense she wouldn't always answer. Ms. Sims told me the Portland satellite office was new, that more employees would be based out of there next year.\"\n\n\"Have you gotten any emails from them since yesterday?\"\n\n\"Nothing, and no replies to my emails.\"\n\nKarin spent a half-minute jotting notes before asking another question.\n\n\"Was the headhunter someone you contacted?\"\n\n\"No, I hadn't even considered a headhunter; they said they were given my name from one of my old managers; but didn't say who.\"\n\n\"You say 'they'; was it a man or woman?\"\n\n\"I couldn't tell.\"\n\n\"And the name?\"\n\n\"The person I talked to gave their name as 'Erin Smith', I never was given the name of the company; 'Erin Smith' said the hiring company paid all the expenses and, silly me, I was so excited, I never pursued it.\"\n\n\"And your only contact at SIC was this Sims.\"\n\n\"Yes, Dori Sims. I think she's English, maybe Australian. She has an accent.\"\n\n\"And every week you went out of town, visited a few restaurants, made your reports, got paid, and that was all? Nothing unusual on the road or at home until Wednesday when your husband gave you the photos and yesterday when you found the office empty?\"\n\n\"I've racked my brain since yesterday and I can't think of a thing. I feel like such a fool, never investigating, never asking any questions.\"\n\n\"Don't blame yourself too much. Like you said, you weren't doing anything illegal or unethical, you needed money and you were getting paid. The old saying goes, 'don't look a gift horse in the mouth'. Your husband obviously thought it was OK, otherwise he would have raised alarms.\"\n\n\"It still hurts to be such a chump. Will you look into this?\"\n\n\"It will cost you some money. I don't work for free.\"\n\n\"The money Peter and I were saving to buy our first house is sitting in our account. I'd rather spend my half trying to get to the bottom of all this than wonder for the rest of my life.\"\n\nKarin pulled a contract out of her folio; the two of them discussed the terms and what could be expected before Nadine signed. \n\nAs they stood up to leave, Karin thought of one more thing. \n\n\"Your husband said you can expect getting served Monday; is there anywhere you can stay to avoid that?\"\n\n\"I have a girlfriend in Vancouver. She could put me up for a while. Why?\"\n\n\"I don't want this to reach the legal stage until we know more. We don't know why you've been set up or by who. I'd like those questions answered before we talk to Peter and it will be easier to talk to him if you haven't been served.\"\n\nJust the words, 'talk to Peter' brought a lightness to Nadine's face. Could there be hope for their marriage? \"Thank you, Karin.\"\n\nKarin watched the young woman walk out the door and down the street; hoping she hadn't overstepped when she threw Nadine that lifeline.\n\n***************\n\nKarin's phone had been set to 'silent' during the meeting; checking it, she saw one missed call from her husband Bill and one voice message. \n\n\"Hey babe. Another late night again tonight. Hopefully, this is the last one. We're going to order in here and push through. I'll call you if I'm going to be past nine. Love you.\"\n\nThe last three weeks have been hell. Bill took this position as CFO a little over a year ago and this was the first year the responsibility of producing year-end reports was totally on his shoulders. Bill bragged about the great team of accountants working in his department, but even with those four sharp wiz-kids, Bill felt the weight of it all. It had been three weeks of late nights and long weekends, but it had to end this weekend, the report went to his Board next Wednesday.\n\nKarin poured a glass of wine before heading back into her home office and firing up the laptop. Anthony was out on a date and Bill was at work -- might as well get to work.\n\nShe did a quick Google search for 'Service Industry Consultants' and came up empty. She searched every state's Secretary of State websites for a registered company under that name -- empty. A LinkedIn search for 'Dori Sims', 'Erin Smith' and 'Aaron Smith' produced the same negative results. Everywhere Karin turned, she encountered a brick wall. Everywhere until she searched for 'Peter French'; it came back with a short bio of a young tech up-and-comer who was second in charge of development at Hippolyta Enterprises. By now it was eight and she was still at the terminal when her phone beeped with an incoming text. \"FINISHED! Home in twenty minutes -- pour me an ale, please!\"\n\nTwenty minutes later, Bill walked into the house, laid a sloppy kiss and a giant hug on Karin, then took two gulps of the Bridgeport IPA Karin had poured for him. \"Remind me why I took this job.\"\n\n\"Because you love it, at least you loved it for the other fifty weeks of the year. Are you really finished with year-end?\"\n\n\"Yes, Danielle and Larry are spending tomorrow collating and binding, but it's all done. I don't want to hear an accounting term until Monday morning.\" Bill looked in Karin's office, saw the display glowing and all the notes scattered across her desk. \"What are you working on so late?\"\n\n\"Sit down. Damn Bill, you've already finished that ale. Give me your glass.\" Karin went into the kitchen; poured Bill a second ale and another glass of wine for herself. Then told Bill about Nadine French's strange case. \n\nBill listened to the first half before interrupting. \"I thought you were through with the marital, cheating cases.\"\n\n\"You should have seen her, Bill\"\n\nBill smiled; it was just like his wife. Hard as nails on the outside, soft as pudding inside; always ready to help someone with a problem. \n\n\"Besides, wait until you hear the rest of this girl's tale.\"\n\nBill was attentive as always. Karin could count on Bill's input; he possessed a sharp, analytical mind and read at least two mystery novels every month. Bill looked at the photos and immediately shot up from the chair and headed into the den. He returned with a thick volume. Karin watched as he read down the list of contents, then handed the book to her.\n\n\"The Complete Sherlock Holmes?\"\n\nBill smiled, \"Read this story.\"\n\nKarin spent the next half-hour reading the story. When she finished, she looked up to see Bill smiling at her. \"When I saw the photo, the woman's red hair, it jogged my memory. There's not much new under the sun when it comes to these things. Whether in fact or fiction, it's all been done before.\"\n\n\"So, someone developed this elaborate scheme to get Nadine French out of the way? Who would do this?\"\n\n\"Who benefits? The husband?\"\n\n\"Not from what Nadine said. She told me the husband is crushed. He's taking his half and moving to L.A.; his company offered him a promotion at the head office.\"\n\n\"Someone thought it would be worth the time and the considerable money to separate the two. It had to be the goal; just like in the story, the job didn't end until the desired effect was achieved, in this case, when Mr. French told his wife they were through.\"\n\nThis gave Karin an idea. She spent ten minutes online, then picked up her phone and called Nadine.\n\n\"Nadine, sorry to call so late, but this is important. I want you to go online and search through the photos you'll see of the actresses on a website, I'm emailing you the link as we speak. Take your time, let me know if you see anyone you recognize. Call me first thing in the morning; whether you find anything or not.\"\n\nBill watched and listened as Karin's phone call end. \"So much for me ravaging my wife's body tonight. Can I get you anything?\"\n\n\"Sorry, babe. Dump this wine and bring me a Diet Coke, OK? I need to follow up on a couple things before I go to bed. You're a doll; thanks for giving me a direction.\" Before Bill even crossed the threshold, Karin was searching through the Phoenix actors' union website.\n\nBill went to bed; he'd seen Karin wound up like this before and knew she had a long night ahead of herself. \n\nKarin was still at it when Anthony came home from his date, it was just after midnight. They spent few minutes chatting; Anthony even asked if his mom needed help. She said 'no' and he left her at the terminal. By two she found what she was looking for. She booked a flight to Phoenix for Monday, shut everything down and went to bed. Bill rolled over and gave her a kiss good-night.\n\n********\n\nThe phone rang at eight Saturday morning. Karin barely gotten a soft 'hello' out before Nadine interrupted.\n\n\"Tori Brown!\"\n\n\"What?\"\n\n\"Dori Sims is Tori Brown. I found her photo on the actors' union website you had me check. She's right there listed as available for plays, movies, TV. I stayed up last night until I found her photo but waited until this morning to call you. I hope it's not too early. Sorry.\"\n\n\"Don't be sorry. That's great news. I found our mystery man as well. He's an actor down in Phoenix. I'll be flying down there Monday to talk to Mr. Jason Holland.\"\n\n\"What's going on? Why is this happening?\"\n\n\"I'm still sorting this all out, Nadine. Be patient. In the meantime, could you give me your husband's contact information?\"\n\nNadine gave Karin Peter's number and where he worked. She didn't know where he was staying the last four days.\n\n\"One more thing, and this is important; don't hold anything back from me. If you do and I find out, I'll quit. Sorry if I offend you but -- are there any men, or women for that matter, in your life who would want to break up your marriage? That your marriage is the only reason for not having a relationship with them?\"\n\nNadine couldn't understand the question. \"I don't know what you mean.\"\n\n\"I want you to think, Nadine. Is there anyone waiting around the corner? Someone who thinks they have a chance to pick up the pieces if you and Peter divorce?\"\n\nThe question made Nadine pause; pause long enough to give Karin the impression that she may have struck a nerve. She hadn't realized how bad her question shocked the young woman, who was wondering to herself, 'Do I know anyone that evil?'. Finally, Nadine answered. \"No, I honestly can't think of anyone who would do such a thing.\"",
        "Karin was relieved, but also disappointed. It would have solved the mystery if Nadine had blurted out a name. \"That's good Nadine. Sorry if I upset you.\"\n\n*********\n\nMonday morning, Karin was standing in the TSA line, waiting to suffer the latest indignities. As a former New York City police officer assigned to anti-terrorist activities, she understood the need for security, but it's been almost twenty years since nine-eleven and the powers that be still hadn't figured out a better way to screen passengers. How many times has she watched an agent pat down some confused little old lady who forgot to put her lipstick on the conveyor? \n\nBy the time the plane landed and Karin walked out of the Phoenix airport to catch a cab, her contact in Arizona had left a message where she could find Jason Holland. He was working as a waiter at a local Olive Garden. Karin made certain the hostess seated her at one of Jason's table. It was late in the lunch hour; the place was thinning out. Holland approached Karin's table with his big 'welcome' smile flashing. \"Good afternoon....\" was all that left his lips when he saw the photograph of himself, naked in bed with the redhead, lying on the table. \"What the ...\"\n\n\"Hello Jason. I'll have the soup and salad lunch special, a diet cola, and the chance to talk with you at your earliest, and I mean earliest, convenience.\"\n\n\"Can you please put that away before someone sees it?\"\n\n\"Why Jason? Are you ashamed of it? The lady who is supposed to be in bed with you, the lady whose husband is divorcing her because of this photo, is thinking of posting it on the Internet. Her life is already ruined, why shouldn't yours be ruined as well?\"\n\n\"I get off at two. Can we meet across the street at the coffee shop and discuss this?\"\n\n\"I'll eat lunch and wait for you there. Don't disappoint me by not showing up. You'll make me very angry and that's not a good thing.\" Karin said this last line with enough menace in her voice to give Jason the distinct impression that the woman was not joking. Karin enjoyed her lunch and walked across the street.\n\nAt two-o-three, Jason sat at the outdoor table across from Karin. Karin didn't waste a moment.\n\n\"Tell me about the photos.\"\n\n\"I can't. I was paid four thousand dollars and signed a non-disclosure agreement.\"\n\n\"That's too bad. You're between a rock and a hard place. You'll have to decide who you want to piss off - whoever paid you to pose for these photos or my client. She's ready to post these photos publicly and sue you in the amount of one-hundred thousand dollars for perpetuating a fraud; her husband is divorcing her based on these photos.\"\n\n\"One-hundred thousand. I don't have a hundred-thousand!\"\n\nWith ten years police experience interrogating suspects, Karin innately sensed when to play good cop and when to play bad cop. \"Tell that to the judge, asshole. Or -- tell me what happened and who paid you. Otherwise, be prepared to have your life go circling down the toilet bowl.\"\n\nJason Holland folded like a cheap wet napkin.\n\n\"I was contacted through my agent. I met a man who offered me four thousand dollars to pose for simulated sex photos. I was told these would be used for private purposes, they'd never be seen publicly and was given a contract to sign which included his guarantee to me and my non-disclosure agreement. \n\n\"I met the man the following week at a hotel, there was a woman there, we posed in bed, simulating sex. The guy stood next to the bed and took a few dozen shots. The next morning I waited for a similarly looking woman to leave her hotel room, I was told to pick up the pen lying in front of the door, ask the woman if the pen was hers, then walk away. The same guy was directly across the atrium, in the room from the previous night, taking photos of the encounter.\"\n\n\"Had you ever seen the woman at the door before?\"\n\n\"No\"\n\n\"Where's your copy of the contract?\"\n\n\"In my apartment, locked up in my desk.\"\n\n\"Describe the man.\"\n\n\"A big guy, maybe six-two, thirty-something, bi-racial, bald head; kind of reminds me of Vin Diesel.\"\n\n\"What about your bed partner?\"\n\n\"Cute face, brown eyes, red hair which I think was a wig, nice body.\"\n\n\"Ever see her before; in any of your acting gigs?\"\n\n\"Never; I'd remember that face.\"\n\n\"Didn't you question why you were hired to do this?\"\n\n\"It was four-thousand dollars. To tell the truth; I assumed it was some guy who needed proof his old lady was cheating and I was just providing the proof.\"\n\n'One more sleaze-bag' was what Karin thought, but didn't say it out loud. \"Let's grab a cab to your apartment; I want a copy of that contract.\"\n\nJason didn't argue. Within an hour Karin was back downtown. In her briefcase was a copy of the contract and a signed statement from Jason Holland that the woman in the sex photos was not the woman at the hotel room door. \n\nThe earliest flight with an available seat back to Portland wasn't taking off until nine-thirty. Karin sat at an outdoor table at a sidewalk caf\u00e9 drinking a glass of wine and enjoying the dry heat. So different from the Portland Spring weather. She'd have to see if Bill could get a few days off so they could get a long weekend down here soon. \n\nKarin spent the next two hours arranging a meeting with Peter French for Wednesday. She left a message with Tori Brown's agent, inferring she might have an acting gig for her and to have Tori call her. \n\nThe toughest call was to her client; Karin didn't give Nadine all the details of today's meeting with Jason Holland. If Bill's theory that the object of this ruse was to split the couple, and given it was a man who set up the sting in Arizona, it made sense that Nadine was the object of this man's attention. Karin had already asked Nadine whether she thought that could be the case and Nadine denied it. Was she lying or na\u00efve? Or maybe the theory was wrong.\n\nKarin was disappointed by the time she ended the call to Nadine. Nadine denied knowing a Howard Stone, the name on the contract, and his physical description didn't ring any bells. Karin spent another hour on her smart phone trying to trace a Mr. Howard Stone; she found a few references to people with that name, but none of them fit the description of the mystery man.\n\nOne nice bit of luck -- Tori Brown called her back and arranged to meet the following afternoon. \n\nIt was just after one a.m. by the time Karin collapsed into her own bed. \n\n*********\n\nTuesday afternoon, Karin met Tori Brown in her agent's conference room. Karin and Tori were alone, the agent only stuck his head in the door to let them know he was available if there was a contract to sign. Karin decided to use the same direct approach that worked so effectively with Holland.\n\n\"Ms. Brown, or should I say Ms. Dori Smith, tell me about your job at SIC.\"\n\nTori's face paled at the words. \"Hey, what is this? I was told we were here to discuss a part in a movie.\"\n\n\"I lied. Just like you lied to Nadine French. Ms. French is prepared to sue you for your part in the destruction of her marriage. You'll be served by the end of the week; we're suing you for two-hundred thousand dollars for your part in the fraud.\"\n\nTori's face grew even more pale at the number. \n\n\"I can't talk to you. I signed a non-disclosure contract.\"\n\n\"That contract won't protect you from legal damages. You have five minutes before I walk out the door and call Ms. French's attorney.\"\n\nTori's acting skills could always be counted on to get her out of trouble. She started to tear up, her lips started to quiver, she bent down placing her face in her hands, her voice shaking. \"I'm sorry, I needed the money after I was laid off at work. I was nearly homeless, the money I received just barely kept me from losing my apartment.\"\n\nTori looked up, surprised to see the hard expression of indifference on Karin Roland's face. 'Who is this woman?' thought Tori, the tears always worked.\n\n\"I was a New York police officer for over a decade. Do you have any idea how many actors and actresses I pulled over for various reasons while I was working patrol? You're very good, I must admit. I once stopped one of the Kardashians and your routine had her beat. It's the quivering lip, I think; that's what sets you apart. You now have two minutes before I leave.\"\n\nTori hunched over and the real tears started. \n\n\"Let's start out simple. Describe the man who contacted you.\"\n\nTori looked up. \"It wasn't a man; It was a woman.\"\n\nKarin did her best not to register surprise at learning there was another party involved, a woman. \"Describe the woman.\"\n\nAbout this time, Tori's agent popped his head in the door again. \"Everything all right in here? Need any coffee or anything?\"\n\nKarin smiled at the agent. \"No, we're fine. Thanks.\" Tori's head was faced away from the door and the agent didn't stick around to see his client's tears.\n\n\"Go ahead; you were saying.\"\n\n\"Mid-thirties, I would guess. Shoulder length brunette, expensive cut and color. She wore expensive clothes. An attractive woman, five-seven in low heels, medium build.\"\n\n\"White, black, or..?\"\n\n\"White, a little bit of sun. Either lives in the South or had been on vacation down South; not a spray-on tan.\"\n\n\"What name did she give you?\"\n\n\"Helen Rhodes.\"\n\n\"The CV with your publicity photo stated you do accents; Ms. French thought you were English or Australian. Did you do the headhunter Erin Smith voice, too?\"\n\n\"Yes. It was supposed to be an androgynous voice to add to the confusion.\"\n\n\"Well, it worked. I spent hours searching for a recruiter with either the male or female versions of Erin.\"\n\nJust like any actor, Tori gave a half smile hearing Karin's complement. \n\n\"How much did you get paid and what were you told to do?\"\n\n\"I met Nadine French at an office the first day to have her sign some papers and set up how she'd be paid directly to her bank account. I only went back to that office two additional times when I was expecting Nadine to stop in; everything she submitted was via the internet or through emails. On the rare occasions when she called, or if a restaurant called to verify Nadine's credentials, I answered on a phone Rhodes provided. I'd answer with my SIC English accent.\"\n\n\"Did Helen Rhodes sign the non-disclosure contract?\"\n\n\"Yes.\"\n\n\"Did you ever meet a big man; about six-two, bald, bi-racial?\"\n\n\"No, only Rhodes. Can you tell me what this was all about? Rhodes stopped by my apartment Wednesday evening, said the job was finished, took the phone and key to the office, handed me two-thousand in cash and reminded me about the non-disclosure agreement. It's the last thing she said to me.\"\n\n\"How much did she pay you all together?\"\n\n\"Forty-five hundred.\"\n\nKarin told Tori the entire scam seemed to have been set up to get Nadine out of town so she could eventually be photographed in bed with another man. That the photos were faked, but good enough that Nadine's husband planned to divorce Nadine.\n\n\"Damn, that's cold. Tell you what, if you promise not to tell anyone where you got it, how would you like a photo of Helen Rhodes?\"\n\n\"You have a photo?\"\n\n\"Yea, it was all so weird I had my roommate sitting in the caf\u00e9 across the street the second time I met with Rhodes. She was able to get a photo with her phone. It's not great, but it's better than nothing. I have it on my phone.\" Tori showed her the photo.\n\n\"Can you forward it to me?\"\n\nTen minutes later, Karin was walking out of the agent's office with a fuzzy photo of Helen Rhodes that had been taken from a distance by Tori's roommate. She had one more piece of the puzzle, but still didn't know where the pieces fit. \n\nKarin called Peter French. \"Mr. French, I know you agreed to meet with me tomorrow; but I think you might like to meet today given the information I'd like to share with you.\" Peter agreed to meet Karin at the pub around the corner from the long-term stay hotel where he was living since leaving the apartment he once shared with Nadine.\n\n******** \n\nPeter French was sitting in a booth at the back of the bar, drinking a pint of dark ale. Karin stopped the barmaid and asked her to bring a glass of Merlot to the booth. Peter stood up as soon as Karin approached the booth with her hand held out. As they shook hands, Karin was surprised by Peter's physique. Nadine had told her that Peter was a computer programmer, the man standing in front of her had the body of a football player and the face of a movie star. \n\nWith the introductions out of the way, Peter jumped right in.\n\n\"You said on the phone you've been hired by my wife and have proof she wasn't the person in the photos. That's the only reason I agreed to meet with you. My attorney told me she hasn't been at home and hasn't been served. Depending on what you tell me, if it doesn't prove Nadine's innocence, do you agree to tell me where she is?\"\n\n\"Yes, but it won't come to that; I'll come right to the point. Here's a signed declaration by the man in the photos; his name is Jason Holland. Mr. Holland is an actor and was hired to pose with a woman who was supposed to fool you into thinking it was your wife in bed with him.\"\n\nPeter interrupted. \"That's awfully hard to believe.\"\n\nKarin waited until the barmaid brought her wine, Peter waived her off when she pointed to his half empty pint. With the barmaid gone, Karin pulled the photos out.\n\n\"Take a good look at the photos. Notice these two didn't capture Nadine's face? Also look at the angle of the photo; do you think someone could have taken those without Nadine being aware a third person was in the room with a camera? Now look at this last photo, the one at the door. There's no intimacy between the man and Nadine. This shot was taken from across the atrium, Holland had just picked up a pen that was left in front of your wife's door, Holland asks your wife if the pen is hers, the photographer takes the photo and Nadine never sees the man again, until you give her these photos.\"\n\nPeter kept paging through the three photos, trying to digest everything Karin was telling him. \n\n\"I have a statement signed by Jason Holland, confirming what I've just told you. One more thing; Nadine's job was a ruse to get her out of town on a regular basis. Someone or someones wanted her out of town until you decided to divorce her based on these photos. Last Thursday, Nadine showed up at the SIC offices and the place was empty. Her contact at SIC, Dori Sims, is actually Tori Brown, also an actress paid to pretend SIC was a real company.\"\n\n\"Who would do such a thing?\"\n\n\"Maybe you tell me; Nadine can't explain it. I admit, I thought it was someone who wanted to pursue Nadine after you divorce her, but I'm having my doubts. Do you know this woman?\" Nadine showed Peter the fuzzy photo on her phone. \n\nPeter looked at the photo without saying word, then fell back, staring into space. \"Damn, I am such an idiot! How could I be so damn stupid?\" The expression on Peter's face would have been humorous if the situation wasn't so serious. Karin waited patiently for Peter to explain.\n\n\"That's my boss, Greta Hesse, the founder and CEO of Hippolyta. This is crazy; but now it makes some sense. She's been dropping little hints - how traveling spouses can be tempted on the road; how even the strongest marriages rarely survive the suspicion, if not outright infidelity. I called Greta Tuesday evening, told her I needed some time off; that she was right, that Nadine had cheated and we were through. Greta offered to pay for my move to the home office in L.A. I always thought her flirting was a little over the top, almost harassment, but she knew I was devoted to my wife.\"\n\n\"So she created this entire thing because she has the hots for you?\"\n\n\"Yea, unbelievable, right? A little over a year ago, at the company holiday party, Greta got a little drunk; very out of character for her. She said a couple things to me about Nadine not being in my league, 'that little waitress' is how she put it. I ignored the comments and two weeks later, when I went down to the home office, Greta apologized. I told Greta if anyone was out of anyone else's league, it was me; that I was happy in my marriage and the lucky one.\"\n\n\"Wait, do you know a man; about six-two, bi-racial, a Vin Diesel kind of guy?\"\n\n\"Sounds like Andre Hillman, Greta's personal bodyguard.\"\n\n\"He's the photographer. He hired Holland down in Phoenix and took the photos here.\"\n\nThe two of them sat quiet for a minute - drinking and thinking.\n\n\"How did your boss know about the parrot tattoo and the special earrings?\"\n\n\"Probably from the holiday party. There was a photographer there. Nadine wore a backless dress and didn't cover the tattoo. She was probably wearing those earrings at the party; they're her favorites when we go out.\"\n\nPeter stared into Karin's eyes. \"I really screwed up. Do you think Nadine will ever forgive me?\"\n\n\"Why don't you call her and get it started. Even Nadine said she'd have thought it was her in bed with the guy if she didn't know better. They thought of everything: the hair, the tattoo, the earrings. Your boss played on the inevitable concerns when spouses travel. You both were played by someone willing to do and spend anything to make you suspicious.\"\n\nPeter and Karin spent another half hour discussing what he'd do about his boss' treachery and came up with a plan. Peter dialed Greta's personal number. The call couldn't be used in any legal proceeding, but it would verify Greta's involvement.\n\nGreta was pleased to see it was Peter's number on her phone's read out. \"Hi, Peter.\"\n\n\"Greta, call me slow, but I just figured it out. How you were behind Nadine's job, sending her out of town, giving her the opportunity to cheat on me until she finally ended up in bed with another man.\"\n\nGreta couldn't believe her luck, Peter still thought it was Nadine in the photos; but she wasn't ready to admit her part in the scheme. \"Peter, I don't know what you're talking about.\"\n\n\"Please, Greta. If we're going to have any kind of future, you need to tell me the truth. We can't start a relationship if we start it with a lie. Tell me why you did it.\"\n\n\"Because, you big goof-ball, I'm madly in love with you! How could you not know that? But of course - because you're a typical clueless man when it comes to love. That's why you didn't know your wife was cheating until I showed you the proof. Now get yourself down here where you belong.\"\n\nPeter heard enough and needed to get off the call before he lost it; imagine - this woman calling his wife a cheat. \"It will take me some time to get things straightened out. Hang in there for a few weeks. OK?\"\n\n\"I'll wait Peter, but not for long. I've already waited too long. I love you.\" \n\nPeter hung up. \"My gawd, the woman is completely delusional.\"\n\n\"Now call Nadine.\" Karin got up to leave. \"I'll take care of the rest as we agreed. You take care of Nadine.\" She stopped to pay the barmaid for the drinks and couldn't help but overhear Peter. \"Hi babe; I'm sorry, sorrier than you can ever know. Can I come home? I miss you and I love you.\"\n\nKarin walked to her car thinking that sometimes this job is all right. She booked a flight to L.A. from the app on her phone. \n\nKarin walked in the door to find Bill and Anthony in the kitchen making dinner together. Karin kissed Anthony on the cheek and Bill on the lips; Bill put his arm around Karin's waist and squeezed with possession. \n\nKarin looked up into Bill's eyes. \"Have I ever told you how much I love you?\"\n\n\"About ten-thousand times or more. Why, what did I do now?\"\n\n\"Is dinner ready? I can tell you while we eat. I'll go get washed up.\"\n\n\"Wine? We're having spaghetti tonight.\"\n\n\"Yes, please. I'll be right back.\"\n\nAt dinner Karin told Bill and Anthony about the crazy case and how Bill's reference to Sherlock Holmes helped steer her in the right direction, despite some detours. Both Bill and Anthony were fascinated. ",
        "After dinner, Karin called Nadine. Nadine couldn't stop thanking Karin for all her help; she and Peter were already home and making up. \n\n\"I can't get him to stop saying he's sorry.\"\n\nKarin told Nadine what Peter and Karin had agreed to at the pub. 'Whatever Peter decided' was fine by Nadine; although a part of her wanted Greta Hesse to suffer at least for a while.\n\n\"But I know that will just prevent us from getting on with our lives. Peter has been putting off a Seattle company that's been trying to recruit him. He's going to take that job now and we'll move North.\"\n\n\"I think it's for the best, Nadine. But it's your decision. I'll call you and Peter after I meet with Ms. Hesse.\"\n\nNadine thanked her, wished her 'good luck', and went back to allowing Peter to make it up to her.\n\n********\n\nKarin took a cab from LAX to the Hippolyta headquarters. The elevator took her up to the executive floor where Karin was stopped by the receptionist. Karin handed an envelope marked 'Personal and Confidential' to the young lady and told her Ms. Hesse would be very interested to see the envelope's contents. The receptionist handed the envelope to Ms. Hesse's executive assistant, who picked up the phone. The office door next to Hesse's office opened and a large, dark, bald man took the envelope from the executive assistant before walking back to his office. \n\nKarin sat at in a chair in the reception area. Ten minutes later Andre Hillman came out and asked Karin to follow him into Greta Hesse's office. Greta stood, but didn't offer Karin her hand. She asked Karin to sit and Andre sat next to her.\n\n\"How can I help you, Ms. Roland?\"\n\n\"I'm here representing Mr. and Mrs. French. They would like to settle this matter privately, out of court; although they are ready to pursue the matter publicly, if you prefer.\"\n\n\"Is this blackmail?\"\n\n\"No, I think you'll find the French's are willing to be more than reasonable, more reasonable than I would be under the same circumstances.\"\n\n\"What are they asking?\"\n\n\"They are requesting you pay my fee, sixteen-thousand dollars. Plus, Peter French's attorney fees for the divorce paperwork, that's twelve-hundred dollars. Peter French is requesting you sever his employment with Hippolyta, give him the standard layoff package and a good reference. He's also asking for the nine hundred dollars he spent on the hotel room after he left his wife.\"\n\n\"What else?\"\n\n\"That you personally apologize to both of them and that after that, you leave them alone. I'm requesting you not pursue either Jason Holland or Tori Brown for violating the terms of the non-disclosure agreement; I didn't give either of them a choice. It would be in everyone's best interest if the whole sad affair was put to rest. Any pursuit of these individuals would only increase the likelihood of Hippolyta's Board or investors getting wind of this.\"\n\n\"I don't understand. Why are they letting me off so easy?\"\n\n\"They're getting on with their lives, together. Peter is 'pursuing other opportunities', as businesses like to say. And most of all, they feel sorry for you.\"\n\nThose words struck Greta harder than a fastball to the chin. It took Greta a half minute to recover. Her voice barely recovered. \"Andre, could you let me talk to Ms. Roland in private? Thank you.\"\n\nKarin waited until the door closed behind Andre. \"It was a rotten thing you did; trying to break up a happy couple.\"\n\n\"If I could break it, it wasn't as strong as they thought, was it?\"\n\n\"I don't think that's fair; you pulled some awfully dirty tricks.\" \n\n\"Was it Shakespeare who wrote 'all's fair'? I can see the ring on your finger, Ms. Roland. You have someone to go home to, someone to share your bed at night and cuddle next to.\"\n\nKarin didn't answer, so Greta continued. \"I've had relations with three men in the last seven years. Two were rich, like me, 'Masters of the Universe' as Tom Wolfe put it; both treated our relationship as if it was a merger; the romance being less important than the 'bonding' of two entities. The third was a con-man gold digger who almost got me to the altar.\n\n\"Then I meet Peter French. A wonderful man - handsome, poised, smart -- all the qualities of the 'right' guy. Best of all, completely faithful to his vows, even when I flirted. I spent the last three months slowly working on Peter, trying to undermine his faith in Nadine's fidelity. I flew up to Portland last weekend after he told me about the photos and the divorce; tried to get him to come back to my hotel room; he said he was still married and would be until she was officially served. Can you believe that? \n\n\"I have a ten-thousand square foot house on the beach at Malibu; townhouses in Vail and Kauai; I'm the CEO of a multi-billion dollar company -- and I can't compete with a waitress from Portland.\"\n\nKarin almost felt sorry for the woman -- almost. \"It was still a shitty thing to do, breaking up a happy marriage.\"\n\n\"Yes, it was - but I don't care. You probably have a kid or two. I bet they're great kids. In a few years, my eggs will be too old. Sure, I could have children on my own; but damn it, I want a husband to be my children's father. I want to look out my back window and watch my children play catch with their Dad.\"\n\nKarin didn't know how to respond to this; she had that -- a husband who loved her and their two children. So, she just let Greta talk. Instead, Greta changed the subject. \"Tell me, please; I spent months setting this all up, analyzing and correcting every flaw in the plan; how did you figure it out in less than a week?\"\n\nKarin considered leaving the woman hanging; but thought, 'what the hell' and told her. \"Sir Arthur Conan Doyle wrote a short story back in the nineteenth century, 'The Red-headed League', a Sherlock Holmes mystery. When my husband saw the photograph of Mrs. French, it reminded him of the story in which a clerk sets up a phony business to get a shop owner out of the way while an accomplice digs a tunnel from under the shop to the bank vault next door.\"\n\nGreta shook her head, \"Sherlock Holmes\" is all she said.\n\nGreta opened her desk drawer and pulled out a check book. \n\n\"I agree to all the terms. Who do I make your check out to?\" She wrote the check.\n\n\"And the attorney?\" Greta wrote a second check made out to the name Karin gave her.\n\nGreta wrote a third check. \"You said I owe Peter nine-hundred for the hotel room?\"\n\nKarin nodded.\n\n\"Here, give them this. I'll fly up to Portland later this week and apologize personally. But in the meantime you can tell them I'm sorry.\" Greta had made out the check, payable to Peter and Nadine French, for nine-hundred thousand dollars. \n\nKarin looked at the check, amazed. \"Are you sure? There's three extra zeros here.\"\n\n\"I won't make light of it; I grew up poor so I know it's a lot. But I could write a hundred of those and still have enough to live a life of obscene luxury. You know, Peter only confirmed why he was the one. He has more integrity than any man I've ever known.\" Greta's eyes were moistening, it was time to leave. Karin turned toward Greta before exiting the office.\n\n\"A couple years ago I couldn't take it anymore, certain aspects of the job were driving me crazy. I quit to get my head squared away; it was the best thing I could have done. You're not asking me for advice, but I'll give it to you anyway. Take some time off and fix your personal life. Take a long sabbatical; you don't need the money and these were the actions of a desperate person. It's the nature of all double-A type personalities -- wanting it all.\"\n\nGreta hated getting advice, she couldn't help but respond as if she'd been stung. \"Easy for you to say, easy for anyone who has it all.\"\n\nKarin laughed. \"Well, I'd like my leg back.\" And walked out the door.\n\nGreta stood at her desk, thinking, 'what an odd thing to say'. She sat down and Googled 'Karin Roland' and a few newspaper clippings came up. She read the July 3rd, 2007 story from the New York Times, detailing the police raid on a suspected terrorist cell. One of the officers, a detective named Karin Roland, was listed in critical condition after sustaining shotgun blasts to her legs. A subsequent article confirmed Detective Roland was recovering but had lost her right leg below the knee; surgeons were able to save her left leg, although it was severely damaged.\n\n\"I'll be damned.\" Greta said it out loud. She went to the door. \"Leslie,\" she called to her admin, \"could you schedule a Board meeting as soon as possible?\" \n\nThe End"
    ],
    "authorname": "BillandKate",
    "tags": [
        "business trip",
        "deception",
        "divorce",
        "loving wives",
        "mystery"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-red-headed-waitress"
}