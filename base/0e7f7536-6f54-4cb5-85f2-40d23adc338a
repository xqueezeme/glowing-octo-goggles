{
    "title": "A Long Walk Home Ch. 18",
    "pages": [
        "Dayton stopped long enough to let Aaron know he was fine and then ushered Freya upstairs to his room. He took her straight into the bathroom and turned on the shower as she undressed silently. Now the adrenaline was leaving his body he was left with a pressing need to check every inch of her skin for marks.\n\nNot that he expected to find anything on her but his wolf was going crazy inside him and he had to give in to his irrational need. He turned to find his mate naked and blood-streaked, her expression carefully guarded as if she was waiting for him to say something she wouldn't like. She was clearly concerned and so was he.\n\nHer standoff with Rafe in the forest showed that she was struggling with adapting to the pack. It wasn't that she didn't try to understand the group's needs; it was as if she was incapable of doing so. That didn't bode well for the future and they both knew it even if they hadn't spoken of it yet.\n\nSilently, Dayton tugged her into the shower with him and rinsed the blood from her body. His touch was gentle, his fingers examining every inch of her and finding her skin unmarred. Even though he'd expected it, he still couldn't hold in the sigh of relief as he wrapped his arms around her from behind and held her close to his chest. \n\nHis own body carried faint bruising though the main injuries had healed quicker than he'd expected them to. He wondered if was because of a combination of her previous healing of him and her mating bite. He hadn't completed the mating yet but maybe he was already feeling some of the benefits of the partial mating.\n\n\"I want you so much it terrifies me,\" Freya whispered softly, breaking the oppressive silence. \"I'm not terrified because of the need you inspire in me, but because I don't think I can be what you need me to be, Dayton.\"\n\nShe turned in his arms and her composed expression had melted away, concern on her face as she stared up at him. \"What if I can't accept the pack? What will that mean for us?\"\n\nHe bit the inside of his lip, his expression tense as he pondered her question carefully, listening to his wolf as well as his own heart. He reached up and brushed her wet hair away from her face tenderly. \"Then we will be a pack of two, Freya. I won't lie to you and tell you that I don't want to be part of this pack because I do. I never thought I'd ever feel this way again but being here has shown me that I need pack life to feel whole. But if push comes to shove, I need you more. There is no one more important than you, nothing I wouldn't willingly give up to be with you.\"\n\nHer breath caught at the promise she read in his eyes, the sincerity in his quiet words. He would truly leave the pack if she couldn't cope with it. He was willing to sacrifice everything for her if she allowed him to. Part of her was tempted to take the easy out he was giving her. But she knew that was wrong, what the old Freya would have done. She had come so far all because of the man who held her so tightly and swore he would never let her go.\n\nFor some strange reason Rayne's words came back to her and she realised that if she couldn't believe in herself then she would always be able to believe in Dayton. It was enough to make her want to try harder. Her mate thought she had it in her to be one with the pack. The Alpha also thought she did too, despite being angry with her. Maybe it was time to start listening to others rather than her doubts?\n\n\"I'll try harder,\" she promised fervently. \"But I'll need your help to stop me fucking up again.\"\n\n\"Always,\" he breathed against her lips, his arms tightening more around her. \"I won't let you drown, honey. I'll always be here for you.\"\n\nHis mouth took hers in a fierce, hot kiss that that promised her his words were true, that he would always stand by her. All she had to do was let him in, surrender to him and she could complete the journey she'd started the moment she'd laid eyes on a wounded wolf that had nothing left to live for.\n\nHer kiss was desperate, the longing deep within her to have what everyone else appeared to take for granted, spiralling out of control as she clung to him. She'd never felt so vulnerable in her entire life and yet she'd never felt so secure either. Being wrapped in Dayton's strong embrace gave her a feeling of belonging that was so poignant, so heartfelt that she didn't stop the tears that slowly trickled down her cheeks.\n\nDayton could feel the tremors running through her body, knew she was overwhelmed by everything again. He gentled his kiss before slowly raising his head to stare down at her. \n\nSeeing his vampire looking so vulnerable tore at his heart. He knew how strong she was having watched her take out the vampires earlier with a speed and grace that had taken his breath away. His mate was lethal, able to defend herself and the pack if only she could finally accept them as hers to protect.\n\nHe kissed her again softly, lightly teasing her lips with tiny rubs of his own as he soothed her distress as he would have soothed a wolf. The power of touch, the power of honest affection given freely was a great healer. He used his tenderness ruthlessly against her until she melted completely into his arms, then he raised his head again and smiled.\n\n\"As much as I'd love to take you here in this shower, I've a penchant for feeling a nice soft bed beneath us.\" His tone was teasing but also full of the crippling need he didn't try to hide from her.\n\n\"Rafe said he wanted us downstairs in an hour. We've already wasted most of that time.\"\n\nHer practical response made him laugh out loud as he hugged her closer. The fact that she was actually listening to what Rafe had said made his heart kick up a beat and hope flare deep inside him. \"Rafe can wait, honey. I'm not done with my inspection of your luscious body for injuries.\"\n\nFreya pulled away from him, frowning as her movement caused water to cascade over her face. She moved closer to him again, slicking back her hair. \"He gave us an order.\"\n\nHis wolf growled loudly, wanting to be with their mate, irritated that she was choosing this moment to be the sensible one. Dayton agreed with his wolf and decided to forgo the intimacy of the bed he so desperately wanted to indulge in with her. She was right on that aspect; they didn't have the time he'd need to satisfy himself between a pair of silk sheets.\n\nHis answering smile was nothing short of wicked as he wrapped an arm around her back and lifted her against the cold tiles. \"I guess we'll have to be quick about it then.\" He thrust himself into her searing heat as her eyes widened in surprise and her breath sucked in sharply. \n\nFor a brief second her eyes turned black and then they reverted back to their deep shade of green as he held himself still inside her, luxuriating in the feel of being joined with her so intimately.\n\n\"And you said I was the one who neglected foreplay.\" Freya didn't know how she managed to sound so calm. The feel of him inside her body was sweet bliss, causing her heart to instantly begin to speed up as she welcomed him with a tight squeeze of her muscles. \n\n\"One day soon I'm going to get to indulge myself in the kind of foreplay I've been longing for, honey,\" Dayton groaned out, his voice thick with need. \"Right now I need to be with you so badly, I can't wait.\" \n\nHe was moving even as he finished speaking, slowly leaving her tight warmth to thrust deeply inside her once more. He wanted to take his time but the feel of her gripping him so tightly was quickly eroding his self-control. His next thrust was deep and hard, a muffled groan escaping him as she pressed back against him eagerly, her arms tight around his neck.\n\n\"Harder.\" Her breathy demand turned his blood boiling hot and his hips rocked against her, taking her with ruthless intent, giving her what she wanted. Nails dug hard into his neck and he growled loudly, arching into her wild caress. His control snapped; his wolf close to the surface as he began to surge deep and fast into her body, his breath coming out raggedly.\n\nShe met him with equally demanding thrusts, her nails scoring him until she broke his skin and the iron scent of his blood filled the bathroom. \"Taste me,\" he ordered hoarsely, wanting to feel the ecstasy of her bite again. Her fangs sank into the side of his neck and for a moment he stilled completely, buried to the hilt inside her. His body shook wildly as he fought off his climax, not ready for their joining to be over.\n\nHis wolf howled loudly, a deep growl erupting from the very depths of him. It wanted to mate with her, wanted to claim her so she could never leave them. Dayton fought a mental battle with his animal, shuddering as he tried to contain it. She wasn't ready yet for what was entailed in a male Were mating. They needed to discuss it first so she knew what to expect.\n\nFreya raised her head, looking into his eyes and seeing his wolf looking back at her. The feral nature of his gaze made her heart turn over and she knew he wanted to mate with her. She wanted it too and didn't understand why he wasn't doing so. \"Why do you hold back?\" she whispered. \"You want to take me and make me yours.\"\n\n\"Freya!\" It was a low, guttural cry, strain crossing his face. \"You don't know what you're asking. Male Weres, they mate in wolf form.\"\n\nHer eyes widened, shock crossing her face for an instant as they stood locked together, their gazes searing into each other. She'd never dreamed she'd have to accept his wolf in that way. Nors hadn't had to with Ashleigh. He'd told her some of what happened in mating with a Were.\n\nThe wolf had to make the bite. It was what Dayton was telling her and why he hadn't done so already. He was afraid she wouldn't be able to accept him because of her ambivalence towards other Weres. She didn't know if she could accept him like that but if she didn't...they could never be fully mated.\n\nFreya swallowed hard, closing her eyes to hide from the naked appeal she saw in his. She would break his heart if she couldn't mate with him. He was bearing his soul to her. If she couldn't accept him she would be hurting him as he'd been hurt when Faith died. It would destroy him.\n\nSwallowing again, she opened her eyes slowly, meeting his gaze once more, seeing sad acceptance on his face. He was waiting for her rejection, trying hard to hide his disappointment because he didn't want her to feel bad about it. Her decision came easily as she gently cupped the side of his face.\n\n\"Mate with me, Dayton.\"\n\nJoy flared deep in his eyes to quickly be replaced with caution. \"You're sure, honey. You know what it means. You have to be totally certain you're ready for it.\"\n\n\"There is nothing I wouldn't do for you, to be with you. Your wolf is part of you, Dayton. He lives here in your heart and is what gives you your strength. I can accept that.\" Her hand rested lightly on his chest, over his suddenly racing heart.\n\n\"I love you.\" Dayton breathed the words against her lips even as he slid from her body, his gut clenching hard with the need to finally take her as his. His intent was to get them to the bedroom but his wolf was too impatient. They made it as far as out of the shower before they were kissing frantically and sinking down to the tiled floor.\n\nHis hands roamed her soft curves feverishly as he turned her onto her hands and knees. His wolf was beyond control, his touch harsher than he wanted it to be but his vampire was moaning loudly, arching into his caresses as he positioned himself to take her again.\n\nDayton covered her body, one hand on her hip, the other on the floor beside her. His heart was pounding furiously as he kissed the join of her shoulder and neck; marked out the spot where he would make her his. \"It will just be for a moment, honey,\" he breathed softly. \"It will still be me.\"\n\n\"I know,\" she whispered pressing herself back against his thick length, urging him to slide back inside her welcoming body.\n\nWith a loud roar he thrust in hard and deep, feeling his knot starting to form almost instantly he was so close to the edge. He stroked into her hard until he had no choice but to press his knot into her slick heat. His next growl was one of appreciation as he seated himself firmly inside her. She fit him so perfectly.\n\nFreya cried out, moving with him frantically as he started taking her with short, hard thrusts. Her pleasure was absolute, bliss crashing over her in waves as her lover rode her fiercely; determined to push her over the edge into her climax. She sensed the shift, felt the brush of silky fur against her back. Sharp teeth pierced her shoulder where it met her neck.\n\nShe screamed and her body convulsed. Dayton's strong arms wrapped around her an instant later as lights began to dance in front of her eyes as she climaxed violently. Her wolf was roaring loudly, his body jerking deep within her as he bathed her with his hot seed, both of them joined completely in their passion.\n\nRational thought faded until all she could feel were the sensations running rampant through her. She couldn't breathe, couldn't speak, she could only feel her body go up in flames as it had never done before.\n\n\"Freya!\" Her name was in her head, Dayton's voice crying out mentally to her. He was slowly lowering them down to the floor, their bodies joined by his knot, his arms so tight that if she'd been a Were she was sure some bones would have snapped. \"Are you okay, honey?\"\n\nThe surprise of being able to speak mentally with him had her silent for a moment. She did wonder why he was doing so then she took in his harsh breathing and realised that he couldn't speak at the moment. The fact his pleasure had been as mind-blowing as hers brought a satisfied smile to her face.\n\n\"That was intense,\" she laughed softly, delighting in their new, close contact. \n\nA low, deep chuckle escaped Dayton as his breathing finally started to regulate itself. Intense wasn't the word for it. His wolf was content as was the man. They had finally claimed their mate when he'd least expected it. Now he just needed his knot to subside and quickly.\n\nHis lips brushed Freya's neck and his hands cupped her breasts and stroked leisurely. \"You know, if anyone had told me three months ago I'd be mating again I would have told them they were crazy. If they'd followed that up with I'd been doing it on the bathroom floor I would have died laughing.\" He was slightly embarrassed about his shocking lack of restraint.\n\n\"Wolves are impulsive,\" Freya sighed softly, leaning back to steal a quick kiss. \"Thankfully, vampires can endure cold, hard floors while waiting for said wolves to remove themselves from their bodies.\" Her tone was arrogant though laughter danced within it too. She liked the fact he'd wanted to mate with her so badly he couldn't contain himself.\n\nDayton tweaked her nipple hard and bit the side of her neck. \"Laugh all you want, vampire. We still need to get cleaned up and downstairs for the meeting. And our time is most definitely up.\"\n\nShe groaned loudly rolling her eyes at the thought of the meeting. Not only would they be late but she was now fully mated with her wolf. Which meant the next time Rafe Hanlon yelled at her; she would be expected to take it. She had no doubt that there would be a next time; she just wasn't sure how she was going to react to it.\n\n*****\n\nRayne sighed and cuddled deeper against Gard's warm chest. His lips sleepily brushed the top of her head as his arms hugged her tightly for a moment and then relaxed as he drifted off again. She felt such a feeling of peace and contentment that she just lay basking in it, finally feeling at home. She belonged. \n\nIt was hard not to wonder if fate had planned her meeting with Dayton. If she hadn't sensed him all those years ago, felt compelled to help him; then she'd never have found her way to the Armand-Hanlon pack and ultimately her mate. It was strange how life turned out sometimes.\n\nHands stroking down her back had her arching into the hardness of her vampire, a soft purr erupting from her throat spontaneously.\n\n\"Sexy.\" Gard's sleepy tone was full of warmth as he stroked her again and then suddenly moved, flipping her onto her stomach as he straddled her lower half and began to slowly massage her back.\n\nA long, deep moan escaped her lips as she sighed in pleasure. \"I could get used to this.\"\n\nHe leaned down, soft laughter whispering across her ear as he licked slowly up her neck before nibbling at her earlobe. \"I expect my fair share of stroking, Kitty, but for now I want to indulge myself.\"\n\nRayne purred again, struggling to catch her breath as his large hands brushed every inch of her back before sliding down and playfully kneading her bottom. She couldn't stop herself from rising up, hoping he'd go lower and use his wicked fingers on her again. It only served to make him laugh again.\n\n\"Does Kitty want to be played with again?\" he chuckled lightly, the heavy heat of his erection pressed against her thigh. \"Tell me what you want and I'll give it to you.\"\n\nShe growled softly though she was trying not to laugh. She loved the way he knew how to tempt and tease her, how to draw her cat out to play. \"You know what I want. I suggest you quit teasing and pleasure me properly or I may have to return the favour at a later date.\"\n\nThat earned her a playful spank on her left cheek before he leaned down and kissed it better. She growled louder, twisting onto her back so his next kiss landed on the delicate skin of her hip.\n\nEyes flashing at her challenge, Gard smiled slowly and lick across her hip, biting gently at the tender flesh of her stomach as he slid his arms beneath her thighs raising her up from the bed. He rose to his knees and thrust hard inside her, holding her still so he could sink deep within her.\n\nHer head dropped back and a sweet moan of ecstasy slipped past her lips as he claimed her with little fanfare. He held still within her, staring down at the exotic creature that was his mate, marvelling at how precious she was to him and the need she instilled within him. \n\nHe was unable to sate himself with her body. A few moments sleep and he was desperate to join with her again, to love her until she screamed her release loudly and he followed her into his own climax. She was an addiction he couldn't get enough of. \"Mine,\" he breathed softly, a wave of possessiveness overtaking him.\n\nHis whispered word had her eyes opening, the thin band of silver appearing more pronounced than before. His eyes widened slightly as the lighter colour appeared to eclipse the deep green of her iris before she gave him a lazy feline smile that took his breath away.\n\n\"Prove it.\"\n\nIt was a challenge he had no intention of declining. He flexed his hips and stroked deeply back inside her, holding her captive as he used his body to stake his claim, proving that she belonged to him and no one else. He kept his movements slow but deep, growling softly as she began to writhe against his hold. Pleasure danced across her face with each thrust into her velvet heat.\n\nShe was beautiful in her passion. She surrendered to her sensuality with no inhibitions, making his heart soar that he was the one giving her this pleasure even as he took his own from her. She was his mate, his woman, his heart's desire.\n\nHer eyes fluttered open again and he couldn't resist leaning down to kiss her. \"Sarayne,\" he whispered against her mouth before he plundered her lips in a hot kiss, wrapping his arms around her as she held on tightly and moved to the hard beat he set with his body.\n\nRayne was burning up inside, overcome with the sensations flooding her body as Gard took her hard and fast, then slowed down to tease her with gentle strokes of his thick length inside her. She didn't know which she loved more, his tenderness or his unrelenting hunger. All she knew was he was hers forever, that she would love with him like this endlessly.",
        "Her heart pounding loudly in her chest, she urged him on to move faster, to take her harder as she spiralled up towards the peak of her pleasure. \"I love you.\" The words ripped from her as she crested the peak and cried out her pleasure. She was falling, lost in a world of bright colours and endless sensations as he thrust hard into her and joined her in his own release.\n\nHe filled her with his seed, stroking into her to prolong her pleasure. As she slowly began to come down, her heart hammered loudly; heat rushing through her body in a short hard blast. She shuddered again at the unexpected sensation, her eyes flying open to see Gard's glowing lavender eyes staring intently into hers as his chest heaved raggedly. He appeared as startled as she was.\n\n\"What was that? Did you use your magic?\"\n\nHe shook his head and swallowed hard to regain his breath. \"Not deliberately,\" he finally answered rolling to his side and taking her with him. \"I've never experienced anything like that before. It felt almost magical but it wasn't anything I did.\"\n\nThey lay staring at each other for a long moment, neither of them knowing just what had happened. Rayne didn't think it was anything bad because the sensation had been pure ecstasy. She couldn't believe that anything that felt that good could be evil in design.\n\nSmiling she leaned forward and kissed her vampire, licking at his lips slowly to ease the concerned expression on his face. \"Loving you certainly is interesting,\" she laughed softly before she reluctantly extracted herself from his arms and slid off the bed.\n\n\"I need a bath.\"\n\nGard let the tension ease from his body, admiring his woman as she headed towards the bathroom. He crawled from the bed after her, knowing she would be looking for him to supply the hot water. He was concerned about what had just happened but decided he would speak to his sister about it before he started getting too worried. Anakatrine's magic was the strongest. Maybe she would be able to shed some light on the strange occurrence.\n\nThey had just finished a rather extended bath time when the first feelings of unease started to sink into Gard and his eyes flickered towards the cave opening. \"Something's wrong.\" He was pulling on jeans and a T-shirt even as he spoke, pushing his feet into his boots as Rayne watched him carefully. \n\nShe dressed just as quickly, his unease transmitting down their mate bond. \"What?\"\n\n\"Vampires. Fuck! They passed through a while back. It must have been while we were otherwise engaged. They were heading towards the pack.\" Gard was instantly furious with himself. He was supposed to be protecting the wolves and he'd dropped the ball.\n\n\"Gard.\" Rayne's tone was quite sharp though she was worried too. She stepped up to him and caught his gaze with hers. \"I don't like to see a look of regret on your face when it comes to our mating. If vampires passed through here then so be it. The pack is capable of taking care of themselves. They have four bloody Ancients in their number as well as the wolves own skills. You may have been The Guardian a long time ago but the world has moved on since then. You can't be expected to protect everyone.\"\n\nHe growled angrily, his eyes beginning to glow softly. \"They're her family, Sarayne. If anything happens to them she'll be hurt.\"\n\nShe didn't need to ask who he meant. His connection with Rhianna was as strong as it was with her now they'd mated. It was going to be a challenge to deal with that closeness and not become resentful of it and she suddenly understood exactly how Freya must feel towards her. She turned and headed out the cave with her vampire close behind.\n\n\"I'm sure Annie doesn't expect you to save the world either, Gard,\" she remarked quietly, her tone still firm. \"I swear if you even try to lessen our mating because of this you're going to have one pissed off mate to deal with for the rest of your life. Get it in perspective.\"\n\nShe shifted to her panther and streaked into the forest scenting the air as she did and smelling blood. She headed in that direction feeling a silent Gard coming to run beside her. She wouldn't allow him to beat himself up about what may or may not have happened. He was entitled to have his own life and claim his mate. If she had to hold him down until he saw sense then she would.\n\nThey came across the wolves and other vampires just as Andrei and Alexei were melting into the trees leaving Rafe standing alone in the clearing. The big Alpha shifted to wolf form and then turned in their direction. He waited until they had almost reached him before he shifted back, his expression interested as Rayne shifted in front of him.\n\n\"That would be handy,\" he remarked dryly as he noted her clothed body. \"Don't suppose you could share the secret?\"\n\nRayne shook her head, her eyes on the bloodied rock at their side, the scent of the dead vampires filling the area. \"Think you need to be a hybrid to be able to do it,\" she answered in a distracted tone. \"Whose?\" Her head nodded at the stone.\n\nRafe's lips tightened slightly as he looked away from Gard and met her gaze. \"Freya's. Before you overreact, Dayton's fine as is she. They're back at the compound. From what we can tell three or more vampires with guns attacked. Freya took the brunt of it but managed to get a distress call out to Nors and protected Dayton until we arrived. Unfortunately we have no idea why they attacked because the vampires were dead by the time we got here.\"\n\nGard remained silent through it all, his anger ratcheting up that some of his people had attacked the pack and he'd done nothing to stop it. The fact everyone was okay didn't matter to him. He should have been there to protect the pack not... \n\nHis thoughts trailed off as he looked down at Rayne. How could he possibly finish that thought? Not mating with her was unacceptable in his eyes and she'd already made it more than clear she wouldn't tolerate him thinking it. He couldn't regret it even if the timing had been off. She was watching him with a shrewd expression on her face and he sighed deeply and turned back to the Alpha.\n\n\"So the situation was contained.\"\n\nRafe eyed them both carefully and then nodded. \"We're not completely defenceless,\" he remarked drolly. He knew the vampire was annoyed that he hadn't been there just as he knew his newest pack member had mated with Gard and he now had an additional member to his pack. He wanted to sigh too. It was only a matter of time before Freya joined as well. He silently asked himself what he'd done to deserve all these volatile personalities in his pack. \n\n\"The pack is running sweeps,\" Rafe continued, looking off into the trees before looking back at them. \"I see you two have mated.\" His eyes met Gard's and he stared at him pensively for a moment.\n\n\"Just so you know. This is my pack. I don't care how old you are; how shit hot you think you are. There's only one Alpha here and that's me. Vampires and hybrids don't get the option to challenge for succession, only Weres.\"\n\nGard considered that. He didn't want to run the pack but he knew he would struggle to take orders from someone as young as Rafe. Mating with Rayne had put him in the unenviable position of now being considered pack. His sister would probably find that highly amusing. \n\nThe Were right of succession was a smart move. The vampires and hybrids could overpower the wolves in an instant, therefore not lending to a 'fair' fight if they wanted to challenge to become Alpha of the pack. Not that they would probably want to but it made sense having rules in place just in case.\n\nSo, he was now pack, answerable to the man who had shared his sister life when he'd had no knowledge she was alive again. He'd hated Rafe for that, still felt some ambivalence because of it. But to keep Anakatrine happy he'd tempered his annoyance and made the effort to accept the big man. Rayne's tenseness at his side told him she was waiting to see how he would react to her Alpha's words.\n\nFor her, he'd walk through fire and do it again, as many times as she needed it of him. \n\n\"I don't bark when ordered,\" he finally said dryly, \"but I do know how to follow the chain of command when it's required. Just don't try your command shit on me and we'll be fine, Rafe. I wouldn't want to upset Annie by kicking the living daylights out of you.\" It was the best he could do. Now it was up to the other man to see if he was willing to accept it.\n\nRafe rolled his eyes but his lips twitched in a small smile. \"Just as well I don't like the sound of barking then. All I ask of anyone in my pack is they protect it, Gard. From what I understand you've been doing that the last five years anyway. That shouldn't pose any problems for you.\"\n\nThere was a brief silence as the two men worked on coming to terms with their new relationship and then Rafe turned away and looked at the dead vampires. \"Suppose we should clean up this mess and then head back to the compound. Need to debrief Freya and Dayton and try and work out what the fuck this is about.\" He waved his hand at the dead vampires as he spoke.\n\n\"You want me to call Annie?\" Gard asked. It wasn't a secret he could communicate instantly with his sister no matter where she was.\n\n\"She's a bit busy at the moment,\" a deep, male voice said from the tree line. \"She sent me along to find out what was happening.\" A tall dark haired vampire strode nonchalantly out of the trees, deep green eyes twinkling at the groan that issued from Rafe.\n\n\"How the hell did she know?\" the Alpha asked trying hard not to groan again as he watched the other man approach. Someone seriously was having a lot of fun at his expense at the moment.\n\n\"Mara does sit on The Council, Rafe. You think Andrei and Alexei could just take off out of a meeting and not give away that something was wrong with the pack?\" \n\nDemetri Bozic stopped in front of him and raised a perfect eyebrow as he quickly took in the scene. His amused expressed hardened instantly, his eyes going cold.\n\n\"Unacceptable.\" The menace in his voice was chilling. Even though Demetri continually professed that he had no time for the pack, everyone knew that he'd be one of the first to rip apart anyone who tried to hurt them. He claimed kinship with Annie and therefore Rafe. The hybrid children were his to protect as if they were his own.\n\nRafe nodded in agreement. \"We need to find out who and why. Stupid question but I don't suppose Mara's heard anything?\"\n\nDemetri's gaze turned back to the Alpha and his expression quickly answered that question. If there was even the tiniest hint that there was some kind of move against the pack, not only would the twins have been aware but so would Mara. And that meant they all would be aware.\n\n\"This wasn't coordinated centrally,\" he answered. \"Vampires have long memories and most of them are too smart to go up against Caleb or The Ancient Council. This is some kind of splinter group, a test of some kind.\"\n\nRafe nodded again. He'd been thinking along similar lines but had to ask. A full out war was something he didn't want to have to go through again. Terrorist action by a splinter group would be dangerous too but easier to defend against now that they were forewarned.\n\nDemetri checked out the scene again, his expression thoughtful. \"We need to get together, discuss options. The pack is pretty well protected.\" His gaze slipped to Gard's, his agile mind leaping and making connections both Annie and Caleb had neglected to clue him in on. He would have to have a word with them about that later. \n\n\"I thought you were dead,\" he remarked coolly. \"You've been off the radar for a long time.\"\n\n\"Sorry to disappoint you,\" Gard answered with a small smile teasing his lips. He hadn't seen Demetri in a long time, over a thousand years. He liked the other vampire, respected him even. They'd need to find some time to catch up when the current issue was taken care of.\n\nDemetri laughed softly clasping Gard's upper arm in greeting as his friend returned the gesture. \"Disappointed wasn't the emotion that came to mind, though Annie and Caleb neglected to enlighten me on the identity of The Guardian. I should have figured it out with your colouring,\" he smiled. \n\nHe turned to look back at Rafe feeling a slight undercurrent of tension between the two men who claimed Rhianna as their sister. \"The pack's security is increased immeasurably with Gard to enhance its protection.\"\n\nRafe nodded in his direction. Despite his constant teasing of the vampire, he trusted Demetri's judgement as much as he trusted Caleb and Annie's. If he vouched for the big red haired vampire then he would work on the last remaining issues between himself and Gard until they were both fully at ease in each other's company.\n\nDemetri admired Gard's new mate for a second, acknowledging how stunning she was, trying to scent her hybrid nature which she was masking well. She looked a right handful, just what his old friend needed. His thoughts quickly conjured up a pair of deep brown eyes, long thick brown hair, and he smiled softly. Yeah, Rayne was stunning to look at but no one could compare to his Mara.\n\n\"I'll report back to Caleb and Annie,\" he finally said. \"You've got this in hand so there's no need for us to be here right now. Let us know if you want a full Were/Council meeting or if we're keeping it in the family.\" He turned away and headed back into the trees.\n\n\"So that was Demetri Bozic?\" Rayne asked in a bemused tone. She was quite taken aback by the vampire, more so than she'd been with any other she'd met before. His reputation preceded him and his general aura didn't disappoint. He was stunningly gorgeous, powerful and decidedly lethal. Just being around him sent a shiver up her spine even if she could appreciate the pretty package he came in. She seriously hoped never to get on his bad side.\n\nGard frowned slightly and wrapped a hand around the nape of her neck to draw her gaze back to his. \"I like Demetri,\" he said softly. \"Do I have to kick the shit out of him?\" The possessiveness in his voice brought a bubble of laughter from his mate.\n\n\"Oh he's pretty,\" she laughed softly. \"But he couldn't hold a candle to you, Gard. And you know it.\" She stroked his chest lightly as he bent his head and captured her mouth in a possessive, branding kiss.\n\nRafe rolled his eyes and looked away but a smile tugged his lips. It was plain to see how deeply in love they were. His pack was all the more stronger having them as part of it. A deep tug inside him had a groan ripping from his throat.\n\n\"What?\" Rayne asked.\n\n\"Let's get these bodies burnt,\" Rafe sighed shaking his head as he examined the Alpha bond that had just stretched between him and Freya Eriksson. He'd known it was coming but still he'd hoped for a little more time to figure out how to deal with the vampire when she joined his pack. There wasn't anything he could do about it at the moment so he put it out of his mind as they set about their task.\n\n*****\n\nThe first thing Rayne did when she got back to the compound was to detach herself from Gard's arms and throw herself into Dayton's. They had walked into the library, finding it empty apart from the other couple. She was aware of the flare of jealously that ripped not only from her own mate but also Freya. She ignored them.\n\n\"You're hurt,\" she breathed softly, tracing the light coloured bruises on his bare forearms.\n\n\"I'm fine,\" Dayton smiled giving her a tight hug, relieved that she was home safe and well, that she hadn't run from the pack. He could sense Gard's annoyance, knew instantly she'd mated with her vampire. He was happy for his friend. \"You've mated.\" He couldn't keep the joy out of his voice.\n\nRayne laughed in delight and also a touch of awe. She couldn't help stroking his jaw tenderly as she was so used to doing. \"So have you, my friend. And your mate is being remarkably restrained.\" \n\nShe eased out of Dayton's arms to smile at Freya. It was plain to see she was struggling with her mate's intimacy with another woman but she was working hard at dealing with it. \"Thank you, Freya,\" she said quietly.\n\nThe words brought a surprised expression to Freya's face. Of all the things she'd expected to come out of the wildcat's mouth, heartfelt thanks wasn't one of them. \"For what?\"\n\n\"For loving him enough to bend for him; for giving him back a reason to live. You will forever have my eternal gratitude. Anything you need, all you have to do is ask.\" Rayne swallowed hard to choke back the rush of emotion she felt for the other woman. One day she hoped that her best friend's mate would be able to accept her completely, that they could be friends too.\n\nFreya eyed Rayne carefully for a long time, shocked at her words and the sincerity behind them. She felt some of the antipathy within her die down. The cat was mated now to the Ancient. She had chosen her male and it wasn't Dayton. More of her reserve crumbled as she met the other woman's gaze.\n\n\"He is lucky to have you for a friend,\" she finally said reaching out to slide her arm around Dayton's waist as he automatically gathered her close to his side. \"I should thank you for keeping him alive long enough for me to find him.\"\n\nDayton kissed the top of her head, joy surging through him at the first tentative steps towards friendship he was witnessing. He met Gard's slightly hostile gaze and damped down a sigh. Would it be any easier for him and the Ancient? Mates were terribly possessive, not just the females. Newly mated males could be a nightmare to contend with.\n\nGard wasn't pleased with the way his mate casually touched the wolf. Hell, she'd even looked at Demetri with appreciation in her eyes. But then he remembered those stunning eyes looking at him. There was no escaping the love deep within them or the way her body automatically curled into his at every opportunity. His cat belonged to him body and soul and he knew it.\n\n\"Keep the touching down to a minimum, at least for the next decade or so,\" he growled softly. He watched Dayton relax, a smile crossing his face as he nodded his agreement.\n\n\"Possessive much?\" Rayne laughed lightly wrapping her arms around her vampire and pulling him down for a kiss. It was long and slow, full of her love and her pleasure that he was willing to play nice with her friend.\n\nGard knew in that instant that he'd give her anything she wanted, just so she would kiss him as she was now doing. Her body practically hummed with approval, their mate bond full of a glowing happiness that made his heart skip a beat. His cat was happy with him and that meant everything to him.\n\nRafe entering the library broke them apart. Behind him came the other vampires and their mates. Aaron brought up the rear, closing the door firmly behind him and leaning against it.\n\nAs everyone settled, the Alpha's second in command made his report. \"The area is secure within a twenty mile radius. Soldiers are patrolling in groups of threes and there's no hint of any vampires. Jared's sent over Brody and Connor and some of his soldiers for additional backup. I asked Connor to take command of both packs while we're tied up here.\"\n\nRafe nodded, pleased with Aaron's decision. Connor was Jared's number two now that he and Aaron had their own pack. He was a good choice and well respected by everyone. \"We can't be endlessly patrolling, not with this number of people. It leaves the pack too vulnerable if anyone slips through.\" He hadn't rescinded the evacuation protocol yet. Not until he felt totally at ease bringing Lacey and all the children back up from the tunnels.\n\n\"How technically oriented are vampires?\" Rayne asked, an idea coming to mind, something she had seen on her many travels.\n\n\"We're not dummies but we don't rely on it,\" Alexei answered. \"We don't need to, not with our enhanced sight and hearing.\"\n\n\"So, if you were out for a recon mission in a forest you wouldn't be looking for little gadgets tracking your movements?\" Rayne continued, watching understanding slowly start to dawn on everyone's face.",
        "\"Nice,\" Andrei grinned and it was a genuine smile as he eyed up the wildcat with a speculative expression. Anyone who was going to put themselves out there to protect his babies was an acceptable addition to the pack. \"We couldn't rely entirely on technological surveillance but it would cut down the need to have so many wolves away from the compound.\"\n\nRafe felt some of his tension ease. \"We'd need something that blended into the scenery. Who have we got that has the skills to work on this?\"\n\n\"Harley,\" Aaron answered immediately, referring to one of their Betas who was almost permanently stationed close to the Alpha's house. \"If it's got any form of metal in it, he knows how to take it apart and put it together again. He also teaches the young males too. It would be good experience for them to be involved in anything that's going down to protect the pack.\"\n\nDayton stared at his brother, watching the man who even though he was the youngest of the Alexander clan, was the most dominant, pack focused member. The needs of the pack came first and foremost in Aaron's mind and he was automatically latching onto how the young males could be trained whilst serving the current danger to all of them. His respect for his brother soared.\n\nIt was clear that Rafe's respect for his second in command was just as high. \"Get onto it when the meeting's over, Aaron. Do whatever you have to. I'll leave it in your capable hands. For the next few months that's your main objective.\"\n\nRafe's gaze turned to the others and he appeared deep in thought. Although the vampires were a great addition to the pack, they didn't hold pack rank as such. Most of that was down to the fact the twins were Council members and their time was needed there as well as being liaisons with the pack and the vampires. Nors was an Ancient and therefore his time was spent doing whatever Ancients did.\n\nA memory came to mind and he didn't know whether to laugh or cry. He'd been hell bent on self destruction years ago, to the point that Jared had jumped all over him. He'd been furious at the time but now he saw the wisdom in his old Alpha's decision.\n\n\"The pack is going to be down a few Betas for a while,\" he announced after a long pause. He met Dayton's gaze and saw a small frown start to form on the other man's face. \"Sorry, Dayton but we need you. I can't wait for you to make the decision on your own.\"\n\n\"Rafe...\"\n\n\"What does he mean?\" Freya asked, feeling how tense her mate was and instantly bristling.\n\n\"I need Dayton to step up to the plate and be who he's supposed to be,\" Rafe answered before Dayton could. \"He's a Beta, was one when he was part of the Hanlon pack. I need him to be one again.\"\n\nFreya kept her eyes on her wolf, seeing the torn expression on his face. Part of him wanted to agree but the larger part of him was holding back and she knew why. It was because of their earlier conversation, about her accepting the pack. He didn't want to commit because he was concerned about her.\n\nGod, how she loved him; he had meant it when he said he would willingly give up everything for her. Sighing softly she pressed her hand lightly against his chest to soothe the tension within him. \"Will you protect my family for me?\" she asked quietly. \"Will you take care of Ashleigh and Liam as if they were your own?\"\n\nHis stunned expression almost made her laugh. Hell, it would have if it wasn't suddenly so crucial to her that he agree to protect what was hers. The attack on them had been a levelling experience. Once she'd gotten over the whole threat to Dayton she had to consider what could have happened to Ashleigh and Liam if the vampires had gotten through. Having them hurt was just unacceptable to her.\n\n\"You know I'd die for them,\" Dayton said quietly, cupping her face gently. \"They are yours so that makes them mine, even if Ash wasn't David's sister. But you know what this means if I agree to it, Freya. There will be no turning back. We will be irrefutably part of the pack.\"\n\n\"I know,\" she sighed deeply. \"I'm prepared for what that means. This is who you are, Dayton, who you are meant to be. I will adapt.\"\n\n\"Glad to hear that, Freya,\" Rafe interrupted, mentally preparing himself for the coming backlash. \"Because you have a lot of work ahead of you. For the next three months you will be training under Dayton in what it takes to be a pack Beta. At the end of that time we'll evaluate the situation and see where we're at with a mind to making it a permanent rank.\"\n\nComplete silence filled the room. Even Aaron stared at Rafe as if he'd just lost his mind.\n\n\"Rafe, I don't think that's a good idea,\" Nors said breaking the heavy silence. His sister's body had gone rigid with shock and even Dayton's soothing hands stroking down her back wasn't alleviating any of the tension deep within her.\n\nRafe barked out a laugh. \"Neither do I but that's my final decision on the matter. Freya, I want you to stay behind after this meeting has concluded. We'll discuss it further then but for now I'd appreciate you holding your peace on the matter.\"\n\nHe turned away from her, instantly dismissing her reaction as if it was unimportant. He was hoping she was too stunned by his announcement to answer him back and it appeared she was when she remained silent but tense.\n\n\"Okay, the final thing is Demetri swung by earlier. Word is this attack wasn't centrally planned so it looks like it was some kind of independent action. That doesn't mean we shouldn't be keeping an ear to the ground over at the Council. I can rely on you two to keep me updated?\" His gaze was now on Andrei and Alexei.\n\nAndrei rolled his eyes at even having to be asked but it was Alexei who answered him. \"That goes without saying, Rafe. We'll start a quiet investigation, see what we can come up with but I agree with Demetri. No one could have kept this so quiet if it came from deep within us.\"\n\n\"The vampires who attacked were not local,\" Freya suddenly chipped in, surprising everyone. Her expression was carefully neutral as were her words. \"They were young too. Only one of them had reached Elder status but even he was weak so he couldn't have been that old. My best guess is this is from the European side. They're more isolated and therefore less likely to be in fear of us Ancients.\"\n\n\"That makes more sense,\" Rafe acknowledged thoughtfully, acting as if the vampire's voluntary inclusion into the discussion was the norm. He was actually pretty stunned by it but kept his feelings to himself.\n\n\"What about us?\" Gard asked. He knew he had skills that could be utilised by the pack. Now he didn't have to hide and was a part of them because of Rayne, he needed to be included.\n\n\"Rayne, you are now our official hybrid expert,\" Rafe answered slowly, his keen gaze running across the room to take in the reaction of the others. As he'd expected, no one objected. \"We need you to guide the children and to help us understand what they're capable of and how best to nurture their abilities without letting them get out of hand.\"\n\nRayne smiled widely and nodded. This was something she could do, something she wanted to do. She could give the children what she'd never had, someone to help them find their way in the world. She was practically humming with anticipation.\n\n\"Gard, I want you to help Dayton. He's going to have a lot on his plate what with training Freya as well as picking up Beta duties. With Aaron on surveillance detail we'll need someone to pick up the training of the young ones. We've always been good at protecting ourselves but now we need to be better. Your protective abilities are what we need. I want the current and next generation of wolves to be so honed in their skills that even a vampire will quake in his or her boots when they hear the Armand-Hanlon pack name.\" \n\nGard grinned. He couldn't help the wide smile that crossed his face. His respect for his sister's Were brother was beginning to grow. Rafe Hanlon was a very intelligent man. He was skilfully utilising the new additions to his pack, seeing their unique abilities and applying them to where they were best suited.\n\n\"I'm not an easy teacher,\" he had to inform him. \"I'll work them hard and they're going to come complaining to you about my techniques.\"\n\n\"And I'll send them right back to you with a flea in their ear,\" Rafe answered firmly. \"This pack will be the strongest it can be. Mould them, bend them, just don't break them, Gard.\"\n\n\"Agreed.\"\n\n\"Okay, meeting over,\" Rafe sighed fighting the urge to run a weary hand through his hair at the thought of what was to come. \"Lift the evacuation protocol. Let's get our families back where they belong.\"\n\nDayton hung back with Freya as everyone started to file out. Nors stopped beside his sister meeting her gaze intently.\n\n\"Go. I'm fine,\" she said quietly, giving Ashleigh a quick smile. \"I will come see you afterwards.\" Silently the other couple left with everyone else.\n\n\"Dayton, I meant what I said,\" Rafe announced. \"I want to speak to Freya alone. I won't keep her long.\"\n\nFreya stroked her mate's chest lightly. \"I will be on my best behaviour,\" she promised.\n\nDayton kissed her gently, worried about leaving the two of them alone but knowing he had to. He trusted his vampire. If she said she would behave then she would. He just didn't want to be apart from her. Sighing softly he stroked her hair tenderly. \"I'll be in the community centre.\" \n\nHe saw surprise in her eyes for a moment and then pleasure. The fact that he trusted her enough to leave her and go get on with his own work was the right thing to do. It gave her that added incentive to reach inside herself and do what was right.\n\nFreya swallowed as he left and prayed that she could do this for him. The Alpha's words earlier had filled her with a mix of rage and confusion. She didn't want to do what he had planned for her. He was effectively forcing her to integrate with the pack and they both knew it. \n\nShe turned to find Rafe watching her quietly. When he didn't speak she moved a chair to across from his desk and sat down in it. This was what he had demanded of her the last time she'd been in this room with him so she figured it would be what he expected this time.\n\n\"Years ago I tried to take my own life,\" Rafe said quietly, startling her completely. \"I didn't want to be a Were, I couldn't face being what I was. I didn't fit into pack life no matter how hard my friends tried to help me. Sound familiar?\"\n\nShe stared impassively at him for a moment, taking in the words, hearing the truth behind them. There was pain in his voice as he admitted to his past, as well as self-loathing. Strangely she could relate to him. His story was familiar in so many ways.\n\n\"And yet you are now mated with young,\" she answered. \"You have your pack and you obviously love life and regret your past actions. What changed?\" Curiosity laced her tone.\n\nRafe smiled. \"Jared Hanlon is what changed. He sat me down in a library very similar to this one and the bastard promoted me to a Beta in his pack. I was so furious I almost shifted to wolf form and attacked him. I thought he was being cruel when in fact he was helping to save my life.\"\n\nHe waited for his words to sink in. \"I know you don't like me right now, Freya. But that doesn't matter to me because surprisingly I find myself liking you. I look at you and I see myself in your eyes. You're at the same crossroads I was at and yet you have something I didn't at the time. You have your mate to help you.\"\n\nHe leaned forward and placed his arms on the desk. \"I'm not doing this to be cruel, Freya. You're pack, you're mine to protect even if you don't think you need it. Each and every one of us is here for you, not just Dayton and Ash and Nors. You belong to us. You belong here. All you have to do is let us in. We don't care about the past, all we care about is the future and that you'll be part of it.\"\n\nPain welled up inside her, a harsh crippling pain brought on by the easy acceptance of the wolf before her. He meant it! Every single word. She could feel it flowing through the Alpha bond that was now inside her. She could feel it in the wolf gene that was waking up inside her body, trusting in the man who was their Alpha.\n\nShe'd never belonged anywhere, not before she'd met her wolf and accepted him into her heart. Now another wolf was reaching out to her, asking her to trust in him. The pain ebbed slowly, hope warring with her distrust of all things Were. This strong male had revealed his vulnerability to her. It echoed hers and gave her added hope that she was on the right road to the full recovery he had found.\n\nRespect flared deep within her for the Alpha wolf called Rafe Hanlon who was opening himself and his pack to her unconditionally. She swallowed back the lump of emotion that was threatening to overwhelm her.\n\n\"You know I'm going to keep fucking up,\" she finally said when she could speak in her normal tone. \"You think Andrei is a nightmare? He's got nothing on me. I will never be a tame vampire.\"\n\nRafe's laugh barked out loudly. \"Oh I know that,\" he agreed when he stopped laughing. \"And I also know that my pack couldn't ask for anyone better to protect them.\"\n\nFreya was silent for another long moment and then she gave him a tentative smile. \"I will do the Beta training...Alpha.\"\n\nHe smiled widely. \"Oh, I had no doubt about that,\" he answered drolly. \"The only question was if you were going to do it willingly or not.\"\n\nHis certainty made her bristle instinctively and then she burst out laughing and rose from the chair. \"You are a formidable foe, Rafe Hanlon. There is a core of steel a mile wide within you that most people miss because of your easy going nature. None of us mated vampires ever stood a chance against you, did we?\"\n\nRafe's expression turned to one of mock innocence before he laughed again. \"I protect what's mine, Freya, and you are all mine. Now how about you go get started on your training so I can go greet my mate and sons as they come out of lockdown?\"\n\nShaking her head, Freya headed to the door. She stopped as she reached it turning to look back at the Alpha who was watching her with a very pleased expression on his face. \"Just for the record...I don't dislike you, Rafe Hanlon.\" She opened the door and disappeared from sight, but not before she heard his final quiet words...\n\n\"Welcome home, Freya Eriksson.\"\n\nTo be continued... "
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "werewolves",
        "hybrids",
        "paranormal romance",
        "vampire bite",
        "mating"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-long-walk-home-ch-18"
}