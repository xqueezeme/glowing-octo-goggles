{
    "title": "Home for Horny Monsters Ch. 66",
    "pages": [
        "Hi all! I'm back, and I bring the Apocalypse (maybe)!\n\nNew readers, it's a lost cause for you at this point. I've got monster girls of all shapes and sizes, a few monster bois, and have tossed in the end of the world (biblically speaking). So if you get hard/wet on confusion, read away!\n\nReturning readers, welcome back! After last chapter's ending, I am sure you are eager to see what happens next. I want to thank everyone who has stuck with this crazy tale as it expands. This chapter was a lot of fun for me to write (more so than usual), and I can't wait for you to see what happens next.\n\nDon't forget to follow me, or check my bio. I try super hard to stick to my publishing schedule, so you can know when to expect the next part of the story. Also, don't forget to smash those stars or leave some comments, that helps others find the story and helps me on those bad days when I stare at my screen and wonder how to put one word in front of the other.\n\nMy time is limited, so I shan't keep you any longer. You are all officially in\n\nIn Hot Water\n\nEulalie yawned. Her jaw opened wider than her fist before popping, causing her venomous fangs to slide free from their hiding place. Blinking away the sleep, she saw a terrified rat holding a long broom. It was staring up at her from the floor below. She could smell the hot breath of other rodents watching her from the shadows of the Library.\n\n\"Did you wake me up?\" she asked while cradled in a small web she had built in an abandoned supply closet on the first floor of the Library. Sofia had given her the space as temporary accommodations while they had tried to do research on the weirdo in the front yard.\n\nThe rat bolted through the door. Several other rats followed, leaving the stink of fear behind them. At the foot of the door, a tiny blue figure leaned into the opening.\n\n\"Sofia said to get you up,\" Cerulea squeaked. \"She needs you right away.\"\n\n\"I'll be there in a minute.\" Eulalie yawned again and tumbled casually out of her web. She landed in a crouch, her legs splaying wide for support. Stepping out of the closet, she smiled at the sight of the enormous stacks of books that stretched impossibly into the sky. Cerulea was nowhere to be seen, but her glitter trail was still falling from the sky.\n\nHer mother would have loved this place. It had every book known to man, and then some. The wide-open spaces were also perfect for climbing, and Eulalie was eager to explore every inch of it once she got the chance.\n\nOutside her room was a giant stack of books that she had gone through last night. They had all been dead ends with nothing of value to offer her.\n\nWondering what could be so urgent, she walked toward the main lobby of the Library. The giant globe that hovered in place was an absolute marvel to behold, held in place by magic. Beneath it, Sofia stood over a small contingent of rats. She looked up at Eulalie, a look of concern on her face.\n\n\"The house is missing.\" Sofia's voice was steady, but Eulalie detected several trembling undertones. There was fear, sadness, and more than a little bit of concern. Each emotion was its own musical chord, and she could hear them all.\n\n\"How do you lose a house?\"\n\n\"The magical book that we use to get there is still here, but it no longer opens a doorway to the house, and all of the rat portals that go there have been closed.\"\n\nEulalie looked at the small crowd of rats, then back at Sofia. \"All the portals are closed? We have no way back?\"\n\nSofia shook her head. \"Not that I'm aware of. The rats are capable of opening portals, but only on the orders of the Rat King himself.\"\n\n\"I see.\" Eulalie walked up to the small group and watched as the rats backed away from her. Each one of them had its own scent, and they all smelled delicious. She narrowed her eyes as she studied them. \"Where is this king?\"\n\n\"I assume back at the house. He is the only one who speaks our language, so even if we wanted them to help us, we have no way to communicate with them.\" Sofia looked calm and collected, but Eulalie could hear even more emotions in her voice. Shock. Despair. The cyclops was so caught up in her own feelings that she likely wasn't processing information properly.\n\n\"Let's not be short-sighted.\" Eulalie pulled out her phone and frowned. \"We don't have internet here, do we?\"\n\n\"None of the companies will give us a good quote.\" Sarcasm from Sofia sounded an awful lot like a squeaky violin to Eulalie.\n\n\"If he's the only one who can talk to them, then how did you get them to wake me up?\"\n\nSofia lifted her eyebrow. \"I didn't ask them. I asked Cerulea.\"\n\nEulalie spotted the fairy fluttering overhead. \"Can you talk to them?\" she asked.\n\n\"No,\" she replied. \"I was trying to use the broom to wake you and they decided to help me out.\"\n\n\"I can work with that. We need a sequence to follow.\" Eulalie pulled a band of webbing from her spinnerets and began weaving. The rats didn't understand English, but solutions came easy to those who looked for them. \"Establish communication with rats. Communicate desire for portal home. If no portal home, then portal somewhere safe, investigate current situation. What does their king look like?\"\n\n\"You probably saw him. Crown with glasses.\" Sofia walked toward her. \"What are you doing?\"\n\n\"Bypassing the language barrier to accomplish our first task. If they can understand situational context, it should be possible to convey our needs.\" Weaving a rat with a crown was child's play, especially done in a chibi art style. When she held up her final product, it was an image of their king in the middle of a tapestry of silken strands.\n\nThe rats chittered excitedly for a moment, then went silent as she wove another image. When she held it up, their fear stink faded even further. This image was a picture of her surrounded by food and cartoon hearts. She was certain that Sofia probably had pen and paper somewhere, but her web art was far more precise than anything she could do by hand.\n\nThat, and she had a bad habit of nibbling on crayons. It was a childhood habit she just couldn't break, and she hated having to pick wax out of her teeth.\n\n\"What are you doing?\" Sofia asked.\n\n\"Establishing that I'm not a threat.\" Her next image showed her and the king holding hands. The rats looked at one another, but it seemed they were grasping the situation. \"Do we have any idea how they figure out where they're going?\"\n\nSofia shook her head. \"If you want somewhere specific, I'm sure they have a method. But it's something Reggie delegates.\"\n\n\"Well, we can't have them taking us just anywhere, can we?\" It took her almost an hour, but by the time she was done, the rats were busy gnawing a hole on an open portion of the wall. It didn't take them long, because she only needed a hole big enough for her hand.\n\n\"Well?\" Sofia had left and come back with food for everyone. \"Any luck?\"\n\n\"Let's find out.\" Eulalie pulled her phone out of her pocket and stuck it through the hole. On the other side of the hole, she could hear the distant bustle of humans talking to each other.\n\n\"That was pretty clever,\" Sofia said, looking over her shoulder. \"Getting them to gnaw you a hole to a Starbucks.\"\n\n\"It doesn't even matter which one, they're on every corner.\" Eulalie connected to the wireless network, as her phone's reception wasn't great.\n\nShe tapped with purpose, using one of her government accounts to run a search for property records. It didn't take long to discover a man named Murray who lived right next to Mike.\n\n\"Do you suppose he lives alone?\" Eulalie asked.\n\n\"I have no idea. Wouldn't someone have come looking if he didn't?\"\n\n\"My thoughts exactly.\" She pulled up Murray's address and then searched for a street view. Once she had a picture, she pulled her hand back out and started weaving again. The delicious smell of roasted coffee beans reminded her of her father.\n\nShe smiled, caught up in the memory of how he would hold his mug first thing in the morning. He enjoyed how the heat seeped into his fingers, relaxing him.\n\nOnce finished with her web, she held up her phone for the rats to see. After they looked at Murray's house, she showed them a drawing of her and the rats standing inside of it.\n\nAs one unit, the rats nodded and found a different spot to chew. A pair of rats worked on closing the hole they had opened.\n\n\"We'll have them scout out Murray's house,\" she informed Sofia. \"If it's empty, we can go through and re-establish contact with the house.\"\n\n\"And if not, we can observe from a safe distance.\" Sofia let out a sigh of relief. \"I'm glad that you were able to come up with a solution so fast. I'll admit, I got caught up in the idea that the house had been destroyed. Usually, when a location disconnects from here, that's the case.\"\n\n\"There were other places connected here?\" Eulalie rubbed her stomach and winced. She was retaining a ton of water as her new carapace expanded. The thin cracks along her legs were the Arachne version of a peeling sunburn, and the edges were beginning to lift away.\n\n\"Many. The house is the last one, to my knowledge. It got stuck in my head that something could have happened to everyone, and that I may be here all alone.\" Sofia frowned. \"I've been alone before. It...was hard.\"\n\n\"You're not alone. You have me. And the rats.\" She smirked to show Sofia that she was kidding. \"We'll get it figured out, don't you worry.\"\n\nShe watched the rats as they chewed. It was a fascinating process to observe, because their teeth did sink into the surface of the wall, but it didn't seem like the material was being consumed. Instead, a golden, glittery substance was left behind on the edges of the wall as it became a tiny hole and then expanded.\n\nA living room appeared. The hole had appeared beneath an end table, and a few rats ran in to scope the place out. They came back and chittered excitedly at the others, and they continued widening the hole.\n\nOnce it was about two-feet across, Eulalie squeezed through. Now inside of Murray's home, she closed her eyes and listened to her body. The house had a certain stillness to it revealing that nobody had passed through in almost a day. She also could tell that the HVAC system was ancient, resulting in poor air circulation and a dead mouse in one of the vents.\n\nEulalie moved through the house, examining the furniture. It was old, and most likely inherited. A quick trip upstairs revealed a dusty guestroom and a master bedroom that looked immaculately kept. She tapped on her phone the whole time, accessing her online shopping account.\n\nBy the time the portal was big enough for Sofia to step through, Eulalie had scoped out the whole house.\n\n\"Place is empty. Murray lives alone, though there was a lot of women's lingerie in his closet.\" Eulalie double-checked the address on her phone and put in her order. \"Lots of lace. Very little leather.\"\n\n\"Can we see the house from here?\" Sofia moved to the front window and pushed the curtain back.\n\n\"No. The best shot is from the guest room upstairs, and you can only see part of the yard.\"\n\n\"Wait for night, then?\"\n\n\"Nope.\" Eulalie held up her phone. \"I've ordered some things from Prime Delivery. We're in a two-hour delivery window, can you believe it? We used to have to send dad into town to pick up stuff from a locker, four-hour trip after waiting several days just for a delivery!\"\n\n\"I'm glad you have something to be excited abou\u2014what are you doing?\"\n\n\"Hmm?\" Eulalie had picked up Murray's router. It was an older model, and she flipped it over. \"I'm resetting this router, the password is written on the bottom. When my new laptop gets here, I can do some digital reconnaissance of my own, but I need internet access.\"\n\nSofia sat down on Murray's couch. She took up a large portion of it, making it look more like a loveseat. \"I'm afraid I can offer no help in that area.\"\n\n\"That's okay.\" Eulalie grinned, revealing all her teeth. \"Because I'm already the best there is.\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nWhen Beth walked into the house, she felt a pressure change and her ears popped when the door closed behind her. Tink, Kisa, and Cecilia were watching her from their spot at the window. Jenny was nowhere to be seen.\n\n\"What the hell is going on?\" Kisa's eyes were unnaturally wide.\n\n\"Um...\" Beth shook her head. Now that she was out of the angel's presence, it was like walking from sunlight into a dim room, but instead of her eyes needing time to adjust, it was her mind. \"So...uh...shit. Hold on a second.\"\n\nShe walked past the others, went into the kitchen, and opened the fridge. The food inside was already warming to room temperature, and she pulled out one of the beers Mike had hidden in the back. After popping the tab, she walked back into the living room while drinking it.\n\nBy the time she made it back, the beer was nearly gone, and she felt as though she could at least put events in order. Outside, Death was waving his arms dramatically for the three horsemen and Mehkhkahrel. Up above, the swirling mass of eyes and wings watched them.\n\n\"Our neighbor Murray is apparently acting as a vessel for the angel Meka..Mekaka...\" She finished her beer. \"Mehkhkahrel. I think that's what he said. It's his job to do the talking for that thing up there.\" She pointed at the winged monstrosity.\n\n\"That's an angel?\" Kisa asked in awe.\n\n\"It is,\" Cecilia responded. \"Though I've never seen one so powerful.\"\n\n\"Speaking of, is Lily okay?\"\n\n\"She went upstairs,\" Cecilia said.\n\n\"Okay, I'll go check on her soon. So yeah, that whirling frisbee of what-the-fuck is acting as the judge. Apparently, Death isn't supposed to fully manifest on this plane of existence unless the Apocalypse has started. So right now, they're all arguing about whether or not his being here qualifies as the opening of some seal that means we are fucked. Like, on every level kind of fucked.\" She was shaking now, and she dropped the can when she tried to set it down. A tiny bit of beer spilled on the carpet. \"This isn't even about the house anymore. This is about the whole world.\"\n\n\"Oh.\" Kisa looked at Tink, then back out the window. \"Then it shouldn't be a big deal, right? Death didn't come here, he got trapped. That should be simple enough to explain.\"\n\n\"I hope so.\" Beth took comfort in Kisa's words. \"That fog out there? There's nothing beyond it. The whole time Murray was screaming, he wasn't just summoning everyone. We're apparently in a pocket dimension. If the three horsemen had just shown up on our doorstep, then all four of them would be walking the Earth and trigger the end of the world. They've been trying to find Death for a couple of months now, and have been breaking down magical barriers across the world in an attempt to find him.\"\n\n\"Stupid horse fuckers can't have funny bone man,\" Tink grumbled. \"Maybe Tink shoot down ugly bird.\"\n\n\"Tink? Don't.\" Beth pointed at the goblin. \"I get the feeling that you would get vaporized, or set on fire or something. You are not to get yourself killed. It would break Mike's heart.\"\n\nTink grumbled but nodded. \"Tink be good,\" she muttered. \"But not be happy about it.\"\n\n\"So this wasn't an attack?\" Kisa almost sounded relieved.\n\n\"No. It was never about us at all.\" She looked out the window and saw that Death was pantomiming using a ViewMaster. \"And I hope it stays that way. I'm going to go check on Lily.\"\n\nShe walked up the stairs, wondering where the succubus could have gone. While there were plenty of rooms to choose from, she had one idea that made more sense than the others.\n\nThe door to Mike's room was closed, but she opened it anyway and walked inside.\n\n\"Lily?\" Even though she got no response, she walked into the bathroom to make sure. Lying in the middle of the empty tub was a small child with black and red hair. Her arm was bandaged up in silk, and her skin was smoldering. \"Are you okay?\"\n\n\"I was almost vaporized out there,\" she responded, her voice tiny. \"I came up here hoping to cool off my skin and talk to Naia. She's not here anymore. I don't know where she is.\"\n\n\"Back on Earth is my best guess.\" Beth explained that they had been put inside a pocket dimension. \"Her spring is underground, so she is still there.\"\n\n\"Do you think it's just a huge crater now?\" Lily asked. \"The neighbors must be freaking out.\"\n\n\"I don't know,\" Beth replied. She got into the tub and cocked her head. \"Why the little kid act?\"\n\n\"There's less of me to hurt,\" Lily whispered. \"I felt like I was on fire. That's not a sensation I've felt since...\" she waved her hand dismissively. \"Everything hurts, and I can't leave.\"\n\n\"Of course not. We're sealed in a pocket dimension.\"\n\n\"It's not that. A succubus can always go to her master.\" Lily's lower lip trembled. \"I tried to go to him, to warn him away. It's not just that I can't go to him. I can't feel him! I don't know if he's alive or dead, and I can't feel Naia either!\" Her voice rose in pitch as fat tears welled in her cheeks. \"I'm afraid, Beth! That thing that's out there could destroy me with a thought if it turned its attention on the house! We are not even ants to it, we're like those things that shit on your eyelids while you just go about your day!\"\n\n\"Hey, now. Shhh.\" Beth moved next to Lily and slid an arm around her. The succubus sobbed and rolled toward her. It was just like comforting a child, minus the excessive swearing. \"It's going to be okay, Death is explaining things to them now.\"\n\n\"We are so fucked,\" Lily muttered. \"Do you know what the difference between an angel and a demon is? Daddy issues and membership to an exclusive club. That's it. Angels can have agendas just like demons do. If that thing out there came all this way in order to find out if it's time for the world to end, then it will stack the deck in its favor.\"\n\n\"What do you mean? Wouldn't that be against...Sky Daddy's will?\" She decided to go with a term that Lily would find acceptable.\n\n\"Logic and reason don't apply to the divine. They are beings that live outside of time and space, they don't see things the way you do. Why do you think I can take shortcuts through Hell? It overlaps everything, just like Purgatory. I even overlap with myself. How do you think I change shape? I'm not made of flesh and bone, but something else entirely. It's like that black shit they pulled out of you, it's pure potential with no direction. Do you know why the universe keeps expanding?\" Lily's voice had calmed a little. \"Scientists think it's some leftover energy, or whatever. It's because this plane is finite, while others are not. The universe is trying to play catch up to its big brothers and sisters, and will eventually tear itself apart to do so.\"\n\n\"I so enjoy these chats,\" Beth noted sarcastically. \"Very uplifting.\"\n\n\"That thing out there is just a demon who hasn't pissed off Daddy yet. Does that put anything into perspective for you? If it can smash you into powder while coloring inside the lines, it will do so in a heartbeat. The asshole won't even be angry while crushing you, it'll be in such a rush to satisfy Daddy that it'll take the shortcut.\"\n\n\"You have a very dim view of angels.\"\n\n\"Religious politics aside, I can't help you with this one. Just its arrival almost killed me, and if not for our resident screamer, I'd be gone already. If I step outside of the house, it will probably kill me on sight. Not send me to Hell: oblivion. Gone, poof! You won't even have dust to put in a jar for Romeo to cry over.\"\n\n\"Beth?\" It was Kisa. She came into the bathroom, a frown on her face. Lily shifted out of Beth's arms before they could be seen. \"Death needs to talk to you.\"\n\n\"And so it begins.\" Lily waved Beth off with a tiny hand. \"If you need me, I'll be in this tub. I'm the new maiden of the bath, here to dispense orgasms and advice.\"\n\n\"Not looking like that, you won't.\" Beth pulled the towel off the hook and threw it over Lily's head. \"Here's a blankie so you don't get cold.\"",
        "\"Thanks, Mom,\" Lily mumbled through the towel as she flipped Beth off.\n\nBeth followed Kisa down to the living room. Death stood in the door, his cowl pulled back. The flames in his eye sockets had grown tiny, and he was fidgeting with his fingers.\n\n\"You need me?\" she asked.\n\n\"Yes, I believe I do.\" Death stared down at his feet. He did a little shuffle, like he was trying to kick a piece of dust off the floor. \"It seems that I am in need of your legal services, Judge Bethany.\"\n\n\"Okay, three things. Only my grandmother calls me that, and\u2014\"\n\n\"She's dead, yes.\" Death smiled sheepishly.\n\n\"I'm not a judge, I'm a lawyer,\" Beth added.\n\n\"I apologize. You wanted your own title, and I thought you would enjoy that one as it is related to the law.\"\n\n\"Oh.\" She remembered shouting after him the other day for a title. \"I appreciate the thought, but I don't want to be called judge anything.\"\n\n\"Princess? Queen? Barrister?\" Death paused to gaze at the ceiling in contemplation. \"Supreme court justice?\"\n\n\"Three. Why do you need a lawyer?\" she asked.\n\n\"Ah. Well, I thought I would impress upon my siblings and the honorable angel Mehkhkahrel the things I've learned since arriving at this. My presence here was quite by accident and never intended to set off the Apocalypse itself. I thought that by showing them how I have indulged in your culture that they would realize that I came to Earth without any malice toward Mankind.\"\n\n\"Okay.\" Beth waited for him to go on.\n\n\"It would seem that we have a dilemma. You see, the angel is under the belief that the Apocalypse is at hand, and has stated that my continued presence is proof of such a thing. My siblings, who are very eager to walk the Earth and destroy it, have sided with him.\"\n\n\"But you were summoned here for a different reason, though.\"\n\n\"Yes, but they didn't seem to care. The point of the matter is that the angel has ordered that either I leave this plane right away or allow them to formally open the Seven Seals so they can rain judgment on Earth.\"\n\n\"Oh. Oh!\" Beth's jaw dropped open. \"You can't leave, can you?\"\n\n\"I cannot.\" Death shook his head sadly. \"Until I have collected the soul of the one known as Amir, I am bound to this world.\"\n\n\"Shit. So where do I come in?\"\n\n\"Well, the angel was about to pass judgment when I reminded him that it was the law of the land that I get access to an attorney. I also told him that I had the right to remain silent.\"\n\n\"And he listened?\" She looked out the window. The quartet of chaos was standing there, staring at the house.\n\n\"This is an angel of judgment. Of course, he didn't.\" Death wandered over to the window. \"But he had promised to consider all angles. I informed them that my attorney would have a unique perspective relevant to my case and then held him to that promise.\"\n\nHer stomach cramped and she felt light-headed. What would Mike do in a situation like this? She observed each of the horsemen, watching them as they remained motionless. \"Your brothers wouldn't happen to be susceptible to flirting, would they?\"\n\n\"No. They have no interest in sex. And neither does Pestilence.\"\n\n\"Pestilence is a girl?\" She looked at the rider in the spacesuit and realized it was a high-tech hazmat suit.\n\n\"No. They're complicated, and still figuring things out.\" Death led her to the door. \"Their identity has been in flux for millennia. In fact, Pestilence is their new name. I think they like it, but it's hard to tell now that I can't see their face. When I'm standing really close, I can hear what sounds like thousands of bees buzzing inside. Can you imagine that?\"\n\n\"Guess I won't have to.\" She put her hand on the knob and pulled. If Death's siblings couldn't be seduced, then half of Mike's typical strategy was already out the window. \"Let's see if we can get lucky.\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThe cabin smelled like hot butter and cinnamon. When Mike stepped out of his bedroom, the smell intensified, and he saw Yuki standing in the kitchen. She was ladling oatmeal into a bowl and winked when she saw him.\n\n\"Morning.\" She smiled knowingly before taking a bite. \"There's plenty left. You should have some to replenish that energy of yours.\"\n\nMike blushed. \"I'm guessing everyone heard?\"\n\n\"Not only that, but you fucked up Bigfoot's VHS collection. His tapes are all messed up. They have these wavy lines all over them.\"\n\n\"Oh, shit, really?\"\n\n\"Yes!\" Bigfoot shoved open the bathroom door and limped to the couch. \"I had to switch to DVD and I hate it!\"\n\n\"Why do you hate DVD?\" If Bigfoot was not moving like a geriatric patient with arthritis, he would have felt threatened by the angry Sasquatch.\n\n\"My fingers are too fucking big for the remote.\" Bigfoot sat down with a grunt and held up a black piece of plastic that was dwarfed in his palm. It was clear to Mike that each button would be very difficult for the cryptid to press.\n\n\"Where's Quetzalli?\" he asked.\n\n\"Using up what's left of the hot water.\" Yuki tapped her spoon on the table. \"Your bedroom smells like a fuck-pit, and you're no better.\"\n\n\"Oh.\" He couldn't even argue. His stomach was still covered in dry spunk. \"I guess I could always take a cold shower.\"\n\n\"You'll freeze your balls off.\" Bigfoot glanced over his shoulder. The television was displaying the DVD player's loading screen. \"Our water comes from a well. Darren put in a heater, but it's old. About twenty years ago, you could get a couple of showers out of it. But now?\" He shivered. \"If you're in a hurry, you could drop by the hot springs. It isn't a far walk.\"\n\n\"Hot springs?\" Mike's mind immediately went to Naia. He wondered how she was doing.\n\n\"Yeah, there's a few. Big enough to swim in. Just don't try diving to the bottom, they're deeper than they look. The water gets much hotter and you might pass out.\" Bigfoot uncapped a beer that had been down by his feet. \"This one time, I was at Yellowstone and saw a guy go swimming in one that was near boiling. Cooked him like a brat, he split open along the sides toward the end.\"\n\n\"Gross.\" Yuki frowned at her oatmeal. \"I saw something like that once in Japan. Very unpleasant.\"\n\nThe front door opened and Dana walked in. Her nose wrinkled and she looked at Mike.\n\n\"Oh, wow, that's strong.\" She covered her nose and gave him a wide berth as she moved to sit next to Bigfoot.\n\nA door shut in the cabin, and Quetzalli appeared with a towel around her body and another towel wrapped around her head. She gave Mike a wink and disappeared into their bedroom.\n\n\"Maybe I'll hit those springs.\" He stood and moved to the front door. \"Where are they?\"\n\n\"I'll take you.\" Dana stood and moved toward the door. \"I don't want you getting lost.\"\n\nMike grabbed his coat, and they walked outside together. He shivered in the cool air, wondering if the hot spring would be warm enough to counter the chill. Up above, he saw Abella circle for a landing.\n\n\"Are we going home today?\" She looked unusually grumpy.\n\n\"Not yet. Once Bigfoot is up and about, we'll plan for going home.\" He pulled out his phone and frowned. \"I'm also thinking that I should head for the boundary. See if I can't get a signal on this thing.\"\n\nAbella rolled her eyes and held out a hand.\n\n\"Give it here. It will take you all day to walk there and back. I can do it in a quarter of the time.\"\n\n\"Thank you.\" He handed over his phone. \"Let them know that we're safe. I think our Nirumbi issue is solved.\" If that was our main issue, he thought to himself. Whatever had been watching him didn't seem to be around now. Hopefully it had gone with the Nirumbi.\n\n\"I'll be back.\" Abella launched herself skyward in a motion that scattered a flurry of snowflakes in every direction, blasting Mike with icy shards. He brushed himself off and watched as the gargoyle disappeared over the trees.\n\n\"She's in a foul mood,\" Dana muttered under her breath.\n\nMike sighed, but kept his thoughts to himself.\n\nThey walked into the forest, exchanging chit-chat. Dana was working her way through a ton of science fiction novels on her phone and was also learning conversational Russian. She also told him about her progress on the telescope, and how she thought it may be operable in the months ahead. The observatory was a room he hadn't spent much time in. It unnerved him how it looked out on an unfamiliar sky. Sometimes if he stared for long enough, it felt like the sky was looking back.\n\nAs they climbed higher, trees thinned and were replaced by rocks. The smooth snowy contours of the forest floor were disrupted by stone outcroppings that looked as if they were fighting their way free of the ice, hoping for just a glimmer of the sun's warmth. The air was thicker somehow, and he picked up the vague smell of sulfur and other minerals.\n\nThis made him think of Lily. He was surprised he hadn't heard from her yet, or at least heard about her. She had promised to make trouble, and he was sure someone would have called to complain about her by now.\n\nThey stepped through a thin gap in the stones and he found himself standing on a ledge overlooking a pool of steaming water. He was about to say something when the steam parted and revealed Velvet. She was floating on her back with her eyes closed, her legs spread out around her like a star.\n\n\"Ah, shit,\" Dana muttered as Velvet's eyes popped open. \"I'm sorry, Vee. I didn't know you were up here.\"\n\nVelvet's eyes went to Mike, then back to Dana. He expected panic that he had seen her naked, but was modesty even an Arachne trait?\n\n\"It's fine,\" she replied. \"I was just taking a dip myself. Had a long night.\"\n\n\"Yeah, you got in pretty late.\" Dana pointed along the sides of the rocks. \"There's a path you can take down to the edge. If you don't mind, I think I'll leave you here.\"\n\n\"Don't want to be our chaperone?\" he asked, only half-joking.\n\n\"I'm hungry is all.\" She grinned. \"Hungry enough to eat a dragon.\"\n\n\"I like this side of you. Leave a sock on the door until you're done.\"\n\nDana rolled her eyes. \"Any sense of privacy died when you fried Bigfoot's VHS collection. I wasn't going to say this in front of him, but he teared up when he saw his Northern Exposure collection was toast. All recordings of the original broadcasts, something about music rights.\"\n\nMike made a face. He really hoped that Bigfoot didn't hold a grudge. \"Guess I'll see you in a bit.\"\n\n\"Give me a twenty-minute head start.\" She winked at him and left.\n\nMike followed the ledge to the base of the spring. From down here, he saw that the ledge they had been on would be a perfect location for jumping into the spring. Velvet was floating in the water, just the top of her head and her spider body visible through the steam.\n\n\"May I join you?\" he asked.\n\nA hungry look crossed Velvet's face, but he didn't get any sense of danger. The seconds ticked by as she seemed to consider his request.\n\n\"Apparently, I stink,\" he continued. \"And Quetzalli used all the hot water.\"\n\n\"Oh, I can tell,\" she replied. \"That you stink, I mean. I also sort of saw what you were doing.\"\n\n\"You were watching us?\" He wasn't even going to pretend to be offended. People walking in on him at home was a weekly occurrence.\n\n\"No. I was sulking in the barn and saw the light show.\" She smiled. \"Care to explain that to me?\"\n\n\"It's my magic,\" he explained. \"And I would be happy to share more, but I'm getting cold out here.\"\n\n\"Don't let me stop you.\" She didn't turn around, or otherwise indicate that she was going to give him any privacy.\n\nChallenge accepted. Mike didn't turn either. He tossed his jacket to the side and then unbuttoned his shirt. When he pulled down his pants, he could hear the Arachne gasp as his cock sprung free. He got in the spring, taking his time to navigate the rocky sides. The water was a great temperature, and he sighed in relief.\n\n\"We've been coming here since we were old enough to walk,\" Velvet told him. \"Much easier than trying to fit in a shower. We did that too, but only when we were little.\"\n\n\"Not bad. Hot all year round?\"\n\nShe nodded. \"Sometimes it's too hot. It's not like there's a thermostat.\"\n\n\"Of course not.\" He moved a bit closer to her, his feet feeling along the bottom. It didn't take long before he found a drop-off, and he stood on the edge of it. The water was up to his chest, so he crouched until it came to his chin. \"So yes, my magic. It's got some quirks.\"\n\n\"Can you move stuff with your mind?\" she asked, her eyes lighting up in excitement. \"Or cast spells? Make a fireball?\"\n\n\"Nothing like that...I don't think.\" He laughed. \"I'm still figuring it out, but it's the reason I can do that screaming thing.\"\n\n\"Awesome,\" she whispered.\n\n\"So why were you sulking?\" he asked.\n\n\"Ugh.\" Velvet sunk down until only her eyes were visible. After a few seconds, she bobbed back up. \"It was nothing, just going through some things. I've been thinking about what you said, about the house.\"\n\n\"Don't feel like it's a one-way trip,\" he said. \"Once we can get contact re-established, I bet we can get a rat portal set up. You could stay here and still be part of the household, it isn't a big deal.\"\n\n\"Hmm.\" She floated closer to him. \"I don't know everyone would be as accepting of that decision.\"\n\nHe waved his hand. \"If you're thinking about Abella, I wouldn't worry too much. I don't know the full story about what's going on with her, but she's a wonderful person. Just very protective of me and the house.\"\n\n\"I see.\" She narrowed her eyes and sunk her mouth below the water, but not before he saw the grin that had appeared.\n\nWhat was she up to?\n\n\"To be honest, if there really is a problem between you and Abella, you two should talk about it. Clear the air, or whatever you wanna call it.\"\n\nVelvet shrugged, sending ripples through the spring.\n\n\"You don't have to be friends,\" he added. \"But there should be some level of respect. The house is a haven from the dangers of the real world. Despite their differences, everyone knows how to come together and have each other's back.\"\n\n\"Now I find that interesting,\" she said as she popped above the water so fast that the tops of her breasts appeared. When his eyes twitched to look at them, Velvet grinned and left them on display.\n\n\"I'm sorry, find what interesting?\" he asked.\n\n\"That you all work together. When Dana and Lily showed up last fall, it was surprising to see a succubus helping anybody.\"\n\n\"Lily has her edges,\" he admitted. \"But she's come a long way.\"\n\n\"You can't help yourself, can you?\" Velvet was close enough now that he could touch her if he wanted. \"Do you always see the best in people?\"\n\n\"I didn't use to,\" he admitted. \"But then I met a bunch of them that seemed like me. Different, maybe even a little damaged. I think we see it in each other, it's kind of a mutual respect thing and\u2014\"\n\nVelvet had bobbed even closer. He sank down into the water until they were eye level with each other, all while struggling to keep his eyes off her breasts.\n\n\"And what?\" she asked, her voice quiet.\n\n\"I think we recognize each other as survivors.\" It wasn't what he had been about to say, but in his efforts to avoid staring at her boobs, he had totally forgotten what he was going to say.\n\n\"Hmm.\" She looked pensive for a moment, but he realized that she was staring at his chest. When he looked down, he saw that part of the scar tissue on his side was visible.\n\n\"Car crash,\" he explained. \"It caught on fire before they pulled me out.\"\n\nShe shuddered, then lifted a hand from the water. \"I'm terrified of fire,\" she admitted to him. \"Our skin is covered in very fine hairs that we use to perceive the world. Getting them wet isn't too bad, but fire melts them quickly.\n\nWhen she put her hand on his flesh, he felt his own senses heighten. It wasn't as bad as before, but it was still overwhelming.\n\n\"What are you doing?\" he asked in a whisper. \"When you touch me, I can feel all these extra things, it's like my nerves are being re-wired.\"\n\n\"I feel things, too,\" she responded. \"But I very much doubt they are the same things you feel.\"\n\nWith that said, she moved her hand down his scars until her arm was underwater. As her fingers slid across his hip, his cock stirred to life, bobbing beneath the water like a lure. They both gasped when her hand settled on his cock.\n\n\"We might be feeling the same things after all,\" he muttered. Velvet's lips were inches from his own and her eyes had a predatory glint to them that made his throat go dry.\n\n\"I...\" she looked down as if suddenly realizing where her hand was. \"I've never done this before.\"\n\nThe air was thick with steam, and he inhaled it through his nostrils. It mixed nicely with the energy that was already coursing through him. He slid his hand along her cheek, then pushed a few stray hairs behind her ears.\n\n\"There's a first time for everything,\" he replied.\n\n\"Yeah, but...\" she paused to lick her lips. He could see that she was drooling. \"My mother said that this was dangerous. That I may lose control.\"\n\nShe was stroking him now, her thumb teasing the opening of his cock. If this really was her first time, it seemed like she had some natural instinct.\n\nHe thought back to what he knew about the Arachne. Was he nothing more than prey, caught up in a web of deception? He knew that Abella would say that he was.\n\nHowever, with Velvet so close to him, he felt no danger at all. If she was planning to seduce and hurt him, wouldn't he feel something? Right now, she was just another beautiful woman who was coming onto him very strongly.\n\nHis cock twitched, officially registering its vote.\n\n\"We can take it slow,\" he said. \"If you think you're about to become dangerous or lose control or whatever, just tell me.\"\n\nHer eyes had taken on that vacant stare again, and she was stroking him even harder. He responded by lowering his hand to her breasts and playing with her nipples. His other hand reached out to stroke her waist, but she grabbed him by the wrist.\n\n\"That...I...\" Her cheeks turned bright red. \"If you go much farther, you'll feel the parts of me that aren't...humanoid.\"\n\n\"Is that bad?\" he asked. \"If you don't want me to touch you there, that's fine.\"\n\n\"It isn't that.\" She scrunched up her face, then let out a sigh. \"I'm just worried it might ruin the moment. You know, if you remember what the rest of me looks like.\"\n\n\"Oh.\" He ran his hand down her thigh and paused. Somewhere around mid-thigh, her smooth skin gave way to thick fur.\n\n\"See what I mean?\" There was a squeak to her voice, a crack in her bold facade. \"It would be better if you didn't.\"\n\n\"Didn't what?\" His magic was swirling through him now, and he hooked his fingers in the thick hair of her legs and dragged them through like a comb. Even beneath the water, the hair felt light and moved easily through his fingers. He wondered if it was repelling the water. \"I don't mind a little hair.\"\n\n\"Mike...\" Her voice was pleading now, and she had stopped stroking him. \"I don't think I could handle it if you...found me disgusting.\"\n\nHe pulled on her waist, bringing her lips within a breath's distance. When he moved his hand back up her leg, he circled it around her waist and onto one of her other legs. When he squeezed it, she let out a gasp.\n\n\"I don't care that you didn't shave your legs for me.\"\n\nVelvet's eyes lit up and she laughed. She pushed him back with a playful splash, but he hooked his arm around her waist and pulled her in for a kiss, his lips gentle on hers. Surprised at first, Velvet immediately melted into him with a groan.\n\nHe tried squeezing her spider leg again, but she grabbed his wrist and moved his hand back onto her front leg.\n\n\"That part of me doesn't feel pleasure,\" she explained after breaking the kiss. \"All of my nerves for that are kind of forward of the biggest ass you've ever seen.\"\n\n\"Well then let's test them out.\" He had been holding his magic back, but when they kissed, he released it. She moaned into his mouth and her front legs circled his waist, pulling him in. His cock rubbed against her belly as she continued to jack him off beneath the water.",
        "His magic sank into the spring, then bubbled up from beneath them, causing Velvet's back end to pop above the surface. Swirling around them, his magic caressed her body, and it was almost as if he could feel her with his mind.\n\nHe moved a hand between her legs and was surprised when he felt something grab him. Startled, he pulled his hand away.\n\n\"That's normal,\" Velvet told him. \"I'm...different down there.\"\n\nHis curiosity was piqued. He went exploring again, running his fingers through her thick pubic hair. Once he found her clit, he realized that what he thought was an extremely puffy set of labia was actually a set of fleshy protuberances that gripped him when he tried to penetrate her. It was as if they were clenched fingers, eager to trap him in place.\n\n\"I don't mind different,\" he told her, then slid a finger inside. He felt her vagina clamp down on his finger, then force it back out.\n\n\"Sorry,\" she muttered, her face red again. \"It's...it knows when it's not...\"\n\n\"Hey, don't worry about it.\" He moved his hands across her pubic mound. Her labia tried to shoo his hand away by flicking out at him. \"Are those meant to hold me inside?\"\n\nVelvet said nothing, but managed to achieve a new shade of crimson in response.\n\nHe chuckled. \"It's nothing to be embarrassed by. Communication is actually the key to\u2014\"\n\nShe forced herself onto him, her body lifting in the water. Her hand had moved off of his cock and he felt those fleshy nubs shift apart as his glans pushed into her.\n\nVelvet moaned, then stared into his eyes. He could see his own magic reflected inside, as well as something else. \"I'm sorry, it's...instincts.\"\n\nHe grabbed onto her hips and pulled her down onto him. Her insides squeezed him in stages, allowing him to sink in an inch at a time. She clutched him against her and started breathing heavily.\n\n\"I feel so full,\" she moaned. \"And you feel so hot inside me. Does it always feel this good?\"\n\n\"It's different every time.\" His magic was surging through his body, and when the protuberances gripped him at the base of his cock, he jumped. This caused them to float out into the middle of the spring, buoyed by the bubbles from down below. An eddy current caused them to float in a spiral, his body pressed tightly against hers.\n\n\"Mike.\" When she whispered his name, chills went up and down his spine. \"I barely know you but...this feels so right.\"\n\nHe paused to reflect on that. His life had become a series of strange sexual events, so he had given up on trying to rationalize his encounters. However, something was clearly different with Velvet. He was drawn to her by desires he didn't fully understand, and he hadn't thought twice about pursuing them.\n\nNow, with his cock buried deep inside of her, he felt an even stronger connection, a thread that he was desperate to tug at. He was well aware that he was no longer entirely human. His magic was largely sexual in nature.\n\nBut what he felt now was longing. Was it his own? Or was it related to the strange feelings he experienced when he touched her?\n\n\"It feels right for me, too.\" He closed his eyes and pressed himself into her. It was hard to maneuver while floating and this was all he could manage. \"And maybe, while it feels right for both of us, we should just go with it.\"\n\nShe stared at him for several seconds, as if contemplating a huge decision. He wished he could know what she was thinking.\n\nVelvet's legs surfaced and kicked, propelling them toward the shoreline. His toes touched the rocks below as they maneuvered to the edge of the spring. She rose from the water, her front legs wrapped around Mike's waist. He found his own legs dangling beneath him as she carried him over to a nearby rock and pressed him up against it. Her fingers dug into the cold stone, causing it to crumble beneath her touch and her hot mouth found his again.\n\nHis tongue danced around in her mouth, careful to avoid the sharp fangs he discovered along the side. He didn't think she would bite him on purpose, not at this point, but accidents happened. Without a way to use his feet on the stone for leverage, he used his arms. Velvet moaned, her cries reverberating through his body as magic arced between her legs and across the ground.\n\nWhen she pulled away from him, a line of drool connected their mouths. He wiped it away as she arched her back, giving him access to her breasts. They were soft, but he could feel the thick muscle hidden beneath as he buried his face between them and took in her scent. She had a dusky scent that reminded him of long nights around a campfire beneath the starry sky. When Mike pulled his face out of her breasts and gazed into her eyes, he somehow saw those stars reflected in them.\n\nDown below, he could feel fleshy pincers surrounding the base of his shaft. Whenever he sank into her, they would squeeze tight once he was buried inside. As he withdrew, they massaged his cock and then clamped down the moment before he could completely pull out.\n\nThere was also a series of bony ridges inside that felt absolutely delightful. He could feel them moving along the top of his glans as he fucked her.\n\n\"Oh, oh yes!\" Velvet's human eyes locked on his. \"Mike, I'm so sorry, but I promise this won't hurt!\"\n\nShe opened her mouth wide to reveal her fangs and then bit him on the neck. He felt her fangs slide into his flesh, and fire raced through him, focusing almost entirely on his balls. His danger sense never warned him, and still wasn't going off.\n\nHe moaned as a pulsing sensation built inside of his balls, then wrapped his arm around Velvet's head to trap her in place. His magic created a band of energy that swirled around them, locking them in place. It seeped into his pores and crept along Velvet's body, vanishing beneath the soft fur of her legs.\n\nWhen he came, it wasn't his typical eruption. Instead, the orgasm was strung out as he pumped a steady stream of cum inside of her. He groaned as her fleshy protuberances milked him. His balls no longer felt heavy, but the pressure inside was already building again.\n\nThe swirling band exploded with light, sending a cascade of energy into Velvet's body. Her legs spasmed and went straight, causing her to lie flat on the ground. She closed her eyes and let out a shrill cry that startled nearby forest birds, causing them to fly away in panic.\n\nThe pressure in his balls was already intense, and Mike shouted as he pumped her full of cum again. The energy in Velvet was now seeping back into him as the feedback loop strengthened his arousal. Whatever venom ran through his veins was already wearing off, but he continued to flood her womb with cum. So much semen had leaked from her vagina that the air was filled with the sound of sticky smacking.\n\n\"Mike, I\u2014\" Velvet's human eyes rolled up and her spider eyes closed as she let out another cry of ecstasy. Dozens of field mice appeared from nearby rocks and ran for the safety of the forest.\n\nWith one last moan, Mike blasted her womb again, and then concentrated on the field of energy that surrounded them. It was reluctant to return, but he pulled it back into his body before the two of them spent all afternoon fucking. He was still sore from last night and suspected that Velvet could easily outpace him.\n\nPulling himself free from Velvet's embrace, he stumbled backward and fell on a flat rock, nearly blacking out. His body was flooded with a fiery heat that moved through him and then vanished, and it was almost like he had been punched in the chest.\n\nMike gasped for air as the world came back into focus. His gaze was fixed on the clouds above, and the chill of the earth seeped into his bones from beneath. The whole world was alive with sounds he had never heard before. It was sensory overload, and he shut his eyes, hoping it would fade like a bad bout of tinnitus.\n\n\"Mike?\" Velvet's voice was filled with concern.\n\n\"I'm fine,\" he whispered, his own voice bouncing around inside his skull. The sounds had faded, but now he was hearing something else. It was the sounds of tiny voices, but they weren't speaking words. It was more like concepts, and he could feel all of them.\n\nHungry\n\nDanger\n\nBuild\n\nFood\n\n\"What am I...\" He put his hand on his belly, feeling a twinge. His breakfast had been far too small and he was suddenly starving. \"I'm hallucinating. Hearing things, kind of.\"\n\n\"What kind of things?\" Velvet's voice was closer now, and she leaned over him with a nervous look on her face, her breasts dangling over his body.\n\nHe closed his eyes and concentrated. The voices were coming from different directions. \"They're talking about...food. And hunting. I don't understand.\"\n\nVelvet's eyes widened. \"You can hear them?\"\n\n\"Hear who?\" He managed to sit up. His legs were starting to get cold, and he pushed himself along the rock until he could slide back into the spring. The warmth spread through him rapidly and he sighed and closed his eyes. Strangely, he almost felt like he was drawing magic from the spring, his aches and pains vanishing almost immediately.\n\n\"The spiders.\"\n\nHis eyes popped open, and he looked at Velvet. \"Spiders can talk?\"\n\n\"They can communicate, yes.\" She moved along the edge of the spring and dipped one of her feet in. The motion was similar to watching a cat paw at its water dish. \"They're my friends. They talk all the time. It can get quite noisy once winter is over.\"\n\nHe put his hands to his ears and groaned. \"They're loud enough already.\"\n\nVelvet slid back into the water and bobbed over to him. She had a sheepish look on her face as she pulled his hands from his ears. He was suddenly aware that he was no longer tired, and once again full of energy.\n\n\"You can tune them out,\" she explained. \"You just have to focus on other things. Treat them as background noise.\"\n\n\"I'm not sure how to even begin.\" His eyes met hers just as her hand found his cock once more. The air suddenly had a texture to it, and he could feel the water vapor clinging to the hairs of his arms.\n\n\"Then allow me to help.\" With a smile, Velvet took a deep breath and disappeared beneath the water. When she sucked him into her mouth, he let out a long, full-throated moan as her tongue slid along the length of his cock.\n\nHe no longer cared what the spiders had to say.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nWhen Beth walked outside, she was surprised at how still this world around her felt. The fog around them billowed as if blown by an external source, but there was no wind.\n\nShe was also surprised to see Mehkhkahrel sitting on a raised judges' bench. His clothing was the same, and he tilted his head so that one of his eyes could see her. Up above, the angel hovered. Looking at it for more than a second made her feel dizzy.\n\n\"Death has requested that we follow the laws of your land and allow him to have legal representation.\" Mehkhkahrel's mouth was stretched wide, his tongue hanging out as the words boomed from him like a loudspeaker. \"As a being of justice, I have seen fit to grant this request.\"\n\n\"Thank you.\" Beth looked over at the three horsemen. \"If you are the judge, then who is the jury?\"\n\nMehkhkahrel pointed up at the swirling mass with a crooked finger. \"I am merely the subconscious of the entity above, an extension of its will. As such, we are not bound by any ethical obligations, for our judgment is free of bias.\"\n\nWarning sign number one. Beth thought about what Lily had told her. If angels and demons were cut from the same cloth, did that mean the angel was incapable of lying? Technically speaking, if the divine being believed it was free of bias, it would be speaking the truth. Either way, a situation where the judge and jury were effectively the same being was a bad sign.\n\nThe angel was just a demon without daddy issues, after all.\n\n\"And them?\"\n\n\"We are the prosecution.\" Famine's voice had a southern drawl to it. His skin was dark and shiny, as if he had been dipped in oil. \"And it is our firm belief that our day has come that we may walk among mortals and take what is owed to us.\"\n\n\"I see.\" Beth looked over at Death, then back at the others. \"So catch me up to speed. If you all are the prosecution, then what crime has been committed?\"\n\n\"We demand what is ours!\" War was a large man with mottled, sunburnt skin and a greatsword to match. He was bald but had a beard made of fire. \"To walk among the world and bring it to its knees!\"\n\n\"Haven't you done enough walking on our world already? In fact, I would argue that all of you exist as a consistent state of things. So why fight to be allowed to start the Apocalypse.\"\n\n\"Allow me to answer, dear child.\" Mehkhkahrel now held a gavel in both hands, and black robes had appeared on him. \"As I am but an extension of the glorious being up above, so too is the state of the world. People may fight wars, but they are not War himself. What you have experienced in your world is but a pittance compared to the legacy that is rightfully theirs.\"\n\n\"And I see it as a temper tantrum.\" Beth narrowed her eyes at War. \"Nice sword. Isn't that a bit dated?\"\n\nWar laughed heartily. \"Haven't you heard that all is fair in love and war? I care not by what means the battle is won. But since you asked...\" He casually picked up the sword, which dislodged a massive chunk of dirt, and rested it on his shoulders. \"Though a gun may take a life, I long to feel the hot blood of my enemies rain down upon my skin. I carry this that I may cleave a man in half and watch the light fade from his eyes as my brother collects him.\"\n\nBeth gasped when she realized that what she had mistaken for his skin tone was actually the stain of fresh blood.\n\nFamine licked his lips hungrily. \"And I would see their hope extinguished as the food they feel entitled to cannot reach their bellies. As they mourn the physical things they can no longer afford. To see their bones against their skin as they waste away before my brother collects them.\"\n\n\"Shouldn't you be thinner?\" she asked. Famine had a thick gut.\n\n\"I bring hunger,\" he explained. \"But that does not mean I should suffer from it.\"\n\nBehind them, Pestilence raised their hands and waved them about as if speaking. Instead of a voice, it was the sound of thousands of beating wings flapping past, and when Pestilence finished, War let out a bark of laughter.\n\n\"Well said!\" he exclaimed.\n\n\"So it sounds like Death is key to all of this.\" Beth crossed her arms and looked at Mehkhkahrel. \"Though these three could walk the land, as long as Death himself isn't physically present, the Apocalypse cannot take place.\"\n\n\"So it is written,\" Mehkhkahrel responded. \"In the bible, which is the word of the being you know as God.\"\n\n\"Does the Apocalypse actually have to happen, though?\" It was time to try a new angle. \"It seems like there's a lot in the bible that hasn't or didn't actually happen.\"\n\nThis caused the angel to tilt his head, which made his tongue flop from one side of his mouth to the other. \"This world will end one day as all worlds must. And when it comes, there will be war, there will be illness, and there will be starvation and all shall die. It is the natural order of things.\"\n\n\"But technically, these guys don't have to show up, right?\" Beth looked at the horsemen. \"From what I understand of the bible, it's meant to be interpretive. So though it says that all things will end, it doesn't necessarily mean that it has to end this way. For instance, I remember something about a lake of fire. Couldn't that be interpreted as the sun expanding and gobbling up the Earth?\"\n\nMehkhkahrel paused for a long time, as if considering his answer.\n\nShe continued. \"I was under the impression that it was impossible to put into mortal words the will of a divine being who exists outside of time or space. Much like describing the color red to a blind person. I suspect that by having a divine being try to convey these thoughts and ideas, we suffer from mistranslation due to qualia. The terms and conditions of the Apocalypse itself may have been ineffable, meaning that the scribe did their best but couldn't convey the full meaning of God's word.\n\n\"In fact, the bible I have seen is not written in its original language. So how do I know that the events of the Apocalypse as I understand them don't contain translation errors? Or perhaps the scribe held an implicit bias, and wrote their own take on things.\" Beth pointed at Pestilence. \"I doubt hazmat suits existed when the bible was written. If we were to open one now and read the passages out loud, we would discover that this extraplanar being does not match the description of one of the four horsemen. So either the bible is wrong, in which case you have no precedent, or these aren't the horsemen. Either way, any claim they may have to the Apocalypse is null and void, as their coming has not been properly foretold.\"\n\n\"Um, Mistress Bethany.\" Death tapped her on the shoulder. \"I would be happy to verify the identity of\u2014\"\n\nShe clamped her hand across Death's mouth, the feel of his teeth against her palm causing her whole arm to go numb.\n\n\"I don't like that title.\" Her eyes went to Mehkhkahrel, who now seemed to be seriously studying her. \"As your legal counsel, I recommend that you speak only when I grant you permission.\"\n\nDeath mumbled his agreement.\n\n\"I move that this case be dismissed on the grounds that I cannot verify either the identities of the horsemen or the grounds by which the Apocalypse is allowed to occur.\"\n\nWar's jaw dropped open, and he looked at Famine. Famine scowled and stepped forward.\n\n\"Now see here,\" he said a little too loudly. \"We can verify that this individual is in fact one of the horsemen of the Apocalypse. And I have a feeling our brother would agree. If three of the horsemen agree that Pestilence is the fourth, then that should be good enough for the court.\"\n\n\"But how do I know that you all are the four horsemen?\" Beth gestured at Death. \"My client may be the physical manifestation of Death, but he was not brought here for the Apocalypse. A failed spell has trapped him here until he can fulfill his goal. Therefore, even if he is indeed one of the four horsemen, we can prove that the means of his arrival are not of biblical portent. In fact, I would like to know how you all even found out that he was here on Earth.\"\n\n\"It was reported to us.\" Mehkhkahrel's lips curled away from his teeth. \"This is a matter which would have been resolved long ago if not for the protection of your home against his discovery.\"\n\n\"But if you couldn't see him, then how did somebody\u2014\" she could almost hear her thoughts click into place. Someone wanted Death out of the picture, and it was a very short list. If the options were making Death go home or global annihilation, the choice would have been a simple one.\n\n\"Should the four ever walk as one on the soil of the Earth, then the Apocalypse shall commence.\" Mehkhkahrel's voice had a tone to it that Beth didn't like. \"It is why we went to so much trouble to bring you here, to this extra-dimensional space, before gathering. There are certain rules.\"\n\n\"See? So it's settled, then?\" War's eyes were now glowing in excitement.\n\n\"No. This child speaks with wisdom in regards to the book that was written. It is not a true telling of what is to come.\" Mehkhkahrel looked over at War. \"And though I have summoned you from the Void, it was not to start the Apocalypse. It was for this proceeding. It is not written that an angelic being shall casually open the Sour Seals of their own whim.\"\n\n\"Fuck!\" War slammed his sword into the ground. \"But we are all here, that should have to count for something! We have utilized avatars, have walked the land in mortal form, but never have we been so pure! The world is ready for us, ripe for the taking, and you would deny us?\"\n\n\"You agreed to abide by the laws of this land, as did I.\" Mehkhkahrel rolled his head so that he was looking at Beth. \"And this child has made her case that Death's presence alone is not enough to qualify.\"",
        "\"FUCK!\" War yanked his sword out of the ground and hurled it into the fog.\n\n\"As such, I am ready to pass down judgment.\" Mehkhkahrel looked at Death. \"It's time for you to return to the Void.\"\n\n\"Objection!\" Beth moved in front of Death. \"You said yourself that his being here was an accident. Now you intend to penalize my client for committing no crime!\"\n\n\"But I believe I established that either Death must participate in the Apocalypse or he must be dismissed.\" Mehkhkahrel tried to cross his arms across his chest, but they stuck out straight instead and made an X.\n\n\"But you also agreed to abide by the laws of this land. He's the defendant, and if he is proven innocent, you don't get to punish him for it.\"\n\n\"Your Honor.\" Famine wore a shit-eating grin. \"This young lady argues that her client be allowed to remain, as he was summoned against his will. Is that correct?\"\n\n\"It is.\" Mehkhkahrel's eyebrow lifted in interest.\n\n\"Well, since we were also summoned against our will, I argue that we be allowed to remain as well. It's only fair, per the laws of this land.\" Famine turned his gaze on Beth. \"In fact, you can go ahead and send us all back to Earth right now.\"\n\n\"No.\" Beth's voice barely broke a whisper. Mehkhkahrel himself had said that all four of them on Earth together was the qualifying event.\n\nFamine chuckled. \"I'm sorry, little lady, do you have an objection? You see, we aren't eager to go back to the Void. We have things we've just been dying to do out here. So what do you say, Your Honor? After all, it's only fair.\"\n\n\"Ob...objection!\" Beth held up her hand. \"Dismissal of the case by the prosecution with current terms would put undue hardship on my client.\"\n\n\"On what grounds?\" Famine sneered at her. \"You ain't gonna win this.\"\n\n\"If these four should walk the Earth together, then the Apocalypse starts. Death would be forced against his will to join in, which could be seen as a form of indentured servitude, forced labor, or even slavery. All of which is forbidden by the laws of my land.\" She glared at Famine, then turned to Mehkhkahrel. \"You said so yourself that you would agree to our laws, but it seems like every choice made leads to the destruction of my whole planet. That would indicate a premeditated bias on your part, and you said you were free of such a thing.\"\n\nMehkhkahrel regarded all of them in silence for several seconds. War tried to say something, but Pestilence put a hand over his mouth.\n\n\"I have much to ponder,\" Mehkhkahrel finally revealed. \"Both sides have shown much logic this day, and I see that this child is right. To dismiss this case would be to unfairly punish the defense.\"\n\nBeth let out a sigh of relief.\n\n\"But the prosecution has rights as well. So it would seem we are at an impasse.\" Mehkhkahrel looked at the horsemen. \"I think it would behoove both sides to think of what they want the outcome to look like. In forty-eight hours time, we shall reconvene. At that time, we shall determine Death's fate, as well as the world's.\" He lifted his gavel and slammed it down. A shockwave rippled out, causing him and the horsemen to vanish in its wake.\n\nBeth sank to her knees, her heart pounding and her mouth dry. She had come so close!\n\n\"Countess Bethany, I know this may be a bad time, but someone is trying to get your attention.\" Death pointed at the house. When she looked over her shoulder, she saw Cecilia frantically waving her arms.\n\n\"Of course they are. And I don't like that title, either. Too stuffy.\" Beth rose and straightened her skirt. She was almost to the porch when Cecilia grabbed her by the hand and pulled her through the open door. Inside, Tink was on the couch in the living room, her eyes closed and her breathing shallow.\n\nKisa stood over the goblin with tears in her eyes. \"I found her in the basement,\" she said. \"Just outside the Vault. She won't wake up.\"\n\n\"Tink? Tink!\" Beth knelt on the couch and gave her a shake. She put her head on Tink's chest and heard the dim thumping of her heart. \"What was she doing outside the Vault?\"\n\n\"I don't know.\" Kisa stood. \"But it's open. I tried to shut it, but the door won't close. I could hear something inside whispering to me, it wanted me to come in. It's some kind of spirit, so it didn't really have any effect on me.\"\n\n\"Okay, let's move her to my room. Our visitors outside are gone for now, so let's get everyone accounted for. Cecilia, please go find Reggie and Jenny.\" She stood at the bottom of the stairs and raised her voice. \"Lily! I need you right now!\"\n\nThe door of Mike's room opened and the succubus came out, still in child form.\n\n\"What's happening?\" she asked.\n\n\"The usual. World is ending, evil entity in the basement. Sound like fun?\"\n\nLily hopped over the railing and fell three stories, her body expanding as she became an adult again. She landed in a crouch, her tail whipping out behind her.\n\n\"I could kick a little ass.\" Lily grinned. \"Let's go see what's haunting the basement, shall we?\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\n\"Okay, looks like we're ready.\" Eulalie had a mass of equipment spread out on Murray's dining room table, and she snapped the casing of the small drone she had purchased shut.\n\nSofia stood nearby, her face in awe.\n\n\"How did you afford all of this?\" she asked.\n\nEulalie had purchased a trio of laptops, some headsets, two phones and a drone. It had been a couple of years since she had played with one. She used to have a racing drone that she lost to an accident with a barn owl, and just hadn't had the heart to build a new one after.\n\nBesides, testing military drones was far more fun.\n\n\"My entire life, I've lived in a house with no bills. My father used to make spare money selling wood carvings so he could afford some luxuries, it isn't like we didn't have plenty of time.\" Eulalie had finished setting up the third laptop. Though they weren't top-of-th- line models, they were very capable of downloading and installing a modified hard drive backup she had stored in the cloud for just such an occasion. \"After I finished school and started doing government work, all I had to do was make some key investments based on rumor, speculation, and maybe a little market manipulation.\"\n\n\"You bought stocks?\"\n\n\"Nah. I don't really understand stocks.\" She smirked. When she sat in front of a computer screen, it was possible to see so many patterns in the data that she examined, to scrutinize code at an inhuman speed. \"I did mine a ton of Bitcoin when it first came out. Hacked a bunch of university computers to do it when class wasn't in session. May have been slightly illegal. Tried to convince Dad that we could afford to buy our own place wherever we wanted once the price went up, but he was against it. Apparently, money can buy everything but a magical barrier, and even those aren't a hundred percent foolproof. I even faked a human identity to cash out, but don't want to pay taxes on it yet.\"\n\nShe picked up the drone and handed it to a rat. \"Can you take this outside, please?\"\n\nThe rat pondered the object in its paws, and sniffed the edge before nibbling on the plastic.\n\n\"No, not food. Take it outside.\" She held up the piece of paper she had drawn on earlier. It was a cartoon rat holding the drone in the air outside of the house. She had found some pens and paper in Murray's junk drawer and put them to good use.\n\nThe rat nodded and left.\n\nEulalie looked at the screen to her left. She had set the middle laptop up on top of a book to elevate it, and the other two were on the sides. She watched a rat's eye view video feed on the screen and waited until it was outside to launch it. When its motors came to life, the rat nearly dropped it, then bolted back inside as the drone took off facing the wrong way.\n\nOn the middle screen, she logged in to her custom VPN and bounced the signal around the world a few dozen times before jacking into some local government accounts. She had been paid almost a decade back to do a threat analysis on a similar system, and apparently, these guys had never acted on the memo she sent about vulnerabilities.\n\nOn the third screen, she went through a similar process but also tried to dig up any cameras operating in the area. It took a bit longer, but she eventually used an old government contractor account that enabled her to download video logs from doorbell cameras around the neighborhood.\n\n\"I won't even pretend to understand what you're doing,\" Sofia muttered.\n\n\"I'm multitasking.\" Eulalie stared at the data as it came in on multiple screens. Her spider eyes allowed her to watch all three at once, and she sat back on her rear legs and used her front legs on the touchpads of the computers to help her navigate. \"Looks like the drone is up.\"\n\nOn their screen, the house came into view. At first, it looked normal, but Eulalie realized that something was off. The yard was disproportionate to the house, and it seemed smaller somehow.\n\n\"Weren't there three levels?\" she asked. \"And the porch looks tiny. Wasn't there an extra room over here?\"\n\n\"Shit.\" Sofia leaned in and squinted at the screen. \"This is the version of the house that appears when the real house is asleep. That can only mean one thing.\"\n\n\"Which is?\"\n\nSofia shook her head. \"The Caretaker has died. Something has happened to Mike in Oregon, that's the only explanation.\" Tears shimmered in the corners of her eye.\n\n\"Oh.\" She felt her breath hitch in her chest. If Mike had died, what had happened to her sister? Or Bigfoot? Was Emery okay? It felt like the world was spinning around her, and her legs began to wobble. What had she gotten them into?\n\n\"Who's that?\" The drone had been on a pre-programmed flight path, but she clicked it over to manual and had the drone fly lower. A pale figure was wandering along the edge of the property, scratching his head.\n\n\"That's Sulyvahn.\" Sofia frowned. \"That doesn't make sense. If the house got locked up, it should have taken him, too.\"\n\nEulalie lowered the drone until it was facing Sulyvahn. He gave it a suspicious look, his dark eyes menacing. The dullahan looked like he was ready to pounce. \"If he's roaming around, then the house isn't under attack. It's getting dark, please get his attention over the wall before he breaks my new toy.\"\n\n\"I'm on it.\" Sofia left the kitchen and went out the back door. Eulalie watched as Sulyvahn regarded the drone with anger, then turned in recognition. Satisfied that Sofia's job was done, she continued reconnaissance of the property.\n\nOut behind the house, Amymone was sitting on the edge of the fountain. In her arms, Naia appeared to be weeping openly. \"Interesting.\" So the house was asleep but hadn't taken anyone outside of it. Why was that? Shouldn't the geas have kept them all together?\n\nThe back door of the house slammed shut, and Sofia appeared with Sulyvahn in tow.\n\n\"Yer a right sight,\" he declared. \"Sofia tells me ye were stuck in the Library?\"\n\n\"Indeed we were.\" Eulalie turned away from her computers. \"Naia and Amymone are out back. Something is off.\"\n\nSulyvahn nodded. \"The greenhouse is still open. I went to check on the centaurs, and when I came back, the house was locked up. I broke in through the back to find a dusty old home. It dinna be making any sense!\"\n\n\"Hmm.\" Eulalie steepled her fingers and pondered. There was plenty of data to be had, but she lacked the knowledge needed to consider the next step. \"I take it this hasn't happened before?\"\n\n\"It's like someone scooped up the house.\" Sofia's face was pale. \"And that isn't all. The geas went with it. Whatever happened there left everyone remaining vulnerable. If someone were to attempt something, the house is defenseless.\"\n\nEulalie looked at the small contingent of drones she had on the counter, waiting to be used. She looked back at the screen, her eyes focusing on Naia. She tapped the screen. \"What did Naia say about all this?\"\n\nSulyvahn shrugged. \"She dinna say much, bein' a wee bit disheveled. Somethin' about a sleepin' home and bein' disconnected.\"\n\n\"Okay, so we've established that the house is there, but only in facsimile. Assume it's like a virtual computer and could collapse at any time.\" Ideas were flitting through her head now at a rate she couldn't keep up with. \"Establish a perimeter. We can monitor the situation from here. If the greenhouse was unaffected, it should be safe to use as a base of operations for the centaurs.\" She picked up the phone and handed it to Sulyvahn. \"Your kind don't sleep, correct?\"\n\n\"Nay, lass.\" He took the phone. \"Seems like ye think yer bein' in charge.\"\n\n\"That's because I am.\" She glowered at him. \"I may be an apex predator with legs that just won't quit, but I'm also the only one here who understands how to live in the modern-day age of information. While I'm in here making certain that nobody makes a move on the house, I need you out there. You are the only one of us who can remotely pass as human, and I suspect you can handle yourself in a fight. You can use the phone to check-in.\" She picked up an earpiece and gave it to him. \"If I call, just press the button on the side. Every eight hours, bring the earpiece and phone back for a fresh pair. I've programmed my number into them already, just unlock it and find me in contacts.\" She held up one of the spare phones and demonstrated.\n\nSulyvahn picked up the earpiece and shoved it in his ear. \"I know a queen when I be hearin' one,\" he muttered. \"Ye never argue with a queen.\"\n\n\"I'll call if I catch any movement. Dana told me she was doing drone work for the centaurs. Take some rats and have them bring back whatever you can find in her workshop, I could use the spares.\"\n\n\"Aye.\" Sulyvahn gave her a salute and left out the back. Eulalie looked at her drone footage and saw him vault the fence into the front yard.\n\n\"What should I do?\" Sofia asked.\n\nEulalie pondered over it, her eyes sweeping to the cracks on her legs. If someone came to the house, she could fight if necessary, but it would be dangerous. There was also the possibility that Sulyvahn could get into trouble.\n\n\"You're backup.\" She let out a sigh. \"You're stuck here with me, and you'll hate it. Will be very boring. But if something goes sideways, I need to know that I can depend on you to bail us out.\"\n\nSofia nodded. \"You can count on me.\"\n\n\"Good.\" Eulalie turned her eyes back to the monitor. Sulyvahn was in the backyard now, talking to Naia and Amymone. Soon she would have more drones and would be better able to monitor things from the sky. Even though the house was vulnerable, the web she was setting would catch anyone who tried to enter it.\n\nSpeaking of webs, it wouldn't be a bad idea to set some literal ones of her own. She didn't want someone breaking into the house and disrupting her surveillance. With a groan, she pushed away from the desk and rose to her full height. The nearby rats didn't shy away from her but raised their beady gazes in curiosity.\n\nIt was going to be a long night.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nI absolutely loved writing the scene where Beth argues with the angel and the horsemen. The Apocalypse is officially on hold while both sides regroup, and Mike is officially on a small vacation with an unlikely love interest.\n\nI can't wait to show you what happens next!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "leg fetish",
        "monstergirl harem",
        "arachne",
        "hot springs magic",
        "magical creampie zero calories",
        "eulalie is a web master",
        "explicit content",
        "bitcoin miner"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-66"
}