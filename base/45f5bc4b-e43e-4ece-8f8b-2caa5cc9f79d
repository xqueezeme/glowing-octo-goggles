{
    "title": "Seven Days Ch. 05",
    "pages": [
        "\"Wait, Nic...I--,\" was all that could escape from Victoria's lips before Nic wrapped his hand around her mouth to quiet her.\n\n\"Sshh,\" he whispered in her ear, as he pressed his solid erection between her curvy, chocolate ass cheeks. Victoria was on her knees at the edge of the bed while Nic stood behind her with his feet planted on the carpet. Her soft, smooth back to his hard, sturdy chest. \n\nNic held one hand over her mouth while the other reached from behind to explore her full breast. He roughly pinched and pulled her sensitive nipples. He heard her whimper from the pressure he was applying to the dark chocolate buds. And then another slow, sexy moan came from deep within her throat, as he continued to slide his thick cock further and further into her tight asshole.\n\n\"You like that, Victoria?\" he teased as he held her body tightly pressed to his, moving inch by inch into her toned, plump rear. He heard what he thought was a muffled 'yes'. When he was firmly buried into her, he slowly pulled out drawing an even longer moan from Victoria. \n\n\"Damn, Victoria. You're so tight, baby,\" he groaned out, trying to control himself from the snug fit.\n\nVictoria couldn't think straight. Actually, she couldn't think at all. He felt so fucking good inside of her. She wanted so badly to stroke her clit. Just once, but he had told her she couldn't. He had said it was his clit, and only he could touch it. So even though her fingers itched to do so, she resisted.\n\nSoon his hand covering her mouth lowered to her neck and he began to lightly squeeze. Victoria never thought she would ever enjoy someone choking her during sex, but it turned her on so bad. And apparently it turned Nic on too. He was teaching her so much about her likes and limits...and she was quickly realizing...at least with him, she had no limits. His hand tightened around her throat again, while he pulled out and pushed back in with more force. Aargh, he was killing her!\n\nAfter a few more minutes of fucking slowly, Nic was ready to pound the hell out of her tight ass. He quickly pushed her further onto the bed so he could crawl behind her. He pressed her back down until she was sturdy on her hands and knees. \n\n\"Spread your legs,\" he growled at her. Victoria promptly obeyed. Nic stared in awe at her body from behind. His manhood was still buried inside her ass, and seeing her legs spread so far apart from behind lit him on fire. Her small little waist that flared out to beautiful wide hips and a perfect ass...was causing his balls to tighten already. 'Fuck,' he thought to himself. \n\nNic roughly jerked her hands out from under her. He quickly pinned her face to the mattress by holding one hand tightly around her neck, while his other hand locked her tiny wrists behind her back. This was the perfect position, Nic thought with an evil grin on his face. She would have to take whatever he gave her. And give it...he did.\n\nVictoria squealed, half in pleasure, half in pain at Nic's powerful, unrelenting thrusts. And he was thrusting so hard that her body was moving up and down, rubbing her tender nipples against the mattress. He was being so rough, which she should be used to by now, but he always had a way of surprising her. He felt so deep inside her, all gentleness gone, as he continued to violently force his hard length inside her. Her ass would be raw tomorrow. For sure.\n\n\"Nic,\" Victoria gasped from underneath her hair, as he continued to hold her face pressed against the mattress. \"Can you pl-please, you know, help m-me out,\" she said with her voice vibrating from his force. \n\n\"What was that, Victoria? Speak up.\"\n\n\"Can you, he-help me out?\"\n\n\"Help you do what?\" Nic said squeezing her wrists.\n\n\"Can yo-you touch me do-down there?\" she whispered, feeling herself grow shy from begging him.\n\n\"Touch what, Victoria? Say it,\" he commanded.\n\n\"Please rub my cl-clit for me,\" Victoria said, desperate and pleading. A part of her felt ashamed and her face felt on fire. But another part of her became even more wet from him forcing her to say it, while she was in such a submissive position.\n\n\"Will you come for me if I do?\" Nic asked, stilling himself within her. She nodded her head.\n\nVictoria felt his hand leave her neck and whack the hell out of her ass. \"Aah!\" she screeched. \n\n\"Are you going to speak up or am I going to have to read more fucking sign language?\" he growled out. \n\n\"Yes,\"' she weakly croaked out, then cleared her throat. \"Yes!\"\n\nFinally, Nic released her wrists and reached underneath to stroke her hard clit and pull her hair. Victoria lost it. She started to come, while her body involuntarily jerked for several seconds. She could feel herself leaking onto the sheets. Her mouth was half open and she couldn't close it, yet no words were coming out. The feeling was too overwhelming. The muscles in her legs were starting to feel sore as she continued to hold her legs wide for him as he pummeled her tender ass. \n\nNow that she had gotten her release, Nic braced his hands on the bed by her sides and fucked her even harder. This girl was driving him crazy. She wanted him? Well, she was damn sure going to get him until she was aching all over. Just the feel of her body underneath him in this position sent him into a animalistic state of mind. He wanted to come inside her. To mark her.\n\nHe halted himself deep within her as he tilted his head back and shouted, \"Ughn, shit!! Goddamn it...aah, fucking hell.\" He slowly continued to drive in and out of her until not a drop was left.\n\nVictoria closed her eyes. She was already so sleepy and her entire body felt heavy. His dick might as well have been a shot of Nyquil, because he continued to wear her out until her body begged for sleep. \n\nNic laid down on top of her back. He couldn't move at the moment. Damn this girl knew how to set something off inside of him. He wasn't sure what it was, but she definitely held the key. That scared him a little. His body had this constant need to be buried inside her. And not just his dick, but he wanted to be beside her. Have her wrapped tightly in his arms. He wanted to...to kiss her again...and again, and again.\n\nHe eventually pulled out of her and rolled over onto his back. She was already half asleep, but still staring at him through the small slits of her eyelids. He pulled her body closer to him and started kissing her. He could never get enough of this. He was gently pecking, sucking on her bottom lip and then forcing his tongue in her mouth. Then once he was done worshipping the inside of her mouth, he'd repeat.\n\n\"Nic,\" Victoria lazily laughed, \"You're going to give me a bruise on my lips if you don't stop!\"\n\n\"I don't want to stop,\" Nic admitted, as he pressed his lips against hers again and slid his tongue inside her warm, sweet mouth. \n\nVictoria soon quit resisting his kissing attack, as she quickly fell asleep. Once it looked as though she were out for the count, Nic stared at her. He lightly rubbed his index finger over her full, luscious lips. He smiled as he traced his name over them. That's right, those were his beautiful lips. At least for a few more days.\n\nNic leaned against the headboard and thought about his life. If...by chance Victoria stayed in it, what kind of girlfriend would she be? How would she fit into his lifestyle? Would she accept the things he did? She was too good of a person to turn a blind eye forever. Amber had loved it, but then again, she had a cruel streak in her. Victoria didn't. He looked down at her. Victoria had an innocence that Nic wanted to protect. He had done his best in the beginning to destroy that, but now, he wanted to protect it. There was no innocence left in him, and her being in his life, somewhat made up for that. She still believed there was good in all people, even someone like himself. She just didn't know all the people he had hurt. The lives he had ruined...or taken. No, she had no clue how ruthless he could be. And he hoped she would never have to know.\n\nAnother thought popped into his head. He wondered what kind of mother she would be. She would probably be\u2014what the fuck? What was he thinking? In the three years he'd been married to Amber, never once did he ever think of kids with her. The idea never crossed his mind. That's why it was such a shock when Amber had mentioned it during dinner on some random night. He had almost choked on his food. There was NO WAY in the world he would purposely ever impregnate her. If she wanted kids, who was he to deny her, but they wouldn't be from his sperm. Not a chance. But then why did that thought cross his mind with Victoria? \n\nNic tried to quickly shake the idea from his head. Besides, in his line of work...the more loved ones you have around, the more heartache you might find. People who hate you don't strike at you, they strike at the ones you love. Luckily, Nic had only had that problem once\u2014with his mother, and he solved it. Anyone that knew him figured it would have been a waste of time going after Amber. He didn't want anything to happen to her, but he damn sure didn't love her. He didn't even like her. But Victoria, he...cared, admired...those weren't strong enough, but he was nowhere near ready to admit the other word. That four letter word...no. That wasn't it. No matter how amazing the past few days had been, it would all end soon, and he would go back to his life. He thought of Victoria going back to her life. Possibly finding a boyfriend. Nic's jaw tightened at the thought. \n\n***********************\n\nThe next morning, Victoria woke up and found Nic asleep and leaning against the headboard like he had sat up all night. She had never woken up before him. Usually, he was either fiddling around in the living room or gone. But this morning...she had beaten him. She smiled as she stared at his face. His perfect nose and lips, and thin black eyelashes that somehow made his bright blue eyes stand out even more when they were open. She rose up and quickly pecked him on the lips. He slowly opened his eyes and smiled at her.\n\nVictoria was feeling rather...playful. She decided to do something she had never done before. Ever. She slid her hand down Nic's body until she found what she was looking for. She looked him in the face as she slowly lowered her face to his groin. She noticed his lips gradually part as she took him into her mouth. He immediately started growing to attention, and in no time was hard as a rock.\n\nShe began to lick his shaft, while moving further down to his balls. She gently sucked on them and then traveled back up to the tip of his cock before covering it with her mouth again.\n\n\"Holy shit,\" Nic whispered as he watched her move her sexy mouth up and down over his rod. Goddamn, it was a beautiful sight. She accidentally gagged herself and he felt heat rush through him. So she was new at this...which made him feel even better that she was inexperienced. Had she gone down on him like a pro, he would have questioned her only having that one boyfriend. But her warm mouth and big doe eyes were causing his balls to tighten. He tried to pull her up, but she refused. Well, fuck...who was he to deny what she wanted. He gripped the sheets and lifted his hips off the bed pushing himself further into her mouth as he came. And she never backed away. She continued to suck on him until he had to gently push her away.\n\nVictoria swallowed the pearly salty mixture and licked her lips as she stared him in the face. She never thought she would ever do something, so...as her mom would put it, \"slutty\". But she liked it. No, she loved it, and judging by the look on his face, he did too. In a weird, twisted way...she would miss being with him. If anything, he taught her things about her body that she didn't know existed. But that's not all of why she would miss this. Actually, there was something she would miss more than the sex, but she refused to think of it. \n\n\"Good morning, Nic,\" she said as she straddled his lap.\n\n\"Good morning, Victoria,\" he whispered back as he kissed her.\n\nAfter they finally drug themselves from the bedroom, into the shower, and into clean clothes, it was already late in the afternoon. \n\n\"Do you like Italian?\" Nic asked, as he grabbed his jacket and keys.\n\nVictoria tucked her bottom lip into her mouth and smiled. \"I thought that would have been obvious,\" she said, grinning at him.\n\nNic walked up to her and kissed her for the hundredth time since their shower the night before. \"Mmm,\" he moaned as he pulled away from her. \"I'm going to cook for you tonight.\"\n\nVictoria smiled. \"You can cook?\" she asked, surprised.\n\nNic arched an eyebrow. \"I'm Italian, what the fuck? Of course I can.\"\n\nVictoria laughed and locked her arms around his neck to deliver another kiss.\n\n\"So\u2014mmm---be ready---by---eight, mmm...damn, Victoria,\" Nic said, as she continued to kiss him through his words. \"Okay, wear something sexy and I'll see you in a few hours, okay?\"\n\nVictoria nodded and Nic gently gripped her hair and pulled her neck back and kissed her hard and deep, his tongue exploring her mouth. He almost had it memorized. He quickly pulled away from her and exited his loft. He had to get out of there before he stripped her down and made love to her again. Make love? That word usually didn't come in his mind oft\u2014ever.\n\nIn the lobby of his building, Nic smiled at Sam, \"Good morning, Sam.\"\n\n\"Good morning, Mr. Andretti. Nice day, huh?\"\n\n\"The best,\" Nic returned. In his car, Nic grabbed his cell phone to call his house, but the battery was dead. Fuck. And he had no charger in this car, because he rarely used it. He would just have to wait until he got home. But for some reason, now that he was away from Victoria and the powerful spell she cast on him, he felt as though he were forgetting something. Wallet? Check. Phone? Check. What the fuck was nagging at him? It was probably nothing, so Nic tried to ignore it.\n\nWhen he arrived at his house, he walked inside and saw Jimmy sitting on the couch eating a sandwich. \"Good morning, Jimmy.\" Jimmy was about to take a bite into his sandwich, when Nic greeted him. He held it there for a few seconds, before he lowered it. \"Um, good morning to you too, Nic.\"\n\nBefore Jimmy could say anything further, Nic hopped up the stairs, entered his office and closed the door. He sighed as he thought of Victoria. He wished she had come with him. He should have just kept her by his side today, since he'd be back over there in a few hours anyway. But they never could have any peace at his house. Too many fucking people always around. He walked over to his desk to check his messages.\n\n\"Hello, Nic.\"\n\nNic swung around to find Eddie sitting casually on the couch. What the fuck? Why the hell was he in his office?\n\n\"Eddie, what the fuck are you\u2014,\" then it hit him like a ton of bricks. Eddie's expression and reason for being in his office. The nagging feeling he had in the car. No, no, no. Now Nic remembered...the Russians.\n\n\"Fuck!!!!\" he shouted. Goddamn it! How the hell could he forget the most important meeting? That wasn't him...he didn't make mistakes like that! Shit!!\n\nEddie sat calmly on the couch with his briefcase open. \"Yes, the Russians. Want to know the update?\"\n\nNic really didn't. He could only imagine. He had wanted that fucking deal with Anzor and he had just blown it. Not Eddie, or Jimmy or anyone else that worked for him. Just him. It was his fault.\n\nNic sighed and leaned against his desk.\n\nEddie pushed his glasses further onto his face. \"They waited for an hour, and when you looked to be a no-show, Anzor said they were meeting with Sonny instead.\"\n\n\"Shit,\" Nic mumbled to himself. How in the hell could he forget a meeting like that? THE most important one to date. They literally had flown all the way from Russia to meet with him. And in the underground crime world, first impressions are usually all you get. No second chances. It was one thing to be late...which he never was. But to not show up at all...out of the question. What the fuck was wrong with him?\n\nEddie cleared his throat. \"Can I say something, Nic?\" Nic nodded. \"Look, we're friends, so I'm saying this with the utmost respect for you. I think you're an incredible businessman and that's one of the reasons I left my comfy legit job to come work for you. You always have your shit together...and I've admired that over the past couple of years. But, for the past few weeks, you haven't really been paying close attention to the business. I mean, I have documents that you haven't sat down to read because you've been spending most of your time with Vict\u2014at your loft. Things are slipping, and they have been for a while now. I tried calling you several times last night, practically begging Anzor to stay, but he was pretty pissed that he wasted his time. He's like you...only Russian.\"\n\nNic sat there thinking about what Eddie had just said. Nic also had a lot of respect for him. Unlike Jimmy, Eddie kept in business mode all the time. No family, no friends...just numbers and business. Most people never sacrificed relationships to excel and become the best at something, at any cost. But Eddie had...and for most of his life, so had Nic. Until Victoria. Nic felt like a fool. \n\n\"I mean, please correct me if I'm wrong Nic,\" Eddie continued, \"but I thought this deal with her was strictly sex. Nothing more. I mean, is she your girlfriend now?\"\n\nNic cut his eyes toward Eddie and narrowed them. \"No, she's not.\" Nic knew right then what he had to do. He needed to cut this bullshit and get his business back on track. He had worked ten damn years getting what his father had left off the ground and really making something of it, and he almost destroyed part of that in a few days all because of Victoria. She wasn't his girlfriend...she was...just a girl. She didn't matter. What was important was that he didn't let down the people who had worked for him and been loyal to him over the years. They depended on him to keep it together and make the right decisions. Not some girl who was only supposed to have been in his life for seven days. \n\nYeah, it was time for the old Nic Andretti to step the fuck up.\n\n\"Get me Anzor's contact information,\" Nic commanded as he went to sit behind his desk.\n\n\"Nic, they said that was it. They're going with Sonny now,\" Eddie said.\n\n\"That's not what I asked you,\" Nic stated cooly. \"Do your job.\"\n\nEddie sighed and handed him Anzor's number.\n\n***************************\n\nVictoria was so excited about her date tonight with Nic. She was beaming from ear to ear. Mr. Big Bad Mob Boss was going to cook her an authentic Italian meal. Just the thought of him maneuvering around the kitchen made her laugh. Nic didn't seem like the domestic kind. But she believed it was the thought that counted so when he got there, she would let him off the hook, and cook something for him instead. Her little surprise. Her mother was an amazing cook, and had taught her some tricks of the trade. She couldn't wait to show them off. \n\nVictoria browsed through her now full closet, and slipped into a cute, short dark pink dress with loose straps and sexy heels. She figured Nic would like what she was wearing. Hell, dinner might not get cooked tonight she thought with a smile.\n\nAround seven forty-five, she grabbed a bottle of champagne, opened it and started celebrating their mini break-through from the night before. She sipped the glass and sat down on the couch.\n\nAround eight fifteen, Victoria had still not heard from Nic. He was usually very punctual...so being even fifteen minutes late wasn't like him. She grabbed the phone and dialed his cell. It rang a few times and then went to voicemail. She left him a quick message and then poured herself another glass of champagne.\n\nAround nine and still no Nic, Victoria called his cell again. No answer. She then looked in her purse and found his house number that he had written down for her. She dialed it. ",
        "\"Hello?\"\n\nVictoria didn't recognize the man's voice. \"Um, hello. Is Nic there?\"\n\n\"May I ask who's calling?\"\n\n\"Victoria.\"\n\nThere was a brief pause and then the person on the other line said, \"Sorry, he's not here. I can take a message.\" \"Um, okay. Can you just tell him Victoria called and for him to call me as soon as he can? That I'm worried about him.\"\n\n\"Sure,\" the voice said, and then hung up.\n\nVictoria just stared at the phone. He's not at his house, and he hadn't called her. What the hell was going on? She was really starting to worry. She knew that Nic wasn't in the friendliest of businesses, so she hoped nothing bad had happened.\n\nAfter her third glass, Victoria kept switching back and forth from worry to anger. Surely he could have reached a phone to let her know he wasn't coming? Or that something had happened? God, she wished she knew Jimmy's cell phone number. After pacing back and forth for a few hours, off and on, Victoria laid down on the couch. She thought of last night and this morning with Nic. He was such a different person than when she had met him several weeks ago. Then, he had been cold and distant. But now, he was so different, and she knew...even though she was scared to admit it, she was falling in love with him. Maybe it was Stockholm syndrome or something like that, Victoria thought. She laughed at the idea and then quickly fell asleep.\n\n***********************\n\nWhen Victoria woke the next morning, for a brief moment she didn't know where she was. Damn those sneaky three glasses of champagne. She rubbed her face, smearing last night's eyeliner into her eyes. She yawned and then sprinted over to the cordless phone to see if there were any messages. Zero. She dialed Nic's cell phone again. No answer. Then she tried the house phone again, but this time it only rang and then went to voicemail.\n\nVictoria paced back and forth again, trying to figure out what to do. She was tired of being stuck in this condo with no explanations, and she was scared that something had happened to Nic. Was he okay? She tried not to be irrational, so she took a shower and changed into a cute outfit with a skirt and low cut top. She tried to sit down and think about this reasonably, but she couldn't come up with any answers. Nic hadn't been apart from her for more than a few hours since the first night she came to his loft.\n\nVictoria tried to keep her mind off of Nic. She tried to watch some movies, but that didn't work. She tried to play Scrabble, but her mind kept drifting to him. It was now late in the afternoon, going on almost a day and a half that she hadn't seen Nic. Something was definitely wrong.\n\nThat's it, she thought. She grabbed her purse, his keys and went downstairs. Sam helped her find his parking space and she pulled the Large Silver SUV out onto the street. She wasn't familiar with driving to his place, so she missed a turn and got confused, but she eventually found the road she needed. For some reason she had butterflies in her stomach. Would he be mad at her for taking his car? What reason would he give her for his absence? \n\nIt was already dark by the time Victoria reached the iron gates leading up to house. She pressed the intercom button.\n\n\"Yes?\" a voice said.\n\n\"Hi, I'm Victoria. I'm here to see Nic,\" she said, looking up at the several security cameras that were turning in her direction.\n\nThe voice paused and then she heard some muffled sounds, and then a voice she did recognize finally answered.\n\n\"Hey Vicky, it's Jimmy,\" he said in his usual warm manner.\n\nShe smiled. \"Hey Jimmy, can I come in?\"\n\nShe could have sworn he hesitated for a moment, but then the gate opened. Victoria drove up to the house as she saw Jimmy coming out to greet her. She noticed that he had quickly shut the door behind him. She got out and walked up to him.\n\n\"Hey, Vicky!\" Jimmy said, while wrapping her in a bear hug. She laughed and hugged him back.\n\n\"Hey Jimmy, how are you?\"\n\n\"I'm alright. Can't complain. So, what brings you here?\" he asked, but Victoria could tell he looked uncomfortable. And what an odd question. What was going on?\n\n\"Well, I'm just worried about Nic. He hasn't contacted me since yesterday afternoon. Is he okay? Is he here?\"\n\nVictoria watched Jimmy's face closely. \"He's, um...well, Vicky, he was bombarded with so many meetings. I mean, they've been back to back to back, you know.\"\n\nVictoria wasn't buying it. Something was definitely wrong. Even if Nic were in back to back meetings he would have called her. Or stopped by after they were done. But she hadn't received anything from him.\n\n\"Is he here?\" she asked again, walking towards the door.\n\n\"Uh, no. He's gone,\" Jimmy said, a little too quickly for Victoria's liking.\n\nVictoria walked around him and up to the door, before Jimmy could grab her. She was about to enter when she heard Jimmy's plea. \"Vicky, please don't go in there,\" he said softly. Immediately she felt her stomach twist into knots and her breath quicken. Her head was hurting and she was getting nervous for some reason. But she ignored her feelings and his warning, and pushed the front door open.\n\nInside, everything looked normal. Nothing was out of place, no blood splattered on the wall, no wild stripper party. Why was Jimmy worried?\n\nShe glanced to the side and noticed a small guy with glasses walking towards her. She hadn't seen him before. He walked up to her and extended his hand.\n\n\"Hi, Victoria, right? I'm Eddie,\" he said.\n\nVictoria shook his hand, but his eyes looked cold. Almost as cold as Nic's could look at times. And then she realized she recognized his voice. He was the one on the phone when she had called...and the first voice on the intercom. Victoria immediately tensed. Something about the way he was looking at her put her off.\n\n\"Yes. Nice to meet you,\" she lied as Eddie tightly gripped her hand. Jimmy walked over to Victoria. \n\n\"Vicky, I think it's best if you go back to the loft. I'm sure Nic will come see you when he gets a chance,\" Jimmy said. \n\n\"Yeah, that probably is the best thing,\" Eddie chimed in.\n\n\"Jimmy, what the hell is going on? Just be honest with me!\" Victoria said, ignoring Eddie's comment. She then looked back and forth between both men, waiting on someone to clarify where Nic was.\n\nBefore either could answer, Victoria noticed Jimmy's eyes dart behind her. She turned to see what he had glanced at, when she saw her.\n\nA thin, brunette woman in a skimpy black dress came walking toward them while texting something on her phone. The girl looked up at Jimmy.\n\n\"What the hell is taking him so long?\" she asked in a lazy, high pitched voice. She placed her skinny elbow into her side and stared at Victoria before turning to Jimmy. \"Is she coming with us?\"\n\n\"Kim, why don't you go wait back over there, okay?\" Jimmy said, irritated.\n\nWho the fuck was Kim? And why was she here?! Victoria prayed to God that this girl was here for Eddie. She couldn't even speak. She just stared at the girl, who was completely ignoring her. As Victoria's mind was busy twirling, she heard a door shut upstairs and she glanced toward the sound. She saw Nic coming around the corner dressed in a nice suit. He stopped at the top of the stairs when their eyes connected. For a second, she could have sworn he looked surprised, but that was quickly replaced with his nonchalant mask. He quickly descended the steps and walked up to the small group.\n\n\"They're meeting us in fifteen minutes, right?\" Nic asked, not bothering to turn to Victoria.\n\n\"Correct,\" Eddie said. \n\nNic then settled his cold glare on Victoria. \"Victoria,\" was all he said with a nod, before he grabbed Kim around the waist and escorted her out the front door.\n\nVictoria just stood there, still trying to make sure what she was seeing...she was REALLY seeing. \"How...what the fuck?\" she mindlessly muttered to herself as she followed the couple out. Jimmy tried to grab her, but she jerked her arm away from him.\n\n\"Nic, what the hell...?!\" Victoria shouted, walking up behind him. She tried to grab his arm and swing him around to face her, but he caught her arm instead.\n\n\"Get in the car,\" he barked at Kim, and she quickly obeyed. Nic turned around and stared down at Victoria.\n\n\"I'll talk to you later at the loft,\" he said, as he released her arm and walked over to the driver's side of his Aston Martin. \n\nVictoria glanced through the windshield at the other woman, who was trying her best to stare her down. Victoria looked back at Nic shaking her head. This wasn't right. Something had happened. She grabbed the back of his jacket as he was opening his car door.\n\n\"No! I want to know what the fuck is going on. Who is she?!\" Victoria said, pointing at the skinny brunette.\n\n\"Victoria, let go,\" Nic growled out, while turning to face her. \n\nVictoria pulled on his jacket even harder. \"Why are you ignoring me?! What the hell happened?! I just\u2014I just don't understand!\" By this point, Victoria was becoming hysterical and she hated herself for it. To let this asshole know how much he was hurting her. But fuck if she could help it. She couldn't understand what had happened in such a short period of time. Why was he with another woman? Why had she not received a phone call?\n\nNic tried to push her hands away, but Victoria held on tighter. Jimmy started walking towards them, while Eddie ignored the scene unfolding and got into his car.\n\n\"What the hell?\" Kim said, as she got out of the car. She rushed over to Nic and tried to pull him from Victoria's grasp. \"Let go of him!\" she shouted in her nasally voice. \n\nThat was it, the last straw. Raw emotion came over Victoria and she snapped. She launched at the girl, just barely missing her face before Nic grabbed her and swung her around to the opposite side, placing his body between the two of them. Victoria was crying so hard at this point, she couldn't even really see through her blurry swollen eyes. She was completely embarrassed and humiliated...again.\n\n\"You almost hit me, you stupid bitch!\" Kim screamed. Victoria tried to wiggle out of Nic's hold to get to that annoying twit again, but he gripped her tighter.\n\n\"Shut the fuck up and get in the car,\" Nic snarled over his shoulder at Kim. Kim hesitated for a second, but then hopped back into the car. He was still struggling to keep Victoria from breaking free as he spoke calmly to Jimmy. \"Take her back to the loft in my car so I can have it there, have Raymond follow behind you so he can then drop you off at dinner.\" \n\nJimmy stared a Nic for a few seconds, then sighed, \"Alright.\"\n\nVictoria went limp against his body. She felt completely drained. And confused. \"Why did you not call me or come to see me? What happened?\" Victoria whispered in a soft sob, completely horrified that she had broken down this bad in front of everyone.\n\n\"Go back to the loft, Victoria,\" Nic ordered again, staring at her with cold eyes. \"I will come by later.\" \n\nNic released her as Jimmy grabbed her shoulders and gently guided her back to Nic's SUV. He felt her shaking and she kept looking over her shoulder at Nic. Jimmy turned to see Nic getting into his car with his date. He pulled away without another glance at Victoria, while Eddie followed behind. \n\nJimmy walked over to the passenger side door and opened it. Victoria stood there a moment watching as the car disappeared down the driveway. She just didn't understand. \n\nIn the car ride on the way back to the loft, Jimmy tried to talk to her.\n\n\"Vicky, he's under a lot of stress, you know. He's just\u2014\"\n\n\"Don't try to defend him, Jimmy!\" Victoria said, quickly cutting him off. \"You're twice the man he is.\" She was still trying to quiet her sobs, which had turned into dry heaves. She hated she appeared this weak in front of all of them, but it had caught her off guard. She wasn't prepared. His attitude and lack of...caring had completely blindsided her. That wasn't the Nic who had just left her a day ago. What had happened in such a short break to make him treat her this way?\n\nWhen they reached Nic's loft, Jimmy parked the car into the parking space and turned off the engine. Raymond was waiting for him out on the street. He turned to Victoria and felt ashamed. How could Nic leave her like this and walk away? Her face was tear-streaked and she was still shaking. He shouldn't have let her in the gate. He just didn't know what else to do. Eddie had planned on letting her stay out there, but Jimmy couldn't treat her that way. She was such a sweet person, and he was sick of these games that Nic was playing with her. He knew it was coming. He was going to have his own argument with Nic about all of this before too long.\n\nVictoria finally unbuckled her seatbelt and climbed out. She didn't even look back at Jimmy, as she made her way into the building. She got on the elevator, pressed in the code and rode up to the top floor still in shock.\n\nOnce inside his loft, she removed her shoes and placed herself into a ball on the couch. Her body felt as though she had run ten miles. Her eyes hurt, her throat was sore. She was actually still a little in shock. The only person she had ever attempted to hit in her life had been Nic. And both times he had deserved it. But tonight she had lowered herself another notch to something she never thought she would do. She had actually tried to fight another woman. And over a man at that! Something she used to laugh about when she saw women do it on shows like Maury Povich and Jerry Springer that her mom still watched. Stupid women, she would call them, while shaking her head. And now in her mind, she was no better. A part of her wanted to walk out of the door right then. She was sick of letting herself get humiliated over and over again. She had thought they were past all of that, but apparently not. But part of her wanted to hear his excuse. She wanted to know what had caused this. So she fought against her need to leave, and stayed to give Nic a chance to explain. Her eyes began to feel so heavy, until she finally closed them and fell into a deep sleep.\n\n*************************\n\nNic pulled into his parking space at his condo around one fifteen in the morning. He did the impossible...by pulling Anzor away from Sonny and back to his business. He met them for dinner, but he could tell that Anzor had wanted an apology from him for missing their meeting. He definitely didn't know Nic if he thought that might happen. Nic wasn't the apologizing type. He stepped around it and made them feel silly for coming all the way to the U.S. only to work with a two-bit hustler like Sonny, instead of a proven, hardcore businessman like himself. Eddie launched a bunch of figures and deals at Anzor, proving that Nic had an impeccable track record. Anzor seemed impressed. Plus, Anzor kept checking out Kim. Nic silently prayed that Anzor would take her off his hands. She was probably more annoying than his wife. \n\nAfter dinner, Anzor had shaken his hand and the deal was set in motion. Nic had gotten back into his car with Kim. She had tried to run her fingers through his hair, to get a little action going...but she was completely surprised and pissed when Nic dropped her back off at her place and said goodnight. She just stared at him incredulously with her hands folded across her chest. He hadn't spared another glance at her as she got out and slammed the door.\n\nNic had raced all the way back to his loft, where he was now sitting in his car. He knew she was up there with a million questions, but he wasn't ready to answer them. Truth was, she made him crazy and he couldn't think half of the time when he was around her. He didn't want this 'thing' that they had to end, but he wasn't sure what to do with her. He agreed with Eddie, in the sense that she was definitely bad for business. He had never had to balance his personal life with his business life before. They were always intertwined. Amber was more a second thought, on most occasions. For that, he had to blame himself. He never gave their marriage a shot. Because he hadn't wanted to marry her. But she seemed to fit with his lifestyle, and most nights she didn't care if he didn't pay her attention.\n\nBut with Victoria in his life this way...he was slipping. When dealing with a situation like Mark Hinson...that needed to have been done quickly and efficiently, but his men were stuck waiting on him because he was sitting in a movie theater with his phone turned off. He knew it wasn't Victoria's fault, but he still wanted to blame her. Her words at Jimmy's house had done something to him. They had changed him. And he didn't know if he liked this new change. He prided himself on being the guy you didn't want to fuck with, and now...he felt he was becoming, well...a pussy. And THAT was unacceptable. He exhaled and exited the car.\n\nVictoria opened her eyes when she heard the front door close. She glanced at the clock on the wall. It was one thirty-six in the morning. She immediately sat up on the couch and stared toward the door, watching his tall frame lurk there before turning on the light.\n\nNic found her staring at him as he set his car keys on the counter. \"I need you to get dressed. There's an afterparty down the street and I need to make an appearance for a friend.\"\n\nVictoria just stared at him like he was crazy. \"That's it? You're not going to explain why you never called and who that girl was?\"\n\n\"Victoria, I don't have to explain my actions to you. And I'm not going to discuss it further. Now get dressed. You have fifteen minutes,\" Nic said, glancing down at his watch.\n\nShe just continued to stare at him, her eyes wide and mouth open. Nic sighed and walked to his bedroom. He removed his shirt and searched for something a little more casual. When he turned around, Victoria was waiting by the closet door. She looked so hurt. He glanced back over his clothing and selected another shirt. Anything to avoid staring into her sad face. Fuck, this was harder than he thought it would be.\n\n\"I don't understand, Nic. What did I do?\" she softly asked, while gripping the door frame.\n\n\"You didn't do anything. Just leave it alone, and get dressed.\" \n\n\"But...\"\n\n\"End of discussion, Victoria,\" he snapped. He was not going to lose control of this situation. Hell, there shouldn't even BE a situation. She was an arrangement, and that was that. No questions asked, no complications.\n\n\"No, it's not the end of the discussion. I thought...\"\n\nNic turned around angrily. He had to get this through her head. \"You thought what? That I would want you as my girlfriend? Some slut who fucks me in every way just for money?\" he barked out at her, his eyes as cold as a winter's day.\n\nAll of the air in Victoria's lungs vanished. She couldn't speak for a few seconds. His words caused her to wince. Smacking her would have probably caused less pain than those nasty words piercing her heart. How could he...? How could he say something so hateful to her?! This wasn't Nic talking. He was different with her. He wasn't as callous about her feelings as he once was. He had changed. No, this wasn't him talking. He would apologize in a minute. In just a few minutes, he would take back those malicious words. She hoped...\n\nNic stood there staring down at her. He felt a sharp pain in his chest, but he refused to acknowledge it. He knew his words...had hit the mark. Oh, fuck...\n\n\"Take that back,\" Victoria whispered when she could finally catch her breath. Tears were already glassing over her red puffy eyes. \"Take that back right now, Nic,\" she whispered again.\n\n\"You know me, Victoria. I always say what I mean.\"\n\n\"You're just saying that because you're hurt or upset for some reason. You don't mean it. Just talk to me and tell me what happened!\"\n\nNic brushed past her as he made his way back into the bedroom. Victoria followed him. \"Nic, I'm serious, take it back!\"\n\nNic turned to look at her. \"What, are we fucking four years old? Now get dressed, I have to be there in five minutes,\" he said.",
        "\"Nic,\" she whispered, \"please take that back. Please say you didn't mean it. Please,\" she begged.\n\nNic stared down at her. The look in her eyes was killing him. He really hurt her. There was no other emotion there. No anger, resentment, hatred...just pure sadness. Fuck! Nic felt dizzy for a moment. He hesitated. 'I didn't mean it. I'm so sorry I hurt you and I lo\u2014' were all on the tip of his tongue. He licked his lips in preparation for delivering that message to her. Here goes...\n\nHe opened his mouth...\"Get dressed, Victoria,\" was all that came out. \n\nVictoria could feel the sadness in her body giving way to another feeling that was coursing through her body. A numbness fell over her. She looked up at him, staring into his stone cold, expressionless face. It was gone. Whatever tiny thread of a connection that they had the other night...had now disappeared. He was looking at her like he had that first night she met him. When he didn't give a shit about her. That's exactly the way he looked now. Victoria continued to stare at his face until she could no longer see it. She looked through him while her mind was deep in thought. She was done crying. She was done with this rollercoaster. She was done with Nic Andretti. For good. Her heart, mind and body couldn't take it. He had called her a slut and pretty much confirmed that she would never be anything more to him. She wanted to punch him in the face and scream I hate you over and over to him. But that would show that she cared. She just couldn't anymore. \n\nNic left the bedroom and walked down the hall. His stomach hurt. He stood by the bar nervously, wondering what the fuck he should do. He was never this indecisive. He was never this nervous. Even at dinner tonight with the Russians, he knew exactly what to say to land the deal. He had them in the palm of his hand. Even afterwards, Eddie had congratulated him on being the best, but he couldn't even smile. What had he just sacrificed to be the best?\n\nAfter a few minutes, he took a deep breath and walked back toward the bedroom. He saw her slipping into a short black dress he had bought for her. She looked so damn good, but she wouldn't look at him. She walked to the bathroom and he followed. He leaned against the door, watching her apply makeup in the reflection of the mirror. Her hands were shaky, and her eyes were swollen and red. 'I fucked up,' he said in his mind, but couldn't verbalize it. She was so beautiful. Inside and out. A combination he had yet to come across until he met her. Even after she applied her eyeliner, a small tear rolled down her cheek. She quickly blotted it, and pulled her hair into a messy updo. She picked up a necklace Minka had chosen for her and tried clumsily to snap it behind her neck. She missed twice, before Nic gently took it from her hands and snapped it. He stood behind her, his chin to the top of her head, looking at her in the mirror. She glanced up at him, but she looked different. Withdrawn. He knew in that moment, he should have said something, but again...for the third time that night, he said nothing and walked away.\n\n***********************\n\nWhen they returned from the afterparty, Nic removed his jacket and sat his keys on the counter. Victoria quietly followed in after him and walked to the bedroom. She hadn't said a word to him all night. She shook the hands of different people she had been introduced to at the party, and talked to those people, but she refused to speak to him. Fine. Maybe it was for the best. She was supposed to be here for only one reason anyway. \n\nNic made his way to the bedroom, and found her pulling her dress down and stepping out of it. She removed her strapless bra and panties, but before she could put anything on to sleep in, Nic grabbed her and gently pushed her back on to the bed. She just stared up at him. Nothing really registering in her eyes. Nic removed his shirt and unbuckled his pants. He pulled them down and eased his way on top of her, resting in between her legs. He pulled the covers up over them and then pushed his thick shaft into her pussy. He braced himself with his arms as he began to stroke in and out of her.\n\nAs always, she felt so good, but he looked down at her face, and she hadn't changed her expression. She was literally just lying there while he had sex with her. But Nic knew how to make her come and forget their problems. He put on his wicked grin, picked up the pace and started licking and biting her neck. He raised up to glance at her face again, but still nothing. He stilled himself within her when he saw a single tear roll down the side of her face. Fuck. It had never been like this between them. Even when she hated him, he was able to turn her on. Her body naturally responded to him. But now...nothing. He pulled out of her and rolled over onto his back. She still hadn't moved an inch. He would have felt better if she would have screamed at him or tried to smack him like she had done in the past. Nothing. He needed to clear his head. He needed to get away before he broke down his wall and fucked everything back up again by telling her how he felt.\n\nHe got up from the bed and pulled his pants back up. He placed his shirt back over his head, put his shoes on and walked out of the bedroom. He quickly grabbed his keys from the counter and left. \n\nVictoria rolled over onto her side when she heard the front door slam. She had never felt so empty and hurt in her life. She would never wish this kind of confusion and pain on anyone. Maybe Amber. But not anyone else. He had kissed her. He had made her feel so special just two nights ago, and now...he pretty much equated her to a prostitute who he had no respect for. She could have been a fucking blow up doll tonight, for all it mattered. She didn't understand what had happened and she figured she probably never would. Perhaps there was nothing really ever there to begin with. Maybe it was all in her head. She had never had much experience with men, and the few she did know, she could have done without. Nic had used her in every way, and just the thought of that was making her sick. She felt like such a fool.\n\nBut Victoria knew what she had to do now. She had to take control of her life, and stop letting people run it for her. She had to be smarter and stronger and grow a thicker skin and stop being the victim. She knew of one option. One way to end this all now. It was definitely a long shot, but she had to try. She would wake up early in the morning and set her plan in motion.\n\n**********************\n\nVictoria woke up extra early the next morning and called Nic's house, praying that he wouldn't answer. Her prayers were answered, when Jimmy picked up. She begged him for an address, and after a few minutes, he reluctantly gave it to her. She could tell that he probably knew what she was about to do, but at this point, she really didn't care. She just hoped that he wouldn't tell Nic until after she was done.\n\nVictoria arrived an hour later at the address Jimmy had given her. It was Paul Marcone's estate. He immediately buzzed her in and she drove down his long driveway. Like Nic's, his house was also extremely beautiful. It looked like a large villa that belonged in Tuscany or somewhere exotic. There was a fountain with Koi fish that set directly in the center of the circular driveway.\n\nPaul came outside to greet her with a large smile on his handsome face. \"Victoria Davis, how are you?\" he said, giving her a handshake and then pulling her in for a hug.\n\n\"Hi Mr. Marcone,\" Victoria said.\n\n\"No, none of that. Paul. Just Paul,\" he smiled down at her.\n\nPaul hooked his arm through hers and led her into his stunning house. She could see through the windows in the back of the house that he had a tennis court and a pool. He quickly showed her around before they retreated to his office. Once inside, Victoria sat opposite Paul, looking around at his artwork on the walls. She then glanced at him, but quickly lowered her eyes. She couldn't believe she was about to do this. She was so nervous. He would probably just think she was crazy.\n\n\"So, how can I help you, Victoria?\" Paul asked, sensing something was wrong. It wasn't every day someone like her showed up at his house, out of the blue.\n\nHow do you ask something like this? Victoria balled her hands up, took a deep breath and stared straight into his face. \"Mr. Mar\u2014Paul, I have a problem that I can't solve on my own. And if I had any other option, I would take it. But I don't think I do. I need...um, I need to borrow some money. Seventy thousand dollars,\" Victoria rushed out.\n\nShe stared at his face, looking for any change or surprise in her request. But she found none. He just sat looking at her. She hated that she was asking him for this. He probably had people asking all the time, and now she was no better or different than them. God, she hated money.\n\n\"And, I\u2014I would try to pay you back as soon as I can. I realize that's a lot to ask for, but it's important to me. I'm a hard worker, and I'll pay you back one day. I promise.\"\n\nPaul still sat unmoving, just staring. Victoria realized what she must look like. She barely knew him. They had only met once briefly at a party before his son had interrupted them. For all he knew, she could be playing him, just seeing if he would give her that much. She felt so stupid. She quickly grabbed her purse and stood.\n\n\"I'm so sorry, this was\u2014shit, I'm sorry,\" Victoria said about to walk out.\n\n\"Victoria?\"\n\nShe turned back around, \"Yes?\"\n\n\"Can you please sit back down so we can discuss this?\" Paul asked. \n\nVictoria hesitated for a few seconds, but then walked back over to the chair and sat down.\n\n\"Victoria, that's a lot of money to ask for, without really knowing what the investment is or how you plan to pay it back. What would the money go toward?\" Paul asked, leaning back in his chair.\n\nThis was the part Victoria didn't want to deal with. In her mind, when she accepted Nic's arrangement weeks ago, it seemed like her only option at the time. But...the idea of explaining it to people, made her feel weak and cheap. And although Paul seemed like a nice man, maybe in telling him of the arrangement, he would want a similar payment as Nic. At that moment the shame that washed over her was unbearable.\n\n\"Um, a-a while back, I...\" Victoria said as her voice cracked. Keep it together, keep it together. \"I accepted an arrangement with Nic. My fa-father owed him seventy thousand dollars for a failed business, but he couldn't pay it. So I...\" the tears were already starting to brim to the surface, and her words were being cut off by her short breaths. Saying what she had done out loud was so much harder. Victoria quickly brushed a tear away before it fell. \"I chose to stay a week with Nic to pay for the debt so he wouldn't hurt my family,\" she whispered, while two tears rolled down her cheeks. Victoria wiped them away as Paul came around to the front of the desk and handed her a tissue.\n\nShe wanted to thank him for the tissue, but she was afraid if she spoke at that moment, the floodgates of tears would open.\n\nAfter a few moments of staring at her, Paul asked, \"But now you're paying him the money anyway?\"\n\nVictoria swallowed several times before she could answer. \"I\u2014I can't do this anymore,\" she whispered, as more tears filled the brims of her eyelids. She blotted them with the tissue and squeezed the paper into a ball in her hand. How embarrassing to have to admit this to a man like Paul. Some lowlife, it wouldn't hurt so much. But for some reason, she didn't want Paul to think horrible things about her character. She really was a good person...even if she had lowered herself in many people's eyes. But too much had changed for her to accept even one more day with Nic, so she prayed Paul would understand.\n\nPaul wiped his hand down his face and exhaled. \"Victoria?\"\n\nShe glanced up at him.\n\n\"Victoria, you do understand that this would be giving my competition seventy thousand dollars of my own money?\" he asked, in a calm voice. \n\nVictoria felt so stupid. Another tear dropped and landed on her pants. She wiped the streak off with her hand and quickly stood. \"I know, and it was a dumb idea for me to ask you. I'm sorry, I can figure out something else. Thank you for your time, Mr. Mar--,\" she couldn't even finish the rest. She had to leave before she broke down.\n\n\"Renny?\" Paul shouted, and a young guy stepped through the door, blocking Victoria's exit.\n\n\"Yes, sir?\"\n\n\"Can you please count out seventy grand for Ms. Davis and bring it in here? Thanks.\"\n\nThe young man nodded his head and walked out. Victoria lowered her head, absolutely speechless. Was he really about to give her the money?\n\nPaul walked over to her and leaned against the wall. \"I know you did what you felt you had to do to protect your family, and for that...I can only hold you in high regard, even more so than I already did.\"\n\nVictoria had no words. She knew she needed to say thank you, but at the moment, she couldn't talk. How could a man in his line of work be so kind?\n\nFinally, her voice was slowly coming back to her. \"Thank you, Mr. Ma\u2014Paul,\" Victoria stuttered, getting a little choked up.\n\nRenny came back with a small black duffel bag. He handed it to Victoria. She had never held so much money in all her life. Funny, now that she was holding it...it seemed awful light...to be what she was worth. Seventy thousand dollars.\n\nPaul walked with her back out to Nic's car. \n\nVictoria gave a smile as she got in. \"Thank you again, Paul. I\u2014I won't ever forget this,\" she whispered.\n\nPaul kissed the back of her hand. \"My pleasure, Victoria. Keep in touch.\"\n\n\"I will,\" she promised, as she pulled out of the driveway. She glanced back at him in the rearview mirror and he removed one of his hands from his pocket and quickly waved bye. No, she certainly wouldn't forget him...ever.\n\nNow...onto the even harder part. Victoria drove to her next destination...hopefully for the last time. When she arrived at Nic's, she asked the person at the gate for Jimmy. He was about to buzz her in, when she asked him not to. She had wanted to meet him at the gate.\n\nWhen she saw Jimmy walking down the driveway, she took a deep breath. No turning back now.\n\n\"Hey Vicky,\" Jimmy said, eyeing her suspiciously. \n\n\"Hey Jimmy. Can you do me a favor and hand this to Nic?\" she said, placing the duffel bag in his hands.\n\nIt didn't take Jimmy long to feel the neatly packed money through the bag. He sighed and looked back at her.\n\n\"Vicky, I...\"\n\n\"No, please don't say anything Jimmy. None of this is your fault. I think you're a great guy. But nothing you can say will make me stay.\"\n\nJimmy leaned on her door. He brushed his hand through his hair and looked at her. \n\n\"Alright, then I'll keep quiet.\"\n\n\"Thank you,\" Victoria said, as she moved the gear to reverse. \n\n\"But you know he's going to come after you when he gets this, right?\"\n\n\"I doubt he'll even care, Jimmy.\"\n\nJimmy scoffed, \"Come on Vicky, he's crazy about you, he just won't admit it.\"\n\nVictoria shook her head, \"I thought maybe there was something there. I hoped it was. But, he couldn't say those things to me if he cared. I don't see how he could. But I have to go now. And can you tell Raymond I said 'bye'?\"\n\nJimmy looked down at her. \"I'm sure Raymond would rather hear it from you...and trust me, I'll give you a fifteen minute headstart, but he's gonna come find you. I know him.\"\n\nVictoria planted a small smile on her face as Jimmy lightly squeezed her hand and then turned to walk back through the gate.\n\nVictoria cursed herself all the way back to Nic's loft. She should have packed first, then driven to Paul's. That way she could just drop off his car and go. She really didn't want to go back there, and now the thought of Nic maybe showing up was more than she could handle. She just wanted this done and over with. \n\nJimmy waited exactly fifteen minutes before he walked into Nic's office. He and Eddie were leaning over his desk, looking at maps.\n\n\"But what about this territory...that's still me, right?\" Nic asked.\n\n\"Yes, but that's what Sonny was telling Anzor about. And...\"\n\n\"What?\" Nic asked Jimmy, cutting Eddie off. \"And where did you go? You're my second...you need to be looking at this.\"\n\nJimmy walked up to the desk and placed the bag down. \"Victoria wanted to drop this off for you,\" Jimmy stated matter of fact.\n\nNic's eyes dropped to the bag. He had seen bags like this before. Several times. They ALWAYS contained money. She couldn't...Nic looked back up at Jimmy.\n\n\"Did you open it?\" Nic asked.\n\n\"No.\"\n\nNic slowly unzipped the bag and stared at its contents. Several neat stacks of hundreds were staring back at him. He felt a tightening in his chest. She wanted to get away from him that bad? He was having trouble breathing. He grabbed his keys and walked around his desk and left without so much as another word to either of the men in his office. Eddie looked at Jimmy and then peeked into the bag. Jimmy walked over to the couch and sat down. He hoped that wasn't the last he would see of Victoria. \n\nAs soon as Victoria parked, she quickly said hey to Sam, and rushed upstairs. She flung open the door and sprinted to the bedroom. She grabbed her old duffel bag that was tucked into the corner of the closet. She picked up her new and old converse, the few clothes she had brought over to his place and her toiletries from the bathroom.\n\nShe ran out into the front room to grab her Scrabble board but then she couldn't find her poetry book. She usually kept it on the coffee table, but it was missing. She looked by his entertainment center, but it wasn't there either. She ran to the bedroom again, and searched around for it, dropping to her knees and was looking underneath the bed when she heard the front door slam. \n\nShe slowly lifted her head as she heard him coming down the hallway. When he walked into the room, at first he didn't see her, but then their eyes locked. He looked pissed and...well something that she couldn't pinpoint.\n\n\"Where did you get the money?\" he asked her, walking towards her.\n\n\"It doesn't matter. It's all there and now my family and I are done with you,\" Victoria said, rising to her feet.\n\n\"It does matter. Where did you get it?!\" Nic shouted at her. He normally kept his voice in check, but he looked livid. Well, she was done with this. She wasn't about to let him intimidate her.\n\nShe tried to walk past him, but he grabbed her arm and slung her towards his body.\n\n\"Nic, let go,\" Victoria quietly said, while trying to pull her arm from him.\n\n\"Where the fuck did you get the money?!\" Nic repeated, locking her upper arm into a death grip.\n\nVictoria just stared at him. She wasn't going to play this game with him. She looked down at her arm, waiting for him to release her.\n\nShe wasn't fighting him back. She wasn't pulling away from him. She really was done with their arrangement. Nic had thought he had more time. More time to figure out what to do with her. She still had several more days with him, and now it had all ended. Rightfully, he had no reason to hold onto her, but he couldn't let go of her arm. This was it...in a few moments she'd be walking out of the door...and leaving his life. He tried to tell himself that this was the best for both of them, and that he needed to get his business under control, which he couldn't do with Victoria around. At least that's what his mind was telling him...but the heart...well, that's a separate matter entirely. He hadn't really used those muscles in a long time...and now the only good thing he felt about himself...was about to be ripped from him. She would move on with her life...meet someone...oh fuck. Nic licked his dry lips to say something. Anything.\n\nBut nothing came.\n\nVictoria saw his eyes go soft. That was the first time since he had promised to make her Italian food that she had seen that look. But too late. She gently pulled her arm from his grip and walked around him. She needed to leave before anything happened. Before she weakened. She would just have to leave her book. She walked out to the front of the condo and grabbed her bag. ",
        "\"You're not going to take your clothes?\" Nic asked, leaning against the wall. He would try to act like it didn't matter. Try being the operative word. He was good with a poker face.\n\n\"They're not mine,\" Victoria said as she walked towards the door.\n\n\"I gave them to you as a gift,\" he said softly. \"I'd like you to keep them.\"\n\nVictoria paused at the door. \"I don't want them,\" she said as she pulled the door open and closed it behind her.\n\n\"Good bye, Victoria,\" Nic whispered to himself. He wasn't sure how long after she had left that he remained motionless, leaning against the wall...but he knew when he left this place, he knew it would be a long time before he'd ever return.\n\nNic tried to walk out calmly, but he felt the heat rising through his body. \"Fuck!!\" he shouted as he threw a lamp into the bar area, shattering glass all over the floor. He pushed his hands through his hair and walked out, slamming the door behind him. He couldn't let her go that easily. \n\n*************************\n\nVictoria leaned her head against the bus window. This was the third and final bus before she reached her parents' apartment. She looked out onto the street and saw a few homeless men sitting in between cracks and corners of buildings. She saw groups of middle or high school kids playing around while walking down the street. She saw the old basketball court she had walked by a million times. It was empty, most likely due to the cold. She sighed as the bus turned a familiar corner and made its way down to her street. When she finally reached the area where her apartment was located, she exited the bus and stared at the ugly brick building. It seemed like forever since she had been there. \n\nWhen Victoria unlocked the door to the apartment, she instantly smelled her mother's cooking. That memorable smell made her feel all warm inside, despite it being freezing cold outside. She figured they had probably settled in for an early nap. She quietly tiptoed to the couch. She noticed new blankets were folded up and placed at the bottom of the couch. She figured her mother had probably been sleeping out here. She did that from time to time when she wasn't getting along with James. That would usually force Victoria to sleep on the hard floor. But they must have gotten over their problems if her mom was back in bed with her dad. \n\nIt felt so good to actually be back among normal people. People who didn't jet set to exotic locations. Or have cooks and housekeepers and drive in the latest cars that had been imported from overseas. Yes, the land of the normal people was where she fit in. She sat down and was about to lean her head back, when the overhead light blinded her.\n\n\"What are you doing here?\" her father's voice asked. She turned around, and was about to smile until she saw the mean expression covering his face. What now?\n\n\"Hi daddy, I've missed--,\"\n\n\"I asked you whatchu doing here?\" James repeated, folding his arms across his chest.\n\nVictoria didn't know what to make of her father's unwelcome greeting. She studied the hard lines in his face and the tiny patches of gray that settled to the right side of his head. Her father looked much older than he was. And he had a constant wrinkle in his forehead from worry and disgust. He was always one of those two things. Worried or disgusted. And right now he looked disgusted. She looked behind him, and noticed her mother joining her father's side.\n\n\"Um, I've come to move back in,\" Victoria said, looking from her mother to her father.\n\n\"No the hell you haven't! You're not welcome in my place,\" James said.\n\nVictoria stood in the middle of the floor, completely confused. Was her father joking? He never joked, but he had to be. Not welcome?\n\n\"You think people didn't tell me what you was doing with him? How you erased our debt? Oh, I know. I know everything,\" he spat out, narrowing his eyes at her.\n\nShit. She knew people talked, but she had hoped staying out of town would have stopped any rumors spreading. But...as always, they did. \"Daddy, I--,\" Victoria started again.\n\n\"You hear me? You're not welcome here. I don't want some trashy daughter who whore herself around in my place!\"\n\n\"James, don't call her that!\" her mom shot at him, while tying her robe around her.\n\n\"Why not? It's the truth. I never in a million years think you stoop so low to clear our debt,\" James said, his eyes raking over her body in repulsion.\n\nVictoria started to feel her blood boil and tears brimming on the surface of her eyes. Damn it, you better not cry, she chastised herself. Stand up!\n\n\"First off, it's not OUR debt, it was YOUR debt. But because of your bad decisions, me and mommy were drug down with you. You think this is what I wanted?! To do that?! He threatened to hurt you two if I didn't. And now, I'm pretty sure he wouldn't have, but then, I didn't know that. I did it for you, and this is the treatment I get? Trust me, daddy, I already feel bad enough. You don't have to add to that,\" Victoria shouted, letting the tears finally fall.\n\n\"Calm down, honey. Everything just happened so fast. One moment you're here, the next we hear these awful things about you living with him--,\" her mom said, before her father interrupted.\n\n\"No, not living with him! From what I heard, she was staying at a separate location since he's MARRIED, and he would go whore around with her there. He didn't even have the decency to let her live in his home. Either she was just too dumb to get it or enjoyed being a common slut.\"\n\nHow dare he stand there and call her names. He knew NOTHING about what she had gone through. She was sick of this. Her body was weak and she needed rest. \"Daddy, you don't know what went on between us. You have no clue. But I'm tired now, and I'm going to bed,\" Victoria said, while picking up her bag and heading to the bathroom. Her father caught her arm and swung her backwards, almost knocking her off balance.\n\n\"Oh, no you're not! I'm not having my enemy's slut staying in my house. You aren't welcome, now leave!\" he demanded.\n\nOlivia sucked in a gasp. \"James, you ain't putting her out on the street like that. It's freezing out there,\" Olivia stated.\n\n\"This is my Goddamn apartment! My name is on the lease and she can't stay here. Seems like you gave that white man exactly what he wanted, now you gonna come crying to us. I don't think so! I swear before God, I'll drag you out of this house myself. Or call the cops. Street seem exactly where you would be best off. Make some more money I guess. You ain't no child of mine, you hear me!\" James yelled furiously, while jerking her bag from her and flinging it towards the door.\n\nVictoria's face was on fire with shame and shock. She couldn't believe she was being treated like this by her father. Someone who was supposed to love her unconditionally. Not that he had ever shown her that growing up. The only reason she was even in this situation was because her love for them...or at least her mom, WAS unconditional. She did all of this for them. She could have left home, started a new life, and left Nic to do whatever to her family. And this is her treatment in the end. But she knew her father...he would put her out or call the cops. He was like Mr. Parker in more ways than one.\n\nShe couldn't even look at him anymore. She turned to her mother, who was on the verge of tears herself. \"Mommy, I don't have anywhere to go,\" she whispered, pleading with her mother to overturn her father's statement. Her mother quickly looked away. The sure sign that she was going to let her husband win this battle. Victoria felt so hurt and betrayed. She stared at her mother's turned down face a few moments longer, while a tear rolled down her cheek. Victoria nodded and walked to the door to retrieve her small duffel bag. She quickly wiped at another tear and exited her parents' apartment without looking back.\n\n**********************\n\nOutside, the cold air hit her, stinging her face. She could see her breath every time she breathed in and out. She wrapped her coat tightly around her and started walking towards her old bus stop. She had taken that bus everywhere. To school, to the mall...back when life was less confusing and harsh.\n\nShe sat down on the cold metal bench to think. It would be getting dark soon, and she only had twenty-two dollars and eighteen cents in her purse. She had to think of something. She refused to go back to Paul. He had already shown her more generosity than she felt she deserved. She looked out at some of the stores that were starting to turn on their closed signs. Fuck, it was freezing. She needed to think of something soon.\n\nVictoria had worked all through school, so she never really hung out with anyone. Not anyone she could actually call on to stay with for a while. Yet another reason she resented her father. And her high school boyfriend had moved away a few years ago, or else he probably would have helped her out. But there was one other person. Perhaps there was one other person who could help her out of her homeless situation. She prayed that she could still call him \"friend\" even after what he knew about her and the way he was treated by Nic. She used the last of her money to hail a cab to Antonio's house. She was thankful that she had paid attention that night to where he lived. \n\nWhen she arrived at Antonio's, she knocked on the door. She had worked on her speech in the cab about what she was going to say to him. She realized she was showing up out of the blue and she didn't want to seem desperate...although she was. This was her last resort. If Antonio wouldn't accept her, perhaps she could find a shelter...but the thought of that made her miserable.\n\nWhen Antonio answered the door, she watched the perplexed look on his face. He glanced around her looking down the street, and then he looked back at her again. \"Victoria? What's wrong?\"\n\n\"Hi, Antonio. Um, I know this is going to sound strange since I haven't spoken to you in a few weeks, but, I\u2014I...oh, shit,\" Victoria whispered before she burst into a flood of tears and buried her face in her hands. She felt so pathetic. She thought she had been so brave today by leaving Nic, only to fall apart at her father's words. But at least she had refused to let Nic or her father see her cry. \n\n\"Holy fuck,\" Antonio said, as he ushered her into his house. He quickly closed the door, then turned around and grabbed her in a bear hug. \"Sshh, what's wrong?\" he asked.\n\nVictoria didn't want to let go of him. She buried her face into his chest and wept. Finally, someone who fucking cared if she was on the street and freezing to death. Someone whom she hoped who would treat her like a human being, and not some item or thing.\n\n\"Ssh...tell, me what happened,\" he said, as he pulled away from her and rubbed his warm hands over her frozen ones.\n\nAfter a few moments, Victoria was able to calm down enough to explain to Antonio what happened. She told him everything and he sat and listened, nodding every now and then. When she was completely done, he pulled her close for another hug. \n\n\"You're alright now, you know. And I know what you need. A nice, hot shower,\" he said, as he grabbed her hand and led her upstairs. He handed her a towel, washcloth and one of his large t-shirts. \n\n\"Okay, now it's not much of a bathroom, but hey, the shower works and the toilet flushes. That's all I need,\" he smiled at her. Victoria nodded in agreement.\n\nHis bathroom was one tenth the size of Nic's, but something about that made her feel more comfortable. You certainly couldn't make love in his shower, but just that thought made Victoria want to burst into tears. She thought about that first kiss. How soft Nic's lips were, and how he had been staring back and forth from her eyes to her lips the whole time she had been talking to him. She let the hot water pour over her cold body...feeling as though little needles were pricking her.\n\nAntonio stood outside the bathroom, leaning against the wall. He shoved his hands into his pockets, tilted his head back and sighed. Nic's words to him at his party ran over and over inside his head. He knew some would think him a fool, but there was no way in hell he could have turned her away. Consequences be damned. In a way, he was glad she had come to him. The thought of her being out there on the streets, while it's dark and freezing cold...sent a shiver down his spine. Thinking about all the lowlifes who could have hurt her and how scared she would have been pissed him off. But...this was Nic's girl. And he had already been warned. Antonio wasn't na\u00efve. You don't fuck with these guys. They don't believe in calling the police or getting the courts involved. They accused, tried and executed those they felt deserved it. \n\nHe heard the water shut off. He would deal with all of this later. Right now the most important thing was that she was happy and safe. Right now, that was all that mattered. Something about this girl made him feel overprotective of her. Even the first day he met her. He knew she was miserable at that party, and he wanted to see her smile. So invited her to his party instead. Something told him she would like it more. Until Nic showed up.\n\nWhen Victoria got out and dried off, she put on his large shirt and pulled her jeans back on. She met him back out in the hallway. He grabbed her hand and led her to the end of the hallway.\n\n\"And you can take my bedroom,\" he said, while opening the door.\n\nJudging on his room, he was definitely not expecting company. There were clothes all over his floor and a plate of food sitting on the floor by the bed. Pictures of different rappers and naked women littered his walls. She couldn't be sure, but she thought she saw a questionable plant in the corner of his room.\n\n\"Uh, yeah...I believe in an herbal existence,\" Antonio said, noticing her staring at the plant. Victoria burst into a laugh. She sat down on the messy bed and looked up at him.\n\n\"I can take the couch. I would feel bad kicking you out of your room,\" Victoria said, but Antonio wouldn't hear of it. \"No, absolutely not. My momma raised me better than that,\" he said, winking at her. \n\n\"Where's Sean?\" Victoria asked, remembering Antonio's roommate's name.\n\n\"Oh, he's visiting family back on the west coast. He'll be gone for the rest of the week.\"\n\nThat put Victoria a little more at ease. She already felt like she was imposing on Antonio, and she would feel even worse about imposing on Sean since she really didn't know him.\n\n\"I just want you to know that this is just until I can get back up on my feet, I promise. Then I'll be out of your way. And I'll be searching for a job first thing tomorrow morning,\" Victoria promised.\n\n\"Nah, don't worry about that...plus I'm sure Sean would love having you here...and would try to persuade you to take his bed...with him in it,\" Antonio laughed. But then his facial expressions became serious. \"But seriously, don't sleep in his bed. Some of the girls he's brought back...have been questionable. I really think one was a dude. He claims it wasn't...but her hands were bigger than mine. I'm just saying,\" Antonio warned.\n\nVictoria burst out laughing again. Yes, she would be okay now. As long as she was far away from Nic, she would be fine.\n\n*********************\n\nLater that night, Antonio had left to grab them some pizza, beer and movies to settle in for the night. Victoria felt horrible that she couldn't contribute any money to the food. She had to laugh at the fact that earlier that morning, she had held seventy thousand dollars, and now she was completely broke. \n\nDuring the movie, Antonio kept glancing over at Victoria. Her eyes were still a little puffy, and her nose had a slight red tint, but she seemed interested in the film. But his mind was spinning. He had to ask her. He had to know. Finally, halfway through the second film, he spoke up.\n\n\"So, you and Mr. Andretti done for sure?\" Antonio asked.\n\n\"Yes,\" she said, while still staring at the TV screen. \n\n\"Do you think he'll come after me, you know, since you were his girl, and now you're back at my place?\" Antonio asked, taking a sip of his beer.\n\nVictoria thought about it. Nic was so confusing to her. He ignored her at his party, yet came to drag her away from Antonio's. He cut her out of his life without so much a phone call, but then tried to stop her from leaving. She really had no idea. \"Honestly Antonio, I don't know. I don't think he would hurt you though. He's so confusing to me.\"\n\nAntonio laughed, \"Gee, that's comforting.\"\n\n\"I'm sorry. Maybe it would be a good idea if I did go. I don't want to cause any problems for you,\" Victoria said, turning to Antonio. That's the last thing she would want. \n\n\"Nah, don't. I'm already getting used to you sitting here on my couch,\" Antonio winked at her. \"Besides, my mom always said I didn't have good sense. So, I'll take the chance.\" Victoria smiled back, but she could tell he wasn't so comfortable about pissing Nic off for the second time.\n\n\"Antonio, what did he say to you that night, when he came to take me from here?\" she asked. It had been bugging her for a while now.\n\nAntonio leaned back against the couch and sighed. \"He said if I didn't want to know what the inside of a body bag looked like, then I better never touch you again.\"\n\nVictoria's mouth dropped. \"He said that to you?\" Antonio nodded and took another sip of his drink.\n\nVictoria turned her attention back toward the movie. \"I'm sure he said it to try and scare you. He's bluffing.\"\n\nAntonio shook his head. \"See, Victoria...I know you would like to think that, but he's really not bluffing. Guys like him are serious and I'm sure plenty of people have seen a body bag because of Nic.\"\n\nThat sent a chill up Victoria's spine. She thought about the Nic who kept grabbing her ass and kissing her neck while she was staring at paintings at the museum. They way he had started to joke with her. The way he carried her from the shower to the bedroom after their intense kiss. His soft expression when she woke him up the next morning. Nic wasn't all bad. He wasn't this guy that Antonio was making him out to be. But then again, she had seen him switch up his personality on her. Turn completely cold. Maybe he was capable of such things.\n\n\"I'm sure it will be alright. I don't think he knows where I am, and I won't be here for long,\" Victoria assured him while trying to convince herself.\n\nVictoria noticed Antonio turn back to the TV and continue sipping on his beer, but she could tell at this point that he was no longer paying attention. And she wasn't either. Her mind was reeling from everything that had happened over the past two days. How quickly everything had unraveled...and she still wasn't quite sure what had happened. But it was all over with now, and she would wake up in the morning and try to get on with her life, the life she'd been living before Nic became such a significant part of it."
    ],
    "authorname": "soular",
    "tags": [
        "interracial romance",
        "interracial drama",
        "interracial anal"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/seven-days-ch-05"
}